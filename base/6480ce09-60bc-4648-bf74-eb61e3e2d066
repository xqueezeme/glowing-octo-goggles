{
    "title": "My Journey Ch. 04",
    "pages": [
        "This is the fourth installment of My Journey. Although not necessary, this story will be more appreciated if you read Chapters 1, 2, and 3 first. Thank you to all who read my first three submissions and provided feedback.\n\nI hope you enjoy reading the story as much as I enjoyed writing it. \n\nPlease, please leave comment and suggestions!\n\n*****\n\nI opened the door to find my brides naked on the bed making out like, well, newlyweds.\n\n\"Get out of those clothes Mr. Pratt. Mrs. Pratt needs some of your cock!\" Trish said.\n\nI stood there confused while the two of them laughed.\n\nWhich Mrs. Pratt was so badly in need of my services? After all, there were two Mrs. Pratts now. \n\nSince Trish was the one to voice the need, I decided to start with her. I shed my clothes and got on the bed and made my way between her naked thighs.\n\nBefore I started anything with Trish, I tenderly kissed Tina and said \"I love you Mrs. Pratt.\"\n\n\"I love you too, baby\" she replied.\n\nTrish was on her back and I was between her splayed legs savoring the view of this exotic woman spreading herself wide in a display of raw, wanton lust for her husband. We were both as hard as rocks.\n\nI lay on top of her, trying to envelop her entire being with my body. Trish's legs wrapped around my waist, drawing her body to mine, forcing our cocks to rub against each other. Instinctively our hips began to gently thrust, intensifying the already erotic sensations we were sharing. I gazed into Trish's eyes, amazed that this beautiful woman would want me. Her eyes conveyed the deep love she felt for me following the unrehearsed and heartfelt vows we had exchanged a few short moments ago. \n\n\"I love you, Mrs. Pratt\" I said with all of the emotion and conviction I could muster.\n\n\"You have made me the happiest woman in the world, Mr. Pratt. Now, be a good husband and make me your wife\" she replied. Trish closed her eyes and kissed me deeply and passionately. \n\nI repositioned my hips, raising them up so the spongy head of my cock was positioned at the entrance of her delectable asshole. Trish broke our kiss and peered into my eyes as our bodies merged in sexual union for the first time as husband and wife. No words were spoken. It was the silent consummation of the spoken promises we had made. As my balls pressed against her ass, Trish kissed me, telling me that our union as husband and wife was complete.\n\nBefore I could begin making love to my new wife, I felt Tina moving behind me on the bed. I had been so focused on what was happening between Trish and me that I had not noticed Tina had gotten off the bed and donned a RealDoe and harness. Now the head of her lubricated silicone phallus was poking at my tight ring. Tina applied steady pressure against my sphincter. I longed for this intrusion, and relaxed the muscles of my ass allowing her to ease into my rectum.\n\n\"You two are so beautiful together, I need to be a part of it\" Tina said, almost apologetically. \n\n\"Oh honey! You feel so good inside me\" I moaned to her. \n\n\"Oh my God! I can't believe how much harder he got when you entered him!\" Trish exclaimed to Tina. \"You really like having a woman's cock in your ass, don't you baby?\" she asked me.\n\n\"You have no idea\" was all I could say to her. I kissed her passionately.\n\nI hooked Trish's legs in my arms, spreading her out fully so I could get as deep inside her as physically possible. Tina was pressed to my back, her hard nipples poking into my skin. Tina withdrew the dildo from my ass until just the head remained, and slowly pushed it back in to the hilt, drawing a throaty moan from me. Again she pulled back and reentered, this time with more urgency. When she bottomed out she pushed me deeper into Trish causing a prolonged \"Ooohhh!\" to escape Trish's lips. Tina increased the tempo of her thrusting, but not so fast that the intimacy was lost. I was bucking back against her cock causing me to thrust in and out of Trish's gripping hole. \n\nI was being pleasured at both ends by both wives. Never had I been more fulfilled, never had I been more happy. \n\n\"Baby, it is sooo sexy the way you take my cock\" Tina told me. \n\nThe change in Tina's sexual attitude since getting involved with Trish has been nothing short of amazing. Before Trish, Tina never would have initiated a pegging session, much less talked dirty while doing it. Gone is the sexually repressed woman I married some twenty years ago. Here with us now is a sexual dynamo, willing to please her husband and wife in every imaginable way. \n\n\"You can take me like this anytime you want\" I panted as she pumped in and out of me.\n\n\"Don't let your mouth write checks your ass can't cash, honey\" she cooed.\n\nTina rocked my world as she plunged her cock into my ass. The combination of the clitoral ridges on the RealDoe and Tina's new hardware were stimulating her as well as was evidenced by her mewing at the end of each downward stroke. \n\nI continued to buck against Tina, and by extension continued to pump my cock into Trish.\n\n\"You are a kinky little mink!\" I heard Trish say, and noticed her eyes were focused on her right foot. I craned my neck to see Tina hungrily sucking Trish's big toe like it was a little cock while she continued to pummel my ass. I had sucked Tina's toes numerous times in the past, and it always turned her on. \"I guess we both have a fetish for a woman's pretty feet\" I thought to myself.\n\nThe combination of Tina fucking my ass, Trish's clenching ass on my cock, and the intimacy of our wedding was too much for me. I looked at Trish, her eyes were on mine, and I could see she knew I was close. \"I love you\" I said. \n\n\"I love you too baby. Cum inside me.\"\n\nI needed no further encouragement. My cock convulsed a dozen times inside of Trish as I deposited my load inside of my lovely shemale bride. We kissed again, our tongues rolling and playing with one another. Tina slowed her thrusting and eventually withdrew from me. My cock softened and slipped from Trish. I rolled to my left and lay next to Trish, mindlessly fondling her breasts and nipples. Trish was still hard, and she stroked her stiff pole as she watched Tina take off the harness and dildo.\n\n\"Finish me\" Tina demanded as she straddled Trish's hips and lowered herself onto her bride's erect cock.\n\n\"Your pussy is so wet!\" Trish said as Tina ground her pussy against Trish's pelvic bone.\n\n\"That toy rubbing on my piercing has me on the edge!\"\n\nTina smiled and began to bounce and grind on Trish's cock, leaning forward so their breasts were pressed together. They kissed deeply, so deeply I believed it possible they were exchanging parts of their souls. Trish's hips thrust up into Tina emanating a slap each time their bodies made contact. As intensely enthusiastic as their coupling was, it was obvious they were making love to each other.\n\n\"I love you Trish, I love you. Fuck my pussy honey. Make me cum!\" Tina encouraged.\n\n\"Oh Tina! I love you so much. I want you to cum honey!\"\n\nTrish redoubled her efforts, plunging incessantly into Tina's sopping wet pussy.\n\n\"I'm gonna cum Trish! I'm cumming!\" Tina squealed as Trish's cock churned inside of her wife's slippery vagina, sending Tina over the edge.\n\n\"Aaaaahhh! God I'm cumming!\" Tina shouted as her body was wracked with orgasmic convulsions. Trish continued thrusting; making sure Tina's orgasm lasted as long as possible. \n\nTrish and Tina revisited their soul exchanging kiss as Trish continued to pound into Tina. Tina was exhausted and lay motionless on top of Trish. Trish was desperate to cum so I pulled her penis from Tina's frothing pussy and sucked it into my mouth. I cleaned off Tina's creamy pussy juice. After licking her clean I pumped her shaft with my fist while I sucked the sensitive head, desperate to taste her cum. Trish had been close to cumming from the determined fucking she had gotten from me and Tina, so it didn't take long until I was rewarded with Trish's girly juice coating my mouth and tongue. I enthusiastically swallowed her sweet load as her cock continued to spasm in my mouth. I released her cock from my mouth and lapped up the fluids from her glistening scrotum. Lifting her legs I ate her enchanting asshole, licking and slurping as much of my cum from her as I could.\n\nOur marriage celebration continued for hours, and we pleasured one another with our mouths, hands, and bodies. Of course, all good things eventually end. Our celebration was not an exception. We took a quick shower together before Mark and Ellen came home from their dates (we have a strictly enforced midnight curfew) and the three of us were waiting downstairs for them when they arrived.\n\n\"How were your dates?\" Tina asked.\n\nEllen was the first to respond \"It sucked. Tim was being a jackass again. Typical. When he dropped me off he didn't even open the door for me. I told him we were finished. I am so done with boys.\"\n\n\"I'm sorry to hear that\" Trish soothed. \"Do you want to talk about it?\"\n\n\"I just wish he would learn that there are appropriate times for touching, and while eating at a restaurant is not one of them!\"\n\n\"Oh sweetie, I'm so sorry. You're better off without him. Really, you are\" her mom reassured. \n\n\"You need to find a man that knows how to treat a woman\" Trish interjected. \"Someone like your dad. Pay attention to how he treats your mom and you'll know what to look for.\"\n\n\"Yeah, I know Aunt Trish. There just aren't any guys like dad out there. You got lucky with dad, didn't ya mom.\"\n\nThat last statement caused both Tina and Trish to blush a little.\n\n\"Yes, yes I did. Your 'dad' is out there somewhere sweetie. You'll find him\" Tina said.\n\n\"What about you Mark? Who were you out with tonight?\" I asked.\n\n\"Cal set me up with a friend of his girlfriend. She was a lot of fun, and we had a nice time\" Mark replied. \"It's kind of hard to mess up a movie and Taco Bell though.\"\n\n\"Will you see her again\" Trish asked.\n\n\"I don't know Aunt Trish. We had fun and all, but I think she's a little out of my league. She was really pretty, and, well, I'm just...\"\n\n\"What are you talking about? You're a handsome young gentleman. No one is out of your league, you understand?\" Trish scolded him.\n\n\"You think I'm handsome?\" Mark asked.\n\n\"Of course I do\" Trish replied. \n\n\"I do too\" Tina answered. \"You look just like your dad, and he's as handsome as they come.\"\n\nI looked at Tina and rolled my eyes at her over the top comparison.\n\n\"And I know you're a gentleman. Just be a gentleman to her and she won't be able to wait to see you again. You were a gentleman tonight, weren't you Mark?\" Trish asked.\n\n\"Yes ma'am, I was.\" Mark's chest was puffed up and he was in full 'Marine Mode'.\n\n\"Then I bet she'll call you before this time tomorrow\" Trish said.\n\n\"You need to give the guys lessons, Mark. I've seen the way you treat other girls at school, and you are definitely a gentleman. In fact, if I weren't your sister, you're the guy I'd want to date\" Ellen added.\n\n\"Really? Wow. I just do what mom and dad taught us. Go figure.\"\n\nTrish added \"Mark my words, by this time tomorrow she'll call you. By the way, what was her name?\"\n\n\"Whitney\" Mark stated.\n\nTrish and Tina glanced at each other with eyes slightly wider than normal. I could tell they were thinking \"Nah, it couldn't be.\"\n\nTrish's prediction proved to be true, and the next afternoon Whitney called. Mark told us that Whitney said she had never been treated with such respect and that she wanted to see him again. They promptly became an \"item\".\n\nMay became June, and there were changes for us on the horizon. \n\nTrish had become a permanent fixture in the lives of our family. She remained a loving and very creative sex partner for Tina and I, and she had become a close friend and confidant to Mark and Ellen. She also practiced a healthy lifestyle, eating right and exercising regularly to keep her body firm and feminine. Because Trish had integrated herself into our day-to-day lives, many of her lifestyle choices became ours as well. Tina and I both began to feel and look healthier. The stubborn excess weight around my midsection melted away, and though I didn't look like a teenager, I did look younger than my 46 years. Tina's weight loss was subtle but in all the right places, accentuating her curves in just the right ways. \n\nTrish had essentially moved in with us following the wedding ceremony in May. She kept her things in the bedroom that John vacated when he left for the Corp. We had to keep up pretenses, after all. She also kept her house and very infrequently would stay there, just to make sure everything was OK. \n\nTina and I believed something was lacking in our current living arrangement with Trish. It lacked permanence. If things ever got difficult between us, it might be too easy for one or more to run to Trish's place and hide instead of working things out and healing our relationship. Tina and I wanted to make this permanent and suggested to Trish that she sell her house and live with us permanently. \n\nAt first Trish was taken aback by our suggestion, and was initially speechless. Looking for something to say she managed to stutter \"But... but... but... what do we tell the kids?\" her voice a blend of excitement and concern.\n\n\"Well, I thought maybe we could build a small studio like apartment attached to the master bedroom here. It could have a bath, kitchen, bedroom, living room. Not just for you, but for all three of us to use whenever one of us might not be in the mood or just needs to be away from everybody. And by claiming it's an apartment for you it would give us some plausible deniability. Does that make sense?\" were my thoughts.\n\nTina broke into a wide smile but said nothing.\n\n\"You would do that? For me?\" Trish asked, becoming emotional.\n\n\"We married you, didn't we? That's a forever thing. We want you with us, always\" Tina said.\n\n\"I can't believe this has happened to me! I can't believe I found two people who love me for who I am! Yes, of course I'll live here with you!\"\n\nTrish hugged and kissed Tina first, and as she hugged me she whispered in my ear \"I guess wishes do come true\" a reference to the falling star she had wished on late last summer.\n\nTrish's home was in an up-and-coming part of the city that was gaining popularity with young couples. She had made numerous repairs and improvements to the property since purchasing it, and it did not last long on the market. She accepted an offer that was well above asking price just a week after listing it.\n\nWe celebrated the sale with a home cooked meal on the grill, and ate on the deck. I was constantly amazed at how effortless and easy conversation was amongst the five of us. Tina, Trish, and I really were meant to be together, and the twins were happy to have their aunt staying with them too. Sitting on the deck we were able to enjoy the gardens that my two master gardeners had been working on since the ground thawed. I could not imagine a more perfect setting.\n\nOver dinner we told Mark and Ellen that Trish was going to live full time with us, and that we were going to build an addition on the house as an apartment for her.\n\n\"That is so cool!\" Ellen squealed, obviously very happy about the news. She got up from her chair to hug Trish, who had gotten out of her chair too. \"I am so happy you're going to stay here with us!\" The two women embraced tightly, and both of them started to cry.\n\n\"Why are you crying?\" Trish asked\n\n\"I'm so happy! This is so perfect! You're somewhere between a mom and a sister and you're smart and beautiful and caring and loving and I'm just so lucky!\" Ellen babbled. \"But why are you crying?\"\n\n\"I'm just happy that you're so happy!\" Trish answered between sniffs. \n\nAfter some time they broke their embrace, pecked each other on the lips and simultaneously said \"I love you\" in an unashamed mother/daughter way.\n\nMark sat quietly in his chair, a toothy smile stretched across his face. \"I'm glad you'll be a part of the family too Aunt Trish.\"\n\n\"Thank you, Mark. I think this is going to be good for all of us\" Trish said, her head cocked to the side and arms spread wide inviting Mark for a hug. Emotional displays were not Mark's thing, but he reluctantly got out of his chair and hugged his Aunt Trish.\n\nOnce dinner was finished the twins excused themselves to study for finals, leaving the three of us outside.\n\n\"That went well\" Trish said.\n\n\"I thought so too\" I agreed. \"Tina and I will go see our banker tomorrow to start the loan process so we can start building.\"\n\n\"You'll do no such thing!\" Trish commanded. \"I am your wife. The two of you made me an equal part of this family, and I need to have skin in the game. I want to have a stake in what happens here. We will invest the profit from my place into the addition, and if we need more money than that we'll figure out a way to finance the balance equitably.\"\n\n\"Are you sure Trish? Clark and I would be more than happy to shoulder the cost to have you here with us\" Tina replied.\n\n\"I'm sure honey. We agreed that we would share our joy and our pain. This is part of that\" Trish confirmed.\n\nWith the living arrangements and financials settled, we began the process of designing the addition. Initially we let Mark and Ellen have a say in the design, but when they refused to accept a design without an in-ground pool, we shut them out. This was to be a practical addition to the house, not some extreme makeover. \n\nWe settled on a two story addition that enlarged the existing master bedroom and bath, as well as creating an additional moderately sized second bedroom with it's own private bath, a large walk-in closet that I was not allowed to use, and a balcony overlooking the gardens. The open plan ground floor would house a kitchenette with a dining area, a lavatory, and a living room with a view of Trish's and Tina's beloved flower gardens. \n\nBefore we settled on a design, Tina and Trish decided that the kid's desire to have a pool was not all that extravagant and that the \"right\" pool would be a great addition to the backyard, actually enhancing their gardens.\n\n\"What did you have in mind?\" I asked.\n\n\"We were thinking of a pool that looked more like a pond and less like a pool\" Tina said.\n\n\"We found a contractor that specializes in integrating pools into an existing landscape. Here, look at this design the contractor did for us\" Trish said as she produced a computer design of the free-form pool seamlessly imposed on a photo of the backyard. \"He designed it with a pebble finish in dark colors that blends in with the natural look of the gardens. It doesn't even look like a pool, does it? Plus, it's a saltwater pool so it's healthier and there's a lot less maintenance. What do you think?\"\n\n\"There's no diving board. Or waterslide\" I answered.\n\n\"You are such a smartass!\" Tina said. \"Seriously, what do you think?\"\n\n\"I like it, especially the way there's no concrete apron all the way around it. It really does look like a pond, and the dark color looks so much more natural than a typical white pool. The waterfall isn't over the top, I like that. If the two of you really want it, I'm all for it. And it'll make the kids happy.\"\n\n\"Thank you Clark! You're gonna love having a pool, trust me\" Trish said with wink and a devilish grin. \n\nOur design was finally set. The contractor who originally built the house was hired to build the addition, and he coordinated the excavation work for the foundation and the pool, saving us a lot of money. Most contractors were short of work in the area, so there were plenty of trades-people working on our project. Construction only took about sixty days, and we were able to occupy the space before the end of July. \n\nDuring construction we received a rare phone call from John and we filled him in on all of the latest developments. Of course, through letters and e-mails he was already aware of his mom's reconnection with her 'half sister', but it was special to be able to share the latest news with him in real time. He sounded genuinely excited, and even asked to speak to Trish personally so he could welcome her to the family. Trish told him she looked forward to meeting him soon.",
        "Trish and Tina worked diligently to decorate our new space, and before long we were all settled in. The pool was a big hit with everybody, and I found myself liking it more and more every day.\n\nOf course, Trish was quick to show me and Tina what she meant when she told me I would love having a pool. As it turns out, Trish loves having sex in the water.\n\nTina and Trish had designed the pool to be a sex oasis for us. The pond-like design meant there were no sharp corners and the walls were a little short of vertical. Their design included a shallow, four inch deep pool at one end that was perfect for lovemaking, as well as shelf-like seating areas dispersed around the perimeter where one or more people could sit and relax or be intimate. Yet from the surface, all of these features were camouflaged as the dark pebbled finish made the water appear almost black.\n\nEllen loved having a place where she could sun bathe and take a dip to cool off if the heat of the sun became unbearable. She spent hours poolside in a bikini developing a deep, bronze tan. Trish would join her every once in a while as would Tina, and they would lounge and talk while absorbing the sun's rays. \n\nOne Saturday I sat quietly on the new balcony and watched Ellen and Trish hang out and catch some sun, the girls unaware of my presence. I was getting aroused gazing on Trish's lovely body covered in a sexy one-piece suit with a frilly skirt around the bottom that kept her \"specialness\" from being discovered. During this observation session I realized just how lovely my daughter was. Ellen was no longer my little girl. She had grown into a beautiful, shapely young woman and I realized her bikini did little to conceal her magnificent body.\n\n\"Hey, you wanna go skinny dipping?\" I heard Ellen ask Trish.\n\n\"I don't think that would be a good idea Ellen. I'm your aunt\" Trish politely replied.\n\n\"So?\"\n\n\"So? It's not something that aunts and nieces do together, that's all\" Trish responded.\n\n\"I've gone skinny dipping with plenty of girls before Trish. It's not like I haven't seen a hot woman naked in a pool\" Ellen protested.\n\nDid I really just hear that? Did my daughter just say she had skinny dipped with plenty of girls? And that she thought Trish was hot? Was Ellen serious when she said she had sworn off boys? Had she been intimate with a woman? This was a side of my daughter I had never considered before.\n\n\"That's not the point young lady. If you want to skinny dip with your friends, that's fine. But I won't cross that line. It would be inappropriate\" was Trish's firm reply. \"And if you're gonna skinny dip here, you better be discreet about it. There are men in the house.\"\n\nAs erotic as the thought of the two of them naked in the pool was, I was relieved that Trish didn't succumb to the temptation to skinny dip with Ellen. Trish appreciated beautiful women, after all she was married to Tina, and Ellen was a younger version of her mom.\n\n\"Party pooper!\" Ellen pouted as she got out of her chair and walked into the pool via the shallow end, still in her bikini, and swam to the waterfall where she allowed the cascading water to fall on and massage her back. \n\nSomewhere deep inside I was disappointed that Ellen didn't strip. It dawned on me that I wanted to see my daughter naked. Worse yet, I wanted to see my daughter naked with Trish, my wife! What was wrong with me? I was married to two very beautiful women and I had just imagined my daughter cavorting naked in the pool with my shemale bride!\n\nI slinked back into the house, embarrassed by my depraved thoughts. I was having more and better sex than any man deserves with two of the most wonderful women on the planet and apparently that just wasn't enough. \n\nLater that night the three of us were in bed. Trish and Tina were face to face, their bodies pressed tightly together. I was spooning Trish, my erection firmly planted in the crack of her ass.\n\n\"I need to tell you two something\" Trish began. \"Earlier today Ellen and I were sunning by the pool and she suggested that the two of us go skinny dipping.\"\n\nTrish impressed me by confessing what happened. I already knew, but she didn't know that.\n\n\"Really? She asked you to go skinny dipping?\" Tina asked.\n\n\"She did\" Trish answered. \n\n\"So what did you do?\" I asked.\n\n\"I told her it wouldn't be appropriate for an aunt and her niece to do that.\"\n\n\"What did Ellen say?\" Tina inquired.\n\n\"She called me a party pooper and got in the pool. I left it at that\" Trish answered. \"She did tell me that she had been skinny dipping with plenty of hot girls before. I kind of got the feeling she was making a pass at me. Do you think she was serious when she swore off boys?\"\n\n\"Geez, I never thought about it. I wouldn't think one bad date with Tim would cause her to chase after women, would it?\" Tina asked.\n\n\"Do you think she was already interested in girls?\" I asked my wives.\n\n\"I don't know\" Trish answered.\n\n\"It's never come up when we talked\" was Tina's reply. \"Hmm. Interesting.\"\n\n\"So what do I do if it happens again?\" Trish asked.\n\n\"What do you want to happen?\" Tina asked her wife.\n\n\"I'm not sure. On the one hand, she is very attractive, but on the other I'm married to the two of you. I won't let your daughter do anything to ruin what we have.\"\n\nTina shocked me when she kissed Trish passionately and said \"What if we told you it was OK?\"\n\n\"What do you mean?\" Trish asked.\n\n\"Yeah, what are you saying Tina?\" I added.\n\n\"Well, we're not exactly a normal family anymore and if Ellen is interested in Trish I can't say I would have a problem with it if something happened between the two of you\" Tina answered.\n\n\"Who are you, and what have you done with my Tina?\" I asked in shock.\n\n\"I'm not saying I'm going to let anything happen, but you wouldn't have a problem with it?\" Trish asked.\n\n\"I can't say that I would. A lot of things have changed for me in the last year or so and I'm not the prude I used to be. What do you think, Clark?\"\n\n\"I would be lying if I said I wouldn't have a problem with it.\"\n\n\"The hard cock pressing into my ass tells me a different story, big boy\" Trish interjected. \"What do you say we fuck on it tonight and wait to see if anything comes of it?\"\n\nThat was the best idea I had heard today. I pulled my hips back so I could line up my cock with Trish's asshole, and began pressing forward into my wife's butt. Tina kissed Trish before spinning around to sixty-nine her wife while I fucked her.\n\nWe set a nice leisurely pace. I fucked Trish's ass and kissed her neck and ear. Tina sucked on Trish's cock and pressed a finger into my asshole. Trish busied herself lapping at Tina's clit and labia while pumping a finger in and out of her ass. As I looked at my lovers orally pleasing each other, I could not shake the vision that it was actually Ellen coupling with Trish; and it was a huge fucking turn on.\n\nThe three of us came just a few moments apart. I pulled out of Trish and Tina immediately began licking up the cum leaking out of Trish's well fucked brown eye. \n\nAfter a few minutes cuddling, I whispered \"OK, I'm not encouraging you to do anything Trish, but if something does happen I don't think I'd have a problem with it.\"\n\nWe fell asleep, our arms and legs entwined.\n\nThe following Wednesday was the twin's eighteenth birthday. I woke up late with an urgent need to have a cock inside of me. There wasn't time to take care of my lust before we had to leave for work, so I spent the morning longing for one of my wives to fuck me. At lunch time, I conferenced Trish and Tina. I told them what I needed and that it couldn't wait until later that night. Both of them volunteered to meet me at the house and take care of what was ailing me before we got ready for the twin's birthday celebration.\n\nWe arrived at the same time and in our urgency to get naked together we didn't realize that Mark's truck was there. We burst into the house and began racing for the stairs.\n\nI stopped suddenly when something in the backyard caught my eye. I froze in my tracks. Trish and Tina were two steps up the stairs when they saw I had stopped.\n\n\"What is it Clark?\" Tina asked.\n\nI was silent, stunned by what I was seeing.\n\nTrish and Tina came down the steps and looked to see what had my rapt attention.\n\nTina gasped and in an excited whisper exclaimed \"Oh my God!\"\n\n\"That is so fucking hot!\" Trish commented in a low, throaty moan.\n\nEllen was on her back on a blanket next to the pool, her face between Whitney's legs and her legs spread wide. Whitney was on her elbows and knees, her ass high in the air, eating my beautiful daughter's pussy while Mark fucked the beautiful blonde from behind.\n\nEllen's hands palmed and groped the meaty flesh of Whitney's ass as she relentlessly ate her brother's gorgeous girlfriend. Ellen's firm breasts stood proud on her chest, jiggling as Mark's pounding was transmitted through Whitney's body to hers. \n\nWhitney's hands were busy at Ellen's ass too, spreading her cheeks apart and rubbing her little pucker while she devoured the succulent pussy in front of her; her breasts mashed between her chest and Ellen's belly.\n\nMark's hands held Whitney's hips as he plunged his significant cock in and out of the shapely little minx kneeling in front of him. \n\n\"That's Whitney! From Victoria's Secret!\" I said.\n\nWe were all transfixed by the erotic sight before us and were rendered speechless.\n\nIt was obvious they did not know we were home, and thought they were sharing this intimate adventure in privacy.\n\nThe three of us raced to the new apartment living room to get a closer look at the threesome unfolding in front of us. We peeked through the sheer curtains hoping to remain hidden.\n\nThrough the closed doors and over the white noise of the waterfall, we could only make out some of the sounds coming from the lovemaking in the backyard. We had obviously arrived toward the end of the session as Ellen was obviously cumming, her hips thrusting up to Whitney's mouth. Mark's head was thrown back, a grimace on his face and his arms straining as he pulled Whitney against him, dumping his load into her willing body. Whitney's body was visibly convulsing as an orgasm rocked her and she came on Mark's cock and all over our daughter's lovely face.\n\n\"I guess they decided to start celebrating without us\" Tina said, her voice betraying her desire. The fact she had her hands down the front of her skirt diddling her clit kind of indicated her lust as well.\n\nWe watched as Mark and Whitney rolled off of Ellen, his cock still inside of her. The couple laid on the blanket as Ellen turned around, laid in front of Whitney, and took her in her arms. Their faces pressed together for a deep, intimate kiss. Ellen moved her left hand between Whitney's legs to massage her well fucked pussy and Mark's softening cock. Eventually Mark's manhood slipped out of Whitney and Ellen wasted no time going down on her girlfriend. Ellen licked and probed her lover's wet slit, lapping her brothers cum out of Whitney's slick pussy.\n\nMark was propped up on an elbow and Whitney's head was turned so the two of them could kiss while Ellen focused on the blonde girl's sex. Mark cupped Whitney's right tit and strummed the nipple with his thumb while their lustful tongues played in one another's mouths. They were beautiful together.\n\nThen Ellen blew our minds by grabbing her brother's cock and sucking it into her mouth. She very slowly and deliberately worked Mark's member, swirling her tongue and sucking it. She was obviously trying to get it hard again. Despite the obstructed view and the muffling of the sound, it was obvious she was enjoying herself and that Mark was responding to the oral attention his cock was receiving.\n\nI felt Trish's mouth at my ear, her hot breath sending shivers of anticipation through my body. \"They are so beautiful\" she breathed into my ear, quickly followed by a deep probe of her tongue. My eyes closed as Trish's tongue and mouth continued to lavish attention on my erogenous zone. Her hand snaked to the front of my khaki's to massage my engorged penis.\n\n\"She's gonna fuck him! She's gonna fuck her brother!\" Tina exclaimed in a whispered shout. \"Oh my GOD! I'm gonna cum just watching her!\" \n\nTrish and I looked through the scrim covered patio door just in time to see Ellen squat over her brother's erection and slowly lower her wet tunnel onto Mark's veiny spear. We heard Tina cumming at that point, and could only hope that the kids didn't. Once she had him all the way inside Ellen rested her hands on his chest and lowered herself to her knees. She held him there, not moving. She was obviously savoring the exquisite feeling of being filled with a cock. Was she also feeling the overwhelming emotional conflict that comes from doing something that feels so good but is a terrible cultural taboo? She raised her hips a couple of inches and slid back down her brother's cock.\n\nOur daughter was fucking our son.\n\nNot wanting to be left out, Whitney flung a leg over Mark and settled her pussy on his mouth. Whitney lowered her face to Ellen's chest and began sucking her tits. Ellen threw her head back in ecstasy as her hips continued to pump up and down on her brother's stiff prick. Ellen fucked her brother while their girlfriend made love to her breasts.\n\nThis was too much for me. I stripped out of my clothes and moved away from the patio door. Quickly getting on my knees I raised my ass in the air and pleaded with Trish to fuck me. She was out of her clothes and kneeling behind me in a flash. Trish allowed some saliva to fall from her lips onto my longing asshole and spread it around with the head of her cock. She aimed her prick with her left hand and pulled me back toward her with her right. I could feel my sphincter give way, anxious to feel her length slip past the tight ring. \n\nThrough the semi-sheer curtains we could still make out what was happening by the pool. Ellen was furiously riding her brother's cock, and she and Whitney were now locked in a breast crushing embrace while their tongues fought relentlessly.\n\nInside, Trish was plunging her rock hard girl cock in and out of me with great urgency. Tina knelt beside Trish so she could stroke my cock while my ass got fucked and we could all still watch what was happening outside.\n\nTina's hand flying up and down the length of my cock, Trish's cock reaming my gripping ass, and the site of our children engaged in a passionate fuck just a few steps away combined to send me over the edge. My cock spat cum all over the carpet underneath me. My contracting asshole clamped around Trish's perfect cock. She took a couple of full strokes into my receptive ass before converting to short, rapid thrusts and emptied her girl honey into my rectum. Trish kept pumping me with abbreviated strokes until all of her juice was securely deposited inside of me.\n\nTrish pulled out, rolled me onto my back and climbed on top of me before engaging me in a very passionate kiss. \"I love fucking your ass Clark\" Trish whispered, placing emphasis on the first two words. \"That was just too fucking hot!\"\n\n\"I have never cum like that. Fuck, what a turn on!\" Tina quietly exclaimed.\n\nA quick check outside showed the three beautiful kids were still engaged in their debauchery so we decided it was a good time to beat a hasty retreat lest we should get caught spying on them.\n\nWe dressed quickly and quietly exited the house, hoping the noise of the cars would be drowned out by the waterfall and their own lovemaking. \n\nInstead of going back to work, we stopped at a Starbucks and ordered coffee so we could digest and discuss what had just happened.\n\n\"Did you ever expect to see that?\" I asked Tina.\n\n\"Not in a million years. Unbelievable\" Tina answered.\n\n\"Ellen's body is more beautiful than I had ever imagined. Her proportions are perfect, just like her mom's\" Trish added, soliciting a genuine, though embarrassed, smile from Tina. \"I have to confess, that after what I witnessed today, if Ellen does try to start something with me, I don't think I would be able to stop her. Or myself.\"\n\n\"My only request is that if something does happen, you have to tell us\" I said.\n\n\"That goes without saying\" Trish answered.\n\n\"Oh. One other thing\" I added. \"If something happens between Trish and Ellen I'm allowed to see if something might happen between me and Whitney.\"\n\nThere were a few seconds of deafening silence at our table.\n\n\"Fine. And I get to see if something could happen between me and Mark\" was Tina's spoken demand.\n\nTrish and I looked at Tina with obvious shock.\n\n\"You would fuck your own son!?\" Trish whispered excitedly.\n\nTina reflected on the question for a long moment. Her eyes began to twinkle, and then glaze over completely. \"Yes, I would\" she said wistfully.\n\nTrish and I looked at her with mouths agape totally shocked by her depraved confession. I finally gathered enough cerebral power to say \"None of this can happen tonight. That would just be way too obvious\" to which Trish and Tina both voiced their agreement.\n\nWe stayed at the coffee shop chatting and sipping coffee. To make it look like we were getting home from work, I left the coffee shop and Trish was to leave a few minutes after me. Tina was going to go shopping to pick up things for the twins birthday.\n\nWhen I got home, I walked in the house as usual and could hear the kids were still in the backyard. I walked out the patio door to find Mark, Ellen, and Whitney in the pool swimming and playing like young kids. Thankfully they were in their swimsuits.\n\n\"Hi Dad\" Mark called.\n\n\"Hi Daddy\" Ellen greeted me.\n\n\"Hi Mr. Pratt\" Whitney offered.\n\n\"Hello everyone. Happy birthday you two\" I said.\n\n\"Thanks dad. Dad, this is my friend Whitney\" Mark said, introducing me to the beautiful curvaceous blonde.\n\n\"Our friend\" Ellen corrected.\n\nI did my best to make sure I didn't do anything to betray the fact I had seen her before. \"It's a pleasure to finally meet you Whitney. We've heard a lot about you\" I said. \"Are you having a good time?\"\n\n\"Yes, I am! Your pool is wonderful!\" she exclaimed. \n\n\"Thank you! Will you be joining us for dinner?\" I asked.\n\n\"I hadn't thought about it Mr. Pratt, but if it's not an inconvenience I would really like to. We're having so much fun\" she replied.\n\n\"No problem at all, and please, call me something other than Mr. Pratt.\"\n\n\"Would you mind if I called you 'Mr. P'?\" Whitney asked, a dazzling white smile on her face and bright blue eyes sparkling. \n\nI laughed as I said \"No, 'Mr. P' would be fine Whitney.\" I turned to go back into the house. Partly because there were preparations to be made, and partly because \"little Mr. P\" was aroused by seeing the lovely Whitney in the pool. Normally, seeing one of Mark or Ellen's friends like that wouldn't be an issue, but I had seen her less than 5 hours ago eating my daughter's pussy while my son fucked her. The image of her tight, firm eighteen year old body was still fresh in my mind.\n\nTrish arrived shortly after I went back in the house. \"Hi baby\" she greeted me, wrapping her arms around me and kissing my mouth deeply. \"Thanks for a great fuck this afternoon.\"\n\n\"We have company in the pool, honey\" I said after breaking her erection inducing kiss.\n\n\"Oooo! I guess I better be careful then! Who's all here?\"\n\n\"Mark, Ellen, and Whitney.\"\n\n\"Are they naked!?\" she gasped as she strode to the patio door to get a look at the fit young bodies in the pool.\n\n\"No, well, not completely. Bikinis that are barely there, but they're dressed, you horny little slut\" I teased.\n\n\"Ain't that the pot callin' the kettle black? I'm not the only slut in this marriage, buddy. You like a cock in your mouth and ass as much as I do!\" she shot back. After a brief look at the young people in the pool she walked back toward me, looked over her shoulder to make sure no one could see and proceeded to tongue fuck my mouth while she massaged my crotch. \"I'll take care of that later\" she cooed, spun on her heels and walked out to the pool.",
        "\"Happy birthday you two!\" Trish yelled as she approached the pool.\n\n\"Oh! Hi Aunt Trish! Thanks!\" Ellen chirped at the greeting.\n\n\"Thanks Aunt Trish\" Mark said. \"Is mom home yet?\" he asked.\n\n\"Nope, she was going to stop at the grocery store to get things for tonight.\"\n\nMark added \"Oh, I almost forgot. Trish, this is my girlfriend Whitney. Whitney, this is my Aunt Trish.\"\n\nTrish was quick to respond. \"It's a pleasure to finally put a face to the name, Whitney\" she said, making it clear that regardless of any history they may have, they were meeting for the first time.\n\n\"It's nice to meet you too, Aunt Trish\" Whitney replied with an understanding twinkle in her eyes.\n\n\"You can call me Trish, Whitney.\"\n\n\"Thanks, but I think I like Aunt Trish better.\"\n\n\"That's fine with me! So, are you staying to celebrate the twin's birthday with us Whitney?\" Trish inquired.\n\n\"I am. Mr. P invited me to stay before you got home.\" Whitney confessed.\n\n\"We're looking forward to having you join us. I'm going in to help Mr. P with the party prep. You guys stay out here and have a good time\" Trish said before coming inside.\n\nBack in the house Trish said \"I had to come back in here before I started sporting my surprise! Damn those three are hot!\" and asked if there was anything she could do to help.\n\nI just looked at her, a knowing smile on my face.\n\n\"I've got things pretty much under control, but if you are so inclined you could open a bottle of wine and pour a couple of glasses. Make that three\" I said as Tina walked in the door carrying a cake and groceries. \n\n\"Hi!\" Tine said excitedly. Tina set the bags of groceries on the counter and approached Trish, leaning in to her wife for a kiss.\n\n\"Careful, we have company!\" Trish warned.\n\n\"Oh!? Who's all here?\" Tina asked.\n\n\"Mark, Ellen and Whitney\" Trish answered.\n\n\"Did she recognize...\"\n\n\"Yes she did, but I nipped it early before she said anything\" Trish interrupted. \"Go out and say hi to everybody\" Trish suggested.\n\nTina went out to the pool where the three teens were still frolicking in the water and chimed \"Happy birthday you two!\"\n\n\"Yeah! You're home! Thanks mom!\" Ellen declared.\n\n\"Thanks mom\" the reserved Mark said.\n\n\"And you must be Whitney. It's a pleasure to meet you. I'm Tina, Mark and Ellen's mom\"\n\nWhitney swam to the side of the pool nearest Tina.\n\n\"It's nice to meet you too, Tina. Your husband suggested I call him Mr. P. I'm not comfortable using your first name. Would it be OK if I call you Mrs. P?\" Whitney asked.\n\n\"Mrs. P would be fine Whitney. Mr. P tells me you're staying for supper, is that true?\"\n\n\"Yep. Mr. P invited me earlier. I hope you don't mind.\"\n\n\"Not at all. There will be plenty to go around. Mr. P says dinner will be ready in about half an hour. Why don't you three go put on some clothes that would be a little more \"dinner table appropriate\"\" \n\n\"You don't like my bikini mom?\" Ellen asked as she walked out of the shallow end and sensuously toweled off.\n\nTina was momentarily mesmerized by her daughters gorgeous body barely covered by the scraps of fabric Ellen had referred to as a bikini.\n\n\"I like your suit very much Ellen, but do you think you should wear it at the dinner table?\"\n\n\"You're right\" Ellen added giving her mom a hug before heading to her room.\n\n\"Happy birthday baby\" Tina whispered. \"I love you.\"\n\nEllen responded by hugging her mom a little tighter and placing a lingering kiss on her lips. \"I love you too, mom\" she said before sauntering off to her room, the full cheeks of her firm, barely covered ass saucily swaying.\n\nWhitney exited the pool and dried herself, saying \"I'm going to change too.\" She followed Ellen to her room. Whitney's swimsuit appeared to Tina to be a size too small and barely covered her voluptuous body. Tiny triangles struggled to cover the mass of her \"C\" cup breasts, and the teeny tiny bottoms barely contained her apparently hairless sex and left her full, round buttocks essentially exposed. Tina had to drag her eyes away from the tantalizing bodies as they walked away.\n\nTurning her attention to her eighteen year old son, Tina asked \"Aren't you going to change, Mark?\"\n\n\"In a couple of minutes\" Mark replied from the deep end of the pool. It was pretty obvious he was hard. Hell, who could blame him? He had just pleasured both of the sexy young women and had gotten an eyeful of their barely-clad bodies as they exited the pool.\n\n\"OK. Just don't be late for dinner\" Tina said as she walked to the house.\n\nBack inside, Ellen and Whitney walked through the kitchen en route to Ellen's bedroom. Not only did they not cover themselves, both of the young women had their chests thrust forward, back arched, and exaggerated the swing of their hips as they past; enticing us, teasing us. Ellen's eyes were focused on Trish's and I thought I saw Whitney stealing glances at me as she proudly strode past. \n\nOnce the two vixens were out of sight, Trish and I turned to each other. What I saw on Trish's face was unadulterated lust, and I'm sure I bore the same look. My heart was pounding. As soon as we heard Ellen's bedroom door close, Trish and I were in each other's arms kissing feverishly. I grabbed Trish's ass and pulled her to me, grinding my aching hard-on into her.\n\n\"I am so fucking turned on\" Trish whispered before briefly tonguing my sensitive ear and palming my rock hard cock. \"And I see you're turned on too!\"\n\nTina entered the kitchen and saw the two of us caressing. \"Get a room!\" she said before joining our embrace, kissing each of us deeply in turn. \"We need to break this up before Mark comes in. He didn't want to get out of the pool while I was there. I'm pretty sure he's got some serious wood going on.\"\n\nJust as we broke from our coupling Mark entered the house and walked toward his room. He wore a pair of baggy swim trunks. If he was hard, it wasn't noticeable. His trunks covered him from his waist to just above the knees, but it did nothing to hide his trim, chiseled physique. Mark is about five ten, 170 pounds, and I don't think there is an ounce of fat on the young man. He has muscular arms, a sculpted chest, and sinewy calves. His short hair and fit body screamed \"U.S. Marine\" even though he was due to start his senior year of high school in the fall. Trish and Tina both stared at him as he walked by, and their eyes undressed him from behind as he entered the hall.\n\nTina turned to me, kissed me while rubbing my crotch and said \"I can't wait to get this inside of me tonight.\" I knew I would oblige her desire. Trish stepped behind Tina and ground her crotch into Tina's ass while cupping and fondling her breasts.\n\nWe heard a door open down the hall and quickly broke from our heated foreplay. All three of us were obviously flushed with excitement as Ellen and Whitney came into the kitchen. Both of the young women were dressed in tee shirts and tight nylon athletic shorts. The girls also had the provocative fashion sense to go braless. Being the young, nubile creatures they are their breasts seemed to defy gravity; their areolas and nipples evident through the thin cotton. Tina shot Ellen a disapproving look, but Ellen just smiled and pretended to ignore her.\n\n\"Is dinner about ready? I'm gonna die if I don't eat soon!\" Ellen said, the back of her hand on her forehead as she faked a swoon.\n\nTina answered \"Dad's gonna put the steaks on right now. We'll eat in...\"\n\n\"Twelve minutes\" in interrupted my wife. \"Medium rare, Whitney?\" I asked\n\n\"Perfect\" she answered.\n\nWe sat at the table on the deck with Whitney on my left and Trish on my right. Tina was to Trish's right. The six of us enjoyed salads, baked potatoes, and grilled T-bones. It was Mark and Ellen's favorite meal, and they devoured it like polite animals; their afternoon poolside romp obviously fueled their appetites.\n\n\"This steak is incredible Mr. P. You're a helluva cook!\" Whitney said. She leaned to her right toward me and whispered \"I wonder what else you're good at.\" My head snapped to the left in surprise. My eyes locked with Whitney's sparkling blue eyes for an extended second. She gave me a devilish wink before returning to her meal.\n\n\"Seeing that I'm eighteen now, may I have a glass of wine?\" Ellen asked.\n\nTina and I looked at each other. We had been together so long that we were able to look into each other's eyes and hold a conversation without saying a word. Tina wordlessly acknowledged that she agreed with my decision and said \"Just one. Mark, would you care for a glass?\"\n\n\"Yes please\" he answered.\n\n\"Whitney, if you're eighteen you're welcome to join us as well\" Tina told her.\n\n\"Thanks Mrs. P. I would like a glass.\"\n\nEllen practically leapt from her chair to pour three glasses. \"Is there another bottle? You lushes drank most of this one\" she teased.\n\n\"There's one in the fridge\" Tina answered.\n\nEllen opened the new bottle and poured three large glasses, essentially emptying the entire bottle.\n\n\"Ellen!\" Tina exclaimed. \"Are you sure you got enough?\" she asked sarcastically. Ellen didn't respond to her mother's question and placed a glass in front of Whitney and in front of Mark. Ellen took her seat at the table, and once she was comfortable Trish raised her glass and said \"To the new adults! Happy birthday!\" The six of us took turns clinking glasses and drank.\n\nOnce the meal was finished, Tina excused herself to get the cake. I glanced around the table and saw that Mark was gazing at Whitney, obviously smitten with the young woman. Ellen was fixated on Trish, staring at her while she ran a finger around the rim of her wine glass and mindlessly licked her lips. Her desire and arousal were evident to anyone who cared to see it. Trish's eyes moved from face to face, observing everything happening at the table eventually turning to me with a look that said \"Can you believe what's happening?\"\n\nTina came back outside with the birthday cake adorned with thirty-six candles, eighteen for each of the twins. As she approached the table she began our family tradition of singing \"Happy Birthday\" to the kids. Trish, Whitney, and I joined in. Mark and Ellen tried to act embarrassed but it was evident that they appreciated the attention and the continuation of our tradition.\n\nThe twins made their wishes and blew out the candles.\n\n\"What did you wish for?\" Tina asked. She always asked even though she knew the kids wouldn't answer, because the wish wouldn't come true if they told.\n\n\"Mom! We can't tell you or our wish won't come true!\" Ellen shouted like a little girl.\n\n\"I can tell you what I wished for because it can't come true any way\" Mark said.\n\n\"How can you be so sure Mark?\" I asked.\n\n\"Because I wished John was here.\"\n\nHis touching wish quieted the gathering for a long minute. I was bursting with pride at my son's selflessness.\n\n\"I wish he was here too, son. I miss him as much as you do\" I responded.\n\n\"We all do. We all miss him, Mark\" Ellen replied.\n\nTina said nothing but her eyes began to fill with tears, obviously moved by her son's love and concern for his brother. Trish beamed with pride and fought back her own tears. Whitney's expression was now the same as I had seen on Mark's face earlier.\n\nTina cut and served the cake, the mood around the table lightening again. We were here to celebrate Mark and Ellen's birthday, not wallow in the fact that John wasn't here.\n\nAfter the cake, we gave Mark and Ellen their gifts. We have a tendency to \"go big\" on gifts when the kids have a milestone birthday, and turning eighteen is as big as it gets. \n\nEllen opened her gift from her mom and me first. We had gotten her a top-of-the-line laptop computer and a digital video camera. Yeah, it was extravagant. We figured the PC would be useful for her when she went off to college and that the camera would be a source of fun for her.\n\n\"Oh my GOD! It's perfect! It's just what I wanted! Thank you thank you thank you!\" she yelled, completely elated.\n\nMark was up next and he opened the gift from his mom and me. It was the same gift I received from my dad when I turned eighteen, and the same gift I gave to John when he turned eighteen. It was his first handgun. \n\n\"Mom, dad, you shouldn't have\" he said as he opened the case to the Beretta P-92 Vertec. \"It's perfect. Thank you.\"\n\n\"It's the civilian version of the M9 you'll be issued if you deploy\" I told him, a tiny quake in my voice as I thought of both of my sons deployed. \"I think we need to take it for a test drive this weekend. What do ya think?\"\n\n\"I can't wait!\" he replied.\n\n\"Here\" Trish said, handing Mark and Ellen each an envelope. \"Happy birthday!\"\n\nMark and Ellen opened their envelopes at the same time and extracted the contents. Each of them held a note, hand written on quality stationery. We all sat in silence as each twin read what was written on the note.\n\nEllen held the note in her left hand and read while her right hand went to her mouth, index finger under her nose. I could see her chin begin to tremble as the words she read triggered an emotional response inside of her. Tears welled up and rolled down her cheeks. Mark's reaction was much the same. There were no tears, but it was obvious that he was deeply moved by what Trish had written.\n\nEllen was finally able to look at Trish and squeaked out \"Thank you!\" while wiping the tears from her eyes. \"Look at me, blubbering like a baby\" she confessed, releasing a laugh of embarrassment. \"I'm sorry.\" Ellen got out of her chair to hug Trish.\n\n\"I am so proud of you young lady, and I have come to love you so very much! Like you're my very own daughter\" Trish said as she tightly held Ellen in her arms.\n\n\"I love you too Aunt Trish. I love you more than I can ever say! Thank you!\"\n\nMark was out of his chair too, and was waiting to thank his aunt. Ellen moved to thank her mom and Mark took Trish in his powerful arms and said \"Thanks Aunt Trish. I will treasure this day and this gift. I am so glad you are part of our family. I love you very much.\"\n\n\"I love you too, son!\" she replied, obviously thinking of Mark as her own child too. Tina and I were touched that Trish felt the way she did for our kids. In all honesty, I would have been disappointed if that bond had not developed. \n\n\"Oh, and you both need to look inside your envelopes.\"\n\nTrish had taped a Gander Mountain gift card in Mark' envelope and a Victoria's Secret gift card in Ellen's.\n\n\"Thank you Aunt Trish\" they replied. \n\n\"Whitney! Look!\" Ellen beamed.\n\n\"Awesome! That'll be fun to use!\" Whitney answered.\n\nMark then surprised me by turning to me and embracing me. \"That Beretta is the coolest gift ever dad. I love it.\"\n\n\"I'm glad you like it son. It was a great honor for me to give it to you. I'm very proud of you.\"\n\nIt was Ellen's turn to thank me now. She wrapped her arms around my neck and molded her body to mine in a not-so-daughterly way. \"Thank you daddy\" she cooed in my ear. \"This might be the best birthday ever.\"\n\n\"I'm glad you enjoyed it\" I said, trying to get a little distance between us.\n\nEllen finally released her hold and me and returned to her seat.\n\nWe spent the rest of the evening on the deck enjoying the conversation, warm weather, and more wine than I anticipated. I know I had at least three glasses, and I had forgotten to pay attention to how much the kids were drinking. It was pretty obvious Ellen had more than the one glass we allowed her, She wasn't drunk but she was becoming quite uninhibited and was openly ogling Trish. Much to her credit, Trish did a great job of not encouraging Ellen.\n\n\"Anyone wanna go for a late night swim?\" Ellen asked.\n\n\"I'm in!\" Whitney volunteered enthusiastically. \"What about you, Mark?\" she asked, a detectable amount of desire in her voice.\n\n\"Nah, not tonight. You two wore me out in the pool today. Time to hit the rack\"\n\n\"Mrs. P? Aunt Trish? Mr. P?\" Whitney offered.\n\n\"Thanks for asking Whitney, but we all have to work tomorrow. Rain check?\" Trish offered for all of us.\n\n\"No problem. Some other time.\" Whitney answered with a smile.\n\n\"Let's get changed\" Ellen suggested.\n\nWhitney and Ellen were off to Ellen's room to change and Mark shuffled off to bed.\n\nBefore walking into the house he stopped and turned to us. \"Thanks for a great birthday. You guys are the absolute best.\" Then he turned and walked to his room before we had a chance to respond.\n\n\"I, for one, need to be out of here before the girls come back. See you in a bit\" I said and headed to bed.\n\nOnce upstairs I used the restroom and stripped for bed. I pulled the covers back and lay down on the cool sheets. As I replayed the events of the day, it didn't take long for my cock to respond. I recalled seeing my daughter eating pussy and fucking her brother; Mark plunging into the beautiful Whitney; Whitney's tight, firm body as she paraded through the kitchen before dinner; Trish's cock fucking my ass to orgasm. It had been one hell of a day.\n\nTrish and Tina, holding hands, came into the room a few minutes after me. Tina looked at my state of arousal and said \"I'm glad to see you remembered what I wanted tonight, stud.\"\n\nI smiled.\n\nTrish and Tina both went into the newly remodeled master bath and closed the door behind them. When they emerged a few minutes later, Tina was wearing a pair of white thigh high stockings and Trish had on a black garter belt and a pair of dark black stockings. The sight of the two of them, dressed to indulge me in one of my fetishes, was incredible. I never cease to be amazed how sexy it is to see a curvaceous woman in silky lingerie. And if that woman also has an erect cock it's almost enough to make me cum. \n\n\"Oh-oh-oh-oh God you two are beautiful!\" I said, totally enthralled by the two beauties in front of me.\n\nTina sashayed to the bed, crawled on, spread my legs up and out and positioned herself between them. She began thrusting her pubis into me as if she was fucking me. I love it when she does that. \"Can I get a rain check on that?\" Tina asked as she released my legs, straddled my hips, and lowered herself on my pole. The feel of her velvety soft pussy and the smoothness of the silk stockings on my thighs nearly sent me through the roof.\n\n\"I've needed this since lunch Clark. God, you feel good inside of me!\"\n\n\"You're dripping wet honey\" I said.\n\n\"I haven't stopped dripping since watching the kids this afternoon. The swimsuits and the flirting didn't help either.\" Tina thrust her hips forward and back on my manhood, not even trying to slide up and down. The sensation was incredible for me, and I learned her piercing stimulated her clit when she fucked me like this.\n\nTrish got on the bed to my right, her erect cock framed by the belt and straps of her garter. \"See anything you like baby?\" she asked in an incredibly seductive voice. I nodded and licked my lips, signaling Trish to move closer. \n\nTrish inched closer to my face, pushed her very hard cock down so it was pointed at my mouth and forced it in. A satisfied moan escaped her lips. Trish grabbed my head with both hands and began thrusting into my mouth. I wasn't going to blow her tonight, she was going to fuck my face. I reached behind my shemale wife with one hand and began running my fingers up and down the crack of her ass, focusing on her sensitive entrance.\n\n\"You are such a good little cocksucker, baby\" she uttered before turning and kissing Tina thoroughly and passionately extracting a whimper from Tina.\n\nWhat an experience I was having at that moment. My wife was using my cock to masturbate, my other wife was fucking my mouth with her cock, and the two of them were engaged in a lustful, orgasm inducing tongue kiss. I transitioned my fingers so I could plunge them into Trish's chute, sinking two fingers in to the hilt. A guttural moan, a growl, worked it's way out of Trish's throat while she continued to devour Tina's mouth. \"Oh.Fuck.Yes! Fuck my ass baby!\" Trish exclaimed as I sawed my fingers in and out of her luscious hole.",
        "We stayed in these positions, fucking and sucking like it was our last time we'd ever be together. I was in heaven, making love to the two women I love most in the world. The sensation of Tina's sopping wet pussy and the motion she was using to fuck me began to overwhelm me and brought me to the point where I could not stop my approaching orgasm. \"I'm gonna cum\" I mumbled around Trish's cock.\n\n\"Give it to me baby. Give me your cum!\" Tina bore down even harder on my cock which stimulated her clit in earnest. \"Come on baby! Make me cum with you! Fuck me Mark! Oh God! Make your mommy cum!!\"\n\nThat sent me over the edge and my cock erupted inside my wife's spasming pussy, my cum splattering the walls of her vagina.\n\n\"I'm cumming honey! Mommy's cumming on your cock! Ooooh YES YES YES!\"\n\nI looked up at Trish and saw that her eyes were wild with lust at what she had just heard her wife say. Trish turned, her wild eyes locked on mine. \"That was so fucking hot, baby!\" she said as she increased the rate of her thrusting, indicating she was close. \"I can't believe how much that turned me on. Are you ready for my cum, baby? Are you ready for Trish to fill your mouth with her girl juice?\"\n\nI answered by increasing the suction on her cock and slamming my fingers into her ass.\n\n\"Ooooh YES! You are such a good cocksucker! Swallow my cum!\" she encouraged as she spewed rope after rope of creamy white syrup into my mouth and down my throat.\n\nI love sucking Trish's cock and swallowing her cum. Even after Trish's ejaculation subsided I continued to suck, worship, her cock and slide my fingers in and out of her ass.\n\nTrish had let go of my head and now held Tina's face in her hands, gazing lovingly into her eyes. \"You are a naughty little slut, and I love that about you\" she said and kissed Tina deeply, lovingly, in what I have come to call a 'soul exchanging' kiss. They had become so much more than lovers.\n\n\"I would love to keep making love to your mouth, but I want my husband's cum\" Trish said as she pushed Tina to her back, knelt between Tina's splayed legs and ate her well fucked pussy. \n\n\"Ooooh fuck Trish! I love how you eat my pussy! \n\nTrish's ass was high in the air, open and inviting as she ate Tina. I knelt behind Trish and proceed to adore her bud with long languid stroked of my tongue from the base or her scrotum to the top of her crack. Flattening my tongue, I pressed against her anus while applying pressure to her perineum with my thumb. I continued to rub and pressure her perineum with my thumb, but now pointed my tongue and wiggled it against her asshole. I felt her relax and my tongue slipped inside. I alternated swirling my tongue inside her smooth hole and plunging it in and out like a little cock.\n\n\"Eat my ass baby!\" Trish said before redoubling her effort on Tina's pussy.\n\n\"You're making me cum honey! Oh God! I'm cuummmmiiinng!\" Tina exclaimed. Tina's hands were on the back of Trish's head, holding the worshipping mouth to her sex. \n\nTrish continued to lick and suck at her wife's labia and clit and was rewarded with globs of my cum as it pulsed from Tina's spasming hole. Trish lapped up my cum and held it in her mouth. She disengaged from her lover's pussy and made her way up Tina's body until their breasts were pressed together and Tina's legs wrapped around Trish's waist. Trish extended her tongue and allowed a dollop of my cream to roll off the end into Tina's waiting mouth. The two women swallowed the cum in their mouths then engaged in another deep kiss.\n\n\"That was incredible Trish\" Tina gasped.\n\n\"Which was better, me eating you well fucked pussy, or cumming on your sons cock?\"\n\nTina looked at Trish and I with questioning eyes. \"What do you mean?\" Tina asked.\n\nTrish lovingly stroked her wife's face with the back of her hand and said \"You called out Mark's name when you came on Clark's cock. Freudian slip much?\" Trish chided, a knowing lustful grin on her face.\n\n\"I'm so sorry Clark. I... I... I guess I was just overcome with the events of the day...\"\n\n\"It's OK honey. Really. After what we saw today, don't think for a minute that I didn't imagine Whitney was riding my cock and fucking me.\" I said.\n\n\"And I was imaging I was eating our son's cum out of our daughter's pussy\" Trish added before lovingly kissing her wife's full lips. \"You were just the only one that put it into words.\"\n\nTrish rolled to her side, Tina's legs still wrapped around her, and continued to kiss her wife's mouth and pet her naked body.\n\nPulling the sheet over us, I spooned Tina, my semi-erect cock in the crack of her ass, and a firm boob in each hand and fell asleep.\n\nSuddenly I was awake. I glanced at the clock and saw it was 2:00am. Trish and Tina were sound asleep, still locked in an intimate embrace.\n\nNot wanting to disturb my sleeping lovers I gently rolled out of bed to use the restroom. On the way back to the bed I thought I heard something outside. The kids had to be in bed at this hour, so I quietly opened the patio door and stepped onto the balcony to investigate.\n\nWell, the kids weren't in bed. At least some of them weren't. Whitney and our daughter were enjoying an intimate moonlight skinny dip. Whitney had her back to the side of the pool, her arms outstretched holding herself up. Ellen was pressed against her girlfriend feverishly kissing the gorgeous blonde, their tongues darting and twisting in the other's mouth. \n\nI silently moved to the corner of the balcony, hoping to be hid by the shadows. I wanted to watch this beautiful event unfold.\n\n\"I want you Whitney. Follow me\" Ellen begged\n\nThe two lesbian lovers silently stroked to the shallow end of the pool.\n\n\"Lay down\" Ellen demanded. Whitney lay on her back, her head just out of the water, the rest of her body was in the shallow pool. Ellen crawled on hands and knees out of the water, approaching her lover like a sexy cat about to devour it's prey. Ellen's ass was raised, her back was swayed causing her hips to rotate up. Her firm breasts hung down in front of her. This pose screamed 'SEX'!\n\nThe sight of my wanton daughter erotically slinking toward the seductive blonde had me hard, and I began to stroke my erection.\n\nAs Ellen approached her lover, Whitney's legs instinctively spread allowing Ellen to move between them. Ellen lowered her chest further, causing her nipples to drag across the top of Whitney's thighs. Ellen held her position between Whitney's legs and rocked her torso to and fro, stimulating her nipples as they continued to scrape on Whitney's thighs.\n\nEllen backed away slightly, spread her lover's legs wide, and lowered her mouth to Whitney's crotch. \"Mmmm, You're pussy is so beautiful baby. I wonder if Trish's is shaved too\" Ellen hummed before enveloping Whitney's mound.\n\n\"Oooh Ellen! I've waited all night for this! Eat my pussy! Eat me, honey!\" Whitney cried. Ellen's eager mouth never left her friend's sex. Whitney's hands were busy massaging her own breasts and rolling her achingly hard nipples between her fingers. From my secluded perch I could see Whitney's hips beginning to roll and buck against Ellen's mouth. Our daughter was obviously a skilled pussy eater, bringing her lover to the brink of an orgasm in a matter of minutes.\n\nMy hand was now flying up and down the length of my engorged shaft.\n\n\"I'm so close honey! Finish me! Ooooh YESSSS!\" Whitney's cry announced the arrival of her orgasm and her hips lurched involuntarily against Ellen's probing tongue. \n\nCum erupted from the end of my cock and landed with successive splats on the patio.\n\n\"Oh my God! Oooh! Oooh! Arrrgh!\" Whitney growled. \"Stop, stop STOP! I'm too sensitive. Get up here and kiss me honey!\" she urged. \n\nEllen moved up Whitney's nubile body and kissed her lover deeply. Whitney wrapped her legs around Ellen and the two began rubbing their mounds against each other.\n\n\"I can taste my pussy on your lips! Mmmm! I taste really good\" Whitney's voice trailed off as she licked her own cum from my daughter's face. The lovers continued their horizontal dirty dance, grinding their pelvises together. \"You are so good at that honey. I love the way you eat me.\"\n\n\"You have such a delicious pussy baby. I could eat you all day.\"\n\nThere was silence as the two beautiful women kissed, basking in the warmth of each other's embrace.\n\nWhitney separated from her lover's mouth and asked \"Do you think it worked? Do you think our little show today got them interested?\" \n\nEllen, with supreme confidence, answered \"I'll be eating Trish's pussy and you'll be fucking daddy's cock by the end of the weekend. I guarantee it!\" "
    ],
    "authorname": "npanxx",
    "tags": [
        "drama"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/my-journey-ch-04"
}