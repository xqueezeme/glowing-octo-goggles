{
    "title": "Love Songs in Age",
    "pages": [
        "LOVE SONGS IN AGE\n\nA gentle romance. The sex, when it arrives, is relatively short but hopefully sweet - I suspect, just as in life, you'll wish there was a tiny bit more of it\n\n \n\nAt the end of the summer it was clear that David was too sick to manage on his own, so I packed in my job and moved in with him. He protested, of course, but I told him it was a horrible school and I was planning to leave anyway. This wasn't really true and he knew it, but he pretended to believe me.\n\nI got a few small jobs doing private tuition. Mainly English, some history, even a little mathematics. A mixture of students, aged between fourteen and eighteen. Some brats, some nice ones. About what you'd expect. Even with my modest savings it wasn't quite enough and after a couple of months the money was starting to run out fast.\n\nSo I was on my best behaviour when I was summoned to meet the Haverstocks. They lived in a very smart part of London where property prices started at eye-watering and moved up from there into the region of the utterly obscene.\n\nI like to think I'm open-minded but, as I waited for their door to open, I suspected that: a) Mr Haverstock worked in the City, b) Mrs Haverstock would be one of those younger wives who enjoyed spending their husband's money, and c) their offspring would be spoilt, unpleasant and probably unteachable.\n\nI was immediately proven right on the first of these. Mr Haverstock did work in the City. He was a monosyllabic man in his sixties, given to staring at you in a cold, unfriendly way, like a butcher eyeing up a side of beef. Mrs Haverstock -- \"call me Gillian\" -- more than compensated by gushing endlessly about how frightfully interesting everything was and how fortunate I was to be able to spend so much time reading books and studying. I resisted the temptation to say that she probably had much more leisure time than I did. And yes, she was a good twenty years younger than her husband.\n\nAnd then there was Isobel, who sat quietly and sullenly and said next to nothing. She was tall for a girl. I'm over six foot and the top of her head would easily have been level with my shoulder. I glanced at her a few times as we spoke about what they were looking for but only once did she hold my gaze and then just for a moment before looking away again. She was slim and moderately pretty but there was a kind of unattractive lethargy about her. Her eyes, for that split second, were vacant and contemptuous. I sensed -- no, I knew - that lessons with her would be frustrating and unrewarding.\n\nBut we needed the money and so I smiled and said what I hoped were the right things. Yes, I could cover both English and history up to pre-university level. Yes, I could work with Isobel over the next three months to coach her for the re-takes of her examinations. Yes, I would be happy to do extra sessions each week to try and give her the best possible chance of passing. Yes, I could give them references.\n\nWe all smiled rather falsely at each other as the interview concluded. They had some other tutors to see and they would be in touch. I suspected that, unlike most other parents, they would actually follow up on my references. Mr Haverstock had that air of somebody who didn't leave things to chance. Half of me hoped that actually I wouldn't get the job. Still... double sessions meant quite a lot of extra money coming in. And the possibility, I suspected, of a bonus if I got her through the exams. Though that seemed a tall order.\n\nI went home and told David all about it. He was more positive -- he always was -- and said that not only would I get the job, it wouldn't be anything like as bad as I feared.\n\n\"So... you're not saying it'll be good? Just... not as bad as all that?\"\n\n\"Kind of.\" David grinned at me. \"I mean... it'll probably be shit. Just not as shit as you think it'll be.\"\n\n\"Thanks,\" I said. \"You're a real rock.\"\n\nThen I kissed him, and helped him undress and get to bed.\n\n**\n\n\"OK,\" I said. \"You got an E in English and an E in history and an A in art.\"\n\nShe nodded. Though the lethargy was still there, even more pronounced now, and it was a very faint nod.\n\n\"An A in art is very impressive,\" I said. \"I'd like to see some of your work sometime.\"\n\nShe just looked at me, more openly contemptuous now.\n\n\"And in order to get into college, you need to get those E's up to at least C's.\"\n\nI knew this already, she knew I knew it, but I was trying to get some kind of conversation going, to establish some kind of common goal we could work towards. It wasn't working.\n\nShe sighed. \"It's a waste of time. It's OK if we just sit here. Read a book or something. Whatever.\"\n\n\"Why is it a waste of time?\"\n\nShe fiddled with her hair. \"Because I'm stupid. There's no way I can do it. The only reason they even let me go to college to sit these exams is because Daddy's got so much money. But I'm never going to pass history or English. Not in a billion years.\"\n\nI nodded thoughtfully.\n\n\"Do you read?\" I asked.\n\n\"What?\"\n\n\"Do you read? Books.\"\n\n\"Yeah. Of course. But... I just read crap. Mummy always says I read total trash, but she likes it herself too, I know she does.\n\n\"Me too,\" I said. \"Sometimes a good trashy book is just what I want.\"\n\n\"Wow,\" she said sarcastically. \"We're really connecting, aren't we? Well done!\"\n\nI laughed at that.\n\n\"You're right,\" I said. \"We have nothing in common. Except... we both read books. And that's something. That gives you a chance, if you want to take it.\"\n\nShe looked at me, contempt still predominant but a little more questioning this time. \"That's bullshit. And you know it.\"\n\n\"I don't think so. But we've got three months to find out. What are you reading at the moment?\"\n\nShe looked surprised. \"What does that matter?\"\n\n\"Just tell me, if you don't mind. So - what are you reading at the moment?\"\n\nShe reached into the bag beside her and rather diffidently pulled out a battered paperback. The Gatekeeper's Daughter.  By an Elizabeth Jones. I picked it up and read the blurb on the back. Apparently it was a \"racy historical romance.\" It sounded completely awful.\n\n\"You've nearly finished it,\" I said, noting the folded down page corner about three quarters of the way through. \"Are you a fast reader?\"\n\n\"Stuff like this, sure. I'll probably finish it tonight.\"\n\n\"Good. I'll pick up a copy on the way home. We can discuss it tomorrow.\"\n\nFor the first time she looked genuinely surprised. \"What's the point of that? They're not going to ask me questions about that in the exam, are they?\"\n\n\"Humour me,\" I said. \"It'll be more fun than talking about Shakespeare, don't you think?\"\n\nShe shrugged. It was a gesture I was becoming familiar with. \"Fine. You're the... teacher.\" This last word was delivered with an icy scorn.\n\n\"One more question. Of the books you did have to read for the exams, which one did you like best? Or... which one did you hate the least, if that's easier.\"\n\nShe twiddled with her hair, suspicious of the question but not able to find an immediate reason not to answer it.\n\n\"The Rainbow was OK. I mean, it was boring in places, but... yeah, it was OK.\"\n\nI wanted to press her for more, I sensed there had been something else lurking in that sentence that she'd decided not to say. But that could wait.\n\n\"OK,\" I said. \"I'll see you tomorrow.\"\n\nAgain she looked surprised. \"You're going already? I thought you were supposed to be here for three hours.\"\n\nIt was my turn to shrug. \"Not today. I want to go and read that book you're reading. And I need to go through my notes on The Rainbow again.\"\n\nI got up to go. She looked indignant.\n\n\"Are you going to charge my Dad for the whole three hours?\"\n\n\"Are you going to tell him he shouldn't pay me?\"\n\nShe looked doubtful and I grinned.\n\n\"If you don't tell I'll split the money with you,\" I said. \"See you tomorrow.\"\n\n**\n\n\"Is she attractive? For a girl?\" David was always nosy about things like that.\n\n\"She will be, I think,\" I said. \"She's a bit too... droopy at the moment. Everything's too much trouble, too much effort... negative energy sort of radiates from her. That's not attractive at all.\"\n\nHe picked up the book I'd found at the second-hand bookshop near the station.\n\n\"God, what is THIS?\"\n\nI took it from him. \"The subject of tomorrow's lesson, I hope.\"\n\n\"Jesus! That really is a sacrifice.\"\n\n\"Maybe it'll turn out to be amazing,\" I said. \"If it is, I see that she's written about forty more, so I'll be sorted for my reading for a while.\"\n\nHe studied it more closely and shivered dramatically. \"It looks frightful.\"\n\nI shrugged, then caught myself in the act and turned it into a stretch instead.\n\nHe patted my arm lovingly. \"Anything I can do to help?\"\n\n\"Yes... go and find my books on DH Lawrence and read up on The Rainbow. We can discuss it over supper.\"\n\nHe thought about this. I suspect he flirted with the idea of making another wisecrack but instead he shuffled his way over to the crates of books and started sorting through them. He always knew where everything was. But he was painfully thin and it hurt to watch him. So instead I picked up The Gatekeeper's Daughter and began to read.\n\n**\n\nThe following day we met after lunch. I produced my copy of The Rainbow, a book of essays on DH Lawrence, and my copy of The Gatekeeper's Daughter.\n\nShe eyed the pile of books dubiously. \"Did you really read some of it?\"\n\n\"I read all of it,\" I said.\n\nHer eyes went wide. \"All of it? The whole thing?\"\n\nI nodded.\n\nShe looked resigned. \"You probably thought it was awful trash, didn't you? Daddy says this sort of stuff rots your brain. But all he ever seems to read are business magazines. I don't think I've ever seen him read anything for fun.\"\n\n\"I thought it wasn't bad, actually. Better than I was expecting.\"\n\nShe was suspicious. \"You're still just trying to bond with me, aren't you?\"\n\nI laughed. \"No. I think that's not going to happen. But... I thought she told a pretty good story. I genuinely wanted to keep reading to find out what was happening.\"\n\n\"But she's not a good writer, is she? Not what somebody like you would call good, anyway.\" There was a curl of the lip when she said \"like you\", but I let it pass.\n\n\"She's no stylist,\" I said. \"She's not good on description, her dialogue is quite ponderous, and I think her knowledge of some of the history she uses as the backdrop is pretty... questionable. But...\"\n\nShe waited expectantly, her eyes searching my face.\n\n\"She's very good at plotting, and her characters are really likeable and engaging, and her story absolutely whizzes along and... well, I couldn't wait to see how she managed to get them together at the end. I mean, about fifty pages from the finish I couldn't see how she was going to do it...\"\n\n\"Yes!\" she exclaimed. \"Me neither. That was SO good!\"\n\nThen she remembered that displays of enthusiasm were deeply uncool, and slumped back into her chair.\n\n\"It's not going to help me in the exam though, is it?\"\n\nI shook my head. \"Not directly. But... let's talk about it.\"\n\nWe spent the next forty minutes talking about the story and breaking it down into its component parts. It took her a while, but I think she saw that my enthusiasm for the book was genuine. Or mostly genuine, anyway. I had maybe overstated the virtues and understated the vices of the writing, but it had been a real page turner and I didn't have to exaggerate too much.\n\nThere are few more things more pleasurable, for me at least, than finding somebody else who has enjoyed a book that you've also enjoyed and comparing notes upon it. Things I had found a little far-fetched she sternly defended. She conceded that some of the plot twists were a little unlikely. We agreed that as a story, it had more than a few parallels with Kidnapped, the Robert Louis Stevenson story that she had once seen the film of.\n\nPerhaps I flatter myself, but I think it had been a long time since she had so fully engaged in a conversation. Certainly not a conversation that didn't involve social media or school gossip.\n\nAfter a while I looked at my watch and said we should spend a bit of time talking about The Rainbow. She was less enthused but I think the momentum carried us forward. She had a good memory and although it was some months since she'd read it, sections of it had clearly stuck in her mind very vividly.\n\nThis was all encouraging, but I was aware that I was in a position similar to a horse wrangler creeping up on a particularly skittish colt. One move that was too sudden, too obvious, and she would retreat back into her slumped posture and her infuriating shrugs.\n\nWe were talking about the last third of the book, which focuses on Ursula Brangwen and her emerging sexuality, including a lesbian love affair. This was tricky territory to cover with an eighteen-year-old girl, so I kept the discussion fairly general. She was clearly quite taken by the character though, and I decided to push my luck a little.\n\nI produced another book from my bag. \"Did you ever read this? Women In Love?\"\n\n\"Another DH Lawrence? What's that one about?\"\n\n\"It's the sequel. Did you not know he wrote one?\"\n\nShe shook her head, and looked faintly embarrassed. \"I suppose I should have done.\"\n\n\"Not at all. It wasn't on the syllabus. But... if you're interested in what happened to Ursula, you should really read it. He originally planned it to be all one book, you know, but the publisher made him do it as two volumes and the first one caused such a fuss it was a while before the second one was published.\"\n\n\"Why? Because it... had all that sex in it?\"\n\nI nodded. There was a slightly awkward pause.\n\n\"But... thank god he didn't write The Gatekeeper's Daughter,\" I said, and she giggled. There had indeed been several very detailed and very graphic sex scenes in that, far more explicit than anything Mr Lawrence had felt daring enough to include.\n\nShe picked it up doubtfully. \"Well, maybe I'll read a few pages tonight. Since I've got nothing to read at the moment.\"\n\n\"Yes,\" I said. \"Just the first few pages, and see what you think.\"\n\nWe spent the rest of the time reviewing what she'd studied for history. She made an effort to focus but I could see that history was going to be even more of a challenge. A few times I caught her looking at the cover of Women in Love.\n\nFingers crossed, I thought.\n\n**\n\n\"Oh god,\" said David, when I'd described my day to him. \"She's going to be a Project, isn't she? I can tell.\" He peered at me, as if looking for tell-tale signs. \"You want to Improve Her. You want to be her Special Teacher, the One She Remembers Forever.\" He threw back his head in a theatrical pose, a hand shading his eyes from the imaginary light.\n\n\"Fuck off and pass the vinegar,\" I said.\n\nHe smirked as he did so. We were eating fish and chips, David's favourite. His doctor wouldn't have approved but David was past caring and I couldn't see the harm in indulging him now and again.\n\n\"What about the history?\"\n\n\"We're doing early twentieth century European. Usual stuff: Versailles, rise of Hitler, League of Nations, origins of the Second World War. You know.\"\n\nHe faked a yawn. \"God, so dreary! But at least you can do that in your sleep. Even you know all that reasonably well.\"\n\nDavid's degree was in history. Mine was in English literature. For some reason he considered himself at least my equal when it came to my subject, but in his I was a mere novice in comparison.\n\n\"Yes, I think I can struggle through,\" I said, a little waspishly.\n\nWe ate in silence for a while. I sipped a beer but David was on water. He found it helped him keep the food down. I knew there was still a good chance that in twenty minutes he'd be vomiting it back up, but for now he was enjoying it and that was good enough for me.\n\n**\n\nIsobel admitted that she'd read three chapters of Women in Love. \"I would have read more, but I got very sleepy.\"\n\n\"So you liked it?\"\n\n\"Yes, sort of. Not as much... as the other sorts of books I read. The language takes a while to get into, doesn't it? Or it does for me, anyway. Being a thicko.\"\n\n\"You're not a thicko,\" I said sharply. \"Don't say that!\"\n\nShe looked startled and a little scared. It was the first time I'd raised my voice to her, and I regretted it immediately. But sometimes her relentless denigration of herself was very tedious and grating.\n\n\"Sorry Isobel,\" I said. I was aware of using her name. \"But... you're not thick, you're really not.\"\n\nShe still looked nervous, and again I thought of the image of creeping up on that skittish colt, alert for anything that might spook her.\n\nI tried to make her smile. \"I've taught a lot of thick people. You have no idea.\"\n\nStill no reaction.\n\n\"I mean people who were so thick I wanted to chew my own arm off rather than spend another minute in the same room as them. For the life of me I don't know why I thought that would have helped, I would have just been a one-armed teacher in a room of thick people, but...\"\n\nA glimmer of a smile at that.\n\n\"... you are not even close to being like them. You are smart, Isobel, you read fast, you get things quickly, and believe me - the first few pages every time I pick up a DH Lawrence or a Shakespeare or a Marlowe or even a Jane Austen... it's like... well, it's like the first few minutes of going running, isn't it?\"\n\nShe was relaxing slightly.\n\n\"You're thinking, oh god, why did I go for a run, it's so horrible, I can't do this, I'm going to die, why do I do this to myself, I should just go home and eat cake and biscuits and... and... and...\"\n\nI was running out of inspiration.\n\n\"Trifle?\" she suggested. \"Doughnuts? Lemon Meringue Pie?\"\n\nI gazed at her. \"God, I love Lemon Meringue Pie!\"\n\n\"Me too! But... I never feel like that when I go running. So I'm not sure it's a good...\" She was struggling for the word. \"... analogy?\"\n\n\"What... you just start running and it's fine?\"\n\nShe nodded.\n\n\"God, you're so lucky,\" I said.\n\n\"Or maybe you're just unfit and bad at running,\" she said, smiling quite broadly now. She was really very pretty when she smiled, I noticed.\n\n\"I guess that could come into it.\"\n\nWe looked at each other, pleased with having amused ourselves, and I had the sensation again of having made it through another line of her defences. There were still some -- perhaps many -- to go. But it was progress.\n\nThe rest of the lesson was spent mainly with me telling her a bit about DH Lawrence's life and the history of his novels. She listened quietly, occasionally asking questions, particularly about his most notorious work.\n\n\"Is Lady Chatterley's Lover really that filthy?\" she asked.\n\n\"It's a bit more extreme than some of his earlier works, yes. It was shocking for the time. But now... with the Internet and twenty-four-hour porn catering for every taste...I don't think it would even raise an eyebrow for most people.\"\n\n\"Do you think it's good?\"\n\n\"I don't think it's as good as some of his others. But it's... OK. Middle rank, I would say.\"\n\n\"Should I read it?\"\n\n\"Only if you want to,\" I said.\n\nShe thought about it. \"What about some of the other books I'm supposed to read? We should get on to them, shouldn't we? You know... the Shakespeare and the poetry.\"\n\n\"All in good time,\" I said. \"But I tell you what. Let's read one poem from the Larkin collection, and chat about it a little.\"\n\nShe pouted. Then a gleam came into her eye.\n\n\"OK,\" she said. \"But we'll talk about it while we're running.\"\n\n\"What?\"\n\n\"I want to go for a run. And you can tell me all about the poem as we go around the park.\"\n\n\"But... I haven't got my kit with me.\"\n\n\"You can borrow some of my dad's trainers. He never uses them. I don't know why he even has some. His feet are about the same size as yours. And I've got some spare shorts that are way too baggy for me.\"",
        "Quite why she'd checked out the size of my feet would be a question for another day, I decided.\n\nI hesitated.\n\n\"You worried I'll go too fast for you?\"\n\n\"No. I'm worried I might actually die if I try and run and talk at the same time.\"\n\n\"Aww. I'll go slow, I promise. Come on.\"\n\nAnd so I found myself jogging around the park with her, wearing her father's trainers, some rather snug fitting shorts in a quite eye-catching purple, and the t shirt I'd been wearing underneath my sweater. Isobel was wearing black leggings that left little to the imagination and a cropped white top that revealed an enviably flat midriff below a pair of small but undeniably perky breasts. Men's eyes followed her as we ran past, I noticed.\n\n\"So,\" she said, just as conversationally as if we'd been back in the house. \"Tell me about Larkin. I mean, I just didn't get any of his poems at all. They were so... I don't know... gloomy and weird.\"\n\n\"He was a disappointed man,\" I wheezed.\n\n\"What was he disappointed about?\"\n\n\"He... he thought... most of us spent our lives waiting for something to arrive that... never does.\"\n\n\"Like what?\"\n\n\"Money. Happiness... Sex.\"\n\n\"His poems are about sex?\"\n\n\"Some of them.\"\n\n\"So... he didn't think he got enough sex, and he wrote poems about it?\"\n\n\"Um... well, not just sex... but he.... He did write a lot about how love and sex were a... sort of illusion. We kid ourselves that.... that they're going to be amazing.... and usually they're not.\"\n\n\"I wish I'd known that,\" she said. \"His poems sound a bit more interesting now.\"\n\nI didn't answer, focusing instead of trying to maximise my intake of oxygen.\n\n\"So do you think love -- and sex -- are disappointing?\"\n\n\"I think we should... keep the discussion about... Larkin.\"\n\nShe flashed me a glance. \"I don't think DH Lawrence found sex disappointing.\"\n\n\"No,\" I agreed. \"He definitely thought it was... well... pretty central to everything, really.\"\n\n\"So actually... they're kind of like... two extremes?\" She seemed genuinely taken with the idea.\n\n\"You could certainly make... that argument... sure.\"\n\nShe looked at me again, an irritated glance this time. \"But is it RIGHT? That they're extremes? Opposites?\"\n\nI held up a hand. \"I need to walk for a bit... sorry.\"\n\nShe relented and we slowed our pace right down, though I could see she was barely breaking a sweat.\n\n\"Izzy,\" I said. \"It's not about being right. In English Lit, the study of it, there's often no such thing as 'right'. It's about... being able to make an argument that's interesting and you can support. So -- with Larkin and Lawrence, it could be that there are, like you say... contrasts in their thinking. Using one writer to illustrate another. This isn't mathematics. This is... ideas. And your ideas... well, they're just as valid as anybody else's.\"\n\nShe looked dubious.\n\n\"When we get back,\" I said. \"We'll look at some of his other poems. The ones about love, and yes, the ones about sex. And I want you to tell me how you think his approach is different from Lawrence's.\"\n\nShe considered this, then nodded.\n\n\"That's assuming you don't die on the way back,\" she said cheerfully. \"You're looking pretty awful.\"\n\n**\n\nAnd so we made our way through Larkin's poems. Once we'd read through them a few times I could see the penny beginning to drop, and she made some insightful comments that further reassured me that we were going to get her through this.\n\n\"I hope he's wrong though,\" she said, a few days later when we'd been discussing his poem Love Songs In Age.\n\n\"How so?\"\n\n\"This old woman... she always thought love was going to be the answer... and she's at the end of her life and it never was. I mean... that's pretty bleak, isn't it?\"\n\n\"Yes,\" I agreed quietly. \"It's pretty bleak.\"\n\nShe looked at me. \"And he's so... obsessed with death, isn't he?\"\n\nI nodded, but didn't say anything. I could see she was trying to organise and articulate her thoughts.\n\n\"It makes the world feel like... a very cold place. Whereas The Rainbow, and Women In Love, and the Gatekeeper book... they make me feel warm.\"\n\nShe blushed. \"And not just because of the... you know. Though... I suppose that is part of it.\"\n\nShe fiddled with the book in front of her. \"That's probably a really... what's the word... banal observation, isn't it?\"\n\n\"No. It's not,\" I said. \"And tonight I want you to write me five hundred words on the different philosophies of Larkin and Lawrence regarding life and love and sex.\"\n\n\"I can't do that!\"\n\n\"Sure you can. And five hundred words is nothing. Couple of paragraphs. Set a timer and do it in twenty minutes. Don't spend too long worrying about it. Just do it.\"\n\n\"It'll be rubbish.\"\n\n\"Maybe. But I doubt it. And if it is, we can work on it together and make it better, can't we?\"\n\n**\n\nShe didn't write five hundred words. She wrote over a thousand. And it was repetitive in places, and the structure was a little shaky, but there was some smart, passionate thinking in there.\n\n\"This would easily get you a C,\" I said, the next day.\n\n\"Really?\"\n\n\"And with a small amount of work, it could be a B. No question.\"\n\nShe looked at me suspiciously. But I was being perfectly genuine, and I think she saw that.\n\n\"So... what would I have to do to make it better?\"\n\nI moved and sat down beside her, and started to show her how to structure her essay a little more traditionally. Where she should have added an extra sentence or two to the introduction. Parts of her argument that she was still making in the conclusion, when they should have been in the main body. Places where she'd been repetitive.\n\n\"No more than those four or five changes,\" I said. \"And that's really good quality work. Everything was there. You just need to get in the habit of organising it in the way that examiners like.\"\n\nShe was pleased with herself but trying not to show it. Sitting that close I could smell the soap she must have used that morning. Perhaps it was her shampoo.\n\n\"I still have to pass history,\" she said, looking doubtful again.\n\n\"You can pass History, Isobel. Once you can write essays like this, it'll be a breeze, honestly.\"\n\n\"But... this is quite interesting. History's really boring.\"\n\nI grinned at that. I couldn't help it.\n\n\"What's so funny?\"\n\n\"It's just... I know somebody who would be howling with anguish if you said that. And I can't wait to tell him.\"\n\n\"Oh no... don't... he'll think I'm really stupid.\"\n\n\"He won't. I've told him you're not.\"\n\n\"You have?\" She was intrigued, and a little pleased. \"So... who is it?\"\n\nI hesitated. I'd always tried to keep my personal life private, slyly deflecting any questions that seemed a little too probing.\n\nIsobel studied my face. She looked solemn. \"Is it... your friend? The... one you live with?\"\n\nI looked at her, surprised. It must have shown.\n\n\"Daddy investigated you. Of course he did -- he wasn't going to leave his precious little daughter with some guy who might molest her, would he? One of the big things in your favour was you being gay... my so-called virtue would be in no danger.\"\n\n\"So,\" I said slowly, \"your father... knows I live with a man. And he told you?\"\n\n\"Yes. God -- I hope you're not upset, are you? Please don't be. I mean -- I think you're really helping me, and it would be horrible if you left... and I had to start with somebody else. Please don't be upset.\"\n\nI stared at her. \"I'm not upset,\" I said.\n\n\"Promise?\"\n\n\"Promise.\"\n\nI got up. \"I think we should probably call it a day, Isobel.\"\n\n\"You are upset! I knew it. God! I shouldn't have said anything!\"\n\nI held up a hand to hush her.\n\n\"Would you like to meet him?\" I said.\n\n**\n\nIt was a twenty-minute tube ride to the flat. When we got there David was asleep on the sofa, my copy of The Gatekeeper's Daughter beside him on the floor. He looked unspeakably pale and wan and for a dreadful moment I thought he might have died in his sleep but as we came into the room he stirred and opened his eyes.\n\n\"What the fuck are you doing home so early?\" he said drowsily but amiably.\n\n\"Language,\" I said reprovingly. \"We have a guest.\"\n\nHis eyes opened wider, and he spotted Isobel lurking a little shyly on the far side of the room.\n\n\"Isobel!\" he exclaimed. \"How lovely!\"\n\nShe blushed, and came a little closer. \"Yes -- hello. How did you know who I was?\"\n\n\"Oh, he tells me all about you.\"\n\n\"Does he?\" She glanced at me questioningly.\n\n\"Isobel -- this is David,\" I said quickly. \"My brother.\"\n\n\"Your brother!\" She stared at both of us.\n\n\"Hard to believe, isn't it?\" said David, smiling weakly at her. I could see that he was perking up. \"Not really fair. I got the looks and the brains, and poor old Mikey... well, he somehow gets by with the little he has.\"\n\n\"Oh stop it,\" I said. \"I brought her here so she could tell you in person how boring history is.\"\n\n\"Well, of course it is - the way you teach it! The way most people teach it. Poor Isobel's never had the benefit of learning from somebody like me.\"\n\n\"Oh for God's sake,\" I said. \"I'm going to make some tea.\"\n\n\"Yes. You do that. Come and sit by me, Isobel. I want to talk to you about this wonderful book you've found for us.\" He sat up and patted the space beside him. As I left the room he was already chatting to her like they'd known each other for years, and I could see her relaxing and being caught up in his infectious charm and impish humour. He always had that gift.\n\nWhen I returned with a tray of tea and biscuits he had somehow dragged the conversation around to the Paris Peace Conference and the Treaty of Versailles. He was telling her about all the personalities, making it sound more like a bitchy teen drama than a ponderous, stuffy conference. I don't think she followed all of what he was saying, but she was totally transfixed by him and doing her best to contribute and keep up. I was reminded again of the other great gift that he had. He made you want to please him. Not in an oppressive way, but you always somehow wanted to be at the top of your game when you were with him.\n\nI confess, watching them together, I felt a small pang of jealousy.\n\nWhen we were sipping our tea Isobel retreated slightly into herself again, and I saw her looking curiously back and forth between us.\n\n\"Isobel's parents had me investigated before they hired me,\" I said.\n\n\"Quite right too.\" David dunked a biscuit in his tea. \"And yet somehow they still hired you. Wonders never cease.\"\n\n\"Well... turns out the reason they hired me is because I'm gay.\"\n\nDavid paused, his biscuit still submerged. His mouth fell open, and a huge, delighted grin spread over his face.\n\n\"No! Not really!\"\n\n\"Apparently so.\"\n\n\"O -- M -- G. If only I'd known! My little brother, a screaming queen like me!\"\n\n\"Hold on,\" said Isobel, turning to me. \"So... you're not gay?\"\n\nIt was David who answered. \"Only one gay in this household, sweetie, and despite my manly, macho, manner... you may have somehow guessed that it's me.\"\n\nNow it was Isobel's turn to be open-mouthed.\n\n\"Fuck,\" she finally managed.\n\n\"Yes. Very good summary, Isobel. 'Fuck', indeed. I think your father should get a refund from whoever investigated us.\"\n\n\"Might be best... not to tell him,\" I said carefully. \"But... it's up to you, Izzy.\"\n\n\"Shit.\" Isobel was still digesting this thunderbolt.\n\n\"I can certainly see why Mikey speaks so highly of your language skills.\"\n\nI gestured at David that was quite enough for now, thank you.\n\nIsobel was staring at me. \"So, all this time... you've not been gay?\"\n\n\"All this time,\" I agreed. \"Sorry. But... to be fair, I had no idea you thought I was.\"\n\n\"Do you have any plans to become gay?\" asked David, with interest. He was enjoying himself hugely.\n\n\"No,\" I said. \"No plans.\"\n\n\"Mmm. Just as well. You wouldn't be very good at it, I don't think. Your whole sense of style... taste in music... even your walk... no, you would be the worst gay ever.\"\n\nI glared at him. \"So... it's fine for you to play up gay stereotypes, but when anybody else does it, you're all morally outraged?\"\n\n\"That's right, duckie.\" He turned to Isobel. \"I'm afraid you're stuck with him as a raging straight. Do you have any Mace? Just in case he can't control his lust?\"\n\nShe rolled her eyes. \"My dad is going to go ballistic.\"\n\nThere was a silence while we all thought about this.\n\n\"Well,\" said David, \"we'll just have to keep it a secret for a while longer, won't we?\" He looked at me, eyes gleaming. \"I'll give you a few tips on how to be more convincing as a homosexual.\"\n\n**\n\nThe next day when I arrived I thought there was something different about her. It took me a while to work it out. Actually, it was a number of small things. Her hair, usually tied back carelessly in a ponytail, was now brushed and shining and fell elegantly to her shoulders. Her clothes seemed a little more feminine than usual. And there was the very faintest trace of perfume, which I'd not ever noticed her wearing before.\n\nShe probably thought she was being very subtle. And I suppose she was. I was amused and touched in equal measure, and carefully didn't mention any of the changes. There was no need to read anything into them. It was just a young girl who'd been made aware of a slight change in circumstances, one where her femininity had perhaps more relevance than she'd thought. It was even possible, I reflected, that she'd done these things without any awareness of them. That they'd been entirely subconscious.\n\nMost noticeable of all, however, was her attitude. Over our time together we'd progressed from her initial torpor to a more semi-engaged level, but I'd never felt she was wholly committed to the work. Probably because she doubted herself. But now she was much more questioning and involved, probing and challenging in a very open, reflective way which I found refreshing. It is always tiring when you're teaching to have to expend a lot of your effort on breaking down barriers. Now we were able to exchange ideas and develop them. Not as equals, not yet, but with an intensity and lack of self-consciousness that delighted me.\n\nWe spent several hours going over the two Shakespeare plays she had to study, and then I said we had to switch to history. I'd expected some resistance to that, but to my surprise she nodded, and started to gather up her things.\n\n\"What are you doing?\"\n\n\"Getting ready to go.\"\n\n\"Go where?\"\n\n\"Your place, of course. I'm doing history with David.\"\n\n\"What?\"\n\n\"Didn't he tell you?\"\n\n\"No! And... he can't! He's not well enough.\"\n\n\"He said he could teach me even with his eyes shut. And he said it would make him feel useful again. If he gets too tired, I'll stop, I promise, but he said this first time I was to just ignore whatever you said.\"\n\nShe looked at me, a little sheepish but also quite determined.\n\n\"So... when did you discuss all this?\"\n\n\"Last night. On WhatsApp. We swapped numbers yesterday while you were clearing up.\"\n\nI glared at her, but mainly I was cross with David.\n\n\"He's... a bloody idiot!\"\n\n\"No, he's not,\" she said. \"He just wants to be useful. While he still can. So - I think you should let him try.\"\n\nShe finished packing up her things, then got up.\n\n\"Coming?\" she said.\n\n**\n\nThey spent the best part of three hours discussing the years following the First World War. I sat somewhat sulkily off to one side. Occasionally I contributed the odd titbit, and a couple of times David asked for some tea, but mostly I listened. He was at his absolute best that first afternoon, I think. He could swoop from the broadest overview to the most fascinating tiny detail in the space of just a few breaths. And from Isobel's questions and tone of voice I could tell she was equally gripped.\n\nAt the end he gave her some reading suggestions -- nothing too onerous, just a couple of chapters from one of the few textbooks he approved of. And he told her that night she should walk around her bedroom and review what they'd discussed, acting as if she was a teacher.\n\nShe looked at him, perplexed. \"Act like a teacher?\"\n\n\"That's right. Imagine you're the teacher, standing in front of a class of horrible boys and girls a few years younger than you, and you're trying to tell them about how the end of the First World War ended up being the start of the Second. Just like I've been doing.\"\n\n\"But... I could never do it as well as you.\"\n\n\"Of course you couldn't,\" agreed David. \"But pretend you're the next best thing. Somebody who's learnt from me. And really show off. Have confidence that you know a lot more than they do. Really do a performance for these imaginary horrors.\"\n\n\"But I won't remember everything!\"\n\n\"Well, then stop and look it up. But don't treat history as something you have to keep in your brain like a boring collection of dried up dates and names. Treat it as if you're going to go on stage and tell it like a story and everybody's going to be spellbound and hugely impressed.\"\n\nShe looked doubtful. \"Well... I'll give it a try.\"\n\n\"Good girl. Now, you've worn me out.\" He paused. David could never resist a smutty aside when it presented itself. \"And I expect I'm not the first beautiful young man who's said that to you, am I?\"\n\nThere was a silence. Then she picked up her pad of paper and playfully whacked him on the leg with it. \"Stop it! You're AWFUL!\" She was blushing and laughing in equal measure.\n\nDavid clicked his fingers imperiously at me. \"Time to escort this young lady home, I think.\"\n\n\"Oh no,\" said Isobel to me. \"You don't need to do that.\"\n\n\"Maybe not, but I will anyway,\" I said. \"Come on.\"\n\nI looked at David. \"Now, have a snooze while I'm gone, for god's sake. You need some rest.\" But actually he looked remarkably well, better than I'd seen him in some months.\n\nOn the way back Isobel looked at me as we stood on the underground platform together, waiting for our train.\n\n\"Is he very ill?\"\n\n\"Yes,\" I said, quietly. \"Two years ago... the doctors gave him eighteen months.\"\n\nThere was a pause. \"Has he always been such a dreadful flirt and show-off?\"\n\nI smiled. \"For as long as I can remember, yes.\" To my alarm I found my eyes were watering slightly, so I looked away and pretended to study an advert on the wall opposite.\n\nI felt her hand snake into mine and give it a brief squeeze. And then it was gone.\n\n**\n\nWe worked like that for another two months. I would spend several mornings at their house, but more often than not Isobel would come to our flat to study. Her parents were often out and her communication with them seemed to be almost entirely electronic. So as she said, it didn't really matter where she was, as long as the work got done. I supposed that was true, but I felt a little sorry for her. I knew more than most how small rifts and resentments between parents and children could deepen and solidify over time.\n\nThe one downside was that David would often interrupt when I was talking about literature, complaining that I was being pompous or opaque or -- most frequently -- just plain wrong. But sometimes Isobel would leap into defend me, and I could sit back and watch her counter his arguments with a combination of her ideas and mine. And when that happened I would sometimes catch David's eye, and he would give me an almost imperceptible nod of approval. Sometimes, to his even greater delight, she would agree with him, and I would be forced to try and defend my position against their combined onslaught.\n\nOften our days would end over a board game. David would always win at chess, I had a lucky streak at backgammon, and Isobel proved herself surprisingly ruthless at Monopoly. I can still remember David's despairing wail when she refused his request to defer his rent payment when he landed on one of her hotels. He called her a heartless capitalist bitch. She called him a grouchy old queen. After that the insults multiplied rapidly until we were all almost helpless with laughter.",
        "Other evenings, when David was feeling tired, we would just sit and watch a film or just read. Isobel was working her way through all of DH Lawrence. David and I were both making our way through the later volumes in The Gatekeeper's Daughter universe.\n\nThen, before we knew it, the time arrived for her to sit her exams again. Her confidence, which had been building rapidly, suddenly seemed to evaporate the day before. To boost her morale David insisted on coming with us to the examination centre, though it was painful to see how he struggled now. Just before she went in he surprised her by wrapping her in a bear hug and whispering something into her ear. She coloured, smiled, then kissed him on the cheek. Then she shyly looked at me before turning and disappearing inside.\n\n\"God,\" I said. \"If she doesn't pass I'm going to be a wreck.\"\n\n\"She'll pass history,\" said David confidently. \"The English more of a lottery. But I think she'll be fine.\"\n\nThen he smirked at me in that familiar way, and I sighed, and lent him my arm to lean on as I helped him shuffle back to the tube station.\n\n**\n\nThere was a six-week interval between her sitting the exams and getting the results. For a lot of that she was away, first with some cousins on a tour of Canada, then with a group of friends for what I assumed would be a fairly hedonistic fortnight in Ibiza. I still had a handful of other students to look after, but her absence left a surprisingly large hole in both our lives. She kept in contact, but I was a little jealous to find that she seemed to communicate more with David than me. Four or five times a day his phone would beep with a new message from her. He would read them and either chuckle, curse or roll his eyes, but he refused to share anything but the most basic of details. I would get an email once or twice a week, a little more formal and self-conscious, telling me of places she'd been and what she was reading, and although I welcomed them they left me feeling a little dissatisfied.\n\nIt was during this time that David's health began to decline more alarmingly. His breathing became more laboured and we had to use his oxygen mask more often. We both knew that he was unlikely to see out the year, but we never spoke of it.\n\nWhen she returned from Ibiza I think we were both rather pleased that she came around to see us within a few hours of landing. She looked wonderful, glowing with health, and her normally rather pale skin had gone a soft bronze in the sun. She hugged me and then fussed over David, which he pretended to complain about but which I could see he was absolutely relishing. Quite simply, our lives felt brighter for having her back with us, even if it was just for a short while.\n\nI cooked us a casserole for dinner -- another of David's favourites -- and listened to her telling us about the delights of all-night partying. It sounded horrendous to me, but David had been quite a clubber when he was well and had spent a summer there himself, so the two of them had lots to talk about. I listened from the edges, feeling a little left out but still delighted to have her there.\n\n\"So -- when do you get the results?\" I knew the answer, but I wanted to muscle in on the conversation.\n\n\"This Friday. They should email them to me around 9 or 10 in the morning, they said.\"\n\n\"Not the same as ripping open an envelope,\" grumbled David. \"So much more dramatic when you can do that.\"\n\n\"Will your parents be there?\"\n\n\"No... well, actually I've told them I won't get the results until the evening.\"\n\n\"Why?\" I was surprised.\n\nShe looked a little sheepish. \"Well... I'm a bit nervous about getting them. And... I kind of feel I'd like to do it -- find out about them -- with you two there. So... would you mind if I came over first thing and just waited with you?\"\n\n\"No problem at all,\" I said.\n\n\"I've got a better idea,\" said David. \"How about a sleepover?\"\n\n\"What... you mean stay here?\"\n\n\"Yes. Perfectly comfortable sofa. We've got a sleeping bag somewhere. That means we can stay up late the night before and watch old films, and then we'll all be here and ready at the crack of dawn. No need for you to rush over. Much nicer.\" He peered at her. \"Unless you're planning a wild night on the town?\"\n\n\"God no.\" She looked at me. \"Would that be OK with you?\"\n\nDavid was dismissive. \"Of course it'll be all right with him.\"\n\n\"Yes,\" I said. \"It would be fun. If your parents don't mind.\"\n\nShe sighed. \"You make me sound like I'm still ten years old. I'll be nineteen next month. Practically ancient. So if my parents don't like it, they can get stuffed. But honestly, even if I told them, I don't think they'd mind.\"\n\nI wasn't sure about that, but I kept my counsel.\n\n\"Well then,\" said David. \"It's a date.\"\n\nI may have been wrong, but I thought he and Isobel exchanged glances when he said that.\n\n**\n\nDavid fell asleep half way through The Silence of the Lambs. Isobel and I decided that the best thing was to put a blanket over him and let him sleep there on the sofa, and she'd sleep in his room.\n\nShe helped me tidy away the plates and glasses, neatly organising them in the dishwasher. She wore tight blue jeans and a faded grey t-shirt, and I was very aware of her as we chatted quietly in the kitchen.\n\n\"Well,\" I said a little awkwardly. \"You know where everything is. Sleep well, Isobel.\"\n\n\"I doubt I will,\" she said. \"Too nervous.\"\n\n\"You'll be fine. Honestly.\"\n\n\"I just don't want to let anybody down. You, David -- even my parents. They're trying to be cool about it, but I think they'll be really crushed if I don't do a bit better this time.\"\n\n\"Well, my guess is that they want it for you,\" I said. \"Not for them. They want you to have choices. That's all. And exams can open some doors.\"\n\n\"You think? I think I embarrass them sometimes.\"\n\n\"I doubt that very much,\" I said. \"They probably don't understand you sometimes, but... you're a teenage girl. Nobody understands them except other teenage girls.\"\n\nShe smiled a little at that, then looked more serious.\n\n\"Are your parents still alive?\"\n\nI hesitated before answering. \"My father is. My mother died a few years ago.\"\n\n\"Does he ever visit?\"\n\n\"No.\"\n\n\"Why not?\"\n\nI paused again, trying to find the words.\n\n\"You can tell me it's none of my business if you want.\"\n\n\"He... blames David for my mother dying, I think. She was always rather frail and a little... self-absorbed. When he told them he was gay, she had a kind of nervous breakdown. Ridiculous -- like we were living in the 1950s. And her health went downhill after that.\"\n\n\"God. That's awful! Poor David!\"\n\n\"Yes,\" I said. \"She was a spiteful, petty little woman. I think she liked the idea of dying because one of her children had disappointed her. The ultimate way of guilt-tripping us, really. Anyway, my Dad hasn't spoken to him since and he told me I should have nothing to do with him either.\"\n\nI looked at her. \"And as you've seen, I couldn't imagine a life without David in it.\"\n\n\"No,\" she said. \"Nor could I, now.\"\n\nThen she reached over and kissed me gently on the cheek. I looked at her. I wanted to reach out and hold her but I knew that would be wrong. So I just put out a hand and stroked her hair for a moment.\n\n\"Sleep well,\" I said. \"It'll be fine tomorrow, I promise.\"\n\n**\n\nBut we were all nervous. We had a rather subdued breakfast together, our eyes darting from each other to Isobel's phone on the table and back again. Even David's usual joie de vivre had temporarily deserted him.\n\nIt was about half past nine when the phone finally buzzed with a new email alert. She picked it up cautiously, typed in her pin code, then looked at both of us in turn.\n\n\"I'm too scared to look,\" she said. She turned to David and me and held the phone out to us.\n\n\"One of you do it,\" she said. \"Please.\"\n\nDavid shook his head. \"This is your moment, Isobel. Enjoy it. You've passed. Trust me.\"\n\n\"But... how can you know?\"\n\n\"Read it and tell me I'm wrong.\"\n\nShe reluctantly swiped the message open. There was a brief pause, and then the colour seemed to drain from her face.\n\n\"Fucking hell,\" she said. \"Fucking -- FUCKING -- hell! No fucking way!\"\n\nThen she looked at us. Her eyes were wet and shining.\n\n\"B in English and a B in History,\" she said. \"I can't believe it!\"\n\nDavid whooped and I rushed over and hugged her. After a moment's stiffness I felt her body relax and she hugged me back fiercely. I squeezed her so tight I think she found it hard to breathe.\n\nThen we were all laughing and crying at the same time. David produced the bottle of champagne we'd been hiding in an ice bucket behind the sofa and, we toasted Isobel, David, me, DH Lawrence, Philip Larkin, Shakespeare and everybody who'd attended the Paris Peace Conference in 1919.\n\n\"I must just text my parents,\" she said. \"I guess they should know too.\"\n\n\"No,\" said David quickly. \"Call them. Please.\"\n\nShe looked doubtful. \"I find it hard to speak to them on the phone.\"\n\n\"Just this once,\" he said. \"For me. It'll mean so much to them, I promise you.\"\n\nShe looked at me, and I nodded.\n\n\"OK,\" she said. \"I'll... go into the kitchen and call them. Back in a minute, OK?\"\n\nShe went out of the room, shutting the door behind her.\n\n\"I can't believe she only got a fucking B in History,\" said David. \"After all that work.\"\n\nBut he was only joking. He was as thrilled as I was.\n\nI let out a huge sigh of relief. \"Well. That's that. Project complete.\"\n\nHe looked at me. \"Is it?\"\n\n\"She can go to college now next year. That was the goal. And I think we can take some credit for that. So yes, our work is done, isn't it?\"\n\nDavid didn't say anything for a moment.\n\n\"I wonder,\" he said. \"I don't think you and her are quite done yet, somehow.\"\n\n**\n\nLater that day, after Isobel had gone off to meet some friends for a celebration lunch, there was a knock at the door. I thought it was probably a delivery driver, but when I opened the door I was more than a little surprised to find Isobel's father there.\n\n\"Oh,\" I said. \"Mr Haverstock. Please... come in.\"\n\nHe came in, his eyes flicking around our rather modest flat. David was sitting at the dining table, and he started to get up.\n\n\"No,\" said Mr Haverstock hastily. \"Please don't get up. I won't be long.\"\n\nHe looked at us both. \"I just wanted to say... thank you. I know you've done a lot more for her than any of her other teachers managed, and I wanted you to know that her mother and I... well, we do appreciate it. Very much. Isobel couldn't be more... complimentary about you both.\"\n\n\"Thank you,\" I said. \"We both think... she's pretty terrific, actually.\"\n\nHe nodded, clearly pleased and a little embarrassed.\n\n\"Anyway... if you'd both like to come to dinner tonight with Gillian, and Isobel and me - we'd be delighted to have you. Just an informal supper. But... only if you're free, of course. No obligation.\"\n\nHe looked at us a little anxiously.\n\nI glanced at David.\n\n\"We'd love too,\" he said. \"Thank you very much.\"\n\nMr Haverstock nodded. \"And... I wanted to give you this. I know you didn't do it for the money, but it always comes in handy, doesn't it?\"\n\nHe passed me an envelope.\n\n\"That's very kind of you,\" I said. \"But there's really no need.\"\n\nI made as if to give it back but David reached over and deftly took it out of my hands. \"No need - but it's very welcome. Thank you very much.\"\n\nIsobel's father laughed. I could see David's charm was already working his magic on him.\n\n\"Well -- we'll see you tonight then.\" He turned to go.\n\n\"Mr Haverstock!\"\n\nHe stopped and faced me again, eyebrows raised.\n\n\"David... is my brother, you know. Not my... partner.\"\n\nHe smiled.\n\n\"Oh yes,\" he said. \"I knew that. I just thought... well, Isobel can be a bit of a flirt sometimes, so I thought if she felt flirting wouldn't work she might concentrate a bit more. Worth a try, anyway, wasn't it?\"\n\nAnd with that he opened the door and was gone, gently shutting it behind him. For once even David was speechless.\n\n**\n\nHe died ten days later.\n\nHe started having breathing difficulties in the morning and nothing seemed to help, so I called for an ambulance. I held his hand all the way there and then when we arrived they took him straight through to the emergency unit. They did their best but he slipped into a coma and I knew then it was just a matter of time.\n\nIsobel found me sitting by his bed in his hospital room. I was holding his hand and talking to him about anything that came into my head. Some say that people in a coma can still hear you. I doubt it's true but I wanted to believe it and if anything I said gave him the slightest comfort or flicker of amusement as he lay there then it was worth it.\n\nShe didn't say anything at first, just went over and kissed him and whispered in his ear that she loved him. Then she came and sat by me, and took my other hand, and we sat there together until he died peacefully early in the evening.\n\nThere was some paperwork to do but everyone was very kind and considerate.\n\n\"Come on,\" said Isobel. \"Let's get you home now. We can sort everything else out tomorrow.\"\n\n\"Yes,\" I said, numbly. \"Er... I suppose.... we should get a taxi, I guess. They can probably order one for us at the front desk.\"\n\n\"No. Mum and Dad are waiting outside. They're going to take us.\"\n\n\"Oh,\" I said. \"That's nice of them. I don't want to be any bother.\"\n\nShe smiled sadly at me and shook her head and led me firmly out of the hospital. Her parents were in the car park. Mr Haverstock patted my shoulder and his wife hugged me. Then I got into the back of their car and stared at the traffic as we drove back to the flat.\n\nWhen we arrived Isobel told her parents she was staying with me. The tone of her voice indicated this was not something that was up for discussion. So, after some final expressions of sympathy, they drove off and Isobel led me into the flat, leading me like a child to the bathroom and telling me I should take a shower while she got us something to eat. I did what I was told.\n\nShe made us some sandwiches and we sat quietly eating them. I had been expecting this day for several years but now it had arrived it didn't seem real. In a minute David would shuffle in and express his horror at the sombre, maudlin atmosphere.\n\nAfter the sandwiches she made us some coffee and then she told me I should go to bed.\n\n\"I'll be in... David's room. If you need anything,\" she said. \"Just... call for me, OK?\"\n\n\"OK,\" I said. \"Thank you.\"\n\nI lay in bed for a long time, staring at the ceiling. I didn't feel like sleeping. I didn't feel anything. The house seemed so empty without him there.\n\nBut I must have fallen asleep, because when I looked at the clock again it was somehow after midnight. Something must have woken me up. I lay there and listened. Perhaps the traffic from outside? But no, the road seemed quiet.\n\nThen I heard it. A distant sob, very faint. But unmistakable.\n\nI got up and padded though into the other bedroom. She was lying there on his bed, with her knees drawn up to her chest. In the faint light from the landing I could see tears were streaming down her face.\n\n\"I'm so sorry,\" she whispered. \"I didn't want to wake you. I wanted to be strong for you. But I'm just feeling so sad.\"\n\nI sat on the bed beside her. \"It's OK,\" I said.\n\nI reached over and took her hand and squeezed it. I started to draw my hand away but she held on tightly. Then she lifted up the blankets.\n\n\"Please,\" she said. \"Hold me for a while. Please.\"\n\nI hesitated, but my need for comfort was almost as great as hers. I got in beside her and lay on my back and she nestled against my side, her head leaning on my chest. I stroked her hair until the tears slowly subsided. Then, after about fifteen minutes, her breathing changed to a heavier, slower sound and I knew she was asleep. Then, lying there in the dark with this sleeping girl beside me, I finally shed some of my own quiet tears for my beloved brother.\n\n**\n\nIn the morning I awoke to find the bed empty. There were some sounds of movement from the kitchen, so I got up, retrieved a dressing gown from my bedroom, and went to find her. She was boiling some eggs and toasting some bread, and I suddenly realised I was very hungry. She was wearing one of David's old shirts that hung to her knees.\n\n\"Good morning,\" she said softly.\n\nShe saw me looking at the shirt. \"I hope you don't mind. I wanted to change into something and... I saw this hanging there... and I just thought... well, it would be nice to wear something of his.\"\n\n\"I don't mind,\" I said. \"I think David would say you looked better in it than he ever did.\"\n\nShe smiled, then fished the eggs out of the saucepan and put them on the table. We sat in silence for a few minutes, focusing on the food and both of us perhaps thinking our own thoughts about David.\n\n\"What will you do now?\" she asked after a while.\n\nI thought. \"Start to go through his things, I guess. Most of it can go to charity shops. A few more valuable things I guess I can sell. If there's anything of his you'd like, please... help yourself.\"\n\n\"No. I don't mean right now. I mean... from now on.\"\n\n\"I don't really know,\" I said. \"I've never really... I didn't like to think about what I'd do... afterwards. It seemed to make it too real. If that makes any sense.\"\n\nShe nodded. \"Yes - it does.\" She paused. \"David said... you should travel. He said you always wanted to, but somehow there was never the opportunity.\"\n\n\"He told you that?\"\n\n\"He talked a lot about you.\"\n\n\"What else did he say?\"\n\n\"Lots of things.\" She stirred her coffee. \"I'm not going to tell you all of them. But... he definitely said you should go travelling.\"\n\nSomething about the way she glanced down when she said this told me there was something more there.\n\n\"Maybe,\" I said. \"It's tempting. David didn't have much money, by the end, but I think what there is he's left to me. And there's a small insurance policy. And... your father gave us a very generous bonus. So... yes. Maybe I should travel, for a few months anyway.\"\n\nThere was a pause. \"What about you? Any closer to deciding which offer you're going to accept?\"\n\n\"Bristol,\" she said. \"Not too far from home, but just far enough.\"\n\nI nodded, and started to clear up the breakfast things.\n\n\"He said you should write,\" she said, suddenly. \"And... he said I should go with you.\"\n\nI was startled. \"What?\"\n\n\"I should come travelling with you. He said... I'd be good for you. And that we should find somewhere quiet, and peaceful, and you could write. He said you'd be good at that.\"\n\nDavid had often told me I should try my hand at writing. But it was one of those things he nagged me about, and I always said there would be time for that later. But perhaps 'later' had now arrived.\n\n\"Maybe... yes,\" I said. I looked at her. \"But I don't need looking after, Isobel. Though it's a sweet thought.\"\n\n\"No. You don't. But... we'd be there for each other. I've got eight months before college starts. Eight whole months. We could... do so much in that time. Travelling, writing... lots of things.\" She blushed.\n\n\"I'm ten years older than you, Izzy,\" I said gently.\n\nShe looked at me. \"What does that matter? Really?\"\n\nHer eyes were on mine, clear and pleading. I didn't know what to say. Except deep within me, it felt like a small flame had suddenly burst into life, thawing the coldness which had been enveloping me. But still I hesitated. I knew that after what we'd been through, it was perfectly normal to feel a roller-coaster of emotions. To suddenly feel the need to reach out and connect to someone, cling to them as a means of fending off the dark.\n\n\"We should... take some time,\" I said carefully. \"Neither of us is thinking straight at the moment.\"\n\nShe thought about this, then nodded, accepting the compromise.\n\n**\n\nDavid, bless him, had already quietly sorted a lot of his things out. I found a printed list on his bookshelf, listing most of his possessions and what I should do with them. Isobel helped me to bag a lot of his clothes and take them to the charity shop, though she kept a few of his shirts for herself. She said they made very good night shirts.",
        "The funeral was well-attended. Very few people who'd met David ever forgot him, and I was touched by how many of them made the effort to come, in some cases travelling hundreds of miles for the service. I sent a message to my father to let him know, but he didn't come. I was relieved, if I'm honest.\n\nDavid had already written a piece for me to read out at the service. I managed to make it through it somehow, even the parts where he teased me affectionately about my various shortcomings. Isobel was there too, sitting quietly at the back with her parents. She looked lovelier now than ever, I thought, seemingly having made that final transition from pretty girl to beautiful woman.\n\nHer parents took her away for a few days after the funeral, a trip to the Lake District. They very kindly invited me to join them but I said I wanted to sort out a few more things. I was pleased to see that Isobel and her parents seemed to be getting on well now, a far cry from that slightly dysfunctional family I'd met just a few months previously. I wanted some time on my own to think about my own plans.\n\nThe more I thought about it, the more David's advice to go travelling seemed like the right thing to do. If nothing else, it would give me something to focus on. The sheer mechanics of getting from A to B to C would distract me, I thought.\n\nAnd writing -- yes, that excited me. I had an idea for a novel, and for several short stories, ideas that had been floating around in my head for several years, and I suddenly felt ready to tell them.\n\nBut as for Isobel coming with me... no, I couldn't take that seriously. It was a romantic notion of hers, but not practical, springing more from her sense of gratitude for the hours we'd spent with her, rather than because of a genuine emotional connection. I told myself that must be the case, though part of me fervently wished it wasn't.\n\nI did think about just leaving, and not seeing her before I left, but I decided that would be cowardly. Besides, I wanted to see her. But... I shouldn't give her too much time. I knew that if she had a few days she would try and convince me to let her come with me, and I wasn't sure I was strong enough to withstand that.\n\nI sent her a message, taking a long time to try and get the tone just right:\n\nHey Izzy. Hope you're having a great time with your folks still. Those last pics you posted on Instagram were breathtaking! Glad you're getting some painting done too.\n\nMy tidying up all done now and I've decided I'm going to head off on Sunday. Not quite sure where my first port of call will be but I thought I might just head to the airport and choose a flight at random. Always wanted to do that! Could be a recipe for complete disaster of course.\n\nI know you're coming back Saturday evening so any chance we could grab a quick coffee in the morning before I go? If not, no worries -- it's not goodbye, I hope, just farewell for now. But I think it's time for me to get moving.\n\nSay hi to your folks from me.\n\nAbout ten minutes later there was a blue tick to indicate she'd read it, but no response. I thought she was probably hurt or angry or some mixture of both. Or perhaps... relieved?\n\nI waited another few hours to see if a reply came through, but nothing did. Should I send a follow-up message? No, I'd said what I wanted to say. I would be sorry -- desperately sorry -- not to see her before I left, but perhaps that would be for the best.\n\nSaturday came and drifted by slowly. I packed my things into my backpack, decided I had too much, unpacked it all, packed it again. I stared at maps of the world on my tablet, wondering where I should go. Somehow it seemed less exciting now that I was faced with the reality of it. I kept glancing at my phone, hoping for the buzz of a message, but it stayed silent.\n\nIn the evening I got a takeaway and sat in the nearly empty flat, eating the food and staring at a film without really taking it in. She would be home by now. Perhaps... maybe I should go over to their house and say goodbye? But... if she'd wanted to see me, she would have replied. Let it go.\n\nThen I heard the door open.\n\nI knew who it must be. We'd given her a key months ago -- she visited so often.\n\nI got up and went to the hallway. Isobel was there, dressed in jeans, a thick jacket and walking boots. She was also lugging what looked like a rather heavy backpack, which she propped up next to mine. In one of the side pockets I could see a battered paperback copy of Sense and Sensibility.\n\n\"Hey,\" she said cheerfully. \"Sorry... thought I'd be earlier. Thank god so many shops in London stay open late. I had to buy a new backpack... mine had fallen to bits.\"\n\n\"A new backpack?\"\n\nShe smiled at me. \"Yes. And a sleeping bag. Though if you're planning we're going to sleep in luxury hotels all the way around the world, that'll be fine by me.\"\n\n\"So... you're coming with me?\"\n\nShe walked over to me, unzipping her jacket as she did so. Then she stood in front of me, looking up into my face.\n\n\"Well, put it this way. I'm going to follow you to the airport. I'm going to get on the same flight you do. And at the other end, I'm going to trail after you wherever you go.\"\n\nI was doing my best not to smile, though I don't think I'd ever felt a purer sensation of sheer happiness.\n\n\"Like a... kind of stalker, then?\"\n\n\"Yes. Do you mind? David said you might be a bit difficult about me coming with you, but I should just ignore you, and you'd come round.\"\n\nThen her faux confidence seemed to evaporate, and she looked anxious. \"I hope he's right,\" she whispered. \"I might just die if he isn't.\"\n\nI looked at her for a long moment. Her blonde hair framing her achingly pretty face, Her clear blue eyes.\n\nI slowly reached out and put my arms around her. \"Yes,\" I said. \"He is.\"\n\nSuddenly she was in my arms and my mouth was on hers. Few things have ever felt as perfect or right. And then she was taking me by the hand, leading me to my room.\n\n\"Oh,\" she murmured. \"I've wanted this so badly, Michael. You have no idea how badly.\"\n\nWithin seconds most of our clothes were on the floor and we were in the bed. I kept her body close to mine, pulling her in close so that our bodies touched each other as much as they could. My fingers couldn't get enough of exploring her smooth skin, tracing paths endlessly over her arms, back and neck. Her nipples felt hard and perfect against my chest as she lay on top of me.\n\nSuddenly I was desperate to be inside her. My cock felt as hard as I could ever remember, lying like a hot rod of iron between our stomachs. I reached down and gently tugged at her panties.\n\n\"I need you, Isobel,\" I said. \"God... I need you.\"\n\n\"I'm yours,\" she said simply, and lifted herself up so I could more easily slide the material down her legs.\n\nThen I hesitated. \"Condom,\" I said. \"I think there are some...\"\n\nShe put a finger to my lips. \"No. It's all right. Please. I need to feel you.\"\n\nI reached down and guided my cock so its tip pressed against her slit. I could feel her warm, sticky wetness and I took a moment to savour the feeling of her arousal. Then I pulled her head back down onto mine, our lips combining as I slipped deep inside her perfect tight passage.\n\nShe moaned, a sound of pure physical pleasure.\n\nI have never felt such a primitive, basic, animal need for sex. I thrust deeply into her, back and forth, and she moved her body to match mine. I could feel slight traces of sweat building on her back under my fingers as we strained and gasped, that strange dance which sometimes feels as much of a battle as it does a celebration of passion.\n\n\"Fuck me,\" she murmured, almost inaudibly, her mouth pressed to my cheek. \"God, fuck me just like this.\"\n\nI knew this would be a short, frantic coupling that would be over in a few minutes, but I was determined that I would feel her climaxing before I gave in and allowed my own. I slowed my pace slightly, allowing her to lead, letting her control the rhythm and depth of our joining. I felt her breathing began to change, shorter, more desperate gasps.\n\n\"Fuck I'm going to come... oh god I love this so much... god I love you...\"\n\nAnd then she came, letting out a soft cry of pleasure as her body spasmed and tightened around me. I knew I would only be a few seconds behind her, and I held her body even tighter as I resumed my frantic thrusting.\n\n\"Isobel... so close...\"\n\n\"Yes... please... I want to feel it... I want to feel you come in me...\"\n\nI exploded inside her, a glorious wave of release that left me gasping. I could feel my cock spilling and spitting my seed inside her, rope after rope until I thought I must be completely drained.\n\nI lay there, gasping, still holding her tightly close to me as if afraid she would slip away. We lay there for a while, our breathing still laboured. She showed no inclination to try and escape from my grasp. If anything she seemed determined to burrow even closer into me, moving her legs so they rested on mine, our bodies in contact almost from head to toe.\n\n\"Oh my god,\" she finally managed. \"That was... just so amazing.\"\n\nI kissed her again. \"For me too.\"\n\nShe lay there for a while longer, then twisted her head to look up at me. \"But... honestly, how are you going to get any writing done when we're just going to want to have sex like that all the time?\"\n\nI shrugged. A very Isobel-ish gesture.\n\n\"DH Lawrence managed it,\" I said. \"I don't see why I shouldn't try and follow his example.\"\n\n\"Good,\" she said. \"Because if it's a choice between you writing, and you... fucking me like that... my gain will just have to be literature's loss.\"\n\n**\n\nJust before the train reached Heathrow I remembered something I'd been meaning to ask her.\n\n\"What did David say to you, just before you went into the exam?\"\n\n\"Mmm? Oh -- that.\" She paused. \"He said... don't let your lover boy down now.\"\n\n\"Lover boy? You mean... me?\"\n\nShe giggled. \"Afraid so.\"\n\n\"So... you and him... used to talk about me... and you?\"\n\n\"He could see I was in love with you,\" she said quietly. \"He was a horrible tease about it. Some of the things he said were so disgusting I could hardly believe them. But he made me laugh though.\"\n\n\"What kind of things?\"\n\n\"I can't... I'm too shy! It's too embarrassing!\"\n\nI just looked at her, expectantly. She sighed, but leaned closer so she could whisper.\n\n\"Well... he used to ask me if I got wet knickers when we were studying together.\"\n\nThere was a silence.\n\n\"Well? Did you?\"\n\n\"I'm not saying,\" she said primly.\n\nShe kissed my shoulder. \"He told me that the first time you came back from meeting me he could tell you were smitten. Is that true?\"\n\nI thought about it. \"Yes. I think it is. I'm not sure I was aware of it... but obviously he must have seen it.\"\n\n\"And then he said... that first time I came over... the way he saw you looking at me. He said he knew it was just a matter of time.\"\n\nThe train began to slow down, and people around us began to gather up their bags.\n\nWe stayed where we were for a moment longer, ignoring the activity. I was still relishing being able to have my arm around her. \"And when we come back home? Have you thought about that?\"\n\n\"No,\" she said. \"But... we'll deal with that when that happens. Won't we?\"\n\nI nodded, and then hugged her closer. Then the conductor announced over the tannoy that we were pulling into Heathrow, and to remember to take all our belongings with us, and wished us safe and happy travels, whatever our destination.\n\n \n"
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "mature",
        "older man",
        "romance",
        "student",
        "teacher",
        "teaching",
        "younger girl"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/love-songs-in-age"
}