{
    "title": "Tucker's Studio Ch. 12",
    "pages": [
        "All people and places are fictional. All characters are over eighteen.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe Bartenders\n\n Tucker's favorite night spot was a blues joint in the heart of the city. For a decade or so it had been the hot spot \u2014 wood-fired pizzas, mouth watering panini, local craft beer on tap and live music late into the night. Wednesdays were the best \u2014 that's when the touring blues acts rolled into town. Tucker stopped in pretty much every week. The bartenders were usually Kat and Lori, a couple of cute blondes who took good care of their regulars and raked in the tips. Kat started pouring Tucker's usual, a pint of Guinness, as soon as she saw him walk through the door.\n\n\"Hi Tucker!\" she said as he sidled up to the bar.\n\n\"Hi Kat. How's it goin' tonight?\"\n\n\"Pretty good. The band should be good tonight. How's business?\" she asked, unable to hold back a little smirk.\n\n\"You know what I do?\"\n\n\"Yeah. Bartenders hear all kinds of wild stories.\"\n\n\"What makes you think those stories are true?\"\n\n\"A girl gets a feeling...\"\n\n\"Oh, she does, does she?\" Tucker smiled.\n\n\"So it's true?\" Kat said, leaning in, talking quieter. \"You run a porn studio?\"\n\n\"Maybe. Sometimes it's best to not broadcast that stuff around.\"\n\n\"Hey, I'm not a talker. I get the big tips because I'm a listener, not a talker.\"\n\nKat was leaning on the bar on her elbows, back arched, faded bluejean covered ass looking spectacular as usual. Tucker, and all the other guys in the city, had long admired her effortless sexiness. He'd only had a few fantasy girls in his life. Kat was one of 'em.\n\n\"A listener huh? And you want me to tell you some stories? Is that it?\" Tucker smiled.\n\n\"Yeah!\" Kat said, her eyes flaring with intrigue. \"Tell me everything!\"\n\n\"Sorry Kat,\" Tucker said. \"The only way you get the inside scoop is if you come work for me.\"\n\nHe was surprised at himself for saying it. Sure, Kat and Lori were both porn-worthy. Very porn-worthy. But with their well-known jobs and all the talk that went on at the bar, it just didn't seem like something Tucker wanted to get involved with.\n\n\"Holy shit!\" Kat said. \"You'd hire me?\"\n\n\"You two better not be talkin' about what I think you're talkin' about,\" Lori said as she poured a beer and listened. \"Kat?\" she said suspiciously.\n\n\"Don't worry, we're just kiddin' around,\" Kat said. \"Right Tucker?\"\n\n\"Maybe,\" Tucker said.\n\n\"Yeah, I know that look in a guys eye,\" Lori said. \"Scram girl, before you get in trouble.\"\n\n\"Party pooper,\" Tucker said. He smiled and winked at Lori as Kat walked away.\n\n\"You're not seriously tryin' to recruit her are ya?\"\n\n\"It's not the military Lori,\" Tucker smiled \"Everybody has fun.\"\n\n\"Yeah, I'll bet! So it's for real? The stuff we've heard?\"\n\n\"What have you heard?\" Tucker said.\n\n\"Oh I dunno. Nothin' specific really. Is it a website?\"\n\n\"Yeah, that's where all the cash flow is these days. We used to sell a lot of DVD's but not so much anymore.\"\n\n\"We heard it's mostly amateur women,\" Lori said.\n\n\"Yeah, a lot of that. All ages. Housewives, office clerks, waitresses. No bartenders yet though,\" Tucker smiled. \"Do me a favor and don't spread all this around, all right? We like to keep a low profile.\"\n\n\"Sure Tucker. I shouldn't be so nosy anyway,\" Lori said. \"Your secrets are safe. With me anyway, I dunno about Kat.\"\n\n\"Thanks Lori. For real though, you guys are welcome any time. Stop by and I'll give you a tour. It's a pretty fun place.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nA week later Tucker was back at the bar to see another up-and-coming blues guitarist, this one from Memphis. It was a thin crowd. By closing time Tucker was one of the only customers left in the place.\n\n\"Boy, everybody missed out on this one. That was a great show,\" Tucker said to Kat.\n\n\"I know. You want another beer? It's last call.\"\n\n\"Sure, one more for the road.\"\n\nKat poured a pint of Guinness. She tried to draw a little picture on top of the foam as she finished the pour, but it didn't look like much.\n\n\"What's that?\" Tucker laughed.\n\n\"It's supposed to be a cock and balls,\" Kat laughed. \"For our porn guy.\"\n\n\"Thanks,\" Tucker chuckled. \"So when are you comin' down for a tour?\"\n\n\"A tour?\" Kat said, her eyes big with wonder.\n\n\"Yeah, didn't Lori tell you? Any time you guys wanna come down.\"\n\n\"Hey mister,\" Lori said, hustling down from the other end of the bar. \"You gettin' my girl in trouble again?\"\n\n\"A tour?\" Kat said, glaring at Lori.\n\n\"Yeah, well, I didn't think...you'd wanna.\"\n\n\"I'm not a child you know. You don't have to protect me.\"\n\n\"I know. I'm sorry.\"\n\n\"She's more mothery than my mother sometimes,\" Kat said, wandering away a little disgusted.\n\n\"Sorry. I didn't mean to stir up trouble,\" Tucker said to Lori.\n\n\"No, it's my fault,\" she said. \"I'm too protective sometimes. That's what happens when you have kids.\"\n\n\"You guys have worked together a long time.\"\n\n\"Yeah, six years now,\" Lori said.\n\n\"So, you guys ever...\"\n\n\"What?\" Lori said, trying to read Tucker's face. \"Have sex? Is that all you think about?\"\n\n\"No...sorry.\"\n\n\"Why? What do people say?\" Lori asked quietly.\n\n\"No, it's nothing. You guys just seem so...close sometimes. It's nothing. I'm just a horny guy who imagines things, that's all.\"\n\nLori looked at Kat down at the other end of the bar. Tucker could tell there was something there.\n\n\"She's...I mean...can we talk about something else?\" Lori said, clearly rattled a little. \"People fuck right in front of you all day long?\"\n\n\"No!\" Tucker laughed. \"I mean sometimes, yeah, but...\"\n\n\"Is it hot? I mean, how do you stand it?\"\n\n\"Yeah, it's hot as fuck,\" he said. \"What's not to like about that?\"\n\n\"Do you ever see anybody here at the bar that's...done that with you? I mean not with you, but, at your place?\"\n\n\"Oh sure,\" Tucker said. \"Some of my pros hang out here. And I've met a few of my amateurs here too.\"\n\n\"No way!\" Lori said. \"Who? You're not gonna tell me are ya...\"\n\n\"Nope,\" Tucker said. \"Come see my place. You might be surprised who you meet.\"\n\n\"Jesus! You are workin' all the angles aren't ya!\" Lori laughed. \"I've got kids you know. I can't be...\"\n\n\"Can't be what?\" Kat said as she approached. \"Marty wants to talk to ya.\"\n\n\"Oh, okay,\" Lori said. She wandered off to talk to their manager.\n\n\"So what's this about a tour?\" Kat asked Tucker.\n\n\"Yeah. Any time you and Lori wanna come down. I'd love to show you guys the place. Most people think it's gonna be sleazy or somethin', but it's pretty cool.\"\n\n\"I'd love to check it out! Tomorrow good?\"\n\n\"Yeah,\" Tucker smiled. \"Ya gotta bring Lori though or she'll be mad at me, and I don't know if she wants to.\"\n\n\"Lori? I'll get her there,\" Kat said, with a 'no problem' look on her face. \"You got a thing for her?\"\n\n\"No, it's not that. She just...I don't think she wants you there without her.\"\n\n\"Oh fuck. I'm an adult ya know.\"\n\n\"I know,\" Tucker said. \"Just humor her. She cares about you.\"\n\n\"Yeah. I know. What time should we come?\"\n\n\"I don't know. Do you cum easily?\" Tucker smiled.\n\n\"You!\" Kat said, looking surprised and delighted. \"I never knew you were so dirty! I love it!\"\n\n\"I'll be there at two doing some editing,\" Tucker said.\n\n\"Two o'clock,\" Kat said. \"I'll give it a shot. Who knows if I'll talk her into it.\"\n\n\"Take care Kat,\" Tucker said, sneaking one last glance at her sweet ass. \"I'll see you tomorrow I hope.\"\n\nHe got up from his stool, tossed a twenty dollar tip on the bar, and wandered out into the night.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next morning Tucker called Dave. He was on a painting job, transforming a small ranch house from faded blue to mossy green.\n\n\"Any chance you can be here at one-thirty?\" Tucker asked.\n\n\"Sorry man, I got a deadline on this house. I really need more notice if you need me.\"\n\n\"Yeah, I know Dave. I'm sorry. It's just that I've got Kat and Lori coming in for a look see, and I'm hopin' maybe I can finagle it into somethin', you know what I mean? But I can call one of the other guys.\"\n\n\"Are you shittin' me?\" Dave said, sounding shocked. \"I'll be there! One-thirty?\"\n\n\"Yeah. You sure it's cool?\"\n\n\"Fuck yeah. I'll be there,\" Dave said.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"So here's how I wanna play it,\" Tucker said the next day when Dave arrived. \"You and Jamar'll be working on editing your last scene. We'll show the girls and maybe they'll get interested, you know what I mean?\"\n\n\"Yeah, like you did with me you mean?\" Dave chuckled. \"You're like the most seductive fucker I've ever met.\"\n\nTucker chuckled. \"All right, ya got me. But it works, right?\"\n\n\"Oh yeah. It works.\"\n\n\"So whaddya think about Kat and Lori?\" Tucker asked. \"I've always picked up on a sexy vibe between them, you know what I mean?\"\n\n\"Yeah, I've noticed it,\" Dave said. \"You mean, the two of them together, right?\"\n\n\"Yeah. I think there's something waitin' to happen there, if it hasn't already. You know me though, I'm not pushin' anything, but if it happens...\"\n\n\"Holy fuck,\" Dave said. \"If that happens I won't survive.\"\n\nThe entryway intercom buzzed. Tucker walked to the door and was delighted to see a smiling Kat and a nervous looking Lori.\n\n\"Hey you guys!\" he said. \"This is cool! You get to see me at my work for a change.\"\n\nLori smiled and relaxed a little as they walked in.\n\n\"Fuckin' A Tucker!\" Kat said. \"Nice place!\"\n\n\"Thanks. Yeah, we've been here for a while.\"\n\nHe looked the two young women over as they walked into the hallway and stopped at the glass cabinet to check out the awards. Lori looked like her usual beautiful self, casual in faded jeans and a loose, purple top that brought gypsy girls to mind. Kat was wearing a tight, brightly colored hand printed t-shirt, super-short cut-off shorts and crazy, modern looking fishnet stockings. Black leather high-heel ankle boots gave her legs and ass a posture that was a bit obscene. She looked like a slutty art-house biker.\n\n\"Jesus Kat, you should wear those stockings at the bar,\" Tucker said, admiring her legs, \"The tips'd be insane.\"\n\nKat just smiled. Lori didn't say anything, but Tucker could sense her appreciation for the way Kat looked. There was some tension in the air. Tucker knew it was good.\n\n\"So, these are the sets,\" he said as they walked down the hall. He switched on the overhead lights. \"We can change things up lots of different ways.\"\n\n\"I'm guessing the bedroom one gets the most use,\" Kat said.\n\n\"You're probably right,\" Tucker said. \"I love it when we do different stuff though.\"\n\nKat threw herself onto the big bed, legs in the air. \"Look at me! I'm a porn star!\" she giggled.\n\nTucker wanted to say something, but thought better of it. Lori still looked nervous, and he didn't want to push things too soon.\n\n\"So, we've got two other sets, and another one that we can make into anything. We started off-site on-location shoots recently too. That was fun.\"\n\n\"No shit? So you can set up in my bedroom?\" Kat said with a wink.\n\n\"Yeah, we can do that. Broadcast it to the world.\"\n\nKat looked amazed. Tucker couldn't tell if she thought the idea was good or bad.\n\nThey walked down the hall to the women's dressing room. Tucker introduced the girls to Marsha.\n\n\"She's an awesome hair stylist and makeup artist,\" he said. \"You guys want a make-over while you're here? Not that you need one...\"\n\n\"They don't need anything,\" Marsha said, admiring the girls as they looked around. \"Check out the wardrobe too,\" she said. \"All dry-cleaned and nice.\"\n\nThe girls were astonished at the closets full of dresses and lingerie.\n\n\"Oh my God!\" Kat said. \"This stuff is beautiful!\"\n\n\"Let me show you the editing room,\" Tucker said. \"We're working on something today.\"\n\n\"Hi guys,\" Dave said to Kat and Lori when they entered. \"I guess you know my secret now. That means you can't get outta here without a secret of your own.\"\n\n\"Dave?\" Lori said, looking completely surprised. \"You work here?\"\n\n\"Yeah, for a while now. You guy's are cool right? You're not gonna tell my secrets, are ya?\"\n\n\"Whaddya mean?\" Kat asked. \"Oh my God, are you...do you...?\"\n\n\"Yeah. Don't tell anybody, all right. I like being the guy nobody looks at at the bar.\"\n\n\"Dave! Holy fuck!\" Kat said. \"Oh my God! Tucker! You're blowin' my mind here. What the fuck!\"\n\n\"I told you you might know some people,\" Tucker said. \"I brought Dave in a few months ago for the women who like the older guys.\"\n\n\"So ...this is your job?\" Lori asked Dave. She looked as stunned as Kat was.\n\n\"I still have my painting business. This is part time. Fun though,\" he smiled.\n\nThe two girls just looked at him, like he was nutty or something.\n\n\"This is my photographer Jamar,\" Tucker said to them. \"He and Dave are workin' on an edit today.\"\n\n\"Hi Ladies,\" Jamar said. \"I can show you what we do if you want.\"\n\nHe played the scene they were working on, a threeway with Dave and Sparkle fucking a slightly plump, very busty college-aged girl. Four different angles of it showed on the editing monitors. The girl was licking Sparkle's pussy, with Dave giving it to her good from behind. She was just getting to her first orgasm, and it was a doozy.\n\n\"Fffuuuck!...Dave!...What the...?\" Kat said. She and Lori were mesmerized.\n\n\"Sorry. This is maybe more than you guys wanted to see,\" Dave said.\n\n\"No, it's...it's okay,\" Kat said. \"Right Lori? I mean, it's good. You're really good.\"\n\nLori couldn't hold back a laugh. Dave smiled.\n\n\"I know. It's fucked up, right?\" Dave said to her. \"I can't believe I'm doing this either.\"\n\n\"How did you...I mean why did you...?\" Lori asked.\n\n\"It's fun,\" Dave chuckled. \"That's about the whole story.\"\n\n\"So, we're all here,\" Tucker said. \"I always offer my guests a chance to shoot a scene if they want to. It's kind of a big fantasy for some folks, and it's fun for us to bring it to life.\"\n\n\"Shit! You mean...\" Kat said. She looked at the wild action on the monitors, looked at Dave, and looked at Lori. Lori was silently shaking her head.\n\n\"Kat?\" Lori said preemptively. \"Don't think about this.\"\n\n\"Don't think about it? What are you, dead inside?\"\n\n\"If you knew what was goin' on inside my head...\" Lori said.\n\n\"What?\" Kat asked quietly. \"What do you think about?\"\n\nThe girls both looked at the monitors again. Sparkle and the amateur girl were tumbling into a sideways sixty-nine, vocalizing their pleasure as pussies were licked and asses were fingered.\n\n\"Fuck you Kat,\" Lori said quietly, sounding like she was surrendering. \"Why do you like to get me in trouble?\"\n\n\"Why wouldn't I,\" Kat said softly, looking deep into her friend's eyes. \"Dave, you wanna fuck us today?\" she said, still looking at Lori.\n\n\"Kat,\" Lori said, sounding conflicted, \"I've got kids. It's the internet. I...I can't do this. I want too, but I can't.\n\n\"I'm not doin' it without you,\" Kat said.\n\n\"I'm sorry Kat, I just can't. Maybe...something else...sometime,\" Lori said, glancing at the girl-on-girl action again.\n\nTucker and Dave had a quick huddle while the girls talked. Tucker's crew was already on hand, getting paid for not doing much, and Dave quickly agreed to work free for the afternoon. Pro bono, they call it in the legal world. Heck, he would have paid Tucker to make it happen, the chance for a threeway with his two favorite sexy bartenders.\n\n\"You know, every once in a while we shoot scenes here that don't go on the website,\" Tucker said to the girls. \"People come in for a special birthday maybe, or an anniversary. We burn a DVD for them to take home, and nobody else ever sees it. You guys have been so nice to me over the years, I'd like to do that for you. The studio's yours for the afternoon, if you wanna have some fun.\"\n\n\"Tucker! For real?\" Kat said. \"You'd do that for us?\"\n\n\"Kat?\" Lori said, her eyes big. She could sense they were getting swept up into something she was unsure about.\n\n\"I want this,\" Kat said quietly to Lori. \"With you.\"\n\n\"You do?\" Lori said. They were looking deep into each others eyes again. The mood in the room was changing.\n\n\"So, just you two maybe? Or would you like Dave involved?\" Tucker asked.\n\n\"Oh yeah, Dave's involved,\" Lori said matter-of-factly.\n\n\"Lori! We doin' this?\" Kat said excitedly.\n\n\"No internet? Just for us?\" she asked Tucker. He nodded. \"Yeah, we're doin' this,\" she said.\n\n\"Holy shit!\" Kat said, looking excited but kind of terrified. \"A fuckin' porn!\"\n\n\"We don't have to you know,\" Lori said to Kat.\n\n\"No, this is happening,\" Kat said. \"I knew I wore my 'fuck me' stockings for a reason.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nLori got more and more nervous and Kat's excitement grew as the two of them looked through the racks of lingerie with Marsha. They knew they'd be fucking each other pretty soon, on a movie set with people watching. Kat was the wilder of the two and was excited by the idea, but Lori, she was beginning to think she wouldn't be able to go through with it. Marsha could sense her growing nerves.\n\n\"You guys want a drink?\" she asked. \"Lots of girls do. Tucker'll mix something up for ya.\"\n\n\"I'd love to get drunk but I gotta pick up my kids later,\" Lori said. \"Maybe just a shot and a beer though. That'd help.\"\n\n\"Yup. Make it two. Whiskey,\" Kat said.\n\nMarsha left to get the drinks. Kat and Lori didn't say much as they pawed through the racks of sexy undies.\n\n\"You're way too quiet,\" Kat said. \"You okay?\"\n\n\"Are we crazy?\" Lori said. \"What the fuck Kat, this is nuts, isn't it?\"\n\n\"Is it? I've kinda wanted to for a long time.\"\n\n\"Make a porn?\" Lori said, sounding surprised.\n\n\"No!\" Kat said. \"Get...with you.\"\n\n\"Oh. You have? I thought it was just me.\"\n\n\"You've thought about it?\"\n\n\"Yeah! I mean it's not just the guys who think you're hot every night at the bar. I mean look at you in those stockings.\"\n\n\"My fuck me's? You like 'em?\"\n\n\"Kat, I've wanted to...fuck you...for years.\"\n\n\"Oh my God! This is so happening. No way are you gettin' out of this now.\"\n\nKat pulled Lori to her and kissed her. The deeply sensual kiss was ongoing when Marsha walked in with their drinks.\n\n\"Our first kiss,\" Kat told to Marsha. \"Damn, this is turnin' into a day!\n\nKat drained her whiskey shot in one gulp and downed half her glass of beer. Lori watched her wild friend with amused fascination. She sipped on her whiskey and had a sip of beer.\n\n\"It's cool that you guys know Dave,\" Marsha said. \"He's such a nice guy.\"\n\n\"I still can't believe he's a porn guy,\" Lori said.\n\n\"He's one of the newer ones. He's Daddy McQueen on the website.\"\n\n\"Daddy McQueen?\" Kat laughed. \"Oh my God that's hilarious!\"\n\n\"You've heard of 'daddy issues', right? Younger girls who like older men?\" Marsha asked. \"That's what Tucker hired him for.\"\n\n\"Yeah, I can see it,\" Kat said. \"We've known him for years and I always thought he was cute. The gray hair's sexy. It's weird thinkin' he's gonna fuck me in a few minutes. God, I'm startin' to get super horny.\"\n\nLori finished her whiskey and drank some more beer. She smiled at Kat's growing excitement.\n\n\"So what do you think?\" Marsha said, flipping through the racks of lingerie. \"Slutty or elegant?\"\n\n\"Slutty for sure,\" Kat said. \"I love sluts.\"\n\n\"Slutty it is then,\" Lori said.\n\n\"So, what do we have that fits you guys?\" Marsha said. \"Let's see how my guessing powers are today. Kat...34 B, and Lori...36...D?\"\n\n\"That's why she gets the bigger tips at the bar,\" Kat smiled.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nDave put his fingers in his mouth and whistled when the girls walked onto the set. Lori had wanted to wear a robe, but Kat didn't want to and dared her friend to walk out 'slutty'.\n\n\"I hope you girls realize what a big day this is for Dave and me,\" Tucker said. \"You know the whole city thinks you guys are hot, right?\"\n\n\"I'm startin' to think you're just a dirty old man,\" Kat said to Tucker. \"And you, Mister Daddy McQueen,\" she laughed, \"I'm just stunned at you. Talk about a double life!\"\n\n\"It's days like this that make it all worthwhile,\" Dave said.",
        "\"Oh, Lori, how sweet is he?\" Kat smiled. \"I guess since he's always so nice we're gonna have to let him fuck us, right?\"\n\n\"Yup,\" Lori said. She was smiling but she looked like she was halfway to terrified, standing with her legs close together and her hands in front of her tiny little panties.\n\n\"You okay?\" Kat asked her. \"You look kinda pale.\"\n\n\"Have a seat on the bed Lori,\" Tucker said. \"You okay? Is this too freaky for ya?\"\n\n\"It is, but...I'll be okay.\"\n\n\"Maybe we just need to get your blood moving,\" Kat said. She tackled Lori down on her back on the big bed, straddled her and kissed her.\n\n\"Roll cameras!\" Tucker yelled.\n\n\"Oh, sorry,\" Kat said, rolling off of her friend. \"I got carried away. Are you gonna say 'Action!'? That'd be cool!\"\n\n\"Action!\" Tucker said with a smile.\n\n\"So what do we do?\" Kat asked. \"Just start fucking?\"\n\n\"Do whatever feels right Kat,\" Tucker said. \"We'll film it all, edit it nice, and burn you guys a disc so you can watch it when you're eighty.\"\n\n\"Holy shit, I just noticed all the cameras,\" Kat said. \"Fuck. And you guys just stand there and watch?\"\n\n\"Yeah,\" Tucker said. \"We're doin' our jobs, but yeah.\"\n\n\"Is it super hot usually? God, what a cool job.\"\n\n\"Yeah, it's pretty hot Kat,\" Tucker chuckled. \"So, I already called action. You guys ready? Dave?\"\n\n\"Yup, ready and willing,\" Dave said as he took off his robe.\n\n\"Dave!\" Kat said, admiring him in his silk boxer shorts. \"You look good!\"\n\n\"You don't mind a little gray hair?\" he said.\n\n\"Fuck no. Not yours. Come here and play with us.\"\n\nDave walked over to her. She felt the smooth silk fabric of his shorts and slipped her hand up inside the loose leg.\n\n\"Whoa!\" she said, looking up at him. \"Fuck Lori, he's...look at this!\"\n\nLori propped herself up on her elbows so she could see. Kat pulled down Dave's shorts and held his growing cock in her hand.\n\n\"Nice huh!\" Kat said. \"Want him to put it in you?\"\n\n\"E-ven-tua-lly,\" Lori said slowly. She looked around nervously at the cameras and lights.\n\nKat was stroking the big cock, and she flicked her tongue across the tip. \"Fuck,\" she laughed. \"Makin' a porn! This is wild!\"\n\nShe opened her mouth and engulfed half of Dave's big meat. She moaned and started working it, nice and wet. She quickly got into it.\n\n\"Help me,\" she said to Lori.\n\nLori looked mesmerized. She moved slowly to the edge of the bed, like she was being drawn to the action by a magnet. Kat took the cock out of her mouth and guided it into Lori's. Lori looked up at Dave with her big brown eyes, moaning softly as the hot meat filled her mouth. Being a single mother was tough. It had been a long time since she was with a man.\n\n\"Nice, huh?\" Kat said to her. \"Why didn't you tell us you were hot Dave?\" she cooed. \"I mean we kinda knew, but...wow.\"\n\nDave was a happy guy. His two favorite bartenders were blowing him, two girls he'd long fantasized about. Yeah, life was good.\n\nThe boom camera swung around to get a better angle of things. Kat noticed it and giggled. She moved in on the action, her tongue joining Lori's mouth on the wet shaft, mugging it up for the camera. Her mouth slid onto Lori's, her hand taking over on the slippery cock as a hot kiss heated things up.\n\n\"Fuck!\" Dave whispered, looking down at them. He was starting to wonder if he'd be able to hold things together very long.\n\nKat was the first one with her tits out. Before the kiss had ended she'd taken off the little bra and tossed it on the floor. She took Lori's hand and put it on her, moving it from one tit to the other, rubbing it across her eye-popping nipples.\n\nThe moaning kiss broke off. Lori looked at her hand on Kat's tit. A wicked hard nipple was poking between her fingers.\n\n\"Kat,\" she sighed, the name floating breathily out of her mouth, for no reason other than she loved the sound of it.\n\nKat let go of Dave's cock, reached behind Lori and undid her lacy bra. Lori's big tits joined the party.\n\n\"Fuck Lori, you're so fuckin' hot...\" Kat said.\n\nHer mouth went right to a nipple, reddish-brown colored and bigger than a silver dollar, with a hard, pointy tip you could hang a shirt on. Lori reached for Dave's cock and her eyes closed. She opened them just enough to guide it into her mouth again. A deep, satisfied groan vibrated out of her as it filled her mouth and Kat nibbled on her luscious tit.\n\n\"Did I ever tell you I love your tits?\" Kat said softly between moans.\n\n\"No,\" Lori sighed as she stroked Dave's cock with her hand. \"I love yours too.\"\n\n\"These little things?\" Kat said, arching her back.\n\n\"They're perfect,\" Lori said. \"Right Dave? Dave knows what I mean.\"\n\n\"You're both perfect,\" Dave said, reaching down for his first handfuls of the girls soft parts, Lori in one hand, Kat in the other.\n\nThings escalated quickly. Kat was a bit of a wild girl \u2014 something Dave and Tucker had long suspected from watching her behind the bar. It wasn't long before she had Dave fucking her from behind while she screamed into Lori's pussy. Lori was still a bit shell-shocked, looking at the boom camera above her, thinking the whole situation was crazy, but her inhibitions were melting, flooding Kat's mouth with flavor. She sighed sexy moans. Her back arched up high. Her hands held Kat's head tight to her as the feelings swept her away.\n\n\"Fuck!\" Lori screeched as she came.\n\nKat's head was clamped tight between her thighs. It was a shuddering, quaking orgasm that released months of sexual frustration. Dave had a beautiful view of it all \u2014 Kat's perfect hips in his hands as his cock pushed her pussy lips in and out; two tattoos of black roses, one right above each of Kat's butt cheeks; her slender waist; her long, tightly waved blonde hair; Lori's long legs clamped to Kat's head; Lori's breathtaking natural tits, framed by bikini tan-lines, thrust up high on her arched back; and the look of astonished, blissful release on Lori's pretty face as she came.\n\nKat orchestrated a quick switcheroo and Dave's cock was inside Lori, fucking her doggie style before she knew what was happening.\n\n\"Fuckin' wild!\" Kat said to no one in particular. \"I need a shot. Tucker honey, can we make this a little more of a party? Is that whiskey bottle handy?\"\n\n\"Absolutely sweetheart,\" Tucker said. \"We love a party around here.\"\n\nTucker poured shots for Kat, Marsha, Jamar and himself. Dave and Lori were too busy fucking to drink. Lori was really getting into it, the first time she'd been fucked in way too long.\n\n\"Bottoms up!\" Kat said. \"Yeah!\" she yelled when she saw everybody drink theirs. \"Hit us again!\"\n\nTucker poured and everybody drank. Kat dropped her plastic cup on the floor, knelt in front of Tucker and took his cock out. Marsha couldn't believe her eyes. Tucker had never gotten involved in anything at the studio, but Kat and Lori were special. Fantasy girls have a way of making things happen.\n\nKat gave him a nice blowjob while Lori was fucked better than she'd ever been in her life. Dave had become a stamina monster working at the studio. He just kept going and going and going. Lori loved every second of it.\n\nTucker gave Kat a mouthful of cum and she giggled when she swallowed it. Her eye caught Marsha's. She stood and sauntered over to her, giving Jamar's crotch a squeeze on the way by. Marsha's eyes were big when Kat kissed her. The two shots of whiskey kicked in and Marsha's arms wrapped around Kat's naked body. The kiss was a hot one, slippery with Tucker's cum. Kat took Marsha's hand and pulled her toward the big bed.\n\n\"I can't,\" Marsha said.\n\n\"You can and you will,\" Kat said.\n\nMarsha's mind was spinning. Her kiss with Kat was her first with a girl, and after watching countless girl-on-girl scenes under the lights she was super curious about what might happen. For some reason she thought maybe it'd be all right, that her husband wouldn't mind it because it was girls. If she kept her distance from Dave and just...maybe just with the girls...maybe just this once. \n\nIt all happened so quickly.\n\n\"Oh Fuck!\" she whimpered toward the dark ceiling. She was flat on her back, still in her everyday bra and panties, with Kat's tongue lapping at her wet pussy. It was Tucker and Jamar's turn to not believe what they were seeing. Marsha had always been a pillar of restraint, never letting her guard down. And there she was, climbing toward an orgasm, lying right next to Dave as Lori rode him hard.\n\nMarsha reached over and held Dave's thigh when she came, her hand squeezing tight. Kat was relentless with her tongue and Marsha's body bucked. A wild, guttural scream lifted out of her. When it was over she laughed a breathless laugh, eyes big and wide as she realized she'd done what she'd seen so many times on that bed. She'd had a rip-roaring orgasm in front of everybody.\n\nLori came too, riding Dave hard to her second orgasm of the day. She rolled off of him onto her back, sweaty and breathless.\n\n\"Help me play with her,\" Kat said to Marsha.\n\nMarsha glanced at Dave sheepishly. She knew she should retreat before things got out of hand, but she really wanted to play with the girls, to try tasting a pussy and licking a nipple or two. Years of curiosity was boiling to the surface. Kat and Lori were lots of fun and super sexy. It was the perfect storm. \n\nDave read her face and knew she was uncomfortable with his big sticky cock so near, so her gave her the space she needed. He backed up against the headboard and caught his breath.\n\n\"Take this shit off,\" Kat said as she unclasped Marsha's bra. \"Jesus Christ, you've got closets full of the sexiest shit in the world and this is what you wear?\"\n\n\"It's pretty bad isn't it?\" Marsha laughed.\n\n\"It's like my mother's fuckin' bra,\" Kat said as she tossed it off the bed. \"Get those ugly panties off.\"\n\nMarsha took a deep breath and slipped them off. She knew she was in dangerous territory, but she couldn't seem to say no to Kat. She was starting to understand why the guys were so smitten with her.\n\n\"You havin' fun Lori?\" Kat said as she crawled to her friend's side. \"Dave really knows how to fuck, huh?\"\n\n\"God!\" was all Lori could quietly say, her body still breathless and tingly from Dave's relentless cock.\n\nOnce again Kat orchestrated things, smiling, enjoying her role. She put Marsha between Lori's legs, gave her a little instruction on pussy licking, and played with Lori's tits a little. It wasn't long though, before Kat had moved over to Dave, sucking his spongy, half-hard cock into her mouth. As she was sucking she had her eye on Jamar. The tall, slim Jamaican had caught her eye when she'd first met him in the editing room. She'd been with black men twice before, both of them customers from the bar.\n\nShe locked eyes on Jamar as her head bobbed up and down on Dave's meat. Jamar had a twinkle in his eye that she liked, and a nice lump in his pants. A  big lump.\n\n\"You guys gonna play with us too,\" she said to Tucker and Jamar as she stroked Dave's slippery shaft with her hand.\n\n\"Not me sweetheart,\" Tucker said. \"Somebody's gotta run the cameras. Jamar probably wants to play.\"\n\nHe did, and he just about fell over trying to get his pants off quickly. Kat giggled.\n\n\"Holy fuck!\" she giggled again when she saw Jamar's cock. \"You guys are somethin' else! Fuck!\"\n\nHer eyes were wide as he walked toward her. She kept up her hand job on Dave and guided Jamar's monster into her mouth.\n\nLori and Marsha had swapped places. Marsha was on her back and Lori was between her legs. It felt different than Kat's mouth. Gentler, more tentative. Exploratory. Lori was just learning too. It was a beautiful feeling though, slowly warping Marsha's mind. Her sense of right and wrong was fading fast. A minute later she was on the cusp of another orgasm, and...Dave's cock was in her hand! If you'd asked her how it got there she wouldn't have been able to tell you, but boy did it feel right!\n\n\"Fuuuck...Fuuuck...Fuuuck...\" she breathed. Her eyes were wide. She was right there, cresting a massive wave. Out of nowhere a huge cock filled her mouth. Jamar was on his knees over her head, tea-bagging her as she came. Marsha's mind was blown.\n\nTucker knew things were getting out of control pretty quickly. He knew he should help Marsha extricate herself before she did something she'd regret. But he didn't do anything. He just stood there, like a deer caught in the headlights, watching her get swept away. He'd had a crush on Marsha for years. She was married and he respected that. But seeing her there, in the middle of an orgy, naked and wildly orgasmic, it was flat-out exciting in a way he hadn't expected. He just wanted to watch her some more.\n\nIt turns out Jamar had long found Marsha attractive too. It's not like she was a great beauty or anything. She was a pretty average looking thirty-year-old. She didn't dress sexy or anything like that. But she had a certain something, a spark, a twinkle in her eye, a little mischief about her that bubbled out in an effervescent way. It's a quality men are often taken by, and Tucker and Jamar certainly were. When Jamar saw her naked, playing in a little orgy, he wanted in. Kat and Lori were sexy, and Kat's blowjob was nice, but his gunsight was pointed squarely at Marsha.\n\nHe almost came when he dipped his cock into her hungry mouth. She was cumming hard on Lori's gentle tongue, and the sight of her under him writhing like that was almost too much for him. Marsha grabbed the base of his long cock and sucked him deep.\n\nLori looked up from between Marsha's legs and smiled, thrilled that she'd given a woman an orgasm on her first try. The sight of Jamar's massive coal-black cock in Marsha's mouth took her breath away.\n\n\"Fuck!\" she whispered under her breath.\n\nJamar took advantage of Lori's little breather. He bent his long body over Marsha and sixty-nined her. Marsha couldn't believe it. She was there! Right inside the dream, the one she couldn't shake for months after watching Jamar do the same thing to Molly over a year ago! \n\nHis massiveness plunged downward into Marsha's mouth. She opened her throat and it went deeper, forcing garbled noises out. Jamar's tongue was almost as long as his cock and it slithered deep into her pussy. Marsha was fully engaged. The deep dirty shit was happening to her this time.\n\nWhile that was happening Kat was riding Dave's cock and Lori was riding his face. The two of them kissed above him, playing with each others tits, giggling and laughing.\n\nJamar flipped Marsha over and pulled up her hips. He worked his long cock into her and she flew off to the heavens, her hips swiveling wildly like one of Tucker's pros. She watched Tucker watching her, but it was blurry, like an LSD swirl. Jamar fucked her deep and fucked her hard. Marsha was sweaty and the wild blood in her was pumping free, sending her out of control.\n\nKat and Lori switched positions, but Lori wanted Dave to take her doggie style again. She got on her knees, arching her back super sexy.\n\n\"Whoa! Hold on,\" Kat said to Dave when he was about to plunge in. \"That's a fuckin' ass, isn't it! Jesus Lori!\"\n\nShe buried her face between her friend's round cheeks, licking all her soft parts, ending with a kiss on her little pucker hole.\n\n\"Oh yeah, we're gonna play a lot, you and me\" she said to Lori. \"Fuck you're sexy! Okay Dave, fuck her good.\"\n\nDave slipped his cock in and Kat slithered off the bed, heading for Tucker in the shadows.\n\n\"Don't wanna fuck in front of your staff?\" she asked him.\n\n\"No. It's not a very professional thing to do,\" he said.\n\n\"Yeah, I get it,\" Kat said. \"Come with me.\" \n\nShe picked up the whiskey bottle and sashayed her cute naked ass down the hallway to Tucker's office. He followed, leaving the cameras running unattended.\n\n\"You ever fuck anybody on your desk?\" she asked, looking innocent and slutty all at the same time. \n\nShe took a swig of whiskey and handed him the bottle. Tucker and Kat fucked about six different ways \u2014 on the desk, on the couch and on the floor. It was a wild scene, but out on the set it was even wilder. Marsha and Lori got fucked into oblivion by two huge cocks. Turns out Marsha's a pretty good deep-throat artist and loved the spit-roast, especially with Lori taking care of her tits. And Lori, well lets just say she got caught up on all that sex she'd been missing since her divorce. It was an afternoon to remember, that's for sure.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"I can't have a video of me out there, even if it's just for them,\" Marsha said as she watched the wild action on the four monitors. \"Can you edit me out?\"\n\n\"That wouldn't leave much I'm afraid. But yeah, I know what you're sayin',\" Tucker said. \"Don't worry, I'll talk to the girls. Are you...uh...okay with what happened?\"\n\n\"Yeah, but I'm not gonna let it happen again,\" Marsha said. \"Do me a favor and don't let it.\"\n\n\"Yeah, sorry, I should have, uh...\"\n\n\"Yeah, uh...\" Marsha said, making fun of Tucker. \"You just wanted to see it, didn't you?\" She had a twinkle in her eye, already knowing the answer. \"I knew this place was dangerous. I'm surprised I lasted as long as I did.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nTucker managed to get a quiet moment with Kat and Lori at the bar the following Wednesday, after last call, when the band was packing up it's gear.\n\n\"Marsha, she's got a home life, and what happened shouldn't have happened,\" he told them. \"She loved being with you guys, don't get me wrong, but she's really worried about having a video out there, even if it's just two copies for you guys.\n\n\"Hey, that's cool,\" Kat said. \"Just erase the whole thing. We don't wanna get her in any trouble.\"\n\n\"Yeah,\" Lori said, \"It woulda been fun to have it, but the real fun was doin' it.\"\n\nOne of the band members sat down at the bar to take a load off his feet.\n\n\"What kinda fun we talkin' about?\" he asked.\n\n\"Wouldn't you like to know!\" Lori smiled.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nTucker knew what happened that day at the studio was special. Having wild, unbridled sex with your fantasy girl? It just doesn't happen. He saved the whiskey bottle he and Kat finished off that day. It sits on his desk with two black silk roses in it, to remind him...dreams can come true."
    ],
    "authorname": "riverboy",
    "tags": [
        "two blondes",
        "bartender",
        "first time lesbian",
        "first time bisexual",
        "bbc",
        "black cock",
        "stockings",
        "porn"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/tuckers-studio-ch-12"
}