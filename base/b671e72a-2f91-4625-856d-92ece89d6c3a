{
    "title": "The Currency of Time Ch. 02",
    "pages": [
        "June 4, 2004\n\nThe sign over the three-story building two blocks north of the Courthouse and two blocks east of the Cop Shop read \"Bailey, Devon, Martin and Wilkes\" in very large golden letters. The joke I'd heard men working for Lancaster Oil make was the rumor was that the letters were actual gold. \n\nBailey and Wilkes etc., was one of the older, more successful and definitely most profitable law firms in Jacksonville.\n\nAnd they had made a lot of that money representing Lancaster and his oil company for nearly 30 years. Plus, Mort Bailey was a personal friend of Lancaster before his death, also Deirdre's godfather. \n\nSo I didn't have any illusions about what I was walking into. I'd received several e-mails and one very personable call from a very sexy sounding female associate inviting me in to discuss the situation involving Deirdre with members of the firm in an \"informal and relaxed atmosphere.\"\n\nI had no doubt they were probably planning on separating me from my cock and balls in an \"informal and relaxed manner\" and assumed I'd be a sheep walking into the slaughter among a pack of ravenous wolves.\n\nBefore I stepped out of my 2003 Jeep Liberty I made a series of quick phone calls, then closed out the last one and stepped out of the Liberty, making sure to hit the lock. This part of Jacksonville was Lawyer Town with more attorneys and practices in a square mile than should be allowed by law. It was a miracle that the stench of brimstone didn't hang over the entire area. \n\nBut despite the fact that it was usually crawling with cops and a whole host of hypersensitive legal eagles, this part of Jacksonville was also crawling with crackheads and crack whores and pot and pill and coke dealers and pushers and people willing to part you from your life for a $100 bill. So it was never a good idea to be walking late at night, unless you were one of the former types, and you never left your vehicle unlocked.\n\nI walked in the front door and took a deep breath. It was the smell of money and law books mingled. A redhead in a dark crimson dress cut just low enough to tease males entering the room looked up at me and smiled.\n\n\"Good afternoon, sir. Can I help you?\"\n\nI couldn't help smiling back at her, despite her being one of the Enemy.\n\n\"I'm sure you could, but I'm actually here to see Mr. Bailey or someone in his staff. I'm Michael McCarthy.\"\n\nHer smile flickered only for an instant and then she said, \"Oh. Of course, Mr. McCarthy. \n\nThey are waiting for you in the third floor conference room.\"\n\nShe gestured to someone to my left and a shadow materialized which turned out to be a monolith about four inches taller than my 6-2. He was dressed well, but the bulge of a large caliber weapon in a shoulder holster on his right, his close cropped hair and that cold stare told me he wasn't an attorney type. I'd seen his type in rough areas around the world. But I hadn't expected to find him here in Jacksonville.\n\n\"If you don't mind,\" he said, gesturing to me to raise my arms.\n\n\"And if I do mind?\"\n\n\"That would be a shame...sir. My job is security for the building and I'm afraid I can't take you up until I've checked you for weapons.\"\n\n\"Seriously?\"\n\n\"Seriously. You may not have been following the news, but there have been several incidents in the city where an irate client shot or attempted to injure attorneys or their staffs. One attorney was shot in the courthouse. Mr. Bailey and his staff often deal with matters that arouse extreme emotions. So, no one goes up without being checked.\"\n\nI raised my hands and let him pat me down. He brought out several objects but after inspecting them, handed them back to me. I turned around and let him do the same.\n\n\"Follow me, sir.\"\n\nI followed him to an elevator door whose brass must be polished to gleaming perfection every night. About 10 seconds after he hit the button it opened and I followed him in. The ride took another 10 seconds and then I followed him out to a hallway lined by pastoral landscapes. Just walking down the hallway was enough to induce daydreams of running through fields of wildflowers under a summer sun. I doubt any pissed off client could keep fury going by the end of that long walk.\n\nMy guide stopped and gestured to another door. I opened it and stepped inside. And stopped.\n\nIt was a long room and in the center was a long oval table with room for twenty-six seats, 12 on a side and seats at both ends. The table was polished wood, polished so brilliantly that I felt like squinting from the reflection of the overhead lights. \n\nThe table wasn't what made me come to a complete stop. Fifteen of the seats were occupied. I spotted Bailey sitting at the end of the table, with Billy Wilkes sitting to his right. Deirdre was at his left. She was looking down at the table. And there were 12 more occupied seats. If this was what Bailey and Wilkes considered an \"informal and relaxed\" meeting, God only knew what they would muster up for a formal meeting.\n\nBailey motioned to the seat at the opposite end of the table from him.\n\nI pulled it back and sat.\n\n\"I think this is how Custer must have felt at that little get-together at the Little Big Horn.\"\n\nBailey didn't break a smile.\n\n\"I appreciate your efforts to break the tension, Mr. McCarthy. But this is a serious situation and a serious meeting. I was hopeful our getting together outside of an official meeting place would help us talk frankly - and realistically - about how we can resolve this dilemma to everyone's satisfaction.\"\n\n\"Where no one is taking notes and nothing gets into the record. Off the books, so to speak?\"\n\nHe looked over at Deirdre and it was as if a silent message passed between them. She met his glance and then she raised her gaze to me. She tried to make it a stranger's stare, but I saw something behind it. Or maybe I just thought I did. She lowered her eyes again.\n\n\"Exactly, Mr. McCarthy. Being able to speak honestly has helped mediate many a knotty problem.\"\n\n\"Well, I'm here. Let's talk.\"\n\n\"Before we do, Mr. Harper-Stevens (pointing to the 6-6 feet of beef on the hoof who had patted me down) has informed us of several devices you carry. One appeared to be a digital recorder. And the other was a cell phone that could be used as a recorder as well. To ensure that we can speak frankly, I'd appreciate your turning those over to one of our secretaries during this meeting.\"\n\n\"They're not set to record and you can see that. I wasn't aware we'd be discussing anything particularly illegal or inappropriate here today. My 'devices' stay with me. Or I walk out of here. Your choice.\"\n\n\"Your attitude is not what we were hoping for, but, as you said, we won't be discussing anything illegal here today. At any rate, I appreciate your wanting to get right down to it. Let's do that. You're aware that your wife wants out of your marriage?\"\n\nI took a deep breath.\n\n\"I know that on several occasions she has made it known to me that she isn't happy, but that's a long way from wanting a divorce.\"\n\nShe looked me straight in the eye for a moment then dropped her eyes again.\n\nBailey reached out to take her hand.\n\n\"She told you she wanted a divorce two months ago. And told you again that she wanted a divorce a month ago. And told you a week ago that she wanted a divorce. I'm not sure how much more clear she could have been.\"\n\nAs she glanced up again, I stared back into those eyes that had once loved me. Somewhere inside me I cherished the fantasy that she still did. But I couldn't prove what she denied was true. Her beautiful face still bore the bruises from the automobile accident that had nearly killed her and had killed our marriage.\n\n\"Deirdre-\"\n\nHer voice was trembling, but iron in its conviction.\n\n\"No, Michael. Whether you believe it or not, I didn't fall in love with you. I didn't marry you. I didn't spend a wonderful two years as your wife.\"\n\n\"You know you did. It doesn't matter whether you like it or not, it's a fact.\"\n\n\"No,\" she said, for a moment her voice breaking. \"I know what you say, and I know what other people say. I've seen the pictures of our wedding. But all that doesn't make any difference. I didn't meet you. I didn't fall in love with you. I didn't live with you for two years. For me, none of that ever happened. It isn't real to me.\"\n\n\"Amnesia doesn't cancel out reality. It doesn't make a marriage go away.\"\n\n\"It cancels love,\" she said. \"I don't know you. I never fell in love with you. When you touch me, it's a stranger touching me. How can you expect me to - want you that way - when we've never touched. Never kissed. This is like a nightmare I can't wake up from. All I want is for this - for you - to go away so I can go back to my real life.\"\n\n\"It seems pretty clear cut, Mr. McCarthy, that regardless of whether you were married before, you're not married now,\" the other senior partner Wilkes said in a voice dripping with mint julips. You can take the boy out of Blue Grass, but you can't take the Blue Grass out of the boy - even after the absence of decades.\n\n\"Maybe in law you are, but in reality, there is no marriage.\"\n\n\"I thought lawyers believed in the law.\"\n\nBailey shook his head with something that was almost a smile crossing his features. But not quite.\n\n\"Lawyers don't believe in the law, Mr. McCarthy. We believe in our clients. The law is merely the tool we use to advance our clients' interests.\"\n\n\"It would seem to me that if you were looking out for your client's best interest, you'd be encouraging her to agree to my request that we go to a marriage counselor while she works with the best psychiatrists and physicians we can find to try to unlock her memories.\"\n\n\"That is your idea of Ms. Lancaster's best interest,\" Bailey said. \"She believes her best interest is to end this non-marriage and resume her previous life.\"\n\nHe steepled his fingers together and stared at me across the long expanse of polished wood.\n\n\"As a practical matter, Mr. McCarthy, this meeting is in truth a gesture - of respect for your position. Quite honestly, I can understand your feelings and if I were in your situation and were about to lose a wife who appears to be the woman I wed but is a different person, I would fight just as hard to hold her.\n\n\"But the hard cold truth is that you really have no say in the matter. Florida is a no-fault state. If Ms. Lancaster wants a divorce, she will have her divorce. You can fight it, but you will lose.\n\n\"I'll still fight it.\"\n\n\"Why?\"\n\n\"Because I love her. Because she is my wife. Because amnesia is a tricky thing and she could regain her memories AFTER she's married to another man and that would be the pits. Because I don't like losing. Call me anal, but I like to keep the things that are mine. Because no matter what you say about Florida being a no-fault state, it only works that way if you give up and let it. If I fight it, if I keep throwing up roadblocks, I can delay it. And the longer I delay, the more chance I have that her memories will return.\"\n\nBailey passed a folder to the silver haired attorney who sat on his left, next to Deirdre. He brought it over to me. It was the report from Dr. Herbert Mayfair, the psychiatrist who had examined Deirdre after the accident and had been treating her since then.\n\n\"I don't know if you've had a chance to examine Dr. Mayfair's report...\"\n\n\"I have.\"\n\n\"Glance at it again, please. Humor an old man. Dr. Mayfair is a respected psychiatrist who has been in practice for 15 years in Jacksonville. Read his conclusions.\"\n\nI'd already done so, but I opened the folder and glanced through the pages. Toward the end he wrote:\n\n\"My investigation, together with medical data from the accident through the current time, leads me to conclude with close to 100 percent certainty that Ms. Lancaster has suffered serious brain trauma that alone would be sufficient to explain her amnesia covering the period of the last three years.\"\n\n\"Following the traffic accident of March 17, she was admitted to St. Vincent's with swelling in her brain from the trauma of smashing into the front windshield of her vehicle. This swelling, bleeding into the brain and the trauma could easily have caused sufficient damage to destroy parts of her memory.\"\n\n\"While there are no signs of continuing brain damage, nor any lasting damage to the brain, the trauma itself could easily have caused amnesia that would remain long after any physical damage disappeared.\"\n\n\"There is also the possibility that any physical damage would have been compounded by psychological factors. Based on Ms. Lancaster's surviving memories, and testimony from people around her, she had no relationship with Mr. McCarthy prior to the last three years and she exhibited resistance to the idea of marrying him but was in effect forced to by her father. If this information is correct, it is very possible that she simply does not want to remember the years of her forced marriage.\"\n\n\"In conclusion, it is my professional opinion that further attempts to restore her lost memories would not only be very unlikely to succeed, but moreover would work against her overall best interests for continued mental health.\"\n\n\"As you can see,\" Bailey said, \"it is unlikely that your wife's memories will ever be recovered, or for that matter, should be. Any professional can tell you that amnesia is still a very hazy area. Are you prepared to gamble your wife's happiness on a hope that Dr. Mayfair says is unlikely in the extreme?\"\n\nI could have quibbled about the obvious fake references to Deirdre's unhappiness during our marriage. She could have been acting, but I didn't think she had been. But I wanted to keep this little get together going, I picked up my cell and hit the number one. As everyone at the table stared at me, I told the person on the other end, \"It's time. Come on up.\"\n\nBailey started, \"what is going on, McCarthy,\" before I interrupted. \n\n\"You didn't say I had to come alone to face your legal army. I have someone I want up here.\"\n\nBailey stared for a moment, then told his private muscle, \"Go down and meet whoever it is.\"\n\n\"You can send him down, but it's going to be a waste of time. Nobody is going to believe he's a gun toting crazy and if your ape lays his hands on him, you're the ones who are going to be facing a big civil lawsuit.\"\n\nBailey picked up a landline phone on the table at his right and punched in a number and listened.\n\nAfter a moment, he grimaced and said, \"Send him up. He doesn't need an escort.\"\n\nBailey looked over at the muscle and said, \"It's alright Stevens. Head downstairs and resume your duties,\"\n\nA half minute after Harper-Stevens walked out, a tall, angular man with dark \n\nhair cut in an old fashioned almost-buzz cut walked in. Combined with the hawk nose, the piercing gaze and the ram-rod straight posture, he could have posed for a World War I German Aircraft Ace Poster. The only thing missing was a monocle and a cigarette held loosely in his lips with a cigarette holder.\n\nHis eyes seemed to take in and assess everything around him. Even if I hadn't known he was a shrink, I would have known. Some cops are cops in or out of uniform, some doctors don't need a white coat and stethoscope. He was one of those guys. He sat down beside me. \n\n\"Dr. Teller.\"\n\n\"Mr. Bailey, gentlemen.\"\n\nTeller nodded to them \n\n\"Can I ask what you're doing here today, Dr. Teller? This is not a hearing, nothing official at all. This is just a conversation between Mr. McCarthy and some of our staff about his marital situation involving Ms. Lancaster.\"\n\nTeller nodded to me and then looked back at Bailey.\n\n\"I'm not really sure why you'd need half your legal staff for a simple conversation, but in any case, Mr. McCarthy decided he wanted to have me on hand if questions arose about Mrs. McCarthy's mental condition. By the way, I'm not quite sure why you refer to her as Ms. Lancaster. As of this moment she is still legally married to Mr. McCarthy.\"\n\n\"It's a matter of a woman's choice, Dr. Teller, as I'm sure you're aware, and in her mind, Ms. Lancaster is all but a single woman again. The steps to that end are merely a formality.\n\n\"And,\" Bailey said, \"we welcome your input, but I know you've read the report from Dr. Mayfair as to Ms. Lancaster's condition. You're a respected professional in your field. So is Dr. Mayfair. Regardless of your opinion, we have enough with Mayfair and other related testimony that we believe a judge will rule that Ms. Lancaster cannot be held against her will in a marriage that simply doesn't exist in her mind.\"\n\nTeller rubbed his chin as if he were pondering some deep puzzle.\n\n\"You obviously are aware of my report on my conversation with Mrs. McCarthy. And you are equally aware of my conclusion that there is nothing to indicate that there was any continuing trauma or brain damage that could have contributed to any type of amnesia. Amnesia is such a catch-all phrase that it can be applied to so many types of memory disturbance that it really means nothing at all unless you can be more specific.\n\n\"While my investigation of her hospital records and MRI and CAT scans showed some initial brain swelling which would be expected in such a violent accident, there is nothing to indicate the kind of severity that would cause such a loss of memory, much less one limited to a certain period of time. And there is nothing at all to indicate continuing brain swelling or other stressors.\"\n\nHe pulled Mayfair's report from in front of me and opened it, flipping through the pages.\n\n\"As to Dr. Mayfair's conclusion that there may be psychological reasons for the amnesia, that is one of those diagnoses that are easy to make, and virtually impossible to rule out. Great for backing up a diagnosis of amnesia when there's no other tangible evidence.\"\n\n\"That's your opinion, Doctor,\" Wilkes said. \"And while you are a respected psychiatrist, I'm sure you're aware that opinions are like assholes. Everyone has them. Everyone is entitled to their own opinion.\"\n\nLeaning over to me, Teller said softly, \"There's a reason the saying - First, let's kill all the lawyers - is so popular. Wilkes loves to shake up opposing witnesses, and he can get away with a lot more today than he normally could.\"\n\nLooking back at Wilkes, Teller said, \"You're right of course. An opinion is an opinion, not a fact. I can only say that after interviewing hundreds of suspects in cases ranging from murder to rape to cannibalism, I have come to a firm conclusion that Mrs. McCarthy is not telling the truth.\"\n\nHe stared at Deirdre until she raised her gaze to meet his. Normally she had the poise and control of being the Princess and heir to a kingdom, but I saw something in her eyes I'd rarely seen before. Fear, or at least uncertainty.\n\n\"Normally, I'd leave my comments at that. Any further comments would be in most instances inappropriate. But, since this is apparently a very informal meeting to air out our differences and you have no difficulty in bringing assholes into this discussion, I'd be remiss if I didn't tell you, Mrs. McCarthy, that I believe very strongly that you're lying about suffering from amnesia and an inability to remember your husband. You're faking.\n\n\"And,\" he said before Wilkes could reply, \"while it may be impossible to come to a 100 percent reliable conclusion as to the truth of her comments, there is a method available that would at least lend a strong indication as to their validity.\"\n\n\"No!'\n\nBailey reached over and grabbed Deirdre's hand. She had blurted it out so quickly there was no doubt what she was talking about.\n\n\"Ms. Lancaster is perfectly in her rights in refusing any type of lie detector test, Dr. Teller. You know that such tests have never been allowed in court because they are not reliable. In this situation involving extreme emotional stress, they would be even less reliable.\"",
        "\"They cannot be probative, of course, but many suspects in criminal cases take them simply to bolster their claims to innocence. If Mrs. McCarthy were to take such a test, it would at least add weight to her claim to be telling the truth. And it would show she was not afraid to take the test.\"\n\n\"Why not just take a lie detector test, Deirdre,\" I asked her, her gaze drawn to me like iron filings to a magnet. \"What have you got to lose? As Bailey said, if you want a divorce you'll probably get one no matter what I do. If I could really believe your story, I might...be willing to walk away.\"\n\n\"There will be no lie detector tests,\" Bailey said.\n\nShe stared at me with what seemed like real regret in her eyes.\n\n\"Why can't you believe me? Let me go so we can both get on with our lives.\"\n\n\"I can't believe you because you've told so many lies.\"\n\n\"Mr. McCarthy! I'll ask you to remember that this meeting was called in part for your benefit, to allow you to work out a reasonable settlement that otherwise could very well cost you many thousands or more in legal fees to resolve. Any more comments along those lines and we'll have to reconsider continuing.\"\n\nWilkes had obviously taken to the bad cop part with glee and enthusiasm. I stood up and pushed back my chair as Teller also stood up.\n\n\"Gentlemen, it's been real. See you in court. Real court.\"\n\nBailey motioned to me to sit.\n\n\"Mr. McCarthy, Billy, let's keep our heads. We won't do anyone any good if we let emotions run rampant. Everybody sit down. We may have to discuss some sensitive issues, we probably will, but I think we all realize that everyone is going to save a lot of money and hurt feelings by getting as much done today as possible.\"\n\nHe did a pretty good job of smoothing things out, but I had the advantage. I knew I could climb on the table and piss on his head and they wouldn't let me walk out. They needed me and my agreement more than I needed anything from them.\n\n\"Now, Mr. McCarthy, while my associate might have been a little strident, there really is no need to be talking about lying. No matter who might have lied about what, it won't make any difference in a divorce case.\"\n\n\"But you see, that's where you're wrong. My wife has lied about some important things. Things that hurt. And if you want to know why I'm in no mood at all to be cooperative, or reasonable, it's because I'd like to expose those lies.\"\n\n\"Mr. McCarthy. No matter how much pleasure it might give you to bring up dirty laundry from your marriage, it doesn't serve any good purpose -\"\n\n\"It serves the purpose of keeping me here. You invited me. And the longer I'm here, the more certain I am there's something you want from me. Let's get everything out in the open.\"\n\nHe leaned over and talked briefly to Wilkes in a whisper.\n\n\"Alright, Mr. McCarthy, we'll give you room to run. Perhaps if we can get these issues into the light, we may be able to save everyone a lot of grief. Go ahead.\"\n\nI picked up my cell and hit the number three. Then I sat back and waited, watching Deirdre's face, staring from Bailey to Wilkes to the silver haired attorney to a female lawyer. But never at me. Never at me.\n\nFive minutes later Earl Wilson walked in. He carried a briefcase and was dressed in office casual, a pair of grey dress slacks, polished black shoes, and a white dress shirt without a tie. He walked back to me and sat, swinging the briefcase up onto the table.\n\n\"This is Mr. Earl Wilson, Wilson Investigations. I'd give you his qualifications, but I'm pretty sure you've already used him or gone up against him. When I came back into the country and found out about Deirdre's accident, I was curious. She is headstrong and reckless, but I'd never known her to be careless in her driving. I knew her father had her trained as a young teenager by the best defensive drivers in the world.\n\n\"Not that he was concerned about her joyriding, but the daughter of anyone worth that kind of money always has to be alert to the possibility of kidnapping or terrorist assaults. During our marriage we did some driving and I could honestly say that she was a better driver than me, and I'm not bad.\"\n\nAs I spoke she lifted her gaze again and stared. She knew I knew.\n\n\"So I employed Mr. Wilson to look into the accident and my wife's behavior in general before and after the accident. I'll let him continue.\"\n\nWilson had snapped open his briefcase and took out papers and photographs.\n\n\"I studied the accident report and associated accident and injury photographs. For some reason the photographs and diagrams were difficult to find. I was even told that they were misplaced or lost. However, I was able to find them and made copies, which I have for your inspection if you'd like.\n\n\"The very first thing I noticed was a contradiction between the accident report and the photos of damage to the car and injury to Mrs. McCarthy. The police report stated that Mrs. McCarthy was the driver and alone in her car at the time of the accident. The accident occurred on Interstate 95 entering Jacksonville from St. Augustine. It appeared that Mrs. McCarthy lost control of her vehicle at a relatively high speed and slammed into a power pole on the side of the highway.\"\n\nHe tapped his fingers on the polished wood and looked from Bailey to Wilkes, a slight smile playing on his face. Bailey looked like he was about to snarl and Wilkes like he was about to have a violent intestinal attack. Both of them knew what was coming. \n\n\"If you examine the photographs of damage to the car, the major portion of the damage was to the right front, not the driver's side which would be the case if it had run head-on into the power pole. It looks, in fact, that the driver tried to take evasive action to swerve to the left. And the majority of the blood and other evidence of the collision was on the right, passenger side.\n\n\"I submitted the data to two different accident experts, and they both agreed that there was no human way that Mrs. McCarthy could have suffered her injuries if she was driving the vehicle. She had to be in the passenger side at the time of the accident.\"\n\n\"I'd say that only proves that you used the services of two low level so-called 'experts',\" Bailey said. \"I'm not an accident reconstruction expert, but I've handled enough of these cases to imagine several ways in which a driver could be bounced around and suffer those same injuries\"\n\n\"And, in any case, what difference does this make to anything we're talking about,\" Wilkes added.\"\n\nI made a gesture to Wilson and he prepared to continue. As I did I looked at Deirdre and I could see it in her eyes. She looked like an animal whose pursuers were closing in, closing off all avenues of escape.\n\nI didn't say the words in the increasingly quiet conference room, but I felt like she hadto have heard my thoughts.\n\n\"You fucking bitch. Why did you have to lie? If you'd just come to me and been honest, we could have done this the easy way.\"\n\nWilson leaned forward on the table and folded his hands in a mock prayer.\n\n\"Since it seemed virtually certain that there had been two people in Mrs. McCarthy's vehicle, I became curious about how the police report said nothing about a second person. I talked to a lot of people. I found a police communications official who told me the accident had originally been called in as involving two individuals. But within a few hours any mention of a second person seemed to have been forgotten.\n\n\"Now, Mrs. McCarthy was taken to Baptist Medical Center and there was no record of another patient being brought in from an automobile accident at about the same time. But, I checked other hospitals, and I found out that a Julian Gutman had been brought into University Medical Center at about the same time. Curiously enough, he sustained injuries including a broken rib and facial lacerations of the type an exploding air bag on the driver's side would have caused.\n\n,Wilson looked from Bailey to Wilkes and he couldn't keep the smile off his face.\n\n\"Now, normally, any time a patient is brought in from an accident, a police report is written. But, for some reason, I couldn't find any report on Gutman's accident. The only way I could imagine that happening was if someone was willing to spread a lot of money around to see that no reports were filed. To avoid embarrassment to all concerned. And it would take a LOT of money and pull in high places. Because if it were to come to light, the officers in charge would be in deep shit with Sheriff Knight. Unless the orders on how to handle it came from him, and in that case you're looking at a major political scandal.\"\n\nFor once Bailey and Wilkes had nothing to say.\n\n\"And as a matter of interest, Julian Gutman...\"\n\n\"Is the asshole who seduced a 17-year-old, got her pregnant leading to an abortion, and took a million dollars from her daddy to go away and never come back,\" I chimed in.\n\n\"And then as soon as daddy was gone, he crawled back and started working on her again.\"\n\nI tried to get her to look at me but she refused. It didn't matter.\n\n\"Not much mystery about who was driving her car, is there?\" I said, to make the point clear. \"Or what they were doing? Or really, who spent all that money and used all that influence to make Julian disappear from the story?\"\n\n\"You're coming very close to slander, to actual defamation of character,\" Wilkes said. \"You're not dealing with public figures. You even suggest that our firm conspired to break the law, and you'll be lucky if you're left merely broke.\"\n\nI almost laughed out loud.\n\n\"If I didn't know how good an investigator Mr. Wilson is, I might be trembling a little bit, but whatever he comes up with will be rock solid. And I think he can come up with enough evidence to cause you a lot of heartburn, so let's hold off on the legal huffing and puffing. Mr. Wilson, would you continue?\"\n\n\"Yes, sir. Well, I acquired enough confirmation about Mr. Gutman's injuries and more information about Ms. McCarthy's condition - information that wasn't in any medical records. I found a nurse who said she and others who treated Mrs. McCarthy when she was brought in noted the - unusual - nature of her injuries.\"\n\nWilson stopped for a moment but no one was going to ask.\n\n\"Mrs. McCarthy did suffer facial injuries and there was a fair amount of blood, but in cleaning her injuries the attending nurses found another substance mixed with it. The nurse who told me the story said it was fairly obvious what the substance was, but to be thorough the nurses took samples and had it tested. The substance was male semen. The nurses said it was - a direct quote - all over her face.\"\n\nDeirdre had a naturally rosy complexion that any Irish lass would have been proud of, but now her complexion flooded a deeper red. But she said nothing.\n\nWith a smile on my face, I asked, \"Wilson, that would seem very unusual, wouldn't it? Did the nurses have any ideas on how her face might have wound up splattered with semen?\"\n\nWithout breaking a smile, Wilson said, \"Well, there was some speculation that there was a divine incident and an angelic being somehow ejaculated all over her face during the accident. Or, an attendant in the ambulance might have done the dirty deed, without the two other staff including one female paramedic also in the ambulance, having any idea what happened. OR, Mrs. McCarthy and Mr. Gutman might have been having sex in the car prior to the accident. \n\n'I'll leave you gentlemen to decide what the consensus of opinion was among medical personnel.\"\n\nHe leafed through another packet.\n\n\"Following the discovery that the two of them had been together that night, I started backtracking them. Fortunately Mrs. McCarthy's own security people have GPS trackers installed in all her private and corporate vehicles for protection in case of kidnapping or terrorism. These of course are not open to public review, but by a series of fortunate coincidences I was able to access them and they showed the two had spent some time at Neptune's Cave, a lounge on St. Augustine Beach.\"\n\nHe smiled as he discussed the 'fortunate coincidence' which I knew had to piss off Bailey and Wilkes. He was very good at finding out things that he wasn't supposed to know anything about. The only thing he was better at was wiretapping.\n\n\"I was able to find witnesses who observed the two of them being - very intimate - while they were there for several hours. And they were seen to leave the establishment together, very inebriated, and allegedly returning to Jacksonville, where Mr. Gutman was living in a condo purchased for him by Mrs. McCarthy.\"\n\n\"Enough,\" Bailey said, and while he wasn't loud, he silenced the room.\n\n\"We've already discussed the fact that none of what you've said can be proven and regardless, it makes no difference at all to a future divorce. I'm not going to comment on whether Ms. Lancaster might have had a relationship with Mr. Gutman. Because, if she did, it would be a matter of no importance. Adultery carries no weight in the modern world where children are not a factor and support or alimony is not a factor.\"\n\nHe reached out and grabbed Deirdre's hand in a gesture of support.\n\n\"Again, there may be differences of opinion as to the memory loss she's suffered. But regardless of what you believe, it doesn't affect her request for a divorce. So, despite all of the extraneous issues you've brought up, the central issue we have to settle is how we can most painlessly bring your marriage to an end.\"\n\n\"I guess you weren't listening when I said I don't want a divorce and I'll fight you as long as I can to keep my wife from running around with the piece of shit who got her pregnant when she was underage and then ran like a scared rabbit when her daddy waved money in front of him. Even if I didn't love her, I'd fight a divorce just to piss him and her off.\"\n\n\"Is it worth spending the kind of money you'll have to spend to piss off your ex-wife?\"\n\n\"Money is not going to be a problem for me.\"\n\nWilkes gave me a knowing look and said, \"So you're planning to soak your ex-wife because she's wealthy. In a marriage of only two years, when the partners spent the majority of that time apart, I don't think you could expect a substantial settlement of any kind.\"\n\n\"No, I just want what's due me if Deirdre insists on this divorce.\"\n\n\"What is due you!?\" Wilkes said in apparent disbelief. Of course, he knew better but all good lawyers have to have the acting bug. A lot of them might have made it on the silver screen if they hadn't had to take such a big pay cut to become movie stars.\n\n\"Yes, Mr. Wilkes and Mr. Bailey, what is due me. The real reason we're here today. We can continue playing games, but I know what's at stake. I've always known. We can do this for hours, but why not cut to the chase?\"\n\n\"If you're familiar with why we're here, why go through all this,\" Bailey said, pointing to Wilson and Teller.\n\n\"I wanted to see if at some point she could look me in the eye, if she had any kind of conscience left, if the girl I thought I knew was still alive in there. The answer is obvious, now.\"\n\nBoth Teller and Wilson looked at me curiously. They had played their parts, but they didn't know the end game here.\n\n\"I feel like I came in here in the middle of a movie,\" Wilson said, \"and I thought I knew the plot of the whole story.\"\n\n\"Do you mind?\" I asked Bailey. He shrugged.\n\n\"This whole meeting has never been about Deirdre wanting a divorce and my refusing her, or about this amnesia that's she's claiming. I always knew the amnesia was faked, and I would have given her a divorce at any time, but she wouldn't divorce me if she could - the way things are now.\"\n\n\"How could you know?\"\n\nFor once she stared at me without lowering her gaze. And just for a little while, I saw the woman I'd known.\n\n\"It was simple, Deirdre. When I came back, you acted shocked as if you'd never seen me before. You knew who I was, because obviously people would have shown you my picture. But you said you'd never seen me in person.\n\n\"Your father told me, though, when he first asked me to watch out for you that you'd had a huge crush on me in your early teens. I didn't notice you at all, but you noticed me. You might not have remembered our dating or our marriage, but you wouldn't have completely forgotten a guy you'd had your first big crush on.\n\n\"And when you seemed to have completely forgotten about me, I knew the amnesia wasn't real. From there it was just a matter of investigating and placing enough bugs in various locations to pick up clues.\"\n\nI turned my attention back to the legal army at the other end of the table. I stood up and paced.\n\n\"What I couldn't figure out at first was WHY Deirdre would fake amnesia. As you pointed out, gentlemen, I couldn't stop her from divorcing me if she really wanted to. And, quite honestly, Deirdre, once I found out that you were screwing around with that piece of shit Gutman, I would have let you go.\"\n\nI walked up behind Deirdre who stiffened but did not move. The silver haired younger attorney started to rise but Bailey shook his head and motioned from him to stay in his seat.\n\n\"It's okay, Matt.\"\n\nI placed my hands on her shoulders and gently tightened my grip. She refused to look around at me.\n\n\"But when I realized it was Gutman you were cheating with, everything fell into place. I knew why you'd come up with the amnesia plan. It was pretty smart. It's not going to work, but it was clever and it showed imagination. I knew it had to be your idea. Gutman was too fucking stupid to come up with something like this.\"\n\n\"I usually like those murder mysteries where the detective gathers all the suspects together in a room and lays out the plot, but I have to admit, I'm still completely in the dark,\" Wilson said. I had a feeling that some of Bailey's staff were also completely lost. \n\n\"I really don't know what the hell is going on,\"\n\nMy dramatic gesture of stepping up behind Deirdre and laying my hands on her shoulders was backfiring. I could feel the heat of her skin under my fingers and I could remember what that fair flesh had felt like when it was skin to skin. Keeping my fingers from stroking was getting harder and harder, and I wasn't sure I was going to be able to release her. Even knowing what she'd done to me, there was a tactile memory of our nights together that was getting stronger and stronger.\n\n\"It's because you don't have all the facts, Wilson. The most important of which is that Mr. Lancaster was concerned that our marriage have a good chance of succeeding and so he placed some pre-nuptial provisions on the marriage. Legal provisions that both Deirdre and I had to agree to and sign.\"\n\n\"Simply put, for every year of the marriage, I was to be given one million dollars in a settlement in the 10th year of the marriage. We could divorce or not after the 10th year, but the money would go into an account for me. If the marriage ended through Deirdre's infidelity, I would receive an automatic $10 million payout. If the marriage ended prior to the 10th year for any reason other than MY infidelity, I would receive $10 million.\"\n\nThere was a notable stillness in the room. The mention of a $10 million divorce penalty would tend to do that anywhere other than Hollywood - or the Hamptons.\n\n\"Now, a $10 million marriage penalty, which Lancaster obviously put into play to try to keep his daughter from falling prey to fortune hunters while she was married, might have had a deterrent effect of most people, but not Deirdre. She has always been a very spoiled rich little girl and I knew that she'd probably pay it without blinking an eye to find happiness with Gutman.\"\n\nThat soft flesh under my fingers could have turned to warm stone.\n\n\"But Julian Gutman, he's another story. Julian came from a lower middle class family and a million dollars is serious money to him. $10 million ... I doubt he can count that high. And the thought of me walking away with $10 million of what would have been HIS money after he married Deirdre must have burnt his ass up.\"",
        "\"No, this has all been a ploy to somehow get around giving me the $10 million that Lancaster wanted me to have. Deirdre had to break her father's will to keep her asshole lover happy. And the thought of whatever else she has done to keep him happy turns my stomach.\"\n\nI bent my head so my lips almost touched her ear.\n\n\"That you did all this for him, that's what hurts the most.\"\n\nWithout turning her head or moving an inch she whispered back, \"let go of me, Michael. Just let go.\"\n\nI managed to unclench my hands and backed away. I had to, and I had been in enough bar room brawls to sense that Matt - whatever his name was - was tensing in his seat to rise up and do something foolish. I wondered if he'd also sampled Deirdre's pleasures. But Lancaster had told me that when she was with Gutman she had eyes for no one else.\n\nMore than likely, this was simple chivalry. She was the kind of woman you wanted to do things for. I had maybe an inch on Matt, and he was a lawyer for Christ's sake, but, like I said, you develop certain instincts and I had the feeling he might be tougher than he looked.\n\nI backed away and held my hands up in a peace gesture.\n\n\"And in this fantasy of yours, how does Ms. Lancaster developing amnesia do anything to this end?\" Bailey asked. He didn't look really unhappy. This had been a fishing expedition and now they knew what I knew.\n\nWilson leaned back in his very comfortable chair and said, \"Hey, guys, I'm an outsider and even I can answer that. Lancaster was a devout Catholic, as are you, Mr. Bailey. The McCarthy's were married in a Catholic Church with the Monsignor Gerald Alcott presiding. And I know you don't have the presiding head of a Catholic diocese do many private weddings. So he's obviously close to the Lancaster family.\n\n\"I'm not Catholic, but I've worked on some divorce cases in Catholic marriages. The Catholic Church is not big on divorce, but there are a few exceptions. And annulments can be had for various reasons. They don't hand them out like Halloween candy, but the church does allow them.\n\n\"I would imagine that if Mrs. McCarthy were to visit the Bishop with her tale of woe - a very short marriage with no children ending in her forgetting everything from the past three years and making her a stranger to the man who wanted to spend the night in her bed - he would be at least inclined to listen to her plea.\"\n\n\"Maybe,\" Bailey said. He was smiling now and I didn't like it. \"But, gentlemen, even if you think that my respectable firm would engage in such sculduggery, what about the civil courts? Mr. McCarthy could carry the fight there, and Catholic doctrine doesn't carry much weight there.\"\n\nI took in that smile. I had a feeling Bailey wasn't used to losing and he wasn't going to tell me that his firm was going to do the right thing and give me what Lancaster had wanted me to have in the event that Gutman slithered back into his daughter's life.\n\n\"Why do I get the feeling that you're not really worried about whatever I'm planning to do all that much?\"\n\n\"Perceptive,\" Wilkes said to his partner.\n\n\"Smart too. Orion told me that he was smarter than you'd expect from his appearance. Said he looked like a big roughneck, but he had the brains to build OIL Inc. even bigger someday. Turned out he was right. Did you know this was a production, Mr. McCarthy?\"\n\n\"A production?\"\n\n\"I think you know what I'm talking about. We wanted to find out what you knew, what you'd done, and what you were likely to do in the future. You were much more likely to be free with information in an informal setting. We've learned what we set out to discover. And since we don't need to continue the production, we start the real talking.\"\n\n\"So? Talk.\"\n\nHe pointed at Teller and then at Wilson, saying, \"You gentlemen won't be needed any longer. McCarthy, why don't you let them leave.\"\n\n\"I don't think so.\"\n\nHe got up from his chair, the seat of power, and walked down the length of the table, finally resting his hip on the tabletop casually.\n\n\"Fine. Let's sum up. You believe your wife is faking amnesia from a very real and serious automobile accident. You have a psychiatrist who shares that opinion. We believe Ms. Lancaster suffered real and serious brain damage in a horrendous accident. Nobody, in our opinion, would put themselves through that kind of trauma to stage a fraud - one that she didn't need anyway.\"\n\nHe pointed to Wilson.\n\n\"You hired a private investigator who acquired information that casts doubt on Ms. Lancaster's account of the accident, but you can't prove anything regarding the details of the accident and the supposed malfeasance of the Jacksonville Sheriff's Office.. You can prove that she was seeing Mr. Gutman while she was still married to you. But, without making light of your feelings, from a legal sense - so what?\n\n\"Her relationship with Mr. Gutman was and is perfectly legal. It happens. People fall in and out of love all the time. She is obviously not going to seek to reconcile. And she will do everything within her power, and ours, to see that you do not receive the $10 million provided for in the marriage documents.\"\n\nHe ran a hand over his bald and shiny head.\n\n\"Does that pretty much sum up the situation?\"\n\n\"Yeah, pretty much. Except you glossed over the most important point, which is I am going to be awarded that $10 million no matter what kind of legal smoke and mirrors you're going to use to break the pre-nuptial agreement.. You're going to lose.\"\n\nBailey got up and walked toward me until he was close enough to touch. For a man in his 60s, he was in pretty good shape. He looked back at his army of staff and motioned and an older woman, dark haired and still attractive, stood and brought him a document.\n\n\"Thank you Marge.\"\n\nShe showed a little wiggle as she walked away and the look in Bailey's eyes showed me that there was more than legal business going on in this office when the two of them were alone. It was encouraging to know that there was still life south of the border into the later years.\n\nHe handed me the document.\n\n\"As you'll see, this is an agreement to give up any claim to the $10 million in return for an immediate $250,000 payment. You can sign that right now Mr. McCarthy and receive the $250,000 today. Ms. Lancaster can receive her uncontested divorce within the month and you two can resume your separate lives.\"\n\nI couldn't help smiling.\n\n\"You obviously think I'm an idiot. Why would I do that?\"\n\n\"Because you won't have any choice.\"\n\nHe moved to the center of the room and made a sweeping gesture to cover the whole room.\n\n\"You made a joke at the beginning of this meeting about the disparity between our firm and yourself. Remember. You compared yourself to General George Custer at the Battle of the Little Big Horn. Again, you were perceptive. It wasn't a joke. That is your situation. You are outmanned, outgunned, completely unprepared for the legal battle that is preparing to envelope you.\n\n\"I know you think you occupy the moral high ground and that will enable you to prevail, but that merely illustrates your naivete. Courtroom battles are won by the stronger force. And compared to Ms. Lancaster, you aren't even an ant going up against an army.\"\n\n\"You're going to hurt my feelings if you keep that up.\"\n\n\"This isn't a joke. Think about it. As best we can determine by checking completely legal sources, you have a bank account and assets amounting to about $35,000. You had nearly $75,000 but paying for Dr. Teller's services is not cheap and Mr. Wilson took another large chunk of your cash for his fee and spreading cash around for his information.\n\n\"Ms. Lancaster , through her personal fortune and 100 percent ownership of OIL Inc., is worth approximately $150 million. You don't even have an attorney representing you. There are at least 50 working on Ms. Lancaster's case. You have one investigator, good as he is. We have 10 investigators looking into every aspect of your life and marriage.\n\n\"You might think as the current husband of Ms. Lancaster you would have access to some of her funds, but that is not the case. We have managed to block access to the estate's funds and any alimony a foolish judge might award you is frozen until the case is resolved.\n\n'Which will take years and years and years. WE will fight to keep this case alive as long as humanly possible. We will fight for an annulment and dissolution based on cruelty and domestic abuse. The divorce is going to be so entangled in various criminal cases that it will take a long time to untangle all the snarls.\n\n\"In a short while you're going to run out of funds for investigators and experts and any decent kind of legal aid. You're going to lose. Lose the $10 million. Lose your marriage. Lose your representation and maybe lose your freedom.\"\n\n\"I can't wait to find out what kind of terrible things I've done to my innocent wife.\"\n\nI couldn't stay in my seat. I made my way around Bailey and as Matt started rising to intercept me I pushed him down a lot harder than I needed to. I took the back of Deirdre's chair and spun her around where she couldn't hide from me.\n\n\"I guess I never knew you, Deirdre. I expected you'd fight like hell for Gutman, but you would destroy me to give him that $10 million wedding present? You'd sink that far for a fucking lowlife, a piece of shit who forced you to kill your baby and then let himself be paid off to abandon you. It's a good thing your father is dead, because it would break his heart to see how low you've sunk\"\n\n\"Just sign the papers, Michael. We're through. Take the $250,000 and get out of my life.\"\n\n\"The problem, Michael is that you're been brainwashed by all the movie and television courtroom shows,\" Wilkes said approaching me from behind. \"The courtroom isn't some bloodless arena where legal arguments are tested and weighed to determine Truth. It's a battlefield. Once men fought and died on fields to determine which side God would favor. Today we use words and books and evidence.\"\n\n\"But it's still a battle,\" Bailey said. \"It doesn't matter whether you're in the right or not. We will swarm you, we will bury you in motions and a forest of legal papers. We will beat you down. We'll send in lawyer after lawyer that you - a layman who doesn't know the law - won't be able to even answer adequately. We will overwhelm you, we will break you.\"\n\nBailey stood behind Deirdre, his hands placed on her shoulders where mine had been moments before.\n\n\"And that's not the worst of it, Michael. We won't play by Marquis of Queensbury rules. This is a bareknuckle fight. Deirdre has told us how you assaulted her on that very first night that her father entrusted her safety to you. You drugged her and when she resisted, you smashed her lip with your fist.\n\n\"We have testimony from several of her friends that when they tried to intervene to protect her because they could see you'd drugged her, that you sent them to the hospital with some serious injuries. Four men tried to stop you, and you beat them senseless. What chance did a 110 pound girl have to protect herself from you?\n\n\"And after you'd raped her that first time, you continued to dominate her by threating to use your friends to convince her father that she'd been a slut having sex with any number of men. While she admits to being - wild - she did not want to hurt her father by hearing your lies about her behavior.\"\n\nHe glanced down at Deirdre and then around the assembled men and women of his staff.\n\n\"I'm sorry Deirdre. I know you didn't want anyone to learn these embarrassing details, but it's necessary that Michael know how far you're willing to go to end your marriage.\"\n\n\"And why would you marry such a monster, Deirdre? Why would you marry me and stay with me for two years if I were such a terrible person?\"\n\nShe stood up looking like a flame haired queen and for a moment I could believe her claims to have the blood of the Fey running in her veins.\n\n\"Because you are a violent and dangerous man, Michael McCarthy, and you knew how I felt about Julian even after my father drove him away. And you swore to me that if I did not marry you and allow you to seize my father's company, you would find Julian and beat him to death with your bare hands. And I believed you.\"\n\nI knew what she was doing, and it still hit me like a hard fist to the center of my chest.\n\n\"Sign the paper and end this,\" Wilkes said from behind me. \"You're not just facing financial ruin. The statute of limitations hasn't run on the rape, assault, drugging or other criminal charges. This could get very ugly.\"\n\n\"It hasn't gotten ugly already?\"\n\n\"It could get much uglier. Michael. Don't force it to go that way.\"\n\nWilkes placed the paper on the desk and laid a gold and silver enameled pen that looked like the real thing on it.\n\n\"Sign it Mr. McCarthy. You're not a stupid man. You're good at what you do. You've already lost your wife. You can walk away with a quarter million dollars and make a new life, or you can fight and waste years of your life and maybe ruin your life. It's not a tough decision.\"\n\nTeller had been taking it all in. He reached into a pocket and pulled out what looked like a mint and popped it into his mouth. The way he did it made me think he'd been a smoker for a long time. It was typical smoker behavior after they'd gone smokeless.\n\n\"Mr. McCarthy, I wouldn't presume to tell you what you should do. It's your life. But I will say it doesn't take a trained psychiatrist to see that this meeting has been orchestrated for one purpose - to shake you up and make it difficult for you to think clearly. It's the civilian version of the famous \"shock and awe\" doctrine performed so perfectly by the U.S. military in Iraq last year. The idea is to overwhelm you.\" \n\nBeside him Wilson raised one finger as if calling for my attention.\n\n\"I'm not a lawyer, McCarthy, but I know that wills and pre-nups are hard to break, especially when they're drawn up for a man with Lancaster's money. Of course, these were drawn up by the man who is going to try to break them, so they might have more luck. But, Mr. Bailey and Wilkes will have to be careful because lawyers are sitting in prison cells for that kind of crap.\"\n\nBailey smiled as if the thought of going to prison was amusing.\n\n\"Your friends are not lawyers, Michael. Listen to someone who is a lawyer with decades of experience. Not signing will be the worst mistake of your life.\"\n\nI stood there looking at the legal army he'd gathered to oppose me, the tip of the spear of the unstoppable legal juggernaut he said would destroy me. It was a sobering sight.\n\nWhich is why the smile that lit my face puzzled everybody. Wilkes and Bailey exchanged glances as if wondering whether I'd cracked and gone round the bend. Deirdre studied me and I could see the realization growing. She didn't know what was coming, but in two years and a lot of energetic nights in bed, she knew me well enough to know that bad stuff was galloping over the horizon and the shit storm was approaching. She tensed in her chair, but there was nowhere to run.\n\n\"Mr. Bailey, Mr. Wilkes, you are correct that my two friends are not lawyers. I'm not a lawyer. I don't have an attorney representing me. But...\n\n\"I do have any attorney...sort of. He's working pro bono. Not costing me a penny. But he's a pretty good lawyer. He knows you. Let me give him a call.\"\n\nI grabbed my cell and punched in #9. There was no need to say anything.\n\nThirty seconds later the phones in front of a half dozen chairs started ringing. Bailey and Wilkes were away from their chairs so there was a chorus of \"Mr. Bailey, Mr. Wilkes, police are downstairs. They're ordering everyone to stay in their offices. They've arrested Mr. Stevens. They're coming up the elevator.\"\n\nBailey and Wilkes motioned for their staff to calm down and get off the phones. Bailey shook his head\n\n\"I don't know what kind of sleazy trick you're playing. McCarthy, but you're playing with fire. I am going to chew up whatever cheap ambulance chaser you've got coming up here and spit him out. I've been a long-time supporter of Sheriff Knight. I've contributed to all his campaigns. And when I tell him about his officers being involved, officers will be disciplined, if they keep their jobs.\"\n\nI heard steps coming down the hallway. The door opened and first one, then another and a third uniformed Jacksonville Sheriff's Office deputy walked in the door. Followed by Mr. Harper-Stevens, with his hands cuffed behind him, followed by another behemoth in the blue sheriff's office uniform.\n\nLast to come through the door was an unremarkable short man in civilian dress who slipped in almost unnoticed at the rear while everyone was watching the uniformed cops and the matching bookend behemoths. While most of the staff was focused on the cops, Bailey, Wilkes, the silver haired Matt and every other actual lawyer kept their eyes on the short civilian.\n\nHe wasn't the kind of figure who would have evildoers trembling at his approach. His clothes were good quality, but the white dress shirt swelled against his gut and there were gaps between the upper buttons. His thinning hair was a shade of what could only be called mousy brown, but the heavy afternoon stubble was jet black, making him look like a drunk stumbling in from a 48-hour binge. He was what any Irishman would recognize as a child of the Black Irish. Nothing else fit, but that heavy black stubble marked him indelibly. \n\nHis name was William Maitland, he was the number two prosecutor in the State Attorney's Office for the Third Judicial Circuit. And he was my Ace in the Hole.\n\n\"Maitland!\" Bailey said in evident disbelief. \"What the hell is going on here?\"\n\n\"Hello Mort, Wilkes. I could ask you the same thing.\"\n\n\"What?\"\n\n\"I've never seen so many legal types gathered in one room anywhere except a Bar meeting when they're passing out free booze. You almost didn't have enough staff downstairs for us to go to the trouble of arresting. I had to leave a few officers downstairs just to keep them from heading out for Mexico or Canada.\"\n\n\"Maitland, this is no joke-\"\n\n\"You're right, Mort. This is a raid.\"\n\n\"A raid,\" Wilkes said.\n\n\"Come on, Wilkes. You have to talk to make this interesting. Repeating what I say won't make any kind of headlines on tonight's newscasts.\"\n\n\"You've always been a headline grabbing, cold blooded son of a bitch, but you've gone too far this time. You've bitten off way, way too much for you to chew.\"\n\nMaitland grinned as if he knew a joke that no one else had a clue about.\n\n\"Awe, Mort, I always thought you liked me.\"\n\nBailey grabbed a telephone off the table.\n\n\"Give me your boss' number, Maitland. If you're still working at the State Attorney's Office tomorrow, I'd be very surprised.\n\n\"Mr. Edwards is in Tallahassee today and busy. But I have his number and you should probably touch base with him.\"\n\nBailey dialed the number and after a moment he punched a button and a voice could be heard on the other end.\n\n\"I want this on speaker, you son of a bitch, so everyone can hear your head being handed to you.\"\n\n\"Hello. Got just a minute. I'm ready to go into a meeting.\"\n\n\"Dallas, this is Mort. Mort Bailey.\"\n\n\"Oh, hi, Mort. I hope this is something we can talk about later.\"\n\n\"We need to talk about it right now. Do you know what Maitland is doing right now in my office?\"\n\n\"No, but I know why he's there. He told me he'd received some very disquieting information about your firm. He was going to come to your office to clear up some things.\"\n\n\"He broke into my office with armed police, put my security guard in handcuffs, and said this is a raid. Since when do your underlings go around raiding law offices?\"\n\n\"Maitland is a very responsible, level headed guy. He wouldn't be there if he didn't think there was a reason to be there.\"",
        "\"He came into my office with armed police in the middle of an important meeting. I didn't expect that from your people. I have been a supporter of your office since you first ran. I champion YOUR work among the Bar. And I have given you a LOT of money over the years for your campaigns and never asked anything in return. I deserve better than this.\"\n\n\"You've been a friend and supporter for years, and I value your friendship, but I couldn't overlook the information Maitland brought to me. I am sure you'll be able to straighten things out. Give Maitland your cooperation. He'll work with you. Now, they're calling me back in. I trust everything will work out and we can get together for lunch one day next week when I'm back in town.\"\n\nThere was a loud click that rang like thunder in the quiet room.\n\n\"Mort, I think your good friend just threw you to the wolves. And I'm the Wolf.\"\n\nBailey and Wilkes slowly and carefully returned to their seats, like old men who weren't sure of their footing. Bailey looked around at the officers.\n\n\"You've got the power right now, Maitland, but there will come a time when you won't. Dallas Edwards is going to regret what he just did and you're going to regret it sooner. I have friends on the Bar and the Association in Tallahassee will never condone what you've just done. And having Edwards to run interference for you won't work this time. I'm going to bring you up on charges of misconduct and you'll be lucky if they only censure you.\"\n\n\"Maybe. But for right now, let's concentrate on more immediate matters.\"\n\nHe pulled a chair out next to Teller and sat. He pointed to me.\n\n\"A few days ago Mr. McCarthy came to my office with some very serious charges. Felony fraud with the intent to steal $10 million, suborning perjury, filing false and fraudulent legal documents. Misfeasance, malfeasance and any other kind of feasance you could think of. Among other things. Mr. McCarthy, play your recording.\"\n\nIt was cheap and petty of me, but as I pushed the play button I couldn't help smiling at the other end of the table. I think it's what used to be called a shit-eating grin. And it felt good. I couldn't help glancing for just a second at Wilson, but his face was expressionless. It always helps in a divorce case to have a guy who had to have been military intelligence on your side. \"...Deirdre, there's nothing to worry about. I know this is hard on you. You were married to the man for two years. It's inevitable there'd be some guilt about what you're doing. But...you're doing a great acting job. You don't have to win an Academy award. Just stick to your story that you don't have any memory of those three years. Dr. Fairfax has written a report backing up your story. He won't waiver. We paid him too much money. We made the accident report on Gutman go away and there's nothing officially to tie him to the accident.\n\n\"I can't help it, Uncle Mort. I feel like shit. It's bad enough doing what I'm doing just to keep Michael from getting his $10 million. I've begged Julian to let it go. We don't need it. But he won't. Between you and me, I think it's more that he hates Michael because I married him, than that he actually wants the $10 million. I think he just wants to punish Michael.\n\n\"And worse, I don't want to do all the things you're planning. Accusing Michael of raping me, beating up the guys I was partying with, threatening me. None of that is true and you know it. It's bad enough what we're doing, but I'm not going to send him to prison.\"\n\n\"We won't need to. And I don't plan on it. But we had to prepare the charges and we bought witnesses who'll bear out the story and even testify in court if it comes to that. But it won't. The reason we're doing this is so we don't have to go to court. Michael isn't stupid. When he sees the hellfire we're prepared to rain down upon his head, he'll take the $250,000 and run. I promise you, he'll give up and go away.\"\n\nI punched the off button. \n\n\"A good plan, Mort, and it could have worked,\" Maitland said. \"But he's stubborn and he didn't give up and go away.\"\n\nBailey stared at the recorder on the table as if it were a large cockroach that had crawled up there.\n\n\"Are you crazy, Maitland. I might not like some of your tactics, but I never thought you were stupid. An illegal wiretap recording of a personal conversation? You're basing all of this on an illegal wiretap? That's a crime in and of itself, and it could never be used in court.\"\n\n\"I bow to your superior knowledge of the law, Mort. You're right. Maybe. Technically, I can't use that wiretap in court. But, if you remember 'Inciarrano' from 1985, someone who is breaking the law has no right to privacy. And you were definitely in the process of breaking all kind of laws when that conversation was conducted. We might not be able to get it into evidence, but we might.\n\n\"The other good thing about illegal wire taps - as long as we're not the ones doing the tapping - is that you can use them to acquire evidence that will be admitted into court.\"\n\nMaitland pulled a cell phone out of his pocket and punched a key.\n\n\"Bring in The Good Doctor and the Bad Boyfriend.\"\n\nBoth Bailey and Wilkes' eyes widened as Maitland's words sank in. Deirdre's eyes glistened under the lights. I knew she'd never expected it to go this far. I wondered how hard Bailey had to push to get her to be here today. She had done her best to avoid me since she'd started faking amnesia.\n\nA few moments later the door opened and a tall, distinguished looking gentleman who looked like he'd slept in his rumpled, elegant suit, Dr. Mayfair, walked in, followed by a taller, younger man dressed in board shorts and a t-shirt reading, \"Teachers Can Conjugate All Night.\" A uniformed officer peeked inside but Maitland waived him away.\n\nMaitland gestured for Dr. Mayfair to sit in the middle of the table, which was getting crowded. Before he could direct Gutman, my wife's lover had almost picked up one of the secretaries and sent her scurrying to another chair while he sat down beside Deirdre. They exchanged glances and then he leaned over. I expected a supportive kiss on the cheek but he planted one on her lips and I could tell he was giving her tongue as well. There were some stares but most people looked away.\n\nFinally he broke the kiss, leaving my wife panting for more than air. He looked in my eyes and smiled and I didn't need to read between the lines to get his message. My wife was his woman now and he had just proved the point.\n\nAlright, he was handsome. Almost girlishly pretty. He wore his hair long and had a brilliant diamond stud in his left ear. A couple of the female attorneys and secretaries couldn't keep their eyes off him. If I was very lucky, before this was all over, I might have the chance to permanently re-arrange those perfect features.\n\n\"Good afternoon, Dr. Mayfair,\" Maitland said. \"Have a little trouble dressing today?\"\n\nMayfair had his hair stylishly long, wore dark glasses, was so clean shaven he looked like he'd had his face plucked, had his hair frosted although I think it was supposed to be gray - and all in all looked like an older version of every handsome television doctor. He looked like the kindly uncle that everyone felt could be entrusted with your deepest, darkest secrets.\n\nToday he looked like the junkie drunk uncle, the one who would always show up at family gatherings out of his mind, the one who borrowed money and never returned it, always had to be bailed out at inconvenient times. Your least favorite uncle.\n\nAnd yet, on the outside he was unchanged from his professional guise. But the inside, the inside had rotted away.\n\nHe didn't even look in Maitland's direction. Instead his gaze fluttered like a wounded butterfly from Wilkes to Bailey and back.\n\n\"Mr. ... Bailey. Mr. ...Wilkes...I...I...I'm sorry. I...didn't have...any choice. They told me I was going to prison. I had to talk. I had to tell them...\"\n\n\"I don't care what crazy fantasies you spun for them, Mayfair,\" Bailey said. \"We both know you wrote an honest report without any interference - or any payment from us. I know that Maitland has a way of bullying witnesses and he still has this manufactured reputation of being a nice guy. I don't know how he threatened you, but if he convinced you to sign fake documents, you are in serious trouble.\"\n\n\"The first rule of any crooked lawyer is when you're in trouble, lie,\" Maitland said. \"You do it so well. I'd almost think you were crooked. And a 'manufactured reputation for being a nice guy'? I always thought I was a nice guy.\"\n\n\"Play your games, Maitland. You have one illegal tape recording and one coerced fake confession. You have nothing.\"\n\n\"I beg to differ, but then I'm prejudiced toward truth. But part of your problem in understanding how deeply you're mired in quicksand is that you're a civil attorney. You've never worked the criminal side of the law. From where I sit, nailing you isn't going to be a challenge. We can use the tape to convince reluctant witnesses where their self interest lies. And the documents signed by Dr. Mayfair were enough to give us warrants to tear this office apart, look at all your paperwork, examine your phone records, go after the police officers and medical staff you used in your scheme.\"\n\nBailey stood up. A few minutes recovery time had allowed him to regain his bluster.\n\n\"You're too used to dealing with criminal scum, Maitland. If you don't have anything better than this, grab your cops and get out of here. And uncuff Mr. Harper-Stevens.\"\n\nMaitland turned to a Hispanic-looking cop standing near Bailey.\n\n\"Stu, if Mr. Bailey doesn't shut up and sit down, cuff him and sit him down.\"\n\nAfter Bailey sat, Maitland walked to where the silver haired attorney Matt was sitting.\n\n\"Mr. Henry, why don't you take a little walk with me to the other side of the room?\"\n\nHenry and Bailey exchanged looks, then Henry stood up and followed to the far right side of the room, as far as you could get away from the table, but not far enough. Because you could hear every word.\n\n\"Matt, I make it my business to be aware of the attorneys working in my Circuit, even the civil guys. I have heard good things about you. You're smart, you work hard, and you're a good lawyer. I'm sure that's why Mort and Wilkes hired you. They don't take losers.\"\n\nHenry gave him a half smile and it was difficult for a moment to realize Maitland was the shorter man.\n\n\"Why do I get the feeling that you're getting ready to tell me to turn around and bend over?\"\n\n\"I'm not getting ready to fuck you, Matt. In fact, I'm going to try to save you from a royal butt-fucking.\"\n\n\"Why are you being so good to me, Mr. Maitland? As if I don't know.\"\n\n'I don't know how much you know about what went on here with this scheme to defraud Mr. McCarthy of $10 million he was entitled to. But I know you're too smart and too involved in this firm not to have at least been aware of part of it. I know you're the linchpin. I don't think any of the other lawyers are willing to step forward. They're either rising in middle management and they've got homes and mortgages or alimony payments or kids in college - or they're green. And the secretaries and assistants are small fish and they're afraid they'll be gobbled up by the system. \n\n\"But, if you come to us, the whole thing falls apart. You're the heir apparent, and everyone including you knows it. If you turn state's evidence, there'll be no charges, no stains to your reputation. You're an ethical whistleblower who helped turn in a corrupt firm. Of course, no one local may be willing to hire you, but my boss knows EVERYBODY in the legal field here and a lot of other places. You'll come with his VERY HIGH recommendation as an honest lawyer, and there are some firms that actually respect that.\"\n\nHenry didn't look back at his bosses for support.\n\n\"I appreciate your offer, but I think the case against Mr. Bailey and Wilkes is just bullshit. I don't know anything about unethical or illegal action by this firm and so I can't help you.\"\n\nMaitland ran a hand through his thinning hair and looked at the floor for a while. Without looking up, he started speaking so softly you had to strain to hear him. And 25 sets of ears strained to hear him.\n\n\"I respect loyalty. I value honesty. And I think highly of any man or woman who will do the right thing when the right thing needs to be done. But of all those qualities, and this is probably a failing on my part, it's loyalty that I prize the most. Even misguided loyalty, even loyalty to bad causes and bad people who don't deserve that loyalty.\"\n\nHe bit his lip and then rubbed his lower lip with his thumb. I had the feeling these were nervous tics that were natural to him, but he used them to make it seem like he was being forced to deliver bad news that he hated to deliver.\n\n\"And so I respect you, Matt. But, before you make a final decision, just think for a minute. That's all I ask, listen to me for a moment. You know in your heart that Bailey and Wilkes and maybe the other partners are going down. They'll bluster, but once you get evidence in writing and changes pending, people are going to turn. They always do.\n\n\"Bailey and Wilkes are in their 60s. Most of Wilkes' children are grown. For white collar crime, even the theft of $10 million, they won't get more than five years. And they've got enough money socked away they'll be able to live even if they never practice again.\n\n\"Deirdre Lancaster and her boyfriend may not go to jail although I'll do my best to put them there, because this is all on them. But even if they spend a few years in a comfortable cell, she'll still have $150 million when they get out and this will just be a bump in the road.\n\n\"But you - Matt - this is the end of the road for you. You're 32, unmarried, worth maybe a half million. Legal fees are going to eat a lot of that up. You'll be convicted because I am as sure that they will pull you in to share the blame as I am the sun will rise tomorrow. You will be disbarred. No serious firm, probably not even fly by night shysters, will want a man working for them convicted of fraud and stealing $10 million.\"\n\nHe stepped back away from Henry. I looked around the room. Nobody was talking and every eye was on the pair. Maitland looked up and down Henry with an appraising eye.\n\n\"You're a good looking young man, Matt.\"\n\nMaitland laughed at the expression on Henry's face.\n\n\"Relax, Matt. I'm not offering you another way of getting out from under, so to speak. I'm just saying you're a good looking young man. I have no information that you're gay, so I assume you like the ladies and you date. The odds are that someday some sweet thing will trap you in marriage and after a while there will be babies.\n\n\"If you're like most men, you're going to want the best for your wife and children. That's what usually happens. As a lawyer, a rising and talented lawyer, you will be able to offer your family the good life, opportunity, travel, college. As a disbarred ex-con, you'll still want the best for them. But you won't be able to offer them what you could now.\n\n\"If you remain loyal to your bosses, you're not only throwing your life away, but you're throwing away your family's future. You're sacrificing your entire life, your future, for men who will walk away from this without any real scars.\"\n\nMaitland stepped closer and placed one hand Henry's shoulder. For the first time you could see how short Maitland was.\n\n\"Just think about this. It's the most important decision you'll ever make in your life, and it will determine the rest of your life, Matt. Think long and hard.\"\n\nThe two men stay in position for a moment, then Henry stepped back. He shook his head as if clearing away a dream - or a nightmare.\n\n\"I've heard a few stories about you Maitland. I've always heard you were good. Damn, you're good. But I'm afraid you've wasted your talents on me. I still don't know anything about fraud or stealing $10 million.\"\n\nHe turned his back on Maitland and walked back to his seat at the table.\n\nMaitland just shook his head for a moment and then walked back to where Bailey was sitting. \n\n\"I don't know how much you're paying him, Mort, but you're not paying him enough.\"\n\nHe glanced up and down the table.\n\n\"I know everyone hear heard that conversation. The same deal applies. Come forward, and you walk away with no charges, no trial, no stain from all of this. But the deal can only go so far. Wait too long, and the deal or deals will be taken off the table. Henry, that applies to you too. It won't take long and this deal will go away. Other witnesses may not be as valuable, but a few of them will probably be enough. Don't wait too long.\"\n\nI looked up and down the table. I wasn't a lawyer, not a trained interrogator, but I had sat in on enough high dollar negotiations around the world to know a little bit about reading people. People were nervous, calculating what their best moves would be. I didn't think anyone would come forward in this room, but I doubted it would be too long before the first contacts were made with Maitland's office.\n\nGutman held Deirdre's hand tightly and he wasn't smiling smugly at me now. He was also thinking about prison and how, even with Deirdre's $150 million protecting him, he would be a very tempting target for guys who liked men who looked like really good looking women.\n\nWe must have been on the same wavelength. He looked up at me as I stared at him and I blew him a kiss.\n\nOnly Deirdre's grip kept him seated. He wanted a piece of me, and Oh God, I wanted a piece of him. If only he'd been man enough to come over the table at me. But that would have been hoping for too much.\n\nTearing my gaze from him, I studied Bailey and Wilkes. Neither one of them was crumbling. Today hadn't turned out the way they'd anticipated, and it wasn't working out the way I'd hoped.\n\nMaitland seemed to make a decision.\n\nMotioning to the cop named Stu, he said, \"Alright, Mort, if you're not willing to even consider some type of plea agreement, let's move on. Turn around and put your hands behind you. Stu, put the cuffs on him. Then cuff Wilkes.\"\n\n\"You're insane, Maitland. You're walking us out in cuffs when this is all you have? It's a shame to see a career end like this, and yours will end here today.\"\n\n\"I've notified the media. A good old fashioned Perp-Walk is just what the 6 o'clock local news loves.\"\n\nFinally Bailey turned around and held his hands out behind him.\n\n\"You're an asshole, Maitland. You always were and you always will be.\"\n\nMaitland looked down at the floor for a while, then glanced up at me and finally at Bailey.\n\n\"Shit.\"\n\nBailey was as obviously confused as everyone was. Except for myself and Maitland.\n\n\"You've disappointed me, Mort. I really hoped you'd wind up blubbering and begging for mercy on your knees. But you're a stubborn bastard. Which puts me in a bad situation.\" \n\nMaitland sat down at the table on my side.\n\n\"Stu, the rest of you guys, you can wait downstairs. Grab some coffee or something. We still might have to arrest some people. Grove, you can take Mr. Reeves downstairs and if he calms down, take his cuffs off too.\"\n\n\"What in the world?\"\n\nBefore Maitland could answer, Harper-Stevens pushed his hands further back behind him.\n\n\"Mr. Bailey, can I PLEASE PLEASE kick this bloody Yank's head up his ass? Bloody Special Forces fags think they're special. One SAS man could take five of them any day.\"\n\nGrove turned to Maitland.\n\n\"Maitland, please let me have five minutes with him. The only thing SAS fuckers are great at is sucking dick. And they've got great PR. But none of them is worth a damn in the field.\"\n\n\"The only reason you're running your mouth now, fag, is that my hands are cuffed behind me. Try saying that when my hands are free.\"\n\n\"Do you have to get into that shit right now, Officer Grove? This is not a good time.\"",
        "The big cop looked over at Maitland.\n\n\"I volunteered to help you out, Mr. Maitland. Because you've helped me in the past. But I'm going to kick his ass whether it's here or in some back alley.\"\n\n\"Can you call your dog off, Bailey?\"\n\n\"Why the hell should I do anything for you, Maitland? You're a loose cannon maniac wielding way too much power. I don't have any idea what you're doing here.\"\n\n\"It'll all be clear in a few minutes. And if these two get into it, we're going to have a couple of badly injured or dead men. If your man kills my man, I'll have to have him arrested for murder. And I'm sure his family will sue you for his actions. He works for you. And if my guy kills your man, the least he can get out of it with is manslaughter.\"\n\nThe two big men stared at each. Finally Harper-Stevens said, \"There are stairs down the back. If you take me down that way one of us might trip and get hurt. Just accidental.\"\n\n\"No head shots, no intentional crippling, the first man who's unable to continue or unconscious, it's done. Agreed?\"\n\n\"Let's get out of here. Okay with you gentlemen?\"\n\n\"I don't know what you're talking about. You're just leaving. You don't need our permission for that.\"\n\nThe two men walked out the door chatting like old friends. For a few seconds I think everyone was straining to hear anything from outside. But there was nothing.\n\n\"I repeat, Maitland, what is going on here?\"\n\n\"A bluff. You put on your show. I put on my show. Neither one of us was very effective.\"\n\n\"I knew this was all crap. Your career is soooo over.\"\n\n\"Not exactly.\"\n\nHe looked over at me.\n\n\"McCarthy. For the last time. Don't do this. I know why you're doing it. But, she's not worth it.\"\n\nWe had talked before. I hadn't been able to explain it before, and I knew I couldn't now. Maitland was a smart man. But he hadn't walked in my shoes, he hadn't loved Deirdre Lancaster, and he would never understand.\n\n\"You're the luckiest bastard I know, Mort,\" Maitland said. \"You too, Wilkes.\"\n\nIt was obvious that neither one of them had the slightest idea what he was talking about.\n\n\"You might avoid prison, disbarment, the end of your firm and your legal careers - all because the man you were working so hard to cheat out of $10 million is still in love with his wife.\"\n\nDeirdre's look ripped my skin, but Gutman's smile of male satisfaction made me clench my fists as I fought the urge to beat his face in.\n\n\"So this is all a bluff. You have nothing.\"\n\n\"No. Don't start celebrating too early. We have Dr. Fairfax' statement and supporting information he provided. We still have court orders and we can prevent the destruction of any documents while we back up our case. You know we'll have members of your staff turning state's evidence. I can easily nail you. Getting convictions is not the problem.\"\n\nHe turned to stare at me.\n\n\"You're the problem, Mr. McCarthy.\"\n\nHe stared at me with those Prosecutor eyes, but I read regret as well as steely determination. Before going to him I'd done a little research. He had a good record and his appearance actually worked in his favor. Ordinary in height and appearance, a middle aged man losing his hair and his waistline, most opposing attorneys and defendants tended to underestimate him. He wasn't the kind of man you'd walk carefully around.\n\nBut I'd walked carefully around him and hadn't taken him for granted and I'd used him the way I had to serve my purposes, but I'd made sure he wasn't going to use me. So while he'd been my ally, he wasn't happy with me now.\n\n\"You have royally screwed everything up, McCarthy. Why couldn't you simply have been a good citizen, reported the criminal activities of this firm, and allowed the law to take its course. They would have gone to prison, you'd have gotten revenge against your cheating wife, and you would have walked away a rich man.\n\n\"Instead...\"\n\nHe took the tape recorder from me and displayed it for the other side of the table. \n\n\"The recording that was played here today is a copy. The versions we have are all copies. McCarthy has refused to provide us with the original. Which means that any decent defense attorney will tear it to pieces. Which means we can't use it in court and it's likely you guys could get Dr. Fairfax's testimony tossed out as well, especially if he gets cold feet and refuses to continue cooperating with us. Not only is the wiretap illegal, but we have no way of proving it hasn't been altered or doctored.\n\n\"In addition, we have a copy of an email he sent to a friend outside the country a month ago.\"\n\nMaitland held out a piece of paper although no one on the other side could possibly read it. He read:\n\n\"Griff, I wish I was with you in China right now. My life has turned to shit. I know that Deirdre is cheating on me with her old fuckbuddy. She's faked some kind of traumatic amnesia so she doesn't have to touch me and she will try to annul our marriage. Most of the time I want to kill him and at least beat the hell out of her.\"\n\n\"But...I think sometimes maybe our marriage never had a chance. Maybe it was cursed from the start, and maybe that's my fault. I've never told anyone this, but that night I rescued her from those assholes who slipped her the date rape drug. I took her to a motel and dried her out with coffee. We talked and I took her home. But what I never told her or anybody else is - I had to strip her down to make sure she was okay and hadn't been hurt.\n\n\"And when she lying there on that hotel bed, still out of it, I couldn't take my eyes off her. Her breasts, her pussy, that ass. Those legs. I never thought I really went for the thin chicks, but, the longer I looked at her, the harder I got.\n\n\"And after a while, I thought she was fucking those guys on a regular basis. And God knows I've gotten enough women drunk over the years to get between their legs. I started touching her and she started responding. The short of it is - I fucked her. I don't think she was really aware of what was happening. I cleaned her up and after she came out of it I acted like nothing had happened. I don't know if she ever believed me.\n\n\"But the truth is, I raped her. Whatever words you might use, it was rape. Only it was me instead of those other assholes. And everything else happened the way you've heard. Now we're married and I love her and she's screwing around on me. And I wonder if a marriage that starts out with rape and lying can ever wind up ending good?\"\n\nMaitland stared the paper, shook his head, and then threw it on the table.\n\n\"Now, I don't know if this message is true. Either McCarthy is a rapist, or he was setting himself up for a rape charge.\"\n\n\"Setting himself up for a rape charge?\" Bailey had shot to his feet. \"Your victim is a liar and a rapist. And you're going to use him to bring us down? Do you realize, once again, how crazy that sounds?\"\n\n\"Not crazy,\" Maitland said, staring from me to Deirdre. \"Sad. When he came to me, he told me his plan. He wanted to shake up his wife and her lawyers. Shake them up enough that they would simply give him his $10 million and he'd walk away. But he wasn't willing to go all the way. That's why he refused to hand over the original tape. And he provided us with the email.\"\n\n\"Normally I'd have grabbed him as a hostile witness and gone after you, Bailey, Wilkes and anyone else involved. But...\n\n\"He played it very well. The wiretap will be torn up and shredded but it's too involved in the case. Even if the court keeps it out, it will still lurk over the trial. The news will go out. So the defense attorneys will go after him for illegal taping and if I don't prosecute, they'll go to the governor and use my partiality to go after me. \n\n\"Now, the rape has nothing directly to do with this case and if I don't believe it, I don't have to act on that. But Mrs. McCarthy is already prepared to claim he raped her. If you believe he raped her, that throws the whole marriage and the pre-nup into question. \n\n\"And regardless of what it does to the case, women's groups will go crazy. The governor will assign a special prosecutor - he'll have to. And with a confession in black and white, McCarthy will serve time for that. So, despite my reluctance, I may have to prosecute him on a charge that I know is bogus. To cover my own ass. I think I do a good job, and I can't do that if I have everyone in the world calling for my removal for protecting rapists.\"\n\nHe pointed to one of the secretaries - I assume she was a secretary - and asked, \"Could somebody get me straight coffee? Black will be fine.\"\n\nWilkes nodded and a pretty blonde left the room.\n\n\"I don't want to send an innocent man to prison, even though I think he'll be $10 million richer when he gets out. But I don't want to let all of you guys\" gesturing to the side of the table dominated by Bailey and Wilkes' troops, \"get away with fraud and theft of $10 million and perjury and subordination of perjury and bribery and filing false documents and a lot of other types of creative criminal acts.\"\n\nHe paced back toward me, then turned and approached Bailey.\n\n\"Just for the sake of argument, Bailey, if McCarthy signs papers releasing any claim to that $10 million and agrees to a divorce, are you going to push the assault and rape and other charges? Or will you let him walk away?'\n\n\"Those charges will vanish. He can walk away with $250,000, since Ms. Lancaster has already agreed to that.\"\n\nMaitland stood behind Deirdre.\n\n\"You said your husband raped you. He's made a pretty formal confession. Are you willing to forget about that, or once he's signed the papers you want signed, are you going to turn around and turn the information over to women's rights groups and let them go after him?\"\n\nAll she did was shake her head, but Bailey said, \"She'll let him walk away and there won't be any further recriminations. The last thing she wants is to have all those old, painful memories brought to light again.\"\n\nAt that moment the secretary came back in with a ceramic blue coffee cup. Maitland took it and emptied it in three swallows. He handed it back to her.\"\n\nMaitland walked to the front of the room, then paced to the back. It could have been for dramatic effect, but I had the sense he was really pacing as he thought about the room and the people in it.\n\n\"I've done things in this job I didn't want to do. Things I hated, because they were the right thing to do. I know there are people who think I'm cold...and hard. People even think I enjoy tormenting people. Well, I do sometimes. But they're usually people who deserve it.\n\n\"This one...Mort can be an asshole, but I know why he went along with this. Mort, you and Viviana have no children, do you? Married 40 years with no offspring. You were Deirdre's godparents, you held her when she was christened. You've probably spent as much time with her as Orion did before he died. I know you were more than attorney and client. And when she came to you and begged you to find a way to get her out of her marriage, and then had the accident that gave you a perfect plan, I don't think you thought about money. I think you did it for her.\n\n\"And you, Deirdre. All you're really guilty of is being stupid about the men you fall in love with.\n\n\"And you, McCarthy, you're just guilty of being stupid.\n\n\"I don't want to do this, I really don't. I tried every way I could to avoid this. But it's just not in me to look the other way and let anyone get away with this type of crap. I'm probably going to regret this.\"\n\nHe pulled his cellphone out and punched in a number.\n\n\"Hi, could I speak to Mr. Edwards. Tell him it's important...Dallas, it's me. Yeah. I'm afraid we're going to have to roll the dice. Yes. I know he's a friend of yours. But we have him, and they wouldn't bend. No. No give at all. I'd say 85 - 90 percent chance of conviction. And it will be a hell of a case. Crooked lawyers, pretty multi-millionaires, fraud, infidelity. This might become a movie of the week eventually.\"\n\nHe stopped talking, listening to the voice on the other end of the phone. Then he handed the phone to Bailey.\n\n\"He'd like to talk to you for a minute.\"\n\nBailey listened for two minutes, In the end, all he said was, \"You're serious?\"\n\nHe handed the phone back to Maitland.\n\n\"Just give him the money, Mort. It's only $10 million. Stop this before it goes too far to be stopped.\"\n\nBailey leaned over to Deirdre and whispered to her.\n\nGutman tried to say something.\n\n\"Shut up, you asshole. This is all on you. If you hadn't been so greedy none of this would have happened.\"\n\n\"But they've already threatened us,\" Deirdre said, starting to glance at me but moving her head away so fast she could have suffered whiplash. \"Nothing's changed. Why are you wanting to give up?\"\n\n\"Everything's changed, Deirdre. Edwards has unleashed Maitland. He's a damned pit bull. Once he sinks his teeth in, he doesn't let go. And I don't want you to have to go through what will happen to you once he starts. Just give McCarthy the money. Your boyfriend will get over it.\"\n\nShe finally let her gaze rest on mine, without flinching or any evasion.\n\n\"Alright, Michael. You win. Take your $10 million and slink out of here. Let me be with the man I love. And that isn't you.\"\n\nBailey motioned to Wilkes, who got up and left the room.\n\n\"You'll have the money by tomorrow.\"\n\n\"I want it in a half hour. Cashier's check.\"\n\n\"Ten million dollars in a half hour?\"\n\n\"I believe the Hunt Bank can cut a check for $10 million and have it here in that time.\"\n\nA secretary followed Wilkes out. Maitland sat down next to me. He pulled his cellphone out and spoke into it.\n\n\"Our officers are pulling out. They're telling your staff all of this was an extremely realistic exercise we developed in concert with your firm to train police and lawyers in dealing with fraud cases. You very civic mindedly agreed to play the bad guys. Dr. Fairfax, you'll receive a certificate suitable for framing thanking you for your participation. The paperwork, all of it, will be destroyed. Dr. Teller, Mr. Wilson, you'll also receive certificates for your participation. \"\n\nHis gaze swept over Bailey's troops. \n\n\"And Mort, I'm sure all of your people in here today will respect the confidentiality of this exercise. After all, I'm sure that if any distorted rumors of today's activities were to get out, it would cause you a great deal of heartburn. Trust, the trust a lot of wealthy individuals have in your firm, and you, is a precious commodity you can't afford to lose.\"\n\n\"I trust my staff,\" Bailey said as he studied the room and I thought the temperature in there dropped by about 30 degrees.\n\nAnd then we waited. People talked in whispers. Deirdre and her new love whispered, heads together with an occasional kiss. Maitland busied himself on his phone. There was a knock at the door and before anyone could move, the big cop who'd walked Harper-Stevens out of the room stood in the doorway. He held his left wrist up to his chest with his right hand, blood dripped off cuts and his face looked like hamburger after it's been softened up with a hammer.\n\n\"You feel better now?\" Maitland asked.\n\nGrove smiled a painful smile and said, \"You should see the other guy. Speaking of, I'm going to take him to University.\"\n\n\"How is ...\" Matt Henry began.\n\n\"I think I broke his leg, definitely his ankle. Knocked out a couple of teeth and he might have a concussion. I didn't do that deliberately. I think he broke my arm, he definitely broke a few ribs and I might lose a couple of teeth. Nothing too bad. He put up a good fight.\"\n\n\"You guys ready to kiss and make up?\" Maitland asked.\n\n\"Not exactly, but we're okay. I do need to get him to University.\"\n\nBailey pointed to Matt Henry and said, \"You go with them and make sure they realize this was an accident. Handle the paperwork and the insurance.\"\n\nHenry just nodded and was out the door.\n\nIt seemed like hours, but it was only 35 minutes later when there was a knock on the door and the secretary named Marge opened it. A big man with thick black hair frosted with gray stepped in carrying a briefcase chained to his left wrist.\n\n\"Mr. Bailey?\"\n\n\"Davidson, thank Ms. Hunt for being so prompt. And careful\"\n\nI could see the bulge under the left side of his coat and in addition another man in dress clothes stepped in directly behind him with another bulge under his coat on his right side. The way he automatically scanned the room marked him as private security.\n\n\"Who gets the check? Should I give it directly to you?\"\n\nBailey shook his head and pointed to me.\n\nDavidson sat down next to me and produced a key that opened the briefcase. Inside there was only one thin business envelope. He picked it up and handed it to me.\n\n\"If you would, open it and confirm that it is a cashier's check for $10 million. And then I have a form for you to fill out to confirm that you received it.\"\n\nI ran a thumb under the lip of the envelope and slid it open. There was a double-folded piece of paper. On the front was a cashier's check with a one followed by seven zeroes, on the back that the paperwork that goes along with a $10 million check.\n\nEven knowing it was going to be coming, it didn't seem quite real. Only a piece of paper, but it seemed more...substantial, more...solid than paper.\n\n\"The stuff that dreams are made of, right?\"\n\nI looked up at Davidson. He was smiling. He appreciated the check, but it obviously wasn't a big thing in his life. I had to remember that he was a big man in the Hunt bank and he was used to dealing with big numbers.\n\nI glanced over at Gutman. His eyes literally burned. At any moment I expected him to burst into a pyre of flame. I loved it so much I hated to end his torment.\n\nBailey stared at the check too and said, \"Alright, McCarthy. You have your money. How about signing the paperwork so we can speed up the divorce.\"\n\n\"I'm feeling in a celebratory mood. Could you scare me up a good cigar and a lighter?\"\n\n\"Oh, for Christ's sake, Maitland. Can you just get him the hell out of here?\"\n\n\"I don't know, Mort, after everything today, how can it hurt to let him smoke a cigar. This is a big day for everyone.\"\n\nMort gestured and a secretary vanished and reappeared a moment later with what I recognized was a cheap Cuban knockoff. And a cheap cigarette lighter. But I don't think Mort was all that fond of me at the moment.\n\nI had smoked in some fairly opulent settings and I'd smoked with a scrounged up match waiting for rescue in a Colombian swamp. But I did it as slowly and carefully as I could. I flicked the lighter which looked to be a $1.99 Gate special and rolled the foot slowly above the flame, drawing in the smoke and slowly twirling the cigar. After getting the foot going, I started the puff. It wasn't the best I'd ever smoked, but on the other hand, it wasn't the worst. It just seemed appropriate.\n\nAs I puffed, the foot, or open end of the cigar for people who never picked up that filthy but enjoyable habit, it began to flame. I picked up the cashier's check and held it to the foot and moved it so the flame would touch the paper. Behind me I could sense Davidson tense to act, but then he stopped himself. It was MY ten million.\n\nIt took a little while, but flame curled at the end of the check and then it began to creep up the paper, the creamy white turning black with threads of red. The black turned into ash and began to spread across the width of the check. It didn't sound like anyone was breathing. The sound of the licking flame was the sound of a lot of dreams dying.\n\nSomeone had slipped an ashtray near me. I held the check over it as it disintegrated into pieces of inky ash and fragments fell into the glass. When it was over, I dropped the final half inch of uncharred paper into the ashtray, wiped my hands, and looked over at Bailey. I think no one had moved. The expression on every face was the same - shock and disbelief.",
        "\"If you will pass me the documents you need signed, I'll sign and then get out of your hair.\"\n\nBailey took a sheath of papers and slid them down the table. They made it all the way without help. Bailey and Crew had helpfully marked every place my signature was needed - about a hundred places. My skin tingled from the stares crawling up and down my body as I signed.\n\nFinally I finished and looked up into Gutman's staring eyes. Strangest expression I'd ever seen. Burning, skin-crawling loathing combined with the exuberant, life affirming joy of a child waking up Christmas morning to find a pony under the Christmas tree.\n\nI slid the papers back up the table and stood up. This had been - by far - the longest day of my life and I had places to go and things to do.\n\nI was turning to walk out without looking at Deirdre when Maitland stood to block me.\n\n\"I'm done, Mr. Maitland. We're done. I need to get out of here.\"\n\n\"McCarthy. Don't walk out of here like this.\"\n\n\"That's sweet, Maitland. I didn't know you cared. But I have places to be.\"\n\n\"I went out on a limb for you. I went way, way out on a limb. I went against my own instincts in letting you hogtie the investigation so we couldn't get to your wife. I should have taken Bailey and Wilkes down, but I let them walk to avoid crucifying you. I let you get away with stuff I'd never let another material witness do. I went through all of that - all of that - with the idea of having the rare chance to achieve justice for a victim. And THEN - you pull that shit?\" \n\nHe stepped backward to let me out if I was determined to go.\n\n\"What's done is done. I can't go after Bailey, Wilkes or anybody else. And you're going to walk away penniless and totally screwed. So, won't you at least tell me WHY you did all this?\"\n\nHe had gone way beyond the call of duty. I had wanted to walk away without ever letting Deirdre know the truth. I wanted to keep that at least a secret. But he did deserve to know why.\n\nI pulled the tape recorder out of my pocket and ran it forward to the next designated stop. I placed it on the table, ran the volume as high as it got, and hit the 'play' button.\n\nDeirdre's voice was heard first, with that sleepy purr she got after she'd orgasmed.\n\n\"Oh my God, Julie, you're going to have to take it easy. I don't know if my heart can take much more of that.\"\n\n\"Oh, I think you can handle it. Give me another 30 minutes and we'll test it out.\"\n\nThere were some disgusting noises.\n\n\"You won't get your 30 minutes if you keep doing that.\"\n\n\"Damn, you taste good. I wish to hell I didn't have to go back to the hotel tonight. When is Oil Boy coming back? Tomorrow?\"\n\n\"It's supposed to be tomorrow, but I can never be sure. Sometimes he comes in early, which is why you have to leave tonight.\"\n\n\"Why do we have to keep doing this shit, baby. Why won't you just divorce his ass? And we can live together openly.\"\n\n\"You know why. I'd divorce him tomorrow, but if we do he gets the $10 million. And you're the one who won't do that.\"\n\n\"No way in Hell. I know it doesn't mean anything to you, but $10 million! He's not walking away with that.\"\n\n\"Uncle Mort is working on it. He's smart. He'll find a way.\"\n\n\"You're making it more complicated than it has to be. We don't have to worry about the $10 million if he's dead.\"\n\n\"No.\"\n\n\"Come on. He's coming home, stops for gas and a mugger steps up behind him and puts a bullet behind his ear, takes his wallet, and it's done. I know a dozen guys that would do it for $10,000. And all our problems go away.\"\n\n\"No, Julian. I told you before. Don't even think that way.\"\n\n\"Why? It would be so easy.\"\n\n\"No. Because I'm not going to commit murder or let you do it. Michael is not a bad guy. It's not his fault that I don't love him. Or that my father put that pre-nup in to try to keep us married. And he loves me.\"\n\n\"Alright, alright. I was just thinking out loud. I wouldn't really do anything.\"\n\n\"Don't. You - need to know. There are recorders all over the house and grounds. Dad had them put in. If anything ... anything ever happens to Michael - an accident, a mugging, anything - I'll take those recordings to the police. And I'll tell them the threats you've made and the way you feel about Michael.\"\n\n\"You what...? You would turn me over to the police? And testify against me? Me?\"\n\n\"I wouldn't want to. I love you and I want to marry you and make a life with you. It would break my heart. But I would. I don't want you to think I'm not serious about this.\"\n\n\"You'd do that even though you would go down with me. The cops would be much more interested in nailing you than me. And you think they'd believe I acted alone?\"\n\n\"You would lie about me? I cheated on my husband. I went back to you even though I promised my father on his deathbed I'd never have anything to do with you again. I killed our unborn child for you, even though it killed me to do it. How could you do that?\"\n\n\"How could sending me to prison for trying to make it possible for us to be together without hiding be right?\"\n\n\"But not by killing Michael...\"\n\n\"Michael...\"\n\n\"Julian, stop, that hurts. Let go.\"\n\n\"Look at me, you bitch. You know you get an expression on your face when you say his name. I can see it in your eyes. Tell me the fucking truth. Do you love that asshole?\"\n\n\"Julian, stop. You're hurting me.\"\n\n\"Dammit, tell me. Be honest. If you love that bastard I'm going to kill him myself. Send me to prison, I don't care. I'm still going to put a bullet in his brain. He might be big and tough, but a bullet to the brain and he won't be tough anymore.\"\n\n\"I don't...\"\n\n\"Dammit, stop lying. I know. I've always sensed it. I hate every moment you spend with him. I hate that he has been fucking you for two years. Just tell me the truth.\"\n\n\"Julian...he's a good, decent man. And we've been intimate for two years. A woman can't be with a man like that, in his bed, and not develop feelings for him. Do I love him, maybe. I definitely have feelings for him. I can't help that. But I don't love him the way I love you. You were my first, and you'll be my last. You have to believe that.\"\n\n\"Make me believe it.\"\n\n\"Oh, I think I can do that...\"\n\nI hit the stop button.\n\nI kept my eyes on the recorder because I didn't want to look up and see the expression on Deirdre's face.\n\n\"You are still in love with me.\"\n\nHer voice drew my gaze to her face and I saw what I hadn't wanted to see. Pity.\n\n\"I'm sorry, Michael.\"\n\n\"I'm not in love with you, Deirdre. I stopped loving you the first moment I heard you fucking him. But, you were willing to risk prison for me. Fair's fair. I couldn't see sending you to prison after that.\"\n\nI looked over Wilson and Teller and said, \"Thank you gentlemen for your help in this matter.\"\n\nThen I held out my hand to Maitland. He shook it.\n\n\"Thank you for everything, Mr. Maitland. I hope that answered your questions;\"\n\n\"Yeah. Where are you headed now?\"\n\n\"Away from here. I doubt I'll see you again.\"\n\n\"Good luck.\"\n\nI made it to the door.\n\n\"Deirdre, don't try to contact me - ever. For anything. If you die before me, don't have your staff contact me. I won't come. Because, as of today, you're dead to me.\"\n\nI walked out the door and within three hours I had left the continental United States."
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "infidelity",
        "divorce",
        "legal drama",
        "crime",
        "stubborn love",
        "the very rich",
        "big oil"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-currency-of-time-ch-02"
}