{
    "title": "Home for Horny Monsters Ch. 58",
    "pages": [
        "Hi all!\n\nWelcome to the next chapter of Home for Horny Monsters! I'm your host, Annabelle Hawthorne, and I'll be your tour guide for today.\n\nNew to the story? In short, a man name Mike inherits a house, meets some sexy monsters that he occasionally has sex with, and almost 600 thousand words worth of plot, shenanigans and silliness later, his house is under attack by a mysterious shadow man while he is stuck having a (metaphorical) pissing contest with the queen of the fae who has kidnapped the resident banshee.\n\nReturning reader? I missed you, welcome back! Hey, shit is about to get wild, and I'm so glad to be on the ride with you.\n\nThanks to everyone in the Lit community who has encouraged me to keep doing this. Not only has it been a lot of fun, but this story and its adventures has been one of the few things this year that has reliably brought me joy. Times are tough, and I'm hoping that you are all getting by and that sunnier days are ahead (well, not in the Northern Hemisphere, it's already getting cold as fuck where I am).\n\nAnyway, it's time to get on with the show!\n\nDay of the Dead\n\nDana was upstairs when she heard the front door explode. Quetzalli emerged from her bedroom with a concerned look on her face, and the two of them rushed to the top of the stairs to look below.\n\nThere was a flash of light, followed by a scream from Beth. Quetzalli was already heading for the stairs when a man in a hoodie pointed his wand up at her and hissed something under his breath. Dana shoved Quetzalli out of the way in time to catch the brunt of the magic, and the shockwave carried both of them into the wall, showering them with the shattered balusters of the railing.\n\n\"Urgh,\" Dana moaned as she got to her feet. When she took a breath, she could tell that something had punctured a lung, so she looked over her shoulder to see a large wooden splinter sticking out of her back. She pulled it free and then yanked a few extra pieces out of her thigh and arm.\n\n\"Hey, you okay?\" She shook Quetzalli by the shoulder, but the dragon was motionless. \"I need some help,\" she called to the rats down the corridor, which shook them out of their stupor, and they came running. Together, they dragged Quetzalli into Mike's bedroom.\n\n\"Naia,\" she called, and was most of the way into the bathroom when the nymph appeared with a terrified look on her face. \"I need your help!\"\n\n\"We're under attack,\" Naia told her, then saw that Dana was dragging Quetzalli and helped pull her into the mostly empty tub. \"My fountain has been frozen by angry spirits, and some man is running around with a wand.\"\n\nOut back, Cerberus roared, and then the whole house shook. Down below, furniture sounded like it was being tossed around, and then the Jabberwock let out a shriek.\n\n\"Sounds like the end of the world,\" Dana muttered. \"Guess I'd better go do my part.\"\n\n\"Dana, be careful,\" Naia warned her.\n\n\"Yes, Mother,\" she replied sarcastically. She walked into Mike's room and frowned. There wasn't anything she could use as a weapon in here, and the rats that had followed her were watching her as if waiting for instructions. She held a finger to her lips and cracked the door open. She used the selfie cam on her cellphone as a makeshift periscope, grateful that it was still functional, though the screen was cracked.\n\nOut in the hall, a group of shadows were dragging their hands along the walls, shredding the wallpaper and gouging the plaster. The man in the hoodie made it to the top of the stairs and turned away from Dana, striding down the hall with purpose. When he made it to the mysterious door, he went to work right away spinning the gears, and then pulled the lever to the door. The door let out a hiss, and instead of swinging open, sections of it rolled out of the way, revealing that it was a series of moving circles that overlapped.\n\nDana moved down the hall, staying low and in the middle. The shadows spun to face her, their distorted features flickering in and out of existence.\n\nShe held up her fists, not sure what she was going to do with them, when she heard someone laughing downstairs, followed by the flickering of lights. The power went out briefly, and when it came back on, the spirits were grouped at the top of the stairs, as if curious what was happening down below.\n\n\"Come play with me!\" It was the voice of a child's toy, and then Jenny was there. She tore through the spirits like they were paper, her fingers ripping ghastly holes in their bodies. The spirits fled, vanishing through the walls and floorboards. Jenny's wild eyes briefly met Dana's, and then she stuck out her tongue and dove into the floor like it was a swimming pool. The rats, having enough of this nonsense, scattered.\n\nDana smirked, then moved down the hall until she was at the door. She picked up Tick Tock and held the mimic to her chest.\n\n\"Quetzalli is in Mike's room. She needs protection,\" she said, and the mimic sprouted legs and raced down the hall.\n\nShe moved toward the door, curious at how its mechanisms worked, but froze in amazement at the interior.\n\nThe room itself was a giant conservatory made of several round windows, each one looking at a different patch of starry sky. Up above hung the remnants of an ancient telescope that looked as if it was in the middle of being repaired. All around the room were shattered mechanical parts, as if something complex had exploded and never been cleaned up. In the middle of the room was a small table, and the dark figure pored over a set of volumes that sat in the middle of the table before choosing one and picking it up.\n\n\"The Grimoire! You lose, Emily.\" The man let out a laugh and then hugged the book to his chest. \"All you bought was time, and it still cost you your life.\" When he turned around, he went still when he saw Dana.\n\nDana noticed two things. The first was that his eyes were black, like Sulyvahn's. The other was that the tome he held was very large, intricately bound in thick leather. Embossed in the middle of the cover was a very large apple.\n\n\"Goodbye, dead girl.\" He pointed his wand at her and she dove out of the way. The ensuing blast ripped apart the floor between them, and she scrambled for cover behind a cog the size of her body. Wave after wave of force struck the cog, causing it to resonate and shift as she circled around it, using it as a shield. He finally walked out the door, the book held tightly against his side.\n\nShe had no idea what was actually inside the book, but she did know one thing: she had been killed for it. The Grimoire had been one of the possible treasures Daryl had sent her to find, and there was no way she was going to let this asshole leave the house with it.\n\nWhen she looked down the hallway, she saw that he had gone into Beth's bedroom. Outside the house, there was a loud shriek and something smashed into the roof, showering her with dust. At Beth's room, she opened the door to see that the closet door was open, revealing the mouth of the magical cave.\n\nA hand touched her and she jumped, then turned to see Beth and Kisa standing behind her.\n\n\"He's got the Grimoire,\" Dana said. \"And he's headed into the Labyrinth. Who the fuck is this guy?\"\n\n\"Mike's shadow friend, wearing my former coworker Marco as a meat suit.\" Beth looked at Kisa, then back at Dana. \"Any ideas what he wants with Ratu?\"\n\n\"None, but that wand of his is nasty. I feel very outgunned here.\" The house shook again. \"What the hell is going on outside?\"\n\n\"As far as we can tell, the spirits have possessed the Jabberwock and it keeps attacking the house. They've also flooded this place and are tearing it apart from the inside. We need to get word to Ratu, but I can't find any of the faeries, and Sofia's book is missing, so we can't get her help either.\" Beth wiped some blood off her forehead. \"Damn, won't stop bleeding.\"\n\n\"There's got to be something we can\u2014\" Dana stopped talking, her eyes on the dark figures in the door of the room. They were flickering in and out of existence, and spread out to trap them in the middle.\n\n\"They can touch you when they want to,\" Kisa warned, then hissed at the one closest to her. The three moved back to back as the spirits encircled them.\n\n\"Jenny! We need your help!\" Beth yelled, but the ghost didn't appear. The house rumbled again, and Kisa launched herself at the nearest spirit, only to be scooped up and tossed across the room.\n\nQuetzalli appeared in the doorway, carrying a large piece of wood. She swung it frantically at the spirits, only to trip over her own feet and stumble forward through the shadows. As she passed through one of the spirits, the room filled with the smell of ozone as she discharged electricity.\n\nThe shadow became motionless, then color filled in its features, as if a dam had broke and allowed paint to fill in all the color. It was a man wearing leather armor from centuries past, and he held up his hands in wonderment, as if surprised to see himself standing there. His features rippled as if he was being projected on water, glowing cracks now appearing along his body.\n\nThe other spirits recoiled when he exploded into motes of light, all of which immediately flew out the window. Their attackers evacuated, and Dana ran to the window to watch as the motes of lights shot through the gate to the Underworld. The shadow castle loomed larger than ever, and the phantom militia continued to march toward the house.\n\nOut in the darkness, Cerberus whimpered.\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nThe faerie queen's face was fixed into a scowl as she walked past Mike to sit on her throne. She crossed her legs and looked down at him, then glanced over at the broken throne by her side.\n\n\"Well?\" Mike asked. \"We had an agreement. You said if I came back to you through the Underworld, you would let me take her. I believe you have an agreement to honor.\"\n\nShe held out her hand and a scroll appeared, identical to the one she had given him. \"Should you find a way to enter my court via the Underworld itself, I will allow you to leave here with your dear Cecilia. Per your addendum, the two of you will leave unharmed, as well as intact. Hmm.\" She rolled up the scroll and tucked it away in mid-air, clearly using some sort of extra dimensional magic. \"I'm curious, Caretaker. On your way in, did you happen to...meet anybody?\"\n\nThat was an odd question to ask, and he thought briefly of the cave he had seen. \"No. Was I supposed to?\"\n\nThe queen frowned, then pulled out another scroll and opened it. \"Let's just say that I had an agreement with someone else to stop you. It was more of a favor than an agreement, really. Did you have help getting here?\"\n\nHe thought of what had happened to Quetzalli. \"Does it matter? I do believe there was nothing in the rules about getting help from others.\"\n\n\"You are right. I am curious is all. When a deity's claim to fame is keeping others from breaking oaths, one really must expect better of them.\" She was near the bottom of the scroll now, and her features pinched. \"Ah, there it is, the free-will clause. I'm not sure how you got away from her, but no matter. This is what I get for relying on others to do the work for me.\" She tucked this scroll away in midair as well and then sat in her chair, a glare fixed on her face.\n\n\"So...we can go?\" He looked around, fairly certain that an ambush was about to occur at any moment.\n\n\"I'm certainly not going to stop you.\" She clapped her hands and a pair of tiny attendants flew from behind her throne and brought her a small bowl with fruit in it. She picked a pear that practically glittered and took a bite out of it, juice running down her chin.\n\n\"Ooookay, then.\" Mike turned his attention back to the cage. Seeing no discernible door, he looked over at the queen. \"I don't suppose you would just let her out, would you?\"\n\n\"I'm not keeping her here. The cage is your problem, not mine.\" She now had a fresh goblet full of wine, which she sipped. \"If you can't get it open, you might have to come back later.\"\n\n\"There's no reason for you to be nasty,\" he said, then turned his attention to the cage.\n\n\"We could come to an agreement, if you like.\" She sipped her wine coyly. \"Though I doubt you will enjoy the terms.\"\n\nHe smirked. \"No need.\" He set his backpack down and opened the main pocket, then dug down past the sandwiches. He pulled out the hacksaw, then lifted out a blade, still wrapped in cardstock. \"Figured you may try something like this.\"\n\n\"And you really think that will cut through those bars?\" asked the queen.\n\n\"This is a top of the line blade. I had Tink test the top five for me and give me her opinion on which would be strongest.\" He unwrapped the blade, revealing a black surface that absorbed the light. \"Once we narrowed it down, I had Ratu enchant it for durability.\"\n\n\"How...ingenious of you.\" The queen sat and watched as Mike picked a couple of junctures on the cage and started sawing. It was slow progress. The blade stuck on more than one occasion, but when he finally got through the first bar, he looked up to see a huge smile on Cecilia's face.\n\n\"Keep going,\" she encouraged him, then touched his face through the bars.\n\nBy the time he got the blade through a second time, he was covered in sweat. The queen said nothing to him, content to watch. On the third cut, he was about halfway through when the blade snapped.\n\nThe queen chuckled. \"Looks like your magic failed, Caretaker.\"\n\n\"It's a good thing they come in two packs.\" He stuck his hand in the bag and felt around, but the second blade was missing. \"Hey, did you take it?\"\n\n\"Me, personally? No. And I've been here the whole time, it must have been an independent agent, acting entirely on their own.\"\n\n\"Man, of all the luck.\" He looked at Cecilia and winked, then dug to the bottom of his bag and pulled out a sandwich from the bottom. He opened the wrapper to reveal a tuna salad sandwich dripping with mayonnaise.\n\nWhen he opened it, he heard the queen gag, and he dug his fingers in and pulled out another wrapped blade. \"It was tough trying to figure out which you'd hate more, this or the meatball sub. It's actually quite good, and perfect for hiding a blade in. Figured someone would search my bag on the way in and a cake would have aroused too much suspicion.\"\n\n\"You expected treachery?\" The queen's voice was ominous now, and had an edge to it that could bleed a rock.\n\n\"Nope. I expected you to meet the terms of our agreement. Nothing more, nothing less. The cage bit is getting old though, I must admit.\" He slotted the blade into the hacksaw and started cutting.\n\n\"You know, it will likely take you some time to finish getting her out.\"\n\n\"Uh huh.\" He ignored the queen, his sole focus on the bars in front of him.\n\n\"Could be an hour or two, easy. I wonder if you are aware of what is happening at your home right now?\"\n\nHe paused and looked at the queen, his lip twitching. \"What did you do?\"\n\n\"Me? Nothing. I have had no hand in the events of today, Caretaker, this act of villainy was perpetrated by the one who informed me that you were coming.\" She reached behind the throne and pulled out a mirror decorated in silver and gold embellishments. She handed this to an attendant, who flew it over to Mike.\n\nWhen he took the mirror, he could see his house, besieged by a spectral army. In the front yard, Abella was busy ripping off part of the Jabberwock's wing while Yuki froze its feet to the ground as it bounced around the yard, destroying everything. An ice wall had been built between the lions, and Mike couldn't figure out if it was there to keep something in or out.\n\n\"They are failing,\" the queen said. \"The shadow has made his move, and when he is done\u2014\"\n\n\"My world will burn, I get it.\" He licked his lips nervously and watched as the mirror flipped between the occupants of the house. It bounced from face to face, showing fear and anger everywhere he looked. Sulyvahn was busy whipping souls into shreds in the front yard, and the rats were fleeing the home in a panic as the spirits tore it apart. The faeries were flying high above the home, safe from the melee below. Asterion was lying unconscious somewhere in the Labyrinth, one of his horns broken off.\n\n\"I could send you home right now if you wish.\" She pointed over his shoulder and he looked to see that an archway had formed behind him. \"All you have to do is agree to the terms and you can be home right now.\"\n\n\"I...\" He looked at the queen, then back at the door. His home was being torn apart, but even worse, the others were in danger. \"What terms?\"\n\n\"Leave Cecilia here.\" The queen was standing next to him now, her voice like honey. \"I will allow her to leave in time, Caretaker, but walk away from her and never look back. Is one woman really worth the potential loss of your family?\"\n\nHe let out the breath he had been holding, then looked at the mirror again. It flitted between everyone's face, then stopped on Beth's.\n\n\"She is eternal, Caretaker. You can have no true life with her. But this woman, Beth? She is one of your own kind, you could grow old and have a family with her.\" The words were low and borderline hypnotic, and she was leaning over him now, her scent overpowering him. He closed his eyes and sucked her in, his head filling with images of distant fields covered in honeysuckle flowers.\n\nThe mirror was in his hands now, Beth's face filling the frame. Her hair was blowing dramatically across her face, and her lips were plump and full. The image backed away, revealing that she wore a costume of some sort that hugged her body, and he felt his cock twitch.\n\n\"Your life will never be normal, but with her? It could be close.\"\n\nHe sighed, and looked up from the mirror. \"Do you really think I could be happy with her?\"\n\nThe queen nodded. \"I do.\"\n\nThe incident with Zel and possibly knocking up Kisa came to mind. He wasn't ready for children yet, and maybe he never would be. Fatherhood wasn't something he had ever considered, but if it were ever going to happen, Beth made the most logical sense. It would be such an easy decision to just go, to save them. Nobody would blame him for coming back.\n\n\"I'm not saying the thought hasn't crossed my mind. There really is a lot of potential there. She's smart. And brave. She faced down a demon on more than one occasion, and she's definitely one of the strongest people I know.\" He looked into the queen's saccharine smile. \"If I had to pick the one thing I admired most about her, do you know what that would be?\"\n\n\"Tell me,\" she whispered, her eyes glinting.\n\n\"That I can trust her.\" He handed the mirror back to the queen and held up his saw once more. \"There will always be a disaster waiting to fall on my head. If I can't trust her and the others to handle it, then I don't deserve them.\"\n\nHe turned his attention back to the cage, a smile breaking across his face when he heard the mirror shatter on the ground behind him. Cecilia's lips trembled and he reached through the bars.\n\n\"I came for you. I am not leaving without you.\" And with that, he resumed cutting.\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nBeth stared at the door to her closet, her hand nearly on the knob. If she opened it, she could run to the Labyrinth, maybe even stop Marco from reaching his destination. It was highly likely that Ratu would know he was coming, and she felt like her presence alone wouldn't be enough to affect any sort of change.\n\nShe put her hand on the door and sighed. Even if she caught him, she had no way to fight him, especially now that he had his hands on the mysterious Grimoire. Would Mike be amused to know that the damned thing actually existed? If the shadow really was in control, then there was no way to use words to settle this, and words were her strength.\n\nThe Jabberwock roared and collided with the house once more, causing plaster to rain down on all of them. Dana looked at Quetzalli, who in turn looked at Beth.",
        "Her eyes slid right over Kisa as if she wasn't there, and it was only because she was trying to find her that Kisa came into focus. It was almost like the room had been hesitant to separate from her. This is how it always was with the cat girl. She was a presence in the room that was hard to detect, unnoticeable in the best of circumstances, and it had to be more than just her diminutive appearance. It was certainly a kind of magic.\n\nBeth looked over at Quetzalli, then Dana. The ghost that Quetzalli had touched had looked different after being zapped, much like Jenny did when she manifested. Why were these ghosts different from Jenny? How come they didn't drain the energy from the room? And lastly, how the hell were they able to come into the house?\n\nThese thoughts danced around in her mind as she took in the room and considered the situation. There was a shadow castle out back, a possessed Jabberwock out front, and a whole lot of confusion going on. What would Mike do?\n\n\"Fuck his way out or get lucky,\" she muttered with a grin. She wasn't certain how to accomplish the former, and was definitely keeping her fingers crossed for the latter. Still, it wasn't enough to wonder what Mike would do, because right now, this was her problem.\n\n\"Kisa.\" She spoke to the cat girl as she manipulated the knob of the closet. \"I need you to follow Marco to the Labyrinth, he may already be there. If you get a chance to stop him, take it, otherwise stay back.\"\n\n\"You just want me to follow him? Why?\"\n\n\"When he leaves the Labyrinth, he will probably jump in the reflecting pool at the entrance, it's a shortcut to the front closet. I'm guessing he won't expect anyone to follow him, so you'll be our secret weapon. He cannot leave here with that book, or God knows what else he may be taking. Now hurry.\"\n\n\"But\u2014\"\n\n\"Go!\" Beth pointed into the cave, and Kisa scowled before entering the tunnel. She may have hurt Kisa's feelings, but now wasn't the time for pleasantries. \"We need to figure out how to get the ghosts out of the house. Zapping them seems to work, and I have a theory. Did you ever see that map that Death and Mike drew, the one with the overlapping circles?\"\n\nDana nodded.\n\n\"Well, I think that's what's happening. They came out of the gate, but they aren't fully here, it's why they pass through everything. The house can't properly kick them out because they aren't fully inside it. When Quetzalli zapped that one, it was forced to absorb all that energy, which made it manifest like Jenny did. Once it was fully here, the geas booted it out!\"\n\n\"I didn't see Jenny manifest, but I'll take your word for it.\" Dana looked at Quetzalli. \"Do you think you could do that again, but on a bigger level?\"\n\nQuetzalli shook her head. \"Not with my horn busted. I can do short bursts like before, but only one at a time. Oh, I know! We could do that thing you did, from that time you had me get naked.\"\n\nBeth had no idea how to process that statement, but Dana's face lit up.\n\n\"Yes, that's right! If we can wire you into the house itself, you'd have plenty of juice to manifest an EM field, I bet that would work! We'll have to bypass the breaker outside, so\u2014\"\n\n\"Just go do it. I'll see what I can do about the Jabberwock. Go!\" Beth followed the others out of her room and down the stairs, and they split at the bottom. Beth swallowed the lump in her throat as she ran into the office and saw that the bookshelf had been ransacked. It might take her too long to bring in Sofia from the Library, so she decided to strike out on her own.\n\nOn her way out the ruined door, Jenny manifested momentarily to take down a rogue spirit, then vanished with a giggle. Out front, the fight with the Jabberwock appeared to be at a stalemate. Even though the thing had been blinded and crippled, it continued to move about, and currently had Abella pinned under one of its clawed feet. The whole front yard was full of snow and ice, and Yuki stood by the ruined front porch, moving her arms about as if performing a dance while giant icicles lifted from the snow and launched themselves into the Jabberwock's body.\n\n\"How is that thing still alive?\" Beth asked.\n\n\"That's just it, it isn't alive,\" Yuki responded. \"It can't think for itself, and all the souls inside are determined to keep piloting it until there's nothing left.\" She sent another volley of ice at the Jabberwock, knocking it off of Abella. \"Even if we destroy the head, the spirits can move the body. We need to take them out.\"\n\n\"Any ideas how to do it?\"\n\nYuki spun about, her cheeks dark with frustration. \"Yes, of course. I'm just doing all this other shit first because it's been a slow day.\"\n\nBeth held up her hands in surrender. \"Where's Tink?\"\n\n\"No idea. Abella found me, so I came right away, and\u2014\" Yuki's eyes widened, and she summoned an icy barrier over her head that shattered when the Jabberwock's tail struck it. \"I'm kind of busy!\" she shouted, then turned her attention back toward the beast.\n\nOn the other side of the yard, Suly was tearing his way through a group of souls that had him cornered. It was almost like the phantom army knew that he was the only thing that could hurt them right now, and the sheer volume of them kept him occupied. Beth ducked back into the house to avoid the battle out front, her mind whirring with ideas.\n\nShe stepped back out front and put her hands around her mouth like a megaphone. \"We need to get the Jabberwock out back,\" she called.\n\n\"Why?\" Yuki asked.\n\n\"Just do it!\" Beth disappeared back into the house and then ran out back. Dana was unspooling the wire from the giant cable that Tink had left outside, and Quetzalli stood just in the doorway, her nervous eyes locked on the gate at the back of the yard.\n\n\"Are you done?\" asked Beth.\n\n\"Almost.\" Dana had ripped the cover off the fuse box and was carefully pulling out one of the wires. \"This is the 220 line, so if I can just\u2014\"\n\nThere was a pop, a flash of light, and then Dana was on the ground, huddled up in a ball, her fingers curled up. Her body spasmed a couple of times and then she got back up and shivered.\n\n\"I'm not exactly following safety guidelines,\" she stated, then stepped on top of a rock and used a wire nut to attach the wire to the line she had just exposed. \"Ugh, my teeth still feel like they're wiggling in my head. Quetzalli, I think you're up.\"\n\n\"Okay.\" Quetzalli grabbed the other end of the line which had been stripped, and then touched it with her finger. There was a zap, and the air was briefly electrified. \"I think you've got it.\"\n\n\"Good, we'll go to the second floor and then I'll plug you in.\" Dana looked back at Beth. \"If this works, we'll clean house, but they still might come swarming back in.\" When Beth looked down the hill, she could see an ominous mass of shadows milling about by the door, as if waiting.\n\n\"Good. You'll want to be inside, because\u2014\" Beth was cut off by the sound of tiles being shredded from the roof, and then the Jabberwock's tail flipped over the side, dangling over their heads for a moment. The tail vanished again, then reappeared, this time with Abella dangling from the edge of it. The gargoyle yelled and pulled, but only succeeded in ripping a chunk of tail off before she tumbled to the ground. The Jabberwock roared up above, and then scrambled away.\n\nAbella stood, wiped the Jabberwock's ichor off of herself, then glared at Beth. \"I hate this,\" she said in her thick, French accent. She tossed the chunk of tail in her hands away and then took to the sky once more.\n\n\"Because that,\" Beth said, watching the gargoyle disappear over the roof. \"We need the Jabberwock out here.\"\n\nDana shrugged. \"You're the boss.\" She helped carry the coiled up wire and the two of them went into the house.\n\nBeth looked down the hill at the shadowy mass around the gate. If she went down there, would the spirits be able to hurt her? If she passed through the gate, they would definitely be able to, and she worried that they may grab her and drag her through. She had no way to lock the gate if she closed it, and she needed to find a way to bring Cerberus onto this side of the gate. Suly would be her best bet, but he was surrounded by angry souls.\n\n\"Shit, shit, shit,\" she cursed, moving down the hill. Could the centaurs help? She might be able to bring them here, but then what? And they were cut off from Ratu whose magic might help. Jenny was running interference inside, so would be of very little help.\n\nWho was she forgetting?\n\nBehind her, the lights in the house flickered, and then the air was filled with the shrieking of tormented souls. The windows exploded as hundreds of balls of light burst out of the house and drifted toward the ground like bits of ash, only to vanish into the dirt. Bits of glass tinkled against the cobblestones of the back yard and she covered her head to protect herself. The flickering lights went out, and the smell of burning plastic filled her nostrils. There seemed to be no movement inside, which meant that the ghosts had been purged from the home, at least temporarily.\n\nUp above, the Jabberwock had wrapped itself around one of the turrets, caving in part of the roof over Mike's bedroom. Abella had her tail caught in the Jabberwock's mouth and was being shaken like a cat that had caught a mouse, her stony body taking yet more chunks out of the roof. Yuki was up there as well, freezing the roof, trying to get the Jabberwock to slip and fall into the backyard.\n\nShe hoped Mike was faring better than she was.\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nThe saw slid through the last piece of metal, and the bar fell to the ground with a metallic clang. Looking up, he saw that the gap was now wide enough for Cecilia to squeeze through, so he stuck his hand out for her and she accepted.\n\nWhen he pulled, steam rose from her flesh, but she said nothing. Once free, she threw herself onto him and let out a cry of joy. Tears flowed freely down her face as she peppered him with kisses and spoke rapidly in Gaelic, then held him once more.\n\nMike glanced at the faerie queen, who watched as if bored. Certain she was up to something, he pushed Cecilia away, then tilted her head up by her chin. \"Let's get you home.\"\n\nShe nodded, and he packed up the saw and put the backpack on. They walked a few feet away before Mike paused, then looked at the banshee.\n\n\"How do we get home from here anyway?\" he asked.\n\n\"I can get us there.\" Cecilia closed her eyes and opened her mouth to sing. The sound of her voice penetrated straight through him, raising the hairs on the back of his neck. He took her hand in his and watched as a golden circle formed in front of them, featuring a sandy beach with an ocean of stars on the other side.\n\nSqueezing her hand tightly, they walked toward the portal together. They were almost to it when Cecilia froze in place, jerking his arm back.\n\n\"What's wrong?\" he asked, and turned to look at her. A golden spotlight shone down on her from above, and she was motionless inside, as if trapped in time. \"Cecilia? What the hell?\"\n\nHe yanked her hand, but was unable to move her. He looked past her shoulder at the queen, who still looked bored and was contemplating her fingernails.\n\n\"You said you would allow us to leave unhindered!\" he shouted. \"What the fuck is this?\" He tried to step into the spotlight and push Cecilia out, but it was no use. She was unmoveable.\n\n\"Oh, I did nothing. This one is on you.\" The queen stood, her robes shifting around her as she clapped slowly. \"As promised, you found a way to enter my court via the Underworld, so I allow you to leave. But per your addendum, the two of you will leave unharmed, as well as intact.\"\n\n\"Neither of us are harmed, nothing happened after I got here.\"\n\n\"Please.\" The queen approached him now, a smirk on her face. \"Unharmed and intact, foolish Caretaker. Words that can be interpreted in many ways.\" She stood by Cecilia now, and hooked her finger in the front of Cecilia's blouse and tugged downward.\n\nThe pale skin between Cecilia's breasts were revealed, along with a thin scar that had been left behind by a magic dagger. The witch Sarah had cut Cecilia with the dagger, but Mike hadn't thought twice about the injury since.\n\n\"The wound is healed,\" Mike protested, but the queen held up a hand to silence him.\n\n\"You said unharmed and intact. I could argue that she is not in the condition she was created in, therefore neither condition applies.\" The queen stroked Cecilia's cheek lovingly, then raised her fingers to touch the strands of red hair.\n\n\"That doesn't even make sense,\" he shouted, heat rising in his cheeks. \"That's just your interpretation!\"\n\nThe queen laughed. \"And? It's my realm, Caretaker. I interpret our agreement to mean that she will leave here in a state of perfection.\" She snapped her fingers and the golden spotlight turned silver, casting Cecilia in an eerie glow. The banshee floated now, a look of concern on her face. \"So I will reset her. Make her brand new again, as if she were freshly created.\"\n\n\"No!\" Panic appeared on Cecilia's face. \"No, please, not that!\"\n\n\"What do you mean reset?\"\n\n\"Tear her apart and put her together. Minus the impurities, of course. The hair, the scar, and also this.\" The queen hooked her fingers near Cecilia's face and then yanked. A diaphanous substance appeared in her fingers, stretched tightly across Cecilia's face like a caul.\n\n\"What is that?\" Mike asked.\n\n\"A parasite. Cecilia here has been growing a soul.\" When the queen let go, the soul snapped back into Cecilia's body, causing her to gasp. \"A tiny little piece of you has been floating around in there long enough that it's growing. Even if something happens to you, this...remnant would linger and fester, making her more like a mortal with every passing day.\"\n\n\"Don't,\" Cecilia begged, her sightless eyes settling on Mike. \"Don't let her do it!\"\n\n\"Disgusting.\" The queen shook her head. \"You see, I plan to let her leave with you, but not before I wipe her clean completely. She will be unharmed and intact, born anew and allowed to leave with you if she chooses. She will have no memory of you, or anything else for that matter, so she may decide to stay here with her mother.\"\n\n\"You can't do this,\" Mike growled.\n\n\"And yet, I will.\" The queen raised her hands as if to snap her fingers. \"Out with the old, in with the new.\"\n\nCecilia opened her mouth in a silent scream.\n\nAs the queen's fingers came together, Mike crossed the distance between them and clamped his hands over hers. The queen turned to face him, her clear complexion turning a dark shade of green as the ground beneath them trembled.\n\n\"A duel,\" he shouted in her face. \"I challenge you to a duel!\" It was an act of desperation. The thought of Cecilia being erased horrified him, but now he felt like he had lathered himself up with honey and hugged a cranky bear.\n\nThe queen rolled her eyes. \"Enlighten me, Caretaker. I know exactly what you want if you win, but what do you even have to offer? There's no amount of money or power I care for, and it's not like\u2014\"\n\n\"You can kill me.\" He stood his ground, his hands on hers. \"If you win, you have my permission to bypass whatever protection the previous agreement granted and kill me. But just me, not any future Caretakers.\"\n\n\"Please, that wouldn't...I can't even...\" Her green complexion became the color of ivory once more, and she pulled her hands from his. She reached into the air and pulled out a golden scroll that was so bright that Mike had to look away when she unfurled it. The document itself was huge, unraveling around them and hovering like a snake-shaped cloud, filling the small island. The queen perused it as if looking for a specific passage, muttering to herself.\n\n\"Well?\" Mike asked.\n\nThe queen frowned. \"Perhaps. But do you understand the rules of our duel? I get to choose the weapon, and you know I'm going to choose magic. According to this document, I'm not allowed to harm you, and you can't let me out of it in advance, because I would kill you anyway. I can do you no harm, Caretaker, not even with your permission.\" She shook her head. \"As much as I would love to destroy you at your own stupid game, there's no bypassing the rule, so no deal.\"\n\n\"Wait!\" Mike put up his hands, his mind racing. \"What does the contract say about harming me?\"\n\n\"It's written in the language of Creation, which leaves no room for argument. But in your mortal language, it essentially says that I shall not be allowed to directly cause you bodily or mental harm.\"\n\nThis was all a bad dream, and he needed to find a way to wake up. \"Bad dream,\" he muttered, inspiration striking. \"Your Majesty, what if I chose the Dreamscape as the location? I am allowed that much. You choose magic as your weapon, I choose the Dreamscape as the location. Technically, what happens in a dream doesn't actually harm me, right? It may feel real, but we would be fighting on a spiritual level. What do you think?\"\n\nThe queen's face twisted up, but then she turned to look at the contract. Several minutes went by, but Mike didn't dare take his eyes off of her as she moved through the magical language of the scroll. Finally, she looked up at him, suspicion on her face. She was right to be suspicious, because he was already thinking about how he had defeated Lily in the Dreamscape. It was possible that the queen wouldn't know that Naia lived in there as well, so he would have an ally.\n\n\"What are you up to?\" she asked.\n\n\"Well? What does it say?\" he replied, dodging her question.\n\n\"You're right. We could fight in the Dreamscape, it would be allowed. We would have to set terms. For instance, whoever decides to wake up first loses. That would be a proper duel, and I know that you have been training with the succubus, and I even believe that you think your mastery of the Dreamscape will somehow give you an advantage over me. But why? Surely you must be holding a card up your sleeve, Caretaker.\"\n\n\"There are no cards up my sleeve,\" he assured her, making sure to picture a literal stack of cards hidden away in his clothing. The faerie queen would know if he was lying, and when it came to actual cards up his sleeve, he certainly had none. \"Your soul versus mine, in the Dreamscape. My Dreamscape, because apparently my dream passport has been revoked, but it does have a nice beach with a view of\u2014\"\n\n\"Shut up, Caretaker. You do realize that I will still have the full range of my magic?\" He could hear the eagerness in her voice, eagerness that was about to lead her into a trap of his own.\n\n\"As would I,\" he told her. \"You're going to need all the help you can get.\"\n\n\"When I defeat you, I'm going to turn you into a beetle and grind you into the ground where you stand,\" she told him as she walked toward her throne. \"And when I'm done, I'm going to enchant the bloody smear left behind so that it never washes away. Your stain on the floor will be the first thing I see that sparks joy every morning for eternity. In fact, I won't even turn you into a bug. I will summon one of the giantfolk to do the task for me, that I may see the look on your face as the life is squeezed from your body. Oh, the possibilities!\" She folded her robes up and sat down on the chair. Her cheeks were turning green again. \"If you win, I release Cecilia in her current condition without any change. If I win, the terms of my agreement with the Architect no longer protect you, and I smash you like a fucking bug.\"\n\nHe swallowed the lump in his throat, then looked at Cecilia. She shook her head sadly, then reached for him. He put his hand against hers, and was surprised at how warm it felt. It was hard to believe that she had a soul growing inside of her, using a piece of his soul like the impurity around which every raindrop formed.\n\nApparently he wasn't going to get away from Quetzalli's storm facts, even here. \"I agree,\" he told the queen. \"So when do we\u2014\"",
        "A pink, powdery substance hit him in the face, and the world spun around him as he tumbled to the ground, sleep seeping into his eyes. As he drifted off to sleep, he hoped that things at the house were going better than they were for him.\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nKisa stared in awe at the door of the Labyrinth. It had been ripped clean off its hinges and was curled up against the opposite wall. She walked inside and looked around, uncertain of where Marco could be, then moved to inspect the door a little bit closer.\n\nThere was no way that the wand did this. It had to be something else, and she thought back to the Grimoire that Dana had mentioned. It vaguely rang a bell for her, but she couldn't seem to hold onto the memory for more than a second.\n\nMoving into the Labyrinth, she turned the first corner and felt the air leave her body. A large hole had been carved into the stone wall of the Labyrinth, creating a path that went through the next several walls. Marco had made his own shortcut apparently, and she was hesitant to follow him in.\n\nMaybe she should just wait for him out here?\n\nSomewhere deep inside the Labyrinth, she heard an explosion, followed by the sound of escaping steam. The glow of a fire illuminated the low hanging stalactites of the ceiling, and now she wondered if Ratu was okay. There was no way the Minotaur could have held his own against Marco, but maybe Ratu had a shot.\n\nAnd maybe she could help.\n\nClenching her fists, she sprinted down the path, following the sounds of battle, wondering if there was a single thing she could do to help. The path deviated occasionally, and she had to take a detour around the river and find a place to jump across. There was no sign of Asterion anywhere, and several traps had been sprung without being reset.\n\nSomething large cried out, and the Earth trembled. Afraid that rocks might fall from above, she hugged the walls of the Labyrinth as she moved closer to the center until she finally found herself standing in Ratu's lair.\n\nThe place was destroyed.\n\nPiles of blasted furniture and magical artifacts lay everywhere, and the naga herself was nowhere to be seen. There were scorch marks along the walls and floors, and the caverns that encircled the room had been caved in. Rubble had rolled down the hill, piling up into a hill against Ratu's magical pagoda.\n\nKisa moved along the edge of the cavern, her eyes constantly hunting for movement when a hand grabbed her ankle.\n\nShe hissed in surprise, then looked down to see that a patch of dirt and rocks by her feet had eyes and a mouth. When she knelt down, she recognized Ratu's features, her face distorted as if it had been ripped off her head and glued to a pile of rocks.\n\n\"My appearance is...unsettling,\" the naga wheezed, then blinked her eyes. \"The shadow overpowered me with that damn book of his and I was forced to hide or be destroyed.\"\n\n\"Where is he?\" Kisa asked.\n\n\"In my pavilion. He came down here looking for something. Help me over there.\" Ratu gestured with her head, and Kisa grabbed onto her body and pulled. The naga looked like a lump of clay that had been filled with pebbles, and moved like one, too. They were now huddled under the remnants of what was once a large table that she used for her experiments, and they were able to watch the pavilion through a gap in the wood.\n\n\"Thank you.\" Ratu sighed. \"I don't suppose you saw Asterion on the way in?\"\n\nKisa shook her head.\n\n\"I was afraid of that. Hopefully he wasn't killed, but I'm all out of hope. I'll be okay in a few days, but if I am found like this, I have no way to defend myself.\" The naga flicked her tongue out, then moved her head toward the gap. \"Shh,\" she cautioned.\n\nKisa looked through the gap in the wood and saw Marco emerge from the pagoda. He scanned the room with dark eyes, the wand held ready in one hand and the book in the other. Seeing nothing of concern, he moved to a nearby table and set the book down, then reached into his pocket and pulled something out.\n\nIt was a necklace with a beautiful blue stone in it. It seemed to glow as he held it, and for a minute, Kisa thought he was hypnotized because he wasn't moving. However, she realized that he was talking to the necklace, and it seemed to pulsate in his hands in response.\n\n\"Shit,\" whispered Ratu. \"I can't think of anything worse he could have found.\"\n\nMarco retrieved something else and held it up near the necklace. It was a crystalline vial with some sort of black liquid on the inside.\n\n\"I take that back,\" Ratu muttered. \"Kisa, he can't be allowed to take either of those things out of the house.\"\n\n\"What am I\u2014\" She pushed herself against the ground as Marco pocketed the necklace and the vial, then picked up the book. He left the way Kisa came in, and she turned her attention to Ratu. \"What am I supposed to do about it?\"\n\n\"You have a natural predisposition for avoiding discovery. You need to sneak up on him, knock him out, kill him if you have to.\" She groaned, and her body seemed to melt into the ground. \"Get ahead of him, lay a trap, anything.\"\n\nKisa muttered to herself as she moved away from their hiding place. \"I don't suppose you have something I can stab him with?\"\n\n\"Improvise,\" Ratu responded, her eyelids closing. \"I need...to...so tired.\" When the naga shut her eyes, her body settled and she looked no different from the earth itself. Worried that she may have died, Kisa put her hand on Ratu's skin and was relieved when it shifted beneath her touch.\n\n\"Go,\" Ratu muttered, and Kisa moved toward the exit.\n\nShe ran after Marco, her padded feet allowing her to be completely silent, and it wasn't long before she caught up to him. He didn't seem to be in much of a hurry, and was speaking as if someone was next to him.\n\n\"Yes, my army is keeping them busy, so we should be able to sneak out of the front,\" he said. \"Your mother will be waiting out front, you have no idea how thrilled she'll be to have you back.\"\n\nSomething in his hand pulsed blue, the glow casting an eerie shadow behind him. Kisa realized he was talking to the necklace.\n\n\"No, he's out of the house. He started a fight with the faerie queen, so I let her know he was coming. I imagine she's already killed him.\" There was a rumble from above, and he looked up, concern on his face. \"We should still be safe. The home can't be destroyed by normal means, but it will be in a state of disrepair.\"\n\nKisa was able to move even closer, and was surprised when she felt a chill form in her gut, and a sudden urge to hide. She ducked behind a wall just as a rockpile behind her shifted, and Marco's footsteps halted. She imagined that he was looking her way now, his wand outstretched, the image so intense that she was frozen in place when the wave of energy blasted past her hiding spot and struck the rockpile, scattering stones the size of her head in every direction.\n\n\"Just making sure,\" Marco muttered, and then his footsteps were moving again. When Kisa peeked around the corner, the blue glow of the necklace was fluctuating wildly.\n\n\"Me? I used to be a Caretaker, like Mike, only competent. I didn't have a house like he does, rather, it was a magnificent tower. It's been almost completely destroyed, but I was able to salvage part of it in a pocket dimension. However, now I'm stuck in its duplicate in the Underworld. Hmm? Yes, I was killed some time ago, but I had learned enough about soul magic to stitch it into a book. It was by accident that I\u2014\"\n\nKisa felt the chill again and ducked into a shadow as Marco spun around. She was able to watch him through a gap in the stones as his dark eyes searched.\n\n\"I can't wait to be free of this place,\" he muttered, then turned around again.\n\nKisa rubbed her tummy, marveling at the odd sensations that kept passing through her belly. What was that about?\n\n\"Anyway, I was a lot like you. Instead of being trapped inside of a necklace, I was gradually gaining strength inside of Emily, the previous Caretaker. Eventually I was able to bend her will to my own and manifest physically, but the bitch killed herself and I was stuck in the Underworld again until my tower was discovered.\" He tilted his head as if listening to something, then laughed. \"Oh, you have no idea. I spent so many years exploring this place, and had only just discovered some of its treasures. The Architect was clever, I'll give him that. The Grimoire is just the beginning, but we will need it to craft a new body for myself. Once that's done, the game can begin anew.\"\n\nThe way Marco spoke made Kisa pause. He sounded happy, and kept chuckling in response to whatever the necklace was saying. Was he flirting with it?\n\nThey were nearing the exit to the Labyrinth, and she was closing the distance behind him. On occasion, she could see the shadowy outline of the spirit possessing Marco, as if it was struggling to wear him properly. Dark lines had appeared on the back of Marco's hands, and he was starting to limp.\n\nHe was nearly to the reflecting pool when Kisa made her move. She charged toward him and was only a few feet away when she felt that chill in her gut again.\n\nMarco turned around and pointed his wand, but Kisa slid beneath the blast that would have taken her head off. Up close, she jumped for his face, claws outstretched, and tackled him to the ground. She heard something clatter across the stone floor of the Labyrinth, and Marco shouted something in a language she didn't recognize. Her fur stood on end and she leapt off of him as his entire body was engulfed in green fire.\n\nStunned, she watched as he jumped into the reflecting pool and vanished. She moved to follow after him, but stopped when she spotted something out of the corner of her eye. It was the vial of black liquid, and she picked it up to see that the cork had come loose. The liquid crawled up the sides of the vial as if to escape, and she pressed the seal back into place, then put the vial on the ground. The vial was thick enough that it couldn't easily fall over, but she found a small rock to put on top of it just in case.\n\nMarco knew she was coming, and she was about to jump in the pool when she felt the cold spot in her gut return. It was a warning system, of that she was certain, but where had it come from? Kneeling down by the water, she closed her eyes and saw a very vivid image in her mind of Marco standing opposite of the coat closet by the door, his wand outstretched and waiting.\n\n\"Stupid fucker,\" she muttered. After a while, the cold spot faded, and she opened her eyes to contemplate the glistening pool in front of her. She knew she needed to jump in, to take the shortcut back to the house, but there was only one problem.\n\nShe hated the idea of getting wet. Shuddering with revulsion, she closed her eyes and jumped, fighting the impulse to turn around and scramble back to the safety of dry land. As the cool water wrapped around her, she panicked, hoping that Marco still wasn't waiting on the other side.\n\nWhen she spilled out into the living room, she got tangled up in a piece of furniture that was on the floor nearby, then tumbled forward and slid on the slippery floor before crashing into the wall. She tried to stand, but her feet kept slipping out from beneath her.\n\n\"Ah, yes. The cat. I remember you.\" Marco crouched down in front of her, his wand thrumming with power as he pushed it against her forehead.\n\nKisa whimpered, the ice in her veins making her hold perfectly still. She somehow knew without a doubt that any attempt to flee would end in her death, and she was trembling.\n\n\"You were her last ditch effort, did you know that? There was a time when Emily thought she could pull one over on me, to undo our bargain, and when I tried to make her kill you, it took everything in her power to shut you away instead. Well, her and that damn goblin.\"\n\n\"Tink?\" Kisa went still, satisfied to let Marco keep talking in the hopes that an opening would appear and she could run away.\n\nThe shadow frowned. \"That cunty little gremlin was always a problem. Manipulating her memories was always such a hassle, and if not for the fact that she kept the house running, I would have been rid of her years ago. But yes, she begged and pleaded with Emily not to hurt you, even offered to give her goggles back to spare your life. Emily took over just long enough to block me out and seal you away. What I didn't know was that she had sealed away the Grimoire as well. Tricky little bitch.\"\n\n\"What...why did Tink want to spare me?\" Kisa was curious, but noticed that Marco was relaxing his guard the longer he talked.\n\nMarco rolled his eyes. \"I'm not surprised you don't remember, Emily kept making you wear that damned collar until it scrambled your brains. You were best friends with the goblin. Unwanted and unloved by everyone, both of you desperate for Emily's affection, it was so pathetic...\" He frowned, and then dropped the Grimoire to pull the glowing necklace out of his pocket. It was flashing furiously, and he scowled at it.\n\n\"Yes, you're right, I do talk too much,\" he said. \"It's a bad habit I need to break is all. Hmm? Yes, I think that would be an excellent idea.\"\n\nWith his attention on the necklace, Kisa kicked the wand away and made a break for it. She was almost to the door when Marco tackled her from behind, and she was about to roll over to scratch his face when he slid something over her head and around her throat.\n\nShe tried to scream, but darkness closed in on her. The last thing she saw was a pair of intense blue eyes open in the darkness, followed by a woman's laughter.\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nDana had stripped enough of the coating off of the end of the wire for Quetzalli to hold onto, but definitely hadn't expected her to stick it in her mouth. The lights in the house dimmed as she sucked the current through her teeth, filling the air with electromagnetic energy. Nearby spirits were bedazzled with electrical sparks as they came into focus, then shrieked in pain as the magic of the house tore them apart in an effort to boot them out.\n\nShe pumped her fist in victory, but it was short lived. The smell of copper and ozone filled the air, and then the power went out completely. Standing in the darkness, she could just make out the eerie shadows that formed on the stairs below them.\n\n\"Up!\" Dana shouted, and Quetzalli followed. They ran into Mike's room and closed the door behind them. The room had been tossed, and Mike's bed had been flipped over on top of a large backpack. It was Tick Tock, and Dana picked up the mimic and strapped him to her back.\n\nThe door shuddered, and then a black mass formed and pushed through. There was just enough light from outside to see the menace on the spirits' faces, and when it reached for them, Quetzalli touched it. There was a loud zap, and the spirit backed away, color moving across its face. Instead of exploding like the others, it faded back through the door.\n\n\"I'm low on charge,\" said Quetzalli. \"There are too many. If we go to the fuse box, I can do it again, but I don't think I can make a big enough field for the house.\"\n\nThe door shook, and a pair of shadows pushed their way through.\n\n\"We can talk about it later,\" Dana said, then helped Quetzalli toward the window. She grabbed onto the dragon as the spirits tackled them, sending them spiraling out into the night sky. Dana held tightly to the dragon and got herself underneath in time to take the brunt of the fall with her legs.\n\nBoth of her legs snapped on impact, and she let out a grunt as she did her best to protect the dragon. Tick Tock unfolded several metallic legs like a spider, then lowered them to the ground. One of the spirits had followed them down to the ground and moved toward them. When it reached them, Quetzalli zapped it with lightning from her horn, which caused the spirit to come into focus.\n\nIt was an angry looking woman holding a frying pan. She had the look of a peasant, and the rags she wore had several holes in them. Her movements were jerky as she approached and raised her pan high, but Beth appeared behind her with a flowerpot, which she brought down on the spirits head.\n\nThe spirit exploded into shards of light and drifted out into the night.\n\n\"Holy shit,\" Beth muttered, dropping the remnants of her flower pot. Around them, the shadows were now keeping their distance. \"If we can charge them up out here, we can hurt them.\"\n\n\"Urk,\" replied Dana, trying to stand. Her legs weren't regenerating fast enough, and something was wrong in her chest. She coughed a few times and then took a deep breath. \"We need...a bigger charge.\"\n\n\"I'm not sure where we're going to get one,\" Beth said, then winced when Cerberus roared. \"It looks like you cleared the house a bit, but there are too many of them. We're outnumbered.\"\n\n\"Yeah, well...\" Dana picked up a piece of glass and chuckled. \"Tink is gonna be...pissed.\" She tossed the glass on the ground and dragged herself over to Naia's frozen fountain to pull herself up. The spirits still gave them a wide berth, and she shook her head. \"I think this may be it. The home is trashed and that douche Marco is going to take the Grimoire. Going to be a hard sell on...house sitting again.\"\n\nBeth's eyes shimmered in the blazing light of the Underworld. \"I can't believe it. It's like this was all planned. Do you think the shadow was working with the faerie queen?\"\n\n\"Does it...matter if he...what the hell?\" Dana caught some movement through the gateway and was surprised to see Lily shoot through the opening, closing her wings for long enough to fly beneath the arch, then extending them again to carry her the rest of the way up the hill. She landed gracefully on Naia's fountain, then brushed a significant amount of soot off her face.\n\n\"You guys throw one hell of a party.\" She picked Dana up by the collar of her shirt and planted a kiss on her. Cum, hot and delicious, flowed down Dana's throat, and she felt her legs stretch and pop as the joints and bones went back into place. When Lily broke the kiss, she set Dana down with a grin. \"Daddy is going to be so pissed.\"\n\n\"Lily, where have you been?\" Beth asked.\n\nShe smirked, held up a finger for silence, then waited. Everyone looked at each other in confusion, and then a loud roar startled them. It came from down the hill, and the spirit platoon milling around the gate turned around and readied their weapons.\n\n\"What was that?\" Dana asked.\n\n\"Help.\" They all looked down the hill in time to see a swarm of dark shapes descending on the phantom castle. Hundreds of angry demons of different shapes and sizes charged the walls of the castle wielding pitchforks, swords, and even a giant one with a whip of flames. There were yells of alarm, and the spirits who had been waiting by the gate seemed confused on which direction to go.\n\n\"Friends of yours?\" Beth asked.\n\n\"Demons don't do friends,\" declared the succubus. \"But any chance to raise a little hell, and they'll take it.\"\n\n\"Lily.\" Beth put her hand on Lily's shoulder. \"The Jabberwock has been possessed. We need Cerberus to help us fight it.\"\n\nLily frowned. \"Hmm. Cerberus might be able to come on this side of the gate, but not very far. The demons can't come through at all, but that's for the best. The only reason they're here is that I expected the shadow to pull something, but the sheer numbers of spirits he brought...\" She shook her head. \"I'll see what I can do about the Jabberwock. But all these damn ghosts? Not sure how to handle that. I may have shifted the tide, but the storm still rages on.\"\n\nStorm. Dana looked at Quetzalli, then down the hill at where the spirits were building up. If she could secure the necessary power, she could power up the spirits down there as well, which might allow them to be attacked. So many thoughts were going through her head right now, and she commanded them to slow down and give her a moment to process. It didn't help that Mike's semen now sat in her belly like a hot coal, and she was suddenly very aware of how attractive all three of the women with her were.",
        "She shook her head and closed her eyes, replaying her memories from the last couple of weeks in fast forward. There was something about a storm, something Quetzalli had said. She could picture them now, standing on the edge of the cliff, the drones in the air. The breeze had caught a tuft of the dragon's hair and pulled it away from her face, and she was staring at a distant thundercloud forming on the horizon.\n\n\"They don't like to share their skies, you know?\" Quetzalli had said. \"They can be very territorial.\"\n\n\"Quetzalli!\" Dana grabbed the dragon by the shoulders, startling her. \"What controls the weather in the greenhouse?\"\n\n\"Hmm? Oh, it's very fascinating. The water cycle\u2014\"\n\n\"No, not the water cycle.\" Dana thought back to all the drone crashes, the issues with fluctuating EM fields. This whole time, she had thought it was a manifestation related to the fact that the greenhouse defied the laws of physics, but what if the actual problem wasn't a magical phenomenon, but a living one? \"What lives in the skies of the greenhouse and makes the thunder clouds?\"\n\nQuetzalli's features scrunched up. \"Technically, it doesn't make the clouds, they do occur naturally, you know, but it will whip some up to stay hidden. It goes by many names depending on culture, but I believe that you would just call it a thunderbird.\"\n\n\"A thunderbird? As in lightning and thunder?\"\n\nQuetzalli rolled her eyes. \"Obviously, thunder is just a by product of lightning, therefore\u2014\"\n\nDana ran toward the garage, leaving everyone behind. Once inside, she saw that the whole place had been ransacked like everywhere else, and when she got down to her bedroom, she groaned. The room itself had been torn apart, but below her workbench, she saw the protective case that held the drones was still in place. She pulled it out, then noticed some shadows from the corner of her eyes. Without looking inside, she raced back upstairs, the fire in her body now raging out of control.\n\n\"-and technically, ball lightning is it's own event, so\u2014\" Quetzalli was cut off again as Dana grabbed her by the hand and pulled her onto her feet.\n\n\"I think we've got a power source,\" Dana said. \"I'll take care of the spirits, but it'll take some time. Once we're out of here, the...the spirits will come for you again.\" It was now getting hard to concentrate.\n\n\"Oh, don't worry about the spirits,\" Lily said. \"I can handle them. I eat souls, remember?\"\n\nDana nodded, then left Lily and Beth behind. As they ran toward the greenhouse, spirits tried to block them, but Quetzalli moved ahead and zapped a few. In her freshly fed state, Dana easily tore through them, letting a cry of rage that sent the ghosts running. Though they were ethereal in nature, they had still been regular men and women once, and she assumed were still prone to fear.\n\nOnce inside the greenhouse, Dana let out a few ragged breaths as she opened the case with the drones inside. There were four of them, and she pulled out their manual controls and frowned. She didn't have time for a pre-programmed flight path, and definitely didn't want Quetzalli to touch the controls for fear of shorting them out.\n\n\"Fuck it,\" she muttered, then thought about how the controls worked. The drones could do a pre-programmed flight, but when controlled manually, would try to return to the controller if they started to go out of range. With a flash of inspiration, she looked around on the ground and found a stick she could wedge into the joystick. After flying the first drone up about twenty feet, she flew it out over the jungle, then wedged the control stick in place. The drone drifted away from them, then shuddered when it reached the edge of its range and tried to return. Once it regained its connection, it turned around and tried to fly away again.\n\nSatisfied that her plan worked, she repeated the process with the other three drones, then fell to her knees, gasping for air. The whole world felt hot, and she took a few deep breaths, trying to regain control.\n\n\"I imagine they won't appreciate that,\" Quetzalli muttered, her eyes looking out over the darkness. Moonlight streamed through her silver hair, making her look like an angel surrounded by a holy aura. \"I thought you knew about the thunderbirds.\"\n\nDana slid her arms around Quetzalli's waist, then moved her hands up to cup the dragon's breasts. \"I know this isn't the time or place for this,\" she said, her hands squeezing the soft, fleshy mounds beneath her fingers. \"But maybe if we hurry...\"\n\nQuetzalli chuckled. \"Everything feels so exciting right now. I bet we have a few minutes before it gets here.\" She turned and kissed Dana, sending a jolt through her body. \"Besides, I could use a bit of a charge myself.\"\n\nDana groaned, then melted into Quetzalli's arms, allowing her hands to roam down the dragon's back and across her buttocks. They fell to the ground together and became a tangle of arms and legs as the drones buzzed in the distance. Dazzling streamers of electricity created an aura around Quetzalli's horn that illuminated the ground around them, and Dana lost herself in the dragon's flesh.\n\nThe frenzied race for an orgasm was interrupted only once by the distant rumbling of thunder.\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\n\"Do you really think she knows what she's doing?\" Beth asked Lily as the spirits closed in.\n\n\"I absolutely do.\" She winked, then grabbed Beth by her arms and flew them up to the roof. She landed on the undamaged turret and let Beth go. \"But I told a bit of a fib. Yes, I do eat souls, but it requires sex. Can't bone a spirit.\"\n\n\"Mike would say that's because you aren't trying hard enough.\"\n\nLily laughed. \"You'd think so, but Romeo has more style than that. I can't keep those spirits off your back, so remind me what we need to do so I can do it.\"\n\nBeth pointed at the gate to the Underworld. \"I think Cerberus can take out the Jabberwock, but it's just Yuki and Abella taking it on.\" As if on cue, the Jabberwock was laid out over the roof again, and it scrambled back toward the front yard, its claws shredding the roof. Metal beams were being exposed now, and Beth was fairly certain she could see into somebody's bedroom. \"I was hoping we could get Sulyvahn to help Cerberus escape, but he's trapped out front. He's the only one who can hurt the spirits.\"\n\n\"Well, fuck me sideways, then. Guess it's time to improvise.\" Lily popped her knuckles and then launched herself into the fray. At first, Beth thought Lily was going to attack the Jabberwock, but she instead flew to Yuki first and shouted something that Beth couldn't hear. The kitsune nodded, then summoned ice all along the roof that clamped down on the Jabberwock, pinning it in place.\n\nPuzzled at this development, Beth's confusion deepened when Lily moved next to Abella, gesticulating wildly and then pointing at her tail. Abella's features changed from anger to shock, then embarrassment. Her cheeks were dark as she bent over and pulled her heavy tail to the side.\n\nLily's tail entered Abella's pussy, then pumped in and out for a few moments before withdrawing. Beth slid against the turret until she was sitting, then pinched herself to make sure that she wasn't dreaming. What on earth was Lily up to?\n\nLily blew the gargoyle a kiss, and then leapt into the sky, now headed for Beth.\n\nAbella let out a warcry, and when she charged the Jabberwock this time, her dark eyes glittered with light as she slammed into the beast hard enough to break the ice trapping it apart. She wrapped her tail around the Jabberwock's throat like a hook and yanked hard enough that the beast toppled over and was dragged across the roof, tearing away shingles to reveal bare wood beneath. They fell together into the back garden, and the Jabberwock landed on its back, smashing into the flowerpots that had been set around Naia's fountain and shattering the ice that clogged it.\n\nAbella soared away, and the Jabberwock scrambled to its feet. It let out a hiss and was almost out of the fountain when a blast of water knocked it off its feet. Three powerful jets of water sprayed from the fountain, slicing through its thick hide, and Naia rose up from the fountain, riding a surge of water. The runes on her torso glowed so brightly that they could be seen through her dress, and when the Jabberwock swiped at her, she burst into a spray of liquid, only to reform behind it.\n\nSpirits were bailing out of the Jabberwock and sucking energy out of the water, but they were being crushed by the combatants when they fully manifested, sending spirit shards all across the yard. Yuki joined in, raining ice down on the Jabberwock, and Abella reappeared, hurtling toward the back gate like a meteor.\n\n\"It's about to get messy,\" Lily said when she landed by Beth's side.\n\nThere was a roar from inside the gate, and as the Jabberwock broke free of the ice again, Abella tumbled through the gate clutching a diminutive figure in her arms. When they stood, Beth watched in awe as a series of dark chains materialized around the newcomer's necks, linking them back to the Underworld.\n\nCerberus transformed back into a three-headed dog and howled as it tore its way through the standing army in the yard, determined to get to the Jabberwock. The chains around Cerberus tightened and tried to retract, but the devil dog had too much momentum. \n\nThe Jabberwock saw Cerberus coming and tried to scramble away, but three giant sets of jaws clamped down on it, and Cerberus allowed the chains to do most of the work, pulling them free. The two heads on the side maintained their hold on the Jabberwock, and the third head opened its drooling maw to reveal an endless tunnel filled with blazing fire that scorched its way through the beast.\n\nSouls fled the Jabberwock in various states, some of them burning like candles and melting into the lawn with silent screams. Cerberus had no trouble ripping the Jabberwock to shreds, and Abella landed next to Beth with a heavy thud.\n\n\"Now that is a good dog,\" Abella noted.\n\nYuki joined them, her tails shimmering with a magical aura as she climbed onto the turret. The quartet watched as cerberus turned the Jabberwock to ash and then turned their attention on the army of souls.\n\n\"They had her bottle-necked inside, she was trying to get here this whole time,\" Lily told them.\n\n\"Sorry about your Jabberwock,\" Beth told Yuki.\n\nYuki shook her head. \"This is what I get for turning its brain off while I was out with Tink. It's almost like we were played, and that all of this was planned for.\"\n\n\"That's because it was. The shadow did all of this, he's been watching us for weeks. He knew what he was doing.\"\n\nYuki's eyes flashed, and she turned her attention to the castle in the distance. \"Well maybe it's time we took the fight to him.\"\n\nBeth looked at the castle. It was still being bombarded by the demons Lily had brought. \"It looks like they've got it under control.\"\n\n\"You know...\" Lily looked deep in thought, and a mischievous grin broke across her face. \"I bet if we got in there, we could rescue that piece of Emily he has.\"\n\nYuki gasped, and the roof went silent. The only sounds now were Cerberus tearing through some spirits and Naia hosing away the Jabberwock's remains with massive spurts of water.\n\n\"I think that's a terrible idea,\" Beth said as she looked over at Yuki. The kitsune's eyes were shimmering now, her mouth open as if she couldn't get enough air.\n\n\"Is it, though? I could take the fox with me, we could be in and out in an hour. The demons won't mess with her if we're together, and we promise to come right back.\" Lily held a hand up as if taking an oath.\n\n\"I'm going, with or without Lily.\" Yuki now stood on the edge of the roof, shuffling through the tarot cards in her hand. \"That bastard ruined my life, and I would love to dish out some payback.\"\n\n\"Besides,\" Lily added. \"If we don't do it, you know Romeo is going to dedicate his entire life to it. We've turned the tide here, and we may never get a better chance. It's a phantom castle that floats around in the Underworld, and this is the only time we know for a fact that the shadow isn't home.\"\n\nBeth let out the breath she didn't know she had been holding. There were so many things going on that all she wanted to do was gather everyone up and watch over them until Mike returned. But Lily had a point. If Yuki went by herself, she had no doubts that nothing but trouble would come of the decision.\n\n\"In and out,\" she told them. \"I'll keep Abella with me in case I need help of my own, but the two of you need to make it quick. We all know this was coordinated, but to what end? Everything that has happened has been a diversion, so he may have realized the two of you are going in there.\"\n\nLily frowned, then looked at the castle. \"Shit, now I think it's a terrible idea.\"\n\n\"I don't.\" Yuki had tucked away the cards and was on the edge of the roof. \"He didn't expect the demons, nobody could have. You're completely unpredictable, which makes me think that he wasn't planning on losing his home. That piece of shit took the love of my life and twisted her into a gnarled, ugly thing that killed herself to protect me. So even if this is suicide, I owe it to her to try.\"\n\nLily shrugged, then looked at Beth. \"She's got a point. Catch you on the flip side.\"\n\nHer wings extended and she took to the sky, then swung back down to grab Yuki by the arms and flew toward the gateway. When they passed through it, the color vanished from their bodies as the veil between their world and the Underworld shimmered momentarily.\n\n\"What now?\" Abella asked.\n\n\"With the Jabberwock gone, we should probably try to help Sulyvahn,\" Beth said. \"If the shadow is taking something from the house, it makes sense that he's leaving through the front. Cerberus alone would be tough to get by, but the fact that his castle is being attacked by demons should give him pause.\"\n\n\"Are you thinking an ambush?\" Abella grinned, then flexed her claws in excitement. \"Because I would be more than happy to tear his cute little head off.\"\n\nBeth nodded. \"I absolutely am, but first things first. Can you get me down from here?\"\n\nThe gargoyle laughed, then grabbed Beth by the hands and leapt into the sky, her wings spread wide as they glided down to the front yard. Suly was spinning his own head in a circle, creating a keening sound that set Beth's nerves on edge and apparently did something similar to the spirits around him. He cracked his whip and tore apart a spirit that tried to stab him with a spear, then smashed his own head into the chest of a barbarian with a giant ax.\n\nAbella landed nearby, and Sulyvahn paused for a moment to look at her, his head dangling from one hand.\n\n\"Glad to see ye safe, lass,\" he told her. \"Mind the whip, it'll steal the breath right out o' ye if ye come too close.\"\n\n\"Whoa, okay.\" She moved back and was relieved when the spirits didn't seem to notice her. Sulyvahn was clearly their target, so she had Abella move to a higher level to keep an eye on the yard. She took her own position along the outer wall, crouching low and pulling her cape around her arms and head to help blend in with the night.\n\nShe wasn't sure how long she waited, but she was holding her breath when a dark figure appeared in the door of the home. When Marco stepped out, he had the wand clutched in one hand and the book in the other.\n\nWalking right in front of him was Kisa. She had both arms raised in the air as if she was his prisoner, but Beth noticed right away that her eyes were now a crystalline blue. Kisa wore a smirk on her face.\n\n\"If anybody tries to stop us,\" he began.\n\n\"The cat dies,\" Kisa finished, in a voice that wasn't her own. The pendant around her neck flashed ominously.\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nWhen everything goes to hell, try to bring the whole family with you!\n\nI hope you enjoyed this chapter, there's a lot of excitement going on, but we are officially in the finale for book four! I am very excited to bring the next couple of chapters to you, and even more excited to begin a new story arc, cause I just have too many ideas in my head and not enough time to hammer them out.\n\nAs for the necklace, I'm sure some of you have figured it out, but others may be confused. It is indeed the same necklace dropped by the witch Sarah (once upon a time) and then later dropped by Mike in the icy depths of the Labyrinth. I've been leaving bread crumbs about this for a couple of years now, so have fun finding them all! \n\nDon't forget to leave a rating and check my bio for the release schedule, cause I've been working really hard to stick to that. Also, thank you so much to a couple of you who sent me some really inspiring words in the last couple of weeks, cause times are tough (for lots of us) and I definitely needed to hear them. I hope that the rest of this month brings you great joy, and make sure to be kind to one another and also yourselves.\n\nSee you next time!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "erotica with a massive plot",
        "faerie queen is a bitch",
        "gargoyle jabberwock beatdown",
        "magic semen steroids",
        "shocking developments",
        "we did the monster mash",
        "monstergirl harem",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-58"
}