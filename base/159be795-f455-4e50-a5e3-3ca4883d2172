{
    "title": "Big Dick Diplomacy Ch. 14",
    "pages": [
        "Big Dick Diplomacy -- Chapter 14\n\n*****\n\nThe festivities for election night almost didn't get off the ground.\n\nAbout as soon as Tom arrived at the penthouse suite of the hotel, he was grabbed by his campaign manager, Matt Jenkins, and brought into a separate part of the suite that had been set up as a miniature situation room. There were three live news feeds in the room itself, but most notably, it was dominated by a large interactive map of the country that was set up on a big screen monitor.\n\nIt was a map that would become famous every four years. Each state had their number of electoral votes listed and they were split into one of three different colors\u2014blue for Tom, red for Norwood, and gray for too early to call.\n\nAnd so far, there was still a lot of gray left on the map, especially for some of the bigger states.\n\n\"Are you sure this is a cause for alarm?\" asked Tom as he and Aubrey followed Matt to the screen. Tom pointed at several large states like Texas and Pennsylvania. \"If these are too early to call, surely we have a few paths to victory?\"\n\nMatt shook his head. \"It's not looking good, Tom. Our people on the ground in the major battleground states are reporting heavy turnout for Norwood. Specifically, we need to target only three states to make sure this is locked in the bag.\"\n\nWith those words, Matt used his finger to circle Texas, Ohio, and Pennsylvania.\n\n\"Just those three?\" asked Aubrey incredulously. \"You can predict the results of this race just from those three states?\"\n\nMatt nodded. \"It's not that hard really. So we know that the winner tonight will have to get at least 270 electoral votes to win. We also know that several states have clear favorites with which candidate they prefer. For example, Georgia is clear Norwood territory while Iowa has Tom as a twenty-point favorite. With those being known, it's not hard to fill out the map with which states are likely going to vote for each candidate.\"\n\nHe gestured to the map where states were already marked in red or blue. Tom noticed that of all the undecided states, Texas, Pennsylvania, and Ohio were the ones with the largest electoral count.\n\n\"So these three will decide the election,\" said Tom. \"They have the highest vote totals to sway it to me or to Norwood. It explains why we spent so much time campaigning there over the past months as well.\"\n\n\"Correct, Tom, but here's the rub. Norwood is leading in most states which means you need all three of them to take victory tonight. In states as large and as diverse as these, that's going to be challenging enough. Plus, all of them are toss-ups. The campaign workers in each state are reporting that there's no clear favorite yet. Things might have been easier this year since Florida typically goes to our party but with it being Norwood's home state, we think it'll go for him.\"\n\n\"And I didn't win all three states in the last election either,\" said Tom as his gaze focused on Texas. In the last campaign, Texas voted for the other guy by a healthy majority. \n\nMatt seemed to read his thoughts. \"I'm most worried about Texas. Local polls show that Norwood has a five-point spread on you. If you lose even just Texas, the campaign is done. He gets to 270 before you.\"\n\n\"Is there anything more we can do tonight?\" asked Aubrey. \"Do we have any options left on the table?\"\n\nMatt shook his head. \"Not anymore. Most Americans have already voted and it's just about tallying up the results. All we can truly do right now is wait for each state to be called.\" Matt's eyes drifted to Tom. \"I just don't know if we have enough states to make this work. And if one state from your camp doesn't go the way we predicted, it could even make the big three states not enough.\"\n\n\"So even with Texas, Ohio, Pennsylvania\u2014the big three\u2014we only have a razor thin margin to get above 270,\" said Tom.\n\nMatt nodded. \"That's right. At my calculations right now, if you win all three, you'll come in at 280 votes, ten more than what's needed. That's assuming you get all the states leaning in your favor right now as well but losing even one of those will bring you down substantially. And Texas is the biggest wildcard. I just don't know, Tom. I don't know if we can pull off all three.\"\n\nTom couldn't help but turn away from the board as he felt his spirits begin to flag. He trusted Matt's judgment implicitly, knowing that the man had run many campaigns before his. If Matt didn't believe he had a path to victory, then it was all but a sure thing they would face disappointment tonight. \n\nAll of it did nothing to dampen the growing feeling in his stomach that his time was numbered.\n\n\"Come on,\" whispered Aubrey in his ear. \"No reason to throw in the towel just yet. We have the whole night ahead of us.\"\n\nTom nodded and followed her back to the main room where more coverage was coming in of long lines still at some of the polls as well as shots of various voters talking about which candidate they were supporting. It was still early on in the evening, and thankfully enough, even the major networks still weren't calling a likely victor.\n\nJust as Tom was settling in for the long haul, he was interrupted by one of the campaign workers to let him know he had a phone call.\n\n\"A call right now?\" he asked incredulously. \"Who's on the line?\"\n\nThe worker looked like a deer in headlights. \"It's Governor Norwood, sir.\"\n\nTom shot a wary look at Aubrey before he immediately stood up and followed the worker to a more private office space. She handed him the phone only to hear some degree of celebration in the background already.\n\n\"Tom here.\"\n\n\"Well, good evening, Mr. President,\" said Norwood in a very joyous tone. \"I trust you're enjoying election night to the fullest?\"\n\nTom rolled his eyes. \"I'll enjoy it much more when you call me to concede later tonight.\"\n\nNorwood snorted. \"Fat chance of that. I think I'll be the one taking that call from you in just a short amount of time.\"\n\n\"Is that why you called? Are you looking to get one final taunt in before the election is called?\"\n\n\"Heavens no,\" replied Norwood with a small chuckle. \"I just wanted to have a little chat before we got later into the night.\"\n\nTom pursed his lips. \"Well, I'm here now. So chat.\"\n\n\"So testy, aren't you? What's the problem, Tom? Don't think you have a path to victory tonight, do you?\"\n\n\"My path is just fine,\" replied Tom. \"This race is much closer than the polls would indicate from even just a week ago.\"\n\n\"Yes, surprisingly you're right,\" conceded Norwood. \"I never would have thought you'd be hanging on this close after all this time. I mean after the whole Danielle Houston incident and everything.\"\n\n\"Someday you'll have to tell me what it took to get Elias to release that picture,\" said Tom. \"I wonder what his price was to betray his own party and his wife too.\"\n\n\"Oh, Tom, don't be naive,\" said Norwood with a sneer. \"Elias was paid extremely well in exchange for the entire world finding out just what a slut he married. It really is a shame for them. They'll be disgraced forever but at least their sacrifice will get you out of office.\"\n\n\"So you think,\" countered Tom. \"My team's disaster control of the incident had nice results. After all, the election hasn't been called yet.\"\n\n\"Yet,\" stressed Norwood. \"And your little stunt on the television the other day was reprehensible. Using the presidency as your public confessional, it's a disgrace. I took so many calls from upset Americans\u2014righteous folk that believe you're the devil incarnate.\"\n\n\"Thankfully for me, those people were never going to vote for me in the first place,\" countered Tom. \"It's a good thing they have such a boy scout like you to line up behind. At least a pretend boy scout. Isn't that right, Norwood?\"\n\nNorwood scoffed. \"Say what you want but I know the true ways of political power in this country. If my base needs to think I'm a damn martyr, let them. They'll still line up to vote in droves while I fuck them from behind anyway. That's how politics really works, Tom. You say one thing to get votes and then you do what you wanted to do anyway.\"\n\n\"What a visionary you are,\" quipped Tom. \"You don't think that just maybe it might pay off to keep your promises to your constituents?\"\n\nNorwood laughed harder than he should have. \"I don't know how you've been president for the last four years and still believe that. Have you truly learned nothing from your time in Washington?\"\n\n\"I suppose I haven't,\" said Tom as he switched the receiver to the other ear. \"Is this all you wanted to talk about or was there some purpose to this call?\"\n\n\"Well, if you're going to be like that, I guess we can end it,\" said Norwood. \"However, I think you should watch the results coming in the next half hour very closely.\"\n\n\"Which results?\"\n\n\"Oh, just the ones from Ohio.\"\n\nTom caught his breath. \"What about Ohio?\"\n\nNorwood chuckled. \"Don't play stupid, Tom. I know as well as you do that you need Ohio to win. I've also engineered a few more tricks of my own to make sure that Ohio is called for Team Norwood.\"\n\n\"What tricks?\" demanded Tom.\n\nNorwood let out a subtle tsk-tsk. \"Do you really think I'd admit that over the phone? Come on, Tom, I'm not an amateur. Let's just say the state that you had the best chance of winning is now for sure going to go for me. The other big states are too close to call but without Ohio, you can't win. With it, your entire chance tonight will go down the drain.\"\n\n\"Is that what you need to resort to?\" asked Tom. \"Did you need to cheat to beat me?\"\n\nNorwood laughed again. \"You really are naive, aren't you? Just keep watching Ohio. I'll be expecting a call from you to concede at any time tonight. Au revoir, Tom!\"\n\nThe line went dead shortly after. Tom fought the urge to throw the phone. What was Norwood up to in Ohio? How could he be cheating? After all, he made it sound like a sure thing. Only cheating could deliver a sure thing, right?\n\nTom was numb as he left the room and rejoined Aubrey a short while later. He gave her a rundown of the call which only served to dampen her spirits as well. Their eyes remained glued to the election coverage, waiting for the next round of states that would come at the top of the hour.\n\nBefore that could happen though, they had a visitor arrive at headquarters.\n\nTom felt a pair of feminine hands wrap around his head from behind, blocking off his vision. Then he felt a sultry voice in his ear. \"Guess who.\"\n\nEven if he hadn't felt those hands on his cock so many times before, he still wouldn't have had any trouble guessing who it was based on voice alone.\n\n\"I'm going to guess my favorite senator from Maryland,\" replied Tom with his eyes still covered.\n\nThe voice let out a soft laugh as his vision was soon restored. Victoria looked incredible tonight. Her long dark hair cascaded down her shoulders, styled in curls in the manner he preferred. She was wearing a dark blue dress that showed off plenty of cleavage and ended just above her knees. One thing was for certain\u2014it wasn't a dress that she would be seen in on the senate floor.\n\nShe noticed his eyes on her dress and grabbed it by the hem. \"I wore blue tonight in my support for you. I figured you'd appreciate this one the most.\"\n\nTom chuckled. \"A good guess on your part. You look amazing as usual.\"\n\nShe smiled and gave him a proper hug before her eyes settled on Aubrey. \"And you must be the famous Aubrey Hopkins that I keep hearing about.\"\n\nAubrey smiled politely despite the obvious flirtation. \"And you're someone that needs no introduction either, Senator. Thank you for coming tonight.\"\n\nThe two women were content to size each other up for a few moments before engaging in a tentative embrace. It was a move that Tom recognized before. He'd seen it the first time that Aubrey met Chelsea as well\u2014the subtle appraisal as his current lover looked over his former. \n\nThankfully, there seemed to be no feelings of jealousy or disappointment, and both women soon turned their attention back to him.\n\n\"How are things going so far?\" asked Victoria as she settled in next to him. \"You have a tough path tonight, don't you?\"\n\n\"To say the least,\" grumbled Tom. \"I have Matt on one hand telling me that the math just won't work out tonight, and then I have Norwood on the other hand calling to give playground taunts. I have a feeling it's going to be a long night.\"\n\nVictoria rolled her eyes at the mention of Norwood. \"I really do hate that self-righteous prick. He's more than willing to engage in mudslinging when it suits him but he sticks his nose in the air when it's anyone else like he's too good for it. I can't stand that man.\"\n\n\"That makes two of us,\" remarked Tom as he pointed to the map. \"But it looks like he has half the country fooled.\"\n\n\"Well, he won't have my home state fooled,\" said Victoria as a small smile grew on her face. \"I just took a call a minute before I walked in here. My team in Maryland says that the state has been called for you and it should show on the news here shortly.\"\n\nTom couldn't help himself. He embraced the brunette senator with an appreciative grin on his face. \"That's welcome news indeed. Their votes are much needed.\"\n\n\"It's the least I could do,\" replied Victoria. \"And hopefully soon, we'll have the next round of results!\"\n\nThey didn't have to wait much longer for those results which started to spill in at the top of the hour. Tom turned the volume up on the television as the entire headquarters listened quietly.\n\n\"We have lots of calls coming in right now and Election HQ is ready to call a few more states,\" said the news announcer as the screen panned to the same map that was in the Situation Room. \"Sources tell us that President Radford will be the big winner tonight in Maryland, Virginia, and Michigan, and we'll add those totals to the big board now. We can also call Illinois, Indiana, Georgia, and New York for Governor Norwood. My sources tell me that Ohio is ready to be called as well!\"\n\n\"This should do it,\" said Tom as he scooted to the edge of his chair. \"We need Ohio desperately if we're to win tonight.\"\n\nAubrey reached over to grab his hand. \"Have hope, babe. We'll get it.\"\n\nHope was just a little too hard to come by right now, especially with Norwood's earlier taunts.\n\nSure enough, the news from Ohio was as expected.\n\n\"And the biggest prize of the night so far is the great state of Ohio,\" said the news announcer as he pressed a button on the screen in front of him. The state became illuminated in the color red. \"We can now project with a safe margin that Ohio will go for Governor Norwood, a surprising upset from a state that has trended in the Radford camp for most of the polls.\"\n\nTom felt his shoulders slump forward as he stared at the red Ohio. One of the three states he couldn't lose was now lost. The news now shifted to a panel of commentators who were talking about what an upset this was for Norwood, especially as several urban precincts had higher turnout than expected.\n\nEnthusiasm at the penthouse suite dampened as well. Tom felt the chatter amongst the campaign workers come to a noticeable nadir while Aubrey put her hand against his back and started to rub it tenderly.\n\n\"It's not over yet,\" she whispered in his ear. \"The night is still young. Things could change.\"\n\nTom wanted to believe her, but a strategy chat with Matt ten minutes later left few options on the table.\n\n\"You have to get another decent sized state to flip,\" said Matt as he pointed at the screen. \"Colorado would do it but it's trending Norwood pretty heavily. Same with Washington. Even if most of the undecided states still left on the board declared for you, you still don't have enough to get to 270.\"\n\nTom couldn't help but sigh. \"We just have to pray for a small miracle then. Perhaps the polls were wrong in one of the bigger states.\"\n\nMatt shrugged. \"Crazier things have happened, I guess.\"\n\nIt wasn't hard to tell he wasn't going to put much faith in it.\n\nWhen Tom emerged in the main room again, there was yet another visitor. Chelsea's arrival had stirred some smiles but it was still a muted crowd that greeted his press secretary.\n\nShe gave him a warm embrace but pulled back to look in his eyes. \"I heard about Ohio, Tom. I'm sorry.\"\n\n\"Yeah, I think it's made the party here a little less festive,\" said Tom sadly. \"But thank you for coming tonight. We knew it would be a long shot but it was worth the fight.\"\n\n\"You make it sound like your mind is already made up,\" she said as a pout formed on her face. \"They still need to call at least twenty more states.\"\n\n\"I've just been going over the math with Matt. Without Ohio, the campaign is screwed. I don't think we have many options left on the table.\"\n\nChelsea bit her lip. \"Don't do anything rash just yet. Hang in there, Tom. Who knows what might still happen?\"\n\nTom nodded and watched as she joined the other women on the couch. Chelsea knew Victoria well from all the time the senator spent at the White House, and the two women embraced in a big hug. Surprisingly enough, Chelsea then repeated the same gesture, with an innocent kiss added, to Aubrey. Tom couldn't help but smile when he witnessed it, remembering their shared intimacy from a week ago in his office. \n\nIn fact, seeing the three of them together already inflamed his passions. For a brief moment, Tom let himself drift off while he imagined a foursome with Chelsea, Victoria, and Aubrey. He had no doubt that they'd wear him out completely but what fun it would be in the process! It was a welcome distraction to the current night, and he had no doubt that by the look in Aubrey's eyes right now, she'd probably consider it.\n\n\"What are you thinking about?\" she asked him slyly when he sat down. Her voice was low but there was a hint of an edge to her tone that let him know his daydream may not have been so private after all.\n\nUltimately, Tom decided that honesty was the best policy.\n\n\"I was just imagining a repeat of last week,\" he said candidly. \"Perhaps with one more person.\"\n\nAubrey couldn't help but grin. \"I thought you were going to say that. Your eyes were wandering a bit too much so it wasn't hard to tell what was on your mind.\"\n\n\"Can you blame me?\" asked Tom. \"Look at all of you. I don't think I've seen more attractive women in my entire life.\"\n\nShe purred softly and nuzzled against him. \"Sweet talking will get you everywhere.\"\n\n\"Does that mean you'll consider it?\"\n\nShe shrugged. \"Perhaps. After all, last week was a lot of fun, wasn't it?\"\n\nTom couldn't help but grin. \"I remember a certain blonde enjoyed getting her pussy licked by a fiery redhead.\"\n\nAubrey turned red in the face. \"Keep your voice down!\" she said while giggling. \"But yes, that was nice. You might be able to talk me into it again.\"\n\nTom hugged her closer. \"Good to know!\"\n\nTogether, they continued to watch the ongoing coverage. Just about every network now had figured out what Matt had known earlier\u2014Tom's path to victory was increasingly difficult. Many of them were now talking about what a Norwood presidency would look like or the possibility of Tom going back to radio now that his presidency was all but over.\n\n\"Maybe they're right after all,\" said Tom. \"Maybe I will be going back to radio when this is all over. It might even be sooner than I think.\"\n\nAubrey blinked a few times. \"If that's what you really want to do, then I'll support you. You were good when you were on the radio.\"\n\nTom couldn't help but laugh at that response. \"You're really trying to make the best of this situation, aren't you?\"\n\nShe smiled. \"Of course. I want to keep your spirits up. And let you know that whatever happens, I'll be there for you.\"\n\n\"Even when I'm a normal citizen again?\" asked Tom. \"You'll still be with me when I'm not the President?\"\n\nShe gave him a sharp look. \"Of course I will, silly. You don't really think I'm just with you because of your job, do you?\"",
        "Tom didn't say anything in response which caused her to give him a shocked look while she poked his stomach.\n\n\"Don't you even dare, Tom Radford,\" she said sternly as she touched his chest. \"I've told you before I couldn't care less what job you have. I love you for who you are in here, not because you're in politics.\"\n\n\"Being president is a little higher than just being in politics,\" he said with a chuckle.\n\n\"Even still,\" she said smugly. \"You're mine no matter who you are. This was never about your status and you know that. I don't care where we go after this. White House or not, we go together. And if you don't like that, tough!\"\n\nAnother laugh tumbled out. Tom tried to picture anyone that wouldn't want to be with Aubrey. He stopped trying after a minute when he couldn't picture anyone who wouldn't want to be with someone so beautiful, sweet, and loyal. She really was perfect for him in just about every way, and for another moment, he thought about what he would do after the election. \n\nOf course, she would come with him wherever he went but he was thinking a lot more long-term. He wanted permanence with Aubrey. He'd much rather have that permanence in the White House than outside it, but he would take permanence with her over anything else.\n\nAubrey had turned her attention back to the television. As Tom thought of all the ways she was a perfect fit for him, he nuzzled in closer to her ear and kissed it softly. \n\n\"I love you,\" he whispered to her. \"And I want a future with you too.\"\n\nShe turned to face him suddenly and once again, her cheeks turned rosy red. She kissed him more passionately and whispered back to him, \"I love you too, Tom.\"\n\nSuddenly, all the turmoil and heartbreak of the night didn't seem so bad in comparison. Would it really be so bad to have to leave the White House if Aubrey was still by his side? Sure, there would be some level of humiliation but it wasn't something he couldn't recover from. \n\nAfter all, was she not the bigger prize? The one that finally quelled his loneliness?\n\nIt was those thoughts that occupied his mind as the next round of states was called. This round contained no surprises. Norwood picked up Louisiana and Missouri while Tom picked up Tennessee and one of the other big prizes of the night, Pennsylvania.\n\nThere was a degree of excitement as the Pennsylvania news was announced but even their twenty electoral votes still kept him well short of 270. \n\nHe needed Texas and one more state to flip to get there. But what was left on the board was just about all spoken for. The western states were mostly all divvied up but their electoral counts were too few to rely on. California hadn't been called yet but it was solidly Radford territory so it really wasn't on the board, and their votes were already included in his tentative tally.\n\nEven by the early reports out of Texas, it was still much too close to call. He needed one more state. Just one more that wouldn't break for Norwood. \n\nWas that really too much to ask for?\n\n\"Tom! Tom, get over here quick!\"\n\nTom was snapped from his reverie by the sound of Matt's voice. He was gesturing furiously for Tom to join him in the Situation Room. He attracted enough attention that the girls decided to come as well, and together all four of them crowded in the room with Matt.\n\nThe campaign manager looked like a kid on Christmas morning. His earlier sullen demeanor had all but disappeared. Now, he was practically jumping up and down and pointing to the map.\n\n\"Wisconsin!\" he said proudly, as if that one word would explain all his excitement.\n\nTom blinked. \"What about Wisconsin?\"\n\n\"I just got the call from the people on the ground,\" said Matt excitedly. \"It's going for us! It flipped! It's been trending Norwood for the entire campaign and it's going to flip! They are going to call it any minute but at least ninety percent of the vote is in and you're up by seven points, Tom!\"\n\nMatt pressed a button on the interactive screen, and sure enough, his words were confirmed with just about every precinct having sent the results in. Tom's eyes went back and forth between Wisconsin and Ohio.\n\n\"What does this do for us?\" asked Tom. \"Are we back in play? Does this replace Ohio?\"\n\nMatt was so happy that he practically laughed. \"It sure does. It's narrow as shit but it still replaces it. We lose eight electoral votes with Wisconsin instead of Ohio, but all we expected was to get to 280 at the very best. This puts us instead at 272!\"\n\n\"272 is still winning no matter which way you cut it,\" added Victoria. \"All you need is Texas at this point.\"\n\n\"And where do we stand with Texas right now?\" asked Tom. \"How are we looking?\"\n\nMatt clenched his teeth. \"Still counting there. Several of the urban counties are just tallying up the votes now. We should know soon but we're back in the game! We can still win this!\"\n\n\"How late will it be before Texas is definitively called?\" asked Aubrey. \"Are we likely to know tonight or could it stretch until the early hours of the morning?\"\n\n\"A great question,\" said Matt. \"Unfortunately, it could go on for some time, depending on how quickly they can count. Historically speaking, Texas usually is one that gets the job done quickly and reports their numbers. I have a feeling we'll know tonight. Worst case scenario is probably tomorrow morning at the latest.\"\n\nTom looked at the rest of the girls. \"At least we still have a few hours of life left. There's still a chance.\"\n\nDespite his somewhat ominous words, the mood at the penthouse suite lifted considerably. People could be seen smiling once again but more importantly than before, nerves were jittery. The room was full of tapping toes and cracking knuckles as everyone eagerly awaited the next round of news. With Texan polls due to close in the next half hour, Tom settled in to await the inevitable.\n\nIt was only appropriate that since they awaited news from Texas, everyone's favorite Texan arrived to watch the results. Gia Bennett, the oil heiress and widow who bankrolled Tom's campaign, came strolling into the headquarters looking like she just bought the place. Gia was always larger than life. The playful yet serious blonde was dressed the part, wearing a smart blazer that emphasized her large bust line. Her hair was wild and long, and she attracted everyone's attention as she entered the room.\n\n\"I hope I'm not too late,\" she said as she sat near Tom and the rest of the girls. \"The plane coming into DC was late by two hours or I would have been here much sooner! What did I miss?\"\n\n\"Only a roller coaster ride of emotion here tonight,\" said Victoria succinctly. \"We've been down and then up and now we're eagerly awaiting the last results.\"\n\n\"From Texas, no less,\" added Tom. \"So I'm hoping you've got some electoral votes in your breast pocket so we might get a chance to call the night.\"\n\nGia giggled and actually grabbed her large chest. \"God knows I could keep several hundred ballets stuffed in my bra and no one would notice. And I would do it if I thought I could get away with it!\"\n\n\"We might need them before the end,\" said Aubrey. \"Texas is still looking too close to call for the moment. We're not sure which way it's going to go.\"\n\nHer words were quite the understatement. At this point, all the news networks seemed to figure out that Texas would decide the fate of the election, and all remaining coverage focused on the results in the state, especially those areas that still had to report their results. There was a healthy mix of urban and rural counties, especially the counties that contained two of the largest cities\u2014Houston and Dallas.\n\n\"What's extremely interesting is that the count here in Houston isn't in yet despite the polls closing forty minutes ago,\" said the news announcer on the television. \"Election HQ took a call from the Houston precincts about thirty minutes ago but they hung up, stating they weren't yet ready to call the election\u2014an extremely odd development. It could be that the fate of the whole election could be decided in Houston tonight!\"\n\n\"What in the world is going on there?\" muttered Tom. \"Why would they call in just to say they weren't ready yet?\"\n\n\"It might be that they found more votes that hadn't been counted yet,\" said Aubrey. \"We can hope that those votes broke in your favor.\"\n\n\"Hope is hard to maintain when it comes to Houston,\" added Gia with a wary expression. \"It's a crooked area and party politics run deep. I wouldn't be surprised if someone paid off the officials to 'find' a few votes to swing it to one side or the other.\"\n\nGia's words turned out to be prophetic when the results started to come in from Houston a short while later. At first, it was reported that Tom had won the city and its immediate environs but that was quickly retracted to give the whole area to Norwood. Norwood's vote totals in the state surged, leaving Tom in the dust.\n\n\"It's a bizarre turn of events,\" said the news anchor. \"But then again, that's Texas for you!\"\n\n\"That asshole gives Texas a bad name,\" said a foulmouthed Gia as she stamped her heels. \n\n\"I hope the same thing doesn't repeat itself in Dallas,\" replied Tom sullenly. \"It's the last area we have left.\"\n\nGia reached over to rub his leg. \"Don't you worry. Dallas is my home territory specifically. I know it won't disappoint!\"\n\nEveryone awaited the Dallas results with bated breath. Even the news networks were all focused on Dallas specifically. How this one city would determine the fate of the election was beyond anyone's imagination but that was where they found themselves as it drew closer to eleven o'clock that evening.\n\nTom was really starting to sweat, feeling the perspiration along his back and under his arms. From being nearly down and out to suddenly having a chance, it was a roller coaster of emotions nevertheless. Even the video feeds from Norwood's headquarters revealed much the same atmosphere, which Tom found especially sweet since his people felt almost assured of victory heading into the night. \n\nThe fact that he now gave them a cause to worry was a victory in its own.\n\nIt took another twenty-two minutes exactly before the news started to come in from Dallas. Matt took the first phone call followed by Gia a moment later. Their expressions were cautiously optimistic at first until excitement soon followed.\n\nGia was the first to squeal. \"We did it! We took Dallas!\"\n\nMatt joined her a second later by dropping his phone, taking Gia in his arms and hoisting her into the air. \"Dallas is ours, Dallas is ours! All precincts are reporting in and we took it!\"\n\nBefore Tom could join the celebration, he had to know one thing. \"Is it enough to get Texas as a whole? Can the Dallas votes overturn what happened in Houston?\"\n\nMatt rechecked the math while everyone waited anxiously but he couldn't contain himself any longer. \"The math works! Dallas puts you back out ahead! Tom, you're going to win Texas!\"\n\n\"I'm going to win Texas,\" Tom mumbled to himself.\n\nAubrey grinned from ear to ear. \"You're winning Texas, love.\"\n\nVictoria couldn't help herself either. She engaged in the biggest moment of theatrics of the evening so far when she took Tom's hand and started shaking it vigorously. \"Mr. President, congratulations on your second term!\"\n\nThe faux formality quickly evaporated as she threw her arms around his neck and hugged him tightly. Matt updated the count on the big board to show that Tom now had enough votes to win the presidency again, the final tally showing 272\u2014a small margin but a victory either way.\n\nThe occupants of the penthouse suite went ballistic. Cheers and shouts of joy went into the air. Champagne was popped and good spirits could be seen all around. \n\nThe only thing left to be done was for the election to be formally called. \n\n\"What are they waiting for?\" asked Matt impatiently as he tapped his foot on the carpet. \"We've got 272! Call the election!\"\n\nOn the television, the anchors were still speculating over which way Texas would go now that Dallas was in. Tom imagined that behind the scenes, they were getting instructions from their producers that Tom would be winning and how to announce that to the world. \n\nHe wouldn't have to wait very long.\n\nA breaking news sign flashed on the screen before it once again cut to the main anchor.\n\n\"Breaking news here in Election HQ. We can now announce that President Radford is the winner in Texas tonight, taking all thirty-eight electoral votes. We can now safely project that President Radford has won the election and will stay in office for another four years!\"\n\nIf there was celebration before, it reached a fever pitch now. Everyone seemed to be cheering. Fun and upbeat music was now playing in the background as campaign workers danced and celebrated the victory.\n\nTom lost count of how many people hugged him or shook his hand. Streamers and confetti littered the suite, and at one point, the chant \"four more years!\" was taken up in earnest.\n\nIn fact, everyone was chanting so much that they almost missed what happened next. Several people could be heard trying to quiet the crowd as someone turned up the volume to the maximum level on the television.\n\n\"Word is just in from Norwood headquarters about voting irregularities in Texas,\" said the reporter. \"It appears he's trying to challenge the vote in the state. Don't start celebrating just yet, folks. We could be in for a long night ahead of us!\"\n\nA collective groan went out from nearly everyone. Just like that, the festive atmosphere almost died. \n\n\"What does this mean?\" asked Aubrey to Tom. \"Can he really challenge it?\"\n\n\"He sure can,\" replied Tom. \"And if he demands a recount, we might not know the results for weeks.\" Tom turned to look at Gia. \"I hate to even ask you this but were there any 'irregularities' on our side? Anything to make Norwood and his people suspicious?\"\n\nGia held out her hands helplessly. \"I didn't do any such thing, Tom. I wouldn't even know where to begin.\"\n\n\"If there were any irregularities, it was probably from his own people and what they did in Houston,\" said Matt. \"This might all be a ruse. A maneuver that buys them time while they manufacture the votes they need to win Dallas as well as Texas as a whole!\"\n\n\"Can we do anything to fight it?\" asked Chelsea. \"We can't just sit here and let them steal the election from us!\"\n\n\"We have means to continue to fight if they pull a fast one on us,\" said Tom. \"A whole host of lawyers has been set aside for just that purpose. But I'm afraid we might not know the final results for a while.\"\n\nAubrey crossed her arms angrily. \"We know the true results though. We know that you won fair and square!\"\n\nAs remarkable as it was to hear her say that, it was true. After all, the odds had been against him, and Tom had still managed to win his second term. The only question was would he be able to keep it? Could Norwood pull yet another dirty move and steal Texas out from under him?\n\nEven though it was late in the evening, Tom made a few calls to his lawyers to let them know what was going on. True to their skill, they were already executing a contested election plan which included as a first phase getting evidence from the people on the ground. Tom had just hung up his phone again when it rang from a number he recognized.\n\nIt was Norwood's phone.\n\n\"Tom here,\" he said with only slight hesitation. What would Norwood want now at all times?\n\n\"President Radford, this is the Norwood chief campaign strategist, Luke Pinewood.\"\n\nTom's eyes narrowed. \"What can I do for you, Luke?\"\n\nBefore the other man could answer, Tom heard yelling in the background of the phone. It was a voice he instantly recognized as Norwood's.\n\n\"Move your fat fucking ass, June! I want that fucking water now!\"\n\nTom held the phone away from his ear before pulling it closer when the yelling stopped.\n\n\"I'm sorry about the noise, Mr. President,\" said Luke finally. His voice was full of exasperation, and Tom had no doubt that he'd been on the same emotional roller coaster as all of them tonight. \"I'm calling on behalf of Governor Norwood.\"\n\n\"And what does the Governor wish to say?\" asked Tom.\n\n\"Ah, he is very indisposed right now,\" said Luke gingerly. \n\nTom let out a small chuckle. Insulting his wife privately in such a derogatory manner when he was the family values candidate was ironic indeed.\n\n\"Any way, the Governor wishes to concede the election,\" finished Luke.\n\n\"Excuse me?\" asked Tom. \"Concede?\"\n\n\"That is correct, Mr. President.\"\n\n\"Forgive me for my shock, Luke, but I just heard your team plans to contest the voting in Texas. I'm a little confused.\"\n\n\"Yes, well, we have changed our minds,\" said Luke quickly. \"We will not be contesting. The Governor has instructed me to call you to tell you that he will be bowing out of the race. He'll speak to his supporters in about forty minutes to let them know.\"\n\nThere was a short pause followed by more of Norwood's yelling. Luke interjected again.\n\n\"Actually, better make that an hour.\"\n\nThere were so many things left unsaid. Tom had a feeling there was a lot more story to tell about why they weren't going to contest the results like they'd originally planned. It wasn't hard to tell that Norwood was suffering some kind of breakdown in the background, perhaps the reason why he couldn't make the call himself.\n\nEven still, a victory was a victory. And Tom wasn't about to look a gift horse in the mouth.\n\n\"That sounds just fine, Luke. We'll give our victory speech,\" said Tom. \n\n\"Excellent. Congratulations again, Mr. President,\" said Luke. He quickly hung up as the shouting resumed.\n\nAs Tom put the phone down, it became obvious that the entire room was watching him. He couldn't help but grin.\n\n\"That was the chief campaign strategist for Jerry Norwood. The Governor concedes the election!\"\n\nThere was nothing left to say at that moment. Everyone moved closer to embrace Tom and the party kicked off in earnest again. \n\nThe election was over. \n\nTom had won.\n\n*****\n\nAbout a half hour later, Tom took the podium as cameras centered on him. He was in the main conference room of the hotel on the ground floor, which had been set aside to give his speech when the time came that evening. It was crowded with campaign workers, members of the media, as well as all those important to Tom. As he looked at the cameras, he began to speak.\n\n\"What an incredible evening. What an incredible country! I want to thank everyone that made tonight possible. With your help and with your votes, we can safely declare victory tonight. Just a little bit ago, I took a call from the Norwood campaign to formally concede the election. The Governor has been a tough opponent and he's put up an incredible challenge to us but I'm thankful to say that we've prevailed tonight!\"\n\nTom stopped speaking for a moment to catch his breath. He wouldn't say what an asshole Norwood had been during the entire campaign nor would he go into how many times Norwood tried to cheat to influence the results. \n\nTom's revenge had already been had. He'd denied Norwood the White House and he wouldn't add insult to injury.\n\n\"With today finally over and another election behind us, I want to take a moment to recognize everyone that made this moment possible.\" \n\nWith those words, Tom launched into a round of thank-yous for everyone that participated in his campaign in some form or another. Every person who shaped the outcome in some way was named. Notably missing was Elias but that was hardly a surprise to anyone.\n\n\"Lastly, I'd just like to thank Aubrey Hopkins who had been my single greatest source of strength, comfort, and affection,\" said Tom toward the end of his speech. \"I love you, Aubrey, and I'm looking forward to serving this second term by your side.\"\n\nHe was able to catch her eye as he delivered the message and found her beaming from ear to ear. Tom had meant every word that he said. So many times in the past year he'd found his morale dropping from the rigors of the campaign and every time it happened, she was there to pick him back up again.",
        "Tom knew what he wanted to do to show his appreciation for such a woman but that plan would have to wait just a little longer.\n\nHe finished his speech with an appeal to the traditional call of unity for all Americans and was met with an uproarious applause from the crowd. It was now well past midnight, and most of the campaign workers were still celebrating in the suite. Many of them were drunk and happy, and a handful had already passed out from sheer exhaustion.\n\nTom was thankful that he still had an entire suite to himself on the floor below. He booked it to stay the night, putting some separation between himself and the penthouse above him, but with all the drunken festivities in the penthouse, he was ready for some relaxation.\n\nThe funny thing about that was that he still had four other women trailing along behind him. Aubrey was there of course but so were Chelsea, Victoria, and a very liquored-up and chatty Gia.\n\n\"This has been such an incredible night,\" said Gia loudly as she fell back on the king bed in the room. \"I can't believe we pulled off this election! We really did it!\"\n\n\"You deserve just as much credit,\" said Tom as he loosened his tie. \"Without your money, this night wouldn't have happened.\"\n\n\"I probably deserve much of the credit for getting you into hot water in the first place,\" said Victoria with a sultry laugh. \"With me, you never would have lost the support of your party!\"\n\nTom grinned. \"I wouldn't trade what we did for anything though. And we just showed them we can still win while looking out for the little guy. That's something I can really get behind!\"\n\nGia let out a loud giggle, causing all the rest of the women to look at her. She made a helpless gesture. \"Sorry. You just said 'get behind' and it reminded me of something else.\"\n\nSurprisingly enough, Victoria snorted. \"From what I remember of Tom, he sure did enjoy getting behind things.\"\n\nEven Chelsea got in on the fun. \"Did he ever. He certainly liked the behind more than most.\" She also seemed to be the first to realize what they were saying could be rude to Aubrey. She blushed a deep red that matched her hair and turned to the blonde. \"Sorry, Aubrey. It's the alcohol, I swear.\"\n\nAubrey took it in stride. \"Listen, I'm well-aware that every woman in this room has had relations with my man right there. It used to bother me somewhat but I really don't take that kind of thing personally anymore!\"\n\n\"That's good,\" said Gia with a giggle. \"Because he's still got the biggest cock I've ever seen in my life!\"\n\n\"Mm-hmm, the biggest,\" confirmed Chelsea before she put her hands up about a foot apart. \"At least this big!\"\n\nTom raised an eyebrow as he looked around the room at each of them. He'd never seen them in this form before but then again, he'd never been around most of them while they were drinking. Gia was so chatty that she kept going on and on, but Chelsea was giggling at everything she said. Even Victoria was starting to get in on the action.\n\nSpeaking of which, Victoria moved Chelsea's hands just a bit further apart. \"There! That's more like it if we're talking size.\"\n\nChelsea's eyes glazed over. \"I still can't believe I took it in my ass as many times as I did.\" A glimmer of modesty appeared and she slapped her hand over her mouth. It was too late\u2014the damage was done.\n\nGia nearly dropped her drink. \"What? You let him have your ass!\"\n\nChelsea turned red and slowly nodded. \"Multiple times.\" She then pointed to Aubrey. \"She was there the last time we did it!\"\n\n\"What now?\" asked Victoria as she swung around to look at Aubrey. \"Are you meaning that she was there as in watching or there as in participating?\"\n\nAubrey was next to turn red. \"Participating,\" she said quietly. \"We were doing things . . . together.\"\n\nVictoria looked almost insulted. She turned to look at Tom as she planted her hands on her hips. \"Tom Radford, have you been having threesomes without me? Why didn't you tell me sooner?\"\n\nShe looked genuinely pissed to have not been invited. \n\nTom shrugged. \"Well, it kind of came up out of the blue. It really wasn't planned.\"\n\nVictoria pursed her lips. \"Well, is there another one planned? I want in on this!\"\n\nTom shot a look at Aubrey to see where she stood on the matter. To his surprise, she seemed to roll her shoulders as if she didn't know what to say. \n\n\"I'm serious, Tom. I want in this next threesome,\" said Victoria. \"Especially if it's with the both of you,\" she said while gesturing to Aubrey as well.\n\n\"She's really a lot of fun,\" added Chelsea for Victoria's benefit. \"I'd almost want to join them again as well if they'll have me.\"\n\n\"Don't forget me,\" said Gia, now determined not to be left out. \"If all of you are going to sample his huge cock again, I don't want to be left out either. After all, it's my money that helped him stay president!\"\n\nOnce again, Tom shot another look at Aubrey. \"It's really up to her,\" he said finally.\n\nHe expected many answers from his beautiful blonde girlfriend. He expected her to say their threesome with Chelsea was a one-time thing, not likely to be repeated. He expected her to say their relationship was getting more serious and they wouldn't be having such experimental liaisons in the future. He could even see her going along with their requests but politely putting it off indefinitely so as to not be disagreeable or prudish in front of the rest of the girls.\n\nAubrey said none of that. She simply smiled and nodded her head. \"We can do that. All of us together. I'm okay with that.\"\n\nSilence greeted them. The easy revelry and openness seemed to disappear quickly as the gravity of her acceptance weighed on all of them. Tom was almost afraid the moment might have been ruined but that was before Gia said the next shocking thing.\n\n\"How about right now then?\" asked quietly. \"Seeing as we're all here and I'm guessing all of us are in the mood?\"\n\nShe couldn't have asked a tougher question. No one wanted to be the first one to answer, and everyone was content to look at the person next to them in the hopes they would be the one to speak up. Tom felt an uneasy tension slipping into the room, and despite the good intentions, he quickly thought there would be no giant orgy with all the girls.\n\nHow wrong he was about to be.\n\n\"Oh, you guys are a bunch of pussies,\" said Victoria finally as she set her drink down and approached Tom rapidly. She sank to her knees and quickly fished his cock out in front of all of them. Once it was out, she surprised all of them by sticking a healthy portion of it down her throat.\n\nHer movement stunned all of them. Chelsea put her hand over her mouth while Gia giggled. Aubrey's eyes were glued to Tom's cock while Tom could only watch the stunning brunette senator as she tried to bring him to full hardness. \n\nIt didn't take long to achieve that goal. Being teased in front of all these beautiful women meant his cock was harder than diamonds in a matter of moments. Victoria wasn't wasting any time trying to tease him either. She was going full force, sucking on the tip and quickly stroking the shaft at the same time.\n\nApparently though, she felt a little lonely just doing all the work herself. Tom's cock fell from her lips with an audible smack.\n\n\"Are any of you going to join me or am I going to have to take care of this horse cock all by myself?\" she asked as she started to hike up her blue dress around her hips. She was wearing the tiniest pair of underwear underneath, and Tom could already see a wet spot forming. Without stopping, she then pulled the dress off completely, revealing a sexy black bra that encased her generous bust.\n\n\"Wow, she's gorgeous,\" said Gia as she admired Victoria's body. \n\nGia's words were the first to catch Victoria's attention. She gestured to Tom's cock. \"Let's go, Gia. Help me with this monster.\"\n\nTo no one's surprise, Gia came willingly. She managed to shrug out of her blazer, revealing a satin white top underneath. It looked stretched over her tits, and Tom was watching as she pulled it off to relieve the pressure.\n\nGia might have had fake tits but they were still incredible. Tom almost felt bad for her bra by the way they strained the material but he certainly enjoyed looking down at both women as they stared at his cock. Victoria offered his hardening member to Gia and the blonde heiress took it without batting an eye.\n\n\"It's been a while since I've had this amazing cock,\" she whispered as she stared down his shaft. \n\n\"Good thing for you that it's just like riding a bike,\" quipped Victoria. \"You never forget how to fuck. Or be fucked!\"\n\nGia smiled and offered a tentative lick of the tip. Tom resisted the urge to shudder as her tongue made contact, sending a tiny sliver of feeling all the way up his spine.\n\nGia grinned when she saw the effect on him. She repeated the movement again but this time brought her hands up to fondle his balls.\n\nTom let out a soft groan of approval. Soon, Gia's licks were being joined by Victoria's strokes and the two women worked his shaft in tandem with each other. \n\n\"Fuck, this is really hot,\" said Gia finally when his cock popped out of her mouth. \"I forgot how good he tastes.\"\n\n\"Just wait until he's stretching you open again,\" purred Victoria. \"Then it'll feel just heavenly.\"\n\nGia moaned in response as she latched onto the tip again. However, it became apparent that she wasn't the only one letting out moans. Tom looked to the other side of the room where Chelsea and Aubrey had been sitting and was amazed to find the two of them making out on the bed. It brought back warm memories of them together the previous week, and if his cock wasn't hard enough already, it definitely was now from watching the two sexy women move together on the bed.\n\nVictoria noticed his staring and looked over at the two of them. \"Oh, this night just got so much better,\" she said with a wicked grin on her face. She looked over at Tom. \"Is it all right if I get a chance to test out Aubrey's tongue?\"\n\n\"Be my guest,\" replied Tom. \"I'm sure she'd be more than happy to let you take it for a test drive.\"\n\nVictoria grinned in response and continued to work his shaft while Gia sucked. Tom couldn't have been happier with this outcome but it was soon kicked up a notch when Victoria grabbed his hips and maneuvered him toward the bed.\n\n\"Sit on the bed, Tom,\" she directed. \"Now that you're all warmed up, it's time to have a little fun.\"\n\nTom felt his ass hit the mattress, and he soon pushed back so that his feet were on it as well. Just within arm's reach was Chelsea and Aubrey. Chelsea had managed to get Aubrey out of her top and was now sucking on her nipples while her hand snuck into her slacks. It was an incredibly sexy thing to watch but it was soon replaced by the sight of Victoria stepping onto the bed. \n\nShe pivoted both feet to either side of his hips and knelt down until his cock jabbed at her inner thighs. Victoria could only smile as she grabbed his cock and aimed it directly where she wanted it.\n\nThey groaned in unison as he parted her slick folds, penetrating her on the first thrust. Victoria wiggled her hips until he was truly bottomed out inside her, all the while she steadied her balance on the balls of her feet. Once she was steady, she began to rock, doing all the work as she rode him quickly. \n\n\"Oh, fuck, I missed this cock!\" she said out loud, earning Chelsea and Aubrey's temporary attention. Their eyes remained glued to the sight of Tom's manhood inside her body, entirely slick and coated with her juices.\n\nVictoria wasn't one to start off slow either. In rapid succession, her body was riding him like her life depended on it, setting a vigorous pace that wouldn't soon be matched. Her tightness was incredible and so was watching her large tits bounce with every successive thrust. \n\nIt quickly became noticeable though that he and Victoria were temporarily alone. Looking back over to the other girls, he found that Gia had made her way over to Aubrey. She'd replaced Chelsea and was now sucking enthusiastically on Aubrey's tits while Aubrey struggled to fully undress the heiress. \n\nIt left one question though. Where was Chelsea?\n\nTom got his answer as a pair of feet quickly straddled his head. He looked up to see another slick wet pussy directly above him as well as its owner, a gorgeous redheaded press secretary, smiling down at him.\n\n\"I hope you don't mind if I sit on your face for a while,\" she said in a sultry voice.\n\nTom didn't respond. He just gestured for her to lower herself completely, something she quickly obliged. His face was soon surrounded by her thighs, and Tom pressed his tongue against her slick folds, tasting her instantly.\n\nChelsea was drenched. Her pussy tasted amazing, and he always enjoyed the way her plentiful juices filled his mouth. Below him, Victoria rode his cock like a triple crown jockey while he continued to service Chelsea. Both women were clearly enjoying themselves and the moaning in the room soon reached a fever pitch.\n\nVictoria's rapid movements were having the desired effect. She placed her hand against his stomach to steady herself but she was quickly losing control as she bounced down hard on his manhood. What glimpses he could see of her face revealed a panting, beautiful woman on the brink of losing control.\n\nWho would reach it first though? Victoria or Tom?\n\nThat question was answered minutes later when her mouth dropped open and her hips buckled against him. The smooth and furious rhythm was interrupted by several jerking grinds as her hair soon tickled his chest. Tom felt her pussy squeeze his cock as she came, placing several light smacks against her ass in the process. Above his face, Chelsea wiggled intensely as his tongue explored her wet hole. She even let out a delightful squeal as he wet one digit just to insert it into her rear passage.\n\n\"Yes, right there, Tom!\" she moaned as he fingered her ass. \"Fuck, you know just what I like!\"\n\n\"Goddamn right he does,\" growled a weaker Victoria as her hips buckled again. \"I'd sell my soul for an orgasm like that every single day.\"\n\nTo his surprise, Victoria didn't go for another round. He felt her stand up against him, letting his cock slip out of her body and slap against his lower stomach. It wouldn't be lonely for long. Someone was taking her place, and their deft hands quickly grabbed him and inserted him into her pussy.\n\nRecognition sparked almost instantly. The pussy was wet, warm, and nearly a perfect fit for his cock. He didn't need to see who it was to know who was riding him. Tom shifted out from Chelsea slightly to find Aubrey now riding him hard. She was bent at the back and leaning forward, bringing her face closer to his.\n\n\"Hi, my love,\" she said with a cute giggle. \"I hope you don't mind but it looked like Victoria was having so much fun. I had to get in on the action.\"\n\nTom grinned. \"I would never mind that!\"\n\nAubrey's eyes flicked up to Chelsea. The stunning redhead was grabbing her tits and moaning while her head was pointed toward the ceiling. She was clearly enjoying herself but there was someone else who was trying to get in on the action. \n\nGia appeared next to them since she was no longer making out with Aubrey. The blonde heiress turned her attention to Chelsea, joining Aubrey in the process. The combined attention of three sets of fingers and tongues soon had Chelsea buckling with desire. In fact, she buckled so hard when she came that she bounced right off Tom's face, leaning back on the bed to recover.\n\n\"Oh my fucking god, oh my god, oh my god,\" she muttered deliriously as her orgasm took her. Her chest was heaving quickly, causing her tits to ripple delightfully. \n\nGia wasn't content to let Chelsea go just yet. She snuck between the redhead's thighs and began to work her once more.\n\nThe removal of Chelsea from his face let Tom see again. He focused on Aubrey who was still riding his cock with a smooth and steady rhythm. She leaned down to kiss him tenderly, and at the same time, he could feel her pussy gently milking him for all he was worth. It was an incredible feeling to have her so close to him, a private moment amongst all the debauchery.\n\nEven if that debauchery was just getting started. \n\nTom had realized that Victoria was still unaccounted for after her last orgasm but he'd assumed that she'd collapsed somewhere in the room to recover after such a vigorous fucking.\n\nHe thought wrong.\n\n\"Look what I have everyone,\" she said randomly with a wolf's grin as she reappeared by the bed. In her hand was a strap-on dildo. Tom watched as Aubrey laughed upon sight of it while Gia and Chelsea's eyes went wide. \n\n\"Who carries a strap-on with them when they go out for the day?\" asked Aubrey as her movements slowed.\n\nVictoria could only smile. \"Someone who is always well-prepared for what the day might bring.\" She then flickered her gaze down to Tom. \"Don't worry, darling, this isn't for you. This is for whichever of these girls is brave enough.\"\n\nTom chuckled. \"Good to know.\" He looked over at Gia, only to find her ass raised high into the air as she ate Chelsea. \"I bet you Gia wouldn't mind taking the first ride on that.\"\n\nVictoria was only too happy to hear it and it looked like Gia was actually excited to try it out. Chelsea shifted herself closer to Tom/Aubrey, bringing Gia closer as well. In one movement, Victoria mounted the gorgeous blonde heiress and used some of Gia's natural juices to lubricate the rubber cock.\n\nGia moaned loudly as Victoria penetrated her from behind. The brunette senator grabbed her hips and began to thrust, slowly at first until they were able to build up a rhythm. Suddenly, Chelsea wasn't the only one that was moaning loudly. She was joined by a muffled chorus from Gia as she struggled with getting pleasured while giving pleasure at the same time.\n\nIt was quite the show to watch. Even more so when Chelsea would twist her body to kiss Aubrey while she was busy riding Tom. All of them were connected in some shape or form\u2014a debauched daisy chain that was only getting hotter.\n\nThe girls were getting more vocal too. Gia had an orgasm first, followed next by Chelsea. Aubrey was the last in that particular sequence, coating Tom's lower half with her bodily juices. Her eyes became temporarily glazed over and her body pressed against his for a long, passionate kiss.\n\nUltimately, she was too sensitive in the moment to keep riding. Tom's cock slipped out of her sopping pussy, once again bobbing in the air for anyone to grab. \n\nIt was Chelsea who did the honors. She quickly grabbed it with her hand and angled it to her mouth, tasting the remains of Aubrey's pussy. She wouldn't stop until she'd coated every inch of it, even moaning around his shaft as Gia sucked on her clit.\n\nWith Tom's cock once again freed, it was time to switch positions. It was quite clear from the beginning as Chelsea stared at his cock that she had an idea\u2014one that she was eager to try out.\n\n\"Victoria, come over here for a second, babe,\" said Chelsea as she slipped out from Gia's expert tongue. \"Bring that strap-on with you!\"\n\nGia let out a small pout when Victoria pulled out of her pussy but she watched in fascination as Chelsea maneuvered herself so that she was on top of Tom. Her large tits crushed against his chest as his cock slapped against her inner thigh. She grinned and kissed him before slipping his cock into her wet, waiting hole.\n\nIt wasn't often that Tom got to fuck Chelsea in the pussy since the redhead usually preferred anal to just about anything else. He was surprised that she put him there of all places but it quickly became apparent why she did that when she gestured to Victoria to get behind her.\n\n\"Is that cock lubed up completely?\" she asked Victoria as it poked into Chelsea's ass.\n\n\"Totally,\" replied Victoria. \"It still has the remains of Gia's cum on it.\"",
        "Chelsea purred. \"Perfect. I want you to ease it into my ass while Tom fucks my pussy. I want both of you at the same time!\"\n\nThat took things to a new level. Chelsea started a subtle grinding against his cock while Victoria pushed her strap-on against Chelsea's tight rosebud. Beside them, Aubrey was now eating out Gia and the heiress was making subtle moans of approval.\n\nUltimately, her moans were nothing compared to when Victoria actually slipped into Chelsea's ass. Chelsea's eyes went wide as the rubber cock stretched her asshole\u2014slowly at first and then deeper as she took it all in. After Victoria bottomed out in her tight passage, Chelsea looked like she could cum again right there.\n\nShe leaned forward and kissed Tom passionately. Once she released his lips, she growled at both of them. \"Now, fuck me hard! Fuck my pussy and my ass!\"\n\nTom had never double penetrated someone before but he quickly figured out the mechanics of doing so in coordination with Victoria. That mostly meant that he couldn't really thrust like he usually would, since the rhythm might just throw Victoria out of sync. Since he was on the bottom, he could only give small thrusts forward, relying on the presence of his cock inside Chelsea's pussy to work in tandem with the thrusting going on in her ass.\n\nFor her part, Victoria was thrusting rapidly in every bit the same pace as it was when she was riding. Between them, Chelsea was almost catatonic with pleasure. Her body withered with ecstasy from the dual assault, and it wasn't much more than a few moments into the action that she began to cum repeatedly. \n\n\"Fuck me, yes, yes, yes!\" she yelled as both Tom and Victoria worked to own her body. Tom counted one orgasm, two, three, and then quickly lost count of them as they hit her body in waves. He could feel a small puddle dripping against his lower half, and Chelsea's eyes rolled back in her head every time she hit a new high.\n\nIt was quite a novel sensation, and Tom could tell that both Aubrey and Gia were watching it with interest as they moved together. He wondered which of them would want to try it next. Surely they would be intrigued after seeing the amount of pleasure that Chelsea was in?\n\nSoon though, Chelsea's body was completely worn out. She waved Victoria away and the rubber cock slipped out of her well-used ass without any fanfare. The redhead rolled off Tom and laid flat against the bed, completely exhausted. \n\n\"So good, so good,\" she muttered to herself, her eyes closed and her breathing still struggling to get back to normal.\n\n\"Damn right that was good,\" said Victoria with a grin. \"Chelsea came almost the entire time. From the moment I stuck it in her ass until just now. How many orgasms did you have, girl?\"\n\n\"Like ten or thirty,\" muttered Chelsea, still mostly dead to the world.\n\nVictoria took off the strap-on and looked at it with amazement. \"This thing really was a good purchase!\"\n\n\"Let me see that, will you?\" asked Gia as she reached out her hand. Victoria dropped it in her outstretched hands while Gia looked on with curiosity. Without words, Gia began to strap it onto her own body, playing with the cock. \n\nAs Victoria watched Gia play with the cock, she got a naughty idea. \"Want to fuck me with that thing?\" she asked Gia.\n\nGia stuck out her lower lip as she thought about it. A moment later, she nodded quickly. \n\nVictoria moved toward her bag for some wipes to clean it from Chelsea's ass and once she was satisfied with the condition, she positioned herself on her side. \"I'm ready. Come fuck me, Gia!\"\n\nDriven by curiosity, Gia approached her from the side, her fake cock bobbing in the air every time she walked. She positioned herself on her side next to Victoria while the brunette senator grabbed the rubber tip and pushed it in her pussy.\n\n\"It's certainly not Tom but I do enjoy this one,\" she said with a grin as Gia slid all the way inside her sopping hole. \"Mmm, fuck!\"\n\nTom could only watch on as both women started to move together. It was interesting to see them working together in a way that was different from Chelsea's double penetration. Despite it not being a real cock, this was just a pure penetration that they both enjoyed. \n\nHowever, Gia was used to being in the middle of the action and now that she wasn't, she wanted to get back to form. She craned her head to look at Tom and soon gestured to her ass. \"Tom, will you get behind me please? I'm feeling lonely back here!\"\n\nSure enough, the strap-on left plenty of room to access Gia's pussy. Tom felt Aubrey's hand against his lower back pushing him forward and he joined the two women on the bed, positioning himself behind Gia. \n\nShe let out a cry of approval once he was inside her, a recreation of their earlier chain that was now just as debauched as before. Tom could feel Gia moving back and forth, driving the strap-on into Victoria and simultaneously milking his cock at the same time. To that end, every time he thrust deep, it caused Gia to thrust deep into Victoria. In a way, his movements directly affected Victoria on the other side, and the three of them writhed together in pleasure.\n\nFor her part, Aubrey didn't stay idle long either. She moved closer to where the strap-on was penetrating Victoria and began to suck on the senator's clit, offering teasing licks combined with fingers to drive the other woman crazy. \n\nSurprisingly, it wasn't Gia that orgasmed first from being the filling to their sandwich. It was Victoria who let out a full body shudder and a stream of obscenities as she came from her next orgasm.\n\n\"Holy fucking fuck, I love all of you fuckers,\" she yelled right before she bit her lip in beautiful agony. \"You're officially my favorite people in the whole world!\"\n\nHer orgasm was so intense that she scooted away from Gia and Aubrey to recover. In that moment, it was just Tom and Gia fucking together while Victoria and Chelsea still recovered from their intense orgasms but also while Aubrey rubbed herself next to them while continuing to watch.\n\nIt was tempting to think that the night might have ended there soon. As soon as Gia and Tom came, it was likely that everyone was going to be done for the evening. But that's when something peculiar happened that caught everyone off guard.\n\nA visitor arrived, signaled by a very persistent knock on the front door of the suite. It caught all their attention, starting with Aubrey and Victoria, since they were unoccupied and closest to the door, and ending with Tom and Gia as they stopped moving together once it became apparent that whoever it was, they weren't going away.\n\nNo one knew what to do at that moment. Such a simple answer, like seeing who was at the door, was immediately complicated by the nature of what occurred inside the suite. \n\nTom knew that there were few people who would risk interrupting him in the middle of the night. Likely, it was the Secret Service but Tom still threw on his pair of slacks and undershirt before checking the peephole.\n\nSure enough, the face of Norm greeted his eyes on the other side. Tom gestured for the rest of the women to move out of sight and popped open the door to see the agent.\n\n\"Norm, what's going on?\" he asked, faking a yawn for the other man's benefit. \"It's nearly three in the morning.\"\n\n\"I understand, sir, but someone is here for you that you're going to want to see,\" said Norm. \n\n\"Someone like who? Did something happen?\" asked Tom, feeling panicked at that moment. \"Is everything okay out there?\"\n\nNorm shook his head. \"Nothing major, sir. But this is someone here that you've been looking for quite some time. Someone that we had to show you tonight.\" \n\nHe didn't say anything else before he cleared his throat loudly. From down the hall, someone small and thin walked forward. It could have been a teenager or a young woman based upon the body size but Tom couldn't tell any other distinguishing features. This person had a black sweatshirt on with a hood that was drawn tight around their face. They had a pair of large dark sunglasses on but judging by the lips, Tom figured it was a woman.\n\nShe stopped upon sight of him and removed the sunglasses without any fanfare.\n\nFamiliarity struck him at that moment.\n\n\"Olga!\" he said with surprise as the young Russian woman soon grinned and pressed into his arms for a long embrace. \"How in the world? How did you get here? We've been trying to find you!\"\n\nShe felt so good in his arms, almost like the last day he got to see her before she was captured by her own government.\n\nOlga could only smile in return. \"Da, well, you didn't think I was just going to let them keep me forever, did you?\"\n\n\"I hoped not,\" replied Tom. \"But how did you escape? I have people that are still trying to find you, and the last thing we knew was that you were still in Russia.\"\n\n\"They didn't call me the Spider for no reason,\" she said proudly. \"The biggest break that I received was getting out of Moscow. That was hard to arrange but I knew once I was out of the city, I could get away from my captors. I escaped about two hundred kilometers outside of Moscow and made my way to the nearest airport, where I smuggled aboard an air freight plane bound for Berlin. Once in Germany, it was a simple manner of finding a plane that would bring me to America.\"\n\nTom looked at her with a surprised expression. \"You've evaded your own government and hitchhiked on planes halfway around the world?\"\n\nShe shrugged her shoulders. \"Trust me, I've had to do worse in my line of work. I'm just glad I didn't have to sleep with anyone this time!\"\n\nTom didn't doubt it but he was grateful all the same. He embraced Olga once more, earning a soft laugh of enthusiasm from her.\n\n\"It was considerably harder to track you down,\" said Olga finally. \"Especially with this election going on.\"\n\n\"Yeah, well, it should get a little easier moving forward,\" said Tom. \"The election is over. I won.\"\n\n\"Congratulations are in order then,\" she replied before gesturing to the hotel suite. \"How are you celebrating your win?\"\n\n\"Funny that you should ask that,\" said Tom as a smile grew on his face. \"Why don't you come inside and I'll show you?\"\n\nIt only took a moment to send off Norm before Tom brought Olga inside. The tiny blonde spy said something in Russian when she saw the naked beauties gathered inside.\n\n\"Blyat!\" swore Olga before looking at Tom with amazement. \"You've been busy while I've been gone!\"\n\n\"Just a little,\" said Tom. \"These are a few of my friends. Everyone, I'd like you to meet Olga Chernoff. Olga, this is Victoria, Gia, Chelsea, and Aubrey.\"\n\nThere had never been a more awkward greeting before, especially when four of the five women were nude. Tom wondered what their reaction to Olga would be but true to form, Victoria was the first one to approach the Russian spy.\n\n\"Come on, Olga,\" she said, grabbing the woman by the arm. \"Tom still hasn't cum yet and we're going to need your help in making that happen.\"\n\nJust like that, the mood recovered thanks to the senator's quick thinking. Olga went with her willingly after a brief look of shock appeared on her face. The look was quickly replaced with lust while Tom slipped out of his slacks to reveal his still half-hard member. She didn't resist as Victoria undressed her, and she pushed back on the bed willingly as the brunette slipped between her thighs.\n\nTom wanted to fuck Olga again but he would wait for Victoria to get her ready. Seeing his predicament, Aubrey sauntered forward and bent over the bed in front of him, presenting her luscious rear end.\n\n\"Come on, baby,\" she coaxed. \"Put it back in me. Put that perfect cock back in your woman.\"\n\nIt was a call that he couldn't resist. Aubrey was slick and ready for him, and it only took a couple moments until he was buried inside her balls deep. He started to roll his hips against Aubrey while watching Victoria and Gia take care of Olga. The beautiful Russian started to moan heavily as she was prepared for action with Victoria between her legs and Gia sucking on her nipples.\n\nTom was back in heaven. He grabbed Aubrey's hips and used them for deeper leverage, pushing his cock as far inside as it would go. His lower half was pistoning forward now, and Aubrey was meeting every thrust with a heavy counter of her own. Even still, his body was ready to get back inside Olga. \n\nAnd judging by her lusty stare back at him, she was ready for him too.\n\nTom disengaged from Aubrey finally and moved to the other side of the bed where Olga was waiting with spread legs. Victoria pulled away from her body and positioned herself next to Olga's left side while Gia did the same from her right. Aubrey moved closer to her head, enabling all four of them to watch him at the same time (notably, Chelsea was still down for the count and close to sleeping after her last series of powerful orgasms).\n\nTom looked down at Olga's perfect body and slapped his cock against her clit gently. She shuddered in response and then growled at him.\n\n\"Fuck me hard. I've missed your cock,\" she said as she grabbed her heels and pulled them back.\n\nHer movement presented quite a target. With one hand on his shaft, he pushed forward until the tip notched in her wet folds.\n\nThey both groaned as he easily parted them, sinking partially inside. He withdrew his hips and then pushed forward a little more, sinking deeper inside her body. \n\nTom couldn't help but miss her as well. Olga was the first woman that he'd had relations with during his presidency\u2014the first to kick off his innovative approach to diplomacy. It felt incredible to get back inside her again, especially when there was a time he thought he might never do so again.\n\n\"Da, drive it home,\" she purred right as he thrust deep inside her body. Her hips pushed back on him while her hands cupped her tits. Thanks to the ladies beside her, Olga had help keeping her legs raised high enough to achieve deep penetration. \n\nTheir rhythm soon quickened and the sounds of flesh slapping against flesh filled the suite once more. By this point in the evening, Tom was getting exhausted. Not only had he fucked all the women at least once, but all of them had managed to cum except for him. \n\nThat needed to change quickly and he knew Olga would be the one to do it.\n\nHer body seemed to respond to his instinctively and he always enjoyed the way she seemed to fit him like a glove. \n\n\"God, this looks so fucking hot from this angle,\" said Victoria as she watched them. \n\n\"Yes, it does. Keep pounding her, Tom,\" cooed Gia.\n\nTheir dirty talk was an intense added factor that made him want to increase the pace. Feeling like he had an audience, Tom unleashed the last bit of energy that he had, plowing into Olga's body at a furious speed.\n\n\"Your cock looks so big in her tiny pussy, babe,\" said Aubrey.\n\n\"He's stretching me wide open,\" said Olga with a moan. \"Oh, fuck, I can't take it much longer!\"\n\nThe Russian beauty was seriously squirming now. Every deep thrust was met with a corresponding whimper. She threw her head back in Aubrey's lap and laid prone while Tom hammered into her petite body.\n\nSuddenly, orgasm found her. She yelled out loudly in Russian and Tom felt an intense milking sensation against his shaft. Finally, he could take it no more. Everything tonight\u2014being inside five different beautiful women and now finding their attention on him right at the moment of greatest ecstasy was the biggest triggering point. \n\nTom felt that old familiar feeling rise deep in his loins. His orgasm was going to happen at any moment.\n\n\"I'm so . . . so fucking close,\" he said with a heavy groan.\n\n\"Shoot it over us,\" said Victoria without missing a beat. \"Pull out and cover all of us, Tom.\"\n\nIt took a moment before the other girls soon joined in the chant. Even Olga wanted to be glazed with his seed. With that in mind, Tom pulled his cock out of her body right as he felt the first spurt shoot from the tip.\n\nThe first rocket glazed Olga's stomach before traveling to Victoria's tits. Aubrey took two shots against her upper chest while Gia got several spurts against her stomach. The load seemed to match the session, taking forever to get out and satisfying each girl and their lust for his cum.\n\nTom let out a groan of approval as his body finally came down from its high. He sat against the foot of the bed, trying to catch his breath as each of the women enjoyed rubbing his cum into their bodies.\n\nNaturally, Victoria was the first to speak. \"Well, that was one of the better orgies I've been invited to, so thank you all for this wonderful evening.\"\n\nThat earned a round of laughter, even from Chelsea who was still in a small orgasm coma from being double penetrated.\n\n\"Well, that was my first orgy so glad to know it set the bar high,\" said Gia.\n\n\"Does a threesome technically count as an orgy?\" asked Aubrey. \"Because if so, then this was my second.\"\n\nVictoria shook her head. \"In my book, no. It's only really an orgy if there's four or more people. Although most threesomes can be just as fun if you have a big cock with stamina to enjoy it with.\"\n\nThat last statement led all the girls to looking at Tom. His proud member was now quickly wilting after release but making eye contact with the girls while they talked about orgies could easily have put some life back into it.\n\n\"What do you say, Tom?\" asked Gia finally. \"Want to do this again sometime?\"\n\nTom chuckled and looked at Aubrey. \"Why don't you ask her if you really want to know that answer.\"\n\nAll the other girls looked at Aubrey who only offered a cute shrug. \"I bet we could have a really hot inauguration after-party. A celebratory affair for Tom's second term.\"\n\nHer answer satisfied all of them.\n\n\"What do you think, Tom? Think you can fuck all of us again? At the same time?\" asked Olga.\n\nWhat a life he had.\n\n*****\n\nIn the days after the election, most of the country was only all too willing to get back to normal. Norwood finally offered a concession speech of his own the following day once the final tally was in. It was one of the closest reelection campaigns in the history of the country, and Tom knew there were many voters unhappy with his first term and expecting better of him in the second.\n\nHe vowed not to let those people down. Now that he didn't have to worry about elections anymore, he wanted to spend the next four years getting through legislation that would help the average American above all others, restoring much to their quality of life. Despite the closeness of the race for the presidency, his party easily retained majorities in both houses of Congress, meaning any legislation would fall on friendly ears at least for the first two years.\n\nThere was something else that needed to be rectified as well. Tom was the first president in over a hundred years that didn't have a first lady. It was a fact that troubled him during the earlier years of his presidency, and he was always critically aware of that loneliness above all other things. \n\nHowever, in the past year, someone had become very important to his life. A woman had entered it and changed everything, including his outlook and his sense of purpose. \n\nAubrey was the woman he wanted in his life and the woman he needed. She was intelligent enough to stoke his natural curiosity, strong enough to support him when he needed it, and beautiful enough to ensure he would always have eyes for her.\n\nIt took him some time to figure it out but Aubrey was his other half, and it was time to make it so.\n\nOne week before the inauguration, Tom brought Aubrey to the roof of the White House in the early part of the evening. Darkness was already present in the city and bright lights surrounded them on every side. \n\nIt was a place that Tom didn't come to very often. For one, the Secret Service hated him to be in any situation where he wasn't secure, and any wacko could spot him from the roof if they so wanted to. ",
        "Tom didn't care though. It was beautiful to see the city at this time of night, and it seemed that Aubrey was already suspicious of what he was up to.\n\n\"What exactly did you want me to see up here?\" she asked with an arched eyebrow as they approached the railing. \"It's just Washington at night.\"\n\nTom chuckled. \"True, but I enjoy how peaceful it is up here. Just the two of us, looking out at the whole city.\"\n\nAubrey slipped into his arms. \"It's rather romantic too.\"\n\nHe cleared his throat. \"That's what I was thinking as well. And it's what I wanted to talk to you about tonight.\"\n\nShe couldn't contain her smile. \"Really?\"\n\nTom nodded. \"Have I ever told you that the last year, despite all the challenges with the election, has been the best year of my life?\"\n\nShe snorted. \"That's hard to believe. That election was so stressful for you.\"\n\n\"It was, no doubt about it. But I think that one reason I was able to get through it was because of you. There were so many times in the past year when I just wanted to give up and go home. I wanted to quit politics but you kept me going every time.\"\n\nAubrey kissed his lips gently. \"That's because I believe in you, babe. I think you're a great president and I know you really want to help people. You have such a strong desire to do the right thing for people, something that's very hard to come by in politics. How could I not support you?\"\n\nTom laughed. \"You don't think you're just a tiny bit biased, do you?\"\n\nShe shrugged. \"Maybe I am. I love you and I believe in you. Besides, if I didn't, I wouldn't be a very good girlfriend, would I?\"\n\nTom's breath caught in his chest. He reached into his pocket and fumbled with a small black case. \"Well, about that girlfriend part, I had something I wanted to ask you.\"\n\nAubrey's eyes were expectant as he pulled out the box.\n\n\"Since you did so much to get me to this second term, I was hoping you would be my first lady,\" said Tom as he opened the box. The lights of the city made the diamond inside sparkle. \"Will you marry me, Aubrey?\"\n\nShe didn't even need to answer. Her arms wrapped around his neck at that moment and squeezed the life out of him. Next came the kissing. Her lips sought his, kissing him for all he was worth. \n\nTom pulled her into his arms and never let go. It was minutes before the kiss ended, at which point Aubrey's eyes were shining with excitement and tears.\n\n\"Yes. Yes, Tom. A million times, yes,\" she said finally. Her answer invited another kiss and then another until finally they made their way back down into the White House as she slipped the ring onto her finger. Once they were back inside their bedroom, their clothing didn't last long.\n\nAs another evening began in Washington, so too did the start of forever for one couple.\n\n*****\n\nA week later, Tom stood on the steps of the Capitol reciting the oath of office. Pictures flashed and the nation watched as he was sworn in for his second term. Tom could only grin as he gave those faithful words, ready for another four years as the chief executive of the country. \n\nJust behind him stood Aubrey, resplendent in a magnificent green dress that really brought out her eyes. The diamond rock on her finger sparkled just as brilliantly as her smile. Tom could only look at her with amazement, thankful that the next four years wouldn't be so lonely.\n\nNo matter the hardship that would come, he would face it all with Aubrey by his side. And even if things got too difficult to manage, he always had one final tool in his arsenal to apply.\n\nAfter all, his first term defined his own form of \"Big Dick\" Diplomacy. \n\nWhat would he face in his second term? Would he still have to rely on it then?\n\nOnly time would tell.\n\n \n"
    ],
    "authorname": "CJMcCormick",
    "tags": [
        "president",
        "election",
        "politics",
        "voting",
        "orgy",
        "group sex",
        "russian",
        "blonde",
        "redhead",
        "brunette"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/big-dick-diplomacy-ch-14"
}