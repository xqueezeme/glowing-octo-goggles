{
    "title": "Exorcising Brian Ch. 02",
    "pages": [
        "A reporter for the county newspaper asked, \"Could life be any better for you at the moment, Mr Harton?\"\n\nEric, still a little bemused by the rapid events of the past few months, admitted that he could not have wished for a better outcome. Yet, only he knew he carried a patch of lost wonder that steered him away from total satisfaction. A gap deep inside that he could not lose, no matter how hard he tried.\n\nStill, recent events had been an unexpected form of consolation, even if they had been caused, in a remote sense, by that very lost wonder.\n\nAfter leaving university with a first class honours degree, he had been lucky enough to be accepted by a London newspaper, for a trial period. After covering minor stories, doing what the mass of pressmen he had met over recent days were doing, he had been offered a full time contract. Bigger stories came his way, big court cases, upper crust scandals, and the like. So, he progressed steadily for the next three years. Always, inside him, something cried out for what was lost.\n\nOne weekend, after an abortive attempt at filling the gap, and having an unusually clear schedule, he began tapping out on his laptop, something, he hoped, might become a novel. More importantly it might clear the troubled corner of his mind.. He had little plan, a loose set of characters, some very special scenes, but no real idea of where it would go.\n\nHowever, once he started writing, the whole thing just took off. His imagination caught fire, and he was guilty of stealing time from his actual work, because he just could not stop. The thing practically wrote itself. He was writing of murder, cruelty, intrigue, vengeance with some vivid----\n\nThe reporter broke into his thoughts, \"Would you admit that the very graphic sexual scenes are what sold the book?\"\n\nEric had to smile, \"You'd need to ask my readers, that one.\"\n\n\"Personal experience, Mr Harton? Or wishful thinking?\"\n\nBefore Eric could frame an answer, his agent Harry Benton broke in, \"I think that a highly impertinent question. And since, as has been well reported, the book has attracted the attention of Harvey Stilling, the Oscar winning Hollywood director, it is hardly just the sex\"\n\nBeing in Bristol was the fourth stop on this promotional book signing tour. \"Exceptional for a first time author,\" Harry had told him. \n\nEric just could not come to terms with the speed of things once the book had been completed. Through the newspaper, he had been recommended Harry Benton, as a reliable agent, and he had certainly proved his worth. In next to no time he had several editors clamouring with offers. The book had only just been published, and already was tipped for the best seller list. So, at twenty five, Eric was looking at an amazing turn around in his circumstances, and the possibility that he was set-up for life. Consequently, he had resigned his post with the newspaper and start a second book. \n\nA best selling author at just twenty five. It was beyond his wildest dreams. He lay back against the leather of the limousine that was driving them to their hotel.\n\n\"Where are we tomorrow, Harry?\" Eric asked, his eyes closed.\n\n\"Tomorrow, it's a trip to the seaside. Torquay, Devon.\"\n\nThe last word drove like an arrow into that hollow place Eric held inside. Images formed behind his eyelids as though a magic slide show had been switched on. A curvaceous, naked Paula, lying back like a presentation. A .naked back, starkly sensuous. Blue eyes turned up to him as the mouth worked----\n\nNo! No! No!\n\nHe sat up quickly, rubbing at his eyes. The book was meant to kill off those visions. Yet they persisted. When memory became too much, hadn't he toured around Devon three years ago, looking in phone books, contacting local authorities. But with no firm location to follow, the search had been fruitless. Paula could be anywhere in Devon. If she was, in fact, still in Devon. She could be anywhere. \n\nEric had become desperate to know whether the rapture of that time had just been a one-off. If it was just the sex, why, after a goodly number of sexual encounters since, did he still see her face when he closed his eyes and opened his heart. Why had she taken root inside him? Trying to convince himself that he had probably passed out of her thoughts didn't help. She would have a totally new life by now. Dejected by that futile Devon search, he had returned to London, where, out of all his uncertainty, he had started the book.. \n\n\"Something wrong, Eric?\"\n\n\"No, nothing. Overwhelming circumstances, I guess.\"\n\nHarry laughed, \"Not surprising. I tell you this is going the places. How's the new book going?\"\n\nIn truth, it wasn't going well. Too much had happened lately.\n\nThat night his sleep was invaded by erotic dreams of fingers touching, lips exploring, and when he awoke he was soaked in sweat.\n\nThe drive to Torquay seemed to take an age. I am in Devon once again, was Eric's dominating thought. Even though he was forcing himself to bury the significance of that, it kept returning, as the traitor in his head whispered, \"Somewhere in Devon there is a certain bungalow.\" Oh, yes, not many bungalows in Devon, are there? Just a little scout around would trace it. That had been his thinking three years ago. He kept telling himself that he was being absolutely stupid.\n\nIn Torquay, the sun was shining, as it should on a July day, and they had a quick lunch before taking a short walk to a large bookshop. As they arrived, Eric could see there were several people already queuing. That was how it had been in London, Nottingham and ---well everywhere.\n\nInside the shop, Eric was subject to the, now familiar, handshakes, congratulations, and good wishes from management and staff. Soon he was seated behind a white table laden with copies of his book. The garish red cover screamed at him , and, too late, he had thought the title 'Exorcising Brian' could have been better,\n\nThe customers, mostly ladies, but with a smattering of men, either asked for a book from the pile or already had a copy which they placed in front of him. Eric had developed a technique in which he kept his eyes down until he had signed a book, and he always asked the name to which he should address his greeting. Then after signing he would hand the book over, and treat the recipient to what, he hoped, was a genuine smile.\n\nAfter two hours or so, the genuineness of the smile was feeling a bit strained, but, as he signed a book to a 'Roberta,' he vaguely recognised that there were only three ladies left in the queue. \n\nThe next lady placed a book in front of him, already open at the inside cover,. \"Who shall I make it out to?\" he asked, pen poised.\n\n\"Sienna.\" Came the reply.\n\nThe name had Eric's hand freeze over the book Something inside him seemed to lurch, as he raised his eyes over a slender figure in a pink button up dress, to a face that had him all but leaping to his feet. Blue eyes, high cheek bones, full mouth, and the hair, that tawny hair, shorter now, but neatly styled. Sheer beauty, so long lost.\n\n\"Hello, Eric.\" Her face broke into a ready smile. \"Have I surprised you?\"\n\nEric's mind was churning. This was what he had longed for, wasn't it? Yet now, he was almost speechless with the shock of it. \"Paula! Surprise doesn't cover it.\"\n\nThe lady behind Paula gave a loud clearance of her throat.\n\nPaula turned quickly and apologised, while dazedly Eric wrote into her book. As he handed back the book, Eric quickly told Paula the hotel they were staying at. \"Just down the road. The annexe bar. Half an hour?\"\n\n\"I know it,\" she nodded, and, giving him a quick smile, she picked up her book, and walked out of the shop.\n\nVery briefly, Eric watched that unforgotten hip sway, before another book was slammed down in front of him, with irritated force.\n\nGod, he looks better than ever, Paula thought, as she stepped out onto the sunlit street. That look of maturity suited him. Gone were those boyish features. He'd be twenty five now, wouldn't he? So exciting to see him like this.--a success. Just what she had wished for him. It had given her a sense of pride, when she read the book, to find that she had played some distant part in that success.\n\nShe was relieved that he wanted at least to talk with her. When she'd discovered that he had a book signing in Torquay she just couldn't let it pass, even though she had serious doubts about seeing him. Paula was prepared for the fact that she was going to be meeting a person who would be far removed from the hunky, brown eyed, man/boy that she had spent just six hours with, seven years ago. How those six hours, and their consequences, had lived in her mind. She had tried telling herself that it should all be locked in the past. A brief episode that she should be able to call a day on. She had tried in so many ways. But, like the words of an old song, there was always something there to remind her. \n\nThen, one day, there he was, smiling at her from a newspaper, an exciting new author. More than anything she realised that he probably had a woman in his life by now. Seeing him interviewed on TV, had told her that he wasn't married, but that didn't mean much these days.\n\nWalking down to the hotel, she casually flicked back the front cover of the book to read his inscription. It stopped her in her tracks as she read:\n\n'To beautiful Sienna, who simply brings on the sunshine.'\n\nA long forgotten melting began inside her. Was there real meaning to be taken from those simple, touching words? Why had she used her pen name when he asked? To see if her remembered? Well, no doubt there then.\n\nA few latecomers had lengthened the queue, so it was more than half an hour before a rather bemused Eric was making his way back to the hotel, alongside Harry. Paula filled his mind. Seeing her so unexpectedly had confused him. He had thought so much about her, hadn't he? Had tried to find her, hadn't he? Yes, on both counts. So why this feeling he had now that she had turned up. Hell, he was more nervous than he had been all that time ago when she had first invited him into her house. And he had been a teenager then.\n\nIn the hotel annexe, at a table nearest the door, Paula saw Eric come in with an older man. She raised her hand, but he spotted her immediately, said something to the other man, who glanced in her direction before walking away. As Eric approached, Paula's uncertainty increased. What direction could their conversation take? Not old times. They had been brilliant, but too short. Just what was she expecting from this encounter? Certainly nothing like their last meeting. So, why did she build herself up for disappointment, as his tall figure, immaculate in a dark suit, came to the table\n\nUnsure of himself, Eric pushed through the revolving entrance. There she was. So close, hand half raised, still lovely to look at. He told Harry he would see him later, and tried to adopt a purposeful stride to where she sat with a cup of coffee or tea in front of her. On the way down he had tried to invent a smart greeting, but now that she was there in front of him all he could do was bend swiftly, kiss her cheek gently, and murmur, \"Paula, you look good.\" In bending, he had rested one hand on the table, and the rest of the annexe vanished as, for a few seconds, her hand covered his. An electric charge from long ago. He sat down, staring dopily into those blue eyes.\n\nPaula could only reply, \"So do you.\" But how her hand had moved to cover his she had no idea, but it felt so right. How strange that he seemed so lacking in confidence. She had half expected him to be more outgoing, more flamboyant, given his new social standing. It seemed right for her to open the conversation, as she removed her hand from his. \"Thank you for what you wrote on the inside cover. That was sweet.\" \n\n\"It was true,\" he replied.\n\nPaula liked that. \"I was so delighted to follow your success.\"\n\n\"Right out of the blue,\" he said.\n\n\"You might say that,\" she said, in a teasing tone that Eric so readily remembered, \"but a certain part of it is right out of your--our life, isn't it?\" \n\n\"So you've read it?\"\n\n\"That title. Could I resist. It's me, isn't it? Your female character.\"\n\n\"You?\"\n\n\"I can tell by your smile----your choice of name for her, Pauline. Very close. That section, that one reviewer called the raunchiest writing he'd ever read. You captured that so well.\" Paula was sure Eric's face had reddened. \"You're not embarrassed, are you.?\"\n\nEric hadn't been---until now. Yet he didn't know why. If Paula had read it, she was bound to recognise the setting, not to mention the activities described. \"Not really,\" was all he could say.\n\n\"Hair colour, eye colour. Copulation on a kitchen table-----and that shower scene.\" And she gave him a wide honest smile. \"Your description of what pleasure the male character, the cop, Eddy, felt in that scene--I hope that was an accurate recall of how you felt.\"\n\nEric was struck by a quick image of those eyes looking up at him, gauging his pleasure, while her generous mouth worked its magic on him. Now, staring into that face, trying to find signs of the passing years, Eric had to admit, there were none. So, to change the subject, he told her that.\n\n\"Thank you---the wonders of modern skin cosmetics.\" Inwardly delighted at his comment, Paula wasn't yet prepared to leave the subject of his book. \"But you had me---er, Pauline, murdered---and by Brian, of all people.\"\n\n\"He was a hate figure,\" Eric replied, knowing what question would be coming shortly.\n\n\"Is that why you kept his name the same?\"\n\n\"Seemed logical.\"\n\n\"Loved the way you got rid of him. But what made you kill Pauline off?\"\n\nThere it was, the question he knew he could only answer honestly, and he looked into her eyes as he replied, \"I thought I might exorcise you.\"\n\n\"And did it work? The book ends with the hero appearing to have found another woman. Did you?\" She didn't really want to hear his answer to that one. But she needed to know.\n\n\"Several,\" Eric replied bluntly. \"Most of them at university, one or two since.\" Her hand was resting on the table, and he reached out to touch it with his fingertips. \"The book---the women---all massive attempts at exorcism--none worked.\"\n\nPaula felt her heart thud against her ribs. Was this what she wanted to hear? The touch of his fingers had been so warming, so natural, so genuine. And he was staring at her with such intensity.\n\n\"And you?\" he asked. \"Have you---\"\n\n\"I got married,\" she told him, and seeing the fall in his expression, she immediately added, \"And divorced---two years only. Mutual agreement. There were reasons, but settle for the fact that he thought I was a cold fish. \"\n\n\"You?\" Eric was astounded at that information.\n\n\"Perhaps you got the best of me, Eric. Marriage couldn't eradicate that.\"\n\n\"Is that what you were trying to do?\"\n\nShe shrugged, \"I had been here just two years, and he was the first man since our encounter. Just a mistake.\"\n\nThey sat looking at each other. Words seemed superfluous now, as they each wrestled with the implications of what had been said so far.\n\n\"Excuse me, Mr Harton. You are Eric Harton, the author, aren't you? I wondered if you would be kind enough to sign my book.\"\n\nThe hurried voice, words sputtering out like rapid fire gunshots, broke into their silence. Eric looked up to see a diffident middle age lady standing over them, holding out his book. Collecting his sensibilities, and with a little shrug towards Paula, Eric nodded , and managed a smiling, \"Of course.\" Taking the lady's pen he scribbled a quick greeting and signature.\n\n\"Oh thank you,\" the lady gushed. \"I've enjoyed it so much.\" Then spotting the book beside Paula she added, \"Oh, to find a man like that Eddy, eh?\"\n\nAs the lady moved away, Paula gave Eric a wry smile, \"I wonder where you can find a man like that?\" \n\nEric felt it was time to test the water and he said, \"What now?\"\n\n\"What now, indeed,\" Paula responded. Deep inside, her body was telling her exactly what she would like now. The unbidden wish to have him inside her once again was surfacing. Yet the more rational part of her brain was telling her it just couldn't be as easy as that..\n\n\"Are you still in the bungalow you were moving to?\" Eric asked. His 'what now' question had been an attempt to clarify his own tangled emotions. To have and hold what still looked like a most delectable body, was so appealing. The tightening in his groin told him that. More rationally he could tell himself that just being near her felt like some kind of release.\n\n\"Oh, yes, it's a delightful setting. You must see it--\" She paused, \"sometime.\" There was a very good reason for her adding that last word. If this was just a casual once only encounter, then it was almost over now. Is that what she wanted? \n\nEric had told her of his situation. Now he had to ask, \"Is there --? Have you got--?\"\n\n\"There's no man in my life, if that's what you're asking?\"\n\n\"Then we can meet again?\" He sensed that there was something else she hadn't told him. That hesitation about him seeing her bungalow had puzzled him. \n\nPaula glanced at her watch, \"I have a meeting arranged with my agent in Paignton shortly, but tomorrow---\"\n\n\"Tomorrow I'm in Plymouth, the last signing. Your agent, you say---so you're still writing.\"\n\n\"Have to keep the wolf from the door.\"\n\n\"I did read a couple of Sienna Gold books.\" he admitted. \"Very romantic. But well written. You should try something more adventurous.\" Eric shook his head, \" Listen to me--the wise old first time author.\"\n\nThey laughed together before Paula told him,\" I did start one book, written in my own name---But gave it up. Glad I did when I read yours..\"\n\nEric felt that they were circling the real situation. \"Could we have a meal together, day after tomorrow, say?\"\n\n\"Thursday? Should be fine.\"\n\n\"Why not here? Food's very good, they say\"\n\n\"I'll look forward to that,\" Paula said, getting to her feet.\n\n\"Seven thirty?\" There was a boyish thrill for Eric in making this particular date. He would have been back in London by Thursday. So he would book himself in here for a couple more nights.\n\nPaula stepped round the table and stood close to Eric. She raised her head without committing herself, but immediately Eric bent and kissed her full on the lips, warm, gentle and short. Her eyes held his for a moment, before she said, \"Until Thursday then.\" And very deliberately she walked away, out through the revolving doors, without looking back. \n\nEric stood and watched her trim figure moving away. She never looked back, and her response to his impetuous kiss had been cool. Had today just been a polite gesture on her part? Yet she had found him, had agreed to meet again, had said he could see her bungalow in a sort of begrudging manner, and what about the way she'd covered his hand as he sat down? \n\nFor Paula the time up to Thursday evening seemed to crawl. But it gave her a chance to clarify her own thoughts. There was no doubt that Eric had been pleased to see her, had admitted not being able to erase her from his memory. He had even made her a major character in his potential best seller. But were his intentions just a pursuit of a long ago sexual memory? \n\nGod, hadn't she found herself wanting him so many times over the years? Was she just wanting to relive the dream? It could never be just like that again. She needed to clarify so many things before she could allow him totally into her world. There was something he needed, no deserved to know, but she had to see signs of commitment before that could be resolved. That was the key word; commitment.\n\nFor Eric, the Plymouth book signing had been a major distraction, almost an irritation, and he'd never imagined that he would think that. Having seen Paula again was all that filled his mind. \n\nHe told Harry that he would not be returning with him to London.",
        "\"The lady?\"\n\n\"A very good friend,\" Eric had replied.\n\n\"With tawny hair, and vivid blue eyes----where have I read that? Interesting,\" Harry said with a gentle smile. \"Just don't make any mistakes.\"\n\n\"I don't intend to.\"\n\nThursday produced a warm evening, a fitting end to a red hot day. Eric wore a dark grey lightweight suit, with blue shirt. Throughout the day he had found himself deciding just how this meeting should go, and respect was a key factor. \n\nWhen Paula appeared, any resolutions he had made might have gone out of the window. In a blue silken dress that emphasised her figure and revealed just a hint of the valley between her breasts, she looked stunning. Eric tried desperately to control the aching in his loins.\n\nPaula enjoyed the look on Eric's face as she approached, admiration mixed with uncertainty. There was still the element of the boy in him. She liked that. They exchanged a brief cool kiss before proceeding to the dining room.\n\nAt the table, she asked Eric to choose the wine, and he said he would like her to choose the main course for both of them. \"Decisions, decisions,\" she laughed, but readily chose the beef bourguignon for two.\n\nThe meal was delicious and Eric realised that it was the first time he'd observed her eating a proper meal. Fascinated he watched the delicate way she consumed her food, like a tentative sparrow.\n\nOver the meal they talked easily of their early days. Paula's parents had been killed in a road accident in France when she was nineteen. Eric told her of his father's fight with cancer before he died when Eric was fourteen. \"Mother is still going strong. Dad left her comfortable.\" And the small talk went on to their writing. Since their last meeting she had published four more books under her pen name, Sienna Gold.\n\nAs they were finishing their sweet, pavlova for her, profiteroles for him, Paula felt it time to get some clarity on their situation, and putting down her spoon she asked, \"Where do we go from here, Eric? What do you expect of me?\" She feared that had sounded just a little too abrupt.\n\nEric was slightly taken aback by the question. Although he could have addressed her in not dissimilar terms. Testing her expectations, he said flatly, \"I have a room upstairs.\" And watched her reaction with trepidation. Please, back away. \n\nPaula's cheeks reddened, \"I was afraid that is what you might suggest. But, Eric, the situation now is so different from what it was back then. Don't get me wrong I still have a deep feeling for you---but it can't be resolved by a quick---how do they put it----roll in the hay?\"\n\nEric felt all the tensions that had been building inside him suddenly relax. \"Paula, you may not believe this, but you're reaction is exactly what I hoped it would be.\"\n\nPaula, so relieved, gasped, \"Really?\"\n\n\"God, I want you so much. If you'd said yes to the room I know I wouldn't have been able to resist. But I want to know you in so many other ways. What makes you laugh, what upsets you, the name of that perfume you wear, Do you like cinema, theatre? What's your favourite colour? All those things and so many more.\"\n\nPaula reached her hand across the table and their fingers interlocked, \"Yes, oh, yes, I want to know all about you. I'm looking for permanence, Eric. I'm fourteen years older than you---what kind of barrier will that be? These are things we need to find out.\"\n\n\"Good as the sex was --and could be again,\" Eric responded, delighted that they seemed to have a level of agreement. \" I know there is more if we are to justify our time together.\"\n\nPaula felt just a little giddy. Was it the wine? No, it was the promise encased in that recent interchange. There could be a future.\n\n\"So how do we proceed?\" she asked.\n\nEric had no doubts, \"We meet, we go places, we do things together---regularly.\"\n\nThat night, in the car park, they kissed a little longer than intended, but as they broke from each other, they laughed----with hope in both their hearts.\n\nEric extended his room booking and hired a car. And for the ensuing weeks Paula would drive to the hotel car park, leave her car there, and Eric drove them all over the county. They took in little village fairs around Devon and moor land walks. They went to a show or two in Exeter, and Torquay, where they found they had similar tastes. And there were so many beaches and cliff tops where they walked, hand in hand after the first week. They laughed a lot, looked at each other silently, hungrily. Over a four week period, they spent as much time together as possible. There was just something that bothered Eric, not just the fact that he never collected her from the bungalow\n\nIn all of their meetings, there were few days when they had a full day together. Paula appeared to .be available mornings into the afternoon but insisted being home before five o'clock. Generally her reason was that was the time her agent or publisher tended to call. Evenings, she liked to know in advance if they were going out for a meal or a theatre visit. Up to a point, and because he was so enjoying her company, Eric was prepared to go along with her strange time demands. But he was compelled to ask on one occasion, \"When do I see this mysterious bungalow?\"\n\nPaula had tapped the side of her head sagely, \"I'm saving that for a special occasion.\" And couldn't resist adding, \"A double special occasion.\"\n\nEric guessed, and hoped, what one occasion might be, but the double reference puzzled him. \" You like your little mysteries, don't you?\" And his mind leapt back seven years, and their first shower together, when she'd hinted at what the second shower would do. \n\nThey kissed frequently, long amorous kisses in the car, under a tree, or on the open moors. Occasionally, Paula, sensing the pressure of his erection would ask, \"Am I torturing you?\" In asking the question she had to admit she was also torturing herself in feeling how ready he was for her.\n\nEven though he did feel heavily constrained, he honestly replied, \"It was my idea too.\"\n\nPaula was becoming more and more certain that they were really compatible. The fact that he had stayed at the hotel for all the time, paid some testament to his commitment to her. Then one day, after receiving a worrying phone call from her Aunt Sarah, who lived in Barnstaple, Paula rang Eric to tell him, and he offered to drive her north. \"To keep you company.\"\n\nThe instant Eric met her frail, distressed aunt he declared, \"Hospital.\" And they sat for hours in a busy waiting area until a doctor came to give them the good news. \"Just a viral thing. She's in good shape for her age. Antibiotics should do the trick.\" \n\nOn the drive home Paula laid her head on Eric's shoulder, \"Aunt Sarah thinks you're gorgeous,\" she said, with that teasing tone in her voice. \"Of, course, she does have those very thick lenses.\" Another laugh together. Then, more seriously, she told him what had been in her mind even before his wonderful patience on that day, \"I think you should come to see the bungalow tomorrow. Get my full gratitude.\"\n\nEric almost drove off the road, \"Sure?\" he asked, and a quick glance at her face told him exactly what that 'full gratitude' would be. The very thought of it caused that so familiar stirring in his pants.\n\nBack in the hotel car park, they shared a passionate kiss, and Paula whispered, \"Thank you for today. You were marvellous.\" And she groped in her handbag and pulled out a slip of paper she had kept there for over a week. \"That's a little map showing how to get to me.\"\n\nEric took the paper from her and chuckled, \"I think I remember how to get to you.\" And as she squeezed his hand, he opened the paper to find a roughly drawn map.\n\n\"Just before Brixham,\" she said, holding on to his hand, wanting him, happy that they had become this close. \"Just a narrow road leads to it. Ten thirty, say.\" \n\n\"Nice and early.\"\n\n\"We've got a lot to get through,\" she said, with that alluring smile, and with a quick kiss, she was out of the car, and hurrying to her own. Eric just sat and watched until, with a little wave, she'd driven away. \n\nAfter a bumpy night of waking and drowsing, dreaming and hoping, Eric was up, fed, showered, dowsed in manly spray, dressed in blue sports shirt with matching trousers, and on the road by ten past ten. It was going to be another sunny day. That dedication he had written in her book wasn't far from the truth at all. He had estimated it would be a ten to fifteen minute drive. With the map placed conveniently within his sight, he drove and relaxed, despite the tremors building inside him. \n\nPaula went through her normal weekday morning routine, before showering and gently scenting her body. Then, very deliberately, she chose exactly how she would dress to greet the man who had imbedded himself very firmly into her life. As ten thirty approached she hurried down the drive, to open the wide gate, before returning to the front door porch to stand and watch for him.\n\nWith each stage of her preparation she had felt her anticipation rising inside her. This was the day she'd thought might never arrive. But how right they had been to withhold the passion. Now this day could be perfect for both of them, so long as the climax to it was as she'd hoped it would be.\n\nStanding there in the sunlight, she thought of his body against hers, and already felt herself moisten under her dress. A car appeared on the lane and she drew in a sharp anticipatory breath.\n\nEric found the map very accurate. He was sure he'd hit the correct narrow turn off, but just for a few minutes he wondered if he'd been wrong. The lane seemed so long. Then, the bungalow was there, off to his right, bright red brick in the sunlight, and on the front steps-----\n\nHe might have driven into the gatepost of the open entrance, when he saw her standing there. The yellow dress showing off that body that he so desired. Obviously, not the same yellow dress, but having exactly the same effect that he'd experienced years ago. His erection started before he'd stopped the car.\n\nAs he stepped out of the car, for one mad moment, Paula thought she would orgasm there and then. All in blue, tall, so masculine, his appearance had her clenching her thighs together. She had planned to run to him but was unable to move. All she could do was hold out her hands to him as he hurried towards her. And God, his pants were bulging.\n\nEric got out of the car trying disguise his swollen state, but knew it was hopeless. All he wanted was to have his arms around that wonderful figure in the yellow dress. He tried to define the look on her face. Was it pleasure? Happiness and just a touch of lust? She was holding her hands out, and he took them, so that she could draw him back through the doorway, into an ample hallway, with wide corridors branching off in three directions, and as their bodies came together he managed to kick the door shut. \n\nThey stood there, locked in a frantic embrace, kissing feverishly, tongues meshed, bodies so tight together that water couldn't have passed between them. Paula, gasping as she felt his erection rolling against her lower body, went up on tiptoes to try and get it lower and between her thighs. She broke from the kiss, \"I'd intended to show you around the place but--\"\n\nEric had been luxuriating in running his hands over the curves under her dress. Deciding that, just like before, there was no underwear, he said, \"There's nothing under this dress, is there?\"\n\nPaula widened her eyes in mock anger and gave him a playful nudge in the chest, \"Nothing? Nothing?\" And she grabbed him by the arm and bundled him onto the wide centre corridor, where she pushed open the first door, entered, and dragged him willingly after her.\n\nA lovely wide bed took Eric's eyes immediately. Although the duvet cover was different he was sure the bed-head looked familiar. It was a very feminine room done in lavender, with the odour of it all to match. Paula had stepped away from him, and as he went to follow her, his senses reeling, she held up one hand to hold him off, while the other hand unfastened the buttons of her dress. Eric stopped and watched in wonder as the dress slowly slid to the floor, revealing her in all her voluptuousness.\n\n\"Is this the nothing under my dress?\" she growled seductively, as she reached towards his belt buckle. \"Come on. What are you hiding?\"\n\nAs he felt her fumbling with his belt, Eric pulled his shirt over his head., \"Have I been in this bed before?\" he asked.\n\n\" I kept it specially.\" \n\nThat body already had his tumescence raging. Her breasts looked larger than he remembered and there was just the hint of a droop that he could not recall. Her belly appeared less flat, more seductively rounded. Hell, who cared? She was here, wanting him. He aided her eager pushing of his trousers to the floor, and Eric flinched as the tips of her fingers teased over his erection..\n\nPaula knew that she couldn't wait long, as she turned away and flung herself back on the bed, \"No time for foreplay, Eric. Not for you and certainly not for me. Let's get the pressure out of the way.\"\n\nHer voice had been more like desperate grunts, and Eric was on top of her and into her without any preamble. His cock felt good and solid as it glided into the sucking, soaking warmth of her.\n\nPaula had an orgasm on the very first plunge of his metal hard penis. She had suspected this might happen, as the dam, holding back the pent-up emotions of recent weeks and months before, burst, filling her with a lightning bolt ecstasy, that had her thrashing and groaning against his penetrative thrusts. It was so swift that she quickly realised that Eric was still delightfully active, and she lifted her hips to match his every thrust. Her vaginal wall was red hot, and she wanted more and more of this immense pole that plunged along her channel in order to assuage her burning sensations. Then she felt the rising volcano of another orgasm taking her away out of herself. She heard her own cries as she heaved at the heavenly intruder inside her, and every nerve end glowed, shone and tingled.\n\nEric, so taken with being where he had wanted to be for so long, realised that Paula had come as soon as he'd entered her. He had expected that, after the frustrations of the past weeks, he would be pretty rapid himself. So his ability to enjoy his plunging up to her cervix for several beats pleased him. There was no thought of reaching for her breasts, or moving his hands over her body, as he might have done normally. There was only the deep untapped need to ride into her, to reach her innermost parts, and to have her as ecstatic as she had been. And, even as he thought this, she began heaving up to match his own rhythm, and he sensed his own pressure reaching a crucial point. So that as he realised, by the sounds she made and the reckless thrashing of her body, that she was experiencing a second orgasm, he was able to release, and heave himself up, up into her, his semen spurting as though it would never stop and the sounds from his own mouth mingled with hers, as he collapsed over her. Spent, and overjoyed.\n\nPaula only became aware of Eric's ejaculation as she slowly rode down from whatever planet she had been on. It was a delight to feel his final almighty thrust going deep to the heart of her. Now he lay with his face buried in the side of her neck, and for a few moments they remained beyond speech, each enjoying the enraptured breathing of the other. Paula felt his limp penis slip across her thigh, and she even loved that.\n\nAt last Paula was able to say,\" Oh, God, Eric, I'm so glad we didn't rush into this. It's still there, isn't it? That special delight we shared.\"\n\nEric raised his head to look down at her perspiring face, strands of tawny hair pasted across it. \"Do you remember the last things you said to me?\"\n\n\"Only vaguely,\" Paula admitted.\n\n\"You told me to go out and become a successful writer. I've done that.\"\n\n\"And I'm so pleased for you.\"\n\n\"But you also said for me to find a good woman--and you'll be pleased to know I've just done that as well.\"\n\n\"Do I know her?\" Paula chuckled, and they hugged and giggled together.\n\nThey lay for a while just idly stroking each other. Paula found renewed sensuous pleasure in the way Eric's fingers stroked gently over her skin, circling her breasts, teasing at the nipples, sauntering teasingly across her belly. She wondered if he'd noticed how she'd slackened a little across there. Maybe soon she could tell him why. But in the meantime, it was a joy to run the flat of her hand over his muscular arms and shoulders.\n\nFor Eric, this afterglow was simply wonderful. Just the feel of her skin under his fingers. The fullness of her breasts, the curves at waist and hip, that roundness of her belly, all of it was exquisite. For half a second his fingers trailed along the edge of her pubic hair. That was when she pulled his arm back.\n\n\"Hey, take your time,\" she ordered. \"There are things to do.\"\n\n\"Like?\" he asked, kissing her cheeks.\n\n\"Like getting cleaned up. Me showing you around and then lunch.\"\n\nShe slid off the bed to a door on the side wall which Eric had guessed was an en suite. \"Shower first. Then clothes on and a guided tour---see if you approve.\"\n\nAs Eric followed her into the en suite and she turned on the shower, Paula turned back to him and grinned, \"And just a shower---no treats.\"\n\nBut Eric found treat enough in their soaped hands running smoothly over skin. Enough of a treat to have him feeling a slight twitch down below.\n\nIt was while they towelled each other, that Paula went onto her knees, and very briefly showered a range of kisses along his semi erect penis. Then she was up, giving him a seductive wink, before going into the bedroom to pick up her dress and put it on. Eric followed and pulled on his pants and shirt.\n\nThe bungalow was very impressive. Two other bedrooms, with their entrances along the same wall. Paula showed him into one of them, plainer than her own, but neatly furnished in tan shades. \n\n\"The other one is much the same, \" she said, and Eric nodded. A bedroom was a bedroom. Paula showed that the two doors opposite the bedrooms hid a large bathroom, tiled in white and turquoise, and ---\"My study,\" Paula said, swinging the door open with a grand gesture. A large desk in front of a picture window through which Eric admired a superb view of the sea. The desk held a large computer and a laptop, together with piles of papers. Another table held more papers and there was a swivel chair and an easy chair.\n\nThe open door at the end of this corridor showed a kitchen, but Paula steered him back towards the hall, where they turned left into a short corridor and a door that opened onto a huge living area that stretched from front to back. Maroon leather sofa and chairs, thick beige carpet on the floor. A large television was set into one wall, and there was a small bar in one corner with a glass fronted drinks cabinet behind it. All very impressive, Paula watched his reaction as she lead him to the large French windows at the rear.\n\nPushing open the doors Paula led him onto a wide covered porch area with a decking floor, a bench seat and two patio chairs. Then there was a large lawn with simple bright annuals trimming the outer edges, and beyond a low hedge, a fantastic outlook to the sea.\n\n\"Torbay on your left,\" Paula said, and as Eric turned that way he saw a metal framed swing, and he looked at Paula curiously.\n\n\"There when I bought the place. Haven't had the heart to move it.\"\n\nAll in all, Eric was very impressed and certain thoughts began to impinge on his brain. As if reading his mind Paula asked, \"Think you could live here--with me? Share the studio for our writing.\"\n\nHe put his arms around her, \"I'm positive I could share anything with you.\" \n\nShe smiled, \"Then you need to cancel your hotel room, and let your agent know you have a new address.\"",
        "\"You're sure of this.\"\n\n\"I've never been so sure. Now let's have a quick light lunch and think how we might spend the afternoon.\"\n\n\"Any ideas?\"\n\n\"A couple,\" she replied, treating him to a wicked grin. Paula was looking forward to how she saw the afternoon panning out. There was just a little apprehension about later, but she suppressed it, and sat close to him as they consumed eggs benedict, which was one of her cooking specialities.\n\nEric sat back, and sighed, \" If the cooking's going to be like this I might just stick around for it.\"\n\nPaula smiled, as she stood up. \"Haven't I got anything else to tempt you.?\"\n\nWithin two minutes they were at the bedside, naked, and clinging to each other in a hungry kiss. Paula felt his erection along her belly, and she pulled away and eased Eric onto the bed. \"Lie back,\" she ordered. \"This is my party.\"\n\nEric closed his eyes as her tongue ran along the underside of his hardened cock. \"Eric the Erect. That's what I'll call you----in private.\" He smiled at her words and then shuddered as her lips closed around him and her tongue dabbled at his warhead. Then she was moving her head back and forward, taking him to the back of her throat, sucking and releasing, withdrawing then taking him back. Eric was sure he wouldn't be able to take much more of this lavish attention.\n\nPaula felt a long lost comfort in having him in her mouth, adoring him like this was something that just hadn't occurred with either of her husbands. But on this occasion she had no intention of taking him all the way with her mouth. In her mind was something she had longed to try with him.\n\nHearing his breath become harsher, she drew back her head, took his penis in her hand, and climbing onto the bed, she straddled Eric, holding his rigid member under her before lowering herself so that she was ecstatically skewered on it. That first movement went so deep that there pubes met and mingled. He was so good inside her, and she began heaving up and down. Riding him.\n\nEric had been in a daze from the attentions of her mouth, counting down to spurting into the back of her throat. When she released him, he was a little disappointed. But almost immediately as she held him with her hand he defined her intention, and within seconds he felt his pounding cock, riding up the heavy moisture of her vagina. It was fantastic having her up above, where he could see her beautiful face and that generous body. As she rose and fell drawing him back and forth into her wet warmth, he reached up and caressed her breasts, stroked the curve of her waist, the incredible smoothness of her thighs that gripped him. Then she leaned down to kiss him and he felt her adjust herself slightly so that he seemed to be entering her from a different angle. \n\nWhat Paula was doing was ensuring Eric's erection was gliding along her clitoris on each stroke. And the feeling was exquisite. She looked down into his face and saw that he was close, as he tried to heave up under her. The new position was lifting her up and beyond. She sensed herself opening wide inside as though all her lower organs were hungering to share this moment. Then Eric gasped, \"Paula, Paula.\" And with one hard, solid grinding action she brought herself to that release point and she was gone, away on that mad elation, as she felt him, huge inside her, straining and emptying beneath her. \n\nEric could not recall a coming as powerful as this, and he was sure as he spurted inside her that she was climaxing with him. The air seemed full of their mutual cries, grunts and gurgles. She collapsed on top of him and he was stroking his fingers through her moistened tawny hair.\n\n\"We were together then, weren't we?\" he murmured.\n\nStill panting she whispered, \"We'll always be together.\"\n\nThey lay quietly with Paula on top, until she felt his weakened penis slipping out of her, and she reached across to the bedside table to snatch a handful of tissues. She rolled to one side of him and wiped between her legs, handing him a few tissues.\n\nRolling on his side to face her, Eric asked,\" Was that the double you talked about?\"\n\n\"Double?\"\n\n\"You said my first visit would be a double special occasion. That time. Did it make it the double?\"\n\nShe laughed, \"No, the double aspect comes later.\" And although she laughed she still had that uncertainty. Surely now, it would be all right.\n\nAfter a while she said, \"Come, let's shower.\"\n\nEric followed obediently, and even as he watched her beautiful rear as she reached in to turn the water on, a lovely idea came to him. A reversal of a previous shower experience with her.\n\nSoon they were standing face to face, lavishing each other with eager hands, each trembling when the washing took their hands to their intimate areas. Eric, for his part, knew, as his soaped fingers ran through the thrilling sensations of the grooved bush between her legs, that this was a precursor to what he intended.\n\nPaula enjoyed feeling the tenderness of his flaccid penis. She had begun wondering when it might rise again. But even as she handled him, stroking, squeezing, she was sure there was a flicker of movement.\n\nThen they were rinsing under the steady stream, and Paula was recalling that seven year old incident that he had written about so vividly, his penis immense and warm in her mouth. As the recall came to her, Eric moved his face down to her breast where he licked and sucked at her nipples, before moving swiftly down over her belly. She heard his whisper, \"My turn, Paula. My turn.\" Oh, God, was he going to---- Oh, yes. And as his flickering tongue touched at the beginning of her cleft, she murmured his name. \n\nEric's tongue licked gently at the subtle groove, heard her soft call of ,\"Oh, Eric.\" He sensed her thighs parting, so she was standing astride, offering him full access. On his knees, he leaned into her, pushing his tongue deep along her moist labia. His hands gripped the back of her thighs, before making slow, searching movements, so that his fingers tickled around her anus, slipping inwards to her vaginal opening.\n\nEric was aware that Paula's thighs were beginning to tremble, as his tongue found and flicked at her clitoris. As it swelled under his ministrations he closed his lips around it and sucked gently. \n\nPaula had her head flung back, knew her mouth was agape, and between her thighs she was on fire, as Eric's fingers promised to pierce into both her lower orifices. But her legs couldn't be trusted. They were trembling. Desperately she grasped at Eric's head, and cried out, \"Enough, Eric--My legs will collapse.\"\n\nEnjoying the whole sensation of plying his mouth in the mixed moisture of her, Eric rose reluctantly at Paula's plea, allowing his hands, lips and tongue to trace upwards over her curves, until they were face to face once more. Her blue eyes were clouded with repressed passion. Having this kind of effect upon her gave Eric such a lift, and he was aware, as they came together, that his cock was semi-erect.\n\n\"Let's get dry,\" Paula whispered.\n\n\"I don't want you to be dry everywhere,\" Eric laughed, and Paula joined in, murmuring, \"I never am when you're around.\"\n\nThey were quickly dried and as they cast the towels onto a chair, Paula knelt to kiss at his rising penis. Eric instantly put his hands on either side of her and grunted, \"No, Paula. This time it's my party.\"\n\nPaula looked up into his resolute eyes, and as she stood up, she thought how good it was going to be to have a man who could be dominant when the situation called for it, but equally, would be submissive when she desired him to be.\n\nAs he laid her back on the bed, Eric could not prevent the memories of the last time he had performed this very act, on this very bed, all those years ago. Only now he was a much more mature and experienced person.\n\nSlowly he lowered his face down into her bushy heaven, as his fingers traced back between her thighs. Her clitoris was already up and eagerly awaiting the lavish lapping of his tongue. Exhilarated by the creaminess, by the muskiness, Eric licked and sucked at her spot, while he moved his fingers to spread, introducing the index finger into her vagina and his middle finger into the rim of her tight anus. Already infused he was overjoyed to hear Paula's almost agonised whimper of pleasure.\n\nPaula knew that after the shower, it wasn't going to take much to set her away. The lapping of his tongue was pure joy. Fingers at her two orifices were raising her feverish move towards ecstasy. Then she felt his finger enter her anus, harsh only briefly, then amazingly delightful as he pushed deeper, making her want to open up. That and the other finger circling inside the inner walls of her vagina held her in a triple thrall. Clitoris, anus and vagina were flaring, her thighs were trembling, her whole body was aflame. She was so near.\n\nEric was very aware of the his effect on Paula. His face, lips, fingers and ears were recording every nuance as her body absorbed every application he was making. And he knew exactly what direction he wanted to take her, the joy he wanted her to experience. Accordingly, he continued his licking and probing, his fingers plunging, withdrawing and plunging again, faster and faster. Her heavy breathing became harsher, as guttural sounds escaped her lips. Her hands flapped feebly at his head, as she squeaked, \"Eric, Eric. I'm--I'm--\"\n\nEric's only response was to plunge his busy fingers ever deeper and harder. And he knew she was gone.\n\nPaula, in a state of euphoric frenzy, expected Eric to come up and enter her. She longed for his hot metallic hardness inside her, but he wasn't stopping. He had to. She pleaded. She was going to be over the edge, and he would lose her. Then his fingers seemed to be searching for her very soul and she couldn't stop herself. Her body slid into that cavern of joy, and she was heaving against his face, wriggling on his fingers, as her mind fled, and the noises she heard, all the sensations that rocked her, were all hers.\n\nEric had to ride her orgasm, like some skilful rodeo rider, loving the facts of what he was giving her, but gaining pleasure himself from thrilling her like this. And he continued, as her body rocked, threatening to dislodge him, before he sensed her slowly calming. But now it was time for the second stage of her pleasuring, although it could surprise her.\n\nPaula was slowly coming down to earth, as she realised that Eric was continuing his tonguing and fingering. Then he wasn't. His head came up, slack mouthed, his eyes on her face. His head nodded as though telling her something, as he settled between her thighs. Paula knew that he must be going to enter her. She reached down to guide his loaded penis. He had to be able to expel that load, and she was genuinely hoping he would enjoy it, now that she was finished.\n\nHardly needing her guidance, Eric had his cock delaying at her vaginal opening, wet and wide. He guessed that she was probably thinking that her release was completed. Eric's intention was to prove her wrong, in the nicest possible way. Now he slid into her depths with one long stroke.\n\nPaula loved that first long glide inside her. The immensity of his erection never ceased to amaze her. His next three driving strokes were so vigorous, so deep. He must be trying to ejaculate quickly. To aid him in this she heaved her hips up at him, trying to match his pace which was getting quicker and quicker. And, oh, it felt so good.\n\nEric knew exactly what he was doing. He eased the fast, hard thrusting, to a slow, long retraction, and equally gentle glide back to her cervix. This he repeated five or six times, always gauging Paula's reaction.\n\nWhen the pace changed, Paula thought he was slipping out of her, and she felt a wave of disappointment. Then that slide up into her again, ever firm, ever strong, and repeated. Suddenly the thrusts speeded up again, plunging into her vigorously. God, this had her tingling and she was beginning to hope that he didn't expel too quickly.\n\nEric's tightening scrotum told him he didn't have too long. Time to move to stage three. He shifted his position over her slightly, so that his erection instead of heading directly up into her, slid initially over her clit. By continually adjusting his hips he was able to accomplish this slightly awkward entry. But he heard her sharp intake of breath, drew back his head to see her eyes closed, lips parted. He placed his mouth against hers and her tongue came at his like a viper. Finger nails dug into his back.\n\nPaula had been quietly enjoying the lift shaft sensations in her lower body. But her intention to aid him had been quickly forgotten. Then she felt another change as his body lifted higher, and instantly she felt his shaft tease over her clit and she gasped with the sheer pleasure of it. That thrust was coming again. Suddenly she was all a-tingle, all aflame in her vagina, her limbs, all over. Surely she couldn't be having a second orgasm. But with each renewed stroke from Eric's controlled penis she knew she was slipping over that delicious edge once more. More than that, it was going to be massive. She stopped any logical thinking, as she skipped out of body, onto a different plateau of bright lights, electric sparks and sheer, sheer erotic gratification.\n\nEric knew it. He had her. Her gasps, her threshing about, told him. Now was the time to release. He changed to direct thrust right into the very heart of her. On the third thrust his warhead struck something inside her and he was spurting once again, locked deep inside her, as their perspiring bodies clung and rocked together. He moved out of himself as his lips found hers in a grateful kiss. Grateful for both of them.\n\nLying side by side, they began to calm slowly. For Paula it was like coming from a sublime place, somewhere she had never been before. Could it be that being with Eric gave her this journey every time? \n\nAt last she found her voice, \"That's the second time I've floated twice. I didn't expect that.\"\n\n\"That was my intention. Mind you, can't expect that every time.\"\n\n\"You're definitely a more experienced fellow.\"\n\n\" I've just realised, if I hadn't written that book, our meeting again might never have happened. You are the best royalty of all.\"\n\nPaula kissed him and they were silent for a while. Then she remarked, \"Do you know, there have been only two separate days when we've had sex, and on both occasions it has been three times in a few hours. Do you think we'll do that often?\"\n\nEric laughed, \"If we do, I'll be dead by the time I'm twenty seven\"\n\nPaula nudged him, laughed and yawned.\n\nThey lay silently.\n\nSuddenly Paula raised her head. Had she dozed? Glancing at the bedside alarm she saw that it was quarter past four. God, she had to move. What if she had overslept? She slid from the bed and looked down at Eric. He looked to be sound asleep. Just as well for the time being, and she hurried through to the en-suite, quickly showered, and went to a wardrobe to select some underwear, a white blouse and a pale green cotton skirt.\n\nDressed, she quietly left Eric sleeping and closed the bedroom door tight behind her.\n\nEric wasn't sure what woke him up. He lay for a moment. Somewhere he could hear pans, and dishes. The sounds of a meal being prepared? He smiled and went over to the window. The bedroom faced out of the side of the bungalow, and he could see the curve of Torbay coast. \n\nEric had a shower, put on his pants and shirt and moved barefoot out of the bedroom. The thick carpet felt delicious under his feet. He walked towards the kitchen. Paula was at the sink, and Eric could see that the outside door led out onto the porch area.\n\nPaula turned as he entered. Now was the telling moment. She resisted Eric's attempt to embrace her. \"Time for the double surprise.\" she whispered, and guided him to the back door, and out onto the decking. God, please let this work out well.\n\n\"Ah, at last,\" Eric said with a smile, \"What is it? An outside barbecue?\"\n\nThe decking felt smooth under his feet. The sun was still bright and the sea beyond was silver. But Eric's eyes were immediately drawn left. A little girl was playing on the swing. She was wearing a fresh blue dress, with a wide brimmed sunhat.\n\nEric's eyes widened, \"Who's this then?\"\n\n\"The reason why my timing has been erratic. I have Mrs Bourne collect her from school. She looks after her when I need her to. That is my daughter,\" Paula said, watching his face nervously.\n\n\"Your ---\"\n\nHis surprised question was cut short by her calling across, \"Erica, come here, darling.\"\n\n\"Erica?\" Something pinged inside Eric.\n\n\"She was six years old in June,\" Paula told him meaningfully. The girl was letting the swing slow down..\n\nGiven his initial shock, Eric was compelled to do the maths, counting months forwards and backwards he came to the mind shaking answer---one hot September afternoon. He looked at Paula. Her face had an bland Mona Lisa look. He found his voice, \"Why didn't you tell me?\"\n\nPaula held out her hand to take his, \"When I first realised I was pregnant I thought to tell you. But I had no idea where you were. Then I had to consider how much it might disrupt your studies, your life.\"\n\n\"But when we did meet, weeks ago--?\"\n\nPaula nodded, \"The temptation was strong, but can you see? I had to know. Had to find how committed you were--- I didn't want any dutiful response from you. I'm sorry.\"\n\nThe girl, Erica, was running towards them, her hat had blown to the back of her neck, and Eric was taken by the tawny hair that flared out around her delicate face, which as she came closer, made her a clone of her mother. \"Don't be sorry. You were thinking of me. I appreciate that.\"\n\nLittle Erica was in front of them, looking at him curiously, and Eric saw that the only features that stopped her being exactly like her mother were the eyes---brown eyes. \"Hello, Erica,\" he said, his voice croaking with emotion..\n\n\"You notice the eyes?\" Paula said quietly. \"I've seen them every day. Every day, reminding me.\"\n\nErica took a step closer and pointed down, \"Haven't you any shoes?\"\n\nEric smiled at her. He had a daughter. She was beautiful. His breathing eased a little as he said,. \"My toes like to say hello to people.\"\n\nErica frowned and looked up at Paula, \"Toes can't speak. Can they, Mum?\"\n\n\"But they like to wave at pretty girls,\" Eric said, and he waggled his toes. \"See?\"\n\nErica giggled again, \"He's funny, Mum.\" She gave Eric a long hard serious stare before adding, \"Is this one going to stay?\"\n\n\"This one is your real daddy.\" And Paula laid a hand on Eric's shoulder, so relieved at his acceptance of the situation.\n\n\"Like Jennifer has a real daddy?\"\n\n\"Exactly like that.\"\n\nErica came closer to Eric, and he sat down on the step to be level.\n\nHis daughter reached out and, as though to prove he was real, touched Eric's hand---and his heart. \"I've never had a real Daddy.\"\n\n\"Would you like me to stay?\"\n\n\"Can he stay, Mum?\"\n\n\"If he wants to.\"\n\nErica turned her blue eyes back to Eric, \"Do you want to?\"\n\nEric drew in a deep breath, \"Only if you give me a big hug.\"\n\nWith amazing haste, Erica threw her arms around his neck. Eric felt them tighten as he held her close, and he thought his heart would burst. Paula's hand on his shoulder, gave a gentle squeeze, as Erica stepped back.\n\n\"Why are you crying?\" Erica asked.\n\nEric brushed at the tear that trickled unbidden on his cheek, \"Because I'm very, very happy,\" he said, and Paula leaned down and kissed the top of his head."
    ],
    "authorname": "Rex Siter",
    "tags": [
        "drama",
        "romance"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/exorcising-brian-ch-02"
}