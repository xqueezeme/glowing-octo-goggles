{
    "title": "An Undeniable Passion Ch. 22",
    "pages": [
        "With a small cry, Virginia bolted upright in bed, her head still swimming from the dream she had just awoken from. Her heart was pounding and she shivered from the thin sheen of sweat covering her trembling body. Shimmering visions of her dream floated through her mind, Drake passionately making love to her, teasing her senses, stretching her nerves taut with lust and desire.\n\nHer thighs were clenching and shaking and with a sudden loud gasp, she reached the climax she had been searching for in her dream. With a groan of frustration she fell back against the sheets. Her desire for him had been bad enough when he had been away but with him constantly around, tempting and teasing her, it was quickly becoming unbearable. She knew there was only one way to ease her torment, but it was unthinkable. Inviting him back into her bed would only satisfy her momentarily and cause more misery than the temporary relief was worth.\n\nTwenty minutes later, as she sat on Liberty staring at the darkened windows of the out-building, she repeated those words to herself, but found that she still didn't turn her horse back to the house. I must be out of my mind to even be out here, she thought to herself. I should just go back to bed. Unbidden, images from her dream again flooded her mind, causing her breath to catch.\n\nDrake stood inside peering at her from behind a small part in the curtains. He had been sitting in the main room of his small house, unable to sleep. In the dim light of the moon shining in through the window he had been staring at the calling card given to him by the pretty blond from the ball. He was getting nowhere with Virginia, and his attempt to ruin Thomas' interest in her had failed and he was beginning to think that maybe he should just try and forget her. The pretty blond was a young widow from France who had boldly told him that she would be more than willing to satisfy him in any manner he wished. Gazing at the card, he had wondered if a dalliance with her while his ship was being repaired would be enough to distract his mind from Virginia. When his ship was ready he would then sail away, never to return, forgetting all about Virginia, Williamsburg and the pretty blond.\n\nWith a groan of frustration, he had dragged his fingers through his loose hair, knowing that there was nothing on this earth that would erase Virginia from his mind. He had been about to throw the card into the glowing embers in the grate when he'd heard a horse approaching. Wearing only a pair of breeches, he dropped the card to a side table and slipped his arms into a shirt before going to investigate.\n\nWhat was she doing out here and why was she just sitting there, staring at the cabin, he wondered. He watched as she tipped her head back, staring up at the stars and sigh heavily, her breath coming out in puffs in the cold night air.\n\nShe hung her head, confused emotions swirling in her heart. Unable to forget how she had reacted to his embrace on the balcony during her Christmas Ball made her wonder how she truly felt about him. Was it only lust, is that what she was doing out here? Trying to finish what had started that night? Or was it more?\n\n\"Are you going to sit out here all night?\" The soft, deep voice startled her and her head jerked up. Drake was standing on his small veranda staring at her, his open shirt lifting slightly in the light breeze.\n\nWatching her, he saw her eyes roam over the muscled planes of his exposed chest and abdomen taking in the intoxicating view of his bare flesh. He could see the hunger blazing in her eyes and confirmed his suspicions of why she had come. He also knew why she wasn't coming any closer. Stepping to the edge of the small porch, he extended his hand. \"Come inside V. It's cold out here.\"\n\nIndecision stormed in her eyes. \"Come on. It's warm inside,\" he gently urged.\n\nWith intending to, she slipped from the saddle and knew that she was lost. She would not be leaving the small house any time soon. On unsteady legs she ascended the steps to his front door and went inside.\n\nIt was indeed warm inside, but it did little to alleviate her trembling. With shaking fingers she unbuttoned her coat, as he stood behind her, pulling it from her shoulders, when her eyes fell on the calling card laying on the table. Picking it up, she read the name, Marie Aubert. \"What is this?\" she asked, holding up the card.\n\n\"It's from a woman at your party,\" he responded casually. Perhaps jealousy was a way to make her realize her feelings for him. \"She invited me to call on her, and I'm considering it,\" he said, restarting the fire in the grate.\n\n\"Oh?\" she asked warily, unsure how to feel about this. She had been glad that he had danced with so many women at the ball, but she didn't think he would seriously consider calling upon any of them. Striving to keep her voice light, she questioned, \"Which one was she? Doris created the guest list, I didn't know most of the people there.\"\n\n\"A pretty blond. A couple of years older than you, a young widow. Her husband died on the crossing from France. These cards are quite popular there.\" He plucked the card from her hand and slid it into his pocket. \"She was quite earnest and frank in inviting me to her home,\" he said with a wicked smile. \"Since you're so insistent that I stop bothering you, maybe I'll begin to bother her.\"\n\nVirginia swallowed nervously, surprised to feel jealousy surging through her. She didn't want him 'bothering' anyone else. Especially not a pretty, young widow.\n\n\"Unless you would rather I didn't,\" he teased.\n\nFrantically she tried to come up with a reason for not wanting him to call upon her. When she couldn't think of anything that wouldn't reveal herself to him or sound hypocritical, she could only say, \"Who you see is of no matter to me. I hope you find her to your liking.\"\n\n\"She said she's willing to satisfy me in any way I wish, so that already makes her to my liking. I haven't had another woman since you, my dear, and your confused and volatile emotions are beginning to wear me down. I'm afraid I've lost the desire to fight for you any longer.\" He pulled the card from his pocket and gazed down at it. \"Yes, perhaps an attractive, willing woman is just what I need until my ship is repaired.\" Slipping the card back into his pocket, he glanced up at her. \"But enough about my frustrated desires. What brings you out here in the middle of the night?\" His eyes were dancing with amusement, knowing that it was her own frustrated desires had driven her to him.\n\n\"I...um...I...\" Her brain churned furiously, desperate to think of a reasonable explanation for her midnight visit.\n\nApproaching her, he gently pulled her to him. \"I know why you've come. You can't stay away from me anymore than I can stay away from you, can you?\" he asked, his voice low.\n\n\"No, that's not-\" he quickly pressed his lips to hers, cutting off her protests, pulling her tightly against him. Refusing to admit that she wanted him so badly, especially when his interest in her was waning, she pushed at his shoulders, wrenching her mouth from his.\n\n\"How dare you assume that I came out here for that! You really do think highly of yourself, don't you? Assuming that every woman around wants you. Well not me. You can have your little, French, blond widow,\" she sneered, trying to pull out of his embrace.\n\nWithout releasing her, he walked her backwards, until her back was pressed against the wall. \"I don't want any little, French blonds. I only want you, my fiery, English red head. Only you,\" he whispered, before his lips again descended to hers.\n\nTwisting her head away, she gasped, \"I don't care what or who you want. Let me go!\"\n\n\"Not until you tell me why you're here,\" he replied, keeping her pinned to the wall.\n\n\"It doesn't matter any more why I'm here. All I want now is to go,\" she all but shouted at him.\n\n\"No, not yet,\" he purred, a lusty smile curling his lips.\n\nShe stared down at him as he dropped to his knees in front of her. What in the world, she thought as his hands reached for the tips of her shoes peeking out from beneath her skirts. Her breath caught in her throat as his large hands slid over her slender feet and then up and around her slim ankles. Slowly, he drew his hands up her calves, his arms pushing her skirts up as he went.\n\n\"No stockings this evening, Miss Templeton?\" he drawled, his rough hands caressing her bare flesh as they slipped over her knees. His hands slid over her bare thighs until his fingers touched the edges of her pantalets. \"Such scandalously short pantalets, my dear,\" he laughed. \"Are such seductive garments for my pleasure?\" he asked.\n\nShe opened her mouth to retort, but he found the frilly garment's opening between her thighs and only a gasp escaped her lips as his fingers delved inside. He slid through the wet folds of her, seeking and finding her pleasure center. She trembled against the wall, her knees threatening to buckle beneath her as he stroked the small nub.\n\nNot removing his hand, he rose in front of her, cradling her cheek with his other hand as she gazed up at him with lust filled eyes. \"Oh V,\" he breathed as his lips again descended to hers, his tongue being granted immediate entry to her mouth. His hand slid from her cheek down her throat to her breast, where he squeezed her gently.\n\nSuddenly tensing she rose up on her toes, her back arching against the wall. Drake pulled his lips from hers as a harsh cry erupted from her throat, her hands clutching at him, her fingers digging into his flesh. His hand nestled between her clenching thighs was drenched as she climaxed, his continuous stimulation taking effect.\n\nQuickly tearing open his breeches, he easily lifted her in the air. Instinctively she wrapped her legs around him, holding tightly to his shoulders as he slowly lowered her. Crying out with frustration, Virginia wriggled in his arms as he held her suspended with just the tip of his throbbing manhood touching her opening.\n\n\"Please, Drake,\" she panted, her desire to have him fill her burning through her veins.\n\n\"Tell me why you came here tonight,\" he demanded, refusing to lower her.\n\n\"No...please,\" she gasped, writhing in his arms.\n\nHe lowered her an inch, teasing her with just the head of his shaft. \"Tell me,\" he whispered, his voice harsh from the passion he was struggling to keep in check until she said the words he wanted to hear.\n\nHer lust for him won out over her self respect and she confessed. \"You're right, I can't stay away from you. Take me Drake, take me. I can't stand it anymore,\" she pleaded. \"Take me and end this agony.\" He had a quick recollection of her saying those same words the night she had seduced him in his cabin as he gazed into her glowing eyes.\n\n\"And young Madam Aubert? How do you feel about her?\" he teased.\n\n\"To hell with Madam Aubert! Please, Drake, take me!\" she begged, her frustration getting the better of her. A loud cry burst from her as he suddenly dropped her onto himself, fully penetrating her with one thrust.\n\nHolding her around the waist, against the wall, he drove into her and was surprised by her almost immediate climax. Gripping her tightly with one arm, he pulled her away from the wall, and tore at the laces on her gown with his free hand. They came loose and she pulled the gown off over her head as he carried her to the couch. Laying down with her above him, she began to ride him, her own fervent desire setting the pace. She leant over him, offering her breasts to his lips, and squeezing them gently, he sucked an erect nipple into the warm confines of his mouth.\n\n\"Oh, Virginia, you are so beautiful,\" he murmured, switching from one breast to the other. As usual when he was with her he was in heaven. The world was never better than when their bare flesh connected and she was filled with desire and lust for him. He also knew she was filled with love for him, but just didn't seem to realize it.\n\nVirginia sat above Drake, watching as his full lips closed around her nipple. His other hand gently squeezed her breast, tweaking the nipple. She rode him with all the lust coursing through her, hoping to erase any thoughts of taking up with another woman. It was selfish, she knew that, but in this moment she didn't care, she could figure it out later.\n\nSurprising him, she suddenly rose and moved down the couch, her lips hovering above his glistening cock. For a moment she stared into his eyes, glowing golden in the flickering light from the fire, before she lowered her head and slid him into her mouth.\n\n\"Oh dear God, V,\" he groaned as her lips closed around him. Hungrily she sucked on him, taking him as deeply into her mouth as she could. His groans of pleasure were the sweetest music to her ears and she did her best to pleasure him. His back arched up off the bed, the hand in her hair clenching as he climaxed, his seed suddenly filling her mouth and she swallowed every drop, neatly cleaning him off.\n\nGazing up at him, she drank in the view of his powerful body sprawled before her, his eyes closed, his chest rising and falling rapidly. His hand moved, releasing the hold on her hair. Opening his eyes, he said, his voice soft and low, \"Come up here.\"\n\nShe nestled against his side, content to just lay with him, her flesh pressed to his. \"Why are you here?\" he asked her.\n\nShe hesitated before answering, afraid of the words that would come out of her mouth. \"I just couldn't stay away. I had to have you again.\"\n\nHesitating, worried she might get angry but needing to know he asked, \"Me, or what we just did? Do you think Thomas could have satisfied your needs?\" he asked.\n\nShe was thoughtful, considering his questions. \"You and what we just shared is what I came for, and I'm not sure if he could. You're the only man I've ever been with so I'm not sure how it would be with some one else.\" Thinking for a moment she asked him, \"How does it feel to be with other women? Has anyone made you feel the way you do with me?\"\n\nChoosing his words carefully, he answered, \"My other experiences left me ultimately feeling empty. They were satisfying while they lasted but that's all. With you it's different.\" Tipping her chin to look into her eyes, he continued. \"The feeling with you lasts and makes me want more. And the longer I deny myself the more I want you, need you. I have to have you, V.\" He punctuated his statement with a kiss that stole her breath away, and ignited both their passions once again.\n\nIt was just before dawn when Virginia mounted Liberty and rode back to her house. They had made love twice more before she had slipped from his bed, making sure to take Madam Aubert's card with her. Drake didn't miss it.\n\nBack at the house, she stood before her own fireplace staring down at the calling card. Would he have really called upon her? He had made it quite clear that she had invited him to have an affair with her and he was right about how confused she was when it came to sorting out her emotions for him. Once again, she acknowledged that her jealousy was unfounded, after all she was being courted by someone. Was it unfair of her to want him constantly on the side lines, chasing after her, accepting her affection when she chose to dole it out to him? Yes, it was unfair, she admitted.\n\nBut why was she jealous? Because it was flattering to have such an obviously desirable man interested in her. But then again, Thomas was desirable and he wanted her. Even though he wasn't as blatantly handsome as Drake, he was attractive in a smaller, more refined way. When she really thought about it, Drake's good looks were almost obscene in their raw maleness, in the pure sexuality he exuded. Thomas was a much more sensible choice for a husband, and besides, Drake wasn't going to stay in Williamsburg. Once his ship was repaired he would be gone and she most likely wouldn't see him again until well after she was Mrs. Ogilvy if indeed she ever saw him again.\n\nOh, who am I kidding, she asked herself, her shoulders slumping. I'm crazy about him, if not completely in love with him, she finally admitted to herself. So now she was in a situation where she loved a man who was going to vanish from her life in a few months and another that she liked well enough, but would never love, who was never going to leave her.\n\nWith a sigh she tossed the Madam Aubert's calling card into the fire and crawled into bed. She couldn't possibly figure this out right now and decided to think about it after she had slept.\n\nThe next few days were such a blur of activity that she didn't have a chance to consider Drake or her tangled feelings for him. It was the night before the wedding and Virginia had arranged a lavish dinner for Elizabeth and her family, Billy and Drake. They went over the plans for the next day and drank many toasts to the soon to be married couple. After dinner, while relaxing in the sitting room, Mr. and Mrs. Robbins declared that they were exhausted and went up the spare bedroom, where they were spending the night. After they were settled, Virginia, Drake, Billy and Elizabeth moved to the library.\n\nBilly retrieved two more bottles of wine and filled everyone's glass. They were joking and laughing and enjoying themselves a great deal. Billy rose from his chair and standing before Elizabeth, he asked, in a not quite clear voice, \"My dearest love, would you care to dance?\"\n\nShe giggled and replied, \"But Billy there's no music.\"\n\nHe stood as though listening. \"Ah, but I hear music. It is your beauty and our love that fills my heart with song. Come, dance with me.\" He pulled her to her feet and twirled her out of the room.\n\nBoth Virginia and Drake laughed as they watched them go. He rose, picked up the wine bottle and filled her glass before sitting next to her on the couch. They clinked glasses and said in unison, \"To the happy couple.\" They both laughed.\n\n\"So my dear V, when are you going to finally break down and marry me?\"\n\n\"Break down and marry you? You've never even asked me,\" she replied, still laughing.\n\n\"What if I did?\" he asked, suddenly serious.\n\nShe laughed again, trying to lighten the mood, but saw the look in his eyes. \"I don't know. Are you proposing right now?\" she asked lightly.\n\n\"Maybe.\"\n\nShe turned and looked at him, her heart suddenly pounding. \"If this is some kind of joke or another of your games, I don't like it one bit,\" she said indignantly, suddenly terrified that he was serious.\n\nHe leaned back against the couch and took a sip of wine. \"You can relax, my dear, I'm not proposing.\"\n\nShe sighed and leaned back as well. She was trying to decide if she was relieved or disappointed, when he said, \"Not yet, anyway.\" He paused for a moment. \"But I will someday.\"\n\n\"Not if Thomas beats you to it,\" she teased.\n\nHe sat up and stared at her. \"You're not going to marry that fool.\"\n\nWith sparks of anger flashing in her eyes she retorted, \"He is not a fool. And I will marry whomever I choose and it may very well be Thomas!\"\n\n\"He's not half good enough for you,\" he replied.\n\n\"Oh and I suppose you think you are?\" she mocked.\n\nCalmly he said, \"Yes, I am. I've told you many times already, I'm the only man for you and you're the only woman for me. We belong together.\"\n\nGoading him, she said, \"Well then, why not ask to marry me now? If we're destined to be together, why wait?\"\n\n\"Because you're not ready,\" he said, taking another sip of wine.\n\nAngry that he was being so condescending, she asked, \"What do you mean I'm not ready? You obviously think I'm ready to be taken to bed, but not ready to be your wife?\"\n\nHe stood and drained his glass. She nervously watched as he placed it on a side table and then got down on one knee in front of her. He looked up at her wide green eyes. \"You think you're ready? Fine then.\" He cleared his throat. \"Miss Templeton, will you marry me?\"\n\nUtterly dumbfounded, she stared at him. Her heart was pounding and she suddenly found she couldn't breathe. The moment stretched into an eternity and all she could do was stare at him. She tried to speak but couldn't find any words, she had no idea what to say. Her mind couldn't seem to comprehend what was happening.",
        "Finally he stood and sat beside her again. She was still staring at the spot where he had been kneeling. He took her wineglass from her hand and took a sip. \"Well my dear, that was a stunning display of readiness.\"\n\nWhen she didn't reply he glanced at her. She was still staring at where he had been kneeling. Suddenly concerned he shook her gently by the shoulders. \"Virginia are you alright? Say something.\"\n\nShe slowly turned to him, her eyes still dazed. She looked at him, blinking rapidly. She stood and walked slowly over to the billiards table. Idly rolling a ball, she said quietly, \"I guess you were right.\"\n\nHe refilled their glasses and walked over to her. Handing her glass to her he said, \"I'm sorry, my dear. I didn't think it would have such an effect on you.\"\n\nShe put down her glass untouched. \"I'm suddenly very tired. I think I'll go to bed. Goodnight,\" she murmured, heading towards the door.\n\nHe put his hand on her shoulder, turning her towards him. He saw the tears shimmering in her eyes even though she kept them lowered. He put a finger under her chin, trying to tip her face up to him, but she twisted her head away. \"V, please...\" he said quietly. \"I didn't mean to upset you.\"\n\n\"I know,\" she said in choked voice. \"You didn't mean any of it.\" She turned and ran from the room and up the stairs.\n\nShe closed and locked the door behind her and then flung herself on the bed, weeping into the blankets. She wanted to believe that he had meant it but had known that he didn't. He was only mocking her. Why did she always set herself up for these things? It was her own fault. She knew better than to goad him, every time she did he ended up winning. He always won and she always lost.\n\nDrake took a large swallow of wine and sank down onto the couch. He hadn't let on, but as he had knelt before her, his heart had been pounding and it took every ounce of his self control to keep his voice even. He had been elated that she was so stunned she couldn't even speak. He had been expecting her to laugh at him and call him a fool. But he had seen it in her eyes, seen that spark of hope that he was being serious. The next time he would be, when she was ready for him, when she finally admitted that she loved him.\n\nShe woke hours later and peered up at the windows and saw that it was still dark out. She rose slowly and took off the dress that she had cried herself to sleep in and pulled a night gown over her head before climbing under the blankets. She drifted back into an uneasy sleep tormented by nightmarish dreams of weddings where the groom kept changing between Drake and Thomas.\n\nAwaking the next morning, she thanked the heavens that she didn't look anywhere near as bad as she felt. Her head was pounding and that train was running through her head again, but not as a loud as before. She pulled on a house coat and walked downstairs. The servants she had hired for the day were already busy preparing breakfast. Billy had slept at Drake's house the night before and Elizabeth had slept in Billy's room. Elizabeth and her parents were just sitting down to breakfast when she arrived.\n\nThe wedding was set for later in the afternoon, so they had a long leisurely breakfast. Mr. Robbins went to Drake's house to see how they were getting along over there, while Mrs. Robbins went to the kitchen to check on progress there.\n\nVirginia and Elizabeth were upstairs in Virginia's room, laying out the wedding dress. \"It's a beautiful dress, Elizabeth,\" she said.\n\n\"Thank you so much for helping me with it. It never would have looked so pretty without your help.\"\n\nElizabeth slipped behind a screen and began to change her clothes. She put on pretty new underclothes and came out with her corset loosely laced. Her mother arrived then and began pulling it tight. \"Dear, there is something I must talk to you about,\" the older woman said.\n\n\"What is it mother?\" she asked, holding onto one of the posts of Virginia's bed.\n\n\"Well, it's about tonight, when you and Billy are together for the first time,\" she said briskly.\n\nElizabeth lowered her eyes and blushed guiltily. Her mother of course had no idea that she and Billy had already been to bed together and took the blush to be one of shyness and continued. \"You may be scared but just try to relax. The first time may not be very good but it will get better. I even learned to enjoy it,\" she said with a giggle. She gave the corset ties a final tug and then tied them off. Just then, a loud crash was heard from the kitchen. \"My dear, I better go see what that was about.\" She bustled out of the room.\n\nAs soon as she was out of earshot, Elizabeth began to laugh. Virginia looked at her with surprise. \"Oh Virginia, that was most amusing!\" Sobering she said, \"But I have a confession to make.\"\n\nVirginia spoke before she could continue. \"I know, Elizabeth.\"\n\nElizabeth looked at her with wide eyes. \"How do you know? Billy didn't...\" she trailed off.\n\n\"Oh heavens no,\" she laughed. \"I sleep right across the hall! And you and Billy aren't very discreet,\" she laughingly admonished.\n\nShe looked at her with wide eyes. \"Oh, what you must think of me!\"\n\nSmiling at her, she replied, \"No, of course not. You love each other and it's perfectly natural to want to express it that way.\"\n\nShe impulsively gave Virginia a hug. \"Thank you. I was feeling terribly guilty about it, but hearing it put that way, I feel so much better.\"\n\nWanting to change the subject, she said cheerfully, \"I'll go find the girl who is supposed to do your hair.\" She slipped from the room and as she descended the stairs, she thought back over her words, 'You're in love and it's only natural to want to express it that way'. Is that what it meant when she and Drake wound up in bed together? She shook her head. Of course not, it's only lust she thought to herself. Lust and misguided passion.\n\nWhile Elizabeth was having her hair done, Virginia and Mrs. Robbins took the cart and rode out to the out-building. Billy and Elizabeth were going to spend their wedding night there and it had to look romantic. They hauled flowers and candles and fresh linens into the house. Drake had thankfully kept it very clean so they only had to decorate.\n\nThe men helped them carry in their bundles and the women set to work. It didn't take very long and the house was soon transformed. \"At night it will look magical,\" Virginia sighed, rigging a large sheet of lace over the bed as a canopy. She then scattered rose petals over the coverlet. There were bouquets of flowers sitting on the dressers along with several candelabras. She gave the bedroom one final look and then turned to the door. Drake was leaning against the door frame staring at her with a warm glow in his eyes. She started when she saw him and their eyes met. They stared at each other for a moment, both recalling the hours they had spent in his bed only a couple of nights ago, before he lowered his eyes and stood aside so she could pass. \"It looks magical now,\" he said to her in a low voice, as she walked past him.\n\nThe two women arrived back at the house and found Elizabeth patiently waiting for them in Virginia's room. Her hair had been done up beautifully. All that was left was for her to get dressed. She stepped into the gown and it was soon laced up. As she turned to look at herself in the mirror, her mother placed the veil atop her head. The two women gasped at how beautiful she looked. Mrs. Robbins pulled out a handkerchief and dabbed at her eyes. \"You look so beautiful!\" she sniffed. \"Just like an angel.\"\n\nThey went downstairs to the carriage that was waiting to take them to the church. Billy and Drake had gone on ahead of them and were waiting there. Elizabeth was nervous and excited during the short trip. They pulled up out front and Elizabeth slowly got out of the cab. Virginia and Mrs. Robbins made sure her dress didn't drag on the ground as they made their way inside.\n\nVirginia stood inside the front doors with Elizabeth holding her hands. \"You're alright?\" she asked.\n\nElizabeth's eyes were shining and her cheeks were flushed pink. She licked her lips nervously and nodded. \"Yes, yes I'm alright.\"\n\n\"Ready?\"\n\nClutching her bouquet she again nodded.\n\nThey nodded to the usher and he opened the inside doors to the church. The organ began to play and Virginia stepped forward to make her way down the aisle. She saw Billy and Drake standing up at the front. Her eyes went to Drake's and held. This is how it would be if it were us being married, she thought. She felt a familiar chill race down her spine and tore her eyes away from his. She took her place on the other side of the priest from the two men and looked back towards the double doors she had just come through. The music changed and everyone turned back to look as well.\n\nElizabeth on her father's arm, stood in the doorway. Virginia glanced over at Billy and saw him staring at his bride in awe. She smiled and turned back to watch Elizabeth come down the aisle. She reached the front and after her father had sat down, Virginia turned and again Drake caught her gaze. This time she couldn't tear her eyes away. She was drawn into the warm depths as the priest began to address the gathering. Before she knew it, Elizabeth was handing her bouquet to her to hold. She stared at it for a moment before remembering where she was and taking it. She passed the remainder of the ceremony avoiding Drake's eyes, but still able to feel them on her.\n\nBilly and Elizabeth were married and began walking out of the church together. Drake approached her and took her arm to walk her out. She hesitated slightly before linking her arm with his. He placed his hand over hers and she felt her heart flutter.\n\nGuests were already arriving when they returned to the house. The next hour passed in a blur of greeting guests and making sure that everything was going smoothly. She finally had a chance to sit and was releasing a sigh of relief when Drake sat next to her. He handed her a glass of wine and she sipped from it gratefully. \"You look beautiful,\" he said to her.\n\n\"Thank you,\" she replied, her eyes scanning the crowd. She smiled happily when she saw Thomas and Doris arrive. \"Excuse me,\" she murmured to Drake.\n\nHe watched her walk across the ballroom to greet them. Jealousy rose in him as he watched Thomas wrap his arm around her and kiss her on the cheek. He had to expose him to Virginia for the fraud that he was. But he had to be careful and patient. His chance would come.\n\nDinner was announced and the guests began to find their places at the table. The wedding party were all seated together so Thomas was not able to sit with Virginia. Drake, of course, was seated next to her. Mr. Robbins sat at the head of the table and he was at Virginia's elbow. Billy and Elizabeth were seated across from her.\n\nThey chatted pleasantly through dinner, but Virginia had a hard time concentrating on the conversation. Drake's thigh kept pressing against hers under the table and whenever he used his napkin and then replaced it on his lap, his hand would brush her leg. She knew he was doing it on purpose but she couldn't ask him to stop without drawing attention to herself so she just tried to ignore it.\n\nDrake knew he was behaving badly but he couldn't resist. He knew he was unsettling her by the way she kept losing track of the conversation. With amusement, he watched as she desperately tried to ignore his attentions but was unable to. Half way through the meal he decided to give her a respite and pulled his leg away and stopped touching her. After a few minutes, when she realized that he was done tormenting her, she said, her voice barely above a breath, \"Thank you.\"\n\nDrake was about to put a forkful of food into his mouth, when he suddenly felt a gentle touch on his thigh. The grilled pheasant tumbled off his fork as fingers softly traced lazy circles on his leg. He knew it was Virginia and he glanced at her. Her hand was indeed under the table but she was casually asking Elizabeth about her planned honeymoon to England. They were discussing where they were going to go and Virginia was giving advice on shopping in London. Drake could hardly believe she was doing this. She glanced at him and he saw the mischievous twinkle in her eye. She's doing it to get even, he thought. He re-pierced his piece of pheasant and sat back chewing it, enjoying the sensation of her fingers on him.\n\nShe chanced another glance at Drake and saw the self-satisfied look on his face. Her plan was to unnerve him, not to make him happy. She dipped her fingers down to the inside of his thigh and began tracing circles there and happily watched him choke on a sip of wine. Innocently she asked, \"What do you think Drake? What should they see in England?\"\n\nHe cleared his throat and desperately tried to think of something, anything, but her fingers on his inner thigh. He reached down to retrieve his napkin, wiping a drop of wine from his chin, and gripped her wrist in the process. He removed her hand from his leg and now able to think suggested they take a short trip up to Scotland and see the castles in the area. He held her tightly as she tried to pull her hand away. They began to discuss this option and he placed her hand back where it had been. He chuckled softly at her light gasp.\n\nAfter dinner, dancing was announced. Billy and Elizabeth had the first dance of course and then Drake and Virginia and Mr. and Mrs. Robbins joined them for the second. \"Did you enjoy your dinner, Miss Templeton?\" he asked her with a gleam in his eye.\n\n\"Yes, I did, and you?\" she asked him sweetly.\n\n\"Yes, the pheasant was particularly enjoyable,\" he said with a smile.\n\n\"Oh did you like it?\"\n\n\"Very much so. You could say it tickled my fancy,\" he said suggestively. \"However you seemed distracted during the first part of the meal. Was something bothering you?\" he asked innocently.\n\n\"You know very well what was distracting me,\" she whispered at him, giving up the game.\n\n\"The fact that you retaliated only indicated to me that you didn't mind so much,\" he whispered back. When she didn't reply he chuckled softly. \"You can't resist me, can you? You'll use any excuse to touch me.\"\n\n\"What I would love to do right now is slap you. I spotted you as a rogue the day I met you and I haven't been proven wrong yet,\" she hissed at him.\n\n\"Roguishly handsome, I believe, is what your good friend Violet called me.\"\n\n\"That's her opinion of you, not mine,\" she retorted.\n\nShe had been avoiding his gaze during their dance and he commented on it. \"Why won't you look at me V? Let me see those lovely green eyes.\"\n\n\"No, I'd rather not,\" she replied. She didn't trust herself to look at him, knowing how easily she could embarrass herself while dancing with him.\n\nHe again chuckled at her. \"Well, later, when the whole room isn't watching us, will you dance with me again?\"\n\n\"Perhaps,\" she answered airily. \"Unless of course, Thomas manages to claim all my dances.\"\n\nHe gripped her hand tightly, and the muscles at his jaw clenched. He didn't say another word though, and it was her turn to chuckle at him.\n\nThomas did indeed whisk her away as soon as the dance was over and he kept her away from Drake for the next couple of hours. It wasn't very difficult as all the single ladies at the party flocked to him and he danced each dance with a different one. He seemed to have forgotten all about her but was actually watching her very carefully. He saw her slip out the door to the foyer at one point while Thomas was engaged in a conversation with another man. Guessing where she was going he looked up and sure enough he saw her dart through the french doors to the upper terrace. He watched Thomas end his conversation and look for her. Drake saw his eyes coming around to him and he turned and looked at the french doors leading to the lower terrace. He stared at them for a moment and then glanced at Thomas. His ruse worked. Thomas was heading towards them. This was the chance he was waiting for and he quickly followed him outside.\n\nThomas was about to come back inside, not having found Virginia on the terrace when Drake came through the doors. He felt obliged to linger and exchange a few words with the man, even though it was quite clear that they didn't like each other.\n\n\"Ogilvy, I've been wondering something,\" he said, loudly enough for Virginia on the upper terrace to hear him.\n\n\"Yes?\" Thomas replied, trying to sound casual.\n\nDrake lit a cigar and spoke almost conversationally. \"You were out here during the last party while Virginia and I were on the balcony and I know you heard our entire ... conversation ... yet you've done nothing about it.\"\n\nNervously, he replied, \"I have no claim over Virginia. She can do as she pleases.\"\n\nDrake feigned surprise. \"Are you not courting her?\"\n\n\"Yes, but until I ask her to marry me, she is a free woman.\"\n\nHe looked pointedly at the older man. \"So, even though you know what has happened between her and I, you don't care?\"\n\n\"Until she is my wife, no.\"\n\n\"That's rather cold of you,\" Drake accused.\n\n\"Virginia is a very fine woman. I'm willing to overlook her past indiscretions. Actually those indiscretions are very reassuring. It's nice to know that I'll have a passionate wife.\"\n\nDrake looked at him through narrowed eyes. \"Yes, she is a very fine woman and a very wealthy one too.\"\n\nThomas tried to sound casual. \"I didn't realize that she's wealthy. I understand her cousin Billy recently came into an inheritance or some such thing.\"\n\nHe chuckled darkly. \"or some such thing,\" he said mockingly.\n\nThomas stared at him confused.\n\nHe studied the glowing end of his cigar. \"She didn't tell you where their sudden fortunes came from?\"\n\nThomas was still striving to sound casual, but an eager gleam in his eyes betrayed him. \"No, where?\"\n\n\"Why in the attic of course. There's a king's ransom up there. Rather, several kings.\"\n\nThomas tipped his head back and stared at the upper windows. In an awestruck whisper he said, \"It is up there. I knew it!\"\n\nDrake looked at him with surprise.\n\nThomas, with a mocking laugh said, \"Yes, Stratford, you guessed right. I'm after that fortune. My fortunes have dwindled in recent years and that's the only reason why I'm courting her.\"\n\nAnger sparked in Drake's eyes. \"Aren't you afraid I'll tell her?\"\n\nThomas scoffed at him. \"Go ahead. She won't believe you. She told me herself she thinks you're untrustworthy.\"\n\nConcealing his anger, Drake casually shrugged. \"Doesn't much matter. She doesn't trust you enough to show you how to get up to the attic. I, however, do know.\"\n\nThomas stared at him in disbelief. \"You?\" He then smiled knowingly. \"Ah yes. Little Billy seems to think quite highly of you, doesn't he? I'll wager he showed you, not her. No matter. Once we're married, this house will be mine and so will she. I'll demand she show me.\"\n\nDrake began to laugh. \"I see you haven't yet seen her willful side. You can demand all you want. If she doesn't want to do something, she won't.\"\n\nThomas replied in an imperious tone. \"She'll be my wife, my property. If she disobeys me I have the right to beat her She'll tell me.\"\n\nThe laughter died on Drake' lips and his face hardened at Thomas' words. He pulled himself up to his full height, a murderous look in his eyes. \"If you ever lay one hand on her, so help me, I'll kill you with my bare hands,\" he growled menacingly.\n\nThomas, trying not to cower managed to say, \"You will have no right to interfere with our marriage.\"\n\n\"Where Virginia is concerned, I'm used to overstepping my rights. I don't intend to stop simply because of you.\" He then turned on his heel and stormed inside.\n\nVirginia stood on the balcony, hardly able to believe what she had just heard. She rushed through the french doors and down the hallway to her room, taking several deep breaths, trying to calm herself. She had a ballroom full of guests to attend to, she had no time to attempt to make sense of what had happened. She was heading back down the stairs when she saw Drake coming up them. He stopped when he saw her.",
        "\"V, are you alright?\" he asked, his voice full of concern.\n\n\"Yes, please excuse me, I have guests to attend to,\" she said as she brushed past him. She passed the remainder of the evening in a haze, pleading a headache to Thomas when he asked her to dance.\n\nDrake watched as she routinely hosted her party. She said and did all the right things but to his eyes, she seemed to be in a daze. Billy and Elizabeth finally made their departure amidst a crowd of cheering guests. After they were gone, she approached Drake. \"Can you please do me a great favor?\"\n\n\"Yes, anything,\" he replied.\n\n\"Can you please tend to the rest of the party? I'd like to go to bed, I'm not feeling well.\"\n\n\"Yes, of course.\" He watched her leave the room, noting that she didn't bother saying goodnight to Thomas or Doris.\n\nDrake played the host for the remainder of the evening. Since the bridal couple had left, the party was winding down and after an hour most of the guests had gone. Thomas approached him. \"Where is Virginia?' he asked.\n\n\"She went to bed shortly after Billy and Elizabeth left,\" Drake informed him.\n\n\"Is she alright? She said she had a headache. I'll go check on her.\" He turned to go but Drake blocked his way.\n\n\"She is in her bedroom. You are not going up there,\" he said firmly.\n\nDoris was standing next to her brother. \"Of course, silly, you can't go up there,\" she said with a giggle. \"I'll just go and check on her.\" She turned to leave the ballroom.\n\nDrake had a sudden recollection of the animated discussion the two of them had at the Christmas Ball after Thomas overheard his and Virginia's conversation. She had not appeared shocked by anything he was saying, only very concerned. \"You're not going up there either,\" he said to her. \"She is most likely sleeping and shouldn't be disturbed.\" He looked pointedly at them. \"Goodnight and thank you for coming.\" He swept his hand toward the door, clearly indicating that they should leave.\n\nTheir carriage was brought around and Drake watched them go. He then turned inside to see to the last few guests. When they had finally left he crept up the stairs. The Robbins' had retired hours ago and he could hear them both snoring through the door as he passed. He was sleeping in Billy's room that night. He paused outside Virginia's door and listened but didn't hear anything. After knocking lightly on the door, he waited a moment and was about to leave when he heard her voice quietly on the other side of the door. \"Who is it?' she whispered.\n\n\"It's Drake.\"\n\nShe opened the door a crack and peered out at him. \"What do you want?\" she asked.\n\n\"I just wanted to make sure you were alright.\"\n\n\"You asked me that earlier, why do you assume I'm not alright?\" she asked.\n\n\"I know you were on the balcony while I was speaking with Thomas. I know you heard what he said,\" he said gently.\n\nHer eyes filled with tears and she collapsed into his arms. He pulled her inside her room and closed the door behind them. Leading her to a small sofa, he sat her down. She pressed her face into his shoulder, clutching at his jacket as she sobbed. He stroked her hair and held her, murmuring comforting words.\n\n\"I knew I couldn't trust him,\" she choked out. \"Right from the start, before I even met him, there was something so strange about Doris' initial visit. I didn't give it much thought as she's always been a little batty, but she must have known about Thomas' interest in the treasure.\" She pulled back and looked up at him. \"He all but said he loved me, and I believed him. He said he wanted to marry me.\" She lay her head back on his shoulder. \"I wanted the fairytale so much that I ignored my instincts, ignored that little voice in the back of my head that kept telling me not to trust him.\"\n\n\"Well, now you know. Before he got his hands on your wealth,\" he said quietly. \"You still have your independence. You can tell him to go to the devil and don't have to deal with any worries about money like most women would have to.\"\n\nShe pulled away and looked up at him again. She wiped her eyes and tried to smile. \"You're right. It's a good thing I found out now. Does he know that I was up there?\"\n\n\"No, he doesn't.\"\n\nShe paused, her brow furrowed in thought. \"Why did you orchestrate that conversation between us during the Christmas Ball, knowing he was below and would hear us?\"\n\nHe looked away guiltily. \"I was trying to make him mad, so that he wouldn't want you anymore,\" he said quietly.\n\n\"You were trying to ruin my courtship?\" she asked quietly.\n\n\"Yes.\" He turned to look at her. \"I told you V. I love you and we belong together.\"\n\nShe only stared at him. \"What about tonight's conversation? Why did you do that? Because you love me and we belong together?\" she asked, beginning to get angry.\n\nRecognizing that her anger was rising he said calmly, \"Partly. Yes, I did it because I love you, and because I knew that he was going to hurt you and that he was being false. I suspected that he was after your wealth, just as you did. I didn't do it for the sole reason of removing him from your life for my benefit. I did it to protect you.\"\n\nShe continued to stare at him, and then laid her head again on his shoulder. He breathed a sigh of relief. \"I hate it that you feel that you have to protect me, but I suppose I must confess that sometimes I need it. Thank you.\"\n\nHe didn't say anything, just hugged her tight. They sat like that for a few minutes, neither saying anything. He thought perhaps she had fallen asleep when she spoke. \"I suppose you should go to your room now.\"\n\nShe then pulled away and stared up at him. He gazed at her face illuminated by the moonlight and his breath was stolen away by how beautiful she looked. He reached up and stroked her cheek. \"Will you be alright?\" he asked gently.\n\nShe nodded wordlessly, still staring deeply into his eyes. It was all he could do not to kiss her. He was surprised when it was she who leaned forward and gently placed a kiss upon his lips. It was a brief connection and then she was gone, climbing back into her bed. \"Goodnight Drake,\" she whispered to him.\n\nHe stood and walked to the door. \"Goodnight Virginia.\" He turned and walked out the door to Billy's room across the hall. He left his evening clothes on the floor and climbed into bed but it was a long time before he finally drifted off to sleep.\n\nVirginia lay in her bed across the hall, staring at the moon through the window. She was trying to determine how she felt about everything she had learned tonight. She knew she despised Thomas, but what about Drake? He must have known how vulnerable she was tonight. She would have succumbed to his advances so easily. Even now she desired his touch and it was all she could do to not creep across the hall and climb into his bed. She desperately wanted to feel loved and adored and he always did that when they were together. She would regret it in the morning, she knew, but she didn't allow herself to think that far in advance. He knew he could have had her, yet he resisted. It was she who had finally kissed him, but he didn't grip her to him as she had expected. He must have known it would only end up badly once again. She sighed and rolled over, away from the window, and closed her eyes, letting sleep sweep away her problems for a few hours."
    ],
    "authorname": "opels",
    "tags": [
        "drake",
        "virginia"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/an-undeniable-passion-ch-22"
}