{
    "title": "Bent Backwards Ch. 09",
    "pages": [
        "Ch 9 Some Things Can't Be Contained\n\n \n\nI raise my hand to knock on his door. My throat is bone dry and my belly is doing wild flip-flops. I step back a little as I hear footsteps approaching and the door swinging open. It's Ben.\n\n\"Oh, hey Ethan, how've you been? Haven't seen you for a while.\"\n\n\"Er, yeah, I'm good thanks.\" I stammer, trying to peer past him to see if Oliver's home.\n\n\"You looking for Ollie?\"\n\n\"Yeah.\" I say, trying my best to sound nonchalant. Not at all sure that I'm successful.\n\n\"Ah, sorry, bud, he's out.\"\n\nI must look disappointed, because Ben adds, \"Give him a call, he was running some errands, I don't think he went far.\"\n\nFuck. I think desperately, I can't call him, I've tried.\n\n \n\n\"Sure,\" I say, turning to leave, \"thanks.\"\n\nMy heart sinks as I head down his driveway. Now what? I consider finding a spot on the sidewalk, out of Ben's line of sight and just waiting there all day, until Oliver comes home.\n\nThat's what I'll do. I don't have a choice. I have to see him.\n\n\"Ethan,\" Ben calls after me, \"you might want to try The Dive, Oliver said he might swing by there.\"\n\nI give him a wave and a massive, idiotic grin spreads across my face. A grin, so broad, I couldn't wipe it off, even if I wanted to.\n\nI head straight to The Dive, it's only a few blocks away. I walk faster and faster, my steps growing longer, until I'm running. He's there. I can feel it. I'm running as fast as I can. I'm running full pace, the cold February wind, whipping my face.\n\nI realise my mistake as soon as I get to the bar. My heart is pounding and I'm panting. Chest heaving. I'm a complete mess. I stand outside the door for a minute or more, frantically trying to slow down my breathing, but I can't wait, so I push open the door and scan the room quickly. I see him immediately.\n\nThere he is. \n\n \n\nThere. He. Is.\n\nHe's wearing jeans and a grey sweater and is sitting, hunched over the bar, with his back to me. I'm not sure if he saw me, or not, but I notice his back and his neck tensing a little, as he looks down at his beer.\n\nMy heart constricts so tightly at the sight of him, that if I didn't know he was the cause, I'd almost certainly be thinking I need urgent medical attention.\n\nI take a seat next to him. I raise my hand to the bartender, \"I'll have what he's having.\"\n\nI take a long, careful sip of my beer. I try to calm down, to center myself. I need to think clearly. That's something I've never been able to do when I'm near him, but now, I need to make sure I can find the right words. I have to.\n\n\"I, er, went by the house, B-Ben said you might be here.\" I stutter, sounding rather pathetic.\n\nI look over at him. He's still eyeing his beer intently. His jaw is clenched tightly. Even so, he's so beautiful, it hurts me just looking at him. My head swims.\n\nSay something. I think, but I come up with nothing. Seconds turn into minutes.\n\nOh, God, this is going poorly. \n\nDo something. I think desperately. Do anything. \n\n\"So,\" he says, his voice sounding tight, \"how's Liza? She doing oka...\"\n\nHis voice trails off, as I spread my legs, pressing my knee firmly against his. The instant our bodies make contact, that same, inevitable charge rips through me. It's unreal. It hits me in the chest and quickly makes its way down my body. It burns me. Hard. He tenses visibly, raising his beer to his lips and draining it quickly.\n\nHe feels it too. \n\nHe gets up to leave and I follow suit, peeling off a few notes, paying his tab and mine. We leave the bar and head to the train. He takes a seat opposite me, even though there's a seat free, next to me. My heart is thundering in my chest. Beating wildly. He's not looking at me. He's purposefully avoiding eye contact.\n\nJust look at me, Baby. \n\n \n\nPlease.\n\nI'm so nervous, I feel a little nauseous. He's sitting wide legged, arms crossed, looking ahead. I'm not sure if he looks angry, or distant, or both, but he doesn't look like himself. Still, I can't take my eyes off him. Off his face, his neck, his chest.\n\nPlease, I think, just give me a sign, please, just give me one smile. \n\nOne good thing about him not looking at me, is that I'm free to look all I like. Seeing him again, cements something for me; none of this was in my mind. This is real. It's so real that the sight of him has rendered me speechless. Just sitting here, a few feet away, has me so hard, my dick hurts, as it strains against my jeans. It's so intense, I feel unwell.\n\nI'm sick with desire.\n\nWe get to my place and he walks behind me up the stairs, I can feel him watching me, it's making me self-conscious. My hand is shaking so much, it takes two or three attempts for me to get the key into the keyhole.\n\n\"Oliver.\" I say, turning to him, as we get inside. He cuts me off though. His hands are on me. They are on me hard, pulling, pinching. Our mouths are on each other too. Kissing and biting. Both of us are breathless, gasping, mouths wide open. When our eyes meet, neither of us looks away. I'm filled with such intense longing, my eyes sting.\n\nI've missed him so much. \n\n\"Oliver.\" I say again. I want to say that I'm sorry. I want to say something, anything, but I can't find the words. His body is so close, it's making it impossible to think. Instead, I lean in, wrapping my hand around the back of his neck, pulling him towards me, inhaling deeply.\n\n\"Unng.\" I moan, arching back, as his scent hits me. It floods my senses, drowning out reason. Invading every part of my body.\n\nI can't live without him.\n\nHe's pulling my jacket off, his too. He tugs at my shirt, his jaw is slack. He looks wild. I've never seen him like this. I'm trying to help him, to unbutton quickly, but I'm not going fast enough. He grabs my shirt in both hands and rips it open. Buttons go flying. I gasp in shock, but I don't stop, I tear off my shirt, as he pulls off his sweater and then his hands are back on me. Unbuckling my belt, pulling my fly down roughly. My head is spinning. Then, I'm spinning, as he grabs my arm and turns me around quickly.\n\nI brace myself with my hands on the wall, as he unceremoniously yanks down my pants. The cool air hits my ass, but it's not cold for long. His warm hands are on me, kneading and squeezing. He lets out a low growl, so low, it sounds like it comes from his belly, or maybe, even a little bit lower.\n\nHe pauses for a second. I know what he needs,\"Back pocket.\" I say.\n\nHe finds the condom and lube and uses them both quickly, slicking me up and then himself. He presses a finger inside me, and then a bit more. He doesn't take long. I'm glad, as I know I can't wait. Right now, waiting would kill me.\n\nI bend my knees, spreading my legs as wide as I can, tilting my ass out. He spreads my cheeks with his hands and guides himself in.\n\nI cry out from the quick shock.\n\nOh, God, he's big. \n\nHe slows for a second, pressing his cheek against the back of my head. I lean back into him, I want him so much, I crave any touch he can give me. I crave him completely. He doesn't stop for long though, almost immediately, as soon as he's in, he starts pounding. Pounding and pounding.\n\nMy God, it's intense.\n\nI'm struggling to keep standing, my legs are shaking so much. I claw at the wall, trying to find something to grip. It hurts, but at the same time, the pleasure ripping through me, threatens to undo me. It isn't long, before I can't stand anymore. My legs give way, my knees caving in. He doesn't stop thrusting as he follows me down to the floor.\n\nI'm on my hands and knees now, legs tangled in my jeans. He fucks me wildly, with mindless abandon, holding my hips, pulling me back to meet him as he slams his body into me. I take it and take it, until I can't take anymore. I reach forward and stroke myself quickly. The pleasure that hits me is so intense that when it lands, it blinds me. It feels never ending. I cry out, over and over.\n\nHe keeps fucking, not slowing, until his orgasm finally finds him. His body stiffens and arches back. He thrusts forward with each wave, until he's so deep, I see the moon and the stars.\n\nWhen he finally pulls out, I drag myself to the wall, leaning back against it, as I reel from the shock of what just happened.\n\nHe sits down with a thud, leaning against the opposite wall, looking around numbly, as we both catch our breath. All too soon, he stands up, quickly doing up his fly and finding his sweater and dragging it on.\n\n\"I shouldn't have come here.\" He says, as he pulls his jacket on. \"I've gotta get going.\"\n\nWhat? No!\n\nI jump to my feet, but I'm badly knotted in denim. I struggle to get my pants on, my boxers are bunched up and I can't seem to close my fly.\n\n\"Ollie, wait.\" I say, struggling with my zipper.\n\nHe looks at me in fury. \"I need to get out of here.\"\n\n\"Oliver, wait.\" I say, blocking his way to the door, holding my arms open.\n\nHe freezes, his face hardening, nostrils flaring.\n\n\"Please, Ollie,\" I say, I can hear the desperation in my voice, \"Please, just tell me what I can do to make you stay.\"\n\nHe looks at me incredulously. He almost looks like he might laugh, but he doesn't. He drags his hand across his forehead, pushing his hair back furiously.\n\nWhen he speaks, his voice is low. Dangerously low. \"You know exactly what I want.\" He hisses. \"I want to know what this thing is,\" his mouth is tight and he's waving his hand wildly between us, \"and, I want to know how the fuck it makes you feel.\"\n\nHe spits the last words out with terrible force. I swallow hard and start, \"I don't know...\"\n\nHe takes a deep breath in, trying to calm himself down. He looks tired.\n\n\"I, I don't know,\" I try again.\n\nGod, help me.\n\n \n\nI can't find the words.\n\n\"I don't know what it's called,\" I add quickly, taking a big breath. Once the words start, they pour out of me, \"I don't know what it's called when you walk into a bar and meet a guy, and your entire life gets turned on its ass.\"\n\nI'm glad that I'm speaking, that's something at least. I only hope, I'm making sense. Never-the-less, I continue, \"Everything you've ever wanted, everything you've ever known, turned up-side down in a second.\"\n\nHe's looking at me with an intensity that has mass. It's unnerving me more than I can say, \"I-I don't know what it's called when you've always been straight, you've never questioned it once, but that guy at the bar?\"\n\nCan I do it? Can I say it? \n\n\"T-turns out,\" I stammer, \"that guy is your soulmate.\"\n\nHis expression hasn't changed. I keep going quickly. The fear and emotion I'm feeling is threatening to overwhelm me. I can feel it rising deep inside me. It's rising fast.\n\n\"And how do I feel?\" My voice is loud and booming, but I can feel it cracking. \"How do I fucking feel?\"\n\nI look at him, thinking of the last words he said to me, when he walked out. \"You know how I feel,\" I say, softer now, \"You told me months ago.\"\n\nFear quivers inside me, but I'm bolstered by a single voice, strong voice.\n\nGo for broke, it says, leave nothing unsaid.\n\nCommon Sense, The Dreamer and even My Dick, are speaking in unison. For the first time in my life, they're speaking as one.\n\nThe wave from before rises even more, it's so big and so strong, that I'm shaking, overflowing, hot tears escaping, as the words are snatched from my throat.\n\n\"I love you.\"\n\nThe sound has scarcely left my mouth, when he's on me, his chest and his face, his arms wrapping around me, crushing me against him. I can hear his heart pounding. Mine's pounding too.\n\nI wind my fingers tightly in his sweater, desperately pulling him closer, as I sob, \"I love you, so much.\"\n\nI can't breathe, but I also can't stop the garbled words tumbling from my lips, \"I'm sorry... I want you. I'm sorry I didn't tell you... I only want you. I'm sorry I let you go.\"\n\nMy chest is convulsing, tears are pouring freely down my face, as I look up at him at long last, and speak the truth, \"I can't live without you.\"\n\nHis lips are on mine, barely touching, they're moving against me, \"I love you, too.\" He says, into my mouth. I swallow his words. I kiss each one. I breathe them in.\n\nThis kiss is different. This is like a first kiss. Not just my first kiss, or his. This is like the first kiss that ever happened. It's slow and tentative. It's so gentle, we're hardly touching. His hands are on my neck, on my back, grazing me lightly. Mine are under his sweater, stroking his chest, tracing his jawline, combing his hair. This kiss has no beginning, and I know in my soul, I don't want it to have an ending.\n\nWe're in the bedroom, when I come up for air. I'm on my back, the weight of his body is on me. Holding me down. We are both naked. His body feels hot. Mine does too. Our touch is still ghosting and light. Light as a feather.\n\nI see him reach for a condom, and I reach out to stop him, \"No.\"\n\n\"Are you sure?\"\n\nI nod. I am sure. I want him and me, with nothing coming between us. Just us.\n\nHe enters me smoothly. I'm slippery and a little loose from before. There's no shock, or sting. Just pleasure. The feeling of him inside me, his skin against mine, is bliss. Just bliss. His body is pressed against mine. I wrap my legs around him, pulling him closer and closer. I want all of him inside me. I want to inhale him. He holds himself up a little, his fingers laced in mine. He's heavy and solid. Grounding me. Making me his, as our bodies roll together.\n\nI've always hated the phrase 'making love'. I find it cringey. It's not for me. So, I won't use it now, but I can only say, that right now, Oliver and I are making something. Something strong. Something beautiful. Something so sweet, I want to cry.\n\nMy eyes are on his, and his are on mine. His eyes are soft. Warm blue. The warmest blue, I've ever seen. I'm lost in his eyes. They're telling me his secrets and I don't mind at all, if mine are doing exactly the same thing.\n\nThis thing that we're making is growing, gaining power. It's quickening. The room is vibrating. Both of us are moaning and shaking. It strikes us at the precisely same second. It's lightning. Electric. We both jolt and shudder from the stunning power of the strike.\n\nHe stays inside me, kissing me softly, until he softens. As soon as he pulls out, I miss him. I miss him already. He's still here though. Lying right beside me, his head on my shoulder, his arm round my waist.\n\nNeither of us move for a long time. We don't speak either. We don't need to. I can't bear to leave him, but I know I must. It has to be done, and now is the time.\n\n\"I have to go and see Liza.\"\n\nHe blinks and nods against my chest.\n\n*\n\nAs soon Liza opens the door, I can see that she knows that something is wrong. I can see that she knows what's coming. She steps aside, letting me in, but something about her demeanor holds me at arm's length. I don't hug or kiss her, I can tell, she doesn't want me to.\n\nWe take a seat on the sofa. She doesn't make small talk. That's not her style. She waits for me to speak. When I do, I speak quickly. I know without a shadow of a doubt that this is the right thing, but it's still not an easy thing to do. I tell her I can't give her the life that she wants, the life she deserves.\n\nShe doesn't look away. She purses her lips slowly, before nodding a little.\n\n\"Well,\" she says at last, \"thank you for not wasting more of my time.\"\n\nI get up to leave, turning and starting to walk to the door, when she calls out, \"Ethan, just tell me one thing.\" I turn to face her. \"Is it Oliver?\"\n\nI don't skip a beat. I've lied to her so many times, but this time I can't. I can't lie about him. Never again. Not to her, not to him, and not to myself.\n\n\"Yes.\" I say quickly.\n\nHer jaw clenches slightly and she presses her mouth shut for a moment.\n\n\"Since when?\" She asks, after a long pause.\n\nI don't want to hurt her, but I owe her the truth. After everything I've done to her, I owe her that much, at least.\n\n\"Something happened the first time he came over.\" Her eyebrows shoot up a little.\n\n\"How long have you known?\" I ask her.\n\nShe sighs deeply. \"I'm not sure I did now, until just now. Not consciously at least.\" Her voice trails off a little, before she adds, \"There was something about the way you used to say his name. Like, you had to move your tongue very carefully to form the word. For the last few months, you haven't said his name at all. Not even once.\"\n\nI nod wordlessly, acknowledging her instincts.\n\n\"Do you love him?\"\n\nMy eyes burn and I take a few shallow breaths.\n\n\"Very much.\" I say with a quivering voice. \"I'm so sorry Liza. You don't deserve this. I've been a mess. I've been the worst kind of asshole. I've been so confused. I haven't known who I am.\"\n\n\"And now,\" she says, accusing slightly, \"do you know who you are now?\"\n\nI blink hard, tears overflowing, spilling down my cheeks, as I nod.\n\n\"So, who are you, Ethan?\"\n\nI gasp from the pain, knowing I'm hurting her, and knowing I can't lie. My throat burns and my breath is coming in great, uneven gulps. When I'm finally able to speak, I sob.\n\n\"I'm Oliver's man.\"\n\nShe leans back in the sofa, resting her head for a while, before looking straight at me.\n\n\"I can already tell that I'm going to be angry,\" she says, \"Furious, probably. I can already feel it coming, but right now, I want you to know that I love you, Ethan.\"\n\nShe pauses, giving me time to absorb what she's saying, making my chest ache, \"Maybe, I love you more than I thought, because I want you to be happy. I want you to be happy, even if that means not being with me.\"\n\nTears aren't just flowing down my face now. I'm sobbing, truly, ugly-crying.\n\n\"I'm so sorry Liza. Please believe me when I say, this wasn't your fault. You did nothing wrong. You are a wonderful person. One of the best that I know. One of the best people, I'll ever know. Any man would be lucky to have you.\"\n\nShe cocks her head a little, looking up at me, smiling thinly as she says, \"I know.\"\n\nI smile through my tears. There she is. That's Liza. That's the metal she's made of.\n\nShe stands and walks to the door, holding it open, giving me my invitation to leave. I reach for her, wanting to hug her, wanting to beg for her forgiveness, but she stops me. She levels me with nothing more than the look in her eyes.\n\nShe straightens herself, pulling her shoulders back ever so slightly, her head high, as she holds her hand out to me. I nod, and I try to match the way she's looking at me.\n\nThis is good-bye.\n\nI put my hand out and shake hers. Her grip is firm. Solid. As our hands touch, I know, Liza's all woman, but she's a better man than I'll ever be.\n\n*\n\nI wipe my eyes on the back of my sleeve, as I leave her place, walking faster as I get to the sidewalk. Relief washes over me. I took every wrong turn getting here, but at last, I've done the right thing. This time, I know, I've done the right thing. I've done the right thing for Liza, for Oliver and for me. I can't imagine a time, I'll ever feel anything but deep regret about the way that I betrayed Liza, but I also know, she deserves better. She doesn't deserve a lifetime with me. She deserves to be loved fully. She deserves to be loved, the way that I've only ever loved Oliver.\n\nAs I walk to the station, I feel broken, cracked open and sore, but I feel lighter. I feel as though a heavy, invisible cloak has slipped from my shoulders. A cloak that was weighing me down. A cloak that was densely woven in guilt and in shame.\n\nThere's only one thing on my mind now -- I want to go home.",
        "I want to go home to my man. \n\n*\n\nI only realise what I've done when I'm on the train, one stop from home.\n\nHoly shit!\n\n\"What's wrong?\" He says, when he sees the look on my face, as I walk through the door.\n\n\"Oh, God, Ollie, I'm sorry.\" How could I have done this? Full scale panic engulfs me. Jesus Christ, what is wrong with me? I should have checked with him first.\n\n\"What happened?\" There's fear in his voice.\n\n\"I, I think I just outed us both.\"\n\nHis face is a picture of shock. I quickly explain what happened. His shock doesn't last long.\n\n\"I get it,\" he says, \"you just couldn't lie to her again.\"\n\n\"That's not even it,\" I say as I reach for him, pulling him close, \"It was you, Ollie, all you. I just couldn't deny you. Never again.\"\n\nHis face creases into a smile, that starts deep in his eyes. \"I don't care.\" He says, shaking his head.\n\n\"I should have spoken to you first, I'm so sorry.\"\n\n\"Look at me.\" He says emphatically, placing his hands on my shoulders, straightening me out, \"I don't give a shit. I don't give a shit who knows, and I don't give a shit what they think about it.\"\n\nLaughter bubbles up in me, as his words land. I realise the truth. Even though, this is the very thing I've feared more than anything else in my life. I realise right there and then, if this is the cost of being with him, I don't care who knows. Right there, in his arms, I realise the truth.\n\n \n\nI don't care who knows about us, and I don't care what they think about it, either.\n\nI have no shits left to give.\n\n*\n\nThat evening, we order take-out and eat and drink wine on the sofa. His legs are stretched over my lap. We don't have sex again that night. We just talk. We talk for hours and hours.\n\nMy entire body feels bruised, and not just from the way that he fucked me. I feel like all the rough skin has been rubbed off my body. Some soft skin too. I'm raw. Completely exposed. Entirely vulnerable. I've never let anyone see me like this. I've never felt like this before. I've never even come close.\n\n\"I can't believe you're here.\" I say over and over, stroking his feet, clutching onto his ankles. I can't take my hands off him and not just because of how much I want him. I'm still trying to convince myself that he's real.\n\nHe's real, and he's mine. \n\n\"You've lost weight.\" I tell him, as I run my hand up his shin bone.\n\n\"I couldn't eat.\" He says simply.\n\nHe's open and honest. At last, we both are. We both are, at the same time. Thinking of him like that, not wanting to eat, makes me flinch. I feel physical pain in my chest, when I think of him being unhappy. When I think that I was the cause.\n\nI'll feed you up, baby, and I'll never, ever hurt you again.\n\n\"Do you like Italian?\" I ask him.\n\n\"Sure.\"\n\n\"I know this great little place, La Casa,\" I say, \"the chef's Roman and I'm telling you, you have to try her carbonara. It's unreal.\"\n\nHe smiles slowly at me.\n\n\"Are you free on Friday?\" I ask.\n\n\"What?\" he says, sounding a little surprised, \"you mean, like a date?\"\n\n\"Yes,\" I say, \"exactly like a date.\"\n\nHe smiles shyly. He smiles bigger than he means to. Even in the dim light, I see his cheeks redden in pleasure.\n\nHe is so sweet. He's so sweet, it makes me feel dizzy. \n\n\"I guess you're right,\" he says, \"we're both going to have to make sure, we don't get so swept up in each other, that we forget to do normal, human things, liking eating.\" He glances at his watch, \"And, sleeping.\"\n\nIt's well after two in the morning, and as he says it, I'm suddenly reminded how exhausted I am.\n\n\"I don't sleep,\" I tell him, \"I never do.\"\n\n\"Maybe, tonight, you will.\" He says, stroking his fingers up and down the back of my neck.\n\nMaybe he's wrong, or maybe, he's right, but tonight, after months of craving sleep with all of my being, I don't want to sleep. I don't mind going to bed though.\n\nI'll just lie perfectly still, I think, so I don't disturb him. I'll lie next to him all night, and I'll watch him sleep.\n\n*\n\nAs it turns out, I do sleep. I sleep like the dead. It's almost eleven AM when I wake. The sun is streaming into the room, and when I open my eyes, I look straight into blue. Beautiful blue. The most beautiful blue, I've ever seen. The relief that washes over me, when I see him, is so pure and intense, for a few seconds, I swear, I can't feel my legs.\n\n\"Coffee?\" I say, when I can.\n\n\"Mmh.\" He smiles, stretching one arm lazily up over his head.\n\n\"What are you so deep in thought about?\" I ask, once I've made the coffee and have set a mug down on the bedside table beside him.\n\n\"Hmm,\" he says, \"I guess I was just thinking about what it's going to be like to shoulder the full weight of the emotional load in this relationship.\"\n\nI smile at him curiously, \"What makes you think it will all be on you?\"\n\nHe snorts a little at that, \"Well, you've got to admit, you haven't shown yourself to be a stellar communicator.\" He's right about that. I sure as hell haven't, but he's also wrong. I'm really not bad at communicating, if I can get my head out my ass.\n\n\"Actually,\" I say matter-of-factly, \"I'll have you know, I'm pretty damned good at that stuff.\"\n\nHe really laughs at that. I smile, even though I know, he's laughing at my expense. I don't mind.\n\n\"It's just,\" I explain, \"I felt like such a shit for what I was doing to Liza, I guess I convinced myself that that made it better somehow. You know, doing the physical stuff with you, but keeping the emotional stuff for her?\"\n\nI look down at him, wondering if he can forgive me, and if he can, how long it's going to take before I can forgive myself, \"I know it probably didn't make it the slightest bit better for her, or for you.\"\n\nI sigh, \"God knows I tried to stop it. This thing with you. I just couldn't stay away.\"\n\nHe nods. I can see in his eyes, he understands. He was there. It hasn't been easy for me, and I'm sure, it hasn't been easy for him, either.\n\n\"I've never felt anything like this.\" I say, and my God, I mean it.\n\n\"So,\" he says, smiling, looking awfully pleased with himself, \"are you trying to say you're not going to tell me to 'shut up' anymore?\"\n\n\"Nah,\" I say, though I'm only teasing, \"I'm going to tell you to 'shut the fuck up'.\"\n\nI raise my hand to his face, tracing the outline of his jaw with my fingertips, gently sweeping his hair off his face. As I do it, I realise, I've wanted to touch him like this, since the very beginning. Since the first time we met.\n\n\"It's just that now, right after I do, I'm going to hold you and tell you that you can talk to me about anything. Anytime.\"\n\nHe murmurs something softly. He's trying not to smile. He's pushing his mouth down at the corners, to stop himself, but I can tell that he wants to.\n\n\"But,\" he says emphatically, \"you bloody well aren't going to call me a pussy, or a little bitch again, are you?\"\n\n\"Well?\" I drawl, drawing the word out dramatically. I can't resist teasing him.\n\n\"Don't you fucking dare, Ethan! I mean it.\"\n\n\"Okay, okay,\" I laugh, but then I add, \"but Ollie, what about this?\"\n\n\"What if I have you?\" As I say the words, a small seed is planted. I see a tiny flash in his eye. A seed is planted in him, too.\n\n\"What if you're naked and on your knees?\" I feel the blood begin to drain from my head. \"What if I've spread your legs and my tongue's been inside you?\"\n\nI lean forward, breathing him in deeply, \"What if you're moaning and I'm holding you down?\"\n\nHe swallows hard, as I leap to my feet, holding my hands out, putting on an exaggerated sex-face, as I thrust forward, pretending to hump. I'm trying not to laugh, but I love the way he's looking at me right now. I can tell he's enjoying the show.\n\n\"What if my dick's deep inside you and I'm breeding your ass?\"\n\n\"Hmm,\" he says, stiffening, and trying even harder not to smile, \"been watching gay porn, huh, Ethan?\"\n\nAs a matter of fact, I have been. I've watched almost nothing else, since the first time I was with him. I've been telling myself it's because I'm so into anal, but now, given everything that's happened, part of me is starting to wonder if that's all it is.\n\n\"That,\" I say, pointing a finger at him emphatically, \"is entirely beside the point.\"\n\nHe stifles a giggle. I love that sound, so I continue, \"What if I'm fucking you so hard, you're screaming?\"\n\nI look down at him, feeling myself burn, knowing, he's burning too, \"What about then? Huh?\"\n\nHis eyes are dancing, and not just in amusement.\n\n\"What about if I have you like that?\" I growl, \"And then, I call you my little bitch?\"\n\n\"Well, Ethan,\" he says, with a polite little cough, \"that is some very powerful imagery.\"\n\nThe mood in the room has shifted considerably. His eyes are travelling down my body. \"I mean,\" he starts, \"I guess...\"\n\n\"You guess?!\" I exclaim, \"Oliver, really! Isn't this one of those pivotal moments that really require certainty?\"\n\nHe rolls his eyes so hard, they almost go all the way to the back of his head.\n\n\"I...\" he tries again, but he seems to be losing his train of thought.\n\n\"I'm serious, Ollie. I need to know,\" I say quietly, \"I got this really wrong in the past and it made you walk out of my life, and I'm telling you, it damned nearly killed me.\"\n\n\"Okay...\" he says, his voice sounding vague.\n\n\"Tell you what,\" I say seriously, \"why don't we try it, and then you can tell me for sure.\"\n\nHe looks up at me. He seems to be having trouble dragging his eyes up, off my dick. I feel the familiar little quiver, that tremor. That reckless mix of fear and excitement.\n\n\"N...Now?\" he squeaks.\n\nI don't answer, I just take hold of the sheet and pull it slowly off his body, inching it down, exposing him. Taking every part of him in, for a second, before I pounce, as quick as I can. Grabbing him and pulling him out of bed, turning him round and bending roughly him over the edge of the bed. He gasps. I can see his chest heaving. Mine's heaving, too.\n\nSeeing him like this, I'm instantly filled with terrible lust. Lust, part of me used to fear, but not anymore. Now, I know that it's right. I take my time, working him over, licking him, stroking and stretching him, getting him ready. My hands are shaking, and I'm making a strange sound, that seems to be coming from the back of my throat.\n\nHe turns to look back at me. \"Go easy,\" he says, \"it's been a while.\"\n\n\"Easy?\" I snarl. I feel alive. I feel wild. Wild like an animal. Wild in a way, only he can make me. \"Easy like you went on me yesterday?\"\n\nHe gulps and looks forward quickly, but I feel him arch back, when I touch him.\n\nHe wants what I want.\n\nIt doesn't take long, before I have my dick aimed straight at his hole. He struggles a little, arcing his back off the bed. I hold him down and as I do, the most intense desire imaginable floods me. I hear that sound again, the one from the back of my throat.\n\nI want him so much. \n\nI want him more than I've ever wanted anything. As I see him there, waiting like that. I'm struck by the dim realization that I was wrong, all those months ago, when I thought my life would be easier, if he didn't look the way that he looks.\n\nYes, I'm insanely attracted to his body, but that's not nearly the end of the story. That's hardly even the beginning. The way that I want him, has to do with so much more. It has to do with the look in his eyes. The sound of his laughter. The way he smells. It's in the way that his beautiful, filthy mind works. It has to do with something deep inside him, something I don't know the name of. Whatever its is name is, it's the thing that makes him, him. Oliver Kerry.\n\nMy Oliver Kerry.\n\nI can't wait any longer, so I enter him quickly, watching for that moment, that second, he feels it. His back tenses, his neck arches back. I feel it too. The rawness, the feeling of skin on skin, with nothing between us. It's unlike anything else. I'm moaning now. Moaning with him. I honestly couldn't tell you, who's moaning more. I take my time, relishing every second I'm inside him.\n\nHe's getting louder and louder, until his voice is high-pitched. I pull him back by his hair, so his face is up close, right next to mine. I look down, right in his eyes. I love, love, love the way he's looking at me, as I say, \"You're my little bitch.\"\n\nMine\n\nMy words seem to go through him. They go through me too. I come as soon as I feel his ass clenching. I shoot my load as deep in his ass as I possibly can, pulling out and watching in inexplicable gratification, as I see my seed trickle slowly out of his body.\n\nWe throw ourselves back in the bed. Lying next to each other. Lying close. His head is on my chest and my arms are around him. I pull him closer, closer and closer until we can't get any closer.\n\n\"Ollie,\" I say, after a while, \"do you like it when I fuck you like that?\"\n\nHe looks at me quizzically, \"Do you mean, struggle-fucking, like that?\"\n\nI nod, and say quietly, \"I wish I'd asked you if you liked it, a long time ago.\"\n\n\"I'm glad that you didn't. My honest answer would always have been, \"Fuck, yes\", but it took me admit it to myself.\" He looks at me for a long time. \"I know I got there a little faster than you did, but it was still a process for me to understand and accept what this thing between us is.\"\n\nHe's still looking at me. His eyes are so caring and open, I don't mind making a fool of myself, so I ask him something that's bothered me since the beginning.\n\n\"Is it okay, that I like it so much? You know, that I like 'forcing' you.\"\n\nHe sits up a little, a broad grin on his face, his eyes dancing in amusement.\n\n\"Ethan,\" he says, \"you're talking to someone who gets sexual gratification from restraining people and inflicting pain on them. Believe me, what you like is fine. What you like, turns me on more than anything else in the world. More than anything I've ever experienced.\"\n\nHe gets that look in his eyes, the one that can only be described as pure evil, as he adds, \"Except for maybe, when I tie you up and beat your ass.\"\n\nA long, long laugh, that feels like it's been bottled up inside me for eons, is released. It fizzes out of me until my eyes water.\n\nIt feels so nice to be talking about this. We've always been able to take what we want from each other in the heat of the moment, instinctively knowing what the other one wants, but talking like this, when we're both calm, feels so good. It makes me finally start to feel like this is real. This is us. This is good. It's so good, it makes me feel afraid.\n\nI pull him back down, so his head is on my shoulder. I wrap my leg around him. Our limbs are fully entwined.\n\n\"Baby,\" I say, when I find my voice, \"can I tell you what scares me?\"\n\n\"'Course.\" He says, looking up at me quickly. The way that he says it, lets me know that I can. I can tell him anything.\n\n\"When it comes to you,\" I sigh, \"I already know, forever won't be enough.\"\n\n*\n\nWe know right from the start, that we need to get onto telling people about us, or risk them hearing it from someone else. He calls his mom first. He's absolutely sure she'll be cool about it. She is very much a, \"Love is Love,\" kind of person. Still, it's bloody uncomfortable to have to call your mother, to tell her who you want to have sex with, especially when it's such a big one-eighty, so I don't envy him.\n\nI don't hear the whole conversation, but I do hear him saying, \"You're going to love him, Mum. He's amazing.\"\n\nWhen I hear that, my heart nearly bursts with a level of pride and joy, that are almost absurd. Pride and joy, I didn't know existed for me, just a few short days before.\n\nI tell my parents on Sunday afternoon, during our weekly zoom call. They don't seem especially surprised to hear that Liza and I have broken up, and bizarrely, they also don't seem very surprised to hear that I'm with a man.\n\n\"Thank you for telling us, sweetheart.\" Says my mom.\n\n\"Does this Oliver like fishing?\" Asks my dad.\n\nI crack a smile, \"He tries.\"\n\n\"Well,\" says my mom, never one to miss an opportunity to try to get me to visit home, \"you'll have to come for a visit and bring Oliver too, we'd all like to meet him.\"\n\n*\n\nI go with him, the following week-end, to tell Kip and Ben. He spent most nights of the week at my place and by Saturday, he'd run out of clean clothes and was wearing his jeans and one of my sweaters. I happen to know, right now, he's going commando.\n\n\"You ready?\" I ask, placing my hand on the small of his back, rubbing my thumb gently along his spine, as he opens the door.\n\n\"I hope so.\" He says.\n\n\"Well, well, well,\" says Kip, looking at Oliver and then looking at me, with the mildest hint of confusion, \"look what the cat dragged in. Where the hell have you been? We've hardly seen you all week.\"\n\n\"Uh, Kip, where's Ben? We need to talk. Can you sit down?\"\n\n\"Ben!\" Kip calls down the hall, \"Get over here. Oliver's finally surfaced and it looks like he's fixing to break up with us.\"\n\nOllie and I smile a little uncomfortably. Both of us are nervous. I'm nervous for him.\n\nPlease God, I think, let these guys be okay with this. Please. They mean so much to him.\n\n\"This seems very formal.\" Says Ben, looking a little suspicious, as he sits down with us at the dining table.\n\nOliver speaks quickly, not mincing words, telling them about things between us.\n\n\"So,\" says Kip, once the dust has settled, \"you're trying to say that you like guys now?\"\n\nOliver laughs, \"Just to be clear, Ethan's the only guy I've ever been into. Your doughy asses have got nothing to worry about.\"\n\n\"What?!\" Exclaims Kip, faking deep offence, \"What's wrong with my ass? My ass is fine!\"\n\nThat breaks the tension. We all laugh, but the laughter stops abruptly, when we notice that Ben isn't laughing. He's not even smiling.\n\n\"Ollie,\" he says, \"how long have we been friends?\"\n\n\"Uh, almost ten years.\" Says Oliver quietly. I can hear the nerves in his voice. My heart clenches in fear. I put my hand on his knee, under the table, squeezing, steadying him.\n\nNot this, I think, not Ben.\n\n\"And in all that time, have I ever said or done anything, that made you think you couldn't tell me something like this?\"\n\n\"No, Ben, you haven't.\" Oliver says quietly.\n\n\"So, why didn't you tell me?\" Ben says, \"Do you have any idea how worried I've been about you? We've both been.\"\n\n\"I'm sorry,\" Ollie says, \"it was a very, well, it was a very complicated situation, all round.\"\n\n\"We were this close to asking your mom to fly down here.\" Says Ben, indicating about a millimeter with his fingers. I breathe a sigh of relief. Oliver still seems a bit tense, but I'm pretty sure, Ben's going to be fine.\n\n\"You know what,\" Ben says, after a long pause. \"I need a beer.\" He looks like he could use one, \"Anyone else want one?\"\n\nAll of us do. When Ben gets up and heads for the kitchen, I follow him there.\n\n\"Ben,\" I say, \"it's not Oliver's fault, it's mine. He was keeping a secret for me. He trusts you. I'm sure he wanted to tell you.\"\n\nHe looks at me thoughtfully and nods slowly. There's an edge in his eyes. I can see, he's not sure if he likes me and he's not sure if he can trust me with Oliver. I can't say I blame him. I know what he's about to say, so I beat him to it.\n\n\"I love Oliver, Ben.\" I say, and I truly mean it, \"I won't hurt him again. I swear it.\"\n\nHe cracks a wry smile, nodding and shaking his head at the same time, \"You better not.\" He says, as he hands me a couple of beers to take the others.\n\n*\n\nWe've done most of our coming out, or whatever you want to call it. In fairness, most people, have taken it exceedingly well. The obvious and understandable exception was Jess. She came around to the apartment to pick up Liza's things. She tore a strip off Oliver and she tore one off me, too.",
        "\"I didn't see this coming,\" She said to Oliver, \"but I guess, I didn't know you well enough to truly be able to vouch for your character. I thought I did, but I didn't.\" Ollie looked down, pressing his lips together. It takes everything I have not to try to defend him.\n\n\"And as for you,\" she spat at me, \"I've known you for years and in that time, I never once saw a single Goddamned thing that made me think you were anything other than a good man. I thought Liza was lucky to have you.\" I swallowed hard at the mention of her name. \"I thought you were my friend. I hope you're happy with yourself. You have managed to shock the shit out of me, and that's not something many people can do anymore.\"\n\nWe both felt like utter shit, but neither of us had a word to say in our defense. In situations like this, \"I'm sorry,\" rings a bit hollow. We know we were wrong. We both wish we'd done things differently.\n\nSo, yes, there's been a bit of excitement about it, a bit of gossip, but truthfully, the people we love have been unbelievably supportive.\n\nThe one exception has been my hyper-religious, hyper-judgmental cousin, Jim. It's taken him a couple of months to get in touch and now that he has, he's taken it upon himself to send me a long email, outlining my sins and highlighting the fact that in his humble opinion, I'm a path that leads straight to hell.\n\nI delete the email without responding, but when I tell Ollie about it, he's angry for me. He's upset for me. His eyes are brimming with concern.\n\n\"Are you okay?\" he asks, reaching for me.\n\n\"I'm fine,\" I say, taking his hand and shrugging, \"I guess, he's not someone who matters.\"\n\n\"What an asshole.\" He says with an edge in his voice. He's protective of me. I know how he feels. Part of me feared more for him, when he told the people who matter to him, then I did for myself. I could handle the pain of rejection for me, but I just couldn't stand it for him.\n\n\"You know what,\" I say, after a pause, \"I think this is just a classic case of the trash taking itself out.\"\n\nHe smiles a little, despite himself, and gives a little nod.\n\nIt must stay with him though, as a little bit later he asks, \"If you could go back in time, would you change anything?\"\n\n\"Sure,\" I say, \"I'd do lots of things differently.\"\n\nHe eyes me thoughtfully, as I continue, \"I could have done with a little more honor, you know, a little more integrity.\"\n\nHe doesn't nod, he doesn't need to. He was there. He got to know me, at my worst.\n\n\"A little less of the fear and cowardice, might have been nice.\"\n\nHe's smiles now, just a little.\n\n\"It might have been a good idea to dial down the denial, quite significantly.\"\n\nI look down at him, feeling nothing but relief and contentment. Absolute certainty, that I'm right where I belong.\n\n\"But, if you're asking if I would do anything to change what happened between us, well, then I guess, yes. One thing.\"\n\nHe eyes me carefully, as I take a deep breath, \"If I could go back in time, I would. I'd go back to the day that we met and I'd set my alarm a little earlier, I'd leave home a little sooner, I'd walk to the bar a little quicker... just so I could get to you, a little bit faster.\"\n\nHe's not smiling now. He closes his eyes and rests his cheek briefly on my shoulder, wrapping his arms around my body. When he looks up, his eyes are soft, unguarded, telling me everything I need to know.\n\n\"You were right, you know,\" he says, feigning surprise, \"you really are pretty good at this stuff.\"\n\n*\n\nIt's Saturday morning and I'm awake before him. I usually am. I lie still, trying not to wake him. I want him to sleep as long as he needs to.\n\nIt's been nine or ten months since I asked him to move in, and I still can't believe how much I love living with him. I used to think I loved living alone. I thought of my apartment as a sanctuary, just for me. A cave, for me to retreat into. Since being with him, I don't seem to need that anymore. Since I started living a life that's true to myself, I don't have the need I once had, to retreat. I don't have the need to hide anymore.\n\nSince he moved in, the place has come alive. His books fill the bookshelf and his plants line the windowsill in the kitchen. We donated my bed and replaced it with his. The rug he bought in Morocco, warms the living room and two large, black and white photographs his father took in Killarney Park in Kerry, take pride of place, above the sofa.\n\nThe apartment's not a cave anymore, it's something much better. Now, it's a home. It's our home, for now. We're saving to buy a place of our own. We want to find something that needs work. Something we can put our own stamp on. We're looking for something with a guest bedroom. Oliver always gets an awful little glint in his eye, when he says to realtors, \"For us, a spare room is essential.\"\n\nHe's right about that, our spare room gets one hell of a work-out.\n\nI glance down at him. His eyelids are fluttering, he's about to wake up. I sit up a little, leaning back against the headboard, as he opens his eyes.\n\n\"How did you sleep?\" He asks gruffly, still warm and sleepy.\n\n\"Like a baby.\" I say, \"You?\"\n\n\"Mmh,\" he says, \"so, so well.\"\n\nHe sits up too, leaning over, brushing his lips lightly against mine, before tilting his head to the side slightly. I bow my head down, kissing the base of his neck, right where his neck and his shoulder meet. I kiss him again, then I drag my mouth and my nose up the arch of his neck, all the way to his ear, inhaling deeply as I do.\n\n\"Unng.\" I moan softly. He knows how much I love this. He knows what his smell does to me. He knows all my secrets now, and I know his, too. Most mornings, this little ritual makes it very, very hard for us to get out of bed, but today, his stomach is grumbling.\n\n\"I'm starving,\" he says, \"you hungry?\"\n\n\"Yeah, I could eat.\"\n\n\"Come on,\" he says, \"I'll cook.\"\n\nWe climb out of bed. He puts on a pair of sweatpants and I find my pyjama bottoms and pull them on, too.\n\nHe gets to work in the kitchen. It looks like he's making pancakes, my favourite. I sit down on the sofa, and start strumming my guitar. I'm playing absently. Not really thinking about what I'm doing, just picking out notes, as they come to me.\n\n\"What's that you're playing?\" He says, \"I haven't heard that one before.\"\n\n\"It's one I wrote.\"\n\n\"It sounds a little sad.\" He says.\n\nI smile. He's so perceptive. \"I was sad when I wrote it.\"\n\nHe looks up at me, his eyes approaching and retreating softly, gauging how I'm feeling.\n\n\"I wrote it after you left.\" I explain.\n\nHe nods. \"Play it again.\"\n\nI tune the E string a little. I start finding the notes for the song. I haven't thought of it in so long, but it comes back to me quickly. Unsurprising really, when I think of all the nights, it went round and round in my head. I start to play.\n\nI don't know, the man in the mirror\n\nHe's a stranger to me,\n\nMaybe I took him by force\n\nBut what he did was worse,\n\nHe took me slowly\n\nBound me and chained me\n\n \n\nThe spell can't be reversed\n\nSo, I'm burnt and still burning\n\nBurnt and still burning\n\nI stop playing, looking up at him. His eyes are closed, but when he opens them. I recognize the look in them instantly.\n\nI love that look.\n\n \n\n\"Come 'ere.\" He says, using his low voice. You better believe, when he looks at me like that, I come running. I always do.\n\nHe runs his hand up my chest, pausing at my heart. I know he can feel it picking up the pace. He leans in and kisses me. He kisses me with tongue. It starts slowly, but it doesn't stay that way for long.\n\n\"Still burning, Baby?\" He asks.\n\n\"Always.\" I smile.\n\nHe pulls open my drawstring roughly, making me take a quick breath. My pyjamas loosen around my waist and fall slowly down my hips. My abs clench instantly, when I see his intention. He kisses my neck, and then down my chest, flicking each nipple with his tongue, before moving down even further. He eases himself down on his knees.\n\n\"Hey,\" I say softly, \"do you want me to get a pillow for your knees?\"\n\nHe looks up at me with a devilish smile, \"Nah, it's not my knees, I'm feeling right now.\"\n\nHe runs his hand up my thighs, slowly. Then he does it again. Even slower this time. It's shocking how quickly I respond to him. Even now, all it takes is a look, a word, a touch, and I'm right back there, spinning, reeling, falling, just like I did, the very first time we were ever in a room together.\n\nHe takes my shaft in his hand, stroking gently, as he starts licking my head. His tongue swirls around me, dancing in circles, until I find it hard to stand still. He sinks his mouth down on me, taking me in. Licking and sucking, until I moan softly, in pleasure.\n\nHe looks up at me, the way he always does, as he reaches down, and sets himself free, showing me, what he has for me. He's swollen and hard. He reaches for my hand, kissing my palm and then placing my hand at the back of his skull. I know what that means. He wants me to fuck him. He wants me to take his mouth and make it mine.\n\nOoh, that turns me on hard.\n\nI ease myself into his mouth slowly, over and over, as I hold him firmly in place. A little deeper each stroke. Until he's gasping and panting, his lips reddening and his eyes blazing.\n\nI love the way he looks, when his mouth is full of my cock. \n\nHe reaches down and starts stroking himself, moaning a little on my dick, sending gentle vibrations straight through me.\n\nOh, God.\n\nI reach back and steady myself on the counter, my thighs have started to shake and I feel as though my legs might give way. His hand is moving fast. He's gaining speed. He's going for glory.\n\n\"Wait!\" I gasp, \"Don't let go, save it for me.\"\n\nI can see he can't wait long, so I cum as fast as I can, holding his head in my hands, spurting hot ropes of semen, into his mouth.\n\nI fall to the floor, as quick as I can, grabbing his hand off his dick, replacing it with my mouth and my hands. I suck him gently and stroke him firmly, just how he likes it. He reaches back, putting both hands on the floor, holding himself up, as his entire body arcs up off the floor, every part of him straining to get closer to me. I sink up and down on him, over and over.\n\n\"Aarrgh.\" He bellows as he lets go, shooting a load so deep in my throat, that I hardly taste it, as I swallow.\n\nWe both collapse onto the kitchen floor, but the tiles are freezing cold, so we get up before very long, laughing a little, as we pull up our pants.\n\n\"Wow.\" He says, leaning his head against mine, for a second.\n\n\"Mmmh,\" I whisper into his ear, licking my lips, \"the breakfast of champions.\"\n\n\"Jesus.\" He says, shaking his head and giving me a playful swat on the ass, before letting out a real beauty of a laugh, from deep in his belly.\n\nHe gets back to work on the pancakes and I pour him a glass of orange juice and then get the coffee brewing. I watch him for a moment, his arms are flexing slightly, as he mixes the batter. I could watch him all day. He's humming the chorus of the song I just played. He looks happy and completely content.\n\nThis is it, I think, this is the moment. \n\n\"Hey,\" he says, as I walk down the hall, \"where are you going?\"\n\nI turn back and smile, \"I just need to fetch something from the bedroom.\"\n\nI close the bedroom door carefully behind me and quickly open the top drawer of the dresser. I move my socks aside -- there it is. The small black box, I picked up yesterday. It's been burning a hole in my pocket ever since.\n\nI've booked a table at La Casa for dinner tonight. Ollie knows we're going for dinner, but he doesn't know why, or who else will be there. I've invited two of my brothers and their wives, and obviously, Kip and Ben will be there, too. I've arranged for his mother to fly down, to surprise him.\n\nI'm pretty sure he doesn't suspect anything. I was planning to wait until a bit later in the day to do it, but I'm so excited. I just can't wait anymore.\n\nI open the box and take a slow breath when I see it. It's perfect. It's just what I wanted for him. I pick it up and read the words I had engraved on it. I asked the jeweler to engrave them as deeply as possible. I don't want decades of wear, to erode the sentiment.\n\nI hope that he loves it. I hope, that when he tells the story, he'll say, \"It was just a normal morning, just a morning, like any other morning for us. A morning we've had so many times before, a morning, we'll have countless times again in the future.\"\n\nI hope he'll say, \"It was perfect.\" And then, I hope he'll give me that smile. His secret smile. The one that only affects his eyes. The one that only I know. I hope he'll smile like that, when he remembers what we did to each other on the kitchen floor, moments before.\n\nI close my fist around the ring, holding it tightly as I take a few more deep breaths. Nerves suddenly fluttering in my belly.\n\nThis is it. \n\nI walk back to the kitchen, standing next to him for a moment, looking at him, studying every minute detail. I don't want to miss a thing. I want this moment stamped into my memory forever.\n\nI kiss his cheek softly, feeling it instantly crease into a smile, as I do. I kiss him twice more, this time, I do it for luck.\n\nI hold my closed fist out in front of him, watching, waiting, until he looks down at my hand, before opening my palm slowly. I see the precise second he sees it. The exact moment, he realizes what's happening. He draws breath sharply, his chest expanding quickly and his mouth dropping open slightly. I see the look of delight and surprise in his eyes, as his hands fly up to his face.\n\nI hold the ring up to the light, turning it slowly, so he can read the words engraved on it.\n\nForever won't be enough.\n\nHe blinks several times. I can see he's not breathing.\n\n\"What do you say, Baby.\" I say, \"Will you be mine, forever and always?\"\n\nHe's smiling now, the biggest, most beautiful smile, I could ever imagine. His chest is heaving and his eyelashes are wet in the corners. He nods his head rapidly up and down.\n\n\"Yes!\" He says, falling into my arms, \"Yes! Of course, yes!\"\n\nHe looks at me, resting his forehead against mine, \"I already am.\"\n\nI lean in, as close as I can, kissing him, as I ease the ring onto his finger.\n\nI've been wrong about so many things, but I know I'm not wrong about this. I know I was right, all those months ago, when I said, \"Forever won't be enough.\" I know that it won't be. I know that much is true.\n\nFor the two of us, forever won't be enough.\n\nBut it's a start. \n\n \n\n \n\n \n\n \n\n*\n\nThe End\n\n*\n\nThank you for reading, I hope you've enjoyed it. I found it very interesting to write this story from a different perspective. I think it's taught me a lot.\n\n \n\nIf you've read Bent and Bent Backwards, I'd love to know which one you preferred. Feel free to comment and let me know what you think, I value your feedback.\n\n \n"
    ],
    "authorname": "herdirtymind",
    "tags": [
        "anal",
        "gay romance",
        "oral"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/bent-backwards-ch-09"
}