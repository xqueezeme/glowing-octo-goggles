{
    "title": "Efrain and Cory Ch. 30",
    "pages": [
        "Epilogue -- Christmas Eve Eve\n\n Molly Jones thoughtfully sipped her wine as she leaned against the kitchen counter. Indiana was all over the kitchen preparing their evening meal. He said it was just a simple Mexican soup recipe one of his roommates had taught him, but it looked delicious\u2014whole chicken pieces with hearty chunks of potatoes, carrots, zucchini, celery, and cabbage, along with just enough jalapeno to give it some heat. He had an avocado in the fridge, which he told her would go on top. \n\n She watched him add the last few ingredients to the stock pot, put on a lid, and set the whole thing to simmer. Tomorrow, she and her son would spend Christmas Eve with the Sages and Trans. Tonight, it was just her and Indiana. He'd arrived earlier that day, and they spent their time together chatting about this and that inconsequential detail\u2014what she did at work, what he did at work and school\u2014neither hitting close to the things she really wanted to speak about.\n\n Molly remembered a time when her son told her everything, but that hadn't happened in years. \n\n Now, Indiana kept secrets, kept her in the dark about the things going on in his world. Looking back on their life, Molly realized the change hadn't happened over night. Indiana began hiding parts of himself little by little, starting back when he'd been a boy, and the hiding only became worse as he became a teenager, and later a young man.\n\n Indiana had been around five or six the last time he'd been completely open to her. Her then-husband had finally brought himself to pick their son up after school, which had been the first and only time Indiana's teachers and classmates saw him. Indiana had her coloring, and the likeness to his father would only appear once he'd matured, which made it difficult to see that they really were father and son. Children could be petty and cruel with those different from them, and having a father who looked so very different from him instantly marked Indiana as \"other\". Then, she and Andre had their own problems, and over several years caught between the stresses of school and home, their son simply clammed up, gradually stowing away things.\n\n If she got anything at all from him, it was under duress. And really, she only remembered that happening once when he was ten, right after his first summer with his father. Their custody agreement allowed Molly to keep Indiana during the school year, but he would spend his summers and alternating holidays with Andre, who had remarried before the ink even dried on their divorce. \n\n She'd convinced herself that Indiana's nightly calls home had been little more than separation anxiety, and managed to keep up the pretense right up until he told her he didn't ever want to go back. It had taken days to coax out the reason. She knew from Andre that Indiana hadn't been getting along with his new step-brothers, Trevor and Devin, but had been assured that it was all just \"boys being boys\". Molly did not think however, that \"boy being boys\" was a good enough excuse for Claire's hellspawn calling her child freak, faggot, or momma's boy. \n\n She recalled that her son managed to hold himself together through most of the telling, but broke apart the moment she tried to assure him that he wasn't any of those things. \"But, I am,\" he'd sobbed, his voice rising. \"All of it! Just like they said! Like everyone says\u2014an ugly weirdo cocksucker pussy who needs his mommy!\" No amount of consoling, of assuring him that being different or gay or loving his mom was okay, could ease his pain, so she had held him until he'd cried himself out.\n\n After that, Indiana had drawn his uniqueness around himself like a mantle, a protective barrier between himself and the rest of the world. Molly had celebrated this change, mistaking his non-conformity for free self-expression until it was too late. Indiana's hidden life had stretched out beyond the normal secrets children keep from their parents. If it hadn't been for his interest in running and Laurel coming into his life, he might have closed himself off from her entirely over the course of his teens. \n\n Molly blamed herself. She blamed her ex-husband. She blamed Claire and her horrible sons. But, most of all, Molly blamed Michael Jameson\u2014the little shit who found every little chink in her son's armor and exploited it. \n\n The boy treated her son like a dirty secret at home, and a meal ticket when they went off to college, and Molly had to learn about this treatment from Laurel, who Michael had thankfully been unsuccessful in driving away. Years of screaming matches, Michael's cheating and hypocritical jealousy, his refusal to acknowledge Indiana, the times he flipped out when Indiana tried to hold his hand in public. Laurel said Michael had once shoved him away hard enough to leave bruises when Indiana hit a stone pillar. Molly kept silent in all this because trying to talk had made him even more secretive, a condition that hadn't improved once that boy had been pushed out of Indiana's life.\n\n But, things were shifting. \n\n Indiana, for the first time in ages, was opening up to her.\n\n And all she had done was ask, \"Who's Preston?\"\n\n Molly had been angry when Indiana disappeared after Thanksgiving dinner, but then curious as pictures began filtering in. Sure, there had been pictures of Indiana with Laurel and Mike Tran, which increased in number once Michael Jameson was out of his life. However, the last few weeks were something else. Three young men had joined the cast of characters in her son's college life.\n\n Molly recognized one of the boys in these new pictures as his roommate, Efrain, who was a smart and serious young man. She liked him well enough, especially after he'd cooked for her during one of her visits. The second boy\u2014a wholesome blond-haired, blue-eyed football stereotype\u2014usually appeared along with Efrain. Cory, as Indiana had identified him, was the new roommate who'd taught her son how to make the caldo de pollo that was now simmering on her stove.\n\n But, it was the third boy that got her attention. Laurel had told her all about \"Indie's Upgrade\", but Molly didn't think he'd be this adorable. Well-dressed and well-coiffed, with a sweet face that made him seem cheeky and lively. \n\n Although, the kid could have been the Antichrist and Molly still wouldn't have cared. \n\n Because of this young man, she had photographic evidence of her only child, who she loved beyond reason, dancing in bars, and having movie nights, and looking sharp and confident for a big presentation, and cuddling on the couch, and snuggling under blankets, and sharing meals with friends. Through these pictures, Molly witnessed a change in Indiana, little glimpses of his former self peeking through, growing more frequent over that short period.\n\n So, it was only natural that she would ask about the boy.\n\n \"Who's Preston?\"\n\n \"A friend,\" he said simply, setting a timer for the soup.\n\n \"Didn't look like just a friend,\" she said as they took up their wine glasses and headed for the living room. \"I saw the pictures.\"\n\n \"Oh,\" he said. \"He's Cory's best friend. I ran afoul of him when I tried to break him and Efrain up.\"\n\n \"Why'd\u2014\"\n\n \"It's a long story.\" Indiana plopped down on the sofa, and she sat down next to him.\n\n \"We got some time,\" Molly said and listened intently as her son led her through his and Preston's sordid journey from enemies to lovers.\n\n \"So, do you think things might get serious?\"\n\n \"I don't think so. We're just fooling around.\"\n\n \"I doubt that.\"\n\n \"Even if I was serious,\" he said, \"Preston is a little out of my league.\"\n\n \"Don't say that,\" Molly chastised.\n\n \"No, really. He's smart and funny. And, he's very attractive.\"\n\n \"Sounds like a catch.\"\n\n \"He is. Could have any guy he wanted.\" Indiana stared at his wine glass before gulping down the contents. \"No idea what he's doing with me.\"\n\n She ruffled his hair. \"You're a pretty good catch yourself.\"\n\n He laughed. \n\n \"You're my mom; you're supposed to say that.\"\n\n Molly looked at her son as she let the subject drop. She needed to schedule a little visit sometime next semester and see for herself who this \"just a friend\" was.\n\n ~*~*~*~\n\n Francisco \"Frankie\" Torres, the current Rountree Chief of Police, sipped his beer as he observed the groups mingling in the Finnegans' family room. PK and Cindy only had Jamie, and Jamie and Kate only had Preston (and the twins when Kate remarried), but the Finnegans' annual Christmas party was anything but small. The Finnegan clan tended to accumulate family members throughout the years\u2014rookies, like Frankie, that PK had taken under his wing in his time as Chief of Police, friends of Jamie and the grandchildren who had come to regard Cindy as their second mother/grandmother, teachers and coaches who'd remained friends long after the children had grown up, community leaders who grew close to the couple as they collaborated on city projects. \n\n It was still early enough in the evening that guests weren't too deep in their cups, but late enough that most young families had taken their children home. However, since PK's daughter-in-law and her second husband, along with their children, traditionally stayed over the night of the party and through Christmas, Preston was allowed enough alcohol to get tipsy, and the twins, Kent and Ellie, were allowed to stay up later than usual.\n\n Which certainly made things more interesting.\n\n Frankie noticed the young man catching up with his friends and some of the younger officers, like Kyle Fortenberry and Adam Kinney, who'd been rookies before he went off to college. Preston took after his mother, but anyone who knew Preston Kent or James Aaron would immediately recognize Preston James. While Preston'd always been quite different, there were elements\u2014mannerisms, sayings, expressions\u2014that marked him as PK's grandson, and Jamie's son. Friends and family loved Preston for those traces of PK and Jamie, but loved him even more for those parts that were all him. \n\n Ellie and Kent had been running around most of the night being cute and taking advantage of the blind eye everyone turned to the occasional sips Preston permitted them to steal (as they did years ago when Preston conned the rookies for tastes of this and that cocktail). While Kent and Ellie weren't PK and Cindy's biological grandchildren, they certainly developed many of the Finnegan family traits, right along with those Frankie had come to recognize as unique to their father, Joe. \n\n Like most people, Frankie loved all of PK's grandchildren equally, but Preston was Preston and that made him special.\n\n Frankie noticed the twins making their rounds back to Preston's group. Preston had just refilled his cup with mulled apple cider and rum, which had been a favorite of all three siblings. However, when the two lingered after stealing their sip and pulled out their cellphones, eyebrows raised. The Turner twins were up to something.\n\n \"Guess what,\" Kent said, drawing in their attention.\n\n \"Preston has a new boyfriend!\" Ellie sang. She waved a cellphone at the group. \"Wanna see?\"\n\n A few of Preston's crowd looked to Ellie, eager for some gossip, and a couple people from other groups stole some glances at the circle now forming around the Finnegan grandkids. As for himself, he could talk all he wanted about being a grown man, but Frankie still moved a little closer.\n\n \"Please tell me you're not on Facebook,\" Preston said. \"I thought I told Mom you're too young for that shit.\"\n\n \"She says it's fine,\" his sister replied.\n\n \"Don't change the subject,\" Kent added. \"We got dirt to dish.\" He began messing with his own phone, presumably to show off pictures of the new guy, as he shot a look at Preston. \"Thought we were going to let you get away with ditching us early on Thanksgiving, didn't ya?\"\n\n \"Yeah,\" Ellie pouted. \"You didn't even help put up the tree this year.\"\n\n \"And then all these pics started flooding his feed.\"\n\n \"How'd you see those? I don't even have you friended,\" Preston said.\n\n \"Mom showed us,\" Kent said. \"Oh yeah.\" He turned to the listening officers. \"We're pretty certain the blond really is just a friend. \n\n \"They still probably made out or something,\" Ellie added\n\n An expression of shock and outrage crossed Preston's face.\n\n \"Yup,\" Kent giggled, \"they made out.\" His sister nodded in agreement. \"I wonder if they did it.\"\n\n \"How the fuck do you even know about that stuff?\" Preston said.\n\n \"Preston, we're eleven,\" Ellie said, rolling her eyes. \"We're not children anymore.\"\n\n \"I've already had, like, a bajillion girlfriends!\"\n\n Frankie noticed the discrete giggles going around the room as he coughed to hide his own chuckle. \n\n \"So, back to the new guy,\" Kent said.\n\n \"We did some research,\" Ellie said.\n\n \"Don't you two have anything better to do?\" Preston said. \"I told Mom y'all have too much free time.\"\n\n \"He goes by 'Indie',\" Kent said, as if Preston hadn't spoken. \"Not sure whether it's short for something, or just something he picked up, but it's still pretty pretentious, if you ask me.\" \n\n \"You guys have got to see him!\"\n\n \"Yeah, seriously not his normal Jersey Shore morons.\" Both twins turned their phones for the group to see.\n\n \"Holy shit!\" Adam Kinney laughed. \"You weren't kiddin'.\"\n\n \"Fuck,\" Kyle Fortenbery said. \"It's like you ran through every gym bro and\u2014what are they called?\u2014the dancers...\"\n\n \"Go-go boys?\" Adam said.\n\n \"\u2014And go-go boy in Blacksburg,\" Kyle continued, \"and had to move on to baggin' hipsters.\"\n\n \"Damn, just how tall is he?\" Micah Lawrence, one of Preston's childhood friends, asked. \"I mean, Preston isn't the tallest guy, but he's not that short, but the man is towering over him!\"\n\n \"He's six-foot-six,\" Preston said, as if in resignation.\n\n Another young officer, Alliah Johnston, looked at the proffered images and shrugged. \"At least this one looks like he has brains.\" \n\n Frankie snuck a glance at the admittedly attractive boy standing with Preston and had to agree with Alliah's assessment. Hell, Preston looked more intelligent just posing next to him. Even the way they posed together was different from Preston's other guys\u2014none of the silly \"seductive\" posturing, just a simple grin. However, what really shocked him was the other boy's appearance. Brightly colored hair and a face full of piercings, and his glasses and suit the only thing keeping him from looking like a druggie.\n\n Just where did Preston meet a guy like that?\n\n \"He's a grad student,\" Ellie said. \"Studies something, can't pronounce it. An-th-ero-pol-gee, or whatever. Sounds important.\"\n\n \"I think it's pronounced un-em-ploy-ment,\" Adam said, disdainfully. \"But, still makes him sound pretty smart.\"\n\n \"We tried to read some of the articles he published,\" Kent said. \"But they had too many big words, and we got bored.\"\n\n Ellie selected another picture to display. \"They look pretty cozy here.\"\n\n \"They look really 'cozy' in this one,\" Kent said, showing off a different image on his own phone. He turned to their older brother. \"So, is he your boyfriend?\"\n\n \"No, we're just friends,\" Preston said. \"Not like it's any of your business.\"\n\n \"Oh, so he's a fuck buddy,\" Ellie chirped. Half the room, Preston and Frankie included, choked on their drinks.\n\n \"Where the hell did you learn that word?!\" Preston damn near screeched.\n\n Ellie and Kent shrugged. \"Around,\" Kent answered. \"So is he?\"\n\n \"That's none of your business.\" Preston's face turned red.\n\n \"He is,\" Ellie said with a nod. \"Do you want him to be your boyfriend?\"\n\n \"That's also none of your business.\" His face became even redder. The three siblings had drawn a larger crowd, yet remained oblivious to the quiet chuckles around them.\n\n \"He does,\" Kent declared. \"Are you going to ask Indie to be your boyfriend?\"\n\n Preston's only response was to slap his forehead and drag his hand down his face. He downed the rest of his drink before he turned around and tried to escape. The twins trailed behind, badgering him with more questions.\n\n \"You want to ask him, dontcha?\n\n \"Do you think he'll say yes?\"\n\n \"Do you like him?\"\n\n \"Do you think he likes you?\"\n\n \"Are you in looooooooooooooooove with Indie?\"\n\n \"Do you think he's in looooooooooooooooove with you?\"\n\n \"You gonna move in with him?\"\n\n \"Are you gonna marry him?\"\n\n \"Will you get matching piercings instead of wedding rings?\"\n\n \"Who'll be the bride?\"\n\n \"Duh, Preston 'cause he's shorter!\"\n\n \"Think he'll wear a dress then?\"\n\n Frankie knew that at some point, poor Preston would crack and tell them (mostly) everything they wanted to know. If only Frankie could find someone like that to do interrogations, Rountree would solve every crime in no time. Preston stalked away (possibly to find Joe and Kate to demand that his parents make his brother and sister go to bed), and the party carried on as usual.\n\n Frankie refilled his Christmas beer stein, the one he brought every year. Most other attendees had their own favorite mug or glass they brought to the celebration as it had become another one of the traditions that had cropped up over the decades since PK and Cindy began throwing Christmas parties for their friends.\n\n Every member of the Finnegan extended family knew to keep the 23rd free, no invitation needed (although, they were sent without fail). Same day, same time, same place, and everyone knew what to bring\u2014how could you ring in the holiday without Cindy's eggnog, or the berry cobblers the former Mayor and his wife always made, or Lt. Harris' chestnut soup, or any number of holiday favorites? The Finnegan Family Christmas Party was practically on the Rountree community calendar, pictures would be in the city paper the following day, and guests would joke about PK's white elephant party gifts for weeks.\n\n Even Jamie's passing couldn't prevent the annual event. That year, Frankie had worked hard to convince his longtime mentor and friend of the importance of keeping tradition, especially when losing someone as special as Jamie. Everyone loved Jamie (of course, everyone admired PK and adored Preston\u2014charisma and charm seemed to be ingrained deeply within the Finnegan genetic code), and everyone missed him, but shutting themselves off from the world would only make the hurt worse. And more than anything, Preston needed his extended family to fill the hole his father had left. The event had been more somber that year, but Frankie was sure it had cut years off their mourning process, especially for Preston. The lively college student mingling with the crowd and playing with his inquisitive half-siblings was a far cry from the inconsolable and screaming four-year-old the Frankie had to carry out of the funeral because there really isn't a good way to explain to a child that he wouldn't see his daddy again.\n\n Frankie observed Preston as he routed Kent and Ellie, freeing him to socialize once more, even if it meant more friendly ribbing from the officers and friends who'd been in the group.\n\n Preston had taught a few of those officers a very hard lesson about underestimating their opponent, and many still got flack from their coworkers for getting their asses handed to them by a little teenaged gay cheerleader (who also just happened to practice two different forms of martial arts). Frankie remembered the racket from when Preston threw and pinned Adam Kinney, and then rubbed salt in the wounds by telling him that he didn't need to worry because \"gay men can't stand the taste of pussy\". He called Kinney \"Officer Pussycat\" for the rest of the year. \n\n That little incident had probably done more to win the hearts of the City of Rountree Police Department than any of the anti-discrimination policies PK and Frankie had instituted over the years since Preston came out.",
        "~*~*~*~\n\n Juaquin Garza crept into the kitchen and snagged a couple beers out of the fridge and a bottle opener out of a drawer. Once he'd peered into the living room, catching his little brother idly flipping through the channels too fast to actually consider the late night offerings (with the volume too low to enjoy them even if he did slow down to watch), he knew Efrain had something on his mind. \n\n And that meant beer. \n\n Lots of beer.\n\n More beer than their parents had in the house. \n\n Which, for a retired Navy Chief's household the day before a major holiday gathering, was telling.\n\n Knowing his brother, he'd need some liquid courage to open up. And knowing that particular expression, Juaquin knew he'd need some courage of his own to handle whatever questions that made not-so-little-anymore 'Rain pensive.\n\n For this reason, Juaquin slunk back to the fridge and grabbed the whole six pack.He also thought long and hard about raiding their father's liquor cabinet. Fuck, even the cava blanc their mother had set aside for Christmas morning mimosas would make Efrain's late night issues easier to face.\n\n Wordlessly, Juaquin padded back to the living room and joined his younger brother on the couch. He popped open a beer and passed it to Efrain, who accepted it with an acknowledging grunt.\n\n \"What has you up so late?\" Efrain asked, his face illuminated by the screen.\n\nJuaquin opened a bottle for himself and took a swig before answering. \"Thirsty.\"\n\n\"Ya know, most people get a glass of water this time of night.\"\n\n\"Eh, close enough,\" he said, eyeing the label on his bottle. \"What about you?\"\n\n\"Not really thirsty,\" Efrain said. \"Appreciate the beer, though.\"\n\n\"No, not that,\" Juaquin sighed; fucker was going to make him work for this. \"Why aren't you in bed?\"\n\n\"Couldn't sleep.\"\n\n\"I can tell that much, asshole.\"\n\nEfrain narrowed his eyes at him, but eventually turned back to the TV screen. \"He hasn't called me yet.\"\n\n\"Cory?\" Juaquin said, and Efrain nodded. He tried his damnedest to not laugh at the thought of his punkass little bro waiting up for a boy's phone call. Satan would be pitching snowballs in Hell before their little sister, Zoe, stayed awake waiting for a boy. Juaquin remembered her once telling a boyfriend that she'd \"fuck a duck\" before she wasted time waiting for him to call her (and suggested that he fuck himself if he expected her to). If Efrain was waiting up, the goddamn Second Coming was imminent. His brother babysitting his phone was like a fucking doomsday prophecy or some shit.\n\nAs if recognizing the enormity of such tidings, the Garza brothers silently finished off their first beers, and Juaquin opened up a second round.\n\nEfrain sighed heavily and slumped back into the cushions. \"I haven't heard from him since the other day.\" \n\n\"He is in a different time zone,\" Juaquin reasoned. \"Probably isn't too late for him to call.\"\n\nHis brother's mouth tightened, and he slouched down further. \"Cory told me he'd call.\" He ran his fingers through his hair as if to hide his discomfort and worry.\n\n\"It's technically Christmas Eve already. Maybe he's busy with family shit.\"\n\n\"I dunno,\" Efrain said dully. \"Maybe you're right.\" \n\nHe took another long pull at his bottle, and Juaquin assumed that was the end of it. They sat there, quietly nursing their second, and then third beers in the glow of early morning television. Juaquin still wished Efrain would turn up the volume, and stop flipping through the damn channels, and was about to tell him so. But then, his little brother eyes glanced at him briefly before cutting back to the screen, and Juaquin knew this wasn't over. \n\nAfter several awkward moments of silence, Efrain finally asked, \"You're in love with Jen, right?\"\n\n\"Yeah, pretty much,\" Juaquin said, now regretting his decision to enter the living room without a bottle of bourbon or vodka handy, or at least downing half of it before he got to the couch.\n\n\"How did you figure it out?\"\n\n\"I'm not drunk enough to answer that.\" Juaquin doubted even borderline alcohol poisoning would make that answer easier to cough up.\n\n\"Dude,\" the younger man complained. \"Just tell me.\"\n\n\"It's just...uhm,\" Juaquin sputtered, waving his hands. \"How the fuck should I know? I just am.\"\n\n\"But, how do you know 'n shit?\"\n\n\"You're supposed to ask Dad about this crap.\"\n\n\"I can't ask Dad; he'll tell Mom, and then Mom will tell everyone,\" Efrain said. \"Do you want me to spend the entire holiday fending off bad romance advice?\"\n\n\"Yeah, actually. If they're too busy fucking with you about Cory, I don't have to deal with them asking me about marrying Jen. Maybe I should tell Mom myself.\"\n\n\"Do it, and I'll fuckin' tell her about you going ring shopping.\"\n\n\"How did you...?\"\n\n\"Jen let it slip to Zoe,\" Efrain said. \"And guess who couldn't wait to tell me all about it.\"\n\n\"The little brat.\" But, what else could Juaquin expect? After all, it had been Zoe who had so gleefully told him all about Efrain texting and snapchatting with Cory throughout the day, and about their nightly Skype calls. \n\n\"So...\"\n\nJuaquin made a disgusted grunt. \"It's all fucking brain chemicals 'n shit.\"\n\n\"Chemicals? Really? That's all you got?\"\n\n\"Yeah, totally serious. It's all chemical reactions fucking with your head,\" Juaquin insisted. \n\n\"So, it's all just brain chemistry?\"\n\n\"Exactly,\" he said, warming up to his answer.\n\n\"And me acting like a whiney bitch is just my head messin' with me?\" Efrain said, doubtfully.\n\nJuaquin nodded. \"Our brains put together these, like, files on people for all the memories and associations we have about them, and to keep it all organized, everything's coded by our emotions or whatever. So, if you associate, I don't know, a drink with fucking someone, then seeing or thinking about that drink makes your brain send all kinds of hard-on chemicals\u2014\"\n\n\"Testosterone?\"\n\n\"\u2014testosterone to your dick.\"\n\n\"That would explain my Spanish textbook,\" Efrain muttered.\n\n\"Your Spanish textbook?\"\n\n\"Nothing, just go on.\"\n\n\"So, yeah, we go through with life collecting all this shit and our brains code it, then send out the chemical feels when we remember things. Then you meet someone and spend the entire relationship collecting and filing away stuff on them.\" Juaquin paused, trying to find the best way to proceed. \"But, you start caring about them, and...I don't know, something goes sideways and every association tied up with that person gets re-coded, but the coding is fucked up, and it just turns into this massive fucking knot that you can't unravel. Being in love is like your brain has rubber-stamped nearly everything in that person's memory file with something sappy, turning the whole pile into one big clusterfuck of positive associations. Hence, whiny bitch syndrome.\"\n\nEfrain shot Juaquin an annoyed look.\n\n\"What? You asked, I answered.\" \n\n\"Yeah, great answer,\" Efrain groused. \"Fuckin' positive associations.\"\n\n\"Fuck you, it was an awesome answer,\" Juaquin laughed. \"Should put that shit on a card. 'Love is just a clusterfuck of positive associations.'\"\n\n\"And the brain chemical shit?\"\n\n\"Didn't say my analogies had to be consistent.\"\n\n\"Worthless,\" Efrain said.\n\n\"Only when it counts.\"\n\nThe younger Garza brother rolled his eyes and went back to flipping through channels. Juaquin allowed himself to relax and enjoy the last sips of his beer now that Efrain's questions seemed to be satisfied. But then, Efrain frowned at his bottle. \n\nGoddammit! \n\n\"But it could just be infatuation, right?\"\n\n\"Could be,\" Juaquin shrugged. \n\n\"So, how do you know the difference?\"\n\n\"You just do.\"\n\n\"But, I don't.\"\n\nBoth men contemplated the issue in silence, until Juaquin spoke. \n\n\"The fart barrier.\"\n\n\"What?\"\n\n\"Yeah. Love, like, transcends the fart barrier.\"\n\n\"I don't think I copy,\" Efrain said. \n\n\"If you're still crazy about them after breaking the fart barrier.\"\n\n\"I'm in love with my boyfriend because we're okay with farting in the same room? Your analogies suck.\"\n\n\"Shut up,\" Juaquin said, pointing his finger at Efrain's nose. \"I'm tryin' to be philosophical here.\"\n\n\"Fine, go for it, Socrates.\"\n\n\"Will do, Plato,\" Juaquin said. \n\nEfrain huffed. \"Just get on with it.\"\n\n\"Okay,\" Juaquin said, picking up where he'd left off. \"So you got this person you just started seeing, and you like them well enough. Memory file, rubber-stamping, blah, blah, blah. Now, this is where the fart barrier comes in. Remember how I told you to get over a chick...well, in your case, a dude, rejecting you?\"\n\nEfrain rolled his eyes. \"Imagine them taking a massive dump.\"\n\n\"It's a total boner flop, right?\"\n\nHis brother chuckled. \"A serious boner flop.\"\n\n\"Alright, back to the positive association cluster-fuck thing. You got this memory folder, and a fuckton of stuff coded for 'lust', right? Then you deploy the 'dump trick', which goes through and stamps everything with 'disgust', overriding any positive association you got in there. Right?\" Efrain nodded. \"That why chicks will do strange things to avoid bodily functions around guys\u2014'I forgot something in my car', 'I need to make a call', 'I have to get up early tomorrow', etc. But the whole bit about 'keeping the mystery alive' didn't come out of nowhere, and it goes both ways. Most guys will go along with the excuses, or come up with their own, because thinking about the person they'd just been fucking going home to drop a deuce kinda fucks with the coding. Lust and infatuation don't exactly play nice with the realities of an actual human who pisses and shits just like you do. And don't get me started on periods.\" Both brothers cringed. \"Breaking the fart barrier too soon can kill a romance. Yet, once you start crossing into that clusterfuck stage, not even the dump trick can untangle your feelings. Like, Jen has this thing about pulling Dutch ovens on me.\"\n\n\"Seriously?\"\n\n\"She fucking Dutch oven'd me a couple nights after we went ring shopping.\"\n\n\"I can't imagine Jen farting, let alone pulling a Dutch oven.\"\n\n\"Oh, she's horrible. And, believe it or not, I wasn't the one that started it. But, I still got up the next morning and bought the ring.\"\n\nEfrain's eyebrow arched. \"You bought the ring?\"\n\n\"You're not going to get all gay on me now?\" Juaquin huffed. His little brother regarded him coldly. \"You know what I meant. Fucking hell, I still need to get used to you being out.\" He paused. \"Did I at least answer the question?\"\n\n\"It made sense, actually.\" The face Efrain pulled said all there needed to be said about how begrudging his admission had been, but Juaquin chose to ignore it.\n\n\"Not quite sure if it's the same for gays, though.\"\n\n\"Eh, it's not like I'm actively thinking about dudes giving themselves enemas and shit before I fuck them,\" Efrain said. \"But it has killed boners before.\"\n\nJuaquin gave his brother an odd look. \"They do that? Enemas, I mean.\" He paused. \"And I think I just learned more about your sex life than I wanted to.\"\n\n\"What? That I'm a top? I'd think you'd be relieved to find out that your gay little brother mostly pitches.\"\n\n\"Mostly?\" Juaquin choked.\n\nEfrain shrugged. \"Mostly. Got a problem with it?\"\n\n\"No...no problem...just...wait, do you...uh...do...\" Juaquin fumbled. \"Nevermind, too much information. God, this is worse than the other time we talked about sex.\"\n\n\"You mean the time you told me about condoms, or the time you told me about the dump trick?\"\n\n\"Both times, combined.\"\n\n\"Shit, I'm a cakewalk. If you want awkward sibling sex talks, try Zoe.\"\n\n\"Zoe isn't...\" Juaquin felt his face pale.\n\n\"Zoe is,\" Efrain laughed. \"She's been trying to talk shop about boys since I got here. I think she'd hoped sharing her little 'gallery' would make me more amenable to at least sharing Cory's dimensions, if not any shirtless selfies he may have sent.\"\n\n\"It couldn't have been that bad.\"\n\n\"So, how big's his dick, really? Cory sorta looks like a 'boyfriend cock' kinda guy. He totally has one, doesn't he? But, like, 'girthy', ya know? Gotta love the girthy ones,\" Efrain mimicked.\n\n\"Honestly, that sounds hilarious. And, I'd rather stare at dick pics than field your sappy as fuck love questions.\"\n\n\"Then, you deal with our baby sister discussing the finer points of boyfriend cock,\" Efrain said. \"At least she won't use it as an excuse to pump you for details about the size of Jen's dick.\"\n\n\"Dude,\" Juaquin said, his face and tone deadly serious. \"It's fucking massive.\"\n\n\"Fuck off.\"\n\n\"Really! I fuckin' walk funny for days.\"\n\nEfrain sighed heavily.\n\n\"Don't know how she doesn't split my ass in two.\"\n\n\"You can stop now.\"\n\n\"Little bro,\" Juaquin said, stealing the remote, \"I'm just getting' started.\"\n\n~*~*~*~\n\nI shut my bedroom door. Totally verboten to lock yourself in your bedroom on Christmas, especially with family downstairs and dinner in its final stages, but I needed to be alone with my thoughts.\n\nBuenos dias mi lobo, i'll call you tonight xoxo -- 8:42 AM, December 23, 201X\n\nI looked back at the text message on my phone, the last time Cory had contacted me. Two days, five hours, and twenty-four minutes of radio silence. I didn't need to look at my phone logs to know that it had been even longer since I'd heard his voice. If I'd known, I would have insisted on the Skype call, no matter how many times he said I was obviously tired and it would be okay so save it for tomorrow.\n\nBy this time, I was willing to admit I was desperate. I texted Indie, hoping he'd be willing to check his phone on Christmas day, and willing enough to give me Preston's number without questions.\n\nNo such luck. No sooner had I explained the situation to Indie, my phone rang. The number was one I didn't know, but definitely from a Virginia area code.\n\n\"What do you mean you can't find him?\"\n\n\"Preston?\"\n\n\"Who the fuck else?\" he answered testily. I heard what I assumed to be his twin siblings complaining about their brother making personal calls during family time. \"When was the last time you talked?\"\n\n\"He sent me a message a couple days ago saying he'd call me that evening.\"\n\n\"And he hasn't? Have you tried calling him? You sure your phone hasn't been off?\"\n\n\"When was the last time you talked? Have you tried calling him? Has your phone been off?\" I shot back angrily, not quite in the right frame of mind to give a fuck, let alone realize, that I was being unfair. \"I've tried calling him, but his phone keeps going to voicemail.\"\n\nHe sighed. \"The last I heard from him was about the same time.\"  His tone became worried. \"Said 'big things going down' and that he'd call later to celebrate.\"\n\n\"Fuck! I was hoping...\" I sat on the bed, resting my head in my hands. I didn't even know what I was hoping.\n\n\"Here, let me try Keenan, see what he says.\"\n\n\"Thanks,\" I said.\n\n\"Hey, Wolfie?\"\n\n\"Yeah?\"\n\n\"Don't worry, alright? It's probably nothing.\" He cut off the call before I could think of a response.\n\nI flopped back in bed and stared up at the ceiling as I willed myself to calm the fuck down. This was starting to feel like all the times when I was younger that I had to screen phone calls for Juaquin because the dumbass had put his dick in crazy again. I realized that if I'd had Cory's home phone number, I'd probably be blowing up his parents' house line like some kind of overly-attached psycho-stalker girlfriend, and the more I stared up counting the bumps in the ceiling like stars, the more I empathized with my brother's exes. A couple of them had used mutual friends to bypass the sibling call screen and get at Juaquin. I was using Cory's best friends to get to him, which made me no different or better.\n\n\"Popcorn ceiling constellations, mijo?\" my mother asked. She'd cracked the door and peeked in, but I'd been too self-absorbed to notice.\n\n\"Here to drag me back?\" I asked, dreading her affirmative. The last thing I needed was to deal with my family while waiting for Preston to get back to me.\n\n\"Nope, your father has everything in hand.\" She sat down next to me and pointed up. \"I swear, that one always looked like a bear to me. See, it even has a 'big dipper' in it.\"\n\n\"I still don't see it.\" My chuckle was pretty weak, but still present. She'd been trying to convince me of that bear since we moved into this house. I could tell her I had no interest in having bears in my room, but I doubted she'd get the joke.\n\n\"Juaquin and Zoe told me what's going on,\" she said, her tone turning serious. \"And before you retaliate by telling me about him and Jen ring shopping, your siblings pre-empted that strike.\"\n\nI narrowed my eyes. He promised not to tell. \"He bought the ring.\" And how the hell did my sister know?\n\nMom gasped. \"He didn't tell me about that.\" She caught herself mid-squeal and poked my stomach. \"Stop trying to redirect me; I'm on a mission. Besides, it wasn't like I couldn't figure it out. You've been miserable and bratty for the last two days.\"\n\n\"Miserable and bra\u2014\"\n\nMy cell erupted in flurry of alerts, interrupting my protests. Texts streamed in from the number I now recognized as Preston's, and one I assumed to be Keenan Jerome's. Preston had created a group text to avoid relaying messages. I sat up as I read them over.\n\n\"Goddamn.\"\n\n\"What? What's wrong?\" Mom asked. I angled the phone so she could see the texts as they came in.\n\nKJ: Shit I hoped you or E heard from him\n\nPF: Can't get him either?\n\nKJ: We were supposed to get together a couple days ago, but C didn't show\n\nMom took the phone from my hands and started reading aloud when I began pacing the room.\n\nKJ: Tried callin his parents but no pickup\n\nPF: Would C screen your calls\n\nKJ: No but his dad might\n\nPF: Could you check his place?\n\nKJ: I did 2 days ago...no truck and when i knocked his dad slammed the door in my face\n\nKJ: And b4 u ask i called Cam. None of his brothers know where he is and his rents won't tell them\n\nThe grim set of her mouth matched my mood. \"Cam is...?\"\n\n\"Cameron, one of his brothers,\" I said. If his own brothers didn't know, then... I fought the urge to start punching shit. \"Fuck!\" \n\n\"Maybe he went home,\" my dad said from the doorway. \n\n\"But his truck\u2014\"\n\n\"No, not his parents' house, home,\" he said. \"You have to be back by the 27th; maybe something happened, and he went back early.\"\n\n\"Not like I can check.\" That's when I noticed Mom tapping out something on my phone. \"What are you doing?\" \n\n\"Telling Cory's friends that your father and I are sending you home early to check for him,\" she said, dropping my phone on the bed and rising. \"Get your things together. I'll pack some dinner for you both, and your father will make your excuses.\"\n\nShe swept out of the room. Dad nodded and left me alone to get on with it. \n\nIn less than half an hour, I was on the road, aided in no small part by Zoe and Juaquin, along with more food than we could eat before it spoiled (including an entire dish of flan just for Cory). Dad fabricated some last minute muster that I absolutely had to get to, holiday dinner be damned, and his story had been accepted without question. My boyfriend not calling me had turned into a full-blown Garza family emergency, but that was more worrisome than reassuring. \n\nI hoped that the three hundred miles of holiday traffic would provide a welcome distraction from the fret-fest over what I would do if I found him.\n\nOr what I would do if I didn't.\n\n&nbsp;\n\nTo be continued in EPIC Book 2: Wild Card "
    ],
    "authorname": "dayne",
    "tags": [
        "holiday",
        "athletes",
        "twink",
        "interacial couple",
        "comedy",
        "nerd jock"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/efrain-and-cory-ch-30"
}