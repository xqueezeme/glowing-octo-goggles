{
    "title": "Crazy Married Sex",
    "pages": [
        "I am a married conservative Christian woman. I belong to a Missouri Synod Lutheran Church in Des Plaines, IL. There are three that I know of, so your chances of tracking me down are slight. I am writing to other Christian wives, married to husbands who may have a \"kinky\" sexual side. If this whole subject makes you queasy, then I suggest you check out now, instead of reading on and sending me some nasty note. I warned you!\n\nMy husband is in his mid forties, as I am, though he's a bit older. We have had a wonderful and exciting sex life for almost 25 years. Although, he has always been way more sexual, and (I would say) sexually needy that me. When we were first married, I participated in sex, but didn't see a great need for it. Though his drive began very high, mine has steadily been on the increase, as I have tried over the years to respond to the majority of his advances.\n\nA little background on our professional lives might help. My husband is a seminary grad, however, instead of taking a call as a pastor of a local congregation, he ended up teaching at a Christian University. I am a nurse practitioner, working side by side with physicians in a local medical group.\n\nAnyhow, back to the real reason for this article. In the last few years, my husband and I have been advancing in our sexual relationship. He has always been ready to explore his sexual side. But in the last 24 to 48 months he has been encouraging me to do more of this (which, I have to admit, I am not really all that comfortable with). I have started using marital aides (sex toys). I have begun to use vibrators and dildos, and I have to say I have found them to be very helpful in getting me to climax rapidly.\n\nIn addition, with my husband we have started to utilize differing forms of pornography, both written (erotica) and the film variety. At first I was so uncomfortable with this, and felt it was terribly sinful and awful behavior. However, after some time, I have begun to see its benefits. It can be instructional and it speeds arousal, and I have to remark here that it does this not just for my husband , but for me as well. Usually, we watch or read this material together just before we engage in our own sexual activities. Let me suggest that, to the extent that the sexual toy are helpful for me, the porn is a like this for my husband. Early on I thought we must stop this practice of viewing or reading such things, but then I thought, \"Haven't all of my toys been an aid to better sexual expression with my husband?\" What if he told me I had to do away with them?\"\n\nThis realization, that his sexual needs may at times need boosting, just as my motor sometimes has a bit of a slow run up period, has really help me to see, both marital aides, as well as certain forms of pornography as mutually beneficial to our sexual relationship. In fact, it started me thinking, \"What should be considered 'good' and what should be considered 'bad' within our marriage relationship?\" Is our God ignorant of our sexuality? Certainly not! Is He aware that certain things can have these effects on us? Certainly He is! Is He bothered when we indulge in certain activities or actions? On this, I think it may just depend. He doesn't condone blatant sin for sure. However, even blatant sin has been dealt with by the blood of Christ. That is, \"There is therefore, now no condemnation for those who are in Christ Jesus,\" as one of the apostles wrote. But, to \"continue in sin that the grace of God may abound\" seems a poor way to go. Indeed, and I would have to agree. But I have also begun to reconsider what sin really may be in this instance.\n\nThis brings me to the topic of adultery. Very literally, adultery is a husband or a wife engaging in a sexual union with someone who is not their spouse. It is a sexual infidelity or unfaithfulness. Jesus Himself, rightfully broadens the command regarding adultery to even include lustful thoughts. But before we begin condemning everything, we should first consider, that Jesus' motivation in saying what He said was to get the self righteous to despair of their own estimations of their goodness, not to try and get people to pretend to live a certain way, in order to save themselves. He wanted people to be so clear that they could not keep the commandments of God, by showing their true difficulty, that folks would look instead for a Savior outside of themselves.\n\nNow, Jesus' words are still true. Lustful thoughts are still adultery and they still depart from God's perfect ideal of what humanity should be. Nevertheless, we cannot free ourselves from lustful thoughts, ideas, and images. This shows us the nature and depth of our own depravity. Even if we flee such things, then we develop a desire to have them again. And, if we successfully flee and don't desire these things, then we commit an even worse sin of religious pridefulness.\n\nWhat can we do? Well, we can be realists when it comes to all manner of sin. We can take note that not everything we engage in in the different areas of our lives is pure and clear and untainted by sin. In fact, everything we do is tainted, even what we consider our purest actions. So, what then? Well, again we need to be realistic about our own nature, and we need to show respect for God's institutions like marriage, knowing that, though life is full of sin, it does go better when we follow God's prescriptions for it, to the best of our ability.\n\nSo then, when it comes to our marriage, we refrain from any wholesale adultery, while at the same time we each know that it would be impossible to root out all lust from our thinking. The trajectory of our sexuality is aimed toward one another then. I may get hot and bothered as I utilize my vibrating rabbit, but in the end I don't fixate on the rabbit, but instead how I can use my sexual energy and horniness to engage with my husband. My husband, and I, for that matter, my watch some explicit sexual scene in a movie, which causes and enjoyable engorgement of our members, but we don't seek out the people in the scene to have relations with. To the contrary, we look to each other for sexual fulfillment.\n\nYou see, part of the facts not often submitted regarding our broken world, is that it is sexually broken too. And that includes the pure mechanism that make human sexuality possible--arousal. Men end up impotent or with arousal issues as a result of the sinful fall. Women too, suffer from menopause, sexual disfunction or a lack of sexual drive, again as a result of the sinful fall. It seems then, anything that can curb these problems, and promote sexual excitement and health between married couples can and should be adopted into use, rather than allowing our sexuality (which is a gift from God to be diminished).\n\nSo now, this is where this article goes from being mildly discomforting for many of you women who read it, to downright out of bounds and disgusting.\n\nBased on the same or similar reasoning in some of the above paragraphs then, I have slowly become far more willing to, as my husband has encouraged, \"explore my sexual side\". And, what have I found? I have found that, more than just vibrators, sensual stories and movies, excites me and even my husband sexually. I have experimented with my nudity, by going to a nudist beach and baring it all. I have gone with and without my husband (because at first I was ashamed to tell him what I was up to). Both in both cases I came home and had the most fulfilling sex of my married life, and help my husband to enjoy the same. Its not ever going to be a lifestyle, or something I get up and share in church about, but I get sexually charged up by seeing nudity and having mine seen.\n\nOkay, prepare yourself for this! I have also engaged in sexual activities with my husband while another couple looked on. I will not share all of the details here, but here are a few. I've wanted to do this ever since my husband told me it was a fantasy of his. At first I pretended to hate the idea, but deep down it intrigued me. But how could we do it safely, in a way that would not destroy our reputations in the eyes of people that we would never be able to convince? Well, I decided to find an anonymous like minded couple on the internet. I met with the other wife, at a Starbucks of all places, to get acquainted and discuss the ground rules. We decided that there would be no overt sexual contact unless it was done between the married couples (this was to be a firm rule). The curious touch of a breast or a penis was deemed okay between couples, but nothing that could be construed as fondling, rubbing or arousing. Other than that, we would meet, get naked, enjoy a hot tub as a group, and head to the bedroom, to show off for each other. Never once did I wish I was having sex with the other man. But I will say that I have never been so aroused. I have never, to this day, been able to give my husband the kind of sexual pleasure that I was able to that evening. The air was just full of sexual tension, excitement, and fervor. And, by the way, we all needed a little fermented grape juice before anyone could relax enough to even disrobe. Would I do it again? Not everyday, no. But on a special select day, or vacation, I sure would. I want to show my husband how sexual I can be--that's the gift I can give him. And when I give it only to him, as he is the only one to experience me, I think I am doing something laudable, rather than something dirty.\n\nShould we be parading our sexuality in public? No, absolutely not! But we did not. This was a privately arranged display of sexuality, mutually agreed upon by those involved.\n\nI am learning that a man always needs new and exciting sexual stimuli in order to enjoy real sexual fulfillment. And I want to be the one to provide it, and to be involved in it, rather than having him be frustrated, or worse, looking elsewhere. I will continue to push my limits, within our marital limits, and what we see as God's framework, to excite and arouse my husband, myself and our sex life.\n\nYou may be asking, \"Aren't you just justifying a bunch of bad sexual behavior?\" My answer is, \"No, I don't thing we are.\" We are fulfilling one another to such an extent that we are helping one another to avoid the really intolerable and destructive behaviors that are rampant in other more stilted marriages.\n\nFor me there are still boundaries that I will not cross. I will not engage in sex with another man. Though my husband has discussed it, and said it was a fantasy of his, I will not engage in a threesome (even though a male, male female threesome is a very erotic thought for me) I will not cross that line. I will not engage in swinging or cheating on my husband.\n\nYou see, it is all about marital fidelity, and there are two parts to that. First, being faithful to the one you married by not fooling around with another. Second, being faithful to the one you married by fulfilling their sexual needs, and giving them your unbridled sexuality. That is just it. For years, in my marriage, I didn't really give my husband my full sexual self. I bridled it. I tried to let him know I didn't have anything but the purest sexual thoughts and ideas. It sounded nice, I suppose, but it was not true. I was not giving him the true sexual me. I was giving him the picture of a woman I thought I should be instead. It was a mistake, girls. I should have opened up years ago. I didn't know it but, deep down, I was frustrated and so was my husband. Now, everything is out there. I know what he wants. He knows what I want. Some of what he wants is crazy and off limits, and some of it is workable. But at least he knows he can be honest about it all with me, and maybe even enjoy that which is not out of bound, by working with me to accomplish it. And the same for me. I now share my desires. I tell him about my enjoyment of showing my nudity, and of how exciting it is for me to watch others having sex. We look for movies together, we shop for toys, we look for opportunities to arouse each other. Marriage has never been so fun, or felt so secure.\n\nI know I have run on a bit without a clear outline of thought, but I hope you get the idea. I am a Christian. I have a strong faith in Christ. I am very sexual woman too--a married one, who has a responsibility to the one man I married. I am going to move forward in my Christian freedom, and be all of these things to the best of my ability! "
    ],
    "authorname": "stephandjim",
    "tags": [
        "christian",
        "toys",
        "voyeurism",
        "exhibitionism",
        "marriage"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/crazy-married-sex"
}