{
    "title": "Vicki Loves - Ch. 01: Vicki",
    "pages": [
        "Chapter 1 - Vicki\n\n...wherein an altercation is avoided, a proposition is offered, and an afternoon doesn't go entirely to waste.\n\nVicki Tate should have been home hours ago, and she was not happy about that. It wasn't her fault that stuck-up bitch Kimmy Lustergaard had purposefully tripped her as she was walking to her final class of the day. It wasn't her fault that Kimmy's posse of blonde, vapid sycophants cackled like wild coyotes when she slammed face-down into the floor. However, Vicki would begrudgingly admit, it was, well, a little bit her fault when her fist connected with Kimmy's left hip a few seconds later in a rare fit of rage. As Kimmy stumbled back into the lockers, the back-and-forth insults began to fly.\n\n\"Fucking slut!\"\n\n\"Cum dump!\"\n\n\"Tits for brains!\"\n\n\"Whore slag!\"\n\nBy this time both girls had dropped their backpacks, each itching for a fight, but before either could act, their worlds came to a screeching halt when a young, female voice called out from further down the hallway, \"Girls! My office, now!\"\n\nWalking next to each other on their way to Principal Taylor's office, Vicki almost lunged at Kimmy when she whispered, \"Oooh, I really am sorry, Vicki, I thought for sure with those big ole' juggs of yours, you'd be able to cushion your fall!\" but held it together and kept looking forward, as she knew she was already in enough trouble as it was, and the last thing she wanted was to become permanently associated with Kimmy Lustergaard by everyone in the school. Ms. Taylor called Kimmy into her room first and quietly shut the door behind her, while Vicki plopped her cute, round butt into a nearby uncomfortable wooden chair, shifting it around for a few seconds to find the comfiest position.\n\nShe zipped open her backpack and pulled out her compact mirror to see if her earlier fall had done any temporary damage. Luckily she didn't look too disheveled, as her short jet-black hair didn't have that far to move. Still, it was a bit out of place so she spent a few moments straightening things out to where they should be, making sure it framed her tiny, youthful face evenly. It took a bit longer to get the section that fell loosely between her eyes just right. There was a bit of dirt on her upper cheek which she easily wiped off, but otherwise her makeup was unmarred. After reapplying some pink lipstick and gauging that she now looked better after the fall than before, she spent a few seconds looking in the mirror right into her large blue eyes. She couldn't help but smile at the friendly, pretty face looking back, and gave herself a small air kiss before snapping the mirror shut and placing it back.\n\nIt wasn't long before Kimmy loudly paraded out of the inner office, her expensive F-cups leading the way, her curly blond hair flowing behind. She gave Vicki a quick look, stuck her tongue out, and cupped her hands below and way out in front of her chest, quickly moving them up and down, silently mocking Vicki's form. As soon as she passed, Ms. Taylor called for Vicki to come in.\n\n\"Ms. Tate, you're next.\"\n\nShe sighed, walked in, and sat down smoothly in front of the large wooden desk between her and Principal Celia Taylor.\n\nVicki wasn't too worried about what she was going to hear, as Ms. Taylor and Vicki had become fast friends early during Vicki's freshman year. At the time, Vicki was incredibly shy, mostly about her rapidly expanding chest, and she always ate lunch by herself outside away from everyone. Once Celia noticed that the sad-looking, gorgeous girl was sitting alone day after day in the shade of a row of bushes, she immediately felt for her. As the youngest principal the Glazed Peaks Community School District ever had, she felt she had a closer connection to her students than other, older administrators, and strongly believed that she could relate to them better than most.\n\nAs she was so much younger than her peers, a natural beauty, and likewise impressively well-endowed, she too felt judged constantly, specifically on her work performance and rapid promotion to her current role. She knew there were nasty rumors swirling about how much of her success had to do with her looks, and numerous times she had broken down in tears when she gave it too much thought.\n\nThey had ended up spending the rest of that blisteringly hot day talking and hanging out in Ms. Taylor's office. Vicki was relieved to find a true friend who made her feel special, who pushed her to cultivate a positive view about herself and her insanely overdeveloped body, and who never talked down to her. Celia was happy to have made a difference in this young, charming girl's life while also gaining a confidant to vent to about her own life without judgement.\n\nVicki had hung out with her in this very office during lunch periods many times over the next three years. Instead of the formal meeting position they currently found themselves in, the two usually sat right next to each other on the edge of the desk, their long thin legs, supple thighs, and buoyant breasts constantly brushing up against each other as they confided, giggled, and gossiped. Even in those early days of their friendship, both Vicki and Celia often found themselves thinking about their full-body footsie late at night as they each went to bed, causing no end to rough nipple tweaks, fingers pushed deeper inside wet, welcoming entrances, and bloated clits feverishly stroked and rubbed in both bedrooms.\n\nBeginning not long later, their lunch breaks together started with tight and long-lasting hugs, and then again before they parted ways, each supremely comforted by but also revelling in the feel and warmth of the other's soft, bouncy curves pressed hard against their own. More often than not, they found themselves with their extended nipples lined up, sweetly kissing, bobbing against each other. It wouldn't be uncommon for them to stand completely still for minutes behind the closed office door, embracing, trying to ignore the stuttered breathing in each other's ears, not wanting the extreme pleasure of their jousting, expanding sucklers to end.\n\nSoon after this unexpected, but not unwelcome, level of physical intimacy began, Vicki had started ditching her bra in her backpack just before their closed office lunches, freeing her overly large and overly sensitive buds from having to fight through a layer of thick padding to first reach and then envelop her best friend's smaller, pert tips. Celia started doing the same almost immediately when she knew Vicki was coming, instinctively needing to feel Vicki's massive tittycocks massaging her cute peaks through as little fabric as possible.\n\nSometimes it seemed like neither would be the first to stop roaming their hands along the other's back as they enjoyed their private, but always unspoken, game. On days when either Vicki or Celia was feeling down, stressed, or overwhelmed, and looking to the other for comfort, they would let their huge breasts make out for the entire hour, both women happily skipping their meal to make sure their friend felt wanted, needed, and loved.\n\nBetween Celia's administrative workload and Vicki's stressful school schedule, they both relished this private oasis away from the world, their large pairs of tits rolling over and rocking into each other, their firm athletic tummies laid flat together, and their smooth, dripping pussies all but converging, with only their skirts or dresses separating their amplified arousal. At the end of their lunch together, there was almost always two large wet spots on the edge of the desk where they had been sitting. Only when Vicki was gone would Celia guiltily indulge herself by leisurely lapping the puddles up with her tongue, swirling their combined pussy juices around in her mouth, savoring the taste of their dirty mix, and wishing she could fill her stomach with more.\n\nIt seemed that almost every day could possibly lead to a stolen peck on the cheek or neck, a nibble on an earlobe, hands that traveled too far south over the swells of their curvy derrieres, or a moan finally signaling out loud what they were both thinking, but this was so far not to be. Celia had kept telling herself how inappropriate and dangerous a student/teacher relationship would be if it became public, and Vicki was ever afraid it could ruin the close friendship they already had, which they both absolutely treasured. So, for an impossible amount of time, these flirtatious and silent caresses and squeezes had remained just that.\n\n\"So, Vicki, you weren't actually going to keep punching that little darling, were you?\"\n\nCelia's high cheekbones smiled as she said it, aware how Vicki felt about Kimmy, and she herself was not exactly a fan. Her long red hair poured down around her radiant, cheerful face, as she leaned slightly over the desk, tight maroon wrap dress coming along for the ride, carefully squishing together one of the finer and larger bosoms to be found in the state. She crossed her fingers together, lying her lower arms straight out in front of her on the desk's surface.\n\n\"I...I don't think so, I mean, she's terrible, everyone knows that, and I thought that she would have given up on digging into me this year. She's the one that has to keep comparing herself to me; I don't want to have anything to do with her! I also don't know why she's always trying to make me feel bad about myself. I don't! And I never will.\"\n\n\"I know, dear. You are a beautiful young woman, as I've told you too many times, and you don't deserve any abuse from anybody, let alone her. I really think that it's just simple jealousy manifesting in a way that she feels like she has to lash out, even though it doesn't make any sense, and it only makes her life more complicated.\"\n\n\"She seems to be literally tormented by my boobs, and yeah, they're huge!, but you don't see me going up to her and poking her in the nipple and saying 'Airbags deployed!' I mean, we're almost in college. Calm your tits, Kimmy Lustergaard!\" They both laughed loudly, knowing that none of what they said would ever leave the room.\n\nGetting caught up in the moment, Celia began affecting a high-class snobby accent, proclaiming, \"Oooh-la-la, I'm Kimmy Lustergaaaard, la-dee-dah! Oh, Vicki, your beautiful boobies have left me all bewildered and troubled in my shallow mind! Do tell me all about them, would you please?\"\n\nMouth wide open in tickled shock, Vicki quickly followed along with her own pompous tone, tittering, \"Oh, Kimmy, yes, I do see that you are quite an addled young lass, but do not fear! Let me reveal all about my glorious gazongas, they really are quite astonishing!\"\n\nVicki grabbed the bottoms of her tits, extended her fingers, and pushed them up with her hands. \"As you can see, Kimmy dear, each one is quite larger than my head, and I am confident that each is also smarter than the head on your...dumb shoulders!\"\n\nMs. Taylor snorted, and then replied, \"Oh my Vicki, yes, I see! As I am nothing but a dullard, please set me right and tell me even more about your luscious whoppers! I need to know more!\"\n\nRaising an eyebrow, Vicki continued on.\n\n\"Oh Kimmy, you are precious and simple. As I do feel sorry for you, let me continue. If you look closely, will notice each of my...er, lady-knockers is topped by the finest and largest nipples in the land, able to bring great pleasure to all they encounter, unlike you, who only brings gloom and...and...uh, being a jerk!\"\n\nBoth Vicki and Ms. Taylor instantly began cracking up at the sudden collapse of their hoity-toity repartee, both wishing they could just stay locked in here for the rest of the school day. Still swept up in the light-hearted talk about Vicki's colossal chest, Ms. Taylor leaned further forward, noticeably sliding the bottoms of her honeydew-sized breasts across the desk's surface, angled her eyes down slightly, smiled, and in a quieter voice, whispered, \"You know, when I was your age, I would have killed for a pair of tits like those. I mean, okay, I thought mine were spectacular, but Jesus, Vicki. I'm honestly not that surprised Kimmy can't stop thinking about them.\"\n\nShe swallowed, louder than she intended to. \"I...I'm sure she's not the only one.\"\n\nVicki too leaned forward, taking a long second to lift her gigantic chest so her titanic titties could rest on the desk between them. She placed her hands softly over Ms. Taylor's, smiled in return, and whispered back, \"Ms. Taylor...Celia...If you let me go home today without any punishment, I'll let you do anything you want to them, right now. And I mean anything.\"\n\nThey continued to look at each other for what seemed like a lifetime, their fingers unconsciously grazing across each other, both of their heartbeats getting faster and louder. Vicki and Celia couldn't help but notice how quickly and prominently their nipples pushed out from their respective tops, as if they were straining to connect with the opposite pair, just a few short inches away. They both believed that they could actually feel the blood flow throbbing through their rapidly extending teats, as their minds quickly visualized what might happen next.\n\nMs. Taylor suddenly pulled her hands back, quickly moistened her lips, and in a slightly hoarse voice said, \"Vicki...you...you know I can't. You are amazing, one of uh, the best students here, and of course my...friend, and another time, another place, but...\" She looked down, and wiped a tear from the corner of her eye. \"But, here's what I have to do. I'm already being threatened by legal action by Mr. Lustergaard if Kimmy is disciplined in any way, I've got the school board riding me nonstop to keep that damned family happy, and I can't have students feeling like a hallway fight is a thing anyone can get away with. My hands are tied, I have to do something, and I'm sorry you're on the receiving end. Look, two hours detention, it's the minimum I can give you but...\"\n\nVicki abruptly rose up, tears already running down her cheeks, grabbed her bag, and quickly made her way to the door leading to the outer office.\n\n\"No, it's fine, I get it, whatever. I'll...see you around.\"\n\nCelia, who had cradled her face in her hands by this point, muttered helplessly behind tears of her own, \"Oh God, Vicki, I...I'm sorry. I'm so sorry.\"\n\nA quick call to her mom, Jeannie, informed her of the basics of Vicki's delay coming home, and of course she was happy to pick her up after work, but until then, Vicki was stranded at school, and in a bad mood about too many things. At the end of the classes, Vicki slowly made her way to Room 305, resigned to not being able to enjoy her precious solitary time between school and when Jeannie got home. Flipping the back of her skirt up as she sat down in the back of the near-empty room, she again shimmied around in her seat briefly, the cool plastic feeling good up against her squeezable buns.\n\nShe was alone except for the elderly Latin teacher unlucky enough to be roped into detention duty and what looked like three members of the football team. They appeared to be idiots, and ignored her entirely, spending their time upfront, laughing to each other and passing notes, occasionally causing the old crone behind the desk to point her finger their way.\n\nVicki spent her time in detention thinking about three main things. First, she mentally kicked herself for acting like such a bitch to Ms. Taylor...Celia...no, Ms. Taylor. Vicki knew she didn't want to send her to detention, and there was no reason to have run out of the room like a baby. She promised herself to apologize later, and hopefully she wasn't too mad with her. She also wondered what would have happened had Ms. Taylor...no, Celia...had taken her up on her spontaneous offer to freely ravish her giant teenage boobs. She wasn't even sure she meant it when she asked, but the idea that such a forbidden proposition was out there between them, between authority figure and student, between best friends, caused her face to noticeably flush.\n\nSecond, she took some time to further consider how things might be different if she didn't have, by far, the largest tits of anyone she knew. They were the biggest, fullest, roundest, heaviest, and in her mind, goddamned most perfect set of boobs she had ever seen. There was nothing Kimmy Lustergaard could ever say that could cause Vicki to love her body less. While they sat high on her chest with hardly any sag, because of their sheer size, the soft, extra-smooth, milky-white curved bottoms of her tits came all the way down to her taut, flat navel. Even when she wasn't wearing a bra, each of her magnificent twenty-pounders jutted out almost two feet in front of her, with plump, oversized nipples often eager to race much further ahead. She knew Kimmy Lustergaard probably was just jealous because no matter how much money she had, she was never going to have anywhere near the completely natural and mouth-wateringly massive rack Vicki did.\n\nAfter cheering herself up a little bit about that, she spent the rest of the time looking down and daydreaming about what she would have been doing to her massive milkers if she had gotten home at the regular time. They were simply outstanding in every way, and Vicki was absolutely obsessed with them. Besides her wonderful single mom, who had raised her all alone for Vicki's entire life, she didn't love anything on the entire planet more than her unholy hooters, and she spent as much time as possible giving them the full love and affection she felt they deserved.\n\nVicki's plan to make it through detention by imagining a better version of the late afternoon started with her picturing herself standing in front of her bedroom mirror, slowly untying her extra-tiny white robe, which as small as it was, only further accentuated the curves of her gigantic bust, trim waist, and perfectly cuppable behind. It covered only the very outer sweep of her boobs, and the bottom of the robe only made it a quarter of the way down the curve of her delectable ass. Letting the fluffy cloth swing open as the belt came away, she saw herself lock her knees together, grip her hands tightly on her firm buttcheeks, and lean forward to make a show of her swinging, pendulant globes. She could almost feel the cold air of her room that would cause goosebumps to form all over and bring her already prominent nipples to even further attention.\n\nAfter dramatically dropping the robe to the floor, she next saw herself crawling onto her bed completely naked, keeping her luscious rear end high in the air. Vicki then envisioned giving her naughty young butt quite a few playful spanks and squeezes before ultimately settling in with her back against the padded headboard. She then licked her lips as she imagined pouring an entire bottle of her favorite lube onto each of her quivering udders in preparation for the hours of self-stimulation she carried out daily after school and before her mom came home. She pictured rubbing the sweet-smelling, creamy liquid all over and around her heavy tits over and over again, taking in the expansive curves and soft, squeezable flesh her breasts presented to her small hands. She especially loved to rub her hands all over the delicate, cushiony backsides and wide bottoms of her massive tits that spent their days sliding and bouncing against her athletic torso.\n\nShe pictured her nipples getting larger, longer and harder as she continued to manhandle her huge, beautiful breasts, sliding her palms and fingertips over every inch of her perfect globes, often pressing them both together, forming unworldly cleavage, using the slippery skin of one oversized boob to glide the lubricant around on the other. Only when she felt that not a millimeter of her oversized high-school titties hadn't been fondled, squeezed, caressed and massaged would she turn her attention to her mouth-filling, skyscraper-like nipples.",
        "Vicki imagined bringing one of her hands down to her gushing teenage pussy and collecting an overflowing handful of her natural juices that were pouring out of her onto the covers, already forming a deep, warm pool around her happy tush. She cooed, and thanked her extra-kissable young cunt for providing a never-ending supply of delicious nectar by dragging a dripping finger up her throbbing, inch-long clit on its way back to her fat, creamy zeppelins, promising it much more attention later.\n\nShe envisioned drizzling her tasty cunny honey over and around her hungry, distended nipples, frosting their wide, puckered tips with the delicious, syrupy juices still spilling from her pussy onto her covers, and it wasn't long before the tingling, rippled stalks of her enormous nipples fully glistened with \"Ms. Tate!\"\n\nVicki shot straight up in her chair. \"Yuh-what?\"\n\n\"Ms. Tate,\" the old woman upfront repeated, \"You looked like you were falling asleep, and that is specifically against the rules. 'No sleeping during detention.' We're almost done, you can make it.\"\n\n\"Uh, yes, ok ma'am. Sorry.\"\n\nThe football players had turned around briefly to snicker, but soon forgot all about her. With these divine visions of her much luckier self still foremost in her mind, she internally winced for embarrassing herself like that. She was relieved that nobody could see just how soaked through her barely-there thong panties were, as well as that the entire top of her seat was fully covered in her divine secretions. Vicki couldn't help herself as she discreetly mopped her pussy juice up with her bare bottom, quickly coating every last part of her round, perfect ass in her yummy lubricant. She smiled, glad that nobody was going to have to use this desk until tomorrow morning.\n\nVicki again tried to focus, challenging herself to sit still for the rest of her time in this godforsaken room. Unfortunately, she promptly found her mind's eye right back in her bedroom, as she rolled her tongue over and around her fully-aroused, four-inch long nipples, each so thick they barely fit inside her petite, greedy mouth. She saw the wide, pulsing stalks slide back and forth and back and forth between her full, glossy red lips as she dragged her teeth along their sensitive sides, lightly biting down on the hard, swollen, nerve-filled tips, further ravishing the nipples' peaks with her loving, undulating tongue.\n\nShe pictured her ruby lips leaving cute red lipstick kisses on her tender, bumpy areola as she sucked her entire nipple into her mouth, making euphoric contact with the soft, puffy pink rise that pushed her giant nipple-shafts two full inches off her breasts' immaculate domes when fully engorged. Vicki had probably spent more time during her high school years messily gagging on her extra-long, extra-thick, meaty nipples then she did actual schoolwork. She vividly imagined suckling away at her swollen teats with the enthusiasm of a hungry baby, never wanting to let them go, and hoping against hope for a rich, gooey reward.\n\nIt goes without saying that Vicki didn't think that there was anything more beautiful than her own throbbing nipples at full mast. Watching her immense nipples become fully erect as they grew longer and longer and thicker and harder was something Vicki never got tired of. She pictured herself planting soft, gentle kisses all up and down their sensitive lengths, lustily whispering \"I love you\" after each press of her moist lips, simultaneously mouthing the words from her seat in the back of the room. She did love them, and she knew they returned her love. She thought back to the thousands of ferocious orgasms that had ripped through her helpless, arching body just by precisely touching her grand summits in just the right way, explosively rewarding her time and time again for how well she treated them.\n\nLooking at the clock, she realized she wasn't going to make it to the end of detention through the power of imagination alone. When she was sure nobody was paying her any attention, she undid the highest button of her shirt to allow herself better access to the top of her tanned bust. She lightly caressed the soft, rounded tops of her chest with the tips of her fingers, tracing the edge of her shirt from one side to the other and back again, nearly hypnotized by the rise and fall of her tits as her breathing became deeper and more rapid. Sweat beads quickly began forming all over the soft skin of her large, beautiful breasts, and Vicki ever-so-slightly twitched with each droplet's journey down their round, jiggly curves.\n\nFaster and louder heartbeats vibrated through her mighty chest and Vicki was sure she could feel the pulses reach the very ends of her confined nipples. She had to catch her breath multiple times as she gently brushed a finger up and down the chasm of her deep cleavage, not pushing down, just sliding, up and down, up and down, from the bottom of her neck to where the second button of her shirt put an abrupt and frustrating end to her finger's journey down the enticing ravine between her heavy teenage melons.\n\nStill, there was more than enough exposed flesh to pay attention to in the back of Room 305. She was discouraged that she couldn't give her whopping hooters the spirited and vigorous loving they needed and normally received, but she knew this was hardly the time and place. Slowly, over and over, she kissed the tips of her pointer fingers, and pressed them down at points all over her exposed titty-tops to let her bouncy boobies know how much she loved them, that she was sorry they had to stay imprisoned behind a bra and tight clothing for so long, and that she promised to more than make it up to them with an extra-long and exceptionally-enthusiastic self-sucking session in the privacy of her bedroom later that night before bed. It wasn't long before the crests of her bouncy mountains were smeared all over with pink lipstick smudges, and Vicki happily thought to herself how she would just have to spend a little extra time in the shower washing her expansive tits clean.\n\nJust when she thought she couldn't stop herself from undoing that damned second button, the elderly Latin teacher stood up and dismissed everyone from their sequestration. Vicki wiggled her butt around on her seat in a futile attempt to clean up the small flood she had been sitting in, inadvertently sighing as her bottom once again became coated in her savory juices. Pulling herself together, but still in a bit of a daze, she quickly snapped up her backpack and made her way to the parking lot where her mom was hopefully already waiting.\n\nShe now felt anxious and her head felt muddled after teasing her body and mind with lusty images and light stroking for so long but not allowing herself any release. Her legs intermittently wobbled as she hurriedly walked outside, relieved to see her mom waving from inside their family car, but also acutely wishing that she was already home.\n\n\"Hi baby,\" her mom beamed, \"How's my little jailbird?\"\n\nVicki Tate truly was her mother's daughter. Vicki had of course inherited Jeannie's black hair, blue eyes, small mouth, and extraordinarily pretty face. However, the most dominant genes Jeannie had passed on were from her own lewdy oversized breasts, which constantly begged to be wrapped and slid around cocks worthy of their size, to be kneaded, squeezed and groped, to be slapped, pulled and whipped, to be sucked on for hours straight, and to be thoroughly coated in gallons of creamy cum. Hers were tits to be used, abused, and then punished all over again, and it happily turned out that Jeannie wouldn't have it any other way. They were maybe a bit smaller than Vicki's in overall titty volume, but they were certainly much heavier and denser.\n\nJeannie had been worried that Vicki would push her away once she became a teenager, but that had, to her ever-grateful astonishment, never happened. In fact, the two were as close as they ever had been, and hung out together every moment Jeannie wasn't at work and Vicki wasn't at school. They loved shopping together, and they always shared a dressing room when they tried on clothes together (specifically, clothes for outside the home; super-stacked Jeannie and her increasingly juggy daughter rarely wore anything more than socks or thigh-highs inside and loved helping each other rip off their constricting bras, shirts and dresses). Plus, as Jeannie was not even twice Vicki's age, they had more than once enjoyed the benefits of passing themselves off as overly busty siblings.\n\nThe Tate girls were both so comfortable and cozy with each other that neither gave it a second thought when they snuggled up together in the evenings fully nude, wrapped up tight against each other's warm, comforting bodies under a throw blanket as they watched movies, feeding each other popcorn and doing their best to wipe their buttery fingers all over each other's soft, expansive curves, causing no end of giggling, tickling, and unspoken arousal.\n\nThey also weren't shy when it came to showering each other with physical affection, a by-product of Jeannie and Vicki being the most important people in each other's lives for eighteen years. The two huge-breasted knockouts never tired of kissing, and regularly found opportunities to lock lips; when walking past each other, while waiting for the oven to heat up, while cleaning, or simply when checking on the other to see what she was doing. A regular highlight of Jeannie's mornings was when her top-heavy high-schooler, half-dressed with her button-down shirt wide open and cascading around her huge bouncing tits, bounded into her bedroom and securely latched her insatiable young mouth to Jeannie's over and over and over again before she left for school, hungrily whispering \"Mmm, I love you, mommy\" as if in a daze after each loud, wet smooch. Vicki loved how her mom tasted and had nearly missed the school bus a number of times because she couldn't bring herself to pull her her lips away from those of her beautiful, naked mother warmly embracing her.\n\nPurposefully trying to sound as pitiful as possible, Vicki pouted, \"Can we please just go home, I've been stuck here for entirely too long.\"\n\nShe carefully stretched the seatbelt over and between her giant tits, doing her best to avoid dragging it or her hands against her screaming nipples, which had been begging for stimulation since detention began.\n\n\"Are you sure we don't need to sign some papers for the warden or anything like that? Wait, did they give you an ankle bracelet? I can't live with a registered criminal!\"\n\nJeannie couldn't stop smiling at Vicki and the situation she had found herself in, but kicked the car into drive so her daughter wouldn't get too mad at her constant ribbing.\n\n\"Ha ha, very funny. Kimmy's the one that should be been festering in there, not me.\"\n\n\"I know, baby. It's so sad. You can tell me all about it over dinner, and I will almost definitely take your side in the whole matter.\"\n\nJeannie looked over at Vicki, giving her a concerned look. \"You're not looking too well, you know, you're sweating all over and\" \"Mom, watch out!\"\n\nTurning like a shot towards the front of the car, Jeannie slammed on the brakes to keep from hitting a little bunny that had bounded in front of them right at the edge of the parking lot. Jeannie instinctively reached her right arm over to prevent Vicki from flying forward, and that was the beginning of the end for Vicki.\n\nJeannie's hand fully cupped the front of Vicki's right breast, her nipple pushing hard through her bra against her mom's open palm, while her left stalk was severely bent beneath Jeannie's arm. Vicki's eyes rolled back, and a shaking fit began in her convulsing chest which quickly made its way down to her legs.\n\n\"oh OH GOD aahhhhhHHHHHHHH\" she gasped, giving in to the pleasure her body had long been begging for.\n\nCaught by surprise, Jeannie could only grasp Vicki's left hand with both of hers as Vicki's sudden, pent-up orgasm raced through her body, pinned down by her seatbelt. Vicki slid her right arm between her boobs, clasped her throat with her open hand, and felt her entire body convulse at once. Instinctively, she spread her legs and raised her butt just as her itty-bitty panties were forced aside by a raging torrent of girlcum. Unceasingly and furiously splashing against the glove compartment directly in front of her, it showered the entire front interior of the car, including Vicki and Jeannie, in her fragrant spunk. Her prolonged firehose stream of an ejaculation lasted an unbroken ten seconds, her hips quaking throughout, her sweaty left hand trying to grip Jeannie's ever tighter. Both their upper bodies became more and more soaked by the vast spray reflected back at them, as stabs of pleasure continued to carpet-bomb Vicki's virile young body.\n\nAs her orgasm slowly subsided, and her twitching calmed, she fell back slouched against her seat, her bra visible through her cum- and sweat-drenched shirt. She took a few seconds to allow her breathing to return to a normal pace. As she slowly wiped her womb juice from her eyes, she took in the sight in front of her. The glove compartment and right-side dash was completely covered in her thick slop, and was steadily dripping into a massive puddle that had accumulated on the floor mat beneath her feet. She glanced to her left only to see her mom still tightly holding her hand, looking like she had just come in from the rain, her eyes still wide in shock from the spectacle unleashed before her. Still, she smiled warmly as Vicki came to, and lightly brushed her hand through Vicki's hair, saying softly, \"It's okay, baby, it's okay. My gorgeous baby girl, it's okay, your mommy's here.\"\n\n\"Mom?\" Vicki murmured.\n\n\"Yes?\"\n\n\"Can we please go home now? I could really use a shower.\"\n\nSmiling further and giving Vicki's hand a comforting squeeze, Jeannie mused, \"What exactly goes on in these detentions of yours? And yes, let's get you home. You can help me wipe this car down later. I do have to drive it to work tomorrow, you know.\"\n\n\"I'll be down shortly, mom.\"\n\n\"Okay, I'll be waiting for you down here. Don't take too long.\"\n\nVicki, both embarrassed by her public fireworks but also secretly impressed at the volume of heavenly liquid her mesmerizing teen body consistently produced, undressed in her bathroom, inwardly relieved that she now didn't have to wait even longer to get off. That little burst should last her at least until just before she went to bed, she thought, happy to see her giant nipples quickly popping further out as if in response. Delicately wrapping her fingers all the way around each rosy shaft as if to milk the hell out of them, she gave both a few light squeezes, enjoying the vibrations from her distended nipples as they swiftly and visibly plumped up within her grips.\n\n\"Oh, you agree? Good girls.\"\n\nStepping past the glass door into the shower, she faced the steamy downpour, closed her eyes, and let it wash over her flushed face. As she brought her hands to the tops of her fabulous breasts to begin what she hoped would be a highly-stimulating massage, she felt something quite thick, spongy, and fully rigid first tap against her lower back and then push lightly against the cleavage of her firm, inviting behind. At the same time, two dainty hands firmly grasped both sides of her waist, and began slowly sliding up and down, exploring the delights of her young, slippery skin.\n\n\"Mmm, I'm sorry baby, but I just couldn't wait any longer.\""
    ],
    "authorname": "housewares",
    "tags": [
        "big tits",
        "big breasts",
        "big boobs",
        "daughter",
        "futanari",
        "masturbation",
        "nipples",
        "orgasm",
        "mother",
        "high school"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/vicki-loves-ch-01-vicki"
}