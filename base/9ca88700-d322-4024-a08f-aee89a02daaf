{
    "title": "The Year of the Cat Ch. 19",
    "pages": [
        "100% Fiction. All sexualized characters are adults. \n\n*\n\nThe month of January slipped by quickly for Matt. He was beginning to almost feel at home in this foreign land, rife with cultural strangeness. Despite his designation as an 'outsider', Matt felt a certain peace within the Japanese zeitgeist. He had always been a considerate person, but felt like his behavior was taken for granted in his native land, when he saw how others allowed themselves to behave. Here in Japan, however, consideration for others was foundational to the culture. Matt enjoyed the rare feeling of being a square, fitting through a square hole. \n\nEven though his work crew had to start the job a week behind schedule, the men from both nations had pulled together and brought production back to it's original deadline. \n\nAs a reward for their hard work, Matt let the men stay home on Monday with pay, allowing them to watch the Super Bowl, which normally aired on a Sunday night in America, however, to watch it live in Japan meant an early Monday morning viewing. \n\n\"Hell yeah! Good lookin' out, holmes!\" exclaimed Paul, one of the younger crew members, raising his fist to bump with Matt's. \n\n\"Yo. We got your back too.\" said Reggie, sidling up beside Paul, keeping his voice low. \"Olsen took us to the red light district in Tokyo a few days ago. All kinds of fine ladies up in there! Even some that got dem big titties you be into!\"\n\n\"Bro!\" Paul interjected. \"There's a massage parlor there full of 'em! I'll give you the name of the place. I swear, some of them girls could even give those hunnies you were with in the airport some competition.\"\n\n\"Ya damn right!\" Reggie laughed. \"I'm a Booty Man, myself... but, I gotta look out for my homie.\"\n\nMatt nodded, chuckling, \"Thanks, guys. Cant guarantee I'll get to see it... but, I appreciate it all the same.\"\n\nThe two young men walked off together. Matt turned to gather his paperwork, departing the job site for the day. He was surprised to find Kiyoshi, the eldest of the Japanese workers, standing by, patiently waiting. \n\n\"Matta-san.\" the middle aged, Asian man bowed before Matt. \"Next Sunday. There's a big gathering for Lunar New Year at the old shrine in Tokyo. Would you like to come?\"\n\nMatt blinked in surprise. \"Why...yes! I would be honored to go with you! Arigato gozaimasu.\"\n\nKiyoshi smiled brightly, \"Very good! You are practicing!\"\n\n~~~~~~~~~~~~\n\nJanice's schedule hadn't changed much over the course of the month. The only node of activity in the long string of monotony was Kendra's departure to Louisiana. In typical Kendra fashion, she hardly acknowledged it as a 'goodbye'.\n\n\"You gonna see me in a few months!\" she said, flippantly, even though Janice could see her friend dab the corner of her eye, when she thought no one wasn't looking. \n\nThe two women embraced one final time on the sidewalk beside Kendra's rented moving van. \n\n\"Don't let that big dick beat your pretty pussy up too bad!\" Kendra laughed to Janice as she climbed into the cab of the moving truck. \n\nLater that week, Janice regarded the gray clouds in the sky from the window as she stretched out on the couch with an open robe draped over her naked figure. She pet her cat's furry head while she spoke on the phone. \n\n\"Oh... I'm just chilling with Bubsy... as usual.\" Janice sighed to her mother. \n\n\"Feeling a little stir crazy without that sexy roommate of yours?\" asked Linda. \n\nJanice chuckled. During their many phone conversations over the course of the month, Janice had been keeping secret tabs on how many times her mom had mentioned how attractive she found Matt. It was obvious to Janice that her mother had developed a rather serious crush on him. Janice was reluctant to confess to Linda that her and Matt had become lovers, for fear it would hurt her mom's feelings. \n\n\"No. I'm fine... really!\" Janice replied. \"It's very peaceful... ok, it's a little boring, but I'm finally reading books again and I am loving yoga.\"\n\n\"Wonderful! The instructor at my Massage Therapy class is always recommending yoga. I figured I couldn't do it because of my tits!\"\n\nJanice laughed. \"I won't lie. A few poses almost suffocated me, but for the most part, I am hooked. How are your Massage classes?\"\n\n\"Ooo! They're going SO well! I'll have my diploma in a few weeks and then I'll be an accredited Massage Therapist!\"\n\n\"Way to go, Mom! I'm so proud of you!\"\n\n\"Thanks!\" Linda beamed. \"Tell that hot ass roommate of yours that I'll always have a spot open for him on my table!\"\n\n\"Haha. Ew. Ok, Mom.\" Janice replied. \n\n\"Seriously though,\" Linda continued. \"a little extra income wouldn't hurt. Especially since your sister, Tracy might be moving back home with me.\"\n\n\"Whaaat?!\" Janice gasped. \"Oh no! What happened between Tracy and Joey?\"\n\nLinda sighed. \"Well, after your sister's miscarriage last year, it seems that Joey... changed.\" she said with an ominous tone. \"They started going through all sorts of problems at home. Then one day, Tracy came back from work and he was just... gone. He had packed up and left.\"\n\n\"Oh god... oh, poor Tracy!\" Janice and her sister had always been close growing up together. A pang of guilt rang out in her core remembering how long it had been since they had spoken.\n\n\"I hope she'll be ok!\" \n\n\"You know Tracy.\" Janice's mom said, trying to sound reassuring. \"She'll find some way to make it. That girl always seems to land on her feet.\"\n\nJust then, an unfamiliar number began signaling from the other line on Janice's phone. \n\n\"Oh!... Hey, Mom. Let me call you back in a bit. This might be from work, finally.\"\n\n\"Ok, hunny! Talk to you soon!\" Linda said before the phone clicked over to the other line \n\n\"Hello, Janice Paige speaking.\" she said in her most professional voice. \n\n\"Please don't hang up... Janice, it's me... Bobby.\"\n\nJanice immediately felt her blood turn ice cold in her veins. Her voice was caught in her throat, unable to escape. She hadn't spoken to Bobby since she told him she wanted a break in their relationship, almost a month ago. \n\n\"Are... are you there?\" she heard his voice ask. \n\n\"I'm... here.\" Janice croaked. \n\n\"Uhh... Look... I come in peace.\" he sounded almost nervous. \"Just had a quick question: the company that your mom owed all that money to... was it called 'Ethic Financial'?\"\n\nJanice's immediate reaction upon hearing Bobby's last two words was a spike of sudden anger within her. \"Don't even mention that name around me!\" she spat. \"Those evil bastards hounded my mother with ZERO remorse!\"\n\nShe heard Bobby chuckle. \"Well, then you're gonna love hearing this: they're getting their asses handed to them in court! One of my professors works for the law firm handling it. You know... your mom stands a good chance to win a hefty settlement... if....\"\n\n\"If what?\" said Janice, cautiously. \n\n\"If you had enough money to retain a lawyer.\" Bobby replied. The nervousness is his voice had evaporated. \"Now... I may be able to secure a loan with my parents... IF I was inclined to ask... Five thousand dollars is a lot, but-\"\n\n\"I have it.\" Janice interrupted. \n\n\"...What?\"\n\n\"The money... Five thousand? I have it right now. Who do I call?\"\n\nBobby stuttered. \"J-Janice! I'm being serious.\"\n\n\"I am too, Bobby.\" Janice replied in a flat tone. Over the weeks, Janice's income had long outpaced her minimal spending habits. For the first time in her life, Janice had been able to build up a respectable savings nest egg. \n\nA moment of silence passed over the phone. \"Well... I see our time apart has done some good for you.\" said Bobby with a surprised chuckle. \"Hopefully cleared your head a little.\"\n\n\"Bobby.... the number, please.\"\n\nHe reluctantly gave Janice the number of the associated law firm. \n\n\"So...\" Bobby said, as Janice wrote the number down. \"I guess 'Mr. Perfect' has been making things easy for you...\"\n\n\"No. Matt has been gone. Working overseas for months.\"\n\n\"Has he now?\" remarked Bobby. \"So... you've really been on your own?\"\n\n\"Yes, that's right.\" replied Janice, trying not to sound too smug. \n\n\"Wow...\" Bobby stammered. \"I... gotta admit, I didn't think you had it in you, Jan... but, I guess I was wrong!\"\n\nJanice blinked in shock. Her breath had almost escaped her lungs from the impact of his words. \"I have NEVER heard him say that before!\" she marveled, silently.\n\n\"It's... kind of a turn on!\" Bobby continued. \n\nJanice paled, feeling her stomach turn \"I... I have to go. Bye!\" she pressed the button on her phone in urgent panic. She knew how awkwardly abrupt her dismissal had been. \"I didn't even thank him!\" she thought to herself, ashamed. \n\nShe shook away her troubled thoughts and quickly dialed her mother's phone number. \n\n\"Mom!\" Janice exclaimed when Linda answered. \"I think I've got some good news for you!\"\n\n~~~~~~~~~~~~\n\nLater that evening, Janice popped the cork from her favorite red wine and poured herself a generous, celebratory glass. She stood nude before the full length mirror on her bedroom door, holding her wine glass aloft. \"Cheers, bitch!\" she said in the best Kendra impersonation she could summon. \n\nThe information Bobby provided had turned out to be solid. The lawyer, after accepting the retainer fee, eagerly exclaimed that Linda's case was a 'slam dunk'. \n\n\"Ms. Paige, I look forward to giving you some very good news in near future!\" the lawyer seemed almost giddy when he hung up the conference call. \n\nA light and a chime from her phone distracted Janice in mid-sip. \"Oh damn, it's Bobby again.\" she sighed as she hit the 'Answer' button. \n\n\"Hey, Bobby. Sorry for hanging up so quick last time.\" said Janice. \n\n\"It's alright. I knew you'd be excited. I assume you got that ball rolling already.\"\n\nJanice giggled, sipping her wine. \"That's right! The lawyer and my mom are building a hell of a case.... Thank you for all your help in this.\"\n\n\"Yeah.\" Bobby said, nonchalantly. \"I knew I didn't have to tell you about it, but... I'm trying to be a better person.\"\n\nBobby's statement was so out of character for him, Janice's first instinct was to laugh at the joke, but a hesitation of doubt held her reaction back. \n\n\"I'm serious!\" Bobby chuckled. \"I know you're over there trying not to crack up.\"\n\nJanice blushed with guilt, briefly. \"Well... let's just say that I'm glad to hear it.\"\n\n\"Yeah, so.... it looks like we're both in a better place now, huh?\" said Bobby. \n\n\"S-sure.\" Janice said, warily, sensing a setup. \n\n\"So, when are we getting back together?\"\n\nJanice closed her eyes. \"There it is.\" she moaned to herself. \n\n\"Bobby... I- I'm not ready for that yet.\"\n\n\"Well, why the hell n-...\" Bobby stopped himself before his temper flared. \"It-It's ok... \"\n\nJanice struggled to fill the silent void with some diversionary conversation, but her words were silent, unable to escape. \n\n\"I'm going to be in your area for semester break... \" Bobby finally continued. \"Will you at least go have a coffee with me? Surely I deserve that for what I've done!\"\n\nJanice furrowed her brow in consternation. \"Uhh... sure. I suppose we could.\"\n\n\"Good. I'll be in touch.\" Bobby chirped, then the phone went silent. \n\nJanice regarded her sad expression reflected back at her from the blank phone screen. She slumped over, in defeat. \"Shit... Why did you agree to that, Janice?\"\n\nShe mournfully tilted her wine glass back to her lips and emptied it in one go. \"Time to get ready for Matty's call.\"\n\n~~~~~~~~~~~~\n\n\"Are... are you mad at me for agreeing to have coffee with him?\" Janice asked with a worried expression. \n\n\"Not at all, honey!\" Matt's face exuded a genuine smile. \"After what he did for your mom, I'd buy Bobby a coffee too!\"\n\nJanice laughed in half amusement and half relief. \"You're fucking wonderful, you know that?\"\n\nMatt couldn't help his pride gleam through his smile. \n\n\"Hey, you know...\" Janice continued, keeping her voice low like she was telling a secret. \"I wouldn't be upset if you wanted to get some 'relief' while you're over there.\"\n\nMatt's eyes grew wide. \"What do you mean?\"\n\nJanice smiled, reassuringly. \"Think about it... when's the last time you felt someone touch you?\"\n\nMatt blinked, trying to remember. Other than accidental brushes against people in the crowded trains, Matt couldn't think of a moment of intentional contact with anyone else. \"They don't even shake hands here. Everyone bows.\" he thought to himself. \n\n\"Wow!\" Matt breathed. \"I think you and Kendra were the last people I actually touched... in the airport.\"\n\n\"See? That makes me sad, baby.\" Janice pouted. \"I got to have sexy fun with Kendra in Miami and I have a furball of love with me at home... You should go get a massage or something.\"\n\nMatt nervously laughed. \"Uhh... I don't think so, honey. I hear the massages around here come with a 'happy ending'. Not even sure what that means.\"\n\n\"Well... it probably means a hand job.\" Janice mused. \"So... why not?\"\n\nMatt was stunned. \"I... I... uhh, just assumed you...\"\n\n\"No! I don't mind! The whole point is for you to feel relief. I'm ok with it, as long as it doesn't involve actual fucking.\" Janice laughed. \"To be honest, I sorta wish I could be there to see the look on the girl's face when she gets a look at what you've got packing!\"\n\nMatt blinked in silent astonishment. Janice giggled at his befuddled expression. \n\n\"Well... damn!\" Matt finally uttered. \"Thanks! But... honestly, baby, I doubt I'll have any time. Besides, I have yet to see one woman here that could hold a candle to you.\" he grinned. \"I'll just stay happy right here, keeping the Kleenex within reach.\"\n\nJanice smiled as she rolled her eyes. \"Regardless, when you get home, my mom is going to want to give you a massage, for sure. She's getting her license and everything... but, the way she talks about you... I think you can definitely expect a lot more than a 'happy ending'.\"\n\nMatt swallowed hard, remembering Linda's strong fingers squeezing his butt cheeks the last time they had seen each other. \n\n\"You're ok with that too?\" Matt asked, cautiously. \n\n\"Well, duh!\" Janice laughed. \"Of course I'm ok with it! She's family! Just, do me a favor...\"\n\n\"Ok.\"\n\n\"Don't tell her that you and I are together... just for now. She's got such a huge crush on you, I'm scared it'll hurt her feelings.\"\n\nMatt had to shake himself to make sure he wasn't still dreaming. \"Uhhm. Ok, baby.\" he answered. \n\nJanice gave Matt a seductive smile. \"I went digging through my closet recently. I found a sun dress that I hadn't worn since high school! Anyway... I tried it on again and it fit!... well, almost. Wanna see?\"\n\nMatt's face lit up in eager anticipation. \"Yes, please!\"\n\nJanice smiled and set the camera phone on some kind of mount, holding the image steady. She then stepped back to reveal her upper half to the camera. Janice wore a black, spaghetti strap dress with a dangerously plunging neckline. The skinny straps dipped low on her vast breast fronts, allowing round, supple bulges of titty meat to project hugely from her sides. Her soft massiveness spilled over the front hem of the dress. Smaller breasts would have been in danger of oozing out of the dress completely, but Janice's enormous breasts were able to both burst from the top in huge, enticing half globes of wobbling flesh, and still be securely contained by the massive volume of tit still covered.\n\n\"Do you like it? I wore this for you!\" Janice giggled to Matt. \n\n\"Holy fuck! I LOVE it!! You look amazing in that, baby!\" \n\nJanice's lustful gaze filled the screen. \"Time to get your Kleenex ready...\" she cooed. \n\nMatt's hand fumbled blindly for the tissue paper box, unwilling to tear his eyes from the screen. Janice tilted the camera so that her torso filled the entirety of the visible field. Matt watched in suspense, yanking his shorts down past his knees. \n\nJanice began massaging her overflowing massiveness. Her fingers dipped into her plush softness, leaving temporary pink impression prints on her skin. \n\nMatt heard a click off screen and suddenly and string of cream colored lotion fell upon her vast d\u00e9colletage. When a liberal amount had been poured, two hands appeared, spreading the ointment slowly. Janice's breast tops began to reflect the light in the room in shimmering glossiness. Her fingers dipped below the the straps of her sundress, massaging the balm into the hidden breast skin still beneath her dress. Her huge tits bulged together as she squeezed. Her applied pressure beneath her dress caused more and more delicious spillage over her hem. Janice's slick breast mass surged against the skinny straps of the dress, causing them to slip from her shoulders. \n\nMatt was nearing his breaking point. His hand was flying up and down his erection, watching in suspense, as Janice's dress slid down further. \n\n\"Mmm!\" Janice cooed, as she squeezed her nipple, barely beneath the hem of her dress. \"I cannot wait until your lips are right here!\" \n\nShe brought a single, meagerly covered breast to fill the frame. Her areola was just beginning to peek over the hem of her dress. Matt watched a hand come forward and hook a finger inside the dress, pulling it down, slowly. Janice's enormous naked tit slid into view with a substantial wobble.\n\n\"Oh my god... so fucking beautiful!\" Matt moaned in pleasure. \n\nJanice rotated her torso to present her other huge breast, still within her dress by sheer will alone. \n\nMatt groaned when he watched her two hands massaging the soft, enormous tit out of it's confine with deliberate sensuality. \n\nCum suddenly came spurting from his slitted cock, dousing his bare abdomen. \n\n\"Wow!\" Janice exclaimed. \"Already?\"\n\n\"Oh my god...\" Matt breathed heavy as his heart rate began to relax. \"Baby... this job cannot end soon enough!\"\n\n~~~~~~~~~~~~\n\nAs if everyone on the crew shared the same sense of urgency to return home, Matt's job site had become the picture of enthusiastic efficiency. Project managers of other teams gawked at the progress reports Matt would present at the coordination meetings. \n\n\"Someone's got a fire under his ass!\" the burly site manager quipped. \n\nValentine's Day arrived. Matt had made sure to order a flower arrangement and a box of chocolates well in advance for Janice, so she would be sure to get it on time. \n\nJanice surprised Matt a few days prior with a romantic care package she had had delivered to his Japanese condo. It contained homemade cookies and candy bars from the U.S.A. She included a charmingly decorated, homemade Valentine's Day card inside. \n\n\"No matter how far away you are...\" it read. \"I'll always feel you inside me. Love you, Baby!\"\n\nMatt chuckled. The last item in the box was a familiar looking booklet. He grinned as he flipped through the pages. Janice had made a coupon collection, in the same manner as Matt's Christmas gift to her. However, instead of Matt's innocuous favors, like: \"Cooking a Favorite Meal\" or \"No Chores For a Weekend\", Janice's favors were far less innocent:\n\n\"Free Blowjobs Every Morning For a Month\"\n\n\"Bondage Night!\"\n\n\"A Game of Twister With Baby Oil\"\n\n\"Free Hair Cut and/or Manscaping Session.\"\n\nAnd on it went. Matt shuddered with excitement, trying to decide which one he was going to use first when he returned home. \n\nThat morning, he stood at the train station, turning his back to the cold wind whipping through the long breezeway. Matt was meeting Kiyoshi there to be guided to famed Senso-ji, eldest shrine in Tokyo, to honor the Lunar New Year. What he expected to see there was yet a mystery, but he was excited to finally experience the largest city on the planet, with a native guide, no less. \n\n\"Ah! Matta-san!\" Matt heard the middle aged man call his name. Matt turned to see the small Japanese man approaching with a wide smile. \"Thank you for arriving!\"\n\nMatt bowed to Kiyoshi. \"Konnichiwa!\" he announced, loudly, taking a bow. ",
        "Kiyoshi smiled and bowed in return. \"Your Japanese is getting better all the time, Matta-san!\"\n\nThe two entered the ever-punctual train heading towards Tokyo and took a seat. Over the course of an hour, stop after stop, the closer the train approached the metropolitan area of Tokyo proper, the more people crowded into the car. Matt noticed an elderly couple enter and stood up to offer his seat and the empty one next to it to them. The couple looked amazed to be granted such politeness from a Westerner. They bowed, respectfully over and over to Matt who couldn't do anything but blush and smile in response. Kiyoshi patted Matt's shoulder, standing beside him. \n\n\"You have a Buddha heart, Matta-san.\"\n\nWhen it was time to transfer to the Tokyo Rail Line, the elderly couple once again stood and bowed to Matt as he left. Matt bowed in return before slipping out of the door, beet red and grinning. \n\nThere was practically no space to move when the next crowded train car began moving. Matt blinked in surprise when the train stopped at it's first stop. Throngs of dark haired people were already there at the station, standing in line, waiting. \n\n\"Oh well... Guess they're going to have to catch the next train, eh?\"\n\nKiyoshi raised his eyebrows and tightened his grip on the dangling hand hold. \n\nThe doors slid open and to Matt's surprise, the multitudes rushed in. He suddenly felt constricted from all around as bodies shoved their way into train car. A small man's chin was practically rested on Matt's shoulder, another had to stand so close, his breath was felt on Matt's neck. \n\n\"So much for not being touched since I've been here!\" he thought to himself, feeling his personal space bubble being invaded on multiple fronts. \n\n\"Next stop, Matta-san!\" he heard Kiyoshi's voice in the quiet crowd. The illuminated sign above the door read \"Asakusa Next\"\n\nMatt caught sight of the bright red puff on the top of Kiyoshi's winter hat, bouncing towards the opening doors. Matt followed, attempting in vain to miss stepping on people's feet as he exited the packed train. \n\nMatt followed Kiyoshi through the streets of Tokyo, marveling at the tall skyscrapers, the remarkable infrastructure of the city and the staggering multitudes of people in all directions. \n\nSuddenly, the two found themselves standing before a bright red Torii gate. Matt had come to understand these gates represented the passage from the mundane to the sacred. The heavy scent of burning incense wafted towards them. Matt reached into his pocket to procure his Goshuin-cho as he and Kiyoshi walked together towards the five story pagoda in the large courtyard, heavily congested with crowds of people. \n\n\"Ah! You are on a pilgrimage, I see!\" Kiyoshi exclaimed, catching sight of the small book in Matt's hand. \n\n\"Oh... I'm not a Buddhist...\" Matt replied. \"So, this is just a collector's item.\" He said, casually flipping through the pages to admire the unique beauty of each entry. \n\n\"Do you know who else was not a Buddhist?\" Kiyoshi asked with a glint in his eye. \"The Buddha! He simply felt the message in his heart... like you, Matta-san!\"\n\nMatt blinked. \"Well, then... my pilgrimage is almost over! Only nine blank pages remain.\"\n\n\"We will go together to Goshuin after we offer a prayer for the New Year: the Year of the Tiger.\"\n\n\"The Tiger...\" Matt thought to himself. The sudden image of Bubsy cat stalking Janice's dangling robe belt popped into his mind, causing an involuntary chuckle. \"I guess I'm having a rather feline year, myself.\" he mused with a smile, reminiscing on his furry, black friend back home. \n\n\"I will pray for prosperity for you and your loved ones!\" Kiyoshi grinned after lighting the bundle of incense and placing it in the large brazier with the hundreds of other burning bundles. Matt followed suit, clapping his hands twice to catch the attention of the the spirits and offering respect with a bow and a quiet prayer of gratitude. \n\nLater that night Matt smiled at the beautiful new seal in his Goshuin-cho from Senso-ji. Japan finally felt less intimidating and more intimate to him. \"A trip to Tokyo by myself seems like it would be pretty easy...\" Matt thought to himself, eyeing the scrap of paper on the desk that Paul had given to him last week. Tempting thoughts swirled in his head. Matt sighed. \"I need to clear my head!\"\n\nHe knew Janice would be up soon and he was eager to be the first person to wish her a Happy Valentine's Day. \n\n\"Hello, my Valentine!\" Janice smiled at Matt's face on the phone as she stretched her limbs in bed, yawning. \n\n\"Happy Valentine's, sweetheart!\" Matt replied. \n\n\"I got your flowers last night! Thank you! It's such a gorgeous arrangement.\" \n\n\"It's an unworthy substitute to what I would do if I was there with you.\" Matt pouted. \n\n\"They're still beautiful... and they mean the world to me.\" Janice replied. \"Besides, we'll have plenty of opportunities to make up for it. Speaking of which... have you thought of which one of your Love Coupons you want to use first?\"\n\n\"Hmm...\" Matt pondered with a wry smile. \"I see a few of these 'Wild Cards'... what are those?\"\n\nA naughty grin spread across Janice's lips. \"Anything you want, baby... ANYTHING!\"\n\nThe two enjoyed their chat through Matt's evening and Janice's morning. Janice let Matt watch her take a shower, which he savored not only for the display of erotic gorgeousness, but also for the opportunity to purge his testicles of his mind corrupting semen. \n\nAfter Janice hung up with Matt, she took her morning coffee in peaceful repose at the dining room table. Her robe clutched tightly to her body, warding off the February chill seeping through the aged walls of the apartment building. \n\nThe mood was so quiet and peaceful that the loud knock on the front door sounded out like a crash, practically startling the coffee cup from Janice's hand. \n\nJanice cautiously opened the door to see a young, disheveled delivery man, panting for air next to an enormous light purple, stuffed teddy bear. The giant plush toy was literally taller than the young man and twice as wide. The struggle the man must have endured to drag the gargantuan bear up three flights of stairs must have been significant. The man was leaning against it, catching his breath. \n\n\"Please tell me you're Janice Paige...\" the delivery man breathed. \n\n\"Yes! I am...\" Janice looked with wide eyes upon the massive whimsical object. \n\nRelief washed over the man's face. \"Phew! Sign here.\"\n\nJanice struggled to fit the stuffed bear through the front door. An attached card read: \"From your Valentine- Bobby.\"\n\nJanice sighed in trepidation, wondering where she was going to fit this ridiculously large stuffed animal. She ended up dragging it to the glass doors of her balcony. The bear was so big that it blocked the view of the street outside, entirely. \n\nJanice shook her head at the leering smile, sewn into the bear's face. \"What am I going to do with you?\" she moaned, pertaining both to the obtuse present and to the man responsible for sending it. \n\n~~~~~~~~~~~~\n\nWeeks passed. March approached, bringing more temperate climates for Matt and Janice, both. \n\nJanice was looking forward to a visit from her mother, who was planning on driving up to stay for a couple weeks. \n\n\"If I don't get away now, I may miss the chance.\" she said one day over the phone. \"Your poor sister is really being taken to the cleaners by Joey's attorneys... I have a feeling she going to be sleeping on my pull out bed soon.\"\n\n\"Oh, poor Tracy... \" Janice sighed. \"I should give her a call.\"\n\n\"She'd really love to hear from you, I'm sure, Baby Girl.\"\n\nLater that day, after lunch, Janice dialed her sister's phone number. \n\n\"Well, hey, sis!\" Tracy exclaimed over the phone. \n\n\"Hi, Tracy. How are you holding up?\" said Janice, pensively. \n\n\"Oh god... just shoot me and get it over with!\" Tracy chuckled. \"Seriously... I'm just looking forward to this divorce being done with at this point.\"\n\n\"I'm so sorry... you have to come visit me after you settle in at Mom's apartment.\"\n\nTracy groaned. \"I can't believe I'm moving back in with Mom...\" A quiet moment passed over the phone. \"Janice, I know you and Bobby have been together for a long time... but, please... don't do what I did: don't settle for the wrong guy.\"\n\n\"I'm not.\" Janice said, smiling to herself. \"Me and Bobby are through, finally, and I'm with a really great fella now... I can't wait for you to meet him!\"\n\n\"Oh! Janice!\" Tracy squealed with delight. \"I'm so happy for you! I always thought you were too good for Bobby. So... what's this new guy like?\"\n\n\"Oh, you'll love Matt! He's wonderful. Just the sweetest man in the whole wide world!\"\n\n\"Hmmm.\" Tracy mused. \"... and the sex?\"\n\nJanice let out a short laugh. \"...is on a whole new level, Tracy! He rocks my fucking world!\"\n\n\"Oh my god... \" Tracy laughed. \"I'm so jealous! I haven't been fucked properly in years!\"\n\n\"Well... don't forget! We still have our pact, remember?\"\n\nTracy guffawed loudly over the phone. \"We were wasted on Boone's Farm when we made that pact!\"\n\n\"It doesn't make it 'not real'!\" Janice exclaimed. \"and besides... his dick is so big, it has its own zip code, I swear to God!\" she said, laughing. \n\nTracy gasped. \"I... might have to head to your place before Mom's if that's cool.\"\n\n\"Absolutely!\" Janice answered, gleefully. \n\n~~~~~~~~~~~~\n\nMeanwhile, in Japan, Matt only had two more pages to fill in his Goshuin-cho. He ventured brave distances during his Sunday rail journeys, hunting for shrines and temples nestled in the endless urban sprawl. \n\nBy this time, Matt was friendly with the familiar passengers on his daily train commute, who smiled and sometimes practiced their English with him, as well as the grocery store attendants that smiled and bowed upon his arrival. \"Konnichiwa!\" he would exclaim. \n\nDespite the thrill of this novel lifestyle, Matt could not deny the pull on his heartstrings, ever-reeling him back to his home. He wasn't alone. The entire crew of men, obviously felt similar. \n\n\"I'm just bidin' my time.\" said Sterling, one of the two older men of the crew. \"I got my tunes there in my room. James stops by with some of that sake' most evenins'. I like that. But... yeah, I can't wait to get home.\" he sighed. \n\n\"Me too, man.\" Matt nodded. \"We might have some good news about that at the next progress meeting, though.\" \n\nSterling's ears twitched as he leaned in close. \n\n\"You guys are kickin' so much ass...\" Matt continued, quieter. \"that our departure date might get pushed forward. Now... don't say anything to anyone yet... but, if that happened: do you think the guys would be ok with going home early?\"\n\nSterling looked at Matt as though he had suddenly grown two more heads. \"You goddam right!\" The aged black man looked as though he was about to give Matt a hug. He settled with an enthusiastic pat on the shoulder. \"That's what I'm talking about! You know, I- I really enjoyed working with you, Mr. Matt.\"\n\nMatt smiled, humbled. \"Thank you, Sterling. I really appreciate all your hard work. Now, keep that bit of news between you and me, ok?\"\n\nLater that day, Matt strolled back to the work site, wearing a bright smile. When he turned the corner to enter, he was surprised to find his five man crew waiting, expectantly for him with eager attention. \n\nMatt chuckled to himself, casting a glance at Sterling, who quickly looked away, feigning innocence. \n\n\"So?\" spoke Olsen, from the back. \n\nMatt couldn't contain his smile. \"This time... next week... we'll be home.\"\n\nThe job site erupted into wild cheers of celebration. \n\n~~~~~~~~~~~~\n\n\"Baby Girl!\" shouted Linda, when Janice opened the front door. \n\n\"Hi, Mom!\" Janice exclaimed, rushing to embrace her. \n\nLinda stepped through the door with wide eyes and a slack jaw. \"Holy shit!\" she exclaimed, looking at the multitudes of healthy looking house plants, crowded in scattered arrangements throughout the apartment. \"It looks like a greenhouse in here! Where are you growing the weed?\"\n\nJanice shook her head, grinning. \"No pot, but plenty of other herbs!\"\n\n\"Well, I always carry seeds, so we'll get a couple started while I'm here.\" Linda replied, casually. She cast her eye over her daughter in admiring observation. \"Well, well! Look at you!\"\n\nJanice regarded Linda, quizzically. \n\n\"You! Your body!\" Linda exclaimed. Janice was wearing her skin tight yoga pants and a bright orange, fitted T-shirt, braless. \"You look incredible! Your arms and legs are so toned and your waist is so tiny and you even got a little bubble butt going! So cute! And besides that you look... happy!\"\n\nJanice blushed, but inside she was beaming with pride. \"Thanks... I am happy, Mom!\"\n\nLinda's eyes welled up with tears of joy. She couldn't resist giving her daughter another loving embrace. \n\n\"...and, jesus... those titties!\" Linda marveled, feeling the significant pressure against her own huge bosom. \"Those have DEFINITELY gotten bigger!\" she said, standing back and gawking at Janice's immense chest. \"I bet you could fit in that M cup bra I got for free at Dee Dee's ... if you can, it's yours... I only wore it that one time.\"\n\nJanice nodded. \"I probably wear bras as much as you do these days: hardly ever.\"\n\n\"That's my girl!\" Linda winked. \n\nLinda went about unpacking her suitcase in Matt's room. As agreed previously, Linda would be sleeping in Matt's available bed during her two week visit. She grinned, excitedly at the clean bathtub, as she prepared to soak away the stress of the five hour drive she had just endured. \n\n\"Come share a joint with me while I soak, honey!\" Linda called out, lowering herself, gingerly into the hot, bubbled froth of her bath. \n\nJanice sauntered into the bathroom with an ashtray and lighter. \"How's the settlement going?\"\n\nLinda lit the large joint and inhaled, deeply. She smiled at Janice as she blew the smoke out. \"Swimmingly, darling! I'm literally swimming in Ethic Financial's tears!\" she cackled. \"They're begging me to take six figures, but my lawyer... oh god, he's ruthless. I might walk out of this a millionaire!\"\n\nJanice clapped her hands and hopped up in down, cheering, excitedly. \"Oh my god! I'm so happy! Congratulations!\"\n\n\"I would have missed this completely if it wasn't for you, sweety.\" Linda said, passing the joint to her daughter. \n\nJanice took a long drag. \"So would I, if Bobby hadn't told me.\" \n\n\"Bobby... who would have thought, huh?\" Linda shook her head, amazed. \"Sorry I've been so hard on him... I can only assume that you two are doing better these days.\"\n\n\"Uhh..\" Janice hesitated, still not willing to tell her mother she was sleeping with Matt. \"The space apart has been good for both of us.\" \n\nJanice hoped she wasn't coming across as suspiciously cryptic. Fortunately, Linda was absorbed in complete relaxation as a white cloud was expelled from her lips. \n\nThe ladies enjoyed their relaxed company together throughout the week. Janice invited her downstairs neighbor, Gracie up to have some tea and meet her mom. Gracie gave an enthusiastic approval of Janice's green thumb and an even more enthusiastic approval of the thumb sized joint Linda offered her, much to Janice's surprise. \n\nOne late afternoon, as her mother napped in Matt's room, Janice was startled to hear an unexpected knock on the door. \n\n\"Who could this be?\" she thought, slipping a robe and plodding to the door. \n\n\"Surprise!\" shouted Bobby when the door swung open. \n\nJanice was completely taken aback. \"Oh shit! I forgot all about him visiting!\" she fretted, silently. \n\n\"Bobby! Hi!\" Janice exclaimed, trying to sound convincingly pleased. She instinctively closed her robe up to her neck, attempting to cover her bust with her arms. \"What are you doing here?\"\n\n\"Told ya I was stopping by... when'd you go blonde?\" Bobby said, furrowing his brows at her hair. \n\n\"Uhh... right around New Year's... \"\n\n\"Hmm. Anyway... ready for that coffee?\"\n\nJanice blinked, looking down at her state of dress. \"No. Of course, not! My mom is here visiting! You didn't even warn me you were coming over.\"\n\n\"Oh! Where is Linda? I'm sure she'll want to thank me.\"\n\n\"She's taking a nap...\" Janice rolled her eyes in exasperation. \"Listen, just come hang out in my room while I get ready. It'll only take a few minutes.\"\n\nBobby followed Janice to her room and took a seat at Janice's small computer desk. She hastily picked off clothing items that had been draped over Bobby's ridiculously large Valentine's Day gift. \n\n\"You're welcome for that bear...\" Janice heard him say while she carried her clothes to the bathroom. \n\n\"Yeah... thanks. Bobby.\" she replied, closing the door. \"You really didn't have to, though.\"\n\n\"Well, like I said before... I'm trying to be a-\"\n\nJust then, Janice's phone on her desk quietly lit up. Bobby leaned forward, curiously to see who the text was from. \n\n\"...good person.\"\n\nThe screen read: \"Message from Matty: Surprise, baby! It's official! I had to wait until it was confirmed, but it looks like I'll be home SUNDAY NIGHT!! Sorry it's such short notice. Holy shit I can't wait to bathe every inch of your body with my tongue!!\"\n\nBobby's cheeks burned red with rage. He read the message again. Sunday was in three days. Seething in silent resentment, his eyes shifted to the closed bathroom door, as he quietly picked up Janice's phone and typed a response. \n\n~~~~~~~~~~~~\n\nMatt stared, unbelieving at his phone screen. \"This can't be real...\" his shaking voice uttered to the empty room. \n\n\"I know this is sudden,\" Janice's reply text read. \"but, it's over between us. The time apart has made me realize that I should be with Bobby and not you. We had a fun thing, but I have to grow up and get my priorities right. Janice.\n\np.s. your terrible in bed.\"\n\nMatt chuckled, despite the urge to tear up, wiping his eyes clear from watering. His reply text read: \"haha. that's a weird joke, babe.\"\n\nThe message was immediately sent back with an error message: \"Unable to deliver.\"\n\n\"... the fuck?\" Matt blinked through his panic as he quickly tried again and again with the same result. \n\nMatt's finger stabbed the glass of his display as he frantically dialed Janice's number. Three beeps were heard and then the call failed. \n\n\"Oh god... she's really blocked me...\" Matt paled. A cold sweat formed on his forehead as he considered the heartbreaking reality, foolishly thought impossible, may in fact, be coming true. \"No... no, this isn't her. Something is wrong. She would never just... w-would she?\"\n\n~~~~~~~~~~~~\n\nJanice finally emerged from the bathroom, made up and dressed in a pair of faded jeans and a large, extra thick wool sweater. \n\nBobby was waiting, feet propped up on her desk, his face bearing a satisfied grin. Janice's phone laid on the desk, exactly where she put it. The evidence of the malicious text had been removed from sight.\n\n\"Ready at last?\" Bobby crooned. \n\n\"I am not sorry you had to wait.\" Janice deadpanned directly into Bobby's eyes. \"It's what you get for dropping In on me unannounced.\"\n\nBobby held up his palms in surrender. \"I didn't mind waiting! I kept myself occupied, don't worry.\"\n\nThe two exited Janice's bedroom to find Linda, groggily preparing a pot of coffee. Her eyes raised and then did an amazed double take. \n\n\"Bobby!\" Linda exclaimed. She had made the fortunate decision to don a robe before leaving the bedroom. Linda shuffled in her slippers to give Bobby a polite hug. \"What a surprise! Geeze... how long has it been?\"\n\nBobby raised his eyes, thinking back. \"Tracy's wedding, right?\"\n\n\"That's it!\" Linda snapped her fingers. \"Wow! So... golly, thank you for your help with the lawyer.\"\n\n\"You're welcome. Hope it turns out well for you.\" Bobby replied. \"Hey! I have an idea: how about the three of us go to dinner? Say... Sunday evening?\"",
        "Janice and Linda traded a quick glance with each other. Janice hesitated, but Linda shrugged her shoulders. \"Why not?\" she smiled. \"My treat!\"\n\n\"Great!\" Bobby exclaimed, then, turning to Janice. \"Ready for that coffee?\"\n\n\"You two are welcome to join me.\" Linda said. \"There's a fresh pot brewing now.\"\n\n\"No. That's ok, Mom!\" Janice replied quickly before Bobby could speak. \"I was looking forward to some fresh air. Shall we?\"\n\n\"See ya, Linda.\" said Bobby as he ambled after Janice through the front door. \n\n~~~~~~~~~~~~\n\nMatt stumbled, distractedly through the final walkthrough at the job site. He seemed listless, unconcerned about the job's outcome. Despite Matt's distraught apathy, the job was accepted and signed off as completed by a delighted client representative. \n\nCrew members pondered among themselves what was wrong with their supervisor. \n\n\"Yo. I saw this on Discovery. He's about to pop.\" Reggie whispered to Paul. \"He can't get his big titty fix here! He's like... goin' through withdrawals like a junky!\" He shook his head in pity. \"Ain't no way he can go home lookin' like that.\"\n\n\"Let's get him drunk and take his ass to that massage parlor in Tokyo!\" Paul eagerly insisted. \n\nReggie nodded and clapped hands with Paul in agreement. \"Yo! That's what I'm talkin' about!\"\n\n~~~~~~~~~~~~\n\n\"To a kick ass time in Japan!\" three large glasses were raised. \"Cheers!\"\n\nMatt turned his glass up to taste the mysterious purple elixir. \"Damn! This is tasty! What is this again?\"\n\n\"Chu-hi!\" Paul shouted. He was on his second large mug already. \n\n\"This stuff'll sneak up on you! Careful, yo!\" Reggie chuckled. \n\nThe bar the three men were crowded into was so small, standing patrons had to exit to let someone pass. \n\n\"Boss man!\" Paul clutched Matt's arm. \"We can't leave without a shot of Habu Sake!\"\n\n\"Sure. Why not.\" Matt said. He had decided to stop trying Janice's number for a few hours. A melancholic haze hung over his mood. The alcohol buzz began to relieve the stinging heartache as he finished the large drink. \"Where are we going, by the way?\"\n\n\"We're takin' you to Tokyo! You've only seen old temples and shit here. You need your eyes open to NOW!\"\n\nMatt's eyes widened at the bartender, who was ladling three shots from a large glass jug containing, what appeared to be, a real, dead snake.\n\n\"We're drinking that?\" Matt gulped. \n\n\"Yeah... and you better not throw up!\"\n\nAnother cheers was made and the three turned up their shot glasses. Matt had never tasted a more bitter concoction. \n\nMatt winced. \"I need another Chu-Hi. That was awful!\" His throat felt like it was on fire. \n\nOn the train to Tokyo, Matt's vision was blurred with intoxication. His head swam as the evening fell upon the endless city, sliding by in streaks. \n\nHe attempted to keep his composure, despite Reggie and Paul's boisterous laughter. He wasn't sure if the glares of disapproval around him were real or hallucinations brought on by the wild toxins dancing through his stream. \n\nFinally, they exited the train at Shinjuku station, then on into the dizzying, hyper neon night, towards Kabukicho. \n\n\"We got a surprise for ya, boss man!\" Paul said, stopping Matt from stumbling past an unassuming building's front door. \n\nReggie had his head ducked inside the door, speaking to someone. Matt saw him reach in his pocket and hand over a small stack of yen. \n\n\"What'ss happnin'?\" Matt slurred. \n\n\"Yo, you're about to find out!\" Reggie said, turning to Matt with a smile. \"Haha! See ya in an hour!\"\n\nMatt felt himself being nudged through the front door. \n\nInside, a quiet, brightly lit lobby desk with an aged woman smiling at Matt, bowing and motioning for him to enter and remove his shoes. \n\nMatt blinked in brief confusion, before instinctively following her instructions. \n\nOnce he had placed his shoes in the wooden rack, the woman led him down a minimally appointed hallway to a private room. \n\nInside, the room was dimly lit with red hues. A single bed stood in the center of the otherwise empty room. On one end of the bed, a face sized hole, lined with tissue paper. \n\n\"Undress, please. Naked. Lay down on stomach.\" the woman uttered, before slipping out of the room, leaving Matt alone. \n\nEven in his drunken state, Matt knew he had to be in a massage parlor. His impaired conscience wrestled with itself whether he should or shouldn't walk out the door. \"Even if this whole thing with Janice turns out to be a mistake... she still gave me permission...\" his hazy mind calculated. \n\n\"Will I even be in the mood for this?\" Matt thought. He sighed and clumsily began disrobing. Once his clothes were a pile on the floor, Matt positioned his naked body upon the bed, face down. He was resting, propped up on his elbows when a light knock was heard. \n\nThe door opened slightly and the beautiful, Japanese woman poked her head into the room. \"Hello... ready?\"\n\nMatt nodded, silently with a nervous smile. \n\nThe door opened all the way, flooding the dark room with yellow light. Matt watched two curvy silhouettes saunter in and close the door behind them. As Matt's eyes readjusted to the low light, he was able to see the two women's bashful smiles. The each wore thin, thigh length silk robes with images of cherry blossoms printed upon them, one in red, one in white. Matt was delightedly taken aback by how the women filled the upper portions of their garments. He detected large soft motion, undulating beneath the folds of silk. \n\nThe sound of Asian flutes and plucked strings softly began playing from the small speaker on the table. Without a word, Matt was gently encouraged to place his arms at his side and his face through the padded hole in the bed. Once in place, he felt four soft hands begin gliding over his back and arms. \n\nMatt involuntarily groaned in relaxed bliss when the four hands began applying massaging pressure on his muscles. One set of gentle hands spent several minutes working the knots out of the muscles in his back by applying circular pressure, the other set of hands massaged Matt's biceps and shoulders. \n\n\"Wow! I legit needed this!\" Matt said to himself, feeling the relief blossoming from the women's precisely guided fingertips. Goosebumps prickled all over his sensitive skin in celebration of warm contact. \n\nOccasionally, long swipes of the women's palm would end up landing on Matt's bare butt cheek. As the women moved their way down his back, Matt could feel their contact with his ass lingering in duration. His cock was thickening against his abdomen. He bit his lip when he felt a palm slide across his butt, then briefly dip between his legs to swipe across his taint. \n\nWarm oil was drizzled across Matt's back and each woman spent several more minutes spreading the balm over his skin and rubbing it into his weary muscles. Matt's eyes widened inside the face portal when he felt the two women's slick hands focus their efforts on his toned butt cheeks and taint, giving his testicles teasing caresses in the process. \n\nMatt heard a quiet Japanese phrase being traded by the two women as they moved to the base of the bed. Each began massaging his feet, ankles and calves. Matt was enjoying the healing, therapeutic touch, but he couldn't help an eager anticipation as their strong hands continued their path up his leg. \n\nWhen the women reached Matt's upper thighs, he felt a hand travel up his inside leg. The pair of hands on Matt's left seemed more bolder one of the two. When she made contact with Matt's balls, she tenderly stroked them, sometimes sliding her hand forward around the base of his now throbbing erect dick. \n\nAnother unfamiliar Japanese phrase was spoken, this one sounded surprised. Matt felt the other pair of hands investigating his balls, he subtly lifted himself up to allow her easier access beneath him. Her hand slithered forward and wrapped it's small fingers around the thick shaft of Matt's dick. \n\nAn unknown exclamation and a high pitched giggling response was heard. Matt's butt was playfully patted as a pair of lips leaned close to his ear. \n\n\"Very nice!\" the woman whispered in English. \n\n\"Arigato...\" Matt lifted his head to respond with a smile. The beautiful woman blushed and began giggling. She leaned close, giving Matt a light kiss on the tip of his nose. \n\nTogether, the two women increased their efforts, taking turns to massage Matt's balls and ass, tenderly, while the other reached beneath him from the side to stroke his long dick, in slow, lengthy movement. \n\nThe feeling was so overwhelming, Matt began leaking pre-cum almost immediately. The women must have sensed his body tension increase. Without a word the two stopped and began preparing the next phase of the massage. \n\n\"Flip over, please!\"\n\nA pillow was placed at the head of the bed as Matt turned onto his back. He watched, amused, at the two women's eyes growing wide and hands flying to their open mouths in amazement, as his disproportionately large cock lumbered back and forth into view while Matt settled into position. \n\n\"Big!... BIIIIG!\" the lovely Asian woman tittered. \n\n\"Handsome too!\" the other young woman cooed, leaning in for another eager kiss, this time on his lips. \n\nThe women stood at either side of Matt and traded a smiling glance as they began untying the knot at the front of their silk robes. \n\nMatt almost audibly gasped when their robes slipped off of their bodies. Unveiled before him, Matt saw the blushing women had the typical thin build of the average Asian adult female, however, their chests were anything but. \n\nThey both possessed larger breasts than Matt had seen his entire visit to Japan. \n\n\"Holy shit!\" Matt gasped. The girls giggled, bashfully. \n\nOlsen had remarked over the course of the trip how much Japan had changed since he had been stationed there twenty years previous. \n\n\"All these American fast food chains have sprouted up here.\" he said one day. \"Changin' people's diets has consequences!\"\n\nMatt smiled up at the gorgeous jiggling mammary fat jutting from the gorgeous women's chest. \n\n\"I'm lovin' it!\" Matt thought to himself. \n\nThe girl on Matt's left, who identified herself as \"Amy\", smiled as she squeezed her upper arms together, causing her head sized tits to compress against each other, blooming outward. \n\nThe women to Matt's right called herself \"Lisa\". Her lustful gaze burned into Matt's eyes as she manipulated her own huge breasts with her hands, coating her skin in a glossy glaze. \n\nAmy recognized the hunger in Matt's eyes, coming closer to feed an erect nipple to his eager lips. She let out a cry when Matt's mouth latched on to her breast and began sucking. \n\nLisa continued to coat her huge breasts with oil. As Matt continued to suck on Amy's rigid nipples, he felt a soft, warm, slippery mass spread over his chest. The weighted softness glided up and down his torso, coating his chest in oil. Amy stepped away from Matt, letting her giant tit break free from Matt's suction with a POP.\n\nThe two women changed positions. Lisa moved to the foot of the bed and climbed up onto the mattress. She scooted forward on her knees between Matt's legs. He felt his butt being lifted and placed on her thighs, causing his flopping hard on to be batted by her enormous, bulbous breasts. \n\nAmy, meanwhile, moved to the head of the bed. Looking up, Matt could only see two massive curves of her jiggling under boob, projecting out over his face. \n\nMoving his eyes downward, he saw Lisa surrounding his red tinted cock with her slick, abundant mammaries. He felt the warm bliss squeeze his throbbing dick as she began rocking up and down, applying divine friction. He was almost in a trance watching Lisa's efforts, before he felt Amy's hands sliding down his chest, then total darkness enveloped his view as her giant tits fell over his face, smothering his senses in gorgeous softness. Amy's hands caressed Matt's pectoral muscles, tantalizing his nipples with light flicks. \n\nMatt's dick was being treated to a lavish bath of breast meat as Lisa's cleavage slid against his member in slow, long strokes. Amy only allowed Matt to take a deep breath before she mashed her huge softness back down upon his open lips, once again. \n\nIn the back of his mind, Matt was a little impressed with his stamina. \"I've gotten used to jerking off for so long to... Janice.\" he thought. Under the darkness over his eyes, Matt's mental image could only see Janice's beautiful, smiling face. The mystery of his delayed climax was solved. Matt shook his head to snap himself back into the moment, causing Amy's large breasts to quake above him. \n\nLisa toiled in earnest, sliding her oil slicked tits up and down Matt's thick cock. A bead of sweat appeared on her brow. Matt attempted to summon an expedited orgasm by focusing on a guaranteed memory of erotic potency. Once again, the images of Janice's enormous, perfect breasts spilling out of her low cut tank top every time she changed position on the couch, or the way her orgasmic cries sounded so venerable and so celebratory at once, or the way the cute dimple formed on her left cheek whenever she gave a genuine smile. \n\nLisa looked relieved to see Matt's bulbous cock head dribble a weak stream of white cum. Matt gasped for air when Amy lifted her bosom from his face. He felt relieved that the task was complete. \n\nThe two women finished the massage by dutifully wiping the oil from Matt's skin with heated, damp towels. Then, after patting him dry with fresh, dry towels, Amy and Lisa donned their silk robes, bowed with a serene smile and departed silently. \n\nMatt dressed and left the room, blinking in the brightly lit hallway. The older woman who greeted him when he arrived, was waiting patiently to lead him to the exit. Matt felt refreshed, physically, though his mind was still somewhat intoxicated with liquor. He stumbled a little as he stepped over the threshold, on to the street. Paul and Reggie were waiting with expectant smiles. \n\n\"So?!\" Reggie exclaimed. \"How was it, Yo?\"\n\nMatt chuckled. \"You guys... deserve a raise.\"\n\nThe three laughed together loudly in the streets walking back to the train station. \n\nThe nightlife was in full bloom in the streets of Tokyo. Inexplicable, cultural weirdness constantly surprised Matt every time he swiveled his head. \n\n\"C'mon, boss man.\" Paul said, leading Matt away from the spectacle. \"Let's get back. We got a flight to catch TOMORROW!!!\"\n\nThe three howled joyfully, unnoticed by the passing throng. \n\n~~~~~~~~~~~~\n\n\"Something is definitely wrong.\" Janice frowned in the mirror as she ran a brush through her blonde curls. \"Matt's number hasn't worked in days! I can't call, I can't text... it's like he blocked me... or maybe something even worse!\"\n\nJanice checked the news for any stories concerning a possible earthquake or some other natural disaster in Japan that could of affected communication. \n\n\"Nothing... so strange.\" she spoke aloud. \"God, I hope he's ok.\"\n\n\"I'm sure he's fine.\" said Linda, affixing an earring as she sauntered into Janice's room. \"Bobby's always late, remember?\"\n\nJanice didn't bother to correct her mother. The two were nearly ready to leave for their planned Sunday evening dinner with Bobby, who was expected to arrive any minute. \n\nJanice was thankful for her mother's company at dinner tonight. She hoped she would provide a buffer between her and Bobby. His advances had been persistent during their coffee outing, despite Janice's refusal. \n\nShe gave herself one last look over in the mirror. Her flowery dress hugged her waist, accentuating her huge, protruding, breasts. She intentionally chose to go bra less, letting natural gravity dictate the wild movement visible in the deep cut front of her dress. \"This ought to annoy the shit out of him!\" Janice grinned to her reflection. \n\nLinda beamed at her daughter's beauty as Janice strolled into the dining room. \"It's so wonderful to see you so confident again, Baby!\"\n\nJust then, a text sounded on Janice's phone. Linda curiously observed her daughter practically step on Bubsy, who fled in panic, as she scrambled to her purse to check her phone. \n\n\"Oh... Bobby's downstairs waiting in the car.\" Janice said, dejectedly reading the text message. \n\nLinda blinked in confusion at Janice's strange behavior as she followed her through the front door. \n\n~~~~~~~~~~~~\n\n\"Is THAT what you're wearing?!\" Bobby exclaimed as Janice took a seat in the front passenger seat of his car. \n\n\"Yes, it is.\" Janice stubbornly replied, thrusting her huge breasts out, causing her bulging bare cleavage to swallow the crossing seat belt strap. \"Problem?\" she asked, demurely. \n\n\"Course not...\" Bobby said through his teeth. He turned his head and silently breathed out his nose in deep, controlled breaths, staring straight ahead, as Linda settled herself in the back seat. \n\nBobby drove the ladies to a restaurant across town. The parking lot was practically full and a line of people waited at the door. \n\n\"Are you sure we'll be able to get a table tonight?\" Linda asked. \n\n\"I made us a reservation.\" Bobby replied to her, over his shoulder. \"Tonight's a special night.\" he said, casting a smile over to Janice, who received the glaring grin like a handful of earthworms. \n\nThe three walked past the waiting line of people. Bobby strode forward and gave his name to the host. Janice watched, suspiciously, as the two men traded an understanding nod and the host called together several wait staff to convey unheard instructions. \n\nThe three were guided through the large, open dining area, to the only unoccupied table, which happened to be smack dab in the middle of the room. \n\nLinda gasped at the menu prices, regretting her offer to treat. \n\n\"Don't worry, Mom.\" Janice whispered. \"I have you.\"\n\nAll three enjoyed their meal, immensely. The food was undeniably delicious. Janice practically cleaned her plate. The ladies were discussing dessert options and didn't notice Bobby signal to host. \n\nSuddenly, the restaurant's public address system clicked over the speakers around the room. \n\n\"Ladies and gentlemen...\" an amplified male voice rang out, causing conversations to cease. \"Please guide your attention to the center table, for a special announcement.\"\n\nAll the lights in the large dining room dimmed, but for the one over Janice's table, which seemed now like a spot light. \n\n\"...oh shit.\" Janice gasped as Bobby stood to his feet and smiled down on her. \n\n\"Janice Paige...\" Bobby's spoke, clear to the back of the room. \"If law school has taught me anything besides how to be the best lawyer I can be... it has been that you and I were meant to be together.\"\n\nJanice shrank in her seat, staring at Bobby, mortified. \n\n\"Our paths have separated for a brief time.\" Bobby continued, reaching into his pocket and pulling out a velvet covered ring case. \"... but I'm never gonna let you leave my side again.\"\n\nBobby thrust the ring box forward and opened it before her eyes. The ring was truly gorgeous. It's large, faceted diamonds sparkled in the spotlight. \n\n\"Marry me, Janice.\" \n\nJanice wished she could simply blink out of existence at that moment. The long silence that followed Bobby's question became the loudest thing Janice had ever heard. \n\n\"Go on!\" a stranger whispered, encouragingly. \n\n\"Yeah! Say, 'Yes!'\" another stranger chimed in, louder. \n\nJanice's panicked eyes darted back and forth as murmurs began to arise around the room. Bobby's smile was beginning to strain and a bead of sweat was slipping down his cheek \n\n\"C'mon! Answer him!\" someone called out from the back. \n\nPeople were starting to giggle and point. \n\n\"Hurry up!\"\n\nJanice squeezed her eyes shut, ducking her head. \"OK! Ok... just please, sit down, Bobby!!\"\n\nThe large room erupted in loud applause. People stood to pat Bobby on the back and shake his hand as he took a seat, grinning. Janice's eyes flew open, as terror-stricken reality settled upon her. ",
        "\"What have I done...?\" her mind raced for a quick solution. \n\nBefore she was even aware, the sparkling engagement ring was being slipped onto Janice's finger. \n\n\"It's a beautiful ring, honey.\" Linda said. Janice could immediately detect a sadness in her mother's congratulation. \n\nJanice gave her mother a desperate, clinging hug. \"Don't worry, Mom.\" she whispered in her ear. \"...it's going to be ok.\"\n\n\"Hey, Linda...\" Bobby spoke up as the women clutched each other. \"or should I say 'Mom'... you mind catching a taxi home? I got Janice and I a room Downtown to celebrate our engagement.\"\n\nLinda blinked, taken aback. \"I... I guess so...\"\n\nJanice took her mother's hands, tenderly. \"I'm sorry, Mom. I'll pay for the taxi. I have to fix this with Bobby... I'll be home tomorrow... sometime.\"\n\nLinda wasn't quite sure her daughter's meaning, but she nodded, encouragingly, despite. \n\n~~~~~~~~~~~~\n\nThe local time was 1:36 am when Matt took his phone out of Airplane Mode. As predicted, no messages from Janice were waiting for him. \n\nMatt had spent his waking hours on the long flight home trying to distract his creeping dread by looking through the hundreds of photos he had taken of his remarkable journey. \n\nAn image of a large statue of the Buddha appeared on his screen, giving him pause. Matt contemplated the serene countenance the sculpture displayed, the closed, heavy lidded eyes, the peaceful expression that seemed to say: \"All is well\". \n\n\"I certainly have quite a bit to be grateful for, that's for sure.\" Matt thought, alone. \"A successful job completed, a safe and healthy crew, a truly unforgettable batch of experiences and friends that are sure to stay with me forever... I am a lucky man, indeed. If it turns out that Janice has really moved on from me... I am thoroughly thankful for the beautiful moments I got to spend with her.\"\n\nThe baggage claim area was completely deserted, except for the weary travelers and a few devoted, tired looking family members, here to greet their loved ones home. Matt's traveling companions on his special journey to the Far East bid each other farewell and turned to walk their individual paths into the quiet night\n\nMatt lifted his suitcases and rolled them, in solitude, towards the line of waiting taxis. \n\nAs the sedan pulled away from the curb, Matt proceeded towards his own path of uncertain destiny. \n\n~~~~~~~~~~~~\n\nThe apartment was silent, unlit, when Matt entered. The festoon of greenery that greeted him immediately caused a panic that he had somehow arrived at the wrong apartment. Familiarity slowly settled upon him though as his eyes adjusted. Janice's bedroom door was wide open, the room obviously unoccupied except for a small, black shape that moved quickly across the floor towards him. \n\n\"Hi Bubsy!\" Matt whispered, following irrational instinct in the dark. The feline purred against Matt's leg. He picked up the cat and cuddled him, lovingly for several minutes, grateful for the affection. \n\n\"FREEZE, ASSHOLE!!!\" a female voice screamed, shattering the the silence with such stunning force, Matt dropped Bubsy to the ground immediately and stood straight with his hands up. \n\nMatt had his back towards his room. He saw lights being turned on behind him. \"I've got a gun aimed right at you, fuck face! If you try ANYTHI-... ohmygod... Matthew?\"\n\nMatt suddenly recognized the woman's voice. \"M-Ms. Paige...?\" he said, not daring to turn his head \"It's... it's me, Matt. Please don't shoot me!\"\n\n\"Matthew!! What the fuck are you doing here?!\" Linda exclaimed in complete shock. \n\n\"I... I still live here, right?\" Matt said, casting an eye, cautiously behind him. \n\n\"Fuck, my poor heart... You can relax, I don't have a gun.\" Linda said, catching her breath. \n\nMatt dropped his arms with a sigh of relief and turned around. There, Janice's mom stood in a thin robe, looking at him with a beautiful, bright smile. She held a long vacuum cleaner attachment in her hands, her \"gun\". \n\n\"Welcome home, Booby Boy!\" Linda exclaimed, dropping the plastic part and rushing forward with her arms outstretched for a hug. Her gigantic shaking bosom immediately grabbed Matt's attention as she advanced. The thin robe she wore was definitely not up to the task of containing Linda's massive, wobbling breasts. Her warmth spread to the depths of his being when he felt her body collide against his and her supple embrace surrounded him. \n\n\"What a surprise!!\" Linda said kissing his face, holding him, tightly. \"Geeze, you could have told someone you were coming home! I would have picked you up!\"\n\n\"I... I told Janice.\" Matt croaked. \n\n\"You did? It's weird that she didn't mention it... Oh well, she'll be back tomorrow... she's off celebrating her engagement to Bobby.\" Linda said, rolling her eyes. \n\nThe words hit Matt like a speeding freight train. He felt his heart fall through the floor. A breath of grief escaped his lips. \"Oh god... It's real... she's gone.\" his silent dread announced to the chasm of the Void. \n\n\"Are you ok, honey?\" Linda's expression quickly grew concerned, examining the hollow look on Matt's face. \"Oh god! Of course... you must be EXHAUSTED from that long flight! C'mon. Come lay down in your own bed tonight!\"\n\nMatt had never allowed himself to truly believe that Janice had really dropped him so thoughtlessly. He was sure the whole thing was a misunderstanding and that second chance was all but inevitable. He scoffed at his former optimism, likening it to curtain obscuring a cruel, brutal reality. \"A reality you should have known was bound to you.\" Matt thought, his spirit crumbling. \"Why would she want you? Your own parents didn't want you!\"\n\nMatt was guided, like a mute zombie, to his bedroom. The bed had obviously been occupied just a few moments ago. Linda regarded the disheveled travel clothes Matt was wearing. \n\n\"We need to get you out of these!\" she said, unbuttoning Matt's shirt for him. Through his grief stricken haze, Linda's perfume wafted to his sense when she drew near. \n\nMatt's bleary eyes caught hers casting a glint as she opened his shirt over his shoulders, revealing his bare chest. \n\n\"Fuck! You're hot!\" Linda exclaimed, unabashedly gawking at Matt's chiseled muscular torso. \n\nShe ran her fingers down his bare chest to the waistline of his pants. \"These have to go too.\" she cooed, undoing the fly of Matt's jeans. \n\nMatt almost felt like a disembodied spirit, looking over his own shoulder, as he watched Linda lower herself to her knees. With an eager grin, she took Matt's jeans down to his ankles. After assisting him out of his shoes, socks and pants, Linda eyed the enormous bulge in Matt's tight boxer briefs. \n\nShe looked up at him with an eyebrow cocked. \"On or off?\" she said, pinching the elastic waistband of Matt's underwear. \n\nMatt only managed a nod. \n\n\"That's an 'off' in my book.\" Linda eagerly exclaimed, yanking his thin boxers down. \n\nMatt's flaccid penis bobbed in front of Linda's delighted face. \"Fucking FUCK, you got a nice dick! Even when it's sleepy!\"\n\nMatt's mental numbness prevented any reaction to being stark naked in front of Linda. She stood to her feet, facing him with a smile. Her hands undid the knot on her robe, allowing it to fall open, revealing her completely naked body. \n\n\"Let's lay down, honey.\" Linda cooed, slipping the robe off of her shoulders and guiding Matt to the bed. She sidled close, cuddling his body, after they had settled beneath the sheets. \n\n\"Come lay your head right here.\" said Linda, tenderly, as she rolled onto her back, leading Matt's head towards her surging bosom. \n\nMatt found his face nestled in between Linda's enormous, naked breasts. He felt her take his hand, persuading him to reach up and fondle a handful of jostling softness. The billowing swaths of supple breast meat pressed against Matt's face as he cradled Linda's massive tit, gently. Matt caressed her erect nipple as his lips moistened her cleavage. \n\n\"Are you comfy, my baby?\" Linda cooed. \"Comfy cuddling momma's big boobies?\"\n\nSuddenly, upon hearing those words, Matt inexplicably found himself starting to cry. As if a dam had burst inside him, he was unable to stop torrents of tears streaming from his eyes. His shoulders began shaking as his emotional cloud of numbness cleared and his grief finally overwhelmed him. \n\nLinda blinked in surprise at Matt's unexpected reaction. \"Matthew? What's wrong, baby?\"\n\nMatt buried his face in Linda's cleavage and wept loudly in sorrowful earnest. Linda, in concerned panic, wrapped her arms around his quaking body, holding him tightly until Matt's sobs subsided several minutes later. \n\n\"I wish I knew what was wrong, baby. Am I helping any by just holding you?\" Linda asked, stroking Matt's hair. \n\nShe felt Matt's head nod between her full breasts. A quietness settled over time as Linda stroked Matt's head, gently. \n\nMatt's voice was barely audible against Linda's chest. \"Do... do you want me?\" \n\n\"Do I want you?\" Linda repeated with a chuckle. \"... I've wanted you since I first laid eyes on you!\"\n\n\"You... you have?\" Matt asked, raising his head and looking up into her eyes. \n\nLinda gave Matt a warm smile as she wiped the tears away from his eyes. \"Of course! Not that I ever expected anything... I know I'm too old for you.\"\n\nMatt blinked. \"You are?\"\n\nLinda's eyes narrowed in focus into Matt's. \"Are you saying I'm not?\"\n\nMatt leaned forward slowly, pressing his lips to hers. Linda answered his kiss with tongue. She moaned in pleasure. Matt's growing cock was pressed against her inner thigh, increasing in length until it prodded the entry of Linda's wet vagina. \n\n\"I've wanted this for so long!\" Linda breathed, intensely, as Matt kissed her neck and shoulders. \n\nHe moaned in erotic amazement as he gathered her tremendous breast mass together into two enormous, soft globes perched upon her rib cage. Linda arched her back as Matt dove his face into her plush breasts, lapping and sucking her chestnut hued areolas and her rubbery nipples.\n\n\"Fuck yes, baby!\" Linda hissed. \"Oh god! Suck those big, juicy titties so good!!\"\n\nMatt's mouth explored every soft square inch of Linda's amazing expanse of breast. When his appetite was fulfilled, he continued to lower himself to Linda's belly and beyond. \n\n\"Oh shit...\" she whispered in erotic urgency. \"Oh fuck! Are you...?\"\n\nMatt cast an eye to Linda's face as he lowered his head between her legs. She bit her lip when she felt his tongue glide firmly against her quivering slit. \n\n\"Oh my fucking god! Yes! Eat that pussy, baby!\"\n\nMatt wrapped his lips around Linda's twat and flicked her clitoris with his tongue. She moaned in pleasure; quietly at first, but soon she couldn't stop herself from growing louder and louder. \n\n\"YES!! YES!! YES!!\" Linda screamed, throwing her head back. \"Oh god! I just came so fucking hard!!\"\n\nMatt felt her running her fingers through his hair as he continued to tantalize her clit with his tongue. \"Oh god! Fuck me!! Give me that big, young cock! My pussy is so wet for you!\"\n\nMatt wiped his mouth dry on the sheets and raised himself above her prone body. Linda could feel the immensity of Matt's velvet smooth dick head pushing against her moist labia. She shifted her hips forward, allowing Matt's mushroom tip between her folds. \n\n\"Oh!! Oh ffffuuucckk!!!\" Linda exclaimed, feeling Matt push forward, stretching her pussy lips wide to accommodate his exceptional girth. Linda struggled to believe the level of ecstatic bliss as her tight vaginal cavity was packed, wall to wall, with thick, throbbing cock. \n\n\"Yes! Oh god, you feel absolutely amazing!\" Linda breathed, heavily running her finger nails across Matt's back. \"So fucking BIG!\"\n\nHis cock slid in and out of Linda's sopping wet vagina, dragging his dick head against the nub of her g-spot. \"Shit!!\" she screamed. \"Right there!! Oh my god! Keep going!!\"\n\nWith every thrust forward, Matt felt Linda vagina constrict tighter and tighter against his erect penis, until she threw her head back and screamed through a convulsion inducing orgasm. \n\n\"OH MY FUCKING GOD!!\" Linda cried. \"I'M ACTUALLY CUMMING ON YOUR DICK!!\"\n\nBy her reaction, Matt questioned if Linda had ever achieved orgasm through penetration before now. Her eyes were wide with youthful wonder as Matt continued to thrust his cock into her wet snatch. \n\nThey switched positions. Matt laid on his back as Linda climbed on top of him. She gingerly guided Matt's wet, throbbing dick into her pink pussy once again. As she began bouncing up and down on his rigid erection, Matt couldn't even see her face beyond her huge, wobbling breasts. His hands sank into her luscious, immense softness as he attempted to hold her mighty tits aloft. Linda took advantage of the the relief of weight and increased her tempo impaling herself on Matt's thick cock. \n\nEvery new position they entered into brought a cacophonous, screaming orgasm out of Linda. She allowed Matt to bend and twist her body in order to lustfully stab his phallus into her quivering pussy, which she received with enthusiastic zeal. \n\n\"Oh my god! You're fucking incredible! Oh jesus, that big, fat dick is wearing my poor pussy out!!\"\n\nMatt, once again, felt a bit of pride in how long he was able to last without blowing his load, however, he could see Linda growing weary. Matt closed his eyes and concentrated. Soon, Linda could feel his cock expanding in imminent climax. \"Yes, baby! Give me that cum! Oh... fuck! I'm cumming too!!\"\n\nMatt shuddered at the exquisite sensation of Linda's pussy tightening around his dick as his sperm launched into her. The two held their breath, in shared ecstasy as their climaxes slowly ebbed. \n\nLinda flopped onto her back, her breasts rolling on her chest, wildly. Matt got up, damp with his own sweat, and fetched an unused bottled water from his pack. \n\n\"Ho-lee-shit-balls!\" Linda cried, staring up at the ceiling, dazed. She raised her head to take a sip from the bottle. She exhaled loudly. \"Wow!\" \n\nLinda cast her wide eyes over Matt, who was navigating his way under the sheets next to her. \"Here I was, thinking all along that you were going to be a 'three pump chump'! Goddam, you shut ME the hell up!\" She laughed. Matt almost mustered a chuckle through his silent smirk. \n\nShe turned and cuddled against Matt, resting her head on his chest. \"Seriously. That was one for the books for me! No guy's dick has ever made me cum before... like, ever!\"\n\n\"Really?\"\n\n\"Yeah! I'm amazed too, believe me! I thought I'd never feel what it was like. Guess I know now, huh?\" Linda chuckled. \"I just needed a king sized cock!\"\n\nMatt stroked Linda's long, wavy, brunette hair for several quiet moments. An occasional gray strand sifted through his fingers. Linda idly massaged Matt's semi flaccid dick beneath the sheets. \n\n\"You know who needs this nice dick more than me?\" Linda asked, quietly, breaking the silence. \n\n\"Hm?\"\n\n\"Janice.\" said Linda. \n\nMatt swallowed hard, feeling a lump forming in his throat. \"I, uhh... think that ship has sailed.\" he managed to say in a rasping whisper. \n\n\"Mm. Shame.\" Linda spoke. \"You should get some rest, honey! You looked so BEAT earlier. I honestly don't know how you're still awake!\" \n\nMatt couldn't deny his exhaustion. The thought of laying down to bed caused an involuntary yawn. \"Yeah... sleep... sounds good.\" he said, rolling over to face her. \n\nLinda nestled under the covers and snuggled her back against Matt's chest. He felt her hand gently take his and guided it between her giant, warm breasts. \n\n\"Goodnight, Boobie Boy!\" she cooed. \n\nMatt kissed Linda's shoulder and closed his eyes, falling asleep almost instantly. \n\n~~~~~~~~~~~~\n\nIt was almost noon when Matt's eyes opened to the dark bedroom. He was alone. A note laid on the pillow next to him from Linda. \n\n\"Went grocery shopping for dinner tonight! Making my famous lasagna- xoxoxo\"\n\nMatt wearily rose and stumbled to the shower. The warm water cleansed the sleep and travel and sex from his body. Feeling refreshed, he toweled himself off and got dressed. \n\nJanice's bedroom door still stood ajar, undisturbed. Sunlight poured in from the windows, nourishing the beautiful green houseplants. Matt loved the look of his apartment adorned in natural beauty, harmonizing with furniture. \n\nBubsy purred at Matt's feet, nuzzling his leg. He picked up the loving feline and carried him into the room to keep Matt company while he unpacked his suitcases. \n\nMatt laid out the many souvenirs he had collected over his time. His completed Goshuin-cho laid among them. \n\nJust then, Matt heard the front door open. He gulped, his eyes peered to the living room from his open bedroom door, expecting Janice to round the corner. \n\nInstead, Bobby appeared, looking at Matt with a smug smile. \"Well, well...! World traveler! Bring home any exotic cooties?\"\n\n\"Bobby... Hey, man.\" Matt stepped forward to honorably shake Bobby's hand. \n\n\"You're not the kinda guy that holds a grudge, are ya?\" Bobby asked, stepping close to Matt, leaving his hand suspended, unanswered. \n\n\"No.\" Matt said, blinking. \n\n\"Good to know!\" Bobby laughed, rapping his knuckles against Matt's crotch. \n\nMatt winced in pain from the surprise pot shot, as Bobby cackled. \n\nFoot stomps climbing up the stairs were heard. \"Thanks for giving me a hand with all this shit, Bobby!\" Janice's voice shouted from beyond the front door. \n\nLooking over Bobby's shoulder, Matt's eyes widened to see Janice step through the door, her arms full of boxed food leftovers and bags. \n\nTheir eyes met. \n\nA look shock, shame and complete befuddlement washed over Janice's face as she beheld Matt standing in the living room. Her arms fell to her side, unconsciously spilling leftover breakfast items all over the floor in front of her. \n\n\"My hash browns!\" shrieked Bobby. \n\nJanice unconsciously stepped forward, through the debris, towards Matt. She wore a face of stunned bliss as tears began pooling in her eyes. She stepped past Bobby as though he were invisible, raising her arms to embrace Matt. \n\n\"Matty...\" her shaking voice whispered. \n\nMatt regarded Janice's obvious surprise with confusion. \"She looks just as surprised as Linda.\" he thought. \"In fact, the only person that hasn't been surprised was... Bobby.\"\n\nJanice collapsed into Matt, wrapping her arms around him, tightly. She longed to feel his embrace in return, when it didn't happen, she looked at him, confused. \n\n\"What is it, baby? What's wrong?\" Janice pleaded with her eyes. \n\nMatt stepped back and took her left hand. The sparkling engagement ring on her finger caught the light in the room, beautifully. \"Congratulations, you two. I wish for your prosperity together.\" Matt bowed respectfully, out of habit. \n\nJanice looked horrified. \"Oh my god... no!\" she gasped, yanking the ring off of her finger. \"No! I'm not marrying him!\" she insisted. \n\n\"What!?\" shouted Bobby. \n\nJanice spun quickly to face him. \"I've been trying to tell you that all night! You kept avoiding and avoiding!\" Janice grabbed Bobby's wrist and lifted his hand up. She slammed the ring in his open palm. \"You ambushed me in that restaurant! I only said yes to avoid YOU getting embarrassed!\"\n\nJanice spun around again towards Matt, the fire in her eyes remained unquenched. \n\n\"And YOU!\" Janice said, stepping forward. \"You don't say a peep to me for days and then you just SHOW UP without even warning me!? Really!?\"\n\n\"I've been trying... after your breakup text... you blocked me.\" Matt said, weakly. \n\n\"Blocked!?\" Janice exclaimed, pulling out her phone. \"Breakup text?!\"\n\nBobby gulped. \n\nJanice's face went pale she saw her settings had been changed. \"Sh-show me that last text on your phone.\" she whispered. \n\nMatt brought out his phone and displayed the last text from her and the list of rejected texts he had attempted afterwards. Janice covered her mouth with her hand in shocked amazement. ",
        "\"I promise I didn't write that to you...!\" Janice gazed in wide terror up at Matt. \"Oh my god...\" she said when it finally clicked. \"Bobby...\"\n\nBobby feigned an innocent look, but his poker face needed more training, for certain. \n\nFinally he dropped the attempted ruse when it became clear that no one was buying it. \"You're really gonna choose this guy over ME!?\" Bobby spat. \"You know how much money I'm about to be making? ... I'll be making, in a day, what this guy had to fly around the world to make in three months!\"\n\nJanice clenched her teeth in rage as she spun around to face him. \"I don't give a shit! I LOVE HIM!\"\n\n\"Love don't pay the r-\"\n\n\"GET THE FUCK OUT OF MY LIIIIFE!!!\" Janice screamed at the top of her lungs. \n\nBobby reared back, stunned to a standstill. Janice, frustrated with Bobby's lack of mobility, grabbed a throw pillow from the couch and began swinging it wildly, striking him against the arm. \n\n\"GO!\" she screamed, pelting him. \"GET OUT!!\"\n\n\"Fine!\" Bobby finally said, shaking his head. \"Fuck you both! I'm so better off than you! You fucking LOSERS!\"\n\nBobby stormed through the doorway, slamming the door shut behind him. \n\nJanice and Matt faced each other in silence. A quiet moment fell between them. Looking deeply into each other's eyes, their faces simultaneously erupted into tears as they rushed forward into their arms. \n\nMatt held Janice tighter than he had ever before. She responded with equal intensity. \"Oh baby... I thought I had lost you.\" Matt whispered. \n\n\"I'm so sorry! Please say you'll forgive me!\" Janice wept. \n\nMatt felt a chill run up his spine remembering last night with Linda.\"Oh shit...\" his shaking voice uttered. \"Janice... I fucked up... it's big.\"\n\n\"What happened?\" Janice asked, with concern. \n\n\"I came home last night and Linda and I... made a connection.\" Matt said, swallowing hard. \n\n\"You fucked my mom?!\" Janice exclaimed. \n\nMatt looked pained, but he nodded. \n\n\"How many times did you make her cum?\" \n\nMatt blinked in confusion. \"Uhhm. A lot, I think.\"\n\n\"Thank god!\" Janice exhaled. \"I swear, that's ALL she's been talking about these days! Good for her!\"\n\nMatt's eyes widened in amazement. \"You're not mad?\"\n\n\"I already told you it was ok, goofball!\" Janice giggled. \"She's family!\"\n\nMatt breathed a sigh of relief. Janice leapt into his arms and the two shared a long kiss of romantic passion. \n\n\"Speaking of family...\" Janice said, taking a breath. \"How do you feel about my sister moving in?\"\n\n \n"
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "big tits",
        "huge boobs",
        "enormous breasts",
        "slow burn"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-19"
}