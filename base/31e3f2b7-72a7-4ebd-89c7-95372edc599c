{
    "title": "Twisted Ink 4 Alex",
    "pages": [
        "Alex prologue \n\n\"Alex!\" My sister whined. \"It's my wedding day. You have to dance with me.\" I turned my scary glare on her and shook my head. Usually the person receiving said glare would cower and stop bothering me. Anya, of course, just pouted more dramatically. I loved my sister. More than anything in the world. She was the one person that kept me connected to the real Alexei Bronski. I'd almost lost her a couple of years ago. That day, those few hours, were a nightmare. I'd faced my own demise several times. I'd been beaten, stabbed, shot. I'd beaten, stabbed and killed, but that day...that day still haunted me.\n\n\"Why don't you get your husband to dance with you?\" I asked flippantly. \n\n\"He's dancing with his mom, and then his sister. And then his sister-in-law. Come on. Please? For me?\" She fluttered her lashes and stuck her lip out. Dammit. I heaved a sigh and grabbed her hand. She let out an excited squeal and followed me to the dance floor. \n\n\"You so owe me, big sister,\" I muttered as I took her hand and began dancing. \n\n\"I don't know why you don't like to dance. After mother paid for all those lessons, you're a fantastic dancer,\" she said and rolled her eyes. It was true. My mother put both of us in ballroom classes. It was something all proper gentlemen and ladies should know, she'd told us. Right. Because I needed another reason to be called Alexandra in school. I was always quiet and shy. I never asked girls out. Rumors spread in private school, quickly. The thing was, they were true. \n\nI've never been attracted to a woman. Ever. I can appreciate their aesthetic beauty and I am the first to admit they can have much more depth than most men, but as far as a sexual spark. Never.\n\nOh I tried. In college I tried a lot and I succeeded in getting the job done, but I never felt the raw need I felt when I was with a man. I was never attracted to the girl, she was always just the means to an end. So by my sophomore year, I accepted my homosexuality. It was a rather easy acceptance for me. However, telling anyone else? That was the problem. Anya knew. Almost right away. She was open and supportive. Now her friend Raine knew. Probably his lover, Deak, too. But that was it. Other than my lovers no one else knew. No one. \n\nI had to keep that side of my life buried deep. I had a lot of secrets. \n\n\"Oh my God! Anya!\" Jen screeched. She was barreling toward us. Her husband, Ben, was shaking his head from where she'd left him. \"Guess what? Guess what? Guess what?\"\n\n\"What, bitch, what?\" My sister replied sarcastically. They had the weirdest relationship. Usually they were just downright rude to each other. \n\n\"Raine and Deak and Tyler are getting married!\" Jen squealed. I raised my head and spotted the unusual trio. A small pang of jealousy swept through me when I saw Raine and his girl engaged in a kiss. Not because of her. Or him. Just that he could be so open with his love. He could and did show affection openly to both of them. \n\n\"What!\" My sister screeched back. \"How? Oh my God! How does that work?\"\n\n\"Yeah,\" I agreed, a bit befuddled myself. \n\n\"Ben said something about a civil union type contract. He's going to talk to Colt about it. Isn't it wonderful?\" Jen answered and bounced. \n\n\"That is great,\" I smiled. Anya squeezed my hand and gave me a knowing smile. I really was happy for them. They deserved it. \n\n\"I'm going to go congratulate them!\" Jen said with unrestrained joy. \n\n\"Wow,\" Anya said softly. \"Good for them.\" Her eyes turned to me. Great. Here we go. \"I want that for you, Alex. You could be that happy. No one here cares that Deak and Raine are bisexual.\"\n\n\"It's not that easy for me, Anya. I swear I 'am' happy, sis,\" I lied smoothly. I was certainly not happy. I didn't even know what that meant anymore. I hadn't known it for five long, hard years. \n\n\"Okay,\" Anya backed off. Thank God.\n\n\"Mind if I steal my wife?\" Jack asked me with a hand on my shoulder. He was beaming like he'd just won the lottery. I guess though, he had. My sister was way too good for him. The only reason I was okay with this fact was he seemed to realize that and treated her like a goddamned queen because of it. \n\n\"By all means. She's driving me nuts,\" I bowed out and smirked at Anya's affronted huff.\n\n\"You're an ass, Alexei Nicolai!\" She called to my retreating back. I made way to Deak and Raine, who were now mauling each other. I'd be lying if I said my body didn't react. They were good looking guys and they were quite openly eating at each others' mouths.\n\n\"Ahem. Congratulations?\" I said and smiled when they started. Their fianc\u00e9e?-,Tyler got wide eyed and cowered into Raine. Yeah, I still had it. Not that I liked being scary, but...well yeah I did.\n\n\"Thanks, man,\" Raine said and stood to give me a handshake/man hug. It threw me off. I wasn't a huggy person. People didn't just hug me. Maybe he was drunk. \n\n\"Thank you,\" Deak slurred slightly and beamed. \"I am one lucky fucker.\"\n\n\"No doubt,\" I chuckled. And grinned at Tyler. She gasped and blushed. I had to bite my lip, which apparently was even worse for the poor girl. Her pupils dilated slightly. I'm not a fool. I know I'm attractive and I find it amusing when women react to my looks. It's also flattering. I'm not a complete conceited ass.\n\n\"Damn, I only get that reaction when I'm naked,\" Deak slurred again.\n\n\"Baby, Jesus! Filter!\" Raine said exasperated. \"Sorry, open bar,\" he explained. \n\n\"It's okay. Congratulations Ms. Tyler,\" I told her.\n\n\"Thank you,\" she squeaked. Deak gaped at her.\n\n\"Really? We just got engaged and you're swooning over another dude?\" Deak snorted. Raine dropped his head in his hands. I squeezed his shoulder.\n\nHe looked up and shook his head. \"And there are two of them,\" he said in mock horror. \"God, help me if they want babies or some shit.\"\n\n\"You're bed, man,\" I chuckled. I really did like Raine. He was a good guy. He was extremely loyal and that was a very important personality trait to me. \"Congratulations again, you guys.\"\n\n\"Thanks, man,\" he said with another man hug. \"Oh hey, by the way, Jack said you're house sitting while they're in St. Thomas?\"\n\n\"Yeah.\"\n\n\"Cool. I am gonna need to stop by to pick up my keys tomorrow. My car is the getaway vehicle tonight.\"\n\n\"That's your Vette?\" I asked in awe.\n\n\"Yeah. Rebuilt it myself,\" he said proudly.\n\n\"I helped!\" Deak called. \"Jeez both of you go gaga around Alex,\" he muttered. Raine glared at him. \n\n\"Baby, you're pushin' it,\" Raine snapped.\n\n\"Promises, promises,\" Deak yawned.\n\n\"I'll call tomorrow about the keys,\" Raine muttered and rolled his eyes. \n\n\"Sweet,\" I smiled and turned to make my way to my table. Then I froze. Solid. Walking in was hands down the most beautiful man I'd ever laid eyes on. Tall, blonde, striking blue eyes, and body made for sin. My mouth dried and my dick took on a life of its own. Raine noticed. \"That's Andrew Grayson. What the fuck is he doing here?\" He said the last to himself. \n\n\"Who is he?\" I asked hoarsely.\n\n\"He's an old friend's older brother,\" Raine answered. \"Jack had to have invited him. But I don't know why.\" \n\n\"Oh.\" That's all I could say past the lust that was drowning me. I watched as Jack and Ben greeted the god affectionately, then started leading them toward us. Oh, dear God. He was even sexier up close. \n\n\"Andrew!\" Raine greeted and moved around my statue imitating stance. \n\n\"Andy!\" Deak called and squeezed around too. They were all speaking and laughing, but I couldn't hear anything over the thud of my heart. \n\n\"Alex? Alex?\" Raine was calling. I shook out of my lustful trance and extended my hand. Lightening shot up my spine when the gorgeous man in front of me took it. Then the fucker smiled and my knees almost buckled. \n\n\"Andy Grayson. Friend of Jack's,\" he said all calm and collected. \n\n\"Alex,\" I replied dumbly. \"Alex Bronski. New brother-in-law,\" I amended.\n\n\"Nice to meet you, Alex,\" he smiled again. Oh for heaven's sake. \n\n\"Andy just moved here from Atlanta,\" Jack said. And that was the moment everything changed.\n\nAndy 1 \n\nNew city, new job, new life. That was my goal. I had hightailed it out of Atlanta as soon as the job came through in Memphis. Then in a funny twist of fate I ran into Jack Campbell at a grocery store of all places. \n\nI honestly didn't expect him to speak to me. After what went down with Ben Allen and my douchebag little brother, I figured he wanted nothing to do with any of the Graysons. I misjudged Jack's genuine kindness. He not only stopped and talked, he noticed what was in my basket as well. \n\n\"D'you just move, man?\" \n\n\"Yeah. From Atlanta.\"\n\nThen he blew my mind by saying we should have a drink sometime. It made me smile. Jack and my brother...their whole group really...always made me feel like a nerd. Even though I was older. I figured they probably still felt that way. Not that I was pining to be a 'cool kid' or that I was bullied. I was just...different. It could have been that I was a sixteen year old college junior when they started high school. My intelligence has always pigeonholed me. I don't mean to sound conceited, but people don't know what to talk about with me. \n\nThe thing is, I like conversations about normal things. Cars, football, music...anything really. I have an extensive vocabulary, but it's not as though I use it to make myself seem smarter. Still, it's hard to make friends.\n\nThat's why when Jack suddenly said, \"Of course, I'm getting married Saturday, so it'll have to be after the honeymoon...hey you should come to the wedding!\" I almost laughed. \n\n\"Um, really?\"\n\n\"Yeah. Yeah. I know everyone would love to see you!\"\n\n\"Everyone?\"\n\n\"Ben knows you're not you're brother, Andy. You didn't condone it. We know that. I heard what you said to Luke that night.\"\n\nHe was right I didn't condone it at all. I had told Luke, in no uncertain terms, that I was appalled and disgusted at his behavior. That went over like a steel anvil. I'm pretty sure my brother was laughing so hard he was crying. Asshole. \n\nMy brother and I were as different as night and day. Luke was a rebel. He was always looking out for number one. I was a people pleaser. I wanted everyone to be comfortable and happy. Luke was also a social butterfly. He oozed charm and could converse easily with anyone. I was awkward and my conversations usually ran dry. \n\nLuke's group of friends were all like him. Social and charming. \n\n\"How is Ben? And Zachary?\"\n\n\"They're really good,\" Jack answered. \"Ben was born to be a father, man. He's shining. They have a baby girl now, too. He and his wife. Hannah. She's beautiful.\"\n\nI gave a smile. \"And you? Getting married? Jack \"The Player\" Campbell?\"\n\n\"To the love of my life, dude. My one and only. So come see me get married, so you can tell your grand kids some day,\" Jack ended with a chuckle.\n\nSo I accepted the invite. It was that night a month ago that I was introduced to Alex Bronski, the most intimidating, albeit gorgeous man, I'd ever met. And I haven't slept well since. \n\nAlex 1\n\n\"Here. Extra plate,\" I told my sister after setting the table for her Sunday dinner. \n\n\"Nope,\" she replied pushing it back. \"Jack's friend, Andy, is coming.\" My breath whooshed out. The Michelangelo statue was coming for dinner? My stomach knotted and my back stiffened. \"Alex,\" Anya said in her prissy voice, \"be nice.\" Oh I wanted to be very nice to Andy. \"I know you don't like meeting new people, but Jack says Andy doesn't know anyone here and he has trouble meeting people.\"\n\nInteresting. A guy that looked like him should be able to make friends easily. \"Why?\" Anya glared in response. \"No. Why is it hard for him to meet people?\"\n\n\"Oh. He's apparently some sort of genius. He graduated high school at like fourteen,\" she explained. Smart and sexy? I was so fucked. He was probably straight as a fucking arrow, too. \n\n\"Okay, sis. I'll be nice,\" I smiled and nodded. Anya hugged me and sent me back to setting the table. \n\nAs I was placing the forks I heard Jack's overly excited voice. \"Andy! Glad you could make it, man!\" My cock jumped. Shit. I hadn't even seen him and I was already fucking hard. Just hearing his name excited me. I tried to remember the last time I felt this way. Never. I'd never been this excited about a guy. \n\n\"Thanks for inviting me,\" Andy's uniquely melodic timbre flowed into the room. \"Um, I didn't know what you were serving, so I brought red and white.\" I chuckled to myself, picturing Jack's face. Jack and his crew were beer drinkers. If Anya was serving fruit and cheese, they'd be drinking Southern Pecan or Landshark. \n\n\"Oh. Thanks, man. You didn't have to,\" Jack said, befuddled. I placed the last fork and made my way to the living room. One, to make up for my rather embarrassing first introduction. Two, to save the wine from Jack. \n\n\"I'll take those,\" I called and reached for the bottles Jack was looking at bemusedly. I looked up and almost dropped them. He was in a plain white button down and khakis that fit. Just. Fucking. Right. Holy hell. Apparently he was raised right. Dressed business casual and brought something for the hostess? God, he was killing me.\n\n\"Andy. Nice to see you again,\" I said and held out my hand. \n\n\"Alex. Hi,\" he turned on that blinding smile. I actually feared punching a hole in my jeans. The same electricity hit me when he took my hand. I still couldn't get a good read on him. Most of the time I could figure out sexual preference as easily as race, but this guy...not at all. Probably straight and my mind wanted him to be gay so bad it was tricking me. \n\n\"I'm gonna go let these breath,\" I said and let go of his hand. I immediately missed the sensation. \n\n\"Ah, a wine drinker, then?\" Andy smiled and nodded approvingly. My chest twisted.\n\n\"Absolutely,\" I smiled back. It was then I noticed the other occupants of the room had become rather quiet and fucking nosy. I turned my scary death glare on them and they all averted their shocked eyes. Yeah. I was fucking smiling and being congenial and shit...so what? Andy widened his eyes and looked at the others.\n\n\"Right,\" I muttered. \"Gonna go, um...\" I held up the bottles and made a quick, embarrassed exit.\n\n\"Ooh! Wine?\" My sister said in her sweet little voice. \n\n\"Yeah. Um, that Andy guy,\" I replied. \"Since we're having beef roast, I'm gonna open the red.\" \n\n\"Okay,\" Anya shrugged. \"Jen will want white though. The guys will want beer.\" I sighed heavily. Creatins. \n\nAndy 2 \n\nOkay. Note to self: Jack Campbell and Ben Allen do 'not' drink wine. Fortunately, Alex saved me from my faux pas. I also realized right away that I was not the only person Alex intimidated. When he'd looked at the rest of the room they'd immediately looked away. It was more than a little sexy. The most important realization, though. Alex Bronski liked men. Gay or bi? I wasn't sure, but he definitely was checking me out. That made me smile. \n\nI was used to men, women too, noticing my outward appearance. That wasn't always the case. I was an awkward teenager. I was always demonstratively younger than the people I was left to socialize with and I was painfully shy. Now the problem tends to be my outward appearance attracts people, while my still shy and awkward personality drives them away.\n\n\"Dinner's ready!\" Jack's wife called. \"Andy, so glad to see you again!\" She shocked me by pulling me into a lung compressing hug.\n\n\"By the way, Grayson. My wife is extremely shy and demure,\" Jack teased. \n\n\"Oh. Hush. There are no strangers in this house,\" Anya berated him. \"Well, come on y'all. Dinner.\"\n\nWe all followed Anya to the table. I took a seat next to Raine. Jack had explained that he and Deacon were in a m\u00e9nage relationship with Tyler Eason. She'd grown into a very beautiful woman. I only knew her for little while. Her family had moved when I graduated college. \n\n\"So? Andy how're you liking our city so far?\" Anya asked politely.\n\n\"It's a wonderful place. I haven't had much time to explore because of work, but I've liked what I've seen so far,\" I answered.\n\n\"What is it you do?\" Alex asked. My heart thudded, just like every other time he spoke to me.\n\n\"I'm in medical research and pharmacology. I work with pharmaceutical companies to develop new drugs. I'm working with St. Jude right now to test a new anti nausea medication for pediatric chemo patients,\" I explained. \n\n\"Wow,\" Ben's wife breathed out.\n\n\"That's incredible,\" Anya said with awe.\n\n\"Nah. Basically it's taking someone else's research and bending it to suit a different need,\" I waved them off. \n\n\"As if!\" Anya scoffed. \"Pharmacology was my worst class. I almost failed.\"\n\n\"Oh? You're in the medical field?\" \n\n\"Just an RN,\" she flushed. And there it was. She had already put me above herself. This was why it was hard to associate with people. \n\n\"Nursing is nothing to balk at, Anya. Where as I only need to know the chemical make up of a drug and the physiology of a symptom or disease, you have to know emergency procedures, anatomy, physiology, psychology and a million other things. And you have to do all of those things with a smile,\" I explained. Anya flushed again.\n\n\"I never even thought about it like that,\" she said with a humble smile.\n\n\"Wow, Anya, you're like super important,\" Ben's wife commented.\n\n\"Andy, quit flirting with my wife,\" Jack scoffed and then grinned in adoration at his bride. \n\n\"Wouldn't dream of it,\" I smiled back. \n\n\"So Andy?\" Anya flushed. \"How exactly is it you don't have a girlfriend with all that charm?\"\n\n\"Don't want one,\" I replied and smirked. I chanced a glance at Alex. His brows were drawn in inquisitively and his mouth was turned down in a thoughtful frown.\n\n\"Why not?\" He asked blatantly.\n\n\"Alex!\" Anya admonished. \n\nI chuckled and shook my head. \"It's okay,\" I told Anya. \"I'm gay. So women in general don't really appeal to me,\" I explained further and smirked at Alex. His face morphed from affronted inquisition to shock to interest. The look of lust that flashed in his eyes caused my blood flow to take a detour to my groin.\n\n\"Oh God. I'm sorry,\" Anya replied with genuine embarrassment.\n\n\"No. Don't be. I'm not,\" I smiled at her. \"This roast is delicious.\"\n\nAlex 2\n\nTwo words. Two words and I was done. I watched in lustful shock as he dug back into his food. The rest of the table had gone eerily quiet. \"Ben, how's Zach?\" Andy asked conversationally, as though the whole table wasn't staring at him.\n\n\"He's good. Getting big. You should stop by and see him,\" Ben offered to my surprise. I knew that Andy's brother had been led to believe that Ben's son was his. \n\nApparently it surprised Andy too. \"Really?\"\n\n\"Well, sure,\" Ben replied and laid his fork down. \"Andy, what happened with your brother, I don't blame 'you'. You can't help who your relatives are.\"\n\nAnya snorted in a very unladylike manner. My head jerked toward her. One of my greatest regrets was turning a blind eye to the abuse my sister endured at the hands of my father. Or her ex lover. My sister had been hurt so much, and I wasn't ever able to stop it. I didn't even try. I'd promised myself to protect the people I loved from then on. I wasn't doing a good job of it. \"That's very true,\" I said quietly. \n\n\"Alex,\" Anya pleaded softly. \n\n\"Just agreeing with the point made, sis,\" I gave her the best smile I could muster.\n\nAndy cleared his throat. \"Well, thank you, Ben.\" The table fell into an awkward silence. Andy gallantly tried to save the conversation, and picked the worst topic. \"Alex? What do you do?\"\n\nEveryone, including Anya, looked on with interest. \"I work for the Kazakov family. I'm a business advisor.\" That was a loose description of my job duties, but it was the safest.\n\n\"What kind of business are they in?\" Andy asked. The other guests heads were playing ping pong between the two of us. \n\n\"Several small businesses under an umbrella corporation. Kazaa International,\" I recited the answer. ",
        "\"Oh? Do you work for one of the smaller companies or the corporation as a whole?\" He continued his inquisition. I felt my blood pressure rising. I set my fork down overly gently and looked up at him with one of my many intimidating faces. I didn't want to. Truly. But he was asking too many questions. \n\n\"The corporation,\" I replied tersely. \n\n\"Okay,\" he nodded and went back to his meal. I felt like a dick. I wasn't used to regretting my actions. I didn't much like it.\n\n\"Sorry. I just don't like to discuss my job,\" I explained lamely. Several gasps sounded from the table. \n\n\"I apologize. I shouldn't have pried,\" Andy muttered. Hell. Now he felt bad.\n\n\"It's alright,\" I smiled weakly. \n\n\"I should get going,\" Andy said after another awkward pause. He stood and turned to my sister. No. Shit.\n\n\"But there's dessert,\" Anya explained desperately, before giving me the do-something face. \n\n\"Thank you, but I really should go. The meal was wonderful. Thank you so much for inviting me,\" he said to my sister. She glared at me. Dammit! What was I supposed to do?\n\n\"Andy,\" I said, \"it's really not a big deal. I...my job is kind of...confidential is all.\" He paused momentarily, then sighed. \n\n\"It's quite all right. I have to work tomorrow. Thank you all again.\"\n\nFuck. Think. Think. \"I'll walk you out,\" I blurted. I was graced with a megawatt smile. \n\nI stood and prayed no one noticed the semi I'd been sporting throughout dinner. I lead Andy out the front door and to his car in silence. It wasn't until we were standing awkwardly by his open door that either of us spoke. \n\n\"It was nice to meet you, Alex,\" he said robotically. Damn, I'd fucked up.\n\n\"Look, Andy. I'm really sorry about that,\" I tried one more time.\n\n\"It's not you, Alex. I'm awkward. I don't converse well and I tend to cause a lot of tense silences,\" he said almost sadly. A strong protective wave crashed through me. I didn't like that he was sad. I didn't like that he thought he had done something wrong. I wanted to...what? Tell him he was wrong? Make him smile? Kiss the fuck out of him? All of the above? \n\nI went for option one. \"You're very wrong. You're one of the few people that have ever made my sister feel important. One is married to her and one is her brother. You converse very well, unfortunately we're just an awkward group, so the silences tend to be that way, too,\" I shrugged.\n\nMy cock did the fucking samba when he graced me with a true laugh. Holy fucking shit. That was a sexy sound. My lips parted of their own accord and I sucked in a sharp breath. He noticed and his laughter died abruptly. \n\n\"I wanna kiss you,\" I word vomited. My voice was growly and hoarse. Andy's pupils dilated and it was his turn to suck in breath. \n\n\"Okay,\" he whispered. Fuck. I couldn't; not here. I could never be sure of who may be watching. \n\n\"I can't,\" I said just as quietly.\n\n\"Oh...okay,\" he replied with a dejected look. Goddammit! This was not going well for me. \n\n\"No...it's not that I don't want to...I just...they don't know...I'm not...fuck, I suck at this,\" I finished in frustration.\n\nAndy chuckled. \"Are you still in the proverbial closet?\"\n\n\"Sort of,\" I shrugged. \"I'm not ashamed. I'm...it's complicated.\"\n\nA heavy exhale left Andy's chest. \"It was nice to meet you, Alex. Hopefully, it won't be so complicated someday.\" And with that he left. Fuck.\n\nAlex\n\nI shouldn't have come here. What the hell was I doing? I had officially lost my mind. It had been six days. Six long days since I'd made an ass of myself. Again. \n\nIt had bothered me to the point of distraction. And I can't afford distraction. So, I called Jack and asked for Andy's address. Now I was standing like a creeper on his front porch, debating whether or not to knock.\n\n\"Ah fuck it,\" I said to myself. I gave the door several quick thumps. After several moments, the door swung open and...\n\nA small girl was standing in front of me. My first thought was that I had the wrong house, but one look at the girl and I knew. She had Andy's stubborn chin, his full mouth and his arctic eyes. \"Who are you?\" She asked stubbornly.\n\nI couldn't answer, I just stared at her. A daughter. Andy had a daughter? \"Emma Marie Grayson, what have I told you about...\" Andy froze when he saw me at the door. Finally he spoke again. \"Alex? Sorry, I wasn't expecting company.\"\n\n\"I shouldn't have intruded. Forgive me, I'll just...go,\" I said, still shell- shocked. I turned to leave.\n\n\"No. Wait,\" Andy called. \"Come in?\" I should have left. I should have just gone home, jerked off and forgotten about him. But I didn't.\n\n\"Sure,\" I responded. \n\nAndy's house was cozy. Unlike mine that had just the bare necessities. He had photos everywhere, dark homey furniture, and it smelled like vanilla frosting. \"Daddy, who is that?\" The little girl, Emma, asked.\n\n\"Emma, this is daddy's friend, Mr. Alex. Alex,\" he took a defensive position behind his daughter and a stubborn visage set in. \"This is my daughter, Emma.\"\n\n\"It's very nice to meet you, Emma,\" I said gently.\n\n\"Thank you,\" she smiled her father's killer smile. \n\n\"Time for bed, young lady. Go brush your teeth,\" Andy demanded. \n\n\"But, daddy...\" Emma whined. \n\n\"No but daddy. Bed, Emma,\" he softly, yet forcefully. \n\n\"Oh, alright,\" Emma agreed sullenly. When she'd left the room, Andy turned to me. \n\n\"She's the miracle of my foray into heterosexuality. I have her every other weekend. She lives in Nashville with her mother,\" he explained without hesitation. I just nodded. \"Pardon, but why are you here, Alex?\"\n\n\"I'm sorry. I shouldn't have intruded. It's just the way things were left on Sunday. I needed to apologize.\"\n\n\"It's not necessary,\" he responded and folded his arms across his thick chest. He looked at a spot on the floor, sighed and looked back at me. \"I'm open about myself, Alex. It's not a secret, even from Emma. I know how hard it is to be that way, but I can't allow myself to be involved with someone that keeps that part of themselves, and essentially me, a secret,\" he explained. \n\n\"It's not what you think. My job, the people I work for, they would never understand. It is safer for me and my lovers,\" I retorted hastily. \"I am not ashamed of what I want. The consequences are simply too great.\"\n\n\"Be that as it may, I can't, Alex. I'm sorry,\" he shook his head. Before I could respond Emma came back into the room. \n\n\"Night, daddy,\" she cooed and wrapped her little arms around him.\n\n\"Night, sweetheart. I love you,\" he smiled softly and wrapped her in him. \n\n\"Night, Mr. Alex,\" the girl said and put her arms around my waist. My brain went on overload and something in my chest throbbed.\n\nWithout thought, I hugged the child back. \"Goodnight, little Emma,\" I said to her. I glanced at Andy. His eyes were wide and his lips parted. His gaze went from his child to me and back. \n\nEmma released me and walked back down the hall. Andy was still staring like I'd grown a new head. \"She...Emma's never hugged a stranger,\" he mused in shock. I just nodded again.\n\n\"I'm sorry I took up your time. I'll see myself out,\" I clipped. I realized I couldn't win with this man. I wanted him. Fiercely. But, he wanted things I couldn't give him. A relationship. Openness. Honesty. I started toward the door.\n\n\"Alex,\" he called. I turned back in time to see him taking the necessary steps toward me. Then he was on me. His big hand gripped the back of my head, his other tugged on my waist enough to bring us flush together, and his mouth sealed over mine. It took a split second for me to realize what was happening, but then my hands moved to his hair and my body relaxed into his. \n\nMy tongue ran across the seam of his soft, sexy lips. He opened on a tortured moan and I took advantage. I drove into his mouth like a starving man. He returned my passion with a fervor that left me devastated. He suckled my tongue in his mouth and it shot straight to my cock. I felt that this war of lips and tongue was having the same effect on him. His hardness pressed against me and ground deliciously.\n\nAndy pulled me tighter to him and stole what little breath I had left. The kiss went on for several minutes. I was lost to it. Lost in him. Finally he pulled back. We were both breathing hard. Andy bent over like he'd run the Boston Marathon. \"Jesus...\" He panted. He straightened to his full height and brushed his fingertips down my face. I closed my eyes at the heady sensation of his skin on mine. \"God, you're gorgeous,\" he whispered. My eyes flashed open and I caught his perfect lips again. After a series of small pecks, we rested our foreheads together. Andy closed his eyes and inhaled deeply. \"Say something,\" he whispered.\n\n\"Like what?\" \n\n\"Anything.\"\n\nI took a deep breath. \"I know what you want. I know why you want it. I can't give it to you and I can't explain why. I'm so sorry, Andy,\" I said softly. He started shaking his head. I held it in place and forced him to look into my eyes. \"Despite all of that, I want you. Desperately. I can't tell everyone, yet. It's dangerous. You need to trust me on that, but I want you. So, if you're willing to meet me halfway...\" What? I couldn't date him. All I could offer him was my cock and an empty promise. And that wasn't enough for Andy. He deserved someone who could offer him the stability and the openness he wanted.\n\n\"I want you, too. Enough to figure something out,\" he responded. \"Kiss me.\" So I did. And had plans to see him Monday evening. For dinner at his place.\n\nAndy 3\n\nI tried to remember the last time I was this nervous about a date. Then I tried to remember the last date I had. It had been a while.\n\nI don't know what came over me Saturday night. Something about seeing my daughter hug Alex tugged at me. I couldn't let him leave without a taste of what I was losing. Then I realized one taste was not even close to enough to satiate the hunger I felt for that man. I may never get enough. That kiss. That kiss will forever rank as one of the greatest moments of my life. \n\nThe doorbell rang and I had to berate myself for running to answer. I composed myself and ran my fingers through my hair before opening the door. \n\nJesus, Mary and Joseph! Alex is gorgeous always, but Alex in a three piece suit made my mouth water. \"Can I come in?\" He smirked. It was so sexy. I swallowed hard and nodded. \"I brought a Chardonnay and Merlot, I didn't know what you'd be serving.\" How about him? On his knees? \n\n\"Thank you,\" I said when I found my voice. Then I watched in absolute fascination as Alex made his way into my living room, loosening his tie and removing his jacket. \n\n\"Is this My Morning Jacket?\" He called out to me.\n\n\"Um, yeah. It's just an alternative playlist on my iPhone,\" I answered, taking the wine to the kitchen. \"I hope you like shrimp.\"\n\n\"Love it,\" he replied, closer than he was before. I set the bottles down and turned to him. He was advancing on me with a feral gleam in his hazel eyes. \"Hi,\" he said when he was close enough for me to feel his body heat and smell the mintiness of his breath. \n\n\"Hi,\" I whispered back just before his lips met mine. Our lips moved together in a sensual dance, as my hands crept to his hair. Just when I thought to deepen the kiss, he pulled away.\n\n\"Smells wonderful,\" he said calm and collectedly. I was anything but. I turned to get plates from the cabinet, as he moved across from me and propped his hip on the island. \"How was your day?\"\n\nMy throat clogged and tears stung my eyes. I'd had a bad day. My head fell and I took a deep breath. \"Hey,\" Alex said soothingly. His body heat pressed against my back. His lips brushed my nape causing a shiver to roll down my spine. \"What's wrong?\"\n\n\"I lost one of the kids in our test program today,\" I answered hoarsely. \n\n\"Oh, Jesus. Man, I am so sorry,\" he soothed and to my surprise put his hands on my shoulders and squeezed. \n\n\"She was only six,\" I continued. His lips pressed more firmly to my neck. I looked up to blink back the tears threatening to fall. I had known this was the consequence of pediatric oncology research. I knew I'd lose some of them, but good God it hurt. \n\n\"Shes not suffering anymore, Andy,\" Alex said in a pained whisper. His tone made me think that this man had experienced so much pain in his short life. I felt the need to soothe him, to make him forget. It was an urgent need in me. I turned abruptly and kissed him hard. He moaned into me, driving me higher. \n\nWhen I broke away I looked into his glassy eyes and felt the satisfaction, that whatever demons had surfaced for him had been knocked back down for the time being. \n\nWe ate dinner companionably. The conversation flowed freely and easily.\n\n\"My first kiss? Male or female?\"\n\n\"Both,\" I grinned and took another bite of shrimp tempura.\n\n\"Female was Gretchen Gilmore when I was five. Male was her brother Henry when I was twelve,\" he answered with a wry smile.\n\n\"You, dog, you,\" I chuckled. \n\n\"What about you?\"\n\n\"Female was Naomi Logan when I was sixteen. She was dating my brother,\" I twisted my lips. \"Male was Jared Campbell. Jack's brother, when I was seventeen. We were drunk and his girlfriend dared us to kiss.\"\n\n\"Jack's brother?\" He asked incredulously. \"No fucking way.\"\n\n\"Yes. It was awful,\" I laughed. \"When did you know for sure, that girls didn't do it for you?\"\n\n\"I think I always knew. I fought it until my sophomore year of college, but I always knew. They used to call me Alexandra the Queer in school,\" he said lightly. It was belied by the flash of a grimace on his face.\n\n\"Kids are cruel,\" I said gently. \n\n\"Yeah. But they were right, huh?\" He smiled sadly. \n\n\"I see nothing queeny about you. In fact, what I see right now is all man,\" I replied and licked my lips. A salacious smile graced his lips. Lips that I wanted to feel wrapped around my dick. \n\n\"And? Do you like what you see?\" He asked with a lascivious humor.\n\n\"God, yes,\" I answered, almost embarrassingly fast. \n\n\"Good. Maybe if you're lucky you'll see more before the night is over,\" he teased and took a bite of his food.\n\n\"Perhaps, you'll be the lucky one,\" I countered with my own smile.\n\n\"Without a doubt,\" he responded. \n\n\"I thought you could stay for a movie, maybe?\" I asked Alex after he'd insisted on helping me clean up after dinner. I was stalling I knew, but I was nervous as hell. The bottle of wine we'd finished barely took the edge off. \n\n\"A movie?\" Alex repeated with a small chuckle.\n\n\"Um, yes?\" \n\n\"Yeah, babe. I'll stay for a movie,\" he told me. He brushed the hair off of my forehead and kissed it gently. \"Andy. You don't have to be nervous. If you're not ready to take it to that level, it's okay. I'm actually really enjoying your company. And trust me, that's a compliment.\" I swallowed and nodded. He did actually put me at ease. Somewhat. Physically I was still bowstring tight. He was worried I wasn't ready and all I could think about was mauling him on my couch. \"What're we watching?\" \n\n\"I figured we'd rent something from cable?\" I shrugged. \"Preference?\"\n\n\"Nothing violent. No explosions or blood and guts,\" he responded.\n\n\"Why? Does it scare you? You could always hide your face in my arms if it does,\" I teased.\n\n\"No. I just don't like it,\" he clipped. And I screwed up again. \n\n\"Alex, I'm sorry. I was just kidding. We'll pick something else,\" I had an almost begging tone.\n\n\"No. It's not you, Andy. I just...it gives me nightmares, okay?\"\n\n\"Okay.\" He sat on the couch, looking sexy as sin. He lost his tie and vest completely. His shirt was untucked and unbuttoned to the center of his chest. His hair was rumpled slightly. I sat on the opposite end and chose a comedy.\n\n\"You don't have to sit way over there, you know?\" Alex whisper-yelled teasingly. He patted the space next to him. I hesitated a moment too long. \"Fine,\" he muttered and scooted his body toward me. \"Andy, I'm sorry I got snippy. Forgive me?\" He asked and gave me puppy dog eyes. \n\nI laughed. \"Jesus! Yes! Now will you stop looking so pitiful? It's very unbecoming.\"\n\n\"Oh? Unbecoming?\" He mocked offense. \"And here I thought everything was becoming on me. In fact, if you were on me you'd be coming, too.\" His Cheshire Cat grin and crude humor had my breath hitching.\n\n\"You think so?\" My voice was like sandpaper.\n\n\"Baby, I know so,\" he whispered darkly. One minute I was sitting, the next I was on my back beneath Alex. His lips were eating at mine. His impressive erection was grinding into my thigh. My hands fisted into his shirt and my legs parted for him to settle between them. I ground my dick against his and relished the deep moan he let out. \n\n\"Take it off,\" I breathed against him and tugged at his shirt. He raised up and started unbuttoning. It was taking too long. Without forethought I grabbed both lapels and ripped down. Buttons ricocheted off of the wall and floor. My breath caught at the sight of his wide chest. Dark hair spattered into a triangle. \n\n\"Well, impatient are we?\" Alex teased and lowered back down to press his lips to my neck. \"Your turn,\" he growled. \n\nHe lifted back up and showed my shirt the same care I'd shown his. I pulled him back down to me roughly. The need to feel his bare skin against mine was all consuming. \"Fuck me,\" he growled close to my ear, \"you're fucking beautiful.\" His mouth devoured mine. Lack of oxygen was making me feel like I was floating. His hips ground against mine in the most erotic way. \n\nHis lips left my mouth and went to my neck, my chest. I hissed in a sharp breath when he nipped my nipple. \"God,\" I groaned loudly. \"More.\"\n\n\"I'm just getting started, baby,\" he hissed and trailed his tongue to my navel. He swirled inside of it and moaned. \"You taste like heaven. Tell me what you want?\"\n\nOh God. Everything. I wanted him to stop. I wanted him to keep going. I wanted him to kiss me some more. I wanted his mouth on me. Everywhere. \"What do you want, Andy? Tell me,\" he panted.\n\n\"You,\" I answered just as breathlessly. \n\n\"Where?\"\n\n\"Everywhere,\" I responded honestly. \n\n\"Where's your bedroom?\" He asked hoarsely. My brain stalled. Was I going to do this? Was I going to go to bed with him on our first date? His fingers trailed along my waistband. \"Andy? Bedroom?\" His pressed his palm into my groin and my mind was made for me.\n\n\"Come on. I'll show you,\" I heaved out. His mouth was on me the entire way to my room. Nipping, sucking and licking any bared skin he could find. \n\n\"You need to be naked. Now,\" he demanded and tugged the button of my pants free. The sound of the zipper was loud to my ears. His fingers found the waistband of my boxers and lowered them with my pants. My dick sprang free and pointed straight at Alex, like it was trying to reach out and touch him. \n\n\"Holy shit,\" he hissed. \"You've got a beautiful cock.\" My face heated and I averted my eyes. I wasn't used to men being so crudely vocal about my body. \"Hey. Look at me,\" Alex commanded. I snapped my eyes to his. \"You're gorgeous, Andy. Fucking beautiful. I like looking at you and I like telling you. Okay?\" I gave a jerky nod and fought my instinct to cover myself. Alex walked toward me and gave me a chaste kiss. Something about it made me hotter. Maybe because I was nude, but he'd kissed me without the heat from before. \"You're exceptional, Andy. Here,\" he lightly squeezed my dick. \"Here,\" he ran his fingers over my thudding heart. \"And especially here.\" His fingers brushed my temple. Damn, I could be in trouble. If he kept saying things like that, I may ask him to stay forever. He kissed me gently again and backed me up until my thighs hit the bed. \"Lay back.\" His tone and touch had become tender. Heartbreakingly so. I obeyed his request and move to the center of my bed. He crawled toward me, but lined his face up with my erection. His lips closed over my swollen head and suckled lightly. My eyes rolled back and my hands fisted my comforter. ",
        "\"Alex,\" I whispered with need. He sucked more of me in and used his raspy tongue to trace the veins and ridges. \"Yes,\" I breathed. \"God yes.\" His hand lifted my sac and gave a light squeeze before grazing my anus. \n\nMy dick was released with a pop. Alex's lust filled gaze met mine. His lips were swollen and dark. He was the epitome of masculine perfection. \"Lube?\"\n\n\"Dresser. Top drawer,\" I responded. He got up and got what he needed. I also noticed he pulled out a whole strip of condoms. Holy crap. \"I do need to be able to walk tomorrow,\" I only half teased. \n\n\"Walking's overrated,\" he grinned. \"Spread your legs, baby and bend your knees. Let me see this sexy ass.\" I did as he said and felt the cool plop of the lubricant. Alex's finger began pressing against me and his mouth went back to my dick. I'd been taken anally numerous times, so the preparation for what I was really craving was quick. Almost instantly I was riding his fingers and begging for more. Alex stopped and divested himself of his pants and boxer briefs. Good, God he was so...male. His dick stood proud and thick and long, out of the dark patch of hair. His balls hung large and heavily between thighs. \n\nI heard the tear of the foil. \"Let me,\" I pleaded. I sat up and grabbed his hard cock. I needed just a taste before I rolled the condom on. I closed my lips over him and shivered at the tortured groan he gave me. Male satisfaction pulsed through me. \n\n\"Stop, Andy. Don't wanna come this way. Wanna be in you, baby,\" he gritted. I pulled back and rolled the rubber down his shaft. He squeezed the base and bit his lip. \"Fuck,\" he whispered. \"I need to fuck you now,\" he said to me. \n\n\"Yes,\" I whimpered. \"Please yes.\"\n\nAlex 4\n\n\"Raise that sexy ass up,\" I ground out. I had to keep a firm grip on my cock, otherwise I was gonna come too soon. When Andy sucked me into his warm mouth I almost hit the floor. Then his strong hands rolling on the fucking rubber. I had to offset the naked pleasure with pain or I was going to come. Andy climbed back to center of the bed on his hands and knees and waited. I took a moment to appreciated the view of his toned ass, thick thighs and heavy sac swaying in between them. His back hole was flaring and ready for me. \n\n\"That's so fucking sexy,\" I told him. I knew my dirty compliments embarrassed him, but from the sight of that asshole winking, it also turned him on. I crawled behind him and greased my cock. I lined up with his tight hole and began pressing forward. \"Let me in, baby. Let me feel this tight ass.\"\n\nHe slightly flared and I pushed through the initial ring. \"Oh God,\" he whisper moaned. \n\n\"Feel okay, baby?\" \n\n\"God, yes. More,\" he begged and rocked back, pushing more of me in. I slowly pushed again. \"Dammit! Just fucking do it!\" Andy snarled. At first I was taken aback. Andy wasn't a cusser. Then I started laughing. Hard. my head fell between his shoulder blades and laughter shook my body. I felt Andy's body shaking, too. \"It's not funny,\" he laughed.\n\n\"Yeah. It kind of was,\" I continued laughing. Andy dropped and my cock came out of his ass. I missed the warmth. I came down over him and we both shook with hysterics until we had tears in our eyes. \n\n\"I'm sorry,\" I said finally calming to a chuckle.\n\n\"I can't remember the last time I laughed that hard,\" Andy admitted.\n\n\"Me either.\" I don't think I'd ever laughed that hard with anyone. It felt...good. Freeing. I placed a kiss on Andy's shoulder. \n\n\"Ready to try again,\" he said. His head was rested on his folded arms, his eyes were shining from the tears, his full mouth was grinning and my heart beat overtime. I could not allow myself to fall for this guy. \"I promise I'll behave,\" he chuckled. \n\n\"Yeah,\" I said hoarsely. I moved to kiss his lips gently. \"I'm ready.\" He lifted back up and I moved back to behind him. I surged forward without pause this time. Andy moaned in pleasure and my cock twitched. \"You feel so good,\" I told him.\n\n\"You too, baby,\" he responded. I began to pump my hips in a medium tempo. Andy's scorching heat enveloped me and tested my resolve. I grabbed his beautiful cock and began to stroke his length in time with my thrust.\n\n\"Alex!\" He cried out and started meeting me thrust for thrust. \"So good. So damn good.\" He threw his head back and closed his eyes. It was eroticism and beauty and art all at once. I leaned forward and turned his head to mine. I kissed him hard and wet and deep. \"I'm almost there,\" he murmured into my mouth. \n\n\"Come for me, Andy. I want to feel it.\" His cock swelled in my hand and warmth shot from his tip. His ass clenched and released rhythmically around me. \"Fuck. Fuck. I'm gonna fucking come,\" I snarled. \n\n\"Please, please, please,\" Andy begged. \"Come in me, Alex.\"\n\nHis words sent the fire through my balls. I came so hard I was seeing stars. Filthy promises left my mouth as I pulled Andy's head back for a searing kiss. After I'd ridden out my orgasm, we collapsed in a tangle of limbs. We kissed languidly coming down from our orgasmic high. \n\n\"Gonna go clean up,\" I said and kissed Andy's nose.\n\n\"Are you staying?\" He asked drowsily.\n\n\"Do you want me to?\"\n\n\"Mmm. Very much,\" he smiled sleepily, his eyes closed. I didn't do overnights. Too hard to explain to the bosses, but I still found myself saying, \"Okay.\"\n\n\"What does your tattoo mean?\" Andy asked, fingering the lines on my bicep. He was resting on his arms across my chest. \"Is it a barcode?\" There were twenty two of them. I prayed every day that I wouldn't add any more. \n\n\"It's a tally of sorts,\" I explained shortly. \"Reminds me of my sins.\" Andy crawled up my body and kissed my lips. \n\n\"We won't talk about it,\" he murmured. I sighed. \"I just want to know you, Alex,\" he pulled back and searched my face.\n\n\"No you don't, baby,\" I retorted and palmed his firm ass. \n\n\"Yes. I do,\" he argued. \n\n\"Dammit, Andy. I don't even know me. Okay? I have secrets. And I have to keep them. Can't you understand that?\" I was leading so many different lives it was hard to figure out which one was the real Alex. I wanted it to be the one lying in bed with this gorgeous man. I wanted that so fiercely I could taste it. But, it could be the Alex that earned the lines of my tattoo. It could be the Alex that was in so deep he forgot where his true loyalty lay. It could be some bastard hybrid of sorts. \n\n\"Okay,\" he whispered. \"I won't ask.\" Then he lowered his lips back to mine and drew my tongue into his mouth. My cock swelled and lengthened between us. \"You can't be ready again, baby,\" he commented, slightly amused. \n\n\"Like hell I can't,\" I grinned back. It was unbelievable. Just twenty minutes ago Andy woke me up with his mouth on my cock and proceeded to blow my mind, now I was ready and rearing to go again. \"It's all you, baby,\" I said right before I licked into his mouth. My hands pushed between us and wrapped around his stiff cock. I swallowed his groan and began stroking. His hips pumped into my hands. \"You sore?\" I asked against his neck. He nodded slightly. \n\n\"It's been a while,\" he answered and I felt his smile in my hair. For some reason knowing Andy hadn't had a lover in a while filled me with relief and satisfaction. I sucked the skin of his neck and nipped him. His hips thrusted harder into my palm. \"I want you again, though,\" he moaned. \n\n\"Me too. So, so bad,\" I agreed and nuzzled his cheek. He rolled off of me and grabbed the lube and another condom. \n\nHe turned onto his stomach and lifted his ass. \"Just be gentle,\" he whispered. Fuck he was incredible. I moved around him and rolled the condom on. I greased myself and him and pushed slowly into his delectable heat. \"Mmm. Alex,\" he sighed. \n\n\"Does it hurt?\" I asked tightly. My balls were already drawing up.\n\n\"No. So good. I come so hard with you.\" His words were slightly slurred and dreamy. I realized I was meeting no resistance at all. Andy was totally relaxed.\n\n\"Not falling asleep, are you?\"\n\n\"God, no. Just so damn good. So happy,\" he sighed out again. My heart stuttered. 'I' had made him happy? Me? Pride and bliss surrounded me as I began moving inside of him. His dreamy moans and small masculine whimpers were like electric currents through my blood. \"Alex. Alex. Alex,\" he repeated my name like a arduous mantra. His hand began sluggishly stroking his cock. \n\n\"No. I want to finish you in my mouth,\" I demanded urgently. He inhaled sharply and began thrusting his hips back into my thighs. Faster and harder he was impaling himself on my cock.\n\n\"Let go, Alex. Please,\" he beseeched. My cock twitched and my fiery seed flooded the condom tip. So much so it ran up the sides, like I hadn't been drained twice already. I pulled out quickly, relishing the gasp from Andy. I flipped him quickly and drew his cock into my mouth hard. After three hard sucks he began to fill my mouth with his thick saltiness. \"Oh, ffuucckk,\" he cried out. I swallowed convulsively around his this corona. And savored every drop he gave me. \"Jesus. You're going to kill me,\" he laughed. \"You're going to fuck me to death.\" I stripped the condom off and dropped it in the wastebasket beside the bed. I wasn't even trying to get up to clean up.\n\n\"That's three times tonight you've said that word, Grayson,\" I teased. His eyes widened in shock.\n\n\"You're a bad influence, Bronski,\" he mocked petulance. \n\n\"Mmm,\" I crawled up to his face and peppered him with light kisses. \"It's sexy.\" I lay my head on his chest and wrapped myself around him. \n\n\"Would you like to come to dinner again tomorrow night? Or...well tonight? Since it is tomorrow?\" He asked. I heard the hesitation in his voice. I did. I wanted so badly. But I needed to keep a safe distance as well. Fortunately, I had an excuse. \n\n\"I can't, baby. I've got a business dinner tonight.\" I peeked up and saw the disappointment on his beautiful face. His lips twisted and he nodded. I didn't like it. I didn't like that I'd upset him. I immediately wanted to make it better. \"Tomorrow night? You come to my place? We can even go out for dinner.\" What the fuck was I saying? What the fuck? My place? My place that always had eyes on it? Go out? Out where anyone could see him? Make him vulnerable? What was I thinking? I needed to take it back. Right. The. Fuck. Now. But the heart stopping grin that split his face made that impossible. It was so fucking easy to make this man happy. Just asking him to dinner made me feel like the fucking king of England.\n\n\"Okay,\" he smiled down at me.\n\n\"Okay,\" I agreed. I was such an idiot.\n\nAndy 4\n\nTuesday was one of the best days I'd had in a while. It began when Alex got up at sunrise to go home, but decided to take a shower at my place first with me. I'd never had sex in a shower, but now I highly recommend it. My ass was so sore all day I'm sure I was walking around like an effeminate John Wayne. Tenderly and bow legged. \n\nWork flew by. Partly because I got three rather risqu\u00e9 texts from Alex. \n\n'Still thinking about your sexy ass'\n\n'Having a hard time focusing today. Keep thinking about the sounds you made in the shower this morning.'\n\nAnd my favorite. A d-pic showing me that last night had him as riled up as me. \n\nMostly flashes from the night before assaulted me all day. Not just the sex either. Flashes of Alex's smile and the tender moments just lying together and talking. God, I sounded like a damn woman. One thing I am not is an effeminate gay man. Not that there is anything wrong with men who are, I simply am not one. I never wore my mother's heels or make up. I despise pink. And I am in no way transgender. I learned a long time ago, many people have the prejudice that gay men wish they were women. Totally incorrect. I love my penis. I have no desire to part with him. I simply like other penises as well. \n\nI also am not usually attracted to effeminate men. I like men. I want them to be men. I dated a queeny man once for a few months and his drama drove me crazy. If I wanted female type drama, I'd be with someone who had a vagina. Again, no offense to those men or the men that love them, just not for me.\n\n\"Dr. Grayson?\" Natalie, one of the interns, called to me.\n\n\"Yes?\" \n\n\"A group of us are going to dinner tonight. We wanted to invite you. We know you're new in town and...\" She trailed off. I had been told not to fraternize with my interns or assistants, but I've found that some of our best brainstorming happens outside of the lab in social settings.\n\n\"That would be fantastic,\" I smiled. Her cheeks went pink. Oh for crying out loud. I was used to this. \"Natalie. It 'is' a group dinner, right?\"\n\n\"Yes, Dr. Grayson,\" she said quickly. \n\n\"Good. I'll have to call my boyfriend and let him know.\" That usually nips it in the bud, even if it is a white lie. Her cheeks went pink again.\n\n\"Of course, Dr. Grayson,\" she smiled.\n\n\"Call me Andy, Natalie.\"\n\nWe ended up at a restaurant downtown called The Majestic Grille. It was an old movie theater converted into a restaurant. It had a golden aged Hollywood feel. Big white screens played old movies and high back booths gave the illusion of privacy. I fleetingly thought about being here with Alex. \n\nWe all piled into the booth and ordered drinks. An hour later we were all a tad tipsy. It was nice to be out among the living. Relaxing. Enjoying the company.\n\n\"Dr. Grayson, what exactly is your IQ?\" Matthew, my lab tech, asked.\n\n\"183,\" I answered with an unfocused grin. \n\n\"Holy shit,\" he crowed. \"That's like five points above mine!\"\n\n\"That's because you're an idiot,\" Barb, the pharmaceutical rep quipped.\n\n\"Hey! I was summa cum laude,\" he argued.\n\n\"Yeah? Where? Clown U?\" Natalie ribbed. \n\n\"No! Vandy,\" Matthew said with pride.\n\n\"That's my alma mater,\" I chime in.\n\n\"Yeah, Doc. We know,\" Barb chuckled and pointed to my Vanderbilt t-shirt. I looked down and found that to be extremely funny. My head swum and my bladder complained.\n\n\"I gotta pee,\" I said most unmannerly. The table laughed. I stood and swayed slightly, glancing around for the men's room. I saw the sign and stumbled toward the hallway. When I got to the bar area I froze. Sitting on one of the barstools, with his head inclined at an intimate angle toward a stunning redheaded woman, was Alex. He had his lips close to her ear and a slight smile on his face. She was laughing quietly at whatever he was saying. My chest tightened and lower body tingled. She took a prolonged sip of some sort of cocktail and he lifted to sip out of a whiskey tumbler. She leaned toward him and intimately touched his forearm. My whole body shook with disappointment and pain. I had no claim to him, but it still hurt to see him there. With a woman. A woman he apparently knew well. The truth crashed into me so hard I stumbled backward. 'I' was nothing more than a dirty secret. Something Alex had several of. \n\nI stood frozen for what seemed an eternity, watching their intimacy play out before me. \"Dr. Grayson! Did you get lost?\" Matthew called to me. Alex's head snapped up and his eyes met mine. I saw a split second of heat before they shuttered and his face went blank. He hardly even acknowledged me. \"Doc? You alright?\" Matthew asked, concern lacing his voice.\n\n\"Yeah,\" I rasped out and turned toward the restroom. I went into the first available stall and plopped down on the toilet. I put my head in my hands and closed my eyes tightly. I fought against the images warring in my mind. The ones of Alex's head bobbing between my thighs and that same head whispering into the beautiful woman's ear. \n\n\"Doc? I'm, um, I'm gonna go back out. You sure you're okay?\" Matthew asked through the stall. \n\n\"Yeah, just too much tequila,\" I lied. He knew I was lying. He graciously accepted it though and left me to my stupid misery. \n\nA few minutes passed by and there was a tentative knock on the stall door. I saw a pair of shiny, black oxfords underneath. \"Andy? Let me in,\" Alex said softly. \"We need to talk.\"\n\nI steeled my voice. I didn't want him to know how bad he'd hurt me. \"Nothing to talk about,\" I stated firmly.\n\n\"I will crawl under the door, Andy. Open up,\" Alex demanded. \n\nFor heaven's sake. I unlatched the lock and the door swung open. Alex swooped in and latched it back. He squatted in front of me. He looked gorgeous, which made me angry. He was in a black two piece this evening. It was cut perfectly. It hugged his chest and shoulders like a second skin. The trousers shaped his perfect behind and hung just so on his narrow hips. I seethed that he had to look so damned good. \n\n\"Andy. It's not what you think,\" he said quietly.\n\nI stood abruptly. I was not a damned idiot. I knew intimacy when I saw it. \"Tell it to someone who will fall for it, Alex!\" I gritted out an move to leave to too small confines of the stall. \n\nHis heat crushed to my back. His arms wrapped around me. \"She's a beard, baby. That's all she is.\" His tone was quietly besieging. His arms tightened. His lips brushed my shoulder. \"I swear, baby. She comes with me for business socializing. I don't want her. This,\" he pressed his erection into my backside, \"this is all for you. You're what I want. I'll introduce you to her. Just, please. Please, Andy,\" he begged. My shoulders slumped.\n\n\"This is why I can't do this, Alex,\" I said softly. \"I can't be your secret.\"\n\n\"You're not. Don't you see? She's the secret, baby. She's the lie,\" he pleaded with me. \n\n\"But 'she's' here with you and 'I'm' hiding out in a bathroom stall,\" I argued, exhausted already. \"She may be a secret, but so am I. Where do the secrets and lies end, Alex? Hmm? Tell me, and we'll move forward.\" \n\nHe forehead pressed into my shoulder. \"Please. God, please don't make me do this,\" his voice was quiet but thick. I could feel the pain in it. My heart cracked. I didn't understand why he needed to appear as someone different, but I could tell it was killing him. I knew he was telling me the truth. I turned in his arms and cupped his cheeks. I crushed my lips to his and bullied my tongue inside. He met my fervor head on. \n\nHis hands went to my belt an deftly undid the buckle. Before I could object my fly was open an his hand was grabbing for my semi erect dick. It quickly swelled to fully hard under his skillful hand. He stroked me roughly. The delicious friction was almost to the point of pain, but instead was just sublime pleasure. \"This cock, baby. This cock is all I've thought of all day,\" he growled. I groaned and dropped my head against his shoulder. \"I'm all yours, Andy. I've never wanted anyone as bad as I want you. I can't focus. I can't think. Not about anything but you.\" My balls tightened and swelled at the same time. \"I want it in my mouth, baby. I want to taste all the cum you have for me,\" he hissed. My body shuttered. I lifted my head and blindly searched for his mouth. \"Tell me your mine, Andy?\" \n\n\"Yes,\" I moaned. \"Yes, please.\" I was close to sobbing. He squatted and sucked my dick to the back of his throat. A loud rumbling cry started in my chest and flew from my mouth. My dick pulsed painfully as I came. Hard. My knees buckled, but Alex held me up. He licked me clean and stood. He kissed me with a devastating tenderness and ran his knuckles down my cheek. \n\n\"Please, be patient,\" he asked in a heartbreaking plea. I could see the torment on his face. \"Please.\"\n\n\"Okay,\" I responded. How could I not? I wanted him. That badly. \n\n\"Alexei?\" A feminine voice called. I stiffened. Alex grinned. \n\n\"Hold on, Dee,\" he called back. He tucked me back in and zipped me up. He unlatched the door and took my hand. And so it was like this that I came face to face with the beautiful redhead. \n\nShe pursed her lips in amusement. My face and neck heated. \"Alex? Are you going to introduce me.\"\n\n\"Dee, this is my friend, Andrew Grayson. Andy, my beard, Dee,\" Alex said with a sly smile. \n\n\"That word sucks,\" she stated. \"Nice to meet you, Andy.\" She grinned and winked at me. I looked away and blushed. \"Damn, that blush is adorable.\"",
        "\"Right,\" Alex snapped. \"We should get back.\" His tone was clipped. Dee let out a husky laugh.\n\n\"Calm down, boy. I'll keep my hands off,\" she teased. I glanced her way. Amusement lit up her green eyes. \"It was nice to meet you, Andrew. I'll step out and let you boys have a minute.\"\n\n\"Damn flirt,\" Alex grumbled. He turned to me and smiled. \"Better?\" He asked. The look of hope on his perfect face was adorable. \n\n\"A little,\" I smiled. He kissed me quickly and walked to the door.\n\n\"I'll call you later, tonight,\" he promised and walked into the hallway before I could respond. \n\nI splashed cold water on my face and made my way back to my table. My head a jumbled mess. One thing I was absolutely sure of, though. Alex Bronski was under my skin. And I liked it. A lot.\n\nAlex 5\n\n\"So? Are we gonna just ignore the elephant?\" Dee asked from the passenger seat. I knew it was coming. By the time I'd made it out of the bathroom, O'Brian and his nephew were already waiting. It was a very profitable night for Kazakov. O'Brian agreed to a case of AKs a week for the next five months. The Black Magik MC's president was also in attendance. They agreed to mule the guns and the coke for a ten percent cut. That only put us out fifty grand a week. The Southern Knights wanted twenty percent and were less organized. Bangers had too many hands in the pot. Too many mouths to feed. Plus they had too many junkies in their ranks to trust with the muling. So, overall, good meeting.\n\n\"So?\" Dee asked again.\n\nI sighed. \"What is there to address, Dee?\" I snapped.\n\n\"Does he know anything about what you do?\" She asked.\n\n\"What? Fuck no!\" Why would she even think I'd put Andy in danger like that? \n\n\"Hey! I'm just asking, Alex!\" She defended. \"Do you really think this is fair to him?\"\n\n\"No, I don't,\" I clipped. \"But this is my life. It's either keep him in the dark about it or make him vulnerable. And the latter is not an option.\"\n\n\"Do you care about him?\"\n\nI sighed again. Did I? Hell, yes. One night with Andy and I was hooked. When I saw the pain on his face in the bar, I couldn't get to him fast enough. I was ready to drop to my knees and beg his forgiveness. \"Yes. I do.\"\n\nDee pursed her lips. \"Just be careful, Alex. Not only for him. But for you, too. Don't throw five years away, when we're so close to the end.\" I knew that. Dee was just as deep as I was. If I showed weakness now, we'd all end up dead or worse. \n\n\"I know, Dee. I'm careful. You know that.\"\n\n\"You weren't very careful tonight, Alexei. Anyone who walked into that bathroom would've known what was going on,\" she informed me. She was right. That was stupid. I put us all at risk, but I needed Andy to know that I wanted 'him'. He was my reality. Everything else was a lie. \n\n\"Thanks. By the way,\" I said softly. \n\n\"Alex,\" Dee exhaled. \"You're my best friend. Which is not saying much. Still, I want you to be happy. I wish I could go back to that starry eyed kid in the briefing room and talk you out of this life, but I can't. We made our choices. If he makes you happy, though, if he makes the pain and confusion go away, even for a second. You deserve him, Alex.\"\n\n\"He does. There were no nightmares last night,\" I whispered.\n\n\"Alex,\" Dee said thickly. \"Be good to him then. Keep him safe. And when this is over...beg his forgiveness.\" I inhaled deeply. How could he ever see me as anything but a monster?\n\n\"Hello,\" Andy's deep voice slurred. \"Hey!\" He called offline. \"Shhh. You people are so loud.\"\n\n\"Am I interrupting,\" I smiled to myself. Andy was drunk. And it was quite amusing.\n\n\"Who is this?\" A female voice trilled drunkenly. \n\n\"Hey give that back!\" I heard Andy shout.\n\n\"Is this Dr. Grayson's smexy boyfriend?\" The girl teased. I envied Andy's openness about himself. It seemed everyone knew.\n\n\"Possibly,\" I chuckled. \"Can you put him back on the phone?\"\n\n\"Possibly,\" she mimicked.\n\n\"Give me that, you drunken fool,\" Andy laughed. \"Hello. Sorry about that. She's a quick little she-devil.\"\n\n\"Boyfriend, huh?\" I teased. \n\n\"Oh, um. I didn't actually call 'you' my boyfriend. I just said I had one so she wouldn't flirt with me,\" he clarified quickly. \n\n\"So what? You have other boyfriends?\" This was too fun to let go. \n\n\"Um, no. I don't have any.\"\n\n\"You told her you did,\" I mocked offense.\n\n\"Just so she'd know,\" he sounded slightly panicked. \"I wasn't calling you my boyfriend and I don't have one. I lied.\"\n\n\"Andy! You naughty man. Lying like that.\"\n\n\"You're kidding, right?\" He asked adorably uncertain.\n\n\"You just said you don't have a boyfriend. What am I? A booty call?\" I shouldn't have been taking so much pleasure in teasing him.\n\n\"No. No. God, no. You're...you're wonderful,\" he finished quietly.\n\n\"So I'm your boyfriend then and you didn't lie.\" I softened my own teasing.\n\n\"You are?\" His voice was so awestruck. It hit my chest with a deep throb.\n\n\"Yeah, baby. Where are you?\"\n\nThe lightness reentered his voice. \"Ya know, I have no idea. Hey! Where the hell are we?\"\n\n\"Coyote Ugly,\" a male voice answered. Jealousy green and hot swept through me. He was out, drunk, with another man.\n\n\"Coyote Ugly. There are girls dancing on the bar. They made me do a body shot. It was weird. Then the girl held my beer bottle between her legs and made me drink it. Barb said no doubt I was gay, because I guzzled it like a champ.\" I couldn't help the laugh that bubbled up. He sounded so young. So lighthearted. I could see his sexy face twisting with mirth as he described the body shot. I could see it lighting with pride when he talked about guzzling beer like a champ. My heart pounded a tattoo in my chest at the images. \n\n\"I bet you did, baby. I'll let you get back to your fun. I'll see you tomorrow night?\"\n\n\"Yeah. Maybe I could guzzle from between your thighs?\" My cock twitched. \n\n\"Dr. Grayson!\" A female voice trilled. \"You naughty boy.\" I laughed again. I wanted to spend time with this carefree Andy. A lot of time. Like forever sounded good. \n\n\"What? He's hot. Ask Matt,\" he told the girl.\n\n\"You are being very naughty,\" I agreed. \"Be careful, baby. See you tomorrow, when you can guzzle any fucking thing you want.\"\n\n\"Alexei? Are you listening to me?\" Oleg asked in Russian.\n\n\"Yeah. Sorry. Been a long day,\" I answered in English. I was so unfocused. After the emotional run in with Andy and the heart to heart with Dee I was emotionally and intellectually drained. \n\n\"Perhaps I have put too much strain on you, malchik,\" Oleg said in his thick accent.\n\n\"No, bratik. It's not too much. I just...have personal things on my mind,\" I responded with a tight smile. I turned back to gazing out of the picture window. \n\n\"Sasha, I do not vish to pry...but is everything going well with Dmitrya?\" \n\n\"Yes, bratishka. We're fine.\" \n\n\"Have you set a date?\" He asked hopefully. A smile played on my lips. \n\n\"Not yet, dya-dya. Soon. We want everything to be settled with the Irish first,\" I explained.\n\n\"Vell, Sasha, do not vait forever. You need to start having babies,\" he smiled fondly. \n\n\"I'll leave that to Dee, dya-dya,\" I laughed. \n\n\"You did vell, yesterday, malchik. The Irish are set up vis the AKs and the cocaine. Maybe you should take a few days off. Spend it vis your voman. See your family, Sasha. I know your mother misses you,\" Oleg spoke softly. My mother didn't miss me. She missed the attention I brought her. Without me, the family had turned their backs on her. I couldn't forgive her for what she did to Anya. She was just a child. \n\n\"No, bratik. I won't,\" I hissed.\n\n\"Forgive her,\" Oleg switched to Russian. \n\n\"No. That's final. I don't need time off,\" I snapped. Oleg sighed heavily. Maybe I could take a couple of days. I could try to talk Andy into a short vacation somewhere we could be together openly? The idea made me smile.\n\n\"Ah, a secret smile, Sasha? Perhaps you and Dmitrya can use the time away, yes?\" I tried to scowl, but a grin split my lips instead. \"Go home, malchik. Make love to your fianc\u00e9e. Take her away for a few days. Come back Monday ready for work, yes?\"\n\n\"Okay, bratishka,\" I agreed.\n\nMy doorbell rang at half past seven and my heart thudded. \n\n\"I got it!\" Dee called. \"Andy! So good to see you again! Come in, come in. I'm just heading out.\"\n\n\"Oh? Do you, um, live here?\" Andy asked tentatively. I probably should have explained this situation to him. \n\n\"Yeah. I'm Alex's roommate, honey. He didn't tell you?\" I imagine Andy shook his head. \"Ooh that man,\" Dee growled. \"Don't worry, sweetheart. It's for appearances only. I lack the necessary equipment to make him drool.\" Must she be so crude? I decided my pasta would be okay for a few minutes while I greeted my man. My man. I really liked the sound of that. I walked into the living room and my cock jerked. Holy fucking shit, he was hot. He had on a plain white t-shirt and scrub bottoms. He must have come straight from work. \n\nWithout a second glance at Dee, I walked straight to Andy and pulled him in for a deep kiss. \"God'damn' that's hot,\" Dee stated. I pulled back and grinned at Andy. \n\n\"Shut-up, hobag. Weren't you leaving?\" I turned to Dee.\n\n\"You're so not fun, mudak!\" She spouted. \n\n\"Suka!\" I called after her retreating form. \n\n\"Um, what?\" Andy said with a sexy crease in his forehead. \n\n\"Mudak is asshole. Suka is bitch,\" I told him. \n\n\"In Russian?\"\n\n\"Da v Rossii,\" I said.\n\n\"That's really sexy,\" he murmured and grabbed my hips. \"Say something else.\"\n\n\"Vy ochen' seksual'ny.\"\n\n\"What does that mean?\" His voice was rough and gravelly. \n\n\"It means you're very sexy,\" I smirked. \n\n\"Oh,\" he flushed. I pulled him down for another heated kiss. \n\n\"Don't mind me! I'm just leaving!\" Dee hollered. I pulled back and rolled my eyes. \n\n\"Goodbye, dorogoy. Be careful,\" I told her and kissed her cheek. \n\n\"Have fun,\" she said in a sing song voice. \"See you Monday.\"\n\n\"Monday?\" Andy asked.\n\n\"Let's eat,\" I smiled. I didn't want to ask him just yet. I served us both the pasta and some bread and lead him to the living room. \"Sorry. The dining room is a mess. The table is a sort of catch all.\"\n\n\"It's okay,\" he smiled. \"Where'd you learn Russian?\" \n\n\"My family speaks it. We weren't allowed to converse in English at home. Anya speaks it too, but she doesn't use it daily like I do. So Mr. Genius are you bilingual?\"\n\nHe chuckled. \"Does Latin count?\"\n\n\"Maybe. Say something.\"\n\n\"Ego amare te,\" he said fluently. The words flowed beautifully. Not the guttural sounds of Russian. \n\n\"What does that mean?\" \n\n\"It means mind your own business,\" he chuckled. \n\n\"You're not going to tell me?\" I pouted. Yep. Like a little girl.\n\n\"Oh, baby. You're so cute when you pout,\" he teased. \"This pasta's really good.\" He continued eating. I gaped at him. \n\n\"Seriously? You're really not translating?\"\n\n\"Nope.\"\n\n\"Asshole,\" I muttered. I took a petulant bite of food. Andy blasted a laugh. I pouted more. He laughed harder. As much as I hated that he wasn't going to tell me what he said, Andy's laugh was like a punch to the gut. It was the same care free laugh he had on the phone last night. Speaking of which...\n\n\"You know, I don't need any more reasons to spank your ass,\" I said lowly. His laughter stopped abruptly.\n\n\"What?\" He swallowed hard. I watched a tent form in his scrubs. My man liked it a little rough? I was definitely down with that.\n\n\"Body shots? Lying about me being your boyfriend? Ringing any bells?\" I put my bowl down. Andy tensed.\n\n\"Oh. Yeah. But you said...you said you were,\" he stumbled.\n\n\"Mmhmmm,\" I replied leaning toward him. \"I did. But you lied. And you licked salt off of some girl at a bar. You were very bad, Andy. Any other stories you need to tell me?\"\n\nHe swallowed again and shook his head. And then I saw it, a flash of real fear. \"Hey,\" I changed to a soothing tone. \"I'm just teasing you, Andy.\" He gave a jerky nod. \"Baby? What's wrong?\"\n\n\"Nothing,\" he said urgently. \"I'm not that hungry. Let's go to bed.\" He was trying to redirect. I knew. I was the king of it. \n\n\"Tell me what's wrong,\" I tried to ask, but it was a demand.\n\n\"Nothing's wrong, Alex!\" He said exasperated and angry. \n\n\"Okay. Why did you get scared a minute ago, then?\"\n\n\"I wasn't scared,\" he retorted sharply.\n\nI scoffed. \"Baby. I make a living reading emotions. Fear is the most profitable one. I saw the fear in your eyes. I wanna know what caused it so I don't do it again.\"\n\n\"You're not the only one that gets to keep his secrets, Alex!\" He roared. \n\n\"Okay. Fair enough,\" I hissed.\n\n\"I should go,\" he mumbled. What? Hell, no. No. No. No. This is not how this shit was going down. One minute he was laughing, the next he's ready to walk? No. He stood and I followed.\n\n\"No!\" I shouted. He cowered. I knew instantly. Someone had abused him. Badly. Anya did the same thing when yelled at. What the hell? I took a calming breath. \"God, baby, what did they do to you?\"\n\nHe took a shuddering breath. It was surreal to see this Goliath of a man cowering in fear. My throat burned and rage pumped through me. \"Andy. I would 'never' hurt you,\" I whispered. I reached out and touched his shoulder. His visibly flinched. \"Jesus. Who hurt you, baby?\"\n\n\"No one. It's not important. I just wanna go home, now,\" he said almost childlike and brokenly.\n\n\"Please don't leave like this,\" I pleaded. He turned and I saw the redness and glassiness of his eyes. He inhaled haltingly. \n\n\"Go ahead. Say it,\" he hissed. \n\n\"Say what?\"\n\n\"Call me less of a man. Go ahead,\" his voice raised. \n\nMy eyes scanned his face. I was appalled. Whoever hurt him had better pray I never come across them. Mine would be the last face they ever saw. \"Andy, I...\" Words wouldn't form. How could he think that? \"Stay. Please?\" He looked down. \"I need you here. You're not less of a man. You're all the man I want. More than I could hope for. Don't leave, baby.\" He straightened to his full, towering height. He bit his lip tentatively and nodded once. \n\nI thrusted one hand at the back of his skull and one at his waist and pulled him to me. After a moment he wrapped his arms around me and hid his face in my neck. My poor broken man. \n\nAndy 5\n\n\"Let's go away for a few days together,\" Alex said out of the blue. We were tangle in his bed. My body was on top o his, with my arms wrapped under him. My cheek rested on his firm chest while he absently ran his fingers through my hair. After my emotional breakdown earlier, it was nice. Peaceful. After he'd taken me with a beautiful tenderness. Murmuring the whole time about how wonderful I was and how he would never hurt me. After I'd collapsed in sheer exhaustion. Alex had so lovingly cleaned me up and held me. \n\n\"What do you think?\"\n\n\"I have to work, baby,\" I replied quietly. It sounded great. Be alone with Alex for a few days. Go out in the open. Stay in bed a whole morning. Touching and talking. \n\nAlex sighed. \"I figured as much. And I know you just started, so you can't take off.\" I could actually. I was the boss. My team could collect my data. I could do it. What was I thinking? Parlezine was in the final clinical trial stages. I couldn't just run off like some lovesick puppy. \"I have to go, though.\" Alex broke into my thoughts. I lifted my head. He lowered his chin to his chest and gazed at me. \"They think I'm going out of town with Dee. I can't be in the city.\"\n\n\"That's what she meant by Monday?\" I asked. He bit his cheek and nodded. \"You did this for me, didn't you?\" He looked away, but nodded again. I crawled over him and stared into his eyes. \"Then lets do it. Take me away, carte blanche.\" I smiled down at his exquisite face. He grinned back.\n\n\"Yeah?\"\n\n\"Yes. But first...\" I lowered myself under the sheet and took his semi-erect dick in hand. I licked the underside and felt it harden even more. I took his velvety head in my mouth and swirled my tongue around it. \n\n\"Shit,\" Alex snarled. The sheets were ripped back and I looked up and smiled at Alex. His hands went to my hair and pulled slightly. The small jolt of pain made me moan. Alex pumped his hips lightly. I understood what he wanted and relaxed my throat. I loosened my lips to let him know I wanted it too. He let loose. Fucking up into my mouth hard. I swallowed the thick head every time it hit the back of my throat. I sucked on the shaft as he pumped into me. \n\n\"Fuck, baby. Yes. Just like that. You're fucking mouth. So fucking good,\" he praised and guided with his dirty words. Normally I would be a bit turned off by words like those, but when Alex said them...God, yes. I heard him grunting a staccato rhythm. I knew he was close. I raised his legs and pressed my index finger into his anus at the same time I sucked him back hard. I felt his swollen prostate and it hit me. Alex hadn't been taken anally, at least not in a long time. I pressed down on the swollen gland and his seed spurted hotly into my mouth. There was so much I choked. I couldn't swallow it all, so it ran out of the sides of my mouth. Alex's dick began to soften and his breathing slowed. I eased my finger out and released him from my mouth. He convulsed lightly. \n\n\"What the fuck?\" He panted. He scrubbed his hands over his face. \"Good, God, man. You're trying to fucking kill me,\" he said, still breathing hard. He peeked at me. \"Oh shit, that's fucking so hot.\" I smiled at him. I knew he meant seeing his essence around my mouth.\n\n\"Be that as it may, I need to go clean up,\" I grinned. I went and washed my face and crawled back in bed with Alex. He wrapped me up and kissed my hair. \"Have you ever been topped?\" I asked.\n\nHe snorted. \"Not since college.\"\n\n\"Would you let me sometime?\" \n\nHe stiffened. \"You'd want that?\" He asked.\n\n\"Well, yeah. If you would.\"\n\n\"Yes. I'd let you,\" he answered. I smiled against his pectoral. \"Look at you all smiling about fucking my ass,\" he laughed. \n\n\"It's a nice ass. I can't help but to smile about it,\" I teased back. \"So? Where are we going tomorrow?\"\n\n\"I don't know. I hadn't thought much about it. Where do you want to go?\" I shrugged. \"We could fly to Vegas. Or LA.\" I laughed in pure shock. \"What?\" Alex looked down at me. \n\n\"I thought you meant like a drive to Nashville.\"\n\n\"We could do that,\" he answered nonchalantly. \n\n\"Nah. I'm from there. Oh! How about New Orleans?\" \n\n\"Yeah?\"\n\n\"It's my favorite place,\" I said with uncensored excitement. Alex laughed and squeezed me tight. \n\n\"Okay, baby. If it's New Orleans you want, it's New Orleans you'll get.\" I raise my face and kissed him. \n\n\"Thank you. Just in case I forget to tell you later.\"\n\nAlex snorted. \"You're welcome, Julia.\"\n\n\"What?\"\n\n\"Julia Roberts in 'Pretty Woman'? She says something similar,\" he explained. I stared in disbelief. 'Pretty Woman'? The man was quoting one of the ultimate chick flicks to me. A laugh bubbled up. Followed by another. Soon the whole bed was shaking. \"What?\" He asked defensively.\n\n\"Alex, even I'm not that gay, baby,\" I said breathless from my hysterics.\n\n\"Hey that's a great movie!\" His voice got high pitched. \"Whatever. You just don't know good cinema.\"\n\n\"I'm sorry. But really? Come on, baby. Even you have to admit you just put yourself into a stereotypical gay man column. 'Uh, hi I'm Alex and I like Cher, 'Pretty Woman' and double sided dildos.'\"\n\n\"I do like Cher,\" he said proudly. I laughed harder. \"Fine, Mr. I'm-not-that-gay, what's your favorite movie?\" He said mightily.\n\n\"Oh my God. It's your favorite?\"\n\n\"No,\" he laughed. \"I'm not telling you my favorite. You'll make fun of me.\" He pouted adorably again. \n\n\"Come on, baby. I'll tell you mine,\" I bargained.\n\nHe exhaled noisily. \"'The Fox and the Hound',\" he mumbled.\n\n\"What?\"\n\n\"The. Fox. And. The. Hound,\" he said loudly. I twisted my lips to contain my laugh. I was shocked. Big bad Alex's favorite movie was a cartoon? \"We used to watch it when we went to my Grand's house. It was the only time Anya and I were allowed to be kids.\" He shrugged. My heart twisted. ",
        "\"What was it like the rest of the time?\"\n\n\"For me? It was okay. For Anya?\" His hands fisted and he shook his head. \"We're talking about you. What's your favorite movie?\"\n\nI decided to let it go. I didn't want him to go to a dark place, and I could tell that's where talking about his sister's childhood would lead. I kissed his chin and snuggled back into his chest. \"I'm a typical nerd. My favorite movie is 'The Wrath of Khan',\" I answered. \n\n\"What's that?\" He asked, perplexed.\n\n\"Oh no. Blaspheme! You don't know Star Trek? James T. Kirk, Spock? Bones McCoy?\"\n\n\"I know George Takei was in it,\" he shrugged. \"And the Priceline guy.\"\n\n\"William Shatner,\" I corrected.\n\n\"Sure. Him, too,\" he smiled.\n\n\"Baby, I don't know if I can be with someone that doesn't know Star Trek.\"\n\n\"I know Star Wars,\" he offered. \n\n\"Totally different. Star Wars takes place a long, long time ago. In a galaxy far, far away. The original Star Trek series takes place sometime around 2265 about the Earth's star fleet.\"\n\n\"Andy, calm down,\" Alex said humorously. \"You sound like my sister. She actually went to a Star Trek convention or some shit. She made Jack go. He bitched about it for months.\"\n\n\"Well, I'll just tell her next time I'll go with her. 'I' won't bitch about it,\" I said haughtily. \n\n\"Seriously. You and Anya have a lot in common. She's super smart, nerdy chic. She actually has a batman tattoo. She loves comics and space and reading about...hell everything,\" he chuckled wistfully.\n\n\"You really love your sister, huh?\" I asked, though it was more an observation. \n\n\"Of course. She's one of the bravest people I know. My dad,\" he clamped his eyes shut and gritted his teeth, \"that sick, fuck, beat the shit out of her. Almost daily. She'd take it though. I didn't know at the time, but if I broke something or messed something up...she took the blame. To protect me.\" His eyes filled and his voice cracked. \"Then she met a guy that almost killed her. He whipped her, raped her. He came back for her a few years ago. He got her. She was broken, bleeding, when we found her. But, my big sister wasn't going down without a fight. She snapped the fucker's neck before she passed out.\"\n\nI blinked at him in stunned silence. Not only because of what his sister had endured, but that was the most information Alex had ever shared. \"Anya. She's fucking incredible. I always idolized her as a kid. Now? No one's worthy to kiss the ground she walks on.\"\n\n\"It does take a strong person to overcome abuse like that,\" I whispered. I wished I was that strong. I would never have that kind of respect from Alex. \n\n\"Baby. My sister is scarred inside and out. I don't respect that she killed a man. I respect that she gets up every day and does the best she can,\" he explained. Tears stung my eyes. An understanding passed through Alex and I. He was telling me that whatever had happened he respected me, too. \n\n\"Where do you want to go first, baby?\" Alex asked me from the bathroom. We'd arrived in New Orleans earlier that afternoon. Somehow, Alex had a connection in the city, and we were staying in a house right in the French Quarter. After a lusty bout of vacation sex, we napped off our driving exhaustion. Then Alex sucked me off in the shower. Which lead us to this moment.\n\n\"I don't care, baby. Where do you want to go?\"\n\n\"I'm starving. Let's go to Court of Two Sisters for dinner,\" he suggested. If I ever wondered before if Alex made good money, this trip was laying it to rest. \n\n\"Um, if you want,\" I answered.\n\n\"Where would you rather go?\" He asked walking into the room with a towel slung low on his hips. He stopped and kissed me lightly on the lips. Alex was much more affectionate than I'd imagined. He was always caressing or kissing me. Not that I was complaining. Not at all. \n\n\"I don't know. We can go there. I've never been,\" I said sheepishly.\n\n\"They have delicious turtle soup and their duck l'orange? To die for.\" Ew. My reaction must have shown on my face. Alex smiled and shook his head. \"Okay. No turtle soup. What does Andy want to eat?\"\n\n\"How about The Something Else Cafe? They have a great gator sausage po' boy and truffle fries. Its also close to Jackson Square. We could go on one of the ghost tours?\" I loved New Orleans, truly. And being in my favorite city with Alex was perfect. I was so glad I came with him. \n\n\"Okay. Sounds good. As long as you're adorably drunk by the end of the night, I don't much give a shit,\" he smirked. \"Although tonight, baby, any body shots will be done off of me.\" My face heated and my dick stirred. \"You know, for such a virile, sexy man, you are fucking cute as hell. The way you get all red when I talk about fucking you.\" My ears started burning. Alex's smile grew. He leaned close and nipped my earlobe. \"So fucking cute,\" he murmured lowly. \"Come on, baby. Let's take you out on the town.\"\n\nWe walked to the cafe, Alex held my hand the whole way. The simple gesture caused a joyful ache deep in my chest. While we ate he fed me bites of his food and kissed me lightly. I was falling hard. \n\nBy the time we finished eating we decided to forgo any of the tours and go straight to the Cat's Meow. It was karaoke bar. Alex said everybody went to one at home on Thursdays and I should join them next time. I did not sing. Ever. At least to anything except the shower head and my steering wheel. I told as much to Alex. He just wave it off and said he didn't either. It was just fun to watch. \n\nAlex sat on the stool at a pub table and pulled my back against him. He settled me between his legs and ordered us both beer. He kept one arm around my waist and pulled out a pack of cigarettes with his free hand. I frowned.\n\nI leaned in to his ear. \"I didn't know you smoke?\"\n\nHe leaned close to me. \"Only when I drink. I used to smoke a pack and a half a day, so I've cut down.\" I frowned again, but nodded. Working in a cancer treatment facility, I despised smoking. But if he had cut down that much I wasn't going to nag. That was an improvement. Our beer came and we settled in to enjoy the music. By my fifth beer I was bobbing around and singing along. Alex just watched me with amusement. The way he looked at me made my heart pound and my gut clench. It was so much more than the lust I initially saw in his eyes. Call me a fool of the biggest magnitude, but I know I saw love there. And it terrified me. And it invigorated me. I hadn't laughed as much in my whole life as I had with him over the last few days. I'd never felt so instantly connected to anyone, except my daughter and that was because I'd helped create her. Alex had imprinted himself in my soul and I never wanted that to go away. \n\n\"I gotta pee!\" I yelled from where I was dancing around with a bachelorette group. Alcohol makes me much more sociable. Alex just grinned and nodded at me. I started to the restroom and accidentally bumped into a mountain of a man. He was at least as tall as my six foot three and outweighed me by a good eighty pounds. \n\n\"Excuse me,\" I smiled.\n\n\"Watch it, faggot!\" He snarled. My face paled. I'd heard it before, but it still cut deep. \n\n\"Pardon,\" I said again and tried to go around him. He stepped in front of me. \"Excuse me, please,\" I said again. His friend pushed me from behind and straight into the mammoth.\n\n\"What's wrong, faggot? Need the ladies' room?\" He jeered. My fists clenched.\n\n\"Move,\" I hissed. \n\n\"Ooh. The little fudgepacker's getting upset. Are you gonna cry?\" His friend chimed in. \n\n\"Is there a problem here?\" Alex said from behind me. He wrapped around me and I sagged into his arms with relief. \n\n\"Yeah. You're the problem, fuckin' fairy. You're fuckin' disgusting,\" the big guy said. He pushed us both backward. Alex let out a low growl. I'm sure I'm the only one that heard it. \n\n\"I suggest you fucking move. Now,\" he said in an icy voice. A chill ran up my spine. Alex's tone was deadly. Calm and controlled. The sound of a man that would kill without a second thought. The mammoth laughed. \"You have three options,\" Alex informed in that same icy tone. His arms were locked around me like steel bands. \"One, you leave this bar. Now. Two, I will remove you myself. Three, they will carry you out of here in a bag. The choice is yours.\"\n\n\"You and what army...faggot?\" The man sneered. Everything that happened next was a blur. One minute I was in Alex's arms, the next he had his thumb and forefinger in the hollow of Goliath's throat. The man dropped to his knees, painful sounding gargling coming from his mouth. His friend moved to attack Alex's back, but Alex kicked out and turned into him. His foot planting in the friend's chest. It looked as though the kick had no force, but the guy flew back into the crowd. Alex released the big guy and curled his fingers, keeping his palm open. He drew back slightly and shove his knuckles into the man's throat. The man fell back, choking and holding his neck. Security rushed Alex. He threw his hands up and went to his knees submissively. \n\nFinally my brain switched back on and I ran to the men in black shirts. \"Stop! Stop! They attacked us,\" I hollered and tried to pull them off of Alex. \"No! He was defending himself!\"\n\n\"He's telling the truth,\" a girl agreed. I looked at her with gratitude. \"Those men were being assholes. They started pushing them.\" The security guy said something to Alex to which he nodded.\n\n\"Thank you, honey,\" he called to the girl. She smiled at him and waved. He grabbed my hand and rushed me out of the bar.\n\nWhen we made it about a block away, he stopped and turned to me. \"Are you okay, baby? Did they hurt you?\" He ran his hands over my body like he was searching for and injury. I shook my head still in shock. I knew Alex was intimidating. I knew he was involved in some serious stuff, but what I saw in the bar had been a trained killer. He didn't, though. I kept reminding myself. He could have but he didn't. I blinked at him as though I was seeing him for the first time. \n\n\"You sure you're okay, baby?\" He furrowed his brow. \n\n\"Where did you learn that?\" I asked almost robotically.\n\n\"Self defense classes,\" he answered absently, still checking me for hurts. \"Let's go back to the house.\" He grabbed my hand and lead me away.\n\nWhen we got to to the house Alex stripped me and did another search of my body. My shock had finally worn off. \"Alex! I'm fine, dammit!\" \n\n\"I'm sorry,\" he ducked his head sheepishly.\n\n\"I'm not made of fucking glass, ya know. I could have handled that!\" I didn't know why I was suddenly so upset, but I was. I was furious. \n\n\"I know that, but they were pushing you around. I'm not going to let anyone put there hands on you, Andy! You're fucking mine!\" He yelled.\n\n\"You could've been arrested, Alex. You could've been hurt! Did you think about that?\"\n\n\"I wasn't going to get hurt,\" he scoffed. \n\n\"Oh, right. Alex the Invincible, right? What if they'd had weapons? Huh? What if they'd have stabbed you? What if they'd have shot you?\"\n\n\"Baby, they weren't going to hurt me. And I made sure they were the aggressors. I may not be a fucking genius, Andy, but I'm not an idiot. I know more about this shit than you! I had it under control,\" he snapped. That made my fury boil over.\n\n\"What the hell does my intelligence have to do with this?\" I hissed. I hated when people used it as a weapon against me. \n\n\"Jesus Christ! I can't fucking win with you! You want me to be open about things so I change as much as I can for you. I let you into parts of my life, no one else has seen. You want affection so I show it. More than I ever have for anyone else! You get jealous. So I put a dear friend in jeopardy to ease your fucking mind. But it's still not enough. I take you away, where I can be with you. Just you. Without all of the other bullshit in my life. What else do you want, Andy? What? I told you I had it handled. But that's fucking not enough either! Maybe I'm not enough for you!\" He turned abruptly and walked out the door. I wanted to go after him, but he'd taken off my clothes. \n\nI quickly put on my jeans, shirt and shoes and hurried out of the door. I looked up and down the block, but Alex was gone. I went back in and plopped onto the couch, wondering how a day that had started so perfect ended so badly. I wondered if Alex would forgive me. My stomach churned at the thought that he might be done with me. My mind raced for hours. When the clock said four a.m. I dragged myself to the bed and fell into a fitful sleep.\n\nI woke up to warm wetness on my ear. The smell of whiskey and cigarettes assaulted my nostrils. There was a familiar scent there too. Alex. I turned my face to his and met his lips. \"So sorry,\" I murmured.\n\n\"Shhh,\" he said against me. His mouth played against mine with desperation. The sun was just peeking through the window. \"Need you, baby,\" he said, pulling away. He pulled his shirt off and tugged his pants off. I followed suit. He grabbed the lube bottle from the nightstand and squeezed some into his palm. I rolled over for him. \"No. Need to see your face,\" he said roughly. \n\nI laid on my back and bent my knees. I pulled my legs wide and opened myself to Alex. He worked the lube in and used his fingers to open me up. When he was satisfied he thrusted in hard and fast. I groaned at the acute pain followed by intense pleasure.\n\n\"God. Fuck me, Alex. Please,\" I begged and squirmed under him. He pulled my legs over his shoulders and began pumping his hips hard and furiously. His hazel eyes held my blue ones the whole time.\n\n\"Your mine, Andy,\" he growled. I nodded urgently. \"Nobody fucks with what's mine.\" I nodded again. \"Fuck,\" he snarled and began fucking me with an animal like abandon. My legs throbbed, my ass burned deliciously and my dick was spurting pre-cum onto my stomach like crazy. \"Love this ass. Love your fucking cock,\" he ground out. \"Love fucking you.\" I grabbed my dick and began jerking off with brutal strokes. \"God, you're fucking sexy,\" Alex said tightly. \"Jesus. I'm about to come, baby. Fuck come with me. I want to feel your ass clench my cock.\" Pleasure wracked my body. My cock swelled painfully. My sac felt overly sensitive and heavy. Spots danced in front of my eyes. The first hot spurt hit my neck. The subsequent shots covered my chest and abs. Alex let out a feral cry and stilled. I felt his warmth flooding me inside. Alex eased out and collapsed on top of me. \n\n\"I didn't use a condom,\" he said weakly. \"I'm clean, though. I promise.\"\n\n\"I trust you, baby.\" He lifted up and kissed all over my face. \n\n\"I'm...so...fucking...sorry,\" he said between his light kissing. \"I never want to hurt you.\"\n\n\"I know, baby,\" I assured him. \n\n\"I don't regret any of it. I'm sorry I said that shit.\"\n\n\"It's okay, baby. I'm sorry, too. You scared me last night,\" I told him honestly. \"I'd never seen that side of you and it threw me off. I'm sorry. You're sorry. I assume we're both forgiven,\" I said cupping his cheeks. He nodded. \"Good. I'm exhausted. Let's sleep, baby.\" He grinned at me and kissed me softly before bringing me to my spot on his chest. \n\nAlex 6\n\n\"My sister wants me to come over for dinner. You wanna come with me?\"\n\n\"Are you sure?\" Andy asked tentatively. After that first bad night New Orleans was a ball. Mostly because we stayed in most of the rest of the time and christened every room in the house.\n\nI smiled at Andy and took his hand. \"Yeah, baby. I'm sure.\" His face lit up like the tree in Rockefeller Center. \"You know, I love that you're so easy to please.\" The words slipped out. They felt right. Andy beamed at me. \n\n\"I think you're falling for me, Bronski,\" he teased. It wasn't a joke though. I wasn't falling. I fell. Sometime in the last two weeks I fell hard.\n\n\"I love you,\" I blurted out. A shiver ran through Andy and he sucked in a breath. He turned toward me and his hand tightened on mine. \n\n\"I love you, too,\" he whispered. I exhaled a breath I didn't know I was holding and refocused on the road. \n\n\"Onog Alex!\" Zach screeched and ran to me. I lifted him up and tossed him over my head. He squealed with laughter.\n\n\"Hey, buddy. What's happenin'?\" \n\n\"Onog Jack is bein' mean to me,\" he pouted. \n\n\"What did he do?\"\n\n\"Him said I can't pway wis his toy cars.\"\n\n\"They're models, son. Not toys,\" Ben said, reaching for his toddler. \"Somebody needs a nap.\" He kissed his forehead and cradled him to his chest. \"Andy! I didn't know you'd be here,\" Ben said happily. I really appreciated the way Ben made sure to make Andy feel at ease. Andy's brother had really fucked Ben over, but Ben didn't hold a grudge against Andy for it. \"Zach. Say hi to uncle Andy.\"\n\n\"Onog Andy?\" Zach said sleepily.\n\n\"Yes. Say hi,\" Ben told him.\n\n\"Hi, Onog Andy,\" Zach yawned.\n\n\"God, he's gotten big. You're such a big boy. How old are you? Ten? Eleven?\"\n\n\"No,\" Zach giggled. \"I free.\" He held up three chubby little fingers. \n\n\"Three? My goodness,\" Andy crowed. \n\n\"I'm gonna put him down. He'll be up in a couple of hours,\" Ben said with a smile. I turned to Andy and threw my arm over his shoulder. I liked the feeling. I liked showing him open affection.\n\n\"Alex, my man,\" Raine came toward me. \"You look different,\" he squinted. \"Hair cut?\" I shook my head and glanced at Andy. Raine gave a fucking cock jerking smile. \"Looks good on you, man,\" he said with a wink and walked off.\n\n\"I still can't believe he's fucking Deacon Moore,\" Andy said quietly.\n\nI gasped in mock outrage. \"I think I'm rubbing off on you.\"\n\n\"Maybe,\" he grinned and brought his lips to mine.\n\n\"Oh Jesus Christ!\" Jen exclaimed dramatically. \"Seriously? Because 'two' hot guys makin' out wasn't enough?\" I outright laughed at her complaint. \"I mean seriously. You guys are giving me penis envy, just so I can get in on the action.\" \n\n\"Jen! Go away. You're embarrassing,\" Anya hissed. Jen rolled her eyes and went toward the hallway her husband disappeared into. Anya looked at me curiously. Then she pursed her lips and looked at Andy. \"Two rules. You will not ever say anything about my brother's size or prowess in my presence. Number two, you will come to Sunday dinner every Sunday unless otherwise informed.\"\n\nI hid my face in Andy's neck and laughed. \"Um,\" Andy started. \"Every other Sunday okay? I have to meet my baby mama in Bucksnort to drop my little girl off on my weekends.\"\n\nAnya's face went all googly and soft. \"You have a little girl?\"\n\nAndy nodded. \"Emma. She's six.\"\n\n\"Aw, we have to meet her,\" Anya cooed. What is it with women and men with kids? \n\n\"Sure,\" Andy grinned. \"She'd love to meet you I'm sure.\" Anya smiled and went back to the kitchen. \n\n\"Sorry. She's never...I've never brought a guy here as my boyfriend,\" I shrugged.\n\n\"Aw, baby. I'm your first,\" Andy ribbed. \n\n\"In more than one way,\" I said honestly. He smiled shyly and kissed me again. \"Come on.\"\n\n\"Where are we going?\" \n\n\"Away from the madness,\" I grabbed Andy's hand and pulled him into the master bedroom. I pulled him close and kissed him deeply. \"I love you.\" He groaned and kissed me harder. \n\n\"Thank you,\" he said.\n\n\"For what?\"\n\n\"For everything. This week. Today. Tomorrow. Thank you.\"\n\n\"You're so very welcome,\" I replied and ran my hands to his firm ass. \"Have I mentioned how much I love your ass? I mean seriously, I just wanna bite it.\"\n\n\"You have such a one track mind,\" Andy quipped and rolled his eyes. \n\n\"You complaining?\"\n\n\"Fuck no,\" he growled. It was off the charts sexy. \n\n\"Language, doctor,\" I admonished. \n\n\"What? You complaining?\" \n\n\"Mmm. Not at all.\" \n\n\"Sasha. I hope your holiday was good,\" Oleg said.\n\n\"Very. You were right, dya-dya, just what I needed,\" I smiled at him. \n\n\"Good. Good.\" Oleg sighed deeply. \"Sasha how many years have you been with me now?\"\n\n\"Five, bratishka.\"\n\n\"Sasha, I trust you. More than any other. I expect you to keep the secret I am telling you; even from Dmitrya.\"",
        "\"Of course, uncle.\"\n\n\"We have a mole in our midst, malchik,\" he said darkly. My pulse quickened and my palms began to sweat. \"Alexei? Are you ill?\" \n\n\"No, bratik. I'm angry. Someone has betrayed us!\"\n\n\"Not yet. My friend at the US Attorney's office said they are building a case against us. To do so they need past crimes and present ones. Someone has turned or someone was planted.\"\n\n\"It could be a rat, Oleg,\" I tried to make him believe that. \n\n\"Yes, maybe. What do we do to rodents, Sasha?\"\n\n\"We send them to ground, dya-dya.\"\n\n\"But first. They suffer,\" his voice went cold. \"Find our rodent, Sasha.\"\n\n\"Yes sir,\" I replied.\n\n\"What do you mean an informant?\" Dee trilled. \"If they know, we're made. We need to drop and run, Sasha.\"\n\n\"No we hold out, Dee. We've come too fucking far to run now,\" I argued.\n\n\"We could go WITPRO,\" Dee suggested. And give up Andy. Hell no.\n\n\"Absolutely not. I've given up five years, Dee. I won't give up the rest.\"\n\n\"It's that guy isn't it? Alex, you're jeopardizing the case for him,\" she berated.\n\n\"No I'm not. I won't give up my life for this, Dee. They've taken too much. Oleg doesn't suspect me. He asked me to find the rat. I'll stall until the case closes.\" I heard the doorbell chime from the sound minimizing room. I turned to leave. \n\n\"Alex, just remember. He's in danger too if we're made,\" Dee said softly. I inhaled deeply.\n\n\"I won't let it come to that.\"\n\nI went to the door and opened it. I jerked Andy in and scanned the street. \"Alex? What wrong?\" I took him in. He was in full scrubs tonight. His hair was a mess, like he'd been running his hands through it all day. \"You okay, baby?\" I shook my head and folded myself around him. \n\n\"I'm glad you're here,\" I sighed. The scramblers should keep any bugs from picking up our conversations, but I was nervous. \n\n\"Bad day, baby?\" Andy asked soothingly. I nodded against his shoulder. \"Come on.\" He took my hand and lead me through my bedroom and into my bathroom. He turned on the faucet and began to fill the tub. While the water ran he stripped my clothes off and then stripped his. \"Get in, baby.\" I eased into the warm water and he slid in behind me. I leaned back into his chest and inhaled deeply. \n\nAndy's strong hands massaged my shoulders and biceps. My body began to relax. \"Wanna talk about it?\" Andy asked.\n\n\"Yes,\" I answered truthfully.\n\n\"But you won't?\" \n\n\"I can't, baby,\" I told him. I rested my head against his shoulder. \"Can we just be, tonight? I don't want to think about work or life. I just want to be here with you.\"\n\n\"Okay, Alex,\" he agreed and continued his work on relaxing me. His palms dug into my pecs rhythmically. He trailed lower over my abs, then my hips, and finally my thighs. I was dozing by the time he grabbed my cock and began stroking. \n\n\"Oh yes,\" I groaned. \"That's what I need, baby.\"\n\n\"I could love you,\" he said.\n\n\"What?\" I felt a flair of panic. I thought he did love me.\n\n\"Ego amare te. I could love you,\" he said gently. My chest ached with emotion. He'd said that our second night together. He knew then.\n\n\"I do love you,\" I said and traced the shell of his ear with my tongue. \n\n\"I know,\" he smiled and continued to stroke me. Before long my hips were undulating in time with his languid motion. My breathing was heavy. He pressed his free index finger against my entrance and pressed into me. My hips jerked. He found the magic spot and pressed in. Fire surged through me and I came with a hoarse shout. \n\n\"I love you, Alex,\" he said and squeezed me against him. \n\n\"I love you, baby.\" \n\n\"I'm fucking hungry,\" I said, bouncing from foot to foot on the cold tile floor. \n\n\"Find something quick and come back to bed,\" Andy griped. \"Why is it so damned cold in here?\"\n\n\"Dee says she has hot flashes and I can put on more clothes, but she can only be so naked,\" I replied with a shrug. I didn't get women at all. It was like a meat hanger in the house, but if it was below seventy outside she acted like she was in the arctic. \n\nAndy scoffed and echoed my thoughts. \"Women.\" I grabbed some cheese and an apple and bounced back onto the carpeted floor.\n\nWe went back into my bedroom and set my food down on the nightstand. \n\n\"Are you gonna tell Emma about me?\" I'd been thinking about it. I didn't know how he'd explain who I was to his daughter.\n\n\"Of course,\" he answered. \"Why wouldn't I?\"\n\n\"I don't know. Doesn't she get made fun of? I mean her dad is gay? He had a boyfriend?\"\n\n\"Emma knows I'm gay, baby. She understands what that entails,\" he explained. I jerked back to look at him. \"Not physically, hornball. I mean, she knows I like men. Well, man,\" he smirked. \n\n\"Have you ever brought a man around her?\"\n\n\"Yes,\" he clipped and shut down.\n\n\"Is he the person that hurt you?\" I asked angrily.\n\n\"Alex,\" Andy sighed, \"I thought we weren't thinking about bullshit tonight?\"\n\n\"That's not bullshit,\" I argued.\n\nHe blew out a breath and I thought he was going to stay quiet. Then he started to speak. \"About two years ago I met a man at a club. His name was Will. He was sexy and funny. We started dating. A few months later we moved in together. \n\n\"He never hit me, baby. Never. But words can cut so much deeper. It started just asinine remarks about crap. Then it turned into viscous attacks on my masculinity, my performance. He was brutal. \n\n\"I finally had enough. So I left. He came over one night. Drunk. Belligerent. I had Emma that night. She heard us arguing and came out to see what was wrong. He told my child she was a bastard and a mistake. I saw red. I hit him so many times my hand turned black and blue. \n\n\"About six months ago I was leaving work and I was attacked by five full grown men. They hit me with some kind of metal pipes. They kept saying it's what fags deserve. I was in the hospital for weeks. I think, though...I think Will sent them. That's why I moved. I needed to start over.\"\n\nRage, white hot and violent, coursed through me. \"What happened to those men?\" I asked. My voice was shaky. \n\n\"I don't know. They were gone when I was found. I came to in the hospital days later,\" he answered absently. His eyes were far off. \"Emma was at home with my mother when it happened. If she had been with me...\" he trailed off. He didn't need to finish. I understood. \"You asked me if I would tell Emma about you. I will, but she's my daughter, baby. I love her more than anything in this world. Including you. She comes first. Always. If you can't live with that. Tell me now, because we won't work,\" he said softly. I didn't think I could love Andy any more than I already did. I was wrong.\n\n\"I spent my life coming in a distant second to my parents love for popularity. They were more concerned with how many people knew them than whether my sister and I were happy. Healthy. If your daughter was anything but your first priority, I couldn't love you, Andy,\" I said thickly. \"Now. Kiss me before my fucking head explodes.\" He smiled a shy, sexy smile and leaned up to my face. \n\n\"I.\" He kissed my lips softly. \"Love.\" And again. \"You.\" He deepened this kiss and emotions I hadn't felt for another person in my life swirled in my heart until it was near exploding. Andy came over me and began moving sensually on top of me. My cock strained toward him, needing his touch in a painful way. He licked his palm and reached between us. He fisted my cock and his and began to stroke them together. My breathing turned shallow and my eyes rolled back.\n\n\"I love you, Alex,\" Andy gasped. \"I love you so much it scares me. It's so soon, but I can't go a minute without thinking about you. I've never been like this before.\" He groaned and whispered his confession to me. His hand was working us both the whole time. My hips churned into the delicious friction of his cock and hand.\n\n\"I need to feel you inside, baby,\"\n\nI ground out against the onslaught of pleasure. Andy released my cock and dragged me into a sitting position. He lubed my dick and moved to straddle me.\n\n\"You may not be ready for me to be inside you, but I am going to fuck you, tonight,\" he said somewhere between a growl and a snarl. My cock jerked. Andy lined himself up and I held my cock up as he worked his way down it. When it was far enough in to ease the passage, he slammed down. \n\nThe rapture on his face made me just about come. His head was thrown back, his arctic blue eyes were wide and unseeing, his full, soft lips were slightly parted and a sheen of sweet covered his Adonis chest. I leaned forward and ran my cheek over it like a cat. His hands captured my head and held me against him as he lifted himself slowly. When he had all but the tip of me out, he slammed back down. And thus began the sensual rhythm.\n\n\"God, you feel so good, Alex,\" he rasped. Our bodies moved together. Burning hot pleasure shot through my system. My balls swelled with anticipation of an orgasm sure to have me forgetting any before it. \"When I come. I want to come in your mouth,\" Andy said tightly. His cock lay angry, hard and red against his stomach. I'd never seen him this hard. Without warning my ass clenched in sweet agony.\n\n\"Fuck. No inside of me. Fuck. Now,\" I almost sobbed. Andy froze. My cock protested and jerked in his hot ass. He scrambled off of me and grabbed the bottle of lube. I turned and climbed on my hands and knees thrusting my ass out. \n\nCool dollops hit in the crease and Andy's fingers began massaging it in. He pressed one finger into the tight hole. A pinching sensation rippled through along my insides. It was more of a pressure than a pain. He began pumping the digit slowly. As the pressure morphed to blinding pleasure he added another finger and repeated the process. When he had three fingers in me, he scissored them as he pulled out. My hips were thrusting back to meet his sensual assault.\n\n\"You're ready, baby,\" he told me and kissed my shoulder. He ripped a condom open. \"It'll ease the friction if I wear a condom this time,\" he explained before I'd even asked. I heard the squishing sounds of him lubing his magnificent cock and my backside tingled with anticipation. \n\nSlowly he started pushing into me. \"Push out for me, love,\" he said soothingly. I grunted in pain as the round head breeched me. Andy stilled and ran his hand over my ass cheeks. \"It's okay, baby. It'll get better.\" No sooner had he said it than the burn changed into a wonderful ache. \"That's it, baby. Relax,\" he cooed softly. He began pushing in again, stilling when I tensed. Finally I felt his pelvis against me. He was very still as I acclimated to the sensation.\n\n\"You need to move,\" I said between clenched teeth. Andy's melodic chuckle had me twitching and clenching. He slowly retreated and drove back in a few times. \"God dammit! Fuck me!\" I shouted. And he did. Hard, fast and ferociously. \n\n\"Not gonna last, baby,\" Andy ground out. \"Stroke yourself, Alex. Dammit! Come with me.\" I palmed my stony cock and jerked myself in time with Andy's fucking. My balls were drawing up close to my body. Everything below my waist tingled. Andy adjusted slightly and my vision blurred. My orgasm took me by surprise. An arc of semen shot out like a rope before I had time to catch it. It hit the pillows at least a foot in front of me. My body trembled from the force of my release. My arms were no longer capable of holding me up. \n\nAndy wrapped around my waist and pulled me up. His cock still driving violently in and out. \"I've got you.\" His voice was feral. Power and dominance radiated off of him. It was so sexy. He continued his powerful drives. For someone who said he couldn't last, he was doing a stellar fucking job. Tears were leaking from my eyes, my lips felt numb. \n\nAndy growled like an alpha dog and grunted as he set me back down. My ass was still up, but my cheek was pressed into the mattress. \"Again!\" He commanded. What? Again? Me? \n\n\"I can't,\" I moaned. No way. He grabbed my cock, which responded by hardening. Traitorous bastard. \"No! I can't,\" I cried out even though my hips thrusted into his fisted palm. \n\n\"Yes. You. Can,\" he demanded. \"Give it to me, baby. Give me all of your pleasure,\" he whispered like Satan himself. \n\n\"Oh, God,\" I cried out as my balls tightened again. My cock was sensitive to the point of pain. \"Please. Please. Please,\" I sobbed. Liquid heat oozed out of my cock head. The orgasm was less forceful, but more intense. The last thing I remembered was Andy's loud roar as he emptied into my willing body.\n\n\"Baby?\" Andy's soft voice roused me. \"You still with me.\"\n\n\"No,\" I grumbled and buried my face in his chest. His rumbling laughter soothed my over sensitized emotions. I lifted my head slightly to glare, but ended up grinning like damned fool instead. \"What the hell, baby? Could you warn me next time you want to unleash the fucking beast?\"\n\nAndy's face softened with a loving smile. \"I couldn't help myself. You drive me crazy.\" He brushed my sweat matted hair from my face and kissed me so softly. \"I love you.\"\n\n\"Mmm. I love you. My ass doesn't love you, right now...\" Andy laughed and squeezed me tight.\n\nAndy 6\n\n\"Dr. Grayson? You look happier than you did last week,\" the little boy, Josh, said to me. I grinned. From the mouths of babes and all.\n\n\"Do I?\" He smiled back and nodded. \"Hmm. Maybe it's that awesome Titans hat your wearing.\"\n\nHe little face brightened and excitement lit up his eyes. \"Jake Locker gave me this! He also took some pictures with me!\" \n\n\"That is really cool!\" I replied, matching his excitement. \"How've you been feeling?\"\n\n\"Much better. I'm not throwing up as much. It still hurts though,\" he said with a frown. My heart broke for him. I couldn't stop the pain. \n\n\"I know, buddy,\" I squeezed his tiny hand. \n\n\"Dr. Grayson? You have a visitor in the main lobby,\" Jeanine, one of the receptionist, came in and told me. \"Hi, Josh. Like your hat.\"\n\n\"A visitor?\" Josh's brows furrowed. I shrugged. \"Maybe someone cool is coming to see you!\"\n\n\"Nah! They can't be half as cool as Jake Locker's best friend,\" I replied. \n\n\"He's not my best friend! Brandon is my best friend,\" Josh corrected. \"Can I come see your visitor?\"\n\n\"I don't know. We'll have to ask Nurse Ratchet over there,\" I smiled at, Nina. She was the furthest thing from a Nurse Ratchet. \n\n\"Did you eat all of your lunch?\" She asked Josh. Josh nodded. \"Okay. But you've gotta ride in the batmobile.\"\n\n\"Will you push me, Dr. Grayson?\" He asked, delightedly. \n\n\"Well, duh,\" I answered. \"Nurse Nina can't drive.\"\n\nA few minutes later we had Josh situated in the wheelchair and his IVs secured, and off we went. My body heated when we got to the lobby. There in a slate gray, three piece suit, Alex stood reading the hospital mission statement.\n\n\"Holy cow, Andy,\" Nina whispered. I turned and gave her a wry smile. Yeah, my man was delicious. \n\n\"Who is that, Dr. Grayson? He looks like Bruce Wayne,\" Josh whispered. \n\nI bent low and whispered back, \"He thinks he is, but really he's the Boy Wonder.\" I smiled secretively to Josh, who giggled drawing Alex's attention to us. \n\n\"Well, hello,\" he smiled widely and my heart skipped. \n\n\"Hi,\" Nina said breathlessly. My lips twitched. Alex turned his grin up a degree and I feared Nina would melt. \"Nina Grover,\" she introduced herself.\n\n\"Alex Bronski,\" he replied with a handshake. \"And who may this young man be?\" He asked squatting in front of Josh.\n\n\"Josh Coleman,\" Josh answered with his chest puffed out. Alex glanced up at me and winked. I'm pretty sure I had the same reaction as Nina. \n\n\"Well, Josh. It's nice to meet you. Are you keeping this guy in line?\" He asked and jerked his thumb toward me. \n\n\"Dr. Grayson? He's the coolest doctor here. He gave me some old Batman comics. And he knows about space!\" Josh bounced lightly. I respected that kid so much. He was diagnosed with osteosarcoma at seven years old. He lost his leg to it only to have it come back with a vengeance when he was ten. But, he never got down. I'd never seen him that he wasn't smiling and excited about life. It's easy to take advantage of life when you think you've got fifty more years, but no one is guaranteed tomorrow. I think we could all learn from Josh. \n\nLess than a year later Josh lost his fight, but I've never forgotten that little boy's smile or love of life. It's helped me through some dark nights.\n\n\"He does like space doesn't he?\" Alex smirked. \"He got upset with me once because I had never seen Star Trek.\"\n\n\"Me neither,\" Josh whispered conspiratorially. \"I like Star Wars better.\"\n\n\"That's how I feel about it too,\" Alex whisper yelled back. \"Do you think I could steal your doctor for a lunch meeting?\" Alex asked Josh in his normal bass tone. \n\n\"Sure,\" Josh shrugged. Then smiled deviously. \"If you bring me back a cherry limeade from Sonic.\"\n\n\"A hard bargainer, huh?\" I said ruefully. \"I guess it's a good thing since your appetite's back. A 'small' cherry limeade and you've got a deal?\"\n\nJosh sighed and twisted his lips. \"Okay, fine.\"\n\n\"Let me take Josh back and get my wallet,\" I told Alex. \n\n\"I'll take him back, Andy,\" Nina offered. \"You, go, enjoy your lunch.\" She winked at me and pushed Josh back toward his room. \n\n\"I need to run to my locker. Meet you in the front?\"\n\n\"I got it,\" Alex smiled. \"Come on.\"\n\n\"Should you be doing this?\" I asked as we settled into a booth at the diner across from the hospital. \n\n\"What? Having lunch with a friend?\" Alex said innocently. I tried not to focus on the sting of the implication. He was trying. And that was good enough for now.\n\nWe ordered our lunch and shot the breeze like friends would. \n\n\"Josh seems like a cool kid,\" Alex said with a mouth full of greasy cheeseburger. It made him seem his age. It was easy to forget the nine year age difference between us at times. He wasn't even thirty and I was closer to forty than thirty. \n\n\"He is. He's one of my favorites,\" I smiled.\n\n\"What happened to his leg?\" Alex said then flushed. It was cute. \n\n\"Bone cancer. They took the leg, but it came back. It's in his lymph nodes now.\" \n\n\"Poor kid,\" he whispered.\n\n\"Yeah. He's a fighter though. Never met a braver person,\" I said and shook my head. \"Even when he's green and shaking from being so ill, he's got a smile on his face.\"\n\n\"Wow.\"\n\n\"Wow, indeed. I'm thinking about taking a permanent job in the research department. I like the hospital. I like the kids,\" I informed Alex. I left out the part about staying in Memphis to be with him. I didn't have to say it. His stunning smile told me he knew.\n\n\"I missed you,\" he said suddenly. \n\n\"You just saw me this morning,\" I chuckled.\n\n\"So? I still missed you,\" he said sullenly.\n\n\"I missed you too, baby.\" He smiled and his eyes darkened like they do when he wants inside of me.\n\n\"I'll have you know I've been walking funny all day. And every time I sit down I get hard. I think I can still feel your cock in my ass,\" he said in his seductively low bedroom voice. \n\n\"Alex!\" I hissed, but couldn't help my astonished smile. \"You're so bad.\"\n\n\"You like me bad. Admit it,\" he smirked.\n\n\"I like you any way I can have you,\" I teased back. \n\n\"I can't wait to get you in bed and...oh for fuck's sake,\" he broke off. He reached into his jacket pocket and pulled out his cell. \"I need to take this,\" he clipped. I nodded. \"Privet, dyade,\" he answered shortly. He spoke in quick, clipped Russian. His face was a mask of indifference. This was the Alex I remembered watching at the wedding. Intimidating, serious. Seemingly wiser than a person his age should be. His demeanor continued to change as he spoke. I understood none of it. \n\n\"do svidaniya dyadi,\" he said finally. He stood and turned to me. His face softened just enough to let me see 'my' Alex. \"I need to go. I'm sorry.\"\n\nI nodded. I wanted him to kiss me. I wanted to feel the connection I had with the man behind the stoic visage. I was left wanting. He squeezed my shoulder as he passed me to pay at the register. ",
        "A vibration against my cheek woke me up from where I was dozing on the couch. I picked up my phone a tried to read the screen through my blurred vision. Alex was supposed to be here two hours ago and still hadn't shown up. I'd put our dinner in the oven on warm and settled in to wait. I'd called several times to no avail. \n\n\"Hello?\" I answered my phone urgently as my brain awoke.\n\n\"Andy?\"\n\n\"Oh. Hey, mom,\" I deflated. \n\n\"Well, it's nice to hear your voice too, honey,\" my mother spoke sardonically. \n\n\"Sorry, mom. I was expecting a call from a friend,\" I explained by way of apology. \n\n\"Oh? A friend, friend or a male friend,\" my mother pried. \n\n\"A boyfriend,\" I smiled into the phone. \n\n\"Oh, honey! That fantastic!\" \n\n\"Yeah. He is.\"\n\n\"That's great! Is he a good man? Does he treat you right?\"\n\n\"Yeah. But I'm worried. He was upset earlier today and now he's two hours late for dinner. I've tried calling but he's not responding.\"\n\n\"Oh, sweetheart. You're probably worrying yourself over nothing. He probably just got caught up.\"\n\n\"You're right, as usual. So? I assume your calling about my baby girl's recital?\"\n\n\"Yes. She was beautiful. She finally felt comfortable enough with point to do a solo!\"\n\n\"I know Leah sent me a video. I wanted to be there.\" I sighed heavily. I hated missing my daughter's milestones. Tonight was her ballet recital. Her mother sent me the videos, but I wanted to be there to hug her and tell her how proud I was. Give her roses and cheer louder than all of the other dads. \n\n\"She understands, Andrew. Your work is far too important,\" my mother assured me. My phone beeped. I looked at the display. \n\n\"Mom. That's Alex. I call you back?\"\n\n\"Of course, dear. I expect to meet this young man soon.\"\n\n\"Bye, mom. Love you.\" I switched the call over. \"Alex?\"\n\n\"Hi, baby.\" He sounded exhausted.\n\n\"I was so worried. Where are you?\" Relief pounded through me so hard tears sprang to my eyes and my stomach churned with nausea.\n\n\"I'm sorry. Things went bad on one of our deliveries. I had some business to attend to.\" He sounded more than exhausted. He was shaken. It must have been really bad for him to be this down about it. \"I wanted to see you tonight, baby. Really, I did.\"\n\n\"I know. Are you okay? You sound upset.\" \n\nThere was a long pause, then a rush of air through the phone. \"I'll be fine, baby. I miss you.\"\n\n\"I miss you. You can still come over. I kept dinner warm,\" I offered. Inside I was begging him to still come.\n\n\"I can't. I've got...shit I have to take care of,\" the last was hissed. \n\n\"Oh. Okay. I'll let you go then,\" I said sadly.\n\n\"No. I'm driving and exhausted. Stay on the phone for a little bit? Tell me about the rest of your day.\"\n\n\"Leah sent me some videos of Emma's recital. She was beautiful as usual.\"\n\n\"She looks like you. Of course she was beautiful.\"\n\n\"You're such a charmer, Bronski. You know what I realized just now?\"\n\n\"What's that, baby?\"\n\n\"Your name is very close to Anna Karenina's lover. Alexei Vronsky.\"\n\n\"Ha. Yes. I'm named after him actually. Our last name is Vronsky, but the Russian alphabet B is V, so when my grandparents immigrated their name became Bronski. My mother said Anna Karenina was a beautiful love story, so she named me after the tragic hero. Count Alexis Kirillivich Vronsky.\"\n\n\"So you're like a great literary lover?\"\n\n\"Vronsky wasn't a great lover, baby. He was a selfish bastard. In fact, Anna Karenina wasn't a love story. It's an essay on the fall of a woman in society. It's stupid. She throws herself under a train,\" he spat. \n\nI laughed. \"Well, good to know you're as serious about your Russian literature as you are about fucking.\"\n\nAlex groaned. \"Jesus, I wish I was inside you.\"\n\n\"Me too, baby.\"\n\n\"Tell me more about Emma's recital,\" he said. \"I need something to kill this boner.\"\n\n\"That's such a crude word,\" I mused.\n\n\"Fine. Hard-on, cock, dick...you choose. So tell me.\"\n\n\"She did a point solo,\" I said proudly. \n\n\"Baby. English, please. I have no fucking clue what a point solo is.\"\n\n\"She danced on her toes. She hasn't been confident enough to do it until now.\"\n\n\"Oh wow. We'll need to take her somewhere special this weekend.\" My face split. He wanted to spend time with my little girl. He wanted to be a part of her life. I loved this man so much. \"If...if that's okay, I mean,\" he said uncertainly.\n\n\"That's more than okay, baby.\"\n\n\"Good. Have you ever wanted more children?\" What? What, what and huh?\n\n\"Well, I mean sure. With the right person. I don't want to be a part time dad with my kids. I hate it with Emma.\"\n\n\"I want kids. I never did before, but now...\" I read into his words. What he meant was he wanted kids with me. Overwhelmed with emotion, tears welled in my eyes.\n\n\"Yeah,\" I said thickly. \"I want that too.\"\n\n\"Don't cry, baby.\"\n\n\"Sorry. I just...I didn't know I could have this.\"\n\n\"Me neither, baby. And I swear, soon. Soon, we'll be together like you want. I swear it.\"\n\n\"I love you so damned much it hurts.\"\n\n\"I love you, too, baby. More than you know.\" \n\nAlex 7\n\n\"Be careful driving, baby. I'll see you in an hour,\" I said into the phone. Andy was going to pick Emma up for the weekend. \n\n\"Was that your love?\" Dee asked teasingly. I grabbed her hands and twirled her around the living room. She laughed and danced with me. She stroked my cheek and looked up at me with her gorgeous smile. \"It's so good to see you this happy, Sasha. I always wanted this for you.\"\n\n\"I love you, Dee. You're my best girl, ya know?\" I twirled her out. \"I have to get ready. I have a date with my man and his best girl.\"\n\n\"Okay. I'm gonna go get a bite and chillax around here tonight,\" she smiled. I kissed her cheek and walked to my room. I showered and dressed to go to Incredible Pizza. Which meant I was in a t-shirt and jeans. Emma said that's where she wanted to go. I was nervous. My future relied on this little girl liking me. \n\nMy phone buzzed. I didn't look at the display. \"I'm on my way, baby.\"\n\n\"Sasha?\" Oleg's voice boomed through.\n\n\"Uncle. I'm sorry. I thought you were Dee.\"\n\n\"I need you at the distribution varehouse. Now. Ve found our mole.\" I broke out into a cold sweat.\n\n\"You did?\"\n\n\"Da. Come now.\"\n\n\"Uncle...I have plans I can't break tonight.\"\n\n\"Alexei Nicolai! Do not forget vhere your loyalty lies!\"\n\n\"Of course, uncle. I'll be there in thirty minutes.\" I hung up and dialed Andy. I got his voicemail.\n\n\"Baby. I'm going to be late. There's a work emergency.\" I hauled ass to the warehouse. \n\n\"UNCLE!\" I called. Oleg's rotund form appeared close to the back of the room. Something wasn't right. The hair on my neck prickled. My body tensed for a fight. \n\n\"Come, Sasha. See vhat ve have found,\" he called. I walked to the back of the room and froze solid. Bile rose in my throat.\n\n\"Oleg, what the fuck?\" I looked in Dee's terrified eyes. \"Let her go!\" Dee shook her head. One of Oleg's lackeys put the barrel of a .38 pistol to Dee's temple.\n\n\"See, Sasha. That's not possible. Bring the others,\" Oleg demanded of another man. My heart thudded painfully. \"Remember, Sasha. We make rodents suffer,\" he said icily. \n\n\"This is ridiculous, uncle. Dee is not a mole,\" I tried staying calm. \n\n\"No? I beg to differ, Sasha,\" he said casually. Too casually. My heart sank. I'd been made. \"Tell me, 'agent', did you think I wouldn't figure it out?\"\n\n\"Oleg. This has nothing to do with her. Let her go!\" I shouted. I turned at the sound of the men returning. \"Oh, God. Oleg, no.\" My sister, Andy and his daughter were all bound and being lead at gunpoint.\n\n\"See, Sasha. I figured death vould be too easy for you. You do not fear death. I made you that way,\" Oleg smiled evilly. \"So. Ve vill play a game instead. 'You', Sasha, vill choose who dies first.\" Cold dread spread through my veins. At the same time my senses went on high alert. \"Your sister? Your partner? Your sinful lover? His daughter?\"\n\n\"Oleg, please. Don't do this. As my blood runs in your veins, please,\" I dropped to my knees and begged. I looked at Andy. His eyes were wide and afraid. \n\n\"CHOOSE, SASHA!\" Oleg bellowed.\n\n\"Me! Kill me! Let them go! You have me!\"\n\n\"If you vill not choose, I vill. Bring Dmitrya!\"\n\n\"NO! NO! PLEASE DON'T!\" I yelled. \"Emma! Baby, close your eyes. Don't peek,\" I called to her. Dee was brought forward. She was sobbing and begging. \"I'm so sorry, Dee. I love you, honey.\" There was nothing else I could do. I looked at my sister. She was shaking and sobbing. Emma was leaning into her with her eyes clamped shut. \"Don't peek, baby,\" I whispered brokenly. The barrel was pressed to Dee's temple. My heart stalled as the crack o the bullet echoed. Blood hit my face. Tissue thudded sickly on the ground. \"NO!\" I screamed and sobbed. \"Let them go! Kill me! They're innocent! It's me you want!\"\n\n\"Very well, Sasha,\" Oleg sighed and nodded to the lackey. \n\n\"ALEX! No!\" My sister cried. \"God, no!\"\n\n\"Make sure she keeps her eyes closed,\" I told Anya about Emma. \"Do I have your word?\" I asked Oleg. \"They walk out of here?\"\n\nHe looked pensively. \"Tell me what they have on us and yes. The girls go free.\"\n\n\"All of them,\" I hissed.\n\n\"No,\" Andy whispered. \"The girls.\" I looked at him pleadingly. \"My daughter goes free.\" \n\n\"Let them go. I'll tell you what I know,\" I said resigned. Oleg nodded to the lackey. The girls were lead to the small office. \"RICO. They have past offenses from Petrykov in prison. I was the current witness to the ongoing criminal activity. Dee was my back up. I was approached by the bureau after I graduated. I've been deep cover since. Alan Hines is my contact at the bureau. Dee is actually Special Agent Dmitrya Romanov. I am SA Alexei Bronski. I was chosen because of my familial ties to Kazakov.\" I looked at Andy. His eyes were wide and red. \"Let me...\" I broke down. \"Let me say goodbye. Please.\" Oleg nodded. I crawled to Andy and cupped his face. \"I'm so sorry. I didn't want this to touch you. I love you. Please forgive me.\"\n\n\"I love you,\" he choked. \"Your sister will keep my Emma safe?\"\n\n\"Yes, baby. I promise.\" I kissed his lips one last time. \"I'll love you forever.\" I turned to Oleg and dropped my head. The cold steel of the gun pressed into my skull.\n\n\"FREEZE. FBI!\" A voice boomed. A gun cracked and pain ripped through my chest. \n\n\"Alex!\" Andy's voice boomed. \"Stay with me, baby. STAY WITH ME! Don't you dare leave me!\" And the world went black.\n\nAndy 7\n\n\"Daddy. What does ashes to ashes mean?\"\n\n\"Biblically. We came from the dust and when we die we return to dust, baby,\" I answered the only way I could. My heart was heavy. I was finding it hard to get up in the mornings. Harder still to be social. I didn't want to be here. I felt like I was drowning. \n\n\"Where do people go when they die?\" Emma asked as we walked back to the car. \n\n\"I don't know, baby. If we remember them, they never really die. But I suppose their souls go to heaven?\"\n\n\"Is that where Alex went?\" She asked. Tears welled in my eyes and my breath hitched. I looked at my beautiful girl and picked her up. I could've lost everything. \n\nThe FBI arrived like in a crime drama series, just in the nick of time. Almost. Dee was gone. \n\n\"I suppose, baby. But he came back to us, didn't he?\" Alex had taken a bullet point blank in the chest. We lost him three times on the operating table, but my stubborn lover pulled through and woke up with a bad case of attitude. He was the worst patient ever. The nurses hated him. He was still laid up in the hospital bed and was refusing to see anyone except Emma. And that was only because she threw a fit. I tried that, but it didn't work. Still, everyday Anya and I went and tried. His supervisor said he was suffering from guilt. I didn't care about any of it. I missed him so much. \n\n\"Daddy?\"\n\n\"Yes, baby?\"\n\n\"Are you mad at Alex?\"\n\n\"Of course not. Why do you think that?\"\n\n\"He said that you were,\" Emma shrugged. God, I was in love with an idiot. The man offered his life for me and my daughter. I wasn't mad at him, I was more in love with him than ever. \n\n\"He's just being silly, baby,\" I told her. \"He's in a bad mood and it's affecting his brain.\" \n\n\"Can we go see him today?\"\n\n\"Yes. Now give your old man a kiss.\" \n\n\"I said I don't want you here!\" Alex's voice traveled down the hallway, followed by a metal crash. \n\n\"Mr. Bronski, please,\" the nurse said in exasperation. \"I just need to give you your pain meds.\"\n\n\"I don't need them. Leave!\" The nurse came running out of the room with her head in her hands. I carried Emma to the door and set her down. The other nurse stopped me. \n\n\"Sorry, Dr. Grayson. Just Emma today.\" I nodded.\n\n\"Go on, baby. Tell him your new joke. Maybe he'll laugh,\" I patted my daughter's bottom and sent her in.\n\n\"Hi, Alex!\" Emma squealed. \n\n\"Hey, sweetheart,\" Alex answered. My heart broke. I shook my head and turned to take a seat.\n\n\"He's still being a fathead, idiot,\" Anya grumbled and sat next to me. \n\n\"Yep,\" I sighed.\n\n\"Why do we even try?\" She pouted. She looked so much like her brother I had to smile. \n\n\"Because we love the fathead,\" I answered. \n\n\"Sucks doesn't it?\" She chuckled.\n\n\"Indubitably.\"\n\n\"Anya, baby? You ready?\" Jack said to his wife. She exhaled loudly and stood. \n\n\"See ya tomorrow, Andy,\" she said wryly. I nodded. Then I waited. Hours went by and I dozed off. \n\n\"DADDY! Wake up,\" Emma yelled. \"Alex asked for you,\" she told me.\n\n\"He did?\"\n\n\"Mmhmmm. I told him you called him a silly idiot and he got mad and told me to come get you,\" she said in her prissy tone.\n\n\"Oh really? Is he going to throw something at me?\" I asked. Emma grinned and shrugged. I chuckled and stood to take her tiny hand. I sat her down with Alex's nurse and kissed her forehead. \"Be good. Be right back.\"\n\nI peeked into Alex's room and warily entered. The last time I'd come in without permission I almost got hit with a bedpan. \"Hello?\" I called cautiously. Alex was turned on his side, staring out the window.\n\n\"Come in, then,\" he said shortly.\n\n\"How are you feeling?\" I asked tentatively. \n\n\"How do you think I feel?\" He hissed.\n\n\"Regurgitated dog shit?\" I said lightly. Alex let out a low chuckle. I loved that sound. \"I miss you.\" My voice was thick as I fought back tears. I moved closer to him begging my fingers not to touch. He sighed and rolled to look at me. His face was stubbled. His lips and complexion were paler than normal. He had dark circles under his stunning hazel eyes. He was gorgeous still. I wanted to feel his lips on mine. I wanted to inhale his scent. \n\n\"Why?\" He said in a disgusted tone.\n\n\"What?\"\n\n\"Why would you miss me? Look at what happened because of me. Look at what could've happened to Emma? Jesus! She'll probably need therapy,\" he hissed.\n\n\"You're a selfish moron,\" I spat.\n\n\"What?\" His eyes widened.\n\n\"Emma is safe. She is safe and happy. I'm safe. You're sister is safe. We're safe because of you. You were ready to die to keep my daughter safe. Now you're shutting us out because you feel bad. You selfish bastard!\"\n\n\"Which is it, Andy? Am I the fucking martyr or the selfish bastard?\" He yelled. \n\n\"You're the selfish martyr,\" I yelled back and glared. Alex's lips twitched and his eyes filled with mirth. A small laugh escaped him and he slapped his hand over his impudent mouth. Watching his struggle to maintain his severity caused my own laughter to break free. My body shook with it and tears formed in my eyes. Alex joined in then groaned and clutched his chest.\n\n\"Stop. Don't make me laugh it hurts,\" he moaned, then laughed, then moaned again. \n\n\"Sorry,\" I cackled. I tried not to stop, but I couldn't. The laughter continued. \n\n\"Stop, asshole,\" Alex groaned through his own giggles. Finally I was able to stop. I looked at the man I loved and gently stroked his face. He closed his eyes and pressed into my palm.\n\n\"I love you, Alex. What you did...\" My voice cracked. \"I thought I was about to watch you die. And the only thing in my mind was, 'at least I won't have to live a day without him'. I don't blame you, baby. You tried to push me away. To keep me out of your life. I bullied my way in just like you did to mine. And I wouldn't change it. Am I upset that my daughter was there? Yes. But the whole time you thought about her. No shut up. I'm speaking,\" I told when he opened his mouth to interrupt. \"I was 'there', Alex. I saw everything. What happened to Dee was not your fault. She was an agent. She made a choice. We 'both' made a choice. She chose the job. I chose you. I 'choose' you. You can push and push, baby. But I'm not just giving up. If I'm yours, you're mine.\" \n\n\"I fucking love you,\" he growled. I leaned in and finally, God, finally, pressed my lips to his. \n\n\"Get off of my son,\" a female voice hissed. Alex jerked away and moved his eyes to the door.\n\n\"Fuck,\" he whispered. His face transformed into a nasty sneer. \"What do you want, mother?\" He spat.\n\n\"I came to see my son,\" she said in a haughty tone. I didn't like her. \n\n\"You've seen me. Now leave,\" he retorted. She started speaking in quick Russian. \"You will speak English in front of Andy, mother.\"\n\n\"Fine!\" She snapped. \"In English. You should be ashamed of what you are doing to your family. First, betraying your blood by working for the enemy.\" Was this lady serious? She was defending the man who tried to kill her son? I glared at her. I must admit, she held her own by glaring right back. \"Second, you live this...this sinful life with another 'man', Alexei. Have you no decency?\"\n\nI needed to leave. I was going to murder this woman if I stayed. \"I'm going to get Emma home, baby. I'll see you tomorrow?\" He nodded and pulled my head down for a kiss. I may have made it a little hotter for show. \"I love you.\"\n\n\"Love you,\" he said huskily. I walked out and smirked at his mother. I grabbed my daughter and headed home, feeling a little lighter and a lot more optimistic.\n\nAlex 8\n\n\"What do you want, mother? Really?\" I asked. My mind was still on Andy. I loved him so much. He said he didn't blame me. I did. I blamed me. I blamed me so much I was angry that they'd brought me back, then like the angel I needed, he was there. He was there telling me he loved me still. Telling me that I sacrificed myself for his daughter. I had, but dying was easy. He loved me. My head still couldn't wrap around that. \n\n\"You almost got yourself killed, Alex. My future daughter-in-law was killed,\" my mother said in her holier than thou tone.\n\n\"Mother! She was a federal agent. She was in deep cover with me. She was my partner. She was 'never' my fianc\u00e9e and to remember her as such is an insult to her memory. She died a heroine,\" I said lowly. \n\n\"She died for nothing,\" my mother said venomously. Anger burned my gut. \"You could have had it all, Alexei! The family would have been yours. A wife. A son. Everything! Instead you give it away for what? An unholy relationship with another man? How could you? How could you, Sasha?\" She sobbed.\n\n\"Mama. Ne plach' mama,\" I said. \"Don't cry mama.\"\n\n\"Alexei, why? Why have you done this?\" She said tearfully. \n\n\"I didn't choose this. I am what I am.\" She cried harder. \"I love him, mama.\"\n\n\"No. You can't.\" I inhaled deeply. My mother was so childlike. She thought only of herself. I hated what Anya went through. I hated the way we were treated. I hated her selfishness. But she was my mother. My mother who loved me as much as she could anyone. My mother who used to read me Russian fairy tales at bedtime. She was my mother and I loved her. \n\n\"Mama,\" I said softly, \"I. Love. Him.\"\n\n\"Then you are not my son,\" she said stoically as the tears dried.\n\n\"I'm sorry you feel that way.\"\n\n\"Keep your ass right there!\" Andy yelled at me from walking around the car.\n\n\"Daddy! You said a bad word!\" Emma admonished. \n\n\"Tell 'im, baby girl,\" I encouraged her. Leah, Emma's mom, had agreed to let her stay with us for the holidays. I'd been out of the hospital for three weeks, but Andy insisted on coddling me still. Like a shot to the chest affects whether I can take a piss alone. ",
        "\"There they are,\" my sister crowed from her front porch. \"Emma!\" She squealed.\n\n\"Jesus Christ,\" I grumbled.\n\n\"Shut up. Emma loves her,\" Andy berated me when he opened the door.\n\n\"You gonna fuckin' carry me, too, doc?\" I asked sarcastically. \n\n\"Don't start with me, Alex,\" Andy warned.\n\n\"Or what? You'll spank me?\" I knew I was pushing him, but I hadn't done anything but jerk off for over a month. Shocked the hell out of one of the night nurses. I thought it was pretty funny; she was not amused. Andy said that he was afraid my lung couldn't handle the pressure and was determined to wait the full twelve weeks the doctor ordered. Twelve! That's three fucking months without his hot ass. Not happening.\n\n\"Alex,\" Andy huffed. \"Get out of the damned car and be nice. It's Christmas Eve, for God's sake.\"\n\nI pursed my lips. \"Fine. I'll be nice if you'll blow me tonight.\"\n\n\"You'll be nice because it will make me happy, Alex, not for a blow job.\"\n\n\"Baby, I'd do just about anything for a blow job right now,\" I said in what I hoped was a seductive voice. \n\n\"Alex, baby,\" he whined. Honest to God whined. Even that shit turned me on. I needed to have sex. Yesterday. \"He said twelve weeks. I'm suffering, too, baby.\"\n\n\"Are you guys coming or what?\" Anya hollered. \n\n\"Apparently not,\" I muttered crossly. \n\n\"Be nice,\" Andy hissed again. He held my hand and lead me to the door. I was short of breath by the time we got there. Not that I would tell Andy that. \n\n\"Daddy! Anya said I have presents to open tonight! Ben and Jen got me something and Anya and Jack did too!\" Emma squealed and jumped up and down like a cracked out kangaroo. \"Can I help get our presents out of the car? Can I? Can I? Can I, daddy?\"\n\n\"Okay, baby. Let me get Grumpy settled and we'll go out,\" Andy said and laughed. \n\n\"Yay!\" Emma hollered.\n\n\"Calm down, Emma,\" I said shortly. She stopped and turned wide eyed to me. I rarely corrected her. Not because I was Mr. Nice Guy. Emma was just a good kid. \n\n\"Sorry, Alex,\" she said sadly. Well hell. I felt like an ass. \n\n\"It's okay. Gimme some lovin',\" I said and held my arms open. She bounced into them and squeezed me tight. I'd fallen as in love with Emma as I was with Andy. More maybe. She didn't argue with me. \n\n\"Love you, Alex,\" she said sweetly.\n\n\"I love you, baby girl.\" Andy smiled at our exchange and lead me to the sofa. He sat me down and kissed my forehead like I was some sort of invalid. \n\n\"Hey, gimpy,\" Raine greeted as he sat down beside me. \n\n\"Piss off, asshole,\" I murmured. \n\n\"You're in extraordinarily fine form today, I see,\" he laughed. \"What gives.\"\n\n\"No sex for twelve weeks. It's only been six,\" I explained.\n\nRaine let out a whistle. \"Shit. That sucks.\"\n\n\"Thank you, captain obvious,\" I replied sardonically. Raine chuckled. \"You're an asshole,\" I told him.\n\n\"That's what Deak says,\" he smiled. \n\n\"What's that, babe?\" Deak came up and asked.\n\n\"You say I'm an asshole,\" Raine said and shrugged. \n\n\"Oh yeah. You are. You're my asshole, though,\" Deak said and kissed Raines forehead. \n\n\"The things I wanna do to your asshole, baby,\" Raine responded lasciviously. \n\n\"Really? Must you?\" I snapped.\n\n\"Damn, dude. What's wrong with you?\" Deak said and took a step back.\n\n\"Doctor ordered abstinence,\" Raine answered for me.\n\n\"Oh hell,\" Deak chuckled. \"No wonder he's more surly than normal.\"\n\n\"I'm right here, fuckers,\" I growled. \n\n\"Leave him alone, guys,\" their wife, Tyler demanded. She smiled and winked at me before pulling her guys away. \n\n\"Hey, little brother,\" Jack greeted and sat next to me. Things were strained between us. I knew he blamed me for what happened to Anya. Hell I did, too. \"How you feelin'?\"\n\n\"Better,\" I said.\n\n\"Good, good. Andy treating you good?\"\n\n\"Too good. He's having to much fun playing nurse Andy,\" I told Jack and Ben who'd sat on my other side.\n\n\"If I hadn't thrown my electric razor at him, he probably wouldn't let me wipe my own ass.\"\n\n\"I heard that,\" Andy said from behind me. Jack and Ben cracked up.\n\n\"Ha ha. Yuck it up, fuckers,\" I groused. Ben and Jack laughed harder. \n\n\"Welcome to married life, bro,\" Ben said with a slap on my back. That fucking hurt. I made the mistake of flinching. Andy was in front of me instantly. \n\n\"I'm fine. Go. Go away,\" I shooed him. He just shook his head in exasperation and kissed me. Not just a peck, but a real kiss. He even threw in a little tongue. My cock woke the fuck up and took notice. \n\n\"If you can make it the next three hours without complaining,\" he whispered, \"I'll blow you when we get home.\" I smiled widely and pulled him in again. \n\n\"Daddy! Can't I stay up a little longer?\" Emma whined.\n\n\"No. How's Santa gonna come if you're awake?\" Andy protested.\n\n\"How's Alex gonna come if she's awake?\" I said quietly. Andy heard. I got the shut up face. \n\n\"Fine,\" Emma bellyached. She marched off to her room.\n\n\"Hey!\" I yelled and caused a fit of coughing. Andy squatted in front of me and put my head to his chest. He soothed me while I struggled for deep breaths. The bullets had collapsed my lung. I'd be on albuterol for the rest of my life. Much to Andy's relief I was no longer capable of being a field agent. I was a regular paper pusher now. This did not please me.\n\n\"Deep breaths, baby,\" Andy said softly. Emma came up behind me and ran her little fingers through my hair. \"That's it.\" \n\nWhen I'd calmed my coughing down, I turned to Emma. \"You didn't say goodnight,\" I panted. \n\n\"I'm sorry, Alex,\" Emma cooed. \"Goodnight.\" She hugged me tight and wiggled her nose against mine. \"Night, daddy.\"\n\n\"Night, baby. Not until eight, Emma Marie,\" he called after her. She muttered under her breath and shut her bedroom door. Andy turned to me. \"You okay, baby?\" I nodded and took his hand. I pulled him down to me on the couch. \n\n\"I miss you,\" I frowned.\n\n\"What do you mean? I'm right here, baby,\" he replied.\n\n\"No I miss being inside you. I miss talking for hours after. I miss you,\" I finished on a whisper. \n\nAndy wrapped me in his arms. \"I miss you, too.\" \n\n\"You owe me a blow job, ya know?\" I smiled salaciously and waggled my brows. \n\n\"I know. Let's get Santa set up and I'll blow your mind, baby,\" he answered with his own waggle. I laughed.\n\nWe went to work setting up the Santa presents. I was in charge of stockings. Well, Emma and Andy's. \"I have never seen so much crap in my life,\" Andy complained. \"I think you went overboard, baby.\" Andy had come home with four presents from Santa. Four. I decided that was not nearly enough and made him take me shopping. Two shopping carts and seven hundred dollars later, I was satisfied. \"I mean really? What the hell is she going to do with all of this?\"\n\n\"Play with it,\" I told him. \n\n\"This doesn't even include the mountain of shit she has wrapped,\" he went on. \"You're going to spoil her.\"\n\n\"So?\" I shrugged. \"She deserves it.\" Andy rolled his eyes and held up a gift card holder on the tree. \n\n\"What does a six year old need with a hundred dollars to Best Buy?\"\n\n\"They have movies.\" Andy shook his head. \"Baby, I've never had a stocking. You know that? Santa never came to my house. Christmas morning we went to Oleg's and ate lunch, then we each had two gifts. It was always socks and underwear. So cut me some slack. I may have gone overboard, but I'm giving Emma the Christmas I always wanted. I have the money from my inheritance and working for Kazakov. So, who cares?\" I explained. Andy's face softened. \n\n\"Okay, baby. And I promise, I didn't get you socks,\" he teased. \"I can't promise no underwear. Now go get in bed so I can fix your stocking.\" \n\nI smiled and went to the bedroom. I stripped all of my clothes off and posed in the middle of the bed. Andy came in a few minutes later and immediately started laughing. He crawled over me and kissed me deeply. I swiped my tongue over his top lip and sucked his bottom one in. His lusty moan had me grinding against his thigh. \n\n\"Fucking love you, baby,\" I moaned into him. \n\n\"I love you, too,\" he said breathlessly and urgently. His hand wrapped around my cock and I almost came right then. He stroked me slowly. \n\n\"I want to see your body,\" I growled. He stood and started removing clothing. His eyes stayed on mine. \"You're fucking sexy,\" I told him. His smile made my whole body burn. Not with lust, with love. I'd walk through hell for this man's smile. When he was gloriously nude he crawled back to me and lowered his head. He nipped around my cock. I hissed in a breath and of course, choked. Andy was over me instantly. \n\n\"Breathe, baby.\" I followed his lead and calmed down. \"Maybe we should wait,\" he said almost comically worried.\n\n\"Please don't leave me like this,\" I groaned.\n\n\"Baby, what if...\" I cocked a brow.\n\n\"Just be gentle and don't make any sudden movements,\" I grinned. He sighed his resignation and pushed me back. His stiff tongue fluttered over the head of my cock, lapping at the pre-cum that was bubbling out. \"Damn, baby, you'd probably be awesome at eating pussy,\" I teased. Andy furrowed his brow and grimaced. Then shook his head. I had to laugh at his blatant distaste. \n\n\"That's a gross word. Pussy. Do they call it that because it smells like tuna?\"\n\n\"Number one, what? Number two, how the fuck do you know what pussy smells like?\"\n\n\"Ya know, like a pussy cat? That eats fish?\" He said, adorably proud I himself. I laughed. Hard. \"And I've been with women before.\"\n\n\"Who? Other than your, 'I don't remember drunken romp with Leah?'\"\n\n\"I tried experimenting with one other girl in high school,\" he said defensively. Well, I'll be damned. \"Besides you made love to lots of girls on college. Remember?\"\n\n\"No, baby. I fucked girls in college. I've fucked my fair share of men, too. But I've only ever made love to you,\" I explained and ran my index finger over his bottom lip. \n\n\"Well, that'll definitely get my mouth on your dick,\" he smiled adoringly at me. He bent his head again and suckled my fleshy tip. He went lower and began to bob. Because of my lack of sex, it didn't take long before I felt my orgasm coming. \n\n\"Oh damn. I'm fucking close,\" I gritted. My seed flooded Andy's mouth. I watched in fascination as his throat muscles worked to swallow my essence down. When he'd sucked me dry, he crawled over me and licked inside of my mouth. I tasted myself on his tongue. I felt his erection laying heavily on my thigh. \n\n\"Let me taste you,\" I murmured into the warm cavern of his mouth.\n\nHe pulled back and glared. \"No,\" he stated firmly. \"You've had too many coughing fits today.\"\n\n\"Then jerk off and come in my mouth. Please baby, I want to taste you,\" I made my needy request. I saw his eyes close and his nostrils flare. I'd won. He pushed me back and started jerking himself. At first it was slow and rhythmic, then quick and rough. Exactly like I do to him. I smiled at the thought. He crawled up and shoved the head of his cock in my mouth. At the first hint of suction he was coming. Hot and long. I swallowed compulsively. He tasted so good, I had to moan at his tangy saltiness. He hissed and grunted as I sucked until his cock began to soften. He laid down beside me an curled into me. I waited an hour for his breath to even out before I snuck out to make sure Santa left his gift for Andy.\n\nAndy 8\n\n\"Daddy! Daddy!\" My bed bounced. \"It's Christmas!\" I was so glad I'd put my boxers back on last night. Alex had put his on, too. I looked at the clock. \"Emma Marie it is five thirty in the morning,\" I groaned. Alex mumbled and roughly rolled onto his side. \"Come here,\" I whispered to Emma. I cuddled her in my arms and dozed back off. Apparently she did, too, because it was Alex's voice that roused me a second time. \n\n\"Merry Christmas, my babies. Wake up,\" he said softly. I blinked my eyes open and squeezed my little girl tight. I rolled to see my gorgeous man standing over me. He leaned down and kissed me softly. \"Merry Christmas. I love you.\"\n\n\"Mmm. I love 'you'.\" He kissed me again.\n\n\"When did she come in?\"\n\nI scoffed. \"Five thirty.\"\n\n\"Wake up, princess. Santa came to see you,\" Alex whispered in Emma's ear. She blinked her blue eyes open and smiled like a little angel. \n\n\"Presents?\" She asked sleepily. Alex nodded. She jumped up and ran toward the living room. I grabbed my pajama pants and followed behind Alex. \"Oh my goodness! Daddy! Look!\" Emma shrieked. Alex was right. That reaction was priceless. \n\n\"Wow. You must've been a good girl this year,\" I feigned my shock. Emma began digging through the tower of stuff that took me two hours to lay out. After she'd successfully identified and informed us of every gift we decided to open presents. As Emma said, the real presents. She passed out the gifts. Her pile was taller than she was and mine was nothing to balk at. I almost felt bad that I didn't get more for Alex. One look at his bright smile, though, and I knew it wasn't about what 'he' got for him. \n\n\"Can we open them now?\" Emma gasped. \n\n\"Have at it, baby girl,\" Alex laughed. I noticed he tried to hide a cough. I moved closer to him and pulled his head to my shoulder. We sat back and watched Emma open gift after gift. Gleefully shouting at each one. When she got to the necklace Alex had bought her my little girl cried happy tears. It was a small gold chain with a ballet slipper pendant. It had three pink diamonds on it. Alex told her it was one diamond for each of us. I can't describe the emotion that I felt seeing my man make my daughter so happy. There are no words. \n\n\"Your turn,\" I said to Alex after Emma's melee. He opened the first one with the same excitement we'd seen in Emma. When he pulled out the tattered copy of Anna Karenina he looked at me with confusion. \"Read the dedication,\" I told him. \n\n'My dearest Alexei,\n\nYou may believe this is a novel about a woman's fall in society. It may have begun that way, but in the end Mr. Tolstoy fell in love with Anna. Some believe he viewed himself as Vronsky. A man that finally had the one he loved, but was unable to hold her. You were right about one thing. You, my love, are not Vronsky. You will hold me forever.\n\nForever yours,\n\nAndy'\n\nHe sucked in a breath and looked at me, his eyes watery. He gave a jerky nod and put the book down gently. \n\n\"That's a first edition in Russian,\" he said hoarsely. I nodded. \"It's too much.\"\n\n\"Not for you, baby. I expect you to read that to me.\" He hugged me tight and kissed my lips. \n\n\"Open mine, Alex. Open mine,\" Emma said, bouncing on her knees. He opened the next gift. It was a bear that she \"built\" at the mall. It was dressed in a suit and sunglasses. When you squeezed the hand Emma's voice said, \"I love you, Alex.\" He laughed.\n\n\"I love it, sweetheart. I'm gonna let him sit at my desk with me at work.\" He opened his other presents. And yes, he got underwear. \n\n\"Your turn,\" he said, popping a piece of candy from his stocking in his mouth.\n\n\"You're worse than a kid,\" I admonished. \"We haven't had breakfast.\" He smiled and popped another piece.\n\nI started on my gifts. There were so many. Clothes, electronics, movies. Some of my favorites were just the small things. A metal Star Trek lunchbox, because I'm just nerdy enough to like that and inside was a porn called Star Tricks. I laughed for a good five minutes about that. I also got a Tardis cookie jar and a set of communicator shaped cuff links. \n\n\"Wait, daddy! There's a card addressed to you,\" Emma said as I was picking up paper. She handed it to me. I didn't recognize the handwriting. I looked at Alex who shrugged. I opened it and pulled out a note. 'Check in the place we first made love'. I looked at Alex again and stood to go into the bedroom. I found another envelope on the nightstand. Inside was a phone number and a note 'text me for your next clue'. I went back to the living room and texted the number. It wasn't Anya, Jack, Ben or Raine. I had their numbers. \n\n'Go to the first place you blew my mind'\n\nI went to the shower. Inside were the words 'Will You' written in bath crayons. My heart sped up. I ran to living room to see Alex on one knee holding up a platinum band with three black diamond running vertically. \n\n\"Marry me?\" He asked. My eyes stung as I dropped to my knees in front of him. I pulled him to me and kissed him desperately. \"Is that a yes?\" He chuckled. \n\n\"That's a hell yes.\" I kissed him again. \"Yes.\" I kissed him more fiercely. \n\n\"I thought...\" He kissed me. \"We'd go...\" He kissed me again. \"To Napa...\" Another kiss. \"Have the wedding there?\" God, I loved him. I kissed him hard. \n\n\"Can I be the flower girl,\" Emma asked. \n\n\"Yes, baby girl,\" Alex smiled and hugged her. He kissed her head and held her in his arms. \n\nThe doorbell chimed. \"That's probably Granny!\" I got up to let my mother in. When I opened the door I almost slammed it back. Darkening my doorstep was Alex's mother. \"Can I help you?\" I sneered. \n\n\"I'm looking for Alexei,\" she said magnanimously. I opened the door wider to let her in. \n\n\"If you upset him, I will remove you from my home physically if need be,\" I said lowly as she passed me. Other than a slight widening of her eyes she did not acknowledge my threat. I followed her to the living room, where Alex was helping Emma put on her new necklace\n\n\"It's my favorite color, Alex. Thank you,\" Emma said delightedly and hugged him. \n\n\"Only the best for you, baby girl,\" Alex said into her hair and kissed the top of her head.\n\n\"Alexei?\" His mother spoke. \n\n\"Mama? Chto ty delayesh' zdes'?\"\n\n\"English, Sasha. Remember? I was going to see Anya, but I decided to stop here first,\" she said. \n\n\"Mama, I don't think going to Anya's is a good idea,\" Alex said warily.\n\n\"I've spoken to her already. I was invited. I have...some apologies to make,\" she said softly. Alex blinked in astonishment. \"To you to, Sasha.\"\n\n\"Mama, don't. Not today,\" he warned. \n\n\"Sasha, please hear me out,\" she cried softly. \n\n\"Alex,\" Emma whispered. \"Why is that lady calling you Sasha?\" Alex pulled Emma to his lap as though she were grounding him.\n\n\"It's a nickname, baby. Like Andy. Or Em,\" Alex explained. \"It's Russian.\"\n\n\"Hello, young lady,\" Alex's mother said. \"And who might you be?\"\n\n\"Emma Marie Grayson,\" Emma said formally. Alex's mother smiled. It transformed her completely. She was a very beautiful woman. Her hair was a honey streaked blonde. She had the same hazel eyes as Alex and Anya. \n\n\"Well, Emma Marie Grayson. I am Katya Fedorova Bronski Vasin. You can call me Katy.\"\n\n\"You have a long name,\" Emma said wide eyed. \"Is it Russian like Alex's?\"\n\n\"Yes it is,\" Katy smiled. \n\n\"Alex has taught me some Russian. Do you want to hear?\" Katy nodded at Emma and beamed. \"Privet. Kak dela? It means, 'Hello. How are you.\"\n\n\"Very good, rybka,\" Katy said.\n\nAlex chuckled. \"She called you a fish,\" he said quietly.\n\n\"A fish?\" Emma laughed. \n\n\"Mama. I'd like to properly introduce you to Andrew,\" Alex said, standing. He moved behind me and wrapped and arm around my waist. \"My fianc\u00e9.\" There was a small flinch from Katy. \n\n\"Andrew, nice to meet you,\" she said, offering her hand.\n\n\"Mrs. Vasin. Merry Christmas,\" I responded.\n\n\"To you as well. Forgive me for being so rude before.\"\n\n\"In the past,\" I said. And it was as long as she treated Alex with respect. \n\n\"Sasha, I must be going. I would like to speak with you this week though?\" \n\n\"Da, mama. Na etoy nedele,\" Alex answered and kissed both of his mother's cheek. \"Schastlivogo Rozhdestva, mama.\"\n\n\"Schastlivogo Rozhdestva moy rebenok,\" Katy smiled. \"Emma, lovely to meet you, rybka. Andrew, take care of my son,\" she said and offered me a small smile. And like that she was gone. \n\n\"That was the weirdest fucking thing ever,\" Alex said with a bemused wrinkle in his forehead.\n\n\"Language!\" I chided. \"But, yeah. Weird.\" Alex kissed my ear and went to help Emma pick up her new toys. I watched the two of them with more love than I'd ever felt before. ",
        "Alex epilogue\n\n\"Mama, perestan'!\" Anya whined. \n\n\"YA pytayus' pomoch', Anya,\" Katy defended. She went back to peeling potatoes. I was picking up on more and more Russian. I could figure out Anya told her mother to stop and Katy said something about helping. Anya and Alex spoke Russian much more often now that Katy had become a more permanent fixture. \n\nThings were still rocky between all of them, but they were trying. Alex would get so upset with his mother he would start cursing in Russian and pacing the house. \n\nStrong arms wrapped around my waist and soft lips brushed across my neck. \"What are you doing, baby?\" Alex asked in his bedroom timbre. \n\n\"Watching your mother and sister argue,\" I answered.\n\n\"That's a mood killer,\" he laughed. \n\n\"I'm not fucking you at your mothers house anyways, so it's a moot point,\" I scoffed. Alex chuckled, causing his warm breath to hit my neck. \n\n\"Bet I can change your mind,\" he whispered devilishly. I shivered in anticipation. I glanced sideways at him and pursed my lips.\n\n\"No,\" I said firmly. \n\n\"You can't say no to me. Anymore than I can say no to you,\" he licked below my ear. My breath hitched. \"Come on. It'll just take a minute. I swear.\"\n\n\"That doesn't speak very highly of you,\" I goaded. \n\n\"Okay fifteen minutes,\" he amended lightly. \"Come on. I need to be inside you.\"\n\nI was saved by my daughter. \"Alex! Vy obeshchali!\" Alex was teaching Emma to speak his language. She was picking it up quickly and they loved to laugh when I had no clue what they were saying to each other. It could have been about the weather, it could have been about how old dad's a dork.\n\n\"Promised what?\" Alex asked Emma. \n\n\"That you'd show me babushka's crown,\" Emma bounced on her toes. \"She said I could wear it at the wedding.\" \n\n\"Yes, rybka, you most certainly can. It's not a crown though. It is a genuine Russian tiara like the one worn by the Tsarina Alexandra,\" Katy said to Emma while leading her down the hall.\n\n\"Now?\" Alex said in my ear. I blew out a breath and turned to face him.\n\n\"You are insatiable, you know that, right?\"\n\n\"It's all you, baby. I can't get within four feet of you without getting hard. It's that tight ass and that made to suck cock mouth of yours,\" Alex said crudely. \"I'll tell you what, you let me get inside that ass now and I'll let you fuck me stupid tonight? Deal?\"\n\nHe kissed my lips before I could answer. I groaned into him. \"Will you two get a damned room?\" Anya squawked.\n\nAlex laughed. \"I'm trying to. He's playing coy.\"\n\n\"That's so gross, Alex,\" Anya retorted. \n\n\"Come on,\" he tempted and took my hand. He lead me down the hall to his old room, which we'd already broken in. Several times. Alex always got his way. Always. He kicked the door shut and started undressing me. \"I want you so bad.\"\n\n\"Yeah. Yeah. Sure. Sure. I know you're only here for my body,\" I scoffed in mock indignation. \n\n\"Mmm,\" he muttered as he ripped my pants down. \"That's a beautiful cock,\" he said. \"I can't wait to feel it pounding my ass tonight.\"\n\n\"You're so romantic,\" I retorted dryly. \n\n\"You want romance, baby?\"\n\n\"It would be nice, yes,\" I teased as Alex stripped himself.\n\n\"I'm going to marry you next month in a vineyard in Napa Valley. Then I'm jetting you off to Bora Bora for two weeks, where we can lay out in our private cabana all day, swim in the crystal blue waters, have dinner overlooking the ocean, spend the evening soaking in our private hot tub and make love under the stars all night. Is that romantic enough for you?\" He punctuated his question by nipping my earlobe and running his tongue around the shell of my ear.\n\n\"Yeah,\" I said hoarsely. \"That'll do it.\"\n\n\"Good. Because right now, romance isn't my goal, baby. Right now? I.\" He nipped my neck. \"Want.\" He kissed my chest. \"To fuck.\" He pushed me onto the bed and climbed over me. He was in playful Alex mode. It was my favorite. \n\nHe raised up and stroked my cheek. \"What did I do to deserve you?\" He asked quietly. I breathed in deep, letting my emotions show. \"Thank you, Andy.\"\n\nMy eyebrows drew in. \"For what?\"\n\n\"For showing me the man I wanted to be.\" There were no words to say, so I lifted my face to capture his lips in a searing kiss. \"I love you. I'd die for you.\"\n\n\"Alex,\" I whispered. He grinned and once again everything in my world was right. \"I love you so much.\""
    ],
    "authorname": "Devinamaria",
    "tags": [
        "fbi",
        "doctors",
        "drama",
        "single parent",
        "mob",
        "artists",
        "tattoos",
        "crime drama",
        "christmas",
        "bisexual"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/twisted-ink-4-alex"
}