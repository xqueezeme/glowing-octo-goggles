{
    "title": "Fictional Fantasies Ch. 06",
    "pages": [
        "Dear Reader - Please read the previous chapters of Fictional Fantasies first, to fully appreciate this story. Please do also provide your feedback which will encourage me to continue publishing subsequent chapters!\n\n*****\n\nMeg arrived back home later that afternoon. As she pushed open her front door, she was confronted by a hand-written note on the doormat. It had been written in black ink, using a fountain pen, by a bold, confident hand that she recognised immediately. Consequently, Meg's pulse shot up through the roof as she closed the door behind her and focussed on the note.\n\n\"Hey there sleepyhead. It seems that I am struggling to keep away from you. I've arranged for a delivery to be made to your house tomorrow. I look forward to testing it out with you on Saturday night. If this is acceptable, leave your front door unlocked and be ready, willing, able and blindfolded, at 9pm x\"\n\n**********\n\nMeg's first thought, as she unwrapped the delivery the following day was utter relief that it had been well wrapped. She wasn't sure her embarrassment levels could cope with a delivery men (for it took two of them to carry it) knowing what the enormous package actually contained. The delivery had turned out to be a highly unusual chair that now took centre stage in her living room, although it would no doubt have been better suited to a porn film set. The chair had arm, leg and body sections that could move independently, with various straps, bindings, levers and pulleys. In short, it was a chair designed to give complete, unimpeded access to the most intimate areas of whoever was unfortunate enough to be strapped into it. \n\n**********\n\nAt five minutes to nine on Saturday night, and having thought of nothing else all week, Meg experienced a heady feeling of sexual excitement pumping uncontrollably around her body. As instructed, her front door was unlocked, the lights were dimmed and a blindfold was at the ready. A naked Meg could already feel the blood flowing to her core as she very nervously awaited his arrival. Maybe, as he'd implied, she was relatively innocent, although this incredibly talented man was certainly making her less innocent with each occasion that they met.\n\nHeart racing, Meg manoeuvred herself carefully into the chair, tied on her blindfold and waited in heady anticipation. She doubted that he would expect her to already be sitting in the chair and wanted to try and surprise him. The chair certainly wasn't designed for relaxation but rather to keep the victim in a permanent state of unbalanced unease. Her head, back and each buttock rested on small, individual pads whilst her legs were pushed open extremely wide, feet raised high in strategically placed stirrups. This meant that her body never found any real stability and she was continuously trying to re-position herself. Despite this, Meg could feel her juices running from her engorged pussy in blissful anticipation of what would shortly follow.\n\nShe didn't have to wait long. Only a few minutes had passed when Meg heard the unmistakable sound of somebody letting themselves into her home. A stranger? No, he could never be described as that. Assuming it was him and not a burglar, in which case they might find more than they'd bargained for. He didn't immediately speak and Meg felt momentarily fearful that the intruder may not actually be him.\n\n'Good evening Megan,' said a familiar voice eventually and Meg felt her lust ramping up and her fears subsiding.\n\n'Hello,' she replied.\n\n'You look delicious,' he said and Meg thought she heard his voice falter slightly. 'And I'm famished.' Meg smiled.\n\n'I thought we'd try something a little different tonight,' Jack explained. Meg could hear movement at the side of the room and her pulse jumped with the excitement of what he might have planned. She was entirely vulnerable to him in this position and had no idea when or how he would touch her. \n\n'As you know, you have five senses,' he continued. 'Research suggests that when one of those senses is removed, the remaining four senses are heightened. We've already removed your sight and now I'm also going to be putting headphones on you. Making you unable to hear what is happening should send your sense of touch through the roof, as your body tries to compensate for having only three senses remaining. Your orgasms should be off the scale.'\n\n'Is this what you want? Your fantasy?' asked Meg.\n\n'No, I want to do this for you,' he explained.\n\n'I enjoyed the nights we made love.' Meg was sure she could feel his discomfort. There was a long pause before he responded.\n\n'I want to give you an unforgettable night, Meg. And it starts with these,' he replied, securing a pair of sound blocking headphones over Meg's ears. Soft rock was playing. Bon Jovi. And then, through the silence and darkness, Meg could feel she was being strapped into the chair. Her wrists were tied off above her head, whilst her wide open thighs were pushed even further apart and then securely fastened down. She pulled gently on her bindings to test them; they held firm. There was clearly no escape.\n\nA smell came sharply into focus. Chocolate spread. Unbeknown to her, Jack was holding his fingers, coated in Nutella, beneath her nose, before slowly smearing them between her legs, visiting every nook and cranny until she was completely covered and bubbling in anticipation. Meg gasped loudly as, very slowly, like a cat licking cream, Jack lapped his way around Meg's most intimate area, cleaning up every last bit. Whilst Nirvana played softly in her ears, Meg felt herself being pushed slowly into a world of ecstasy, every touch exaggerated. Every caress magnified. At one point, Meg was sure that when his lips and tongue were firmly wrapped around her clit, Jack breathed out a long and satisfied 'Mmmmm'. The vibrations were intense and heightened her arousal.\n\nJack's long, knowing fingers began to run across her torso and nipples, making Meg's hips jerk desperately and causing her seating apparatus to unexpectedly shift. Jack's fingers then ran beneath her and Meg took a sharp intake of breath; he seemed to be pushing something lubricated and firm against her bottom. It wasn't his finger this time though. If Meg had to guess, not that she'd ever experienced it before, it was a butt plug. \n\n'No!' she said loudly. Just for a moment, one headphone was lifted from her ear.\n\n'Consider this one of your submissions, Megan,' whispered Jack, immediately replacing the headphone.\n\nShe opened her mouth to protest again but Jack was ready to stop her with his teasing tongue which played against hers and provided a distraction as he gently but firmly pushed the lubricated plug against her. At first, Meg's body fought back refusing entry but the slow, unyielding pressure being applied by a determined Jack eventually won. Groaning, Meg felt herself being stretched wider and wider as the object slid further inside her. At the maximum width of the plug, her cries became thick and rasping. Jack moved to stroke her face tenderly, offering silent support, momentarily lifting a headphone away from her ear once again.\n\n'Breathe through your mouth, sweetheart,' whispered Jack. 'And relax as much as you can. I promise it will be worth it.'\n\nAt last, the pressure eased slightly as the tapered plug, fully inserted, found its natural resting place. Meg squeezed her internal muscles cautiously, excited by the way he was making her feel. Meg was aware that restrained as she was, she would be unable to remove it herself and knew that no amount of pleading with this man would ever get him to be merciful. She was entirely in his hands and she felt sexy, wanton. She was his plaything. And he was hers. As Jack ended their kiss, he rotated the plug, causing a volley of pleasure and anticipation to shoot through Meg's body.\n\nSuddenly, the chair in which Meg sat began to rock rhythmically as though she was attached to a gentle swing. Jack must have released a catch and it was from this point that the slow torture would really begin. For every forward rocking movement, Meg's clit came marginally into contact with a pair of vibrating rabbit ears. The unexpected contact of it made her gasp at first, but then the anticipation built as Meg became desperate for its ability to ease her growing frustration, if only the contact would last more than a brief moment. At the end of every backward rocking movement, Meg could feel the very gentlest of tugs on her butt plug. She couldn't help but gasp each time, as the resistance caused the flared end of the plug to slightly stretch her desperate, unsatisfied body. Unable to either see or hear him, Meg could only imagine the glee and pleasure this man was getting from making her cry out so uncontrollably without even laying a finger on her.\n\n'No,' she groaned. 'Why do you tease me so much?'\n\nNot content with the desperate, animal cries Meg was already making, Jack ramped things up further by gently pinching Meg's nipples using his thumb and forefinger, manipulating her sensitive body still further. He then deftly rolled on a condom and position himself carefully next to Meg. At first, as she rocked forwards and backwards, she was blissfully unaware that his huge, erect cock was just millimetres from her, waiting to give her untold pleasure. Jack manoeuvred himself nearer by leaning in and Meg cried out as the very tip of his cock brushed her incredible wetness.\n\n'Oh God!' moaned Meg, as he gently stroked his wet thumbs up the centre of her feet, causing Meg's body to spasm violently.\n\n'Please, please, please fuck me,' she begged, trying to appeal to his better nature, despite the wall of silence she was experiencing. 'You can't imagine how much I need you right now.'\n\n'So impatient,' murmured Jack to himself. 'Poor, sweet Meg, being teased and made to wait.' And with that, he stepped back and removed himself from her range. Smiling to himself, he flicked a switch on his phone and Meg's hips bucked forwards.\n\n'Jeez-sus! You cannot do that!' groaned Meg, as the butt plug which her body had almost begun to accept began to vibrate slowly, pulsing randomly on and off, so that Meg could never second guess the next attack. The chair continued its slow rocking, as Jack repositioned himself in range of Meg once more and slowly allowed just the smallest fraction of his massive cock to penetrate her. By this point, Meg seemed to have given herself over to the myriad of vibrations and sensations coursing across and within her tortured body. With her legs strapped wide open, she could offer no resistance as she slowly rocked further and further onto Jacks huge, swollen erection. Within moments, Meg's deep internal muscles had convulsed out of control and her screams filled the house. Taking the entire length of him, it felt as though every possible nerve in her body had been dedicated to pleasure. She had never experienced sensations like it before and doubted she ever would again. Jack managed to maintain control for an impressive length of time, driving an exhausted Meg from one climax to the next in a never-ending combination of sensations. Eventually, Jack joined her in orgasm, coming with a guttural roar that Meg heard, despite her headphones.\n\nJack quickly ceased all sensations and vibrations for Meg. He gently removed the butt plug, causing Meg to groan one final time, despite her exhaustion. Remaining inside of her, Jack leant down to kiss Meg tenderly on the mouth. On and on their kiss went, wet, desperate tongues exploring, teasing, testing, his stubble scraping almost painfully across her face as he overwhelmed her with his passion. To Meg, that kiss was glorious and there was no doubt it had significant meaning behind it. It was as though something had changed between them, and a sudden realisation that they were heading down a dangerous road hit her. At length, Jack broke their kiss, but continued to stroke her naked body for a long time afterwards. Eventually, he pulled out of her and Meg's exhausted body flopped back against the chair. Meg was aware of her restraints being undone and finally her headphones were removed.\n\n'Goodbye my beautiful girl,' said Jack shakily and Meg heard his departing footsteps followed by the front door closing.\n\nStartled, by both his words and demeanour, Meg hastened to remove the blindfold but by the time she had grappled with the chair, stood up on her dangerously shaking legs, grabbed a blanket and looked out of her front window, there was nobody to be seen. Looking back at the room, however, Meg saw a memory card on her table. She quickly slotted the card into the TV and gasped as an image of herself appeared, from earlier that evening, strapped into the chair and orgasming hard. Fascinated, Meg caught a tantalising glimpse of his buttocks, one hand and the most glorious cock she had ever laid eyes on. After she had come for the final time, the camera had clearly been turned to face the wall but Meg suddenly realised that she could hear talking. She rushed to turn the volume up on the TV and listen to what was being said, which the headphones had previously prevented her from hearing.\n\n'...and I don't want you to think I've ever recorded you before. I haven't. This is the only time and you now have the only copy. But what I really want to say is that I'm sorry Megan, but this is my last visit. I won't make contact with you after today and please don't try and find me. I'm doing this, selfishly, for my own protection. You see, I find that I am falling for you. I desire you completely. I want to be beside you each day and inside you every night. But you have no idea who I am. You wouldn't recognise me if I passed you in the supermarket or stood next to you in a bar. Whereas you consume my waking thoughts and then go on to haunt my dreams. This isn't a healthy place for me to be. I've been a screw up with relationships my entire life and, as much as I don't want it to, this has to end. Tonight. I'm sorry. I will miss you more than you can know and I can currently comprehend.'\n\n********\n\nMeg struggled through the weeks that followed that night. She felt empty and sad, as though a glorious and exciting part of her life had vanished. Meg found that Luke and Beth's impending wedding was the only shining beacon on an otherwise very dark horizon and even the thought of that occasionally filled her with dread. She would be turning up to celebrate the happy joining together of two people in love, at a party full of strangers when she felt alone and unwanted. Despite his request, Meg had considered trying to find out who her mystery man was and meet up with him again, but she had next to nothing to go on. \n\nOne possible way forward was to return to Puffin's Reach, but then what would she say to the homeowner when she got there? Something like 'Hi, you don't happen to know the name and address of the bloke I had sex with in your Jacuzzi, do you?'. It simply wasn't going to work. An alternative was to try and speak to the owner of the writer's retreat who had handed over the key to Meg's room. However, nobody was going to admit to doing that, were they? Every potential avenue she considered turned out to be a frustrating cul-de-sac.\n\n**********\n\nLuke hadn't had time to meet up with Meg on the run up to his wedding but from their telephone conversations, she got the impression it was a full on church and white wedding affair. On the morning of the big day, Meg had therefore taken a good deal of time with her appearance, wearing a pretty floral dress and jacket that seemed a sensible choice to counteract the late hot summer that the South of England was currently experiencing. Meg was well aware that she was the only college friend Luke had kept in touch with and so didn't expect to know anybody else at the wedding. She was therefore extraordinarily surprised when, whilst meandering up the path to the church, she caught sight of one amazingly gorgeous gardener. He raised his hand, grinned at her delightedly and began to make his way over. Meg cast a quick glance behind her, in utter disbelief that this delectable man, in full morning suit, should be approaching her.\n\n'Hi,' he said. 'It's Meg, isn't it?'\n\n'Um, yes,' stuttered Meg as he bent down and grazed his lips across her cheek. She breathed in the scent of him and it set her nerves tingling in anticipation. Meg felt much the same way she imagined she would if being unexpectedly approached by a large, untamed tiger; thrill at his immediately proximity, coupled with a massive surge of fear for her safety.\n\n'I've got very strict instructions to look after you today. Unfortunately, for the next hour I'm going to be a little tied up,' he grinned. Meg found herself flushing at being the sole focus of attention of this astonishing guy, hardly taking in a word he was saying but instead just concentrating on watching his lips move and trying not to think about him being very strict. Or being tied up. He beckoned over a young girl with blonde ringlets and an infectious smile who came bounding over.\n\n'Hi Uncle Kimmy!' she giggled.\n\n'Cheeky!' laughed Jack. 'Annabel. This is my friend Meg. Please could you look after her for me, during the church service?'\n\n'Yes. Hello Meg.'\n\n'Hi Annabel,' replied Meg, massively impressed with herself that she'd manage to sound even vaguely articulate.\n\n'Uncle Kim? What's wrong with your voice? It sounds funny.'\n\n'Frog,' said Jack, slightly sheepishly.\n\n'Ribbit!' giggled Annabel.\n\n'I'll catch you later, then?' smiled Jack, holding Meg's gaze. 'Now that I can be confident you're in such safe hands.' Meg flushed as he turned and loped back towards the church, Meg was aware of her mouth hanging open and made a conscious effort to close it and concentrate on Annabel.\n\n'I really like your bracelets!'\n\n'If you like them,' said Meg, holding her numerous bangles up towards Annabel, 'then why don't you choose one to wear yourself?'\n\n'Really? Am I allowed?'\n\n'Of course,' smiled Meg and assisted Annabel in selecting a silvery-blue bangle that had caught her eye. 'Do you think we'd better go and get a seat in the church? It must nearly be time.'\n\n'OK,' replied Annabel, rotating the bangle slowly on her wrist. 'But we've already got seats saved for us.' And with that, she picked up Meg's hand and guided her into the church.\n\n'Tell me, the man you called Uncle Kim. Isn't his name Jack?' Of course, Meg knew his name was Jack. Since their brief meeting when Luke had introduced them, he had occupied far too many of her thoughts, both waking and sleeping.\n\n'Yes,' giggled Annabel. 'Uncle Jack. He's a vet. He mends sick animals.' So not a gardener then, thought Meg.\n\n'Oh right. That's nice. So why did you call him Uncle Kim?' she asked.\n\n'Well, he's my Uncle. And it's funny.'\n\n'And why Kim?' persisted Meg, as they walked through the wooden doors of the church and started to make their way down the aisle. Most of the pews were filled to capacity and there was a tangible excitement in the rumble of conversation taking place. As they walked down the aisle, Meg's eyes scanned the congregation and she clocked the back of Luke's blond and Jack's dark heads leaning close together at the very front. It looked as though Jack was the best man.\n\n'Well I call him that because our favourite film to watch together is Kindergarten Cop.' Meg was losing the plot here and simply did not understand the reference. 'But Mummy and Uncle Luke call him Kim because of the nursery rhyme with a candlestick, I think.' Annabel pulled Meg into the second row and sat down, twirling her bangle around her wrist once more.\n\n'Are you sure we should be sitting here?' asked a distracted Meg, looking around. 'Aren't these seats reserved for family? Hang on, what do you mean Uncle Luke? Luke is your uncle also?'\n\n'Of course, silly,' giggled Annabel. Both Jack and Luke turned to look at who was laughing. Luke smiled and raised his hand at Meg, who grinned warmly back. Her eyes flitted across to meet with Jack's scorching hot gaze before she looked down at the floor in embarrassment.",
        "'So, Luke and Jack are brothers?' confirmed Meg slowly, as the bridal march started and the guests stood as one. Annabel nodded.\n\n'Oh, look. Auntie Beth looks so pretty,' she whispered. Meg had to agree. The bride looked completely stunning. As she turned to clock Luke's expression, her heart melted, to see her friend so happy and in love. Dabbing away a tear, she caught Jack's eyes once more and felt a dangerous, yearning hunger. Staring intensely at each other, neither seemed capable of breaking the connection. It was only when the bride physically walked between them, as she made her way up the aisle to the front of the church, that Meg was eventually able to tear her eyes away. Gulping down air and leaning heavily on the pew infront, Meg's shaking legs were barely able to hold her up and she was shocked at the strength of her body's response to him. \n\nThroughout the service, Meg's mind was buzzing with information. Jack and Luke were brothers? But Jack's family nickname was Kim, because of a nursery rhyme about a candlestick and a film containing Arnold Schwarzenegger?\n\nDuring a rousing rendition of 'All Things Bright and Beautiful', Meg took the opportunity to try and clear things up with Annabel, who seemed to hold all the answers.\n\n'What's the nursery rhyme with the candlestick?' whispered Meg.\n\n'Jack be nimble, Jack be quick, Jack jumped over a candlestick' replied Annabel, in a sing-song voice. As the word \"nimble\" was spoken, Meg felt an ice-cold wave travel from the tip of her head down her face and neck and through the rest of her body. Her hand flew to her mouth. Surely not? Surely she hadn't made love on multiple occasions to that mind-blowingly gorgeous, astonishingly sexy man?\n\n'And why Kindergarten Cop?' she whispered urgently.\n\n'John Kimble, silly!' laughed Annabel, as the congregation sat back down. 'Uncle Jack does the best impression of John Kimble. Ever!'\n\nNimble Kimble.\n\nMeg sat stunned throughout the remainder of the service, which was mercifully short, and avoided all potential eye contact with the front pew. At last! At last, she knew the identity of the man who had occupied almost every moment of her thoughts for months. He had taken Meg to previously unimaginable sexual heights; he'd thrilled her, teased her, held her, shocked her, helped her and comforted her. Wowed her...and then left her. Meg felt a cold chill pass over her entire body. He didn't want her. The most glorious, sexy man she could imagine. The most handsome man she had ever seen. All the things that they had done together. They turned out to be meaningless. Meg irritably brushed a tear away from her cheek.\n\nBut why hadn't she immediately recognised his voice when they'd met before? She knew the answer to that almost instantly. When they'd met in Luke's kitchen, Luke had asked Jack whether he had a cold. And today, Annabel had asked about the frog he'd had in his throat. Jack had altered his voice the two times they'd met face to face, so she didn't recognise who he really was.\n\nFrom a far away place, Meg sensed the congregation rise around her for a final time as the happy couple exited the church. Slowly, she stood to join them. Meg had an overriding feeling that she had to get the hell away from this place and as far as possible away from Jack. Thanking Annabel for looking after her so well and making her excuses, Meg slipped out a side door of the church and ran to her car without being seen. Driving away, she had no idea where she was heading. Her only thought was to put space between herself and Jack. She needed to think. At last, she actually knew the identity of her mystery man; the elder brother of one of her best friends. And he was unbelievably hot and incredibly sexy. Everything she could ever want in a man, and some. \n\nBut the things he'd done to her body. The boundaries he'd pushed. The way he'd made her feel. Could she seriously go to the reception and act normally in the knowledge of who he really was? And what if it had just been a game to him? What if he didn't really want her, not long term, and was just being kind when he explained he was backing off for his own sake. Perhaps he'd done this a hundred times before. Two hundred even! Keeping count clearly wasn't his forte. Could she cope with being rejected by the only person who had ever understood her. The only man who had ever given her exactly what she desired?\n\nIt took Meg the best part of an hour to talk herself into attending the reception. In the end, she decided that she must show her face for Luke's sake, if nothing else. Then she was free to leave at any time, after which she would never have to set eyes on Jack again. Making her solitary way into the reception, she was pleased to note that she had missed the line up, which would have been beyond awkward. Guests were sitting around tables chatting as their glasses were topped up by waiters, whilst children ran haywire across the dance floor, energetically pursuing balloons.\n\n'Meg! We thought we'd lost you!' exclaimed Luke. 'Is everything OK?'\n\n'Of course,' Meg nodded. 'Everything's great. I just took a minor detour and got slightly lost. Congratulations by the way,' she added, squeezing Luke tightly. 'I'm so happy for you. You're a perfect couple.'\n\n'Thanks. But I don't understand how could you get lost though? The church is less than a mile away,' said Luke disbelievingly.\n\n'There you are, Meg!' said a deep voice behind them and Meg felt her insides melt. It was the first time she'd heard his real voice outside of their secret meetings and it was making her body physically react in a way she couldn't control.\n\n'Here I am,' she stuttered, turning to face a towering Jack, an unreadable look on his face.\n\n'Can I have a word with you, please?' Meg hesitated and Luke looked downright confused, given that, as far as he knew, today was only the second time they'd ever met. 'In private? This way,' beckoned Jack. Meg shrugged at Luke and with shaking legs, followed Jack away from the safety of the wedding party, up a flight of stairs and along a wide corridor. Jack reached into his pocket for a card, stopping outside room 110. He stood back and held the door open for Meg to pass through first. Meg realised as soon as she'd stepped over the threshold that it was his bedroom. As the door banged shut, Meg turned to face him. Jack's face was deadly serious.\n\n'I'm sorry,' he began, leaning against the door to prevent her escape.\n\n'For what?' asked Meg. 'Dumping me?'\n\n'I didn't dump you.'\n\n'No, you're right. That would imply we'd had a relationship. Maybe discarding would be a more appropriate word.' Meg could feel a warm flush rising up her neck and fought back her threatening tears.\n\n'Meg, it is so not like that. You have no idea. Please...'\n\n'Leave it, Jack. This is Luke's special day. Let's just enjoy it and then you'll never have to set eyes on me again.'\n\n'No!' said Jack, his voice raised. 'Don't you get it? I want to see you. I have only ever told you one white lie. Everything else was entirely truthful. I was trying to protect myself when I left you. I didn't know what else to do. I didn't know how to handle it.' Meg paused a moment to let the obvious sincerity of his words sink in.\n\n'So, what was the white lie?'\n\n'That a friend of mine owned Puffin's Reach,' replied Jack.\n\n'Oh my God,' breathed Meg, her hand raised to her mouth. 'Did we trespass across a random stranger's garden that night?'\n\n'No,' replied Jack quietly. 'It's my garden. My home.'\n\n'Oh...'\n\n'Let me fix this, Meg,' he pleaded. 'Let me prove how I feel about you.'\n\n'How do you intend to do that?' frowned Meg.\n\n'Be my date tonight? Be my date to my little brother's wedding.'\n\n'I'm not sure that would work.'\n\n'It will work if you allow it to,' replied Jack masterfully. 'Shall we?' he asked, holding out his hand. 'Please?' Meg took it tentatively, a hot bolt of adrenaline shooting up her arm as her bare skin touched his and their fingers instantly entwined.\n\nAs they re-entered the reception, Jack led Meg up to the top table, where he had previously been seated. The faces of Beth, Luke and what Meg imagined were the parents of the happy couple looked confused and, in Luke's case, downright suspicious.\n\n'I'll just go and sort out another chair and some refreshments,' Jack said. 'Here, please sit down in my seat, Meg.' Meg did as she was instructed.\n\n'Congratulations, Beth. And you look absolutely gorgeous,' smiled Meg.\n\n'Thanks Meg,' replied Beth. 'Is something going on between you and Jack that we should know about?'\n\n'Exactly what I was going to ask,' said a confused looking Luke. 'I know Jack's skills in the arena of picking up women are legendarily fast but...'\n\n'Hey, steady on Lukie!' exclaimed a returning Jack, placing some extra glasses on the table and dropping himself down into the additional chair he'd brought with him. 'You don't want to put Meg off me straight away do you?'\n\n'But...'\n\n'It's really quite simple. Meg is here on her own and so am I,' explained Jack, pouring a glass of champagne for Meg. 'We agreed it made sense to spend the evening together as we are both without dates of our own. Now, be nice or I might have to alter my speech accordingly,' he joked.\n\nMeg was astonished to find herself very relaxed in Jack's company. Throughout dinner he was attentive to her, down to earth and very funny. After the five-course meal, he stood up and within seconds had the entire room eating out of his hand with a simply brilliant best man's speech. Jack went up even further in Meg's good opinion when he spoke so openly to the roomful of people, leaving nobody in any doubt about the love he had for his brother and wider family. After raising his glass for a final toast, Jack slumped down beside Meg to much clapping, cheering and foot-stamping, as the bride and groom took to the floor for their first dance.\n\n'Congratulations!' said Meg warmly. 'That was the best best-man's speech in history.' Jack didn't look at Meg but kept his eyes fixed firmly on the couple rotating around the dance floor.\n\n'I told Luke. I told him,' Jack murmured. 'I'm jealous of what he has with Beth. I want that.'\n\n'Don't we all,' sighed Meg. As the song came to an end, Meg glanced across at Jack to see tears forming in his eyes. She did the most natural thing she could think of and covered his hand with hers. Jack looked up in astonishment. Blinking quickly, he entwined his fingers with Meg's.\n\n'Dance with me, Meg?'\n\n'Of course,' she replied simply.\n\nAs Jack lifted her hand and led Meg to the dance floor, her heart skipped a beat. The music to the second dance was relatively slow and Jack pulled Meg close to his body. She lay her head against his chest and closed her eyes. She knew the shape and feel of his body so well. It felt like coming home. As they revolved around the dance floor to several more tracks, Jack gently stroked Meg's lower back. It sent a delicious tingling sensation rushing around her body and she could feel blood pooling between her legs. An involuntary groan escaped from Meg's lips.\n\n'Meg?'\n\n'Mmmmm,' replied Meg from a far-distant place.\n\n'Meg. Please kiss me.'\n\nMeg lifted her head and looked directly up into Jack's clear, honest eyes, feeling a familiar swooping sensation in her stomach.\n\n'No. I couldn't possibly do that.'\n\n'Why ever not?' he murmured.\n\n'To be honest, I'm a bit overwhelmed to find out that you're Kimble,' she grinned sheepishly. 'I'm going to need some time to process everything. Plus, the room is full of people. I'm a private person. Normally...'\n\n'I understand,' he smiled, squeezing his arms around her. Meg didn't know whether to feel disappointed or pleased with his response. However, her feeling of regret increased as she silently admonished herself for not taking advantage of an opportunity to kiss him, as they swayed across the dance floor.\n\n'Of course,' murmured Jack in Meg's ear a little while later. 'If I was feeling unscrupulous, I suppose I do still have one trump up my sleeve?'\n\n'You wouldn't!' stammered Meg. 'Not here.'\n\n'Submit Meg. By my calculations, it's the final one you owe me. Unless you'd like to build up any more debt in the future, of course,' he smiled.\n\n'OK,' said Meg slowly. 'But at the same time, I'm cashing in one of your submissions.'\n\n'You can't do that!' retorted Jack, twirling Meg around and then pulling her in close so he could murmur privately into her ear. 'Handing over control to me is kind of the point of complete submission.'\n\n'And yet I am doing it,' said Meg, a faint smile playing on her lips. 'Daring to challenge one of your rules,' she teased.\n\n'Very well, what do you have in mind?'\n\n'I will kiss you, but you can't kiss me back for one minute.'\n\n'Now, hang on!' replied Jack.\n\n'And if you do, I will simply turn around and leave.'\n\n'That sounds thoroughly unfair,' grinned Jack.\n\n'You don't need to tell me that,' replied Meg. 'Ready?'\n\n'Uh-huh,' growled Jack, subtly altering the location of his hands so they lay under Meg's jacket. He stroked up her ribcage until his hands came to rest against the underside of her breasts. There, Jack began to rotate his thumbs tantalisingly, just below her nipples. 'But you should know I'll get my revenge for this. There will be serious payback for your actions tonight.'\n\n'Mmmmm,' sighed Meg. She could barely wait.\n\nHeart racing, Meg stood on her tiptoes and raised her face up towards Jack's. His clear blue eyes gazed directly into hers and Meg momentarily considered bottling out, as she drank in the astonishingly sexy man she was about to dare to kiss. But then, she considered, she'd already done a damn sight more than kiss him before today and that thought alone helped her overcome her natural uncertainty. \n\nSlowly, Meg moved her mouth towards his and teasingly sucked Jack's lower lip gently into her mouth. The throaty groan he made was one of the best sounds Meg had ever heard. As Meg ran her tongue across Jack's lip, he used one arm to pull her body tight against his allowing her to become immediately aware of his already sizeable erection and taut, muscular, untamed body. Meg's eyes slid closed and she joined Jack in groaning deeply when his thumb grazed across one of her increasingly hard nipples. Despite the headrush she was experiencing, Meg continued to kiss his mouth all the same.\n\n'Is my minute up yet?' murmured Jack eventually.\n\n'Uh-huh,' agreed Meg, lost in the feeling of utter bliss. On hearing her confirmation, Jack leapt into action and began to kiss Meg like she had never before experienced. His mouth closed over hers and she felt the briefest flick of his tongue before he retreated, kissing the side of her mouth, before allowing his tongue to momentarily enter her mouth once more. It was a slow, torturous and highly frustrating experience which reminded Meg very clearly of the things he had previously done to her body, the easy way he took control and how much she was desperate to make love to him once again. By the time they walked away from the dance floor towards the top table, Meg was extremely flushed, ridiculously turned on and they were the talking point of the wedding.\n\n'I've slipped my spare room key in the pocket of your jacket,' murmured Jack as they neared the top table. 'Make your excuses in five minutes and meet me there.'\n\n'No,' whispered Meg. 'It's not right to miss Luke's wedding.'\n\n'Trust me, please,' said Jack desperately.\n\n'I'm aware of my brother's reputation,' laughed Luke as they returned. 'But this is very out of character for you, Meg.'\n\n'Ah, what can I say, Lukie?' joked Jack. 'Animal magnetism.'\n\n'You looked like you knew each other very well on the dance floor,' remarked Luke. 'Has there been something going on I should know about?'\n\n'As God is my witness,' said Meg solemnly. 'Before today, I have only ever set eyes on Jack during my two visits to your house.' Jack laughed. \n\n'It's true,' he agreed, as Luke shook his head and then turned around to speak to a well-wisher. A memory suddenly jolted into Meg's mind. She turned around to Jack and stared at him, her mouth open in shock. He wiggled his eyebrows at her and started back challengingly.\n\n'Oh, you bastard!' she whispered.\n\n'That took you long enough,' laughed Jack.\n\n'It was you! In the kitchen? While I was talking to Luke? You turned on the...' Jack roared with laughter.\n\n'All's fair in love and war, my gorgeous girl! Excuse me,' he said to the top table. 'I have some high priority best man duties to attend to.' And Jack walked away from their table and up to his bedroom, hoping that he had done enough to persuade Meg to follow.\n\n*****\n\nIf you enjoyed this story, please do vote, to enable others to find it. Thank you!"
    ],
    "authorname": "FenellaAshworth",
    "tags": [
        "control",
        "tease",
        "blindfold",
        "writer of erotic fiction",
        "orgasm",
        "stranger",
        "hot sex",
        "england",
        "handcuffs"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/fictional-fantasies-ch-06"
}