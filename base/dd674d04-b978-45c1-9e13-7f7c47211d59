{
    "title": "Mira Ch. 13",
    "pages": [
        "Lilith stood in the shadow of a large elm with several elders watching the sacrifices scurry about planning the handfasting of Liam and Mira. The entire town was focused on preparations for the handfasting. Though it wasn't standard for everything to stand still for one random ceremony, it was the town's way of avoiding thinking about the danger coming.\n\nAn older man with a long gray beard and wrinkled leather skin sighed heavily. \"The army is only a day or two off. We've no word from the vampire. Should we stop them and prepare for war?\"\n\n\"What war?\" Lilith harrumphed. \"If the army attacks us, no matter how weak Rillan Tiernay says they may be, we will be slaughtered as livestock. We've no weapons, we no knowledge of weapon use. What do you propose? Pitchforks and pails as swords and shields?\"\n\nThe old man shook his head and sighed again. \"I don't like waiting for death, Lilith.\"\n\n\"Isn't that what we do every day? We all die.\"\n\n\"Leave it to you to get philosophical about the matter.\"\n\n\"No,\" Lilith said, turning toward him. \"Not philosophical, merely practical. Fewer people will die if we surrender without fuss. You know that. We, long ago, became too used to used to our protected existence. Change isn't a bad or good thing. It simply is.\"\n\n\"And if the army arrives to 'change our existence',\" he said sarcastically, \"during a handfasting ceremony?\"\n\nLilith leveled a small knowing smile on her friend. \"Then we invite them to the festivities. That should certainly confuse them.\"\n\nThe old man growled, but gave in. \"There is no point in arguing with you Lilith. When was the last time you didn't have the last word in a conversation.\"\n\n\"I often fail to have the last word.\"\n\n\"Okay, so when was the last time you didn't come out two or three points ahead?\"\n\nLilith returned to watching the girls dart back and forth in a rush of excitement. She was happy that they had found something to smile about. The sacrifices of recent generations spent far too much time dwelling on what their end would be like and not nearly enough time enjoying what they had. \n\n<p align=\"center\">* * * *</p>\n\n\"I just want to see if the headdress matches the handfasting cord as well as I think it will,\" Helen said excitedly. She studiously ignored the exasperated expression on Mira's face as the door to Mira's room swung open. \n\nHelen virtually skipped across the room, chattering happily. \"We should have everything ready tomorrow or maybe the day after at the latest.\" \n\nMira sighed and nodded. \"Not to sound ungrateful, but it all seems to be moving so quickly.\"\n\nSmiling dismissively Helen picked up one of the packages sitting on top of Mira's clothes and the handfasting cord. \"You're still recovering from your time away from us. I have faith in the Fates that when you're at the ceremony and everyone is gathered around and you're standing with Liam, you'll start to feel better. You may even smile,\" she added with amusement. Holding up the package to Mira, Helen changed the subject. \"What's this,\" she asked curiously.\n\n\"I don't know,\" Mira replied heavily. \"I assumed you had left it. It was with the rest of the stuff you left for me.\"\n\nHelen's eyes gleamed with excitement. \"No. Maybe Liam left it,\" she suggested, certain that it was an early surprise for Mira.\n\nThe comment only made Mira less inclined to open the package. In truth her mind kept coming back to a disturbing idea she had that morning. Lilith had said that he had a new assignment, but she didn't say what. Mira was more than smart enough to add everything together. There were rumors of a coming army and no one was preparing for war. Mira may not have known what they intended Rillan to do, but she could figure out easily enough that it had to have something to do with the coming army. She was more than a little distracted with that train of thought. She wasn't interested in handfasting presents.\n\nHelen pushed the package into Mira's hands. \"Open it,\" she persisted in her annoyingly cheerful manor.\n\nLacking the strength of will to protest, Mira untied the string and unwrapped the soft purple fabric covering the package. Immediately, she recognized the long carved wooden box that held the whistle she was so fond of. Her hands began to shake as she flipped the latch and opened it. A tear formed in her eye and she choked back the urge to start crying again. \"This isn't from Liam,\" she said breathlessly.\n\nHelen's mood dropped. \"What is it?\" She moved around so that she could see the whistle in the box. \"It's very pretty,\" she said in confusion. \"I didn't know you could play.\" \n\nMira didn't respond. She didn't have it in her to explain the whistle to Helen. Closing the box carefully she placed it on her bed and looked at the second package. It was smaller than the whistle and looked to be more carefully wrapped. For several long moments she stood staring at the small bundle. When she finally gathered her strength she lifted it lightly in her hands and pulled the string and fabric from the little box. The box itself was nothing special. It was only a plain hinged wooden box, too small for most uses. Opening the lid Mira found a silver rose shaped pendant on a long soft black ribbon. A single dark pearl graced the center of the beautifully shaped flower. \n\nHelen gasped, \"By the Fates, it's beautiful. Who gave it to you?\" She was already searching the wrapping and boxes for some note or indication of who the gifts were from. Liam wasn't going to like this. It wasn't exactly respectful to gift a woman with things better than her betrothed was capable of providing upon their handfasting.\n\n\"Never mind, Helen,\" Mira said softly. \"Please go. I need some rest.\"\n\nHelen looked up with some concern. \"You slept in very late. Now you want to go back to sleep. It's not even noon.\"\n\n\"Please. I'm not feeling well.\"\n\n\"Alright,\" Helen conceded. She wanted to go talk to Liam anyway. \"I'll be back to check on you later.\"\n\nMira accepted that and closed the door after her as Helen left. Placing the pendant back in its box, Mira sat down on the edge of her bed. Her head spinning, she could only think of one thing that had ever helped her with this kind of loneliness and confusion. Lifting the whistle to her lips, Mira began to play. \n\n<p align=\"center\">* * * *</p>\n\nChurning, cold, black wrapped around Aris. Nausea wracked her body. Before she could remember where she was or what was happening her body heaved and vomit covered her chest. Pain shot through her as she sat up in bed and realized that at some point she must have peed herself as well. The room reeked. \n\nRolling over she managed to get out of the mess she was lying in. As visions of a monster with empty eye sockets and a lipless mouthful of razor sharp teeth flashed across her memory, she fell to her knees shrieking in terror. \n\n<p align=\"center\">* * * *</p>\n\nSunset seemed to settle unnaturally early on the forest as the Noviodunum soldiers prepared to make camp. Anger and frustration had spread like wild fire throughout the troops as word circulated that Marcus had not been seen in days and Darius was giving orders. The general consensus was that if dark came early then camp should come early too. \n\n\"My Lord,\" the guard said with a sneer. \"The troops could do with hearing from Marcus.\"\n\n\"I told you,\" Darius replied with conviction. \"Marcus is not feeling well. You can attempt to speak with him if you wish,\" Darius stepped aside to allow the guard into the large tent. \"I happen to think that exposing the men to a potentially catching illness and allowing them to see the state he's in would be worse than letting them speculate. For now you'll just have to take his orders as I convey them to you and attempt to be happy with that.\n\nThe guard looked at the door that Darius had cleared. At the word \"catching\" he was almost guaranteed to not set foot in the tent. Darius was counting on that. Hesitating, he leveled his gaze on Darius, \"How do I know you didn't do something to him?\"\n\n\"I hardly think I would be encouraging you to go in there and examine the situation if I had done anything that would encourage you or any of your fellows to off my head. Think as you like. I for one am more annoyed than you can possibly imagine at being put in the middle of this,\" Darius growled at the guard. \"You want to take up the position of sitting next to his bed and waiting for him to be coherent enough to give orders then be my guest. I'll return to Noviodunum. Avenging his father's death is no great concern of mine.\"\n\nBeing just ignorant enough of the true politics behind the situation, the guard decided to take Darius at his word. \"Fine. What are the orders?\" \n\n\"We keep going as we have been. Break camp at dawn. We should arrive at the druid town in less than a day's march. We'll make camp when the town is in sight, assess the situation, and decide on a course of attack then. I suggest that whoever Darius normally would consult on tactics be gathered for a meeting tomorrow.\"\n\nDarius walked away from the guard with a wicked grin splitting his face. Things couldn't be going more perfectly. I have the fool guard obeying my every command and when the only real threat to my plans shows up, he should immediately try to eliminate Marcus. I wonder what exact affect the drugs will have on a vampire.\n\nEntering his own tent he looked around at his meager accommodations and began undressing for bed. The first thing I'll do when I've conquered the Circle is build a villa in place of my round house and put a bed the size of this tent in the middle of my sleeping chamber.\n\nRillan stood in the shadows watching the guards set camp. There can't be more than 50 guards. I wonder who the other houses are that sent support for this stupidity. The real question is do I bother to put forth the effort to frighten them back where they came from and let them live, or do I kill them in their sleep. Rillan could hear the beast in his head voting for the latter option. \n\nFog began to roll into camp, causing more unease amongst the guard. \"Is it just me or do you feel like we're being watched?\"\n\n\"I don't want to talk about it.\"\n\n\"I say this entire march has been cursed. We're all walking into our own deaths.\"\n\n\"I told you I don't want to talk about it,\" the guard snapped. Standing, he stormed through the haze toward his tent. \"I'm going to my palate before I can't find it. I suggest you do the same instead of blathering on like a moron.\"\n\n\"We're not getting paid enough for this.\"\n\nTaking advantage of the fog Rillan moved among the tents, listening to the various complaints of the men and piecing together the circumstances of the trip from Noviodunum to the Circle. \n\n\"Halt, who goes,\" a voice from nearby called toward Rillan's shadowy figure in the fog. The guard may not have been able to see Rillan well, but he could see enough to know that he wasn't another guard.\n\nA heavy sigh of annoyance escaped Rillan's chest. He could hear others nearby getting up to see what was going on. Darting toward the guard, in one swift movement he dodged the swing of the guard's gladius and grabbed him around the head and shoulders. A sickening crack preceded the spurt of blood that gushed from the guard's neck when Rillan snapped his head back.\n\nThe smell of fresh blood nearly distracted Rillan from his purpose. But it only took a moment for him to take his vampire half in hand and continue in his mission. Slipping through the tents, Rillan could hear the commotion begin as another guard found the body of the one he killed. \n\n Great, he thought in frustration, now I have a time limit\n\nDeciding that the quickest way of dealing with the supposed army would be to make a bloody mess of their leader, Rillan worked his way to the largest tent in the encampment. Pushing aside the flap which served as a door, Rillan looked around with disgust at the lavish accommodations afforded to the leader of this fracas.\n\nClosing his eyes Rillan surrendered himself to the beast within. Skin paled and pulled taught on his face, eyes sank back into black holes in his skull, and claw protruded from bent fingers. Suddenly the room focused with complete clarity, and Rillan began to search for the son of Tiberius Novanus.\n\nIt only took moments to find the sleeping form in a makeshift bed behind a partition that separated his sleeping area from the main room of the tent. Upon seeing the smallish form Rillan stopped. He's no more than a boy. Angry, Rillan slipped back into the shadows to think. \n\nAs Rillan stood watching, a robed figure rushed into the room straight for the bed. Finding Marcus sleeping peacefully, Darius moved to a nearby table and lit the lantern sitting on it. Holding it aloft, he swung it wildly about his head, peering into shadows.\n\n\"I know you must be here,\" he snarled.\n\nTo Rillan's amusement the man actually seemed to not be afraid of him. Rillan looked the man over. It didn't make much sense. The man looked distinctly like one of his own people, but he was wearing Noviodunum clothing. The vampire in Rillan smiled with satisfaction, the traitor. \n\nDarius began storming about the room searching corners. Unable to contain himself any longer, Rillan stepped into the lantern light. \"Are you in such a hurry to die?\"\n\nDarius never expected the nightmare that faced him. All but losing his resolve, Darius screamed, \"Guards! Guards!\"\n\nA demonic chuckle, enough to cause Darius to drop the lantern and back away, rolled from Rillan's chest. Within moments several guards burst into the room. They only barely caught a glimpse of Rillan as he disappeared into the shadows again. There wasn't any time to think about what they had seen. The lantern on the ground spilled its oil and the tent caught fire. Darius stood blathering incoherently as the lead guard shouted orders.\n\nThe guards barely managed to grab Marcus and drag Darius out of the burning tent. By the time the guards managed to put out the fire, nearly all of the others had arrived to see what was going on.\n\n\"See, we're cursed.\"\n\n\"Did anyone else see it?\"\n\n\"What was it?\"\n\n\"The vampire!\"\n\n\"The druids sent the vampire for us now!\"\n\n\"Where's Marcus?\"\n\n\"He won't wake up?\"\n\n\"What's wrong with him?\"\n\n\"We're cursed!\"\n\nRillan stood back and watched as the irrational fear from a long march and numerous odd coincidences fed into the subconscious of the superstitious men. Darius did his best to attempt to calm the situation. But it had taken him so long to regain his own coherence that the damage had already been done. By morning Darius only had a handful of guards left. All the others had taken what they could and disappeared into the woods during the night. \n\nThe few men who were left were the last of the most loyal men from Tiberius' house guard. As morning dawned they began tearing down the few tents which had been left.\n\n\"Alright,\" Darius started. \"There may only be a few of us left, but the druids aren't fighters. I think we can still manage.\"\n\nThe guard with the most rank rolled his eyes. \"Do we have everything,\" he asked one of the others.\n\n\"I think so. What about Marcus?\"\n\n\"Carry him. Maybe one of the apothecaries in Noviodunum can help him.\" The guard glared over at Darius. \"Continue your quest alone druid. We return to Noviodunum. The senate was right. This was suicide.\"\n\nDarius fumed angrily. \"Suicide? Suicide! No one has died! You all need to gather what you can and come with me. It's only a day's walk from here. \n\n\"It's over druid. Go home and accept your position in life. You won't be welcome in Noviodunum once I've related the events of this trip.\"\n\nRillan watched Darius beg and plead as the men finished gathering their things, and guide Marcus back the way they came. A strange sense of well-being rushed over him as he realized that he had managed to control the situation and only killed a single man.\n\n<p align=\"center\">* * * *</p>\n\nEvery thump, thud, drip, or squeak in the darkness, every stirring, even her own heartbeat, made Aris tremble. When's he coming back? \"How should I know,\" she answered herself.\n\nMaybe he won't come back.\n\n\"That's a nice dream. You volunteered for this. Stop whining and get ready. He'll want to feed on you again.\"\n\nAris shook her head and cowered in the black corner of the room. She had yet to find a way to light the fire or lanterns. She hadn't even managed to clean and dress herself. \n\nMaybe he won't be hungry.\n\n\"Of course he'll be hungry. He'll always be hungry.\"\n\nThat's not what Mira said.\n\n\"And you trust that bitch? She picked you. She sent you here.\"\n\nNo I volunteered.\n\n\"She only told you that it wouldn't be so bad so that you would go more willingly. Foolish little Aris. Always do as you're told Aris. I wonder if he likes what you taste like. I wonder if he'll try your body next time. Make use of you for more than just a meal.\"\n\nAris heard laughter in the darkness, echoing off the wall of the room he put her in. The laughter almost sounded like her own voice but it couldn't be. Could it?\n\n\"Maybe he'll be nicer too you if you make it easier on him.\"\n\nWhat do you mean?\n\n\"You could get ready for him. Women cook for their men when they're hungry. Your man merely wants your blood and body. Much easier preparation there.\"\n\nI don't understand.\n\n\"Don't be stupid. Do I have to explain everything to you? Fill a cup for him and he won't have to bite you. Better for everyone. You don't have to be bitten and he gets what he wants. I would think he would be grateful for not having to do the work himself? I bet Mira never thought to do that for him. It's probably why he didn't want her any more.\"\n\nI don't know. How would I do it?\n\n\"There were cooking things by the hearth. Bound to be a knife and a cup.\"\n\nAris felt along the floor as she crawled roughly in the direction of the fireplace. It took her some time to find it. But in the end she managed. I've got it. She held up a long sharp knife.\n\n\"Now find a cup.\"\n\nThere's one right here.<br/>  \"Good. You know what to do now.\"\n\nAris carefully placed the cup on the hearth in front of herself. She did her best to line her wrist up with the cup in the darkness. The cold in the cave combined with the lack of clothing had her numb enough to the environment that she barely felt the knife slice into the flesh of her wrist. She whimpered as she felt the warm stick fluid begin to drain into the cup.\n\n\"See there. That wasn't nearly as bad as what he did to you.\"\n\nHow much do you think he'll want?\n\n\"Hard to say. Better give him as much as you can stand.\"\n\nTell me when the cup is full, Aris asked. She began feeling a bit faint. I can't really see.\n\n\"Of course. Keep going. You're almost there.\""
    ],
    "authorname": "secretme",
    "tags": [
        "vampire",
        "vampyre",
        "druid",
        "love",
        "celtic"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-ch-13"
}