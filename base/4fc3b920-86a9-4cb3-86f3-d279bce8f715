{
    "title": "A Thankful Blizzard Pt. 02",
    "pages": [
        "Author's Note: Whew, here it is, part two of my tale. I had it take longer because my friend who normally edits for me was out of town and couldn't help. So this is self-edited. Any errors are mine, and likely stupid ones at that.\n\nWarning: Contains copious amounts of snow.\n\nChapter 3\n\n\"Wait... How much? You said feet, right?\" Gone was the bright bubbly Kat I was seeing before. Standing by the table next to me, she looked like a scared little girl. It made my heart ache, as all I wanted to do was stand up and comfort her, pull her in to a nice, warm, secure hug, running my fingers through those delightful, red curls, whispering words of comfort, using my other hand to trace her back and find spots of tension to ease...\n\n\"Paul?\" her shaky and clearly worried voice snapped me out of my daydream. I could merely nod, her brows furrowing more. \"What are we gonna do?\"\n\nHaving lived in the mountains since my freshman year, I'd experienced only two other storms close to this intensity. This current snowfall rate made those look like light flurries. Had we been on I-70, those plows probably would have been able to keep up with it. But anything over an inch an hour tended to close these smaller highways. I know Helen, our waitress, had just mentioned a local hotel, or cabins, I think she had called them. That would keep us warm and safe. \n\n\"Ka...\" I cleared my voice, made sure it was working. I was worried she'd freak at my suggestion. \"Our, uh, Helen, our waitress, she, well, she said that some cabins down the road would likely be our best bet for this storm.\" I felt my face getting warmer. I hoped she didn't freak out. Of course, she really had nowhere to go. It didn't look like she'd had a purse or wallet or anything. \"That is, to uh, wait it out.\"\n\n\"Oh, we can wait it out? Will it pass? Will we be ok? Where will all the snow go? Can we drive through it?\" Up to this point, she hadn't spoken nearly this fast. I needed to help comfort her. I needed to help her, but I was scared I'd mess it up. Every time I had spoken to a girl, or woman, I had found attractive in any manner, I had messed it up in some way, either by clamming up and being a bore, or by saying weird and unrelated things, seeming like some kind of eccentric weirdo. My heart pounded in my chest. It was just talking to her. Katherine. The girl with the red curls, the one who had called me cute, her guardian angel, fun to talk to. She needed me to help her, being left stranded miles from home in a strange place, seeing things she'd never experienced before.\n\n\"It... will be ok.\" As if just saying it made it so, I felt a sudden calmness starting to replace my rapid pulse. \"I've experienced storms like this before.\" I left out the part that this was the worst one I'd ever seen. \"They dump a lot of snow in a short period, but the plows usually clear it when the blizzard passes, once they can see the road safely again. Our best bet is to stay here where we have access to food, water, shelter, everything we need, rather than trying to beat this thing. Helen said they've already closed the highway up ahead, the way we would be heading. We could head back the way we came, back towards my town and house, but there's a chance this blizzard could get us stuck in that small pass too.\" As I spoke, she seemed to be calming just a little. I gestured for her to sit back down.\n\n\"So... we wait?\" She slid back into the booth, her brows starting to uncrease.\n\n\"Yep. And, since we've got our pancakes, I think our omelets are almost ready. So dig in, eat up here, and then we'll go see if we can find a room until the blizzard passes and roads close.\"\n\n\"God... I always wanted to see snow, but this... this is incredible! There's just so much of it. And... you can't even see that valley we were just looking at! Paul, this is just like those dust storms back home in Phoenix! They move in so fast and you can't see anything.\"\n\nI remember growing up witnessing several dust storms roll through Phoenix. Some were so bad you had to cover your face just to breathe. She did have a point though. Blizzards and dust storms had quite a bit in common.\n\n\"That's... actually a really perfect analogy, Kat.\" She smiled at my compliment. \"The only difference, this storm leaves behind lots more accumulations than dust storms.\"\n\n\"So, feet, right? You said 6 feet? That's taller than I am! I can't even picture that, like, what? The snow is like a wall then? Or more like a sand pit?\" \n\n\"It depends on the type of snow falling, and if and how it drifts.\" She raised her eyebrows at that. \"Oh, yeah, a drift is just a collection of blown snow, where the winds carry it and stack it higher. You know, if we're getting 3-6 feet of snow, we could see drifts higher than that, easily.\" She started to look a bit worried at that, so I cleared my throat and changed that line of thought.\" Anyway, just as we were coming in, the air was cold; the snow was coming like tiny ice pellets, rather than large flakes. See, right here on the window?\" I pointed to a large, flat flake that was sliding down the glass. \"This indicates that there's abundant moisture in this storm, feeding the intensity. It also shows that it's really cold high in the sky where these guys likely formed. So our temperature probably dropped a few degrees. These are called dendrites. They've formed because the air is supersaturated with moisture and the temperature is above column and plates formations, but below needles. Basically, it's cold enough that these elaborate structures formed almost instantly.\"\n\n\"Wow... Paul, you are amazing! I never knew there was so much information about snow!\" Her eyes were wide, and she had a small smile on her face. It was a stunning look for her. Those beautiful emerald eyes were captivating. Her gaze travelled to the window, watching the flakes that hit against the window. \"Is it true about the uniqueness of snowflakes, that each one is different than the next?\"\n\nI grinned. This was an oft asked question, one I loved answering, since it was both simple and complex, all at the same time. And, it looked like she was calming down.\n\n\"Do you want the short answer, or the long version?\"\n\n\"Do we have time for the long version?\"\n\n\"We will.\"\n\n\"Then short for now, and tell me the long when we're at that cabin place.\"\n\n\"In short, yes. Every snowflake is extremely unlikely to look like any other one. Actually, if you were to be able to catch every single snowflake falling out in this storm \u2013 and believe me, that's a lot of snowflakes \u2013 there would be absolutely no exact duplicates. Essentially, snowflakes are made out of water molecules, all neatly arranged, but in slightly differing patterns. Since a typical flake might have over one pentillion water molecules - that's a billion billions - with well over 100 formations for a snow crystal's most basic shape, there's more arrangement possibilities than there are atoms theorized in the entire universe. But, there are cases where smaller ones, called nano-snowflakes, can be made up of as few as 275 molecules. They can have direct copies, of course.\"\n\n\"Paul, just what do you do for a living? Are you like, a researcher, some genius meteorologist?\"\n\nI took a bite of my pancake, noticing Helen was bringing over our omelets. We really did need to hurry up and get a room, and get some supplies before the snow got too dense and packed on the roads.\n\n\"In a way. I'm working on a dissertation at Mountain State College. I'm also a GTA, a graduate teaching assistant, helping out the professors there with things like labs and recitations.\"\n\n\"So, are you going to become a professor? And what are you getting your doctorates degree in? What's your dissertation about?\" She was leaning forward now, asking questions after she'd finish a bite of pancake.\n\n\"Honestly, I'm not too sure right now. I'm getting a Ph.D. in chemistry, and my dissertation is actually about the relationship between quantum physics and the molecular complexity of snowflakes.\" \n\nShe giggled. \"No wonder you know so much about water and snow. Here I was thinking you were some fancy, genius weatherman.\"\n\nThat giggle was intoxicating. And it seemed that no two giggles of hers were exactly alike, a phenomenon I would absolutely love to study in detail. Before I embarrassed myself with some silly, stupid grin, Helen arrived with our omelets.\n\n\"Here you are, Sweeties. Can I get the two of you anything else?\" Her cheerful and warm demeanor was such a contrast to the blizzard rattling the windows. \n\nI was curious. \"Helen, how are you getting home in this?\"\n\nShe chuckled. \"Well, Sweetie, I have a 4x4 out back, with chains. I had a suspicion this blizzard was comin' when I woke up this mornin'. You're in that Explorer out there, right?\" I nodded. \"Make sure you stick to 4-wheel, take 'er slow, and get to Aspen View soon, probably no more than a couple hours, unless you got chains?\" \n\n\"No ma'am, I don't.\"\n\n\"Well then, you guys probably got about 2, maybe 3 more hours before you likely won't even be able to get your Explorer down the road. I'll get you guys your bill, just call me when you're done, and I'll get you on your way.\"\n\nThis entire time, Katherine was silent, watching Helen talk, but she suddenly spoke up.\n\n\"Pardon me, Helen?\"\n\n\"Yeah, Sweetie?\"\n\n\"Would you happen to have an extra pen or pencil, maybe some paper?\"\n\nIt was a peculiar question, yet Helen didn't even bat an eye. \n\n\"Sure do, Sugar.\" She reached into her apron, brought out the requested items, and after setting them down, smiled and walked away while calling out, \"There you are.\"\n\n\"She is a sweetheart!\" Kat grinned at me. \n\n\"Why'd you ask for that?\" I thought she might have wanted to write down what Helen said, but it seemed easy enough to remember.\n\n\"These snowflakes are called dendrites?\" She pointed with her pencil to the window. \n\n\"Yeah...\" I had no idea where she was going with this. But then, she leaned forward and began moving the pencil across the paper in quick strokes. Of course! She said she was going to art school, so naturally she probably had some kind of artistic talent to even consider that. Her sketch marks quickly began to resemble a detailed spiny dendrite snowflake. I glanced at the window, seeing the occasional flake press to the window. But within moments, it would slide down and change. I was impressed. She could catch these details in such a short time. Then I noticed something that had me blushing furiously. She was leaning forward over the paper, concentrating, and it did amazing things to her tank-top. I can't believe this entire time I'd been around her, I hadn't bothered to check out her breasts. They were perfect, much like the rest of her, creating a gloriously symmetrical cleavage, the top of each breast curving and diving into the depths of the fabric of her top. First her eyes, and now this... To say I was mesmerized was a gross understatement. I was transfixed. I was hypnotized. I was as interested in that as my own dissertation. \n\n\"Paul? Paul? Paul!\" I snapped my eyes up to her. Had I not turned beet red, I imagine I might have been able to pull of the fact I was just in awe of her artistic skill. She glanced down, and then I thought I saw her blush. \n\n\"I, I, I, uh...\" I was stammering like an idiot. \"I'm sorry.\" I finally blurted out. \"I was watching you draw and... um... I'm sorry, that was inappropriate of me to stare like that.\" I buried my face in my hands. God, I was staring, practically salivating. Could I have been more perverted? But then I heard her giggling.\n\n\"Paul, I'm flattered, really.\" I looked up from my hands and saw such a warm smile on her face. \"I was worried you weren't attracted to me at all.\"\n\n\"Are you kidding?\" I blurted out, \"You're absolutely beautiful, stunning, and best of all, you are intelligent, absolutely delightful to talk to!\"\n\n\"Aw, Paul, thank you. I think that's the nicest thing anyone's said to me. Anyway, I'm sorry about the sudden distraction. I just had to try drawing a snowflake, like you've described them, kinda like what I saw through the window.\" She slid the paper over to me. \"What do you think; does it look like a real one?\"\n\nMy mouth hung open. Her drawing had depth to it. It looked like a giant gray colored snowflake was resting on this piece of paper. Each arm of the flake was beautiful, with crisp angles. I glanced up at her, seeing a hopeful look on her face.\n\n\"It's... impeccable. It looks real; it looks like ones I've studied in my lab.\"\n\n\"Thank you. I love drawing things, trying to give them shape and depth.\"\n\n\"You've got a gift, Katherine.\"\n\n\"Aw, Paul, thanks. Remember though, I said all my friends call me Kat.\" \n\n\"Oh, sorry about that Kat.\"\n\n\"No need to be sorry.\" Her smile was warm. I couldn't believe I'd been able to have such amazing conversations with this girl. She was prettier than anyone I'd ever seen, yet I was still able to talk to her like one of my colleagues or professors.\n\nGlancing out the window, it seemed the blizzard was worse than it had been just moments ago. It brought back the reality that we had to get moving before we got stuck.\n\n\"Kat, let's finish up our meals, or take them with, and get going soon.\" At my words, she glanced outside, nodding in agreement. As if on cue, Helen showed up with some to-go boxes.\n\n\"Sweeties, I hate to interrupt you, but you kids best be gettin' on over to Aspen View real soon, probably stock up on some food and water, too.\" She pulled our bill out her apron, setting it on the table. \"Besides, we're closin' up in just a few minutes before we get stuck in here ourselves. I imagine that storm is getting' itself worse before it gets better.\" She chuckled and briskly walked away, clearing off the other tables. Then I noticed the other few people who were in here had already left. I had been so focused on Kat, her drawing, our conversation, that I had completely missed them leaving. A sudden warning sound chimed from the TV.\n\n\"The National Weather Service has issued a Winter Storm warning and Blizzard warning active until 9 P.M. this evening. Doppler radar indicates heavy concentrations of moisture over the area. Snow amounts have been expected to increase at higher altitudes, with accumulations up to 6' overnight, with further snow accumulating another 2-4' throughout tomorrow. Strong straight-line winds in excess of 40 miles per hour have been reported. Visibility is less than 50' in some areas. Viewers are advised to take shelter immediately and not travel in these conditions. Swirling snow can cause disorientation to even the most experienced, with frostbite danger to exposed skin in less than ten minutes of exposure.\"\n\nThe warning continued on the TV, but I saw Kat's expression of worry continue.\n\n\"Time to get going, Kat.\" I simply said, packing up our food and grabbing the bill.\n\n\n\n* * * * * * * * * *\n\nChapter 4\n\nAfter having paid our bill to Helen, she had us wait a few minutes, deciding that we'd be safer to ride with her chain-equipped truck than brave it in my own Explorer. \n\n\"OK Sweeties, follow me. You two need anything from your Explorer?\" Helen was still smiling and bright as we had met her. \n\n\"Paul does, but I don't.\" Helen gave Kat a very questioning look. \"It's a long story.\"\n\nHelen shrugged, then led us through the kitchen, saw the last of the staff off, then ushered us out the back door. I was the first one out the door, and saw there was at least 4\" on the ground already. The wind and snow was blinding, and as Kat had my coat on, I was chilled to the bone instantly. I reached back for Kat's hand, remembering she had on some kind of loose-fitting shoes. Even in the middle of the storm, her hand felt so wonderful in mine. It didn't last for long though, as Helen was telling us where to go. She had to shout to be heard above the wind.\n\n\"My truck's just over there!\" We saw her pointing, then I noticed her truck was already on and idling. She must have had a remote starter. I pulled Kat behind me and hustled over to the waiting truck, opening the door and helping Kat inside. Thankfully, Helen's heater was already blasting warm air into the cab. Kat handed me back my coat, but Helen just arrived and told me to wait for her to pull up next to my Explorer. As I climbed in, Helen hopped into the driver's seat, grabbing a brush and was back into the storm. We watched as she quickly and efficiently cleared the windows and got back in.\n\n\"Whew, this one sure is a beast!\" She winked at us before turning around and pulling up alongside my Explorer. I grabbed what I needed; just a couple bags, and was back in the cab as quick as I could. I was still shivering from that initial blast of cold without my coat. As Helen started driving the truck slowly into the white ahead of us, Kat grabbed my hand and held it tightly. I was glad for her hand, and I was very glad for Helen's kindness, as I doubted I could have driven in this kind of snowstorm.\n\n\"I'm gonna pull in to the general store. Monty will still be there, since he lives above it, and you Sweeties go pick up some necessities.\" \n\nI looked over at Kat and she had her head hung, similarly to the way I found her just hours ago. \n\n\"What's wrong Kat? Are you still cold? Worried or nervous?\" My words picker her head up and she turned to me then.\n\n\"God, Paul, I'm making such a mess of things!\" Tears were on her cheeks, as her voice cracked a little. \"You would've missed this storm if I hadn't been here, and now you have to buy all these things because I don't have my purse with me!\"\n\n\"Kat, it's going to be alright. I'm glad I found you, because if I didn't, you'd be walking blindly in this storm. And please don't worry about cost. I have enough with me to cover anything you need.\" Her hand clenched mine tighter.\n\n\"Here we are, Sweeties!\" Helen called back to us. \"I'll wait here, keep the truck running and warm for you.\"\n\n\"Helen, really, thank you so much. You've been an amazing help to us.\" I made sure to tell her.\n\n\"Well, buddy, I think Miss Polar Bear here needs some things, plus you both need food and water, plus some heavier clothing or coats just in case the power cuts out.\"\n\n\"Ok, thank you Helen, we'll hurry back.\" I plunged out into the bitter cold wind, helping Kat down from the truck. We raced inside the general store and a tiny, white-haired man seemed to appear from behind a counter.\n\n\"Hi there folks, the name's Monty, and I'm guessing you need some emergency supplies?\" His voice had an odd little whistle on every s-sound he made.\n\n\"Monty, we'll need some food and water, first and foremost, to ride out this blizzard.\" He grinned and motioned for us to follow him. As we walked I explained the other items I assumed we'd need.\n\n\"Alrighty, kids, I'm assuming now you'll need some warmer clothing, Miss?\" \n\nKat finally spoke up, \"Yes, of course. I had, well, an emergency, and I have no way to get my belongings just yet.\"\n\nMonty took Kat back to a small clothing section and helped her pick up a few things. I began looking around for things we could do while being stuck in a cabin. I spotted a small portable DVD player and a small selection of DVDs, which I added to my basket. \n\n\"Paul, did you need any other warm clothing?\" Kat asked.\n\n\"I've actually got that it my bag, so I'm fine, thanks.\" \n\nMonty helped us take stock of the items we had picked out, when Kat had a sudden question.\n\n\"Do you have any art supplies, Monty?\"\n\n\"Well, nothing more than some pencils and sketch books.\" He pointed down one of the few aisles.\n\nIn a few more minutes, we had everything purchased and ready to load into Helen's truck. Monty even offered to help us load it, but I told him we'd get it so he didn't have to go into the cold.\n\nKat and I dashed back into the cold, loading our goodies as quickly as we could. \n\n\"You Sweeties all set then?\" Helen still had such a jovial sound to her voice.",
        "\"I believe so, Helen. Thank you, once again.\"\n\n\"You kids looked like you needed some help. Here we go then.\" Helen pulled back into the blizzard. From the backseat, I couldn't even see where the road was, but apparently she had it memorized or could see more than I, for within just a few more minutes, she announced our arrival at Aspen View. I asked Kat to stay in the warm truck while I talked to the owner to get a room. I found it funny that I couldn't even see any of the cabins, and was practically on top of the office door before I could see it. \n\nA thick, barrel-chested man, with a beard that looked more like a rope suited for a ship hanging from his chin, greeted me, having emerged from the attached living quarters.\n\n\"Well, I didn't expect to have any customers during this frightful storm. What can I do for you, son?\" \n\n\"I just need a cabin for 2 so we can ride out this storm. What does each cabin have in it?\"\n\n\"Oh, all but two of my cabins have 3 rooms, one bedroom, one main room and a bathroom. There's a small stove, refrigerator, sink, and a wood burnin' stove in case the power cuts out, thought I got backup generators around if that does happen. The other two have 4 rooms, but they're both occupied now, sorry.\"\n\n\"What do you have available?\"\n\n\"I've got good ol' number 1 ready, just a short ways away from the office here.\" He pointed a finger as thick as a sausage off to my right side. \"Will that work for you, son?\"\n\n\"Yes of course thank you. Oh, and how does checkout work, or staying for more than one day?\"\n\nHe grabbed the behemoth beard hanging from his chin, and while stroking it, had a simple answer.\n\n\"Think of it as pay-per-view, but I do pay-per-night. When you're all done, just bring the key back to me and I'll bill you for the nights you stayed.\" He paused, asked \"Hey, need any help?\" \n\n\"It's pretty cold out there, but if you could, I'd greatly appreciate it.\"\n\n\"Alright son, just a moment then.\" He proceeded to bundle up in some fancy cold gear he had tucked into a closet. \"Ok, just pull your vehicle up to number 1, I'll meet you there.\"\n\n\"Thanks again, sir.\"\n\n\"Please, call me Max.\"\n\n\"Ok, thanks Max.\"\n\n\"Not a problem, Son.\"\n\nWe headed outside, with I climbing into the truck and telling Helen which way cabin number 1 was, and Max disappearing into the storm.\n\n\"Oh, I love number 1!\" Helen exclaimed with a laugh. \"Max gave you one of the best cabins, Sweetie!\" She continued to drive through the wall of white, somehow navigating her way just fine. \n\nWhen we arrived, I hopped out and rushed to bring everything inside with Max's help. When he first saw Kat in the seat, he paused for a moment, before he said something much like Helen had.\n\n\"Well, little lady, you're a tad bit underdressed. Polar Bear club?\" Kat giggled at his guess, shaking her head no. Max spotted Helen.\"Oh, Helen, beautiful lady, seems you've rescued these two wayfarers.\"\n\n\"They came into the diner, before the storm looked too bad, but I thought I'd help them get safely here to your cabins.\"\n\n\"Alright.\" He paused, glancing around him at the swirling snow. \"Good thing you did too. Ok, almost done.\" He hoisted the bottles of water and carried them in, the last of the supplies I had purchased with Kat. I shook his hand and watched him disappear into the storm. \n\nBack at the truck, I offered my coat and hand to Kat, who gladly accepted both.\n\n\"Helen, I thank you once again. I'm not sure if I could have driven this as well as you.\" She beamed at my compliment before waving us off.\n\n\"You Sweeties stay safe, stay warm. And don't forget to stop by the diner on your way out of town!\"\n\nKat and I waved goodbye, then rushed into the cabin. While unloading, I hadn't taken the time to survey the interior, so with the door shut, Kat shrugging out of my coat, I stopped and looked around. Max had tastefully decorated the interior with subtle Native American influences here and there \u2013 a woven rug of bright colors, a dream catcher hung from one wall, a painting of mesas and red rocks from another. There were a few wooden chairs and one wooden sofa huddled around a fireplace, a small kitchen table with chairs \u2013 everything looked handcrafted and customized for this cabin. \n\n\"Wow, Paul, look.\" Kat was staring out a large bay window, complete with seating area. It looked as if the window had been painted white, with an occasional movement of the snow here and there, \"My God... had I been out there, I...\" Her voice trailed off, and I thought I heard a sniffing sound.\n\nShe surprised me when she turned around and threw her arms around me, squeezing me in a warm embrace.\n\n\"Thank you Paul, for saving me.\" She breathed into my chest. I wrapped my arms nervously around her, returning the hug. Her body felt amazing pressed against mine. It was as if she was made to fit into my arms. I closed my eyes, slowly inhaling her scent. I felt arousal flooding my pants almost immediately, getting scared she'd notice and think me a pervert, but as she pulled gently away, I think she noticed my hammering heart instead.\n\n\"You're nervous?\" Her green eyes looked up at mine, searching me. They seemed like searchlights, probing my soul, but I nodded to her.\n\n\"Like, uh, I said, you're the most beautiful woman I've ever met.\" I slowly moved back toward the door to start packing some of our belongings away, anything really to hide my erection. \"We should get some of the stuff put away before it goes bad.\"\n\n\"Oh right, I almost forgot!\" Kat hustled over to help me, and within just a few minutes, we had everything put away, chatting while we worked. \n\n\"What should we do now?\" I pointed to the DVD player I had purchased. \"We could watch a few movies, or just talk?\"\n\n\"I'd like to talk to you some more.\" She grinned. \"I'd like to hear more about the snowflakes. Would you mind describing some while I sketch a picture?\"\n\n\"Ok.\" I sat down on the sofa while she gathered her stuff, setting up on the floor rug by the fireplace, using the coffee table for her sketch pad. \"What did you want to know?\"\n\n\"Back at the diner, you mentioned there was a long answer for the uniqueness of snowflakes. What did you mean by that?\" Her hand was already sketching something. \nAgain, from this angle, I could see her wonderful cleavage. Before I got too bothered, I cleared my throat and answered.\n\n\"Ah, yeah. The long answer is largely what my research and dissertation is based upon. So, first, when someone asks that question about snowflakes being identical, or even alike, we have to determine just what that person means by being alike, the same, identical, unique, whatever word they may choose. If I remember you asked about the uniqueness, each one being different, right?\"\n\n\"Yeah.\" She paused to look up from her sketch. \"I mean, there has to be millions of snowflakes out there right now. Couldn't a few of them have similarities and be copies of each other?\"\n\n\"You know the philosophical question about the tree falling in the woods, if no one was around to hear it, would it still make a sound?\" She nodded. \"That addresses a simple concept of the human necessity to exist. But, does sound, a vibration, depend upon our ears, or the source of the vibration?\"\n\n\"Well, the source, right?\"\n\n\"Yep. With science, we're able to assess the whole situation. A tree falling and hitting the ground would cause massive vibrations, the essence of what sound is, spreading out until the energy dissipates. If no one or nothing is around to hear these vibrations, it doesn't hold much significance then, as the falling of the tree itself. But our perception wouldn't change the way the tree caused vibrations in the ground.\"\n\n\"Ok, I follow that part, but what does that have to do with snowflakes?\"\n\n\"If no one is around to monitor and compare each and every snowflake to the other, can anyone be absolutely certain they aren't alike after all? That's where a small amount of uncertainty comes into the equation, and probability arises. I mentioned that earlier at the diner, that there's more configurations water molecules can take to make a snow crystal than there are theorized atoms in the universe. Having two identical snowflakes has less chance than if you entered various lotteries and won all of them, every day, for the rest of your life.\"\n\n\"Wow... That would be unlikely then.\"\n\n\"Exactly. Now, my long answer involves more semantics, in a way, as the clarification of 'alike' and how you define a 'snowflake' are more important to the answer. Make sense so far?\"\n\n\"Yeah, go on.\" Kat was grinning again, her pencil sat down for the moment, resting on her paper.\n\n\"I already mentioned that nano-snowflakes can be the same, since they can be made up of countable molecules. Beyond that simple fact, some other things in nature can and are, in fact, identical. Take, for example, how we understand the electron to be. It's considered an elementary particle, or being basic, not made up of other parts. These electrons are actually understood to be absolutely identical in every way \u2013 a chief idea behind quantum physics itself. Now, a water molecule is much more complex, and, in fact, there are differing water molecules. Ever hear of heavy water?\"\n\n\"Yeah, my grandpa used to talk about it, on the ranch.\"\n\n\"Well, that's only a small example of how water can differ. See, water, being made up of two hydrogen atoms and one oxygen, usually come in the form of basic hydrogen and oxygen, O-16, you could say, describing the proton-neutron makeup of the atom. Sometimes, hydrogen exists as deuterium, and sometimes oxygen exists as O-18. These atoms aren't the same as the more common forms, and during the crystalline production of ice, can affect the structure. You might see a small portion, like 1 in every 500 atoms being like one of these. Since a single snowflake can be made up of a massive amount of water molecules, it's safe to say there's a slightly lesser, yet still massive amount of different molecules in there. All these molecules are scattered at random through the snowflake, adding even more uncertainty on the exact arrangement. So on a molecular level, the chance of having two snowflakes being identical is indistinguishable from zero.\"\n\n\"That's... deep.\" Kat was staring out the window now. \"There's so many snowflakes... and all of them are truly unique?\"\n\n\"I'd stake my entire dissertation on that fact, because I'd have a greater chance of being right than winning my money back in any lottery game.\"\n\n\"God, Paul, you are so smart!\" Kat was turned back towards me, watching me now. \"You know this stuff better than I know which pencil to use to get a different effect in my sketches. And it's fun listening to you!\"\n\nI blushed. Up to this point, I'd never found a more willing audience than her. Even students who were majoring in chemistry would often get bored with this information. \n\n\"Thanks... I'm flattered you enjoy it.\"\n\n\"You sounded like there was more to the story though, right?\"\n\n\"Semantically speaking, yes. If you expand your view of a snowflake to the macro level, say, the naked eye, or even a magnifying lens, and find the most basic structure of snowflake, like a pillar or prism, there's similarities. When the air's just cold enough to freeze the water, you get a hexagonal prism shape. It's entirely possible to have two flakes then, weighing 'the same,'\" I emphasized my point by adding air-quotes with my fingers. \"Or at least with how accurate your scale is - and measuring 'the same' across. That idea quickly dissolves though, when you consider that even prisms have crystalline structures stacking differently, and of course, how many water molecules they're actually made up of. Not to mention the environmental effects on snow \u2013 dirt, wind, temperature, relative humidity \u2013 all these things shape and reshape the crystal, even after it's made.\"\n\n\"Wow, then it's very much like humans \u2013 we may look alike on the outside, but molecularly we're different, and our environment shapes us constantly.\" I raised my eyebrows, not in disbelief \u2013 well, partial disbelief that this beautiful woman was this astute \u2013 but mostly in surprise that she, once again, had a perfect analogy. \"And that's why you study them, right?\"\n\n\"Uh, yeah. Kat, that was an amazing analogy... one I'd never considered before.\"\n\n\"Well, my dad always praised me for my observational skills.\" She grinned. It was at that point that I noticed her sketch. She had drawn a recreation of the valley we had been able to see shortly before the blizzard arrived. A valley I had seen every time I drove back home, yet I couldn't recall as much detail as she had with a pencil. I sank off the couch and slid next to her, examining the picture more closely. That's when I noticed the snowflakes. Scattered throughout her picture, little snowflakes looked to be floating across the page, each one looking different from the rest. I felt like I was staring at a photograph, not a sketch. \n\n\"Wow... Kat... This is utterly amazing! I mean, look at this, it's, it's stunning! You are an incredible artist!\" I turned to look at her and saw she was slightly blushing. She rested her hand on my hand then.\n\n\"Thank you, Paul. You inspired me, actually. Your passion for snowflakes is amazing. Not to mention, you saved me, so I could actually be here to draw them.\" She leaned forward and placed a kiss on my cheek. I wonder if I looked as shocked as I felt. Of course, those lips touching my cheek had to have been one of the best things I'd ever felt in my life. I sat there stunned for a few moments, before thinking to regain myself and respond to her or something.\n\n\"You, you're welcome.\" I was thinking what to say or do next, something, as I looked back at the picture. Then I realized it. \"Kat, tell me, how did you get started in art?\"\n\nShe grinned and leaned back, stretching her hands behind her and leaning against them, staring out the window. This had the effect of pushing her chest forward a little bit, a fact I was really aware of. \n\n\"I was a little girl the first time I remember being praised for my art. My grandpa had bought me a little pack of crayons and some paper. That afternoon, I sat on our porch and sketched the ranch. When I showed it to him, he gasped and said that was the most beautiful picture he'd ever seen. He strode right over to the fridge and tacked it. He told me we had to post it up where everyone would be able to see it in all its beauty. Throughout the rest of the evening, the rest of my family said pretty much the same thing. I thought it was the coolest thing in the world to make everyone so happy with a picture, so I kept making more. By the time I was in middle school, I was being entered in art contests and winning first place. I think I had over a couple hundred blue ribbons.\"\n\n\"Wow, that's impressive. I think the most I did in middle school was make my mom and dad crazy with all the things I was trying to mix.\"\n\nShe laughed. \"So you were a little scientist from the get-go huh? \n\n\"Well, not the most wise one, actually. I remember when I was much younger, I was in my parents' bathroom mixing toothpastes and mouthwashes, anything I thought I could get a reaction out of and see that big poof of smoke like they showed in the cartoons. After no success, I noticed I had used a lot of my dad's mouthwash, a yellow one. Afraid I'd get in trouble, I did the only thing a young kid would think to replace the yellow liquid.\"\n\n\"No...\" she giggled, covering her mouth, \"You didn't!\"\n\n\"Yep. I peed in it. I thought, 'well, pee is yellow, so is this mouthwash, alright!'\" She was laughing now, clutching her side with one hand, covering her mouth with the other. She looked so beautiful in that moment. \n\n\"Oh my God! He must have been so pissed!\" She snorted some more, \"No pun intended!\"\n\nI was laughing now at this point too, then finished the story. \"Yeah. I was playing in my bedroom when I hear the loudest spitting sound I'd ever heard, followed by him screaming my name 'PAUL JACOB GOODMAN!!! DID YOU PEE IN MY MOUTHWASH!?' Never mind the fact I had a brother and sister. He just knew it had to be me.\" While she was laughing, I did see she had reacted to my name. I wondered momentarily what it was, but she interrupted my thoughts.\n\n\"Oh my gosh, that's funny!\" She wiped her eyes, tears having formed at the corners. \"You must have been a riot to your parents.\"\n\n\"Yeah, they remind me of that every time I come home to visit.\" I realized she had been telling me about herself and I interrupted with my story. \"I'm sorry, I cut in with my story, please continue.\"\n\n\"No no, that was worth it.\" It seemed her laughing had finally subsided. \"Oh man. Where was I?\"\n\n\"You had mentioned the blue ribbons.\"\n\n\"Oh yeah! So, my grandpa was proud of me, always praising my work, but then I noticed after a while, my dad wasn't as happy anymore. I'd bring home another blue ribbon, and he'd smile, tell me 'that's nice dear' and get back to work. It hurt, but at that time, I didn't know what was going on in his life.\" She took a big breath, and as if remembering something, announced \"I'm pretty thirsty, how about you?\"\n\n\"Oh, yeah, all the talking, what were you thinking of having? We've got some juices and milk, that wine we picked up, or I could mix us a drink?\"\n\n\"Oooh, Mister - no, Doctor Chemistry! What are you going to mix for me?\" She had a mischievous look to her face, probably recalling my story.\n\n\"Hey, in my defense, I spent some time studying drink mixes, because I was fascinated how those liquids mixed to make different flavors and drinks. I just can't cook.\"\n\n\"Well you're in luck, because I pride myself on my cooking skills.\" She stood up, and walked the short distance over to the fridge, with me following shortly behind. I began pulling a couple glasses down (thankfully the cabin was stocked with tableware and silverware, since I forgot to buy some) and got the liquor out. \n\n\"Are you feeling hungry yet?\" She was peeking into the fridge, looking at our stock. \"I could whip us up something yummy for lunch.\"\n\n\"Well, I am feeling a little bit hungry.\" I hadn't realized so much time had passed since we left the diner. This woman was something else entirely. I was enjoying myself immensely in the conversation, hearing her stories, watching her sketch.\n\nKat got to work, using some of the ingredients which, at the time we bought them, I didn't know what they'd be for. I got busy mixing some drinks and our conversation picked back up.\n\n\"Do you mind sharing what was happening to your father?\" I asked after a while. She had just mixed up some dough and was spreading out what looked like a pie crust. I'd had our drinks mixed for some time, so I set about making refills.\n\n\"Sure. That was when we started getting grief from the McMahons, again.\"\n\n\"You mean the same family of that first guy you mentioned? Wasn't that like, 10 generations ago?\" I thought I had counted the great-greats properly.\n\n\"I'm set to be the eighth, actually. My grandpa told me stories of how, throughout the time the land has been in our possession, the McMahons have tried ways of buying it, forcing, intimidating \u2013 you name it \u2013 just to get access to that land.\"\n\n\"You can add kidnapping and attempted murder to that list, now with you.\" I added, thinking how she explained she was taken and blindfolded then dropped off in these mountains.\n\n\"Well, that was already attempted. My grandpa's sister, actually. Luckily they failed, she was returned safe and sound and my grandpa worked on a sort of truce that lasted until I was just starting high school. That's when they started giving grief to my dad.\"\n\n\"What'd they do?\"\n\n\"Started killing his cattle.\"\n\n\"Oh my God. Did you guys call the cops?\"\n\n\"Of course, but there was never enough evidence to prove it was them. We knew, of course. But he'd find cattle dead, fences torn down, all without clear evidence for the police to do anything. The head of the McMahon family denied having any knowledge of it. That's when I figured it out. The twins, Jasmine and Jasper, would leave me hints at school. Again, nothing concrete or provable. But they left a series of hints \u2013 plastic toy cows with paint or cuts like our cattle had been found.\"",
        "\"That's awful!\" I felt bad for her. She just wanted to be an artist. \"So, when did you tell your family you wanted to be an artist?\"\n\n\"A little after I knew the twins were doing it. I joined my dad down by our watering hole, while he was working and broke the news to him. He wasn't just unhappy, he was furious, calling me ungrateful and unfaithful to the family tradition. He told me if I went to art school, he'd disown me. So I went. And he never said anything. Every holiday, I'd get a card from him, nothing more. Mom wrote the letters, telling me not to worry, that he still loved me, but it hurt not talking to him anymore.\"\n\n\"Harsh.\" I handed her a refilled drink. I topped mine off and sat to watch her finishing what she said was a quiche, before sliding it into the oven.\n\n\"Yeah. But I thought if I was away, the twins would knock it off, knowing I had no intent to carry on the business, going to art school and all. Apparently my dad had been telling them I was at business school, learning how to better manage the ranch. That's when I decided I'd take matters into my own hands, inviting the twins out for a meal to settle things and get them to stop. I had no idea they'd take me like that. I had just gotten out of my car, when tires screeched, and a bag went over my head, my hands getting bound behind my back. It felt like I was yanked off the road, thrown into the back and I felt the vehicle speed off. I tried screaming, but I heard the voice of some guy say he'd cut me if I kept screaming, so I stayed quiet. I tried keeping track of how far we had gone, turns, those kinds of things, but it was so silent in the van.\"\n\nWhen she paused, I saw that she had some tears in her eyes, so I stepped over to her and held my hand out. She grasped it and pulled me closer, so I just wrapped my arms around her in a hug. I felt a couple sobs and heard her muffled cries.\n\n\"Paul, I had no idea what they were going to do to me, if they were gonna r...r...rape me, or worse.\" I started rubbing her back gently. \"I fell asleep at some point, then woke up when I heard them talking quietly about gas. I felt something press to my throat, and a different voice said 'one scream and your throat will be split wide open, bitch.' He didn't sound as calm as the other, and I truly believed he'd kill me. So I stayed quiet, then we started moving again. Before much longer, hands grabbed me by the arms and lifted me up. I felt cold, bitter cold rush against me, then they shoved me roughly to the ground, with the last words of 'Come back and worse happens next time.' I heard the tires squeal as they sped away. I tried moving and found my hands were bound looser than they had been in the car, or van or truck, whatever it was. I pulled and a hand came free, so I tore the bag off my head, then blinked rapidly while my eyes adjusted to the brightness. That's when I saw the pine trees, the mountains, and snow. I freaked for several minutes, realizing I had nothing with me, and I was so cold. I picked a direction, and just started walking, hoping someone would drive by or I'd see a driveway or house, anything. After what felt like forever, I was about ready to just sit on the road and wait to freeze to death, when I heard a vehicle coming. It sounded a lot like what I had been riding in, so I thought they were probably coming back to do something, but then I heard your voice and I couldn't believe it. I was so shocked, I thought it was a prank or something, but you kept calling out to me.\" She squeezed me tighter to her, mashing our bodies together. \"God, Paul, I owe you my life. Thank you.\"\n\n\"Hey, I'm glad I found you, you know. That I could help you.\"\n\nShe pulled away and looked into my eyes. I wish I knew what she was thinking right then. Her eyes had such intensity in them. I thought I saw something, but I couldn't tell what it was, before she buried her head against my chest and hugged me even tighter.\n\n\"...fee...s..ood.\" I heard her mumble against my chest.\n\n\"Uh, what? I didn't hear you.\"\n\nShe nestled her head around, then said louder, \"You feel so good, Paul. Will you just hold me for a while?\"\n\nI swallowed hard. It was like a dream come true, holding this wonderful woman, offering her any amount of comfort I could. I felt my heart racing, my face felt hot, and frankly, I felt blood rushing to my groin, an erection growing. I began to worry she was going to feel it and think I was a pervert. Instead, while still holding on to me, she leaned back to look at me again.\n\nThis moment, I knew, was one I'd hold on to and cherish, regardless of what happened next. It was as if everything else didn't exist. I saw her eyes flicking down to my lips. I saw her tongue wet her lips. I could feel her breath on my own lips, as she parted her lips and leaned toward my lips. This was it. We were about to kiss, I'd be experiencing my first kiss, while holding this incredible redhead in my arms. I closed my own eyes, leaning in toward her lips with my own, anticipating the contact of our...\n\nBBZZZZZZZZ!!! The timer on the oven had gone off, signaling our quiche had been cooked.\n\nTo say we both jumped would be like calling the Grand Canyon a small crack. I had jolted so far back that I tripped over one of the chairs at the kitchen table, sprawling backwards across the floor. I heard Kat give a little yelp sound, followed by a gasp.\n\n\"Ohmygod, Paul! Are you ok??\" She rushed over to my side, kneeling next to me. I felt fine, at least at the moment. I think I was more embarrassed by the situation than anything.\n\n\"Uh, I'm fine...\" My voice was shaky. \"Are you ok?\" Her concern seemed to melt away as she started giggling. At first I felt bad, like she was laughing at me, but soon I couldn't help it - I was giggling right along with her. Soon we were both laughing hysterically for what felt like a full minute before she gasped again.\n\n\"Shit! The quiche!\" She leapt up and dashed over to the oven, grabbing some hot pads and taking out the steaming pie plate. \"Whew! We're still good!\" She giggled again.\n\nI got back to my feet and went over towards her. Damn that oven timer! I wondered if that moment would come back again, or if I had missed my chance to kiss this beauty. I was pretty sure I couldn't come up with a reason or situation to justify leaning in and kissing her myself.\n\n\"Did you want some now, or want to wait for later?\" Her question snapped me back to attention, but I wondered if there was some hidden, implied meaning in that statement. Was she hinting at trying to resume where we were? I wished at that moment I had gained more experience with women.\n\n\"Uh, would it be better if it set up?\" The first question I had come to mind blurted out my lips. Well, better than stuttering or saying something truly stupid and asinine.\n\n\"Usually they are. We'll only have to wait like, 10 minutes or so.\"\n\nWe sat at the kitchen table, chatting for a while, before she glanced at the clock and said that we had waited long enough. She cut the quiche and served a piece to each of our plates. I poured us each a glass of wine and nervously blurted out a question.\n\n\"I've been serving you alcohol, do I need to card you, Miss?\" I hoped it sounded amusing, or funny, at least less stupid then I thought it sounded coming from my own mouth.\n\nShe put her hands on her hips and stuck her lip out in an exaggerated pout. \"Hey, I turned 21 in July, Mister.\" She grinned, adding, \"Or can I call you Dr. Goodman?\"\n\nI grinned right back at her. \"Well, you can, but I'm not official until I submit my dissertation and get it accepted.\"\n\n\"Well I like the sound of it. Dr. Goodman. It sounds much better than Mr. Goodman.\" Her eyes lit up for a moment. \"Oh yeah, you can't card me anyway. I didn't get kidnapped with my purse or anything.\" And then she surprised me by sticking out her tongue.\n\n\"Har har, well I believe you. But keep sticking your tongue out and I'll start having my doubts.\"\n\nShe snickered and scooted her chair closer, just to poke me in the ribs before scooting back away. This woman just kept getting more and more interesting. I also felt myself relaxing bit by bit around her. I'm not sure if it was the alcohol, or just Kat herself.\n\n\"Thank you for cooking this, uh, what'd you call it? A kish?\"\n\nShe giggled. \"No, a quiche, silly. It's got a funky spelling. I think it's French, but you pronounce it like it rhymes with leash.\"\n\nI nodded, taking a bite. As I chewed it, it was delicious. It had an amazing texture, a phenomenal taste. \"God, Kat, this is amazing!\"\n\nI heard her sigh, and realized she must have been waiting for me to take a bite. \"I'm glad you like it.\"\n\nWe ate mostly in silence with some small talk in between bites. When we had finished our plates, I collected them and placed them in the sink.\n\n\"Oooh, a gentleman! I like that in my men.\" \n\nAs I was rinsing the plates, I felt her arms slide around my torso and her head rest on my back.\n\n\"Seriously, Paul. I'm grateful for you. For saving me, of course, but because you're a wonderful guy.\"\n\nI focused on the dishes, once again blushing. I don't think I had ever blushed this much in my entire life. With the plates clean and set to dry in the rack, I used a towel to dry my hands.\n\n\"Would you, uh, want to watch a movie now?\"\n\n\"Sure, that sounds nice.\" She pulled away from my body, and I missed the proximity of her already. I wondered if she would have stayed there had I not moved. \"I'll go find a blanket.\"\n\nShe set off searching, while I unboxed the portable player and set it up. \n\n\"What do you feel like watching?\"\n\n\"What'd we get?\"\n\n\"Uh, a Western, a poor-looking action film, and a sappy looking romantic comedy.\"\n\n\"Ooh, do you mind sappy for a while?\" She had reappeared with a blanket, this having a similar pattern to the rug. I simply shrugged at her and popped the movie in the player.\n\n\"Well, we've got all of a 7\" screen. Shall I do the honors of holding it?\"\n\n\"I'd be delighted, my good sir.\" We giggled together, and crawled onto the couch. It was actually a lot more comfortable than it had looked at first, seeing as it was made of solid wood. Kat slid up close to me so most of our sides were touching, and pulled the blanket over us. I held the player in one hand, Kat pressed up to my other side. I felt her hand search out and curl around my own. My heart sped up once again. I hit play, and settled in. Kat laid her head on my shoulder. Everything I had ever dreamed a woman might be like paled in comparison to being this close to Katherine. The movie started, and as I predicted, was sappy, full of cheesy lines that made us giggle. But when the lead male character got to the scene where he professed his undying love to the lead girl, I felt Kat grip my hand tighter. From there on out, the movie tanked. It seemed content to have made two characters fall in love then just repeat similar lines and ideas throughout the rest of the film. When the final credits finally rolled, I looked over to Kat to share a look of contempt for such a pitiful excuse of a screenplay. However, I saw she had fallen asleep, nestled against my shoulder, her hand still in mine. I couldn't think of a much better place to be, so I lightly kissed the top of her head, rested my own head against hers, and closed my eyes.\n\nWhen I next came to, there was white swirling all around me. Each white was a picture, hand drawn and spectacular, but swirled by too fast to really appreciate each one. A light was shining in the distance, and what sounded like an angel's voice hummed a tune I couldn't recognize. A sound similar to scratching started to get louder, and the humming persisted, but the swirling white faded away. I slowly opened my eyes, realizing I had been dreaming. The humming was coming from Kat, sitting at the other table with another blanket draped around her shoulders. She had her sketch pad and was making the light scratching noise I had in my dream with her pencil. She glanced up and saw I was awake and immediately smiled.\n\n\"Hey there, Sleepyhead.\" She set her pencil down and rose to stretch, the blanket falling off her shoulders. The bottom of her shirt pulled up, revealing a toned and tanned stomach, a cute little belly button and lines that disappeared into her skirt. I quickly averted my eyes before she stopped stretching. \"I had to pee, but I didn't want to leave your warm side. But, I had to go. When I got back, you looked so cute, smiling, and sleeping so peacefully. I got my sketchpad, because once again, you looked like my own personal angel.\" \n\nI rose, letting the blanket slide off to the side. I approached her, then looked questioningly at her.\n\n\"May I?\" I asked, gesturing to her book. She stepped back and waved her hand invitingly toward the picture.\n\nI sat down and looked at a picture that made my breath catch in my throat - here was an amazing sketch of me, sitting on the couch. It was as if I was looking at a photograph of myself. Only Kat had added some things to the picture. She had somehow shaded the image to look like a light was shining from above on my head, and had added feathery looking wings tucked behind my back.\n\n\"Holy shit... Pardon my language, but Kat...\" I turned to look back at her. She was biting her lip, bouncing on the balls of her feet. \"This is... I can't even describe how amazing this is.\"\n\nKat let out a breath. \"You're not mad I made you into an angel?\"\n\n\"No, no, of course not. I'm flattered... this is, just... You've left me speechless!\" I finally got out. I couldn't take my eyes off the image. She had put so much detail into this paper, with what looked like nothing but a graphite pencil. A cheap one at that. This woman was destined to be remembered as a famous artist someday.\n\n\"I could see that, while you were sleeping there, almost as vividly as the sight of you actually on the couch.\" I felt her hands rest on my shoulders, then started kneading little circles on my muscles.\n\n\"Ohhhh...\" I couldn't help but moan. Whatever she was doing to my shoulders was incredible. \"That's... wonderful... ohhhh... thank... ohhh... you.\" I got out between grunts and moans every time her fingers dug into the muscles.\n\n\"You looked tense, and you must have been, the position you kept on the couch so I could be comfy. It's the least I can do for you.\" \n\n\"Unngh... Well... ahhh... if you wanted... mmmm... me to try and massage... oooh... your shoulders after...\" I tried to sound as coherent and understandable as possible, but she was making it rather difficult.\n\n\"Sure, but you just hush up and enjoy for now.\" Her voice was kind, and her fingers were magic. I did as she said, and kept my mouth shut. Occasional grunts and moans escaped my lips, several times making her giggle. She suddenly stopped and appeared at my side. \"C'mere. Follow me.\"\n\nI accepted her offered hand and she was guiding me into the bedroom. My heart leapt in my throat and I thought I might faint. Was she wanting...?\n\n\"Lie down on your stomach, that way I can get more of you.\" Oh. I felt silly jumping to conclusions, then almost disappointed. But the prospect of her rubbing my back some more was too enticing to speculate on more, so I gladly climbed onto the bed. For what felt like both an eternity and nearly no time at all, she had covered my entire back, my legs, and even my feet. I felt she more than deserved her turn, so I sat up and rolled my head around. God, that massage felt amazing! I felt like a new person.\n\n\"Wow, Kat, I feel great! I hope I can do that massage justice.\" She grinned at me then climbed onto the bed. Having a chance to look at her without her seeing me, I scanned her body head to toe, appreciating every curve, every swell and part of her body. I saw those amazing legs disappearing into the skirt and wondered just how her butt must look.\n\n\"Paul, are you checking out my ass? Or my legs?\" Damn, my face flushed immediately, then I heard her giggling. She knew! She was teasing me now. Well, I decided, two can play that game. I was going to try and give her the most amazing massage she had ever experienced. I thought I'd start at her feet, so I moved to the end of the bed and started on one. Her moans told me I was doing something right, so I continued for several minutes before switching to the other foot.\n\n\"Ahhh, that feels so great, Paul.\" Her words of encouragement kept me going at the pace I was at, so I started into her calf, squeezing the muscle and kneading it gently with my hands. She continued sighing and whispering how it felt good. I alternated legs and slowly worked my way up to where these glorious legs disappeared into the skirt. Just as my fingers neared where the skirt covered her, I'd move away to the other leg. I heard her breath catch in her throat, then exhale, almost as if she sounded disappointed, ever time I did that. After about the fifth time of doing this, she finally said something.\n\n\"Ah, Paul, if you're going to keep teasing me like that, at least tell me you're going to rub my ass now?\" Wow. I did not expect that. Instead of saying anything, seeing as I didn't really trust my voice anyway, I just moved my hands to her skirt and started kneading her upper thighs. A relieved sound escaped her lips, replaced by what sounded like a whimper. As I inched higher, I could feel the incredible softness of her butt, even through the skirt. I found myself getting hard instantly, tenting my pants. I hoped she kept her head turned inward, because I doubted this was subsiding anytime soon. \"Ahhh, keep going, please, that feels great.\"\n\nI soon was working her lower back and upward. I kept finding my hands would return to the slope of her hips, just below her ribs. Everytime I pressed on that spot, she would sigh - a sound I soon found intoxicating. After a few more minutes she suddenly started to sit up.\n\n\"Kat? Everything ok?\" Did I do something wrong?\" I feared I just ruined it. Why was she sitting up?\n\n\"No, nothing's wrong. Actually, I feel really good right now, thanks to you, Paul.\" She had sat up, turned towards me. I quickly sat down next to her, hoping to hide my bulging erection. \"You want to cuddle?\" Such an innocent sounding question, but it made my heart soar. I nodded. She motioned with her finger to come closer, then patted the bed up higher near the headboard. I took up position, my back against the headboard. She started to wiggle onto my lap, then straddled my lap completely, her thighs on either side of mine, her skirt draping over me. My breathing hitched. I felt like, this entire time I'd been with her, I'd been running a marathon, what with how rapidly my heart had been beating. Now was no exception. She leaned forward until she was resting mostly on my body, her head pressed to my upper chest, her fingers of her hand on my body.\n\n\"Paul, you really are an amazing man,\" she whispered close to my ear, her fingers tracing small circles through my shirt. \"You don't have to be so nervous. I think you are actually a pretty confident guy.\" \n\nI jerked my head toward her at this. Did she not feel me trembling? Or hear my racing heart? I was scared out of my mind. What if I messed everything up? If I was a terrible kisser, would she stop? Would she stop talking to me? What if I couldn't even give anything back to her? \n\n\"Paul. Look at me.\" She calmly traced my chin, twisting my face forward. Her hands braced my face on each side. I could feel such warmth from those soft hands, but again, those emerald eyes captured me. I could lose myself staring into them. \"You are confident. And I know this because look at what you've accomplished, first of all. That alone takes a lot of confidence.\" With this she brought her lips to my forehead. I closed my eyes and just enjoyed that brush of her lips. If I died right now, I imagined I would be happy just being this close to such an amazing woman, feeling her hands, her lips on my forehead. ",
        "\"I'm so worried I won't be good enough for you.\" I confessed. \n\nKatherine suddenly leaned back. She had a smile on her face that I don't know exactly how to describe. It looked like part triumph, part joy, part mischief, and, at least I thought, part lust. \n\n\"Just, for a moment, imagine I'm a snowflake, one of those amazing dendrites you described. You get the chance then, to investigate each molecule,\" with this she gestured to her lips, her neck, her chest, her stomach, \"and see how it's arranged to make up this unique snowflake.\"\n\nI couldn't help but grin at her analogies. I felt better, less shaky, since it seemed she had a point. I always felt calm talking about anything chemistry related, especially snowflakes. So I just decided to go with it and see how it wound up.\n\nI reached forward and brushed my fingers against her lips. Her eyes closed and she began to lean closer. I snaked a hand around her neck, pulling her even closer. When her forehead touched mine, my heart still beating, but with a new perspective, I began talking about the things I knew best, yet never imagined I'd be saying in a situation like this.\n\n\"These are just like two immaculate hydrogen atoms perched upon a wonderful oxygen atom,\" I leaned in and brushed my lips against hers. The sensation was marvelous. I'd never imagined a kiss could be so sensual, exciting, and beautiful. She let out a sigh and pushed her lips harder to mine. I felt hers slide gently over mine, as she lightly nipped my bottom lip and pulled on it. I couldn't help but moan lightly. It felt like jolts of electricity were racing straight from my lips through my body. I felt more aroused than I ever had before; more so than that one night my roommate didn't realize I was home and was making love to his girlfriend in the living room. My door hadn't been shut, so I had a clear view of the two grinding against each other. I swear she knew I was in my bed, even though my room was dark. She had kept staring into my room, like she was watching me. I had masturbated to that image for months after that incident. Yet the sensations of just kissing Kat, feeling her body press harder into mine, was infinitely more pleasurable and enjoyable.\n\n\"Oh, Kat...\" I whispered into her lips. With slightly trembling hands, I reached down towards her tank-top-covered breasts, and remembering her words, touched them gently. She moaned openly now, opening her eyes to look at me.\n\n\"The crystalline structure of these water molecules has begun to form a perfect polyhedron.\" She giggled at my description, smiling warmly.\n\n\"Oh Paul, you are so interesting! I have been fascinated by everything you've said since I met you.\" She caressed the side of my face. \"Please don't stop.\"\n\n\"Kat, the facets of your crystalline lattice,\" My hands, tracing circles of her stomach, started gently tugging the tank-top up and sliding my still trembling hands across her smooth skin. \"This lattice allowed the formation of your perfect, symmetrical prisms.\" This time I felt her bra, and was caressing the surface of the material. Her breathing had increased, and I heard her whispering 'yes' several times. I tried to be bold, and pressed my hands under the cups of her bra, feeling the hot surface of her bare breasts against my hands. She gasped, holding on to me tighter, then moaned when I found her nipples, hard little nubs against my palms. \"And atop the prisms sit extensions of the lattice structure,\" pinched between my fingers, \"capping the peaks of the first dendrite arms.\" She was moaning my name now.\n\n\"Ohhh, Paul... God that feels so good...\" I was actually starting to feel good about myself, my ability to please her, when a jolt of intense pleasure shot through me, as I felt her hand dropped to my lap, caressing my member through my pants. \"Mmmmm, Paul, make love to me... my angel...\"\n\nHearing her ask me to, more or less, have sex with her, was like a drug. I was fueled by the thought that I had finally encountered a woman who enjoyed the way I was, seemed to like my weird euphemisms, and was intrigued by me. And on top of that, she had repeatedly called me cute, or her angel, or an interesting man. I was on a sudden head-trip of sorts, her words and actions through the day strengthening my resolve.\n\nMy other hand, which had been behind her head, slid down her body, into the waistband of her skirt, and underneath the fabric of her panties. I felt the smoothness of her ass, this time without the skirt blocking the sensation. She scooted higher up on her lap, the hand on my penis being replaced by the pressing weight of her hips. I felt about to burst at the sensation. That thought alone startled me a bit, made me worried once again, that I might not even last to penetration. I think she sensed my hesitation, for she lowered her lips to mine, pulling me into an intense kiss. As she was kissing me, I felt her hands tugging at my shirt, pulling it up my chest. She pulled away from the kiss just long enough to rip the shirt off over my head, then continued to attack my mouth with hers. My hands had come out from under the front of her shirt, so I used them to start inching her tank-top up her back. She pulled back again and did this thing that was magical to see, in and of itself. Her hands crossed over her body, seizing the bottom of her shirt, and in one swift and fluid motion, peeled the tight tank-top off her body.\n\n\"Oh God, you are beautiful!\" My eyes devoured her shape, the smoothness of her skin, the contrast of her tanned skin against her black bra. I fumbled around behind her with the clasp, but after a few attempts had it unhooked. She shrugged out of the straps, letting the cups fall away from two gorgeous breasts. I thought they were the most stunningly perfect shape I'd ever seen \u2013 and I'd seen a fair few, what with being a lonely, single male and all, with internet access.\n\nWhen she pressed her chest up to mine, resuming our kiss, we both sighed deeply into the kiss. It was such a fulfilling feeling, her naked chest pressing into mine. I could feel her nipples against my skin, a thought that turned me on even more, which, up to this point, I thought was impossible to be this aroused. \n\n\"Kiss them, Paul, suck my lattice extensions into your mouth!\" Oh my god, she could talk my kind of dirty speak \u2013 I immediately obeyed, seizing a nipple with my mouth, suckling it and licking it, while playing with the other one with my fingers. She moaned louder, giving me soft directions to continue and not to stop.\n\nKat pulled my head up for a kiss, momentarily, before kissing her way down my neck, my chest, licking each of my nipples, and continuing down my body to my waistband. I was vibrating with need at this point, full on shakes of my body. She unfastened the snap on my pants and pulled them with my underwear down until my cock sprung free, clear pre-cum coating the head already.\n\n\"Ohhh... you've been enjoying this pretty immensely, huh?\" I nodded vigorously, nearly panting now, part in excitement, part in nerves. She continued to pull my pants off my body, but not before planting a quick kiss on my cockhead. That alone was almost enough to make me cum, but I somehow didn't. She threw my pants to the floor, then crawled back up toward me, her hands sliding along the inside of my legs, up past my knees, along my thighs, then her fingers toyed with my balls for a while before wrapping around the shaft of my penis. \"Ready?\" she breathed, her mouth inches away from the tip. I again nodded, watching those green eyes as she put first the head into her mouth. The heat, the moist feeling, the light suction she applied \u2013 all of this had me moaning loudly, saying her name, and trying my hardest not to cum in all of two seconds. As I watched her eyes, watching me, she kept her mouth closed and sunk slowly, lower and lower down. I could feel the crown press against her mouth, deeper, and I couldn't hold it any longer. I had reached the point of no return. The warmth, the slippery wet sensation, everything was too much for my virgin self to maintain. I tensed, tried to warn her with a \"Kaaaughhh\" sounding wail. Her eyes opened wide for a moment as the first blast of my semen shot into her mouth. I felt her lower her mouth into my orgasm, swallowing as each pulse of fluid came out.\n\n\"Mmm, mmm... mmm... mmm...\" The humming she made while her lips were still closed around my cock just made the orgasm that much more intense and sensual, lasting longer than I had ever imagined it could be. As the spasms started to slow, I still felt pleasure pulsating through my abdomen and body. She slowly started to pull off my shaft, the head finally coming free with a soft popping noise. I was panting. I was grateful. I was still trembling. I was even crying a little. She crawled up my body and held my head to her chest, an action I felt incredibly endearing and comforting. \n\n\"Was that your first?\" She asked softly.\n\n\"First anything...\" \n\n\"Wow, I'm honored I've been your first, but I don't quite feel done with you just yet, Dr. Goodman.\" She kneeled off the side of me then. \"I think I've got a couple pieces of clothing too many... Think you can help me remedy that? I still have arms, and legs, of my dendrite that need exploring, good Doctor.\" How could I resist that? \n\nI found a small zipper on the back of her skirt, slid that down and started easing the skirt to her knees. She lay back onto the bed now, raising her hips so I could slide the skirt the rest of the way off. She had on a simple black panty, I think they called it a bikini style, but for all I know they may have called it anything else. She was looking at me with clearly lust filled eyes now, so I took the opportunity to kiss her stomach, the waistband of her panties, and the crotch of the fabric, inhaling the musky aroma. It wasn't quite what I had expected, but it was rich, full and vibrant, and I wanted to smell it some more. Her panty was also rather damp; a fact I hadn't missed and understood she was as turned on as I was, well, still am, as I felt my cock had regained a lot of stiffness. \n\n\"Right here, the junction of the arms of the dendrite form a perfect angle, where the lattice framework joins a cavity,\" I tugged her panties down, seeing the glistening slit. She had a sparse covering of hair, neatly trimmed. I placed a kiss on the mound, then on the lips of her pussy. \"A cavity that may be subjected to environmental effects during this storm.\" She giggled, that same giggle I'd come to love and thoroughly enjoy.\n\n\"I never imagined I'd be so turned on by scientific terms... Oh!\" I had just run my tongue from the bottom of her slit to the stop, making her cry out. I was mostly testing the taste, finding it to be acceptable and actually enjoyable, in a tangy kind of way. I really didn't know what to do, but I remember my roommate giving unsolicited advice on the 'art of cunnilingus.' I hadn't wanted him to know I was paying a lot of attention, but judging on the cries of his girlfriend \u2013 'Oh lick my pussy, oh that's so good' \u2013 I imagined he had quite a bit of experience. So I applied all I could remember to right now, slowly licking around the edge of her labia, nuzzling the lips apart with my nose. I'd tease my tongue around the rim of her vaginal opening, before pushing it in as far as I could, then licking upward to where her clit was, but avoiding it. I listened to her breathing, her continued moaning, and when she made a sound that seemed really enjoyable, I noted to keep doing it and keep coming back to it.\n\n\"Holy shit! Oooooh fuck, Paul, God, how are you so good at this? Ahhh...\" I was grinning at her sudden use of language, where up to this point she'd left out vulgarity, now it was abundant and seemed directly correlated to the intensity of the pleasure I was giving her.\n\n\"I'm watching your reaction.\"\n\n\"Ungh, fuck, that's fucking awesome! Keep it up, fuck!\"\n\nI continued licking her, intentionally avoiding her clit until I heard frustration in her noises, then she actually begged.\n\n\"Fuck, Paul, please, just lick my clit, just lick my... FUUUUUUUCK!\" She let loose a loud, long scream of pleasure right as I pulled her clit gently into my mouth, swirling my tongue around the bud, flicking it back and forth. Her hips were bucking now and I struggled to keep my tongue in contact with her sweet spot. After several more screams and moans, I felt her fingers in my hair, pulling me up her body.\n\n\"Paul, I need that inside me, fuck me, Paul.\" She was speaking raw lust at this point, almost incoherent with her need between words.\n\n\"Do we need any condoms?\"\n\n\"No... pill... just fuck me, Paul, fuck me!\" She chanted.\n\nI felt her fingers close around my cock, pulling me closer to her awaiting pussy. She rubbed the head up and down her slit a few times to get it moistened, then lined me up as I gave a gentle push. The sensation of sinking into her warmth was incredible. It felt smooth, slippery, hot, and just right. I slowly moved into her, bit by bit. She was moaning, I was moaning, and then I felt my hips meet hers, her warmth completely surrounding my cock. \n\n\"Ungh... Kat, you feel just right. God this is amazing!\" I leaned down to kiss her. Her hands reached up and held on to my shoulders while she kissed me, but then her hands slid down my back to my ass and started urging me to move. I felt awkward at first, unsure of how fast, hard, or deep to go, but I tried paying attention to what she was responding to, and quickly found a pace that had her panting and whimpering at the same time. Ever time my cock slid mostly out of her then plunged back in, she let out a whimpering groan, a 'uh, uh, uh, uh' that was music to my ears.\n\n\"Oh, Paul, oh fuck, I never knew it'd feel this fucking fantastic! Ahhhh!\" I was surprised \u2013 did she just say it that way, like she'd never had sex before?\n\n\"This is... uh, ah, your first time too?\"\n\n\"Yessss... uh, I'm glad you're my first.\"\n\n\"Me too.\"\n\n\"Now fuck me... ah, harder... harder, harder, yes, yes, yes, yes, YES!\" Her chanting began to match my rhythmic pumping, and as I felt the tingling of an approaching orgasm, her moaning increased in tempo until she was screaming.\n\n\"I'm cumming, I'm cumming, cumming, cum with me Paul, cum with meeeEEEE!!!\" Hearing her words and feeling her pussy clench against my pumping cock pushed me over the edge. With one last push deep into her, I felt myself erupt in an incredibly powerful and fulfilling orgasm.\n\n\"Ahhhh, God, Kat, I, oh feel so good with you.\"\n\nKat was clutching to me tightly, planting kisses on my cheek, my neck, anywhere her lips could find, it would seem.\n\n\"God you beautiful man, you are incredible!\"\n\n\"I could say the same of you, being an incredible woman.\"\n\n\"I'm glad you found me.\"\n\n\"I'm glad I found you. You've been so wonderful.\"\n\nI started to gently pull out of her, when she stopped me.\n\n\"No, just stay here, hold me again, please?\" I couldn't resist her, even if I wanted to, which I didn't, so I stayed there, kissing her gently. Before long, though, I needed to pee.\n\n\"I have to go to the bathroom, Kat, I'm sorry.\"\n\nShe just laughed. \"Me too, don't be sorry. You go first.\"\n\nAfter our restroom break, I told her I thought it'd be a good idea to use the little radio we bought to check the weather. She agreed, but said she wanted to take a quick shower, then probably a nap before dinner time.\n\n\"Ok, Kat, just call out if you need me.\" I kissed her, watched her walk naked to the bathroom, pulled my own clothes on and left the room. The little radio reminded me of my cell phone. I debated checking it, since I knew there was no reception up here every time I drove through, but thought it'd be a good idea just in case. Nope, no service, no reception, no bars. Nothing. Thankfully the radio worked, and picked up a few stations. I found one that was giving an update on the weather.\n\n\"... proceeds to continue snowing at record rates. The National Weather Service has indicated the blizzard could keep up intensity well into the night, increasing snowfall amounts in higher elevations by up to 2'.\" Well, that just sucked. I hoped we didn't get stuck in here too long. Kat and I had just discovered a fantastic way to pass the time, but our supplies wouldn't last forever. I reached to turn the radio off, but hit the tuning button instead. The station happened to stop on another radio show that was providing news.\n\n\"In recent news, the daughter of agriculture and ranching conglomerate owner, Doug White, was reported missing yesterday afternoon. Several witnesses have claimed to have seen Mr. White's daughter, Katherine White, abducted by masked men driving a non-descript and unidentified white van. Any information regarding Katherine White's abduction or disappearance should be reported to local authorities as soon as pos~\"\n\nNo. Fucking. Way. I was with THE Katherine White? I couldn't believe I hadn't put two and two together. The White family owned the largest agriculture business in America, owning major farming and ranching chains throughout the rest of the country. They had been named a Fortune 500 company, ranked at number 2, only behind Wal-mart. \n\nAnd I had just had sex with Katherine White, the sole daughter and heiress apparent to the company business.\n\n\n\n\n\nClosing Notes: Told ya' didn't I? Snow... more snow... so much snow!!! I'm thinking State records are gonna be broken here. Perhaps more things may be broken too... I'm eager to work on the next part, I hope you all can forgive me my time taken between parts. But I think the direction of the next chapter will be worth the wait. \n\nRex  "
    ],
    "authorname": "rexspaulding",
    "tags": [
        "snow",
        "science",
        "blizzard",
        "chatting",
        "artist",
        "kidnapped",
        "massage",
        "erotic",
        "first time",
        "virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-thankful-blizzard-pt-02"
}