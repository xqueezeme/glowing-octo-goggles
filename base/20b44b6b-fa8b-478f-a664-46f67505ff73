{
    "title": "Your Silver Nights and Golden Days Pt. 04",
    "pages": [
        "It goes without saying that you should read 'Your Silver Nights and Golden Days Pt. 03' before reading this story.\n\nThe following events took place in the late 1980s to the early 1990s, before any \"Don't ask, don't tell\" policy was in place in the military. Being an active lesbian was risking your career, especially for an officer.\n\n\u00a9 2020 Candy_Kane54\n\n***\n\n\"Did Col. Stevens say what he wanted to see me about?\" I asked, wondering what could be going on.\n\n\"No,\" said Cheryl, \"but he did tell me to tell you it was not work-related.\"\n\n\"Maybe he just wants to congratulate me on my new assignment,\" I thought.\n\n\"Okay,\" I said. \"I'll report at 9AM. Thanks, Cheryl.\"\n\nAt 8:55 AM, I was waiting outside Col. Stevens's door to report in. Just as I was going to open the door and report in, Col. Stevens opened his door and said, \"Come on in, Major. No need to report in. This isn't an official meeting, so please have a seat.\"\n\nOkay, now I was getting nervous. This was entirely out of the norm, and I was starting to wonder what this was about. I walked in and waited for Col. Stevens to sit down, and then I took a seat.\n\nCol. Stevens started, \"I'm sure you're wondering why I want to talk to you. I want to reassure you that this meeting is not official, and anything we discuss is off the record.\"\n\n\"Yes, sir,\" I replied, now a little uneasy.\n\n\"First,\" continued Col. Stevens, \"I wanted to say that I'm happy about your new assignment. Your new program is more likely to get built than this program, and I'm sure it will prosper from your hard work.\"\n\n\"Thank you, sir,\" I replied, appreciating his praise.\n\n\"If you play your cards right, this could be your ticket to a below the zone promotion to Lt. Colonel. You definitely work hard enough, and we'll certainly lose a lot of technical prowess when you leave. I doubt your replacement is going to be able to fill your shoes right away, so I'm prepared to take some heat until they get up to speed,\" Col. Stevens said.\n\n\"Yes, sir. I hate leaving you in a bind like that. I am looking forward to my new assignment and working with Gen. Fain. He's a real fire-breather, and I'm sure the program will definitely get built,\" I said, feeling better about our conversation.\n\n\"Yes, and that brings me to the other thing I want to talk to you about,\" Col. Steven said in a way that made me feel that I wasn't going to like what he was going to say. He looked away guiltily.\n\n\"Sir?\" I asked, my heart starting to beat a tattoo.\n\n\"Information, nothing official, or even close to being official, has come to my attention that could ruin your career. Hints, and observations on my part, only add to it,\" he said reluctantly, still not wanting to look me in the eye.\n\n\"What kind of information, sir?\" I asked, hoping against hope that it wasn't what I thought it was. I nervously played with my ring as I sat there.\n\nCol. Stevens caught my movement and almost sighed. He leaned forward, looked me in the eye, and said, \"The kind of information that, if I had to take official notice of, would force me to ask you a question, a question that if you answer truthfully, will end your career. If I was forced to ask the question and you answer falsely, you'd be brought up on charges, and your career would be effectively over anyway.\"\n\nI sat there stunned, knowing that the next thing he said would determine my fate. In my frantic thoughts, I latched onto the fact that he had said 'if.'\n\nCol. Stevens suddenly sat back and asked in a softer voice, \"Virginia, do you trust me?\"\n\n\"Sir? I don't ....\"\n\n\"We've worked together well for over a year now, and I've given you everything you've needed to get the job done. I need to know if you trust me.\"\n\n\"Yes, sir, I do,\" I answered, wondering where this was going.\n\n\"Good. We need to talk, but we can't talk here or while we are in uniform. I want you to take the rest of the day off. I need you to go home, change into civilian clothes and meet me at the Red Onion up on Sepulveda at noon. I'm going to do the same. Do you understand?\"\n\n\"Yes, sir, I believe I do,\" I said, my heart returning to its regular place as I started to feel some hope that my career may not be ending just yet.\n\n\"Good. I'll authorize the off-time as compensation so you won't have to use up your own leave. Now go. I'll see you at noon.\"\n\nI got up as he did, and he escorted me to the door. As I walked off, he called Tammy into his office, presumably to have her take care of the details. I went to my desk, thankful that I didn't have any meetings scheduled, and set up my out-of-office message on the phone. I looked over to Christine and told her that something had come up. I was taking the rest of the day off. Having taken care of housekeeping, I headed out and home.\n\nI changed into jeans and a conservative button-up shirt. I wondered what he wanted to talk about. I headed out, not wanting to be late for the meeting.\n\nI got to the Red Onion about fifteen minutes early and went in to get a table for the two of us. The Red Onion is a nice Mexican restaurant with a wide selection of traditional Mexican and Tex-Mex dishes.\n\nJust as our table became available, Col. Stevens came in the door. I almost didn't recognize him in civilian clothes. He came up to me and said, \"Thanks for coming, Virginia.\"\n\nI replied, \"I didn't think I had an option, sir.\"\n\n\"I don't see a 'sir' here,\" he replied. \"The only people I see here are Virginia and Rick, just two friends who are having lunch. Understand?\"\n\n\"Yes, s ... I mean, okay, Rick,\" I replied, a slight smile coming to my lips.\n\n\"Good. I'm hungry. Let's eat!\" Rick said, smiling.\n\nThe hostess led us to our table. We sat, and when the waitress came over, we ordered Coronas. We looked at the menus and ordered our lunch. As the waitress left with our orders, Rick said, \"I'm sure you're wondering why we're doing this. I want you to know that whatever is discussed today is kept between Rick and Virginia, not Colonel Stevens and Major Hanratty. Rick never discusses anything he knows with Colonel Stevens and vice versus. Okay?\"\n\n\"Okay, Rick,\" I answered. \"Virginia won't tell Major Hanratty anything either.\"\n\nThen Rick surprised me by asking, \"Did you know I had a twin sister?\"\n\nI noted he used the past tense, so I made sure I didn't ask what happened to her. \"No, Rick, I didn't,\" I replied.\n\n\"Her name was Rachel, but she always went by Ray. We were inseparable when we were young. We did everything together; fishing, camping, hunting, and so on. She was a tomboy in the classic sense; she never wore dresses, played with dolls, or anything girly like that. Mom would get so exasperated, trying to turn her into a girl. Finally, she realized that Ray was going to go her own way and accepted her for what she was and stopped trying to change her.\"\n\n\"It sounds like the two of you were close,\" I said.\n\n\"We were. We always confided in each other. When Ray had her first period, she told me before she even went to Mom to tell her. When we were old enough to start noticing the opposite sex, I started chasing after girls. Still, Ray just didn't seem interested in chasing after boys. When we were sixteen, she outed herself to me. She told me she was interested in girls like I was. I was okay with it and told her so. Of course, I joked that I didn't want her stealing my girlfriends from me. She promised that she wouldn't if I promised I wouldn't try to steal hers.\"\n\nJust then, our waitress came to the table with our food and asked if we needed another round of beer. We declined and tucked into our lunch. While we ate, Rick went on with his story.\n\n\"We both went to the University of Dayton to get our bachelor's degree. We were both getting our BSEE, so we managed to share several classes each semester. It was in our sophomore year that Ray introduced me to Betty, who I eventually married. It turned out that Ray had been trying to get Betty to go out with her, and despite her best efforts, Betty just wasn't interested. So Ray figured if she couldn't have her, maybe I could win her over, so she hooked us up. Well, long story short, we hit it off. I got a wife, and Ray got a life-long best friend.\"\n\nRick paused for a moment. A look of sadness came over his face.\n\n\"Once we graduated, I married Betty and decided to join the Air Force, getting commissioned through OTC as you did. Ray and I started drifting apart since she decided that she wasn't cut out for military life, let alone that she was gay and didn't want to hide it. She went off and got a great job at IBM while I was enjoying a stellar career in the Air Force. Don't get me wrong. We stayed in touch, and we still turned to each other when we needed someone to confide in. She was so happy when we had Timothy. She became his godmother, and she doted on him as if he were her own.\"\n\nRick stopped, took a swig from his beer, and continued.\n\n\"Everything was fine for years. Then I was up for Lieutenant Colonel. As luck would have it, my security clearance review occurred at the same time. Ray was interviewed, and from the questioning, it was clear to her that they were concerned about her sexuality. Ray had just broken up with a woman she had been in a relationship with for five years. Then we learned that I had been passed over for Lieutenant Colonel. Any chance I had to make General was over.\"\n\nRick stopped; a look of pain came over his face as he swallowed hard a couple of times.\n\n\"Ray thought it was her fault that I got passed over. She was already upset about her breakup, and this freaked her out. Betty and I tried to reason with Ray, and I thought she would be okay for a while. Then two months later, I got a call from the police ....\"\n\nRick choked up and couldn't continue. I didn't know what to say. I was shocked at what I was hearing. My heart went out to him, and I reached over and took his hand in mine. As I did, I suddenly realized that this was the first time since my father died that I was holding a man's hand, that this was the first time I had even wanted to hold a man's hand.\n\n\"She killed herself,\" I stated.\n\n\"Yes,\" Rick husked before clearing his throat and swallowing several times. \"Ray left a note to me saying she was sorry for ruining my career. She was positive that her being a lesbian was why I was passed over. I had tried to tell her that the two events were totally unrelated. None of the information from the security review would have been sent to the selection board. I should have tried harder to make sure she didn't blame herself.\"\n\nHe gathered himself and continued, \"The irony is that, as I was arranging to fly home for the funeral, they announced that irregularities had been found in the selection board. They annulled the results of the board and convened a new selection board with different members. This time I was selected for Lieutenant Colonel. As far as the Air Force was concerned, I had not been passed over.\"\n\nI gave his hand a quick squeeze and let go of it, sitting back in my seat. I said, \"That goes to show that despite everything they do to try to make it as objective as possible, there is still subjectivity and bias in the selection process.\"\n\nRick gave me a slight grin as he sat back, composing himself. He then asked, \"I suppose you're wondering why I told you about Ray?\"\n\n\"I suspect that you want me to understand that you know what it's like for someone to be gay in a world where it is frowned upon if not outright condemned and hated,\" I replied.\n\n\"Got it in one,\" Rick said. He leaned forward and said, \"I know you're a lesbian, and I can see the little things that most other people might overlook. The way you react, or rather, don't react to the men around you. It's like they're just another piece of furniture in the room. The way you react to other women is a dead giveaway. I saw you eyeing the waitress when she was taking care of us.\" He paused for a moment and then gestured toward my left hand, saying, \"I also know what that ring you are wearing represents. Ray wore one like that too.\"\n\nI looked down at my hand and the ring on my finger, and I fought not to fiddle with it. I looked back up to Rick and said, \"I'm not taking it off. It means more to me than my career.\"\n\n\"I know,\" Rick replied, \"and I would never tell you to. But as a friend, I want to caution you that you need to be careful.\"\n\n\"I will, Rick,\" I said.\n\n\"I'm familiar with Jim Fain, your soon-to-be commander,\" Rick continued, \"and he's old school. In fact, he's friends with Representative Dornan, and they share the view that homosexuality doesn't belong in the military.\"\n\nMy heart sank at that news, remembering the rant that was spewed at the dining-in last year, and it must have shown on my face. Rick hastily said, \"However, he respects dedication and hard work above all else, which I know you're capable of. You continue to do that, and I'm sure he won't look too hard at your personal life.\"\n\nThe waitress came up with our check, and Rick said he'd pay for it while I studiously tried to ignore her. While we were waiting for the waitress to get back with the change, Rick passed on other tidbits he knew about General Fain that he thought I should know. I felt a little better after that.\n\nWe got up to leave, and Rick said, \"Good luck on your new assignment. Forewarned is forearmed.\"\n\n\"Thanks, Rick,\" I replied.\n\nWith that, I left to go home. I had some thinking to do while I waited for Bonnie to get back.\n\nI decided to go running. I went down to the bike path and ran 10 miles, clearing my mind. By the time I was done, I had decided to go and visit Grace and talk to her about the upcoming move.\n\nAfter I got home and showered, I called Grace and told her I needed to talk to her. She said she wasn't busy, so I headed over to see her. When I got there, we went into the kitchen and sat at the table to talk. I told her about what had happened earlier today.\n\n\"I'm glad your commander understands your situation and is willing to look the other way,\" said Grace.\n\n\"I am, too,\" I replied. \"Unfortunately, from what Rick told me, my new commander will not be as understanding.\"\n\n\"That's a shame,\" said Grace. \"How do you plan to handle the situation?\"\n\n\"The only way I can,\" I returned. \"I'll just work my ass off and make him look so good he won't even look closely at my personal life. At least I won't be working with him daily. I'm glad my direct supervisor is going to be a civilian and not another officer.\"\n\n\"I'm sure you'll be just fine. I don't need to tell you to be careful. It's a shame that you have to hide who you are. You are such a wonderful human being, and I'll always be glad you are in Bonnie's life.\"\n\n\"Thanks, Grace,\" I said. \"Speaking of being in Bonnie's life, could I ask a favor of you? Can you pick up the boys from school and keep them for a while this evening. I'd like to have some time to talk to Bonnie about this.\"\n\n\"No problem, sweetie,\" Grace replied. \"I always love to see them, especially since once you move, I won't be seeing them a lot.\"\n\n\"I know,\" I said, reaching over and taking Grace's hand in mine. \"I feel bad about taking Bonnie and the boys so far away from you. However, we are planning to have a spare bedroom so you can come and visit whenever you want for however long you want.\"\n\n\"I'm looking forward to coming out to visit,\" Grace said, squeezing my hand. \"I've always wanted to see other parts of the country.\"\n\n\"Well, I'd better get going,\" I said, getting up to go.\n\nGrace got up and pulled me into a hug, saying, \"I'll see you and Bonnie later.\"\n\nI left and got home just as Bonnie was getting there. She was surprised and concerned about seeing me already at home. We went into the house together. I told her about what had happened earlier and the arrangements I had made for the evening.\n\nWhen I had finished, Bonnie pulled me into a hug and kissed me as though if she kissed me hard enough, passionately enough, all of my concerns would go away. For a few minutes, they did.\n\n\"I love you,\" I whispered to Bonnie when the kiss ended.\n\n\"I love you more,\" Bonnie whispered back.\n\n\"Not possible,\" I finished softly, leaning in for another kiss.\n\nWe broke the kiss after what felt like twenty years or so, and without having to say a word, mutually decided to make our way to the bedroom. When we got to the bed, I went to take her top off, but Bonnie grabbed my hands and said, \"No, I want to make you scream my name. Now, get naked and get on the bed,\" she commanded.\n\n\"Yes, ma'am,\" I snarked as I undressed quickly and jumped on the bed.\n\nBonnie stood there, watching me. Once I was on the bed, she slowly undressed, locking eyes with me once she removed her top and revealed her lacy demi bra. She then toed off her shoes and removed her shorts, exposing her bikini panties. My pussy started getting hot and wet as I anticipated seeing what was under her bra and panties.\n\nBonnie slowly removed her bra and panties, revealing her treasures for my eyes to plunder. Seeing her standing there naked was never going to get old. Bonnie slowly cupped her breasts and leaned forward as though offering them up for approval. I licked my lips, wanting to suck on those hard nipples.\n\nBonnie then got on the bed and grabbed my ankles to spread my legs so she could climb between them. Once she positioned herself between my legs, she lifted my right leg, holding my ankle with her left hand as she slowly slid her right hand up my calf to my knee. I could feel the goosebumps popping up as her hand caressed my skin.\n\nBonnie nuzzled the inside of my ankle as she bent my leg and pushed it up and out. She released my right leg and turned to my left leg, lifting it up, holding my ankle with her right hand as she slowly slid her left hand up my calf to my knee. Again, the goosebumps popped as her hand caressed my skin, setting it on fire.\n\nMy nipples were aching, and my pussy was sopping wet by now. A low moan escaped my lips as Bonnie bent my left leg up and out before clambering up and placing her knees on either side of my hips. Placing her hands on the backs of my knees, she pushed them further up until they were almost even with my breasts.\n\nLeaning over me, Bonnie positioned her clit, so it was directly in contact with mine, making me twitch as they touched. Her eyes were nearly black, with the desire she held for me. My eyes were just as dilated as her beautiful face filled my entire field of view.\n\nI could feel the wetness of her pussy as Bonnie started rolling her hips, the sliding friction increasing the sensation. At the same time, our fluids attempted to reduce friction. My pussy was on fire and soaking wet at the same time. I started rolling my hips, trying to increase the rate that our clits collided, each collision sending explosions of pleasure through our bodies.\n\nI reached up and grabbed her breasts, squeezing them like stress balls, her hard nipples digging into my palms. Bonnie gasped as I did this, her eyes glazing over with desire. The dichotomy between the spongy softness of her breasts and hard nipples sent pulses through my body. I kneaded her breasts, enjoying the feeling of resistance to my fingers as they opened and closed.\n\nBonnie started increasing the tempo of her hips as our passion built. I kept time with her, my counter thrusts doubling the speed of our clits colliding. The sensation started to overwhelm me, making it harder to concentrate on keeping the tempo going. I could feel the tsunami wave of my orgasm climbing higher and higher as it came in to crash over my beach.\n\nI sucked in a huge gasp of air as the wave broke over me, and I screamed, \"Bonnieeeeeeee!\" as I lost myself to the pleasure, my hips thrusting spasmodically as my hands crushed Bonnie's breasts. Bonnie went over the cliff, screaming, \"Virginiaaaaaa!\" as she fell into her orgasm.\n\nI wrapped my legs around Bonnie's hips as she collapsed on me, both of us gasping \"Oh, God!\" over and over as we tried to recover from our mutual orgasms. I then wrapped my arms around her, trying to merge my body with hers as we slowly regained our breaths.",
        "I lay there, slowly feeling the glow of my orgasm drain away as I regained my breath. I nuzzled Bonnie's ear, whispering sweet nothings in her ear. I told her how much I loved her and how wonderful she was over and over to make sure she knew my love for her was boundless. She did the same in return.\n\nOnce we recovered, we got showered and dressed. Since this would probably be our last chance to eat there, we went to Pee Wee's Place for burgers, remembering that our first date was there. When we were done, we went to Grace's place to pick up the boys.\n\nMy last day in the office came, and my team took me out for lunch to celebrate my new assignment. We had a great time, and everyone came up to me to say that they would miss me. Col. Stevens even popped in for a few minutes to say goodbye, and I thanked him for everything before he left.\n\n***\n\nThe movers finally finished up, and we stayed the night with Grace before taking off on our cross-country trip to our new home in Beavercreek, OH. We also met Grace's friend Kathy. We acted surprised when they outed themselves to us, but we had figured it out well before that. We were glad that Grace would have Kathy to lean on while we were all the way across the country. We left early in the morning after Grace fed us breakfast. After lots of hugs and promises to call every night, we got on the road.\n\nWe swapped off driving every couple of hours as we wended our way through the greater Los Angeles area and up I-15 toward Las Vegas. Once we got on I-15 and headed through the Mohave Desert, the traffic finally thinned out enough that there wasn't any more stop-and-go traffic.\n\nWe hadn't planned any stops for sightseeing on this first leg because you can never expect to get through the traffic of greater LA without getting held up along the way. However, once we were on I-15, we were able to travel at speed. When we saw the signs for the Worlds Tallest Thermometer in Baker, CA, we decided to stop and take a look. We also gassed up and took a snack break while there. Matthew and Mark got out to stretch their legs while I was gassing up and walked up the road with Bonnie to see the thermometer. When I was done, I drove the minivan over to park in the parking lot, and I got out so we all could look at it. The thermometer had just been finished the year before and was 134 feet tall. We took some pictures and sat at an outside table to eat our snacks.\n\nWe got back on the road and made it to Las Vegas in time for dinner. We ate at McDonald's before checking into the Holiday Inn. We'd only got one room with two double beds, so the sleeping arrangements were a little cramped.\n\nAfter we all got in our beds and the lights were out, Matthew said, \"Goodnight, Mom.\"\n\nBonnie answered, \"Goodnight, Matthew.\"\n\nThen Matthew said, \"Goodnight, Mom2.0.\"\n\nMatthew had started calling me Mom2.0 ever since we had our talk about me being a lesbian. Mark hasn't wholly accepted calling me Mom2.0 yet, but he does from time to time.\n\nI replied, \"Goodnight, Matthew.\"\n\nThen Mark said, \"Goodnight, Mom.\"\n\nBonnie started giggling as she said, \"Goodnight, Mark.\"\n\nI started giggling too, thinking of the scene from \"The Walton's\" where everyone says goodnight to everyone else, as Mark said, \"Goodnight, Aunt Ginny.\"\n\nGetting into the spirit, I answered, \"Goodnight, Mark.\"\n\nOnce that was done, Bonnie and I spooned. Her ass against my hips, my right arm around her waist. The dull roar of the constant traffic outside soon lulled the boys to sleep. I was still wound up from the driving I had done, so I started nuzzling Bonnie's ear as my right hand started wandering up to cup her right breast. I could feel her hard nipple against my palm through the tee as her breath hitched slightly. I ran my thumb over her nipple, causing it to get even harder. While I was doing this, Bonnie's right hand found its way to my hip and then slid down to cup my right ass cheek, pulling me even tighter into her ass.\n\nI then took her nipple between my thumb and forefinger and started rolling it, causing her breathing to get heavier. A low soft moan squeezed out as Bonnie tried to be as quiet as possible.\n\n\"Shhh,\" I breathed into her ear as my hand slid down her core and between her legs. Bonnie lifted her right leg and draped it over my legs to give me better access as I wormed my hand under her tee and into her panties.\n\nI cupped her mound, feeling her heat and her wetness. I started to move my hand up and down Bonnie's swollen lips slowly, her hardening clit scraping my palm. Her breath hitched again and started increasing in tempo. I worked my middle finger between her lips, gathering her juices for lubrication before thrusting it slowly into her hole. Another low soft moan squeezed out of Bonnie's throat as my finger plundered her. The heel of my thumb stimulated her clit as my finger slowly pistoned in and out.\n\nI sucked Bonnie's earlobe into my mouth and nipped it just as I plunged my finger in and hit her g-spot. She sucked in a sharp breath and held it for a second, and then started spasming, and releasing her breath in soft gasps, desperately trying to stay quiet.\n\nI slowly removed my finger, pulled my hand out of Bonnie's panties, and brought it up to my mouth to lick her cum off of my finger. God, she tasted so great! Once my finger was clean, I wrapped my arm around her waist and held her tight until her breathing settled down.\n\nBonnie turned her body so that she was facing me, and her lips found mine. She kissed me, silently letting me know that she had enjoyed what I had done to her. We laid there, arm in arm, while sleep found us, and we were dead to the world until morning.\n\nAfter getting breakfast at McDonald's, we set out on the next leg of our trip. We were going to take US93 to Kingman and then I-40 to Flagstaff. We planned to visit the Hoover Dam on our way. After crossing the Colorado River, we took the exit to get on the Hoover Dam access road. We got to drive over the Hoover Dam and then parked in the Visitor's Lot. We then walked out on top of the dam, marveling at its size.\n\nAfter getting back on US93, we proceeded to Kingman, AZ, where we gassed up and ate lunch. We then drove through historic downtown Kingman along Route 66 before getting on I-40 to head to Flagstaff. By the time we got to Flagstaff, the boys were ready to get out of the minivan.\n\nAfter eating dinner, we checked into a Motel 6. This time we got adjacent rooms, one for the boys and one for us. After last night's experience, we wanted a little privacy. Once we got settled into our rooms, Bonnie and I decided to go to the nearby bar to get a couple of beers. After letting the boys know where we were going, we walked across the parking lot to the bar. It was a bit seedy, and there were a lot of truckers from the nearby fueling plaza sitting at the bar. Many eyes were on us as we got a round of Coors Light and found a table to sit down at and wind down. We weren't there for more than a minute when one of the men got up and came over to our table.\n\n\"Can I buy you two a drink?\" he asked.\n\nBonnie and I exchanged a look, and I turned to him, motioning to our nearly full bottles, and said, \"No, thanks. We're good for now.\"\n\nNot taking the hint, he pulled out a chair and sat down at our table, saying, \"I want to buy you two a drink!\"\n\n\"And I said we didn't need another drink,\" I said, taking Bonnie's hand and moving to get up. This was going somewhere I didn't want to deal with, so I decided to leave with Bonnie rather than make a big deal about it.\n\nAs we got up to leave, he saw us holding hands and loudly said, \"What are you, a couple of dykes?\"\n\nThis drew attention from a lot of the other patrons as we started to walk out. Pretending to misunderstand his question, I said, \"No. Dikes hold water back. Do we look like we're holding water back?\"\n\nHe got up and started following us. \"No, I think you're a couple of carpet munchers,\" he said with a sneer.\n\nI stopped and turned to face him. He must have been over six feet tall and overweight. I said, \"So, the fact that we're not interested must mean there's something wrong with us, rather than you're just not interesting enough for us to bother with?\"\n\nBonnie pulled my hand and whispered urgently, \"Let's just leave.\"\n\n\"You bitch!\" he shouted and went to backhand me.\n\nI had been expecting that reaction, so I was prepared for the swing. I dodged the blow, grabbed the man's wrist with both of my hands, and added my weight to his wild swing, and threw him off-balance. This sent him stumbling into the adjacent table and then crashing to the floor. I grabbed Bonnie's hand and started running for the exit.\n\nWe made it outside and continued running across the parking lot back to our motel. Luckily, he didn't follow us out, and we made it back to our room, out of breath but safe.\n\nI pulled Bonnie into my arms, asking, \"Are you okay, baby?\"\n\nBonnie was trembling from the adrenaline more than fear, so I held her until she stopped shivering. Frankly, I was shaking too, realizing what I had just done. She pulled back and looked at me with a bit of wonder and said, \"Wow, I couldn't believe what you did to that jerk. When did you learn judo?\"\n\nI was relieved that she wasn't upset about the hurtful words that had been hurled at us. I pulled her back into me and said, \"I took a self-defense course while in college. There had been a series of attacks and rapes in the area of the college. A group of us girls signed up to learn how to defend ourselves. I didn't think I'd ever had to use it, but I'm glad I could tonight.\"\n\n\"Me, too,\" Bonnie said, turning her head to kiss me. I could feel the remaining tension leaving both of us as we kissed, our passion increasing as it progressed. I wound the kiss down before things got out of control and then broke, leaning my forehead against hers.\n\n\"We'd better check on the boys and then turn in for the night. We've got a lot scheduled for tomorrow\", I said, after a short time.\n\n\"Let's not mention this to them,\" Bonnie said as we went out the door.\n\n\"Okay,\" I agreed. We went to the next door and knocked on it. The door immediately opened, and Matthew asked, \"What's up?\" Mark looked up at us from his position in front of the TV while it blared in the background. \n\n\"We're just checking up on you before we turn in,\" Bonnie said. \"Don't stay up too late since we've got some hiking to do tomorrow.\"\n\n\"Okay, Mom, goodnight. Goodnight, Mom2.0,\" Matthew said, making to close the door.\n\n\"Goodnight!\" Mark called out before turning back to the TV.\n\nWe went back to our room and prepared for bed. We laid there for a while, just holding each other, softly kissing, just enjoying the fact we were together, in each other's arms. After a bit, the kissing became more passionate, and our hands started wandering over each others' bodies. Before sleep found us, we had reaffirmed our love for each other, both coming to a shuddering climax. We forgot for a while that the world disapproved of our relationship.\n\nIn the morning, we ate breakfast at McDonald's after checking out. We got back on I-40 and started heading east. We were planning to visit Meteor Crater today. We got to the exit, which was out in the middle of nowhere. We followed the road down to the Visitor's Center, perched on the lip of the crater. The boys were really excited and wanted to take a ride down to the bottom. We didn't because of time restraints, but we did check out the Gift Shop and got drinks in the Blasted Bistro before taking off.\n\nOnce back on I-40, we made our way to Albuquerque. We saw signs for the Acuna Pueblo, but we didn't have time for the side trip. By the time we got to Albuquerque, we were ready to call it a night. We managed to get a suite at Ramada Inn so Bonnie and I would get the bedroom, and the boys would sleep on the sleeper sofa. Bonnie and I enjoyed the privacy of the bedroom since we needed to relax from the tension accrued from driving.\n\nWe spent the next day walking through Old Town, visiting the shops. We also visited the Indian Pueblo Cultural Center on 12th S. NW. While there, we saw a pole dance. The performers climb a tall pole and then swing down and around the pole, upside down on a rope. We also saw rug weaving and pottery thrown by Native Americans from the nearby pueblos. The boys really enjoyed that more than the shop browsing that Bonnie and I enjoyed. We also visited the Turquoise Museum, where the largest piece of turquoise ever found was displayed. We learned a lot about turquoise there and got to watch a jeweler creating turquoise jewelry.\n\nWe decided to eat dinner at the restaurant at the top of the Sandia Tram on Sandia Peak. It was at 10,300 feet in altitude with a panoramic view off to the west. The Sandia Tram was one of the longest trams in the world. It was 2.7 miles long and only had two towers between the bottom and top, rising almost 5,000 feet. At one point, the tram car is more than 1,000 feet off the ground. The boys really enjoyed the ride up the mountain, going back and forth from the front to the back to see where we were going and looking out at the view to the west.\n\nThe dinner was delicious, and we enjoyed the view while we ate. The food was local fare. One thing you'll always get asked by the wait staff in any restaurant in the Albuquerque area is the question, \"Red or Green,\" meaning do you want red or green sauce on your food. I prefer red to green. The boys really enjoyed trying both. I had to caution everyone that the chilies were very hot and to be careful with them. I had experienced the pain of biting into a habanero pepper that I hadn't known was stuffed in a steak when I had been assigned here nine years ago.\n\nThe sun was setting as we took the tram back down to the bottom of the mountain. We got some ice cream before heading back to the hotel. That night Bonnie took the lead and pleasured me into oblivion. Thank God the bed didn't squeak. Bonnie went wild, and I had to wear a collared shirt for the next two days to hide her bite mark on my collarbone. I was thrilled and also a little taken aback at the fierceness of her look after she marked me and said, \"You're mine!\" God, I love that woman.\n\nThe next day we took I-40 to Amarillo before getting on US287 to Wichita Falls. The scenery was pretty flat and dull for most of the day. We did see some buffalo along the way, the boys excitedly pointing them out to us when they saw them. We had to share a room again that night, so Bonnie and I quietly fingered each other to a simultaneous climax, hoping the boys didn't notice.\n\nToday was a short driving day. We got into the Dallas/Ft. Worth area by lunchtime. Before checking into our hotel, we visited the National Cowgirl Museum and Hall of Fame. After checking into our hotel, we went out to do some sightseeing. Since we had to share a room with the boys, we just spooned. This time, Bonnie was spooning me, and she tormented me as I had to lay there being quiet.\n\nThe next day we spent the whole day at the Fort Worth Stockyards National Historic District. We got to see a simulated cattle drive. Matthew and Mark really enjoyed the show. The longhorns really did have long horns that you had to see to believe. We also got to see a rodeo show. I think that was our favorite part of the day. Naturally, we hit up the gift shop, and everyone ended up with a cowboy hat. This time, when we went to bed, I spooned Bonnie and returned the favor, making her quietly shudder to a climax.\n\nThe leg from Fort Worth to Little Rock was uneventful. We saw a lot of oil wells pumping away out in the fields as we drove by. When we got to Little Rock, we visited the Museum of Discovery. The boys really enjoyed the interactive displays while Bonnie and I chilled, enjoying each other's company. We spent another night in a shared room, so we again settled for spooning and quietly getting each other off.\n\nThe next day we only planned to make it to Memphis and see if we could visit Graceland. When we got there, I was shocked at how small it was in real life, compared to all of the hype you hear. The boys weren't that thrilled about it since they were never Elvis fans, but Bonnie and I really enjoyed the tour. We did enjoy the ribs for dinner at Neely's Bar-B-Que. We got separate adjacent rooms at the Holiday Inn so Bonnie and I could have some privacy. We took advantage of it, and we both had several shuddering orgasms before falling asleep.\n\nAnother short trip today from Memphis to Nashville because we wanted to visit the Grand Ole Opry. We got to see Chely Wright perform, and we really liked the show. The boys enjoyed the tour, and Bonnie and I enjoyed the Gift Shop. After the previous night's excesses, we ended up just spooning since we were sharing a room with the boys again.\n\nThe next day we stopped in Pigeon Forge on our way to Gatlinburg. We would spend three nights here, so we splurged on a cabin up in the hills outside Gatlinburg. It had two bedrooms and a four-person Jacuzzi on the deck overlooking the Smokies. The two bedrooms were on opposite sides of the cabin, with the main living area between them, so we didn't have to be as quiet at night when pleasuring each other. It had a full kitchen, so we could prepare our own meals and just chill and enjoy the peace and quiet.\n\nWe visited a lot of shops and took in as many tourist sites as we could. Each night, we'd get back to our cabin and spend some time in the Jacuzzi before going to bed. Mostly, it was just Bonnie and me using the Jacuzzi since there was cable TV available. The boys preferred watching TV to watching us make out like two teenagers in the Jacuzzi.\n\nOur road trip was nearly over as we headed out to get up to Beavercreek, OH. It took quite a while to get through Pigeon Forge since everyone was leaving at the same time. Once we got back out onto I-40, traffic eased up. We jumped onto I-75 at Knoxville, and we wended our way north through Kentucky. We stopped in Jellico for lunch. When we got to Lexington, we visited the Horse Farm. The boys really enjoyed seeing the statues and the display showing the length of Secretariat's strides. We stopped in Florence, KY, for dinner at a place called the Drawbridge Inn. Their specialty was prime rib, so we all got it. It was delicious, and the boys now have a new favorite cut of beef.\n\nIt was getting dark as we headed toward the cut-in-the-hill to get over the Ohio River into Cincinnati. As we came over the top of the hill to begin the descent to the Ohio River, the Cincinnati skyline was revealed. I was immediately reminded of the soap opera 'The Edge of Night.' It featured the Cincinnati skyline in the intro to the show, even though all of the action supposedly takes place in New York City. An hour later, we were pulling into Beavercreek, OH.\n\nWe were leasing a three-bedroom house. Again, I was able to get a good deal on the lease. The house belonged to an officer who had been assigned to Scott AFB. It was a charming ranch with the master bedroom at one end and the other two bedrooms on the other end of the house. Bonnie and I would have a little more privacy and wouldn't need to be as quiet as we have been.\n\nWe had two weeks to settle into our new place before I reported to my new assignment. The movers showed up two days after we got there, so we roughed it the first two nights. Based on experience, I was expecting the schedule to slip, so we had packed sleeping bags to sleep in if it did. We spent the first day there grocery shopping to stock up on food and other necessities. We were glad when the moving van showed up, even though it was a lot of hard work getting everything unloaded and set up in the right rooms. We had the house set up by the time I reported in, and the boys checked into their new school.\n\nDuring this time, Bonnie and I discussed with Matthew and Mark how careful they had to be about saying anything about having two moms. I explained that here, unlike in LA, there were well over ten thousand military personnel and fifteen thousand civilian employees at the base. While the chances of running into someone in the military back in LA were minimal, here, the military presence was much higher, as much as ten percent of the local population. The Fairborn School District was one of the largest in the state due to all of the military children.",
        "Wright-Patterson AFB was divided into three areas. My assignment was to ASC in Area B, the original Wright Field named after the hometown heroes Orville and Wilbur Wright. I reported to my new duty station and was directed to my new supervisor, Alice Waters. I was pleased to find that she was a woman and a beautiful one at that. She was about five years older than me, about 5' 6\", with black hair and brown eyes. She was smartly dressed in a lovely pencil skirt, white button-up blouse, and a matching blazer. Since she was a civilian, I didn't have to salute when I entered her office.\n\n\"Please, Virginia, have a seat. I'm not into formality here, so just sit back, and we'll chat a bit,\" Alice directed. As she went around her desk to sit down, she was scoping me out while I was scoping her out. I was getting a sense that I wouldn't have to worry about her being personally upset that I was a lesbian. Call it 'gaydar' or whatever, but I was getting some possible hints, not yet confirmed, that she might be that way, herself. I wondered if she was picking anything up from me. \"Be careful,\" I thought to myself. I made sure to keep my left hand positioned so she couldn't get a good look at my ring.\n\n\"Thank you, Ms. Waters,\" I said as I sat across from her, throwing up a calm facade that I didn't feel.\n\n\"Unless we're in a formal setting, I'm Alice,\" she replied with a smile.\n\n\"Okay, Alice. I'm looking forward to my new assignment.\"\n\n\"Yes, I've got you penciled in for the avionics group, specifically the IR sensor suite. You've done an incredible job with IR sensors throughout your career, and I'm really looking forward to having you on the team.\"\n\n\"Thanks, Alice,\" I answered, pleased that she was interested in my career.\n\nShe leaned in and said in a low voice, \"I've also been read into the program that you worked when you were last assigned to this base. I know General Travis, and I'm aware of that situation that didn't officially happen. Your work has made you known to a lot of people with pull, and I'm pleased that you wanted to work on this program.\"\n\nI was taken aback for a second but then leaned in and said, in a low voice, \"Thank you. I'm glad I don't have to talk around what I did back then.\" It was a relief that I wouldn't have to worry about it coming up and having to lie about it if asked.\n\nAlice then sat back and said, \"As you know, we're currently going through the down-select between Lockheed and Northrop. It's not going to do much good for you to immerse yourself into both contractors' avionics suites since one of them is going away in the next few months. So, until we know whose avionics suite is going to be built, I have something a little different for you to do in the coming months.\"\n\n\"Okay,\" I said, \"whatever it is, I'll do the best I can.\"\n\n\"Good,\" said Alice. \"I'm going to send you off to the Software Engineering Institute (SEI) at Carnegie Mellon University (CMU) to learn how to do software process assessments. As you may know, the Air Force is making a big push for software process improvement, and the work they're doing at SEI is a direct result of that push.\"\n\nAlice then turned to the bookshelf, pulled a book off, and turned back to hand it to me. It was titled 'Managing the Software Process' by Watts S. Humphrey. As she gave the book to me, I made sure to use my right hand to take it from her. As I went to pull it back, she managed to brush her finger along the edge of my hand. Making sure I didn't react, I pulled the book back into my lap.\n\n\"I want you to read this so you'll be prepared for the classes you'll be taking there,\" Alice continued as she studied my face for any reaction to her touch. Not finding one, she went on, \"The next scheduled block of classes will start in two weeks, and I already have you signed up for it. You'll be there for two weeks. Once you're back, then we'll get back together to plan the next steps.\"\n\n\"Okay, Alice,\" I replied, relieved that I apparently passed her test. I was intrigued by the new assignment.\n\n\"My administrative assistant, Mary Ann, has all of the information for you,\" Alice said. \"I've tasked her to get everything arranged for the TDY, so just get with her to get set.\"\n\n\"I will,\" I said as I got up to leave.\n\nAlice also stood up and walked me to the door, placing her hand lightly on my elbow. I did my best not to react as I felt her touch. As we went out the door, she called out, \"Mary Ann, here's Virginia. Once you've shown her what you've already got set up, would you show her where her desk is, so she can get settled in? Thanks!\"\n\nAlice went back into her office, and I walked over to Mary Ann's desk. She invited me to sit down. We spent the next fifteen minutes going over everything. She asked me a few questions about my preferences for flying and seating and the type of hotel room I wanted. She then showed me where my desk was. Unlike my office at LAAFB, I was out in a sea of cubicles this time. Luckily, they were high-walled cubes, so I had a modicum of privacy.\n\nThat night, I discussed my suspicions about Alice with Bonnie. I assured her that I would be careful in my dealings with Alice, making sure that nothing happened between us.\n\n\"Sweetie, I'm not worried about your straying,\" Bonnie said, taking me in her arms and kissing me. \"God, I love this woman,\" I thought to myself as I returned the kiss just as fervently.\n\nAfter breaking the kiss, Bonnie went on, \"I just hope she doesn't try pursuing you or putting you in a precarious position.\"\n\n\"I'll just make doubly sure that anything I say or do can't be misinterpreted,\" I said.\n\nWe then discussed my trip to Pittsburgh for two weeks. I'd be back before my 36th birthday, so Bonnie was looking forward to planning for it.\n\nOver the next two weeks, I got settled into my desk and met with the rest of the group, one-on-one, to get to know them and find out what roles they played. They were all hardworking people, and I was pleased that the officers working with me were competent and personable. I managed to avoid spending any private time with Alice, always making sure any meeting occurred in a public space with other people involved in the conversation.\n\nDuring this time, Bonnie was looking for a temporary job to keep her busy during the day until the next semester of college started. Bonnie wanted to go back to school to get a degree so she could do something more meaningful than waiting tables. Bonnie had always been interested in being a nurse. She was really excited to find out Wright State University, located close to the base, had a bachelor's degree program in nursing. We were hoping that she'd be able to go full-time since, in about four years, I'd have to start working on another assignment. There was no guarantee that it would be at WPAFB.\n\nSince I would be gone for two weeks so soon after settling in, we decided to fly Grace in for her first visit while I was gone. Bonnie would help her get her bedroom set up while she was here. Grace was thrilled about the trip and said she was looking forward to it.\n\nThe Thursday before I was to leave to go to Pittsburgh, I got a call from Barbara, General Fain's administrative assistant. She told me that General Fain wanted to see me Friday at 9 AM. I was glad that I would be able to meet him before I went off for two weeks.\n\nShortly after that call, I got called by Mary Ann to tell me that Alice wanted me to pop in for a minute. I said, \"Okay, Mary Ann, I'll be right there.\"\n\nI walked over to Alice's office and poked my head into her office. \"Come in, Virginia,\" she said, waving me in to take a seat.\n\n\"What's up, Alice?\" I asked as I sat down. Today, I was wearing a skirt, and I noticed that Alice's eyes briefly darted to my legs while I crossed them.\n\nAlice smiled and said, \"I heard that you're going to see the boss tomorrow.\"\n\n\"Yes,\" I said, smoothing my skirt, drawing another darting look from Alice. \"I'm glad I get to see General Fain before I go to Pittsburgh.\"\n\n\"I am, too. The boss needs to know that you're a real go-getter, so make sure you present yourself positively tomorrow,\" Alice continued. \"He's a fire-brand and can be a bit course when talking to subordinates. Just don't take anything he says personally, and you'll be fine. He's going to try to intimidate you, so just stay strong, and whatever you do, don't look down submissively at any time.\"\n\n\"Okay, Alice,\" I said, both pleased that she's trying to help me and a little disturbed that people need to be warned about General Fain when going in to see him for the first time. \"He's really that scary?\" I asked.\n\n\"He's not really a bad person, once you get past his brusqueness, but it can really be intimidating if you're not expecting it,\" Alice replied. \"I'm sure you can handle it, but I wanted to take a moment to give you a heads up.\"\n\n\"Thanks, Alice,\" I said. \"I appreciate it. You don't have to worry about me.\"\n\nI got up to leave, and as before, Alice got up to escort me out and again briefly touched my elbow as I left her office. I was even surer now that Alice was interested in more than just my contributions to the team. I again warned myself to be cool and not react. The last thing I needed was to do anything to lead her on. I wouldn't want to disappoint her by rejecting her advances, especially if that rejection causes her to retaliate by outing me.\n\nThe next morning, I wore my Class-A uniform for my meeting with General Fain. Bonnie fussed over me, making sure my blouse was spotless.\n\nAt 8:55 AM, I was in front of General Fain's door. I tried not to be nervous as I stood there, waiting for 9AM, willing myself not to fidget. Promptly at 9AM, Barbara opened his door. I went in, turned to face him, came to attention, and staring straight ahead, saluted, saying, \"Major Hanratty reporting as ordered.\"\n\nGeneral Fain sat there, appraising me for a few seconds before returning my salute and saying, \"At ease, Major. Please be seated.\"\n\n\"Yes, sir,\" I replied as I sat in the proffered chair.\n\n\"I've heard some good things about you, Major, and I'm expecting great things from you. This isn't going to be a picnic. This program is vital to the security of the United States. There isn't going to be any slacking allowed. Is that understood, Major?\" General Fain barked at me.\n\n\"Yes, sir,\" I replied, not showing any nervousness as I made sure to maintain eye contact with him. \"I'm looking forward to making a significant contribution to this program.\"\n\nGeneral Fain leaned forward, seeing if I would flinch back. When I didn't, he slightly smiled before saying, \"That's what I like to hear, Major.\"\n\nHe then sat back and gestured for me to relax. I must have met his approval because he went on, in a more normal voice, \"I really meant that, Major ... I have heard a lot of good things about you. I talked to both Col. Lyles and Col. Stevens, and they both have nothing but great things to say about your work on their programs. I also talked to General Travis, and he had nothing but praise for you, and I have to tell you that that impressed the hell out of me. I really need you to do the same here, especially with all of the congressional attention on this program. The upcoming down-select is going to make a big impact on how the program goes forward from here.\"\n\n\"Yes, sir, whatever it takes,\" I said, relieved that I had passed his test.\n\n\"Okay, then, let's be about it,\" General Fain said, indicating the meeting was over.\n\nI stood up, came to attention, and saluted. Once General Fain returned my salute, I turned and left his office, closing the door behind me.\n\nI walked back to my office, relieved that that ordeal was over, pleased that I seemed to have made a good impression on him.\n\nI flew out Sunday on USAir to Pittsburgh. Since I was going to be gone for two weeks, Bonnie drove me to the airport. As we came up to the main entrance, Bonnie stopped the car, and we both jumped out to get my luggage. After pulling both bags out of the truck, I said, \"I'll call you as soon as I get checked in. Love you!\"\n\nBonnie took my hand briefly before letting it go, remembering we were in public, and said, \"I love you too. Have a safe trip.\"\n\nI hated that I couldn't just take this beautiful woman in my arms and remind her how I felt about her. I had to settle for a smile as I said, \"I promise.\"\n\nAs I entered the terminal, I looked back and saw Bonnie still standing there, watching me go. My heart swelled, knowing how much she loved me. I hated having to leave her, but the coming home welcome will make up for it. At least Grace would be there to help Bonnie while I was gone.\n\nOnce I got settled into the Wyndham Hotel, I called Bonnie to let her know what room I was staying in if she needed to call me. The hotel was only three blocks from the SEI, so I could walk over if the weather was good.\n\nThe following two weeks went by in a blur. The classes were exciting, and there was a lot of back and forth between the trainers and trainees. The highlight of the two weeks was actually getting to meet Watts Humphrey. He was a shy and retiring person, but he really knew his stuff. I got to talk to him one-on-one, and he told me that he would look forward to working with the ATF program as they did assessments on their contractors. He gave me his contact information to pass on.\n\nEach night, I made sure to call Bonnie and let her know how much I missed her and how much I was looking forward to getting back. The phone sex was hot and, while satisfying at the moment, only whetted our desire to get together when I got home.\n\nFinally, Friday came, and I couldn't wait to catch my flight. I couldn't believe a plane could fly that slowly and still stay in the air. The seventy-minute flight seemed to last for hours. Finally, we arrived. I swear my luggage must have stayed to party with the baggage handlers because it seemed like forever before my bags showed up on the conveyor belt.\n\nFinally, I made it out to the main concourse and saw Bonnie waiting for me. Thankfully, Grace and the two boys were also there because I would have found it nearly impossible to not leap into Bonnie's arms and take her right there on the floor. Instead, I just walked up, gave Bonnie a smile, and greeted Grace with a hug before hugging the two boys. I turned to Bonnie and said, \"I'm glad to see you.\"\n\n\"I'm glad to see you too,\" Bonnie said with a smile as she took one of my bags. We walked out to the near-term parking and loaded my luggage in the back of the minivan. We left the airport, got on I-70E, then onto I-75S, and headed for home. I sat in the back with the boys on the way home, catching up on what they'd been doing in school while I was gone. All the time, I kept glancing up at Bonnie, aching to take her in my arms but not wanting to distract her while she was driving.\n\nFinally, we made it home. We got my luggage into the house, Matthew and Mark, each taking one of my bags. I took Bonnie's hand as we walked from the minivan into the house. Once inside, my luggage was put in the bedroom. I turned to Bonnie and pulled her into a hug. I whispered in her ear, \"I want you naked so bad.\"\n\n\"No more than I want you naked,\" she whispered back.\n\nGrace, understanding what we were holding back, turned to the boys and said, \"Let's go and make some popcorn and watch a movie. I think Virginia is tired and wants to go take a nap.\" She turned back to us and winked.\n\n\"Yes, I do think I'll go take a nap,\" I said as I let go of Bonnie and headed for my bedroom.\n\nI went into my bedroom and started to undress. I decided to take a quick shower before hopping into bed. I knew Bonnie would slip into the bedroom in a few minutes, and I wanted to be ready for her. I got undressed and got in the shower. I was only there for a minute before I felt the shower door open, and Bonnie joined me under the water.\n\n\"Need any help with your back?\" she purred into my ear as she wrapped her arms around my ribs, her breasts crushed against my back, her hard nipples scoring my skin.\n\n\"That's not where I need help,\" I groaned, my desire overcoming me.\n\nBonnie slid her hands off my ribs and down to my core, coyly asking, \"Do you need help here?\"\n\n\"Lower,\" I growled, my juices flowing in a futile attempt to put out the fire burning in my pussy.\n\nBonnie's hands slid down and onto the flair of my hips, asking, \"Do you mean here?\" as she nuzzled my ear.\n\n\"No,\" I moaned in frustration, wanting to grab her hands and place them where I needed them to be.\n\n\"Oh, you must mean here,\" she whispered as her hands moved, her right hand cupping my mound and giving it a little squeeze as her left hand slid up to cup my left breast, giving it a squeeze also.\n\n\"Oh, God, yes,\" I moaned as I thrust my hips forward and arched my back.\n\n\"Well, you should have just said so,\" she said as she worked a finger between my lips, at the same time taking my nipple between her thumb and forefinger and rolling it.\n\nThe dual sensations of the penetration and the nipple roll sent simultaneous shocks to my clit, and I started rolling my hips and moaning even louder.\n\nHer finger worked its way into my pussy, slowly penetrating in until her knuckle was nestled between my lips. Bonnie swirled her finger, stimulating every bit of my pussy, causing me to jerk when it brushed my g-spot. \"Oh, God, Bonnie,\" I moaned.\n\nBonnie pulled my nipple out before letting it snap back. She then slid her left hand over to cup my right breast, again making sure my nipple was between her thumb and forefinger. At the same time, she was working her ring finger in beside her middle finger, stretching my walls as she slowly pistoned them in and out. When the base of her thumb hit my clit, the pulse made me buck again, attempting to increase the stimulation. Bonnie moved her lips down over my jaw to my neck and started licking and nibbling the spots she knew made me weak at the knees.\n\nThe sensations I was experiencing were making me writhe under her ministrations. I started panting, feeling the wave of my orgasm start rising up to wash over me. Bonnie sped up her thrusting, increasing the height of the oncoming tsunami. Suddenly, it broke over me, and I screamed, \"Bonniiieeee!\" as I was buried under my orgasm. My knees buckled, and if Bonnie hadn't been there to support me, I would have collapsed to the tiles. As it was, I barely stayed upright, my chest heaving, as I came down from my climax. Bonnie held me tightly, whispering, \"I love you,\" over and over in my ear until I was recovered enough to stand on my own.\n\nI then turned around in Bonnie's arms until I could wrap her in my arms, our breasts crushed together. I put my right hand behind her head and pressed in for a kiss that started out slow but quickly grew hot as I poured every bit of the love I felt for her into it. Our tongues made frenzied love to each other as we continued kissing. I ran out of breath and had to break to gasp in some air.\n\nWe stood there, our foreheads touching as we stared into each other's eyes, the hot water pouring over us as we basked in the love we felt for each other. \"God, I love you so much,\" I murmured, knowing those words so inadequately described what I felt for her that it almost cheapened the moment.\n\nAfter a few minutes, we reluctantly separated and finished our shower, washing each other's back. Once out, we dried each other off, the rush of the towel over my skin, making me warm and tingly, as I'm sure it did for Bonnie.\n\nOnce dry, we repaired to the bed. Bonnie made it clear that she wanted to take the lead as she directed me to straddle her head as she lay down on the bed. I grabbed the headboard and lowered my hips down until Bonnie could work her tongue between my engorged lips, forcing a gasp from me as her tongue worked its way into my pussy. Her hands slid up my sides until she could cup both of my breasts in her hands. The feel of her palms sliding over my nipples made them spring to attention, getting hard and aching.",
        "The feel of her tongue plundering my pussy was incredible, and I started rolling my hips. This caused Bonnie's nose to nudge my clit on each downstroke, sending a spark shooting to my nipples and brain. I tried not to press down too hard on Bonnie's face by holding myself up with the headboard. However, Bonnie had other ideas and grabbed my breasts and pulled me down, so I was grinding my pussy hard against her face.\n\nI looked down at Bonnie's face, locking our eyes as she thrust her tongue in and out as if it were a penis. As we stared into each other's eyes, I sped up my hip rolls, wanting to stimulate my clit faster. I could feel my orgasm slowly build as Bonnie thrust her tongue faster and faster into my pussy. Suddenly, Bonnie pulled her tongue out and clamped her lips onto my clit, sucking it in like an all-day lollipop. I gasped, almost losing my grip on the headboard as she crushed my breasts while gently chewing on my clit. I threw my head back and screamed, as quietly as I could, \"Bonniiieeee!\" I started thrashing as my orgasm crashed over me, trying to shove my abused clit even further into her mouth.\n\nI did lose my grip on the headboard as my vision faded out, and I slowly collapsed onto the bed, Bonnie guiding my body as it came down.\n\nI was lying there in a cloud of euphoria, eventually opening my eyes to see Bonnie's face hovering over mine. \"Oh, God, Bonnie, that was incredible,\" I panted, still trying to catch my breath.\n\nBonnie smiled as she leaned in to nuzzle me and whispered, \"I told you the coming home sex would be great.\"\n\n\"Oh, my God, 'great' doesn't even come close to describing what you did to me,\" I panted as I tasted myself on her lips.\n\nBonnie lifted herself up and moved away to pull the duvet up over me. \"Just rest here for a while, sweetie. I'll check in on you later.\"\n\nBonnie got off the bed, pulled her clothes on, and turned the lights out before leaving the bedroom. I fell asleep, secure in the knowledge that I was loved.\n\nOver the next two months, everyone but I was busy with the down-select. At Alice's direction, I wrote up a position paper on what I learned at the SEI and how it could be applied to the ATF program. My proposal was to build a team to perform software process evaluations. They would evaluate all of the contractors developing software for the avionics and weapons systems on the aircraft. I listed several potential members and put together a proposed budget for travel and expenses for performing the evaluations.\n\nOnce I had all of the figures put together in my position paper, I got with Mary Ann to schedule an hour with Alice to show her what I had. Going over her calendar, Mary Ann put me in for an hour at 4 PM on Friday. I thought that would work out great since I could then go home afterward.\n\nFriday afternoon, I was outside Alice's door at 3:55 PM. Right at 4 PM, Alice opened her office door and invited me in. As I entered, Alice once again lightly touched my elbow as she ushered me into her office. As she went around her desk to sit down, she once again ran her eyes over my body, resting briefly on my legs as we sat down. \"Calm down,\" I scolded myself as my body reacted to her interest, despite my brain knowing how dangerous this could be.\n\n\"So, Virginia, let's see what you have,\" Alice said as I leaned forward to hand her my position paper.\n\nFor the next 45 minutes, I went over what I had put together, explaining what I hoped could be accomplished by doing the evaluations. Alice nodded from time to time, clearly impressed with what I had put together. Once I had covered everything, I sat back and asked, \"Do you have any questions?\"\n\nAlice pondered for a moment and then asked, \"Can we go over those travel numbers again?\"\n\n\"Sure,\" I replied. \"If you turn to page 23, I've broken out the numbers by scenario.\"\n\nAlice flipped through the pages, and when she found the page I had pointed out, she studied it for a moment. She then looked up and asked, \"Could you tell me where you got this number here,\" as she tapped one of the numbers.\n\nNot knowing which one she was pointing at, I got up and came around her desk to her left, and leaned in to see which number she had a question about. I realized how close I was to her. As I leaned in, my right breast nearly brushed her left arm. \"Careful,\" I warned myself as Alice slightly shifted, causing her shoulder to touch my shoulder. \"Which number?\" I asked.\n\n\"The number of people assigned to the team for TRW is one more than the rest,\" Alice said.\n\n\"Oh, that's because I was able to get Watts Humphrey to come on this assessment. He wants to evaluate our evaluation team for SEI,\" I said, reaching down with my left hand to point to the footnote. When I did, I realized that I had just given Alice a close look at my ring.\n\nAs I drew my hand back, forcing myself not to jerk it away, I thought I saw her eyes following my hand for just a bit, and I thought I heard a slight hitch in her breath. I stood back up, and as I did, I hurriedly asked, \"Do you have any other questions?\"\n\n\"No, not at this time,\" Alice said after a moment of silence.\n\nI circled around and took my seat. I steeled myself, saying, \"Just keep calm,\" to myself, and looked Alice in the eye, not knowing what to expect. Surprisingly, I didn't see anything that would suggest she had noticed anything. Relief went through me as I realized I had just dodged a bullet.\n\n\"What do you think?\" I asked, anxious to distract her away from my faux pas.\n\n\"I like what you've put together here. Let me look over it for a couple of days, but I think we can take this to the boss and get his input. I'll let you know if I need anything else, and when we get time to see General Fain,\" Alice said as she closed the document and set it aside.\n\nAlice stood up, and I did, as well. As I walked out, she once again rested her hand on my elbow as she escorted me out. I noticed that Mary Ann was already gone, as Alice said, \"Have a good weekend, Virginia.\"\n\n\"Thanks, Alice, I will,\" I said. \"You do the same,\" I said as I turned to head back to my desk. A brief look flickered across her face that came and went so fast, I wasn't sure what it was or if I had actually seen it. As I walked away, I was keenly aware that she was watching me. The feeling persisted until I turned the corner and got to my desk.\n\nI hurriedly got my stuff together and headed out. \"God, I hope this doesn't turn into something,\" I fervently hoped as I left.\n\nNext Tuesday came, and as I was roughing out briefing slides in anticipation of having to brief General Fain, I got a call from Mary Ann. Alice wanted to see me at 11 AM. I thanked her and went back to working on the slides until it was time to see Alice.\n\nAt 10:55 AM, I was outside Alice's office, waiting to see her. Promptly at 11 AM, Alice's door opened, and she motioned me to come in. As before, she put her hand on my elbow as she guided me into her office. This time, however, I felt her thumb do a little circular rub before she let go to go around and sit at her desk. \"Oh, God,\" I thought to myself, \"where is this going?\"\n\nCalming myself, I sat down, crossing my legs as I did so. I caught Alice watching, her eyes holding on my legs at the hem of my skirt for a beat before looking me in the eye as she sat down. She began by saying, \"I've reviewed your proposal, and I like it a lot. I'm going to get us on General Fain's calendar next week, so I'd like you to start putting a briefing together to explain your proposal.\"\n\nRelieved that Alice was going to get right down to business, I said, \"Thanks, Alice. Actually, I've already started putting one together in the event you decide to go forward with this.\"\n\n\"Great,\" Alice said, a smile on her lips. \"Let me know when you have them done, and we'll go over them before next week.\"\n\nI smiled back, saying, \"Thanks, Alice. I should have it done by Thursday afternoon so we can go over it and make any changes we need.\"\n\nAlice suddenly looked down and then nervously asked, \"Virginia, do you have any lunch plans for today?\"\n\n\"No,\" I said, pausing as I considered where she was going with this, \"I was just going to pop into the cafeteria to get a salad. Why?\"\n\n\"I think we need to talk,\" Alice said, looking up to me with a questioning look on her face. \"Can we do Bennigan's out on Colonel Glenn at noon?\"\n\n\"Okay,\" I said, dreading what I was thinking was going to happen. I figured I might as well get it aired out if Alice confronted me about my sexuality. \"Do you want to go together?\"\n\n\"No,\" said Alice, a look of relief on her face, \"let's just meet there.\" Alice got up, signifying our meeting was over. I uncrossed my legs, drawing another glance from Alice before standing up. As I left her office, she just followed me out, not touching my elbow like she had every time before.\n\n\"Thanks for the updates,\" she said as I walked back to my cube. I could feel her eyes on me all the way to the corner, where I turned to go to my desk.\n\nWhen I got to my desk, I sat there for a minute, trying to get my thoughts together. I was sure Alice knew I was a lesbian, and I wondered if she would use that against me. If Alice does, what pull do I have to fight back? Would she want to be outed if she outs me? Maybe we can work this out. On the plus side, if she does know, perhaps we can work together and cover for each other.\n\nAt noon, I was waiting at Bennigan's for Alice. I saw her coming in the door, and I rose to greet her, saying, \"Hello, Alice.\"\n\n\"Hello, Virginia, thanks for coming,\" Alice replied, a tentative smile on her face.\n\n\"I think we need to talk, so I'm glad we have this opportunity to do so,\" I said, smiling back. Since we were going to put everything on the table, I took the opportunity to appraise her appearance. She was wearing high-waist slacks, a button-up white blouse, and a blazer complimenting her pants. She was a good-looking woman that, if I were single, I would certainly make a run at her. I'm pretty sure she feels the same way about me.\n\nWe got a table in the corner and sat across from each other. While we were waiting for the server, Alice leaned in and, without beating around the bush, said, \"You're a lesbian.\"\n\nGlad that Alice came right to the point, I leaned in and answered back, \"Yes, and you're one also. Is this going to be a problem?\"\n\n\"God, no!\" Alice softly exclaimed. \"I just wanted you to know, I know. I know how bad it can be if anybody in the military finds out about your sexuality. Hell, it's bad enough if they find out about me. I can't imagine how hard it's been for you to have to deny who you are.\"\n\n\"Oh, thanks,\" I replied, relieved that I wasn't in trouble. \"You're right. It's been tough, but I've managed so far. I've been warned about General Fain and his position on homosexuality. I'm willing to take the chance anyway since this assignment will be a big boost to my career.\"\n\nJust then, our server came up with the menus and asked for drink orders. I ordered an unsweetened ice tea, and Alice ordered the same. The server left to get our drinks, and we took a minute to look at the menus. I settled on a Chef Salad while Alice ordered a Cobb salad.\n\nThe server came back with our drinks and took our orders and the menus. Once the server was gone, we resumed our conversation. Grateful that I was going to have someone in my corner, I said, \"I had noticed you scoping me out. I appreciate the fact that you are interested in me. I do want you to know that I am in a committed relationship, so I'm not available.\"\n\nI held out my left hand to show her my ring, saying, \"My partner and I have been in a relationship for nearly three and a half years now. She has two wonderful boys that I love to death.\"\n\n\"That's what I thought when I got a good look at your ring for the first time last Friday,\" said Alice, a rueful look on her face. \"I have to admit, it took me by surprise because, frankly, I was interested in trying to pursue a relationship with you. You're a damn good-looking woman, as well as smart as a whip.\"\n\n\"You're no slacker yourself,\" I replied. \"If I were unattached, I might have let you take that run at me.\"\n\nOur server came back with our food. We talked to each other about ourselves, grateful that we could now be open with each other. Once lunch was over, we went back to the office. Suddenly, it felt good to be working in the office, knowing I didn't have to worry about Alice. I still needed to be careful around everybody else, especially the military members.\n\nAlice and I worked on the briefing for General Fain. When we presented it to him, he got enthusiastic about it. Not only would it help the ATF program, but it would also show Congress how dedicated the Air Force was to software process improvement. He told us to start working with the budget group to get the funding needed to go forward. As we left his office, he thanked us for being proactive on the issue.\n\n***\n\nOnce the down-select was complete, it was announced that Lockheed had won the contract to build the ATF. It would now be known as the F-22 Raptor. Now that we knew which avionics suite would be developed, I could start getting up to speed on what each contractor was building. I could also update my budget requests for the software process evaluations with the numbers for the contractors we would be visiting.\n\nThe next six months were a blur of activity as I had to take a lot of trips to the contractors to get up to speed on the avionics systems. I spent a lot of time traveling to Martin Marietta in Orlando, TRW in Redondo Beach, and General Dynamics in Ft. Worth.\n\nAt the same time, plans were going ahead with doing the software process evaluations. Our original schedule for the assessments was pushed back due to the contractors' reluctance to participate. We compromised and gave them more time to prepare for the evaluations, keeping in the back of our minds that they were attempting to game the assessments.\n\nFinally, we had the first evaluation scheduled, and all of the team members lined up to participate. We picked TRW to be the first contractor to be evaluated. As a bonus, Watts Humphrey was available, so he was going to be on the team. He also volunteered a couple of his staff from SEI to sit in on the evaluation as an additional resource we could tap if we had any questions about the evaluation process. They were not to participate in evaluating the assessment results but to sit in to make sure our team was performing the evaluation process correctly.\n\nThe evaluation was to take place over three days. In addition to evaluating the practices that TRW was using to develop software, we would also pick some software developers to randomly interview. We asked for a list of all of the people developing software throughout TRW, not just those working on the contract for the F-22. When I went over the list of people, I recognized one name, Candy Kane. She had worked on the SDI program I had been involved with, but TRW hadn't made the down-select. I put Candy on the list of people to be interviewed, knowing how hardworking she was.\n\nAfter three days of twelve-hour workdays, we finished the evaluation. Based on the results, TRW was going to need more work. We presented our results late on the third day to TRW, and they acknowledged that our results were appropriate. They knew they had more work to do and thanked us for showing the areas they needed more work on.\n\nI did get to see Candy and exchange pleasantries with her. We reminisced about the times we had worked together. Interestingly, shortly afterward, she was moved to the team working on the avionics suite, so someone higher up in the company must have noticed that we knew each other.\n\nI also thanked Watts and his people for their help with the evaluation. They were pleased with how we conducted the assessment. They had taken copious notes for them to take back and review to see if there were ways to improve the evaluation process.\n\nI asked Watts why he had decided to go with us on this evaluation. Watts confided in me that he had a granddaughter living in the area that he wanted to visit. He used this evaluation as an excuse to get time to come out to the Los Angeles area to see her.\n\nOverall, doing the evaluations gave our program office more insight into how the contractors were developing their software. It also gave us more confidence that they could develop software that would actually work the way it was supposed to. Also, it spurred the overall Air Force effort to get in-house software development improved.\n\nOver the next year or so, my workload increased as Alice gave me more responsibilities to do. The increased travel was wearing, but the welcome home sex was always great. Bonnie was doing great in her nursing classes, working hard, and getting excellent grades. She was going to graduate with honors if she kept it up.\n\nThe boys were now both towering over us as they hit their growth spurt. They were both taking after their father with their height. He had been 6' 2,\" so it looks like they're both going to get close to that, if not more. Both boys were getting into sports, keeping us both busy, making sure they got to practice and to their games.\n\nGrace was coming out and staying with us a lot. She was here so much we even offered to have her move in with us. She declined, not wanting to spend the winters here. While I'm sure that this wasn't the real reason, I don't blame her. I had gotten spoiled by the weather in southern California.\n\n***\n\nI got back from my trip to Martin Marietta and was looking forward to seeing Bonnie. It was early afternoon, and the boys wouldn't be home from school yet. When I entered the house, I was surprised that Bonnie hadn't met me at the door. I called out, \"Bonnie?\"\n\n\"In here,\" Bonnie said from our bedroom. I immediately got anxious because she didn't sound right.\n\nI hurried to the bedroom, and when I opened the door, I saw Bonnie was in bed, the light off. \"Are you okay, sweetie?\" I asked worriedly.\n\n\"No, I'm not feeling too good,\" Bonnie replied. \"I had to miss my classes today. I just felt weak and tired.\"\n\n\"I'm starting to get concerned about this,\" I said. I went over and laid next to Bonnie, taking her into my arms. \"We need to get you to a doctor and figure what is going on. It's been about a month now, and it doesn't seem to be going away.\"\n\n\"I already made an appointment to see Dr. Otte,\" Bonnie said, wrapping her arms around me and pulling me in for a kiss. No words were uttered for a time as we enjoyed the feel of each other's lips, our tongues gently caressing each other.\n\nEventually, we broke the kiss, and I whispered, \"I love you.\"\n\nBonnie whispered back, \"I love you more.\"\n\n\"Not possible,\" I finished. I tucked Bonnie in and went out, worried about her.\n\nMatthew and Mark got home, and I told them their mom wasn't feeling well. I fixed dinner for them and asked them to be quiet so they wouldn't disturb her. We sat on the couch and watched a movie together until it was time for them to turn in for the night. I did let them go in and say goodnight to Bonnie, and they each hugged her as she kissed their cheek.\n\nThat night we just spooned since Bonnie didn't feel up to any sexual activity. When the alarm went off in the morning, I woke with Bonnie in my arms. As I let go of Bonnie to turn over to turn the alarm off, I felt Bonnie turn and wrap her arms around me. \"Hey, sweetie, don't go just yet. I want to make up for last night. You're just going to have to be late this morning.\" I smiled, glad that Bonnie seemed to be feeling better.\n\nI turned back to Bonnie and pulled her in for a kiss. The kiss slowly got hotter and hotter as she seemed determined to make sure I knew I was welcomed home. I ran my hand down her back and onto her ass, cupping her cheek and pulling her in tighter against me, intertwining our legs. Our thighs were pressed against each other's pussies, and we started humping each other as our kiss grew in passion. I was getting wet, and I could feel her wetness on my thigh. We soon broke, and I rolled Bonnie onto her back, and she spread her legs to give me access to her treasure.",
        "I scooted up, so my knees were straddling Bonnie's hips, and I grabbed her legs behind her knees so I could push them up and out so I could grind my pussy against hers. I looked down on Bonnie, and my heart clenched as I realized how much I loved this woman. She laid there, her hair haloed around her head, the look of love in her eyes just making me melt. We locked eyes as I slowly rolled my hips, the feel of her mound against mine sending shivers throughout my body.\n\nBonnie started rolling her hips, increasing the tempo of our clits clashing together, each collision sending sparks throughout my body. I let go of Bonnie's legs, leaning in, so my hands were on each side of her breasts. She then wrapped her legs around my hips, pulling me in to grind even harder against her. I lowered my body down so our breasts were touching, my nipples growing so hard they ached. Our lips met, and our tongues wrestled with each other as we both started increasing the tempo. Bonnie's arms wrapped around me and pulled me into her, the hard points of her nipples digging into my breasts as mine were hers.\n\nWe broke our kiss, panting, staring into each other's eyes as our grinding increased to a frenzied pace. I could feel my orgasm building as I could see Bonnie's eyes glazing over with the passion she was experiencing. Bonnie suddenly started spasming, her legs and arms clutching me even harder as she started screaming, \"Virginniiiaaaa!\"\n\nSeeing Bonnie go over the edge, I let go and let my orgasm crash over me as I screamed, \"Bonniiieeee!\" We were both gasping for air, our syncopated grinding falling apart as we experienced our orgasms.\n\nWe stopped moving, just lying there gasping like two fish out of water. I said, \"I love you,\" over and over into her ear, and Bonnie was doing the same into my ear. I went to roll off of Bonnie as her arms and legs loosened their grip on me. We lay there on our sides, face to face, as our breathing slowed. Drowsy from the endorphin rush brought on by our orgasms, we basked in the love we had for each other.\n\nI laid there until Bonnie's eyes opened, and she drowsily said, \"Welcome home, my love.\"\n\n\"Thank you, my love,\" I said softly, humbled by the love this woman had for me.\n\nI did end up being late into the office. My work ethic was such that nobody bothered me about it.\n\nBonnie did seem to improve over the next few days. I've always found it ironic that you always seem to feel better by the time you get in to see the doctor.\n\nBonnie saw the doctor, and the doctor ordered several tests, leading us to believe that he thought there was a problem. Over the next two days, Bonnie went to the hospital to get the ordered tests between classes.\n\nMeanwhile, my group was putting a briefing together about the IR sensor suite software that General Fain needed before his next trip to the Pentagon. I needed to make sure all of the supporting documentation was up to date since I would not accompany him this time. Thankfully, my not going was not my doing. This wasn't a full-up briefing, so the whole briefing team didn't need to go. That meant I would be around when Bonnie got her test results.\n\nI spent two busy long days working on the documentation with anxious thoughts about Bonnie ever-present in the back of my mind. The day before he left, I went over the updated briefing slides with General Fain, showing him the supporting documentation and where it fits in with the briefing charts. He thanked me and told me I did a great job on the package.\n\nAs I was getting up to leave, General Fain motioned for me to sit back down. When I did, he leaned forward and said, \"I just want you to know that I've sent your promotion packet into the Lieutenant Colonels board. You've done a fantastic job since you've been here, exceeding the high expectations I already had for you. Congratulations!\"\n\n\"Thank you, sir. It's a great honor. I'm pleased that my work is so appreciated.\" I said, stunned by the news. This would put me one year below the zone for Lieutenant Colonel on top of the two years for Major. I was definitely on the fast track to General if everything worked out.\n\nI floated out of General Fain's office, hardly aware of my surroundings, as I headed back to my desk. When I got back to my desk, I found several missed call notes from Bonnie. My euphoria immediately evaporated, and I started worrying since Bonnie was getting her test results today.\n\nWith my heart in my mouth, I called Bonnie, and she picked up on the first ring. \"What's up, sweetie?\" I asked, praying that it wasn't what I feared it was.\n\nI could hear her sniffling, and she cleared her throat before she said, \"It's cancer.\""
    ],
    "authorname": "Candy_Kane54",
    "tags": [
        "cunnilingus",
        "lesbian",
        "lesbian military officer",
        "lesbian sex",
        "military officer",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/your-silver-nights-and-golden-days-pt-04"
}