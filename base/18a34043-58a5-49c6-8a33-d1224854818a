{
    "title": "Breaking My Own Rules Ch. 08",
    "pages": [
        "\"What's this guy's name?\" Randy demanded, poking and swiping on his cell phone as soon as we were in the cab.\n\n\"Um, I think it's Thomas Harker. Dr. Thomas Harker.\"\n\nHe glanced askance at me but didn't say anything, putting his phone up to his ear. \"Yeah, George. Have we got a Tom Harker on the membership? How about as a guest tonight? Okay. Hang on.\"\n\nHe gave me an interrogator's inquisitional glare. \"What does he look like?\"\n\n\"Well, average height, average weight. Brown hair, brown eyes. Lean and muscular under his clothes.\"\n\n\"Not helping here,\" Randy said. \"Tattoos, moles, scars, something, anything someone might have noticed in one of the rooms?\"\n\n\"Um, I don't remember anything. Are you like an owner, or something?\"\n\n\"Partner,\" he muttered. Then into the phone, \"Get me a complete guest list. Email it. Thanks. And pull the security footage from tonight. We'll check it out in the morning.\" He tapped the hang-up button, then looked back at me. \"So what did you see, exactly?\"\n\n\"He was standing at the entrance to a hall...\"\n\n\"Which hall?\"\n\n\"The one on the far left,\" I answered, closing my eyes to picture the lobby. \"He was glaring at me, then he started toward me. I'm sorry, I just knew he was going to be really mad about me being there. I shouldn't have...\"\n\nRandy reached over and grasped my chin the way 'he' did. \"Sky, there was nothing wrong with you being there. He had no right to be mad about anything. You need to stop thinking like that.\" Even in the dark back seat of the cab, I could see the intensity of his gaze. \"We'll figure out who this guy is, get a restraining order, hell, file charges if we need to and get you free of him. In the meantime, we'll get whatever you need tomorrow morning and you can stay with DeDe so I know you're safe.\"\n\n\"But you haven't asked her... Oh, right. She's your sub.\"\n\nHe was still holding my chin, studying me. \"She will do it because she knows it will please me. I don't need to ask her because I know she has the biggest heart in the world and would do it without being told. I wouldn't tell her to do something that would make her uncomfortable. And she trusts me not to. The vanilla world thinks BDSM is about pain and sex. It's really about trust.\" He pulled the paperwork out of a pocket. \"This is your homework, Sky. I want you to read it. Think about it. And I want you to check off your hard limits. Just as if you were going to use a room at the club. Okay?\"\n\nI nodded, which isn't easy to do when someone is holding your chin, but then he graced me with a warm - yes, nerdy - smile. He glanced out the window. \"We're here. Come on. Tomorrow starts early. Let's get you to bed.\" \n\nI was thinking, 'Whoa. Bed?' but it turned out he meant the spare bed in the spare bedroom and I breathed a sigh of relief. My life was complicated enough without two Doms. Well, one Dom and one god-knows-what. \n\nSure enough, the sky was barely beginning to brighten when he rousted me. I put my clothes back on from last night and we hit the corner coffee shop before hopping the subway back to the south end. We entered through a back alley door, and went down stairs and along a hall to an office. Randy did his IT thing and queued up security footage from different areas of the dungeon. It took a while to spot him, as if he knew where the cameras were and kept his head down at the appropriate times, but eventually, Randy zeroed in on the time period when I spotted him. Apparently, when he saw me, he forgot to avoid the cameras. Nice to know I had that kind of effect on him. He could be seen starting toward me, then when I jumped up and ran to Randy, he made a quick retreat back into a nearby hall. After that, it was easier to backtrack to his arrival. Unfortunately, he'd spent most of his time in a private room so there wasn't much to see until we tracked back to when he got off the elevator with a handful of people at opening time. It wasn't obvious who he came with, and Randy didn't recognize him so he probably wasn't a member. He'd hooked up with a sub that was a regular, looking for one night Doms but there was paperwork filled out before they went to the private room. Randy assured me they'd be able to track him down with the video and info we now had. He did a screen grab and shot an email to the bartender and others. More partners, maybe.\n\nRandy locked up and we took the subway back to my apartment. I had major butterflies, wondering if he was going to be there, waiting. I changed, threw some clothes in a suitcase and grabbed my laptop. I admit I didn't even shower; I was so nervous that he was going to show up any minute. I don't think I would have gone back if Randy hadn't been with me. I just kept seeing his stormy eyes. He'd never really seemed angry at me before, even when I misbehaved, even when I suggested his Dominant thing was a game or an act. Still, I breathed a huge sigh of relief when we were back out of the building. Randy insisted on hailing a cab since we now had my stuff to wrestle with. There was enough time that we stopped at DeDe's apartment to drop things off - she'd already gone to work - and then we headed for the office. I actually made it to my desk in time.\n\nOffice Cut-up leaned over the cubicle wall. \"Whatcha been up to, Sky? You look a little out of breath. Morning quickie?\"\n\n\"Jeez, do you ever think of anything else?\" I muttered. \"Some people have a life, you know.\"\n\nWhen my phone rang a little bit later, I jumped, still a bundle of nerves. It turned out to be Randy. He explained that he had a late meeting with a vendor and wanted to know if I would be able to get back to DeDe's apartment by myself. He assured me she would be home by the time I got there, and would be waiting for me. I wrote down her cell number and address, just in case. I used part of my break to figure out which bus got me closest and I finally began to relax at least a bit.\n\nWhen it was time to go, I tarried, trying to avoid running into my friends. I knew there would be an inquisition because I had foolishly told them I had a 'date' last night when they wanted to go out for pizza. I didn't want to have to explain what my date really involved. It had been hard enough to duck them at lunch time.\n\nWhen I finally strolled outside, shadows were falling in the city. I turned in the opposite direction of my usual bus, and started walking. A moment later, someone hooked their arm in mine and pulled me out of the milling sidewalk crowd toward the street edge. I yanked my arm free and turned to give the asshole a piece of my mind, except it was Tom Whatsisname and my words caught in my throat. He wrapped one arm around my waist, pulling me hard against him and the other hand was at the back of my neck as he planted a deep long kiss. My hands were on his chest, trying to push him away without any luck. He hadn't kissed me like that since the first night that we met; in fact he hardly kissed me at all after that. And damned if it didn't send a jolt right through my vitals. I tried to tell myself it was just the adrenalin, but I was pretty sure that moist feeling down below was composed of a different hormone. Just when I was beginning to wonder if he was ever going to let me come up for air, he pulled away only far enough to softly caress the tip of my nose with his lips.\n\n\"What are you playing at, cherie?\" he whispered.\n\nI pushed harder, but he only tightened his grip and I wondered if my neck was going to be bruised. \"I don't want to play anymore. I'm through,\" I said bravely.\n\n\"You don't want to play, but you go where players gather? I thought I made clear. You are mine and mine only. You 'play' with your gangly friend, I will hurt him and then I will hurt you.\"\n\n\"He has a sub, he's not interested in me,\" I protested. \n\n\"Then come home with me and I will administer some corrective behavior modification so you don't make such a mistake again.\"\n\n\"No!\" I yelled, loud enough to attract at least some passing attention from the sidewalk horde. \"Let go of me!\" A few more heads turned our way. He didn't even glance at the crowd, but his eyes had turned dark and stormy again, and the bottom dropped out of my stomach. \n\n\"You will not win at this game,\" he said softly, but he finally released me and I ran into the street, waving at passing cabs until one slowed down enough for me to yank the door open and jump in. I knew the cost would mean mac and cheese for dinner for the better part of the last week of the month, but I couldn't take a chance on him following me to DeDe's. I even watched out the back window of the cab most of the way as if I had any chance of recognizing a tail in rush hour traffic. The cab let me out on the corner and I practically ran to DeDe's apartment building. She must have been watching for me, because she met me on the stoop.\n\n\"Sky, what is it? What happened?\" She was hugging me and pulling me inside as if we'd been friends for years.\n\n\"He was waiting for me after work,\" I blurted out, without even thinking she might have no idea what I was talking about. \n\nApparently, she had an inkling, because as soon as she got me into the apartment, she threw the deadbolt and pulled me over to the couch. \"You're safe here,\" she assured me. \"I'm going to text Randy and let him know what's going on. You just relax.\" She pulled out her phone and headed into the kitchenette, tapping away at the screen. A minute later, she was pushing a glass of wine into my shaking hands. \"Randy says he's got it covered,\" she assured me.\n\n\"I'm so sorry about all this,\" I apologized.\n\n\"No, don't be like that. I'm glad to help. Us girls gotta stick together,\" she said. I wondered if that could be translated as us subs, but I didn't say anything.\n\nI was just starting to get my nerves under control when there was a knock at the door and I jumped, sloshing my wine. DeDe scurried to the door and peered through the peephole. \"It's just Maurice,\" she explained, opening the door before I could say 'Maurice who?' Maurice turned out to be the bouncer from the dungeon. I figured even Doctor Tom would show him some respect. The dude was big. He nodded at DeDe.\n\n\"Randy asked me if I could hang around for a while. Okay with you?\"\n\n\"Damn straight,\" she agreed. \"I've got my granny's famous lasagna in the oven and garlic bread fresh from the bakery.\"\n\nSo that's what that mouthwatering smell was. I jumped up. \"What can I do to help?\"\n\n\"Nothing,\" she told me sternly. \"This is my... job.\"\n\n\"As a sub?\" I asked quietly.\n\n\"If you will,\" she agreed, with just the tinge of a defensive tone. She seemed to search for words for a moment. \"This is how I serve my Master. It is what fulfills me,\" she added after a moment. Then, to expound on that, she said, \"It makes me feel complete.\" Suddenly, she sat on the couch next to me and took both of my hands in hers. \"Did you have that? Ever? With him?\"\n\n\"Feel complete?\" I asked, confused. I glanced askance at Maurice. \"I came. A lot,\" I admitted in a whisper. \n\n\"Pfffh,\" she said with a wave. \"That's not complete. That's only a piece. Okay, an important piece,\" she said with a grin. \"But complete is when you've pleased him, in more than just an orgasmic way. It's like doing something - non-sexual - that will please him just because you know it will please him. He doesn't have to ask, or tell you to do it. You do it because you want to, because you know it is what he wants. Oh, it's so hard to explain,\" she said in exasperation.\n\n\"I think I'm starting to understand,\" I told her. \"Be patient with me.\"\n\nI was rewarded with one of her huge smiles followed by a huge hug. \"Okay,\" she said brightly, \"So this couch unfolds into a bed and the bathroom is back this way.\"\n\n\"Do I have time for a shower?\" I asked.\n\n\"Of course. Use whatever you need in there. Randy said he'd come by later, so I was going to hold dinner till he got here. Take all the time you need.\" I pulled some feeling-sorry-for-myself comfy clothes out of my bag and headed for the shower.\n\nA couple hours later, Randy had arrived and DeDe was putting dinner on the table. Randy sat next to me on the couch. \"Tell me what happened.\"\n\nSo I repeated what I could remember of the conversation, including his threat to hurt Randy. He seemed unfazed, but the thought horrified me more than anything Tom could do to me. I had walked into my situation - if not exactly with my eyes open - at least knowing I'd opened the door onto the unknown. Randy had only been trying to help a co-worker. He didn't deserve being threatened. When we moved to the table to eat, Randy told us about what he'd been able to find out from others at the dungeon.\n\nIt turned out my Tom had used the name Fred Thompkins for the guest list, and had been invited by a member here who met him in a Philadelphia dungeon where Tom/Fred was a member. That dungeon, like Randy's, checked both members and guests out against sex abusers lists and other on-line background services and neither Fred Thompkins or Tom Harkin had popped up, but since both were probably aliases, that wasn't too surprising. It seemed my Tom had a friend who could fake id's just as well as his friend had hacked the security camera feed at my apartment. They had also contacted the sub who had spent the evening with him and she assured them that he had followed all the rules and respected her limits.\n\n\"What am I going to do?\" I moaned. \"I can't go home, I can't go to work. I can't even go to the police without a real name.\"\n\nDeDe gave me a sideways hug from her chair next to mine. \"We'll figure it out and you can stay here as long as you need.\"\n\n\"But what if he finds me here? Then you're in danger, too.\"\n\n\"He won't find us,\" she assured me.\n\n\"Have a little faith in me,\" Randy said with a grin. \"He's not going to be able to hack the dungeon's computer for the member or guest lists or anything else.\"\n\nI wished I felt as confident as they seemed to be. But the guy struck me as an uber-stalker. \"He has my cell phone number. Can he trace me with that? Like they do on TV?\"\n\n\"Turn it off, if it makes you feel better. Tomorrow, you can get a burner phone,\" Randy replied. \"I doubt he has access to that kind of info, but what's important is that you feel safe so you can start to relax.\"\n\nJust then my cell phone beeped with a text message. My heart jumped into my throat, even though I knew it was probably just a friend from work. \"Do you want me to check it,\" Randy asked.\n\nI shook my head. Sooner or later, I had to man up, er, woman up. I went and dug the phone out of my purse. When I glanced at the screen, I must have gone white as a sheet, because Randy was instantly at my side, and even Maurice, who had been totally involved in demolishing his meal stood up. Randy took the phone from me and swiped to see the entire message.\n\nHe spun on his heel and went to show it to Maurice. I was left trying to decide if I wanted to see what the rest of the message said or not. A moment later, Randy took Maurice into DeDe's bedroom and shut the door. Her puzzled look told me this secrecy was not his usual behavior, which scared me even more. DeDe looked at me and I shrugged.\n\n\"It was from him. It said 'Be at my door at 7:00pm on Friday, or...' I didn't see the rest of it.\" \n\n\"His door?\"\n\n\"He has an apartment in my building. It is full of... stuff to punish me with.\"\n\n\"Oh,\" she said softly. \"I'm so sorry, Sky.\"\n\n\"No, I'm sorry for dragging you and Randy into this.\"\n\nDeDe shook her head as she refilled my wine glass and patted the seat of the chair next to her. \"The people, the legitimate people in the lifestyle have fought for years against pretenders like your guy. This is what we do. This is what Randy does. It's why he's a partner in the club.\" I sat back down next to her and she pulled me into one of her signature hugs. \"It's going to be okay,\" she assured me.\n\nWhen Randy and Maurice emerged from the bedroom, they looked grim. Randy handed my phone back to me and I noticed it was turned off. \"Maurice is going to hang around for a couple of days,\" Randy said. DeDe simply nodded. When I opened my mouth to protest on Maurice's behalf, Randy gave me a look that said shut up. Maurice seconded that warning, so I shut my mouth. Randy continued, \"Maurice has a friend on the police force. He's going to contact him and see what our options are.\" He looked at me. \"You are staying here tomorrow. No work, no calls, no computer. We don't want to give him an IP to trace back here.\"\n\nDeDe spoke up softly. \"May I stay here with Sky tomorrow night, Randy?\"\n\nHe looked at her briefly. \"That would be a good idea. I'll probably be busy anyway.\" He looked back at me. \"Tell me about your family.\"\n\n\"My family?\" I whispered with horror. \"Oh my god.\"\n\n\"Just a precaution.\"\n\n\"My dad is in Wisconsin. My brother is deployed, Afghanistan last I heard.\"\n\nMaurice cocked an eyebrow. \"Special Forces?\" \n\nI nodded. \"How did you know?\"\n\n\"When you said last I heard. Dead giveaway. That means he gets moved around to where he's needed.\" He winked at me.\n\n\"Maurice was Special Forces,\" Randy explained. He handed me a notepad from the kitchen counter. \"Write your Dad's address down.\"\n\nI wrote it out and he handed the slip of paper to Maurice. He looked back at me. \"Did you do your homework?\" I gave him a puzzled frown. \"The paperwork I gave you?\"\n\n\"Um,\" I glanced guiltily at my purse. \n\n\"That'll give you something to do tomorrow,\" he said with a smile. He kissed DeDe on the cheek. \"I've got to go and take care of some things. I'll talk to you tomorrow and try to stop by.\"\n\n\"Be careful,\" she said with a blush.\n\nWhen Randy left, Maurice walked out into the hall with him, pulling a cell phone out. He was out there for a long time, and I could hear his voice occasionally, but not make out his words. Apparently, they didn't want to worry us little women, but I would have been a lot more comfortable knowing what was going on. DeDe, however, seemed quite sure that Randy was keeping her safe. She cleaned up the dinner dishes and again wouldn't let me help with anything. Maurice eventually reappeared and took up a post at the front window which gave a view of the street. I don't know if he was a Dom himself, but he had definitely bought into the whole, I'm the one in control and you don't need to worry about anything so just sit there and look pretty business. I have to admit, though, that he did remind me of my brother, in a silent, hulking way. Jeez, now I was trying to imagine my brother as a Dom. Time for a diversion. I pulled out my 'homework.'\n\nThere was a front and back sheet of dungeon rules beginning with, in bold large print; Must be at Least 21 Years of Age, No Cameras or Cell phones in Dungeon, Genitals and Women's Nipples must be Covered in Public Rooms, Condoms must be Worn for Vaginal or Anal Penetration, No Bestiality, No Scatological or Urinary activity, No Fire, Breath or Blood Play, Do Not Touch Another Person Without Permission, All Equipment Must be Provided by the Dungeon or Inspected and Approved Before Use, Safe Words must be 'Yellow' for Slow Down and 'Red' for Stop, or a Hand Signal of Three Fingers Raised, Instructions by Monitors Must be Followed Immediately. In fine print there was information about memberships, guest rules, monitors and a whole bunch of terms and conditions, culminating in a signature line and a witness line. \n\nThen there was a front and back sheet of preferences and 'activities.' Each activity was followed by a blank line to provide more specifics and then with check boxes for Hard Limit, Soft Limit and Okay With. I started reading through the list.\n\nPreferences: Top, bottom, switch, heterosexual, gay, lesbian, bisexual, other\n\nBondage Type: gag, blindfold, earplugs/headphones, rope, handcuffs, chains, tape, rubber/latex, other\n\nBondage Position: wrists spread eagle, arms/wrists forward, arms/wrists behind, arms/elbows, arms/forearms, legs/spread eagle, legs/spreader bar, wrists to ankles/thighs, hogtie, nipples, breasts, genitals, CBT, suspension, rope art, other",
        "Stimulation: tickling, feathers, spanking/hand, spanking/paddle, cropping, flogging, whipping, caning, strapping, electrostimulation, other\n\nPet Play: puppy, pony, kitten, furniture, other\n\nFurniture: spanking bench, swing, stocks, cross, bondage bed, suspension rack\n\nSexual contact (private rooms only): cunnilingus, fellatio, vaginal intercourse, anal intercourse, strap-ons, double penetration, triple penetration, polyamorous activity, other\n\nI was feeling utterly overwhelmed by the time I got to the end of the list. I thought I had gained some idea about BDSM from my research, but the thought of most of these things happening to people in public rooms, well, in front of members, anyway, was mind-boggling. I went down the list checking off the stuff I was willing to do. It was a pretty short list. Then I went back and considered what might fit into soft limits. Absolutely no gags, but blindfold and ear plugs didn't seem so bad. Rope and handcuffs, maybe. I mean, that had been kinda hot with him. But chains? Ewww. Being tied up hadn't seemed too bad, but hogtied? No way. And breasts and nipples just sounded painful, not pleasurable. I didn't know what CBT or Rope Art was but I didn't think I wanted to have anything to do with either one. And if genitals meant clamps, you could sure count me out, though that rope with the knots had been... interesting. I decided to put hard limit on that one just in case. Tickling and feathers didn't seem so bad, and even spanking was a little erotic. Well, and looking back on it, the crop and the flogger I could imagine being arousing, if it wasn't too hard or for too long. I wrote in 'not too hard' on the lines next to those activities and then checked soft limit. Everything else was a hard no in that category. Same with Pet Play. If I wanted to be treated like a dog, I could just go to work. That was, if I still had a job when I called in with another unexcused absence. I was also pretty sure I wasn't interested in any of the furniture after my experience with Dr. Tom's spanking bench. As for the sexual contact, if it involved more than one person to cope with at a time, I was real sure it wasn't for me.\n\nI put Randy's paperwork aside. As if that was what she was waiting for, DeDe quit fussing around in the kitchen and came over to sit by me. \"How are you doing? Are you going to be okay, tonight? Because you can sleep in with me if you want.\"\n\n\"What about Maurice?\" I asked.\n\n\"When you work as a bouncer, you sleep during the day,\" he assured me. \"I'm good.\"\n\n\"Oh, no! Are you missing work to be here?\"\n\n\"It's covered,\" he said with a tone that clearly read 'End of conversation.'\n\n\"This just gets better and better,\" I muttered.\n\n\"It will. I promise,\" DeDe said. \"Do you want to watch TV or something? I've got Netflix, too, if you'd rather watch a movie. I usually go to bed early 'cause I have to be to work by six.\"\n\nI settled for a movie and she showed me how to bring it up and assured me I could select whatever I wanted. So now I had the rental fee to add to my growing debt, but at least it whiled away a few hours, and when I went to the bathroom to get ready for bed after the movie, I came back to find that Maurice had set up the hide-a-bed for me.\n\n****\n\nThe next day had been pure torture. I borrowed Maurice's cell phone to call in and tell the boss I couldn't make it. Even though he seemed to have developed a weird infatuation with me, he was definitely getting grumpy about all the missed days. Then I spent most of the rest of the day itching to hop on my phone or computer. Maurice had pulled a chair over by the front window and was dozing in it, I swear with one eye open and on the street. DeDe's apartment was spotless, so I couldn't even find anything to clean for her. Eventually, I watched another movie, and when DeDe got home from work, she had stopped to pick up an ample supply of wine. I figured we were going to need it. \n\nWe both sat on the couch and watched the clock roll towards seven pm. Maurice wouldn't tell us what, if anything, he had been able to arrange with his cop buddy. It wasn't like they could get a warrant or something, so I had no idea what that left. At one point, I muttered, \"Maybe I should just go there.\" I thought DeDe and Maurice were both going to beat me to a pulp, the way they jumped on me. I held my hands up in surrender and went back to trying to ease the tension with wine. When the clock hit seven, DeDe grabbed my hand and held it. I'm not sure what we expected to happen, but it was entirely anticlimactic. Maurice was watching the street vigilantly, apparently not as positive as Randy and DeDe that Dr. Tom wouldn't be able to find her place. DeDe checked her phone several times to see if there was any news from Randy, then finally went to start dinner, again turning down any help. I went to sit at the kitchen bar so I could at least watch her cook to have something to do.\n\nIt was eight o'clock before anything started to happen. I didn't hear Maurice's phone, but he pulled it from a pocket, glanced at the screen, then went out into the hall before answering it. A moment later, DeDe's phone beeped and she looked at the screen. \"It's Randy,\" she said. \"He says to save some dinner for him and he'll be here in about an hour.\"\n\n\"Nothing else?\" I said, disappointed.\n\n\"I'm sorry,\" she shrugged. \"I'm not even sure where he is.\"\n\nWhen Maurice came back into the apartment, I jumped up and went to stand in front of him. \"Well?\" I asked.\n\nHe gazed down at me benignly, then gently moved me out of his way, so he could take up his stance at the window again. \"When Randy gets here,\" he said. \"Then we only have to go over it once.\"\n\nI huffed and went back to my wine. I thought orgasm denial was torture. I was beginning to think that information denial was worse.\n\nRandy's hour turned into an hour and a half. I was on my fourth or fifth glass of wine, which is not a good idea for a lightweight like me. When he came into the apartment, I scowled at him, even as DeDe ran to hug him. When he signaled Maurice and they both headed for the hall, I ran after them. \"Hey, this is my life. I have a right to know what's going on,\" I argued, resisting the temptation to stamp my foot.\n\nRandy folded his arms and looked at me sternly. \"Sky, you need to have plausible deniability.\"\n\nI gaped at him. \"Plausible deniability about what?\" I demanded.\n\nRandy shook his head impatiently. \"That would kind of defeat the purpose, now, don't you think?\"\n\n\"I want to know what's going on,\" I protested.\n\nRandy straightened, his eyes darkened, and he said in that low, quiet voice, \"Sky, go back into the apartment.\"\n\nShit, he was pulling the Dom card on me. I glanced at Maurice, who offered me no support whatsoever. Then DeDe was there, pulling me back into the apartment. And I was letting her. She closed the door and leaned against it. \"Sky, they're trying to protect you, to keep you safe. Let them. Come and help me put dinner on the table,\" DeDe said. That's how much she wanted to distract me. I sighed and followed her into the kitchen, retrieving my wine along the way.\n\nA short time later, the men came back into the apartment. We all sat at the table. I was still sulking, draining yet another glass of wine. I held my glass out to DeDe for more and she glanced at Randy, who shook his head. \"Oh, for crying out loud!\" I exclaimed. \"If you're not going to talk to me or let me get good and drunk, I might just as well go home.\" I started to rise from my seat, but Maurice grabbed one wrist and Randy reached across the table to grab my other.\n\n\"You're being childish,\" Randy said quietly in his Dom voice, and I was reminded of Dr. Tom right after he would decide I needed to be punished. I sat back down. Even DeDe looked pale and wide eyed.\n\n\"I'm sorry,\" I said with only minimal petulance. \"Is my father okay?\" I asked, trying to remind them of why I was feeling just a bit freaked out. Randy and Maurice exchanged glances.\n\n\"A request has been sent to the sheriff in his county to make frequent patrols by his place,\" Randy said. \"We can only hope that they will honor the request.\"\n\n\"Please tell me what happened tonight,\" I begged.\n\nRandy sighed. \"I have it on good authority that his apartment was cleaned out.\"\n\n\"So he wasn't there waiting for me? He expected me not to come?\" I asked, confused.\n\n\"My information indicates that the security camera feed was still being accessed, from a mobile device, probably a burner phone,\" Randy glanced at Maurice again, who gave a slight nod. \"It was using a nearby cell tower. He was there, watching for you to arrive. Or he sent someone to watch for you.\"\n\nI realized I was rocking in my chair and forced myself to stop. \"So he knows I didn't show up,\" I said, barely above a whisper. \"What did the text say would happen if I didn't show?\" When Randy only looked at me, I blurted out, \"Tell me or I'll turn the damn thing on and look for myself!\" Maurice put his massive hand on my arm where it lay on the table.\n\n\"It said 'or your friends and family will suffer.' Sky, men like this are cowards,\" Randy assured me. \"There's no reason to believe he would actually do anything. It was just a last ditch attempt to get you under his thumb again.\" \n\n\"This is a process,\" Maurice said. \"We'll find him, or he will make a mistake and give us enough that the police will be able to get involved. You have to be patient.\"\n\nI slipped free of Maurice's hand and jumped up to start pacing. \"I can't stay here forever and you can't protect all my friends.\"\n\n\"You can stay here as long as you need to,\" DeDe said.\n\n\"I can't even go to work,\" I said waving my hands in the air. \"How am I going to live?\"\n\n\"Can the drama,\" Randy said sternly. \"Listen to what we're telling you. It's going to be okay. Now if you two will excuse me, I'm going to see to it that my sub gets some exercise before I have to leave.\" DeDe ducked her head to hide her smile as Randy took her hand and led her to the bedroom. I watched them go, then reached for the wine bottle. Maurice beat me to it and held it out of my reach. \n\n\"You don't want to be hung over tomorrow,\" he advised, putting the wine away in the fridge. \"That would spoil the fun at the dungeon.\"\n\n\"The what, where?\" I spluttered. \n\nHe winked at me. \"It's Saturday night, party night.\"\n\n\"But he was there,\" I protested.\n\n\"He won't be tomorrow, believe me. If he shows up on my watch, I'll see to it that he can never hurt sweet girls like you ever again. If your brother is Special Forces, that makes him my brother. And that makes you my sister. I take care of family.\"\n\nI cleared the table and put the dishes in the washer, hoping DeDe wouldn't get mad at me. Then, with nothing else to do, I put another movie on and tried to make myself as small as possible in the corner of the couch, tucking my knees under my chin, doing my best to hold myself together and not think about how my whole life was coming unraveled. It was a couple of hours later when Randy came out of the bedroom. He walked over to me and glanced down at the floor at the end of the couch where my purse and my homework lay. \n\n\"Did you do your homework,\" he asked.\n\nI paused the movie and shrugged. \"I tried to. Some of that stuff...\"\n\n\"May I look at it?\" I nodded, though I was pretty sure I was blushing, too. Maurice seemed to be studiously ignoring us as Randy picked up the paperwork and sat down next to me. He glanced through it quickly and smiled. \"Not that different from DeDe's. No wonder you two hit it off. May I show you something?\"\n\n\"Okay,\" I said warily.\n\nHe pulled a piece of paper out of his pocket and unfolded it. It was a checklist, just like I had filled out. Except this one had virtually everything marked as 'Okay With.' He pointed to the name at the top of the sheet. Fred Thompkins, my Dr. Tom. \"This was where he intended to take you, Sky. He never asked you where you wanted to go,\" he said, tapping the sheet I had filled out.\n\nSomething Dr. Tom had said, the one time he had treated me as a real person and not just his fuck toy came back to me. 'Sometimes you have to hit bottom before you realize that you've been falling. You can't become something else until you see yourself for what you are right now. I'm more than happy to take you all the way to the bottom. It's what I live for.' I shuddered.\n\n\"Thank you,\" I said to Randy.\n\n\"I didn't do this for you,\" he replied. \"You have done it for yourself. You just need to keep on being strong. And the best way to be strong, is to accept help when it's offered. Okay?\" I nodded. \"Good. Then I'm going to go home and get some sleep.\"\n\n\"You're not staying,\" I asked.\n\nHe smiled his nerdy smile. \"Have you seen my sub? Neither of us would get any sleep if I stayed. You get some sleep, too. It's going to be a long day tomorrow.\" After he left, Maurice threw the deadbolt, then returned to his vigil at the window. I put the movie back on, but I was asleep well before the end of it, curled in a ball on the couch.\n\n****\n\nThe next day, Maurice reluctantly agreed to let me go out to buy a burner phone, with him hovering at my back the whole time. I couldn't even get on line long enough to find out the balance of my bank account, so I pretty much held my breath as they ran my debit card. Then we took the subway to some random station, where he let me turn on my old phone long enough to look up my dad's number. Seriously, who memorizes phone numbers anymore. No sooner had I turned it on than texts and voice mails popped up from my favorite doctor. I tried really hard not to look, handing it over to Maurice to check them out. He did so while I called my Dad. I don't remember feeling so happy to hear his voice. He, in his usual gruff way, was suspicious as to why I was calling. Maurice had warned me not to tell him about what was going on yet and I had no intention of trying to explain the peculiar man problem I was having and that he had been threatened. I settled for telling him I hoped to come visit sooner than usual this year. Like maybe next week when I ran out of money and job at the same time, was my thinking.\n\nWhen I finished my phone call, and Maurice had texted Randy - I presumed - with the content of Dr. Tom's messages, we headed back to DeDe's. She had prepared a special lunch and I was really beginning to feel horrific for how much I was costing her. I even had the grace to feel guilty for the wine I'd consumed last night, though the headache had egged that guilt on. \n\nAfter lunch, DeDe insisted on helping me dress for our excursion to the dungeon that evening. We went through the contents of my hurriedly packed suitcase and she threw her arms up in despair then took me to her closet and selected a stretchy dress for me. Mind you, she had a lot more curves to stretch it out with, but at least it didn't look absolutely awful on me, and once she had accessorized it and done my makeup for me, I actually considered myself passable, though I had no idea why it was so important to her that I was dressed just so. I fully intended to hide in that back office that Randy had taken me to. The last thing I wanted was some other Dr. Tom to replace the current one. Visions of the woman being caned kept flashing through my mind.\n\nAt six, we ate a light dinner, then the three of us took a taxi to the club. The club didn't open until nine, but Maurice had to be at work and I couldn't help but wonder if my doctor might be lurking somewhere, watching to see if I arrived at the club. I was both hoping an early arrival would beat him to the punch, and if not, I was immensely grateful for Maurice's presence. I couldn't help but look over my shoulder nervously, as we moved from cab to door. DeDe took my arm and led me back to the dungeon while Maurice paused to confer with the bouncers for the main floor club. I suddenly realized what Maurice had been trying to tell me last night. I felt safe here. I could literally feel myself relaxing the deeper we got into the building.\n\nWhen we emerged from the elevator, the bartender looked up and smiled. He had been slicing lemons and preparing for the evening to come, but he wiped his hands and picked up a phone when he saw us. \"They're here,\" he announced. Then he turned back to us. \"Would you ladies like something?\"\n\n\"Two Collins, please,\" DeDe said before I could speak. I was about to protest against the hard alcohol, till I realized he was just pouring the mixer over ice. It was surprisingly refreshing. DeDe pulled some papers out of her purse. \"I brought, these, you know, just in case.\"\n\n\"Hmm?\" I asked, then realized she was holding my checklist. \"Oh, DeDe, I don't think...\"\n\n\"Just so they're on file,\" she said with a wave of her hand. \"It doesn't mean anything is going to happen.\" \n\nThe bartender was holding a pen out to me. \"Just go ahead and sign and I will tuck them away for the future.\"\n\n\"I really can't afford a membership.\" \n\n\"You're officially Randy's guest. No membership needed.\" I took the pen and signed. Then took my drink and followed DeDe over to a nearby couch.\n\nAs I sat on the couch, she settled on her knees on a floor pillow. \"Um, should I be kneeling?\" I asked her.\n\nShe shook her head at me with a smile. \"I kneel here because Randy, my master, likes to see me kneeling here. It pleases him. And that pleases me. You don't have a master to please.\" She gave me a warning glare as I was about to remind her about Dr. Tom. \"Yet,\" she added with a smirk. She turned as Randy and another man entered the lobby from one of the halls. When he smiled at her, she jumped up and ran to hug him. I was pretty damn sure at this point that I wanted what they had.\n\nIt turned out that the man with Randy was the manager, or Dungeon Master, as Randy put it, named George. I wondered to myself if that was what he put on his resume. Even more surprising, it turned out that the Dungeon Master actually was a sub in a long-standing relationship. It astounded me that in such a brief conversation, such personal information could or would be revealed. Randy explained that in the lifestyle, communication was critical, hence the paperwork, the large comfortable lobby for people to sit and talk before they scene, and the natural inclination to ensure that misunderstandings don't occur, even at the level of simple introductions.\n\nI asked Randy if I could use the back office for the evening. A puzzled frown flashed on his face but quickly vanished as I glanced in the direction of where Dr. Tom had appeared just a few nights ago. Randy grasped my wrist, which seemed to be his way of commanding my attention, like maybe when his Dom voice wasn't sufficient. \"Sky, he won't be back here ever again. But if you get to feeling overwhelmed, you are welcome to use the office. George and the monitors come and go from that office all night, so it's not quiet, but quieter than out here will be. But I'd also like to see you enjoy yourself and meet some of my friends. Promise you'll give it a try?\" DeDe was nodding vigorously.\n\n\"Okay,\" I said with a brave smile. \"You'll be around? Or do you have to work?\"\n\nHe gave a rueful smile. \"I'm supposed to be a silent partner. You know, all fun and no work? But when a friend needs help, you bring all your resources to bear, and this is one of my resources. I'll be here when you need me.'\n\n\"Me, too,\" DeDe said.\n\nI finished my Collins drink and Randy asked if I wanted some wine. I nodded, promising to ration my intake. When he went over to the bar, I turned to DeDe. \"What if someone asks me to, you know...\"\n\nShe shook her head. \"That won't happen. Well, it's not supposed to happen. Etiquette says you assume that a sub has a master and you always talk to the master about such things. If Randy is here, they would ask him. If he isn't, they would ask the bartender if you had a master, and he would tell them you are under Randy's protection.\" I was wringing my hands nervously and she reached over to hold them. \"Randy won't let you go anywhere with someone he doesn't know, and even if he knows them and feels they would respect your current vulnerability, he would ask you first.\"",
        "Okay,\" I said as Randy returned with my wine. Not long after, people began arriving and Randy was playing host, greeting friends, meeting new members and guests. It was obvious that most of the people showing up knew each other, or at least had a passing acquaintance. And it definitely seemed like more of a party atmosphere than Wednesday had. I saw one couple arrive and be greeted warmly by Randy. \n\n\"He's a partner, too,\" DeDe told me. As I watched, the woman with him tugged at his sleeve. He glanced at her, over at us, and nodded with unspoken communication. The woman immediately scurried over to kneel next to DeDe. They were obviously friends. \"Sky, this is Suzie.\"\n\nWe chatted for a few minutes of basic girl talk, then Suzie's master was there, taking her hand to lead her down a hall. DeDe watched them go. \"They're saving a room,\" she said. We're going to scene with them in a little bit.\"\n\n\"Oh,\" I replied, feeling like I was about to be abandoned. \n\nDeDe must have heard something in my voice, because she looked around sharply, maybe even guiltily. \"It's a public room. You're welcome to watch. It's just at the end of that corridor.\" When Randy walked up next to us, she looked even more guilty. He cocked an eyebrow at her but didn't say anything.\n\n\"There is someone I would like you to meet, Sky.\" He held out his hand and pulled me to my feet, leading me through the growing crowd. When he started down one of the halls of private rooms, I tensed up, but he turned that nerdy smile on me. \"It's just to talk. I figured you would like a little more privacy. You can leave any time. Did DeDe tell you where we'll be?\" I nodded. He shook his head in annoyance, but he was still smiling. \"I knew that was a guilty look. She almost let the cat out of the bag, I bet.\"\n\n\"Don't be mad at her,\" I begged.\n\n\"I have to be,\" he said sternly, \"Because she's so damn good at apologizing!\" He laughed. \"Here we are.\" I looked at the closed door. A reserved sign was pinned to it. Randy put his hands on my shoulders. \"Don't forget, you can walk away at any time. But I just want to assure you that this is one of the good guys. DeDe really likes him. In fact, she suggested I call him and ask him to come tonight. And this is just to talk, unless you decide you want more. You're the top tonight. You're calling the shots. Remember, trust has to come first. Ready?\"\n\nI nodded, though I didn't feel at all ready, except maybe for the wet spot growing in my panties. Here I was jumping into the unknown, yet again. At least it felt like I had a parachute this time. Randy opened the door. There were a couple of couches in the small room, and a man stood up from one of them, crossing the room in a couple of strides. \"Francois, I would like you to meet Skylar, Sky,\" Randy said. I didn't even know he knew my full name. \n\nI held out my hand, but Francois folded both of my hands in his. \"Skylar, it is my pleasure,\" and for the first time ever, I didn't hate the sound of my full name. Somehow, his soft French accent made it sound glamorous, and romantic, and maybe even a little erotic. Damn, that wet spot was growing. He gestured toward one of the couches, and I let him pull me over to it. I sat on the edge of the cushion as he settled on the other couch against the adjoining wall. Immediately, that small but respectful distance put me at ease and I settled back against the cushions. Randy was handing me some papers. \n\nWhen I looked up at him, he said, \"Be gentle with Francois.\" He gave me a sort of salute, then backed out of the room. I looked at the papers; they were checklists, mine and Francois'.\n\n\"May I?\" he asked, reaching for my checklist. I had to remind myself that transparency was the rule in this world, and I only blushed a little bit when I handed it over. I looked through his list. It seemed he was a little more adventurous than I, but mostly in that he was Okay With activities that I'd checked as Soft Limits. I looked at his expression as he read over my list, trying to get some inkling of what he was thinking. When he finished reading it, he set it aside on the couch with the air of one who found it interesting, but not particularly relevant to the moment at hand. He looked at me with milk chocolate brown eyes and smiled softly. \"Do you mind if I take my jacket off?\" he asked.\n\nI shook my head, dumbfounded that he would even bother to ask. When he unzipped it and shrugged out of it, I swear I did that thing that every woman in the world hates when some guy does it to her. He had a tight tee shirt on and my eyes did a slow, thorough mapping of every chiseled muscle barely hidden by the stretchy fabric. Somehow, I managed, with great effort, to return my gaze to his face, and a shadow of a smile was playing over his lips, even as he kept his gaze firmly locked on my face. But then, my chest wasn't near the distraction that his was.\n\n\"So, Randall told me you found yourself in a very troubling relationship.\"\n\n'How much did he tell you,\" I said, wringing my hands again.\n\n\"That's all. He is a very discreet man. You have to be, in this business,\" he said, spreading his arms to encompass our dungeon room.\n\n\"He thinks I need to find a different Dom,\" I said, blushing furiously.\n\n\"What do you think?\" he asked softly.\n\n\"I don't know. I didn't even know anything about all this before... him.\"\n\n\"What was it about him that was different, made you feel different? These are questions you need to find the answers to, before you can determine if it is a Dom you want.\"\n\nI shrugged defensively. \"Everything was so much more intense with him.\"\n\n\"Because you gave him all the control?\"\n\nI snorted. \"He said I was a lousy sub because I wouldn't follow his rules. He said it was because I wanted him to control me even more. So every time he would escalate his control, his punishment, add more rules.\" I was looking everywhere in the room now but at him.\n\n\"So he would make you more helpless, more afraid of displeasing him. Skylar, that is intensity from adrenalin, not pleasure.\"\n\nI was wadding up the hem of DeDe's dress. \"I guess,\" I said softly, trying to smooth out the fabric. \"But now, anything less seems... unsatisfying. I'm addicted to him,\" I confessed.\n\nHe shook his head. \"No. Not to him. Don't ever believe that. What about in the beginning, before the intensity. What made you want him?\"\n\n\"He made me feel desirable,\" I mumbled. I was staring at my lap.\n\nHe slid to the edge of his couch and reached over to tilt my chin up. \"You are very desirable, Skylar. Why would you think that you are not?\"\n\nI rolled my eyes. \"My mom always said I was built like a bean pole.\"\n\n\"Does she still say that?\"\n\n\"She died when I was thirteen,\" I said softly.\n\nUsually, when I told people that I got a heavy dosing of pity. He, on the other hand, snorted. \"Your body image is based on something you were told when you were thirteen?\" he said with astonishment.\n\n\"I'm obviously not built like someone like DeDe,\" I argued, then wondered if he was purposely baiting me, trying to make me angry.\n\n\"So?\" he demanded. \"When I walked into the dungeon tonight, three men were watching you and one man had approached Randy to ask if you were available. Shall I tell you how many women were looking at you with envy? Did you see none of that?\"\n\n\"That's just curiosity because I was new,\" I muttered.\n\n\"Skylar,\" he said sternly. Oh, oh. Dom voice. My alarms were going off and my wet crotch spot was growing. \"That was curiosity about an unattached, desirable woman. So what am I to do with you? You say you found this pretender exciting because he found you desirable, yet you refuse to see that others also find you desirable.\"\n\nHe took my chin more firmly. \"I find you very desirable. And I swear if you dare say that I'm making that up, I will take you over my knee right now.\" I was sure he would feel the tremor go through me, and probably smell my arousal, too. Then that damn mouth filter that I hadn't gotten fixed screwed me over yet again. \n\n\"You're making that up,\" I whispered.\n\nHe burst out laughing, then picked up my check list. \"I think you need to change spanking from Soft Limit to Okay With.\" I blushed. Damn, I was doing that a lot anymore. He leaned back and studied me. \"Look at me, Skylar,\" he said in that deep, low voice that seemed all the more effective for being laced with a French accent. I wondered if they all went to school somewhere to learn that. Dom School. Hmmm. \"I want to see your eyes,\" he added. I did my best. He had that intent gaze and the lighting in the room was soft, making his chocolate brown eyes look more like espresso. \n\nHe held my list up. \"This tells me you want a Dom. Your arousal tells me you want a Dom.\" Shit, maybe he could smell me. \"But I also see your assertiveness, even your anger peek through now and then. Do you know what that tells me?\" I shook my head, looking down at my lap again, but I caught myself as he cleared his throat and looked back up. I was rewarded with that soft Gallic smile. \"Do you know the difference between a sub and a slave?\" he asked.\n\nI shook my head. \"One time, he told me that I was a sub, not a slave. I didn't know what he meant.\"\n\n\"Did you ask him?\"\n\n\"I wasn't supposed to ask questions. Just answer them.\"\n\n\"Of course,\" he muttered. \"A slave gives up all control, does whatever he or she is told to do. Serves whoever he or she is told to serve. A sub negotiates what control he or she will or will not give up. You had not given up all control, so you were a sub. But I suspect he wanted to turn you into a slave.\" He paused a moment. \"It is also possible that he intended to sell you or trade you when he had achieved that final capitulation.\"\n\nI was picking at the hem of DeDe's dress, my head down to hide tears that were welling in my eyes. \"What am I going to do?\" I asked, feeling like I was teetering on the edge of the Grand Canyon. \n\nHe grasped my hands, folding them into his, pulling them away from the ravaging of the fabric. \"You've already done it. The only questions now are how are you going to move forward with your life. I do believe you are searching for someone to help you find control over yourself, over aspects of your life that feel like they are spinning out of control. Yes?\" I shrugged and that seemed to trigger the release of a tear from my left eye. Before I could lower my head, he reached up and caught it with his thumb. I watched in wonder as he touched that thumb to his lips and his tongue darted out to taste the salt of it. How the hell could that be so erotic!\n\n\"Mais non. But no,\" he corrected. \"Not everything. Some things you want to keep control over, and some things you must, even though you may not want to. This is where you must negotiate. And it is also where you must be strong, and accept responsibility for the control that must remain in your hands. Do you understand what I am saying?\"\n\nI bit my lip. \"I think so. But I'm not sure I know which is which, I mean, what I have to keep responsibility for.\"\n\n\"That is where a true Dom can help you. And the friends you are making here.\"\n\n\"And the sex,\" I whispered, blushing furiously again.\n\nHe gave a very soft laugh, and I swear there was a French accent to his laugh. \"You do not need to be afraid in order to have fantastique sex. You only need a fantastique lover.\" He leaned very close. \"You know what they say about French men. Ils sont magnifique!\" Then he was pulling one of my hands to his lips, gently kissing my knuckles. It might as well have been a Taser blast straight to my clit. When he saw that effect on me, he straightened my fingers and kissed my fingertips one by one, then folded all but my index finger and began sucking on it. I was melting, sort of like the Wicked Witch of the West only in a far more pleasurable way. And without the flying monkeys.\n\n\"Skylar,\" he said, so softly that I had to lean closer to hear. \"I want to show you that it can be just as intense; no props, no toys, no threats, no rules, no pain, and no commitments. Your desire is in you. Not him, not anyone else. Tell me what you desire.\"\n\nI shook my head in confusion. \"Doesn't that make me the top?\" I asked trying to sort it all out.\n\nHe was sucking on two of my fingers now, and he smiled at me around them, even as I was sure I was wetting the couch with my arousal. He kissed my fingertips, pulling them away from his lips just long enough to say, \"Subs are always the tops. We just pretend otherwise.\" Then he was sucking even harder on my fingers and I sank to my knees on the floor.\n\n\"Tell me, Skylar,\" he said, following me to kneel on the floor.\n\n\"I want you to suck on my breasts like that,\" I said, amazed at my audacity. Apparently, he wasn't, because he had the zipper of the dress down my back to my waist and the shoulders pushed down my arms to expose my breasts in a flash. He leaned down and sucked a major portion of my left breast into his mouth, slowly working his way back out to the nipple and areola. I leaned back, grasping my ankles to support myself and breathing hard. When he had sucked my nipple to tender hardness, he nipped and pulled on it until I was gasping, then started in on the other breast in the same fashion. Somehow, he managed to grip my nipple firmly but gently in his teeth and still ask, \"What next?\"\n\nI could hardly think straight already, I just knew there wasn't nearly enough bodily contact as I arched my back and tried to meet belly to belly. He pulled away and repeated, \"What next?\"\n\n\"My clit,\" I gasped. \"Please suck it, too.\" He grasped my shoulders and gently pushed me back and down. His hands ran slowly down my arms, finding the fabric of my dress, capturing it and pulling it along. Fingers reached out and hooked in my panties, and then they, too, were sliding slowly, inexorably downward. When they were free of my hips, he lifted my legs straight up into the air in front of him. He kissed the back of my knees through the thigh highs DeDe had insisted I wear, slid the fabric past them, then kissed them again as he drew my dress and panties over the heels I was wearing and toss them aside. His hands were at my ankles, holding my legs in the air. My fingers were digging into the soft carpet trying to hold myself still. His lips on the backs of my knees was almost torture.\n\nHe was still kneeling, and he set my feet down to each side of his hips and looked down at me. He leaned over me, planting his hands next to my shoulders. His lips brushed the tip of my nose. \"Skylar, when you squirm, I know I'm doing something right. Relax.\" His lips brushed mine and I craned my neck up for more, but he pulled back and smiled down at me. \"Sorry, I have a date with your clit. By the way,\" he added, as he retreated back between my legs, \"These walls are soundproofed. You're welcome to scream your appreciation for my efforts. I like to measure my success in decibel ranges.\" He pressed my knees to the sides and blew softly on the dampness of my pussy. I arched my back and moaned.\n\nHe teased me without mercy, the tip of his tongue playing along my lips and down to my ass, then back again, never quite lingering long enough at my clit or in my pussy. I squirmed to get closer, flexed my hips to guide his tongue to my neediest nub, but he chuckled at my efforts and defied every one of them. \"If you don't suck my clit right this minute, I swear I'm going to die, Francois!\" I gasped. Then his lips were on my clit and I was going out of my mind. He alternately sucked and licked, then did both at once. I was writhing and spasming at the same time, panting in rhythm with my orgasm. \n\nBut then Francois was asking \"What next?\" again. One of my voices was saying very quietly, 'How much more can you take?' but I figured all those nagging voices had been deathly silent during my current ordeal, so I didn't owe them any answers. \"Fill me, please,\" I asked, holding my breath, waiting for the gotcha moment. This wasn't how D/s sex was supposed to go, was it? What did they call it, topping from the bottom? I thought that was a punishable offense. He simply asked, \"How, Skylar?\"\n\nThat was when I really fell apart. Everything about Dr. Tom that made me turn to Jello whenever he showed up, came spewing out of my unfiltered mouth in one breath. \"Hard, fast, deep,\" I gasped. I couldn't open my eyes. I was too embarrassed by my neediness. But he simply rose up on his knees and donned a condom. I didn't even remember him unzipping his jeans. He placed one of my knees and then the other over his shoulders. He pushed into me, slowly but steadily. He grasped my hands, lacing his fingers with mine and pinning them by my shoulders. Then he was leaning down against my legs, shoving them against my chest as he angled himself to reach the deepest crevices of my vagina. When he was satisfied with the angle, he began plunging hard and fast. The position, with my legs over his shoulders and his arms braced near my shoulders rendered me immobile without the use of ropes. I was coming within the first few strokes. \n\nHe rode out the aftershocks, then suddenly pulled out and flipped me onto my belly, using his knees to spread my legs. He guided himself back inside me, then grasped my hands again, fingers laced together, lowering his weight on my back. He methodically adjusted his angle until he struck my g-spot and I was writhing despite his weight bearing down on me, and shouting \"Oh, fuck,\" over and over again. He tightened his grip and hammered away with short strokes that were almost unbearable in intensity. The rolling waves of orgasm just wouldn't stop, even when he pulled back and lifted me to my knees, plunging into the deepest reaches. If he hadn't been holding my hips so tightly, I'm sure I would have collapsed. And I was pretty sure I was putting the soundproofing to the test, though I couldn't hear myself anymore. My entire being was centered right where the tip of him was knocking with an insatiable rhythm. He buried himself deeper than before, stretching me to my limits, his balls snugged warmly against my clit as he groaned and pulsed with his own orgasm. I was still convulsively squeezing him, making him moan with each wave of contractions. \n\nHe remained perfectly still until the very last contraction faded away, then pulled slowly, reluctantly out and rid himself of the condom even as he settled into the corner formed by the two couches and pulled me into his lap. I swear I was only barely conscious, but I felt so safe wrapped in his arms. I snuggled against his chest, realizing for the first time that he was still dressed. He was kissing the top of my head, running his fingers through my hair and murmuring softly in French. It dawned on me, as sanity slowly returned, that I'd been an idiot to think I was topping from the bottom, or exercising any control at all. He had been in charge from the very beginning. And it felt... perfect."
    ],
    "authorname": "Chimera44",
    "tags": [
        "dungeon",
        "pussy eating",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/breaking-my-own-rules-ch-08"
}