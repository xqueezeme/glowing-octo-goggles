{
    "title": "Just Curious Ch. 10",
    "pages": [
        "I watch as her body relaxes into sleep. As gently as I can, I remove the blindfold, the earplugs, and the handcuffs, tossing them onto the floor. My little minx. I decide to leave the collar on, but I unclip the leash and toss it on the floor also. I watch her for a long time. First her face nuzzles into my neck. Then she rolls over, pressing her hands against my chest. I have to chuckle as her leg wiggles its way between mine. I lift my leg enough to let hers slip between them. She lets out a small contented sigh, and settles in for a deep sleep. \n\nAn inexperienced, untrained pain slut. The possibilities are running through my mind. My responsibilities toward her are next. Followed by all those damn promises I had to make to Jared. Stupid little fucker. He has no right to dictate how I use her. He's not her father. He's not her master. I close my eyes as I try to clear my thoughts. I wrap my arms around her and she makes a little cooing sound in her sleep. There's so much I want to do with her. To her. Just over two days remain and a laundry list of 'can't do/don't do's' from Jared make my options limited. We have to be up in two hours and I could use a nap. I close my eyes and settle in, drifting off the sleep with a gorgeous redhead wrapped in my arms.\n\nChapter 10  (Thursday)\n\nAwwww. What the fuck is that? DEET DEET DEET DEET As I start to turn away from the noise, the earth starts moving under me. Well, now I'm awake. DEET DEET DEET DEET It's Marcus. Grumbling, he curls his arm around me so he can get at the offending watch. DEET DEET DE... I'm lying almost on top of him now. He starts shifting and stretching. When he moves his leg, my skin sticks to his. I look under the covers. Ahh gross. We're stuck together. \"That's nasty!\"\n\nMarcus laughs. \"Sorry little minx. You were fast asleep within minutes, and I just didn't have the energy to clean us up.\" With a little maneuvering, we get ourselves separated. It's question time again. I don't hesitate to answer them. I found it best to answer with the first thing I think of. Why did I come to his room? What did I expect when I knocked on the door? How did it feel to wear a collar? (My hand reached up to touch the soft leather still around my neck as I answered.) Did I enjoy the blindfold? The earplugs? Did it make the experience more or less intense? Etc. Etc. \n\nMy head is resting on his chest when he's finally satisfied. \"I was very happy with you last night. You were spectacular.\" He kisses the top of my head.\n\n\"Do I get a reward?\" I've wanted to ask him something, but I'm not sure how.\n\nPfft. \"No! Not after the panty incident. God those were awful. Whoever invented underwear should be shot, set on fire, ground up, and fed to goldfish.\" I giggle, assuming whoever that was is long dead already. Marcus works the collar around so he can remove it and tosses it on the floor.\n\nWe lie together quietly for a while, neither of us willing to get out of bed yet. \"Why did you ask for a reward? If you want something, you can always ask.\" He pets my hair gently. \"Although begging would be preferable.\" I don't have to see him to know he's smirking.\n\nI'm not sure I can ask yet. He doesn't pressure me. We just lie there as the minutes tick by. He's still petting my hair. \"Marcus. Can you, I mean.... Marcus, do you want to fuck my ass?\" There. I said it. Now I feel like an idiot.\n\nThe room is deathly silent. He's stopped playing with my hair. \"What?\"\n\n\"I'm sorry. Nevermind.\" God, I'm such a moron. \n\nHe's moving out from under me, hoisting himself up on his elbow so he can look down at me. \"Don't be sorry. I just wasn't sure I heard you correctly. Did you just ask for anal sex?\"\n\nI knew I should have just kept my mouth shut. With a hand on my chin he pulls it until I'm looking up at him. \"Don't be ashamed to ask for anything you think you need or want. We're exploring your sexuality here, so you have a say in what goes on. Tell me again. Please.\"\n\nHe doesn't seem mad or shocked. I take a deep calming breath. \"When I was with Dustin he was going to do it. He had these things in me.\"\n\n\"Anal Plugs. They're used to stretch the sphincter and the anal canal to make penetration easier on both parties.\" \n\n\"Yeah. Anal plugs. He had Harper put in different sizes while he was away. When he came back he was going to do it. But he didn't. I guess. I don't know. I think I want to try it. I heard that it hurts, but I trust you. I don't think you'd hurt me. I don't know.\" I'm babbling so I stop talking altogether. \n\nMarcus can tell I'm embarrassed. He kisses me and thanks me for telling him what I want. \"Let me think about this, OK. We only have two days left. I'm not saying 'no', but I just can't answer you right now.\" He rolls off the bed and helps me up. Uggh Everything is sore. And sticky. Marcus gives me a fairly thorough inspection, looking for bruises or scratches. \"I have to go in to work this morning. Which means it's shower time for you. I want you squeaky clean, got it?\"\n\n\"Yes Marcus.\" He spins me toward the door, and spanks my ass. I head for the door, but stop when I see a bunch of stuff on the floor. I scoop up the crop, the handcuffs, the blindfold, the earplugs, the collar and the leash and place them on the nightstand. I turn to see Marcus watching me, he's smiling. I turn and head out the door to my bedroom to take a shower. I didn't know it at the time, but that would be the last night I would be put to sleep in 'my room'. \n\nThe shower is cool and refreshing. I scrub the remnants of last night off my thighs and stomach. I wash my hair and brush my teeth. There's no dress on the bed waiting for me, so I pad down the carpeted hallway to Marcus's room. I hear him talking with someone. He seems agitated, almost forcefully calm. I open the door and wait in the doorway.\n\n\"No. I told you already, I haven't broken my word. I'm asking you to rescind all those damn stipulations you put on me. You're doing her more harm than good.\"\n\nHe showered and dressed in a casual suit, his wet hair still spiky in places. I watch as he paces back and forth in his bare feet, listening to the other person on the phone. \"I'm not putting ideas in her head. Jesus, you're paranoid! How do you think she feels when she asks for something, which is hard enough in a situation like this, and I have to make up some stupid excuse or ignore her?\"\n\nMore pacing. He sees my reflection in the mirror. His face it unreadable as he goes back to pacing. I step into the room. I think this is about me. \"No. No. No. You're not her father. You're not her master. What gives you the right...\" His pacing becomes shorter and faster. He hasn't kicked me out so I walk to the foot of the bed and kneel on the floor. I don't know why I did that, it just felt right. I watch as the conversation goes on. Is he talking to Dustin?\n\n\"I understand that you care about her. She's very special. But you're not helping her. I'm frustrated. She's frustrated. I've taken her as far as I can, and she's barely begun to shine. I'm asking you to trust me. I will not harm her. I swear it. But you need to rescind the demands you made on me. For her sake.\"\n\nHe sits down on the bed as the other person is talking to him. He puts his hand on my head leaning me into his thigh. I can feel the warmth on my cheek through the soft material. \n\nHe sounds exasperated. \"Jared, you're focusing on what you want, not what she needs. Think about your friend. She is safe. She is cared for. I promise you that. And she is just starting to come out of her shell. She's made huge progress.\" This makes complete sense now. This is something Jared would do. Marcus doesn't have a chance in hell to change Jared's mind. I reach up and place my hand over his. He takes the phone away from his ear.\n\nI mouth the word 'please' to him and hold up my hand for the phone. I know Jared. I know he thinks he knows best, and how stubborn he is defending what he thinks he knows. Marcus won't be able to talk him down. Marcus hands me the phone, watching me silently. I make my voice as calm as possible. \"Jared?\" Marcus places his hand on my head again, petting my wet hair.\n\nI listen as Jared goes on a full blown rant. I interrupt him after only a few moments. \"Jared. Listen to me.\" I wait as the other side goes silent. \"You have to let me go, Jared. Please. You have to let me go.\" \n\nThat's all I need to say. I hand the phone back to Marcus. \"It's me again. ... No, I didn't force her to say that. I told you already, you're paranoid.\"\n\nThe conversation goes on; it looks like Marcus is getting what he wants. The only thing Jared still insists on is that I am on a plane Saturday morning heading home. Marcus swears to this several times, but it looks like Marcus gets everything else he wanted. The conversation ends and Marcus hangs up.\n\nHe just stares at me for the longest time. \"What are you thinking, girl?\"\n\n\"I don't want to go home yet.\" \n\nHe gets a sad smile; we both know what he promised Jared. \"Did you mean what you said this morning? Do you really want to have anal sex?\"\n\nSo apparently that was one of Jared many conditions. \"I'm curious. And a bit scared. But I trust you. I know you won't hurt me. Well, not too much anyway.\"\n\nHe rubs a hand over his face. \"I need more time.\" I don't think he was saying that to me, he just said it out loud. \"We only have two days, did you want to try it today, or wait for tomorrow? Today would be a little bit more intense preparation wise, but if we wait till tomorrow and you enjoy it, we won't have much chance to do it again. What do you think?\"\n\n\"Enjoy it? I never thought if I'd enjoy it or not. I just wanted to try it. What do you think is best?\"\n\n\"It's up to you. And yes, some women enjoy anal sex. There are pros and cons for both, but you haven't disappointed me yet. And no matter what you decide, you won't disappoint me this time. We'll make the best of whatever you decide.\"\n\nI don't want to be nervous about this any longer than absolutely necessary. \"Today then. Let's do it today.\" I watch his face to see if he's happy, but I still can't read him.\n\n\"OK. Give me a sec. We need some stuff.\" He goes out of the room and I wait there on the floor. He comes back quickly with a small box, a tube of something, and a black dress. He sits on the floor next to me and flips open the box. As expected, it's four anal plugs. These are gloss black with a shiny silver swirl through them. \"I need your ass. Put your face on the floor right there.\" I turn away from him and place my face where he pointed. \n\nHis hands are on my ass, and soon a gooey, slippery finger is circling my anus. He's talking to me, describing everything he's doing and why. He tells me to exhale and relax. I do, and he presses a finger inside my ass. Repeatedly he does this, sometimes adding more lube. He tells me to relax again, and it feels like a second finger is added. That one causes me to groan. \"Breath for me, baby. Good girl.\" \n\nHe works the two fingers in me several more times. I watch him reach for the smallest plug. He squirts some lube on it. \"OK, here we go. Breath and exhale.\" I take a deep breath, exhale, and try to relax. I jerk when the cold plug touches my skin. Marcus calms me with his voice and his hands. The pressure increases until the plug pops in my ass. \"All done. Can you sit up?\"I struggle to my knees. That's damn uncomfortable. \"You OK?\"\n\n\"Yeah, I think so. It just feels weird.\" \n\n\"Come on. Let's get you dressed. I'm late and we have to get to work.\" I wait as Marcus finishes getting dressed.\n\nHe picks a black dress from the closet and starts putting it on me. My dress is broken. There is no other way to describe it. It's broken. It's a strapless tube dress. On the top, there's a solid V-shaped strip of black material barely covering my nipples and plunging down to cover my crotch. There's a rectangular strip covering my ass. The rest of the 'dress' is ripped strands of black. The dress stops about mid thigh on me. It looks like a very slinky black dress that was attacked by a weed whacker. \"You gotta be kidding me?\" He can't seriously expect me to wear this out in public. \n\n\"Watch you tone, little minx. The punishments available to use on you just got a lot more interesting.\"\n\n\"I'm sorry Marcus, it's just this is very skimpy and I don't feel comfortable in this.\"\n\n\"We're not going anywhere this would be considered inappropriate. And you look beautiful. Back straight, chin up. We have to go.\" Discussion over. He leads me to the parking garage and he drives over to the brothel from Monday. It's not too horrible riding around with the butt plug in; not fun, but not horrible either. We wait for the gate to open then parks in the reserved spot and we head inside. I'm carrying the box with the plugs in it.\n\nElliot is there again, wearing another sharp looking suit. \"Good morning, sir. Welcome back.\" He nods at me as he looks me over from top to bottom. I think I would be more comfortable being nude than wearing this dress. Marcus and Elliot share a look, and Marcus is immediately in a bad mood. \"You gotta be kidding me? Seriously?\"\n\nElliot just shrugs and Marcus growls as we head into his office. \"How's the plug?\"\n\n\"It's not too bad. It doesn't hurt anyway.\"\n\n\"Good, we'll try the next size then. Bend over the desk.\"\n\nOh joy. Elliot has followed us into the room. I put the box down on the desk near Marcus. I lean over and rest my head and chest on the desk. Then I wait. Marcus has found some lube, not surprising, this is a brothel. He takes out the next size plug and lubes it up. Elliot pipes up. \"Ummm, boss. I thought that was off limits.\" Marcus flips my dress up over my ass.\n\nHe replies as he's tugging out the first plug from my ass. \"I had a talk with Jared this morning.\" I feel him kissing me down my spine and it sends a shiver through me. \"There has been some 'change of plans' that should prove interesting.\" That's his cue to start pressing the larger plug into my ass. With constant, ever increasing pressure he presses the hard cold object against my anus. He tells me to relax, but it's very hard when he's trying to shove a plug in there. I clench my ass closed, but eventually the pressure is too much and it slips in with a grunt.\n\n\"That wasn't a very auspicious beginning. You sure she's up for this?\" Why does Elliot make this sound like a normal everyday occurrence? \n\n\"She is. She won't disappoint. Besides, I want to get this in before we leave this afternoon. So there's a time crunch involved. Stay put little girl. I'll be right back.\" Marcus and Elliot head into the corner to have a private discussion. He didn't even put my dress down. I wait there, watching them talk. My exposed ass is relaxing into the sensation of having something stuffed inside it. Again, it's not painful, more uncomfortable than anything.\n\n*********\n\nMarcus stalks to the far corner first, Elliot is right behind him. \"Seriously? You're serious. He didn't pay?\"\n\nElliot forces himself to remain calm. He knows better than to add to Marcus's aggression. \"Completely serious, sir. No one has seen him since yesterday afternoon.\"\n\n\"Fuck. I didn't need this today. We got people on the family?\"\n\n\"Yes sir. The kids are at a music camp until noon, and the wife is getting her hair done. The house is empty otherwise.\"\n\n\"Shit. OK, I'll deal with it this afternoon. Do you have people and a place ready?\" Marcus isn't happy. He glances back at his girl, just to make sure she hasn't moved. It would be interesting to punish her now that the restrictions are lifted.\n\n\"Yes sir. Six men are standing by and we're using the old weapons house on the east side. It has a below-ground cellar if they're bad and some video game systems in the living room if they're good.\"\n\n\"Good choice. I'll do the pick-up. I've met JeAnna before; she seemed to have a good head on her. If I can convince her this is her best option, it'll be easier on the kids.\" Marcus runs his hand through his hair in frustration.\n\n\"What about the girl?\" Elliot glances behind him; she's still bent over the desk.\n\n\"She's got two more plugs to assimilate. I'll break her in after that. Keep room 301 open for me around noon. I like the lighting in that room. Otherwise the plans should remain unchanged. You'll take her to the movies until I'm done, then we'll see if she lets you fuck her. \n\n\"Wearing that to the movies should be interesting.\" Elliot can't help but laugh.\n\n\"It's mostly locals, they all know you. No one will fuck with her, and if they do, I trust you'll take care of it efficiently. Keep her aroused and on edge, but don't let her cum. I also want you to treat her like an object; property. I want to know how she reacts to that. Don't degrade her or humiliate her. I don't want her to feel ashamed, just treat her like a cherished object. Remind her she belongs to me and is mine to do with as I please.\"\n\n\"Yes sir. I'll keep her safe and horny for you.\"\n\nMarcus lightly punches his shoulder. \"Don't enjoy yourself to much, she's mine, remember. Oh, I forgot. Could you order me an omelet?\"\n\n\"Yes sir.\"\n\n*********\n\nThe men finish their discussion and come back towards me. Marcus helps me up, puts my dress back in place, then hands me over to Elliot. Elliot leads me out of the office, and just like Monday, I'm strung up from the ceiling. He steps back and admires me for a few moments. Then he steps up and tweaks my nipples until they're hard and poking through the thin fabric. \"Much better. Remember, eyes down; mouth closed. Understand?\"\n\n\"Yes sir.\"\n\nAbout half an hour later a delivery guy arrives with a white paper bag. Elliot pays him and he stumbles out the room, he can't stop staring at me. Elliot takes the bag in to Marcus's office then comes out and lowers me to my feet. I'm unchained and led into the office. There's an omelet, an English muffin, and some fruit on the desk. Marcus motions me over to the desk. I walk over and stand next to his chair. \"Kneel.\"\n\nThis time I don't really think about it. I just swallow my pride and drop to my knees. He smiles and kisses the top of my head. \"Good girl.\" He starts eating and feeding me bites of food. He types on the computer and makes phone calls while we eat. When the food is gone, he packs all the garbage into the white bag. He tells me to throw it away and present myself to Elliot.\n\nJust getting dismissed like that hurts. It took so much to kneel there and be fed, and he just sends me away. I rise silently, without help, and throw the bag in the garbage can by the door. I look back at him, but he's engrossed with whatever is on the screen in front of him. I go to Elliot and he strings me back up. \n\nI hang there probably about an hour. Men come and go, each one checking me out as he walks by. Elliot lowers me twice during that time to ease the pressure off my wrists and shoulders. I'm released and he walks me back into the office. Marcus is on the phone, so Elliot guides me to the desk and presses down on the back of my neck until I'm bent over the desk. I wait until the phone call is over. Then we go through the process of upgrading my butt plug. More lube is added and Marcus stretches me with his fingers before inserting the third size plug. He talks me through this one, telling me to relax. It pops in and sits snuggly in my ass. I can't believe I actually asked for this. I'm an idiot. I have trouble standing, so Marcus has to help me. When I stand up straight is feels almost like a cramp in my gut. I try to walk hunched over, but he won't let me. \"Stand up straight, little girl. I know it's uncomfortable, but you have to learn to bear it. Accept it. Embrace it.\" \n\nI'm strung back up. The cramping gets worse. Marcus watches me process the new sensations. He kisses me and starts back to his office. \"Elliot, help her relax a little, won't you? But don't let her cum.\"\n\n\"Yes boss.\" Marcus disappears around the corner as Elliot stalks toward me. I try backing up, but my toes barely touch the ground. He runs his hand down my neck and between my breasts. \"I love this dress on you. It draws the eyes to all the right places. Very sexy.\" He cups my breasts and plays with my nipples through the fabric. A man comes down the hallway toward us. Elliot returns to the podium to process him and send him up the staircase. ",
        "He comes back to me. My nipples are still hard. He cups my mound, pressing the soft material between my folds. \"Yeah. I really like this dress.\" He leans in and starts sucking and biting my nipples as he swipes aside the now damp material covering my crotch and places two fingers directly on my clit. \n\nMy breathing comes in short sharp gasps as he expertly works my clit and nipples. My back arches as he bites down a little harder. \"Good girl.\" He draws me higher and higher, the plug in my ass all but forgotten. \"Look at me. Come on, girl. Look at me. Good girl. You know you don't have Marcus's permission to cum, right?\" \n\nI'm still panting. I look into his eyes; they seem so white against his dark skin. I hear some men coming down the hall. \"Yes sir.\"\n\n\"That means your body won't cum, no matter how much you beg.\" He turns to look at the men. \"Good morning gentlemen. If you don't mind, this will only be a short delay.\" The men say they don't mind waiting. Elliot keep fingering me and sucking my tits until a shiver travels through me. He stops. I knew he would, but the suddenness of it was still shocking.\n\n\"Please, sir. Please.\"\n\n\"Such a good submissive you are. Marcus is a lucky man to command you, even if it is for a short time. Eyes down, mouth closed. Be a good girl.\" I grunt as he smacks my ass directly on the plug and tugs the bottom part of the dress back in place. He leads the men to the podium and processes them. One of them asks if I'm available. I clearly hear him tell the men I am 'the bosses property' before they pay and head up the staircase to the upper rooms. \n\nAnother hour goes by. Men come and go. Pictures are brought to Elliot, and the same woman from Monday returns other photos to the front. Slowly the cramping pressure diminishes, but I'm never allowed to forget there's a plug shoved up there.\n\nAgain I'm lowered and taken to the office. I wait by the desk. His eyes rove over my body as he talks on the phone. When he's done he walks behind me and bends me over the edge of the desk. I squeal as he smacks my ass several times. He lifts my dress up over my ass and starts biting and sucking on the reddening globes. \"You have no idea how much I'm looking forward to this. How much I'm going to enjoy using your ass.\" He steps back and snaps a few pictures. He opens the box and takes out the last and largest plug. I watch as he lubes it up good. \n\nHe takes my hair and pulls my head back hard. He jams his knee between my legs. \"Listen up, girl. I'm going to talk you through this last plug. You do as I say, when I say, in a way you think will please me the most, understand?\"\n\nHe shakes my head for emphasis. \"Yes Marcus.\" The control he has over me is somehow erotic. \n\nHe leans over and whispers darkly in my ear. \"If you hesitate, or disobey me, I will punish you. Worse than anything you've felt from me. Your tits are mine. Your cunt is mine. And soon, your ass will belong to me. Mine. Your body is mine to use. I will take whatever pleasure I want from you, and you will beg for more. You need to be controlled. You crave the dominance I have over you. You exist to submit. It's your nature. Now beg me for the last plug.\"\n\nAny little spark of resistance I might have had disappears. The more control he exerts, the more I need to give him. The words start flowing out of me, and I'm surprised to realize I mean every one of them. \"Please Marcus. Please put the last plug in me. I want to feel you in my ass. I want to give you everything. Please. Use me, Marcus. Anything you want is yours. Please.\"\n\nHe leans over me and presses his body along mine. I feel his weight pressing down on me, covering me. He kisses my ear and coos in my ear. He stands back up and he tugs on the plug currently embedded in my ass. \"Give me a push, girl. Don't squeeze your ass, just push.\"\n\nI take a deep breath and start pushing. Marcus tugs and with a groan the plug pops out. I feel a momentary sense of relief and relax. \"I want you to put your hands on your ass and open up for me.\" Shaking, I reach behind me and place my palms on my ass. I press down and pull my cheeks apart. \"Good girl. Now press your index fingers into your ass and pull them apart, as much as you can.\" I crawl my fingers together. It feels so weird slipping the tips of my two fingers into my own ass. I take another breath and start pulling the fingers apart, opening my anus. \n\nI feel Marcus moving behind me, and a few more snaps of the camera. He starts rubbing my clit as I stay as still as possible. \"God, you are so fucking sexy.\" I can't help squirming as my core starts to heat up. With his other hand, he presses the last plug against my anus. \"Take a deep breath, relax your ass, and over and over I want you to beg me to fuck your ass.\" Another deep breath, it's hard, and I'm not completely successful, but I try to relax as much as possible. \"Please Marcus. Please fuck my ass. My ass is yours to use. Please.\" Slowly he's pressing the plug inside me. Eventually it pops in and I breathe a sigh of relief. But Marcus isn't done yet. He tugs and twists until the plug comes out and starts the process all over again. \"Beg!\" \n\nFor the next several minutes, Marcus works me over with the butt plug relentlessly. Over and over he pulls it out and pushes it back in. The whole time I'm begging for it. Begging for the plug. Begging for him to fuck me. When he's had enough he presses himself against my ass. \"See how hard you make me? Do you know how badly I want to plunder every hole you have? I love using this body, every inch of it.\" \n\nWith a hand in my hair he pulls me off the desk. \"Kneel.\" I let out a groan as my body crumples to the floor. The plug is huge and very uncomfortable. He stands in front of me and kicks my knees farther apart. He opens his pants and pulls out the long hard cock I seem to crave constantly. \"Service me.\"\n\nWithout hesitating, I suck and slobber all over his shaft, sucking on his balls, and running my tongue over every inch of him. His scent is making me horny. God, I love that musky, tangy smell. When I hear him groan for the first time, I try to swallow him. The groan catches in his throat. Inwardly, I'm smiling like the Cheshire Cat. I'm the one making him hard. I'm the one making him groan. I'm the lucky one on my knees sucking his cock. \n\nSomeone enters and clears their throat. \"Boss. Kyle and Mr. G are here.\"\n\nHe grumbles before he answers. \"Get them a drink in the bar. I'll be done in a bit.\"\n\n\"Yes sir.\" I hear the door closing as Elliot leaves the room.\n\n\"Swallow me now.\" I press him back into my mouth. When the head reaches the back of my throat I swallow and press him deeper. I can only hold it for a second or two before I start gagging. I pull back, take a breath, and do it all over again. After several tries, Marcus entwines his fingers in my hair. In that one simple move, control is taken away from me. I let Marcus use me until my mouth is filled with his cum. I swallow as much as I can, but I feel some spilling down my chin. He pulls out and towers over me triumphantly. I wipe my face with my hand. \"Clean me.\" \n\nI understand the command, but the 'oddness' of it catches me off guard. I hesitate for a split second then start licking him clean. He tucks his cock away when I'm finished and pulls me to my feet. He kisses me then pulls me into a long embrace. \"Tell me how you ass feels.\"\n\nThis sounds like a serious medical question, so I consider my body for a second. \"It feels 'tight'. My ... um hole and the inside is tight.\"\n\nHe makes a tsk tsk tsk noise. \"No goody two-shoe girly-girly words. If you can't even talk about it, maybe you're not ready to experience it. You have an anus, a sphincter, an anal canal, and a rectum. Use the words properly, girl. Vagueness and miscommunications could cause problems. There's nothing wrong with anal sex. It's only taboo if you make it so.\"\n\n\"I'm sorry, Marcus. The plug is very tight in my anus; I can feel it stretch to accommodate the plug. It doesn't hurt, but I can feel a hardness in my rectum. It was painful when you first put in the final plug, but now it's just more uncomfortable.\"\n\n\"Do you feel any sharp pains, like tearing?\"\n\n\"No. Nothing like that.\"\n\n\"Any spasms, like uncontrollable clenching?\"\n\n\"No sir.\" Marcus glares at me instantly. I quickly try to figure out what happened. I called him sir. \"I'm sorry, Marcus. Everyone calls you 'sir', it just slipped out.\"\n\n\"I'll punish you for that tonight. OK, it's 10:45. We'll let that plug work for an hour, then get you cleaned out. How does that sound?\"\n\n\"That sounds fine, Marcus. Thank you.\"\n\nHe gets a big grin on his face. \"You are very welcome, little one.\" He leads me out to reception area. Elliot goes to get the men in the bar as Marcus strings me up. He's fixing my dress as Elliot returns. After greeting the men, they go into his office and I'm left with Elliot.\n\nThe time goes by slowly. Elliot lowers me at intervals, and plays with me whenever he has a few spare minutes, which seems to be quite often today. I just watch the feet of different people walking by, most of them stopping to look at me. A few are scolded by Elliot when they try to touch me, but none question him or try to touch me a second time. My nerves are working on overdrive. What if this hurts like hell? Can I back out of this? Why did I open my mouth in the first place? Can I do this? Will he enjoy me?\n\nMarcus comes out of the office, stretching his back, his strong arms high above his head. I hear some joints cracking, then he has a short discussion with Elliot before both men turn to look at me. Elliot hands him a key card and he comes over to lower me. He unchains me and wordlessly turns to walk up the stairs. I watch him go for a few steps, then silently rush to follow along behind him. My fate is sealed. \n\nMy heart is racing as I catch up to him on the first landing. He takes my hand and we go up the staircase to the third floor. I'm so nervous it's getting hard to breath. I know I'm squeezing his hand very hard, but I can't seem to stop. He doesn't pull his hand away. \n\nTogether we walk down the long hall. I'm not even sure I could tell you the color of the walls or the floor at this point; panic is setting in. I press closer to Marcus, he always seems so strong maybe I can steal some of it from him. We stop in front of the door at the very end of the hall. Room 301. Breathe. Just keep breathing.\n\nMarcus swipes the card and opens the door for me. He waits for me to enter. I hear the door close ominously behind me. The first thing I notice are the large windows on one wall. It's made up of two large arches; the column down the middle is mirrored. Most of the room is either white or beige, making everything seem to glow in the sunlight. There's a large white bed in front of the windows. No headboard or footboard. \"Strip.\"\n\nI turn to look at him. His shirt is already off, and he's removing his socks and shoes. He seems so cold and distant today. As I try to get the dress off, I can't help but wonder if I did something wrong. \n\n\"I said strip.\" He's standing, glaring at me.\n\n\"I'm sorry. I can't seem to get it off.\" That's true. There's nothing solid to grab onto to pull it. I tried slipping my arms inside, but I heard ripping sounds, so I stopped. He just smiles and chuckles darkly. \"You always pick the simplest things to make difficult. Arms up, girl.\"\n\nI can't. I just can't. I wrap my arms around my chest and back away from Marcus until I hit something solid. Marcus's eyes darken, as he lunges at me, pinning me to the wall. \"Where do you think you're going? I said arms up.\"\n\n\"Stop.\" Oh my god! Did I just say that? To Marcus? Oh crap. Oh crap.\n\nMarcus instantly takes a step back and watches me. I keep my back against the wall, shaking. \"Talk to me. Why did you say 'stop'?\"\n\nIn for a penny, in for a pound. I never quiet understood that quote, but it popped into my head. \"You're scaring me. Did I do something wrong? You seem so cold and distant today. I don't feel safe with you anymore.\" \n\nHe just watches me; it takes a long time before he speaks. I watch as his posture and mannerism slowly start to relax. He steps forward and puts a hand on my cheek. I'm already pressed against the door; I have nowhere else to go. \"Shhh. Little girl. Shhhh. Do you remember when I said we would have to try different things this week, to see what you liked and what you didn't?\" I nod my head yes, I remember that. He said I had to try things, even if I didn't really want to, just to experience them. \"This was just one of those experiments. I was objectifying you. Treating you like an object, rather than a person.\"\n\nI'm confused. \"Like a pet or something?\"\n\n\"Or something. I was treating you like a toy. Something to be played with. Letting others play with my toy.\" Well, that explains Elliot's hands-on attitude and the coldness from Marcus.\n\nI wipe a tear away. \"Well, I didn't like that. It was scaring me. I was terrified I did something wrong.\"\n\nHe starts laughing; like full blown, maniac laughing. He picks me up and starts spinning me around. I hold on for dear life. If he's gone insane, I'm in big trouble. We end up crashing on the bed. He rolls on top of me, grabs my wrists and pins me down. \"Do you know what you just did? I am so proud of you.\" He kisses me. Then waits for me to answer.\n\nI'm really confused now. \"What? What are you talking about? Are you on drugs?\"\n\nHe kisses me again, still smiling the crazy man smile. \"No, I'm not on drugs. Surprisingly, I don't believe in them. But you! You stopped me. You said 'Stop'. Everything I put you through so far, you just accepted. Just like you did with Dustin. That is a very rare and very dangerous quality to have. If you, as a submissive, can't vocalize when you're in pain, or uncomfortable, or want to stop, that could lead to very dangerous situations.\"\n\n\"Like with Dustin?\"\n\n\"No baby girl. You told Dustin to stop when you asked to go home. What happened to you was entirely his fault for not respecting the gifts you were giving him. What was scary was that you only asked once, never after that. You let him abuse you, well past your limits.\"\n\n\"But I took it. I took it all. I did it.\" I can't explain it, but I am proud of those scars on my back.\n\nHis smile saddens. \"You did. You took it all. And you were scarred by it because it was too much.\" I'm about to argue there were only three small scars, but he stops me cold. \"How many nightmares woke you up screaming before that experience? How many panic attacks have you had in your life? I'll bet money that none of them were before the abuse. Those are your scars. You were terrorized, and you didn't have a voice to speak up for yourself. Without that voice, you're looking at the exact same scenario over and over again. Men will push to find your limits... Don't look at me like that! Every dominant you meet will want to discover those limits for himself. Reading them off a piece of paper just isn't very much fun. If you don't tell him when you've reached those limits, you will get abused over and over again. You will get broken over and over again. You said it yourself: he could have killed you, and you would have let him do it. Without your voice, we would have had to keep you out of our world. Not to protect you, but to protect us.\"\n\n\"Is that what's wrong with me?\"\n\n\"No baby-girl, there's nothing wrong with you. You are perfect. You had the strength to come here, even after everything you've been through. The strength to follow your heart. You had the insight to stop me when you were uncomfortable. A relationship like this, whether with me or someone else, requires trust at its heart. This whole week, you had nothing to go on but blind faith. And you did better than I could have ever expected. With all the confusion, all the uncertainty, all the extremes you've encountered this week, you sensed something was off, and spoke up. You spoke up. I am so proud of you. There is nothing wrong with you.\" \n\nHe rolls off me, running his hand down my side. We sit in silence for a while, giving me time to consider everything he said. I watch the light stream through the huge windows. \"So little one, what do you want to do next? Lunch? I could hang you back up downstairs.\"\n\n\"Ummm... I thought we were going to do ... ummm.\"\n\n\"Ummm what?\"\n\nIf I can't say it, I can't do it. \"I thought we were going to do the anal sex thing.\"\n\n\"You said stop. That means we stop.\"\n\nWhat? He's not going to do it. Seriously? I've had plugs up my ass twice, and no one's fucked me there yet. \"Wait a minute. I didn't say red light. Can't we still do the sex thing?\"\n\nHis eyes are twinkling as he runs a solitary finger down my face and neck. \"You said stop, so we stopped. I didn't hear you beg for anything after that.\" He runs his thumb over my lips and I kiss it. This man has a begging fetish. I wonder if there's a clinical diagnosis for that. \n\nI press my body against his. \"Marcus, I want you to be the first man to take my ass. Please Marcus. Please fuck my ass. I'm yours to use. Anything you want is yours. Please Marcus. Please fuck my ass. Please.\" The kiss is first, followed by a growl that travels from his chest to my pussy. He pulls me off the bed and lifts the dress up and over my head, tossing it on the floor. The dress stands out obscenely; the only dark object in the white and beige room. \n\nMarcus just looks down at me, drinking in the sight of my body, offering him my submission. He takes my hand and leads me to the bathroom. I've had an enema before, so this is nothing surprising for me. He has me use the toilet as he prepares the bags, buckets and tubes. I'm bent over the bathroom counter, the tube is efficiently inserted. As the cramping starts, I wonder what it was like for his first time. How does a guy go about learning how to give enemas and whatever else is involved? Was he always this confident?? This self-assured? Was he always dominant?\n\nI'm cleaned out twice, then a quick shower, without getting my hair wet. The plug is replaced. I'm actually less nervous now, than I have been all morning. Marcus is acting more like he normally does, and that puts me at ease. We move back to the bed. Marcus picks up the dress and tosses it by his clothes; apparently he didn't like dark spot on the floor either. We go over the red light / green light safety words in detail again. He makes me promise to use them if anything is wrong.\n\n\"Crawl up on the bed, little minx.\" I hop up and crawl to the center of the bed and wait, sitting on my knees. Marcus walks around me taking pictures. \"Such a good girl. Come here.\" I kneel up and wobble to the edge of the bed near him. Several minutes of kissing and petting go by. I haven't been allowed to cum yet today, added to the nervous excitement of getting anal sex for the first time, so it doesn't take much to get me going. Marcus breaks the kiss. \"It's time. Are you ready?\"\n\n\"Yes Marcus. I want you to be the first man to use my ass.\"\n\nAnother quick peck on my nose. He grabs the pillows from the head of the bed and tosses them in the middle. \"Face the windows, on your stomach, with the pillows underneath your hips.\" He helps get me into position. I have a glorious view of Vegas with the huge casinos in the distant background. I'm directly in front of the mirrored column between the windows. The image of a girl I don't completely recognize anymore looks back at me. \"Give me your leg.\" I look behind me. He's by the corner, so I spread my right leg out toward him. From under the bed he pulls out a strap, and wraps a cuff around my ankle. He walks to my left side and does the same thing.\n\nMy wrists are secured the same way, until I'm spread eagle on the white bed. Marcus goes back to each limb and with a great tug, the restraints are pulled tight. Any wiggle room I might have had is now gone. I watch him through the mirror as he takes more pictures. He crawls up between my legs and kisses each ass cheek. He pulls lube out of his pocket and proceeds to prepare me. He squirts some in, and works the plug in and out a few times. More lube, this time dropped from higher up. The third time he's kneeling up. His eyes are twinkling as he watches me in the mirror. \"Hey, I need that stuff. Please be careful.\"",
        "\"Don't trust me?\" He raises his hand even higher.\n\n\"What if you miss? I could accidentally wiggle or something.\" I wiggle my ass until he starts laughing. He slaps me and I stop wiggling.\n\n\"Minx. Stay still.\" The third and last dollop of lube is added to my anus. He puts the plug back in for safekeeping. He runs his hands up and down my legs, kissing and biting my ass. \n\nHe steps off the bed and I lose him in the mirror reflection. When he comes back into view of the narrow strip of mirror between the windows, my breath catches in my throat. I take in every inch of his large muscular torso, the many scars, the dark features, the way his eyes bore into my body, and the whip in his hands. He pulls the many strands through his fingers. Jared's restrictions are gone. I watch wide-eyed as the arm holding the whip is pulled back. I see the excitement and focus in his eyes. Almost in slow motion the arm comes down. The whoosh is heard before anything else. Then the sharp crack against the back of my thigh. My whole body tightens against the pain. It takes several moments before I can take another breath. By the time I do, the second stroke is coming down. The pain translates as light behind my eyes, my back arches, and my nipples harden instantly. \"Look at me.\" I obey the command voice immediately. I watch, helplessly, in the mirror as four more strokes are brought down on my thighs, my ass, and my back.\n\nHe crawls between my stretched legs, tosses the whip on the side of the bed, and pulls the plug out of my ass. I hear the snap and zipper as he's opening his pants, then the heat of his cockhead against my anus. \"Breathe.\" I obey. As I do, he slowly presses inside me. His hands press down on my waist to keep me still. The only sound is Marcus breathing and a small whimper from me. \n\n\"Good girl. The worst is over. Just breathe for me, baby girl. Just breathe.\" I take another gasping breath, and he sinks deeper inside me. My hands are twisted tightly around the bedding.\n\n\"Holy shit. Is it in yet?\" He smacks my reddening ass. \"No swearing. And no, I'm not in yet. How are you doing?\"\n\n\"I feel like there's a log being shoved up my ass.\" Another small grunt as he leans forward to kiss my shoulder blade.\n\nHe gives a small dark laugh. \"I'll take that as a compliment. Just don't squeeze, OK? You could get hurt that way. Red light or green light?\n\nI try to shift to find a more comfortable position, but the straps hold me tight. In for a penny, in for a pound. \"Green light.\" Almost instantly he sinks in a bit more. Uuuunnnggggg. \n\nIt's not too painful, but there's this sensation of pressure that I've never felt before. Every fiber of my being wants to push. I've never had a baby, but I would imagine it would feel something like this. A large hand is running up and down my spine. Marcus is whispering encouragements in my ear. His eyes locked on mine through the mirror. I can only squeeze for so long, and every time I relax, more of his hard cock sinks into me until I feel the warmth of his hips against my ass. \"Good girl. Such a good girl. Keep breathing for me. Good girl. How are you doing?\"\n\nI'm trying to stay calm and breathe easy. \"UUnnngggg.\" OK, that's wasn't what I was intending to say, but he shifted his weight right as I was going to speak. \"My anus burns, I think from stretching. I don't think it tore or anything. There's this pressure in my gut. It feels like my intestines are getting moved around. I just want to push it out.\"\n\n\"Good girl. Very good. The hardest part is over. I just need you to try and relax for this next part.\"\n\n\"Next part. There's a next part?\" \n\n\"Yeah baby. Just keep breathing for me. You're doing so good. I'm very proud of you.\" With that, he slowly starts pulling out. I try to curl into a ball, but the restraints keep me firmly in place. The pressure instantly turns to suction. It feels like my guts are going to get pulled out. My ass lifts up off the bed, trying to keep him inside.\n\n\"Oh god. Oh god. Oh god.\" Marcus pulls out until just the tip remains inside me. \n\nMore dark laughter. \"I'm not a god, but I do enjoy the sound of a woman worshipping me.\" He pulls out and drips more cool gel into my asshole. Then we repeat the whole thing all over again. Slowly he presses into me, and just as slowly he pulls out. The whole time, he's talking to me, consoling me, praising me, and instructing me. I wouldn't say it gets easier, but it does get more tolerable. \n\nI'm doing it. I'm actually doing it!\n\n\"Are you ready to cum, my little minx?\" His cock is still smoothly and evenly sliding in and out of my ass.\n\n\"Please. Please Marcus. Please let me cum.\" I would give anything right now for an orgasm. Anything. \n\nHis pace picks up. I have less time to adjust to the two very different sensations coming from my ass. I feel a hand reach under me and start working my clit. My body jumps at first contact. \"Just relax. Breathe. Let me use you. You are safe. You are cherished. I control your body. I control your orgasm. Just relax and breathe.\"\n\n\"Why do you keep telling me to breathe?\" \n\n\"Because you keep stopping.\" No I don't. Do I? That was the last coherent thought I remember having. Everything is on a collision course. The helplessness of being in restraints, under a man who could, and has, easily overpowered me. The beautiful vista through the windows and the erotic image of a girl bound to the bed. The pressure in my ass and the burning from the whip marks on my pale flesh. The fingers on my clit, driving me closer and closer to the edge of the earth. \n\n\"Breathe. You have to breathe.\"\n\nI obey. There isn't a muscle in my body that wouldn't obey his every word right now. I gasp in a deep breath and explode. \n\n*********\n\nMarcus is looking down at me, slapping my face lightly. \"Look at me. Good girl. You OK? Talk to me.\" I take a mental check of my body, it feels happy.\n\nI try to move, but I'm not very successful. \"What'd you do to me? What happened?\"\n\n\"You kept holding your breath. I think you passed out. Are you OK?\" He's holding my head by my hair, keeping my airway open. His hand caressing me, calming me.\n\nOne hand is behind my back, with the other I give him a thumbs up. Then I start giggling. Uncontrollable, unexplainable, unstoppable giggling. He looks down at me, perplexed. He doesn't try to stop me or ask me any questions. He just watches, and waits, and runs a calming hand down my side. \n\nThe giggles die down until just a huge grin is on my face. \"Girl! Are you OK? Answer me.\" He's serious again.\n\n\"Yes. Yes. YES!\" I start pounding my arms and legs up and down on the bed. Some move and some don't. \"Can we do it again? Please. Wait, why don't my arms and legs move?\"\n\n\"You brat. You're only half untied. After you passed out, I needed to roll you over. You scared the crap out of me.\" I hear the word 'crap' after what we just did, and I start giggling again. \n\n\"You're a naughty girl.\"\n\n\"Yes.\"\n\nHe cups one of my breasts, nuzzling his cheek against it. \"I should punish you, but you're so fucking cute.\"\n\n\"Yes.\"\n\n\"You're a brat.\" He rolls a nipple between two fingers.\n\n\"Yes.\"\n\n\"Are you just going to keep saying 'yes' over and over?\"\n\n\"Yes. Yes. Yes. Yes. Yes.\" More giggling.\n\n\"My little minx. You're incorrigible.\" He's moving to release the straps on my right wrist and ankle.\n\nI cup his face with my free hand. \"I'm yours Marcus. Anything you want, the answer will be 'yes'. Yes. Yes. Yes. Yes. Yes.\"\n\n\"For less than 48 hours.\" He has all four of my limbs released. \"We have less than two days.\"\n\nI wrap my arms around his neck. \"I don't want to go.\"\n\n\"I feel the same, but that is non-negotiable. 11:27AM Saturday morning your flight leaves, and you have to be on it. You have to go home.\"\n\n\"Yes Marcus.\" He holds me for a while, but we both know we have to leave the bed eventually. We can't stay here.\n\nOnce I start moving, I find my whole body is sore. My wrists, shoulders, back, legs, stomach, and ass are all complaining in one form or another. Marcus helps me to the bathroom and showers me. He dries me and helps me slip the dress on. \"Did you cum?\"\n\n\"No baby, I didn't. This was about you. I had to make sure you were safe and satisfied.\"\n\nHe escorts me out the third floor brothel room, but instead of making me walk the staircase, we take a hidden elevator down. Elliot follows us into Marcus's office. I'm laid gently on a soft leather sofa, and the two men go to Marcus's desk to talk quietly.\n\n\"How'd she do?\"\n\n\"Perfectly. Absolutely perfect. Anyone seen that idiot yet, or is he still M.I.A.?\"\n\n\"We have the word out from New York to L.A.; we're pulling in or questioning everyone he might have dealings with. No one's seen him since yesterday.\"\n\n\"When do they get home?\"\n\nElliot looks at his watch. \"About half and hour. Sims will call when they're in the house.\" Sims is the resident chameleon. He can fit in at a hoity-toity art show or be sent to question the homeless, and anything in between. That man can talk his way in or out of anything.\n\n\"OK, we'll wait for the call, then I'll go deal with this. You take her to the movies. Keep her aroused and let her get used to you. No non-consensual stuff. And go lightly on the objectification. She didn't like it when it got cold, but I still want to see how she reacts to you treating her like a toy. And try to keep her awake, we didn't get a lot of sleep last night.\"\n\n\"Yes, boss. I'll come get you when we get the call.\" Elliot leaves. There's a woman working the podium now as he has other things to prepare. All seems calm and quiet as everyone involved waits for the phone call.\n\n*********\n\nI'm curled up on a sofa when someone gently shakes me awake. I groan a little then turn to see what Marcus wants now. \"What?\" It wasn't who I was expecting.\n\nIt's Elliot, I look around for Marcus. \"He's not here right now. He had to go take care of something. You have been left in the fine hands of one Elliot Sitton.\" He bows extravagantly. He helps me sit up and I groan again. Everything is sore. \"You should use the bathroom before we go.\" \n\nI'm escorted to the bathroom and left alone for a few minutes. I try to fix the mess of red hair on top my head. I can just tell people I'm going for the 'wild' look today. With this dress, they would believe me. It's still broken, but I try to at least straighten it so my important bits are covered. I wash my face and hands. I also find some mouthwash and use that. Elliot just opens the door and walks into the bathroom. \"Thanks for knocking.\"\n\nHis eyes scowl. \"Bend over.\" He has that same voice, the one that fully expects everyone to obey him. When I just stare at him, he puts his hand between my shoulders and presses me down over the counter. I get three hard slaps on my ass.\n\nHe pulls my hair so I'm looking at him through the mirror. \"You will not disrespect me. You were given to me to watch over this afternoon. You will obey me. You will respect me. Understand?\"\n\n\"Yes sir.\" He releases me and helps me stand. We look at each other in the mirror. His skin is so dark, and mine looks so pale in comparison. He leans in and sniffs my hair. \"Come on. Let's go.\"\n\n\"Sir, where are we going?\" Marcus said we wouldn't go anywhere to public with me wearing this dress.\n\n\"Someplace Marcus picked out. So no balking and don't give me any trouble about it.\"\n\nWe leave the brothel, and head out in Elliot's beat-up old Jeep. I have a hundred questions, but I keep them to myself. I'm not sure what he considers 'balking', so I figure it's better to be safe than sorry.\n\n*********\n\nThe three white vans are turning down the cul-de-sac in a gated community. Marcus is being driven by Sims in the first van, and three men are in each of the two trailing vehicles. None of the men have cell phones or electronic devices on them. None of the men have ID on them. Tattoos are covered with long sleeve workman's shirts. Identical caps, latex gloves, and sunglasses finish off the uniforms. All men are armed with their weapon or weapons of choice.\n\nThe men silently exit the vehicles and two take up positions outside, the rest walk to the front door. Sims rings the bell, and they wait. A middle aged blonde woman answers the door. She is about to ask what they want when she recognizes Marcus. Instantly her face crumples. \"Please. He's not here. I don't know where he is. Please don't do this.\" The men enter the house.\n\n\"JeAnna, this is our last option. David owes us money, and he's not paying. In fact, we're having trouble finding him, which only makes the situation worse. This is going to happen, and I'm sorry it has to involve you and the children. This wasn't our first choice, it was our last.\"\n\nJeAnna is frantic to come up with an alternative. \"I have money. You can have it. All of it. We can...\"\n\n\"JeAnna, you don't have the kind of money we are owed.\" She's about to argue; To beg. \"Ten point five four million.\" Her face drops, then the color blanches out of it. She's visibly shaking.\n\nShe whispers, not quite believing the number. \"Ten Million? He lost ten million dollars?\"\n\n\"JeAnna, do you have access to the account in the Cayman Islands?\" From her confused reaction, she doesn't. \"What about the gold in Dubai? Do you have access to that?\" Tears are forming in her eyes, but she shakes her head that she doesn't.\n\n\"I'm sorry, JeAnna, but we have to take you and the children. It's the only way he'll pay.\"\n\n\"What if he doesn't pay?\" She's worried for her kids. \n\nShe hasn't screamed or struggled. She knew what was going on, but not how badly he was in for. She's not completely innocent, and she knows how this works. \"David is already a dead man, that's can't be changed. We'll find him wherever he is. It's just a matter of time.\"\n\n\"What about us?\"\n\n\"You'll be kept safe and comfortable, unless you resist, then not so much. If we can't find David, or if he is unable to repay us, you'll be kept no more than three or four days. At which time, we'll burn this house down and release you after that.\" \n\n\"Please. This is my home too. My children's home.\"\n\n\"JeAnna. JeAnna. This house is insured for five million dollars. That along with what you have access to in the bank will buy the lives of you and your children.\"\n\nJeAnna is shaking badly. Marcus puts a hand on her shoulder to calm her. \"It's time to go. Your kids will follow you. If you're scared, they'll be scared. Be strong and they'll be less afraid. Call your children down now.\"\n\nShe looks around the room at all the calm, business-like men in her house. She doesn't have a lot of options right now. Damn her husband. \"Kids! Kids, come down here. We have to go.\"\n\nThere's grumbling as two teenagers, come down the stairs, a boy around 15, and a girl around 13. \"What's going on?\" \n\nThe mom convincingly explains they are going to see their dad. All electronic devices are left on the table by the front door after a bit of shouting. (You try getting an IPod away from a teenager). Everyone climbs into the vans. Sims takes Marcus back to the brothel, and the other two vans make their way to the old weapons house to wait.\n\n*********\n\nWe drive toward the strip, but turn into a long alley before they get there. About half way through the narrow alley we turn into a parking lot on the left side. Huddled in the middle of several multi-storied buildings is a small one-story building next to a parking lot that holds about 40 cars max. There are maybe a dozen cars here now. I look to Elliot and he's taking off his safety belt and exiting the Jeep. He walks around the front and opens my door. I really don't want to get out dressed like this. Elliot sees me hesitate, and I think I'm in trouble. Would he spank me in the parking lot? \"You're safe here. It's a small theater. Come on.\"\n\nHe helps me out and as we walk to the smaller building. I see a letter board near the door that just says 'SKINFLICKS' and some hours of operation. Below the sign is a printed piece of paper that says 'CASH ONLY' and below that someone has written in marker 'Don't even think about it.' We walk through the blackened glass doors into a seedy looking theater. It has dingy red carpet and only four theaters. I turn to look to see what's playing but Elliot orders my eyes to the floor. I just stand there holding his hand like a life-line as he decides what we're going to watch. We walk to a teller behind plexiglass, and Elliot orders the film in the theater #4. The middle aged man behind the counter never takes his eyes off me as he makes change. \n\nElliot knows where he's going and leads me down the stained carpet to theater #4. The theater is dark and small, maybe 40-50 seats, but they are spread out more than traditional theaters. Some are set alone; some are set in groups of two, three or four. Each group has at least two feet between it and the other seats. Only a few heads turn to us as the light from the hallway silhouettes us before the door closes. There's a woman on the large screen, strapped to a medical table, her legs open obscenely. A man is between her legs, feasting from her pussy.\n\nElliot guides me to a seat near the back. He asks for my wrists and I give them to him. He proceeds to cuff my wrists behind my back, then he helps me sit down. Instead of sitting next to me, Elliot slips between the seats and sits behind me. I turn to look at him, but he just twirls his fingers and tells me to look forward. \n\nThere are four 'movies' total. The first is the medical room one. It's kind of cheesy. About a doctor who impregnates his patients. It lasts about 15 minutes from the time we came in. The second is maybe 30-45 minutes long. It's about a woman who wanders into a locker room after a basketball game. When the second player starts using the woman, Elliot reaches over and grabs my hair. His other hand cups my breast and fondles me. \"Look at her. All those men are going to use her. She'll be on her knees for a long time. Servicing men. Pleasuring men. Submitting to men. And she'll love every minute of it.\" He reaches beneath my dress and strokes my clit, feather light touches meant to torment me. I squirm and twist as the movie goes on. More and more men use the woman. Some push her up against the lockers; others bend her over benches or just use her on the floor. The porno finally ends and Elliot's fingers mercilessly leave me wet and needy. \n\nA few more people have entered the theater. The third film starts with a man walking a woman into a small dingy room. He uses ropes to tie her knees together then has her kneel on a padded bench. He secures her knees to one end of the bench, then ties her wrists together and secures them to the other end of the bench. Without a word he lubes up her pussy and her ass, then wipes off the excess with a dirty looking towel. The words he says next chill me, even though it's just a movie. \"I've decided to sell you. A man will be here in a few minutes. He is thinking of purchasing you, but he wants to sample you first. He's going to use your mouth, your cunt and your ass. Be good and do your best to please him.\" \n\nI'm squirming in my seat. Partly because of Elliot and his finger torture during the last porno, partly because of what's happening on the screen. I hear Elliot whispering in my ear. \"Look how well trained she is. Passively waiting to serve her master. Or waiting to service her future master. So obedient. Such a good girl she is.\"\n\nI look back at him. \"Do people really get sold?\"\n\nHe kind of nods his head to the side. \"For you, no, but yes, people do get sold. As a submissive, you can choose to give yourself to someone, but that doesn't mean they can sell you. If something happens, and the submissive has to go, they have a say in what happens to them. They have a choice in their future.\"\n\n\"But people get sold?\" He said no and yes.\n\nI hear him sigh softly. \"There are true slaves, in this country and every other county in the world. People who are held against their will and used however the slavers want to use them. Their live are usually hard and brutal, and thankfully short. The world outside of ours often combines the two, but in reality they are nothing like us.",
        "I look around; no one is nearby to hear us speaking. The buyer has entered the room in the film, and is casually running his hand over the bound woman. \"Why would a submissive have to go?\"\n\n\"Usually, it's because a master dies or is no longer able to keep a sub. Then a friend, or a second, is responsible to keep the submissive safe, either by keeping her himself, or finding a new dominant, or even setting her up to live on her own. Oh, and subs can be male or female, I'm just using the female noun because you'd relate to it better. The sub always gets a say in what happens to him or her. And before you ask, a 'second' is another dom who is trusted to take care of the sub if anything happens. I am Marcus's second. Harper is Dustin's second.\"\n\nI turn back to the screen. The buyer is thrusting his cock in the woman's mouth. She is struggling, but doing her best to accommodate his size and length. Soon as he's hard enough, he moves around behind her and without warning slam himself in her pussy. Her face twists in shock or pain, but she doesn't scream. The man pushes her head down to the bench and he fucks her hard. I turn away to look at the floor, but Elliot sees and with a hand in my hair turn me back to the movie. \"Keep watching, girl. A toy is meant to be used. Meant to be enjoyed.\"\n\n\"Are these actors? Is this staged?\"\n\n\"Some are and some aren't. These are all amateurs. They make the movies and this theater shows them for one or two weeks. Some have stories, some are just fucking, and some are art house movies. All are sexual. All are consensual. This couple has a different film every two or three weeks.\"\n\nThe man is grunting as he fucks the woman. Her face is cringed as she bears down to endure it. I can feel my pussy start to clench and relax in time with the fucking going on in the film. The man pushes two thumbs in her ass and pulls them apart. Her ass is shown obscenely close up. My body remembers when I did that to myself at Marcus's command. When I begged him to fuck my ass. \n\nThe man pulls out and spanks her ass, I watch her face as she endures the pain. After enough slaps to redden her globes, he presses his cockhead against her anus and starts to push. The woman stops breathing as he forces himself inside her. See, it's not just me. Soon the man is in and he begins fucking her ass in earnest. She whimpering now, but taking everything he's giving her. \n\nSuddenly Elliot wraps his hand around my neck. \"Did you enjoy having your ass fucked today? Marcus seemed very pleased with you. I can imagine you on your knees, taking every inch he can get in you. Your body naturally converting the pain to pleasure. Did you cum? I bet you did. I bet you screamed loud enough to shake the windows.\" My body is trembling as he describes his fantasy. Enough was different, that I know Marcus didn't discuss it with him in detail, but the man can make me quiver with just his words. He lets my neck go and settles back to watch the movie.\n\nThe man pounds into her ass until he climaxes. He stands back and watches as the cum starts to dribble out of her ass. Then he just leaves. He leaves and she slumps down on the bench, waiting for someone to come and release her. Waiting to find out her fate.\n\nThe screen goes black and a fourth movie starts. This one is rope bondage. Over the next 15-20 minutes, a small tattooed Asian woman is portrayed is several different poses, some even suspended above the ground. She sucks whenever a cock is offered her. She submits to every new pose, and says please and thank you before and after she's fucked. She seems excited and happy to be completely in the control of another person. Elliot touches, fondles, and comments at random points in the movie. \n\nThe fourth porno ends and another begins. I recognize the room and the woman from the medical room film we saw first. It must be on a loop. Elliot is at my side. He helps me stand and we start exiting the theater. \"Sir? What about the handcuffs?\"\n\nHe looks back at me, then checks to see if they're secure. \"They're still good. Are the cutting into your wrists?\" \n\nWhat? \"No, sir, they're not. I was asking if you were going to remove them before we leave the theater.\n\n\"Why? I'll just have to put them back on again.\" He watches me. I know he's waiting for me to argue with him.\n\n\"Yes, sir.\" He leads me out the darkened theater into the dingy, red carpeted, hallway and back to the attendant. There's a man in front of us, he does a double-take when he sees me, but thankfully doesn't say anything. The man finishes paying and walks away to his movies. As Elliot steps up to pay, the darkened doors swing open and three men walk in wearing Boston University t-shirts. I look pointedly at the wall, trying to be anywhere but here. What happens next causes everything to stop. \"Holy fuck! Look at that slut.\"\n\nI see Elliot's back stiffen sharply. He stands slowly as the men start laughing. He turns to face the three me. The man in front blanches instantly and puts his hands up, the other two are still laughing\n\nThe man in front starts babbling. \"Oh god. Oh god. I'm so sorry. He didn't mean nothin' by it. He doesn't know... He's just stupid. Please. He's from the east coast, he doesn't know.\" One of the other two men has figured out something is very wrong and stopped grinning, but the third man is completely oblivious. He punches the first guy on the shoulder. \"I'm not stupid, you piece of shit. You're stupid.\"\n\nElliot raises his arm and points at the door and snaps his fingers, just once. Once is all it takes. The guy in front thanks him profusely and pushes the other two out the door as quickly as humanly possible. The third man is still arguing. Elliot grabs my chin and looks me in the eye. \"You are not a slut.\" He emphasizes every word.\n\n\"I'm dressed like a slut. Everyone thinks I'm a slut. That's the same thing.\"\n\nThe man hands back the change and Elliot drags me into a corner. \"You are not a slut. Say it.\"\n\nI feel about two inches tall. This horrible dress is bad enough in private. What was Marcus thinking sending me out in public like this? What did he think was going to happen? Elliot shakes my head. \"Say it.\"\n\nWith as much disdain as I can muster I repeat the meaningless words. \"I am not a slut. Sir.\" \n\nHe grabs my hair and pulls my ear to his mouth. His voice is a deep dark growl. \"Do not disrespect me like that ever again. You are not a slut. Those men, and all the others, do not matter. They are nothing. You are whatever Marcus or I tell you you are. You are not a slut.\"\n\nHe shakes my head for emphasis. \"Yes sir. I understand.\" I don't, but I'm not going to argue about it.\n\nElliot takes me into a different theater. This time he sits on a seat and guides me onto his lap. He uses his legs to spread mine apart. I feel completely vulnerable, which is the way he wants it. There's a white room on the screen. White walls, white carpet, white sofa, white bed. There's the thin, pale stereo-typical blonde relaxing on the bed. She's wearing a white bikini top and a white sarong. I'm not a porno aficionado, but even I know there's going to be a black man in this one. \n\nYup, I was right. A tall, strong black man walks into the scene. The woman flashes him more of her leg. They kiss, and the woman's clothes end up on the floor. Elliot's fingers are dancing over my clit. I try to keep from wiggling on his lap, but he makes it very difficult. The woman sucks and fucks the man; moaning, writhing, and begging. I can feel the outline of Elliot's cock getting harder and harder as he toys with me. \"I love playing with this body. It feels so good writhing on my cock.\"\n\nThe next movie is a woman sitting on a basement floor. The dinginess of this image a jarring difference from the previous one. Her arms secured to the wall with thick leather bands. Her knees bent and pulled wide apart. A bald man come into view, he's shirtless and wearing black pants. He whips her with a crop and places clothespins around her breasts, along the inside of her thighs, and on her pussy lips. He tugs and toys with her until she's pleading with him to stop. Elliot had abandoned my pussy and is focused on my tits. He pinching and pulling my nipples through the thin material. The man onscreen has stepped out of the frame, when he returns he has a garden hose. He turns the nozzle to a high blast and douses the poor woman. At that same instant, Elliot slaps my left tit hard. My body jolts, but somehow I remain quiet. Some heads in the theater turn toward us anyway, following the sound of the slap. \"Such a reactive little toy. A man could play with you for hours and hours.\" \n\nThe man on screen uses short bursts of water to remove every clothespin from her body. He pays extra attention to her clit. She has to hold her breath when he gets close to her face. The straps on her legs keeping her knees spread wide and helpless against the onslaught of the water blasting on her. \n\nShe's moved to a plain metal table and strapped down. The man fucks her as he whips her tits. Elliot grabs my hair and pulls my head back. \"Rub my cock. Make me hard.\" As the man on screen fucks the woman, I rub Elliot's cock through his pants with my cuffed hands. The woman screams her orgasm, and a few thrusts later the man sprays her tits and stomach with cum.\n\nElliot releases my hair as the third movie starts. Three men surround a woman on her knees. She sucks each of the cocks in turn. Elliot wraps his arms around my midsection, pulling me in close. We just watch in silence as the woman services the three men. At first, she has some control, but as the film goes on, the men begin controlling her more and more. She is a sloppy mess when they're done. Spit and cum covering her face, hair, and chest. She smiles at the camera, licking her lips, as the picture fades out.\n\nThe blonde in the white room is repeated. Only three movies are in this theater. I have no idea how long I've been here, or what time it is. Elliot helps me off his lap, releases my hand cuffs, and fixes my dress. We head out of the theater, then out of the building. The sky is still bright, although no sun reaches the small alley or parking lot. He helps me into the old Jeep, revs up the rumbling engine, and we're on our way.\n\n\"Sir. Does Marcus own that place?\"\n\n\"Nope, I do.\"\n\n\"You own it?\" \n\n\"Yup. You didn't think I stood around the brothel looking pretty every day, did you?\"\n\nHe is kinda cute, and the comment makes me smile. \"Actually I did. 24 hours a day, 7 days a week. Standing around, directing traffic, looking sexy.\"\n\nElliot laughs out loud. \"Sassy one, aren't you. You're forgiven, but just because you added the 'sexy' comment at the end.\" We both end up laughing as he drives us back to the brothel. The tension from the previous few hours broken.\n\nI'm relaxing into the surprisingly comfortable passenger seat when Elliot pulls up to the large gate. We wait for it to slide open, and then he pulls into an empty spot. Ever the gentleman, he helps me out and escorts me into the brothel. There's and older gentleman working the podium now, he nods at us as we enter.\n\nMarcus is sitting at his desk, working at the computer. \"Welcome back. How'd she do?\" Elliot closes the door behind us. \"Some college kids called her a slut, that didn't go over very well. But for the most part, she did fine. Obeyed without hesitating. Asked questions respectfully. I enjoyed her. I think she did too.\"\n\nMarcus eyes me for a bit, as Elliot goes to sit down on one of the sofas. \"Come here girl.\" I walk over and stand in front of him. \"Do you think you're a slut?\"\n\n\"Kinda. I let strangers fuck me and dress me up like a hooker.\" I watch him, hoping he's not mad. He did say he wanted honesty.\n\n\"You are not a slut. You are submissive. Yes, the dress is a tad bit on the skimpy side...\" I cock my head to the side and give him an 'Oh, really.' kind of look. \"OK, it's really skimpy, but you're damn sexy in it. I am very proud to have you this week, and I wanted to show you off a little. You can't blame me for that.\" He's running his hand up and down my sides. \"You are not a slut. No one who knows us will ever think you are a slut. As for the outside world; who cares what they think. Let them have their boring vanilla sex, and desperately clutch onto their fragile reputations. We've got better things to do.\"\n\nHe stands and pulls me in for a hug, telling me he missed me. He asked if I enjoyed the movies, I nod my head into his shoulder. \"Did they make you horny?\" I nod my head again. \"Did Elliot make you horny?\" I look up at him. He's up to something. I nod and watch his face light up. Yeah, he's definitely up to something. I look behind me and Elliot is watching us intently.\n\n\"Maybe you should go over there and thank him properly.\" He holds me at arm's length, watching me. \n\n\"Thank him? Properly?\" I see the twinkle in his eyes. This can't be good.\n\n\"Thank him properly. On your knees.\" He lets his arms drop as he continues watching my reaction.\n\nWhat? I turn to look at Elliot. He's still sitting on the sofa, watching us. He knows what we're talking about. He's just waiting for my answer.\n\n\"He kept you safe on Monday, and took time out of his busy day to watch over you. He watched you again today, when I had something I had to do. He kept you safe both times. I think that deserves a little gratitude.\"\n\n\"You want me to have sex with him?\"\n\n\"No baby, I want you to let him use you. First, to thank him for watching you and second as a gift, from me, for his birthday.\" Something just clicked in my memory. He's asked me about this before. He said he wanted to watch me with Elliot.\n\n\"Are you going to watch?\" I look back at Elliot. Am I really going to do this?\n\n\"Yes, little one. I'm going to watch. I would love to watch you cum.\"\n\n\"What do I have to do?\" I'm not sure about this. I need Marcus's strength.\n\nHe gives me an easy confident smile. He reaches for the hem of my dress and slowly pulls it up over my head. He turns me around so I'm facing Elliot. He's whispering in my ear. I can feel the solidness of his body at my back. \"I want you to go over to him as ask if he wants to use you for his pleasure. Tell him it's in honor of his birthday, and you are a gift from me. Can you do that, baby girl? Can you do that for me?\"\n\nI nod my head yes, but I'm shaking like a leaf. I can't move. Marcus gives me a gentle shove and my foot moves forward to keep me from falling, then the other foot. One after another, my feet slowly bring me in front of Elliot. He watches me, his eyes roaming over every inch of my body as I stand before him. I hear the click of the camera. I close my eyes and take a deep breath. I can do this.\n\n\"Sir. I would like to express my gratitude to you for taking time out of your day, both today and Monday, to take me out and watch over me. Marcus would also like to show his appreciation for your friendship and loyalty. As part of your birthday gift, he would like to offer my use, for your pleasure.\" More clicks.\n\nElliot just looks up at me from the sofa, a small smile spreading across his face. He is handsome, but I'm still nervous. He stands and runs a hand down my cheek. \"It'll be OK. Don't be nervous.\" He begins to open his pants, slipping his shoes off, before sliding them down his legs. He's naked from the waist down. He steps sideways out of the discarded clothes, and pulls me in front of him.\n\nHis hands are on my upper arms, holding me close, his lips start at my forehead, working down my check and neck. \"So soft. So sexy.\" He tilts my face up to his and the first kiss is soft and lingering, calming my nerves and lighting my core on fire. \"Take my shirt off, little girl.\"\n\nMy arms have been dangling at my side, not quite sure what to do or where to go. But now that they have a purpose, they tentatively work their way up along his sides, brushing against the soft material, until they reach his collar. Elliot's tongue slips into my mouth as I open the first button. A hand slips down to grasp my ass as I continue to work my way down the front of his shirt. When all the buttons are open, I run my hand up his hard abdomen and chest, gently easing the shirt off his broad shoulders. The contrast between my pale hand and his obsidian chest is mesmerizing. I watch my fingers glide across the dark expanse of his torso, back and forth. The dark cock hanging between his legs is beginning to firm up at my touch. \n\nHe puts his hand on my chin, and brings my eyes back to his. \"You are so beautiful. Is this what you want? It has to be your choice.\"\n\nIt's back to me again. My words have power. My voice is my control. I look into his soft brown eyes. He's waiting, and he'll wait until I answer him. If I choose, this ends now and I go back to Marcus. It's my choice. My voice is my power. \"I would be honored to be your birthday present, Elliot. You may use me for your pleasure.\" \n\nHis face lights up, I think he might even laugh, but he doesn't. He kisses me again. \"So perfect, little one.\" More kisses along my throat, his hands roaming over my flesh. \"Kneel.\"\n\nI drop down in front of him; knees spread wide, with my hands palms up on my thighs. \"Hands behind your back, and lace your fingers together.\"\n\n\"Yes sir.\" I move into the new position. He lifts my chin so I'm looking up at him. He runs his dark cock over my face, caressing me with it. His scent is different from Marcus; more dusky, not as tangy. Anticipation is coursing through me. More clicks.\n\n\"Show me how you pleasure a man.\" That voice. I love that voice. My lips part and I get my first taste of this new man. I suckle and nuzzle the tip. Slowly taking more of him into my mouth. I run my tongue along the length of his shaft, ending with soft kisses on his balls. I relish the feeling of his cock turning to steel in my mouth. \n\nI shift my stance to get better leverage. I take a deep breath and press my head forward onto his cock. When it reaches the back of my mouth, I swallow, and Elliot slides down my throat. Hold for as long as I can, but as usual, that is only a few seconds, before I pull off him. I gasp in a quick breath and go back to savoring Elliot's cock. Elliot releases a deep guttural moan and I smile. I did that to him. \n\nI keep pleasuring him, maybe swallowing him another half dozen times, before he pulls me to my feet. His mouth claims mine. His hands are searching out every inch of my flesh they can reach. He breaks the kiss, and just looks at me, breathing hard. He glances behind him to see where the sofa is, and sits down. His cock is standing up proudly from between his legs. \"Mount me.\"\n\n\"Yes sir.\" With my hands on his shoulders for balance, I place my right knee outside his on the sofa, then swing my left leg up to the other side. I scoot forward, his cock bumping up against my pussy. I take him and position him at the entrance to my seeping tunnel. Slowly I sink down onto the hard member, until its snuggly embedded inside me. \n\nElliot doesn't move. I don't move. His eyes roam over my chest and face, before his hands join in on the fun. He fondles and massages and caresses my body for the next few minutes. I just sit there, enduring the prolonged foreplay. \"Please.\"\n\nHe pulls me forward and kisses me, tugging my lower lip through his teeth. \"Ride me, girl.\"\n\n\"Yes sir.\" My hips lift me up until the tip is almost pulled out, then slink back down along his length. I keep a constant pace, but shift my hips at different angles trying to figure out what he enjoys most. I try anything I think he'll enjoy. I settle down on his lap and work circles clock-wise and then counter clock-wise. His eyes kind of roll and he drops his head back onto the back of the sofa. He liked that. My muscles clamp down on his cock and lift myself up. He groans and his eyes pop open and find mine. \"Oh god.\"\n\nA dark lustful laughs leaves my lips as I sink back down. \"I'm not a god, but you can worship me if you want.\" I hear Marcus bark out a short laugh from somewhere behind me. He said something similar to me. ",
        "Elliot is trying to figure out what's happening. \"You shush back there. This is my birthday present. If I die from this, let my family know I died a happy man.\" I give him another big squeeze and his head lolls to the side. His hands are gripping my hips.\n\n\"You're not going to die, you old fart.\" The banter between the two men is emboldening me. The insecurity and fear of the unknown slowly slip away to nothingness. A sense of normalcy seems to settle over everything. The clicks of the camera fade into the background. Marcus wants me to fuck this man; his friend. Marcus wants to give this man something exceptional for his birthday. \n\nSweat starts to form along my hairline, down my back and under my breasts. My hips and legs are starting to feel the burn. I place my hands on either side of his face, drawing him back to me. \"Happy Birthday, sir. Marcus trusts you and respects you. He has given you his toy to play with. I am yours to use. I am yours to take. What is your birthday wish, sir? Tell me and let me fulfill your every need. Or take me and I'll give you everything I have. Use me, sir. Please.\"\n\nElliot shifts suddenly and I find myself beneath him. His long hard strokes take my breath away. I watch his eyes as he takes me, wrapping my legs around his waist. His breath is coming in hard gasps. He's driving himself to completion. The constant thumping against my clit is shooting bolts through me. I can't hold out any longer. It starts in my core, wrapped tightly around the cock driving into me, and waves of pleasure roll through me, cresting over and over again. \n\nElliot is lying on top of me, completely still, his muscles taught. I watch as he slowly starts to relax. His shoulders first, then his breathing, then his head drops down against my shoulder. We lay like this for a while before he extricates himself from the tangle we made on the sofa. He grabs me by my hair and pulls me so I'm lying on my stomach across his lap. I don't resist as he presses my face into the sofa cushion. \"Jesus fucking Christ, Marcus. And she has no experience?\"\n\nI can hear the pride in his voice. \"100% natural untrained painslut. Her instincts are high level.\"\n\nI don't know what that means, but it sounds like a perverted form of a compliment. I let the men discuss me. \"Her skin is flawless. The marks show perfectly on her.\" He's talking about the whip Marcus used on me before he took my ass. I feel Elliot's fingers circle the three scars on my back. Dustin's scars. Elliot doesn't say anything, but Marcus answers the unspoken question. \"Crops, whips, and a cane. She came from just the pain. Seven stokes of the cane; it was her first experience.\" I shiver as the hatred drips off his words. Dustin did that to me.\n\nElliot sits quietly. His hand is still in my hair, the other caresses my ass. I just lay there, exhausted and sated, on his lap. \"What are you going to do with her?\"\n\n\"She goes back home on Saturday. I gave my word. She can't stay here. You and I both know that, and I think she knows it too. She's a good girl; she doesn't belong in this world.\"\n\nMy voice is soft; barely a whisper, but both men hear me clearly. \"I want to stay. You said I have a voice in what happens to me.\"\n\nI hear him rise and walk over to us, kneeling down by my head; he brushes the damp hair out of my face. \"No babygirl. You can't stay here. You don't belong here.\" He looks to Elliot before continuing. \"I'm not a good person.\" I try to protest, but his fingers cover my mouth. \"My profession requires that I do certain things, things you can't be a part of. If you stay, the cops will be after you to get to me. Criminals will try to take you to get to me. Desperate people will try to use you. That's not a good life for you.\"\n\nHe kisses me and pets my hair. \"Imagine 24 hour surveillance, bodyguards everywhere you go. You wouldn't be able to go anywhere spontaneously; everything would have to be planned and vetted. Few friends. Would your family understand? What would you do to bide your time, locked in the condo, day after day. Month after month.\"\n\n\"You go out alone, without bodyguards.\"\n\n\"It would look bad if I was cowering behind bodyguards. I've had some close calls, but I've come out on top each time. But there's always the chance that one day I won't. What would you do then? You couldn't go home, it wouldn't be safe. You'd be alone, or be given to someone else. No babygirl. You can't stay. You are so strong. I know you'll land on your feet and thrive.\"\n\nThe words hurt, and I don't want to hear them, but deep down I know they're true. I don't even know how bad he is. I remember the pictures the cops showed me. The dead people. The missing people. Marcus helps me up off Elliot's lap, and Elliot goes to hop in the shower quick. I just lean into Marcus, letting him hold me, letting him make it all better. \n\nWe've been quiet for so long, I jump when the silence is broken. \"Are you tired?\" \n\n\"Exhausted.\"\n\nElliot walks out of the shower, stark naked, and walks over to us. He picks up his pants off the floor. He leans in and kisses the top of my head. \"Thank you, girl. Marcus should be proud of you.\" He shakes Marcus's hand and thanks him, then he starts to dress, right there in the middle of the office. \n\nMarcus gives me one last hug before letting me go. \"You were spectacular. And I am very proud of you. Let's get you home and in bed. I know how grumpy you get when you're sleep deprived.\" He slips the broken dress over my head and tugs it so it sits properly. He and Elliot have a short, private conversation by the desk. Elliot is sitting in the chair, pulling his socks and shoes on as they speak. He looks so much smaller than Marcus.\n\nThe drive back to the condo is quiet and uneventful. It's just after 5PM, according to the dashboard. First thing is a shower. I'm chained up in his shower and he carefully and thoroughly cleans and inspects me from head to foot. I just half stand/half hang there as his hands wash me everywhere. He washes himself, then releases me. He dries us both off. \n\nI'm led to his bed. Marcus pulls the blankets back and tucks me in, kissing me on the forehead. Marcus is still naked as he wanders around the room. I watch him as he plugs his phone into the charger and closes the blinds and the drapes. He leaves the room for a bit and returns. He does some stretches before climbing into bed besides me. \n\nHe pulls me into his arms, making me grunt at the sudden motion. He wraps his arms around me and we settle into sleep.\n\n*********\n\nI brush something off my nose. It lands on my ear, I brush that away too. \"Stop it. Go 'way.\" I hear a soft masculine laugh. The fog of sleep starts to drift away. Why can't he let me sleep? \"Wha?\" \n\n\"You are a grumpy little thing when you wake up, aren't you?\" I take a swipe at him, but my arm gets tangled in the bedding. \"Time to get up. Dinner's here.\" Involuntarily I sniff. Chinese?\n\n\"Food?\" I'm starving. But am I more starving than tired? \"Wha time it?\"\n\nIt becomes a mute point when he pulls the blankets off me. \"It's almost 8:30. I let you nap for almost 3 hours.\" He grunts like a caveman. \"Food.\" Grunt Grunt \"Then movie.\" Grunt He wiggles his eyebrows. \"Then mating.\" Grunt \"Me like mating.\" Grunt Grunt\n\nI'm giggling too hard to be mad at him. \"You are such a dork. I have to pee.\"\n\n\"Oh, and that was so much more romantic. Get your ass up, or I'll spank it.\"\n\n\"Promise?\" \n\nHis eyes go wide and he starts laughing. \"Minx. Get up now. That's an order, little girl.\" He walks out the bedroom and turns down the hall toward the kitchen.\n\nI grumble as I roll to the edge of the bed and stumble out of it. First stop it the bathroom, then the kitchen. My nudity is becoming second nature by this point. Marcus eyes me up and down. \"Forgetting something?\" I look around, confused. He rolls his eyes at me. \"There's something on the bed for you.\"\n\nI clap my hands. \"Yeah, back to bed, where I wanted to be in the first place.\"\n\n\"Hey, you have two minutes, before I come get you, and that will not be pretty.\" I'm too far down the hall to respond.\n\nThere is something on the bed. Two something's, in fact. Oh My God. Boy shorts! He's giving me underwear? No way! And a cami. The black soft material feels so good sitting snuggly against my ass. I spin, giddy. The equally black cami slips on easily. A long lost friend with little red bows where each of the shoulder straps attach to the front. \n\nI skip back to the kitchen. \"Looky! Looky looky looky\" I spin around showing him my new outfit. \n\nHe grimaces. \"Yuck. It's dreadful! Even worse than I imagined.\"\n\nI go to him. \"It's not.\" I kiss him on the cheek. \"Thank you, Marcus.\"\n\n\"Yeah, yeah. You deserved a reward, and I wanted you to feel comfortable. Don't get used to it. Those things are still repulsive.\" I just smile at him, and do another spin.\n\nThere are several Chinese food boxes laying scattered across the table. It smells so good. I'm starving. \"Kneel.\" The smile instantly leaves my face. I see the dog bed on the floor by his chair. I walk to it and sink down to my knees, my spirits sinking with me.\n\nMarcus bought an assortment of Chinese cuisine, and begins to eat. I wait, staring at the floor. I feel a tap-tap on my head, I look up and he's offering me some noodles dangling from chopsticks. I tilt my head back and open my mouth, and he drops the noodles in. I return to staring at the floor, chewing the tasteless food. Trying not to cry. \n\nThe meal goes by in a blur. Nothing has any taste, just the repetition of chewing and swallowing over and over again. I don't come out of my funk until Marcus announces dinner is done. He helps me to my feet, and for the longest time he just looks down at me, not saying anything. Suddenly he leans down and kisses the top of my head before storing the leftovers in the fridge and cleaning up.\n\nHe leans against the table and pulls me into his arms. \"What are you feeling?\"\n\n\"Broken. Sad. Degraded.\"\n\n\"I was very pleased that you dropped down when I commanded it. You didn't even give me a reproachful look. You should be pleased. Don't look so sad.\"\n\n\"I just hate it. It's just.... It's so... I hate it. I can't explain it.\" I want to pull away from him, but he won't let me go. He just holds me, telling me how good I was.\n\nHe pulls back and lifts my face so I'm looking at him. \"I am so very proud of you. You made me very happy tonight. You did what I asked, without hesitating, even though you didn't want to. But it's my job to keep you happy. You did your part; you obeyed, even though it took you the better part of a week to do it. Now I'll do my part; keep you safe and happy. I won't make you kneel and be fed anymore.\"\n\nI look up at him, confused. \"I thought you liked when I did that?\"\n\n\"I do. I enjoy the act of feeding someone. I enjoy the sense of power and the submission given to me. But more than that, I want to keep you happy. And it's obvious this doesn't make you happy.\" I'm not sure how I feel. I'm ecstatic I won't have to be fed like a dog anymore, but at the same time I think somehow I disappointed him. \"Do you have to wash up or use the bathroom? There's a video I want you to watch, and I don't want it interrupted.\"\n\nI don't really have to, but I think it'll be better if I do, just in case this takes a while. He gives me ten minutes, and then I'm to be back in the living room. Standing in the bathroom I look at myself in the mirror. I look the same, but there's something different. It's not the underwear, but I do look odd wearing them after going so long without them. I think it's my eyes. My eyes are different. They look deeper, more intense. I look older. Not age, but more mature. I look stronger.\n\nWhen I'm done, I find Marcus cleaning up in the kitchen. He looks me over; I can see he's worried or concerned. He holds out his hand and I place mine in his. He pulls me into another embrace. Something bad is going to happen, I just feel it. \"There's something we have to do, and you're not going to like it.\" Yup, I nailed that one on the head. \n\nHe leads us to the closet with the washer and dryer. There are two electrical panels on the back wall. He opens one, and reaches up and presses into a small opening at the top. The electric panel snaps out and he swings it open. Behind the panel is something that looks like a safe. He presses his hand onto a black square and after a few seconds it beeps and turns green. He enters a long string of numbers into a keypad and there's a soft click.\n\nThe door opens and I see stacks of cash, some notebooks, several manila envelopes, a few thumb drives and multiple DVD's. He takes one of the DVD's and locks up the safe. He makes a point of showing me the DVD. My name is on it. My breath hitches and my heart starts pumping faster. That's not what I think it is. Is it?\n\nSilently, he leads me over to the living room and plugs the DVD into the system. He sits on the sofa and pulls me into his lap. \"You need to see this. You need to understand what happened. If you need to stop, the red light/green light is what you need to say. Understand?\"\n\n\"I don't want to watch this. I can't.\" My eyes pleading with him.\n\n\"You can. And you will. You need to see this.\" His eyes are hard, unwavering.\n\n\"Yes Marcus.\" This sucks. \n\nHe watches me for a moment. He points the remote toward the TV, my breath hitches. Please don't. Please don't. I watch his thumb press the power button and the TV starts to flash. I take another quick breath. It's just a black screen with my name, Dustin's name, and the date I was with Dustin overlaid with the symbol for 'play'. \"I'm right here. You're safe. You're cherished. If you need to stop, say red light, and we'll stop. But we will watch the whole thing. You need to see and remember what happened. I noticed you had some memory gaps. That's not good. You need to see what you endured. Ready?\"\n\nI nod my head, not trusting my voice. \"Good girl. Remember, you're safe here. Nothing bad will happen to you. You are mine, and I will keep you safe.\" His thumb presses the play button, the TV flashes, and I start to tremble. He wraps an arm around me and holds me close.\n\nThere's a girl, standing by the door of a room that looks like it belongs in a log cabin. Dustin. I can't breathe as Dustin walks into the room. He snaps his finger and points to the floor. The girl, me, walks to the spot he pointed at. She's nervous, fidgeting, eyes darting around. Is that really me? That wasn't the same girl I saw looking back at me in the mirror today. \n\nIn contrast, Dustin is calm and confident. \"Strip for me.\" I see the girl's eyes go wide.\n\n\"What?\"\n\n\"I want to see you naked. Now.\" The voice isn't a command. It's almost casual, like he was ordering pancakes for breakfast. Dustin steps back and sits down in a rustic, wooden arm chair. He picks up a guitar and starts playing a soft, slow tune.\n\nThe girl looks around. I don't know if I was looking for help, or escape, or just trying to buy time. After an eternity, she slowly pulls her shirt over her head. The scenes go on. Some I remember, some I don't. Either my brain was too frazzled to process everything, or it shut down to protect itself. I don't know. I just know I look scared. So very, very scared.\n\nMarcus talks me through the scenes. Tells me why Dustin is doing certain things, and why I'm reacting in certain ways. When I can't look anymore, and turn away, he pauses it and calms me, before we begin again. When there are breaks in the movie, someone put in a screen that says the time skipped; like '47 minutes later' or '22 minutes later'. Those are when I'm left alone and waiting. \n\nI'm in a full blown breakdown by the time we get to the whipping and the caning. I begged! I begged him to do that. Marcus has wrapped himself around me, holding me tight. I think that is the only thing keeping me from having a panic attack. The girl on the screen is visibly shaking, but not with fear, it's need. A deep, primal sexual need. The cane comes down on the poor girl and I flinch every time. \n\nShe's begging again, but her words are wrong, she's almost incoherent. Dustin hits her with the cane three times, in quick succession; one on each nipple and the third on her clit. My clit. That's me up there. The body hanging from the chains starts to twist and contort. She screams. I haven't heard her scream yet. Her body is still spasming as Dustin slams himself inside her over and over again. She offers no resistance. \n\nDustin steps back to watch her. Then he kisses her. \"So fucking perfect.\" He looks the girl in the eye. \"We're done for now, girl. I'm going to clean you up, and get you to bed. Just relax and let me take care of you.\" He takes something out of her ear, then walks off screen, and the TV goes black. \n\nMarcus just holds me, letting me cry, letting me purge the emotions I've been holding inside. I turn around in his arms and curl up in his lap, my arms just barely wrapping around his wide chest. He holds me tight and whisper in my ear until I stop crying. \n\n\"Why? Why did you make me watch that?\" I haven't looked at him yet. I'm still clinging to his strength, his solidness, and that wonderful scent. \"Why?\"\n\n\"To show you what you're capable of. Both the good and the bad. In the right situation, that would have been glorious. Your body alive with energy. That is the reward for submission. But that same energy can cloud your judgment. It can make you blind to your limits. A situation like that, with the caning, should only be done with someone you trust implicitly. You have to trust them to respect your limits. You're voice is your power, and if your unable to speak, the dominant needs to know your limits and respect them. That can only come with trust, and time and experience. You can't know that in one day and neither can they.\" \n\nI can't think anymore. I don't know which was more brutal, experiencing it the first time, or having to watch it the second time. \"Can we watch something else?\" If I go to bed like this, I'll be awake and screaming in hours. \n\n\"No. You're facing the wrong direction entirely. How are you going to watch anything like that?\" I snort and thump his back with my fist. \n\n\"I'd turn around, obviously. Don't be mean to me. I've had a bad day.\" \n\nHe pulls back, and for the first time looks me in the face. \"Have you? Was today a bad day? I was so proud of you, for everything you did today. You spoke up when you wanted something, and what a glorious something it was.\" I can hear the mischief in his voice and see the twinkle in his eyes. I still can't believe I asked for anal sex. \"You were perfect at the office, and Elliot said you were just as perfect at SkinFlicks. And watching you cum... I have no words for that. You were in your element. You were as you were meant to be.\"\n\n\"Well, maybe that was OK, but I feel pretty horrible now.\"\n\nHe wipes my face. \"You do look pretty horrible right now.\" I snort again, and a half-ass laugh escapes. \"Laughter is the best medicine. I'm not sure how true that is, but you look better laughing, than crying.\" \n\n\"You're incorrigible.\" Leaning my face against his shoulder. Soaking up his warmth, his strength, and his scent. \n\n\"Yes I am. Thank you for the compliment.\" I thump his back again, but he did make me smile. \"I have the perfect movie in mind. You go to the bathroom and I'll get some snacks and get the movie set up.\"\n\nI crawl off his lap, it still feels weird to be wearing underwear, and go to clean up a little. When I get back, the leftover Chinese boxes are on the coffee table. He's focused on ordering the movie. I just watch him. He's handsome and strong and funny. I remember being terrified of coming here. Of him. He looks up at me and smiles. \"You ready? You look better.\"\n\n\"I feel a little better. Thank you. What movie did you pick?\"\n\n\"Ohhh. It's a surprise. It's a super scary, gory, supernatural horror flick. One of the best ever made.\"",
        "\"Seriously?\" After what I just watched, I couldn't stomach a horror movie.\n\n\"Watch you tone, girl. I can still punish you.\"\n\n\"Sorry, Marcus.\"\n\n\"That's better. You're mine 24/7. Not just when we're playing. Come on, let's get the movie started.\"\n\nI hesitate a second. I see his eyes darken as he notices my disobedience. I take the hem of the cami and pull it over my head and drop it on the floor. I slip my thumbs in the waistband on my boy shorts and slide them slowly down my legs, stepping out of them and presenting myself to him.\n\nHis eyes roam over me. \"Why did you do that?\"\n\n\"I know you hate them.\"\n\n\"I do, but why did you take them off?\" \n\n\"I thought it'd make you happy.\" \n\nHe looks me over for a while longer, before shaking his head and laughing. \"You are precious. Come on, sit down. This is a great movie.\"\n\nI sigh and sit down next to him. He pulls me into his lap. He leans forward, squishing me as he reaches for a container of Chinese. I know he did that on purpose. \"You couldn't have done that before I sat down?\"\n\n\"What fun would that be? Let's see what I got?\" He opens the familiar white box. \"Ohh, Lo Mein.\" With his fingers he takes a portion of cold noodles and tilts his head back and drops them in his mouth. He over-exaggerates how delicious they are and it makes me giggle. He scoops up another portion and holds it over my head. I roll my eyes and tilt my head back. He carefully drops the cold noodles in my mouth. He watches as I chew and swallow them. \"Oh my god! Marcus. These ARE the best thing I've ever had in my mouth. I might never allow anything long and cylindrical in my mouth again, just to honor the memory of these noodles. Oh Oh Oh I think I might cum.\" \n\nHe gives my head a small shove and starts laughing. \"You brat. Remember, I get a say in what goes in your mouth. And I have certain preferences in mind already.\" I'm giggling again.\n\nWe settle in, wrap a blanket around us and get the food and juice within easy reach. \"This is a great movie. Ready?\" I'm not, but I nod my head yes. A gory horror movie is not what I need right now. Marcus clicks the play button and settles in.\n\nThe first few seconds of the movie start to play. I groan and punch him. \"A scary, gory, horror movie? It's Ghostbusters! I thought I'd have to endure some horrible movie for the next two hours.\"\n\n\"First, you should have trusted me. Bad girl. Second, this is scary. When the librarian ghost goes after them, that's scary. And when Slimer slimes them, that's pretty gory. Right?\"\n\nI smile up at him. \"Thank you. I know you're trying to lighten the mood. I should have trusted you. Ghostbusters is a great choice. It's perfect.\" We settle in, eating Chinese, drinking our juice, and shouting out lines from the movie. \n\nWe get to the Twinkie part of the movie. Marcus has lain down and I'm lying on top of him when his phone beeps. It hasn't done that since I've been here. Blindly Marcus reaches over his head to the end table and feels around for it. It's a text from Elliot.\n\nElliot: We found the car you wanted. [translation: We found JeAnna's husband, David]\n\nMarcus talks and the phone turns it into text: Cool beans. [Great job]\n\nThe peanut gallery pipes up from her vantage point lying on my chest \"Your getting a car? What kind?\" She twists her head to get a better view of the tiny screen.\n\nE: Russ found it. It has some damage. [Russ does the cargo runs between Vegas and Miami and the Keys, so someone found David somewhere around the Florida area. Some damage means they beat the crap out of him, but he's still alive.]\n\n\"The tendency toward invasion of privacy it not an adorable quality, little one. It's a Gran Torino. Looks like it might need some work before I can drive it.\" It was the first thing that popped into my head. I was considering the Clint Eastwood movie for tonight, but decided it wouldn't be appropriate. \n\nM: Did he get a good deal? [Does he have the money?]\n\nE: Pretty much. You know how persuasive he can be. [We either have the money or are in the process of getting it.]\n\n\"A Gran Torino? Like the movie? That was a good movie.\" He runs his free hand down her side, over her ass and cups her thigh. He shifts her leg out so her pelvis doesn't grind against his. Then pats her ass.\n\nE: Do you want the locals to fix it, or do you want one of our guys to do it? [Do you want David killed in Florida/Miami/Keys, or have him brought back to Vegas?]\n\nM: Have the locals do it. It's not a priority. [Kill him there.]\n\nE: Do you want a few pictures? [Should we leave the body to be found as a warning to others, or disappear it?]\n\n\"Ohh Pictures. I want pictures. Can I see it?\" He pats her ass and shushes her. \n\nM: No, surprise me when it's done. [Make sure the body isn't found]\n\n\"Awww. I wanna see. Please.\" She looks so cute when she's pouting.\n\nM: Don't forget the paperwork. [Make sure JeAnna and the kids get home safe.]\n\nE: Right boss. Have a great vacation. [Consider it done.]\n\nMarcus puts the phone back on the end table. His sassy little minx is still pouting up at him. \"Why can't I see the car?\"\n\n\"Because he said it was damaged. The first time I want to see it is when I get to drive it. Now shush and let's finish the movie.\" She's still pouting, but I'm not going to go out and buy a Torino just to make her happy. Well, I might if she was mine, but we have so little time left, I'm sure I can find a way to distract her. We settle back in to finish the movie.\n\nI'm trying to stay awake through the end of Ghostbusters. I had so little sleep last night, and today was another full day. Laying on his chest, feeling the heat coming off him, the soft rhythmic beating of his heart, it's tempting me into dreamland. \n\nI'm being jostled. \"Hey, wake up little one. Come on, open your eyes.\"\n\n\"Did I fall asleep? I was trying to stay awake.\" I shift to get more comfortable.\n\n\"I suppose you want to go to bed?\" He shuts off the TV\n\n\"If you wouldn't mind? I didn't get much sleep last night.\" I give a little nip on his chin. \n\nHis eyes darken and I see the glitter of mischief in them. \"Minx. Up ya get. Come on.\"\n\nI crawl off him and wait for him to stand. He just looks down at me. He puts the palm of his hand against my neck, his fingers wrapping around toward the back, his thumb under my chin. \"Food-check. Movie-check. Mating...\" He wiggles his eyebrows and with another caveman grunt he hoists me up over his shoulder. I squeal and he spanks my ass, not too hard, but it did sting. I watch the backs of his legs walking down the hallway, the blood rushing to my head. \n\nWe enter his bedroom and I'm tossed unceremoniously onto the large bed. He watches me bounce in the middle of the soft mattress. I watch lasciviously as he slowly removes each article of clothing, and drops it to the floor. His eyes rake over my body. Just the hard look in his eyes is making my pussy start to tingle.\n\nSlowly he moves toward me, putting a knee on the bed. He reaches for my ankles and pulls them sharply toward him. Another squeal. He kisses the inside of my ankle and begins a slow and torturous ascent up my right calf and thigh. He licks and nips and kisses higher and higher. Any thought of sleep abandons me. I'm up on my elbows, watching him torment me. He gets to the top of my legs and skips over my mound, deciding to continue on my belly. Randomly he tastes different spots on my stomach and sides, his cheek brushed the underside of my breast one time, and I thought I might die. \n\nHis lips continue their assault on my flesh. \"Calm down, little girl. This isn't going to be over any time soon. Relax and feel. Enjoy and endure. You are mine to play with. Your body exists for my pleasure. You are cherished. You are beautiful. You are mine.\" I can feel his cock dragging up along my calf and thigh as he works his way from my abdomen to my chest. \n\nEvery inch of flesh is electrified. I drop back down onto the bed, my leg rising and gliding along his. I stare at the ceiling, focusing on feeling of his mouth on my skin. My body is an offering to him, like a virgin given to some ancient Greek god. It takes an eternity before his mouth latches on to a pert nipple. My back arches into the pain as he sucks it into his mouth. His teeth pulling it back from my chest until it slips free with an audible 'pop'. He runs his hands up my sides as his mouth searches out every curve and swell of my neck and jaw. \n\n\"Please.\" He's driving me crazy, I need more. So much more.\n\nMore dark laughter. \"Are you enjoying your punishment, little minx?\"\n\nWait. What? \"Punishment?\" What did I do? And I thought punishment was whips and stuff.\n\n\"Yes, punishment. I told you to use my name, and you defied me this morning and called me 'sir'. In terms of offenses, that wasn't one of the worst things you could do, so I thought a 'special' punishment was in order. What do you think, girl. Do you like this punishment?\"\n\nI can only groan. The 'more' I've been craving will not be coming any time soon. Feel and endure. He's working his way down my left arm, his lips searching out and inspecting every millimeter of soft flesh. He sucks each finger individually, his tongue doing things that make my clit flare with jealousy. My hips lift up, trying to get closer to him, begging to have him inside me. \"Please,\" It's the only thought I can form. \n\nHe shifts and starts working his way down the outside of my left leg. One palm is pressing against the inside on my thigh, the other underneath, holding it steady. With lips and tongue and teeth he torments my skin. \"Please.\" He comes back up along the inside of my leg, callously ignoring my pleas. Every inch sampled is set on fire. His strong hands press into my hips to hold me steady as his mouth cruelly devours my tummy for the second time tonight. \"Oh god. Please. Please Marcus. Please.\" An incoherent litany of begging crosses my lips. \"Oh god, please.\" \n\nMercilessly, he sucks a nipple deep inside his mouth and bites down. My back arches and my breathing stops until he releases it. \"How are you enjoying your punishment, little girl?\"\n\nMy eyes focus and I look down my body, Marcus is resting his chin between my breasts, a wicked smile on his lips. As I'm watching, he takes the other nipple and bites it. Uuugnnn. \"Please, Marcus. I'm sorry. Please.\"\n\n\"Oh, now you know my name. I do love the husky way you say it when you're horny.\" He's tormenting his way up from my nipple, along my neck and to my chin. \"Have you had enough punishment, minx?\"\n\nI look up into his eyes, feeling his weight settling on top of me. \"Yes, Marcus. I'm sorry I didn't do what you asked me to. I'm sorry. Please forgive me. Please.\" His cock is nestled between my legs. \n\n\"Open your legs.\" It was a command and my legs open instantly, knees slightly bent. Please Please Please Please\n\n\"Guide me in.\" It takes a few moments to figure out what he means. I try moving my hips, but that's no help at all. I try to get my hand between my legs, but he's lying on top of me. \"Don't make me wait too long, I might lose interest.\"\n\nI wiggle my fingers between our bodies, trying desperately to get my hand to reach his cock. He's not lifting up on purpose, he wants me to struggle. My fingers graze against something, something hot and velvety soft, something that isn't me. I wiggle more until I can get a firm purchase on the object. Marcus kisses me, cooing in my ear. \"Gently now. Nice and easy.\" I can only whimper.\n\nI place the tip against the opening to my pussy. And wait. And wait some more. \"Please Marcus. Please use me.\"\n\nThe heartless bastard is still playing with me. \"Now. Now. Now. That wouldn't be much of a punishment, now would it.\" Aww come on. My hips lift, trying to sink him in deeper, but he just lifts up higher, denying me. Another evil laugh. \"You can't win, baby girl. You're mine to use as I please. Or not use.\" Another whimper. \"Your pussy is mine.\" Slowly he sinks an inch inside my juicy pussy. \"You body is mine.\" Another inch pushes inside me. Please go faster. Please I need so much more. Please. \"Your submission belongs to me.\" \n\nWith every point he makes, he sinks himself further inside me. With every claiming of another aspect of my body, mind or soul, his masculinity forces itself, inch by languorous inch, into my core until he's seated fully inside me. My pussy rhythmically works to adjust to the intrusion. I watch his face, helplessly, as he enjoys my body trying to accommodate to his size. \n\nI don't beg. I don't have the energy, and I know it won't help. He'll toy with me for as long as he wants, and I'll submit to whatever he desires. It's my nature to please. And I want to please this man. \n\nI wrap my arms around his head and pull him in for a kiss. \"Yes Marcus. Everything is yours. I'm yours to use. Take anything you want. I give everything to you freely. I'm yours, Marcus. I'm yours.\" I squeeze his cock as its still nestled deep inside my pussy. I watch his eyes glaze over as he endures the pleasure I give him.\n\nHis breath catches and his focus returns to me. He kisses me as he slides his cock out of my body, slow and easy. The next several minutes are spent in an excruciating, slow-motion fuck. I don't know where he gets the willpower to use me like this. I submit to him. My body opens to every minuscule sensation around me. The swish swish swish of the ceiling fan. The long low grunts of the man using me. His hands wrapped around my shoulders, holding me firmly in place. My heart pumping wildly in my chest. The sweat dripping down on me from above. The look of lust and possession in his dark eyes. The feeling of his thighs sliding against mine. The slipperiness of the sheets at my back. And the heat pouring off Marcus. All of it overloading my senses until I exist in a moment of pure pleasure. \n\nIn that moment, I crumble in his arms. This isn't like the explosive orgasms he's given me before, this is a slow and steady pulling centered in my core. My back arches as the tingling and twitching gently rolls through my body, all the way to my fingers and toes. Marcus doesn't change his pace. I watch his eyes close as he endures my pussy throbbing around his member. \n\nHe rides out my orgasm, still slowly filling me over and over again. My body is like Jello, almost like it's disconnected from my mind. Marcus continues the slow torture of my body. His mouth tormenting my face, neck, and mouth. I crumble again. My pussy twitching and milking his cock before the gentle waves spread out to the rest of my body. My back arches and Marcus takes the opportunity to latch on to a nipple. The pain, the first I've felt in a while, shoots like lightening through my gently rolling orgasm. I try to curl into a ball to ride out the sensations, but Marcus won't allow me to move an inch. The slow and easy thrusts of his cock filling me never waiver, never stop.\n\nMy head lolls to the side; I don't have the energy to move it. I feel my body slowly rocking back and forth, matching his thrusts. I focus on the sound of my panting, grabbing onto it like a lifeline. I feel my core start to twitch again. I can't. I won't survive another one. \"Please. I can't. Please not another. Please Marcus.\"\n\nHe nips my earlobe. \"Endure it for me, baby. One more. Give me one more.\" He slams into me. The sudden change in pace and intensity jarring me back to reality. He continues pounding my pussy at a brutal pace. Any restraint he had is lost. He builds me up and I come crashing down under him. My orgasm triggers his as we both scream out.\n\nHe's so heavy. I'm having trouble breathing. I try pushing him off me, but I can't budge him. He seems to know what's wrong, and rolls onto his side. When I find the energy to open my eyes, I see him watching me. \"You OK?\"\n\n\"As long as I don't have to move ever again, I should be OK.\" He smiles at my pathetic attempt at humor. The daily questions begin. Did I enjoy the anal sex? (Was that today?) Did I enjoy sex with Elliot? What did you feel when you knelt at my feet for dinner? How many movies did I see today at SkinFlicks? What were they about? What movie did you enjoy the most? The least? How did you feel wearing the black dress? Etc. Etc. Etc.\n\nAs usual, I just answer them. My eyes closed. My body relaxing from the fucking it had just received. \"Are you hurt?\"\n\nI do a mental check. \"I don't think so. I'm sore, but I don't think it's too bad. But then I haven't moved yet. And I'm not going to, so don't even think about it.\"\n\nHe arches an eyebrow at me. \"Sassy girl. Careful or I'll put you on the treadmill for an hour.\"\n\n\"Pfft. If you try to put me on a treadmill right now, I just take a nap on it.\"\n\nHe laughs at me. \"I believe you would.\" He wraps his arm around my waist and pulls me into his body. We shuffle into a comfortable position and I fall asleep in his arms.\n\n*********\n\nFair warning - Only one more chapter left. I'll submit it next Saturday as usual.\n\nI finally found the courage to read the comments from the previous chapters, and was pleasantly surprised. Thanks to all my pervy readers for making it worth the effort to write this story. Thank you for your support.\n\nPlease feed the authors by clicking one of the stars below the stories. We take a lot of time out of our lives to write these stories and one quick, anonymous click won't kill ya. :-)"
    ],
    "authorname": "lioness_71",
    "tags": [
        "anal",
        "exihibition",
        "porn films",
        "dominance",
        "teasing"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/just-curious-ch-10"
}