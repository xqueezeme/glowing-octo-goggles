{
    "title": "Free Birds in the Bayou",
    "pages": [
        "RYAN\n\n\"If you're a man in America, and you have a great divorce lawyer, you get the kids every other week. If you have a decent divorce lawyer, you get them on the weekends. If you have a bad divorce lawyer, you get them a week of every month. If you have my divorce lawyer, you get them for one month every year before school starts, and no contact until then. You know, I sympathize with women activists in this country, I really do. It makes no sense that half the population had to claw through hundreds of years of bullshit just to finally be treated like a proper human. But if you ask one of these militant feminists -who, by the way, I usually agree with-, if you ask one of these feminists about how bad a man in America gets fucked by the divorce courts, they don't have an answer for you. You know, if you spend enough time being the victim, I guess it's hard to recognize when you're victimizing someone. Or maybe I was just always a victim. A victim of my own shit decisions and weakness.\" \n\nDave withdrew the glass of whisky he was about to serve me. \"Would this be one of those shit decisions, Ryan?\" He asked me. \n\n\"Why do you say that?\" \n\nHe pointed to the clock behind the bar. \"It's nine in the morning.\" \n\n\"It's also a Saturday.\"\n\n\"Every day's been a Saturday since you got laid off, and you've spent every one of them right on that stool.\" He opened the register for effect, \"Is your entire severance package in here?\" \n\n\"So what if it is?\" I snapped. \"The kids are eighteen, so no more child support payments. I'm a free man!\" \n\n\"You sound overjoyed.\" \n\nI glowered at him. \"Just gimme the damn drink, Dave.\" \n\n\"Look Ryan, I've been in this shithole long enough to know when a man's drinking to get the day started. If you want to become an alcoholic, then go full-tilt and start drinking alone in your goddamn whitie-tighties, but I'm not gonna stand here and watch you drown day after day knowing I poured you the first glass.\" He pulled the glass away, \"From now on, you're money's no good here until after noon.\" \n\n\"Ah, piss off. You ain't my goddamn priest.\" I grumbled, getting off the stool.\n\n\"But I am your goddamn friend.\" He crossed his arms, \"You say you never gave a shit about that job at the mill, but you've been nothing but miserable since they canned you.\"\n\nI looked to my left, making sure that the bar was empty. Then I looked at Dave, and sighed. \"It ain't the job, Dave. I never gave a shit about that job, and I still don't. It's...\" I twirled my hand, searching for the words, \"My girls are grown now, and I've seen them a grand total of a year since they were five. They're headed off to school on the other side of the country, and...\" I chewed on my lip, \"I had prospects, you know? After the divorce, I could've gotten ten different jobs -real jobs- in Phoenix, but I stayed here, because this is where my girls were. I put my whole life in a goddamn holding pattern for twelve years, and now it's over!\" \n\nI yelled the last words to cover up the sob in my throat. They echoed throughout the room, bouncing off the implacable stare of Dave Farmstead. \"The holding pattern, or your life?\" He asked. \n\nI shrugged. \"Somewhere down the line, the holding pattern became my life. I don't know, man; you keep waiting for the future, then you realize it's behind you, it happened, and it wasn't nothing like it was supposed to be.\"\n\nDave looked at the glass of whiskey he'd pulled from me. \"You're daughters are coming today, ain't they?\" \n\n\"Yeah.\" I breathed it out like a confession. \n\n\"So you've got one month of future ahead of you.\" He took the glass, and carefully poured it back into the bottle, \"Enjoy it.\" \n\nKELSEY\n\nMom and Daniel were arguing in the front seats of the Escalade. They always were these days. It was one of the reasons Josie and I left the more comfortable middle seat empty, and sat in the back instead. \n\n\"You might as well pay up now.\" I sniggered at my twin sister.\n\n\"He won't say it.\" Josie said, listening carefully. \n\n\"Oh, he's getting there.\" I grinned, \"It's right on the tip of his tongue.\" \n\n\"He won't say it.\" \n\n\"...while I work my ass off every damn day, and what are you doing, huh? Collecting checks from how many men?\" Came Daniel's voice from the driver's seat. \n\n\"Oooo, we're so close!\" I giggled. \n\n\"He won't say it.\" Josie narrowed her blue eyes, \"He doesn't have the balls.\" \n\n\"...and where are you when I call, Daniel?\" Mom spat, \"On conference again? That's what Shelly says, but of course, Shelly always seems to be out of breath when I call her! Such a rigorous job it must be, being your secretary!\" \n\n\"Now you listen to me, you vindictive cunt!\"\n\n\"Bingo!\" I cackled, though the exclamation was drowned out by Mom's wrathful shrieks. \n\nJosie groaned. \"Do I have to pay you now?\" \n\nI undid my safety buckle, and rotated on the leather seat. I eyed Josie with a devious smile as I opened my legs, and rolled up my skirt. Yes, Mother's propensity for vitriolic arguments was one of the reasons why her daughters sat in the very back during long road trips, but it was far from the main reason. \n\nIt started ten months ago, only five days after our eighteenth birthday. I'd awoken one night to the sound of Josie shifting noisily on the bunk above me. Curious, I'd climbed the ladder, and peaked over the edge. \n\n\"Wha'cha doing?\" I whispered. \n\nJosie's blonde head poked out from the covers, her big blue eyes narrowed in irritation. \"Flicking the bean, what does it sound like?\" \n\n\"Underneath the covers?\" I queried with a confused smile, \"Mom's out drinking again; who are you worried will catch you? Aren't you getting hot in there?\" \n\n\"Go away, Kelsey!\" \n\n\"What video are you watching?\" \n\n\"A James Dean slave video, now go away!\" \n\nI smiled crookedly. \"That, my dearest sister, was a lie. You know we can't lie to each other, and we never keep secrets, so why don't you tell me what you're really watching, or I'll check the web activity log on the router and find out for myself.\" \n\nShe bit her lip. \"You promise you won't make fun of me?\" \n\n\"I'll only make fun of you a little.\" \n\n\"You promise you won't be mad?\" \n\n\"Why would I be mad at what you flick it to?\" I laughed, climbing onto her bed. I pulled away her covers, revealing a body that was nearly identical to my own. She was slender and long-limbed, her shoulders narrow and delicate, and though her breasts were modest, they were pretty. Years of gymnastics had toned her silken belly with soft shadows of muscle, and had rounded her glutes into alluring domes that ornamented her wide hips. I'd seen her naked thousands of times, and she'd seen me just the same, and not once in all that time had either of us known shame because of it. So when Josie covered her breasts with her forearm and looked away with blushing cheeks, I became concerned. \n\n\"Alright, what the hell are you watching that caused all this...\" I trailed off when I read the title. Blonde Teen Sisters Fuck While Mom's Away.\n\nI blinked. I blinked again. I looked at Josie, whose eyes were brimming, whose lip was trembling. If she had tried to play if off as just a kink, I would've given her nothing more than a gentle teasing. Shit, I'd watched incest porn simply because it established the barest amount of plot, and sprinkled just the right amount of guilt into the sex to get my motor running. But Josie wasn't just mildly embarrassed; Josie was mortified. \n\n\"How long?\" I whispered.\n\n\"I don't know,\" she sniffled, \"I guess I always... you know, we've been with each other since the beginning, and you know... I thought we'd always be together, and you know, I just... when we started growing up, I always noticed how pretty you were, and... and...\" She broke into a cry, curling in on herself, her diaphragm wracked with sobs. \"Oh my god Kelsey, I'm so sorry!\" \n\nI pulled her into my arms, running my fingers through her hair, comforting her with the gentle rock of my hips. It was a maternal embrace that we'd needed to give to each other, because we'd never gotten it from who we were supposed to. \"It's OK, it's OK.\" I murmured into her ear over and over. Her breathing eased, and the rigid ball she'd contorted herself into relaxed. \n\n\"This changes everything between us, doesn't it?\" She hissed into my arm.\n\n\"Only if we let it.\" I answered, watching the 'teenagers' (give me a break) slithering together on Josie's iPad. One had the other pinned down by the shoulders, and was kissing her like a lioness feasting upon downed prey, undulating her body with the liquidity of a serpent. I'd often wondered how pornstars could do it; take that leap, become that woman, make the decision to not only do such things, but to do them without shame in front of millions of people. I'd never even kissed a boy up to that point, though it wasn't for lack of suitors. I just couldn't take that leap. I couldn't take any leap without Josie. We were two halves of a whole, and grew together like we were conjoined. But... we'd always known there would be a time when we'd have to separate, right? When one of us took the leap that the other could not, and flew away from the nest once and for good? Does it have to be that way? \n\n\"Which one of them is me?\" I whispered to Josie. \n\n\"The one on top.\" She sniffled, \"You always were the braver one.\" \n\nI closed my eyes, and let out a slow breath through my nose. \"You're going to have to be the braver one tonight, Josie.\" \n\nShe raised her head from my chest, and turned around to look up at me. Her straight platinum hair shown nearly blue in the moonlight, her pale flesh nearly white, and the smattering of freckles across her high cheeks was nearly mauve. Her azure eyes shown like sapphires in the night, staring into me, a question in their depths, a plea, a fear. Her pale lips parted to sound what lay within her eyes, but instead, her little tongue slipped out to moisten them. She moved up me, and I stayed on my elbows, frozen in my fear of the moment, wondering if I should leap off the top bunk, smack my head on the floor, and claim amnesia about this whole ordeal. She straddled me about the waist, and loomed over my face, her hair falling in a silver curtain to isolate us from the world. Just she and I, and her body was pressing against mine, and her hands were drawing unsure fingers up my side, sliding beneath my t-shirt, moving gently up my ribs. \n\n\"Kelsey...\" She whispered, her brows knitted together, unsure of what she was doing, afraid of what it might mean, but compelled to continue by something she didn't fully understand. I saw all this in that gaze, for I knew her like I knew myself. \"I can't do it unless I know you want it.\" She said, \"We have to take this dive together.\" \n\nI knew then, teetering on the vertex of such a perfect crisis, that this moment would decide everything, but the decision wasn't mine to make. I couldn't want something that I did not, no matter how much I wished it. And I wanted with all my heart to not want this. I wanted to pretend in that moment, that I was who I'd always thought I was, that my nature couldn't be so corrupted by such a heinous perversion, but I was too much like my sister to deny it; to deny the growing ache between my legs, the saturation of desire wetting my thighs, the knowledge that I wasn't just aroused because I loved my sister, but because what we were about to do was so wrong. That a concoction of terrible parenting and sibling codependence had manifested such a darkness within me, and that I had suppressed it for so long that the lie had become truth in my mind, a denial that had become blindness. And now here, with her atop me, with her fingers moving so gently to cup my breasts beneath my shirt, with her lush lips expiring sweet breath into my nostrils, with her eyes staring into me, knowing me so well that words did not need to be spoken, I could not lie anymore. \n\n\"I want it.\" I whispered. She broke into a tearful smile, and lowered her lips to mine. We learned things that night. We learned how to kiss through trial and error, through the painful clicking of teeth, the smiles that broke the contact of our lips, and the slithering motions of our tongue within each other's mouths, tasting the ruination of our innocence as the awkwardness ebbed from us, and the unbridled desire took hold. Then we were devouring each other's mouths, our lips sucking with a gluttony of lust, our tongues dancing in ardent combat, our noses inhaling sharply as our hands found each other's breasts, and our fingers found each other's nipples. Josie was the brave one that night. She was the one who finally broke the kiss, and licked her way down my body. I moaned with my hands covering my mouth, ashamed of the lecherous noises that came unbidden from my chest, each one compelled by the tingle her lips brought when she sucked both my nipples, then traced a path of saliva down to my navel, and past it. \n\n\"Josie!\" I cried, and though it was a cry of alarm, it wasn't a demand for her to stop. She planted delicate kisses along my waistband, then hooked her fingers beneath it, and pulled my panties down. I whimpered. The heat of her breath was on my netherlips, whispering her desire into my virgin slit. She looked up at me with those blue eyes, now void of indecision, now predatory and wicked. They smiled at me as her curious little tongue dipped into the bottom of my crease, and slipped through me. I gasped. Her wet tongue slid into the ovule of my flower, and the petals bloomed in arousal, outturning and leaking to splay my folds for her, to present my virgin sex so that she could taste it. She inhaled my feminine scent, and her eyes rolled indulgently, the pupils dilating as though my chaste pussy was a narcotic. Her face pressed into me, her nose upending the bottom of my clit, her tongue invading me, searching for my weak spot. Finding it. I cried out. She grinned open mouthed at me, her tongue halfway inside, a portrait of my violation. She curled her tongue upward, and began her work. \n\n\"Oh my god!\" I cried, wringing my hands in my t-shirt, my hips shifting on their own accord, my belly flexing with pleasured contractions. Josie moaned a laugh into my depths, her eyes alight, her hands pressing against my thighs, compelling them to spread. They did, splaying wide to give her unfettered access to my sex, and she feasted upon it, her tongue relentlessly moving across that spot within me, rubbing, flicking, dancing in pattern until she found the combination that would unlock me. I threw back my head and moaned an escalating tenor, my hands leaving the protection of my shirt to find my twin sister's head, to surrender to this obscene desire, and become who I really was. I pulled her into me, biting my lip as she rose with the elevation of my pelvis, compelled by the arch of my back that jutted my chest forth, sliding my shirt off my breasts to pool about my neck. My nipples ached pleasantly from when she'd sucked them, standing erect and swollen from my alabaster flesh. She withdrew from me with a smack of her lips, leaving me teeming for her touch, mewling like a whore for her tongue. \n\n\"Please!\" I begged. \n\n\"Patience, Kelsey.\" She grinned, her lips shining with my lust, \"I want to know all your little secrets.\" Her tongue tickled my hood, coercing the pearl therein to swell, aching and pulsating with sensation. She toyed with it, pressing gently and rubbing, gauging my reaction with curious blue eyes. I whimpered for her, nodding my approval, pressing my heels into the bedding. She paused, then drew her finger through me, the notch of her knuckle gently spreading my tight curtains, singing across the nerves of my entrance. She made it to the bottom, then with a devious smile, she traversed my taint, and rested the tip of her finger against my anus. My breath caught. Her smile widened. \"You've played with this before, haven't you?\" \n\n\"Yes!\" I moaned. \n\nHer finger pressed harder, threatening to break through my resistance, my pelvic floor bowing inward with tension, getting tighter, and tighter. \"Me too,\" her voice was a covetous breath, \"we're really so much alike.\" I could feel my aperture dilating, the sphincter slowly uncoiling. Her eyes were wild as she stared rapturously at my defilement. \n\n\"This is where you really like it, isn't it?\" She whispered.\n\n\"Yes!\" I whimpered. \n\n\"Even more than your pussy?\" \n\n\"Yes!\"\n\n\"I guess we're a little different after all.\" Her eyes flashed to mine. \"Beg for it!\" She hissed, \"Tell me you want me to finger-fuck your slutty virgin asshole!\" She twisted her finger, and I whined in need. \"Tell me you're a depraved little whore who wants her own sister!\" \n\n\"I love you!\" I cried. \n\nHer malevolent smile softened. \"You're really terrible at dirty-talk, Sis.\" She lowered her mouth back to my depths, \"And I love you too.\" \n\nHer finger pushed inside. I groaned in satisfaction, my entire being hinging on the point of her exploratory digit it as it navigated my filth, gently stretching my rim, singing through the smooth bore of my sinful hole. Her mouth came down on me once more, and she found my spot, working it with practiced, confident patterns. Her finger withdrew with a pop, then pushed in again, making me feel the full penetration anew. She kept doing it, opening me and letting me close before forcing through the nerve-swathed center once again, plunging into my heinous depths, ravaging the sensory nodes within that were never meant to know such pleasure! \n\nI undulated in a dance of depravity, my motions becoming more impassioned, my belly flexing and flattening as though I could expel the pleasure that was rising within me. Oh god, I couldn't handle it! She tortured my spot without mercy until I knew the texture of her tongue by memory, and the sensations within were but a blur of chaos, blending together, churning within my depths and rising, rising, rising to the precipice, and I was calling her name with a broken voice, \"Josie! Josie! Josie!\" My pitch was nearly manic, I was pulling her into me, feeling her consuming muzzle become wet with my release as the pressure within me suddenly ballooned, firing up my spine to burn through the tips of my fingers and toes, flashing through my synapses to make my mind numb. I choked on my orgasm, unable to give voice to anything but a breathless croak, my entire body bowing upward like a drawstring, stretching with the tension that wound, and wound, and wound within me, oh god, oh god, oh Josie! The feeling burst, and I collapsed, panting to catch my breath, quivering with the aftershocks of my climax. \n\nJosie was there, licking what I'd shot out of me, sucking the finger that had just been in my ass, moaning as though it tasted like the finest delicacy. She suddenly didn't seem the dominant lover, but expressed in her eyes, a sweet vulnerability, a request, a hopeful invitation. I grinned at her, and licked my lips. \n\nTen minutes later, she was panting beneath me, her breasts and belly covered in thin scratches and red handprints, her makeup smeared, her legs splayed wide, both her holes yawning and swollen. I licked my fingers clean, and smirked down at her. \n\n\"You were saying something about my dirty-talk?\" \n\n\"You've got a nasty mouth on you.\" She smiled, her eyes drunk with satisfaction, \"And an even worse temper. That felt vindictive.\"\n\n\"I was just doing what felt natural.\" I ran my fingers up her belly, \"As were you, my submissive sister. I didn't know you could scream like that.\" \n\n\"Neither did I.\" She crinkled her nose at me, \"But don't you start acting like my mistress, not when I had you begging with just my mouth.\" \n\n\"That was just my inexperience.\" I loomed over her, and grinned, \"Now you're my little bitch.\" \n\nShe slapped me hard across the face, and my head whipped to the side, my hair flailing, a yelp shooting from my lips. \"Ow, fuck!\" I exclaimed, rubbing my cheek. ",
        "\"Well?\" She asked, her brows raised, \"Did you like it?\" \n\nI noticed how my rubbing hand had turned to a trailing caress to savor the sting. I nodded, and sighed. \"Goddamn it, I really did. Did you like hitting me?\" \n\nShe inclined her head thoughtfully. \"It was fun, but I didn't get a thrill out of it.\" \n\n\"Not like I do, huh?\" I mused, pinching and twisting her nipple, enjoying the sound of her shuddering breath, the pleading glint in her blue eyes. \"I really like this.\" I whispered. \n\n\"So do I.\" She moaned, her brows knitting. \n\n\"Sometimes, I won't be very nice to you,\" I said, \"and at those times, I want you to call me 'Domina.'\" \n\n\"Domina?\" \n\n\"It's what Roman slaves called their mistresses.\" I leaned in, \"And I'm going to call you, 'Pet.'\" \n\n\"Oh...\" Josie groaned, closing her eyes and licking her lips, \"I like that very, very much.\" \n\n\"We're kind of kinky, huh?\" I laughed breathily, \"I mean, normal girls -and I know normal girls don't fuck their sisters-, but besides that, normal girls aren't into this weird shit right away, right?\" \n\n\"We're far from normal. We always were.\" \n\n\"We've always been freaks, just not in the sheets; not until now.\" I giggled, \"We just didn't know how bad it was. We still don't.\" \n\n\"I guess we have a lot to learn about ourselves.\" She whispered, opening her legs for me. \n\nI position myself between them, interlocking our thighs, pushing our slits together. \"Well then, we better get started.\" \n\nOver the next ten months we explored each other to the fullest, then ventured out to explore other people. We held hands as we laid on our backs, lurching on the bed as the men we'd selected took our hetero virginity. We kissed each other as we were bent over the back of a chair, our legs straddling the leather arms, our bare cheeks spread wide so that our anuses could be violated. We winked at each other from across the room at the BDSM club, our bodies hogtied in rough rope, every one of our holes filled with men. Needless to say, we escalated things quickly. I supposed a psychologist would label us 'nymphomaniacs,' though even as we delved deeper into deviancy, it was never purely for our own indulgence. We did it for each other. When I was swinging from the ceiling with my heels bound to my wrists, screaming around the cock ravaging my throat as two more grinded against the membrane that divided my holes, I was watching her succumb to the same violation, and what made me come wasn't the fervent pumping of men into my orifices, though that was ecstatic. No, it was the look in her eyes; that animalistic, pure, mindless pleasure staring back at me, and knowing that what was being done to her was being done to me, that the lecherous bend of her body, the corruption brimming on her face, the yawning holes between her cheeks were all the same for me, and the pleasure we felt was the same too. We were being fucked by a room full of strangers, but we were making love to only each other. \n\nWe graduated high school later that year. We'd both committed to Puget Sound, which was geographically as far as we could get from our mother in Tampa Bay. Life was looking bright, and with each other, it felt like there was nothing we couldn't do. There was just one thing that held us back, an anchor that tugged our hearts back into Florida: Dad. Every year since we were five, Josie and I had spent August with our Dad at his lonely shack in the panhandle. It was quiet, humid, and hot as all hell there, but it was by far the best month of every year. And this would be the last. We'd always worked hard to make Dad a present to hold him over emotionally until we saw him again. One year, it was a collage of construction-paper flowers. Another, it was a movie we'd made on our laptop, featuring us fighting stuffed animals in a cardboard space ship. Last year, it was a vase we'd spent weeks making in pottery class. \n\n\"What should we get Dad this year?\" Josie had asked me a month ago. \n\n\"Shit, I don't know.\" I sighed, \"What do adults give their parents? A nice card?\" \n\n\"Dads love beer, right? I can call up Thomas and have him buy us some lagers or something.\" \n\n\"You think Dad would be cool with that?\" I raised a brow, \"I know he'd pretend to be, but he'd probably worry about where we got it.\" \n\nShe gave me a frank look, spinning in her office chair away from her laptop. \"I'm sure Dad drank in high school, Kelsey. It wouldn't be some great mystery to him.\" \n\n\"Yeah, but every time we see him, we're a year older. He still thinks of us as the awkward nerds we were when we were seventeen, and now...\" I gestured to the clothes we were wearing, the tight skirt and tanks that exposed our midriffs. \"If we're too different, it'll make him feel like he missed everything, and you know that's his worst fear.\" \n\n\"Yeah.\" Josie sighed, looking up at the picture of Dad. She chewed on her lip, and typed on her keyboard. A second later, sound blared from her speakers, the slap of flesh on flesh, the moans of a woman being given what she deserves. I pedaled my feet against the floor, rolling my office chair across the room to sit beside her. Without even thinking about it, we slipped our hands into each other's pants, and slid our fingers where they belonged. \n\n\"No Johnny Sins this time, huh?\" I laughed breathily, \"You done with your bald guy fetish?\" \n\n\"I'm just shelving it for now.\" She smirked, her face flushing with arousal. \n\nI watched the middle-aged man railing into Dakota Skye, marveling at the ergonomics of the ordeal. How someone so small could take something so deep was truly a miracle of physiology. \"I don't recognize the dick; who is he?\" \n\n\"I'm not sure what his name is.\" Josie mused, expiring pleasured gasps between her words. She scrolled down to the description, and that was when I saw the title. Dad Fucks Teenage (not) Step-Daughter. I looked at Josie, and she looked at me, and both our smiles curved wickedly. \n\n\"That's it.\" I whispered to Josie in the backseat of the Escalade as Mom and Daniel set the stage for her sixth divorce, \"Get that pussy nice and wet for Daddy.\"\n\nRYAN \n\nThe black Escalade stopped on the dirt road in front of my porch. I was tempted to get off my chair and talk shop with the driver of such a fine automobile, when I saw that the driver was rather occupied screaming at the passenger. The passenger, who was a woman of many last names. Bridget Anderson was her maiden name, then Bridget Brees when she married me, then Bridget Rivers, then Bridget Cuddyer, then Bridget Young, then Bridget Hernandez, and finally, Bridget Dickerson. That made poor Daniel Dickerson the driver of the fine automobile, though I suspected Bridget would soon own it, along with half of Daniel's shit before the year was out. Hell, three more and we could field a baseball team of Bridget's ex-husbands. Actually, we should probably form a support group. I thought with a bitter laugh. \n\n\"Hey, Daniel!\" I called from the porch, \"Hope the ride here wasn't too bumpy!\" He ignored me, of course. I didn't care. My eyes were fixed on the rear door of the Cadillac, my heart beating a little faster than normal, my mouth a little drier than it should be. I always got nervous before I saw them. Was this the year they'd finally realize what a useless sack of shit I was, and never talk to me again? I wrung my hands, and tapped my foot. The back door opened on the other side of the car. I saw the top of one blonde head, then the other. The door slammed shut, and Daniel slammed on the accelerator, apparently taking his anger out on the transmission. When the dust settled, I was staring at two blonde swimsuit models. I rubbed my eyes just to make sure. Gone were the baggy athletic shorts and band t-shirts of yesteryear; now it was crop-tops and skirts that were a summer's breeze from being indecent exposure. My little girls had grown up; I guessed it was bound to happen eventually. \n\n\"Hey, you angels lost?\" I called, \"You're in Heaven's Gate, Calhoun County. I do believe the real heaven's gate is somewhere in Fort Lauderdale, or maybe that's just God's waiting room.\" \n\n\"You're still so hilarious!\" Josie called from across the road. \n\n\"Is it open-mic night in the swamp?\" Kelsey jeered.\n\n\"It is, actually, but even the crickets don't chirp after my punchlines.\" I smiled, \"Did ya'll develop an allergy to clothing over the winter? You seem to have an aversion to it.\" \n\n\"We're on summer vacation, Dad.\" Josie grinned behind her aviator sunglasses. \n\n\"We need to get some tan-lines before going off to college.\" Kelsey said, displaying a pale thigh that would never in a million years be anything darker than Swedish ivory. \n\n\"Only thing you'll get wearing that getup is a venereal disease.\" I snorted, \"Ya'll better get in here before paying customers arrive.\" \n\n\"Oh, Dad!\" Josie and Kelsey laughed in unison, and came sprinting across the lawn. There were my girls, those jubilant smiles on their faces, that mischievous excitement sparkling in their blue eyes. I threw out my arms, and took them into me, squeezing them like I could juice the love from their bodies. They embraced me with the same desperate love, eleven months of separation washing away in just a second. \n\nJOSIE \n\nDad was on the wrong side of forty, but he'd aged well. At least, he'd aged well up until this point. It seemed the last year had been rough for him. His brown hair was thinning and greying, and though his face was still ruggedly handsome, it now hung from his cheekbones with a worn-out look to it. His eyes were still sharp and blue, but were now cornered with wrinkles that were more crow's feet than smile lines. He'd always stood tall despite his five-eight frame, but now his posture was slightly bent, his well-muscled shoulders rolled forward instead of thrown back to display his broad chest. Despite all this, seeing him from my new perspective was like seeing him anew, and as I ran my eyes up his body, I felt a tingle between the press of my thighs, and I knew that my desire had not been a mere perversion of the moment. I could tell just by the way Kelsey was standing as she watched him, that she felt the same. Still, we had our work cut out for us. \n\nDad's shack was always a bachelor's pad, but I'd never seen it in such a mess. Beer cans littered the corners, clothes were strewn about, and the dishes were stacked in precarious ceramic towers about the sink. Everything looked to be in a state of disrepair, and cobwebs hung from the rafters like streamers. I shared a glance with Kelsey as Dad tossed garbage off the pullout couch. Something was wrong here. \n\n\"I know, I know,\" Dad said, reading our minds, \"the place could use a woman's touch.\" \n\n\"So could you.\" Kelsey said. \n\n\"Nah, I'm done with all that. Finally gave up on the dating scene and decided to try living with just me.\" \n\nI picked up a bottle of lotion from beside the couch. \"I see you've been getting along with yourself splendidly.\" \n\nKelsey sniggered. \"I thought your hands felt remarkably soft.\"\n\n\"I'm sure your mother told you I got laid off at the mill,\" Dad brushed crumbs off the cushions, \"so I've had nothing to keep my calluses thick.\" \n\n\"I think Kelsey was referring to something else.\" \n\n\"Specifically, your nights of passion with Lefty and Righty.\" \n\nDad rolled his eyes. \"You're both very funny. This might surprise you, but men use lotion for more than just their pricks.\"\n\n\"Is that so?\" I extended my foot toward the couch, and stepped on a towel whose corner had been peeking from beneath it. \n\n\"Don't pull that out.\" Dad said. \n\nI grinned. \"Why? Because it's as stiff as a board? Did I just find your girlfriend?\" \n\n\"Do Lefty and Righty know about her?\" Kelsey chimed in. \n\n\"How many of our dead brothers and sisters are on this towel, you murderer?!\" \n\n\"Jesus!\" Dad made a face. \"No, it's covered in bug repellent! You lay a spiked towel under your bed to keep the Brown Recluses away.\" He shook his head, \"I forgot how warped you two were.\" \n\n\"And we've only gotten worse.\" I giggled.\n\nDad opened the linen cabinet, and tossed some sheets onto the couch. \"There, that should keep you guys situated for a while.\" He grunted, stretched, scratched the paunch-belly he was growing, and smacked his lips. \"Hey, you guys wanna shoot some shit?\" He asked, then promptly exited the backdoor. \n\nKelsey exchanged eyes with me. \"Dad's... a little different, huh?\" \n\n\"It's not just me is it? I thought it might be because we changed so much, but he's... well, you're right, he's different.\" \n\nShe chewed on her lip, her perfectly-white teeth indenting the supple pink flesh. \"How should we go about doing this? There's not really a handbook out there on how to seduce your own father.\" \n\n\"He's still just a man.\" I touched her lip with my thumb, unable to resist it, \"And we have a perfect record against the weaker sex.\" \n\nShe flashed her dangerous blue eyes at me. \"Same tactic as always then? I'll be the lead, and you'll be the southpaw.\" \n\n\"The one-two combination that put Tampa Bay on its knees; he doesn't stand a chance.\" I smiled, outlining her perfect mouth, \"Now kiss me, you magnificent bitch.\" \n\nShe pulled me hard against her, and our mouths met, our tongues seeking and wrapping in a practiced slithering dance. I traced her jaw with a trailing finger, smiling as I separated my legs about her leading thigh, rubbing myself against her. We parted with a braid of saliva bridging our mouths, and I twirled it about my finger, and brought it to her parted lips. As she sucked it clean, I brought our brows together, and whispered, \"Go get him, Tiger.\" \n\nRYAN\n\nI always thought of myself as a \"cool\" dad. I guessed every divorced father had to be the cool dad, since we couldn't rightly claim to be the patriarch. It was a fine line to walk, being both a friend and a gentle teacher while maintaining the semblance of authority. It meant that if I wanted to say something about their life choices, then I couldn't say anything about their music choices, media choices or clothing choices. Up until today, I never thought I'd feel the need to. I glanced up at my twin daughters, opened my mouth, then sighed, and closed it. That ship had sailed years ago. Yes, they were women now. They were definitely women. I undid the lock on the safe, and pulled out the lever-action thirty-thirty. \n\n\"Put on your ear protection, ladies.\" \n\n\"You're into guns now?\" Kelsey laughed incredulously, staring out at the dozens of targets I'd set up in the back yard. \n\n\"You're a bleeding-heart liberal.\" Josie said, \"Didn't you once call guns 'dangerous toys for men who never grew up?'\" \n\n\"Well, I guess I got converted.\" I chuckled, loading the gun, \"You can't go ten minutes out here without hearing one of the neighbors shoot their entire paycheck into the woods. You remember Fred Benson by the creek?\" \n\n\"You mean the most fabulous man in the panhandle?\" Kelsey smiled, making an affected wave. \n\n\"That's him. Well, I went over to his house sometime in April, and we got to the topic of guns, and I figured he of all people would be sympathetic to my opinion. You know what he said? 'Ryan, I'd rather be a flag-waving faggot than let those New York commie fucks tell me I can't put led into the sycamore stump.' He took me out back and threw a rifle in my hands, and well, I'll be damned, it's fun!\" \n\n\"So you broke a steadfast principle of yours because it was... fun.\" Josie smirked, exchanging a look with Kelsey as she put on her ear protection. \n\n\"How easily he succumbed to the forbidden temptation.\" Kelsey smirked back, muffing her own ears.\n\n\"You can't fight your surroundings.\" I said, aiming down the sites, \"A man's gotta adapt to his environment. I know a good father would tell you, 'stick to your principles no matter what,' but well...\" I pulled the trigger and cocked the lever in quick succession, sending five rounds down range in a barrage of explosions, \"...your Daddy's a bad, bad man.\" \n\n\"Who just missed every fucking shot.\" Josie tittered. \n\n\"What a bad man you are.\" Kelsey laughed. \n\n\"You think you can do better, little cowgirl?\"\n\nShe stood up, took my Stenson hat from my head, and placed it on her own, casting her face in the shadow of the brim, but her blue eyes still sparkled. \"I reckon I can, little cowboy.\" She smirked. \n\nJOSIE \n\nIt was always a treat to watch Kelsey work. Whereas I played the ditsy party girl, she played the smooth seductress, gently breaking down are victims until they were putty in her hands. She had her platinum hair braided in twin ponytails, a do that might've been cute on a little girl, but was just southern-belle-slutty on a woman. She knew exactly what she was doing when she put that hat on. I eased back into my chair, crossed one thigh over the other, and admired the show from behind my aviator glasses. \n\n\"Now,\" Dad instructed, \"first rule is to always keep the business end aimed away from you.\" \n\n\"So the opposite of what you're used to, Kelsey.\" I laughed. \n\nShe smirked over her shoulder at me, and Dad followed her gaze. He twisted his lips, then continued his instruction. \"When in doubt, keep the weapon pointed at the ground. You have to always, and I mean always assume there's one in the chamber ready to blow up in your face.\"\n\n\"Oh, she always does.\" I sniggered. \n\nDad looked side-eyed at me again. \"Anyway... once you're locked and loaded, raise the barrel like so. Good, now make sure the butt is pressed good and tight against your shoulder, or your gonna shoot higher every shot, not to mention bruise the hell out of yourself. Put this foot forward, and plant on it. You want to lean into the shot, you get?\" \n\n\"Like this?\" Kelsey asked, propping herself against the fence, bending over at the hips, bowing her back so that her too-short skirt hitched up past the bottom crease of her ass. From my mouth-watering angle, I could see clearly that she wasn't wearing any panties. Dad's angle was less revealing, but not by much. The stretch of her back caused her cutoff tank to fan out, exposing the bottoms of her small breasts, the tantalizing arch of her gymnast's body, the domed protrusion of her perfect glutes exaggerated by the anterior tilt of her pelvis. He looked at her with an unreadable expression behind his sunglasses, his jaw twitching. \n\n\"Dad, am I doing it right?\" She queried softly, her support hand running lasciviously down the barrel, stroking it. \n\n\"No, not like that!\" Dad growled, unusually flustered, \"You ain't shootin' pool, you're shooting a rifle!\" \n\n\"But it's such a natural position for her.\" I giggled. \n\nDad shot me an angry look, then turned back to Kelsey. \"Come on, stand up!\" \n\nKelsey straightened lethargically from the hips, the bow in her lower back still very pronounced. \"Like this?\" She asked with a teasing grin. \n\n\"Jesus Christ.\" Dad growled again. Gosh, he was suddenly so impatient! \"This leg,\" he patted Kelsey's thigh, \"goes forward. This leg,\" he patted her other thigh, \"goes back. Brace your core,\" he placed one hand on her naked belly, and the other on her naked lower back, and straightened her out, \"and lean at the waist, not the hips. There, perfect.\" \n\nKelsey aimed down the sites, and shifted her weight back. Her pelvis tilted down, and her ass popped out. Dad grumbled, positioned his hands on her belly and lower back, and straightened her out again. Kelsey adjusted her hat, set her shoulders, then popped her ass out again. Dad grumbled once more, put his hands on her belly and lower back, and straightened her out again. The moment his hands left her, her ass immediately popped out again.\n\n\"Are you fucking with me right now?\" He growled. \n\n\"Sorry Dad, but I've got a gymnast's pelvic tilt.\" Kelsey said, \"Tight hamstrings and weak abductors; I can't help it.\" \n\n\"You need to brace her hips.\" I said. ",
        "Dad grunted. \"You can also shoot from a seated position. I'll just get the stool and-\"\n\n\"Jesus, I'll do it.\" I sighed. I stepped behind Kelsey, and gently traced my fingers around her hips. With a jerk, I pulled her against me, her ass pillowing around my crotch, the heat of her radiating through the thin fabric of our skirts. She grinded into me as she raised the rifle to her shoulder, her breath a little quicker than usual. I molded my front to her back, my breasts flattening against her dorsal muscles, my chin resting on her other shoulder. I brought my lips to her ear, and slid my eyes to the right, watching Dad as I whispered, \"Fire away, cowgirl.\" \n\nBam! The shot reverberated up her arm, down her back, through her hips, and into my groin. Bam! I cried out from the sudden transfer of energy, such power running through us, pulsing into my core with each violent shot! Bam! I yelped again, the sound preceding a trailing giggle. Bam! Bam! Bam! The echo of the last shot sounded through the fields, trailing like thunder into the expanse beyond. In its wake, came our duet of rapt breaths, our bodies molded together, teeming with the exhilaration of it. I wrapped my arms around her waist, my pinkies sneaking beneath her waistband. \n\n\"Did you hit anything?\" I whispered. \n\n\"The bottle, the can, and the pinwheel.\" She said, her voice edging with excitement. She turned to Dad, \"Round two, cowboy?\" \n\nHe stared at us with his mouth agape, his eyes wide behind his sunglasses. His weather-worn face was a tapestry of confusion, the gaunt lines like little shameful messages written at the corners of his eyes and the furrow of his brow. He shook himself from his trance, then cleared his throat, turned on his heel, and stomped to the backdoor. \"We're going into town now!\" He yelled behind him, \"And both of you put on some damn clothes before we go!\"\n\nKelsey looked back at me. \"Your turn, Sis.\"\n\nKELSEY \n\n\"I thought I told you two to put some damn clothes on.\" Dad grumbled.\n\n\"These are our most modest summer outfits.\" I smiled. \n\nDad rolled his eyes. \"I see your mother is doing just a fantastic job.\"\n\n\"How does this place still exist?\" Josie asked, staring up at Rick's Video Rental and Arcade. \n\n\"Time moves slower out in the bayou.\" Dad said, \"New stuff takes longer to get here, old stuff takes longer to die. I thought you girls loved this place?\" \n\n\"When we were ten.\" I laughed. \n\nDad's face fell, his shoulders slumping in a near comical state of dejectedness. I groaned and put an arm around him.\n\n\"So it's a good thing nostalgia is in vogue.\" I smiled.\n\n\"Only nineties kids will get this.\" Josie said with some snark, pointing out a poster of Halo CE. \n\n\"Those damn nineties kids think they have a monopoly on nostalgia.\" I chuckled. \n\n\"For good reason;\" Dad grumbled, \"this country peaked in the nineties. The USSR collapsed, economy was great, America was numero uno and no one could say a damn thing about it. Clinton was a fucking asshole though.\"\n\n\"I thought you loved Clinton?\" I asked. \n\n\"He's why we're in this shit!\" Dad growled, \"I tell ya, if the country's doing good, the president must be shit. That's just how it is. We just cannot let a good thing lie. We always gotta fuck it up. Thank god his wife didn't win, or we'd really be in the shit.\" \n\nI exchanged a look with Josie. \"Are you sure we're talking about America right now?\" \n\n\"What, you think I peaked in the nineties?\"\n\n\"You were twenty instead of forty, had a house instead of a shack, a career instead of unemployment, and a wife instead of your hand.\" Josie giggled. \n\nDad shot a look at her. \"Do you cut yourself with that tongue, missy?\"\n\n\"I've been known to leave quite the gash with it.\" Josie said, her eyes cornering at me in a smile.\n\nDad was oblivious, instead staring at the storefront. \"Man's gotta adapt to his surroundings.\" He muttered, \"Fuckin' relic town with relic people, and I ended up just like all of 'em. Behold,\" he gestured bitterly, \"the zombified nineties. It's right where I belong.\" \n\n\"D'aw, are we throwing a pity party for Dad?\" I giggled, poking his nipple through his shirt. \n\n\"I was once an engineer, but now I drive a tractor. Where did it all go wrong?\" Josie giggled, poking Dad's other nipple, \"Do these make milk, Dad? Because you're acting like a little bitch.\" \n\nDad's face twisted in imminent rage, then burst into laughter. He clapped us heavily on the shoulder, and guided us into the arcade. \"You know,\" he said, still laughing, \"there's just enough of your mother in you kids. An ounce more, and I would'a drowned you both in the kiddie pool years ago.\" \n\n\"I wonder how much of you we have inside us?\" I mused, watching Dad, but eyeing Josie. \n\nShe smirked back. \"We could probably use just a bit more.\" \n\n\"More self-doubt and complacency?\" Dad snorted, \"Yeah, you two definitely need more of-\"\n\n\"Laser tag!\" Josie squealed, \"Oh my god, I forgot they had it! Oh Dad, can-we-can-we-can-we-can-we?!\"\n\n\"Laser tag?\" I laughed, giving her an incredulous brow.\n\nShe responded with an expression that said, 'just trust me on this.' \n\nRYAN \n\nI felt like a fucking idiot with the plastic vest on, but at least it covered up all the chest Josie and Kelsey were showing off. There were five other people in the starting atrium, and the game mode we were playing was 'doubles.' A hefty older couple made up one team, and two Asian men in their thirties made up another. That meant Josie was on my team, and Kelsey was on the team of some high school douchebag who I was currently trying to murder with my eyes. It wasn't working though, since his eyes were fixed on my daughter's ass. \n\n\"Hey,\" he said to her, \"do you go to Jackson Senior High?\"\n\n\"Is that where you go?\" She smiled up at him. \n\n\"Yeah,\" he smiled easily back, \"home of the Rebel Yell. Ya'll from Miami or something?\"\n\n\"Why would you think I'm from Miami?\"\n\n\"You look like a Miami girl.\" \n\n\"Cuban?\" \n\n\"What? No, I mean-\"\n\n\"Is there something wrong with being Cuban?\" \n\nHe recovered with a laugh. \"You're not Cuban.\" \n\nKelsey twisted her lips. \"Neither was Al Pacino, but I challenge you to name a more famous Cuban than Tony Montana.\" \n\n\"Fidel Castro. Wait, what are we even talking about right-\"\n\n\"Hey mang,\" she snapped in her Scarface accent, \"first you get the monay, then you get the powah, then you get the woman.\"\n\n\"What?\"\n\n\"So, lemme ask you this: you got the monay? You got the powah? No?\" She aimed her blaster at him, \"Then say 'ello to my little friend!\" And she pulled the trigger, but since the game hadn't started, nothing happened. All conversations around the atrium had ceased to watch my daughter stare down the flustered boy, and gently poke him in the belly with the barrel of her blaster. \"Bam, you're dead.\" She giggled, \"Bam, you're dead again. C'mon, say something funny! Everyone's watching you! Now's your chance to win me over with your wit and charm!\" \n\nJosie piped in with a British accent. \"Here we see the male Floridian in his natural state.\" She narrated, sounding a bit too much like David Attenborough, \"He's a young buck testing his luck against a fertile female. His approach was perfect, but the female demands a demonstration of social prowess before she lets him into her nest.\" \n\nHe just stood there, smiling and blushing. \n\n\"Magnificent.\" Josie commentated with hushed gravity, \"Truly, a remarkable beast. Despite the pull of a billion years of evolution, this young male has chosen to remain chaste.\" \n\nThere was stifled laughter from all around the atrium, and the boy looked like he wanted to find a hole and die in it. Kelsey softened the blow by giving him a congenial hug, but she'd already neutered him. I felt a measure of relief, and also a swell of pride for my daughters, who a year ago would've run to me for aid in such a situation. \n\n\"ARE YOU READY?\" Came the voice from the speaker, electronic synths playing in the background. The players shuffled around, each pair turning toward one of four entrances that cornered the atrium. \"LASER TAAAAAAAG!\" Roared the voice, and the doors opened. \n\n\"This way!\" Josie shouted gleefully, and pulled me around the corner.\n\nJOSIE \n\nThe arena looked like a retro dance club, with blacklights, neon signs, and blue strobes all interrupting the pervading darkness. There was something about the confines of electric blackness that thrilled me. In a club, people's faces were illuminated in high contrasts of chromatic hues, making them seem almost nonhuman, almost demonic with the flashing lights reflecting off their eyes. It awoke those primal instincts of dancing before the flickering bonfire, where languages died, and only the communication of flame-bathed bodies and infernal gazes mattered. It was intimate, and a girl could be carried away with the smell of hot bodies saturating her sinuses, the rub of flesh from all around, the grasping of hands and the seeking of fingers between her thighs. It was the darkness that kept it all secret, and the darkness that let her lose herself so easily. I just needed to get Dad alone, and let the darkness do the rest.\n\n\"I'll take point.\" I whispered to Dad. \n\n\"I got your six.\" \n\nWe crept through the chamber, peering around barriers, following the tracks of neon lights that pathed the floor. The scoreboard on the wall read, \"6-6-6-6,\" with our pairing being the last six. The scoring was simple: if your team scored a hit, your team got a point; if your team got hit, your team lost a point. If your score was zero, your team was eliminated. Each gun had five shots before a reload, which was a ten-second downtime of holding a button and cursing to yourself while your vest vibrated with confirmed enemy hits. \n\n\"Three o'clock!\" Dad hissed. I turned just in time to see a shadow moving against the far wall. I raised my gun and fired, but he was faster, and I felt two quick buzzes of my vest. He ducked behind an obstacle before Dad could even the score. \n\n\"Shit! I missed. Sorry Josie.\" Dad whispered. \n\n\"No surprise there, cowboy.\" I muttered. \n\n\"I'm no longer sorry.\" \n\nI motioned for Dad to flank the right side of the obstacle while I flanked the left. With eight shots between us, we could eliminate one duo right here and now. But of course, it was a trap. I scanned the periphery, awaiting the inevitable ambusher. I found her, a woman who was hiding behind a threshold of another chamber, her belly giving her away. I motioned to Dad, and he cracked a smile, ducking and sliding into cover to intercept the ambush. I circled around the obstacle, creeping on my socked feet, my barrel leading the way. When I got around the corner, I was a mere two yards away from the man. He was peering around the other side, crouching in a comical display of Call of Duty combat training. I aimed my gun, and squeezed. One, two, three, four; I pulled the trigger until my gun lit up, then dashed away in a fit of giggles, hearing the man shout and fumble out of cover to chase after me. I held down the reload button, and sprinted out to where the woman would be. She came around, her robust face peeled in a wide grimace, and she shouted something between a war cry and a yeehaw before pointing her blaster at me. But the laser muzzle never flashed. Her vest ignited in red LED lights that blinked in triplet rhythms. \n\n\"Oh, darn it!\" She exclaimed, glaring at her partner. \"Ted, you gosh-darn fool! You play all those tactical computer games and you can't even beat a teenager!\"\n\n\"Well Janet, if your muffin-top wasn't hanging out of cover, we might've-\" \n\n\"My muffin-top?!\" \n\n\"Excuse me!\" I giggled, barreling through the quarreling Mormons, and into the next chamber. I dashed behind cover the moment I broke the threshold, my vest vibrating. Dad came in hard next to me, his breathing heavy. \n\n\"I got hit three times!\" He gasped. That brought our score back to six. \n\n\"Did you see where they are?\" I whispered. \n\n\"Two o'clock and ten o'clock.\" Dad gestured with his head, \"It's those Chinese people.\" \n\n\"We're Vietnamese, dumbass.\" \n\nDad grinned at me. \"Do you hear that, Josie? They're Vietnamese.\" He leaned his head back, and yelled, \"My Dad used to napalm you gooks from a mile up!\" \n\n\"Dad!\" I gasped, mortified. \n\n\"Gooks?\" Came laughter from the other side of the barrier, \"It this guy Clint Eastwood or something? Hey bro, your epiphytes need some updating.\" \n\n\"Your village needs some updating. Because my Dad bombed the shit out of it.\" \n\n\"We're South Vietnamese, genius. Our parents were war refugees. There aren't any North Vietnamese war refugees in America because they, you know, kicked the shit out of you.\" \n\n\"Nah man, they kicked the shit out of you. We had the war won, left you fuckers with a bunch of our weapons, and they came in and steamrolled you anyway. Can't save a country that doesn't want to be saved, I guess.\"\n\n\"Revisionist history, man.\" \n\n\"America has never lost a war.\" \n\n\"You lost to Canada!\" \n\n\"When?!\" \n\n\"Eighteen-twelve, you guys tried to invade Canada, and they came in and- oh shit!\" \n\nThere was a shuffle, the sound of lasers effects, and a barrage of curses. I looked up at the scoreboard. \"12-0-0-6,\" it read. \n\n\"Thanks for the assist, Dad.\" Kelsey's bubbly voice came from the other side of the obstacle. \n\n\"Hey, no teaming up!\" One of the Vietnamese men yelled. \n\n\"You were just the enemy of my enemy.\".\n\n\"Bullshit! That's your sister over there.\" \n\n\"All's fair in war, brother.\" Dad jeered, \"Your V.C. Daddy sure knew that.\"\n\n\"Fucking racist asshole. I'm telling the manager about this shit.\" \n\n\"You're in the panhandle, man! The manager will just agree with me!\" Dad laughed as the two men slinked away. \n\nI gave him an incredulous eye. \"So you shoot guns, you hate Clinton, and now you're racist too.\" \n\n\"Oh, I'm not racist.\" He laughed, peering cautiously over the obstacle, \"Anything you say during competition is not a reflection of your character; only your will to win.\" \n\n\"Is that so? You're not even a tiny-bit racist?\"\n\n\"Well...\" he muttered, his eyes scanning, \"...maybe when I'm stuck in traffic.\" \n\nI saw movement out of the corner of my eye. \"Three o'clock!\" I shouted, and turned to fire. The boy ducked behind the corner, and began blindly shooting from behind it, forcing me back down. Just then, I felt three successive vibrations against my back, and turned to see Kelsey rounding the threshold behind us, her muzzle flashing red. I leapt over the obstacle, half dragging my father along the way. We shot over our shoulders as we sprinted down the chamber, scoring two blind hits, but suffering four more. Dad made to rush into the next room, but I shoved him into the adjacent tunnel. I tripped in the process, sprawling out on the floor, my chest plate exposed, only one hit remaining. Kelsey rounded the corner, a killer's gleam in her eyes. She aimed the blaster, then stopped when she saw my face. She looked over her shoulder to where the pounding footsteps of her partner were sounding, then glanced back at me, and nodded toward the tunnel with a smirk. Showtime.\n\nRYAN \n\nThe tunnel was a dead end. Josie scrambled into it after me, hoisting herself over the padded barricade. There was hardly enough room for the both of us, and we pressed together front-to-back, hot and breathing heavily. \n\n\"You're a real genius, you know that?\" I panted, \"How the hell did you get into Puget Sound?\"\n\n\"I claimed disability, obviously. They have a quota to fill.\" She hissed with a mouthful of snark. \n\n\"Being blonde isn't a recognized disability.\"\n\n\"Being your daughter should be.\" \n\n\"I wonder if I could hide a body back here?\" \n\n\"Hey, pussies!\" Kelsey's voice called from outside the tunnel, \"Are you gonna stay in there until the game's over?\"\n\n\"You can always come get us!\" Josie called back. \n\nKelsey's blaster turned around the side of the tunnel, and flashed five consecutive blind shots. We crouched behind the barrier, Josie compacting even harder against me, practically sitting on my lap. \n\n\"Spread your legs, Dad!\" She gasped, \"I can't fucking breathe!\" \n\n\"Maybe we should go out there like Butch Cassidy and the Sundance Kid.\"\n\n\"Or we can wait five minutes for a draw.\" \n\n\"It's just a stupid game.\" \n\n\"All's fair in war, Dad. What happened to your 'will to win?' Now spread your legs before I die!\"\n\nI opened my legs, and Josie molded against me. My breath caught. In the light, my eyes could see that Josie was beautiful, that her curves had filled out, and that she was a woman in every aspect of the word; but they could also see the familiar sparkle in her blue irises, the shape of her chin, the bow of her cheek, and from that, they could identify that she was my daughter, and these features that I knew so well had been hers since I held her to my chest on her first ever day. The darkness took that from me. \n\nIn the darkness, I could not see with my eyes, only feel with my body, and my body had not felt the press of a woman for years. Oh, and what a woman she was. Her athletic back contoured with the lithe rises of muscle and the elegant arch of her spine, her hips fit easily into the spread of my thighs, and her... Don't think about it!... her... She's your fucking daughter, Ryan!... her ass molded like clay into my groin, pillowing against my pelvis to fill every void space there, sinking pliantly against my crotch, her cheeks spreading, nestling my cock so perfectly into her soft crevasse. \n\nBetween the loose fabric of my shorts and boxers, I could feel her burning into me, the tantalizing radiance of her insides permeating from her two openings. She wasn't wearing panties. She angled her pelvis against me, and the delicate puff of her labia squished around me, her heat like molten lust, beckoning me, inviting me. She was sweaty against me, her scent wafting into my nostrils, her floral perfume, and something else; the sweet essence of her femininity, that hormone-rich precursor that whispered gently into my primal mind, coaxing the beast within. \"Take her. She wants it,\" it whispered so convincingly. My ears caught the soft expirations of her breath, each one accompanying a sigh -no, a whimper- something like a plea, but not a plea for help. I gritted my teeth. I wasn't hard, but that was just because the old engine in my loins hadn't been started in a while. It was getting there. It was only a matter of seconds now. \n\n\"Dad?\" Josie whispered back at me, her voice riddled with vulnerability, a plea, a desire, a need so great and so forbidden she could barely speak it. She flexed her glutes against me, and I felt the blood begin to rush to my groin, filling me, no way to stop it, no way to get free! \n\nThe lights came on. Bright fluorescence illuminated the world in painful whites. I stood up, pushing Josie forward with one hand just as my cock began to tent my shorts. My whole body was teeming, but the revelation of light turned those tingles of desire into prickles of horror, and all the blood drained from me, relinquishing my manhood from its steady rise.\n\nA balding Asian man appeared at the entrance of the tunnel. \"Sir?\" He said, \"I'm Rick Tao, the owner of this place. I just received a complaint that you were racist and antagonistic to two other guests. I'll have you know that we have a zero-tolerance policy regarding bigotry and hate speech here at Rick's Video Rental and Arcade. You and your daughters are banned. For life. Now, get the hell off my property before I call the cops.\" \n\nKELSEY\n\n\"...I swear, I almost had him!\" Josie insisted, lathering her pulled pork sandwich with Cubano mustard.\n\nI sighed. \"You know we can't force him into it. If he doesn't want it, he doesn't want it.\"\n\n\"Come on, you see the way he's looking at us!\"",
        "\"Only because we're giving him so much to look at.\" I smirked crookedly, piling on the waffle fries, \"He's still reeling from the change in us. It's like he can't quite connect the women we are with the girls he remembers, but once he does, he'll see us only as his daughters.\" \n\n\"Then we need to do it soon!\" \n\n\"Or what?\" I faced her, \"Josie, he's not like us. When someone draws a line in the sand, you and I are compelled to cross it, but for Dad, that line is a wall.\" \n\n\"We're more like him than Mom.\" \n\nI smiled ruefully. \"Maybe we just want to think that. Yeah, our personalities and senses of humor are the same as his, but deep down, aren't we just as hedonistic and narcissistic as she is?\"\n\n\"No!\" She hissed, \"We're loyal just like he is! Mom isn't loyal to anyone!\" She leaned to me, \"We're loyal to each other, always and forever.\"\n\n\"Always and forever, my love.\" I muttered, pumping the ketchup onto my tray, \"But Josie, I don't think Dad will ever see us the way we see each other, and if we try to make him, we'll push him away.\" \n\n\"Push him away?\" Josie scoffed, \"Can't you see how he's keeping us at a distance? It's not just because he's trying to ignore our advances.\" \n\nI nodded. \"I see it. It's like he's making himself a stranger.\" \n\n\"He thinks this is the last time we'll ever visit him. He's trying to soften the blow.\" \n\nI chewed on my lip, feeling tears creeping at the corners of my eyes. \"He's in really bad shape, isn't he?\"\n\nShe snuck a cautious hand on my hip, a touch that might've looked innocuous to anyone who wasn't watching closely. \"We need to get him out of here, Kelsey.\" She whispered, \"He stayed here for us, and now we're leaving, and he'll have nothing left. He never took another wife, not even another woman. We're all he has, so we need to be his everything.\" She looked squarely at me then, \"We are going to do this.\" \n\nI nodded, sniffling. \"Tonight. No more bullshit.\"\n\nRYAN\n\nI wished I'd gotten that drink earlier today. My head was all kinds of fucked up. Maybe I didn't get enough sleep last night. Maybe my nerves from earlier hadn't left me. Maybe it was early-onset dementia. I kind of hoped it was, then I'd at least have an excuse for thinking... nothing. Thinking nothing at all! I watched Kelsey and Josie from across the barbeque shack. I wasn't the only one. Every male head was turned to see my twin daughters in their short skirts and crop tops, their long legs thickening until the tantalizing smile of each cheek could be seen just below the hem. I tore my eyes away, grinding my teeth. Goddamn it! I thought to myself, and stomped to the tackle shop across the dirt road. \n\n\"Marlboro Reds, Shorts.\" I growled, tossing a wadded ten onto the counter. I picked up the pack, and made it back to our bench as Kelsey and Josie were doing the same, all eyes following them. I hated each man there, and I was afraid it was more due to jealousy than paternal guardianship. \n\n\"You're smoking again?\" Kelsey asked, sitting across from me. \n\n\"You never really stop; you just take long breaks.\" I grumbled, plopping the square between my lips, and lighting it. \n\n\"Cowboy killers?\" Josie mused, picking up my pack as she sat beside me, \"You really went full-bore with this hillbilly thing you're doing.\"\n\n\"Maybe.\" I said, taking a deep inhale, feeling that sweet fire in my lungs. As I exhaled, I immediately felt some of my stress flow out with the thousands of delightful carcinogens, and my shoulders relaxed. That was, until I heard the click of my lighter, and the crackling of tobacco leaf beside me. \n\n\"What the hell are you doing?\" I snapped at Josie. \n\nShe inhaled, cringed, and coughed out a cloud. \"Wow that's harsh!\" She exclaimed. \n\n\"Give me that!\" \n\n\"No need!\" She said, taking a sip of water, \"I just had to pop that lung cherry. God Kelsey, it's nothing like our vape!\" She took another inhale, then plumed it expertly before her lips, and inhaled it through her nose with the ease of much practice, \"It burns!\"\n\n\"I like a little pain with my pleasure.\" Kelsey smiled, sneaking a cigarette from my pack, and lighting it with a spark of her own. She also cringed as she took it into her lungs, but she didn't cough like Josie did. She opened her push pink lips into an oval, and expired a perfect ring that washed over my face. \n\n\"You kids do that vaping shit?\" I grunted, trying to remain composed, \"I guess you think sucking a USB drive is fun, huh?\" \n\n\"Oh, that's not the only thing we like sucking.\" Kelsey giggled, \"What's the other one, Josie?\" \n\n\"Don't even fucking say-\"\n\n\"Drinks!\" Josie exclaimed gleefully, \"Let's have a few rounds!\" \n\nI let out a relieved breath. \"No way am I buying you two booze.\" \n\nKelsey grinned at me. \"And why would we need you, old man?\"\n\nI sneered back. \"Good luck getting the bartender to-\"\n\n\"Waiter,\" Josie grabbed the passing man by his wrist, \"could we get a round for the table? Bourbon... no, I think we'll do rye tonight.\"\n\nThe waiter shifted uneasily. \"Can I see you're license?\" \n\n\"Oh,\" Josie pouted her lips, \"I forgot it in my car. Are you going to make me go all the way there to get it?\" I watched as Josie's thumb began caressing the waiter's wrist, and the man melted like butter for her. \n\nHe looked up at me. \"They're old enough, right mister?\" He asked.\n\nI sighed. \"Apparently.\" \n\n\"Well then,\" he smiled broadly, \"I'll go get ya'll your drinks!\" And he walked away with a little too much swagger in his step. \n\nJosie smirked at me. \"You never go after the bartender, Dad. They're old hats who won't fall for a little tickle. The waiters, however, are young bucks who don't think too much with the head on their shoulders.\" \n\n\"Same goes for bouncers at clubs.\" Kelsey smirked, \"They'll stonewall you until the end of time, but the DJ gets to bring in guests, and you don't even have to wait in line.\" \n\nI shook my head. \"You two are just like your mother; leading men on with empty promises.\" \n\n\"Empty promises?\" Josie giggled, \"Trust me, Dad, we're nothing like Mom.\"\n\nKelsey smirked at her. \"Let's just say, we pay our debts in full.\"\n\nI rolled my eyes. \"You guys have been laying the innuendo like bricks since you got here. I get it, you're sexually active! What do you want from me, huh? Anger? Do you feel like you're missing out on the overbearing dad experience?\" \n\nJosie pondered that with a twisted smile. \"A little, maybe. A good spanking might be nice every once in a while.\" And she reached back, and planted a firm slap on my ass. \"Bad Daddy.\" She winked. \n\nI almost exploded. I was half a second from taking my two daughters by the hair, and dragging them bodily from the restaurant, over to the pier, and dunking them in the Gulf of Mexico. Then I saw that familiar mischievous twinkle in their eyes, and I remembered. I remembered a time two years ago when I'd taken them out boating, and Kelsey pretended the wheel was stuck. Josie had gone along with it, and their performance was so convincing that I nearly grabbed them and threw them overboard before they burst into laughter. Then there was a time three years ago when they'd convinced me that they'd joined the Church of Scientology. They played off each other so well, using the unspoken language of twins to keep the fa\u00e7ade going for far longer than it otherwise would've. Shit, they'd been doing it since they were five, when Kelsey would cover up the little mole by her eye, and they'd insist each time that I'd called them the wrong name. These were my girls; my naughty, misbehaving, little tag-teaming jokesters. A broad smile formed across my face, a palpable relief following it. They were fucking with me. They'd been fucking with me since they got here, and I'd been too blinded by the change in them to notice how much they were still the same. \n\n\"You two,\" I said, taking a deep pull from my square, \"are little cunts, you know that?\"\n\n\"DAD!\" They exclaimed in unison. \n\n\"You had me going!\" I laughed, \"You really did! Bravo, bravo, bravo.\" My laughter turned near to a sob, and my head fell into my hands. \n\n\"Dad?\"\n\n\"I missed it.\" I muttered, \"I missed it all, didn't I?\" \n\n\"What?\" Josie asked, putting her arm around me. \n\n\"Everything.\" I said into my hands. \"Sometime between August thirty-first of last year, and today, you two went off without me and grew up. The clothes, the smoking, the way you talk, the way you... walk around.\" I sighed, \"I look at you two, and I forget you're my baby girls. Just two beautiful strangers with familiar faces.\" \n\n\"Oh, Dad!\" Josie laughed, her little fingers massaging my shoulder, \"Of course we're still your baby girls.\" \n\n\"And we always will be.\" Kelsey smiled affectionately, placing her hand atop mine, \"So quit being such a weirdo around us, and loosen up! Let's have some fun!\" \n\nThe waiter came to the table, and Josie proffered the glasses. \"Drinks!\" \n\nKELSEY \n\n\"...no, no, no!\" Dad pushed me away from the stereo, \"We ain't listening to that electro-quack-candy-dogshit!\" And he pulled my phone out of the port. \n\n\"You mean K-Pop?\" I laughed, stumbling back on drunken feet. We'd all done our share of stumbling on the walk back to his shack, meandering along the dirt road like buoys in rough tide. \n\n\"No Kelsey, it's called 'electro-quack-candy-dogshit.'\" Josie giggled as she sprawled on the couch, \"If you were a true aficionado of K-pop, you would know the subgenres!\" \n\n\"I guess I'm just not as cool as Dad.\" \n\n\"I feel like I'm being made fun of, but I don't know how.\" Dad muttered, fumbling with the record player, \"Josie, can you check the power-strip over there and make sure it's- JESUS CHRIST, PULL YOUR SKIRT DOWN, I CAN SEE YOUR CLAM!\" \n\nJosie burst into drunken laughter, ineffectively pulling the front of her skirt down, only managing to slide her waistband down far enough so that we could see the lines of her pelvis converging. \n\n\"You goddamn animal.\" Dad growled, following the electric cord to the power-strip. \n\n\"Does it look like Mommy's?\" Josie howled. \n\n\"SHUT UP!\" Dad exploded, though there was laughter in his outrage. He stuffed a pillow over Josie's face, and she squealed delightedly, offering a feeble attack with flailing arms. He turned to me, \"Kelsey, can you turn the record player on?\" \n\nI flipped the switch on the old turntable, and the needle dropped on the spinning record. The first three bars of Sweet Home Alabama sounded, and I almost died of laughter. \"Are you fucking kidding me?!\" I managed. \n\n\"What?\" Dad asked, still suffocating Josie, \"It's a classic!\" \n\n\"You went full hillbilly! You're a fucking clich\u00e9!\"\n\nHe gestured grandly to his shack. \"When in Rome.\" \n\nJosie managed to push the pillow off her face. \"Free Bird!\" She yelled. \n\n\"Are we at a music festival?\" I laughed at her. \n\n\"That's not even on this record.\" Dad said, sitting on the cushion before Josie's feet, and lighting up another cigarette. \n\n\"I! Want! Free Bird!\" Josie demanded, scrambling off the couch, and marching across the room. She pulled Skynyrd's self-titled album off the shelf, and swapped the records. The pin dropped, the speakers sounding the pleasant crackle of the needle running the grooves. The lush organ came in with a G chord, then a D, then a somber E Minor. Josie let out a sigh, and spun languorously from the record player, her drunken eyes wandering the room as though she could see the music. Then those sapphire eyes fell on me, and I was transported to that first night when she looked at me like that, the moonlight casting her hair in a silver curtain. She smiled, knowing what I was thinking without having to voice it, my face a book she memorized every letter of, and hers the same. She bowed grandiosely, her cropped tank draping to reveal the swell of her breasts. \"May I have this dance, dearest sister?\" She asked me. \n\nI extended her my hand. \"You may.\" \n\nWe came together, our finger laced, our feet positioned in pattern, our identical smiles curling with a shared secret. I took the lead, running my hand along her waist, resting it on the small of her back, pulling her against me. We stepped in time as the drums kicked in, and the opening guitar played its mournful melody, the sliding notes moving through our limbs, compelling the languid motions of our bodies as we spun gently about the axis of our joined centers. \n\n\"If I leave here tomorrow, would you still remember me?\" Ronnie Van Zant's torpid vocals dripped from the speaker, just words to pass the space between our eyes, for we were lost in the depthless sapphire pools that stared back. \n\n\"For I must be travelling on now, cause there's too many places I got to see.\" My hand rounded the exquisite swell of her ass, the fingertips playing into her crack, the palm sliding beneath to cup her, to bring her leg into a bend so that her inner-thigh overlapped my outer, hiking her skirt to her hip, the heat of her naked lust radiating unfettered against me. With her balance on one foot, and her body beholden to me, I gently dipped her. \n\n\"But if I stayed here with you, girl, things just couldn't be the same.\" She wrapped her leg around me, her hair cascading in a sail beneath her as she descended in an arch, her chin tilted back to gaze upturned at our father, who sat on the couch, watching us with a cigarette burning between his lax, stupefied lips. \n\n\"Cause I'm as free as a bird now...\" I pulled her up to me, and she ascended in a graceful curve, her leg tightening about my waist to bring her torso against mine, our breasts squishing through our tops, the nipples stabbing into each other, rigid with sensation. Her fingers found my face at the end of it, her gaze locking with mine, our lips a whisper apart, opened to taste the other's breath. I could smell her need from the spread of her legs, the sweet tang of it flooding my sinuses, saturating my mind with such carnal thoughts. I was wet at my center, dripping like dew from flowering petals to soak my thighs, my insides opening to receive, a vacancy within me, a hunger that boiled -not a grumble from my belly-, but a moan from my chest, one that I sounded through the slight part of my lips, my tongue following it. \n\n\"And this bird you cannot change! Oh, oh, oh, oh, oh!\" The drums beat louder, a cadence to the pounding in our chests, to the throbbing in our nethers, to the pulse in our temples as we stared from animalistic eyes. The chorus came in, and our mouths came together. \n\nRYAN \n\nJosie rotated against her sister, craning her neck to continue the kiss over her shoulder as she grinded her ass into Kelsey's crotch. Kelsey's hands came around to sneak beneath Josie's top, her wrists tenting the frayed bottom to show me that she was cupping her sister's breasts, her thumbs and forefingers pinching and rolling Josie's pink nipples until they were swollen, and Josie was moaning into her sister's mouth. Their eyes were closed in hedonism, their lips only opening to display the slithering combat of their tongues. The music played, and Josie undulated to it, her nubile body moving with liquid torpidity, her thighs pressing together, forming a crease in her skirt, a dark spot expanding from it. Keeping one breast firmly in her hand, Kelsey's other hand traversed the stretched length of Josie's belly, caressing the soft shadows of muscle, drawing a path down the line of her pelvis. The hand slipped into Josie's skirt, and Josie's eyes flashed open, a muffled exclamation sounding from her occupied mouth. Her eyes stayed wide for a moment, then lidded in acceptance as Kelsey's forearm muscles rolled, her fingers sedating her sister with practiced proficiency. Oh, they were very practiced in this depravity. \n\nMy hand shook as I brought the cigarette to my lips, sucking numbly from a butt that had burned out minutes ago. I was hard. I was harder than I'd ever been. My cock felt like it was going to burst from my inseam, and I wanted to chop the fucking thing off. But I couldn't do a damned thing. I was trapped there, paralyzed between unbelievable arousal and horrible disgust, my body and mind tearing my soul in half. And as I sat there with my mouth hanging agape, Kelsey and Josie opened their eyes, and watched me. They watched me as Josie hooked her thumbs into her waistband, and dropped her skirt to her knees, exposing the slit between her thighs, the tight lips splayed out by Kelsey's penetrating fingers, showing the vivid blush of my daughter's insides, the desire dripping from her like honey. \n\n\"Daddy.\" Josie called, such a needful moan, so rich with vulnerability. She stared at the bulge in my pants and bit her lip, her big blue eyes offering a silent plea. Kelsey watched me over her sister's shoulder, her steely eyes studying my face, using her twin as a barometer for my perversion. \n\n\"Daddy!\" Josie moaned again. In all her life, even when she was a child, she'd never once called me 'Daddy.' Each time she did now, my cock twitched a little more. \n\n\"Daddy,\" she called a third time, her voice straining with the effort to keep herself composed, to stay the fire her sister was fanning with her fingers, \"don't you want me, Daddy?\" She slid her hand up Kelsey's molesting arm, \"I need you to want this!\" \n\nKelsey chuckled lowly. \"Oh, he wants it, dearest sister.\" She drew her eyes down to my crotch, then slowly rose them to capture my gaze once more, \"He wants it so bad.\" She withdrew from her sister's slit, her fingers shining and webbed with lust. She brought her index finger to her mouth, and sucked it clean, then brought her middle finger to Josie's parted lips, and beckoned her to taste herself. She did, watching me through heavily-lidded eyes, moaning as though the mere taste of herself was a pleasure too great to contain. Kelsey planted a loving kiss on her twin's neck, and then they linked fingers, and walked toward me. \n\n\"No.\" I muttered, unable to sound out more than a shaking breath. \n\n\"No... what?\" Kelsey smiled teasingly. \n\n\"No.\" I said again, with even less conviction. They stopped before me, looming like two hellish angels, their features and bodies cast from divinity, but the expressions on their faces were those of the devil, hungry and wanton. Kelsey unlinked her fingers from Josie's, and guided her sister by the top of her head to squat before me. \n\n\"Don't touch me!\" I croaked it out now, my voice breaking in my throat. Josie paused, looking up at Kelsey questioningly. Kelsey reached down, and delicately, oh so carefully, unbuttoned my fly, and unzipped it. My cock shot out, flying from the slit in my boxers, slapping me in the belly, then rising, oscillating like a pendulum before my daughters' captivated eyes. \n\n\"Wow.\" Kelsey whispered. \n\nJosie closed her eyes, leaned forward, and took a deep inhale through her nose. She smiled, biting her lip, opening her eyes to reveal their glassy luster. \"He smells delicious.\" She hissed. \n\nKelsey sat beside me, her elbow propped on the back of the couch, lifting her cutoff top so that the bottoms of her small breasts showed below the flat expanse of her belly, her thick thighs spreading so that her skirt slid to her hips, unveiling the triangle of blonde hair that led to her blushing slit. Her other hand snaked between her legs, and she began to rub herself. \"We're not touching you...\" She cooed teasingly, laughter in her sapphire eyes. Her voice dripped like poisonous honey into my ear; so sweet, so deadly. \n\n\"We're not touching you...\" Josie echoed, pursing her lips to blow gently along the length of my cock. \n\n\"We're not touching you...\" Kelsey whispered, pulling off her top and leaning into me, her heat radiating from her teenage flesh, calling me with the same enticement of her honied voice. \n\n\"We're not touching you...\" Josie whispered, hovering her lips over my cock. ",
        "\"We're not touching you...\" Kesey moaned, her knuckles rolling between her legs, all of her fingers inside. \n\n\"We're not touching you...\" Josie hissed. A cord of saliva descended from her bottom lip, and dripped onto my tip. It pooled about my apex, then slid down my shaft in thick rivulets.\n\nI heard the click of a lighter, and the crackle of burning tobacco. Kelsey had lit one of my cigarettes between her lips, and she took a deep inhale. She hovered over my face, her eyes dancing in my vision, downcast and imperious, and she billowed her smoke into my mouth. \"We're not touching you, Daddy.\"\n\n\"Kelsey...\" I croaked, pleading with my expression. \n\nHer face was merciless, her lush pink lips quirked devilishly around her cigarette. \"You're a big strong man, cowboy.\" She said, \"If you don't want us to touch you, then you can get up. We can't stop you.\" \n\nBut getting up seemed an impossibility. It was like the universe was conspiring to fix me in that spot. My legs were so heavy, my back was so weak, my head was laden from the inside, my thoughts jumbled by drunkenness and arousal. Kelsey took the cigarette from her mouth, the smoke gliding like gaseous molasses from her lips. She moved closer, and closer. I tasted the smoke. I tasted her breath. I tasted her tongue. It slid into my mouth like a curious serpent, testing the confines before finding the bed of my tongue, and slithering atop it. Her lips came after, pliant and soft, wrapping my mouth in her seal. Before I even had time to react, I felt Josie. Wet heat surrounded my cock, the suction of her mouth wrapping me, descending effortlessly down my length, the tongue curling around my underside to taste every inch. My tip broke through the resistance of her throat, and she gagged softly, taking me into the tightest part of her, gracefully accepting me down her neck. Her lips pillowed around my base, and she moaned in satisfaction, swallowing to reward me for allowing myself to be raped. Kelsey's lips curved against mine, and she pulled away to reveal the picture between my legs. \n\nMy baby girl was sucking my cock. Josie stared up at me with those big blue eyes, her muzzle stretched from her face, her cheeks gaunt with her suction, their extravagant hollows only deepening as she began to ascend. She revealed the grotesque meat she had between her pristine lips, my meat, her father's cock marring her stunning portrait like it was desecrating a work of art. It was disturbing beyond my darkest dreams, disgusting beyond my most heinous thoughts, and the most beautiful thing I'd ever seen. \n\n\"Look at that.\" Kelsey gasped, watching Josie suck her way to my head, then plunge once again, encasing me in her soft oral embrace, violating herself with my manhood as she watched me, thanking me with her eyes. \"Do you like sucking Daddy's fat cock?\" Kelsey asked her sister. Josie nodded. Kelsey turned to me, drawing her fingers along my jaw, the cigarette burning between her knuckles. \"Does Daddy want me to suck his fat cock?\" She queried, tilting her head curiously. \n\n\"Fuck you.\" I growled, my voice full of breath. I felt like I was going to vomit. I felt like I was going to come. \n\n\"You want to fuck me?\" She giggled, then put her finger against my lips before I could respond. \"I know you meant it both ways, even if you didn't intend to.\" She brought her lips back into the shell of my ear, and whispered, \"You don't have to fight this. You can just give in to it. There's no shame. It's just us, Daddy. You're safe with us.\" \n\nOh, her voice was a cool oasis in my fevered mind, an angel's whisper to cut through my nightmare and guide me to paradise. It echoed in the annals of my subconscious, melding with the synapses that fed me the sensation in my loins, the tight wet pull of my daughter's lips sensually milking my shaft, her fingers tracing a path along my inner-thighs, converging, gently cradling my balls, rolling them in her soft cool palm. \"We've already crossed the forbidden line.\" Kelsey's whisper seemed to come from inside my head, \"There's no going back now.\" \n\nHer other hand snuck beneath my hat to play through my hair, so gentle as she caressed the roots, tickling my scalp. \"We're your little girls, but we can also be your little sluts.\" She took the Stetson off my head, and put it on her own, smiling at me as the cherry of her square illuminated her face in a hellish glow, her eyes purple, the devil's gleam in them. \"The reason it's so good, is because it's so bad.\" She winked, \"And I thought you were a bad, bad man.\" \n\nIt hit me like a thunderbolt. Energy coursing through my limbs, electrifying me with a beautiful rage. My hands were wrapped around Kelsey's throat a second later, the shock widening her blue eyes, casting away their imperious demonic tint. Then I had the back of her head driven into the couch, her body splayed out over it, her hands clawing desperately for something to grasp. I pulled myself out of Josie, mounted Kelsey's chest, and with her mouth poised open to scream, I shoved my cock down her throat.  \n\n\"Shut the fuck up!\" I growled, my Stenson hat flattening behind her head, my hands gripping her twin pony tails, forcing her against me. \n\nShe glugged her answer, her pitch high and desperate around her gags and gurgles, her pink mouth forming a seal around my bulging meat, her eyes wide above it. I smashed my crotch against her face, relishing the sensation of her choking throat, each pained attempt to dislodge my cock only encompassing me in the succulent squeeze of her neck. There were tender fingers sliding down my arms, a woman's slender body pressing to my back, her chin on my shoulder. \n\n\"That's one way to shut her up.\" Josie chuckled amusedly, witnessing her sister's defilement, \"But you know you just did exactly what she wanted.\" \n\nEven as Josie said it, I saw the change in Kelsey. Every violent thrust obscured her, then revealed her anew, and the portrait she presented showed more of her true nature. Her shock-riddled eyes began to relax, the fervent light behind them dimmed to a lustful smolder, and soon, her muzzle was pulling with my retreats, stretching from her face until her cheeks were gaunt, slurping as through unwilling to relinquish me. And try as I might to make her hurt, the increasing ferocity of my thrusts was no longer answered with gagging screams, but with squelching hums, deep moans roiling from her chest, seeped in satisfaction. She kept her throat tight around me, but her esophageal embrace wasn't an agonized constriction, but a lover's swallow, beckoning me deeper.\n\n\"She's such a masochistic slut.\" Josie giggled, then her voice was husky and low in my ear when she whispered, \"We both are.\" Her hands were on my hips, her pelvis against my ass, thrusting with me, helping me face-fuck her sister, \"There's nothing we won't let you do to us. We love it all, Daddy.\" \n\nI wrenched Kelsey against me by her twin braids, flattening her nose against my crotch, smooshing her lips, plunging my cock into the tightest depths of her throat, giving her all I had. The brim of her hat was folded backward with the force of the motion, revealing those blue eyes, an amused glint shining from them. She reached round me, took two handfuls of my ass, and pulled me against her, moaning around the meat lodged in her throat as though it was a nothing more than a decadent treat for her to savor. She cocked her head, rotating her mouth around me, and with a teasing flick of her tongue, she closed one of those big blue eyes in a wink.\n\n\"Oh, that bratty bitch.\" Josie chuckled, her fingers grazing me around the hips, \"She's challenging you; she doesn't respect your authority.\" She nibbled my earlobe, \"She doesn't respect you as a father.\" She licked my ear, \"She doesn't respect you as a man.\" \n\nKelsey swallowed around me, pulling me deeper into her squelching neck, encasing me in her soft wet heat. \n\n\"But I know her weakness.\" Josie whispered, splaying her fingers about my crotch, pulling me away, \"I know how to make her hurt where she's most vulnerable.\" Inch by inch of my cock was revealed from the pillowing seal of Kelsey's lips, every inch sheened wet. \"Your precious little Kelsey is nothing but a filthy anal whore.\" Josie wrapped her hands around my cock, \"We both like it there, but she's an addict.\" Kelsey's lips stretched from her face as Josie whispered in my ear, \"What kind of a woman prefers to get fucked from where she shits? Not a woman at all, really. Just a little toy you can do whatever you want with.\" \n\nMy cock popped free from Kelsey's lips, curving upward in its aching engorgement. It rested on one side of Kelsey's face, and she smelled the length of its underside, then smiled broadly at me. \"Aren't you proud of your baby girls?\" She giggled musically, \"What a fine job of parenting you did.\" \n\n\"Such insolence...\" Josie moaned, sliding her finger up my length, \"Are you going to let her get away with it?\" \n\n\"Daddy lets us get away with everything.\" Kelsey grinned maleficently up at me. \n\n\"He's just a big softy.\" Josie giggled affectionately, grasping me lightly. \n\n\"He's just a little pussy.\" Kelsey sneered. \n\nMy anger suddenly went very cold. I could tell she saw the change in me. Her teasing smile stayed frozen on her face, but the fear set into her eyes. No, it wasn't fear; not entirely. It was a terrible excitement, something riding the line between terror and exhilaration, like the agonizing anticipation of winding a guitar string with the intention of snapping it, hearing the pitch increase until the panicked shrieks of the tortured string seemed to cut right into your brain. Then, the release. The string broke, and in the wake of all that anxiety, was euphoria. I knew that feeling, because I felt it too. I was feeling it right then. I was going to fuck my daughter in the ass, and there wasn't a damn thing I could do about it. \n\n\"Make her scream, Daddy.\" Josie moaned in my ear, caressing my cock, \"And when she begs you to stop, just keep fucking her.\" \n\n\"Yes.\" I whispered, then grabbed Josie by the hair, threw her bodily on top of her sister, and with nothing more than her and Kelsey's saliva to lubricate me, I drove my cock into her tight little asshole. My thick meat stretched open her muscled ring, turning her pink rim into a tight white circle that hugged my reaming girth until I was buried inside her vile channel, the smooth bore of it clenching around me in the rigidity of pain. Her ass pillowed around my crotch, the cheeks molding around me, the plush fat filling every hollow between us until I was one with her, just like in the arcade. Rolls of her alabaster skin creased her lower back, casting shadows down the exaggerated arch of her spine, it's parabolic rise ending at her head, tilted back to expose the upturned face staring back at me. The shock that lit up her expression was exquisite. Her eyes bulged, her mouth gaped open, and her gaunt cheeks were flushed with the precursor of a scream. It came. High and unbridled, pain and pleasure, horror and joy in kind. I took a grip of her platinum hair so that she was forced to look back at me, and I stared into her eyes as I pulled out, then plunged into my daughter's sweet shithole again, and again, and again. \n\nJOSIE \n\nThe roots of my hair sung alight with pain as he pulled harder with every ferocious thrust, making my eyes water, blurring his snarling visage. My back was thrown into a concave arch, and it felt like he was trying to snap it in two. It might've been a mercy for another woman if he had, for that other woman wouldn't then have to feel the forceful filling of her rectum, the hot piece of meat sodomizing her like it was trying to stab its way into her belly. Good thing I wasn't another woman. The signals shooting up my distorted spine were of terrible pain, but the mind they were filtered through was a corrupt and depraved translator, and the pain was absolutely decadent. \n\nDaddy grinned at me from beneath his brow, his blue eyes sparkling with the same evil that had infected me that fateful night. That kind of evil that reveled in the heinous and perverse, that wanted only to delve deeper. I knew he had it in him. We had to have gotten it from someone. \n\n\"Take it, you fucking slut!\" He growled, pressing down on my lower back, \"Fuck your sister like the depraved trash you are!\" \n\nMy legs opened around Kelsey's, and I felt her slide against the press of our bodies until our crotches were aligned, the familiar heat of her cunt radiating into mine, the wet texture of her delicate flesh smooshing repulsively with every thrust from my father, forcing our slits together. The sappy secretion of our arousal braided between our abused lips, forming bridges of lust that spanned our flushed petals. Her heart fluttered against my breast, her excitement beating in cadence with my own, her breath on my neck, hot and fast, her covetous lips sucking upon the vulnerable bow of my throat. Her clit found mine, the beads throbbing and aching, rubbing together every time Daddy forced his way into my ass. She held my hands behind my back, ensconcing my vulnerability, playing on Daddy's team until he inevitably turned the tables on her. We'd played our fair share of tricks on him today; I guessed it was only fair that he got even. \n\n\"Daddy, stop!\" I screamed, tears running down my cheeks. \n\nHe laughed, the sound void of any love, filled only with a cruelty that made my pussy drip. He pulled harder on my hair, exaggerating the curve of my back, pressing me into Kelsey like an inverted spoon. I hardly noticed. His cock was ruining me. He drove through my sphincters, uncoiling them, flattening their membranous thresholds against my walls and making the nerves shriek with delight upon their forced entrance. He bulged against my vaginal floor, the membrane that separated my sanctity from my shit stretched thin, sending flares of sensation deep into my belly. The terrible pleasure I garnered from it was like a weakness, a lassitude that turned my muscles to jelly, making me relax for him, making me surrender so that he could rape his way into my disgusting hole until it was molded only for him. \n\n\"Daddy, please stop!\" I whimpered again, and the fact that he didn't only made it that much better. Rape me, Daddy. Rape me like you love me.\n\nKELSEY\n\nJosie was plastered against me, her sweaty tight body writhing in the throes of masochistic pleasure, struggling against the bind she was in while relishing her inability to escape it. I forced her arms high on her back, making her shoulders pinch, making her breasts flatten against mine, our nipples stabbing into each other. Dad let go of her hair, and her head flung forward, her entire body springing like a released bowstring. Our lips connected into a rapacious kiss, our mouths devouring, our tongues wriggling to taste, to lick, to lather each other with our flavors until they were one. I could taste her pain, and it was delicious. \n\nDad's callused fingers brushed my hands aside, and in one grip, he held Josie's wrists together behind her back. With my hands now freed, I quickly put them to good use. One wrapped around Josie's throat and squeezed, the other separated the sticking folds of our slits and drove to the wrist inside of her. She screamed like I knew she would, and like I was playing a well-practiced instrument, I raised the pitch of her cry with my constricting digits until her windpipe could only sound a whistle. I admired her face, the way it darkened with blood, the way her eyes bulged, the way her cheeks puffed. Her pretty teenage portrait was turned into a tortured visage of strangulation, and it made her all the more beautiful to me. I grinned beneath an evil brow, and began doing my work inside of her. \n\n\"You like Daddy's fat cock raping your little asshole?\" I whispered. \n\n\"Yes!\" She choked out, nodding fervently. It was hard to tell if she'd done the action on her own, or if it was just the violent bobbing of her head caused by the body-lurching thrusts being dealt to her. \n\n\"Do you like my hand jammed in your slutty little pussy?\" I asked, breathing on her lips.\n\n\"Yes!\" She squealed again, the vessels in her eyes beginning to show through the film of her tears. \n\n\"Do you like it when I do this?\" I whispered covetously, and turned my pinched hand within her. Her eyes rolled back as my knuckles kneaded the wet tender sheath of her, digging so deliciously into her nerve-swathed walls. She contracted with each paternal drive, seizing my hand in a lewd hold of flesh, her womanly muscles rolling against me, her tight entrance sucking gluttonously upon my wrist. My fingers opened around her back wall, and I grabbed my Daddy's cock from inside his daughter. \n\nShe flung back her head, breaking my grip from her throat, and with a roar of delight, she screamed, \"Yes! Yes! Yes! Oh god, yes!\" \n\n\"Mmm, we've never done this before.\" I growled through a heated grimace, drunk with my power over her, \"What an exciting new frontier for us, dearest sister.\" And I began to stroke in contest with my father's drives, wrapping Josie's delicate division around him and squeezing. Her face broke into an expression of sexual wonder, her mouth gaping into a stupid smile, her eyes lolling and wet, seeing nothing, her mind awash in the terrible pleasure, robbing her of her faculties, leaving her as nothing but a vessel to be filled over, and over, and over! Her defenses were broken, her body surrendered, and I would take full advantage of her sweet submission. I undulated against her, driving my hand into her with my hips like it was a cock, fucking her front as Daddy railed relentlessly into her back, pressing her between our heaving forms, forcing her hot body to squelch with the impact of sweat and the wet joining of our filthy parts. \"Yes! Yes! Yes!\" Was all she could scream, a broken record of perversion that sung in cadence with the blistering guitar solo blaring from the speakers. \"And this bird you cannot chay-ya-ya-ya-yange!\" \n\nRYAN \n\nI didn't know who I was anymore. I wasn't even human. Just a beast drunk on booze, adrenaline and testosterone, my vision veiled red with the infernal concoction. I watched my cock drive into my daughter. I watched the way her pelvic floor plunged between her cheeks when I drove deep, then bulged when I pulled, tenting around my pole, her tight rim stretching to suck upon my exit before I plunged in once more. Her cheeks jiggled around me, the alabaster flesh now rosy with our brutal impacts. Her hands were relaxed in my grip, no longer struggling, only twitching sporadically with the spasms that wracked her insides. She was coming. She was coming hard, and with Kelsey's hand wrapped in her cunt and squeezing me like an incestual glove, I didn't have much longer either. I had to delay. I had to prolong this for as long as possible, for I knew that once I released, and the catharsis had left me, that this beast that I was would be gone, and there would only be Ryan there to deal with what I'd done. And I knew he couldn't deal with this shit. \n\n\"Are you going to come for me?\" Kelsey giggled, her eyes cast domineeringly as she tortured her twin from within. \n\n\"Yes! Yes! Yes!\" Josie whimpered, her sweet tones of vulnerability doing nothing for my self-control, coaxing me like the squeaks of prey before the predator I'd become. I blasted into her, impaling her soft innards, growling and grunting, my breath like fire, accelerating with each thrust until poor Josie was nothing but flailing hair and jiggling flesh, squirming in the throes of my merciless assault, squealing, begging, crying out for me to make it worse! \"Make-me-come-make-me-come-make-me-come!\" She sobbed and wailed, her voice rich with desperation, the words streaming from her without breath in her urgency to sound them. ",
        "Kelsey turned her eyes on me, their sapphire depths like teasing pools. She took her sister by the hair, tilted her head, and licked her from collar to cheek. \"Is Daddy going to come?\" She whispered over her sister's shoulder, petting her hair like she was an obedient pup. \"Is Daddy going to come inside his baby girl's tight little shithole?\" \n\nHer grip on me tightened from within, and Josie screamed, her entire body seizing in a paralysis, her toes curling, her fists balling, her back arching so dramatically that I thought she might snap. She stared inverted at me, her eyes glazed and bulging, her pale lips mouthing something she could not say. Her ass closed around me like a vice, sucking me into her from base to tip, her cheeks clamped so tightly that dimples shown on the centers of their globes. I gritted my teeth, closing my eyes to hold back on the sensation threatening to rush into me, every instinct within me screaming to just let go. The tension within Josie snapped, and she lurched forward, convulsing atop Kelsey and exalting incoherently. Kelsey soothed her sister from her orgasm, caressing her down the spine, her delicate fingers traversing the twitching muscles that signaled the chaos beneath Josie's flesh. I pulled out, and Josie's ass stretched with me, unwilling even now to relent my cock without a fight. I popped free to reveal the ruin I'd made of her, the swollen ring that coalesced into an exhausted gape, the flushed petals beneath it sheened with the nectarous expulsion of her orgasm, now out-turning like a blossoming rose to birth Kelsey's exiting hand. Kelsey watched me as she sucked her fingers clean, smiling around each digit. She lovingly lowered her incapacitated sister onto the couch, then slithered atop her, lowered her head, and took my filthy cock all the way into her throat. \n\n\"Mmm...\" She hummed as I stared disbelievingly at her. Her eyes opened half-lidded to show their hedonistic glint, to show that she wasn't sucking my ass-sheened cock to impress me, or to shock me; she was doing it because she loved the taste of it. Her tongue lathered the belly of my cock as her lips pulled around, drawing the tension up my haft until the pressure was bulging from my tip, and I had to grab her by the hair and yank her back before I blew. \n\n\"Delicious.\" She tittered, her eyes sparkling, still writ with challenge even with my fists balled in her blonde mane. She lowered her chin, opened her jaw, and extended her long pink tongue to taste Josie's ass at the source. Josie whimpered defeatedly, her body succumbed to the lassitude of the ecstasy I'd forced into her, too weak to do anything but sound pathetic moans and whimpers as Kelsey circled her abused ring, watching me. She lightly grasped my cock, spread her sister, and guided me slowly back inside her ass. Josie moaned into the couch, managing with what little strength she had to elevate her pelvis, receptive and wanting for more even after the damage I'd caused. I entered her easily, almost no resistance left inside her.\n\n\"Look what you did to your little girl.\" Kelsey hissed, letting a glob of spit trail from her lips to grease my cock. She pried her sister's cheeks apart, revealing the full extent of her sodomy. \"You absolutely ruined her.\" She watched my cock disappear to the base, \"How could you defile your precious little Josie like that?\" She guided my cock back out, then took it into her mouth once more, moaning as she cleaned me from base to tip, before lining me up against Josie's exhausted sphincter, and beckoning me back inside. Josie moaned higher, and Kelsey's reactionary chuckle sounded low and husky. \"But of course, Josie was damaged goods long before you wrecked her, aren't you, babe?\" \n\n\"I'm just a hopeless fucking whore.\" Josie concurred through a blissful moan as Kelsey guided me back out. \n\n\"So I guess you treated her just like she deserves.\" Kelsey snickered, and took me in again, grinning around me while she rotated her lips about my base, her nose squishing into my pelvis, her cheeks puffing, then drawing gaunt as she drew with a lecherous slurp. Again and again, she did this, making me feel the juxtaposition of Josie's vile hot hole, and her own soothing wet mouth, trapping me in a debauched trance of sensation, my mind only focusing on not coming, on staying insane for a few more precious moments. \n\n\"Come for me, Daddy.\" Kelsey whispered. \n\n\"Come inside me!\" Josie begged as I entered her again. \n\n\"Stop holding yourself back. The damage has already been done.\" Kelsey mounted Josie's hips, reached around me, and took two handfuls of my ass. She brought me into Josie, pressing until my crotch was filled with the pillowing warmth. Kelsey's mouth was only a breath away from mine when I finished the thrust, the tang of it filling my nostrils. \"Come inside her, Daddy.\" She hissed, biting her lip, \"Join us.\" \n\nMy hand was around her throat again, but this time, she didn't show the barest hint of fear. Only excitement brimmed her eyes as I squeezed, and she undulated against me, her watering gaze pleading for it. \n\n\"You're just like your mother, you know that?\" I growled, \"Fucking with my head, manipulating me, pulling me around like I'm some dumb fucking dog on a leash!\" I spit into her face, the droplets smattering her purpling complexion, \"And you look just like her.\" \n\n\"And is this how you repaid her?\" Kelsey croaked. \n\n\"It's what I should've done!\" I snarled, \"After everything she took from me! My house, my car, my money, my...\" \n\n\"Your daughters?\" Kelsey squeaked, her windpipe closing, but her face still full of challenge, \"Well, old man, are you going to take them back?\" She grasped my cock firmly, and pulled me out of Josie, \"Show me!\" She hissed, \"Take me!\" And her hands were in my hair, ripping it, pulling our face together so that our eyes nearly touched below our connected brows. \"Or are you just going to let this slip away like everything else?\" \n\n\"You're a vindictive little cunt.\" \n\n\"Hurt me!\" She snarled, \"Hurt me like you should've hurt Mom!\" \n\nKELSEY \n\nDad spun me around like a weighed nothing at all, and before I even had a chance to take a choking breath, my face was stuffed between my sister's cheeks, my mouth meeting her yawning anus. My skirt was hiked up to my hips, my cheeks were forcibly spread, and I felt Dad's organ hot against my anal button, ready to open me, ready to give me what I craved. He didn't. He slid his tip down my taint, pressed it to my slit, and surged into me, reaming my womanly channel, parting my saturated walls and invading me to the cervix. My body surged forward, and I was suffocated with my sister's ass, my nose filled with her scent, my mouth filled with her taste. I tried to catch a desperate breath, but his foot was suddenly on the back of my head, flattening the hat against my crown, pushing me into the stinking suppleness of Josie's crack, giving my mouth only one option. \n\n\"You said it was delicious, Kelsey!\" Dad growled, grinding his heel into the back of my head, \"So eat it all, and don't you dare waste a morsel!\" His hand came down hard on my ass, sending electric pain deep into my nethers, \"Bad girls who waste their food get punished!\" \n\nI squealed in agony and ecstasy, riding that line at life's perfect edge, reveling in his anger, wallowing in my debasement. I wrapped my lips around Josie's swollen rim, and sucked it with a voracity, pushing my tongue into the membranous sphincter before breaking through to taste her at the source. Oh, she was decadent! \n\nDaddy linked my ponytails into his hand and pulled my head in contest with his pushing foot, the roots searing against my scalp, making my eyes water. His other hand came down on my ass, sending another blast pain into me, the tendrils of sensation mingling with the torture of my stuffed channel, harmonizing with the pleasure of my raw nerves singing out every time his cock pressed along them. In and out, in and out; he exited me with each retreat, making my slit close only so that it can be split open again, making me feel his raping entry over, and over, and over, and oh god, it was good! He kept hitting me, slapping in time with his thrusts, harder and harder, faster and faster, using me, trying to break me open! I couldn't breathe, I couldn't see! I could only taste and writhe, caught in a maelstrom of sensations, attempting to escape, attempting to grind harder, attempting to pull away, and attempting to take him deeper! Riding that line for all it was worth, lurching between their bodies, my tongue moving frantically to lather my sister's shithole, to translate just a fraction of my ecstasy into her. \n\nShe pressed back against me, her moans filling my ears, a discordant duet with my father's grunts and growls, the slapping of flesh giving rhythm to what was becoming a crescendo, rising, rising, building, building, frantic with the notes of the music being played from the speakers, the guitars screaming, the drums beating, an auditory chaos of insanity to give voice to our terrible lust! He was fucking me like a jackhammer, beating my cheeks, forcing my head into my sister's ass with his full body weight, angling my pelvis high so that he could drive without resistance. God, he was hitting that spot... that spot that turned my legs to jelly, that turned my insides to mush, that opened me to welcome him deeper so that he could ravage every vulgar inch of me! Oh god, deeper, deeper, deeper, harder, harder, harder, yes, yes, yes! \n\n\"Fuck!\" I heard him growl. His cock was pulsating inside me, the thin-skinned rod radiating with the imminence of release, scorching through me. I was right there with him, my insides wracked with spasms, contracting and convulsing, his cock pushing against the back of my pussy, rubbing those nerves raw, igniting the fire within me. I mindlessly consumed my sister's filth, my eyes rolled back, all thought becoming nothing but the transient messages of flesh and invasions, of pain and pleasure driving through me, taking me, enslaving me! \n\nWith a final roar, he pressed himself to me, driving my face down with his foot, his cock buried all the way, throbbing wildly. He exploded inside me, erupting into my womb, sating my abused inner-flesh with his seed. I came a second later, the pressure building past the critical point, turning me into a trembling bridge about my elbows and knees, my juices saturating my thighs. I could only mouth stupidly around my rectal meal, enduring the great pleasure, frozen in the same paralysis that had taken Josie. Why was it so good? What was wrong with us? But these were questions Josie and I had long ago forsaken the answers to. They were questions our dearest father was undoubtedly about to ask himself. As I felt his nectar soak into my insides, I noticed the way he drooped against me, the way his decelerating breaths began to tremor with realization. Now was the critical moment. \n\nRYAN \n\nOh my god, what have I done? \n\nI stumbled backward, my cock slipping out of Kelsey, leaving her petals to constrict lazily about her yawning glossy slit. She turned back over her shoulder, her expression that of immeasurable satisfaction, none of the challenge left in it. I fell against the arm of the couch, and slid into the cushion, the picture of what I'd done to my daughters searing its way into my brain. Kelsey. Josie. The two answers to the question, 'what do you live for?' and I'd just fucked them both. \n\nBut they said they wanted it, Ryan. Came a teasing voice in my head, Isn't that how every rapist justifies it? They were asking for it. They had it coming.\n\nI didn't rape them! \n\nDid your own daughters seduce you? Are you that weak? But don't answer that, you wouldn't want to face reality now, would you? Like how you turned a blind eye to the obvious problems they were dealing with. Do well-adjusted young women try to fuck their own dad? \n\nI didn't know!\n\nYou knew the moment they stepped out of that truck. The whole day, you knew what they were doing, but you decided to pretend not to. Like children who act out because they don't understand what's happening to them, Kelsey and Josie sought your attention in a way that should've raised every red flag in a father's head, but you're no father. A real father would've recognized their silent screams for help, but you just led them on, got them drunk, and fucked them. No, you raped them. \n\nNo! \n\nYou were supposed to protect them. You were supposed to be their rock. And when they came to you in their time of need, you betrayed them. You were afraid of losing them, Ryan? You just destroyed them. But don't worry, you won't have to face this reality for long. There's a loaded shotgun on the back porch. Do what you should've done years ago.\n\n\"Dad?\" Josie asked. She had Kelsey in her lap, wrapped in an embrace that would've been perfectly sisterly were it not for their nudity. I couldn't meet their gaze. I stared at my trembling hands, watching them blur behind my tears. \n\n\"I'm sorry.\" I whispered. \n\n\"Sorry?\" \n\nI looked up. They were standing over me, their fingers linked. But I dared not look at their faces. Never again. I just needed to stand up and brush past them. Flee from my problems one last time, and eat led for my last meal. \n\n\"Dad?\" Kelsey whispered, and her face was before mine, filling my vision even as I tried to avert it. \"Look at me.\" She said, taking my chin between her thumb and finger, her touch so gentle, but freezing me as though her strength was immeasurable. She crouched until she was level with me. \"There's nothing to be ashamed of.\" \n\n\"We chose this.\" Josie said, crouching alongside her sister, \"It's us, not you.\" \n\n\"We found our love for each other on our own, and we grew it on our own.\" \n\n\"Because you had no one else.\" I hissed, \"I wasn't there for you.\" \n\nJosie smirked. \"Don't give yourself so much credit. Kelsey and I would've ended up fucking each other with or without you.\" \n\n\"We've been together since before we were born. We were never going to leave each other.\" Kelsey smiled fondly at her sister, \"It's tragic, really.\" \n\n\"We're hopelessly codependent.\" Josie giggled, \"We can't even go to the bathroom alone.\" \n\n\"How could we ever be with anyone else? If we hadn't fucked each other, we would've stayed virgins forever.\" \n\n\"And what a waste that would've been.\" Josie crinkled her nose at Kelsey. \n\nKesey traced her sister's lips. \"We soon found out that we weren't like most other girls. After we'd taken each other's virginity, we were eager to try new things. We kept testing our limits, and we realized that we had none.\" \n\n\"We couldn't stop. We were like sexual pioneers with insatiable libido, always seeking the newest depravity.\" \n\n\"But we didn't do it to fill a void, or use it as some emotional crutch.\" \n\n\"We did it because we loved it.\" Josie smiled, \"We're just a couple of sluts, and we're not ashamed of it. Some people say it's wrong, but why is it wrong? Who are we hurting? We only give pleasure and joy.\" \n\n\"It's what we were born for. We can't help it. There's no use fighting your nature.\" \n\n\"We've blossomed into who were supposed to be, and we've never been happier.\"\n\n\"But there was something missing.\" Kelsey said, turning her eyes on me. \n\n\"Or someone.\" Josie said, doing the same. \n\n\"A father who sacrificed everything just to see us a little while each year.\" \n\n\"And made the best little whiles of our lives.\" \n\n\"Even though he only saw us just those little whiles, he knew us better than anyone else.\" \n\n\"We knew he'd understand our love. Not immediately maybe, but in time.\" Josie said, resting her chin on my thigh.\n\n\"But we didn't have much time left.\" Kelsey said, her chin on my other thigh. \n\n\"Not enough to wait for you to accept this love.\" \n\n\"And not enough to convince you to join it.\" \n\nJosie winked at me. \"We had to be a little forceful.\" \n\nKelsey pouted her lips guiltily. \"And a little manipulative.\" \n\n\"We're sorry.\"\n\n\"But not that sorry.\" Kelsey grinned.\n\n\"You were amazing.\" Josie giggled, \"You made me come harder than I ever have. I was left literally speechless.\" \n\n\"Something that was thought to be an impossible feat.\" Kelsey smirked, \"I wouldn't it have believed if I hadn't witnessed it,\" she leaned in, \"or felt it for myself.\" \n\n\"But Kelsey's the anal queen.\" Josie slithered up my side, \"I'm more of a traditionalist myself; call me old-fashioned.\" \n\n\"I'm much more new-age than she.\" Kelsey smiled, slithering up my other side, \"Ass is all the rage with the kids these days. I keep it so clean, Dad. You could eat out of it without a worry. Just ask Josie; it's her nightly dessert.\" \n\n\"It's my favorite meal of the day.\" Josie giggled in my ear, splaying one leg over mine. \n\n\"Would you like to try it?\" Kelsey asked, touching my lips with the tips if her fingers. Despite the perversion of her words, her expression bore no lechery; it was vulnerable and hopeful, exposing her to the core. The question was much more profound than a carnal request. \n\nI gulped, wholly unsure of what to do. If they were still the devils from before, I might've contemplated the shotgun, for their words would've been spoken from the lips of damaged women corrupted by something I should've saved them from. But the wicked seduction had been but a mask of their sexuality, and now the demonic veil was lifted from their faces, and the evil glint was gone from their gaze. These were my angels; perverse and twisted, yes, but undamaged, still joyfully themselves, beautiful and grown. I looked into their eyes, and saw only kindness and desire -a pure desire-, not a one born from brokenness, but from love. I reached up, and brushed Josie's hair behind her ear, and her face lit up, widening into a radiant smile. Kelsey took my other hand, and brought it to her cheek, resting her head upon it, letting my finger play through her hair beneath the hat she wore, my thumb caressing the mole beside her eye. \n\nJosie's lips were on my neck, smacking a tender trail along my throat, my jaw, my chin, then my mouth. I opened it, and tasted her kiss. It was sweet and loving, giving off flavors of submission and gentleness, only the hint of competitiveness in the way her teeth grazed me, but it was only meant to entice. Her little fingers were around my cock once more, and when Kelsey's interlocked with them, I grew hard in their joined hands, harder even than before. I turned my face to taste Kelsey's kiss, and relished the combativeness of it, the threat of dominance if I surrendered to it, but the promise of submission if I won the lustful struggle that she loved to engage in. She sucked my face as her fingers drew up my length, then left my tip when her lips left mine. She smiled easily from beneath her downcast eyes, and she stood, pulling the hem of her skirt up, and turning around to spread herself, showing me the bleached pink center of her ass, the delicious ring enclosing her tight aperture. \n\nJosie crawled atop me, her supple body easing down on mine as she lined up her shot behind her with practiced ease. She gnawed playfully on my chin, and slowly lowered herself. We moaned into each other's mouths as I sank into her wet heat, her tight muscles embracing me in the soft flesh therein, encompassing me to the base where her puffy folds splayed against my crotch, smearing her nectar upon me. \n\n\"That's it.\" She whispered, \"Make love to me, Daddy.\" \n\n\"Taste me, Daddy.\" Kelsey moaned, and descended upon my face. Her pliant cheeks formed around my eyes nose, and her hot little button rested easily on my mouth, pulsing against my lips. I snuck my tongue out, and tested her with a curious lick. She shivered atop me, and her rich flavor filled my mouth, decadent in my state of mind. Josie began to oscillate her hips, stirring herself against my gentle thrusts, making me feel every surface of her insides with each rotation, making me stretch her thin lower lips with my girth. She moaned in my ear as I pried Kelsey's cheeks apart, and slid my tongue inside. ",
        "\"He's in me!\" Kelsey announced, her voice thick with pleasure. Then I felt her rigidity fail atop me, her hands suddenly on my head to catch herself, and I knew that Josie had just filled her other hole.\n\nJOSIE \n\nI grinned up at Kelsey from around my consumption, her delicate folds brushing my muzzle as I opened my lips around her slit, and snaked my tongue inside her. Dad's chin occasionally brushed my own, wet with the rivulets of nectar that oozed from his daughter. His hands were squeezing my ass, molding like clay into the fat, his pinkies teasing my rim, which still gaped from the wonderful abuse he'd dealt it. He wasn't like that now. Now he fucked me like the father he was, kind but firm, holding me against him with his strength so that he could push himself deep inside me. It was so easy for me to become his princess, to moan and whimper, to softly undulate in his embrace, giving him all the power, knowing he would only use it to impale me so gently. He did. Inch after delicious inch was gradually stuffed within me, making me feel the contours of his girth, the texture of him sliding through my receptive walls, stretching me, pushing me in deeper, hitting those spots with the exactness of someone who knew well where they were. \n\n\"Oh, yes...\" Kelsey moaned atop us, one of her hands stabilizing herself atop my head, the other planted on Dad's. She rocked back and forth, grinding on our mouths, indulging in one tongue, then the other, her eyes cast in splendid bliss, her white teeth pressing into her lower lip. I touched tongues with Dad along her back wall, and between that membranous medium, we dragged our tongues upward. I felt the convulsion within her, and I saw it flash up her toned belly, ending with a sudden clench of her jaw, a hiss of air through her biting teeth. Her brows knitted together, and her tones became more desperate, the sing-song moans gaining a rasping edge. \n\nMy own moans were becoming husky and low, filtered through my sister's pussy to gently caress my father's ear. He heard my pleas, and acquiesced, staying the instinctive rotations of my hips with his strong hands, and tenderly forcing me to fuck him, bringing my pelvis down to pierce myself with brutally-slow drives. I wanted him to ratchet into me like a goddamn jackhammer, and though my slurping moans and whimpers roiled from my chest with such ardency, he kept me fixed in the torpid rhythm, sensually destroying me, making me take in everything, making me feel the aching fullness of him inside me, pressing against every surface, burning into the receptive flesh, sating those nerves. \n\n\"Mmm, Daddy! Oh, Josie!\" Kelsey called atop us, her magnificent belly flexing in shadows as she shifted back and forth, her legs dangling off the sides of our faces, made useless with pleasure, only her toes signaling their liveliness as they curled hedonistically. My mouth was inundated with the tang of her pending release, my nose become wet as I dipped my face to touch tongues along her back wall. Her clit was hard and throbbing on the bridge of my nose, engorged from its hood like a little female cock, just the cute head there to signal her rosy arousal. Up and down, up and down; our tongues dragged inside her, each upward motion extended so that I curled my tongue up to run along that ribbed spot on her ceiling. The motions had become automatic to me, for my mind was singularly focused on the feeling within my nethers, the slow-build of pressure that precluded the wave, and it was growing, and growing, quaking within me, spreading slowly outward to torture me with an ecstasy too great to contend with. \n\n\"Daddy!\" I sobbed, not knowing for what I begged, only assigning blame to the person who was doing this to me, ruining me, turning my body to mush, oh god, how?! Up and down, up and down; our pelvises connected, and separated, cords of my nectar stringing from my folds, wrought from the pool that oozed upon his crotch, my juices squelching from me with each tortuous plunge inside me. His pinky fingers were in my ass, hooking and spreading me, mingling a heinous pleasure with my euphoric violation. I breathed heavily against Kelsey's slit, my lolling tongue barely doing its duty inside her, my entire body tensing as the feeling built and built! I wanted him to fuck me like an animal, to turn me inside out and end this beautiful hell he'd trapped me in, but all I could do was call his name, moving with the lethargic grace of our dance, building, building, building the ecstasy until I was weeping! \"Daddy, Daddy, Daddy, Daddy, Daddy...\" \n\nKELSEY \n\nI took a grip of Josie's hair and wrenched her head back to see the rapturous look in her glistening eyes, her pupils dilated and glazed, her mouth stuck in repetition once again. \n\n\"Daddy, Daddy, Daddy, Daddy!\" She sounded mindlessly, her body taut like a bowstring, shaking as she endured the prolonged movements our father, every purposeful joining of their bodies dragging out her turmoil, leaving her pathetically weeping his name.  \n\n\"There, there...\" I whispered lovingly, wiping away a tear with one hand as I pulled her hair with the other, giving her the pain she needed, the domination she craved. At the precipice of her sensation, when her body was wracked with convulsions, when her shoulders were pinning back as though to expel the euphoria from her breast, I drove her face back between my legs, and forced her to finish her meal. Oh, she did. The breaking orgasmic waves within her turned her tongue into a writhing, slithering member, coating my insides, touching tips with Daddy from the other, squishing my division and sending jolts of pleasure deep into my nethers and bowels. It tickled nearly as much as it pleased, and I was caught between fits of giggles and domineering lust, struggling to maintain my imperial character as the bubbly girl within me delighted in the squirming sensation. Josie had long lost her struggle, and now her eyes were rolled back, her body bucking within the restricting confines of her father's arms, expelling her orgasm with same sluggish ecstasy that had summoned it. \n\n\"Oh my god!\" She panted when I pulled her away, strings of my fluid bridging her lips. She attempted to dismount, but her quivering legs failed her almost immediately, and I had to push the bitch off to get my turn on the ride.\n\n\"Be nice to your sister.\" Dad scolded through a smile, his lips wet with what had dribbled down my taint. I kissed him to taste myself, and was momentarily lost in his devouring mouth, my dominant persona melting away. It was so very hard to be that woman when I was kissing my father. The daughter in me pined to submit, and it took all my will to tear myself away from the kiss. I needed to show him the woman I could be. \n\nI squatted over him, my skirt hitching up my thighs to reveal what was going on beneath. I grasped his cock, the entire length of it slick with Josie's nectar, and I watched him from my imperious gaze as I centered him against my favorite hole. My rim twitched anticipatorily, the hunger in my vile channel aching, the walls within parting in readiness. I leaned forward to anchor my weight on his chest, and keeping our gazes locked, I slowly impaled myself on him. Oh, it was too good. He entered me so easily, his impressive girth stretching me to the exquisite precipice of pain, his length sliding into my rectum, nestling itself into my disgusting moist depths. \n\n\"Goddamn it!\" He growled, his jaw twitching. \n\n\"Do you like my tight little asshole?\" I grinned at him, but my smile was twitching too, barely holding together. I gasped when my weight pillowed around his crotch, compressing to comfortably nestle every bulging inch of him inside me. I rubbed my pussy sensually, the blushing folds leaking my arousal down my taint to pool around the column of his cock. Josie crawled beside Dad, a look of immeasurable bliss upon her disheveled complexion. \n\n\"Should I get your toys, Domina?\" She asked. \n\n\"No.\"\n\n\"Domina?\" Dad asked. \n\n\"Josie, don't.\" I gave her a dark look. \n\n\"It's her alter-ego.\" Josie giggled, \"You saw a little of her earlier, but she pulled it back once you started getting... angry.\" She looked mischievously at me, \"She's been Domina with me, but she just can't do it with a man.\"\n\n\"Why not?\" \n\nI moaned as I slid up his length, my ring stretching from my body, dragging behind to savor the contours of his girth. \"It's so hard for me to be dominant when I'm being penetrated.\" I gritted my teeth, and slowly lowered myself once more, \"The power dynamic doesn't...\" the thought trailed away from me as his cock found new depth. \n\nJosie tittered. \"She always turns into a little slut once there's a dick inside her.\"\n\nI smiled ruefully, moaning my words. \"I'm hopeless.\" \n\nDad sat up, and pulled me into an embrace. The hug was so paternal that I almost forgot his cock was seven inches up my ass. \"You just need some confidence,\" he said into my ear, \"and you can be whatever you want to be.\" \n\n\"Thanks Dad.\" I sniffed, \"Every aspiring dominatrix needs a pep-talk from her father.\" \n\n\"Don't be embarrassed.\" He beamed at me when he pulled away, \"I'm just happy you didn't grow all the way up without me.\" \n\n\"Come on, Kelsey!\" Josie said, pulling my bag of goodies out from beneath the couch, \"It'll be just like when you did you rehearsals for Dad when you nervous about being Juliet in the third grade play.\" She grinned deviously at me, \"Now get in character.\" \n\nRYAN \n\nMy hands were cuffed behind my back, thoroughly incapacitating me. Kelsey pulled the brim of her hat over her face, and took a steeling breath. When she raised her head again, her eyes were shadowed beneath the brim, glinting with the malevolence I saw in them earlier. It had terrified me before, when I was reeling from the shock of the revelation, and I didn't recognize the demon wearing my daughter's face. Now I saw her, my Kelsey, a woman still trying to find her sexual identity. She dawned a pair of black leather gloves that went past her elbows, and stroked her assistant's blonde hair. \n\n\"You're not allowed to come until I say so.\" She said to me, taking the chain from Josie's outstretched hand, \"When you speak to me, you will call me 'Domina.'\" She opened the sharp little clamps at the end of the chain, and placed them on my nipples. I hissed, feeling the thin metal press into my flesh. She smirked crookedly at me, letting the links cascade from her gloved hand until she grasped the loop at the end. She tugged sharply, and I thrusted into her out of reflex. Her eyes fluttered, her smile faltering to part her lush lips, her character nearly breaking. But she recovered quickly, repositioning her squatting stance so that I was buried comfortably inside her tight sinful hole. \n\n\"When I tell you to do something, you will do it without hesitation, or your will be punished.\" Kelsey continued, \"And when I punish you, you will thank me for it, or you will be punished more severely.\" \n\n\"Safe-word!\" Josie whispered. \n\n\"Shit, that's right.\" Kelsey mumbled, then looked back at me, \"If you think your punishment is too severe, you may broach my mercy with the name... Lynyrd Skynyrd. Now,\" she pulled on the chain, slowly ratcheting the tension, \"shall we begin?\" \n\n\"Yes, Domina.\" \n\nShe smirked crookedly, and stroked my cheek with the back of her hand. \"Almost, Pet, but I wasn't asking for your permission.\" She pulled a little harder, and I groaned. She looked down at me, her chin tilted upward, her face swimming with megalomania. \"I wanted to hear you beg.\"\n\n\"Please!\" \n\nShe smacked me with the back of her hand. \"Please...?\" She inquired, soothing my anger with a sudden clench of her anal muscles, her rim sucking around my base, drawing on the aching length of my shaft. She inhaled sharply when she did it, some of her discipline backfiring, but she kept her composure admirably. \n\n\"Please, Domina.\" I gasped. \n\nShe tugged on the chain, and I cried out. \"You're supposed to thank me for punishing you, Pet!\" \n\n\"Grrr, thank you, Domina!\" I growled, my cock curving backward inside my daughter, her tight insides pliantly filling the spaces within her, squeezing me. \n\n\"Very good.\" She purred, trailing her gloved fingertips down my chest, gentle and threatening. \"Josie,\" she said without looking, \"give me my enticer.\" \n\nJosie giggled, and produced a chrome utensil that shaped like a ribbed tube with a hooked end. I didn't have intuit where it would be going. 'Lynyrd Skynyrd' was poised on the tip of my tongue, but I stopped myself from sounding it. I couldn't let Kelsey down. \n\n\"I bought this just for you, Pet.\" Kelsey soliloquized as she prompted Josie to suck it, \"I tried it myself, as I was deathly curious, but it wasn't made for women.\" She pulled the enticer from Josie's lips, and smiled down at me, \"It was made for good boys like you. Have you dabbled?\" \n\n\"No, Domina.\" \n\n\"Wonderful,\" She beamed, easing herself back, reaching behind us both, \"what a fantastic father-daughter moment this will be for us.\" \n\nJosie slid between my legs, and pried me open with her little thumbs. I gasped when I felt her tongue slide through me, and heard her girlish giggle of delight. Then I felt it, the cold dull point of Kelsey's instrument pressing against my hot button, the pressure mounting, my floor indenting further and further, then suddenly snapping back. She broke through. I hissed, trying to keep myself relaxed as the cold smooth tool broke through my hot insides, the ribs along its length making me open and close repeatedly, torturing my entrance, pressing in a myriad of pressure points against my channel until it rubbed against... something. \n\n\"I see I've found what I'm looking for.\" Kelsey chuckled, watching my expression. She dragged the hooked end against my anal organ, and I surged upward in a violent reflex, carrying Kelsey into the air. She cried out, her body nearly failing atop me, her equanimity nearly melting. I saw flashes of the submissive side of her, her wilting eyes and gaping mouth advertising a profound desire to be taken and ravaged. But once again, she recovered, overcoming that side of her, surmounting her weakness. She compelled me back down with a twisting motion of her fingers, the pleasure within me enticing a vulnerable form of lust, one that could only be fully enjoyed through submission. I relaxed back into the cushions, moaning as she gently pushed and pulled her instrument, running those ribbed edges through my sphincters. \n\n\"You like it here, don't you, Pet?\" Kelsey whispered, her face flushed. \n\n\"Yes, Domina!\"\n\n\"The apple doesn't fall far from the tree.\" Josie sniggered, \"Hey Dad, are you sure you didn't pay Fabulous Freddy a late-night visit when we weren't around?\" \n\n\"Mmm, you get so hard every time I twist this.\" Kelsey moaned, gently screwing my insides, slowly ratcheting the growing pleasure therein, \"Tell me you're a pathetic anal whore.\" \n\n\"I'm a pathetic anal whore, Domina.\" \n\nShe grinned, \"Tell me you're a little sissy boy.\" \n\n\"What the fuck's a sissy?\"\n\nKelsey twisted the chains around her wrist, pulling my nipples taut, the clamps biting. I thrusted wildly, plunging into Kelsey over and over as I screamed, \"I'm a little sissy boy, Domina!\" \n\nKelsey barely contained herself, her neck standing with tendons as she gritted her teeth to suppress the scream that bubbled in her throat. Her pussy was left unattended, but even so, it opened on its own accord, the blushing petals unfurling to release the rivulets of terrible arousal down her taint. I could smell the nectarous mixture, rich with her hormones, her body teeming with readiness, balancing precariously on the line of sanity. She eased herself back down, her eyes wild, her entire face rosy. \n\n\"I'm close.\" She breathed, \"So very close.\" She undulated sensually, her flat belly flexing in waves of shadow, her ass stirring around me, the smooth texture of her vile walls ensconcing me deep within. I wasn't fucking her ass; her ass was consuming me. \n\n\"Goddamn it!\" I gritted, trying with everything I had to hold back on the surging in my loins. \n\n\"You're not allowed to come, Pet.\" Kelsey groaned, \"You can't come until I say you can.\" She lifted her skirt, and began petting her pussy, her fingers becoming wet around the chain looping her hand. \"You like this pretty little pussy?\" She giggled, \"Well it's not for you, Pet. You don't deserve it. You only get to please me from where I shit!\" She wound the chain around her hand, looming over me as I sputtered and whined, her other hand methodically moving the enticer in and out of me, opening and closing me, hitting that spot, ruining me. \"That's it, Pet.\" She whispered, \"Beg and cry for me.\" She turned to Josie. \"Give me a cigarette.\" \n\nJosie dutifully pulled a square from the pack, placed it between Kelsey's lips, and lit it. I could see her hand was shaking was she struck the Bic, and Kelsey's lips were quivering when she sucked in smoke. I was shaking too, my nerves electrified, my body fatigued, my mind a chaos of flesh, fear, pain and pleasure. Kelsey dropped the nipple chain, and took the cigarette between her fingers, blowing out a cloud that rose to the ceiling to join the white haze above us. \n\n\"I want to hear you say it, Pet.\" She whispered, upending the square, the orange embers glowing toward my chest, the heat teasing my flesh, dry and searing. \"Say it.\" She hissed, her eyes alight with the flame, dancing wildly, \"Lynyrd Skynyrd, Lynyrd Skynyrd; just say it for me.\" \n\nI don't know why I kept my jaw locked. Maybe it was because my entire body was teeming, my flesh no longer differentiating between punishment and reward, agony and ecstasy, the receptors of each so entwined in my masochistic splendor that I just wanted something to fucking hurt. \n\n\"Say it...\" She hissed, clenching her anal muscles, coiling her filthy moist insides around my cock, squeezing it, milking it.\n\n\"No, Domina.\" I whispered back. \n\nShe grinned. I felt the heat first, then the pain. She pushed the square out onto my chest, and twisted it, charring the spot, a tendril of blue smoke rising with my growl of pure delight. The cuffs that held me were cheap things, and they snapped when I jerked, and pulled Kelsey against me. She might've objected, but whatever last words her Domina personality had were lost in her shriek of delight when I began thrusting into her favorite hole. Her hands left their positions, but Josie was there to fulfill those duties, grasping the enticer and thrusting it into me, moving to the violent cadence of my drives, the smooth metal doing such wonderful damage inside me. \n\n\"Oh-fuck-oh-fuck-oh-fuck!\" Kelsey sobbed into my chest, heaving backward to take me into her, squeezing as she pulled, her anal sheath still clinging to me even as I pulled out, then bunching back inside when I plunged. The rod inside me hammered against my prostate, turning the organ into a churning mess, the felicitous electricity firing into my loins, up my spine, through my synapses to send me into overdrive. \n\n\"I'm coming! Oh my god, I'm coming!\" Kelsey whined, clawing at my shoulders, hunching and bucking in the throes of her ecstasy. I was right there with her, fucking with wanton abandon, my mind gone, my loins surging from within, the feeling building, boiling, rumbling in my balls, lancing up my shaft and exploding out of my cock! I roared in harmony with Kelsey's ecstatic cry, my limbs locking, my entire body seemingly being pumped out of my tip to sate my daughter's wanting asshole. She held me fast inside her clenching heat, shuddering sporadically, breathing in gasps, then collapsing atop me. \n\nFor a moment, I only heard our breathing. I pulled off her hat, and pet her matted hair, pushing it from her forehead. Josie gently took her sister by the hips, and pulled her off me, my cock popping free, a pool of my seed spilling from her gaping anus to mingle with the reservoir of feminine nectar that had formed on my crotch. They moved like lazy serpents upon my thighs, and they looked at me with eyes full of love, with smiles as beautifully slutty as the most debased of whores. The cleaned me with their tongues, sliding up and down either side of me, then taking their turns to suck me, watching me from top-lidded gazes as they slurped and moaned. Kelsey took the toy out of my ass, and used her fingers to please me, the she grinned that wicked Domina grin, and put her mouth down there instead. My balls bridged her nose as her tongue did its work, her lips sucking and rotating as Josie's did the same. I came a third and final time, the expulsion void of pressure, oozing out of me and into Josie's mouth like lava. She drank it gluttonously, then shared the meal with Kelsey, passing it back and forth between their smiling mouths, looking nearly like a carnal reflection, but I could see their differences in stark contrast. ",
        "They rested into the crooks of my arms, their heads on my chest, their exhausted little bodies nestling comfortably. \n\n\"You need to get some sleep, Dad.\" Josie said, \"We have to drive to Jacksonville tomorrow.\" \n\n\"What?\" \n\n\"To go to the airport.\" Kelsey groaned, \"We've got an eleven-thirty flight to O'Hare, then a two-hour layover before we get to SeaTac.\" \n\n\"What?!\" \n\nJosie sighed, ruffled through her backpack with one hand, then slapped the boarding pass on my chest. \"Eleven-thirty to O'Hare, four-thirty to SeaTac.\" She said. \n\n\"We need to prove permanent residence within thirty days of welcome week, or the University will make us live in the dorms.\" \n\n\"And you can't live in the dorms, Dad.\" Josie giggled. \n\nI gawked at them. \"You want me to move to Washington?\" \n\n\"Someone needs to pay rent.\" Kelsey grinned up at me, \"We already put two-thousand down for the security deposit.\" \n\n\"And we have enough squirreled away to pay for six months.\" Josie reassured me. \n\n\"How?\" \n\nKelsey pouted her lips guiltily. \"I might've sucked my step-dad's dick.\" \n\n\"And I might've taken a picture of it happening.\" Josie confessed. \n\n\"And we might've blackmailed him for ten-thousand dollars.\" \n\n\"WHAT?!\" \n\nJosie tittered. \"It sure as shit was a lot less than he'd have to pay in alimony if Mom's lawyer got ahold of the pictures.\" \n\n\"I mean what the hell is going on?!\" \n\n\"Well, Dad.\" Kelsey said, drawing a circle around the place she'd burned me, \"We couldn't move all the way across the country and leave you here in butt-fuck nowhere with no one but Fabulous Freddy to keep your bed warm.\"\n\n\"It was a bit of a gamble putting everything on one night.\" Josie said. \n\n\"But we figured you'd come around with the right kind of encouragement.\" Kelsey smiled. \n\n\"It's all that confidence you instilled in us.\" \n\n\"After everything you've done for us...\"\n\n\"...did you really think we were just going to spend one last summer with you and leave you here forever?\" Josie giggled. \n\n\"Yes.\" I muttered. There were tears in my eyes, but my arms were trapped beneath the bodies of my daughters, and so I was resigned to letting them fall. \n\nKelsey wiped one away with her thumb, and drew her fingers through my hair. \"You're the only man in our lives worth a damn, Dad, and the only one we could possibly share in this love with.\" \n\n\"How could we ever have boyfriends or husbands?\" Josie said, stroking my belly with the back of her hand, \"What Kelsey and I have is far too deep and far too old to break. We were with each other since before we were born.\" \n\n\"But you were with us for even longer.\" Kelsey whispered. \n\n\"We used to live in your balls.\" Josie giggled, and lightly grasped my nuts, rolling them in her cool palm. \"Hello, brothers and sisters,\" she said through fits of mirth, \"sorry for eating so many of you!\" \n\n\"It's their fault for being so delicious.\" Kelsey giggled back. \n\n\"We're cannibals!\" \n\n\"But the protein, Sister! Think of the protein! Gains for days.\" \n\n\"Then at least their sacrifice was not in vain.\" Josie sighed, \"They will live in my biceps forever.\" \n\n\"You two are so fucking warped.\" I laughed, blinking my tears away. \n\n\"Pot, meet kettle; kettle, pot.\" Josie smirked, \"You sir, are every-bit as fucked up as we are.\" \n\n\"Where do you think we got it from?\" Kelsey snickered. \n\nThe record finally died after the closing bars of 'Mississippi Kid,' leaving only the crackle of the needle running through the dead grooves before the center. \n\n\"I guess you really did go full redneck, huh?\" Josie chuckled at me. \n\n\"When in Rome, do as the Romans do.\" Kelsey said. \n\n\"And when in the panhandle, fuck your dad.\" Josie finished. \n\n\"So, Dad?\" Kelsey asked, \"Are you coming with us?\" \n\n\"Of course I am!\" I exclaimed. \n\nKelsey and Josie gave an exhausted display of celebration, but I could tell by the radiance of their expressions that they were more than delighted. They snuggled into me, their fingers interlocked across my belly, and they spoke to me of all the wonderful things we'd do in Washington. Their words slurred by the minute, and soon there were only snores and whistles coming from them, joining the nighttime symphony of the clock ticking away, the record needle running the grooves, the crickets chirping their lonely song, and the free birds calling in the bayou. \n\nEpilogue\n\nDAVE \n\nI cleaned the whisky glass for the third time, and sighed. I didn't know why I opened the joint so early. Drunks didn't wake up at nine in the morning on a Sunday, and football wasn't for another month. But I was a creature of habit, and if I didn't keep a rigid schedule, it would feel like my life was thrown into chaos. Free time was an enemy of mine. I didn't know how Ryan fucking did it; being unemployed for months sounded like hell to me. No wonder he came in here every day to drink away his severance package. \n\n\"But not today.\" I said to my reflection in the glass, and sighed again. \"You did a good thing, Dave. Fuck if I miss the company, but you did a good thing.\" \n\nAs if God was mocking me, the door rang, and in walked Ryan Brees. \n\n\"I told you, you're money's no good here until after-\" and my voice caught when I saw the two beautiful blondes strolling behind him, wearing fishnet stockings, jeans cut into panties, and tops that would better be described as 'nipple covers.' \n\n\"I just need one for the road, Dave.\" He smiled, looking ten years younger, \"I got a flight to catch, and I get terrible flight anxiety.\" \n\n\"Rye on the rocks, if you don't mind.\" Said one identical twin on Ryan's right side. \n\n\"Bourbon for me, if you please.\" Said the one on the left, a mole beside her eye the only thing distinguishing her from her sister. \n\nI cleared my throat. \"Er... Ryan, are these your daughters?\" \n\n\"Josie and Kelsey,\" Ryan gestured to one, then the other, \"this is Dave, the owner of this fine establishment.\" \n\n\"A pleasure to meet you.\" Josie smiled with her brows up. \n\n\"A pleasure indeed.\" Kelsey grinned with her brows down. \n\nI swallowed. \"Ryan, you know they can't drink here until they're twenty-one.\" \n\n\"Who says we're not?\" Josie tittered. \n\n\"My eyes,\" I replied, \"and your dad told me yesterday how old you are.\" \n\nI felt delicate fingers sliding over the back of my hand, and up my arm. \"I'm twenty-one, Dave, I swear. I just left my driver's license in the car. Are you going to make me go get it?\" \n\nI snorted. \"Do you think I was born yesterday? Do I look like a goddamn waiter to you?\" \n\nRyan laughed. \"I told you, Kelsey. Your tricks won't work on Dave.\" \n\n\"Who said anything about tricks?\" Kelsey smirked, and in a feat of athleticism, she was over the bar. A second later, her mouth was sucking my lips, her tongue was slithering through, her tight body molding to mine as her hands dove into my pants and grasped what was becoming very, very hard. I was only human. The state liquor licensure of Calhoun County could fuck himself with a goddamn brick. I grabbed a handful of teenage ass, propped a bottle of rye and bourbon onto the counter, and carried the woman sucking my face into the back room. Before I shut the door behind me, I caught the sight of Josie propped on the bar, her head thrown extravagantly back as she poured rye down her breasts so that Ryan could drink it from her navel. \n\n\"Your family's kind of fucked up, huh Kelsey?\" I grunted, undoing my belt. \n\nShe whipped my belt out of the loops, wrapped it around my neck, and pressed me against the wall. \"You have no idea,\" she grinned, her sapphire eyes wild, \"and from now on, you're going to call me, 'Domina.'\" \n\nAUTHOR'S NOTE \n\nThank you for reading Free Birds in the Bayou. I haven't written a standalone piece in a long time, and it's been even longer since I've written outside the fantasy genre. This story was inspired by a pair of twins I met at a hostel. They were delightful women, bubbly and impish, and talking with them was like being a conversational tennis ball between their rackets. I'm sorry to say that they were both very married, (and not to each other) but their relationship, if not sexual, was still so emotionally intimate that it struck a chord with me. Five years later, I decided to horrifically corrupt that beautiful relationship and turn it into filthy smut that I hope you all enjoyed very much. Abbey and Eleanor, if for whatever reason you're reading this, I am so, so sorry. But not really. \n\nE.L. Whitewall"
    ],
    "authorname": "White_Walls",
    "tags": [
        "coercion",
        "father daughter incest",
        "father daughter sex",
        "older man",
        "teens",
        "threesome",
        "twin sisters",
        "younger woman",
        "two women one man"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/free-birds-in-the-bayou"
}