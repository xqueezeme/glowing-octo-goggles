{
    "title": "Loosening Up Bk. 09 Ch. 21-25",
    "pages": [
        "<center>Chapter 21 -- Prep and Travel</center>\n\nWord quickly got around the Circle to those outside the security committee and their families that the place was on some kind of security threat. We were using more and more of the human resources for guard duty and as back-up snipers. There was some concern, but the impetus for the concern was never fully revealed. Those who had known Dev had their suspicions but would never mention his or his family's names again.\n\nDave and several committee members took a lesson from the novel 'Wag The Dog', and added in the misinformation that because of the reality TV series, the Circle and various people in it, were receiving hate mail that threatened them with bodily harm and death. The Circle had decided to treat the threats as real, and was reacting accordingly. While this was true to some extent, that was not the primary motivating force for the security increase. People we admonished not to talk about the threats in the presence of the cameras lest they tempt fate more than the Circle already had with the TV show.\n\nThe round-the-clock staffing at the gate by Circle members continued into May, however, no one showed up that acted the least bit suspicious or looking like they might be connected to the Colombian cartel.\n\nOn average there was at least one car a day with curiosity seekers that somehow figured out where the Circle might reside. There was enough information in Cricket's book to narrow down the location, plus in several places the book mentioned the main entrance was at the end of Christian Grey Drive. A quick search on any map application knowing that fact and our city, and one would have the general area. On a contour map it showed up as a large undeveloped piece of land. On a satellite view, one could see a few roads and homes, including the race track pattern and the runway for the planes adjacent to the townhouses.\n\nThe security committee talked about the coming graduation party and how to handle the influx of a large number of non-members in and out of the complex. Ultimately, the group decided to adopt an 'Open Door' policy, but to double-up on gate duty and patrols around and through the party area. Dave teased, \"That means we can also partake of the benefits associated with the party, if there are any.\"\n\nElsewhere, the seniors were busy planning the more fun parts of the event. The board approved using the meadow for the tents and for parking unless it had recently rained and created a mud pit. That made establishing a path between two of the homes to the core easier, and hence a check-in station where every attendee had to get a stamp of approval after presenting a recent STD test. Their names were also noted at check-in and any affiliation, such as the fraternity or sorority. Some of the guys, assisted by Millie, made signs directing cars to the parking area or to a drop-off location, and then walkers from the parking area into the core.\n\nColin, Noah, and Oliver created three makeshift bars, and stocked them with thousands of cans of soft drinks and bottles of water. An outfit named Lee's Ice delivered hundreds of bags of ice to cool everything down in large plastic storage bins. Trash barrels were strategically placed around the patio and in the core living room. Parts of the core beyond the living room were cordoned off or blocked off with barrier doors.\n\nDane and Seth took over creating a Tent City in part of the meadow not being used as a parking lot. Again, signs were made and about a dozen four-person tents set up and secured.\n\nHank arranged for Marvelous Sanitation to deliver twelve porta-potties. One zone was established just off the patio past the gazebo, another couple near the tents, and one just outside the entry point from the core to the parking lot. The interior restrooms would be in full operation, as well.\n\nBobbie and her two sous chefs started to stockpile easily served hors d'oeuvres that would feed several hundred hungry mouths. There were also huge boxes stored of potato chips, taco chips, and other party favorites. There'd also be various dips and salsa to go with them.\n\nOwen appeared before Dave one day with a strange look on his face. He said, \"Dave, several of the seniors -- pledges -- asked whether at the party I'd staff a tattoo station, where anybody could get a tat. They'd pay me, but that's beside the point. I'd do it for free just as part of the celebration. I'm asking, I guess. I could bring Greg, too, and I'm sure it'd be fun for all concerned.\"\n\nDave laughed, \"You going to stick your proboscis into each of the co-eds as payment?\"\n\nOwen smirked and then laughed, \"The thought crossed my mind.\"\n\n\"I have no objection. You could expand where we blocked off the core living room from the rest of the building, even do it in the hall or in that first classroom. I have one request so we don't have any backlash.\"\n\n\"What's that?\" Owen asked.\n\n\"Make sure your subjects are at least eighteen and sober enough to make an informed decision.\"\n\nOwen laughed, \"I always do.\"\n\nDave watched the other preparations, and this was three weeks before the party. He was sure that there'd be more like three-hundred attendees at the peak.\n\n<center>* * * * *</center>\n\nRose got a call from Sheriff Orach one evening asking for a Saturday morning meeting. He promised that nothing bad would result from the meeting, but he wanted to close the loop with her about 'her attack'. She agreed to the meeting, and immediately involved Dave -- her stepdad, and Gordon Sonlin, her lawyer. Scarlett was back filming in Ireland.\n\nSaturday at nine a.m., Orach strolled onto the patio in business casual dress with his badge very evident and hanging from his belt. Jim Hotch decided to also attend the meeting and greeted his associate as he walked to the table chosen as a meeting place.\n\nOrach was all smiles. He said, \"This will be extremely short. Charges have been filed against your three attackers for filing a fraudulent police report, and also for charges relating to felonious assault with intent to rape.\"\n\nEveryone else looked surprised.\n\nOrach explained, \"Your high school has high resolution video cameras surrounding the place. They record all activity in range whenever motion is detected. Periodically, they upload that information to the cloud for storage. The events of the night in question were captured on three separate cameras, preserved in the cloud, and are now part of the case file for this event.\n\n\"We could clearly see the three young men lurking near a pick-up truck in a corner of the lot. They were smoking and drinking beer apparently. We have a clear record of all the other students and the lead teachers leaving the high school, and as you said Rose, some had cars and others got rides. You became the only one left and you went and sat on the rock.\n\n\"The video clearly shows the three men drawing a bead on you, walking across the empty parking lot, and then accosting you. We can see that they quickly surrounded you, one holding you as the others moved to disrobe you. We could see one man starting to pull your skirt off, and another trying to unbutton your blouse.\n\n\"I have to say that everyone that has viewed the video in headquarters was amazed at what you did in the following twenty seconds. You booted one man in his gonads so hard his body came a foot off the ground, broke the wrists of the one mauling your breasts and trying to unbutton your blouse, and then stomped on the top of the third man's foot and as he let go, you butted him backwards where he lost his balance and fell onto the rock you'd been seated on.\n\n\"The videos showed you grabbing your books and then running towards the main road. Eventually, although it was too far away to identify, we see a car pull-up, you get in, and leave the scene.\"\n\nRose said, \"I didn't know I'd done that much damage to them, although that sounds like what I did. I just wanted to get away from them. I wanted them to leave me alone.\"\n\n\"Quite all right. I might add that the action was also captured from different angles by two other cameras mounted on a parking lot light post. There's no doubt about who was at fault, who took hostile action, or that you were put in a defensive position. If there's one point I could fault you on, it was that you should have called 9-1-1 immediately and reported the incident.\"\n\nRose shrugged, \"I was safe, so I didn't worry after Matt picked me up.\"\n\nOrach said, \"Well, you did well. Keep taking those self-defense classes. I doubt you'll hear another word about this other than to read about the case the DA wants to prosecute in the newspaper. If the DA needs you to testify against them, she'll contact you.\"\n\nOrach looked around at everybody, \"That's all I had. I just wanted to personally close the loop with you. You were all so nice and accommodating, plus your story was consistent every time you told it. I kind of guessed what had really happened, but guesses have been wrong. I needed some hard evidence, and when I went to look, I found it thanks to your school's security tapes.\"\n\nEveryone thanked the sergeant for coming and reporting on the case to them. Orach left. Dave sent Scarlett a long email detailing what had just happened. She was in Ireland working in a film studio for two or three weeks.\n\n<center>* * * * *</center>\n\nMonday evening the Circle 101 class gathered in the core living room. Again, there were a record number of people attending because there were so many pledges. Dave was surprised to see Felicity Jones sitting in the group, especially since she was snuggled against Dane Decker, one of the university pledges that had come to the Circle through Phi Theta Rho fraternity.\n\nAfter calling the gathering to order, he wrote 'SEX' in large letters on the flipchart. He then looked at the class of smiling faces. He asked, \"What does that word mean to you?\"\n\nThere was silence until Neo tossed out a wiseass comment, \"Getting my rocks off.\"\n\nThe rest of the class jumped on him. Eve said, \"NO! For me it represents connection with someone I really like.\"\n\nLogan said, \"At first, I thought of the genres of people here -- males and females. I didn't think of the sex act.\"\n\nJay said, \"Another word for either fucking or making love depending on who your partner is and what your and your partner's motivations are.\"\n\nDave asked, \"Is this a nice neutral word you can bring up in any conversation?\"\n\nHeads shook. Dave asked, \"Why not?\"\n\n\"A lot of people think that sex is an undiscussable topic. My parents fit in that group,\" Stu said with a laugh.\n\nFelicity said, \"The topic is an embarrassment to some people just the way nudity or some naughty parts of our body are.\"\n\nDave posed, \"Does nudity result in sex?\"\n\nMany heads nodded.\n\nDave said, \"I'd like to try an experiment that's probably pretty consistent with Circle mores. Most people here are fully clothed, yet in late afternoon a few of you women were nearly naked on the patio reading, talking, or sunning. What I'd like to try is to have all of us get naked. If you don't want to participate, you don't have to.\"\n\nThere was a murmur of conversation as a few people started to undress and then more joined them. Dave stood at the front of the room and removed his shirt, slacks, and briefs until he was nude. When he paid more attention to the class everyone was naked and back in their seats.\n\nDave walked around a little and studied the group. A few people blushed, but only their eyes followed him.\n\n\"Well,\" Dave said, \"no one started to have intercourse after everyone was naked, so I draw from that the conclusion that nudity does not imply sex, at least in the verb form.\"\n\nCaleb teased, \"That doesn't mean that the thought isn't there.\"\n\n\"Ah, but thinking and doing are two different things. If you're parents came into the room right now, what would they think?\"\n\nFelicity laughed, \"That we'd all lost our minds.\"\n\nEve laughed, \"That we were a bunch of hedonistic degenerates about to fuck each other.\"\n\nHeads nodded in general agreement. The class laughed.\n\nDave smiled, \"And what would they think at the end of our two-hour class, knowing that we'd sat here talking about all sorts of Circle-related topics without anybody jumping anybody else's bones?\"\n\nKwan smiled, \"That we were nudists.\"\n\nTrent laughed, \"That we were just hedonistic degenerates who'd decided NOT to fuck each other.\" The class laughed.\n\nBeth said, \"Their response would be less aggressive, perhaps puzzling, exhibiting some confusion, and not that inflammatory.\"\n\nDave said, \"So, timeframe has a lot to do with nudity and sex.\" Heads nodded. He continued, \"In the afternoon, what do you think about the nudity on the patio?\"\n\nOliver said, \"It just is. It's just a mode of dress or undress, if you will. It's not invitational. For some, it can be arousing, but for others totally neutral. If we weren't all pretty fit, it could even be kind of gross.\"\n\nDave asked, \"Does the idea of consent fit in this discussion?\"\n\nSome heads nodded and others disagreed. Dave got them talking about their viewpoints, and then posed, \"One of the hallmark phrases you'll hear around the Circle is that 'Consenting adults can do whatever they want about sex'. How many different ways can you interpret that phrase?\"\n\nA longer discussion ensued. Dave did some paraphrasing, substituting the word nudity for sex.\n\nHe asked, \"What does that phrase mean to you when I substitute the word 'relationships' for sex? 'Consenting adults can do whatever they want about their relationship'.\n\nKellie said, \"Any number of adults can form any type of union they choose between them, and the rest of us should be tolerant of that because we have the same privilege.\"\n\n\"How many different kinds of relationships do we have around the Circle?\"\n\nFelicity laughed, \"You and your ten wives, plus all the other women.\" The class roiled with laughter.\n\nFrank said, \"Lesbians, but not rabid -- like Bobbie, Maddy, and Merry. Lots of threesomes with a man and two women like Aaron, Shelby, and Amanda, or two men and a woman like Tan, Bjorn, and Nathan. Of course, many couples and many singles that like to hang around with all the others. Given there are only males and females, we have about every combination in the Circle.\"\n\n\"And people are very accepting of those situations, even when they occur outside our gates,\" Dave said, \"so, why is the word 'adult' in that statement?\"\n\nThere were a few hands raised, so Dave picked on Zoey. She said, \"So that no one person dominates another. I think the term adult is implying they are both willing to be vocal about what they will accept or not accept in a relationship or having sex.\"\n\nDave teased, \"So, what about incest?\"\n\nMany in the group got thoughtful. Colin ventured, \"I guess it would be all right between adults providing one didn't dominate the other and kind of force the relationship to be something it wouldn't be without open agreement.\"\n\nDave said, \"We have many different incestuous situations in the Circle, particularly in my own family. I think we have about every base covered on that score, in one way or another. Does that upset any of you?\"\n\nThere was quiet in the group until Kaylee said, \"No. I have a brother and sister, both older. It took me two years to seduce each of them. I want them in the Circle and I want the freedom, as a consenting adult, to be with them as I choose. I love them both dearly and the feeling is mutual.\"\n\nAfter another silence, Carter said, \"I been having sex with ... no, make that making love with my widowed step-mother for four years. She also belongs here, too.\"\n\nThere were other murmurs and other admissions of a similar nature. In every case, the person wanted their sibling and-or parent in the Circle. If Dave was worried about over-population and immigration policy, he sure was after that bit of discussion.\n\nDave posed, \"So, how do you sort out whether some friend or relative might be an appropriate member of the Circle?\"\n\nOn that note, the discussion really took off on the personality qualities a Circle member should have. The group was well-read in Cricket's book, and often quoted some of what had turned out to be the criteria she'd written about in the book, often as an observation about the common traits of Circle members.\n\nDave had to cut the discussion short to end at nine-fifteen, the guaranteed end of class. \"We'll continue in two weeks. I think I'm here. If not, Ross or someone will be.\"\n\n<center>* * * * *</center>\n\nDave was one of thirty Circle members that clustered at the bottom of the mobile set of stairs leading up to the doorway of Mark Worthington's Boeing 737. Another thirty or so members of Mark's tribe intermixed with the Circle group, hugging and kissing as they rediscovered a friend they hadn't seen in many weeks.\n\nDave and Mark stood talking about the small group of researchers southeast of Atlanta and what to do about them. There was no rush, but both felt that some funding and leadership could turn the group into something much larger. Mark finally said in a loud voice, \"Enough business, let's get this show on the road and have some fun.\" \n\nMark looked up at where Elsa sat in the pilot's seat with her side window open. She gave him a thumbs up from the cockpit. He yelled, \"All right everybody, all aboard.\" He led the group to the stairs and up into the posh interior of the plane.\n\nMelanie from Mark's group did a quick headcount, found everyone on board, and told the pilots they were good to go. The stairway was removed, the door closed and secured, and the engines spooled up so they could taxi.\n\nThere were four pilots in the cockpit: Elsa was pilot-in-command; Cindy, her sister, was her second; and then Alice and Pam sat in jump seats, as they watched and talked about the flying characteristics and checklist items of the plane. While the 737 was a jet, it was much larger than the Cessna Citation they usually flew or occasionally Owen's Gulfstream.\n\nIn the back of the plane, Melanie and Stacy acted as flight attendants, making sure everyone was belted in, knew about life vests and such, and were ready for takeoff. Everyone was very cooperative with them, even teasing them about offering 'coffee, tea, or me' or some 'TWA tea' later in the flight.\n\nFor the most part, people were quiet, even sleeping, on the three-hour flight to St. Croix. People wanted to rest up so they were ready for the five days of 'P-A-R-T-Y' they all expected at Mark's large villa and prowling around the island.\n\nMark circulated around the plane talking to those that were awake or not engrossed in some other activity. He was the 'hail fellow, well met' of the group, making sure everyone was psyched up for a fun weekend. The group were flying down on Thursday morning and would come home Monday evening.\n\nDave hadn't been to the villa for over two years. Alice had gone down with a group about a year earlier and had a ball, and a huge dose of wanton sex with every male in the entourage. That didn't surprise Dave. His wife and the whole of Mark's tribe and the Circle were some of the most over-sexed people in the world. He wondered whether Barb Nelson, their resident anthropologist shouldn't take that on as a study worthy of publication. Barb was somewhere on the plane.\n\nDave dozed and woke up later after a good nap, and the realization that they plane had descended to within five-thousand feet of the Caribbean Sea. Several mild turns were made to align the plane with a runway many miles ahead, and the descent continued. If there were more seats in the cockpit, he would have been up there, too.\n\nThe plane softly kissed the runway at St. Croix, and rolled out to a comfortable stop. Elsa taxied to the fixed-base operator at the airport that usually handled their plane. The plane's engines stopped, the door opened and the attached stairway deployed.",
        "People filed out into the warm and moist Caribbean air. Coming from Florida there wasn't that much difference, but Dave knew that visitors were often coming from the chilly spring that continued to plague the northeast cities and thus they felt a huge change in climate.\n\nFive mini-buses drove over the tarmac and parked beside the plane. On the other side of the plane there was also a crew and panel truck just starting to transfer the luggage people had brought from the plane's belly to the truck. Everyone would connect with their bags at the villa. The idea was to enjoy and not worry about the things most travelers struggled with.\n\nPeople quickly got onto one of the fifteen person jitneys and were whisked away towards the villa. In the vehicle Dave was on, Alice Grace, Felicia, and Monica stood as soon as they were clear of the airport and stripped off their clothing except for their small thongs.\n\nThe women from the Circle on the bus were inspired and joined in: Marie, Lora, Kellie, and Jordan. There was a lot of laughter and cheering from the men, most of whom were in shorts and t-shirts. The van's driver was laughing and spending too much time looking in his rear-view mirror.\n\nAlice Grace came and sat in Dave's lap and after some romantic kisses, fed her nearest breast into his mouth so that he could suck on her nipple and arouse her more than she was by just the thought of the decadent weekend.\n\nDave was more than happy to comply with her needs. As his mouth got busy, he allowed a hand to wander into her tiny thong and start to stroke her very wet slit and her clitoris. Alice moaned into more kisses with him as his fingers started to saw in and out of her body.\n\nSeveral other couples on the bus had formed and were becoming equally engrossed in each other. Deke, from Mark's side, had discovered Marie Thereaux. They were making out like the end of the world was near. Marie seemed the aggressor in that pair. She had his cock out and was slowly running one hand up and down his steely shaft. Deke moved his kisses to her breasts as they bounced along the country roads. \n\nDeke finally cursed and moaned and came, filling Marie's hand with his spunk. She looked pleased as a peach, and after his last surges of jizz she licked everything off her hand and wrist as he and several others looked on. \n\nHe renewed his assault on Marie, thrusting his fingers into her juicy twat, and rapidly stroking her G-spot. Marie came only a few minutes later with a loud shriek as she slammed her legs together around his hand to stop his hand from pummeling her cunt. \n\nAbout that time, Alice also succumbed to Dave's persistent fingering of her pussy and sucking on her breasts. Her orgasm was quieter, but more physical. Her entire body went into spasms as she closed her eyes and gave into the moment. For a second, Dave thought she was having some kind of seizure.\n\nKim was in the seat across the aisle; she saw Dave's concern. \"When Alice has a 'Big One' that's what she does. She's yours for the rest of time.\"\n\nDave smiled, \"Wait until I give her The Experience, then.\"\n\nAlice muttered as she coasted down, \"Oh, God, I'll die. I already love you. Yes, over this weekend you have to do that for me.\"\n\nKim grinned, \"Please put me on your dance card for the same thing, Dave.\"\n\nDave said, \"I guess I'll be a popular guy. I thought Mark and some of the others did that for you.\"\n\nKim laughed, \"Haven't you ever heard of variety? Why do you think we're all so open about sex? Besides loving other people, we also love the variety in our physical experiences. That's this trip -- thirty of us, and thirty of you from the Circle.\"\n\nDave chuckled as he hugged Alice and kissed her again.\n\n<center>Chapter 22 -- Party at the Worthington Villa</center>\n\nMark's villa on St. Croix was large. The original house had been capable of sleeping about twenty or more, but he'd enlarged it about two years earlier so it could accommodate a hundred people, providing many of them were willing to double up. The enlarged home consisted of two long sides at a slight angle to each other. The 'Great Room' centered on both wings, with a huge media room on one side, and the kitchen-dining areas on the other side.\n\nDave laughed at the room assignments that Cindy W. made for the group. She'd carefully paired up men and women from the two groups with each other. Dave was pleased to have Alice Grace as his assigned companion. Neither of them were expected to spend any time together unless they were so inclined. Their room was spacious, a good place to base either of them if they chose to wander elsewhere.\n\nThey hadn't been in the villa more than five minutes after the last jitney arrived, when the women went completely nude. Various items of clothing appeared in small piles around the home, especially near the majestic stairway or the sideboard near the elevator. \n\nA few of the men met the challenge, but many just stripped down to their briefs, bathing suit, or boxers and stopped there. Without hesitation, several couples briefly made out and then disappeared towards some bedroom to start the festivities. Many went outside to the waiting chaises and pool.\n\nAlice came over to Dave and hugged him, her generous and up-tilted breasts pushing against his chest as her excited nipples tried to etch her initials there. She smiled at him. \"I'm glad we're roommates. I really do want to spend a lot of time making love with you. I have some sharing to do, too, but we can talk after lunch. I want to be alone with you.\"\n\nDave felt her cryptic remarks peculiar, but knew he'd find out in an hour or two, so wasn't too stressed out about it.\n\nThere was some hired help in the house, and ignoring everyone's state of undress they set out a buffet lunch as many in the group started to frolic in the pool, or ran down the curved path to the beach area below the bluff the home sat on.\n\nDave, Deke, Janet, and Sandy sat together at lunch. Some of the discussion focused on the new addition to the villa and how livable that had made the place for Mark's entire tribe when the all opted to fly down. Deke estimated that the last time they'd all been there had been well over a year earlier.\n\nDave asked how Mark had handled getting labor, building permits, inspections, and things like that in order to pull off the construction in such a short period of time.\n\nDeke laughed, \"Would it help you to know that almost concurrent with the building of the new wing, that the local government got a new building housing all the government offices, the police department, and part of the fire department?\"\n\nDave laughed. \"Ah, a little quid pro quo.\"\n\n\"I think it was the hand of a grateful and benevolent part-time resident that wanted to provide a stable platform for the government on this island where he liked to vacation.\" Deke laughed again.\n\n\"Owen Bennett seems to be able to pull off similar deeds. I guess I need to up the ante to the games I play in.\"\n\nJanet leaned into Dave and kissed his shoulder. She whispered in his ear, \"You can up my ante any time you feel the urge. I know Sandy would like to play, too.\"\n\nDeke clutched his chest in mock heart attack. \"I guess I'm just chopped liver in this game of life and love.\"\n\nSandy kissed Deke. \"Well, I guess we can give you a mercy fuck, if that's all it would take to satisfy you.\"\n\nDeke perked right up. \"Oh, goody. A mercy fuck. I love those.\"\n\nJanet said in an aside to Dave, \"We truly love Deke and tease him all the time. He's one of our favorites.\"\n\nAs they ate lunch, Dave asked Janet, \"Say, I've been meaning to ask, you and Sandy, Troy, and Dan all live near Atlanta, right?\"\n\nJanet responded, \"Yes, on the southeast side of the City, kind of near the airport. Sandy and Dan live about two blocks away. The guys work together.\"\n\nDave explained, \"I have a couple of reasons for asking. First, I might be working down near Forsyth from time to time, and looking for temporary accommodations. Second, some others in the Circle and I have been mentoring a small group of like-minded people near there in setting up a Circle-like operation, complete with all amenities -- and I mean all. They're very nice people and if they were nearer to Sarasota, we'd look for a way to fold them into the Circle, but they're not. Anyway, my second question, is whether you'd be interested in meeting them and possibly participating?\"\n\nJanet said, \"First off, don't look any further for a place to stay. You can stay with us, and even warm my bed as often as you need, even full time. We have the space and can make it VERY comfortable for you. You know, hot and cold running pussy all the time.\"\n\nSandy interrupted, \"I want to make the same offer.\" She then giggled. \"Maybe you go back and forth.\"\n\nJanet looked at Sandy and then said, \"As to your second question, we'd love to meet them and fully participate to see if we feel the chemistry is right. You think it would be?\"\n\n\"I do. They welcomed me and made me feel right at home. We had one couple come down to Sarasota to see our operation, and then others explored with us. They became full participants the one evening they stayed over, and were wonderful. They both made a lot of friends and engendered a lot of affection.\n\n\"Three of us went to Georgia a couple of weeks later. They had a party to welcome us, and it felt very comfortable. We made love with many of the people in the group, and I passed along The Experience to five of the women. They pleaded that we come back and stay longer.\n\n\"I've been waiting to ask you two about your possible interest. I only told them I had some other equally-inclined friends near Atlanta who might be interested. Just on that basis they're interested in meeting you.\"\n\n\"How do we get in touch with them?\"\n\n\"I'll give you Bret and Jean's contact information this weekend. You could call and introduce yourselves. I'd just arrange a get-together of some kind. My guess is that they'll invite you to visit during some afternoon, have dinner with them, and then, if the chemistry is right, stay and enjoy the sexual benefits of some hot, new friends.\"\n\nJanet said, \"You make it sound so easy.\"\n\n\"Because it is. I could call Bret and Jean, my main contacts in their group this weekend with you beside me and do the introduction over the telephone. It'd be fun to tease them with what we're doing and where we are.\"\n\n\"I like that personal touch better than me calling up like a telemarketer selling pussy.\" She smiled.\n\nDave looked up and down her naked body where she sat beside him. \"You're not like any telemarketer I ever knew.\"\n\nShe teased, \"I'm sure, and I can prove it if you'll spend about an hour with me. Sandy would like to be there, too. Maybe you should make that two hours.\"\n\nDeke laughed, \"Careful of those two. They're dangerous and have been that way ever since they discovered their husbands cheated on them with Elsa and Cindy.\"\n\nDave said, Whoa! Do I know this story?\"\n\nJanet and Sandy laughed. Janet said, \"I'll tell you. It was years ago -- a decade or more. Troy and Dan were in Tampa doing business and there was a restaurant and club in their hotel. They were watching the dancing after dinner, and saw Elsa and Cindy along with Mark's other wives and Mark. They didn't know who he was, but he seemed to have a surfeit of women with him, so they took a chance and asked the two of them to dance. At first, they turned them down because they'd been bad girls in Mark's book earlier in the day. They'd done something stupid about catching some guy that was spooking the whole family and had gotten spanked. I think they flashed the guys, too. They were being contrite.\n\n\"Anyway, about fifteen minutes later Elsa and Cindy came to our husbands, and said they'd changed their minds and wanted to dance. Later, they told me that Mark had encouraged them to dance with the men and do 'whatever else' came to mind. They still wanted to be naughty so they pursued Troy and Dan with great intent.\n\n\"After some dancing, where they somehow revealed they wore no underwear, the four of them went up to Troy's room where they proceeded to fuck away a large portion of the night. The next night, the guys returned home with a pledge of mutual silence. We would never have known, except for what happened next.\n\n\"A few months later, Troy got a call from Elsa inviting the two men AND their wives -- Sandy and me, to one erotic and really special house party. The guys were also baited about having more sex with them, but they were told they had to tell us about their earlier meeting.\n\n\"Both Troy and Dan confessed their earlier indiscretions to us, and also told us about the invitation to a party in a high-rise condominium with guaranteed intimacy with the east coast's hottest billionaire. We were intrigued, and Sandy and I didn't want to turn down the opportunity to meet a real billionaire and see where and how he lived.\n\n\"Troy and I called Elsa back, and she had Cindy there with her. On that call we learned that the girls had done a video of them fucking during their one-night stand. We all watched the video, and it was hot as sin and made us hornier than a Louisiana tree toad in the spring.\n\n\"Well, Sandy and I were really pissed at the guys, but after watching the video multiple time we fucked them into the ground -- swapping about, I might add. We told them we wanted to attend the party. Sandy and I talked and figured what was good for the goose is good for the gander. We decided to have the time of our lives at the party ... and we did. We pretty much fucked the entire weekend and not with our husbands, either. We were real sluts.\n\n\"We had a ball, and were fully converted to Mark and his wives' way of life ... or lifestyle, I guess you could say. Mark gave Sandy and me The Experience, and we fell in love with him, and he really liked us. Just like that, we became part of his intimate circle of friends. We spend as much time with his clan or tribe or whatever you want to call it as we can. Much of that time is sexual or sexually-oriented.\"\n\n\"What about Troy and Dan?\" Dave asked.\n\n\"They slowly adapted to the fact that Sandy and I were hornier than they were and would fuck anybody, anytime, anywhere. We'd turned into super sluts. They followed our pussies into Mark's group and now are well-adapted to all the activities. By the way, they still have a 'thing' about Elsa and Cindy, and the feeling is mutual. None of us are jealous either, because we know that none of us are out to break-up anybody else's relationships.\"\n\nDave chuckled, \"That's some story. I guess those of us in our large groups each have some unique story about how we got started in this lifestyle.\"\n\nSandy asked, \"What's your story?\"\n\nDave chuckled, \"Alice, my prim and proper wife, drove into work one day, parked her car, and then discovered her best friend and work mate fucking one of the salesmen in her company in the parked car next to hers. That led to a discussion over lunch between the two women, and subsequent challenges to get Alice ... and me ... to loosen up -- sexually, relationally, and about any way you could think. We knew we were behind the curve in those areas because of how we'd been raised, so we accepted the challenges. Those led us, and some of our really close neighbors, to have sex together. That group formed the basis for what is now the Circle.\"\n\nJanet volunteered, \"We try to watch every episode of The Circle on television. We think you're all so brave to let yourselves be videoed and put on TV. I bet your fan mail is really crazy.\"\n\nDave nodded, \"It is. We do get some hate mail, but most of it comes from people who are curious, supportive, and even horny. We're putting together a short book about how to loosen up and how to start a Circle of their own. Cricket is again writing those in her spare time.\"\n\nJanet speculated, \"And these folks in Atlanta came to your attention that way?\"\n\nDave shook his head. \"No. Their initial contact pre-dated the airing of the TV show, that's why we pay a little more attention to them. The man I mentioned, Bret, called me at work one day. His wife had tracked me down based on the trail of cookie crumbs I left in the news media before then as various events occurred that revealed some things about the Circle and our polyamorous lifestyle.\"\n\nSandy pushed, \"And that group near us is all nice people?\"\n\n\"Every one of them. I'm sure you'll enjoy your time with them and bond as friends. Saturday, let's call Bret and Jean at home and make contact. Bring your calendars and we can set up an initial meeting for you after we get home from here.\"\n\nThe group lingered over lunch. Bunny Johnson, one of the few students that wanted to come on the trip, joined the group and flirted outrageously with Deke. He seemed more than eager to ogle her hot naked body when she wasn't rubbing it against him. She initially got his attention by tickling his ear with her tuft of pubic hair.\n\nA few nude couples and one F-F-M threesome claimed some of the chaises beside the large pool. Their goals were obviously sexual because they were putting on a show for the others still at the picnic tables as fingers filled pussies or grasped rigid erections, and then went to work. One couple had already started to fuck -- Ryan from Mark's group and Millie from the Circle.\n\nJanet asked Dave, \"Feeling inspired?\"\n\nDave grinned, \"Definitely. What do you suggest?\"\n\n\"Sandy and I like to go down to the beach. Why don't we all go down there? There are air mattresses down there and because of the bluff this time of day it's a little shady and hence cooler.\"\n\nThe five of them got up from the table and strolled past the patio chaises watching as they went. They went down the curvy path to the beach, leaving the last of their clothes and picking up some beach towels from a storage locker down there. Dave noted eight air mattresses scattered around on the beach and next to the bluff the villa sat on. Each one was anchored by some kind of small chain so it wouldn't blow away. Janet explained that they'd probably been put out for the group to use that morning.\n\nDeke and Bunny quickly adopted the first air mattress. She welcomed him into her arms immediately and they started to make out as their hands fondled every available genital in range. Dave knew that Bunny would give a great ride and be a superb receptacle for Deke's load.\n\nJanet picked a slightly larger air mattress two over from Deke's, and Sandy and she immediately sat on it and patted the space between them for Dave. Sandy said, \"This one is king-size, so it's better for the three of us. Most of the others are queen-size.\"\n\nDave lay between the two women, wrapping his arms around each of them and pulling them in close for kisses. Their hands were both on his shaft and balls, gently massaging and stroking, making his hardness even harder, and his length even longer.\n\nSandy said, \"I'm dripping cunt juice I'm so excited to be with you.\"\n\nJanet said, \"Me, too. I hope you have a lot of stamina.\"\n\nDave teased, \"Well, Alice Grace brought me off on the bus here from the airport. I don't suppose you know how to compensate for that, do you?\"\n\nJanet laughed, \"I just might have a solution, depending on how much you like to watch two women make love to one another?\"\n\nDave grinned, \"I do, actually. Let me shift to the mattress beside us.\" He got up and moved as the two women rolled into each other's arms and started some very familiar kisses. Moments later, Sandy moved and the two got into an instantaneous, noisy, and sloppy sixty-nine with Janet. The show was shifting into Act Two.\n\nHours later, Dave awoke briefly to the feel of a second naked female body slipping under the sheet with him. He didn't open his eyes but did smile to himself at the joy of feeling loved and desired by multiple women.\n\nWhen Dave did awaken after his requisite six hours of sleep, he first felt some erect nipples against his back as a warm female spooned against him. She had one arm draped over his torso in a lazy way with the hand hanging limply by his shoulder. He could feel her gentle breathing against the nape of his neck. Cindy, Elsa's sister, was still asleep and obviously content with her situation.",
        "In front of him, Alice Grace lay sleeping on her back but with part of her body snuggled against his body. The image of the beautiful Sleeping Beauty came to Dave's mind as his eyes focused on her beauty. The light sheet that covered the three bodies in the bed below his hips cut across Alice's body just below her navel. Because she was on her back her breasts had flattened out slightly against her body. Alice's arms were crossed over her chest, squeezing one breast in his direction. He watched her chest rise and fall as she slept.\n\nDave closed his eyes after a while and just basked in the love he felt from his lovers. He hadn't been with either woman the night before, but there was no doubt about their love for him, or his love for them. He sniffed the morning air, but the only aroma he caught was the hint of jasmine from the vine outside the windows to the room -- plus the remnant of sex he'd had. He'd showered before bed the night before, and Cindy had joined him, coming from places unknown. They hadn't talked, but they'd kissed without pursuing anything sexual with each other and then they'd crawled into bed to sleep. Alice also had a clean feel about her.\n\nMuch to his chagrin, Dave's stomach growled. He was a breakfast eater, believing that he needed to put some fuel into his engine to get revved up for the day. The body behind him chuckled. \"You're hungry? You have two hot naked women in bed with you, yearning for your cock and spunk, and you're hungry?\"\n\nDave chuckled, too. \"The body does what it wants. I have no control.\" \n\nHe rolled onto his back, but tried to maintain the contact with Alice from his waist down. Alice said, \"I'm awake ... and I'm hungry, too. I just don't have a body that complains so loudly about the situation.\"\n\nCindy draped part of her body across Dave's chest and kissed him. She patted his chest after the kiss and said, \"Come on. Let's see what the others are doing and have some breakfast ... THEN you are going to come back here with us or go to the beach or somewhere and plunder our bodies. By the way, the dress code around here is usually nudity or a beach towel around the waist -- nothing more unless we go into town.\"\n\nThe three took turns in the ensuite bath, and then together they went down the hall and stairs and into the great room. Many others were moving around and welcomed them. A breakfast buffet had been set up, and oddly enough one of the waitresses was staffing an omelet station, ready to make a custom omelet for anybody that wanted one. Dave did this job routinely for the Circle, and felt compelled to have an omelet and to see what the 'competition' was doing.\n\nDave walked over to the young girl and examined her equipment and set up. As he did, she had started to list for him the various ingredients she had ready to use in a custom omelet. He also noted that she was gorgeous and shapely, the way all the other female help at the villa appeared to be. He wondered how this selection criteria had been stated. She had a nametag on her white t-shirt that read, 'Odessa'.\n\nDave said, \"Odessa, I would like an omelet with bacon, sausage, onion, and of course cheese, if you please. I'm also curious how you put up with the nudity and other behaviors around this place. I ask because I live in a similar environment back in the States, and I am seeking your viewpoint on this. I'm Dave, by the way.\"\n\nOdessa gave him a magnificent smile where her sparkling white teeth shined against her brown skin. She started to prepare the ingredients for his breakfast. \"Well, Mr. Dave, I love working here and doing the breakfasts like this. I admire everyone's bodies, as I am ... one of those people that likes nakedness and sex all the time. I'm embarrassed to admit that, but ...\"\n\n\"Oh, don't be embarrassed,\" Dave interrupted. \"All these people love sex and each other, too. We're very open about it. You fit right in.\"\n\nOdessa said, \"I know. I participated once in some of the goings on ... even the sexual parts, but only a few months ago when the boss' group made a visit. Mr. Worthington's secretary Melanie makes sure we all get tested regularly to be sure we don't have bad germs in case we do decide to play. I got my results yesterday, so I may stay after work and join in.\" She flashed an inviting smile at him.\n\n\"What do you do when Mark and his entourage aren't here?\"\n\nOdessa said, \"I'm a sophomore at UVI -- University of the Virgin Islands. I'm studying to be a nurse, but ... well, honestly, I'd try to be a doctor and take pre-med, but that's so far out of reach for me and my family; so, I settled for nursing. Medicine fascinates me. As it is, it'll take me longer to get the degree because I have to work full-time to support myself, pay for the schooling, and help my parents.\" She smiled and added with a laugh, \"Maybe that helps me not be intimidated by all the naked people, the sex, and everything else around here. It's fun. I only work here when the Worthington Group visits for a vacation, like this weekend, otherwise I have a regular job on campus in the bookstore.\"\n\nDave studied Odessa and had an idea. He watched her expertise with the omelet preparation, and gave her high grades for the work and her attention to detail. She knew what she was doing and put on a little show for him as she added ingredients with a flourish and worked with the pan, expertly flipping part of the egg dish onto the other part to complete the omelet. She added that when she was younger, she'd worked at a restaurant in Christiansted that served omelets for breakfast and lunch, so she got trained in how to make them.\n\nDave found Mark and asked him about Odessa. He knew little about her other than she was very attractive and that he'd seen her at the villa with some of the men the last visit. He commented that she'd willingly stayed around and got naked with the rest of the tribe when she wasn't working. He thought she'd enjoyed some sex with the men, and was social. She seemed like good company, however, he hadn't any time to talk to her other than hello.\n\nDave found the major-domo for the house in the villa's kitchen and pulled him aside. His name was James Butler, appropriately enough. Dave wondered whether it was a contrived name. James was a full-time employee and lived on the villa property near the front gate.\n\n\"James, what can you tell me about Odessa?\"\n\nHe smiled, \"Ah, Odessa Black -- a very smart girl, and we will only have her for a short time because she is going to college to better herself and her family. I advertised for temporary help about a year ago and she was one of the applicants. I wish I had ten of her. She's pleasant and fun to work with, and, of course, very good looking. She likes all the Worthington's and their guests. I know she participated in one of their evening playtimes about four months ago, but other than that I think she's been chaste. I heard her telling one of the other staff that she really liked Mark's family and friends. I've only ever heard good things said of her.\"\n\nDave asked, \"Anything bad or questionable about her in your opinion? I'm curious.\"\n\nJames shook his head, \"Only the poverty of her family. She lives in a hovel outside of Christiansted with her parents. I worried about her and her family when the two hurricanes passed the island last season, but somehow, they made it through all right and still had a home. I know she works full-time at the university. I think she earns a slight break in tuition that way. Anything she does for us is a second job, and since the work is usually on weekends, she can accept it when we offer.\"\n\nDave talked a little longer with the house manager and then went back to the great room looking for Odessa. She had closed the omelet station for the day, and was helping collect dishes and flatware from around the room and patio.\n\nDave stopped her, \"Odessa, do you go on break soon?\"\n\n\"Yes, in about fifteen minutes, after all-things breakfast have been brought to the kitchen for that group to clean. I have an hour and then I have to help prepare for lunch. There are more of you here than we are used to.\"\n\nDave pointed to the patio and smiled. \"I will be sitting out there someplace. Please come and find me. I want to talk to you. All good, I assure you.\" Dave was highly impressed with this dark-skinned girl.\n\n\"Sure! I like you. You're nice.\" She flashed her great smile again, and Dave let her get back to work.\n\nDave found Owen and sat down with him. He grinned. \"I think I have a really great candidate for our informal scholarship program. Dirt poor. Motivated. College sophomore. She'll be here in a minute.\"\n\nOdessa did show up ten minutes later as the men were talking about taking on a doctor as a scholarship subject. Owen liked the idea, particularly helping to pull a whole family out of poverty and being able to be near the result.\n\nOdessa was magnificently naked like the others on the patio, her body positively glowing in the tropical heat. Her modest breasts were perky and up tilted, their darker nipples and areolas attracting lusty attention. Her body was shapely without an ounce of extra flesh. Her muscles were toned and proved she did something to stay in shape. She carried a carefully crafted raft of jet-black pubic hair on her mons that matched her curly head of hair. She'd put on lipstick and looked sexy and desirable.\n\nDave gestured to a chair for her. Odessa said, \"Really? You want me to sit with you? Remember, I'm part of the hired help.\"\n\n\"Absolutely. We have a few questions for you, and then I'll explain their rationale.\"\n\nOdessa sat, but on the edge of the seat. Dave guessed she wanted to look as though she had been summoned. She looked alert and comfortable, but not as though she were ready to run for the hills.\n\nDave said, \"What is your GPA?\"\n\n\"Oh. Only about 3.5. Freshman mathematics and physics were my downfall, I'm afraid. I had them both the same semester. Either one alone, and I might have had a chance. Working full time, I needed those study hours. This semester, I'm doing really well in biology and my other science course though. I really don't start courses in nursing, psychology, and counseling until next year.\"\n\nAfter another question or two, Odessa talked about her parents, in particular her father. \"Poppy got injured one night five years ago when he was hit by a car while walking along one of the island roads on his way home from work. His hip and pelvis were broken, but after healing he couldn't really do much manual work. He limps - badly. My mother works at one of the hotels cleaning guest rooms, but the pay isn't very good. I have a younger brother, but he's not old enough to earn much money for the family yet.\"\n\nDave flashed a glance at Owen, and knew he was hooked.\n\nDave said, \"What kind of medical help did your father get?\"\n\n\"Oh, not much. He was glad to be alive. He lay beside the road for an hour before anybody stopped to help him. We're too poor to have any kind of health insurance, so he just went to the open clinic in town. They x-rayed him, but not much else. After the pain abated, he was able to hobble around with a cane. He's still in pain much of the time, though.\"\n\n\"Have you ever been to the continental United States?\"\n\nOdessa laughed, \"No. I've only been over to St. Thomas and St. Johns because a friend in high school had a powerboat. That's the furthest I've been from here. I've not even been to Puerto Rico. Plane tickets are too expensive.\"\n\nDave said, \"When do your classes end?\"\n\nShe said, \"They already have. I had final exams for the semester this past week. I think I did quite well, but I don't want to blow my own horn until I get the grade report.\"\n\n\"Owen and I want you to come and see us in Sarasota, Florida. That's on the west coast of Florida. We will pay your way and provide you housing and food, and everything you might need for your trip. We want to talk to you about expanding your horizons and your education at no cost to you. You may fly back with us on Monday afternoon, if you can arrange it. I suggest you plan on being with us for about a week. We have some things to show you and talk more to you about.\"\n\nOdessa frowned for the first time and studied the men. \"What do you mean?\"\n\nOwen nodded at Dave. Dave said, \"We'd like to give you a full scholarship to become a doctor, if that's what you really want. If you only want the nursing degree, we'll help you achieve that instead. We'd provide you all the funds you'd need for tuition, books, room, board, and such, as well as a pretty good amount to cover all your expenses including the support you no doubt provide to your family. Oh, yes, we'd give you a car so you can get around.\"\n\nOwen added, \"We'd also like to have your father come up to Sarasota sometime soon so he can be examined by some competent orthopedic doctors to see whether they can improve his mobility and work situation, and relieve hisi pain. This would also be at no cost to your family.\"\n\nOdessa looked at the two men for a minute, almost testing their sincerity. \"You're nuts. Why me?\"\n\n\"You strike us as the kind of person who we'd like to know better, who might fit in with our group up there, and who'd be fun to have as a friend. We support our friends. Last, the world needs more nurses and doctors, especially smart ones like you.\"\n\n\"But ... but ...\" Odessa was sputtering, and suddenly came awake. \"WAIT! What do I have to do for this money? What do I owe you or whoever?\"\n\nDave and Owen both shook their heads. Dave said, \"Nothing except maintaining a 3.5 grade point average and remaining motivated to complete the course. We would hope you would help someone else in some way after you are through, such as mentoring them in some way. Pay it forward, we call it. You are not required to live near us, but we can provide you with very safe and reasonable housing and outstanding meals tailored to you nutritionally. If you choose to live where we do there's also a medical clinic, gym, sauna, Jacuzzi, recording studio, martial arts classes, dances, a couple of pools, a lot of people who'll be your friends almost instantly, all sorts of hobby centers, a library, and if you want you can become a TV personality.\"\n\n\"What do you mean a TV personality?\" she frowned.\n\n\"The place I'm talking about is called The Circle. We're featured on a reality TV show of the same name, and written about in a book my wife wrote called The Circle. I'll get you a copy of the book. You should read it before you make a final decision, preferably before you come over to the Mainland. Maybe we have a copy with us.\"\n\nOwen said, \"There are some copies in Mark's library here. Excuse me, and I'll get one.\" He got up and headed inside the villa.\n\nOdessa said to Dave after Owen left, \"I told you I was kind of free-wheeling sexually. I mean I played some sex games with some of the guys that were down here with Mark. Is that a strike against me getting this largess?\"\n\nDave laughed, \"All the more reason you'll fit in with us. We are a very sexually-inclined group of people. That's not to say or imply that we expect that behavior from you, but if you want it, it's there to enjoy and share. We're sort of swingers, but we put a great value on being in and developing loving relationships with the people we make love with. If you like that lifestyle, we have it. That prurient interest in sex is why everyone is nude, or nearly so, around here all the time. We're all like-minded people, and we like each other, including making love with each other.\"\n\nOdessa said, \"In case you haven't noticed, I'm black. I suspect you have a pretty lily-white group. Are you sure I'll be accepted? Are you sure people will want to become my friend? I know about racial tensions, particularly in the U.S. St. Croix is different because the blacks are the majority race here.\"\n\nDave said, \"If I wasn't certain of a positive outcome on all counts, I wouldn't have asked you. We're a little more diverse than lily white, but we can always use a little more technicolor.\" He laughed. \"I'm glad you raised the race question, because I want you to feel comfortable raising it, especially if you feel any of us are treading on that issue in some way. Tell me. Tell Owen. Confront the person making you feel that way. We don't hide from issues like this.\"\n\n\"What white boy will want to 'make love' with me? Maybe he'll want to 'fuck me', for kicks ... but love, I question that choice of words.\"\n\nDave smiled, \"Me, for one. I already like you, find you a fascinating person, and would hope to deepen a relationship with you over time. You have spunk and tenacity. You're goal oriented. You stand up for yourself, and I can tell you'll stand up for what's right. You will make a fabulous doctor.\"\n\nOdessa looked surprised at his answer. Owen came back and handed a copy of Cricket's book to Odessa. She looked at it. \"This is a book about your home?\"\n\n\"And all the people in it. Mostly, it's about the things we value and hold dear, with lots of real-life examples. It tells stories about each of us, and how the Circle got started. There's reference to a class I teach on and off throughout the year to the people interested in becoming members; we call them pledges. The class is called Circle 101 because the course the pledges go through explores what we think about and the things important to us. If people have widely divergent opinions to what we talk about, they probably shouldn't be seeking membership in our Circle.\"\n\n\"Is this some kind of a religious cult or hero worship, or something akin?\"\n\n\"No, but some people on the outside might think so. We revere the principles we live by and not any individual. We describe ourselves as being spiritual but not religious, although we do have a few church goers.\"\n\n\"I kind of take care of my parents. What about them?\"\n\nOwen spoke, \"We'll arrange for someone to frequently check on your family and be sure they're getting along all right. We'll also arrange for you to fly back and forth to visit them as often as you want. Mark flies down here at least once a calendar quarter, if for nothing other than a long weekend. You can always tag along on one of his trips in his 737. You'll have an unlimited travel budget.\"\n\n\"This is crazy. I must be dreaming.\"\n\n<center>Chapter 23 -- Party at the Worthington Villa II</center>\n\nOdessa brought the sex party that was just starting on the patio to a standstill. She appeared wearing white shoes with four- or five-inch spike heels that screamed 'Come Fuck Me', a tiny black thong that was all but invisible against her deep brown skin, and a red leather vest that wasn't buttoned and that moved around revealing her luscious dark areolas and nipples as she walked and the sides of the vest flapped around. There was enough light to see her sexy body, particularly her perfectly shaped ass, and to see her stroll up to Dave. He'd just put his after-dinner coffee cup on one of the trays that would later be picked up by the last of the kitchen staff.\n\nOdessa leaned in and kissed Dave. He kissed back, and the world started turning again. He fanned his face, \"Wow! That was some kiss.\"\n\n\"I told you I liked you. After what you decided to do for me, I am yours.\"\n\n\"Odessa, there's no obligation for you. We want to help you. We expect nothing more from you, including any sex.\"\n\n\"No, you don't understand. I WANT to give myself to you. I want you to fuck my lights out. There's more to it.\"\n\n\"What do you mean?\"\n\n\"I know you asked about me before you talked to me. James told me. I asked about you this afternoon. I learned from some of the people in your group that you have ten wives and that you please all of them. I learned that you love many other women, as well, and that you are one of the most expert lovers in the entire group. Everybody said you are the nicest man on the planet.",
        "\"Three women told me that you periodically gave them something called The Experience, and they urged me to have you do that for me. They said I'd never forget it, and that I'd also be in love with you forever. I understand that I have to share you with the other women, and that doesn't upset me in the least. Given the difference in our ages, I'd expect that anyway.\"\n\nDave offered, \"When you start reading Cricket's book about the Circle, you'll understand a little more. One of the main thrusts of our group is that you can love more than one person. You can even love many people simultaneously.\"\n\nOdessa held onto Dave, but pushed her hips against his groin that was covered only by a towel tied around his waist. She said, \"When I was in high school, I had two boyfriends. They liked each other and loved me. I gave them both my virginity one night. They both fucked away that terrible state of existence, and I loved the group sex and also showing off for one of my friends while the other did me.\"\n\nDave said, \"The only reason I would 'do' you is if I felt we'd build a long-term relationship with each other, if not tonight then over the following months.\"\n\nOdessa said, \"Well, based on what you said, I'll be staying right near where you live. I think that's a beautiful outcome of today. While I can be a one-night stand kind of girl because I'm still young and flighty, I'm coming to feel I want some longer-term stability in my relationships. I hope you'd be one of my relationships.\"\n\nOdessa studied Dave as he did her. \"So, will you make love to me?\"\n\n\"I'd be honored and absolutely delighted.\"\n\n\"Good.\" Odessa led Dave to one of the nearby chaises, and she removed the towel from around his waist. She looked pleased with what she saw, and gave him a broad smile. She had him sit as she folded the towel into a pad that she could kneel on. Seconds later, she wrapped her brown hand around his white cock, inhaled his shaft into her willing mouth, and started a really hot blowjob. \n\nDave stroked her hair, neck, and upper body, occasionally getting one hand or the other onto her breasts to palm and feel the nipple assume an excited state. After a few minutes of this during which her nipples became painfully excited, Odessa extracted his cock from her mouth. She said, \"Do you mind if I show off?\"\n\nDave chuckled, \"Be my guest.\"\n\nOdessa stood and carefully removed the small vest she'd been wearing, allowing her perfect breasts full exposure to night air and to the eyeballs of all the others on the patio that wanted to see her naked. After that, she stood on those CFM shoes and with straight legs carefully pushed her thong down her legs and stepped out of it.\n\nOdessa then backed up to Dave and slowly squatted until she'd taken his cock inside her in the reverse cowgirl position. Because of the angle of the chaise, there were only a few on the patio that couldn't see his robust shaft starting to saw into her hot pussy.\n\nDave complained, \"I reserve the right to eat you out later. I love the taste of pussy.\"\n\nOdessa laughed. \"I love to have a man eat my pussy. You're on. Although, I'm too horny to wait, I happen to love the taste of cum. Maybe we'll have to experiment with each other during the rest of your stay ... and certainly when I visit you in the U.S.\"\n\n\"I'd like that,\" Dave said as she slowly rose and fell on his cock. Dave peered around her torso and could see at least a dozen of the others on the patio watching them as they fucked. He guessed that because of the black-white novelty, they'd be an event for a short while.\n\nOdessa stopped performing a few minutes later and rose so that his cock extracted from her pussy. He felt the cool evening air surround his shaft instead of the warmth of her body. \n\nOdessa said, \"I need you back inside me, but I want to kiss you and be romantic.\"\n\nThe two laid side-by-side, and Dave started to tease her pussy with a few of his fingers as they kissed. He finally said, \"Ah, now I get to taste you directly from the source.\" He kissed his way down her body, taking a long sojourn at each breast. He thought he'd given her a small orgasm the way her body writhed.\n\nDave discovered that Odessa tasted like a magnificent wine with a robust flavor. She was mumbling about hoping that he liked the way she tasted and that she'd taken a shower after she'd gotten off work before putting on her little playful outfit. Dave munched and used his tongue everywhere around her nether region until his fingers got even busier than they'd been.\n\nAt first it was two -- then three -- and then four fingers squishing into the dark moist hole of her vagina. Odessa flooded the whole area with her girl juices, and then felt his whole hand slide inside her body. She groaned, \"Oh, God -- The Experience.\"\n\nBefore The Experience came a G-spot orgasm that all but turned Odessa inside out, and it certainly alerted many on the patio that she was vocal and very happy about the large orgasm that raked her body.\n\nOdessa said, \"Oh, Mr. David, that experience was wonderful. I've never been fisted and had an orgasm that way before.\"\n\nDave chuckled, \"Well, Miss Odessa, that was NOT The Experience, but we will proceed with that pleasurable event right now.\"\n\nHer eyes got large with disbelief that something more significant could sweep through her body under his guidance.\n\nMinutes later, Odessa's body arched as she pushed into his hand. She kept trying to speak but only half words or meaningless syllables came out of her mouth as she panted and squirmed for more contact at that magic spot inside her she'd never known.\n\nOdessa just silently collapsed onto the chaise when the immense orgasm became too much for her mind to process. Her systems shut down. She entered into some kind of sexual delirium where every corner of her life was sexual and raked with climax after climax. She felt a euphoria she'd never known before. She felt loved but highly desirous of more sexual contact with her lover.\n\nWhen Odessa's eyes opened, she found herself in Dave's arms. He was kissing her forehead and one hand fondled a breast. She liked that. As though on automatic, she clutched his hand to her breast, pushing her hard nipple into his palm. She said, \"I love you, David. I've never felt this way about another human. I love you. I need you. Right now, I need you to make love to me -- to fuck me in a way that makes you the happiest you can be.\" She spread her legs apart in clear indication of her invitation.\n\nDave and Odessa made love. He finished with her, timing his completion as he felt her cresting to yet another vocal cum. They lay together kissing as he withdrew after the culmination of their first time together.\n\nOdessa's eyes suddenly got large and her body jerked. She looked and Dave, but couldn't see down her body the way his torso covered hers. \"Someone is ... eating me ... they're sucking the cum from my pussy.\"\n\nDave smiled, \"Most likely that's my wife Julie, or, if it's not her, it's my wife Cricket. Both are prone to do that. They really like ...\"\n\nOdessa moaned, \"Oh, fuck. I'm going to cum again.\" Her body arched and Dave felt her shudder through another orgasm before totally relaxing again. Dave moved to hold and caress her.\n\nDave said, \"Hello, Julie.\"\n\n\"Hi, husband. Can we keep this one? She tastes really good and is built like a brick shithouse. I'd love to make love to her several times a day, and so would some of the others who've commented on her sexiness.\"\n\n\"We have to see. We hope she's going to accept a scholarship the way Heather and Kellie did. Odessa meet Julie. Julie meet Odessa.\"\n\nOdessa crooned, \"You gave me an orgasm.\"\n\nJulie smiled, \"That was my intent. I like to do that and you looked deserving. I'm sure I could fall deeply in love with you.\"\n\n\"I love Dave. Now, I love you Julie.\"\n\nJulie moved up so she could kiss Odessa. They made out as Dave continued to cuddle the smaller black woman to his body.\n\nOdessa's eyes got large again. \"Somebody is eating my pussy again. I think it's another female.\"\n\nDave glanced down her body, \"Ah, Felicity, so good of you to join us. I didn't know you were into this sport.\"\n\n\"I've just started to get really good at eating pussy on this trip, at least according to the other women I've romanced.\"\n\nOdessa said, \"You have my vote.\" She studied Felicity as the movie star looked up from between her legs. \"Hey, I know you, don't I?\"\n\nFelicity laughed, \"Maybe? We can talk about that later. Right now, I see another target that I haven't explored just yet.\" Dave watched her turn and move over three chaises to where Ike and Izzy had just completed their lovemaking. Izzy was visibly drippy, but that didn't seem to deter Felicity.\n\nOdessa said, \"Wow, you weren't kidding when you said that this whole group was horny and obsessed with sex. I think I've found people that think about things the same way I do.\"\n\nJulie said, \"Do you like to eat pussy?\"\n\n\"I've never done that.\"\n\nJulie walked around the chaise and straddled Odessa's head with her sexy thighs on either side of her head and neck as she faced her feet. She lowered her pussy right onto Odessa's lips and felt her tongue and mouth go to work on her. Julie had been dripping spunk from a coupling she'd made right after dinner with Troy -- Janet's husband. She explained that fact, but Odessa never stopped licking.\n\n<center>* * * * *</center>\n\nSaturday afternoon just after lunch, Dave collected Janet, Troy, Sandy, and Dan in a quiet locale, pulled out his cellphone and called Bret and Jean Edwards. Jean picked up almost immediately.\n\n\"Jean, Dave Prentiss here, and you're on speakerphone with some friends of mine that I want to introduce to you.\"\n\n\"Hi, Dave. We miss you. Come and visit. We were all together last night, and many are hanging around today helping Bret build a gazebo like you have on your Circle patio. He got a kit from someplace.\"\n\nDave said, \"Let me introduce Janet and Troy, and Sandy and Dan. The thing is they're from Atlanta, and not too far from you. Right now, we're all down in the Caribbean on St. Croix where Mark Worthington has a villa until Monday. We've been playing for a long weekend here. Of course, we're all sitting here naked.\n\n\"I wanted to get them plugged into your group to see whether there's a fit and chemistry. Right now, they're plugged into Mark's group, and you know they have about the same philosophy as the Circle because I've talked about them. I think they'd be an ideal fit. They can only partake of Mark's group once every month or more because he's so far away from where they live and their jobs. You're almost next door and could become family, if you know what I mean.\"\n\nJean asked, \"What do we do? I like the sounds of this.\"\n\n\"Well, I recommend some of you meet with them and see whether you click. You all can decide the locale and such.\"\n\nJean said, \"Hi, everybody.\"\n\nThere was a chorus of hellos back from the others. \n\nJean said, \"You're all back up here on Monday. What are you doing on Friday evening?\"\n\nJanet said, \"Nothing. We're all shaking our heads.\"\n\n\"We'll be having a barbecue dinner if the weather's good, otherwise going out to a restaurant nearby. Saying that I mean a whole group of us that shows up at our home to start the weekend with some cocktails and whatever -- maybe twelve to fifteen of us. Can you join us? We start any time after five-thirty when I get home from work. We go all weekend.\"\n\nJanet said, \"We can. What can we bring?\"\n\nThe call ended after some further arrangements, and expressions of appreciation for helping to introduce some like-minded friends who lived nearby. Dave made sure everyone on his end had the necessary contact information and addresses. He also suggested they get freshly tested and arrive with the results. Everyone agreed with the courtesy.\n\nDave said, \"I might even join you. I'm doing a little in-house consulting for a tech company in that neck of the woods. I fly up in my plane to Macon and get a rental car to drive around.\"\n\n\"Come stay overnight with us,\" Janet quickly said.\n\n\"I think I will,\" Dave said with a grin. \"I was just about to fish for an invitation a little harder. If not with you, then with Bret and Jean. I'll plan to stay with them Friday night, however.\"\n\nAs the group started to break up, Dave said to Janet, \"Hey, wanna have some fun with Odessa, our cute little omelet maker?\"\n\nJanet broke into a broad grin, \"Sure.\"\n\nDave said, \"Let's find her. I think she has an hour or so break about now.\"\n\nOdessa was just finishing some of the bussing of the tables when Dave found her. She flashed him a wide grin and he introduced Janet to her. He said, \"Janet and I were wondering whether we could teach you a little more about the joys of threesome sex?\"\n\nOdessa looked a little uncertain, \"Really. I have a break for two hours right now.\"\n\nDave nodded. \"Come join us. I think you'll love it and it'll expand your horizons.\"\n\nJanet ran a finger down the smaller woman's face and neck into the cleavage her blouse made. \"I promise I'll be gentle but instructive.\"\n\nOdessa said, \"Let me check out, and I'll be right with you. Where are we going?\"\n\nDave glanced around. \"How about down on the beach? There were some nice air mattresses down there as I recall.\"\n\nOdessa hurried off. Dave and Janet briefly talked and planned out how they'd like to really sex their new toy. Troy went by, and he also got enlisted. He promised to get Dan and Sandy to also participate.\"\n\nTen minutes later, Dave orchestrated Janet and Odessa into a sixty-nine on the largest of the air mattresses tied to a palm tree on the beach. Odessa munched away. \"I like this, Janet. You taste divine. I can't believe I didn't try one of my female friends years ago. I think they all experimented and I missed that opportunity for some reason.\"\n\nDave took turns penetrating pussies at each end of the sixty-nine. As he did Janet, Odessa licked his ball sack and whatever part of his cock she could reach. He extracted several times so she could suck off Janet's elixir before he went back for another helping. Janet duplicated the event on the other end.\n\nWhen Dave lay down, Odessa mounted his shaft as Janet rode his mouth. The women kissed and toyed with each other's breasts. They shifted around and Odessa lay down and Dave fucked her while Janet sat on her face. Dave teased her about changing partners, and Odessa finally said she liked that idea.\n\nTroy had silently appeared and skewered Odessa as Dave moved aside, sliding his cock into Sandy's eager pussy on the next mattress over. Sandy was sucking on her husband's prong.\n\nJanet moved so Odessa could see down her body to where Troy railed into her gorgeous darker body. Of course, she had his entire shaft deep inside her, and as Janet made the introduction he pushed in hard until there was nothing else to inject into Odessa. She laughed at the somewhat polite introduction as they fucked. Janet returned to sitting on Odessa's face, and Dan promptly moved into position, shoving his cock into Odessa's young cunt and frantically pumping away.\n\nA minute later, Janet repeated the introduction, only this time with a different man. Odessa was laughing. She said, \"I've never fucked two guys so close together in time, let alone three ... and I'm eating pussy ... really great tasting pussy. This is a historic afternoon for me.\" She thrust her pelvis up into some of Dan's downstrokes.\n\nTroy swapped places with his wife so that Odessa could suck on his cock as Dan worked the two of them towards an orgasm.\n\nOn the adjacent air mattress, Dave had his cock sawing into Deb and willingly accepted Janet's idea of sitting on his mouth. Not everyone came in some grand scheme of mystical synchronization, but over the next five minutes everyone had orgasms. Dan had felt really potent with Odessa, and had filled her cunt with enough cum to float a battleship. Troy had plastered her face, neck, and tits with an equal contribution of excited man juice. She rubbed the spend into her dark skin.\n\nOn the other air mattress, Dave had given a Big 'O' to Debbie, filled her with a load of his cum, and elicited an orgasm from Janet. Janet came and cuddled into Dave's side just after he extracted from Deb.\n\nOdessa knee-walked from her air mattress to Dave's. She said, \"Last night, Julie -- Dave's wife, ate all the cum from my pussy and said it was pure nectar. I want to do that now.\"\n\nDeb had already started seeping Dave's load, so that when she spread her legs there was a major rivulet of cum leaving her pussy and dripping down over her ass. Odessa lapped from asshole up to clit, capturing all of the excess fluids in one large inhale and lap.\n\nDeb urged, \"Snowball with me. Snowball with me.\"\n\nOdessa made some noise that sounded like a question. Dave translated to her, \"She wants you to share what you just extracted from her pussy with her in a French kiss. Do it several times.\"\n\nDave expected Janet to ask for some, too, but she kept quiet rather than confuse the younger woman. Odessa brought several mouthfuls of cum and pussy juice to Deb, and they kissed, roughly at first, but then with increasing sensitivity and romanticism. Dave heard a few tender words whispered between the women.\n\nEventually, Odessa led everyone into the water so they could rinse off all the sweat, cum, and pussy juice. Just about everyone got to rub everyone else. \n\nOdessa tried to dry off her hair, but was unsuccessful. She said, \"I have a hair dryer up at the villa I need to use, plus I'm sure it's getting near time for me to start on prep for the cocktail and dinner hour. I'll see you all later. I had a lot of fun, and ... and I love you all -- really. You're all such special people. I want to do this all again.\" She gave a sheepish grin, and then ran naked up the steps only holding a beach towel around her shoulders.\n\n<center>* * * * *</center>\n\nDave socialized the rest of the afternoon, and then winked at Odessa as she came around the patio taking drink orders at five o'clock. Later, she served some hot hors d'oeuvres and stayed in her role as just one of the villas maids. Dave did see her wink and smirk, but then quickly return to her role.\n\nThe five small busses were lined up at six-thirty to shuttle the crowd into Christiansted for dinner out. Each bus was assigned one of the many restaurants in the busy town. The bus Dave was on had been assigned Nate's Boathouse and Seafood Emporium. The twelve people on the bus broke into two groups of six and contributed to the restaurants noise and sounds of happiness at two of the tables.\n\nAfter dinner, the groups milled around the harbor front of the town, often running into others from the Worthington-Circle entourage staying at the villa. Dave ended up making out with Kim. She was Greg's wife, and Greg was Elsa Worthington's boss' boss, although they all insisted that the relationships were all collegial.\n\nKim stuck with Dave for the evening. He even had the feeling that she was fantasizing about being his 'hot wife'. She was wearing a thin halter top that revealed her excitement about life because her nipples were visible if one studied the landscape. She had a bare midriff, and then a sarong in a way that revealed she wore no other clothing other than her matching flip-flops. The wind wasn't blowing, but when she purposely took hold of the sides of the sarong and waved them slightly, the gap along her left side opened enough to reveal the strip of dark pubic hair she'd saved.\n\nKim's best friend Pam was similarly attired and right next to them at dinner. She seemed to be devoting herself to her husband Sean and to Kim's husband Greg. The latter was actually all over her with his hands, and she obviously loved it. At one point during dinner, Dave was sure he brought her off with fingers in cunt while they sat making out at the dinner table in the restaurant.",
        "After some wandering around the harbor area, the group connected with their jitney. When everyone was aboard, the driver shut the doors, turned on some island music, and started to head back to the villa.\n\nAt the very back of the bus was a bench seat that went from one side of the bus to the other. Dave, Kim, Sean, Pam, and Greg occupied that seat and all the others had seats in front of them, two by two. There was plenty of leg room and lots of laughter and teasing of one another.\n\nKim started it, by removing her halter, exposing her breasts. She then moved the sarong around her waist so the slit that had been at her side was in front. She separated the halves, and put Dave's hand right on her slit as they started to kiss. Next to them, Pam was doing the same, except she had her husband sucking on her breasts, as Greg started to finger her again.\n\nThe men's cocks were soon revealed as shorts got dropped to the carpeted floor of the bus. Blowjobs were started immediately, with Kim servicing both Dave and Pam's husband, as Pam blew Greg and gave out a ration of dirty talk about how they were all about to fuck 'in transit'.\n\nThe sarongs were dropped, and suddenly those erect cocks were surrounded by warm pussy flesh, as the women moved from man to man, sinking down on their cocks as they pointed at the ceiling of the bus. The aroma of sex filled the back of the bus, and filtered forward. Soon, they had an audience of those in the next seats forward.\n\nThose that weren't watching soon knew what was happening as the moans of the two women started to mix with the reggae music playing over the bus's stereo system. The result was some laughter and more kissing between couples as they sat. \n\nKim warned Dave as it was her turn to enjoy his shaft instead of Pam, \"Don't cum inside me or Pam. We have nothing to cleanup with and we don't want to drip all over the bus. We'll continue playing once we get to the villa and then you can fill either ... or both of us.\"\n\nThe games continued for the duration of the journey, although Sean admitted he was about to 'pop', so Kim finished him off with a very eager blowjob. His moan of climax could probably be heard on the other buses trailing behind them.\n\n<center>Chapter 24 -- Welcome Home</center>\n\nDave awoke Monday morning with Kim and Pam each partially atop his nude body. He recalled the ride home from Christiansted and their games on the bus, and it forced a broad smile on his face. He gently got each woman to move, and slipped out from between them. As he did, he noted the pungent aroma of sex and aroused woman -- remnants of their games the night before.\n\nGreg, Sean, and Izzy had been with them for a while the night before. Dave recalled Izzy riding his cock and begging for his load deep inside her tiny body. She claimed that cum made her complexion spotless, regardless of how her body received it. She then laughed until tears filled her eyes at the urban myth.\n\nPam and Kim somehow worked their bodies into the warm space Dave had vacated. Their arms went around each other and they were soon back asleep.\n\nDave used the shower off of the villa's room, and wondered briefly where Alice Grace, his assigned roommate had slept. He drew prurient pleasure and arousal from knowing which women slept with which men, especially his ten wives.\n\nAfter his shower and shave, Dave dressed in a bathing suit and t-shirt and headed down to the breakfast area on the patio. He was pleased to see Odessa standing at her omelet preparation station taking an order from Oliver. As he neared, she saw him and lit up with a bright smile. \"Good morning, Mr. Dave. Did you and all the others have fun in the town last night?\"\n\n\"We did, especially on the bus coming home.\"\n\nOdessa laughed, \"I heard about that this morning from Devon, one of the cooks. He also drives one of the jitneys, and I think you were on it. He said he almost ran off the road watching five of you fucking merrily away in the back of his bus. He was grateful that no one messed up the seats on the little bus.\"\n\nOliver stated ruefully, \"I was obviously on the wrong bus. We just sat and dozed on the way home.\" He took his omelet and headed off to join some others to eat.\n\nOdessa said, \"Was your offer to travel with you to Florida today serious? I brought my bags with me just in case it was.\"\n\nDave said it was serious. Where is your suitcase? I'll make sure it gets taken to the airport with the others.\"\n\nOdessa pointed to a large black trash bag, and a tattered cardboard box. \"We're too poor to afford a suitcase. My clothes are in the bag. My cosmetics and stuff, such as they are, are in the box. I don't use much. We can't afford it.\" She worried the omelet for a few seconds. \"I don't mind, really. It's how I grew up. I'm used to it.\"\n\nDave made a note to himself to get her a regular carry-on bag. If this worked out the way he hoped, she'd be traveling back and forth to the island a lot since her home and parents were there.\n\nOdessa said, \"What time are you all leaving?\"\n\nDave said, \"I think the jitneys will be waiting for us about ten o'clock this morning, plus a truck that will take all the luggage. We won't see it again until we're in Florida. I'll be sure you and your bag and box get on the bus with me.\"\n\n\"That'll work out for me perfectly,\" she said. \"I finish work right at ten o'clock, and then I'm off for the United States.\" She grinned happily. \"I've never been on an airplane. I've only seen them flying over. I've never even been near one.\"\n\nDave said, \"If you're worried you can sit with me. I'm also a pilot, and I can perhaps help any anxiety you may have.\"\n\n\"Oh, no,\" she exclaimed. \"I am excited beyond belief that I will get to travel with all of you. This is such a treat. I feel like I am leaving one life behind to enter into an entirely new life. I'm being reborn -- and after an eight-year or so gestation period I will become a doctor. The new life makes me worried but my momma said to just take each day at a time.\"\n\n\"That's sage advice,\" Dave said. \"No one in this group or the larger group you'll meet at the Circle wants to see you troubled, anxious, hurt, or in trouble, so we will be watching out for you just the way we watch out for each other. We are a very caring group.\"\n\nOdessa grinned, \"And you all have sex a lot. Last night I read about a hundred pages of Cricket's book. I discovered many things, including things specifically about you and your first wife Alice.\"\n\nDave chuckled, \"Well, you met some of them during this visit including Alice.\"\n\n\"Yes. I've never known a man who had more than one wife, and you have TEN! My God, you must have unlimited stamina.\" She smiled.\n\nDave burst out laughing at that statement. \"Not quite, darling Odessa, but I do try to do everything I can to please the women I make love with. Keep reading in that book, you'll learn much more about the Circle.\"\n\nOdessa said, \"I'll be reading on the airplane when I'm not looking out the window.\"\n\nDave joined Stacy, Gary, Tori, and Alice Grace at a breakfast table. As had been the practice earlier, the women were sitting there naked absorbing the rays of the morning sun. He slipped in and started to eat, allowing the conversation they were already having to continue uninterrupted by his presence.\n\nEventually, Tori said, \"I heard you are taking Odessa home with you and getting her started to become a doctor at the university.\"\n\nDave nodded, \"Well, she'll start as an undergraduate pre-med major. She's pretty motivated, but I suspect she'll need some tutoring. I have a hunch that junior high and high schools on this island aren't as rigorous as they are stateside.\"\n\nTori said, \"I talked to her when I was getting breakfast. She's so excited she may spontaneously combust any second. She's so pretty and so nice. You are doing a great thing. I volunteer to mentor her in any way I can, although I'm an hour away. I would drive down to work with her, if you're ever shorthanded to have someone support her. I hope I become as pleasant as she is to work with.\"\n\n\"You are, honey. You needn't worry. You come across as very friendly and compassionate, just like your mom. Kind people do not abound in this world, but you are obviously one of them.\"\n\n\"Thank you. I wish we'd had time this trip to be together. I miss you. The next time you come up to The Meadows, please plan to spend an hour with me.\"\n\n\"Now, how could I turn down an invitation from the hottest girl in the state? I will do just that.\" He leaned over and the two exchanged a very hot kiss. Dave allowed one of his hands to stroke her bare breasts ending at the white-hot nipple, and she responded by pushing gently into his hand.\n\nDave whispered to her, \"We do have about forty-five minutes before we have to be ready for the buses.\"\n\nTori grinned at him and pushed her plate away from her. \"Come with me.\"\n\n<center>* * * * *</center>\n\nAt dinner Monday night, Dave stood and introduced Odessa to the Circle. She'd met a few people already late that afternoon after the bus got back to the Circle and disgorged the thirty travelers who'd gone to St. Croix. Dave had also taken her around during the cocktail hour, but still there were many she hadn't met.\n\nPart of the afternoon with Odessa had been spent showing her one of the guest rooms in the core. She got introduced to Kellie and the two bonded rapidly when they learned they were both on the unusual scholarships that the Bennett Foundation provided. Kellie was more worldly, and took Odessa under her wing, and also promised to show her around the university.\n\nThe Circle was also a buzz about the graduation party that would take place in two weeks, starting Saturday afternoon and ending Sunday afternoon, if anyone were still around. Odessa couldn't imagine a party with a couple of hundred people.\n\nOne of the first things Dave did was raid the pile of suitcases the family had accumulated from various trips around the world. He found a realtively unused case in good condition, and brought it to Odessa. \"Here is a suitcase for you to have. It's yours. Someday, you may want one more to your liking, but this is one my family has that we don't use anymore. I think this will hold most of what was in your bag and box.\"\n\nOdessa's eyes got glassy. She said in a slightly sad tone, \"No one in my family ever had a suitcase, and this one has wheels, too. We used trash bags and boxes, like I did to come here.\"\n\nDave hugged the gorgeous dark-skinned girl. \"This is the start of many good things that will happen to you and your family. We are glad to help.\"\n\n\"All because I made you an omelet?\"\n\n\"All because you made me an omelet. I told you that was my specialty, although next weekend I'll be away, you could even take my place and prepare omelets for those in the Circle that want them.\"\n\n\"You'd let me do that?\" She sounded in disbelief.\n\n\"Certainly. We'll share the duty, and maybe even have a contest about who can make the most creative omelets.\"\n\n\"Oh, dear.\"\n\nEveryone in the Circle applauded Odessa as she stood after her introduction at dinner. She said a few words of thanks about the scholarship, the trip to Sarasota from St. Croix, her first airplane ride, and how she was amazed at the Circle and everybody. A few people near her stood and gave her hugs.\n\nDave had explained about the dress code for the Circle. Odessa had shown up wearing a pair of pink underpants. Alice asked whether she had a bikini, and she'd been told that they were too expensive, so no, she didn't have a bathing suit. When she'd gone swimming it was usually nude. Five minutes later, Odessa had a bikini that Cricket was glad to contribute to the cause. The two women were small and about the same size as far as clothing.\n\nOdessa liked that most of the women only wore their monokinis. Of course, for the past few days on St. Croix, all the visitors at Mark's villa had been nude or close to it. She was used to it. She was also used to the open sexuality the Circle practiced, although Dave told her people would give her a respite and not hit on her for a few days.\n\nOdessa said with a smile, \"I want to be hit on. I like sex, and everyone is so nice.\"\n\n\"In the Circle the idea is to cultivate friendships and then enjoy sex, but the other way around is all right, too.\" Odessa had laughed. \"Remember what you read about equality in the book, too. You can ask them.\"\n\nOdessa devoured Cricket's book, and was so impressed to meet her. Then Odessa learned that Cricket had written other books, some of them best sellers, and that just boggled her mind that she'd met someone famous.\n\nFelicity had been on the plane to the Caribbean, but it was only after a day in the Circle that Odessa learned her new friend was a movie star. A MOVIE STAR! She almost wet her pants she was so excited at the realization. THEN she learned that Dave was also married to ANOTHER movie star. Scarlett was home, friendly, and gave Odessa a hug that turned on everyone in the Circle when they saw their dark and light breasts pushed together as they kissed.\n\nOn Wednesday, Owen took Odessa to the university and got her enrolled as a student. Owen had a way of cutting through most of the red tape. The school administrators promised to contact UVI and get her transcript and other information transferred to them. Kellie took Odessa around the campus and gave her a student-oriented tour of all the cool places to know about and go. They hung out together in the student union, although the place was quiet and awaiting the graduation ceremony in a week or so. There were several other forays to the university during the week to meet some professors, and to get tested for placement in some of the pre-med courses or their prerequisites.\n\nMonday night, Odessa had been swept up by and into the younger crowd who were all students of some sort at the university. Mika and Carter captured her for the night, and Dave watched after dinner as a threesome went off to Odessa's new apartment. She looked very happy.\n\nEvery night the rest of the week, Odessa seemed to be captured and monopolized by some of the others in the Circle -- Caleb, Jay and Austin, and Jon, all seemed to take her under their wing, and crept into her bed. \n\nDave assured himself that she was happy with what was happening by talking to some of her friends, and by asking Matt and Rose, his stepson and stepdaughter, to keep an eye on her. He also wanted somebody to help her navigate what usually went on in the Circle on Friday and Saturday evenings. \n\n<center>* * * * *</center>\n\nDave flew his Cessna Citation up to Macon early on Friday morning, got a rental car, and drove to Bright Industries. He spent the day with the principals doing the research and developing the complex signal processing algorithms that received the data from the fancy lasers they used.\n\nDave was shown several demonstrations of the technology in the lab space behind the office space on this visit. Before the end of the business day, he made a call to Bjorn, asking whether he could come up and visit with them the following week to assess the potential of what they were doing for driverless cars. Since he was well into the supporting software, he thought there might be some synergy between the operations.\n\nAbout five o'clock, he left the fledgling company and drove up to Bret and Jean's new home in the new residential compound that Owen had established for the small group. By the time he got there, he was pleased to see that Janet, Troy, Sandy, and Dan were already there, and had been properly welcomed with some wine and good company.\n\nDave got hugs from all the women and did fist bumps with the guys. Others also started to arrive from their various jobs, most to the north, closer to Atlanta.\n\nBret and Jean handled the introductions of the nearby new visitors to the rest of the group. Dave could tell from comments that they'd all had some advanced knowledge of the two couples, and he learned that Troy had sent his hosts some bios on each of them so that the people they were visiting weren't quite so surprised by them. Bret had distributed them to everyone.\n\nAmber latched onto Dave's arm. She asked, \"Can we be together to start the night?\"\n\nDave gave his stock answer when committed couple was involved, \"Sure, so long as Richard remains happy.\"\n\nAmber giggled. \"He already has eyes for Janet. I think he's already asked her about the first round, and unless I'm wrong, he wants Sandy in the second round. He told me driving over that he wanted some new pussy.\"\n\nDave teased, \"And you want some old cock? Are you sure you don't want to try out Troy or Dan?\"\n\n\"Eventually. You're a sure thing for a pleasurable evening. If there are later rounds and one of them is available, maybe.\"\n\nUnlike some of the back-yard parties Dave had been to, at this one the men and women continued to mix and mingle instead of splitting into a men's group and a women's group. Even when the barbecuing started, the cooking team consisted of two men and two women: Dennis, Darcie, Jack, and Riley. Others drifted by and stayed for five minutes or so to engage with them.\n\nDave was pleased to hear Cory ask what the Worthington cookouts were like. Sandy laughed, \"Highly sexual. We're less concerned about nudity in our group than the Circle is. Dave knows this. Often, we're naked, and even the kids are running around that way. Once they're put to bed, the lovemaking starts. We typically have two major rounds, and those still able might do a late-night romp on our patio, weather permitting.\"\n\nIan asked, \"What do you do in bad weather?\"\n\nDan volunteered, \"Mark's living room is large and outfitted with ten sofas and a bunch of easy chairs that readily accommodate a couple making love. Some prefer inside with the air conditioning, especially in the summer months. I don't mind the heat and I like getting slippery with my partner as we have fun.\"\n\nOver dinner at the outside picnic tables, Dave asked, \"What is the status of people moving onto this tract of land?\"\n\nBret had his mouth full and pointed at Ian. Ian said, \"Instead of building, we are going to move our whole house, furnishings and all, so we will be next door neighbors with Bret and Jean. The move date is three weeks from now.\"\n\nTroy said, \"My God, didn't you say you lived in Pinewood? That's thirty miles from here.\"\n\nIan chuckled, \"The distance between our house and where it will be is thirty-two-point-four miles, to be precise. It took the moving company two months to get all the permits. Our house goes up on stilts next week, and onto a special truck the week after. It gets moved four miles to one of the main roads heading down this way, and rests there for a few days, until the utility crews can meet us. They go ahead of the house to raise or lower the electric, telephone, and cable lines. Fortunately, because that's a wide main road, those utilities run mostly parallel to the road without a lot of residential crossings. Each crossing costs us about five-hundred dollars if they have to tinker with the wires more than raise them over the roof.\"\n\n\"And what happens here?\"\n\n\"There's a foundation being dug and poured this coming Wednesday. It'll be ready by the time the house gets here. They set the house down and hook up the utilities that day, and we're in business just as though we lived here all our life. Total cost for the move will be about seventy-grand.\"\n\nSandy said, \"You like the house that much?\"\n\nRenata said, \"What we like is that our whole group, even with guests, can all be in the house at the same time without feeling crowded. We looked at several hundred floor plans, and every time we found one, we liked, it cost a lot more than our house would sell for plus the seventy grand. One of our friends is a real estate agent, and she suggested we move the house and just sell the lot. She's already found a buyer.\"",
        "Dinner ended and coffee and home baked cookies were served. Bret announced, \"I'll put on some dance music for those still seeking partners for our first round.\" He touched his iPhone and some mellow music started over the outdoor speakers.\n\nAmber kissed Dave and then led him past the dance floor to a large air mattress beside Bret and Jean's in-ground pool. She whispered and giggled, \"This is the best place to make love. I know; I've tried them all.\"\n\nA few minutes later, Dave was munching away on what he vocally announced to its owner was a great tasting pussy as said owner groaned and twisted and turned with his touches. \n\nDave mumbled to Amber one word after a few minutes, \"Experience?\"\n\nAmber moaned back her answer, \"Yes, please.\" Two words.\n\nFifteen minutes, four small orgasms, a G-spot crest worthy of note, and one giant climax, Amber lay comatose in Dave's arms as he licked his fingers clean from giving her an overload of pleasure.\n\nAs Amber came to, she studied Dave in the dim light, \"I know I said this before, but I love you. I know all the distance and environment and everything about the two of us prevents us from being together as frequently as I'd like -- like four times an hour -- but I still love you.\"\n\n\"I love you, Amber. I'm glad you've learned to love multiple people at the same time.\"\n\nShe lightly chuckled as she came to and the fog of orgasmic pleasure faded. \"Me, too. I never realized until a year or so ago that I was a sexual being having a human experience. When I did, I became an absolute slut, at least in the privacy of my home and with my close friends. I have yet to ever get enough sex, but when I'm with you and you do what you just did to me, I am completely satisfied.\" She giggled, \"That'll last about another half-hour. Hey, I want you to fuck me, too. All that's happened here is you giving me lots of orgasms and getting your face all tasty. Come screw me.\" She giggled some more.\n\nAmber squirmed into an inviting position and splayed her legs apart inviting a missionary-style start to their further lovemaking. As Dave sank the body organ that made him an absolute slut, as Amber put it, into her body, he glanced around them.\n\nJean had Troy solidly ensconced inside her pussy, and they were having what appeared to be a slow and romantic time together, laced with many soulful kisses. Sandy and Cory were next to them on a chaise with her on top riding a cock-horse to Banbury-cross.\n\nFurther afield, Bret was energetically sawing his sausage into Janet as she egged him on. Dave knew Bret liked dirty talk, and Janet was giving him a huge dose of it as they mated. On his other side, Renata was riding Dan's supine form as Riley sat on his face to be eaten. He seemed to relish the occasion; at least what Dave could see of the encounter.\n\nDave thrust back into Amber, and she had an orgasm. \"Oh, fuck. That thing you did to me before left me right on the edge for any other sex play. I'll be like that all night long.\"\n\nDave teased, \"Want me to stop?\"\n\n\"Only if you want to die an early and ugly death. You keep fucking me through as many of those orgasms as ... oh, fuck, here's another one.\" She raised her hips and surged forward into Dave's instroke, as her pussy started to spasm around his cock. Dave liked that feeling.\n\nLater, Dave made love with Monika and Brittany. They both praised his idea to introduce the locally-available members of Mark's clan to their small group. They were sure everyone would want them to become equal members along with everyone else.\n\nDave was sleeping with Darcie when Janet nudged him awake from being next to him on the mattresses spread out on the living room floor. She whispered, \"We love all these people. Please do anything you can to help us become regulars here. Troy wants to build a house here, too -- maybe a duplex with Sandy and Dan.\"\n\nDave kissed her and she disappeared in the darkness of the room.\n\nDarcie took hold of Dave's quiescent cock and started stroking. She whispered, \"We want them. There's no worry. They'll be here as much as they can be. If Troy and the others build here, that would be fantastic.\"\n\nDarcie and Dave kissed for a while. He apologized for waking her to talk to Janet. She said, \"I'm not complaining unless you fail to fuck me into this mattress with this thing in my hand.\"\n\nDave was very accommodating.\n\n<center>Chapter 25 -- Graduation Party. Trouble Drops By</center>\n\nThere had been some marvelous ideas to decorate for the graduation party. Again, the Cessna 150 had been hoisted up onto the roof of the core living room. A sexy mannequin borrowed from a department store at the mall was dressed in a graduation gown was getting out of the plane and stiffly waving to the crowd. The gown was open in the front revealing its nudity and a prolific crop of pubic hair. It was quite funny. Other banners and streamers were draped throughout the patio, living room, hallways, and just about anywhere that was considered 'party space' proclaiming Happy Graduation in one way or another.\n\nThe classroom that had been used for various college courses and for the home schooling had been cleared of furniture, and extra mattresses from all over the Circle had been lugged into the room, creating some ultimate sex den. As Dave stood at the entrance to the room, he noted a large bowl containing about two hundred condoms on a table just inside the door.\n\nMultiple tables for food had been set up at four locations on the patio. Six bars had been set up. Austin had told Dave that a few of the older members of the Circle had volunteered to staff the bars for a while, and others were going to help serve the food. She said they didn't want any falling down drunks, and wanted everyone capable of conscious consent.\n\nRose and Matt found Dave. She explained that several of their graduating high school friends were coming to the party. All had paperwork that they'd arrive with, all were of legal age, and all were hoping for a raucous time that involved a heavy dose of sex. She said she'd vouch for all of them. Matt nodded, and Dave took that as the stamp of approval for their guests.\n\nAt four p.m. Dave's cellphone rang. He hustled away from the preparation activity to take the call.\n\n\"Mr. Prentiss, this is your friend from Houston. I have some unsettling news.\"\n\n\"Go on.\"\n\n\"Our opponents are in your town. We don't know how or why or what they know at this stage, but they found something that led them to your locale. We are rushing resources to your city.\"\n\nDave speculated, \"You probably can't do anything to them. They've probably reported what they know or don't know back to South America.\"\n\n\"We agree. We want to protect. People with a badge and the password Angel will be a friend. Today, we followed them to six other gated communities near you. We're not quite sure what they're looking for.\"\n\n\"We're hosting a huge graduation party tonight. Many, many guests - hundreds.\"\n\n\"We know. We may attend. We'll find you to check in.\"\n\nDave grimaced, \"Let's hope that they run out of leads before they find us here.\"\n\nThe call ended and one-by-one Dave found members of the security committee and let them in on the news. Rose looked as unsettled as he was, but then so did the others. The news led to some rapid re-staffing of the guard house, and the requirement that all cars would be stopped so the occupants could be visually screened. As that happened, they would also be appearing on a high-resolution video. If something happened, at least they'd have pictures of the opposition.\n\nDale Harnett took the four p.m. to six p.m. guard house duty. He parked his car in a way to force all cars through the one gated lane into the Circle Compound. Despite a back-up of five to ten cars, he checked each car in as planned. In his opinion, he was only seeing students raring for a good party. He'd smile, aim them up the rise, and told them to follow the signs for parking and entry to the party.\n\nBy six p.m., when Dave arrived to take over at the guard house, Dale had admitted one-hundred-ten cars, most with a minimum of two students per car. The arrivals continued with occasional back-ups.\n\nAt six-thirty, a car with three men in it appeared in the line. Dave had his finger on the 'Alert' button they'd installed that would light up all the right people's cellphones like a nuclear detonation.\n\nAs they pulled up at the gate, the driver smiled at Dave and flashed his badge. The other three men held out badges. Each man in the car said the word, \"Angel\". Dave sighed and relaxed. He said to them, \"Lose the suits. Put your guns in your pants and shirts outside your pants. So far, we think we've only admitted students.\"\n\nOne man got out of the car and came into the guard house. He said, \"I'm Malick. I'll do double-duty with you, if that's all right.\" He quickly adopted a casual look, and even picked up and held an empty cup as though he were part of the party that had leaked down to the guardhouse. \n\nIn a lull, the man said, \"I have pictures of the men in question in my pocket, but I don't want to show you because if I do, you'll make some gesture of recognition when you see them, and tip them off that you expected them. Keep your panic button handy as you intended. I'm just a friend keeping you company.\"\n\nMore students arrived. Dave even recognized a few of them from visits to the Circle or as students he'd seen in some of the classes taught on the premises.\n\nAt seven-thirty, a tan Toyota rental approached the guardhouse with two Hispanic-looking men inside. It pulled up, and the driver put his window down. \n\nDave did his smiling bit, but distrusted these slightly older men. Something was 'off'.\n\nThe man said with a slight Spanish accent, \"We're looking for Devlin Connor.\"\n\nDave said, \"Oh, is he a resident or guest at the party? There's a big party here tonight. It's graduation time.\"\n\n\"Oh, he's a resident.\"\n\n\"Hold on.\" Dave consulted a torn and tattered list of residents, as a dutiful guard would when faced with something he didn't know. He didn't bother to talk to his 'friend' in the booth with him. He turned back to the men in the car, \"There's no one living here with that last name or even close. We have a student Elton Cleats, an older couple Olive and Stan Carter, and a Chris Carlos. Those are about the only names starting with 'C' we have. It is a 'C', right, and not a 'K'?\"\n\n\"Si ... I mean yes. Connor.\"\n\nDave shrugged, \"Sorry. I even glanced at the guest list for tonight's gig, and there's nobody with that name.\" He gestured up the hill.\n\n\"May we look around?\" the driver asked.\n\nDave frowned, \"No, I'm afraid not. It is a private party, and I'd lose my job if I let people up there that weren't invited. They're checking everyone very closely for invited guests only.\" He tried to look impoverished and in need of the job.\n\n\"Oh, we wouldn't want that. Not to worry. Can we just swing around your building to leave?\"\n\nDave said, \"Sure. If you want, I have a phone book for the whole downtown area. You could look up that Conrad family and see whether they're listed.\"\n\n\"That's all right. We tried that. We'll try some other possibilities.\"\n\n\"Sure. G'night,\" Dave waved. The car did a semicircle around the guardhouse, and drove off down Christian Grey Drive.\n\nAs soon as the car was out of sight, Dave was texting and the deputy marshal who'd been with him in the booth was on his cellphone to his cohorts who'd gone up to the party area.\n\nAfter their messages had been relayed and several more cars cleared into the party, the marshal said, \"Good. We got a locator tag on their car. They're being followed right now.\"\n\n\"How you do that?\" Dave asked.\n\n\"While they were stopped here talking to you, our little electronic robot drove under the car and made the attachment to the frame. The robot is now under whoever's car that is sitting over there.\" He pointed at Dale's car that was being used to block traffic running through the resident's speedy entry lane.\n\n\"Where the tracker?\"\n\n\"It's a white van about three-hundred yards down Christian Grey Road. No lights visible. They controlled the robot and also have the tracking system. The thing is good within five miles. If they try an end run to come in your back door by the airport, we'll know about it.\"\n\n\"We have a gate guard back there,\" Dave said.\n\nThe marshal smiled, \"And just like me, he has a 'buddy' standing with him and having a party drink. He also knows what our guys look like. Those were the guys, by the way, in case you had any doubt.\"\n\n\"What'd you do about the people they're looking for?\"\n\nHe shrugged. \"Don't know. Don't care. Only care that you guys are not collateral damage. You were very credible, by the way.\"\n\n\"We rehearsed all sorts of scenarios.\"\n\n\"An ounce of prevention is worth a pound of cure. Well done. I think they believed you.\"\n\nDave's eight o'clock 'relief' came a little early based on the text message. Ty was in uniform of Harnett Security Company. Dave recounted word for word the conversation with men, gave an accurate description of the car, and introduced the marshal to him. The three men chatted for a few minutes, and then Dave went back to his house and got into casual clothes.\n\nAt ten p.m., Mike Holiday went down to relieve Ty. He'd gotten a run-down of the brief meeting from Dave. Larry Wainwright had also been clued in, and went down to relieve Bill Lewis at the rear gate. So far, there'd been no activity at the rear gate.\n\nDave wandered around the party space along with many of the other Circle members. There were clusters of young men and women eagerly talking to each other all over the patio, and living room. Food was being consumed at a prodigious rate, and BYO beer and wine even faster. The bars hadn't stopped serving anybody, and while some of the group were loud, no one seemed unruly.\n\nThe party attendees started to thin out starting around eleven o'clock. Concurrently, the mattress room saw a further influx of visitors about the same time. Dave peeked into the darkened room and saw at least ten couples in various stages of intercourse or some form of sex in the dim light.\n\nHe noted that the high school students were all in the pool. The women were only clad in bikini bottoms. For Rose and Danica, this was standard dress, but it must have been a reach for the other girls. Rose and Danica were sitting on the side of the pool, not at all concerned about their exposure. The other girls were mostly up to the necks in the water, unless they had to stand up for some reason, such as to take a drink from their glass on the side of the pool.\n\nSome of the college age girls had also gone half-naked, and one or two were completely nude. Dave noted that many of the Phi Theta Rho and Kappa Delta Alpha students were nearly naked, in keeping with the usual Circle dress code. Guests not used to the Circle would gawk at them for a while, and then the novelty would wear off, plus they'd realize that nudity didn't necessarily imply some sexual was taking place -- at least right then.\n\nMore of the college age youths went in the pool as midnight approached. An increasing number of those were nude, since they'd arrive without bathing suits and didn't want to stand around in wet clothes after a refreshing dip.\n\nAlso, after the crowd thinned out, an increasing number of partiers took to making out on one of the chaises on the patio. Often, apparently, since the partners were both nude, they did what comes naturally and started to fuck.\n\nFelicity hung out with Dave for a while as they sat and watched the party from two chairs against the house. She said, \"It seems like so long ago when I went to my graduation party. It hasn't even been fifteen years.\"\n\nDave chuckled, \"Try having a couple of stepchildren that are in love and who just started living together.\"\n\n\"Matt and Rose?\"\n\n\"Precisely. I can't believe they're old enough, nor can Scarlett. I guess this is the natural order of things. I've heard my mother say the same thing.\"\n\n\"Where is she now?\"\n\nDave laughed, \"Well, my stepfather and she were headed for Colorado in their new RV and last in Oklahoma. They have something lined up near Colorado Springs where they'll stay for a couple of weeks and explore the area. They're towing a car behind their monstrous motor home.\"\n\n\"I just love their home on wheels. I have a sense of wanderlust that I should give into some day.\" Dave loved hearing her speak with her English accent. It came through when she didn't try to suppress it and speak 'American', as she put it.\n\nDave smiled, \"I do, too. I've been warming up to do something like that, too; a grand trip on the motorcycle my wives gave me.\"\n\n\"Do you mean something like what Jim Mellon did in the book and movie Road Trip?\"\n\n\"Exactly, except I'm quite sure I can't sing or play the guitar the way he could.\"\n\n\"Maybe you have other skills ... besides the obvious ones.\" She teased and then kissed him.\n\nAt midnight, Dave walked down the slope to the guardhouse. Mike left and Dave took over for a four-hour shift. Most nights, that shift was boring and exceptionally quiet. Because of the party, there were many cars leaving, and occasionally someone would come back or a late arrival would show up. The marshal was still there, this time drinking coffee from a thermos.\n\nDale relieved Dave at four a.m.; he'd be on until eight a.m. Dave went home and slept. The marshal had disappeared during his shift after getting a report that the 'subjects of interest' had checked into a downtown hotel and appeared to have bedded down for the night.\n\n<center>* * * * *</center>\n\nDave and Odessa ran the omelet station for the Circle on Sunday morning. There was considerable detritus from the party scattered around the patio and living room, but Dave ignored it and focused on providing breakfasts for all who asked. There were two squads of people that would have everything back to normal within the hour: the normal patio cleanup service group and the group of party planners.\n\nDave figured that at least fifty young men and women had slept overnight after the party more or less ended around one a.m. That was when the music was turned off and many of the groups fragmented. The live band had played until midnight, and then a DJ took over for another hour of music.\n\nDave had checked in the 'Mattress Room' on his way to serve omelets, and discovered about twenty or more lumps sleeping in the room, many under sheets or covers they got from somewhere. Only one couple in the room seemed to be having a nice morning wake-up fuck. Two others were naked and cuddling, and also watching the couple.\n\nOdessa gave Dave a large kiss. She opined, \"I had the best time here last night. The party was wonderful. I met so many nice people.\"\n\nDave teased, \"And got laid?\"\n\n\"Of course,\" she admitted with one of her trademark smiles. \"Six times, and I had more orgasms than that. I got kind of slutty. Heather and Cricket told me it was expected at parties like we had, and that I could go back to my more normal ways after things ended. They were right in there with me, I noticed. I saw Heather pull a train with five guys at one point. I did figure out that the older guys pay more attention to a girl's orgasmic needs.\"\n\n\"Just how old is an older guy?\"\n\n\"Well, you for one, but we didn't see each other last night. I was thinking some of the guys who are closer to thirty, plus or minus. That's who seemed to discover me last night.\"\n\nSeveral visitors asked whether they could have an omelet, and were told they certainly could. Their orders taken, Dave watched as Odessa started her magic on his burners, pans, and ingredients. He helped prepare the serving and got utensils.\n\nDave asked Odessa after their customers were gone, \"I never asked you how you fared last weekend?\"\n\n\"Oh, making omelets went well, I think. At least, nobody complained. Everyone was very friendly. Most people stood and talked to me while I cooked for them, so, I met about thirty people that way. I'm good at remembering names, but that was overload. As for the rest of the weekend, I was well taken care of.\"",
        "\"You met Matthew? I asked him to be sure you were included in our activities.\"\n\n\"Oh, yes. He's a stud, like his stepfather. We had a half-dozen really great fucks, and that was just between Friday and Sunday, and didn't count the other guys he orchestrated into my little black velvet love tunnel. Rose gave me some great pointers about eating pussy, too; and I tried all the ideas out on her after she'd been fucked a few times.\"\n\nDave shook his head, \"This is verging on TMI.\"\n\n\"TMI? I do not know that term.\" Odessa's island accent came through.\n\n\"Too much information. It means you're over-sharing information with someone that might like to NOT know the details.\"\n\nShe smiled, \"Oh, so I shouldn't tell you about the little orgy we had on Saturday night with Matthew, Rose, Toby, Danica, me, and a couple of other students -- fourteen of us that swapped around and fucked all night long?\"\n\n\"I get the idea. You ended up happy.\"\n\nOdessa beamed, \"And very full of cum, but Rose ate it out of me as Danica waited her turn. Don't worry, though. I returned the favor a few minutes later and did the other girls, too. I didn't know such a small girl as Rose could hold so much cum.\"\n\nDave rolled his eyes and muttered, \"Definitely TMI.\"\n\nOdessa laughed, \"Rose said that she loved making love with you. She said she always wanted to be available to you, but that you kind of resist the contact because of your past relationship with her as kind of her father figure.\"\n\n\"That's true,\" Dave admitted. \"She had to really work on me to even get me to have a first time with her.\"\n\n\"Well, I'm here to tell you that you should definitely repeat often with her. She's so in love with you, it hurts. And yes, I know she's also in love with Matt and that the two of them live together. I think that's so cool at their age, but then I guess I'm only a year older.\"\n\nDave nodded, \"I guess I do, too ... and I'm getting the picture that they and you have really loosened up. My wife Alice and I were at the other extreme at that age. We were wound up tighter than a drum. It took a lot to get us moving in the right direction.\"\n\nSeveral additional young men and women Dave didn't know appeared on the patio. Several ordered an omelet and were very friendly with Odessa. Dave prepared this batch as he watched Odessa interact with them. She was social, and not afraid to introduce herself to those she didn't know or comment on how great the party had been.\n\nDave was closing up the omelet station, when he noted the marshal that had spent his most of his previous evening shift with him appeared between two of the houses. He saw Dave and made a beeline for him. Dave sent Odessa into the kitchen with some of the equipment so he could talk to the man for a couple of minutes.\n\n\"Mr. Prentiss, they're on their way back here. We dropped a different man at the guardhouse. He's there with your man Mike Holiday and has alerted him. I'll stay up here in case they decide to do something other than accept the party line.\"\n\nDave commented, \"They'll recognize me, if they come up here -- and you, for that matter. I think I'll disappear and watch from my upper window. I can also see the guardhouse from up there. Do you want to take a look?\"\n\n\"Heck, yes. That'll give me a visual on what happens down there.\"\n\nThe two men briskly walked to Dave's home and he led the man upstairs. Dave explained about the likelihood of nudity in his house, as well as the strong possibility of ongoing sex. While the marshal's eyebrows rotated up to near his hairline, he said he'd try to ignore whatever was going on.\"\n\nThe window with the best view of the guardhouse was in the master bedroom. In the master bedroom there were six of Dave's wives. Four of them were making love with someone: Alice with Dale, Cricket with a young man Dave didn't know; Nikky with another young man he'd briefly met the night before and whose name he couldn't remember, and Bridget with Stan Carter, who lived just outside the gates. The other two were watching them and stroking their pussies in a highly erotic way.\n\nDave tried to ignore the comments from the available women as the two men strolled by, opened the window shade letting in a blast of sunlight into the otherwise dim room, and then pointed towards the Access Road. The two stared at the guardhouse. The marshal also texted his partner in the small structure to tell him they were in view.\n\nFive minutes later, the marshal got a text. He relayed the message, \"They just turned onto Christian Grey Road. They should be in sight in seconds.\"\n\nAs expected, the tan sedan appeared and rolled up to the guardhouse. The interchange between the men in the car and Mike took longer than the night before. Dave could see Mike had some paper in his hand, probably the resident's list. Dave knew he could 'dig around' in the area under the window and find lists supposedly one and two-years old. He guessed that Mike was doing that, and even sharing it with the men in the car. A tattered and well-used list a year or two old that didn't show Dev Connor might be more convincing than just telling them that 'fact'.\n\nAnother car pulled up behind the sedan seeking entry to the Circle. He saw Mike ask the men to pull their car aside by his gestures. They did and walked back to the guardhouse to continue talking. Dave wasn't sure who was arriving, but Mike waived them through, apparently telling them where to park after checking them in.\n\nDave cursed, \"Damn, I wish we could hear them.\"\n\nThey watched as the men continued to talk, and Mike kept shaking his head. As the two men asked their questions, the usual answer appeared to be 'No'. The marshal shrugged and apparently claimed to only be a friend visiting while his buddy worked.\n\nEventually, after looking at several sets of really worn out and weather-beaten stapled mats of paper -- the residents list, the men got in their car, pulled around the guardhouse and left.\n\nAs soon as the car was out of sight, Dave and the marshal were out his front door at a near run, and trotting to the guardhouse. \n\nDave pestered Mike, \"What happened?\"\n\n\"They asked for a Devlin Connor or his family. I did as we rehearsed. No one here by that name -- never was, never will be. I showed him the list of residents, and then the ones a year old and two-years old that we still had laying around. I had to dig around in all our other paperwork for them, of course.\n\n\"They wanted to know what other gated communities there were in county. I actually laughed at that. I aimed them at five others I knew about, but there have to be a hundred. I told them that. I'm not sure what will come of it, but that seemed to be the key they had -- that somebody named Devlin Connor lived in a gated community in Sarasota County. I pointed out that that included Venice about twenty miles south of here and all the towns in between.\n\n\"Oh, yeah, I checked on the Internet for them, but there was no record of such a person, in the county. There's a female doctor by that name about two-hundred miles north of here and she didn't interest them. I showed one of the guys the information that came up on a Google search. The next nearest one was in Michigan, and that was a woman again.\n\n\"I'd say the men were disgusted and frustrated that their search came for naught. My guess is that they've had much the same result everywhere they've gone, at least that was the way they acted. I didn't ask why they wanted to find the guy or why they didn't have better information about him. Oh, well.\"\n\nThe two marshals nodded to each other. A third man appeared in a car and picked up the other two. Dave was told, \"They're heading back to their hotel. We'll keep in touch if anything changes. Hopefully, you won't see us again.\""
    ],
    "authorname": "SteveWallace",
    "tags": [
        "security threat",
        "celebrity",
        "graduation party",
        "incest",
        "interracial",
        "loving wives",
        "polyamory",
        "polygamy",
        "scholarship",
        "sex party"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/loosening-up-bk-09-ch-21-25"
}