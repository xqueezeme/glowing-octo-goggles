{
    "title": "Mine",
    "pages": [
        "I hope this was worth the wait. It is one that I kept coming back to and wanted to make sure it was to my liking. Please comment and let me know what you think!\n\n**Warning: This story consists of unfaithfulness and touches on the topic of suicide. If you do not like either of these themes, I would suggest reading one of my other stories.\n\nXOXO SkylerLuv\n\n******\n\nI know I'm dreaming.\n\nMy father is watching T.V on his favorite seat in the house. He has a small blanket over his legs, the way he usually did when he intended to stay in his seat all day. His hair does not have one strand of gray hair and his smile is as bright as I remember. If this wasn't a dream, he would be older, probably have more wrinkles around his smile, and definitely more gray hairs.\n\nI hear mom humming in the kitchen. My guess is she's preparing dinner by the slanted sunlight coming into the living room. I'm on the loveseat watching T.V but really watching my dad. This is going to hurt when I wake up. I know it will. It always does. I wish my mom would come out so that I can see her face but it has been a while since I've seen her in my dreams. The announcer catches my attention and my dad's favorite team gets a touchdown. He cheers, gets off from the couch and just as he is about to turn to me, I'm jolted awake.\n\nFresh tears roll down my cheeks.\n\n******\n\nThere has been a gray cloud hanging over my head all day.\n\nI try not to think about them as I drive back to the hotel. I would think that after all of these years I would have figured out how to cope with the empty feeling in my chest. Instead I try to fill it with alcohol, random one-night stands, and until recently smoking. Eventually I realized it is not just an empty feeling, it is a void. No matter how much I throw in there I never feel full. Never feel like I even make any real progress. Which is why I just keep doing it anyways to get at least one second of happiness, or fake happiness. It is either that or just allow the abysmal hole to take over my whole body.\n\nTherapy helped some but I haven't been to a session since I graduated college a couple of years ago. Talking about the dead doesn't help me get over it the way I want to. Carrie, my therapist, explained that until I learn to create meaningful relationships with the girls I hook up with, I will get nowhere. Vulnerability has never been my forte.\n\nAllowing myself to open up to people and have them decide that I am worth their time or vice versa is too much for me. So instead I stopped going to therapy and started looking for other ways to keep my mind off my parent's death and ultimately being alone.\n\nI don't realize until I'm at the bar across from the hotel until someone sits next to me. This happens sometimes. I get lost in my thoughts and just go through the motions. I've been on autopilot. I'm ready to drink the rest of the night away and sleep it off. Hopefully no more painful dreams. And no more thinking about Carrie. I don't want to go back there.\n\n\"Are you here alone?\" There is a nervous tilt in her voice. The stranger who decided to sit next to me.\n\nIt does something to my insides. I'm a sucker for the damsels. Although she has to be brave to start up a conversation with me. Even the guy I had the business meeting with earlier avoided small talk if he could help it. It's very hard for me to hide annoyance, anger, or pretty much any emotion from my face if I'm feeling it. She has to want more than chat is she's talking to me.\n\nI turn to look at her and smile.\n\nI guess she will do. A night wrapped up with her should help me get over this feeling for tonight at least.\n\n******\n\nShe's a crazy one.\n\nHer thick, brown hair falls down her back like a cascade of melted chocolate. It is shiny and layered. Her shoulder blades peak through the strands with every move she makes. She's begging for my touch. Her skin is kissed by the sun, warm and inviting. She could pass for Italian or Hispanic. She has a dancer's body, ballet if I remember correctly. I don't usually do dancers. They are too skinny, never around, always obsessing about their weight. But tonight, anyone will work. I just need to scratch the itch.\n\nComparing myself to her I notice my skin is lighter to hers. I am fair like my mom was. My hair is darker and my eyes are brown like my dad. I shake my head to move past the hurdle of their memory.\n\nThe way she rolls her hips back and forth just out of my reach makes me hang on to the bed frame. It is a welcomed distraction. I want to toss her on her back. Show her who is really in charge here but I let her have her moment to shine. It won't be long though. I always have control.\n\nShe turns her head to look at me and I'm stunned for a second too long. Her piercing blue eyes grip at my soul and I clench my teeth together. Her eyebrows are dark, a nice contrast from her crystal blue eyes. They're perfectly plucked and settle just an inch higher on her forehead when she sees how unsettled I am. She finds this amusing. Her smile starts to form, as if I needed another indication that she thinks my reaction is funny. I pounce with agility that surprises her. With her body under mine in the blink of an eye, she squeals and tries to buck me off her. I grab both of her wrists and push them up so they are inches from the wooden headboard. All hotels have nice thick bed frames that makes my job easier.\n\nI pull her up effortlessly. Being 5'9 and lean makes it easier to do this to her. She's probably a couple of inches shorter but definitely much smaller. The things I can do with a flexible dancer. My mouth waters.\n\n\"Hang on to this,\" I wrap her fingers around the thick wood. \"Don't let go or you won't get to cum.\"\n\nI see the defiance in her eyes. I almost pull the plug. I don't like defiance in the bedroom. Girls think it's cute and sometimes I play along but I am not in the mood for that tonight. I need her full submission. By the way her body keeps moving under mine I can tell she has probably not done this before. A stab of regret hits my gut when she opens her mouth. I don't want this to end before it even starts. This is the only thing I got going for me tonight. If this falls apart it will be the cherry on top of the awful day I had.\n\nMy hand wraps around her neck and I give a small squeeze as a warning.\n\n\"Shhh,\" I run my puckered lips against her own. My hand trails up her neck and lands on her cheeks. \"I don't want to hear anything come out of those fuckable lips of yours unless I ask you a direct question.\"\n\nShe pouts and my head tilts to the side. She's a spoiled brat. I usually don't do those either. So demanding, thinking they don't have to do as they're told simply because they're too pretty or have money. I noticed her expensive bag and high-end shoes back at the bar. She even smells expensive. Maybe this won't work. If she doesn't listen to me, I can't do it.\n\nI sit back and cross my arms. \"If you can't follow my rules this won't work.\" It is only for one night, I want to add. She doesn't know that. Deep down I hope she can understand why. I mean we didn't even exchange names back at the bar. I'm only in town for business. I don't imagine I'll ever see her again.\n\nShe nods eagerly and bites her lips.\n\nI look at the clock on the nightstand. I'm just going to make her cum and then make some excuse up about work and ask her to leave. I have already wasted too much time trying to explain how I want this to go. I don't even want anything out of it anymore. Well, anything but getting a second to control her. Just once.\n\nI shuffle down her body not touching any part of her with my hands. Her back arches as my mouth hovers inches from her skin. Her breasts are tempting. The caramel nipples have my salivating. But I won't give in. I move further down until I reach my preferred destination.\n\nI lay on my stomach and stare at her bare pussy. Her juices are already seeping into her ass and the sheets. I guess control is as much of a turn on to her as it is to me. I spread her legs apart and bend them at the knee. I look up to see her looking down at me. Her cheeks are flushed and her breathing speeds up when we make eye contact. She is beautiful. She's probably also very flexible. Too bad I will never find out.\n\nI dive in without warning. My tongue laps at her soaking hole, she tastes divine. Her smell is very telling and I close my eyes and groan.\n\n\"Oh.\" She whimpers.\n\nI snap my eyes open. Oh, what I wouldn't do for a gag right now. How long would it take me to train her to be a good submissive? I flatten my tongue and lick from the very bottom of her seeping hole to her throbbing clit. I repeat that motion a handful of times and then focus solely on her clit. Shouldn't be much longer now. I assault the swollen pebble and feel her body respond the way I intend it to. I continue to lick waiting for the moment when she starts to shake but it doesn't come.\n\n\"Cum for me.\" I murmur against her slick lips. She doesn't respond.\n\nMy eyes trail up her body. Her hips dip up and down, pressing my face closer and moving further away. Her soft stomach flexes with each swipe of my tongue. Her breasts press into the cool air of the hotel room. Then my eyes land on hers. I'm caught in them again. And again, I see the defiance burning in them. My tongue stops and I swallow the juices in my mouth. Why would she invite me back here if she is just going to do the exact opposite of what I want her to do?\n\n\"You're going to cum.\" Maybe she needs to be told what I want her to do.\n\n\"Make me.\" I can see her fighting against the current. She wants to go under but is denying herself and me the pleasure. Just to spite me she is holding off.\n\nI feel the blood rush to my cheeks. This was a big mistake.\n\n******\n\n[6 months later]\n\n\"You never got over it did you?\" Renee puts her beer down.\n\nI stare at her curly, red hair, avoiding her inquiring brown eyes. Renee sometimes knows me better than I want to let on. Renee was the first friend I made when I moved here. She took me under her wing at work and she is the only one who knows personal things about me. Like my parents dying in an accident when I was a teen. Living with my aunt throughout high school. Knowing I was a lesbian from the get-go, not telling my aunt. Before Renee I had Lana.\n\nWe still talk on the phone sometimes but Lana likes the small-town life. She got married to her high school sweetheart as soon as we graduated. She has three kids now. I've met the eldest two once. I don't know what else to talk about besides her kids and I don't think she approves of my lifestyle. Not the gay part, just the sleeping around part.\n\nRenee doesn't judge. She has her fair share of one-night stands and never makes me feel like I'm being judged. We have a similar taste in girls but never had one come between us. She is an open book. Anything I want to know she'll tell me. I also know she would never say anything concerning me to anyone. Her loyalty is what has brought us together since I started working here. Who would have guessed my third-year anniversary would catch up to me so soon?\n\nShe's right though. I am thinking about the ballerina. Her annoying tendency to pop into my brain at the most inconvenient times.\n\n\"I've never had a girl deny me.\"\n\n\"Here we go again.\" Renee sighs under her breath.\n\nI lean over the table and look around us. The bar is quiet tonight. It's a work week and those who are here are probably leaving soon. Renee offered to buy the first round after work and I will never turn down alcohol. It is also convenient that the bar is across the street from our work building. And Renee has a thing for the bartender so this is our spot. No matter how many times she tries and flirts with her, the bartender skillfully evades any actual flirtation and keeps it professional. It drives Renee crazy.\n\n\"Did she really deny you though? You got her to sleep with you.\" She's picking at the label on her beer. \"It's been months, get over it.\"\n\nI bounce my leg up and down. I want to bite my nails but I'm also kicking the habit. If I can quit smoking, I can quit biting my nails. This month is as good as any to start treating my body with a little more care.\n\n\"And you've made many girls after that cum.\" She reminds me. \"Me being one of them.\"\n\nI look away. In a moment of weakness, I caved and slept with Renee. The fact that we work together is the main reason I never crossed that line but I am already looking for a new job and after drinking a whole bottle of tequila, nothing good could have come out of that. It was great, I wasn't controlling in the way that I wanted to me but it was fun. It hasn't affected our friendship the way I thought it might and I thank Renee's easy-going nature for that.\n\n\"Okay, I'm sorry let's talk about something else.\"\n\nShe finishes her beer. \"We can talk about who you got for your next assignment.\"\n\nI groan. \"Don't remind me.\" I wasn't even supposed to be assigned to this interview but my guess is someone has it out for me. That or it is a blessing in disguise. James Lauren is a multimillionaire who has his stake in almost every type of business imaginable. I've never met him but I've heard stories about him and I would rather not be around him or his money. Then again, he has a lot of influence in the business world and getting to pick his mind might not be so bad.\n\n\"Just make it a quick interview and get it over with.\" She clears her throat. Unlike me, Renee is still sticking to her smoking habit. She's happy I don't ask to bum a smoke twice a day. This job makes it really hard to kick bad habits and if you don't have any bad ones soon enough you will. I can definitely say I drink a lot more than when I first started here.\n\n\"Did I forget to mention this is not a one-time thing? They want me to do multiple interviews with him. Something about getting him to warm up to me so that I can build a close relationship and get some good stuff at the end.\"\n\nShe snickers. \"You can't catch a break, can you?\"\n\nI gulp down the last of my beer and motion to the bartender for the check. Renee winks at her but she just rolls her eyes and smiles.\n\n\"Let's just say I hope this is my last assignment at this fucking place.\"\n\n******\n\nMy blue blazer and matching slacks give me the professional angle I'm going for. I opt for a black bra under my white blouse to take attention away from my peaking tattoos around my wrist. Usually our magazine runs articles focused on startup businesses and their young, aspiring, and 'totally laidback' CEOs. Hence, my tattoos are never a problem and wearing jeans to work is a no brainer. This month though we are focusing on 'self-made' millionaires on the older side. So far, I've learned that most of them have had generous loans from their parents or grandparents or have had friends with loaded parents. I've yet to meet an actual 'started from the bottom now they're here' candidate.\n\nI sit up straight and wait for the man of the hour to come through the double doors. His study is what I imagined a person of his stature to have. Fancy paintings, useless statues, untouched books, and a great big wooden desk next to a fireplace. Everything is placed just perfectly and though a lot of things probably go untouched for days there is not a speck of dust anywhere.\n\nThe view to his front lawn is spectacular, as if seeing it from the driveway isn't enough. His grass is impressively green, his fountain clean, and the rose bushes on each side of his house well taken care of. I was not surprised to be greeted by a maid and escorted to this room by a butler. I almost want to hold my nose by the stench of wealth around me.\n\n\"Sorry for the wait.\" A deep voice says behind me.\n\nI stand straight and turn to greet him. My smile falters when I actually see him. His eyes are a striking light blue. I feel my jaw drop at the feeling in my gut. He is handsome for an older man. His grip is warm, almost as much as his smile. Much friendlier than I anticipated. But I can't stop staring into his eyes. Men have never been appealing to me. From a younger age I always preferred the quiet shy girls. He is the complete opposite. I shake my head, trying to ignore the conflicting emotions.\n\n\"Thank you for this meeting, Mr. Lauren.\" I fix my composure.\n\n\"Please, call me James. And have a seat.\" The warm smile makes it sound like a suggestion.\n\nWe exchange a couple of words about the weather, local news, and finally the reason why I am here. All this time I can't help but feel like I have met him before. Maybe I've seen pictures of him through my social media feed. His eyes are very familiar.\n\n\"Well, let's get down to it.\" He stares down at his golden watch and clicks his tongue. \"We have thirty minutes.\"\n\nI take my tape recorder and notepad out. 'Thirty minutes?' I want to ask but I bite my tongue. Maybe this is why we're doing these multiple interviews. There is no way I can get substantial answers in such a short period.\n\nThe thirty minutes fly by, exactly how I feared. Out of the twenty questions I prepared we only got through three. James is a talker. Loves to tell a story for every occurrence of his life and loves to be fond over like he is a saint. I nod in appreciation when he mentions how much he has donated to needy children but I know that donation did not do a dent in his pockets. He probably also got a lot of publicity for it.\n\nI will need to guide the answers better tomorrow. We both stand once I have gathered my things. I hear a faint knock at the door behind us. Just in time. Someone as rich as him probably has every second of the day accounted for.\n\n\"Daddy?\" The voice sounds innocent. I expect to see a preteen by the door, probably too shy to come in with a stranger being in here.\n\nIt is much worse than I could have possibly imagined. Her hair is in a tight knot at the top of her head. Her slender body is covered by loose clothing but I see the black leotard peeking through her low neckline. The arch of her neck is as graceful as I remember, but it is her eyes that stop me from moving. They're as icy blue as I remember but it is that startled look that holds me captive for a moment. I savor the feeling that courses through my veins but all too soon she looks away and steps closer to hug her father who has walked across the room to meet her.\n\nA breath escapes through my lips and I place a hand on my cheek to cool it. My first instinct is to run. Run away from this girl who has stolen my time. Who I could not get to cum for me even after almost begging her with my lips? Run away the same way I almost did that night. At the end of it I practically kicked her out of my hotel room. I can't kick her out of here.\n\n\"Taylor, meet my pride and joy, Paige.\" Paige, huh. Such a simple name for someone like her. They have the same eyes.\n\nI shake her elegant, cold hand. \"Nice to meet you.\"\n\nShe plays the innocent role well. Her big eyes take up half of her face. \"Nice to meet you too, Taylor.\" She caresses my name.\n\nI turn to her father and shake his hand one more time. \"Very nice to meet you, James. I will see you tomorrow, same time.\"\n\nThe clicking of my heels coming down the stairs announce my departure to the staff. They grab the door for me. Once outside I take a lung full of air.\n\nOh, Hell.\n\n******\n\n\"You have to go for me.\" I am pacing my studio. I stare back at the laptop on my bed. Images of Paige Lauren all over it. I was right about her being spoiled. She has probably never had to work a day in her life. I wouldn't have slept with her if I thought I would ever see her again. I broke my most important rule: only hook up with girls you'll never see again.\n\n\"And let you miss out on your best redemption story? You have a chance to do it over!\" Renee is having a field day with this. Where I see danger and the possibility of me getting fired, she sees a second chance to sleep with Paige. I groan at the ridiculousness of it all.",
        "\"I can't and you know that. Do you know what her father will do if he ever found out I slept with his daughter?\"\n\nFrom all the tabloids and social media surrounding Paige and her father there is no way she is out of the closet. There are many pictures of her on dates with guys, some famous actors, other famous athletes but none with any potential girlfriends. I also notice there are not many pictures of her mother. I want to dig into that but I don't want myself obsessing about every aspect of Paige's life. She already has taken up a lot of my time without even realizing it.\n\n\"He will not find out. Not if you don't do it again.\" She chuckles on the other end. \"Do you think you can manage not to sleep with her?\"\n\n\"Of course, I can.\" I have self-restraint. I can do it. I just have to avoid her. And stop thinking about her. Especially in those leotards. But it would be very easy...just ripping through her panty hose and pushing the thin, black fabric to the side... I bite my lip.\n\n\"Good luck, Taylor.\" She chuckles.\n\n******\n\nThe second day of the interview is a lot better than the first.\n\nI do more research on James and tailor the questions to where I want the article to go. Sometimes I have an idea of what story I want to portray but other times my muse takes it in a different direction. By having more specific questions in mind and knowing that we are only having thirty minutes to get to it, I feel a sense of control. As long as I leave with five minutes to spare there should be no reason that I run into her. Maybe she wasn't even supposed to show up yesterday. What is the likelihood that I was only in that house for thirty minutes and we would run into each other? Probably the same possibility that has me interviewing her father for this article.\n\nI end the interview with five minutes left over and tell James we would continue the next day. My heels announce my departure again and the butler walks me to the front steps. He is a nice older gentleman. He tries to make small talk but I look around and make a run for it when I can. No need to tempt fate for a second time.\n\n******\n\nMy luck runs out during the next meeting. It has been a week since the first one.\n\nThe maid guides me to a small sitting room upstairs, two doors down from James' study. She says he is in a conference call that will last a while and apologizes on his behalf. My nerves are on edge the whole time. I'm annoyed at how this little girl has me sweating at the thought of running into her. I never thought I would see the day.\n\nI am sitting on an expensive white, plush couch. The room is also white and bright. The windows are open, sunlight covers every inch of the room. This room, like his study, is filled with useless things that no one ever touches. Pretty things that are dustless but have no reason to be in a small room in this massive house. A marble chess board on a table, a china cabinet, flower paintings along the wall. There is a T.V. hanging on the wall playing the news but I'm staring at the clock above itl. My leg bounces up and down and I place both hands on each side of the couch to avoid biting my nails.\n\nMy phone is a welcome distraction for all of two minutes. I hear soft footsteps coming up the staircase.\n\n\"Lory, where is my dad?\"\n\nI sit straight and place my phone back in my purse.\n\nThere is some mumbling outside the doors and I hold my breath.\n\nShe walks through the doors with determination in her eyes. Those damn eyes.\n\n\"I'll let her know when daddy is ready to see her, Lory. Just wait downstairs for me and I'll come down when I'm ready to leave.\" Again, she is wearing her ballet clothing. She has on leg warmers and furry boots. Her hair isn't in a bun yet, it is in a loose ponytail with light strands framing her face. Her gray sweatpants and matching shirt sag against her small body. She tosses orders around like the lady of the house. Probably because she is. Probably why she hates being told what to do.\n\nAfter the door closes behind her, she walks straight to me and kneels down in front of me. I can't help but shift in my seat. Away from her and into her at the same time. This submissive pose is better than anything I could have ever come up with in my head. Her eyes are looking up and me and her lips are almost in a pout. I breath out my mouth.\n\n\"Taylor,\" She licks her lips, tasting my name. \"What have you been up to?\"\n\n\"Working.\" The stillness in my voice mirroring the tension on my shoulders.\n\nShe bites her lip to hide her smile. It is almost identical to the smile she had when... my cheeks turn a dark shade of pink.\n\nShe places both hands on her thighs and sighs. \"Have you thought about me?\"\n\n\"No.\" I respond too quickly. The lie is as transparent as the spotless glass table behind her. I try to focus on that but my eyes keep coming back to hers.\n\n\"No?\" Her pout is more evident. She shifts and leans back. I see the tip of her nails apply pressure to her thighs. I want to run. I've never had this reaction to anyone before. Usually girls shy away from my intensity. They hate my controlling ways. They want fun and reckless sex. She probably wanted some of that on that dark night. I probably would have not minded if I thought that is what she really wanted. But something led me to believe I was exactly what she was looking for. Now I find it hard to remember why.\n\n\"I bet you have thought about me.\" Her eyes are smiling.\n\nI need to gain some control. She must think I'm like everyone else ready to dote on her. \"You were just one of many, sweetheart.\"\n\nThe playful look leaves her eyes and it is my turn to feel like I have the upper hand.\n\n\"I bet you've thought about my tongue in your tight, wet cunt when you're in bed at night. I bet you wished you listened to me that night and came all over my mouth when I told you to.\" I am towering over her, letting my eyes feast on her body. I see the want in her eyes.\n\nOne of her hands comes up to my thigh and I fight the urge to respond. Her palm is warm but her fingers are cold. The blood rushes to my head and I can't breathe. She lightly squeezes my leg and I do what I've been wanting to do since the first moment I saw her again. I pull at the hair on the nape of her neck until she is leaning back. She arches her back with no problem. My other hand holds on to her chin with force. My lips are inches from her lips. She looks excited and I grind my teeth. This is what she wants. She's using me for her amusement. At least she is being good and both of her hands are down by her side. Her lips align with mine and she tries to lean in. My hand does not waver. I feel her tug against my hand in her hair.\n\nI lick her bottom lip and she moans. Her eyelids are heavier and her cheeks turn a beautiful rose. Probably the same color her ass can turn under my unforgiving hands. I see her control shaking. I lick one more time and she fights harder to kiss me. Her head is tugging but I don't move an inch. This time I pull back. Her smell is intoxicating. The same expensive perfume that smells like dessert.\n\n\"Fuck me.\" She whispers.\n\nI almost do it. I almost push back and rip through her clothing just to feel her wet pussy against my fingers.\n\n\"No.\" I get the reaction I expect. The fire is back in her eyes and she looks as defiant as she did the first night. If she was mine, she would know better than to ask me. I would take her when I wanted to. She would learn discipline. If only.\n\nThere is a light knock on the door. It's the maid.\n\nI push her away and she scrambles to stand. The door doesn't open though. She must have them trained well. She catches her breath and clears her throat. \"I'll let her know he's ready.\" She yells out to the unsuspecting maid.\n\nI get up and walk past her. I avoid getting anywhere close to her. I don't know how the Hell I am going to stay away now.\n\n******\n\nThis interview is worse than the first.\n\nJames doesn't notice because he seems to be preoccupied with his own problems and we both decide to cut it short. I turn off my recorder and want to slap my forehead. At this rate I won't have enough information to write one paragraph let alone two pages. He notices my scowl and grins.\n\n\"Having a bad day too?\" Only that your daughter just asked me to fuck her outside of your study and the only reason I said no was because I knew it would have been too short to do what really, I wanted to. And because I didn't want to jeopardize this interview, I meekly want to add.\n\nInstead I go with: \"Try, long week.\"\n\nHe grunts and opens a drawer. He pulls out a dark bottle with clear liquid inside and two glasses. \"Let's have a drink then.\"\n\nI protest. Even though my day is over I don't want to be here any longer than I need to be.\n\nHe starts to pour and hands me a cup, waving away any of my objections.\n\n\"I'm having business trouble.\" He takes a sip of his drink after we clink our cups.\n\n\"I'm having personal problems.\" I skirt around the true issue.\n\n\"Business and relationships are not that different. Some days it is all sunshine and rainbows. Other days you want to take each other down.\" I want to roll my eyes but nod. Having money does not automatically make you the wisest one in the room. But I guess with enough money you can buy people to believe that you are.\n\n\"So, what are you going to do about it?\" He asks me.\n\nMy eyebrows come up in trepidation. He doesn't even know what my problem is and he's asking how I'm going to solve it. I shrug.\n\n\"You get one night to fret about it. Cry about it or over think about every nuance of the problem but by tomorrow you have to have a plan.\"\n\nHm. Maybe he is not that unoriginal. Thinking about it tonight though will only lead to me thinking about screwing his daughter until we're both beyond tired to move. Surely, he would not be recommending that if he knew my predicament.\n\n\"What are you going to do about it?\" I finish my drink and place the cup on the table. It's a smooth drink. Probably more expensive than everything I own combined.\n\nHe moves the drink around in his cup and his eyes, like his daughter's, catch me off guard. \"Win, of course.\"\n\n******\n\nIt has been a long week since I have seen her or have been back to that house.\n\nJames has been too busy making business moves to give me the time of day which is fine by me. I have been at work doing more research on him and trying to keep up with his business moves. He never did tell me what his problem was but I'm guessing it had something to do with a union strike at one of his hotels. It seems like he caved since the people got the raises, they were asking for but maybe I'm not seeing it from his point of view. Maybe he did win in the end.\n\nRenee has been MIA all week too. She is also a photographer for the magazine so sometimes her schedule is a bit more hectic than mine. I miss our happy hours. I need to talk to her about my dilemma. I just know I am going to see Paige again. If she isn't in my day dreams she's definitely in my nightmares. Nightmares where I can't get her to feel anything no matter how much I touch her.\n\nAnd then there are the other nightmares. The ones where I'm either back to that night where I lost the two most important people in my life or the ones where I am back in time and their memory goads me. This week is taking a toll on me.\n\nOn top of that the new intern at our place has been following me around like a lost puppy and I can admit that she is cute but all the hovering is grinding my nerves.\n\nShe comes to my desk and hands me my mail.\n\n\"Thanks.\" I move the envelopes out of my way and stare down at my phone screen. I'm trying to see when James will be free again. We only have a handful of interviews to go through and then I am free from this mess.\n\n\"Taylor?\" There is hesitation in her voice. I want to be patient and nice but I don't feel like humoring anyone at the moment.\n\nI look up at her expectantly. Her jet-black hair is thick and long but she's too short. Her arms are too thin. She stands as if she is walking down the hallways of a high school where everyone makes it their goal to bully her. I try to soften my glare. There's not nearly enough of an entitled air about her. I should be nicer.\n\n\"Yes,\" I try to remember her name but fail. \"How can I help you?\"\n\n\"I just wanted to say that it is an honor working with you.\" Her words are rushed and I have to focus on her lips to understand half of what she is saying. Something about reading my writings and wanting to be just like me. I smile, and wish her the best. I've never had someone fangirl me. It is ...different. I guess having a lot of my rough drafts torn in front of me by my boss day after day has made me forget I'm not all that bad.\n\nMy phone rings and I answer it, it's an unknown caller. The intern leaves my office.\n\n\"Taylor.\" I answer.\n\n\"Hey Taylor,\" It is James. Where is he calling me from? He sounds like he is out in the streets in the middle of time square. There is a lot of noise in the background. I wouldn't be surprised if he was there at the moment. \"It's James, I need to talk.\" The distinction between 'we need to talk' and 'I need to talk' is not lost on me.\n\n\"Hi James.\" I want to call him Mr. Lauren but after our last sessions I think he actually does like when I call him James. Would Paige like me using her name? Or maybe my sexy pet. My slutty ballerina. I stand from my desk and walk to my window. I need fresh air.\n\n\"Listen, I'm having a dinner party this Friday and want you to come.\" So that you can brag to people about having a spread in our magazine? I feel like he can brag about many more impressive things than this. We're no New York Times or anything remotely close. \"My daughter mentioned you guys went to school together and I figured you might want to meet some of the people that will be there. I'm inviting an established group of friends.\"\n\nI don't know how to feel about it. Does he really believe I went to school with her? She probably went to a private school that had other rich kids crawling through them. He knows I don't have money. But maybe he's trying to help me find a better job. What the fuck is Paige doing? Can I stand to be in the same room with her for this party? Isn't she way younger than me anyways? Does he think we went to high school or college together?\n\nJust then my boss passes by, knocks on my door, and points to his watch. Time for our afternoon meeting. Ugh, maybe this is exactly what I need to get out of here.\n\n\"That is very generous of you, James. I would be honored.\"\n\n\"Great. It is going to be fancy so look sharp.\" He says something to someone else around him and then focuses back on me. \"Did you take care of your problem?\"\n\nI don't know why but my chest tightens. For a millisecond I imagine my father asking me this if he was still alive. I had a close relationship with him and he always saw me as a sensible person. I rub my chest and clear my throat. The fact that James has taken the time to actually ask me about something that I assumed he forgot about or didn't really care about has me troubled.\n\n\"No yet. But after tonight I think I will get it straightened out.\"\n\n\"Glad to hear it. Call me if you need anything. I'll see you tonight.\" My gut tells me he doesn't offer his assistance to just anyone.\n\n******\n\nRenee finally answers after my fifth call and groans.\n\n\"What do you want?\" She sounds like she just woke up.\n\nI look at the clock on my dashboard. It is almost seven PM. \"What are you doing sleeping?\" If we weren't so close, I would feel bad for waking her up. But after having to pick her up from some random bar in the middle of the night multiple times I feel this is owed.\n\n\"Tommie has me working none stop on this stupid project. I got home at seven this morning. He wanted to get the perfect sunrise shot of some old bastard who needed the perfect lighting for his pictures.\" Renee is not a fan of our boss either but she doesn't have the balls to leave this place. No matter how many times I tell her she is good enough she doesn't think she can do better.\n\n\"I'm sorry to hear that.\" I hesitate to ask now. I almost call the whole thing off when she speaks.\n\n\"What do you need? I know I've been busy lately and we haven't really had time to talk. What is it?\" Unlike her, I don't usually call to shoot the shit. If I ever call Renee it is because I'm in trouble. Texting is my preferred form of communication.\n\n\"James invited me to a dinner party tonight.\"\n\n'Who?\" She sounds awake now.\n\n\"James Lauren.\"\n\nThere is silence.\n\n\"So you're on a first name basis?\" She chuckles.\n\nI let out a breath and come out with it. \"I bought a dress and need your help getting ready.\"\n\n\"Do you want to meet at your place or are you coming to mine?\"\n\n******\n\nI don't feel overdressed when I walk up the concrete stairs to the front entrance.\n\nLimos are pulling up to the front gravel archway along with exotic vehicles that have the valet boys drooling, waiting to get a touch. I'm glad I Ubered. I would have hated to see their crestfallen face at my maroon, 2002 Honda Civic. It is a black-tie event so all the men are looking as rich as their pockets and all of the women look like they deserve to be on a red carpet.\n\nI'm waiting to get inside behind a couple. The lady is robust and sturdy, her silhouette reminds me of my grandmother. Her olive-green dress has all the ruffles and laces she could have asked for. The guy next to her looks a lot younger than her, probably her grandson, but if he's not, that's not as scandalous as it once was. She's probably loaded. He's wearing a blue velvet suit with white button up shirt and a matching bow tie. I look around and see other older men with younger girls hanging off their arms.\n\nJames is at the door greeting everyone coming in.\n\nHe looks genuinely happy to see me and I feel myself warming up to him. He shakes my hand and welcomes me to his home even though I have been here a couple of times now. It does look different tonight though. Gold and silver ribbons and decorations dripping from every corner of the place. I feel as though I am being transported to another dimension. The lighting is warm and I look up to see they have installed some hanging lights. This looks like a completely different house that I have never stepped foot in. My eyes linger on the doors to the upstairs sitting room.\n\nMy attempt to fit in is in vain, everyone here knows each other. I am the stranger here. I would have never thought to be rubbing elbows with the type of people who are here. Or even be allowed into a place like this. There is still a small part of me that wants to look over my shoulder and see if I am the punchline to a terrible prank. So far though everyone has been surprisingly friendly. The younger girls are sticking to themselves. They all have beautiful gowns that highlight their perky bodies. The gentlemen are talking amongst themselves, probably talking about business or the girls here. There is an absence of kids. I can't imagine little trolls running around here making a mess.\n\nI catch the first server walking around with a tray full of tall glasses of champagne. I take two and drink them immediately. They taste crisp and the normal burn isn't there, worth the money James spent on them. Even if I avoid being around rich people, I can honestly appreciate their great taste in alcohol.\n\nI grab one more drink. I am going to need this if I am going to see her tonight. The muted blue dress I decided to wear fits snug on me and outlines my round hips and perky breasts. Renee insisted on straightening my hair, even though I complained that it was already naturally straight, but she did make it look shinier. She also did a great job on my makeup. It is subtle. The rose-pink matte lip color is probably the only thing I am still unsure about. I feel like a teenager hoping I look cute enough to get asked to dance.",
        "I see her before she sees me.\n\nWe're all in this spacious room, that looks like a ballroom. Everyone is standing, making small talk, drinking. Paige is doing her rounds. Shaking hands, kissing cheeks, granting her smiles to those she particularly likes. I watch her from a safe distance and take another tall glass from a girl with a tray. She's wearing a shiny, copper brown dress that hugs her subtle curves. The dress is long but there is a long slit on the side that gives way to her ballerina legs. It is strapless. I start my admiration at the base of her neck, down her shoulder blades, across her arms to the tip of her fingers. Her hair is in a styled bun to the side of her head. Her makeup is flawless, not like she needs any. Of course, her eyes are as striking as the first time. They're even icier with the brown tones she's wearing today.\n\nEveryone dotes on her. They want her attention. They want her smiles. I turn away, fighting the urge to get near the flame she carries.\n\n\"And you are?\" I happened to turn into a group of older people chatting.\n\nI ignore my blazing cheeks and shake everyone's hands. I introduce myself and wait for them to do the same. There are two gentlemen and two ladies, one of them is the same one that reminded me of my grandmother when we walked in. She is the one who asked for my name initially.\n\n\"What brings you here today? I've never seen you around these parts of the woods before.\" Her smile is warm and I feel a little more at ease.\n\n\"I'm writing an article on Mr. Lauren.\" The other people in the group start to talk about something else but she, Kathleen, looks engaged.\n\n\"Oh, a writer? That's splendid.\" She pats my arm. \"How long have you been doing that?\"\n\n\"A for a while now.\" I chuckle and avoid answering directly. I still have many more years to go before I am considered an established writer.\n\n\"Tell me, dear, have I read any of your work?\"\n\n\"Kathleen!\" I hear Paige behind me.\n\nI step back to see her run into the older lady's arms. I try and look for the quickest way to escape but she turns to me next. She wraps her arms around my waist and rubs her cheek against mine. I can't help the color that runs to my cheeks.\n\n\"Taylor,\" She practically purrs into my ear.\n\nI pull back and avoid looking into her eyes. My eyes trail down her cheek, suppressing the urge to touch her. \"Paige.\" I am curt. Curt because I feel defenseless. How does she have this hold over me? Why is my body ready to heel on her command?\n\nShe turns to Kathleen, but holds one of my hands. \"I'm sorry I have to steal her away, need to talk lady business in the girl's room.\"\n\nI wave to the older lady who looks at Paige with adoration. I want to pull away but let myself be guided upstairs.\n\n\"Isn't there a restroom downstairs?\"\n\nShe doesn't say anything and quickens her steps once we're on the second floor. She turns into the last door on the left.\n\nThe door closes behind me.\n\n\"Unzip me.\" She turns her back to me and puts her hands on her hips, waiting.\n\nThe temperature in the room rises and I rub by tongue against the roof of my mouth. The lights are still off but she has her balcony doors open and the moonlight shines through. A quick inspection of the room confirms that it is hers. I don't have time to look around as closely as I want because I have to make a choice. My heart is beating fast, there is a rushing sound assaulting my ears and I feel my cheeks burn.\n\n\"Hurry, we only have a few moments before they notice I'm missing.\"\n\nI turn the lock on the door and walk over to her.\n\nMy head dips into her neck and I brush my nose against her soft skin. So delicious. She moans and I feel her turn her face towards mine, trying to kiss me. I grab her hair and force her to face forward, she hisses. I kiss her neck, a quick chaste kiss. My body is taking over, doing what it knows best: controlling. I run my fingers along her shoulders and I see the goosebumps I leave in their trace. My hand finally reaches her zipper. I don't waste time and reveal what I have already seen, touched and tasted but it means more this time.\n\nHer dress falls to her feet, she's not wearing anything under. I grind my teeth and suppress a groan of approval. The hand that is still holding on to her hair tugs slightly.\n\n\"Get on the bed.\"\n\n\"No.\" She bites back.\n\nI stop myself from tossing her there myself. I need her to do what I want. The best part about controlling someone is having them want to give you all of the control. I need this, she knows this. Why would she invite me here if she won't let me do what I want? I won't take anything that she doesn't want to give me. I don't want to play any guessing games.\n\n\"I need you to do as I say.\" Maybe I need to be as direct as I can be. Set expectations and all of that, which I have not had to do in years.\n\nShe turns around to face me, my hand falls off her hair down to my side. She's not afraid to look at me, she actually seems to like it.\n\n\"I need you to take me here, right now.\"\n\n\"I will, but on my terms. I want you on my terms.\"\n\n\"No.\"\n\nI scoff and shake my head. This is as frustrating as it was the first time. She clearly has the wrong expectations. This isn't going to work. She can't give me what I want and I am not what she is looking for.\n\n\"Then I'm sorry, we are at an impasse.\"\n\nFor a second I see a worried look in her eyes. That split second of reaction from her is what keeps me from moving from this spot.\n\n\"Please,\" She licks her lips. Her legs rub up against each other, her nipples erect, her breathing is irregular. \"Just give me this once. Just once.\"\n\nShe makes a move to get closer and I don't move. Her hands come up to each of my shoulders and she leans in to kiss me. I taste the champagne on her lips. My hands come up to each side of her face and my tongue touches every inch of her mouth. Her moans vibrate between us and I know for a fact that I will do whatever she wants at this point. The desperation on her lips drives me insane.\n\nHer hands tug my shoulders down and I know what she wants.\n\nI kneel, as quickly as I can in the dress. For a second I worry that it will rip but then the moment passes. My face is inches from her trimmed pussy lips and I look up at her. She bites her lip and waits in anticipation.\n\n\"Spread your legs,\" She easily slides them apart. Well, at least she knows how to listen when she wants. I rub my nose against her pubic bone and take in her scent. I close my eyes and treasure it. I feel drunk and it has nothing to do with the champagne. My tongue slides right in between her lips and she moans loudly. One of her hands comes up to her mouth to stifle the noise. We wouldn't have to worry about how loud she was being if we were at my place. Her other hand takes one of her breasts and squeezes.\n\nI watch, in lust. My tongue licks away the cream coming from her warm pussy. My tongue goes up and down between her lips, trying to catch every drop. Eventually my mouth latches on to her tiny nub and I suck as my tongue flickers around it. Her legs start to shake and her hips move on their own accord. She rides my face so frantically and urgently I can't take my eyes away from her bouncing breasts. My own breasts tighten and I briefly wonder what it would feel like to have her breasts pressed up against mine. I groan into her pussy. Both of her hands cover her mouth and she cums all over my face. I keep licking until she lightly pushes my face away. I kiss the inside of her thigh. This was worth it.\n\nI sit back against the white drawers next to her bed. She slides down and sits back against me, trying to control her breathing. My hands come up and wrap around her. She leans her head back against my shoulder and hums in appreciation when I kiss her temple.\n\n\"What is this?\" Her thumbs run against the inside of my wrists.\n\n\"My parent's names.\" I don't offer any more information and hope she doesn't ask. \"What's your favorite color?\" I really want to know. I want to know as much as I can about her, she is a mystery to me. Someone that I feel like I have known all of my life and yet can't say a single fact about them.\n\nShe turns to look at my dress then smiles up at me. \"Blue. Yours?\"\n\n\"Blue.\" I stare into her eyes. Light blue when she's laughing. Ice blue when she's angry. Crystal blue on special occasions. \"Tell me about a time when you were hurt.\"\n\nHer smile fades and she looks uncomfortable. She shuts herself off and I can see it is a defensive reaction.\n\nI allow one of my hands to come down to her breast and rub along the nipple until it hardens. I pull at it between my fingers. She pushes against my hand and closes her eyes. I stop what I'm doing when I feel her breathing increase.\n\nHer eyes snap open and she glares at me. \"Why did you stop?\"\n\n\"Tell me about a time you were really angry.\" I try a different question.\n\nI bring my hand back to her breast and use my other one to slide between her slick folds. Her legs open wide and she places her feet on each side of my legs. Her back arches against my touch. She turns her face away from me and I bury my face in her neck.\n\n\"In ninth grade I had a teacher who particularly disliked me.\" My fingers are drenched by her cum and she shivers when I stick two fingers in her pussy. I smile against her neck. If this is the only way I can get her to open herself up to me I am going to have fun. \"She liked to call me out when I had low scores or said the wrong answer in class. I was constantly given in school suspension because I wouldn't let her make me feel small.\" Her breathing picks up when I pump my fingers in and out of her. I can't imagine Paige being a bad student, but I do know first-hand how stubborn she can be. \"I decided enough was enough and one day I yelled at her in front of the class. When I got home my father made me write her a letter apologizing for my behavior.\" I can tell she's close. \"I cried the whole time I wrote the letter because no matter what I said to him she took her side. She made me read the letter in front of the class.\" I turn her face towards mine and reward her with a kiss as she cums for a second time.\n\n******\n\nShe leaves me alone in the room and heads downstairs once I help her get back into her dress. I look at myself in the mirror and clean up my makeup. I take the lipstick out of my small hand bag and apply it lightly. I still smell her on me, that is how I want it. If it were up to me, we would have left the party now and went back to my place. She said she still had to stick around to say hi to more guests. She actually looked somewhat shy after I helped her get into her dress. Getting her to disclose a personal memory must have been hard for her.\n\nComing down the steps I find her at the bottom, deep in conversation with a guy in a blue suit. Once they hear me approach, they stop talking. Paige looks away from me and he gives me a passing smile. She looks upset.\n\n\"Hey, are you okay?\" I notice his arm wrap around her waist.\n\nNow that I take a closer look at him, I realize he is the guy that walked in with Kathleen today. He looks like a preppy snob. My eyes are trained on his hand around her waist.\n\nPaige shifts away but he pulls her close.\n\nHe looks at me down his aristocratic nose, \"We were just having a private conversation.\" He's dismissing me.\n\n\"I asked if she was okay.\"\n\n\"Henry,\" James comes up to us from around the corner. \"I see you have met Taylor, she's the one I was talking to you about.\"\n\nI give him a controlled smile.\n\n\"Taylor, this is Henry. Paige's fianc\u00e9.\"\n\nEverything stops at once, for just a millisecond. There is nothing. I can hear a pin drop in my head. If I had to describe the feeling as a color it would be white, if it was a sound it would be white noise, if it was a feeling it wouldn't be. I want to look at Paige. I want to see in her eyes what the fuck all of this is about. Instead I look at Henry who looks at me with the same amount of hostility.\n\nI turn to James, \"Yes, we just met. I was actually coming to look for you to let you know there is an emergency and I have to go.\"\n\nHe looks disappointed but offers to walk me to the door.\n\nI nod in Henry's direction and ignore Paige.\n\n******\n\nThe first thing I do when I get home is get on my computer. No, that's not true. I get the liquor out, pour myself three shots and take them. Then I start going through everything I can find on Paige. How could I have missed that she had a fianc\u00e9? Apparently, I was invited to their engagement announcement. As soon as I left the party, they made it official and every tabloid and social media platform had pictures of them. Every post I saw was another stab in the gut. There are pictures of them before the engagement but he looked more like a friend than a lover.\n\nHow could she? I guess this was really nothing to her. I mean she didn't really owe me anything. But why would she do something so reckless on her engagement night? Why would I even want to be involved with someone who has no morals and is willing to betray her fianc\u00e9? She has no loyalty.\n\nAt the end of the day nothing I said made me feel better. It was a week full of hurt, denial, and confusion. I've had more nightmares about my parents as well.\n\nThis is why I stay away from girls like her. Did Paige really want more? It seems more like she wanted something fun before she tied the big knot. And with the amount of money that asshole was born into it was a big fucking knot. She didn't want more, I did.\n\nMy anger is simmering as I stare at my laptop Thursday Morning. The intern walks in.\n\n\"Here is your coffee and this note is from Tommie.\" She scurries out without another word. I feel somewhat guilty for being so short with her but my mood hasn't been the best so maybe it is better for her to stay out of my way. If she caught me any other time where I wasn't dealing with this bullshit, I would be a mentor. But what the fuck do I know about anything? Apparently, I am great at getting myself involved with unavailable ballet snobs.\n\nIs the unavailable part what is keeping her in my head? Or the ballet part? Maybe even getting her prissy bitch act come undone is what gets me turned on. Getting her to lose that perfect girl facade for just a second was worth it. My nostrils flare when I imagine my head between her legs. My fingers between her folds.\n\nThe black coffee burns down my throat.\n\nImages of that night haunt me. On my knees, worshiping at her feet. Bending over backwards for her to do whatever I could to make her cum. Giving her what she wanted to get her to talk to me. It was worth it. My deepest thoughts interrupted my internal dialogue. I push them back in their box and shake my head. Seeing her cum undone like I wanted to the first time we met was a reward. No defiant eyes, no smirk, just her most natural emotion coursing through her.\n\nI look down at the note and groan.\n\nMy phone vibrates, it's Tommie.\n\n\"You could have just called instead of sending a note with the intern like we're in high school.\"\n\n\"We gotta keep things fun.\" He's probably playing video games as we speak. \"I already arranged it for tomorrow afternoon so make sure to be there. Renee only has a short window so we cannot let anything go wrong.\" 'We' as in me.\n\n\"I think I'm starting to feel under the weather.\" I croak.\n\n\"Ha-ha. Just get it done and then finish the interview and you'll never have to talk to him ever again.\" He hangs up.\n\nTo my luck, James has been slammed with work and we've had to reschedule his interview. But I guess this I cannot avoid. Technically I'm not even supposed to be there for the photo shoot but Tommie likes to put the people in front of the cameras at ease. Since I have built a foundation with James, he is more likely to play nice if I'm there, that is Tommie's logic. I don't think me being there really makes a difference to James.\n\nI shoot Renee a text. She knows pretty much all of the important things of that awful night but has been too busy for us to really sit down and digest it all. She promised that we would get to sit down and talk about it. Not that I need any more of that.\n\nShe gives me a date and time and I put it in my calendar. Like I can forget.\n\n******\n\n\"You're fidgeting.\" Renee says under her breath. She snaps another shot and I place my hands behind me.\n\nI can't stop looking over my shoulders back to the house. I feel someone watching me, or maybe I'm just being paranoid. James decided his backyard would be the best place to get pictures of himself for the magazine. That makes me like him a little bit more. Most people want to show off their cars, yachts, or properties but he looks at ease next to his pool.\n\nHe puts his shades on and crosses his arms. He has style. His gray suit is impeccable, his watch is covered in diamonds, and his shoes looks fresh out of the box.\n\n\"How much longer?\" I ask Renee.\n\nShe turns to me and looks down at her watch, \"Fifteen minutes.\"\n\nHas it really been almost two hours? It feels so long and yet not long enough. Deep down I am disappointed. I want to see her. Even if just to see her gloating smile in my direction. But I mostly feel relief. This is the best-case scenario. Getting to come to her house and not seeing her once. This is what I want.\n\nOnce Renee is done, James shakes her hand then walks in my direction.\n\n\"How have you been?\" We walk back towards his house and catch up on what we have been to since our last meeting. I finally ask him about the union problem and if that was what was worrying him after our last interview. James might have been born with a gold spoon in his mouth but he is a successful businessman. He knows how to turn money into more money. He smiles like a proud father and gives me more insight on the story, off the record of course. I feel my heart feel heavy at the thought of my father and the similarities between the two.\n\nRenee's crew, which only consists of two people, walk through the sliding door that leads up to his kitchen. The maid offers us some refreshments and James continues to talk to me. I don't have the stomach to eat anything. Being in the house has my nerves on edge. James notices and offers me a drink but I decline. Being drunk and in this house with the possibility of running into Paige is just tempting fate. Would I really be stupid enough to seek her out if the chance was given? Yes, without a doubt.\n\n\"Daddy?\" My ears perk up and I shoot Renee a frantic look.\n\nPaige walks into the kitchen wearing white shorts and a light, pink tank top. She looks so innocent. Her big blue eyes take in everyone in the room until they land on me. She's not surprised. She knew I would be here.\n\nI walk over to Renee and watch as Paige walks up to James. Her hair is held back by some bobby pins but the rest tumbles down her back. She's wearing white sandals. Such a simple look, elevated by her elegance. Her skin is slightly darker than the last time I saw her. Her collar bones look more pronounced. I try not to stare at her body too long. My hand itches to wrap around her neck with just enough force to cause her breath to hitch and make her cum with my other hand. Renee watches my reaction to Paige and I finally look away when she elbows me.\n\n\"She's gorgeous.\" Renee whispers. Both of her eyebrows are near her hairline. She must have been expecting an overly sexual Instagram influencer not this deceivingly innocent creature. If only she knew.\n\nI decline to comment and turn my back to Paige. If she can't see me she won't talk to me.\n\nThis feels like shit. I want to look at her. I want her to see me. See what she is missing out on. What she passed up on. But I mostly just want to take her far away from here. Turn back time to the first time we met. Before she was officially engaged and only tormented me with her stubbornness.\n\nJames picks up a call on his cell and excuses himself.",
        "She walks right over to me and I give Renee a look.\n\nRenee smiles and brushes a hair out of my face. Her hand lingers a little too long on my cheek and I want to pull away. What is she doing? She then undoes one of the top buttons on my gray shirt and tugs it from out of my jeans. She is smiling with her eyes.\n\n\"Taylor?\" Paige's voice calls to the darkest parts of my body.\n\nMy body reacts instantly. My breasts feel heavy, almost as heavy as the hunger settling right between my thighs. My mouth waters. I lick my lips and turn to look at her. She is glaring at Renee.\n\nRenee leans into me and wraps an arm around my waist. I see the anger on Paige's face but it doesn't make me feel remotely better. I don't want to make her upset. Even if I basically made small talk with her fianc\u00e9 moments after making her cum with my tongue and then my fingers, I don't want revenge. Not with her. I just want- I stop my train of thought. I don't want that. \"What?\" I sound harsher than I intend to\n\n\"We need to talk.\"\n\n\"About what?\" Renee's thumb rubs against my hip bone. I snatch Renee's hand and give her a look.\n\nShe shrugs and let's go of me. But the damage is done. In front of us is the ice queen. Paige doesn't look bothered anymore. She actually looks bored. Maybe she doesn't care if there is anyone else in the picture. Renee gives her too much credit.\n\n\"Can we go somewhere private?\" Paige walks away before I can answer. I look at Renee who has an amused smile and shrugs. I guess that's all the help I'll get from her. I follow Paige out through the front door of the house.\n\nShe almost stomps down the steps, but with her dancer legs it looks more like she is gracefully dancing down to her car. It's some fancy two door white, BMW. Figures. I turn back to look at the house. Renee drove us here but I don't want to explain why they shouldn't wait up for me. Paige gets in the driver side and the butler comes around to open my door. No point on making her wait. I'll send Renee a quick text. I can always Uber home if she's gone by the time we get back.\n\n\"I didn't think you would come.\"\n\nI don't say anything and stare out of my window. We drive through town and eventually she turns onto a parkway. It has a running trail right next to it. There is also a river next to the trail. There are people rowing. The sun is shining and the trees and grass look vibrant. They are that bright green that almost looks yellow with every movement. It is a beautiful day out. She finally pulls into a small parking lot and gets out of the car. I bite my lip and follow her. My eyes are glued to the soft curve of her ass. Her legs go on for miles in these shorts.\n\n\"I didn't come here so we could go hiking.\" I grunt. I'm hot and sweating. It has nothing to do with the sun beating down on me.\n\n\"We're almost there.\" Once I'm about to say something again she takes a random turn and walks into a wooded area. I should feel nervous but I'm mostly annoyed. There is no trail, is she just winging it? Or does she come here with all of her fuck buddies? I don't think I qualify as a buddy though.\n\nShe finds a big rock. Half covered in moss and half dried by the sun and sits on it. We're covered by a massive green curtain around us. There are some yellows in the fallen leaves but everything else is green. Even the trees are covered by vines and moss. I can't see the trail or anyone who could be walking by.\n\n\"So, you have me right where you want me.\" My tone is dry. Just as dry as my mouth.\n\n\"I didn't want any of this.\"\n\nI stand there awkwardly.\n\n\"It's a convenient marriage.\"\n\nI still say nothing.\n\n\"I was never supposed to see you again.\" Her tone is accusatory.\n\nI turn my head to the side and put my hands on my hips. \"Ditto. And yet I was the one on my knees eating you out minutes before you announced your engagement. What the fuck?\"\n\nShe crosses her legs and places both hands on her knees. She is as cool as a cucumber. Or maybe she is really a cold-hearted bitch. That's what Renee called her. Maybe she is right.\n\n\"Were you with him the first time we hooked up?\"\n\nShe lowers her eyes and huffs. \"I was never supposed to see you again.\"\n\n\"But you did!\" I raise my voice.\n\n\"It was the one night I had all to myself.\" Her cool demeanor annoys me even more. \"It was the one night my father gave me the freedom to do what I wanted. I've never had that. It was to celebrate my graduation. Ever since I was little, I have had every day of my life planned for me. From morning to night, I am on a strict schedule that I have to follow. Not just what I do but what I eat, how I conduct myself, what I wear. It is only fitting that he hand picks my future husband. Both him and Henry's father have been planning this marriage since before I could think for myself.\"\n\nNone of this is making any of it better for me. I try to imagine James being this controlling tyrant she is describing but it is hard. For an old, rich, white guy he seemed easy going and not so full of himself. But what do I know about what happens behind closed doors? I can see him being a concerned father who wants the best for his daughter.\n\n\"And Henry is just as controlling as my dad, if not more so. He wants to know who I'm talking to on the phone, who I spend my time with, what I am doing now and later. It is suffocating.\" Her breathing is accelerating and her cheeks are burning up. I see unshed tears but don't make a move. This is the longest I have heard her talk. \"I'm going from one overly protective man in my life to another. I can see why my mom-\" She swipes the tear that runs down her face and sits up higher. I inch closer to her. What happened to her mom? I am being pulled to her misery like a moth to a flame. I see some of my younger self in her. Pissed off at the world, wanting to take charge of her own life. \"And then that night you wanted to control me too, I almost became unhinged. What is it with you people and controlling things? Why can't I get away?\"\n\n\"I'm not like them.\" The disappointment is evident on my face. Had she continued to talk about her mother I would have an insight to who she actually is. She is very selective in what she gives away.\n\n\"You are. You want me on your terms, you said that.\" She accuses me.\n\nI did say that, because it is true. I would love nothing more than to control her. But not if she doesn't want to follow me lead. My heart goes out to her. She is very young. And from the sound of it not enjoying her life as she should be. I guess no amount of money can be worth being monitored every hour of the day.\n\n\"The only reason my father isn't blowing my phone up asking where I am is because I told him I would take you home.\" She laughs bitterly. \"How much longer before you're asking where I am and who I am with?\"\n\nI walk over and sink to my knees in front of her, the same way she did when we were in her dad's waiting room. The damp grass seeps through the jeans but I don't care. I want to apologize and make her feel better but I can't. She led me on. She asked for me. I gave her what I could and she selfishly took it knowing she could give me nothing in return. Her wet eyelashes turn to me and she looks down at me.\n\n\"I only want you to be submissive in the bedroom. I don't push beyond that.\" Not that it matters. This is not going to happen. Whatever is going on between us needs to stop now before it gets worse. But here on my knees looking up at her, my resolve wavers.\n\nI haven't let myself be vulnerable in a long time. Since my first year of high school to be exact. After I lost my parents, I turned to a senior girl who knew how to take advantage of someone who had lost everything. She was the one who introduced me to this world of submission and control. After she graduated, I never heard from her and then I was alone again. My aunt, Sally, was kind and looked out for me because I was all she had left from my mother. But I knew she didn't know what she was doing. She was relieved when I moved out as soon as I could. Again, I was alone in the world.\n\nI shut down my thoughts. I haven't thought about things like that in so long, I've buried these memories and Paige just pulls everything out of me. She's ruining me.\n\nI rest my hand against her calf and wait for her to say something.\n\nShe sniffles but says nothing to me.\n\n\"What do you want?\" I control my breathing. I can give her some control. If only for a moment. Only for her.\n\nShe licks her lips and wipes another tear away. \"I want you to make me forget.\"\n\n\"How?\"\n\nHer normally icy, blue eyes are melting. They take up half of her face and I am lost in them. I find myself swimming to their deepest parts hoping I never reach the bottom. She leans back against the rock and rests on her elbows.\n\n\"Take off my shorts.\" The order is soft but certain. She might think she doesn't have any control in her life but that isn't true. At least not with me.\n\nI slowly trail both hands up her smooth legs and finally unbutton her pants. I pull the zipper down and she lifts her hips so that I can pull them down all the way. She removes one leg from them but leaves the shorts wrapped around the other one.\n\nI am staring at her juicy, pink hole. Her lips are bare but she has trimmed the hair above her pubic bone.\n\n\"Don't you ever wear underwear?\" My voice is gruff. I'm upset at how much she affects me.\n\n\"Shhh.\" She opens her legs wide and rests each foot on the edge of the rock. \"Lick me, slowly.\"\n\nSaliva pools under my tongue. I didn't think I would ever get to taste her again. Her forbidden fruit is going to be the end of me. I kiss her inner thighs, taking turns between each one. With each kiss I am brought closer and closer to her heated center. Her breathing is quick and her cheeks are even more pink. She's biting on her lip and squeezing both breasts over her shirt. I see her puffy nipples poking through and I want to taste them. I will next time. Next time? No, there won't be a next time. This is just for today. To get her through the next hideous half a century where she'll be married to that rich, insensitive, controlling, asshole.\n\nI finally let my tongue dig into her wet pussy and watch her eyes roll back. Her head falls back. \"Oh, fuck!\" she mewls. Normally, if I was in charge, I would force her to look at me. This is her show though.\n\nI lick at my leisure, letting my tongue roam each crevice I can find. I mix my saliva and her juices around her perfect lips. I dig my tongue deep in her pussy and watch as she pinches her nipples with every thrust. I sink down lower and allow my tongue to roam her puckered hole. She tastes divine. Her head snaps up and she moans. I do it again and again and her moans become more pronounced. Her eyelids are almost close but I know she is watching me. With each swipe of my tongue her fingers pull on her nipples.\n\nI flatten my tongue and lick my way from the very bottom to the very top. I dig my tongue deep into her pussy and fuck her again while until she starts to moan some incoherent words. I decide to speed things up before someone nearby decides to come investigate. I bring two fingers up and pull her lips apart so that I can see her pretty pink clit. I lick at a steady pace and I feel the orgasm forming under my tongue.\n\nHer hips push off the rock and into my face and I welcome her eager thrusts. There is some sweat dripping down the side of her face. There are baby hairs sticking to her glistening forehead. Her neck turns the same shade of pink as her cheeks. The green background from the trees and the grass give her the perfect backdrop. Her eyes are a vibrant light blue. I briefly worry that she is getting too hot and might be dehydrated but I continue to lick away at the same pace. I will never forget this image of her. This is going to haunt me for years to come.\n\nI rub my legs together and feel the slickness. She is so hot. I haven't had someone order me around even in the slightest in years. If anyone could do it it had to be her. My mind starts to imagine making her cum like this every morning. I almost stop what I'm doing. I can't go there. My lips latch on to her clit and my tongue flutters against it. She bites her palm and her body begins to shake. Her juices gush into my mouth and I groan in appreciation. I give myself this split second to be happy.\n\n******\n\nI'm staring out the window again, ignoring the thunderous cloud hanging over me.\n\n\"Was that your girlfriend?\" She turns down the pop music in the background.\n\n\"Who?\" I play dumb. Because apparently, I am the biggest idiot in the world. Just one more taste I told myself. And now I can't imagine not being able to do that again. Even if it's on her terms. I want her. I want to cry in frustration. I ball my hands into fists. I can't. We're from two different worlds. We can't.\n\n\"The red head.\" She's being an ice queen again.\n\nYes, I want to lie. \"No.\" I can't lie.\n\n\"But you guys have hooked up?\"\n\nI don't answer her questions.\n\n\"Why aren't you dating?\"\n\n\"I don't date.\"\n\n\"You just fuck?\" She seems annoyed by this.\n\n\"Yes, I fuck.\" I turn to look at her, we're at a stop light. My eyes travel from her eyes, down her neck, to her breasts, and finally to her thighs. She squeezes them together and I look away again. No reason to hide my want from her. She knows the hold she has over me. And if she doesn't, she is an even bigger idiot than I am.\n\nShe doesn't say anything else, and we're both wrapped up in our own thoughts for the next few minutes.\n\n\"I can give you a ride home.\" We're about to get on the highway, the opposite direction of her home.\n\nSo that she can show up unannounced whenever she feels like it? \"No.\" I pull my phone out and ask her to pull over into a McDonalds' parking lot. \"I'll just order an Uber from here.\"\n\nShe presses her lips together but for once in her life does as she is told. Well almost, she pulls into a parking lot but doesn't unlock her doors.\n\n\"I'll wait with you until the driver comes.\"\n\nI can still smell her on my lips, her cum is still on my tongue, and the car is drenched in her scent. I can't bear another second in this car.\n\n\"So, are you from around here?\" She turns off the car and the lights dim down until they turn off. \"Or are you from Lakeshire?\" That's the town where we met. Where apparently, she went to school at. And now fate has brought us together again. I don't think we would have ever crossed paths if I never went on that trip. Or maybe we would have but by then she would be a wife to be content with her perfect little life and I would just be some random journalist who interviewed her father.\n\n\"I'm not from around here.\" She turns her whole body towards me. I lean my head back and finally look at her. She is a sight for sore eyes. \"I moved here after I graduated once I had a job secured.\" She digests this information. \"Had you ever been with a girl before me?\"\n\nHer bright cheeks answer my question. \"No.\"\n\nIt is music to my ears. I'm her first. But not her last. I swallow the lump in my throat. \"What is your favorite book?\" Here I am, dying to get to know more about her when I should be pushing her out of my life for good.\n\n\"Pride and Prejudice.\" She's a romantic. \"Yours?\"\n\nI stare at her for too long. She's pulling at my heart strings and I am digging my own grave.\n\n\"We're not doing this.\" I unlock the door and get out of the car. Slamming the door, I walk away. She parked closer towards the busy street. The air coming from the cars speeding by is welcoming. I make my way to the front of her car, towards a sidewalk. I feel her tug my arm in her direction. I almost lose my footing and turn to break my fall. I land on top of her, we're on her hood.\n\nShe kisses me instantly. I melt into her without hesitation. My mouth aggressively possesses her eager lips and I pull her hands away from my waist, to hold them down on her sides. My tongue digs deep into her wet mouth, ready to fight for dominance. She stands down. She lets me guide the kiss, the speed, the intensity. I feel her submit to me and I can't help but moan at the feelings coursing through me. She's giving me a taste. A glimpse at what a perfect little submissive she could be if she wanted to. And I want it. God, I want it.\n\nWhen I finally pull away from her face, we both stare at each other. She looks nervous. I know I look lost because I feel it. Deep within me I feel like a teenager again when the cops came to my house to tell me my parents died in an accident. This is gut wrenching.\n\nI push myself off her and sit as far away from her as I can. What am I doing? I can't be vulnerable around her.\n\n\"Taylor.\"\n\n\"Stop.\" I lick my swollen lips and rub my face. \"Stop fucking with me, Paige.\"\n\n\"I'm not!\" She comes to stand in front of me and grabs my hands.\n\nI feel her lips against my palm. \"I'll give you whatever you want.\"\n\nMy heart accelerates again and comes to a complete stop when we make eye contact. I see the sincerity in her eyes. I pull my hand and look away from her. No. She steps between my legs and wraps her arms around my neck. \"I'll listen to you. I'll give myself to you in any way that you want me.\"\n\nNot every way that I want you.\n\n\"And then what? You'll be a married woman with a lesbian lover on the side.\" How is that fair to anybody? How is that fair to me?\n\nShe doesn't have a response and that hurts almost as much as her lies. Her torturous kisses, deceiving smiles, and dangerous eyes. I can't just have her now and then have it be ripped away whenever she gets bored. Or what if her fianc\u00e9 ever discovered us? Her lack of accountability and inability to foresee future repercussions really shows her age.\n\n\"Please, Taylor.\" She leans down and captures my lips. \"I need you.\" She breaths against my bottom lip. We exchange breaths for a couple of seconds before my hands wrap around her small waist and I pull her towards me. I hang on to her for as long as I can before she turns into thin air.\n\n******\n\nI look down at my phone again and groan.\n\nOn my screen is a picture of Paige laying on her bed. The picture is innocent enough if her boobs weren't half way out begging for my salivating mouth. She wants me to see her today. It has been three days since I have seen her and I'm a walking bitch in heat. I want her. And the pictures she keeps sending me are not helping.\n\nI call James to schedule an appointment, asking for his availability.\n\n\"I actually have a window at noon today if you can make time.\" I look up at the heavens and shake my head. If the angels really didn't want me to do this, they wouldn't make it so easy.\n\n\"I'll be there.\" I say as I gather my things and shoot Tommie a quick email.\n\nI make it to the house with ten minutes to spare. The maid guides me to the same waiting room as before and I sit back. She says he should be done with his meeting by noon and I thank her. I take my phone out and take a picture of the bookcase in the corner of the room. I send it to Paige and wait for her response. I hope she knows to wait for my cue before doing anything rash. I want us to get together afterwards. I hear a door open and close down the hall. I guess James is done sooner than expected.\n\nPaige walks through the door and locks it behind her. She's wearing gray sweats, and a black tank top, her gray fuzzy socks are adorable. I would believe her innocent act if her eyes weren't so telling of what she wanted. She pounces on me and kisses me with the same desperation as before. I wrap my hands around her plush ass cheeks and try not to groan too loudly.\n\n\"Paige,\" I warn her. She moans against my lips and grinds into my leg. \"Paige, we can't.\" I try again.\n\nShe sucks on my bottom lip and I feel her heated center against my thigh. Her breathing is coming out in huffs, but her moans continue to fall into my mouth. I catch each and every one along with her thrusts into me. I feel her nails against my neck and hiss. \"Paige, your dad will be done soon.\" I want to stop her but I can feel that she is close. I hope there is no wet stain on my pants after this. I will probably need to fix my hair afterwards, and my lipstick is ruined. But instead of pushing her off I encourage her more by snaking my hand into her sweats. She bites my bottom lip when I find what I am looking for.",
        "My fingers slide effortlessly into her pussy and I rub her warm juices around her wanting clit. She jumps up at the contact but continues to move her hips against me. I rub at a quick pace feeling her legs tighten around me. Her breathing stops and I bring up a hand to cover her mouth as her orgasmic screams take a hold of her. She traps my hand between her legs and I watch her face as it contorts from furrowed eyebrows and tight lips to a slack mouth and serene look. I kiss her lips when she releases my hand and she smiles.\n\n\"Thank you, I needed that.\" She's breathless.\n\nShe jumps off my lap and runs out of the room before I can say anything in return.\n\nInstead of feeling the same adrenaline I felt when I first saw her, something else settles on my chest.\n\n******\n\nMy hair is no longer in a bun. I took it down and used my sunglasses to hold it back. The dark maroon lipstick is no longer smeared all over my lips, I managed to rush to the restroom and fix my look before meeting with James.\n\nWe both agreed that this would be the last interview since it is going to be an hour long and by then I'll have pretty much all I needed to finish my piece. I get to ask all of the questions I prepared and he does a better job of keeping his answers short. He's looking down at his hands, deep in thought as I am putting my notepad and recorder away. He pulls out the cups and the liquor again and sets one down in front of me.\n\n\"I have a proposition.\"\n\nThis can't be good.\n\nI don't like being around James when I have to tell white lies. He's not a bad person. He actually seems like a caring human being. It doesn't sit well with me that I can't be completely honest with him. I thought with this last interview we would both part ways, he would call when the article came out, and then we would never speak again. I also don't want any reason for my path to cross with his or Henry's again.\n\nThe liquor burns down my throat and settles in my stomach. I should have eaten before coming.\n\n\"I've read some of your work.\"\n\nThat is surprising. Or maybe it shouldn't be. Even though we were not the trendiest magazine out there we do keep up with a lot of up and coming individuals.\n\n\"I'm impressed.\"\n\nI don't know why but that makes me feel validated. I haven't been proud of my work lately. It feels almost repetitive at this point. \"Thank you.\"\n\nI take another sip of my drink.\n\n\"I have connections you know. To other places where you voice can be heard by a bigger audience.\"\n\nThe drink is really burning on its journey down. I clear my throat. \"Thank you, James. But I am actually already looking into another company at the moment.\" This is half true. I did find another magazine that focuses more on those giving back to their local communities than those hoarding their money for themselves.\n\n\"Have I heard of them?\" He leans back against his chair and his eyebrows pull in together. If he really thought I would jump up at the opportunity to have him boost me into the next level of my career he doesn't really know me at all. I don't want anything from James. That's also not completely true. He does have one thing I want.\n\n\"I don't want to jinx it,\" I don't want his influence to tip the scale this way or that. He may like me now but if he ever found out what I was doing to his daughter he could ruin my life in a heartbeat. He has that kind of money.\n\nHe sucks his teeth and raises his eyebrows. His cup comes up to his lips but he doesn't drink.\n\n\"Well, if it doesn't go well just know I've talked to some people. Henry's aunt, Kathleen- you remember her from the party- has also read some of your writing.\"\n\nThat's too much of a coincidence. I understand why James would want to read some of my previous articles since I am writing one about him but why would it get to Kathleen? I don't like this.\n\n\"Paige has talked to her about how talented you are.\"\n\nThere it is. I sigh, internally. Paige needs to stop. \"I'm really okay James. It wouldn't feel right to take advantage of our relationship.\" It wouldn't feel right to have Kathleen give me a hand while I'm possibly ruining her nephew's marriage. In an alternate universe I would reach out to Kathleen and see if she could be a mentor to me. There is no possibility that it can happen now.\n\nI look down at my watch and finish my drink. I made plans to meet up with Renee. After Paige basically used me to get off, I asked Renee to lend a listening ear. She was probably heading to the bar now.\n\n\"I want you to write a spread for my daughter and her fianc\u00e9.\"\n\nMy nails dig into my palm. My eyes widen. Not what I was expecting his next words to be. \"I would be honored. But you know our magazine doesn't really do the whole proposal announcements. Now if your future son in law cured cancer, then I would be more than happy to interview him.\" I start rambling. I can't stop talking. I go on to give other examples of the type of work we would feature and he finally puts his hand up to stop me.\n\n\"I know. This is mostly so for me. Like I said. I like your style of writing. I want you to interview them both. Ask them how they met, how their love has blossomed, how their wedding planning is going, all of that and then write as much as you want about it. I want to give it to Paigey on her wedding day as a gift.\"\n\nI can only hear my heartbeat, pulsating weakly in the distance. Be with them. During their whole journey? Watch as they pull this wedding together and count down to the dreadful day where she becomes someone else's? I would rather die the slowest painful death that has ever been known to man than to subject myself to that kind of torture.\n\n\"I don't think I'm the right person for the job. And what kind of surprise would it be if I'm there the whole time snooping around interviewing them?\"\n\nHis hands shove my excuses aside. \"They know what you're doing, the finished product will be the surprise. Of course, I can get that nice young lady to take pictures of them like she did with me.\" Renee would shit herself if she was brought into this. She lives for this type of drama. \"And then I would make sure you were paid very well for your services. I can even reach out to your boss and ask him to give you a couple days off a month so you can focus on this. I'm sure a nice donation for new office supplies or, Hell, even a new office will make him reconsider.\"\n\nThe walls are closing in on me. His words are a train full of expensive cargo heading towards me and I can't move an inch of my body. How can I refuse without sounding like it is for my personal sanity that I cannot take the job?\n\n\"I'll let you think about it.\" He stands and I do as well. \"But just to let you know, Paige loved the idea.\"\n\nMy handshake is limp compared to his.\n\n******\n\nMy computer screen is the only light in my room. That and the moonlight coming in from the shutters. It's been a week since I've talked to James. His email is open on my screen and I can't stop staring at it. I'm in bed, wearing some old sweats and a t-shirt, tapping my finger against the space key. The figures on my screen are not made up. He is willing to pay a very generous amount for my service. Enough to allow me to stop working for a couple of months if I wanted to.\n\nMy hand reaches for the phone next to me.\n\nI ignore Paige's texts. The first couple of days she texted a couple of times a day but I always made some excuse about work and not being able to talk. She's less insistent now but still there nonetheless. She really thinks it is a good idea that I interview her and her future husband about their wedding, and the cake, and their first date, and their undying love? What kind of a psychopath would wish that on anyone? Or does she really have no idea that I want her for more than just sex?\n\nI've never said it to her, how much I really want her. I've only just admitted it to myself but that is because I was forced to. But what did I really think was going to happen between us? I made fun of Paige for being so naive about starting an affair with me when nothing could come of it and yet I bought into it. I got front row seats to the biggest mistake of my life.\n\nMy finger double taps my phone screen and I search for Lana's number.\n\nIt's almost ten PM. Maybe she's sleeping. Well if she is, then I can leave a voice message. I just want to hear her voice. Lana is a sweetheart. I don't know why she would ever want to be friends with someone as crude as me in high school but I'm glad we were close. Unlike Renee, Lana doesn't find every fucked-up situation I put myself in as a story just for her entertainment. That's not fair to Renee. She would probably take it more seriously if I let her know how much it is really affecting me. Last time we met I brushed it all off and even joked about being a masochist and wanting to take the deal James gave me just to have some money to blow. I didn't let on that it would ruin my spirit irrevocably.\n\nShe picks up on the second ring. \"Hey, you. Long time not talk.\" Her accent is thick, her tone soothing.\n\n\"Hi.\" I remove the laptop from my thighs and walk to the foot of my bed. \"Are you getting ready for bed?\" I can imagine Lana lying in bed, in her nightgown with her brown hair up in pins. Her husband is probably rubbing her feet after a long day. That doesn't sound so silly on nights like this.\n\nShe snorts. \"With three boys? I'll be lucky if I'm in bed by midnight.\"\n\n\"How are the boys?\"\n\n\"Raising Hell, you know, doing boy things.\"\n\nThe line is silent. My eyes keep going to the computer screen.\n\n\"Your aunt Sally was asking about you last week. She says you don't call her that often.\"\n\nI stomp down on my guilt. By the end of this conversation I'll be drowning in it. \"I'll have to give her a call tomorrow.\"\n\n\"What is it, honey?\"\n\nMy hands are trembling. \"I just wanted to hear your voice, is all. Any time I do I feel grounded in a weird sense.\"\n\n\"Well you know I'm always here if you want to talk.\"\n\nMy foot taps against my plush carpet. \"I do have a situation.\" I feel like I'm in confession. Lana is fiercely loyal to me but she'll let me have it if she doesn't agree with what I do.\n\n\"I thought you might.\" She whispers to her husband and I hear her move. \"Spit it out, Taylor Lee. Jamie will only give me a few minutes alone before he gets grumpy and takes me to bed.\"\n\n\"I met this girl. We've been seeing each other, but she's engaged.\"\n\n\"My Lord, you sure know how to keep me on my toes.\"\n\nI tell her everything from beginning to end. I've walked so much and walked around the studio so much I'm sure I'm digging into the apartment below me. I wouldn't be surprised if I fell through right now.\n\n\"Please say something.\" I'm resting my head against the cool wall.\n\n\"Well you know I don't approve of your player ways. And I definitely do not approve of you sleeping with a taken woman.\"\n\n\"I know.\" I lift my head.\n\n\"And have you really been having nightmares about your parents again?\"\n\n\"Just of that specific night now.\" I sit on my bed.\n\nShe sighs into the phone. \"Well, you know you can call me when you wake up from that. I know how hard it was for you to get over that.\" She sounds tired. \"I don't care what time of the night it is. I'll answer.\"\n\nThe fact that she is not mentioning Paige is making my nerves go haywire. \"So, what should I do?\"\n\n\"Seems like she is different from the rest. No one has made you think about your parents.\"\n\n\"Yeah.\" I'm not happy about it.\n\n\"You do know if you take the assignment, you're only going to feel more hurt after.\"\n\n\"I know.\"\n\n\"And the more time you spend with her the more attached you will get. It's almost like Draya all over again.\" Draya who took my virginity and ran off to college with it. I wonder what became of her. All I know if she was the first girl to hurt me and the last.\n\n\"But,\" My heart stops beating when she continues. \"She doesn't seem to want to marry the rich fella. And if she likes you enough you might have enough reason to ask her to pick you.\"\n\nPick me? Is that even an option? \"I'm not rich, I don't have any connections. And she has never said anything about calling off the engagement.\"\n\n\"Well have you asked her to?\" She laughs at my silence. \"Now why would that little girl jump off the ledge if she doesn't know you'll be there to catch her? And who cares about all the money if you're dead inside?\"\n\nThis is not how I expected this conversation to go. I expected Lana to walk me through how I could reject James' offer. How I could get over Paige and move on with my life. Why is she encouraging this?\n\n\"But what if she doesn't choose me?\"\n\n\"What if she does? You have to let her know you are an option. The harder you fight the more you'll gain at the end.\" She yawns, \"Now I do have to get ready for bed. Long day tomorrow. Call me if you want to talk again. I miss you, Lee.\"\n\n\"I miss you too, Lana.\"\n\n******\n\nWe're in the breakroom about to finish lunch.\n\nRenee and the intern are arguing about some T.V. show they both saw last night and I don't care enough to keep up. Renee is doing another amazing job of taking the new girl under her wing. She seems to like the attention she gets from Renee too. My phone vibrates and I see Paige's name. She's texting me again.\n\n'Can I please see you tonight?'\n\nThis is the first time she is straight forward with what she wants. All of these 'hello stranger' and 'what are you up to' texts are becoming repetitive but it isn't her fault. It's been almost two weeks now since I have seen her. I already emailed James and told him I would take on the assignment. True to his word he reached out to Tommie, donated some dough, and now I get off once or twice a month to solely focus on this project. With this time, I intend to make Paige fall for me and eventually choose me.\n\nAll the nagging thoughts and doubts always course through my veins when I imagine all the wrong ways this can go but Lana is right. If I do get her, the payoff will be the best reward. If it was too easy, I wouldn't appreciate it as much. So now I had to plot. Should I make Paige wait until our first meeting to see her or give her a taste of what she can have now?\n\n'Your place or mine?' I give in. She asked so directly, she should get rewarded.\n\n'Yours.' The response is immediate.\n\n\"That is your shit eating grin. What did you just do?\" Renee points a finger at me.\n\nThe intern laughs but starts to clean up around her area. I pick up my trash and zip my lips. I won't come clean to Renee until the plan has been put into motion.\n\n******\n\nMy studio is clean.\n\nShe asks to meet earlier than I expect so I wasted no time. As soon as I got home, I scrubbed everything down from top to bottom. I set out some candles to help the place smell as well as it looked. The lights are low and the mood is set. I hop out of the shower and throw on some skimpy black lingerie. My silky, red, wine colored robe drapes my body the way I want it to. I touch up my make up in the bathroom, matching my lips to the color of the robe. Light blush, smoky eyeshadow. My hair is up in a messy bun. I spray some perfume on my neck. I clean the bathroom sink of any makeup powder and turn off the lights as I step out. One last scan around my place and I sigh in relief. Everything is as it should be.\n\nThere is a knock on my door. My breathing ceases when I open it.\n\nPaige is standing there, looking adorable in a flowy, baby blue skirt, white flats, and a white blouse. Her hair is parted down the middle. There is a blue pin on each side of her hair, pushing it out of her face. Her hands are hanging on to the thin strap of her nude purse. Her knuckles tighten when my eyes land on her face. Her eyes are glued to mine and I try not to look as affected as I feel. Moving aside I motion for her to come in.\n\nOnce inside, she removes her shoes and tosses her purse on the ground. The room is dark, the lights from the candles doing wonders to the ambiance. She turns to me, her intentions clear. She wants to pounce.\n\nI hold up a finger and raise an eyebrow. \"You will do as I say.\"\n\nShe stops herself from coming towards me and I notice her fingers reaching for me. \"I just want to-\"\n\n\"Shh.\" I move closer to her and pull the pins out of her hair. She looks too put together. Robotic almost. Like she's not really human. There isn't one hair out of place. \"No talking unless I tell you to.\"\n\nShe licks her pouty lips, I see her hunger. I can feel it oozing from her pores. Has our time apart felt as long to her as it did to me? Maybe her reasons for missing me are different. I don't let that depressing thought bother me for too long. Tonight is about making her feel good.\n\n\"Lay on my bed.\" I motion with my head. I give her one of my charming smiles and she sucks in a breath.\n\nI can see the hesitation in her eyes. Normally I would find this tedious, having to repeat myself, showing her what I want, but not tonight. I am also learning to have patience with Paige. With enough trust we can have what we both want.\n\nShe finally walks across the room and lays on my bed. The purple sheets on them sink down as she scoots to the middle of it. She looks really small on her own. My first instinct is to cover her body with mine but I hold off. I need to be patient with myself as well. I have a plan.\n\nI sit on the black chair that came with my study desk. Positioning it right across from the bed, she watches as I make myself comfortable. I normally use this chair to do some work from home and agonize over unfinished assignments but tonight it will be used for more interesting things. We both sit across from one another tasting the sexual tension in the air.\n\n\"Take your shirt off.\" I cross my legs and watch her dainty fingers fumble with the buttons. Her bare breasts don't catch me off guard this time. By now I've learned Paige does not like to wear underwear. I expect to see her puffy caramel nipples. Except they're slowly becoming erect with the cool air from my open windows. \"Push your hair back, away from your chest.\"\n\nShe gracefully brings both hands up on each side of her neck and pushes her glossy hair back. The movement causes her breasts to move in a hypnotizing way. They continue to rise and fall with her short breaths. My mouth waters. She brings her hands down to her lap and waits for my instructions.\n\nI gaze at her through hooded lids. She is breathtaking. Her ribs are visible, her breasts sit proudly on her unblemished chest. Her tummy sinks in and my eyes trail down her legs. Her skirt is bunched around her hips. One wrong, or right move, and I'll be greeted with a lovely sight. She shifts and fidgets and I have to look up at her face. She wants to say something.\n\n\"Yes?\"\n\nHer normally defiant, blue eyes are docile but I'm not fooled. One slip on my end and she'll be in control. It is cute to see her hesitation though. She looks shy.\n\n\"I want to be close to you.\"\n\nI suck in a breath and sit up straight. I uncross my legs and chew on the inside of my cheek. The words unguard me. She doesn't mean them the way I want her to and it sets me back. This is a bad idea. Fuck. My fingers lightly drum against my thigh.\n\nAgainst my better judgement, I hold out my hand once I'm over my shock. She stands and places her hand in mine. I sit her down on my lap so that she can't look at me. Her back is against my chest, the same way we sat after I gave her, her first orgasm and before giving her the next one. That same night that I found out she was already spoken for.\n\nI'm losing control and this is not how tonight is supposed to go but I can't deny her what she wants. Her thighs are right on top of mine. I smell the intoxicating scent of her strawberry shampoo and inhale. Her hair is inches from my face. I move my head to her shoulder and she leans back against me.\n\nMy lips nibble at her neck and she trembles. I let my tongue lick her smooth, tan skin. She withers.",
        "\"Touch your breasts.\"\n\nShe doesn't hesitate. I feel her head move and I know she's looking down at her hands. I see a reflection coming from one of her hands and for the first time notice the big rock on her ring finger. I bite my lip. What am I doing? All of this is wrong.\n\n\"Pinch your nipples.\" My voice is thick.\n\nHer breath quickens but she doesn't do as I order.\n\n\"Pinch-\"\n\n\"I want you to do it.\" Her voice is breathless.\n\n\"No.\" My response is harsh. She doesn't get to come here and tell me what to do. This is not what I signed up for. Deep down inside I know I'm angry at the inanimate object on her ring finger. Some of the anger is reserved for me as well. I'm the one allowing this.\n\n\"Please,\" She leans back and exposes her neck. Her eyes are closed, eyebrows pulled in, lips are frowning. I finally see the tear slide silently down her cheek. I watch as it slips down her chin.\n\nMy hands come up to cover her own. I guide our fingers back and forth against her nipples. She coos in appreciation and I feel her thighs press together. I massage her breasts in both of our hands. I can't stop my lips from brushing against her neck. For a second I imagine she is mine. Just mine. That we are in our own little world and that she wants me to be hers too. This is dangerous.\n\nI use one of her hands to slip down her ribs and past her stomach. Her breath hitches when I open my legs up causing hers to do the same. I push past her skirt until I find her wet pussy, so wet. I bite her neck and she moans. Using her fingers, I spread her cream around her lips and her tight little hole. She removes her other hand from her breast and places mine directly on it. I tug on her nipple and she shivers. She then snakes her free hand past my robe into my own slick center. The brush of her timid fingers against my bare pussy unguards me. I want to stop her. I want to lean into her curious fingers. Instead I rub against her opening with more determination. She matches my hand movement and I feel myself getting close. My fingers guide her own to rub against her swollen clit. I quicken the pace when she moans louder.\n\nShe turns her head in my direction and kisses me deeply. I feel her body tense and only when she begins to tremble against our hands, do I let myself cum all over her fingers. It is a sweet sensation. The blossoming feeling in my chest takes up all of the space in there. Behind my eyelids I see sunshine and bright skies. The color is much too blue to match Paige's eye color but I realize I'm seeing the world through her eyes. I'm looking at our little world.\n\nHer hand slows down the way mine does and we both catch our breath. I peck her lips a couple of times and watch her eyes slowly open. I don't get more than a second to share this moment with her before her features go back to being stoic. One moment she is letting herself feel and the next she puts on a mask of indifference. It's a transformation that I'm not a fan of.\n\n\"Oh shit.\" She hops from my arms and rushes to her purse. She excuses herself and goes to the restroom.\n\nThe cold that replaces the spot on my lap is almost unbearable.\n\nOnce she steps out of the bathroom, she looks collected. \"I'm sorry, I have dinner with-\" She looks at me and I see the shame in her eyes.\n\nShe's going to him.\n\nI stand and tug on the silky belt around my waist. \"Why would you come here if you had dinner plans with him?\" I don't hide the anger.\n\n\"I needed to see you.\" Needed, not wanted. It doesn't make me feel better. \"His parents are in town...\"\n\n\"Well you can go now. I didn't expect you to stay anyways.\" I walk to the door and watch as she throws on her shirt. She has trouble getting the buttons to cooperate. I open the door once she is put back together. Her hair is perfect, as is her clothing. It bothers me now knowing she doesn't have any underwear if she is going to see him.\n\n\"I would stay if I could.\" Her cheeks are bright pink and her lips are bruised. One of my bite marks looks fresh on her neck.\n\n\"I don't let any of the girls I fuck stay the night.\"\n\nHer eyes turn fierce. I don't let it intimidate me. I welcome it. She steps closer to me. \"You would let me stay.\"\n\n\"Are you fucking him too?\"\n\n\"Fuck you.\" She snatches the door knob from my hand as she leaves. The door slams and shakes the painting on my wall.\n\n******\n\nThe rest of the week goes by uneventfully.\n\nI bounce back between being angry at Paige and being angry at myself for even entertaining her. She got what she wanted that night. She got to come over to my place, have an amazing orgasm, and still save face with her fianc\u00e9 and his family. Meanwhile I had to change my sheets, blow out all the candles and wash away any lingering traces of her from my skin. Why did I do that?\n\nI finish up James' article and it goes live.\n\nTommie gives me my next assignment and also informs me that I have this Wednesday free to start on operation Paige and Henry's wedding story...spread...whatever it is. He isn't asking any questions and I'm not volunteering any information. To stop myself from going completely insane I have thrown myself into my work and ignored any looks from my other co-workers. My mood is shit and everyone has steered clear of me. The only person who I have been able to tolerate is Renee, who I have yet been able to catch outside of work, and the intern who gets me things before I even ask for them.\n\nTuesday night I get an email from James congratulating me on the article even though he was the one that provided me with all of the information. All I did was shed some light on who he was as a person as opposed to kissing his ass and portraying him as a God. He also asks to please have drinks with him tomorrow after my first meeting with his daughter and Henry. My response is quick and short. I'm sure a drink after that meeting is exactly what I will need.\n\nI decided to call my aunt, it has been a while and I have no excuse not to.\n\nShe answers on the first ring. \"Hi, darling.\" Her accent is slightly thicker than Lana's.\n\n\"Hi aunt Sally.\" She sounds tired. I don't want to feel guilty for not visiting her but it is hard not to. Maybe I can go sometime next week.\n\n\"I thought you forgot all about me.\" She chuckles.\n\nI imagine her sitting on her couch watching the news, knitting something to pass the time. No matter how many times I asked her why she never remarried after uncle Phil died, her answer never changed: 'you only find your soulmate once.' I wish she didn't have to be alone though.\n\n\"I'm sorry. I've been so busy with work. What have you been up to? Lana said she saw you recently.\" She's really happy to know I still talk to Lana. She talks about how it's been raining down there. The bugs have been more irksome than usual so she's been staying in more than she likes. The church ladies she sees every Tuesday to play bridge with are on the outs right now because of some gossip surrounding one of their nieces.\n\n\"Apparently she's leaving her husband for a woman.\" The shock is clear in her voice.\n\n\"Maybe she's not happy.\" My aunt heard rumors about me sneaking around with some of the girls I went to high school with but I could never bring myself to be honest with her. I was already a burden to her.\n\n\"Maybe but if she was a person with good character she wouldn't go behind his back and cheat on him with another woman. It's a sin.\"\n\nI sigh. This story is much too relatable. I need to come clean if I am ever going to visit her again. \"Aunt Sally, you do know I like girls, right?\"\n\nThere is some silence then another sigh on her end. \"Yeah, I heard about that. You were causing havoc with all of my friends in your high school days.\"\n\n\"I'm so sorry.\"\n\n\"Don't be.\" She sounds sincere. \"I always defended you. Even if the rumors were true I told them it wasn't like you were out there killing anyone.\"\n\n\"So why are you being hard on Gertrude's niece?\"\n\n\"Didn't you hear me? It's not that it's a woman that she's cheating with it's that she's cheating at all.\"\n\n\"Oh.\" I feel like shit. Maybe this is the sign I need to stop whatever I'm doing. But why does my heart feel so heavy at the thought of never seeing Paige again? \"Well, don't be too hard on her. I bet she is terrified of what people are going to say or what they're going to do now that they know.\"\n\nShe doesn't respond and I change the subject. After a few more minutes of talking I let her know I'll drop by sometime next week. She is over the moon.\n\n******\n\nI never thought I would be back in this house.\n\nThe butler opens the door and guides me to another room on the first floor. It is a library. He tells me that the misses and mister will be a couple of minutes. I place my purse on a thick wooden table in the middle of the room. The wood is almost red and it is glossy. No dust settling in anywhere.\n\nI walk around, looking for any titles I might be familiar with and interested in the ones I'm not. Does James spend a lot of time here? There is some liquor and cigars by the window on a marble table. He probably entertains a lot of gentlemen here. Has probably discussed business and made a lot of money behind these doors. If walls could talk...\n\nThe door opens behind me and I see Henry stride in first. His walk is confident as is his handshake. He's wearing a dark suit with black shoes. \"Taylor.\" No warmth.\n\n\"Henry.\" I shake with equal force. I know my first impression on him was not the best.\n\nPaige is behind him, using him as a shield.\n\nShe closes the doors behind her and finally looks at me.\n\nShe's wearing a yellow sundress. It hugs her body so that I can see her nipples poking through the thin fabric. If she was wearing any underwear, I would be able to see the lining too. Her tan sandals match the color of the flowers on the dress. Her hair is freshly wet, she just got out of the shower.\n\nI lean over and kiss her soft cheek. I can't help myself. \"Paige.\" It has been too long. And just like that I am being sucked in by her gravitational pull.\n\nHer skin turns bright red when I pull back and I see the shock in her eyes. The color is not quite as dark as it gets when she cums under my tongue but it makes my imagination run wild. I turn away and motion towards the table.\n\nPaige and Henry sit on one side and I sit on the other.\n\nI allow my body to take over and go through the motions of turning on the recorder, pulling my notepad out, and setting the questions I typed down on my lap. I am doing this for the money. I need it. I need it if I am going to get away from here.\n\n\"First, I want to thank you guys for taking some time off your schedule today to meet with me. I am very excited to start this project for both of you and can't wait to show you the finished product.\" My voice is an octave higher than usual. I'm playing a role. They're just some clients that I need to make happy. I imagine they are other people that I have never met before.\n\n\"Thank you for doing this.\" Henry is polite but the smile doesn't quite reach his eyes. Maybe I'm being too critical of him. I try to be unbiased.\n\n\"We'll start with a couple of simple questions for today and then I will send out any follow up questions that you guys can think about before our second meeting.\" i make sure this meeting is the shortest. But it really does nothing when there are many more after this. Yes, many other meetings to this madness. \"Any questions?\"\n\nHenry shakes his head. I let my eyes roam over Paige's face, she's looking down at her fingers. I itch to lean over and guide her face up so she can meet my eyes. I clear my throat.\n\n\"How did you two meet?\" I turn to Paige. \"We'll let Paige answer first and then you can add any details you might remember.\"\n\nHer answer is generic. His dad and her dad have been friends since they were younger so they have always been in each other's lives. Henry's answer is more detailed and talks about Paige as a little girl. I find myself hanging on to his every word. Any piece of information he has on her fuels my curiosity. I hate that he knows her moods and knows how to make her happy. Evidently, she has always been defiant and stubborn and he has had to get her out of trouble on more than one occasion.\n\nHis smile is charming and the way he speaks about Paige shows his clear affection towards her. It doesn't sit well with me.\n\n\"Great.\" I take down a couple of more notes. I ask a couple of more follow up questions which Henry answers each time. I finally have to ask my dreaded question. \"When did you know you had found the one?\" My smile is encouraging but I would rather be anywhere else in the world. Even back in my old hometown where I would risk running into Draya.\n\nHenry goes on to talk about the time Paige was away for a couple of weeks when her dad was doing business out of the country and he knew his feelings for her were real. He's saying all the right things and playing his role perfectly. Maybe I'm not the only one pretending here? Or maybe I don't know shit and I'm the idiot here interviewing the girl she has fallen for and her fianc\u00e9.\n\nI turn to Paige but she doesn't say anything.\n\nHenry's phone rings and he excuses himself. I watch as he goes to the balcony and stop the recorder.\n\n\"I don't want to do this stupid interview.\" She's glaring at me.\n\nMy mouth drops. \"And you think I do?\"\n\n\"I know you're doing it for the money.\" There is finally some emotion in her voice.\n\nI grind my teeth and sit back. I can't deny it.\n\n\"I can double it if you leave right now.\" For an ice queen, her eyes can melt my core.\n\nSo, she wants me gone?\n\n\"Why? So that you can go back to fucking him and acting like you weren't begging me to touch you just last week?\"\n\nShe squirms in her seat.\n\nHenry walks in and leans down to kiss her on her temple. \"I'm sorry I have to cut this short. There are some business moves about to happen and I need to be there.\" He shakes my hand and leaves without another word.\n\nAnd just like that I am left at her disposal.\n\n\"Well, that is the best news I've gotten all week.\" I gather my things and place them in my bag. I stand as I do this.\n\nPaige walks around the table and stands in between the table and myself. I don't move back like I instinctively want to. She smells like strawberries again.\n\n\"I wasn't kidding. I need you to call this off. I will pay you whatever you want.\" Her cheeks heat up as she realizes the distance between us is small.\n\n\"Why? It's not like we're fucking anymore. Your conscience is clear.\"\n\nShe huffs. \"For now.\"\n\nHer blue eyes stare up from under her lashes.\n\n\"What do you mean?\"\n\n\"I mean, we're not done. You still want me.\" The confidence in this girl is annoying as it is thrilling. How can she be so sure of it? Do I wear my emotions on my forehead?\n\nI drop my purse on the table behind her and place a hand on either side of her. \"I'm not touching you again until you call it off.\" There. I said it. I'm telling her what I want. And if she wants me enough, she'll do it.\n\nI see the fear in her eyes. \"I can't.\"\n\n\"Then forget about us. It will never happen again.\"\n\nShe whimpers and leans into me. Her breasts rub against mine and I feel her nipples through my silk blouse. I close my eyes.\n\n\"I need you.\"\n\n\"No.\" I shake my head and open my eyes. I know my eyes are eating her up. I feel the desire and I can't deny it. But I can't keep doing this anymore.\n\n\"Taylor,\" She tries to wrap her arms around me. I grab her by the waist and flip her down so that she is bending over the table. I will give her this one last time to remind her what she will be missing out on. I'll make her feel so good she'll be delirious. If she doesn't call off her engagement after this, I'll have my answer.\n\n\"Are you going to do as I say?\" I lean over her body to whisper in her ear.\n\n\"Yes.\" She pushes back so her ass grinds into my lap.\n\n\"Enjoy this, because it will be the last time, I touch you until you call this off.\"\n\n\"But-\"\n\n\"If you talk again, I will leave.\"\n\nShe moans when I bite down on her lobe.\n\n\"Hang on.\" I guide her hands across the table and wrap each one around the edge. \"I don't want you to let go for any reason.\"\n\nShe nods and rubs her legs together.\n\nI fall back and sit on the chair. The clock above a scenic painting says we have a couple of minutes. Thinking about it now Henry could have probably stayed since this was a short interview but I don't dwell on that. Brushing her smooth legs, I guide my hands up her calves and behind her thighs. She's moving around but not letting go of the table. My hands go under the dress and pull it up until it exposes her beautiful ass cheeks. They're firm and full, my mouth waters. My face is inches from her dripping hole. Her pussy is clean and shaven. It looks like a heart from my angle.\n\nI lightly blow into her hole and she moans. \"Shh,\" I grope one of her ass cheeks as a warning. \"Don't want one of your maids walking in to find me fucking you with my mouth from behind.\"\n\nShe moans again but this time bites into her arm to muffle the sound. That works too.\n\nI tilt my face up and allow my tongue to lap into her puckered hole.\n\nHer head snaps up but refrains from moaning. My licks are slow and sensual. I groan and close my eyes, savoring the taste of her sweet hole. She tastes clean. I move my tongue in circles before stiffening it and trying to dig in further into her. She pushes back against me and I repeat the action. I bring a hand up and slowly insert two fingers into her wet pussy. Her muffled moans lets me know she is close and I speed up my licking. My thumb rubs her clit in a circular motion and it is not long before she is bucking against my hand and moaning with no restraint.\n\nI pull my fingers out when I feel the clenching stop and lick her pussy clean. I want to taste her every morning. I want to wake her up like this. Begging me to make her cum, listening to me when I tell her not to moan so loud. Just being mine. The thought depresses me.\n\nLeaning back, I wipe my mouth and admire my fine work.\n\nWith shaky legs, she stands, turns and lowers her dress. Her hair is all over the place and I see the bite mark on her arm. She looks perfect.\n\n\"Let me know once you've called it off and we'll talk.\"\n\nShe stands there, her emotions unreadable.\n\nI leave the room.\n\n******\n\nRenee finally finds some time to meet up after work at the end of the week.\n\nWe decide to hang out at my place and drink to avoid being around people. I have been surrounded and talked to by one too many idiots at work and I just want to drink and forget about all the bullshit going on. Tommie has been more of a pain lately asking me to look over things for him that I haven't had to do before. I finally applied to the other company I was thinking about so now I just have to suck it up and wait for a response. I've also started looking at other companies in different cities, preparing for the worst.\n\nIf she doesn't leave him, I'll have to leave. And not because I have too much pride and it'll hurt that she didn't choose me but because if I don't leave, I won't be able to stay away from her. She just has to snap her fingers and I'll be wherever she needs me to be. When did she get that hold over me?\n\n\"Okay, new game. You take a shot for every brooding face you make.\" Renee hands me a shot of dark liquor. This is not a good idea.\n\nI drink it and clear my throat.\n\n\"And you drink every time you bitch or complain about work.\" I counter.\n\nShe pours herself two shots and takes them. \"I already know myself.\"\n\nWe laugh and move the party from my little kitchen in the corner to the love seat on the other side. She lowers the bottle on the coffee table and places the four shot glasses on each side. I place the pizza and can sodas wherever there is space on the table.\n\n\"Let's eat first, don't want a repeat of last time we drank a bottle together.\" Renee smirks.",
        "I chuckle and hand her a slice. I won't sleep with Renee again. I don't think I will be able to sleep with anyone else for a long time. Even on my loneliest nights I can't imagine seeking out anyone else to keep me warm. Only her icy blue eyes can beckon me to lose reason.\n\n\"Seriously, though. Why have you been moodier lately?\" Renee crosses her legs and folds her pizza in so she can take a big bite.\n\nI nibble on the tip of my slice and debate just how much I want to tell her. I'm dying to let her know exactly what I have done since the last time we spoke but this may be too much for our relationship. We usually keep things fun and if we ever vent it is not for long. I've already told her more than I initially wanted to. She's been supportive about it. I guess my hesitation is once I put it all out there on the table it makes it real. So far we've been in a bubble.\n\n\"I asked her to call off her engagement.\"\n\nA pepperoni falls from her lips and lands on her black yoga pants. \"Oh, shit.\"\n\nI replace my pizza slice with another shot. I need to just get it all out there.\n\n\"What did she say?\"\n\nI shake my head. \"She hasn't. She hasn't said anything.\"\n\n\"So, you really like this girl? Oh, man. Does that mean I won't get any more mind-blowing orgasms from you?\" She mocks me.\n\nI pour her a shot and hand it over to her. She takes it and whistles.\n\nMy phone rings at that moment.\n\nIt's Paige.\n\nI turn the phone screen towards Renee freaking out.\n\n\"Answer the fucking phone!\" She is almost jumping on top of me when I snatch the phone away from her grasp.\n\n\"Ok! Ok!\" I try to get my lungs to work again and take a deep breath. \"Hey.\" I don't sound cool or collected.\n\n\"I need to see you.\"\n\nDid you do it? I want to ask. \"When?\" I'm scared of the answer. But then why would she be calling?\n\n\"I'm walking up to your apartment right now.\"\n\nI jump up and run to the door. Shit. My neck almost gets a whiplash when I turn to look at Renee still sitting on the sofa. \"I can meet you downstairs.\" I don't see how this can end well.\n\n\"You don't understand I NEED you.\"\n\nI bite my lip to stop my groan. Just like that she calls the worst tendencies out of me. I want her. I need her too. But I'm still wearing my jeans and black t-shirt from earlier. I wish I knew she was coming so that I could have set the place up like before.\n\nThere is a knock on the door and I snap back to look at the knob.\n\n\"Open the door.\" Her voice is seductive.\n\nTossing the phone at Renee, I hold on to the knob and unlock the door.\n\nShe rushes into my arms as soon as I crack the door open. Her fingers dig into my hair and she pulls me into her so that we kiss passionately. Her tongue digs into my mouth and my hands grab her ass to pull her into me. We kiss for what feels like hours before I hear Renee clear her throat.\n\nI must be the only one to hear her because Paige keeps kissing me. Very carefully I place my hands on each side of her face and pull back. Her lids are low and her cheeks are a delicious pink. Her pouty lips are shades darker.\n\n\"Hi there.\" Renee makes her appearance.\n\nPaige's eyes narrow before they turn to look at Renee. She then turns back to look at me and I can see the storm brooding behind her eyes. Her fingers pull away from my hair and she tries to pull back but I hold her in place.\n\n\"You! I can't believe you would try to sleep with her! You told me-\" Her voice is shrill and she starts to curse at both me and Renee. I can't stop the smile that spreads over my lips. She's so feisty, I want to bend her over and shove my fingers in her mouth as I slap her firm ass cheeks. If she wants to act like a bratty child, I can treat her like one. \"How dare you laugh at me!\" She tries to shove me away more forcefully.\n\n\"I'm not sleeping with her.\"\n\n\"Yeah right!\" I notice her anger less heated and her eyes begin to turn misty. \"I can't believe I fell for it! I fell for-\"\n\n\"Hey,\" I pull her in for a hug and whisper in her ear, \"I'm not sleeping with her. She's just a friend. We're just staying in and drinking.\" She struggles a little bit more but finally stops fighting.\n\nWhen I feel her relax in my arms I pull back and take a good look at her. Her nose is red and her eyes are brimming. Her hair is no longer parted perfectly and her green flowy dress is wrinkled. She looks flawless, as usual.\n\n\"Come, I think you need a drink more than we do.\" She lets me guide her to the couch and allows me to pull her down on my lap. Her back is against the armrest and her legs spread across my thighs.\n\nRenee has three shot glasses filled and hands each of us one.\n\n\"That was interesting.\" She holds up the glass and we bring them towards the middle and do a silent cheer.\n\nRenee tries to get Paige to talk but Paige still looks uncomfortable. I swoop in and start to talk about work. Renee and I compare notes on one of the new articles edited by the intern and agree she is doing a pretty good job. My hand is on Paige's lower back and I run my thumb back and forth to remind her I'm still here with her. My other hand is on her shin, lightly drumming my fingers against her smooth skin. She probably just came from some fancy dinner with his parents or something. She looks too put together to just be hanging out on a Friday night. Which makes me beg the question, why is she here? If she ended things with him wouldn't that be the first thing she would want to tell me?\n\nRenee is getting into a story about a photo shoot she had earlier this week when I notice Paige's eyes keep looking back to a particular spot across from the room. I look back to follow her line of sight and see it's the chair we shared together. The one where she made me cum for the first time. I look back at her and watch as her gaze trails to the same chair. She catches me looking at her and her cheeks get darker.\n\n\"Can you pour us a couple of more shots?\" My voice is thick. I can't touch her that way again until I know for sure she is done with him. The kiss at the door was a moment of weakness. I can't let it happen again.\n\n\"Are you hungry?\" I kiss her temple.\n\nShe shakes her head.\n\n\"Already had dinner?\" My tone is sour.\n\nHer eyes are trained on my chin.\n\n\"So, Paige.\" Renee hands out shots again and we clink the little glasses together. \"What is it like growing up rich?\"\n\nPaige looks mortified which is an interesting reaction. I expected an annoyed look or the ice queen herself to make an appearance but she doesn't.\n\n\"Like waking up in someone else's life and having everyone dictate how you live it.\" That is very honest.\n\n\"But I mean, not having to want anything and having everything you need has to be a big plus side.\" Renee pushes. Her bangs are stuck to her forehead from her sweating. She gets like this when she drinks a lot. Maybe I should be monitoring drinks.\n\n\"Except I don't have everything I want. And I don't get a say in what I need.\"\n\n\"Do you really expect me to feel bad for you?\" I know Renee is not being confrontational, she is literally just this crass with the way she talks. I can see it is messing with Paige.\n\n\"No.\" This time Paige pours us all a drink and hands them out. I like the way she settles against me with no hesitation. \"I know that I am privileged and that I have a roof over my head and that I will never go hungry but you'll soon realize there isn't a life to live if you can't do what you truly want.\"\n\n\"And what do you want?\"\n\nThis stops Paige short. Her cheeks flush red but she just raises her shot glass and takes the drink. I'm hanging on to her every word. Renee is getting more out of her than I have in a while.\n\n\"Next topic. Why do you get to be mad at Taylor if she is sleeping with someone but you are already spoken for? And very soon to be married.\"\n\nI feel Paige stiffen against me and shoot Renee a look.\n\nShe shrugs. \"I'm just saying, Taylor, I think you should be fair game if I wanted to hook up.\"\n\nPaige turns to look at me. \"Do you want to sleep with her?\"\n\nI'm looking at the intricate neckline on her dress. \"Does it matter?\"\n\n\"Yes.\" She simply states.\n\nI finally meet her eyes. \"No.\" I won't lie to myself and I won't lie to her.\n\n\"Oh.\" She turns back to look at Renee. \"Do you want to sleep with Taylor?\"\n\nRenee snorts. \"Been there, done that. It was fun that one night but no thanks.\"\n\nPaige doesn't look satisfied.\n\n\"Enough talk about serious shit. Let's loosen you up and see who you really are.\" Renee hands Paige the whole bottle. Her smile makes me worry for what is to come.\n\n******\n\nI wake up to a groaning Paige.\n\nOur arms and legs are intertwined and I can feel her trying to move. I remove my hand from her breast and lay on my back. She's completely naked but I'm still in my shirt. No jeans but underwear at least. She gets up from the bed and walks to the bathroom. I try not to stare at her nakedness but her curves are my weakness.\n\nLast night was interesting. Renee broke through Paige's cool exterior and got her to loosen up and even joke around. No matter how many times I told Paige to watch how much she was drinking she ignored me and had her best friend Renee back her up. By the end of the night I learned that Paige is a happy drunk with a dry sense of humor. She also likes to karaoke and her go to songs are any pop songs from the early 2000. Once Renee took a taxi home Paige asked me to help her remove her dress. I was drunk enough to lust for her but keep my distance. She was out like a light as soon as her head hit my pillow.\n\n\"I have five missed calls from my dad.\" She's gloriously naked when she comes back. Her eyes roam the studio until she finds her dress and she throws it on. She comes to my side of the bed and sits down while looking at her phone.\n\nI get up and go to the restroom. I take my time brushing my teeth.\n\nOnce I'm back on my bed and I stare at her.\n\n\"Where does he think you are?\" Her hair is sticking up all over the place and her face is a little puffy from just waking up and I can't stop staring at her.\n\nShe shrugs. \"He knows I'm not with Henry since they probably already talked this morning. I have nine text messages from Henry.\"\n\n\"What are you going to tell them?\" If I had any doubt she broke things off with him, I have my answer.\n\nHer fingers are taping furiously at her screen.\n\n\"Why did you come last night? I think I made myself perfectly clear the last time we were together.\"\n\nHer eyes run down to my lips. \"I don't know.\"\n\n\"That's not good enough.\" I want to show her how angry I am but I'm scared of what I will do. I want her under me. I want her begging me. I just want her. It's really that simple. And yet it is not. I know she wants me too. Or at least I'm hoping she'll want me enough.\n\n\"That's all I got.\" She crosses her arms.\n\n\"Why don't you ever wear any underwear? You were probably eating dinner with his parents last night for fuck's sake.\" Might as well get some of my anger out.\n\nHer laugh is humorless. \"I don't wear any underwear around you. I'm normal every other time.\"\n\n\"What does that mean?\"\n\n\"That means I want you all the time. Anytime we're in a room together I hope that you will touch me and I don't want any barriers between your fingers and my skin if I can help it.\" She huffs. \"And when I'm not with you I can finally act rationally. Not that I don't think about you but I can at least have some sanity.\"\n\n\"What are you doing Paige?\" My heart is elated and heavy at the same time.\n\n\"I don't know!\" She jumps from the bed and starts to gather her things. She throws on her shoes and grabs the purse she dropped by the front door. I didn't realize she had a purse yesterday.\n\n\"You're going to marry him in a couple of months and I will be out of your life for good.\"\n\nShe comes to the edge of the bed. \"Don't do this to me.\"\n\n\"Don't you see how fucked up this is?\" I rub my eyes to help with the burning. \"He obviously loves you.\"\n\n\"You can't leave me.\"\n\n\"You're the one who gets to make the choice. The longer you wait the more people are going to get hurt.\"\n\n\"Don't you see? It will ruin all of our lives if I do that. My father will lose a friend and a business partner. Henry will be devastated and ridiculed.\" Her breath catches and she starts to cry.\n\nI resist the urge to comfort her. \"You keep talking about everyone controlling your life but you're the one willing to live your life for them.\"\n\nShe starts to hyperventilate and I finally break. I wrap my arms around her and pull her into my arms. She lays on her side and allows me to hold her. Her breathing is irregular but she manages to get it back to normal. After a while her body goes limp and her breathing slows. I kiss her temple and let her sleep.\n\n******\n\nI check my hair one more time and pull a strand out of my ponytail so that it frames my face. I look collected behind the black sunglasses. My jeans and tight grey shirt compliment my curves. I feel good. Well, as best I can feel with the mess I have made out of my life.\n\nIt has been two weeks since I've seen Paige.\n\nShe has asked to see me multiple times but I have stuck to my guns.\n\nI visited my aunt last week and made sure she had everything I needed. I also got to visit Lana. She looks as youthful as I remembered and her kids are the exact troublemakers she talks about. She was really proud of me for standing my ground with Paige and is hoping for the best outcome. I don't think she would be proud of me now.\n\nI walk into a building and pass multiple rooms until I see the one she texted me about.\n\nThere is classical music playing in the background and I peak through the small window on the door. Paige is being lifted by a lanky looking guy. They both have graceful moves. My eyes are glued to them. Once the music stops, they both clap and walk to their instructor, an older woman.\n\nI wait as the guy walks out with another dancer.\n\nI walk in to see Paige still talking to the instructor. She looks up and smiles when she sees me. I can see her need to come to me but she motions for me to wait a bit.\n\nAfter about five minutes she introduces me to the older woman she was talking to. There is a person behind the piano I did not notice before and he offers his hand. I shake it and we exchange a couple of words. Paige goes to gather her things and I wave as the instructor and older piano man leave.\n\nI walk to the wooden bar in front of the mirror and look at myself. I look happy. Being around her makes me happy.\n\nPaige comes to my side and I pull her in front of me.\n\n\"Hi.\" I kiss the spot behind her ear. She shivers. There is a light layer of sweat on her.\n\n\"I didn't think you would come.\"\n\n\"You call, I come.\" My lips are brushing her neck.\n\nI look at the mirror and see her gazing at me through hooded lids. \"I've called many times and you don't show.\"\n\n\"I'm feeling nice today.\"\n\n\"What's the special occasion?\"\n\nHer breathing hitches when I lick her neck. I want her, right here right now.\n\n\"Why today?\" She doesn't let it go.\n\n\"It's my birthday.\"\n\nThis seems to snap her out of it and she turns to look at me. \"Happy birthday. I wish I knew.\" She licks her lips.\n\n\"You do now.\"\n\nI want to kiss her but I don't. I only allowed myself to be with her today with the condition that I would only find comfort in her company. Kissing her here and there is innocent enough, but no more.\n\nShe pulls her phone out and swipes back and forth.\n\n\"Don't get on your phone while we're talking, it's rude.\"\n\n\"Done.\" She looks up at me and shrinks back to find me so close. I wanted to see what was on her screen and didn't realize I was leaning so close. Her eyes turn a shade darker. She clears her throat. \"I made plans for us tonight.\"\n\nI chuckle. \"It's my birthday, I just want to have a relaxing night with you.\"\n\n\"You'll like it. I promise.\"\n\n******\n\nThe wine is getting to me.\n\nDinner was amazing. The most tender sirloin I have ever tried and I didn't even get to see how much it cost. Paige stole the check and provided her card before I could even offer. I didn't care how much it cost, I wanted to treat her but she insisted. We grabbed a couple of drinks at the bar and got into some deep conversations.\n\nShe told me about her mom who died when she was also a teenager. Everyone said it was natural causes but Paige seems to think her mom had a problem with pills. She even thinks her mom ended her own life. She claimed if she felt stifled under her father's constant orders, she could only imagine how her mother felt. I comforted her and even kissed her to stop her tears.\n\nThe more time I spend with her the more I want to be here for her. I want to be a constant in her life. I want to make her smile and make her feel good. The way she volunteers information is messing with my head now. She doesn't want to be a closed book and yet I know she won't end things with him. I don't fret about it. I allow myself to enjoy tonight.\n\nOver more drinks, I shared my parent's death with her. She understood some of the pain that came from losing a parent. She also listened quietly as I talked about living with my aunt. She got me to confess about the first girl I ever fell for and it made her feel better to know this was back in high school. I found it adorable that she could get jealous about me with anyone else.\n\nAfter drinks at the bar she made me choose a number between one and three and depending on which we would either taxi or walk. I went with three and that is how we got here.\n\n\"This is supposed to be fun you know.\" I lean over and interrupt Paige's concentration.\n\nShe turns ready to glare at me but again I am too close when she looks at me.\n\nI pull back and go back to look at my painting. I can't paint for shit. My drawing looks very cartoonish compared to her. It is fun though. The unlimited wine is also a win in my book.\n\nShe goes back to her painting and her brows furrow. I see the tip of her tongue sneak out on the side of her lip. A tendency she has when she is utterly lost in whatever she is doing.\n\n\"I just want perfection.\"\n\nIn the blue dress and black heels, she decided to wear today I can tell her she is sheer perfection. With just a little more wine I know I will.\n\n\"So how long have you two been together?\" An older lady across from us leans over to ask. She is here with her husband who looks miserable.\n\nPaige opens her mouth but I speak before she does. \"We're not together. Actually, Paige here is engaged.\" It burns just to say the words.\n\n\"Oh, I'm sorry. I just thought that-.\"\n\n\"I'm ready to go.\" I grab my painting and drink the last of my wine.\n\n\"I'm sorry, my friend is just a little drunk.\"\n\n\"Friend.\" I laugh and grab her painting as well.\n\nWe wait for our ride to pick us up. It is a little chilly out. The street lights make it hard to see the stars. No moon in sight.\n\n\"You didn't have to be rude.\" She has her arms crossed and is leaning back against a brick building. There is a for lease sign on the window. This is a cute little downtown area but I probably wouldn't invest on a storefront here. No other store around is open at this time and there is no foot traffic around here. I wonder how she found this place.\n\n\"How were you going to respond?\"\n\n\"Why the sudden mood shift? I thought we were having a good time?\"\n\nI walk up to her and place the paintings against the wall by her feet. \"I was reminded that you are engaged. And even on a day like today nothing is going to change that.\"\n\nShe is frowning and I can't help but lean in and kiss her. She tastes of white wine. My hands come up to test out her underwear theory. I don't feel any lining as my fingertips move up her hips. One of my hands wraps around her waist as the other comes up and cups her breast. She moans into my mouth and I feel her nipple strain against my fingers. I will never get tired of this.\n\nHer phone rings. She pulls back and looks down at it. \"Our ride is here.\"",
        "\"I'm getting my own ride.\" I hand her painting and walk her to the car. I open the door and she turns back to look at me, unsure.\n\n\"I want to be with you tonight.\"\n\n\"You know what you have to do.\"\n\nShe bites her lip and yanks the car door closed.\n\nI grab my painting and decide to go for a long walk.\n\n******\n\nMy phone wakes me out of my deep slumber.\n\nI look at the time, who is calling in the middle of the night? I get nervous when I see the name on my screen.\n\n\"James?\"\n\n\"Taylor, I need your help.\"\n\nI sit up and rub my eyes. This isn't a dream.\n\n\"What's wrong?\"\n\n\"I can't get into Paigey's room.\" I hear him sniffle. \"We had a bad argument and I can't get through to her. I don't know who else to call. I know you guys have been getting close.\"\n\nI'm jumping out of my bed looking for some sweats and a black hoodie. Fuck, what is she doing? I find some clean socks and put on my sneakers. \"I'll be there in 30.\"\n\nThere are no lights on when I get to their place. Maybe I did dream up that whole conversation.\n\nJames comes out through the front door and I hop out.\n\nI rush up the steps and move past him to her room.\n\n\"I just need you to talk to her.\" He follows me at a slower pace. \"I'm sorry I called you. I just-\"\n\nI take two stairs at a time and practically run down the hall. There are now thoughts swarming my brain. I am running on pure adrenaline. I feel my heart in my throat and I won't be ok until I see her. I knock on the door. \"Paige, open the door.\"\n\n\"I was trying to be quiet so I didn't wake the maid.\" 'Why would you care about the fucking maid' I want to yell. But he asked me to be here so obviously he has some trust in me. I can take control of the situation when it comes to her.\n\n\"How long ago did she lock herself in here?\"\n\n\"Almost thirty minutes ago.\"\n\n\"I'm going to have to break the door open.\"\n\n\"Do what you have to.\"\n\nI briefly notice James looks frail. He doesn't look like the guy I interviewed just last month. He is worried. He is vulnerable and showing his true age. I'm sure I look like Hell too.\n\nI kick the door three times before it breaks open.\n\n\"Stay here.\" I don't think he can take it if something did happen.\n\n\"Paige!\" After doing a sweep of her room I run to the bathroom and find her there next to the toilet. I lean down to pull her up and turn her towards the bathtub. Sticking two fingers in her throat I try to gage her breathing, it's weak but it's there.\n\n\"Call the ambulance!\" I yell at James.\n\n******\n\nShe sleeps through the night and the rest of the next day.\n\nI comfort James when we first get to the hospital and then I have to ask him what happened. He's still wearing his pajamas and said Henry was on the way with some clothes for him. I'm glad he called me. I can't bear the thought of what would have happened if I didn't show up. I cringe.\n\n\"She came home last night and started talking about calling off the wedding.\"\n\nMy heart leaps.\n\nHis eyes are watching me closely. He knows why.\n\n\"I told her she was getting cold feet which is normal when the wedding is so close. Not many people know this but Henry has wanted to marry her from the very beginning. She was the one who asked to put it off until after she graduated.\"\n\nI don't say anything. Guilt is ripping at my throat. I should have just told her I would stay with her. I pushed her to do this.\n\n\"It's my fault.\" I rub my forehead. \"I gave her an ultimatum.\"\n\n\"Your name did come up.\"\n\nWe are silent for a while and I cross my arms. \"I love her.\" I simply state.\n\n\"You can't.\"\n\nMy eyes snap to him. I expect to see the same defiant gleam I've seen in his daughter's eye but he looks too tired to fight me on it.\n\n\"If tonight is any indication of what your daughter wants you will listen to her.\"\n\nHis cheeks finally get some color. \"She made a promise to him-\"\n\n\"She doesn't want him.\" Our whispers are getting louder and I put my hands up. \"I just know I'm not leaving her side after tonight. She will have to tell me herself she doesn't want me in her life if I ever turn my back on her.\"\n\nFor someone used to so much power and having to throw money to make things happen he looks lost. I place my hand over his and give him some final advice.\n\n\"She told me about her mother. If you don't want the same ending for your daughter you will have to respect her wishes.\"\n\n******\n\nWhen she finally wakes, she asks to see me. It's the middle of the night and visiting hours are done but James had her placed in the most expensive room in the hospital, they don't say anything when I follow the nurse to her room.\n\nShe's sitting up on the bed. Her skin is pale. She has an NC in her nostrils and a needle in the back of her hand. Her eyes are bleak. She looks nervous to see me.\n\n\"Taylor,\" She leans into my touch when I kiss her temple. I make a move to sit next to the bed on the wooden chair. She grabs my hand and scoots over to make room for me.\n\nI breathe a sigh of relief when I finally wrap my arms around her. \"Paige, why?\" My voice is tired.\n\nShe is quiet at first. \"He was going to make me do it. No matter what I said he found a reason as to why I should still marry. And I knew you wouldn't want me if-\"\n\nI kiss her temple when she starts to cry silently.\n\n\"I love you. How can you not see that? I will always want you.\"\n\n\"I want to be yours only. I want you.\"\n\n\"Shh.\" I rub my hand down her arm and rest my chin on her head. \"You should have called me.\" I say after a while. \"You shouldn't have done that Paige. That was very stupid.\" Even in my arms, my anxiety is through the roof. I could have really lost her.\n\n\"I know. I tried to take it back and throw it up but I was too late.\"\n\n\"It wasn't too late you're here. We're just going to make sure we get you some help so it doesn't happen again.\"\n\nShe nods and sighs. Her body relaxes against mine. Her breathing doesn't slow so I know she's awake.\n\n\"Have you been here this whole time?\"\n\n\"Yeah.\" I don't tell her I called off work or even that Henry was here earlier but after his conversation with James he left. I could see the anger in his eyes and his resentment towards me but he didn't want to cause a scene. Even if he didn't know why Paige called off the wedding, he knew I couldn't be trusted. I felt bad for James who would have to deal with this later.\n\n\"I don't even know what I'm going to do.\"\n\nI kiss her temple again. \"Well I was thinking you could come home with me for a couple of days, if you want.\"\n\nShe squeezes me tighter. \"Yes.\"\n\nI feel my eyes closing and know I have to rest for just a minute. Before I completely succumb to the darkness, I hear Paige's voice.\n\n\"I love you too.\"\n\n******\n\nThe first day at my place is calm.\n\nJames helps us carry some groceries and Paige's duffle bag with her things in them. While she is in the restroom, he pulls out his wallet. \"I know I can count on your discretion for everything that has occurred with Paige.\" He pulls out a couple of bills.\n\n\"I don't need your money James.\"\n\nHe looks around my apartment and I can tell her wants to take her back. \"You guys can stay at my place you know.\" The dark circles under his eyes are pronounced. He doesn't know how to handle not getting his way.\n\n\"She wants to be here. You can come whenever. And it is only until she feels okay to come back home.\"\n\n\"I feel helpless. I'm her father for God's sake!\" He's almost yelling.\n\n\"You're doing the right thing, daddy.\" Paige walks over to him and pulls him into a hug. We didn't realize she was back in the room. \"You're giving me what I want.\"\n\nHe grumbles and places some bills on my counter. \"For more groceries or whatever you guys need.\"\n\nOnce he's gone, I walk Paige to the bathroom and run her a warm bath. I wash her hair and scrub her body. She constantly sighs and her body follows my eager touch. I try to be as reserved as I can but anytime I am around her I just want her.\n\nI rub a towel through her body and scrub her dry. I dig through her bag for pajamas but she says she wants to stay naked. Tucking her into bed I finally kiss her. I haven't done so since the night of my birthday.\n\n\"Do you need anything else?\"\n\nShe shakes her head. I run a finger down her cheek and kiss her one more time.\n\nShe's asleep by the time I am done replying to emails on my laptop. I feel completely at ease knowing she is here. I can breathe better, focus on my task at hand, and all I have to do is reach out to touch her.\n\nThe rest of the week I continue to work from home.\n\nWe take short walks around the block to wear her out. She is restless without going to ballet practice but we both agreed she had to wait a little longer before going back. The doctors gave us some helpful brochures for therapists in our area. Once Paige decided on which one, she wanted to go to she set the first appointment.\n\nJames comes over every day for at least an hour to spend time with her. I always leave to give them privacy and I never ask Paige what they talked about.\n\nWe watch movies or T.V. shows at night before we go to bed.\n\nThe next week follows the same routine except she has her first therapist appointment on Tuesday. She seems better after going and I am glad to see some of my old Paige back. I look forward to our talks once we're in bed and she lets me ask her anything I want. She asks me some questions too but I always want to know more about her.\n\nBy the third week I have to go back into the office and ask her if she would be ok alone. She rolls her eyes and says I have to stop treating her like a baby. James comes by with more clothes which indicates she plans on staying longer. We hadn't talked about how much longer she intends to stay and I'm going to complain. If it is up to me she will just move in.\n\nBy the end of the third week I could tell something else is bothering her. She is more irksome when I get home from work and I tried keeping talking to a minimum to avoid any arguments. Her body is restless and she can't stop fidgeting.\n\nFriday night and Renee calls me. She doesn't know anything that happened with Paige and I don't tell her.\n\n\"Aren't you going to answer that?\" Paige's tone says it all, she is not happy.\n\nWe're sitting on the couch watching some sitcom I'm on one end and she's on the other. Her legs are pulled into her chest and she's glaring at my phone.\n\n\"It's just Renee, she probably wants to grab drinks. She doesn't know anything happened.\"\n\n\"Well I'm sorry I had to ruin your plans.\"\n\n\"Stop it.\" I turn my phone off.\n\n\"Just go out and grab a drink with her. I know you want to.\" She stands from the couch and walks to the bed. I stand to follow her and make her face me.\n\n\"What's wrong?\" I'm running out of patience with her. I don't feel like going out. I want to stay in and be around her. Why is she upset?\n\n\"I just know you wouldn't be home all the time if I wasn't here.\"\n\n\"But I want to be here with you.\" My hands are on her arms and her eyes are sinking into mine. \"Do you want to go home?\" I'm nervous to ask. If she does, there is nothing I can do about that. I won't control her life the way her father has.\n\n\"No.\"\n\n\"Then what is it?\" Being this close to her is dangerous. All she's wearing is a pink pajama matching tank top and shorts. I've been so good at keeping this platonic and I don't want to ruin it so soon. I want to make sure she feels comfortable here and if I took her every time I wanted she would go running for the hills.\n\n\"You don't touch me anymore.\" She avoids my eyes and her cheeks turn dark.\n\nI'm stunned into silence. This can't be it. \"I want to make sure you're fine.\"\n\nShe huffs and tries to pull out of my grasp. \"I am fine! You don't need to handle me with special gloves waiting on me like a ticking time bomb.\"\n\n\"Paige.\" I'm trying to reign in my hunger and anger. I don't know which one is winning at the moment but I just know I have to give us some space before this escalates.\n\n\"Don't you want me anymore?\" The question alone makes me break.\n\nI kiss her deeply and show her how much I want her. She moans into my mouth and digs her hands into my hair. I snake my tongue into her mouth and we moan in unison. I've missed this so much. My body is humming and I am barely in control at the moment.\n\n\"Take me.\"\n\nI groan against her lips. \"Too soon.\"\n\n\"Taylor, make me yours.\"\n\nI finally concede and nod. I kiss her with more patience and let my hands roam all over her body. It will be the first time we're making love since she called off the wedding. I will take it slow. Make her feel special. Her hands grab the front of my shirt and she pulls me closer to her.\n\n\"Tell me what to do.\" She whispers in my ear. I snap again and let my body take over. She knows just what to say to make me bend over backwards for her.\n\nI toss her onto the bed and make her reach up on the bed frame. \"Hold on to these bars and don't let go. If you do...\" I let the threat hand over us.\n\nShe nods eagerly and presses her lips together.\n\nI rip her tank top open to expose her puffy nipples. My mouth waters and I don't deny myself any longer. My tongue comes out and I see her excitement. I lick and blow until her nipple hardens. She thrashes her head and I squeeze her hip.\n\n\"Look at me, Paige.\"\n\nI take her other nipple in my mouth and suck on it. Her eyes watch me in wonderment. I feel her body tremble with want. I allow my teeth to graze her soft skin and she sucks in a breath. Alternating between licking, nibbling, and pinching her nipples I watch as her eyes roll back and she moans out loud. Her body shakes and I watch her orgasm under my touch. It has been too long. My ego swells. The first time we met this went in a completely different direction.\n\nI wait until she is coming down from her high before speaking. \"Did I say you can cum, Paige?\"\n\nHer eyes pop open and she stares at me at a loss for words.\n\nI lightly slap her breast and she moans. \"Answer me, baby.\"\n\n\"No.\" She breathes out.\n\n\"Consider yourself warned.\"\n\nI knead her breasts until she is panting again. The rose in her cheeks start to match the color on her tender breasts. I love the color.\n\n\"Please,\" She is finding it hard to keep still.\n\nInstead of prolonging it I give in and take her shorts off. Her sweet pussy is eagerly waiting for me to kiss it. I get down on my belly and place a pillow under her hips. I admire the view for a little too long and she whimpers.\n\n\"So impatient, baby.\" I click my tongue. \"Who is the one in charge?\" I tease her.\n\n\"You.\" Her voice is breathless.\n\nNo, you I want to correct her. Always you.\n\nI run my finger from her pubic bone into her wet pussy. She thrusts up. My other hand comes up to push her down. I am going to have a ball getting her to submit completely. Teaching her to control her body when it is under my touch. The best part is we have all the time we need.\n\n\"Now remember, don't cum until I tell you to.\"\n\n\"Oh, fuck.\" She moans when I pump two fingers in her pussy. She coats my fingers perfectly. I can't hold off any longer. I dig in and let my tongue taste her intoxicating nectar.\n\nHer hips buck off the pillow and I know she is close. I tease her with my tongue, flattening it against her clit. My body responds to her shallow breaths and I feel myself close. Just the sight of her makes me wet. Will she listen to me and wait or is she going to do as she pleases? I secretly hope she lets herself go and then I can punish her the way I want but I will be equally turned on if she does as I say.\n\nHer head thrusts from side to side and she tries to move away from my fingers pumping into her right cunt. My mouth latches on to her swollen clit.\n\n\"Taylor, please.\" She sounds so delectable.\n\nI continue to assault her wet pussy pushing her to the edge.\n\n\"Please! Oh, nooo.\" She tries to hold off but can't. With one final swipe of my tongue she is submerged into a second orgasm causing her to scream and thrust her hips in my face. I let her ride me out until her hands finally let go of the railing over her head and she lightly pushes my face away from her tender clit.\n\n\"No more. Please.\" She's almost sobbing.\n\nI crawl up and kiss her deeply, giving her a taste of herself.\n\n\"You came when I told you to wait for my order.\" She slowly opens her eyes and kisses me. \"You let go of the bed frame before I told you to. Are you ever going to do as you're told?\" My eyes are playful.\n\n\"You love me like this.\" Her eyes are tender. She knows she has me wrapped around her finger.\n\n\"I do.\" There is no use in denying it.\n\n\"And I love you the way you are.\"\n\nMy heart swells and I kiss her deeply. It's the first time we've been able to declare our love to each other in the comfort of our home. I love her so much. And she is mine. I am so fucking lucky.\n\n\"You know this means I'm never letting you go right?\" This is me giving her an out.\n\n\"I know. I'm all yours.\"\n\n\"Mine.\" I sigh against her lips and chuckle. \"And I'm yours.\"\n\nHer eyes shine and I can see she wasn't expecting that. \"Mine.\" She tries it out and smiles.\n\n\"That still doesn't mean you're getting out of this punishment, baby.\" I know I'll go easy on her. We'll start off slow. I'll have fun punishing her when she doesn't listen and she'll enjoy it too. But she'll learn that when she does play nice and does as I say she will get even better rewards. What I do know for certain is that for the rest of my life I'll let her get away with anything she wants as long as she is mine.\n\n \n"
    ],
    "authorname": "SkylerLuv",
    "tags": [
        "affair",
        "cheating",
        "drama",
        "first time lesbian",
        "girl on girl",
        "lesbian love",
        "lesbian oral",
        "lesbian seduction",
        "orgasm",
        "submissive"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/mine-82"
}