{
    "title": "Damn Dress: A Love Story Ch. 08",
    "pages": [
        "\"Sienna?\" she heard Darren say behind her. She wiped her mouth and stood up. \n\n\"Yes, oh, I'm okay. Funny, they call it morning sickness, even though it lasts all day sometimes,\" she said, with a weak laugh, which then faded into more tears. \n\n\"Come on, I'll take you to your dad's,\" Darren replied, as he wrapped his arm around her shoulders and led her to his car. \n\n\"No, I need to speak with Brandon,\" she whispered while buckling herself in. \n\n\"Sienna, I don't think that's a good idea tonight. He's really fucked up. I mean, I know he won't do anything, but he might start saying some more shit that his ass is going to regret.\" \n\n\"I can handle myself,\" she declared with shaky confidence, as she stared out of the window. \n\nDarren figured that was the end of the conversation. He exhaled as he pulled out and headed to Brandon's house against his better judgment. \n\nWhen they arrived at the house, Brandon's Jeep wasn't parked in the driveway. Sienna felt her heart deflate. She had been hoping he would have come back by now. She slowly exited the vehicle and turned to look at Darren. \n\n\"Do you want me to wait with you until he comes?\" Darren asked. \n\nShe looked down the street and then back inside Darren's car. \"No, I think that would just make everything worse.\" \n\n\"Yeah, you're right. Well, call Lori or me if you need to leave, okay? I'll be here in a heartbeat.\" \n\n\"Thank you, Darren,\" Sienna said and then turned to walk up the steps and sit down. \n\nDarren stared at her for a few moments, then shook his head and reluctantly drove off. He really didn't want to leave her there by herself, but figured his being there with her when Brandon returned, wouldn't be the best thing. Brandon knew Darren would never ever touch Sienna outside of a brotherly way, but when someone's been knee-walking drunk like Brandon, logic and reasoning sometimes fades away. \n\nSienna felt her stomach growl, but she really didn't feel like eating. She was miserable, and the thought that she had wounded Brandon the way she had made both her head and her heart ache. She just wanted things to go back to the way they were last week, before her lie surfaced. She sat there gazing out into the front yard, growing more wary by the minute. \n\n**********************\n\nBrandon didn't know where the fuck he was going. His mind wouldn't let him focus. His heart hurt and every muscle in his body seemed tense. Had she really planned on not telling him if she was going to get an abortion? He still thought it was some sick joke. He couldn't fathom that she would do that to him. \n\nIt was now 3:45 in the morning, and his body was rapidly starting to give out. He was beyond frazzled. He couldn't believe this day. And most of all he wanted to kick Chris's sorry ass. In his opinion, that fucker caused all of this! \n\nWhen his brain could no longer function with simple tasks like accelerate and brake, he knew it was time to go home and hit the sack. He finally turned his Jeep around. He was praying that Sienna had gone to Lori's or her dad's house, because he couldn't deal with her right now. He knew he'd never physically attack her, but he was afraid of what he would say to her. He seemed to always say too much, and Sienna didn't say enough. \n\nBrandon knew he was fucking ripped out of his mind. Why did she always cause him to try to drown his sorrows? He had not done that since he lived in Boston and hated his very existence, and even then, he had been a teenager. But now he'd gotten shit-faced two times in the past two months over her! \n\nWhen he pulled up to his house he saw her sitting on the steps. Shit. He wasn't prepared for round two just yet. \n\nSienna's heart leapt when she saw him drive up. When he parked, she could see him through the windshield. She noticed him lean his head back on the headrest and wipe his hand down his face. She then saw him pull out his pack of cigarettes, the one he kept under the sun visor. She saw him open it and tap one cigarette out, then put it between his lips. He didn't light it, but instead just stared back at her. Then he jerked the cigarette out of his mouth and placed it back in the package. \n\n'Might as well get it over with,' Brandon thought to himself. He finally got out and walked up the steps past her without saying a word. He turned on the lights and placed his keys on top of the TV. Sienna followed him in and stood by the door. If he could just make it to the bed now, and pass out, he'd be fine. But then she began talking. Fuck.\n\n\"Brandon...I know you don't want to talk to me right now, and I understand that, but I just want you to know I never said I was actually getting an abortion. I just said if I did I\u2014I um, I hadn't planned on telling you.\" \n\nBrandon continued to ignore her presence. He needed some fucking Tylenol and a good night's sleep. He just didn't want to deal with this shit right now.\n\n\"I'm so sorry, if--\" \n\nBrandon cut her off. \"I don't want your fucking apology right now, okay?\" he said, as he made his way to the bedroom. God, she was making his head swim. \n\nSienna needed him to see her point of view. She needed him to understand her reasoning. She didn't want him to think she was a cold-hearted monster. She knew she shouldn't have pushed him, but she couldn't help herself. She followed him to the back and cornered him in the bedroom. \n\nBrandon had removed his shirt and was in the process of turning the sheets down when she entered. He felt her eyes on him and finally decided to look up. She stood there with her bottom lip tucked gently between her teeth. Her eyes were wide and unsure, but also seemed very weak looking. He hated this. He hated this feeling in the pit of his stomach. He just wanted to forget that yesterday\u2014today---fuck, he couldn't even keep up with the days. But regardless, he just wanted this to be over. \n\n\"Do you want me to leave?\" she asked. \n\nNo. Of course he didn't. But he couldn't verbalize that to her. A part of him still wanted her to hurt for hurting him. \"Do whatever the fuck you want,\" he quickly replied as he sat on the edge of the bed about to remove his shoes. Brandon was quickly unraveling. He didn't feel well, and just being around her was making it worse. Why couldn't she just leave him the fuck alone for a few hours? Let him chill out and then they could have a normal conversation when he wasn't so fucked up. \n\n\"Brandon, talk to me!\" she cried to him.\n\nWithout another word, he stood up from the bed and searched for his shirt. He had to get the fuck out of here. He couldn't stand to see her hurting, but fuck if he could offer her any relief feeling the way he did. \n\nSienna started to panic when she saw him getting dressed again. As he made his way over to her to leave the bedroom, she blocked him. She put her hands on his chest and looked up at him. \"No, don't leave. I need to talk to you about this!\" she yelled, as the tears began to brim over the edge of her eyelids.\n\nBrandon could barely stand to see her like that, but he was losing it fast. \"Fuck, you want to do this now, huh? Right fucking now? Fine, let's talk about it. It's not the fact that you were thinking about abortion that hurts me, although trust me, that does. It's the fact that you were never going to fucking tell me I had a kid. That's it! I can't believe you would do that to me!\" he hollered out of frustration due to hurt, alcohol and lack of sleep. \n\nShe stood there crying and blocking the door. She wouldn't budge.\n\n\"Sienna, move,\" was all he said to her while looking over her head. He was barely holding on. He was so close to giving into his feelings and just accepting her apology, but that would be too easy. To make up and forget that any of this had happened seemed so tempting, but pride was a bitch sometimes. \n\n\"No!\" \n\nThat was it. The last thin strand of his sanity broke. \n\n\"Do you understand that I don't have anything to say to your right now? Do you fucking get that?! You broke my fucking heart, can you not understand that?! And I can't deal with this bullshit right now so PLEASE...just leave me the hell alone for a few minutes!!\" he screamed, as he picked her up and removed her from the door frame. \n\nSienna grabbed a hold of his shirt to keep him from leaving but he pried her hands from it and pulled away. By this point, Sienna was crying so hard, she could barely catch her breath and yell his name. God, she felt so weak. So pathetic. But she would gladly sacrifice any pride she had if it meant he would stay. \n\nBrandon quickly made his way down the hall and grabbed his keys. He heard her yelling his name, begging him to stay, but he didn't turn around. He wanted to so badly. To just turn around, pick her up and carry her into the bedroom and forget their problems. But too much had happened. Too much had been said. He had to get out of there. Now. He couldn't stand to watch her cry. To know that he was hurting her. He felt like an ass, but he knew if he stayed, it might escalate and become worse. She may not have felt it, but he was doing them both a favor. \n\nSienna wilted in the hallway, tears streaming down her face as she heard his Jeep roar out of the driveway. Again. She felt like her heart was breaking into a million little pieces. Her head was pounding and her stomach was cramping. She slowly walked to the bed and fell down face first. She felt like she couldn't breathe. God, why hadn't she just told him? She squeezed her eyes tightly shut. She laid there praying she could go to sleep and forget this day ever happened. But the sickening feeling in her stomach would not give her any peace. \n\nWhen sleep had failed her and she felt her body had no more tears to produce, she decided to get up and shower. Perhaps that would make her feel better. At first the hot stream of water felt good against her skin, but a few minutes later, she felt like her insides were tying into knots. Soon she was bending over and vomiting in the shower. She leaned against the shower door, and her stomach heaved again. She couldn't remember the last time she had eaten, so she wasn't even sure how her body was able to generate anything for her to throw up. \n\nShe finally gained enough energy to remove herself from the shower door and step out. She quickly changed into her nightgown and sat on the couch. She felt so horrible. She couldn't even think straight. Suddenly her stomach convulsed again and she made it to the sink just in time. \n\nSomething wasn't right. She had felt bad before, but this was much different. It started scaring her. She knew he didn't want to talk to her, but she decided to call him anyway. \n\n\"Brandon,\" she said weakly, leaving him a voice message, \"I don't feel well, I think I need to go to the hospital because...\" she dropped the cell phone. \n\nEverything on her body was weak and her stomach was killing her. She slowly reached down to pick up the phone when she heard his voicemail cut off. She felt wetness seeping between her legs, and she reached down to touch it. Blood. She immediately became frantic. She needed air. She needed to call 911. She slowly made it outdoors with her cell phone and began descending the steps when she noticed the driveway moving back and forth. She also noticed the trees swaying from side to side. She then felt her body shifting and then darkness. \n\n********************** \n\n\"Mmm, damn, boy,\" Lori breathed into Derek's ear as he continued to roughly kiss her neck. \n\nShe was in the back seat of his car. 'A Mercedes,' she thought to herself. She had never fucked a guy in the back of a Mercedes, but she damn sure was going to give it a try. Derek pulled her shirt up and then reached around to undo her bra. \n\nLori was glad she had Derek to take her mind off of her own guilt. She never dreamed Chris would confront BT like that. What, did he have a fucking death wish or something? She felt like she had caused all of this. She hoped Sienna and BT would make up and get over their problems. She felt bad leaving Sienna in the middle of all of this, but she was leaving for school. In two days, she'd be halfway across the country. \n\nDerek's tongue was working magic on her left nipple. His hand quickly made its way down to her warm pussy and jerked her panties aside. She couldn't wait to feel his smooth fingers sliding inside her\u2014and then perhaps something a little larger. \n\nShe was about to whisper naughty things in his ear, when she felt her phone vibrate. \"Fuck!\" It was probably her parents. They really needed to lighten up. She was an adult now and heading off to school soon, so they needed to quit with this curfew shit. \n\nShe managed to pull her phone out of her purse, push Derek back and put a finger to her mouth to signal him to be quiet. \n\n\"Yes, mom,\" Lori said, rolling her eyes. \n\n\"Um, Miss Lori Walker?\" the female voice asked. \n\n\"Oh...who's this?\" \n\n\"Hi, my name is Carole and I'm calling regarding your friend, Sienna R. Branson. I'm assuming you're familiar with her?\" \n\nLori sat up in the car and opened the door. \"Yes, who's this? Is something wrong?\" \n\n\"Well, Miss Walker, in Sienna's medical records, she had listed you as her main contact if something happened to her. She was rushed into our hospital, St. Michael's, a few minutes ago, and I just wanted to notify you.\" \n\n\"What?! Is she okay?\" Lori screamed, already starting to panic. \n\n\"I'm not sure Miss Walker, the doctor is with her now. Do you know where we are located?\" \n\n\"Yeah, yes\u2014um, oh God. I'll be right there,\" Lori stuttered and then shut her phone. Tears immediately sprang to the surface and cascaded down her cheeks. She didn't even know what was wrong, but to know that Sienna was sick or hurt and no one was with her, was more than Lori could bear. \n\n\"Derek, take me to St. Michael's hospital!\" she exclaimed, hopping out of the backseat of the car and into the front passenger side while pulling her clothes back on. \n\nDerek didn't know what the hell was going on, but he obeyed. \n\nOn the car ride over to the hospital, Lori called several people. First, she tried Brandon. But he wasn't picking up the phone. She then tried Commander Branson and explained to him the situation. She could hear the panic in his voice, but he tried to remain calm. He quickly hung up with her to get into his car. She also called Darren. He picked up and after she explained what happened, he said he'd meet them there. \n\nLori could barely wait for Derek to pull to a complete stop before she jumped out of the car and sprinted into the emergency room. \n\nShe ran up to the front desk. \"I'm here to see Sienna Branson.\" \n\nThe receptionist took her precious time looking up Sienna's name in their database. \"Okay, there she is. They've taken her upstairs to the maternity ward now. That's on the 6th floor. Take that\u2014,\" Lori didn't wait for that slow bitch to finish her sentence before she jetted toward the elevator. \n\nUpstairs, Lori was directed to Sienna's room. She opened the door and found Sienna asleep. She had an IV hooked into her arm and a monitor by the side of her bed that kept beeping. Lori assumed that had something to do with her heart. She also had breathing tubes in her nose, and just that sight made Lori's tears flow again. She sat down in the chair and just stared over at her friend. Her sister in crime. She silently prayed she would be okay. \n\nLori had only sat for a few moments before she heard Commander Branson's voice. He had a deep booming voice as she heard him fire off a bunch of questions regarding Sienna. He opened the door and immediately walked over to her. He rubbed her head and glanced over at the monitor. The doctor had entered with him followed by Chris. \n\n\"Let's talk in the hallway. It's very important that she gets some rest now,\" the doctor told them. \n\nJackson nodded and they all followed the doctor out. \n\n\"So, what caused this?\" Jackson asked calmly, although his stomach was in his throat and his heart was still pulsing a hundred miles a minute. \n\n\"Well, I'm still running a few tests, but I believe it was caused by raised levels of Cortisol. It's our stress hormone, and it's not really a good thing for women expecting. Especially in their first trimester. Right now, she's just really tired. Apparently a neighbor who had been walking his dog, saw her passed out on the ground outside of her home, and immediately called the ambulance--\" \n\nLori gasped and started crying even harder. Jackson grabbed her around the shoulders as the doctor finished explaining Sienna's condition. \n\n\"\u2014but right now, since her body has released very high levels of the hormone, we're just trying to bring those down right now. Her regular physician is Dr. Carlson, and he's already been notified. But, as soon as I have more data to extract from, I'll let you guys know.\" \n\nJackson noticed Darren lingering in the background on his cell phone. He figured with Lori and Darren both here, something was amiss with Brandon. \n\n\"What about the baby, will it be okay?\" Jackson asked, turning his attention back to the doctor. \n\n\"Honestly, I won't know for sure until we do a few more tests. The first trimester is a tough one, and something like this could cause a miscarriage. It's much more likely now then it will be further down the road. But for right now, the most important thing for her and the baby is rest and NO major stress. I can't encourage that enough.\" \n\nJackson shook the doctor's hand, thanked him and went back into Sienna's room and closed the door. \n\nDarren walked over to Lori and Chris and leaned against the wall. \n\n\"She okay?\" he asked. \n\n\"They're still running tests, but at least they don't have her in ER,\" Lori answered, wiping at her nose. \"I called BT, but he's not picking up. What happened? What's going on?\" \n\nDarren stood staring out down the hall as he spoke. \"They had a fight earlier this morning outside of the bar. I don't know anything after that. I took her over to his house, but he wasn't there when I left.\" \n\nChris scoffed. He hadn't meant to do it so loudly, but he couldn't help himself. He was livid! Brandon was an asshole. He couldn't believe that he wasn't here with her. But on the other hand, Chris wondered if his slip up about her pregnancy yesterday caused her to stress out. That thought was killing him. \n\nDarren turned sharply in Chris's direction. \"Do you have something to say?\" he asked harshly. \n\nChris glared at Darren and then turned and walked back into Sienna's room. He didn't understand why Darren was always defending that jerk. He had better not show up here a day late and a dollar short. Brandon didn't deserve someone as special as Sienna. He needed to take his psychotic, punk ass back to Boston as far as Chris was concerned. \n\nWhen Chris walked in, he saw the Commander leaning over Sienna. She was awake, but she looked so fragile. He wished they would remove those fucking tubes out of her nose. \n\nShe slowly turned her head in his direction. Chris immediately wanted to retreat. He was sure he was the last person she wanted to see. But instead of an evil glare, she surprised him, and gave him a small smile. Chris's heart fluttered. Oh, he loved this girl. \n\nHe walked over to her bed. \"Don't worry, we'll get you back on your feet in no time,\" he said, while grabbing her hand and lightly squeezing it. \n\nDarren pulled out his cell phone again and walked down the hall, out of Lori's earshot. \"BT, this is so fucked up, man. So fucked up!! You are going to regret this shit, dude. Seriously, pick up your fucking phone and get your ass here!\" he said, and clicked the phone shut. \n\n********************* \n\nBrandon had turned his phone off after the first call from Sienna. He knew what she wanted, but he still wasn't ready to 'really' talk about it. And he also didn't want to hear Darren's 'you're overreacting' speech. He couldn't take that either. They just didn't understand how he felt at the moment. To hear those words leave her lips... 'If I got the abortion, no, I wasn't going to tell you'...he swore he didn't hear anything else past that. He felt his whole life changing with that simple declaration. In his mind, it translated to she didn't care enough about him. In his mind, she was saying he didn't matter that much. In his mind, he had become the poor troubled kid again who rich girls got off on sleeping with, but who didn't really give a shit about him.  ",
        "He knew she wasn't like them, but God he couldn't help but to think it the moment those words tumbled from her mouth. Fuck, he needed to get his shit together. He couldn't come undone like this every time he and Sienna argued. But she had this powerful effect on him that left him cut open and wounded by her actions...or lack thereof. Brandon realized in their relationship, he felt extreme highs and extreme lows. There seemed to be no in between. No middle ground. With their love, it was all or nothing. When it was good...oh, it was sooooo good. But when it was bad, it was soul destroying. He wanted to turn back around, but he felt he would be the biggest pussy if he did. And for her to know that she had him completely sprung, was too much for him. He wasn't ready to relinquish that power to her. Not yet. \n\nHe had decided to head back to the bar. He was ready for another round of drinks. He wanted to get so fucked up and drown out every single negative thought. He realized that wasn't the mature or healthy way to handle his problems, but fuck if he had a better idea. \n\nWhen he reached the bar, it was closed. Fuck! He sat there in his Jeep staring at the place. Maybe he could crash at Darren's tonight. He started making his way over there. \n\nFinally, after a few more minutes, he decided to turn his cell phone back on to call Darren about crashing at his place. When he did, he noticed that there were 12 missed phone calls. One from Sienna, two from Lori, two from the Commander and seven from Darren. What the fuck? Before he could listen to them, his phone started vibrating again. It was Darren, so he opened it up. \n\n\"Darren, I don't feel like dealing with this shit--\" \n\n\"Sienna's in the hospital,\" he heard Darren say. \n\nBrandon felt like his heart had stopped and his skin went cold. What?! \n\n\"What?!\" he repeated aloud into the phone. \n\n\"She passed out over at your place and we're at St. Michaels now, 6th floor. We've all been trying to call you,\" Darren said, clearly agitated. \n\nBrandon sat there dumbfounded. This couldn't be happening. No way this is happening. He clicked the phone off. He couldn't hear anymore. He was going to be sick. He slammed his Jeep into gear and sped down the street. Everything was a blur for him at this moment. He couldn't think straight. \n\nWhen he arrived at the hospital, he parked in a no parking zone and jumped out. He darted to the elevators cursing the doors for taking so long to shut. The ride up seemed like it lasted an hour, and all the while, Brandon knew God was punishing him. \n\nWhen he got off on the 6th floor he turned to the left and then right trying to locate someone to direct him in the right place. He saw Darren leaning up against the wall with his head down. He felt sick. He walked over to Darren. \n\n\"Where is she?\" he whispered, already looking at the closed door beside Darren. \n\nDarren was just about to tell him when the Commander and Chris came out of the room and quickly shut the door back. That shook Brandon for a moment. Seeing Chris leaving her room before he even was able to see her. He ignored the burning in his scalp and was about to walk past them and enter when Jackson stopped him by placing his hand on his shoulder. \n\n\"Brandon, she's resting right now, and she doesn't need any stress, okay?\" he said lightly to the tense young man. \n\nNo, they didn't understand. He HAD to see her. \"Please sir, I just want to see her. Please, I won't stress her out!\" Brandon pleaded. \n\n\"Brandon, no. She needs her rest. You can see her later. She's okay right now, but I can't let you in there just yet. Alright?\" \n\n\"Commander, I promise, PLEASE, I won't bother her. I just want to see her, I won't say anything, please!\" Brandon felt his entire body trembling. He was becoming short of breath. \n\nJackson exhaled, \"Brandon, let's all just go sit in the waiting room and let her sleep. When she wakes up and the doctor says it's okay, you can go in, okay?\" \n\nPart of Brandon wanted to barrel past the Commander and enter the room anyway, but the other more responsible part wanted her to be okay above and beyond what he wanted. So, he conceded and followed the Commander to the waiting room. \n\nThey were all sitting in the small maternity waiting room. Luckily they were the only group in there. Darren glanced around the room taking in the sad/tense atmosphere. Commander Branson sat back in his chair, in deep thought. Lori had almost cried herself to sleep, and was now desperately trying not to nod off. Chris was sitting beside Lori, opposite of Brandon and leering at him. And Brandon, he was a wreck. He had his hands pushed through his hair, with his elbows resting on his legs. His right leg was tapping up and down rapidly. God, Darren felt sorry for him. \n\nBrandon was silently freaking out. He was half praying, half begging for her to be okay. He was trying to run the last night and this morning's events over in his head through his drunken haze. Nothing like your heart being ripped out to sober you up. He felt so useless. He still didn't know what the hell had happened, but he had been too shaken up to even think to ask that logical question \n\nNo one had said a word since they entered the room. Darren stared back over at Chris. He noticed that the kid kept giving the impression that he was going to say something, but then he'd close his mouth. 'That's right, he better keep his mouth closed in this situation,' Darren thought. \n\nBut instead of Chris, it was Lori who spoke first. \n\n\"Brandon?\" \n\nBrandon looked up to find Lori and Chris staring at him. \"Yeah,\" he croaked out weakly. \n\n\"Did you two have an argument or something? Why was she there so late by herself?\" Lori asked. \n\nComing from anyone else, Brandon would have lost his shit right then. His body was tightly wound and he was just looking for an excuse to put all of his anger and frustration and sadness on someone else. But he knew Lori meant no harm by it. She really did want to know what happened. \n\n\"I\u2014we got into an argument, and I said some things I shouldn't have and then left,\" Brandon whispered, looking down toward the floor. \n\nChris scoffed again and Brandon's head shot toward him. Chris noticed \n\nBrandon's eyes narrow. \n\n\"Typical,\" Chris said under his breath. \n\n\"What?\" Brandon asked, leaning toward the edge of the couch. \n\nAt first Chris looked away from Brandon, but he was itching to disclose what he felt everyone else was thinking. That's it, he was getting this off of his chest once and for all. \n\n\"Okay, you know what, I will say it. You shouldn't have left her there by herself. Especially not in her fragile condition. Stress...that's what has her laying in there with tubes in her nose barely conscious--\" \n\n\"Chris, stop right now,\" Jackson warned. But Chris ignored him. He felt fire in his veins at that moment, and Brandon was going to fucking listen to him! \n\n\"--and that stress is because of you! She's lying in there sick and hurting because of you! And the baby...may not even live...because-of-YOU!\" Chris yelled out. \n\nEveryone in the room went silent. The only noise was a phone ringing in the distance. Darren's eyes widened and Lori was staring wildly at Chris with her mouth open. \n\nChris gulped and glanced around the room. He was expecting the others to join in with him, but everyone was looking at him like he was crazy. \n\nDarren noticed Brandon's foot stopped tapping and he went completely still. Shit. Darren recognized that sign and it wasn't good. Of all the fucking times for this dumb kid to open his mouth... \n\nA second later, Lori jumped out of the way and screamed when Brandon launched for Chris and grabbed his throat, slamming him down on the couch. \n\n\"WHAT THE FUCK DID YOU JUST SAY TO ME?!!\" Brandon screamed at Chris while he tried to squeeze his hand around his throat. Darren was there in an instant pulling Brandon back. \n\nJackson jumped up and grabbed Brandon also, trying to remove his body off of Chris, but Brandon wasn't letting go. \n\n\"Brandon! Let go of him, now!\" Jackson barked out. \n\nBrandon was still yelling at him even after they unclamped his vice grip from Chris's neck. \"SAY ONE MORE THING TO ME, MOTHERFUCKER!! One more FUCKING word!!\" Brandon shouted in the distance as the Commander and Darren half carried, half drug him out of the waiting room and down the hall to the closest bathroom. \n\nChris quickly sat up from the couch, rubbing his neck and gasping for air. He couldn't believe that just happened. For a brief moment, he had thought he was going to die. \n\nHe glanced over to Lori with wide eyes. She was staring at him with her eyes narrowed. \"You know, you have the most unbelievably dumb fucking timing of anyone I've ever met,\" she said to him, and then walked out of the waiting room. \n\nIn the bathroom, Brandon leaned over the sink, clutching it for support. He felt as though his entire body was in flames. He needed to see her. Speak to her and tell her that he was so fucking sorry for everything. Amazing how just a few hours ago, he didn't want to see her face, and now he was begging God to let him see that beautiful face one more time. \n\n\"What happened to her?\" he asked shakily, raising up from the sink. \n\nJackson thought about how he was going to answer that. \"Darren? Can you give me a moment with Brandon,\" he asked, and then turned back to Brandon when Darren walked out. \n\nJackson felt Brandon needed to know the truth, without any type of sugar coating. \n\n\"A neighbor found her lying on the ground outside of your house. She was passed out and bleeding. They aren't quite sure how long she had been lying there. Her weakened state is due to high stress. They believe she will be just fine, but they aren't so sure about the baby. Miscarriages are high during the first trimester and the baby is still a question mark,\" the Commander said, laying it all out there for Brandon. \n\nJackson knew this last part would hurt, but he had to tell him. He needed to know. \"She said she tried to call you first, but you wouldn't pick up. And then that's the last thing she remembered.\" \n\nBrandon stared blankly at the Commander as he leaned up against the wall. Years and years of pent up aggression, depression, self-loathing and every other emotion he had been harboring for 28 years finally came erupting to the surface like a volcano spilling out. In his mind, she could have died... \n\nBrandon Caleb Temple cracked. He couldn't take it anymore. \n\nHe grabbed his face and burst into tears as he slid down to the floor. He felt like he was suffocating. He couldn't breathe, he couldn't see past the flood of tears gushing from his eyes. \n\nJackson knelt down on one knee beside Brandon. \n\n\"I'm soo fucking sorryyy\u2014so sorr\u2014oh, God, please--,\" Brandon tried to get out, but tears stung his eyes and he could only communicate through every other breath due to his body shaking from his sobs. \"Fuck, he-he's right. This is-is my fa-fault! Fuck, fuck, fuck,\" he whispered in a hoarse cry. \n\nJackson leaned over and wrapped his arm around his 'son'. \"Brandon,\" Jackson said, over the young man's cries, \"You are going to learn from this, and you are going to grow from this. It might be the hardest lesson you've ever had to learn, but you will learn from it.\" \n\nDarren lightly tapped on the door and walked in, \"Hey Commander, hate to bother you, but the doc is back. He wants to speak with you.\" \n\nJackson patted Brandon's head and got up from the floor and walked out. Darren leaned against the far wall staring down at his broken friend. His heart went out to him. He felt that Brandon's worst enemy was always himself. \n\n\"You okay, man?\" he asked. \n\nBrandon sniffled. \"No, not really,\" he answered honestly. \n\nDarren walked over to him and offered his hand and pulled him from the floor. \n\nWhen they walked out, they saw Lori standing beside Sienna's door. She turned to them and smiled. Brandon's heart leapt. He walked over to her. \"What did the doctor say?\" he asked anxiously. \n\n\"She's fine and the baby's fine! Oh, God, I'm so happy. They said she just needs rest and no stress, and she should be fine in a day or so,\" Lori answered, smiling from ear to ear. \n\nBrandon placed his hand over his chest. He could finally breathe. He went to turn the door handle to Sienna's room, when Lori lightly grabbed his hand. Her smile faded. \n\n\"BT, I'm...um, I'm sorry. We told her you were here, but Sienna thinks it's best if you don't see her right now.\" \n\nBrandon froze. She didn't want to see him? Oh, fuck, that hurt like a kick to the gut. He quickly removed his hand from the knob as if it burned and stared at the door. \n\nBrandon exhaled. \"Okay, but she's alright now?\" he asked again, just trying to reassure himself. \n\n\"Yes, she's fine.\" \n\nBrandon continued staring at the door, and then at Lori. \"I'll, uh, I'll go sit in the waiting room. Can you just tell her that I love her so much and I'm sorry,\" he said. \n\n\"Yes, I'll tell her,\" Lori promised, as she opened the door and re-entered the room. \n\nBrandon went back into the waiting room and sat down. Maybe if he sat here long enough, she'd change her mind. And he didn't care how long that took, he would wait. \n\nSienna just wanted to go home. She hated hospitals and she hated feeling so weak. Mentally and physically. But she was so happy that the baby was okay. That was all that mattered to her right now. She couldn't believe how much that had changed. Just a few days ago, she had considered an abortion, and now the thought of her not meeting this little creature caused her to panic. She glanced at her door, knowing that Brandon was out there. \n\nAlthough this would hurt her more than any pain she had probably felt in her life...it was time to step off of this rollercoaster. \n\n\"Daddy,\" Sienna quietly said. \n\n\"Yes, baby?\" the Commander asked, getting up to stand beside her. \n\n\"When can I go home?\" \n\n\"Tomorrow. The doctor said you're growing stronger by the hour, so tomorrow morning we can get you out of here.\" \n\n\"Okay. Thank you,\" she said, not sure how to tell her father what else she was thinking. \n\nBut the Commander knew his daughter. \"What's wrong, Sienna?\" he asked. \n\nShe hesitated for a moment and then asked, \"Daddy, do you mind if I move back in with you?\" She knew tears were welling up in her eyes, but she couldn't help it. \n\nJackson stared down at his daughter. \"Baby, no need to ever ask me that. Of course you can.\" \n\nSienna nodded and turned to look back at the door. This would be the hardest thing she ever had to do, but she was lying in a hospital and Brandon was so miserable, he couldn't even bear to be around her. Love wasn't supposed to leave you broken like this, was it? She no longer wanted to hurt him. And she figured he wouldn't want to hurt her anymore. Being apart, was the only option left for them to take. After an hour of trying to convince herself that she could do it, she finally drifted back to sleep. \n\n********************** \n\nBrandon sat on his couch cloaked in misery. He had spent the night in the waiting room, only to have the Commander wake him up and say that he still couldn't see Sienna and it was best if he went home. \n\nAt first he had protested, but Commander Branson had said it was for her own good, because they didn't want to add any extra stress. So Brandon conceded again. \n\nEarlier that morning when he had arrived back at his home, he checked his voicemail for the first time. The first message was from Sienna and listening to how weak she sounded and asking him to take her to the hospital fucking destroyed him. Could the ground open up and devour him? Please?! \n\nAnd about an hour ago, he had received a call from the Commander saying that he was stopping by to retrieve Sienna's belongings. She was moving out. Brandon was so confused. He wasn't sure where this left them. \n\nBrandon heard the Commander pull up to his house. He opened the door to greet him. Neither man said a word as they packed her clothes into her light pink suitcases. Brandon looked around the rest of the house picking up different artifacts of hers, each one chipping a little bit at his heart. He went to the bathroom and saw her red dress from the night of their first 'official' date lying behind the bathroom door. \n\nHe wanted to break down and cry right then, but a man can only shed so many tears. And he'd shed a lifetimes worth in a day and a half. He quickly picked the dress up and threw it into his guest room. He would keep that as a souvenir of one of the best nights of his life. \n\nWhen they were done packing, Jackson turned to Brandon. He was so uncomfortable with being stuck in the middle of this, but he knew his daughter couldn't do it. \n\n\"Um, Brandon, I need to speak with you.\" \n\nBrandon turned to look at the Commander. He had distressing look on his face. Oh, shit. Here it comes. \n\n\"Well, Sienna wanted me to tell you that she thinks you and she need to be apart. And she's sorry she couldn't tell you personally, but the idea of talking to you on the phone, or even writing a letter was causing her to get upset...so I made her stop.\" \n\nFuck. Brandon exhaled and nodded his head. He couldn't begin to express to anyone how he felt. Hell, he didn't even know how he felt. Was there a word to even describe his own personal hell that kept getting deeper and deeper? \n\n\"Okay,\" was all he could say. \n\nJackson stood there for a moment looking at Brandon. He looked much like he did when Jackson had first seen him. Empty eyes. \n\n\"Brandon, perhaps you should continue going to counseling,\" Jackson suggested. \n\nBrandon shook his head, \"No, doesn't really help someone as fucked up as me. And I don't like talking to strangers.\" \n\n\"Well, what about me?\" Jackson asked, before he really had a chance to think it through. \n\n\"What?\" \n\n\"I'm not a stranger. I could come over here, two times a week or so, and we can shoot the shit. Plus, I'd enjoy spending more time with you like we used to do.\" \n\nBrandon couldn't believe the Commander was saying that. He wanted to be his shrink or whatever? Perhaps it wasn't a bad idea. He trusted the Commander more than anyone else. \n\n\"Alright,\" Brandon said, not giving it much more thought. His mind was on Sienna. \n\n\"Well, now that it's settled, I'll see you later this week,\" Jackson said, reaching over to shake his hand. Brandon shook his hand back, but the Commander held his longer and stared at him. \"Brandon, remember what I told you years ago when you were training?\" \n\n\"You told me a lot of stuff, sir,\" Brandon quietly admitted. \n\nJackson chuckled and let go of his hand. So he had. Sienna had been such a girl. She liked pink, played Barbie dolls and wore dresses all the time. Not a tomboyish thing about her. So, to talk about football, military and things that a father would tell a son, Jackson welcomed those opportunities with Brandon. \n\n\"I guess I have told you a lot. But I also told you not to blame the world for what your mom, aunt and uncle did. They lost out on the chance to know an amazing young man. So don't let them hold you back, because you deserve better.\" \n\n\"Yes sir, I remember you telling me that,\" Brandon answered. \n\n\"Good. Now try to start believing it,\" Jackson said, as he turned and walked out. \n\n********************* \n\nSienna was nervous. She knew what she was asking for wasn't the norm. She was aware of the fact that classes started in less than two weeks since she had practically memorized their student calendar. Funny where life takes you sometimes. She knew her father had wanted her to wait until Spring semester, but Sienna didn't want to miss a beat. She wanted to get her life back on track before Hurricane Brandon blew it all over the place, and the idea of sitting around an extra 5 months with nothing to do but think of HIM, was not that appealing. She had only been out of the hospital a little over a week, but she felt much better and was determined to get her life organized. ",
        "She was sitting in the Administrative offices at San Diego State University. She knew of a few friends who were also attending. Their campus was beautiful, and just being in that atmosphere started getting her excited. \n\nThe receptionist finally looked up at her. \"Mrs. Greenberg can see you now.\" Sienna was extremely nervous, but she grabbed her large folder and purse and walked into the office. It was more untidy than Sienna would have imagined. Mrs. Greenberg was sitting behind her desk with a super-size cup of coffee in one hand and her hand glued to the mouse of the computer with the other. She had her dark brown hair pulled up into a ponytail and several bangles lining up her arm. She also seemed much younger than Sienna would have imagined. She looked up when Sienna entered. \n\n\"Hi, Sienna, right?\" \n\n\"Yes ma'am, how are you?\" \n\n\"I'm just fine, have a seat. And please, call me Joanna,\" she said, as she cleared several papers from her desk. \n\n\"So, I hear you have an unusual request for me?\" Joannna questioned. \n\n\"Um, yes, I do.\" Sienna took a deep breath, \"I know I'm past late registration for this fall, but I was wondering if you could enroll me?\" \n\nJoanna Greenberg had to stop herself from laughing in this young girls face. She meant no harm, but there was just no way that was going to happen. Sure, kids had come in the last day of late registration and begged to be admitted, but this she was coming in asking to be enrolled when they started classes a week and a half from now. \n\n\"I'm sorry Sienna, but we've already admitted the total amount of new students and you are WAY past late registration,\" she said, sitting her coffee aside. \n\n\"I know Mrs. Green--Joanna, but if you have a moment, I'd like to explain myself.\" \n\nJoanna leaned back in her chair. \"Alright, go ahead.\" \n\n\"Okay, I have already been accepted into Spelman College. Until about 3 weeks ago, I had planned on attending that school with my best friend. We had been planning it since grade school. But plans change, and I really want to attend this university. I have maintained straight A's since I was in 7th grade, I was 3rd in my graduating class with a GPA of 4.1. I was captain of the volleyball team, president of Beta Club, a scholar athlete, Homecoming queen and I've logged several hours of community service for my church. And I say all of that to let you know that I know it's the 11th hour, but I would very much like to be accepted under my circumstances. I'm a really hard worker when it comes to my studies and I'm unbelievably determined. I truly believe I could excel here if given the chance.\" \n\n\"And what circumstances are those?\" \n\n\"I'm 9 weeks pregnant and due in April.\" \n\nJoanna looked at the young girl. \"Why did you not attend a community college first? I'm sure they would accept you in a heartbeat.\" \n\n\"Because I wanted to attend a four year university. I know myself, and I know I could keep up with the curriculum.\" \n\n\"And what undergraduate program would you like to join?\" \n\n\"The English Department. I'm especially interested in creative writing.\" \n\n\"Sienna, you seem like a really passionate, sweet young woman, and I can truly admire that. But what you're asking, is for me to go to the Dean of the English Department...who's a tough one by the way...and admit a pregnant student to an already full roster which is already locked and way past late registration. And he's going to ask me 'why', and I have nothing to tell him.\" \n\nSienna thought about that for a moment. \"Can you tell him that when I graduate in 4 years that I will personally stop by his office in my cap and gown, with my baby and give him the biggest hug he's ever received and thank him for giving a young, ambitious girl a chance?\" \n\nJoanna couldn't help it. She laughed and gave Sienna a big smile. \"You know what...I absolutely will tell him just that!\" \n\n\"Thank you so much, Joanna,\" Sienna said, smiling from ear to ear herself. \n\n\"Alright, well just leave your application, transcripts, recommendations and anything else you have, with me.\" \n\n\"Yes ma'am. And I also have some samples of my writing if that helps.\" \n\n\"Couldn't hurt. I will have lunch with Dean Johnson tomorrow, and will hopefully have an answer for you then too. But don't set your hopes too high, Sienna, because he's a tough nut to crack. But if you are accepted, I'll need you to pay first year tuition that day, okay?\" \n\n\"I understand, thank you,\" Sienna said and got up from the chair and shook Joanna's hand. \n\nOutside, she looked around the campus. She said a silent prayer that she got in. \n\nWhen she got in her car, she heard felt her phone vibrate. She looked down and the caller ID read: Temple, Brandon. She desperately wanted to answer it, but she knew she would do more harm than good. So she pressed 'ignore' and drove back home. \n\n********************* \n\nWhen Sienna made it back, her dad was in the kitchen cooking. The aroma hung in the air making her stomach growl. She was glad she finally got her appetite back. \n\nHe was chopping some tomatoes when she entered. \"Hey baby, how did it go?\" he asked. \n\n\"I guess okay, I won't know anything until tomorrow,\" Sienna answered, while grabbing some cucumbers to slice. Jackson looked up and noticed Sienna seemed down. He knew what the problem was. She wanted Brandon. He knew this was killing her. And Brandon for that matter. \n\nHe kept his eyes on the tomatoes when he asked, \"Want to talk about it?\" She shook her head and continued cutting the cucumbers. They both stood there diligently working over the food when Sienna decided to talk. \n\n\"Are you...are you disappointed in me?\" she asked her father. \n\nJackson stopped cutting and looked up at her. She had her head down, slowly slicing way more cucumbers than needed. She had sucked in her bottom lip, like she had done all her life...his tell-tell sign that she was about to cry. \n\n\"Sienna , I've only been hurt at the fact that I thought you were shutting me out of your life. And I wish you would have come to me sooner with some of your problems so I could help you. I can't help it, I will always worry about you and do my absolute best to help you. I would gladly forfeit my own life, if it meant you could have a better one.\" \n\nSienna glanced up at her father. \n\n\"But no, I'm not disappointed in you. Not in the least. You are an amazing young woman with a great head on her shoulders. You're about to become a mom, and what do you do...you continue to pursue your studies, with no help from anyone. Your bravery astounds me and you could teach most of the men I know a thing or two about it.\" \n\nSienna started smiling through her tears. Her father was the best. Her mom was crazy for leaving him. \n\n\"Now, do you mind coming over here and giving your old man a hug?\" \n\nShe laughed and skipped over to her father and gave him a strong bear hug. She loved him so much. \n\nLater that night after dinner, Sienna went to her room and finally listened to her voice messages from Brandon. She had accumulated quite a few. It had been a week since they had last talked. \n\n'Um, hey bab--Sienna, I was just calling to see how you were doing. If you can, just give me a call back to put my mind at ease. Okay, I lo\u2014talk to you later. Bye.' \n\n'It's me again. Hope everything is okay. Just call me when you get a second. Bye.' \n\n'Hey, um, it's me. Again. I hope I'm not bothering you. I realize you aren't picking up and that's okay. *Sigh* I was thinking about you this morning\u2014who am I kidding, I think about you all the time. Anyway, I hope you're having a good day.' \n\nSienna continued to listen to about 8 more messages until she got to the last one. She played it back. \n\n'I'm miserable. I love you.' \n\nSienna pulled the phone from her ear and threw it on her dresser. She didn't know what she felt at the moment. She loved him. No doubt about that, but perhaps her perception of him when she was an eight year old girl who gave the name 'Brandon' to her Ken doll, needed to melt away in order to reveal the man he was now. He was not perfect. He was definitely flawed, but so was she. They both had hurt each other so much in such a short time. He cut her with his words, and she burned him with her actions. Maybe in that respect, they were perfect for each other. \n\nShe tried, but she couldn't erase the look of pain on his face when she revealed to him her plans to maybe abort and not tell him. He looked like a little boy then, much like how he looked when she had first met him. She remembered the feeling she got the very first time she laid eyes on her Prince Charming. \n\nShe had to chuckle to herself. Brandon was no Prince Charming. Actually, he's the guy who would have called Prince Charming a 'pussy' and then kicked his ass. That thought turned her small giggle into a full on laugh. She was sure her father heard her downstairs, but she couldn't help it. That was too funny. \n\nBut just as soon as the laugh had come, thinking about falling asleep tonight without him beside her, made her weep. God, she was such a wreck. She was sure it was her out of whack hormones due to the baby. Dr. Carlson said she'd act a little strange, and damn if she wasn't getting weirder by the day. \n\n*********************** \n\nThe next morning, Sienna awoke to go shopping with Tasha. Since Lori had left two days after she had gotten out of the hospital, Sienna needed some serious girl bonding time. All of her friends were getting ready for school, and didn't have much time for her. But she befriended Darren's new girlfriend, Tasha, who she had met at her father's birthday party. \n\nAlthough Tasha was much older than Sienna, being a woman of 36 who already had a little boy, the two clicked immediately the second time they were together. After Sienna had left the hospital, she had been extremely depressed. Much to Darren's encouragement, Tasha brought over a little basket of goodies to cheer her up. At first they didn't really know what to say to each other, but by the end of her visit, Tasha seemed like that cool aunt that you would see on a TV show. \n\nTasha was so funny, beautiful and very much a strong woman. She had Darren wrapped around her little finger. Sienna couldn't imagine any woman having Brandon like that. Ug, she would have to quit thinking about him. When Tasha arrived, Sienna got in and they headed to the mall. \n\n\"So, have you thought of any names if it's a boy or girl?\" Tasha asked, as they strolled through the different shops. \n\nSienna thought for a moment. \"Hmm...no. I haven't really thought about it.\" \n\nThey still had some time to kill before Sienna had to go to her check up with Dr. Carlson, so they settled down in the food court. Sienna was starving. She was embarrassed about how much her hunger was starting to take over. She bought much more than she normally would have, but whatever. She was pregnant. She'd be getting bigger soon enough anyway. \n\n\"So, how did you meet him?\" Tasha asked, taking a bite of her salad. \n\nSienna knew exactly who 'him' was. She sighed. \"My dad was having a little mini milestone celebration for completing BUDs training. It's this really hard thing that they have to go through. I mean, I don't know how they do it,\" Sienna said, losing her train of thought. \n\n\"I know, Darren told me about. Jesus, they put those boys through hell.\" \n\n\"Yes, well he was having a cookout and I was running in the house about to head outside when I collided with him. I swear, my life was changed at that moment. Like some kind of fate or something,\" Sienna answered, remembering every detail of their first encounter. \"I was eight and he was eighteen. The most handsome guy I think I'd ever seen.\" \n\nTasha agreed, \"Yeah, he's a cutie, alright. He and Darren have been friends for a long time, right?\" \n\nSienna nodded her head while downing her soda. \"Yep, ten years. Same amount of time that I've known him.\" \n\nTasha wasn't sure she should ask anymore, but she wanted to learn about this interesting dynamic. \"So...you're dad never had a problem with him being white?\" \n\nSienna looked up. She had never really thought about it. \"No, I don't think so. My dad always looked at Brandon like a part of our family. I doubt that would have ever bothered him.\" \n\n\"Hmm, well what about the age gap?\" \n\n\"Well, if you think about it, in 5 years, who would really care. I'd be 23 and he would be 33.\" \n\n\"Yes, but that's very different than 18 and 28,\" Tasha reminded her. \n\nSienna thought about it. \"Maybe. But I won't change. Even if I don't end up with him, I will always love him. No amount of age is going to change that. It's been embedded in my soul for ten years now, and has never wavered. Even now...I want him. I love him. But I've had to realize that maybe we weren't meant to be together. And it hurts so badly. I wouldn't wish this on my worst enemy.\" \n\nTasha wasn't sure if it was the confidence with which she spoke, or the fact that she seemed older beyond her years at this moment, but she believed her. She knew this had to be hard on her...and him. Darren had talked about how depressed Brandon was. He didn't hang out with the guys anymore. Just mainly stayed in his house working on his project. Brandon had decided to remodel his guest room and turn it into a baby room. And when he would finish, he would knock it all down again and start over, claiming it wasn't perfect. Darren had helped him a few times, but after the third time of ripping their finished product down, Darren had taken a backseat with this project. \n\nTasha had thought about telling Sienna about the baby room, but decided to stay out of that part of their life. \n\n\"Well, how did you and Darren meet?\" Sienna asked, stuffing her second chocolate chip cookie in her mouth. \n\nTasha laughed. \"My Darren,\" she sighed. \"Well, I never go out. Ever! I mean, I just got used to the idea that no men are good, and I'd just worry about making sure my son doesn't turn into any of the men I've met in my life, especially his no good daddy. But, I finally got persuaded by a co-worker to have drinks after work. And we went to this local little bar, and I saw him immediately when I walked in. He looked soooo good.\" \n\nTasha laughed again. \"I actually kinda owe BT for our hook-up. I kept watching the two out of the corner of my eye, and they were cracking me up. I could tell that BT was trying to get Darren to go to talk to me, but Darren wasn't budging. So, after a few minutes, BT started walking toward me, and Darren tried to stop him, and as soon as they almost reached me, BT pushed him in my direction and then made a bee-line for the restroom. You should have seen Darren's face. He was so embarrassed that he had almost bumped into me. Or been pushed into me, more like it.\" \n\nSienna had to laugh at that too. Those two were funny together, when you let them loose. They were very much opposites, but that's why they clicked so much. \n\nTasha stared over at Sienna. \"I had wondered why someone as attractive as BT wasn't talking to any of the women who tried to get his attention that night. But that was quickly answered when I met you at your father's party. He already had the perfect little woman,\" she said smiling at her. \n\nSienna slowly drank her soda. She wasn't perfect. Now, she was missing him again. \n\nTasha realized her mistake, \"Shit, honey, I'm sorry. I didn't mean to take you down memory lane. I just talk too much sometimes.\" \n\n\"No, it's okay. I asked.\" \n\nAfter lunch, they walked past a baby store. Sienna was looking at all of the cute little tiny clothes when her phone rang. She didn't recognize the number, but she decided to answer anyway. \n\n\"Sienna?\" she heard a female voice ask. \n\n\"Yes, this is she.\" \n\n\"Hi, it's Joanna at SDSU. Do you have a moment to talk?\" \n\nSienna's stomach turned. She was so nervous. \n\n\"Um, yes, of course.\" \n\n\"Well, I talked to Dean Johnson a few minutes ago, and he said he had never heard of such a bold outrageous request. I mean, I had to really go to bat for you. I was pleading your case, and he wasn't buying it.\" \n\nSienna's heart started to sink. Shit. Maybe she should have let her father handle it. \n\n\"But...he's now somewhat intrigued by the whole thing, so he said he will admit you to his program and clear everything with Registrar! So welcome to San Diego State University!\" Joanna laughed in her ear. \n\nSienna screamed into the phone. Tasha quickly ran over to her to see what was wrong. \n\n\"Oh my God, thank you sooo much Joanna! I really don't know what to say! Oh my God!\" Sienna exclaimed. \n\n\"My pleasure, but truthfully it was all you. I told him exactly what you had told me. So congratulations. You will need to let me know what classes you want to take, so we can clear them with the professors. And I'll need the first year tuition paid in full either today or first thing tomorrow. That cool?\" \n\n\"Yes, that's perfect. Thank you! I'll have my class list for you as soon as I get home.\" The two said their goodbyes, and Tasha just stared, trying to figure out what the hell was going on. \n\n\"I got in! I can go to SDSU this fall! In pretty much a week and a half!\" \n\nTasha reached over and hugged her. \"That is so great. I'm so happy for you!\" \n\nSienna couldn't wait to tell her dad and Lori and Brandon...well, her dad and Lori. She was so excited to begin her new journey. \n\n\"Well missy, we better get going if we're going to make to your appointment on time,\" Tasha warned. \n\n\"Oh crap, I almost forgot,\" Sienna said while stuffing the last bit of food in her mouth and slurping the bottom of her soda. \n\nLater that evening at dinner, Jackson cornered Sienna. He had been so proud of her for getting into San Diego State, but she could tell something else was bothering him.\n\n\"Look, I know this is tough on you, but I did want to say something,\" he said, as he passed her the salad. \n\n\"Okay.\" \n\n\"I think it would be a good idea if you called Brandon to at least let him know how the baby is doing. He's been asking me, but I think it's your place to tell him. If you're comfortable doing so.\" \n\nSienna knew it was the right and responsible thing to do, but it made her nervous. She hadn't spoken to him in a week and she wasn't really sure what to say. What do you say when you want someone so much, yet you're the reason you are apart. \n\nBut she didn't want her father to think badly of her, so she just nodded her head and told him 'okay'.\n\nAfter dinner, she went to her bedroom and stared at her cell phone. She would try to keep it light and just about the baby. No 'I miss you and I love you' would leave her mouth. She finally built up enough courage to speed dial him, which of course, he was number one in her phone. He answered immediately. \n\n\"Hey,\" he quickly said, as if he'd been holding his breath. \n\n\"Um, hi,\" she said, already feeling a tingling just by hearing his sexy voice. \n\n\"How have you been?\" He sounded happy to hear from her. Of course, it could just be her imagination.\n\n\"I'm good. Well, um, I went to the doctor today,\" she nervously replied, while biting her bottom lip. \n\n\"Yeah, your dad told me. Is everything okay?\" \n\n\"Yes, the doctor said everything was good,\" she answered back. \n\n\"Good. I'm glad to hear that.\" \n\nAwkward pause. She could hardly hear his TV in the background, and she tried to listen closely to tell what he had been watching.\n\n\"Do you need anything, because--\" he continued.\n\n\"No,\" she quickly interrupted. \n\n\"Oh, okay.\" One simple word from her and he now sounded melancholy. She hadn't meant to sound that harsh, but this call was making her uncomfortable. Making her depressed.\n\n\"Um, if you don't mind, when you have your appointments, can you call and give me an update? I mean, only if you want to,\" he said, the last part really softly. \n\n\"Alright.\" She could tell he didn't want to hang up, but neither of them was sure what to say next. \"So then, I'll call you after my next check-up?\" ",
        "\"Yeah, thank you. I, um...nevermind. I'm glad you and the baby are doing well. I'll sleep better tonight knowing that.\"\n\n\"Okay, well, I'll talk to you later,\" she said, feeling tears stinging her eyes. \n\n\"Okay. Goodnight,\" he said. \n\nShe never heard the phone click on his side, so she decided to hang up first. She sat there for a moment thinking back over her life thus far. She never imagined it would bring her here. She wasn't even sure where 'here' was. \n\n******************** \n\nAs soon as Sienna started school, the weeks flew by. It was now mid October, and she was already worn out. But she welcomed the challenge. So far her classes were pretty easy, just a lot of tedious homework and mindless group assignments. Her morning sickness had stopped weeks ago, but she had already gained close to 5 pounds. You can't win for losing with pregnancy Sienna thought to herself. \n\nBut all of that was the least of her worries. Even though she had talked to him a handful of times on the phone, she hadn't physically been in the same room as Brandon since that night she passed out at his house. Almost two months ago. 7 weeks to be exact. She was counting. Seemed like she lived by weeks because of being pregnant. And she knew that the lengthy time apart was more her fault than his. Since she never really had anything to say to him on the phone outside of 'I'm fine' and 'the baby's fine', he had stopped calling as much as he used to. And she mourned that. But now, only the occasional call from her after one of her check-ups, would be their only form of communication. Chris had also started calling her, and even though she still partly blamed him for everything that happened, she liked Chris and felt that she should keep their friendship intact. \n\nShe never dreamt it would become this painful to be without Brandon. She had missed him every single day. But luckily she had her school work and preparing for the baby to keep her busy. Plus, Lori called her every day on the phone checking up on her. Lori had finally admitted to the fact that she had told Chris. Lori had told her she was just scared for her and wanted some other voice of reasoning to know. She apologized to Sienna over and over, until Sienna threatened to hang up on her if she didn't stop. \n\nBut late at night, lying in bed with everything quiet...she thought of Brandon. The way he used to roll over in the bed and bury his face in her hair. Or how he would whisper in her ear to wake her up because he wanted her right then. And how when he was really tired, he lightly snored. \n\nSienna's thoughts were interrupted as she sat in the car outside of the park. Tasha's son, Michael, was turning six today, and she and Darren were throwing him a huge party at a local park, completely decked out in Star Wars theme. Tasha had already pre-warned everyone that her son ONLY liked Star Wars. So, Sienna had the newest Anakin Skywalker action figure wrapped up along with a Star Wars Video game. She figured he probably already had all of that, but what the hell. \n\nAnd Tasha had already warned her, but staring at the back of Brandon's Jeep was causing her heart to flutter. She was trying to stop breathing faster than normal, but she couldn't help it. She had never gone this long without seeing him, even when she was a little girl. She didn't know if she could do this. Would he be here alone? Or would another woman be on his arms? And immediately Sienna felt self-conscious. She felt fat and fidgeted at her clothes, that she swore didn't fit right. She checked herself in the mirror one more time and then stepped out of her car. \n\nIt had been so warm lately, that she had worn a cute summer dress with sandals. Plus, her jeans didn't seem to fit as nice as they once had. She smoothed over her somewhat flat stomach. Others might not be able to tell, but she noticed the difference when she stared at her naked body in the mirror. Plus, her breasts were much bigger now. Almost a full cup size. She was almost embarrassed by them. She felt so dumpy and plain. \n\nAs she walked through the entrance and out into the open park, she saw several young kids screaming and fighting each other with toy light sabers. She walked closer to the decorated picnic table, with the presents placed strategically in front of her stomach. \n\nAnd there he was. She saw him and Darren standing off to the side by the grill. Darren turning the food over and talking to him. Brandon stood with his neck bent, nodding every once in awhile at what he was saying. Then Darren noticed her. She saw him quickly whisper something into Brandon's ear and turn his head. Brandon immediately looked up and over toward her. \n\nSienna jerked her head away before he could make eye contact with her. Her skin was scorching. Shit! These are those times when she truly missed Lori. She would have known what to do. Sienna scanned the opposite side of the small park and saw Tasha sitting at a colorful picnic table with her son. She started making her way over to them. \n\nWhen she got closer, she heard Tasha scolding Michael. He had his hands crossed tightly over his chest and his bottom lip poked out. He looked adorable. Tasha finally exhaled and looked up at Sienna. \n\n\"Hey girl, I'm so glad you came,\" she said while hugging her. \"I know this was hard for you,\" she whispered in her ear before she let Sienna go. \n\n\"Oh, well, thank you for inviting me. And I'll be okay.\" Sienna looked down at Michael. \"And these are for you, Michael. Happy Birthday!\" \n\nMichael grabbed the presents from her arms and looked up and flashed a snaggle-tooth smile at her. He was about to rip them open, when Tasha stopped him. \n\n\"Nope, what did I tell you? After we sing 'Happy Birthday' and you blow out the candles, remember?\" \n\nMichael pouted again and slammed the presents down on the table. \"Young man, if you don't stop acting like that, I'm going to take you out of this park, spank you, and then take you home, leaving your friends to have all of yours gifts!\" \n\nMichael tucked his little lip back in and sat up straight. Sienna chuckled. She figured he would be damned if he would let his friends benefit from his bad behavior. He seemed serious about Star Wars. \n\n\"Okay, now go ahead and play with your guests. And be good. No more hitting!\" Tasha yelled after him as he took off across the park. \"I swear, that boy,\" she exhaled again. \"But he LOVES Darren. Listens to him more than me,\" she laughed. \n\nSienna pondered over that. Darren did have a way of making people listen to him. Yeah, he was one of the good ones. She was so happy for him and Tasha. They made a beautiful couple. \n\n\"Are you sure you're going to be okay? I know it's hard having him here, but he's Darren's best friend, so...\" Tasha said, wondering what Sienna was thinking about. \n\nSienna slowly nodded. \"Yes, I think I'll be okay.\" \n\n\"Speak of the devil,\" Tasha said, as she turned her back to Sienna and began picking up all of her son's gifts. \n\n\"Hi, Sienna,\" she heard him say behind her. No, she wasn't going to be okay. She didn't want to turn around, but she couldn't ignore him either. So she slowly turned and glanced up at him. \n\nDamn, he looked so good. He was wearing a sea green tee shirt with the words Hollister written in white across the chest and denim jeans. The green matched perfectly with his stunning eyes. Eyes that were penetrating hers at the moment. She noticed he had also gotten a hair cut since she had last seen him. It looked really good on him. Suddenly, she became really self conscious of her body. \n\n\"Hi,\" she whispered back. \n\nHe had his hands tucked into his pockets but he was staring intently at her. \"How have you been?\" he asked in his deep Boston accent. \n\n\"I've been good, how about you?\" she managed to ask, without fainting. \n\nHe looked down at the ground and then back at her. \"Not so good,\" he answered. \n\nHis honestly killed her. But that was Brandon. Brutally honest to the core. She couldn't look at his face anymore. She now questioned why she had even shown up here. \n\nBrandon was floored when Darren had told her she was here. He hadn't expected her to show. He knew Tasha had told her he would be here, so he figured she'd back out. After all, it had been almost two months since he'd last seen her. \n\nIn the beginning, he had felt like the biggest, idiot loser calling her several times a day, but he couldn't help himself. She made him crazy like that. \n\nBut she only ever returned his calls every so often, and he figured calling so much, probably just annoyed her. So he stopped. It had taken everything in him to do so, but he eventually managed to let it go, and wait for her to call and give him updates on their baby. \n\nBut here he was standing next to her. She looked more beautiful than he had remembered. Her thick raven hair was a bit longer too. Or maybe that's because he hadn't seen it down in awhile. She was wearing a sexy summer dress, very true to her nature. \n\nHe glanced down at her stomach, but she quickly placed her hands in front. He looked back up into her eyes and she looked away from him. He knew she was about 15 weeks. They never really talked much about her doctor's visits, but he had been doing his own research on the internet and reading silly pregnancy books. He figured she didn't want to talk to him right now, but there was one thing that she hadn't told him, but he was dying to know. \n\n\"Um, do you know what sex the baby is?\" he asked. \n\nSienna still couldn't look at him. She had actually just found out the day before at her last visit, and she realized then that she had forgotten to call him. \"A girl,\" she whispered, while pretending to pay attention to the kids in the background. \n\nBrandon's heart soared. A girl. A small smile reached the corner of his mouth, while thinking about how much the Commander probably laughed on his behalf at that little bit of information. \n\n\"A girl,\" Brandon repeated. He didn't know what he was feeling at the moment. These past two months had been absolute torture for him. He knew she hated him, but a part of him thought there was still some chance for them. But she had carried on with her life like he had barely existed. Like he was almost a stranger on the phone. And a part of him thought that was for the best perhaps. But a bigger part of him, pride be damned, wanted her back with a burning he'd never felt before. He wanted Sienna back in his life. She remained in his heart at all times, but now he wanted her back in his arms. \n\n\"Hey, if you ever need me to take you to a doc appointment, I'd be glad to,\" he told her. \n\n\"Oh, thanks, but Tasha takes me, so that's okay.\" \n\n\"Yeah, I know,\" he said quietly. His hopes sank a little. He had wanted to take her, but not only for her, but because he wanted to feel involved. But he would respect her wishes. \n\nMan, he was having a baby girl. The thought hit him again like a ton of bricks. He wondered if she would look like Sienna. He hoped. But maybe not too much like her, so he wouldn't have to kill some young man when she became of age. Oh, this was surreal. \n\nHe stared at her, even though she had yet to look at him again. She actually looked rather distant. Like she couldn't care less about his presence. How had so much changed in such a short time? \n\nBrandon relived those last few moments with her over and over. The horrible things he had shouted at her. Her look of desperation as she tried to cling to him crying and begging for him to stay. He looked back at that Brandon and wanted to kick his own ass. She had begged him. But his wounded ego and hurt had caused him to walk out of the door, leaving her there to get sick and... \n\nHe couldn't think about it anymore. He had already driven himself mad over it. Oh, the many restless nights he sat up thinking about that. So he tried to change the subject. \n\n\"Your dad told me you were attending San Diego State. How's that going?\" he asked. \n\n\"It's been good,\" she answered, still not looking at him. \n\n\"I'm so glad you were able to attend school. I know you really wanted to. I'm sorry it wasn't Spelman though.\" \n\n\"Well, mostly I just wanted to go to school,\" she answered quickly. \n\n\"Sienna, I'd really like to help you out with that. I mean, I know school is so expensive, and especially with the baby and the medical bills. I can pay for whatever you need me to. I promise, you won't have to worry abo\u2014\" \n\n\"It's okay. I have it. My dad's been great,\" she said, with her head turned completely to the side. \n\nGod, he hurt so much. She was completely shutting him out. He couldn't help it any longer. \"Sienna, can you look at me?\" he whispered to her. \n\nShe shook her head. \n\n\"Do you want me to leave you alone?\" he asked, scared of what her answer would be. He noticed her bite her bottom lip. The same lip he had licked and sucked on a hundred times. Something about that stirred his dick. \n\n\"I guess it's best if you did,\" she whispered back, still not looking at him. \n\nBrandon slowly nodded and turned to look out at the children screaming and running around. He should just walk away, but for some reason his feet felt like there was lead in them. He couldn't move from that spot if his life depended on it. \n\n\"I don't think I can,\" he said, staring out. \n\n\"Then, I'll go,\" she said in a quiet voice, as she turned to walk away. \n\nBrandon wanted to call out to her. He wanted to apologize to her. He wanted to grab and kiss her and make her promise that she would never leave him again. He wanted to fall to his knees and kiss his child encased in her beautiful body. He wanted to hear her laugh again. He wanted...so much, that he feared he'd never have again. \n\nHe watched as she hugged Michael and Tasha and said goodbye. She waved to Darren in the distance and then made her way back to the parking lot. \n\nBrandon hadn't moved an inch. He squeezed his eyes shut and then opened them. He saw the last glimpse of her dress as she swayed out of his sight. He felt sick. As if his legs would buckle at any moment. He plopped down at the table and ran his hands over his hair. His life was so fucked up. And he had no one to blame but himself. \n\nSienna couldn't make it to the car fast enough. She couldn't breathe. She couldn't bring herself to look at him the entire conversation. Her resolve was going to break at any moment had she stayed a second longer. Their relationship was too volatile to go back to, but damn if he didn't have some power over her mind, her body, her heart. She knew he could read her like a book, and she was sure even though she had put on a good front, he knew that she wanted him. And the truth in her eyes seemed to always be the one thing she couldn't hide from Brandon. Maybe it worked this time, but she doubted it. \n\nLater that night, Sienna lay in bed. She looked up through the skylight in her room. Her father had told her a funny story about the skylight. Being the paranoid man he was when it came to his daughter, he didn't want her taking that room for fear that someone would break in through the opening. She was only a baby, but he told her that he was so concerned, until her mom had looked at him with this strange look. And she slowly said to him, \"I think if they wanted to break in, they would just go to one of the many windows in her room.\" Her dad said he laughed so hard after that, because he felt like a fool. He said that was one of their better days. \n\nSienna looked at the stars...and thought of Brandon. He had woken her up one night, a few months back. She was so sleepy, but he grabbed her hand and led her outside. They sat in the back of his Jeep with the top down staring at the night sky, which she thought was funny. Brandon didn't seem like the star gazing kind. But he started talking to her about different things he had gotten himself into living in Boston. How different he found the people in California. She had fallen asleep in his arms that night, with a light wind blowing on her face, thinking life couldn't be more perfect than that. \n\nShe knew she had to get up in a few hours for school, but she doubted she would get any sleep tonight. Because when she felt like this, he invaded her dreams and she never got any rest. \n\n\n\n---Hi all, I hope you enjoyed! I realize this chapter was lacking in the 'sex' department, but that's just because I felt like more needed to be said in this chapter emotionally. I hope when you vote, you don't hold that against me, but not to worry, chapter 9 will be out shortly...and maybe there will be some hot steamy scenes in that one;-) I'm not telling... \n\nAnd extra thanks to Tangled and my \"Brandon\" for support on this chapter!\n\nSoular  "
    ],
    "authorname": "soular",
    "tags": [
        "commander",
        "seal"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/damn-dress-a-love-story-ch-08"
}