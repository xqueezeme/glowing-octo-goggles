{
    "title": "Lost in Texas Ch. 05",
    "pages": [
        "The following story is a work of fiction. Any resemblance between actual persons, living or dead (or just confused) is entirely coincidental. Please do not copy/redistribute the story, in part or in total, without the author's permission.\n\nIt is also a long story. If you don't like longer stories or are looking for immediate gratification, you might want to skip this one. \n\n--------------- ----------------\n\n\"Alice! Alice come out of the bathroom sweetie!\" Heather was at a loss for how to get the young woman to come out. Laurie started knocking on the door as well.\n\n\"It's only going to be for a couple of days. You're a big girl. You can handle this!\" The blonde girl shrugged. Alice was being stubborn.\n\nFinally they heard a dim voice penetrating the hole that Heather's fist had made in the bathroom door. \"No, I can't handle this. It's too much,\" she whimpered.\n\nHeather spoke directly through the hole in the door. \"Alice honey, you've lived through outing yourself and you've survived being tied up and paraded around like a cocker spaniel by Liz. This should be a piece of cake.\"\n\n\"Maybe, but those things happened one at a time,\" Alice said, opening the door. The poor, brown-haired ex-wallflower looked terrified. She had just received a phone call that had taken what she had anticipated to be an ordinary, run-of-the-mill apocalypse and made it much, much more confusing. \n\nShortly after final-exams were over, the band was going to be auditioning for one of a limited number of spots in the KLEZ Battle of the Bands contest. The winner of that contest got a five-song set opening for the Eagles that August. This was a big deal for the girls to begin with, but Alice was the one writing all their material. She was terrified. Liz had promised to be there to support her girlfriend at the contest itself. This was a good thing. Then they had gotten a call from Jane, informing the girls that she, Freddie and Michelle were going to be making the trek to support their young friends. From the moment Alice and Liz had started their relationship, Liz and Michelle seemed to have developed some animosity towards each other. Even though they had never met or even spoken to each other directly. Michelle didn't trust Liz's motives for \"drawin' Alice\" into a dom/sub relationship and Liz didn't like Alice being so influenced by \"an old flame.\" And for the first time, the two very dangerous women were going to be within arms-length of each other. That had been the bad part. \n\nThe worse part was Alice's father calling and saying that he would be there for his daughter's \"big debut.\" Her fairly religious father had been wrestling with the concept that one of his children was gay and much to his credit, he had handled things well. He still loved his daughter. But he was unknowingly stumbling into a hornet's nest. And Alice was faced with her father showing up and getting caught between the cowgirl that took his daughter's virginity and the biker/graduate student who tied her up to the bed and spanked her to orgasm. Those sorts of things might be a little harder for him to deal with. Somehow, she had to keep everything under control. \"I am so . . . in trouble,\" she whimpered as Laurie and Heather sat her down on the bed. \"I mean my dad . . . Michelle and Liz want to kill each other . . . ooh! Why is everyone being so difficult?\"\n\nHeather was hiding her smile behind her hand. Alice was the shyest, quietest member of the group, so being the absolute center of controversy was a bit overwhelming. But Heather and Laurie had already had their turn in the spotlight. It was someone else's turn.\n\n\"Poor baby,\" Laurie cooed, sitting behind her friend and rubbing her shoulders. Alice started to relax. Laurie's massages had that effect on living organisms. \"I'm sure it'll all work out.\" Laurie scrunched up her eyes and pursed her lips. \"Maybe you should take them on a picnic!\" she said, with an expression that made it seem like she had just had the most brilliant idea ever. \"Take your dad, Liz and Michelle out somewhere public where Liz and Michelle have to behave since you know neither of them will embarrass you in public and . . .\" Laurie had to stop when Heather started chortling. \"What? Not a good idea?\" Heather laughed and kissed the blonde girl on the lips. \n\nWatching those two actually made Alice feel better. Since their whirlwind breakup and reunion following their spring break quarrel, the two had slowly reverted to, and perhaps surpassed, their previous level of cute couple-ness. If they could survive their trials and tribulations, maybe Alice could as well.\n\n\"Well, we have YOUR birthday to celebrate in the meantime,\" said Laurie. \"And you still need to decide what you want to do.\"\n\nAlice sighed. She was the last of the crew to hit the twenty-year mark, and Laurie wanted to make a big deal of it. Liz wanted to make a big deal of it. Alice just wanted to crawl into a dark place and wake up in August. \n\n\"And no,\" Laurie continued, \"we won't just 'skip it.' So what do you want to do?\"\n\nHeather sat down next to her girlfriend and kissed her again, trying not to disturb the movement of the girl's hands on Alice's shoulders. \"You might as well give in. You know how she is about birthdays.\"\n\nAlice sighed again. She was racking her brain for something fun but not too ostentatious. Alice would have been happy with a group dinner-and-a-movie outing, but Laurie wasn't going to be happy unless it was something she could over-plan or was novel somehow.\n\n\"How about the carnival?\" Heather suggested. Laurie perked up. Alice looked quizzical. \"There's one of those traveling carnivals setting up on the corner of 4th and Lexington. That might be kind of fun.\"\n\nAlice smiled. It had been a long time since she had been to anything like that. She distantly remembered going to the county fair when she was younger. But as she grew older, she and most of the other kids decided they were too \"grown up\" for stuff like that. It might be nice to not be a grown up for a while. \"Yeah,\" she said. \"That sounds nice.\"\n\n\"Cool!\" was Laurie's response. \"And . . . ooh! We could have a contest to see who can win the coolest prize for Alice! And . . .\" And like a shot, Laurie's mind and mouth were moving as one. Alice smiled shyly at Heather. It was a good idea. \n\n\"C'mon folks,\" Heather said while standing up. \"We've got band practice in a bit.\" She pulled Laurie to her feet and the two girls exchanged a quick kiss and rubbed noses. It was strange for Alice. Even though Heather had gotten noticeably friendlier in general over the last year, she was like an entirely different person around the blonde girl. That got her thinking about her own girlfriend. Then she thought about the upcoming chaos. Finally she put her head back in her hands and groaned.\n\n---------------- ------------\n\nThat evening . . .\n\n---------------- ------------\n\n\"I can't believe this,\" said Alice as she stormed out of Liz's bedroom. \"I thought we'd cleared this up! Michelle will be up for Battle of the Bands. She IS coming with Jane and Freddie! And NO, I won't un-invite her! Why are you being so pigheaded about this?\"\n\nAlice and Liz had been at it like that since the moment the younger girl had walked into Liz's apartment. The greetings had been friendly, but then Alice started talking about the material they were working on for their set and how she hoped \"everyone\" would like it. Liz jumped on that \"everyone\" with the firm belief that Alice was talking about Michelle, and the argument had started. After a while, Liz had actually asked Alice to ask the muscular cowgirl not to show up. The young girl had naturally refused. Liz's jealousy towards Michelle boggled the mind. Alice had been tempted to point out that she had been sexually involved with Jane and Freddie as well, so why not \"ban\" them all. But she decided she was too tired to fight. She was actually grabbing her stuff and preparing to leave when Liz started to calm down.\n\n\"Please, don't go,\" the tall girl said with scarcely concealed forced-calm. \"Let's just drop it,\" she said, putting one hand on Alice's shoulder. \"We can talk about this tomorrow.\"\n\n\"There's nothing to talk about,\" Alice returned. \"She is going to be there. And you're going to be there and my dad is going to be there. And if you actually care for me at all, you'll try and make this easier for me instead of harder.\" She felt Liz's hand twitch. She had struck a nerve, but her girlfriend recovered quickly.\n\n\"Let's just watch Leno and go to bed. Okay?\" \n\nAlice sighed but tried to smile. \"Sure,\" she said. They sat on opposite ends of the sofa, watching television and not speaking to each other. Then they went to bed. When Alice had first come over, she had sort of been hoping for a little bit of bondage fun, but the two of them had agreed that they would never engage in their dom/sub relationship if one of them was angry. There was some strained small talk, but that ended quickly as they lay under the covers, facing opposite directions. Alice thought back to how Heather and Laurie looked earlier that day. Despite almost breaking up not long ago, the two had rebounded and were a stronger couple than ever. And they looked like what a couple was supposed to look like. 'Not like this,' she thought as she was drifting off to sleep. 'They don't look like this.'\n\n----------------- -------------------\n\nAlice's birthday . . .\n\n----------------- -------------------\n\nAlice had forgotten how messy cotton candy could be. Liz constantly had to wipe it from the girl's face, causing the young woman to blush a bit and hide her face against her girlfriend's chest. Things had gotten better in the last week between them. Liz had reluctantly acknowledged that Michelle was going to be there for the show, and then neither of them brought it up again. Alice realized that it wasn't the best way to handle a conflict, but at least it allowed them to have fun on her birthday. Mary was off with her third boyfriend of the year, a lug named Bruce, trying to win Alice a stuffed animal at the ring toss. Jenny was playing the game where you try and loop a bottle with a ring on a string and pick it up, and she hoping to get a Frankenstein's Monster figurine. Heather and Laurie had disappeared up onto the Ferris Wheel where they were probably making out. Liz had just played the \"strong man\" game where you hit the lever with a big hammer and tried to make the bell at the top ring. The tall girl had won Alice a tee-shirt with a caption that read \"You've been a bad girl. Go to my room!\" That made Alice smile and brought some genuine joy to her heart.\n\nThe whole gang got together to ride the small roller coaster that the carnival had brought with them. Laurie was terrified of the things, which pleased Heather to no end. When Laurie got scared, she got clingy. When the blonde girl got clingy, Heather got lucky later in the evening, so it all worked out. Indeed, when the ride was over, Laurie's arms were wrapped so tightly around Heather's neck that it surprised any of them that the dark-haired singer could still breathe. But the large number of kisses she was receiving seemed to more than make up for any discomfort. As the kisses slowed and started getting longer, the rest of team realized that they should probably get going before the two girls started having sex right there in front of everyone. Apparently, Laurie had won the discussion with her father about what was and was not appropriate behavior regarding public displays of affection.\n\nEveryone gave Alice the prizes they had won for her over the last few hours, wished the delighted young woman a happy birthday and headed for home. Mary took her boyfriend off for a quickie in the backseat of her car, and Heather took Laurie and Jenny out for a late-night coffee run, while Liz took Alice back to the apartment. She had plans for her girlfriend, who was almost bristling with anticipation.\n\n------------ ------------------------\n\nBack at Liz's place . . . \n\n------------ ------------------------\n\nLiz and Alice were sucking some serious face as they scrambled to get the door to the apartment open. The two of them hadn't been intimate in over a week. While they might not have been as sexually active as Laurie and Heather were, a week was still too long and they were looking to make up for lost time. When they got in, there were several large, unlit candles scattered about and there was a large white sheet on the ground. Alice was worried that her girlfriend was going to want to try using candle wax again, despite the discomfort it had caused the last time. But she didn't need to worry. Liz had other plans. She brushed Alice's hair to the side and started nibbling on her neck. Alice closed her eyes and enjoyed the contact. Then she felt something slip around her neck, and she knew Liz was securing the collar.\n\n\"Strip, then get on all fours,\" Liz whispered intensely from behind her. \"You're going to be my Bitch . . . my little doggie tonight. In EVERY sense of the word.\" Alice instantly obeyed, but wondered what Liz was up to. Liz went into the bedroom, shutting the door behind her. Then, from beyond the door, \"And I expect you to be in show position in the middle of the floor by the time I get out there.\"\n\nAlice did as commanded. She was on all fours on top of the sheet that Liz had laid out when Liz came out, wearing nothing but the shirt that she had won for Alice. She was carrying a number of common toys, as well as a couple of tubes of unknown origin. \n\n\"Good Bitch. It's nice to know you haven' forgotten how to behave.\" She took a moment to wander around and light the candles, never taking her eyes off her lover. \"Tonight, we strip away a little more of your 'humanity.' Let's start by giving you a tail,\" Liz said with a grin. She held up a small black butt plug with a small bit up plastic with a slight curve to it for a handle. It looked just like a dog's tail. Liz lubed up the business end and slowly inserted the plug into Alice's rectum. Alice was becoming increasing excited. This was kinky, even for them! Since the plug wasn't particularly thick, it went in with only a small amount of discomfort. Then Liz went and grabbed the two tubes Alice had seen her carrying, and she used one of them to squeeze some white substance into her hand. Then Liz sat cross-legged in front of Alice and started applying the substance to her face. It was body paint. \"We're going to make my little Bitch all nice and pretty.\" It took almost twenty minutes to complete the application process, but Alice didn't mind at all. Liz's touch seemed especially gentle that evening. She spent longer on Alice's breasts than seemed necessary. The same could be said for Alice's ass and around her crotch. Once the young submissive's body was completely covered in a white base, Liz took the other tube and squeezed out some black, placing dots of different sizes all over Alice's body. She even put some on Alice's nose and around her eyes. Finally, she stood back and surveyed her work. And she looked pleased. \n\n\"What a fine looking Bitch you are! I think being a Dalmatian suits you.\" She wandered into the bedroom and came out with a digital camera. \"Straighten up! I need a picture for posterity's sake.\" She snapped off several pictures. Alice was wondering how water-resistant this stuff was, since her pussy was already hot and moist. Liz put the camera down, then sat herself on the couch. She very leisurely began playing with herself as her 'doggie' watched on. Alice started to whine. She needed to get fucked or to tongue something, because she was hot to trot, so to speak. \"Don't be like that Bitch. I'm just enjoying . . .\" she started as she drove her fingers into her own pussy, \". . . the view!\" \n\nHaving Liz touching herself just a few feet away and being unable to participate was maddening to Alice. But that's probably what Liz wanted. Alice just stayed there, feeling the paint dry. And she was actually beginning to drool a bit. After a few minutes, Liz figured she had tortured her young puppy long enough. \n\n\"Here girl!\" she said at last. \"C'mere and show your Mistress what that little doggie-tongue of yours is good for.\" Liz spread her legs wide as Alice crawled between them and immediately began running her tongue up and down Liz's slit. \"Lap it like a proper dog should,\" Liz grunted, and Alice spread her tongue wide and started going from bottom to top over and over again. Alice knew this drill fairly well. She would have to get Liz off once like this, and then her Mistress might let her do it again, except a little more free-style. Not that she minded that much. She loved the feeling of that pretty sex-box parting before her little pink tongue and the feeling of Liz's nether lips against the lips of Alice's mouth. Alice licked and licked and then licked some more until she finally got Liz off. Alice saw her Mistress's body twitch and felt the warm girl-cum seeping out of her box and onto Alice's waiting tongue. Alice never got tired of the taste. It meant that she had been a good girl to her owner.\n\n\"Sweet Bitch! You know, just because it's your birthday, I'm not going to make you work for your treat tonight. Middle of the room, show position,\" she commanded. Liz put on her harness and strap-on then knelt behind the waiting Alice. \"Now you know the rules. What do you say?\"\n\nAlice glanced back over her shoulder with a lustful expression. \"Thank you for letting me lick your pussy and helping you to cum. Please fuck me!\" \n\nBefore starting, Liz reached down and attached a leash to Alice's collar. Then she grabbed a firm hold of the other end of the leash and wrapped it around her hand until it was taut. She positioned the head of the dildo at Alice's opening and, using only the leash for leverage, thrust inside. The pleasure centers in Alice's brain went into overdrive. With the dog-tail butt plug in place, the eight inches of latex dong in her pussy seemed much bigger than usual. She actually whimpered a little as Liz pumped away at her cunt. Liz even played with that tail a bit, pulling on it just enough for Alice to feel it but not hard enough to pull it out. Alice was feeling delightfully stretched in both her lower openings, and made herself a mental note to do something nice for her Mistress the next time she got the chance.\n\n\"You're such a naughty, slutty little Bitch, aren't you?\" Liz asked pulling a bit on the leash. \"You're almost always in heat, aren't you? Well, we're going have to take a little bit of vinegar out of you. I think I'm going to have to fuck you until you can't move anymore. I don't want you humping my leg or the furniture anymore.\" \n\nAlice grinned. 'I only did that once,' she thought to herself, 'and she's never going to let me forget it.' Alice didn't have much time to ponder the idea as she felt an orgasm building. \"Mistress, may I cum? Please let me cum on your big cock!\"\n\n\"Well, when you ask so nicely . . .\" Liz cooed. She upped her tempo while increasing her handling of the butt plug. It wasn't long before Alice's body froze, her back arched and she felt her juices trickling down her legs. She was gasping when her body finally came down from its sexual high.\n\n\"Thank you for letting me cum,\" she whispered, trying with all her might to NOT collapse onto the floor. \n\n\"You're welcome. But if you think that's it for the evening, you are SADLY mistaken. Stiffen up those front legs,\" she ordered. \"Show position.\"\n\nAlice struggled to maintain her posture as Liz laid into her again, thrusting the dildo into Alice's warm and willing body over and over again. Liz fucked her Bitch to another orgasm, and then another. Alice was lucky her brain still worked enough to thank her Mistress for each climax. But after the third set of pussy spasms, she knew she wouldn't be able to keep her arms straight anymore.",
        "\"Mistress,\" she panted, \"I'm sorry . . . I can't . . .\"\n\n\"Shh,\" Liz whispered. It's okay. I just have one more task for you. Sit!\"\n\nSitting back on her heels let Alice recuperate for a moment. Then she felt her hands being cuffed behind her. 'I'm so tired,' she thought to herself. Liz had been fucking her for close to an hour. Then something strange happened. She looked down and saw Liz hooking the harness up to Alice's body. Then Liz lay down in front of Alice's kneeling form and scooted forward until the tip of the dildo was positioned at the entrance of Liz's pussy. \n\n\"Your final present,\" started Liz, \"is that you get to be a boy-dog tonight.\" She used the leash to pull Alice down to her and allowed the strap-on to slide into her body. With her hands bound behind her, Alice was unable to do anything but lie on her girlfriend and hump with her hips.\n\nAlice was a little taken aback. In all the time she and Liz had been together, Alice had NEVER entered Liz like this. Normally, the person with the dildo was the dominant one. They were the one \"taking\" the other. This wasn't what Alice was used to, as she \"belonged\" to Liz. The collar was still on.\n\n\"It's time to please your Mistress,\" Liz said as Alice lay on top of her. Liz wrapped the leash a few more times around her fist, holding Alice's face close to her own. \"Hump with your hips like a good dog,\" she whispered into Alice's ear. Alice started grinding her hips in small circles before making a series of short thrusts with her hips. It was comforting to hear Liz's words; it meant that Liz was still in control. Alice was just a sexual tool. But something in Liz's face let the younger know how much her lover cared. Alice was allowed to rest her head on Liz's chest as she thrust with her hips. She knew that her body paint was rubbing off onto Liz, but she was past caring. All she wanted was to please her lover. And it took a while, but she was able to bring Liz to another orgasm. She wished she could have done it with her tongue. She knew how much Liz like her skills at cunnilingus, but this is what Liz had wanted. But out of the blue, Alice was glad that this had happened. She was lying on her lover, feeling her body tremble and twitch beneath her. It was as if she was experiencing the ecstasy right along with her girlfriend . . . her lover . . . her Mistress. \n\nShe felt Liz playing with her hair. \"Thank you for letting me fuck you,\" she whispered. Then she felt Liz unbuckling the collar, and then the pressure around her neck was gone. Liz grabbed her head and kissed her on the lips.\n\n\"Thank you . . .\" she said before a long, wet kiss, \". . . for being with me.\"\n\nAlice's face broke out into a perfect, beautiful and silly grin. She was sweaty, tired and had a slight glaze across her eyes, but she was happy. Because she was in love. She was tied up and covered in paint that made her look like a dog, but she had loved every moment of what had just happened. \n\n\"You're welcome,\" she whispered. The two girls stared into each other's eyes for a moment before breaking out laughing. Liz kissed Alice again before squeezing out, uncuffing her and helping the exhausted young woman to the shower. The two cleaned each other up before curling up in bed. Liz wrapped her arm around Alice's body and cuddled up in a spoon position. How many times had Alice woken up and seen Heather spooning Laurie in exactly this manner. 'This is what it's supposed to look like,' she thought. 'This is perfect.'\n\n-------------------- ----------------------------\n\nAcross town, at an all-night diner . . .\n\n-------------------- ----------------------------\n\nSince leaving the carnival, Laurie, Heather and Jenny had been sitting in a corner booth of a hole-in-the-wall diner, eating and laughing and talking shop. The whole band had been discussing which two songs they wanted to play if they passed their audition to get into Battle of the Bands. So far, \"The Itch\" and \"Lost in Texas\" were the front-runners in the voting. \n\nAll evening, Heather and Laurie had been hanging on each other, kissing and nuzzling. Heather glanced over at one point and saw Jenny watching them intently. When Jenny realized she had been caught staring, she blushed and glanced away.\n\n\"What's up?\" Heather said. Laurie looked confused. Heather kissed her quickly, making her smile. \"Not you, silly girl. I was talking to Jenny.\" Both girls turned to look at their friend.\n\n\"Sorry. You two look so TOTALLY awesome together!\"\n\n\"Well,\" Laurie said as she snuggled into the crook of Heather's arm, \"you and Mike are pretty awesome too.\"\n\nJenny just smiled, but a blind man could have seen that the smile was forced. Suddenly, both of the other two girls were on alert. Surviving a major threat to their relationship had made them very sensitive to signs of discontent.\n\n\"I hate repeating myself,\" started Heather, \"but what's up? Everything good between you and your man-servant?\" That got Jenny to chuckle. 'Man-servant' was Heather's affectionate pet name for the only male who was a full time member of their crew.\n\n\"Things are . . . fine.\"\n\n\"Spoken with the enthusiasm of the last person at the table who gets stuck with the check. C'mon. Spill it.\"\n\nJenny sighed. \"I overheard Mike talking with his best friend the other day. He'd left the window open and I heard him as I was coming up the walk. He's . . .\"\n\n\"He's dumping you?!?\" said Laurie as she leaned forward and her eyes shot open. \"How . . .\"\n\n\"Actually, I think he's going to ask me to marry him.\"\n\nLaurie looked completely perplexed. Heather had an idea what the problem might be, but wanted to give Jenny a chance to speak.\n\n\"And . . . I don't know if I want to say yes.\" She blushed. Everyone was really fond of Mike, so she was afraid that her refusal might alienate her from the group.\n\n\"But . . .\" Laurie was confused. \"Don't you love him? You guys always seem so happy together.\"\n\n\"I do love him. I . . . I'm just not sure if I love him enough to want to marry him. And I'm sure I don't want to commit to that right now. I mean, we're like still in school. And with the band getting going and everything . . .\"\n\n\"Jenny, don't let the band get in the way of your life,\" Heather said cautiously.\n\n\"What if I want the band to BE my life? Mike doesn't deserve to be like a second fiddle.\"\n\n\"Don't you mean 'second wheel?'\" Laurie asked.\n\nHeather kissed her on the nose. \"No, she was right. It's 'second fiddle.' You're thinking of 'fifth wheel.'\"\n\n\"Is there a 'fourth something-or-other' in there?\"\n\n\"Not that I'm aware of.\" Heather turned back to Jenny. \"Listen, you're putting the cart in front of the horse here,\" she said. Then she turned back to Laurie. \"Just trust me,\" she said just as Laurie started to open her mouth. \"That was the correct turn-of-phrase.\" Back to Jenny. \"First, are you sure he's planning on asking soon?\" Jenny shook her head. \"And are you sure that you're not ready to get married?\" Jenny nodded. \"Then calm down. Don't go creating problems for yourself. He may want to wait a while before he does it and if you still feel this way, you know what your answer would have to be. I think Mike deserves the truth.\"\n\n\"I know. I just don't want to hurt him or anything. Hell, I'm not even sure that he ISN'T the guy for me. It's just . . . my mom and dad were high-school sweethearts. Both my sisters married the first people they ever slept with. One of them is still married. And now I talk to them, and they're like so . . . Laurie, remember when I talk to you on the beach after . . .\" Jenny looked embarrassed. \n\n\"It's okay,\" Heather said, holding Laurie close. \"We made peace with each other about what happened.\" Laurie snuggled a little closer.\n\n\"Sorry. After your fight, I told you that my life was like . . .\"\n\n\"Medium,\" finished Laurie. \"Yeah, I remember.\"\n\n\"I didn't want to be like the rest of my family. I want to the one person in my family who lives a little before they settle down. These are like the days were supposed to be talking about for the rest of our lives. I want to get wild and experiment and . . .\" Suddenly, Jennifer shut down. Her face had turned a bright crimson. \n\nHeather narrowed her eyes and stared at the young woman. \"Jennifer . . . What do you mean by 'experiment?' I assume you aren't just talking about drinking, partying and playing in a rock'n'roll band, are you?\" She let out a sharp laugh as Jenny gently shook her head. \"What the heck is going on with this group? Ever since the ranch, there seems to be this weird trickle-down effect going on!\"\n\nLaurie just stared at Heather confusedly.\n\nHeather looked back. \"I think what Jenny is saying, or isn't saying, is that she might be interested in participating in some forbidden love.\"\n\nLaurie stared at her. \"Anal?\"\n\nJenny spewed the water she was drinking out her nose.\n\nHeather tried not to laugh. She failed. \"No.\"\n\n\"Oral? I thought they did that . . . Oh!\" The lights finally turned on in Laurie's head. She looked over at Jenny with wide eyes. \"Oh!\"\n\n\"And now that Laurie is all caught up,\" Heather said. \"Jenny . . . Damn, I don't even know where to start. Are you sure? I mean, are you saying that you might be bisexual or . . . Wait, when I asked you if you were gay that one night at O'Malleys, you said 'No.' Did you just change your mind or . . . \"\n\n\"I don't know if this counts,\" Jenny started to explain. \"I mean, I can't see myself living the rest of my life with a woman. But I've always been just as fascinated by women's bodies as men's . . .\"\n\n\"That's not that unusual,\" interrupted Heather.\n\n\"How about . . . well, masturbating while thinking about having sex with a woman?\"\n\n\"That's a bit more unusual.\"\n\n\"How about enjoying lesbian porn?\"\n\n\"Okay, I think I get the point,\" Heather said as she rested her eyes. 'Some gays are able to detect other homosexuals with their gay-dar,' she thought. 'I have a lesbian gravitational field.'\n\n\"I still see myself marrying a guy and settling down with a guy and having kids with . . .\"\n\n\"A guy?\" Laurie said, happy to finally get involved in the discussion, and looking for all the world like she had just solved the most complicated riddle in the world.\n\n\"Good girl!\" Heather said. Laurie stuck her tongue out at her girlfriend. Heather continued, \"So, did you have anyone particular in mind for . . .\"\n\n\"No! Sorry, I wasn't implying that I want to have sex with you. Or Laurie. Not that there's anything wrong with . . . Shit!\" Jenny paused to collect her thoughts.\n\nHeather was snickering. Jenny was sounding just like Laurie.\n\nJenny seemed to have composed herself. \"I wasn't really planning it. I'm not sure I'd even ever go through with it. I just . . . I just want to . . .\"\n\n\"You want to have that option open without losing what you already have.\" Heather sighed. \"Jenny, you can't always have your cake and eat it too. Have you told Mike about this? I mean, there are a lot of guys who would love to be involved in a threesome like that, or might like to watch their girlfriend with another woman. Again, being honest with him might make all the difference. And the sooner you do it, the better it will be. Right now, all he's doing is thinking about it. Would you rather wait until he's actually bought a ring?\" She paused, letting that sink into Jenny's head. \"Are there any other things you want to do that we should know about?\"\n\nJenny blushed. \"I'd like to go on a real road trip. You know, a really long one to someplace really cool. And maybe try and tackle one of those steaks that you get for free if you eat it all. And . . .\"\n\nHeather just tuned out for a moment. 'What the hell does this all mean? Please God, let Mary still be straight!' she thought.\n\n--------------------- ------------------\n\nLate in the month of May . . .\n\n--------------------- ------------------\n\nThe tension in the air was as thick as pea soup. Almost a week earlier, the band had auditioned to be in the Battle of the Bands contest. After the catcalls and whistles for the all-girl band had died down, the five young women had played their hearts out. Both their songs \"Lost in Texas\" and \"The Itch\" were upbeat rock'n'roll songs that got great crowd reactions, and the band known as Lost in Texas had earned their spot. In just a few days, they would be competing for an opportunity to open for one of the greatest rock bands in history, the Eagles, when that group's tour came through the area. One day, twenty bands, five songs apiece . . . just a few days until the chance of a lifetime.\n\nAll the girls that worked at O'Malley's had given their two weeks notice at the end of the previous month. All of them had jobs waiting down on the ranch after the contest, and if providence provided, they would be heading back early to hit the local music circuit in preparation for their date with destiny. They liked the restaurant where they had worked, so they had stayed on until their manager had found replacements for them. He had once had dreams of being a rock star himself, so he wished them luck with a full heart. \n\nBut as if the anticipation of the contest wasn't enough, today was the day that the first wave of their friends arrived in town. Jane, Freddie and Michelle had checked into their hotel and were headed over to the restaurant to meet the entire band. Alice's father, Laurie's father, Jenny's parents and Mary's mom were all arriving the next day. But the scary part was that Michelle and Liz were about to be in arm's length of each other for the first time. Both women had promised Alice that they wouldn't start a fight or anything, which was a relief. Heather was the only other girl there who knew how to fight, and she knew she didn't have a snowball's chance in hell of breaking those two bulls up if they decided to scrap.\n\nWhen the three women from the ranch showed up, there was a tense moment when Liz and Michelle locked eyes. They had never met or even spoken directly, but they knew who the other was somehow. Alice kept a tight grip on Liz's hand while Jane and Freddie flanked the muscular cowgirl. As long as they stayed between her and her adversary, then nothing would happen. Even when angry, nothing would make Michelle hurt either of her two lovers. \n\nThe group finally sat down and started enjoying their meal. Neither Liz nor Michelle spoke, but everyone else was determined to have a good time. Jenny just stared at Jane for five minutes before the matriarch of the clan told her to take a picture because it would last longer. Jenny had blushed. She had heard so much about this woman, but none of the descriptions of her did the woman justice. Once Jenny got talking, she almost couldn't shut up. Jane listened with infinite patience to the young woman jabber about anything. She was used to that. Heather just stared at the two, smiling a bit. Jenny and Mike had discussed Jenny's discovery of her boyfriend's matrimonial plans and of her own reservations. Bless his heart, Mike had actually been more than understanding, and was quite appreciative that she been so forthcoming. Their relationship actually seemed even more solid than before. Jenny had learned from Laurie's mistake. She knew what happened when you kept secrets from someone you cared about. That made Heather glance over at her own girlfriend, who was chatting amiably away with Mary about the prospect of matching outfits for the contest. Laurie was in favor of the idea, while Mary was making that \"gagging\" face that indicated she wasn't at all pleased with the idea. Heather was pretty sure Laurie was going to lose this argument. Laurie seemed to realize she was being watched, and turned her face to give Heather a kiss and a smile. Alice was talking with Freddie about the new puppies they had gotten down on the ranch: two mutts and two purebred Rottweillers. Alice loved dogs and couldn't wait to see them. Michelle and Liz just kept staring at each other.\n\nThey had been chatting for half-an-hour before anyone came by to get their food orders. None of them minded, since they were interested in conversing as much as anything else. But as the waitress asked Liz what she wanted, the tall girl asked for a burger, then looked past Heather to someone standing behind her.\n\n\"Did you want anything Grandpa?\" she asked with a grin.\n\nHeather heard a familiar voice from behind her. \"A burger sounds good for me too.\"\n\nHeather jumped up and spun around. \"Mr. Price?\" The dark-haired siren bowled her own girlfriend out of the way in order to get to her longtime mentor and give him a big hug. \"I didn't know you were coming!\" Then she glanced shrewdly at Liz. \"Which was probably the point.\"\n\nLiz shrugged, still grinning.\n\n\"You didn't think I would miss my most talented pupil's long overdue debut, did you?\" Heather just hugged the gray-haired old man again. \n\n\"I'm glad you made it,\" she whispered. Mr. Price had been the closest thing she had to real family in the years before she had become part of this new, somewhat odd family down on the ranch almost a year ago. The group cleared a seat for the aged gentleman next to his granddaughter, and the conversations began all over again. Mr. Price grilled his prot\u00e9g\u00e9 about her training and music, which Heather was delighted to talk about. If it hadn't been for Mr. Price taking a chance by training a young teenager born to a couple of alcoholics with no money, none of them would be sitting there that day. Even Liz and Michelle loosened up a bit and talked with the people around them, though they shot glances at one another quite often. Alice wasn't happy about it, but there wasn't much she could do about it right then and there. Besides, she had one other thing she had to do that night.\n\nEveryone had finished their meals and deserts, and Jane had sneakily picked up the check when no one else was paying attention. Liz motioned towards Heather with her head, and Alice reached under the table to grab the package she had been hiding. Heather was confused as Alice wandered around the table and put a nicely wrapped box on the table in front of her.\n\n\"What . . .\"\n\n\"Just open it.\" Heather started to unwrap the gift as Alice continued. \"I had to get your measurements from Laurie to do the alterations, but luckily she has them memorized. I know it's not your normal style, but . . .\"\n\nHeather had finished unwrapping and had opened the box. It was a little more risqu\u00e9 than the last time she had seen it after Alice had taken up the hem a bit and put slits in the sides, but for Heather there was no mistaking the garment. It was that blue dress Mr. Price had initially made for her when she had entered her high school talent show. Everyone was staring at her as she pulled the dress out of the box and unfolded it, running her hands over the fabric. Heather's face was somewhat difficult to read, almost as if she were in shock. \n\n\"I . . . I had Mr. Price send it to Elizabeth and I've been working on it for a month . . . trying to get it to fit.\" Alice was a little perplexed. She wasn't sure what she had been expecting, but this wasn't it. Heather seemed to be focused on a patch of blue just below the bust-line. 'Was that where the egg hit her?' Alice wondered. 'I wondered how long she scrubbed at that spot, trying to get the dress clean. That dress was the only nice thing anyone ever gave her. Then some jock-asshole had to go and embarrass her in front of the entire school.'\n\nWithout warning, Heather stood and, with dress in hand, gave Alice a hug that took the young girl's breath away. And Heather was doing something that Alice had NEVER seen her do before. Heather was actually crying. Even when she had argued with Laurie or been reminded of ugly things from her past or had her world-view shaken, the dark-haired girl had kept the tears in check. Now, presented with this simple blue dress, the unshakeable girl was actually crying. ",
        "Alice wrapped her arms around her friend. She thought that maybe . . . just maybe . . . that she understood. Everyone in the band had been thinking about the upcoming contest as an opportunity. Heather had just been reminded that to her, it was about something more. For Heather, it was all about redemption. It was about proving to a bunch of needlessly cruel high-school kids from five years earlier that they hadn't beaten Heather. Heather was going to go on stage in just a few days and get a measure of revenge for a poor and humiliated fifteen-year-old girl.\n\nLaurie stood up and went to hug her girlfriend who was trying desperately to compose herself. Then Jenny and Mary got up and joined in, followed by just about everyone else. Even Liz and Michelle got in on the action, though they took great care not to actually touch each other. Then Alice heard a very light whisper in her ear.\n\n\"Thank you,\" Heather said softly. All Alice could do in response is hold her friend even tighter.\n\n-------------- -----------------\n\nA little while later . . .\n\n-------------- -----------------\n\nEveryone was in the process of saying their goodnights before going back to their respective places of rest. Heather had composed herself and stopped crying and looked as genuinely happy as anyone could ever remember seeing her. Laurie had been holding her hand since the group hug had broken up. She had seen a sensitive side to her beautiful girlfriend, and she found herself even more drawn to the girl. She could hardly wait to get Heather home. She wrapped her arms are her lover's neck and pressed her lips against Heather's. Then she felt Heather's hands gripping her ass. \"Hey naughty girl,\" she giggled, \"save it for when we get back to the dorm.\" They actually broke it up when Mr. Price came over to give his prot\u00e9g\u00e9 a hug. Making out in front of a man in his sixties would have been a little creepy.\n\nJane and Freddie were chatting with Mary and Jenny. Freddie was spending an inordinate amount of time checking out Jenny's nicely rounded posterior. The three women from the ranch had been somewhat more hesitant to stray away from their bedmates since Jane's surgery, but Laurie and Heather had both figured that the women had probably decided on the moderation rather than elimination of \"extracurricular activities.\" And with Freddie being an ass-fan, was naturally attracted to Jenny's lush butt. Jenny was flattered by the attention, and had to remind herself that she couldn't do anything unless Mike approved.\n\nLiz was standing nearby as Alice said goodnight to Michelle. The young woman was happy that the two women had managed to avoid fisticuffs for several hours, but didn't want to push her luck. She had so hoped the two might cool off, but maybe that had been a bit much to hope for.\n\n\"You did a good thing tonight, young 'un. I'm impressed. How long was you plannin' that again?\"\n\n\"A couple months. Ever since we got back from spring break.\"\n\n\"Speakin' of which, when are we gonna get to see the pictures of everythin' y'all did down there?\"\n\nAlice glanced downward. They hadn't yet informed their friends from the ranch as to the details of their Fort Lauderdale excursion. Heather and Laurie had wanted to work everything out for themselves before letting their friends know what had transpired.\n\n\"Whatever is the matter child?\" said Jane, who had just wandered up. Both she and Michelle had noticed Alice's sudden change in expression.\n\n\"Things got a little weird down there. I think . . .\"\n\nAt that point Laurie and Heather wandered over. It was Laurie who spoke, sending a bashful glance sideways at her girlfriend. \"It would be better if I explained it,\" she said quietly.\n\nJane looked the young woman over. She knew there was a story there. Jane had been the first person to truly befriend the blonde bombshell, and as such had taken a vested interested in her social and intellectual development over the last year. \"Very well,\" she murmured. \"Would you like to return with us to the hotel? The night isn't too far gone, and it has been too long since we talked.\"\n\nLaurie glanced over at Heather who nodded. \"Sure,\" she said. \"Jenny, Mary . . . either of you interested in hanging out at the hotel for a bit? Mr. Price?\"\n\nMr. Price politely declined the offer. He claimed he wasn't as young as he used to be and that the flight had tired him greatly. Mary had to go \"meet\" a couple of friends, meaning she was on her way to screw whoever the hell it was that she dating those days and that he was probably bringing another guy. Heather had to remind herself, 'At least Mary is an HONEST slut.' Jenny ran back inside to talk to Mike. When she came out, her face was a little flushed. But she quickly said that everything was okay, and that she really wasn't tired yet anyway. \n\nMeanwhile, Michelle felt a tap on her shoulder. It was Liz.\n\n\"Listen,\" said Liz slowly and deliberately. Then she sighed. \"I think Alice would really appreciate it if you dropped by the apartment for a while. I won't pretend I'm thrilled about the idea, but . . .\"\n\nMichelle looked the woman over. Then Jane whispered into her ear.\n\n\"Go ahead. Take the car. We'll get a ride to the hotel with the girls.\"\n\nThen Alice wandered up and batted her big, beautiful eyes. \"Please?\"\n\nMichelle took the keys to the SUV. \"If you say so,\" she said to Alice while locking gazes with Liz. \"Let's go.\"\n\n------------------- ----------------\n\nAt Liz's apartment . . .\n\n------------------- ----------------\n\nThe tentative peace barely made it past the threshold of the apartment door. The three women stood around making strained conversation. Then Liz pulled Alice over and wrapped her arm around the girl's shoulder, holding her almost uncomfortably tight. The entire time, her eyes were on Michelle. Michelle noticed the gesture and made a somewhat acidic comment about Liz \"all ready to make Alice her prisoner,\" and things degenerated from there. Michelle accused Liz of trying to control Alice and isolate her from Michelle. Liz bitterly spoke of Michelle trying to break up a relationship she didn't even understand due to jealousy. \n\nAlice kept telling them both to be calm, then to shut up. This altercation was causing her almost physical pain. She so badly wanted these two women to get along, but they weren't even listening to her anymore. Finally she stormed off into the main bedroom and slammed the door behind her.\n\nLiz went towards the door while Michelle put her head between her hands. Finally the two met gazes again. \"See what you did?!?\" they said simultaneously. \"Me?\" they said together. \"You . . .\"\n\nLiz was waiving her finger angrily as if she wanted to point at something but wasn't sure what. She went over to the door and tried to coax Alice into unlocking it. Michelle debated just leaving before this escalated even further. Liz finally turned around when she realized that Alice wasn't going to respond and confronted Michelle again. \n\n\"What the fuck is your problem? Why are you so fucking bound and determined to make her life miserable?\"\n\n\"Me?\" said Michelle through gritted teeth. \"Why are you trying so fuckin' hard to keep me out of her life? I'm responsible for that girl and I ain't goin' nowhere no matter how bad you want me gone. The way I see it, you're tryin' to get yer jollies while takin' advantage of a girl who was lookin' to give her heart to someone.\"\n\n\"Why not me?!? I'm doing everything I can to make her happy, and you want to take that away because you don't think anyone will ever be good enough. You just can't let go, and it's killing you! She isn't yours to keep!\"\n\n\"What, so she's yours to enslave whenever you get an itch to scratch? I've got have a mind to . . .\"\n\n\"SHUT UP! Both of you!\" Alice had emerged from the bedroom. In one hand she was holding her collar, her eyes were bloodshot and she was completely nude.\n\n\"Uhm, sweetie?\" started Liz. \"What are you . . .\"\n\n\"I said shut up! I get to talk now and you two can just listen! I've had as much of this as I'm going to take. You two keeping yelling at each other about what's best for me, so why don't you ask me? Everyone kept telling me that I was going to have to make my own decisions, but once I made them, no one would listen.\" She looked between the two women, both of whom found something less guilt inducing to stare at. Alice continued softly, \"You two changed my life so much.\" She turned to Liz. \"You introduced me to this . . . this lifestyle that I had never even imagined before. You were so careful and so patient, and I never felt that I wasn't safe. But you have to realize that all those things apply to Michelle too.\" Alice glanced over at the muscular cowgirl, but kept speaking to her girlfriend. \"If it weren't for Michelle, I wouldn't be here right now. When we got lost that day, I was a scared little girl in a world of denial. I had so many feelings that didn't make any sense. Michelle saw right through me. I've been used and thrown away once in my life,\" she said, a tear coming to her eye, \"so I know how special it is to be with someone you trust. Michelle helped me understand my feelings towards women, and actually helped me be happy with who I was. I had never really been happy in my own skin before.\" Alice looked right back at Liz. \"So yes, she will always have a place in my heart. But she has Jane and Freddie, and I have you. And I like it that way. Liz, the only thing that could make me not want to be with you . . . is you. You told me once that you didn't want to control every aspect of my life. Michelle is one of those things that you don't get to control, and I promise you that you will lose me if you try.\"\n\nLiz noticeably blanched at that. She realized that she had never really understood the devotion her girlfriend had for this muscular woman standing across from her. Michelle had taken Alice's virginity, helped her come to terms with her sexuality and been a source of constant support for eight months before Liz even met the young woman. Who was she to think she could tell Alice that she had to leave that part of her life behind?\n\nAlice turned to Michelle. \"When I was . . . with you . . . that first time, I knew what you wanted, but you let me make the decision. You trusted that I was accepting you with an open heart, even though I barely knew you. You made me feel so perfect and so safe. You opened my eyes to a whole new world, and I knew it was where I belonged, even if I didn't know quite what that meant. But Liz has done that too. You know how scared I was. I was scared about dealing with my family, dealing with the changes in my life, and you know how terrified I was about finding someone to have in my life. Especially after what happened with Jamie,\" Alice said. Both Liz and Michelle scowled at the mention of that name. Both women not-so-secretly wished they could wrap their hands around that redhead's neck.\n\nAlice noticed both women tensing up, and realized she probably shouldn't have brought Jamie up. \"Michelle, Liz took so many of those fears away, even the ones that you couldn't. I've already told you that I trusted her. And this . . . thing we do means that I don't have to be scared about . . . well, sex. I know that may sound stupid to both of you, since you have so much more experience than I do, but sex scared me. I mean, Michelle helped me realize who I wanted to have sex with and how wonderful it could feel, but I also knew that not everyone I met would be as nice as she was. I was afraid I wouldn't be able to please my partner or that I would be clumsy. I hate bringing her name up again, but after Jamie, my biggest problem was that I thought I had done something wrong . . . that I hadn't been good enough somehow. I don't worry about that anymore. Liz worries about it for me.\" Her eyes actually lit up for a moment as she looked at Michelle. \"It feels so good to not have to make any decisions about something. Everything else has been so much clearer. You believed in me once . . . believed that I understood what I was doing. Believe in me now,\" she implored. \n\nMichelle felt like a hypocrite. Alice had indeed been a girl living in denial. Michelle had made the foolish assumption that Alice had only been denying one thing when in fact she had been hiding from a number of insecurities and fears. Michelle trusted Alice, but she hadn't been listening. She had been so worried about her young friend getting hurt again that she couldn't quite accept that Liz WASN'T hurting her. \n\n\"Alice?\" said Liz.\n\n\"What?!?\" Alice shouted.\n\n\"Why are you . . . naked?\"\n\nAlice stopped. She had forgotten about that part of her plan. \"It seems that I need to do something extreme to get through to you two.\" She looked at Michelle. \"I think that the only way to get you to realize that this 'lifestyle' is something I want is to see it for yourself.\" Michelle's eyes opened wide. Alice turned back to Liz. \"And you're going to have to accept that you might just have to share my affections with Michelle sometimes. Not always like this, but . . . oh, you know what I mean.\" She grabbed the collar in both hands. \"I'm going to put this on. Then one of two things is going to happen. Either you two will keep arguing until I don't want to have anything to do with either you, or we'll play the game and maybe actually have some fun tonight.\" Alice's hands were trembling as she wrapped the collar around her slender neck and fumbled with the buckle. \n\nLiz was absolutely at a loss as to what to do. She wasn't sure if this violated the \"doesn't happen when one of us is angry\" clause of their relationship. But Alice knew the rules. If the collar went on . . . With a faint click, the collar was on. Alice's facial expression changed to one of longing. Despite herself, Liz began to look lustful. Only Michelle still looked confused. Liz needed to buy herself a few minutes.\n\n\"What are you doing standing on two legs like a person? Show position!\" she commanded, trying to get past the cracking of her voice. Alice slowly got down on all fours and stiffened her spine while making sure her hands and legs were planted solidly at shoulder-width apart. \"Now I'm going into the next room with this other woman for a moment. I want you to stay right here until Mistress gets back. If you move, you will be punished.\" Alice bit her bottom lip sexily as she watched Liz usher Michelle into the bedroom and close the door behind them.\n\n\"She's kiddin', right?\" asked Michelle.\n\n\"Oh no,\" returned Liz as she began pacing the room. \"She's dead serious. She can be a . . .\" Liz paused, trying to think of how to phrase what she was thinking.\n\n\"A stubborn little mule?\" Michelle finished. \"Gawd, once that gal gets a thought in her head, good or bad, she just won't let go of it.\" Michelle seemed to be talking to herself as much as to Liz. \"When she came down over Christmas, she was still a might broken up about that Jamie bitch. She had it stuck in her head that she should be in love right away and, try as I might, I couldn't talk her out of it. Then she meets you, and it seemed like an answer to all her prayers. It was just too convenient.\" \n\n\"I DID get to know her first,\" Liz said, a bit defensively. She was also grabbing some of Alice's favorite toys and putting them in a bag. She knew that if she kept Alice waiting, the young girl might make good on her promise to leave.\n\n\"I know ya did. I just thought it was too soon.\" Michelle paused. \"Maybe I was just thinkin' that it was too soon for her not to need me anymore.\"\n\nLiz stopped in her tracks. \"Not need you? Hell, she can't stop talking about you! Every day, I get to hear about what happened on the ranch. I don't know if I can ever give her something like 'riding along side the buffalo.' Why couldn't you be like most peoples' first sexual experience and just leave? Why did you have to be a decent person who actually gave a damn about the person she had been with? You got to be her first, which meant you got to have something of hers that I'll never have. And even if she and I were to spend the rest of our lives together, I'll never know what it was like to be there that very first time. You being in her life reminds me of that.\"\n\n\"I guess the question is, what's more important to you? The first time, or the rest of the 'times?' I got to know her for one summer. You've got the opportunity to know her for a lifetime. If you ask me, that's one hell of an opportunity.\"\n\n\"Well, I guess I'm gonna need your blessing, because she isn't going anywhere without you.\"\n\nThe two women just stood in silence for a moment. Michelle finally broke the standstill.\n\n\"I think that we may need to continue this discussion when we've got a bit more time.\" She looked towards the door. \"So, how does this work?\"\n\nLiz managed to crack a somewhat genuine smile. \"Just make yourself comfortable on the couch and enjoy the show.\"\n\nMichelle returned the smile with a big old, Texas-sized shit-eating grin. \"Do this often?\"\n\n\"Get brow-beaten by my supposedly submissive girlfriend into showing her like a dog in front of her muscle-bound ex-lover? No, this is a first. I'm going to be making up shit as I go.\"\n\nThe two women wander out into the living room. Michelle sat on the couch and tried took like she was lounging. Liz dropped the bag of goodies off behind Alice, reached into it and withdrew the leash and secured it to Alice's collar. Then Liz undid the button to her jeans. \"Sit!\" Alice sat back on her heels. The young girl's face still held some anxiety. She had done the equivalent of calling her girlfriend out, and she was hoping her gamble paid off. \"Unzip me,\" Liz said soothingly.\n\nAlice grinned and took the zipper to Liz's pants in her teeth and pulled it down. She could already detect the faint aroma of her lover's sex.\n\n\"Good Bitch,\" Liz praised as she stepped back and shirked her jeans entirely. \"But you've been naughty and aggressive tonight. What should I do with my naughty dog?\" Liz knelt beside the sitting girl and traced the line of her back all the way to her buttocks. \"Should I spank her?\" she asked before landing a solid thwack on one of those pale cheeks. Alice grunted, closing her eyes and chewing on her bottom lip.\n\nMichelle watched on with an almost surreal sense of disbelief. It didn't take a therapist to realize that Alice wasn't exactly objecting to this. That slap to her ass had turned the girl on. Michelle unbuttoned her jeans and slid her hand under the denim. 'Hell,' she thought. 'The lady said to enjoy the show.'\n\nLiz spanked Alice again, then inserted her index finger into her girlfriend's moistening cunt. She diddled the girl for a moment, then gave her several more quick, hard spanks. She wasn't sure which Alice was enjoying more, the fingering or the spanking, so she figured she would keep doing both. She looked over and saw Michelle watching, her hand in her pants. Disagreements aside, Liz had to accept that the muscular cowgirl was an attractive woman. She had unbuttoned her shirt so her other hand could stimulate one of those massive breasts. 'I wouldn't mind seeing her naked,' Liz thought. She smiled. 'Why not? But first things first . . .' She lay another series of strokes on Alice's reddening behind before inserting three finger's into the girl's box and diddling her like there was no tomorrow. She played with Alice for another three minutes like this, but stopped before the girl could climax. Alice whimpered a bit when Liz withdrew her fingers.\n\n\"Oh no you don't! You're the pet here. We have a guest here, and all you're thinking about is your own pleasure.\" Liz grabbed the leash and led Alice over to where Michelle was sitting. Liz leaned in and whispered something into the woman's ear. Michelle grinned and pushed her pants to the floor and kicked them off. Then Liz whispered something into Alice's ear that made the young girl's heart sing. \"Maybe it's time to share,\" she said. Then, a little more loudly, \"Hurry up Bitch. Our company doesn't have all night. I expect you to have her cumming on your pretty little face within ten minutes.\"",
        "With one last long, loving look towards Liz, Alice started eating Michelle's pussy. It had been a long time since her head was buried between those powerful thighs, and she had missed it. She licked the area around the slit clean before burying her tongue in the cleft. This was more than Alice had hoped for. She had originally thought that Michelle might just watch and finally realize that Alice truly enjoyed being treated like this during sex. But Liz was actually sharing her with the big cowgirl, something that Alice hadn't expected. She made a promise to herself to make it up to Liz with a lot of yummy orgasms. But first, she had to get Michelle off. She tried everything that she knew, exploring Michelle's pussy from top to bottom, inside and out. She sucked on the clit and rimmed the asshole, then just did some heavy-duty lapping. She had the big woman bordering on climax with a minute to spare. Then Liz grabbed the back of Alice's head and pressed it hard against Michelle's crotch, and Michelle started humping against the young girl's mouth. Michelle let loose with a mind-numbing orgasm, trembling as she coated Alice's face with sticky sweetness. Luckily, Liz let Alice's head loose before she drowned. \n\nThen Liz sat down on the sofa next to Michelle. She pulled on the leash, forcing Alice to take up a kneeling position in front of her. \"Now me,\" she instructed wickedly. \"And make it good. You have ten minutes.\" \n\nAlice went to work, loving every delicious lick. She felt especially naughty, sticking a tongue covered with Michelle's juices into Liz's pussy. This time, Michelle reached over and held Alice's head in place. Alice knew every sweet spot in and around Liz's crotch, and she hit them all. She was tonguing her girlfriend's clit when she finally came, and Alice slurped up as much as she could.\n\nIt never ceased to amaze Liz just how good her girlfriend's lips felt when they kissed her down there. She told Alice to sit back and Alice obeyed. The girl's face was glistening from the nose down with the cum of two different women. 'Poor Alice,' Liz thought. 'And you're not even done yet.' She smiled. \"Now, I think our guest might like seconds.\" Alice's eyes lit up, and she crawled back between the cowgirl's legs. As she started to eat, Liz knelt behind her. \"And while you're pleasing her, I'm going to finish your punishment.\" As Alice devoured Michelle's pussy, Liz started spanking the girl again. Each swat was followed by some serious finger play. But again, she stopped short of getting Alice off. Liz had learned that the spanking wasn't really punishment for her girlfriend, but denial of release was exquisite torture. Alice noticeably whimpered, her mouth still buried in Michelle's cunt. Liz reached under the girl's body and started pulling and twisting the girl's nipples. Alice started groaning like a banshee. Liz knew that this would turn the girl on, but by itself wasn't enough to push her lover over the edge. She knew that when she finally allowed Alice to climax, she was going to cum like an avalanche. While the breast-play was going on, Michelle reached orgasm again. Liz got a good view of the event this time. When Michelle climaxed, every muscle in her body stood out, and that was A LOT of muscles. Liz had met some tough chicks before, but none of them measured up to this woman. She was suddenly glad that things hadn't broken down into a real fight. Liz might have landed a number of shots, but Michelle probably only needed to land one. \n\nAs Michelle's body started to relax, Liz sat on the sofa next to her and ordered Alice to go down on her a second time. Alice was so desperate for orgasm that her face had gone wild. She dove into Liz's crotch with the firm intention of earning her way to Happyville sometime soon. Michelle got behind Alice and cupped her crotch with one hand. She had taken a cue from Liz, and she knew had to tease a woman. Alice tried bucking her hips against Michelle's hand and fingers, but Michelle always gave just enough. \n\nAlice had never been teased this long before. One thing kept running through her mind. 'If I don't get off soon, I'm killing somebody.'\n\nFinally, Liz gave Michelle a go-ahead nod, and Michelle plunged three fingers of one hand into Alice's pussy and the thumb from her other hand into Alice's ass. Alice had been in the process of sucking on Liz's inner pussy lips when this happened, and she squealed directly into Liz's crotch. It took less than a minute before Alice was begging for permission to come. Her pleas become more frantic as the inevitable closed in, and were made more difficult by the fact that she dare not shirk her oral duties. Liz smiled.\n\n\"Of course you can cum.\" Then she grabbed Alice's face and shoved it back into her crotch. Alice tried vainly to keep her tongue moving as she experienced the most intense orgasm of her young life. After a moment, she stopped even trying and just rested her face on Liz's mound as her pussy tried clamping down on Michelle's fingers. She was grunting and groaning as the aftershocks rippled through her. When they young woman's body was finally able to relax, Liz thought her girlfriend looked more content than ever before.\n\n\"You stopped,\" she pointed out as Alice raised her exhausted face. \"But we'll let it slide this time.\" Alice started to diligently lick at Liz again, but Liz stopped her. The poor girl was too tired and drained to make her continue. \"Michelle, there's a strap-on in that bag over there. Would you mind getting it out and putting it on? I think that my little Bitch would like to go for a ride.\"\n\nMichelle had that big Texas grin on her face as she rummaged through the bag. Alice's brain was in a fog. That orgasm seemed to have overridden most cognitive functions, but it sounded like Liz was asked Michelle to fuck Alice. Michelle put on the device and lay on the floor. Liz led her by the leash until she was straddling Michelle's body while in her 'Show' stance. Liz aimed the tip of the dong at Alice's pussy, then ordered her to sit. As Alice sat back on her heels, the toy slipped inside her still sensitive pussy.\n\n\"Now stay,\" Liz ordered as she fumbled with the bag behind Alice's back. First, Liz secured Alice's hands behind her back with a pair of cuffs. Then Alice felt something cold and slimy pressed against her backdoor. Liz had grabbed the eight-inch dildo, complete with handle, and was slowly inserting it into Alice's asshole. Alice's eyes shot open and all the breath in her body vacated the premises. \n\n'Oh God!' thought Alice. \n\nLiz leaned in close and whispered, but made sure it was loud enough that Michelle could hear as well. \"You wanted sharing Bitch? Prepare to get shared.\" She kept pressing the dildo inward until Alice's sphincter relaxed enough to accept the head. Then a few more inches found their way inside. And as the rest of the dildo violated Alice's backside, Michelle started pumping the strap-on into Alice's pussy. Alice was helpless to do anything, even if she wanted to. She had never been double-penetrated like this. She had once had a butt-plug in while Liz had used the strap-on in the more conventional opening, but it was nothing like this. She was getting stretched like never before, and the pressure at both openings was intense. She became intimately familiar with every ridge on either toy. Sometimes the two women would alternate thrusts, leaving one opening emptied while the other was filled. Then they would thrust together, stretching both her vaginal and anal openings at the same time. And the only thing Alice could do was accept everything they had to give her. She collapsed against Michelle's huge tits and powerful chest as the two dominating women had their way with Alice's body. \n\nShe wasn't sure how long she was trapped between them or exactly how many times they made her cum. She didn't care. She was happy. Hell, she had passed happy a long time ago. She was in heaven. The two most important people in her life development had finally been able to cooperate on something, and that 'something' was to make sure Alice was completely and utterly sexually satisfied. She was vaguely aware of her surroundings when she was finally lifted off of Michelle's body, and Liz removed the cuffs and placed her on the couch. Her collar had been removed, and then each of her two lovers ate her to one orgasm apiece. Liz never performed oral sex on Alice while the collar was on, so she had ended the game so that she could give her girlfriend a little extra thrill, even though Alice could barely remember her name at that point. Then the two women carried Alice into the bedroom. Liz got a washcloth and cleaned the cum off of Alice's face and thighs. By the time she was done, Alice was fast asleep. \n\n\"She fucks like the devil, but sleeps like an angel,\" Liz said as she tucked her girlfriend in. \"I think she may need to write a sequel to that one song she wrote about Heather and Laurie.\"\n\n\"She puts her heart into everythin' she does.\" Michelle met Liz's gaze. \"She isn't really your prisoner, is she?\"\n\nLiz smiled. \"It's more like I'm hers. I may get to call the shots in the bedroom, but everything revolves around her. Every time I think I've found her horizons, she takes another step and I'm trying to keep up. It's strange,\" she said with a laugh as she and Michelle went back out into the living room. \"When I moved out here, I was hoping Heather might be able to find me someone to hook up with. I never imagined the person I'd be spending my time with was Heather's roommate, much less that she'd be more than I could have hoped for.\"\n\n\"Do you love her?\" Michelle asked. Liz knew this was the big question.\n\n\"I know the best thing to say would be yes, but the truth is that I'm not sure. I've never been in love, so I don't know what it feels like. I do know that I'll never do anything intentionally to hurt her. I know that I enjoy every minute I get to spend with her and that I've never had as much in common with anyone else I've ever dated. I don't know if that's love, but I certainly hope so. Because I like it.\"\n\n\"Good enough,\" Michelle said as she got dressed. \"I'm not goin' to pretend I'm ever gonna understand exactly what you two do and why you do it. So if I can't understand, I guess I'll just have to trust you. And her. Mostly her.\" That got Liz to smile. She realized that the two probably would be friends someday, but it would take a little more work.\n\nLiz escorted Michelle to the door. \"Talk tomorrow?\"\n\n\"I think I can handle that,\" Michelle said. \"I'd better get back to the hotel. Regardless, we need to be really nice to Alice's dad tomorrow.\" Michelle looked like she realized something. \"And you're the one who's gonna have to do most of the explainin'. I'm just an old friend. You're her first real girlfriend.\"\n\nLiz shot her a withering glare. \"It's not too late. I can give her back.\"\n\n\"Nope. I've got my hands full with Freddie and Jane. You have fun tomorrow.\"\n\n----------------- ---------------------------------------\n\nAn hour or so earlier at the hotel room . . .\n\n----------------- ---------------------------------------\n\nFreddie and Jane were sitting on one of the beds while Laurie and Heather sat on the other, with Jenny sitting in the complimentary guest chair. Laurie had just finished explaining the fiasco that had occurred in Fort Lauderdale over spring break. She felt Heather gripping her hand the entire time, and that comforted her. She knew Jane would be disappointed, but she didn't want to withhold information from her mentor. Jane did look concerned when she heard of Laurie's escalating deception, but seemed pleased that Laurie had proven determined to make things right. \n\nFreddie kept her eyes on Heather. The girl that Freddie had known . . . the one whose car was lit on fire almost a year ago . . . never would have forgiven Laurie. But that wasn't the Heather that was sitting on the bed right now. This Heather was a lot less hostile . . . a little softer around the edges. Freddie noticed her holding Laurie's hand, letting the blonde know that Heather had forgiven her. It was Heather's edge that had made her so attractive to Freddie when she fucked her in the back of the pick-up truck so long ago. But that edge, tempered with a little silk, had made her an incredibly attractive woman. \n\nJenny just sat in the chair, wishing she could be a little more invisible. She felt completely out of place in that situation. \n\n\"So,\" said Jane at last, \"that's why we aren't getting to see vacation pictures. I suppose the most important thing is that you two worked it out. I'm proud of you for that. And Laurie, I think you've already learned your lesson. But Heather . . .\"\n\n\"What?\" she said sharply. \"I didn't . . .\"\n\n\"You have to control that temper,\" Jane said with a smile. \"Getting on a bus, traveling across several states so that you trash your dorm room and almost break your fists?\"\n\n\"But at least she didn't beat up my dad!\" said Laurie, trying to come to Heather's defense.\n\n\"Yes, not physically assaulting a United States Senator was a wise choice. No Heather, I'm not actually scolding you. You've grown up so much and I'm just impressed. But the next time you decide to get mad at someone, please try doing something less dangerous and self-destructive.\"\n\nHeather narrowed her eyes. \"You vent steam in your way, let me do it in mine.\" She would have said more, but Laurie had placed her chin on Heather's shoulder and was staring at the side of the dark-haired girl's face. Heather turned her head to inquire as to what Laurie was up to and was met with a well-placed kiss.\n\n\"You set me up you little minx,\" Heather said with a laugh, then kissed Laurie back.\n\n\"They are SO adorable,\" said Jenny, then blushed. She hadn't meant to say it so loud.\n\nFreddie looked over at her. \"Tell me about it. So,\" she said a tad too demurely, \"what's your story?\" Heather recognized the look on Freddie's face. She had seen that look . . . that predatory look. When Jane's health had returned, so had all those women's sexual appetites, and Freddie tended to be hungrier than most. \n\n\"Me?\" squeaked Jenny. \"I . . . I'm nobody.\"\n\n\"Oh no,\" said Laurie. \"Never say something like that in front of Jane.\"\n\nJane smiled slightly. She had spent a lot of time convincing Laurie that she wasn't a useless bimbo, over Laurie's own objections. She thought everyone had value.\n\nHeather also objected to the comment. \"Bullshit,\" was her less than eloquent contribution. \"You were the one who helped me track down Jamie after what she did to Alice, and I had never been anything but mean to you up until then. You've put up with all our stupid little dramas, and you're just as much a member of this band as the rest of us.\"\n\n\"No, I'm not. I'm just . . .\"\n\n\"Yes, you are. You believed in the group even when the group didn't seem to believe in itself. That matters. You're one of us now.\" Then Heather got an evil gleam in her eye. \"Hell, you want to be more like us every day.\" Jenny's eyes shot open, but she was helpless to stop Heather's progression. \"You're already wanting to try sex with women.\"\n\nLike a flash, Freddie was in Jenny's lap. \"Oh really?\" she cooed. The mega-babe was in full seek-and-devour mode now.\n\n\"Heather!\" shouted Jenny. \"I . . . I . . .\"\n\n\"What? You said you wanted to give it a shot. Laurie?\"\n\nThe blonde girl nodded while smiling wickedly. \"Sorry hon, but I heard you say it too.\" Then she started sucking on Heather's ear.\n\nJane shot withering glances at her three friends. \"Don't torture the poor girl.\" Then she turned to Jenny herself. \"Are they simply blowing smoke, or is this truly an avenue you wish to explore.\"\n\nAll the girls had learned that no amount of prodding and wheedling could get to the heart of the matter as Jane's penetrating stare and her sophisticated voice. \n\n\"This isn't an idle decision. One thing I actually find somewhat deplorable is girls who feign interest one evening only to claim 'the devil made them do it' the next.\"\n\n\"I've thought about this like a lot,\" Jenny returned. She felt like she was getting backed into a corner. \"It's something I kinda feel I sorta need to do. I've talked with my boyfriend about it and he's fine with it.\"\n\n\"Of COURSE he is,\" said Freddie. \"Show me a guy who isn't interested in seeing his girlfriend getting in on with another woman and I'll show you someone who is either blind or dead.\"\n\n\"I told him it was something that had been on my mind a lot, particularly since . . .\" Jenny blushed and looked at Heather and Laurie. The two girls were making out on the bed and paying no attention to what was going on. \"They are ALWAYS like this,\" she grumbled.\n\nJane's heart warmed when she saw Heather and Laurie together. They had already survived some trials and tribulations, which gave the older woman hope for the pair's future together. And they DID look good together. \"Are you sure he's okay with this.\"\n\n\"Actually, he sounded like totally anxious to see it. I guess that means he kinda needs to be there.\"\n\n\"Nope,\" said Freddie. She wandered over and grabbed her video camera out of the suitcase. \"This is all we need.\"\n\nJenny started at her for a moment. Then her eyes opened even wider. \"Oh! I'm sorry, I didn't mean to imply that I wanted to have sex with you . . . not that I WOULDN'T want to have sex with you . . . it's just I don't expect you to . . . Is there a good way of stopping these brain farts?\"\n\n\"Nope,\" said Laurie, her eyes still drawn towards Heather's. \"At least not that I could figure out.\" She kissed her girlfriend. \"Listen Jenny,\" she said, finally able to break away from Heather for a moment. \"If you DO decide to go through with it, I can't think of a better couple of people to explore with than these two. They are so patient and selfless and wonderful, and Jane has a tongue like an anteater! I'm serious, that thing goes on for miles and . . . what?\" Jane was blushing, and Heather and Freddie were laughing their asses off. Laurie thought over what she had just said. \"See?\" she directed towards Jenny. \"I told you there was no way of stopping those.\"\n\nJenny was squirming in her seat. She had to admit that she hadn't been able to take her eyes of Jane for most of the day. \"But they aren't . . . you know . . . with other people anymore.\"\n\n\"Says who?\" asked Freddie. Then she thought about it. \"I think that was mostly Michelle's idea, and it was mostly because we were . . .\" She paused and looked over at Jane. The matriarch of the clan had finally gotten to start growing her hair out again. The surgery scars were no longer visible, but she and Michelle had always known they were there, and they had been so afraid of losing Jane that the rest of the world seemed less important. \n\nJane got up and strode over to Freddie with a grace only a few women possessed, and kissed her young lover on the lips. With Jane, even kissing was an art form. When she pulled away, Freddie's eyes were still closed and her lips were still reaching for Jane's. \n\nJenny was wishing she had never brought the subject up. There was no way these women would be interested in her. Jane was too beautiful and Freddie was just hot. Heather was dangerously gorgeous and Laurie was voluptuous. She actually began eyeing the door, wondering if she could quietly slip out . . .\n\nJenny's fidgeting had become noticeable, breaking Freddie out of her trance and causing the girl to almost pounce into Jenny's lap. She was straddling Jenny's knees and lightly gripping both shoulders. \"Running is NOT an option,\" she purred. She caressed Jenny's cheek and traced the line of her jaw.\n\n\"Freddy! Down girl!\" Jane ordered. \"Oh who am I kidding? I have no control over her,\" she muttered to herself. \n\n\"Because I'm too damn cute,\" Freddie said, wrinkling up her nose and pursing her lips. Her curly blonde hair was hang free and reached all the way to her supermodel behind. She turned back to Jenny and captured the nervous girl's eyes.",
        "\"Jenny, the question becomes, do you want to do this? I'm always happy to 'enlighten' young women,\" Jane said huskily, \"but none of us would dream of trying to coerce you. But you should make a decision soon. Freddie seems to be looking at you like our puppies look at their rawhide chew toys, and it might shortly become difficult to pry her off of you.\"\n\nJenny gulped. She suddenly realized what a rawhide chew toy must feel like.\n\nHeather looked over at her. \"Seriously Jen, it might not be a bad idea. If you can't enjoy yourself with those two, then I don't think you CAN enjoy being with women in ANY fashion.\"\n\n\"Wait,\" Jenny said. \"What about you guys?\"\n\nHeather had grabbed Laurie by the hand and was leading her towards the door. \"I thought that it might make you uncomfortable if we . . .\"\n\n\"Stay . . . please?\" Jenny was having increased difficulty speaking as Freddie had started breathing down her neck. \"I . . . I'd like you to be here.\"\n\nFreddie gently kissed Jenny's neck. \"So are you willing to play?\" Her hands were creeping up Jenny's body.\n\n\"Yes,\" Jenny almost hissed. \n\n\"Jane, would you get the camera set up?\"\n\nJane was shaking her head and smiling as she grabbed the video camera and placed in on the nightstand, pointed at one of the beds. She looked over at Heather and Laurie. \"Why don't you two make yourselves comfortable over there.\" The two girls could almost swear that they saw Jane lick her lips as she glanced at Jenny. \"This might be a while.\"\n\n\"You know,\" Heather whispered to her girlfriend, \"for all her arguing, she's not THAT much different from Freddie.\"\n\n\"Yep,\" whispered Laurie back. Then the girl giggled. \"She just sounds cooler when she says stuff.\" Laurie licked Heather's earlobe then nibbled on it. \"So, how will WE pass the time?\" Heather spun the blonde girl around and threw her laughing back-first onto the bed. Then she lay on top of Laurie and grabbed her hands, stretching them above her head as they kissed.\n\n\"I'm sure we'll think of something,\" she murmured as she kissed her way down to Laurie's expansive cleavage.\n\nMeanwhile, Freddie had drawn a slightly-shaking Jenny to her feet and pulled her toward the other bed. She slid her hands into Jenny's back pockets as she squeezed the girl's luscious round bottom. Jane reached around from behind to start undoing the girl's pants. She peeled them downward, revealing a tiny black thong nestled firmly between those globes. With no pants to stick her hands into, Freddie grabbed a double handful of that ass. \n\n\"Sweetheart,\" Jane said to Freddie, \"I need to finish undressing the young lady, and your sticky hands are making things difficult. Why don't you get yourself undressed while I attend Jenny?\"\n\nFreddie back-flopped onto the bed and unbuttoned her shirt. Jenny was more than a little taken aback by the sensuousness with which Freddie undressed. She hoped the camera was catching this. She felt her own shirt being pulled away and her bra unclasped.\n\n\"Leave the thong on,\" said Freddie from the bed as she shirked the rest of her clothes. Jane did as her lover requested. She rested her head on Jenny's shoulders, wrapped her arms around the girl's body and cupped her warm breasts. \n\n\"Very nice,\" said Jane as she began sucking on Jenny's neck and tweaking the girl's nipples. Freddie stretched out one foot and slid it between Jenny's thighs, pressing against the girl's panty-clad mound with the top of the foot. Then Freddie removed her foot and stood up.\n\n\"Something you should know about Jane,\" she said as she slowly tuned Jenny around to face the older woman, \"is that she likes the build-up almost as much as the actual event. Why don't you help her get naked?\" she asked.\n\n\"How quaint,\" responded Jane, though she didn't resist as Jenny started unbuttoning the older woman's delicate blouse. Then the garment slid off of Jane's slim shoulders and to the floor, then unbuttoned the woman's skirt. She would have slid that off, but Freddie's hands got busy, with one hand grabbing one of Jenny's full ass cheeks while the other snaked around and started rubbing the girl's pussy lips through the fabric of her thong. That got Jenny moaning, and left Jane to finish disrobing herself. \n\n\"And as a word of warning,\" Jane started wryly, \"Freddie likes to 'get busy' as soon as possible.\" \n\n\"So, how you wanna go about this?\" Freddie asked as she continued rubbing the girl's mound. \"Top or bottom?\"\n\n\"Actually, I think I'll start at the top,\" Jane replied, pulling Jenny away and then slowly pushing her onto the bed with her legs hanging off the edge. \"You've been dying to get your hands on her shapely posterior since you first saw her, and I'd hate to deprive you of it a moment longer.\"\n\n\"And that's why I love this woman!\" Freddie said to Jenny as she knelt between the girl's legs and spread them apart. \"She's so considerate.\" With that, Freddie placed a kiss on Jenny's thong, causing her to shiver. \n\nJane lay next to Jenny on the bed, sucking on her nipples, neck and naval . . . whatever she could get her tongue on. Freddie pushed the thong aside and began licking around Jenny's opening. \n\nJenny was in heaven. She had always thought Mike to be fairly good at the oral arts, but just a few minutes with Freddie and Jane had shown her how much one person could do with their tongue. \"Jane, can I try doing it to you?\"\n\n\"Oh, sure. Jane MIGHT refuse oral sex. NOT!\" said Freddie, then went back to ravishing the young woman's pussy. \n\n\"No need to be snide,\" Jane said. \"Of course you're correct, but . . .\" Jane swung one leg over Jenny so she was straddling the girl's face, but also so that she was facing 'downstream' towards Freddie. This allowed her to gently fondle Jenny's breasts while the young woman took her first stab at the giving end of cunnilingus. \"Don't worry,\" Jane said soothingly. \"Just do whatever Freddie is doing and you'll be just . . . Oh, that's a good start,\" she murmured as Jenny's tongue pushed it's way into the slit. \n\nJenny was nervous at first, but she was getting good feedback. Freddie would do something to delight her pussy, and then Jenny would try it on Jane. And since Freddie knew what Jane liked, those were the things getting done to Jenny. And Jenny was pleased at how Jane smelled and tasted, and her courage quickly grew. She was lashing at Jane's pretty crotch with youthful vigor. She felt Freddie taking great delight in groping her ass, and even felt a finger gently probing her anus. That caused her to buck her hips, pushing her crotch closer against Freddie's face. 'The girl has a plan,' Jenny thought before groaning outright.\n\nMeanwhile, Heather and Laurie had gotten completely naked and were lying together, Heather on top of Laurie, fondling each other. Each had one hand cupping the other's mound with a few fingers buried in the other's cunt. Their eyes were locked on each other and their breath was already ragged. The proximity of their bodies had their arms pinned between them. Neither was going anywhere until the job was done.\n\n\"Who's my pretty girlfriend?\" Heather whispered.\n\n\"I am,\" Laurie murmured.\n\n\"And who wants to cum on my fingers?\"\n\n\"I do,\" the blonde groaned as she proceeded to do just that. Her perfect pussy tried seized Heather's fingers as a relatively gentle climax flowed through her body. Heather loved the look of bliss on Laurie's face and the flush on her body when she came. It was the most powerful aphrodisiac the dark-haired girl knew. \n\nHeather quickly got off the top of her girlfriend, much to Laurie's dismay. But she just as quickly shifted position so that their legs scissored and their pussies rubbed against one another. With a firm grip on one of Laurie's legs, Heather started to rub and hump against Laurie's crotch. Her girlfriend got into the action by humping and bumping back. \n\nBack on the other bed, Jenny was experiencing her first orgasm at the touch of another woman, and she didn't exactly hate it. She had a death-grip on Jane's ass and a tongue in her cunt as Freddie brought Jenny to the brink and beyond. The last thought that flitted through her mind before she lost the ability to process information for a moment was that she really needed to teach Mike a few things that were missing from his oral repertoire. Freddie didn't let up for a moment, taking wide swaths with her tongue as Jenny's body and pussy endured a series of spasms. Then Jenny felt the finger being removed from her asshole and that delightful tongue disappear from her crotch. That's when she heard Jane speak.\n\n\"My turn,\" the older woman crooned. She and Freddie switched places, leaving Jane's face between Jenny's thighs and Freddie straddling the girl's head. \"Oh, she's pretty down here,\" the woman murmured as she sent her delicate tongue on an exploratory lick. Then another one. Then she wrapped her tongue around Jenny's clit and squeezed it like a constrictor. \"Very pretty,\" she said again.\n\nJenny had been a little worried since she had been unable to get Jane off before the two women had switched positions, but all negative feelings evaporated as the woman started her oral explorations. 'Laurie was right,' Jenny thought. 'That tongue goes on for miles!' She did her best to emulate Jane's performance as she herself went to work on Freddie. She also ran her hands up that girl's supermodel body to play with her tits, which got a groan of approval from the affected party. Then she brought one hand back down so she could stick a thumb up Freddie's sphincter. That brought another gasp, and Freddie rewarded that behavior by seriously fondling Jenny's decent-sized tits. \n\nWhile this was going on, Laurie was being ransacked by a second orgasm, and this one was more powerful than the first. Laurie was sweating hard as she latched onto one of Heather's legs and pressed her mound against that of the dark-haired girl. Laurie's cum seeped directly onto Heather's pussy as her body shook. She even sucked and nibbled on Heather's calf to prevent herself from screaming. She expected to keep going, but Heather again had other ideas. Her girlfriend detracted herself from their current position and planted her face directly between Laurie's spread-eagled thighs and started devouring Laurie's still tender sex. Laurie was still a little dazed from her orgasm, otherwise she might have objected. She had already gotten off twice while Heather had yet to achieve release. She wanted to correct that . . . to bring her lover pleasure, but Heather had taken control and wasn't about to relinquish it until Laurie was completely satisfied. Heather's tongue was working like a jackhammer and her fingers had crept into Laurie's box, poking and prodding her innermost recesses. She withdrew her tongue and just started rubbing the outer and inner lips with her fingers for several minutes, making Laurie squirm and buck. Then she went back to work with her tongue. \n\nOn the other bed, Freddie had achieved orgasm at the same time that Jenny had been brought to her second climax. Jane's cunnilingual skills were everything her friends had bragged about and more. This time, Jenny had done a better job at keeping up, which had allowed her to get Freddie off. Seeing a woman cum up close and personal was another new experience for her, and it was a sight to behold. Seeing Freddie orgasm was especially sweet, due to the girl's incredible good looks and constantly lust-filled expression. And the aroma and taste of pure cum was intoxicating. Jenny lapped and licked as much as she could, but she was still left with a face covered in girl-juice. \n\n\"I'd say the girl has potential,\" Freddie moaned at last. \"Let's give her a little more practice on someone who should be used to grading performance.\" \n\n\"I'm rather enjoying what I'm doing right now, thank you very much,\" Jane said primly.\n\n\"Never said you had to stop.\" Freddie pulled Jane up on to the bed and lay the woman out on her back. The she had Jenny straddle the woman's face before lowering her own lips to Jane's sex. \"And this is a lesbian sixty-nine,\" Freddie pointed out, perhaps unnecessarily. Jane quickly went back to work, but Jenny was still recovering. She did start up again, gaining speed as she went. And Freddie knelt beside the bed and leaned in for some extra 'tutoring.' \n\n\"No fair,\" Jane said. \"Two on one.\"\n\n\"Sweetheart, me and Michelle 'two on one' you all the time. It's the only way to level the friggin' playing field,\" Freddie replied. Then Freddie interrupted Jenny's tongue by giving the younger girl a long, sweet kiss. \"And I don't think she minds the company down here. Do you?\" she asked of Jenny.\n\n\"Not . . . not especially,\" she grunted as she dove back into Jane's crotch. \n\nFreddie glanced over at Laurie and Heather. Heather's fingers and tongue were moving like mad, and it was obvious that the dark-haired girl had Laurie on the verge of yet another orgasm. This was confirmed as Laurie started repeating \"I'm cumming,\" over and over again. Heather kept her fingers moving, but raised her shining face up so she could smile at her lover and watch her beautiful body arch against Heather's invading digits. The girl's eyes were closed and a look of pure ecstasy was emblazoned on Laurie's face. \n\nWhen she was able to speak again, Laurie said, \"I want to do you. Don't you dare make me wait another minute! Heather Englund, get on my face right this instant!\"\n\n\"So demanding,\" Heather muttered as she started kissing her way up Laurie's impatient body. \"So pouty,\" she said before sucking on one of Laurie's nipples. \"So sexy,\" she continued, moving to the other breast. Laurie sighed and acknowledged that it might be a minute before she got to plant her face in Heather's crotch. Once the dark-haired girl started playing with Laurie's tits, she was usually captivated for a while.\n\nAcross the room, Freddie had broken off the double team so she could play with Jenny's round butt cheeks and tongue the girl's asshole. Then she shoved a finger in and started fucking the girl's bottom with that finger. \n\nJenny's mind was in the clouds while her tongue was running up and down Jane's slit. She was so tired, but stopping wasn't an option. This event had been everything she had hoped it would be, and she wanted to show her appreciation by giving Jane as much pleasure as she had received. She tried using things that both Freddie and Jane had used on Jenny herself, creating her own 'style' rather than just imitating theirs. She was having a lot more fun than she could have previously imagined sucking on the delicate inner lips of Jane's pussy. And she knew enough already to spend a lot of time licking the clit, both above and below the hood. Then she saw just how deep into the rabbit hole her tongue could go.\n\n\"The young woman is showing some originality,\" Jane said after a few minutes. \"I think it's time to reward originality,\" she finished as she felt her body tighten up and her box quiver as she came. And to her credit, Jane felt Jenny licking well into the orgasm. She was giving it 'that old college try,' Jane thought, then laughed at her personal joke, then groaned outwardly as the last wave of pleasure rippled through her body.\n\nJenny wasn't far behind in the orgasm race, as Jane's persistent and wonderfully agile tongue, combined with Freddie's anal attentions, brought the girl off again. But the two women weren't done. Both Freddie and Jane began inserting fingers into Jenny's cunt, pushing and probing until they found that special spot. They kept Jenny above her sexual threshold until they made her cum a second time within a few minutes. Jenny was sweating from pores in parts of her body that she hadn't known existed before. Both her vaginal and anal openings were stretched and sensitive, but she wouldn't trade what she was feeling for anything. She glanced over at the video camera on the table. 'Man, wait until Mike gets a look at this.' She didn't feel that she had adequately explained to her friends how excited Mike had been when he learned of his girlfriend's bisexual interests. She had gotten the impression that he might enjoy a threesome. If it was even half as much fun as she was having at that moment, she might be inclined to grant him that particular pleasure.\n\nPleasure weighed heavily on Laurie's mind as well. She wanted to dish some out to her girlfriend, but Heather was being maddeningly uncooperative. Heather had brought Laurie to climax on three occasions, but the blonde girl hadn't gotten her mouth anywhere near her girlfriend's private area, and it was driving her insane. Finally, she had enough. She sat up and flipped Heather over onto her back, pinning the girl's shoulders to the bed with straightened arms.\n\n\"Okay,\" Laurie said huskily, \"I've had about enough. Now sit back, because I'm going to seriously fuck you and you're just going to have to like it.\" Laurie finished off her 'threat' with a long kiss to Heather before the blonde girl moved down and planted her face in Heather's crotch. \n\nHeather was smiling from ear to ear. It was the type of smile she didn't even know she was capable of until Laurie had come into her life. She had teased the girl so outrageously and for so long that she knew she was about to get Laurie's best oral attack, which is what Heather had been wanted from the word 'go.' Laurie went ballistic, licking and fondling every square inch of Heather's cunt. She was lapping away from stem to stern, rubbing one thumb over the girl's clit while sticking fingers from the other hand in Heather's asshole.\n\nLaurie found herself wishing that Freddie had actually brought one her toys, because she badly wanted to go to town on Heather's tight, teardrop ass. But the blonde girl accepted she would just have to make do, inserting two and then three fingers into that ass. She tried stretching it just a little, but it was a considerable stronger opening than its neighbor was, and she was forced to be content with just thrusting her fingers in and out. She stopped rubbing the clit so she could insert three fingers from that hand into Heather's pussy, and she let her tongue take over the job of clitoral stimulation.\n\n\"Make me wait . . . (grumble) . . . I'll teach you to tease me like that . . . (grumble) . . . I'll make you cum good!\" Laurie was incensed, while the only thing keeping Heather from laughing at her girlfriend's tirade was the intense pleasure the blonde girl was bringing to her. Laurie withdrew her fingers from Heather's wet sex for a moment so she could rub one of her meaty breasts against Heather's mound. This got Heather moaning even louder, as almost any contact with Laurie's tits was bound to do. She rubbed one soft nipple up and down the girl's slit applying as much pressure to that glistening mound as she could. And she never quit pistoning her fingers in and out of Heather's greedy pink rosebud. \n\n\"Ooh,\" Heather moaned. \"I'm sure learning my lesson,\" she grinned.\n\nLaurie tried glaring at her, but the beautiful girl's face didn't scowl well. So she wound up smiling, which was something her face was much better at. She smiled because that's what being with Heather made her want to do. Well, it was one of the things that it made Laurie want to do. Another was fucking the girl's brains out, which Laurie was also in the process of doing. There were so many things Laurie wanted to do, including stuffing her whole hand into Heather's body like she had done during the make-up sex following the spring break blow-up, but she was going to save that for after the Battle of the Bands. She was hoping that would be the celebratory sex. Even while she was licking Heather's clit, Laurie was admiring the taut muscles of her girlfriend's abdomen, the gentle slope of her breasts and the wild beauty of her face. Alice wasn't the only girl in their crew that liked to ride a wild animal. Laurie did too, but her \"animal\" was a somewhat cynical, dark-haired, rock-hard-bodied woman who could sing the angels down from Heaven if she chose. Laurie loved her wild Heather, and she wanted to please her in any way she could. She turned up her energy a notch, fingering and licking on all cylinders. And Heather had waited long enough. She pushed up on the bed with her feet, raising her lower abdomen off the bed. Her ass and pussy clamped down on any invader indiscriminately, trying to keep as much of Laurie within Heather's body as possible. Laurie drank in Heather's juices with reckless abandon. Her face quickly became shiny with her girlfriend's fluids. Heather's eyes were closed and her lips were parted, and Laurie could almost see the girl's heated breath rising in wisps to the ceiling of the hotel room. ",
        "Heather reached down and grabbed one of Laurie's hands, drawing the girl up until they were face to face again. \n\n\"But I wanted to . . .\" Laurie started. She had wanted to even the score in regards to orgasms, but Heather was interfering again.\n\n\"It's okay,\" Heather said softly. \"This,\" she added with a very long, lingering kiss, \"is all I want right now.\" Laurie blushed and nuzzled her head against the side of Heather's. \"I love you,\" came the whisper from Heather's lips, penetrating Laurie's ear and rippling through the blonde girl's body with more power than anything else ever could. \n\n\"Love ya too,\" Laurie said contentedly. \n\nThe three women on the other bed were watching the two girls. There was some heavy petting and nibbling, but Jenny was content to leave it at that. That had been the type of experience she had wanted, and now she needed time to figure out what she wanted next. She reached over and grabbed the video camera, blew a kiss towards the lens and said, \"Hope you enjoyed the show.\" Then she smiled and turned the camera off.\n\n\"Why don't you take that with you, as long you promise to bring it to the contest. See what your man thinks of your 'debut?' Instructions for hooking it up to a VCR are in the bag,\" said Freddie warmly.\n\nJenny hugged both the women in the bed. She, Laurie and Heather all did quick clean-ups, then Heather drove Jenny home. Mike was waiting outside her apartment with a massive grin on his face and an equally massive tent in his pants. Laurie gave Jenny a kiss on the cheek, while Heather wished her luck. Jenny grinned, got out of the car and went to giver her boyfriend a hug.\n\nLaurie turned to Heather. \"Want to bet that she isn't going to be getting any sleep anytime soon?\"\n\n\"Not likely,\" the dark-haired girl replied. \"And if you play your cards right, neither will you.\"\n\nLaurie grabbed Heather's hand in her own and placed it on one of Laurie's breasts. \"Does that count as 'playing my cards right,' or will I have to do something more drastic?\"\n\n\"That'll do sweetie,\" said Heather. \"That'll do.\"\n\n-------------------- ----------------------------\n\nThe next day, at Liz's apartment . . .\n\n-------------------- ----------------------------\n\nAlice awoke far later the next day than she had planned. When Liz had finally come to bed the previous evening, Alice had woken up and the two had talked for a while. It felt good to be held in the taller girl's arms, and she was encouraged by the conversation Liz and Michelle had had. When Alice finally stumbled out of bed with her brown hair mussed and her body clad in a terrycloth robe, she found Michelle had already arrived that day, and she and Liz were have a very friendly conversation. \n\n\"Mornin',\" Alice mumbled happily, pleased to see the two women apparently getting along.\n\n\"Morning,\" returned Liz, standing to hug her girlfriend. Michelle also got a hug, but Alice had to wander over to do so. Apparently the muscular cowgirl didn't want to seem like she was competing anymore.\n\n\"Damn, you look you're still half-asleep,\" Michelle exclaimed. \n\nAlice raised one finger, tempted to point out that she had been fucked like nobody's business the night before, but decided she didn't really want to argue. \"You're here awfully early,\" she mumbled as she headed to the kitchen. She suddenly understood Heather's obsession with coffee as she downed a cup that Liz had started brewing and it instantly made her feel a little more awake.\n\n\"Yeah,\" said Michelle. \"I figured there were a few things I was a little concerned about that I wanted cleared up, but nothin' too scary. And then we started talkin' football for next season and that's when you woke up.\"\n\n\"Then maybe I should go back to bed,\" Alice said, flopping unceremoniously onto the couch. Alice wasn't a big football fan.\n\n\"I can't believe you're a Texas native but don't like football,\" Michelle said.\n\n\"Hey, at least I've got her interested in hockey,\" Liz said. \"That's a start.\" Then she turned to Alice. \"And you can't go back to sleep. You need to get cleaned up so we can get you back over to the dorm to grab your stuff.\"\n\n\"Oh poop!\" said Alice. It was moving-out day at the dorms, and she still had to throw her small amount of stuff in boxes. She was going to be staying with Liz until they headed down to the ranch, while Heather was going to be staying with Laurie. \n\n\"And don't forget that your dad's gonna be here come two o'clock,\" reminded Michelle. \n\nAlice rushed towards the bedroom, grabbed a clean set of clothes and then rushed into the bathroom. She cleaned up as quickly as she could, got dressed and rushed out into the living room, where Liz and Michelle were discussing which video game system Liz should buy.\n\n\"So,\" started a much more awake Alice, \"are you two going to behave yourselves today? Especially you,\" she said to Liz, who looked somewhat wounded. \"C'mon, you're meeting my dad. Promise me . . .\"\n\n\"I promise,\" said Liz chortling. \"Don't worry hon,\" she said a little more seriously. \"Your father has been really cool about everything so far, right? Then things will be okay. We'll just have to cut back on the spanking while he's visiting and . . .\"\n\n\"No spanking in front of my father!\" Alice shouted with her eyes wide before she realized that Liz had been pulling her chain. \"Ooh . . . you . . .\" Alice stormed off to get her keys while Michelle and Liz had a good-natured laugh at her expense.\n\n------------------------ --------------------------------------------------------\n\nThe next day, in the Battle of the Band's \"On Deck\" area . . .\n\n------------------------ -------------------------------------------------------\n\nThe five members of Lost in Texas were more than a little nervous. Their spot in the contest was just a few minutes away. None of them were sure whether to laugh, smile or break out in hives. Their entire extended, fairly odd group of family and friends were waiting out on the grass of the outdoor show along with a thousand or so other people waiting for them. Each girl was lost in her own thoughts.\n\nMary was thinking about Todd, one of the guys she had taken home the other night. 'That boy could go all night like a lumberjack,' she was thinking, 'and I could wash my laundry on his abs. I wonder if he's free tonight?'\n\nJenny was thinking about Mike and the incredible sex they had yesterday. When he had got home two nights ago, they had gone straight to sleep. But when he saw the video of Jenny's adventure the next day, they had engaged in the type of fucking that led to broken furniture. She was feeling more energized than she could ever remember. She was almost giddy. She was about to go out on stage with HER band after having great sex with HER boyfriend the day after having HER first wild, lesbian encounter. She was having the adventures she had dreamed about as a kid, and she was hoping it would never end.\n\nAlice was pleased as punch. Yesterday had gone better than she could have hoped. Her father was either hiding his apprehension at his daughter's sexual orientation, or he was actually getting over it. She liked to think it was the latter. Either way, he actually seemed to like Liz, or at least as much as any father could like someone dating his daughter. And her father, being a native Texan, had been having a great time talking with Michelle. Her father was having fun with Alice's first lover (a fact which she was sure he was unaware of) and seemed to tentatively approve of her girlfriend. Things were good.\n\nLaurie's father had arrived the previous day, and she, he and Heather had all sat down for afternoon coffee. He had inquired about Heather's hands, Heather had inquired about his bid to be the leader of his party in the Senate and Laurie had asked about how Amelia was doing. She was distressed when she found out that her father was planning on letting her go, but had to acknowledge that he no longer had use for her services as Laurie's sister Emily was too old for a nanny. But he promised to make sure that Amelia had gainful employment in a respectable household before releasing her, and the aging woman planned on keeping in touch with Laurie in the years to come. But mostly, Laurie was thinking about Heather.\n\nHeather's mind was almost frighteningly clear. She had expected to be terrified. She had expected to be fidgeting. But she wasn't. She was sitting on one of the equipment boxes, her knees hanging off the edge and humming to herself. She was wearing that same blue dress, albeit altered, that she had worn over five years earlier. It was a little shorter on her than Mr. Price had probably originally envisioned, but she had grown up a bit. It was funny to Heather. She hadn't worn ANY dress since that night, but she was fine. She had a pair of jeans and a shirt to change into right after the show. She thought briefly of Mr. Price, her mentor and friend, sitting out on the grass, waiting for the debut that had been delayed for half a decade. Her mind drifted to thoughts of Michelle, Freddie and Jane. Michelle was a friend. Freddie had helped her remember what having fun was like, and Jane had helped deliver Laurie into Heather's arms. And then Heather thought of Laurie, and she smiled. She hopped off her box and strode over to the blonde bombshell.\n\nLaurie saw her girlfriend moving towards her with a purpose. It was strange seeing the girl in a dress, but not entirely unpleasant. She knew that she had no chance of ever getting Heather into a dress again, so she savored the moment, and she savored the kiss that Heather bestowed on her.\n\n\"Gather around folks,\" Heather said. \"It's time for what passes for my version of an inspirational speech.\" She waited until the five band members were clustered together in a tight circle. \"Good. This may sound kind of strange, but who here knows what happens in a few days? Besides us celebrating our victory, that is?\" That got a round of cheers, but everyone kept their eyes on their intrepid leader. \"In three days, it will be the first anniversary of the day that me, Laurie and Alice unwillingly packed my jeep up with our stuff and headed out to be camp counselors. It was that day that a certain GORGEOUS young woman put the motor oil in the wrong place, causing my jeep to blow a rod and eventually catch on fire on a long dirt road in The Middle of Nowhere, Texas.\" Laurie blushed. Heather continued. \"That was the first day of the road that led to where we're standing right now. For myself,\" she said as she looked at each member of the group in turn, \"it's a place I never would have imagined I'd be, with better friends than I ever thought I'd have.\" That earned a round of melodramatic \"awh's,\" but their expressions told her that they felt the same way. \"And I wouldn't be here if it weren't for you guys. I'd lost my voice. Laurie gave me a reason to sing, Alice gave me the words, and Mary and Jenny spiked the punch and turned this whole thing into a party. In a few minutes, we get our shot to open for the Eagles, and the opportunity to sing in front of over fifty thousand people. I guess it would be the sensible thing to say that just this opportunity would be enough. But it isn't enough. I want it all. I want the victory wreath, the brass ring . . . the whole damn thing. Give me an 'Amen' if you want it too.\"\n\n\"AMEN!\"\n\n\"Good to hear,\" she said with a grin. \"I don't want to spend my first anniversary with Laurie talking about 'our noble effort.' They don't tell stories about the knight in shining armor who ALMOST slew the dragon.\"\n\nJust then, some contest-related personnel rush over and told them to get set up. Before the girl's went to grab their gear, Heather had one more thing to say. \"A year ago, the journey started. Tonight, let's end the journey and begin the legend.\" Then the girls headed for the stage.\n\n--------------- -------------------------\n\nThree days later . . .\n\n--------------- -------------------------\n\n\"How did I come to be here?\" Heather murmured. \"What did I ever do to deserve this?\" She was sitting very still, afraid that even the slightest movement might shatter the fragile air. But she didn't have control over everything. She felt tight, slender calves creep over her shoulders before resting against Heather's sides with the accompanying knees resting on her shoulders.\n\n\"You were just spectacular, that's all,\" said a beautiful voice from behind her. \"You were perfect.\" \n\nHeather felt Laurie's lips kiss the top of her head. She was sitting in a huge, Jacuzzi-style tub in a posh suite at one of the nicest hotels in the area. Laurie had sprung for it. It was the blonde girl's anniversary present to Heather. It was also their own personal victory party. In just a few months, the members of Lost in Texas would be performing a short set opening for the Eagles.\n\nHeather smiled. The last few days had been a veritable whirlwind of activity. She could barely wrap her head around it all. She had given her speech to the band. They had gone out on stage, and they only had two songs to convince the judges and the crowd that the group of five girls was the best of the contenders. One judge had later told Alice, who had circulated it to the rest of the group besides Heather, that two songs was one song more than necessary for them to make up their minds. Heather remembered people shouting and hugging when the group's name had been announced. An executive from Mega-Global Records, who had been at the contest on a whim and who represented the Eagles, had talked to the girls about a developmental deal. Mary, the most business savvy of the group, had started working out the details of the deal. Heather's brain had been in a fog since the first note of \"The Itch.\" She hadn't been brought back to reality until Laurie had started kissing her. They had been doing quite a bit of that in the last few days. She vaguely remembered giving Laurie a dozen roses. Laurie had given Heather an amulet made of silver in the shape of the state of Texas.\n\nThe next day, the whole group was heading down to the ranch to start rehearsals. When they weren't lost, the girls could make the drive in reasonable time, so they had decided that they would work Monday through Thursday for Jane, and they would come back to town for the weekends to perform at the clubs. They needed to work on their stage show and keep their names in people's thoughts. But that all started tomorrow. Tonight, Heather was going to enjoy the presence of the woman who had captured her heart a year ago. \n\nShe glanced behind her. Laurie was sitting there on the edge of the tub wearing nothing but a large, white men's shirt. Her blonde hair was falling in a deliciously unkempt fashion down her shoulders, and she had two glasses of sparkling (non-alcoholic) apple cider. She handed one to Heather.\n\n\"Cheers,\" said Laurie. \"To one year together, with the rest of our lives to go!\"\n\nHeather was amazed at how those beautiful eyes sparkled when she said \"the rest of our lives\". She knew the girl meant every word. Heather sometimes wondered why she had been so willing to let Laurie into her life. It was more than the fact that the girl was attractive and that Heather had felt bad about the way she had treated her once upon a time. But she couldn't quite figure it out, and she really didn't much care.\n\nLaurie placed her glass on the tile beside the tub and started massaging Heather's temples and neck. Not because she was overly stressed, but rather for the simple joy of physical contact. She scooted her legs to the sides a bit and let her hands drift down to work the muscles on Heather's well-toned shoulders. \n\n\"The things you can do with those hands,\" Heather said.\n\n\"The things that I'm GOING to do with these hands,\" Laurie returned coyly.\n\nHeather reached around and pulled Laurie into the tub. For a moment, the blonde girl actually disappeared beneath the bubbling surface. When she appeared again, her hair was slicked back and that white shirt had gone translucent and was clinging to her body like a second skin.\n\n\"Now look what you did,\" Laurie said with a horribly insincere pout. \n\nHeather pulled the blonde over until Laurie was in her lap. \"Whatever can I do to get you to forgive me?\" She pulled the collar of the shirt down and kissed Laurie on the shoulder blade. \"Forgive me?\"\n\nLaurie was trying to pout, albeit unconvincingly. \"No,\" she said in her best child-like voice.\n\nHeather kissed her the bottom of the jaw, tickling the skin with her tongue in the process. \"How about now?\"\n\n\"Not yet,\" Laurie groaned.\n\nHeather moved her lips up and kissed the corner of Laurie's mouth. \"Forgiven?\" Heather asked. When Laurie opened her mouth to protest, the dark-hair girl kissed her full on the lips. Her tongue danced into Laurie's mouth, raking her tongue stud across the blonde's tender lips. \"Forgiven?\" she asked again, this time with heated breath.\n\n\"Forgiven,\" Laurie replied as she wrapped her arms around Heather's head and kissed the girl back. The two were perfectly happy with the way things were for a while, kissing and nuzzling and occasionally licking. But as was almost always the case with those two girls, hands started drifting and the petting got heavier. Laurie buried two fingers in Heather's femininity and Heather grabbed Laurie's soft ass and pulled the girl toward her. \"You teased me really badly last time,\" Laurie said. \"You're not getting away with that this time.\" Her fingers were working magic on Heather, and the dark-haired girl's face was growing flush with excitement. \n\n\"I think I can handle your version of 'getting even.' But is that the best you've got?\" Heather said, egging her girlfriend on.\n\n\"I'll show you my best,\" Laurie growled, curling her fingers upward to seek out Heather's g-spot. She was using her thumb to massage one side of Heather's mound while the fingers penetrated her girlfriend's body. When she felt that she had found what she was looking for, she went after that spot with a vengeance. Heather was groaning louder and shoving her crotch against Laurie's hand. The two girls were kissing so much that they were almost re-circulating each other's air. Heather released her grip on Laurie's ass so she could wrap her legs around the girl's hips. Her hands found new homes on the sides of Laurie's face, stabilizing it for another round of lip-locks. \"Tell me,\" Laurie said almost plaintively. \"I need to hear . . .\"\n\n\"I love you,\" Heather said. Laurie's face lit up. 'Sometimes,' Heather thought, 'it just takes the simplest things . . .' Loving Laurie had become easy for Heather.\n\n\"I love you too,\" Laurie said, working her thumb against Heather's clit. She had the g-spot and the clit under her control. It was time to watch the fireworks. Heather's body had already started to shiver, despite the warmth of the water. \"C'mon baby,\" Laurie continued. \"Show me you love me.\" And with that, Heather let go. Her pussy gripped at Laurie's finger while her legs gripped the girl's hips. When Heather's orgasm subsided, Laurie leaned in and put her lips against the girl's ear. \"And that's just the tip of the iceberg.\"\n\n\"Well it's my turn now,\" replied Heather. She released Laurie from between her legs and maneuvered around behind the blonde's back. \"Now hands on the tile and butt in the air.\" \n\nLaurie stood up in the tub and rested her head on her arms that were folded in front of her on the tile. Her shirt was hanging partially into the water below her. Heather was kneeling in the tub and placed her face between those cute little butt cheeks. \"I love room service,\" she kidded as she planted a kiss on those full pussy lips. \"I love eating in,\" she finished before unleashing an oral torrent on the beautiful example of womanhood before her. She used her hands to keep Laurie's ass cheeks spread, giving her tongue free reign. She pulled one hand back and slapped that ass before gripping it tightly again. That got a pleasant little yelp, so Heather repeated it on the other ass cheek. But mostly, she just concentrated on eating Laurie like the girl had never been eaten before. There was no patch of skin too remote or crevice too deep that Heather couldn't reach with her tongue. She teased those full vaginal lips and the surrounding mound. She ravished the clit and rimmed the asshole. She eventually released her grip on Laurie's ass so she could stick three fingers, one on top of the other, into Laurie's box. She pounded those fingers into her girlfriend's love canal. But she replaced her fingers with her tongue after a few minutes. She missed the taste. She particularly loved having her face buried there when Laurie came, which the girl began to do. Her hips trembled slightly and twitched as her juices flowed from their hiding places, onto Heather's face and down Laurie's own thighs. ",
        "Laurie slipped back into the water and the two girls wrapped each other up in one another's arms. \"Why don't we finish this off in that big, comfortable bed in there?\" the blonde asked sweetly. \n\nHeather stood up, droplets of water falling from her rock-hard body. \"I'm ready if you are,\" she said with a grin. She climbed out of the tub with Laurie in hot pursuit. Heather turned and slowly unbuttoned that wet shirt that Laurie was wearing. \"Let's get you out of this wet thing before you catch a cold.\" \n\nOnce the shirt was off, Laurie hugged Heather close, pressing her mammoth breasts against Heather's smaller ones. \"Getting cold isn't something I'm really concerned about,\" she whispered before giggling and grabbing a towel. After both girls were dried off, Heather held her lover in her arms and they slowly 'waddled' there way into the bedroom. They had a king-sized bed crying out to be violated. Heather noticed a strap on harness and dildo lying on the bed, as well as a tube of lubricant. \n\n\"Well, so this is what you were doing while I was in the tub,\" Heather murmured. She shoved Laurie onto the bed, loving the view of the girl's ample tits bouncing wildly. She grabbed the harness and slipped it on, attaching the dildo shortly thereafter. \"Is this what you want?\" Heather asked slyly. Laurie was biting her bottom lip and her eyes were alight with desire. She had spread her legs wide apart, bent at the knees. Heather crawled down the bed towards her, the eight inch, flesh-colored dildo wagging between her legs. \"Looks like my pretty little girlfriend is all hot to trot,\" Heather continued, positioning the head of the toy at Laurie's opening. \"But first, she has to tell me, explicitly, what she wants.\"\n\nLaurie's eyes were glowing naughtily as she wrapped her legs around Heather's waist in attempt to draw the toy in, but Heather grabbed the girl's waist with her hands and held back until Laurie told her what she wanted to hear.\n\n\"Please fuck me,\" Laurie asked. \"Please fuck your horny girlfriend!\"\n\nHeather was grinning. \"How horny are you?\"\n\n\"God, I need it!\" Laurie returned, still pulling at Heather's hips. \"All I ever think about is how bad I want to be with you and have you make love to me. And I want it so bad . . . Does that make me naughty?\" she asked, her expression taking a look of decadent innocence. \"Does me being naughty make you want to fuck me more?\"\n\nHeather sunk the dildo into Laurie up to the hilt. \"I never need an excuse to make love to you. And nothing you could say or do could make me love you more.\" \n\nLaurie's skin flushed and her countenance was one of pure joy. A dark-haired rock 'n' roll singer with a strap-on may have been drilling her, but Laurie was still a romantic. But joy turned back to wanton lust as Heather began plunging the device into Laurie's body with almost frightening speed. Laurie felt bursts of pleasure shooting up from her crotch until they almost exploded out her eyes. Heather's hands gripped Laurie's shoulders, giving her some added leverage. The sound of hips slapping together could probably be heard through the walls, but neither girl really cared. \n\nLaurie was captivated by the sight of Heather's abdominal muscles rippling as the dark-haired girl pounded the dildo home over and over again. With Heather's increased 'femininity' that had come about due partially to Laurie's coaxing, the blonde girl had almost forgotten just how powerful Heather really was. Heather was like a sword wrapped in silk: pretty, but still dangerous. Heather leaned in and started sucking on Laurie's tits, which the blonde girl freely offered up to her dark-haired goddess's lips like sacrifices. Heather sucked on Laurie's soft nipples, taking one nub in her teeth before moving over the other. Laurie just started repeating \"fuck me\" over and over again, and Heather was more than happy to accommodate her. Laurie began rubbing the swollen outer lips of her own pussy as it attempted to devour the plastic invader. She loved how the ridges stretched and released her vaginal opening on every pass. She loved how wet she had become down there. She was so close. And without warning, she was over the edge.\n\n\"I'm fucking cumming!\" she shouted as her pussy started to spasm and Heather's rampage was halted. \n\nHeather did sink all the way back into Laurie and lay down on top of her, feeling her lover's body shake in the throes of ecstasy. They lay like that for several minutes, the silence of the room only broken by their heavy breathing. They both smelled of sweat and bath salts, and the combined aroma was intoxicating. Laurie was gently nibbling on Heather's ear, sucking the lobe into her mouth. Heather turned her head so that their lips met one more time.\n\n\"My turn,\" Laurie said. She turned Heather over and removed the harness from the girl's body. Then she put it on herself and grabbed the bottle of lubricant, which was applied generously to the length of the toy. Heather had a devilish grin as she got up on her knees and grabbed the headboard of the bed in her hands. Laurie sidled up behind her and pressed the head of the dildo against Heather's sphincter. \"You have such a perfect ass,\" Laurie said. \"So tight,\" she whispered as she pushed inward. She heard Heather gasp, and watched as that tiny little hole tried to accommodate the apparently much larger invader. Laurie was impressed when she saw the head slide in and slowly disappear from sight. Heather was breathing a little more rapidly, but the two of them had done this often enough that the dark-haired siren was barely inconvenienced. 'Besides,' thought Laurie, 'this isn't going to last that long. I have other plans for this woman.'\n\n\"You are such an ass-slut,\" Laurie said as she slowly pressed on. She kept going until the length of the dildo had disappeared from view and her hips bumped up against Heather's ass. Heather had closed her eyes and was waiting for the discomfort to turn into pleasure. Laurie gave the dildo a quick pump and Heather smiled. God how Laurie loved that smile. She gave another quick pump and the air seemed to escape from Heather's body. \"Oh, you're ready now aren't you? You made me tell you what I wanted. Now, I want you to tell me what YOU want.\"\n\n\"Fuck my ass,\" Heather practically growled. \"Split me down the middle,\" she finished as Laurie began bucking her hips. Once Heather's ass had completely relaxed, Laurie went to town on it. Heather moved one had from the headboard to her own pussy, and she played with herself as she was getting reamed. If Heather's fucking of Laurie was intense, then Laurie's anal attack on Heather was positively animalistic. The dark-haired girl was actually grunting unintelligible sounds as her pink-rosebud was continuously made to expand and contract over and around every ridge on the sex toy. Laurie spanked Heather on those perfect cheeks on every stroke, returning the favor from earlier. Heather groaned her approval. After about ten minutes of anal-dicking, Laurie sensed that Heather was getting close. So the blonde girl pulled all the way out of Heather's ass. Heather looked confused and almost desperate. Then she saw Laurie removed the harness and toss the entire contraption onto the floor.\n\n\"Spread those legs, sweetie,\" Laurie said sweetly.\n\nHeather's grin reached from one ear to the other. She piled a couple of pillows behind her head, lay back and then spread her legs as far apart as she could. Laurie started off by licking her way in a circular pattern around Heather's box. Then she massaged the outer lips with her thumbs before finally inserting two fingers from each hand into the slot. For ten, maybe fifteen minutes, she prodded and stretched Heather's cunt, getting it all warmed up for the main event. Her favorite thing was to stick both her thumbs in and pull in opposite directions until Heather gasped. \n\nLaurie stopped her stretching movements and inserted her pinkie into Heather's box, twirling it around. \"This little piggy went to market,\" she said before inserting another finger. \". . . This little piggy stayed home.\" Another finger worked its way into Heather's moist sex. \"This little piggy had roast beef while this little piggy had none.\" Two more fingers. \"And this little piggy,\" she said huskily as she scrunched her fingers up and placed her thumb close against her palm, \"made my girlfriend squeal.\"\n\nHeather felt that hand sliding forward. The first row of knuckles had reached the opening. Then the second row stretched her out, making her gasp and groan. Finally, she felt the widest portion bumping against her opening. This was the hardest part. She and Laurie had done this a couple of times since the first time, and it was definitely a big turn-on for both of them. But they both knew that they had to do it carefully to avoid an actual injury. But Laurie was very patient, and Heather trusted her implicitly. \n\n\"You okay?\" Laurie asked, withdrawing her hand a bit so she could give Heather's pussy a few quick pumps before pushing back up to the knuckles.\n\nHeather was seeing stars and her crotch was alive with pleasurable sensations. She was able to find her voice for a moment. \"Good . . . good to go,\" she said. She felt herself sweating, which felt wonderful against her skin as the breeze created by the room's ceiling fan caressed her body. \n\nLaurie pushed a little further, going slowly so as to minimize the discomfort. Though these fisting sessions were rare, they had become one of the blonde girl's favorite things to do. After a few more moments, her hand had slipped inside. She could almost see the ripples of pleasure emanating from Heather's crotch, traveling up her spine until they enveloped the girl's head. She waited for several minutes, relishing the sensation of being inside her lover's body in such a complete fashion. Then she slowly spread her hand out as much as she good, eliciting a series of low moaning sounds from the dark-haired siren. \n\nHeather threw her hands down and gripped the portion of Laurie's wrist that hadn't sunk into her body. She wasn't sure why, since she had no desire for the blonde to remove that hand. Part of it was just that she needed to grab onto something to keep from thrashing all over the place. Laurie was exploring her insides now and each time her fingers expanded, Heather saw another blast of pleasure. \n\n\"You're really sexy when I'm stuffing you like a turkey,\" Laurie cooed. She pumped her fist and rolled her knuckles across Heather's g-spot. \"It makes me just want to 'gobble' you up!\"\n\nHeather chuckled, and each movement caused another burst of pleasure. Laurie was spinning her wrist in the entrance to Heather's cavern, trying to get her fingers in position so she could manipulate Heather's special spot in a more controlled fashion. She actually had to adjust her body position, but she finally managed. Then she began massaging Heather's incredibly stretched outer lips and her clit as well with Laurie's free hand. \n\n\"Oh God!\" Heather said, her eyes glazed over. \"That feels so fuckin' good! I'm so full,\" she panted. She managed to prop herself into a more upright position. Laurie had to stretch her arms a bit, but she managed to lean over far enough to give Heather a kiss. Heather's legs were pushing instinctively at the bed, trying to back away, but Heather's arms were holding her in place. Finally, she flopped back on the bed and grabbed the hair on either side of her head, just above the temples. \"Oh fuck . . . oh fuck . . oh fuck!\" \n\nLaurie sensed Heather's pussy gripping her arm a little more tightly and she saw the tremors begin. She grinned and leaned in to start licking Heather's clit. It was a bit unnecessary, seeing as Heather was already being racked by an intense orgasm, but it made Laurie feel better. Heather's body squirmed even more than usual during that precious event, and the shifting of her abdominal muscles always fascinated her blonde lover. Laurie flicked her tongue against Heather's clit one more time, then traced it up to the girl's abdomen, savoring the girl's sweat. Then she leaned back.\n\nHeather always looked so . . . peaceful . . . after this, or at least after the few times they had done it. Laurie wished she could feel like that. She had been more than willing to try it and Heather had been very thorough in her preparations, but things had gotten painfully uncomfortable for her quickly and the two girls had decided to abandon the idea. Laurie wished that there was something more exciting that she could do for her lover, and sometimes wondered if Heather might grow bored with her. But she was going to enjoy her raven-haired goddess as long as she was allowed to, because she truly worshiped her girlfriend. She loved her so much that it scared her sometimes.\n\n\"This is no time for you to get lost in thought,\" Heather grunted.\n\nLaurie looked at Heather. The girl had such tremendous passion in her eyes. It made her more beautiful. Laurie smiled. She would talk about this with Heather later. But first, she had to deliver her lover several more delicious orgasms. She teased the g-spot again. It was about the size of a quarter now, and an easy target for her delicate fingers.\n\n\"I'm not lost,\" she whispered. \"I just haven't decided how many times I'm going to make you cum yet.\"\n\nHeather smiled tiredly. Her hair was plastered to her head and what little makeup she was wearing was running. \"Damn I love you,\" she said.\n\nLaurie's face flushed with joy. \"So, that would be a lot of orgasms then?\"\n\n--------------- -----------------\n\nLater that night . . .\n\n--------------- -----------------\n\nHeather and Laurie were lying under the sheets in their traditional spooning position, with Heather behind and one arm draped over Laurie's body. They had carried on for another hour, with Laurie taking her girlfriend to the promised land about four more times before Heather insisted on eating Laurie's pussy until she climaxed at least twice. They actually had to take another quick bath before they could curl up in bed. Heather was a bit more resilient than she had been the first time they had tried fisting. She was certainly going to be a bit sore in the morning and quite tender in the crotch area, but she wasn't incapacitated like she had been the first time.\n\n\"Happy anniversary,\" Heather whispered in her lover's ear. \n\nLaurie developed that quirky smile she had whenever her girlfriend said just the right thing. She turned over so that they were facing each other, and her face grew a little more serious. \"Why do you love me?\"\n\nHeather's face grew confused. \"Hunh? I . . . I guess I don't quite get the question.\"\n\n\"I mean . . . I believe that you do love me. I'm just . . . It's just hard to believe that it's been a year. I guess I expected for you to . . .\"\n\n\"Stop right there,\" Heather instructed in a tone not to be denied. \"I know that you were going to say something self-depreciating, but I won't hear of it. I guess the answer to your question is that I'm not sure. But I don't feel the need to rationalize it anymore. I think about you every day, and the evidence shows that keeping my hands off you is next to impossible.\" That caused Laurie to giggle, but Heather wasn't done. \"I love your energy. I love the energy you give me. I love the way you talk when you're thinking too hard, or even when you're not thinking hard enough. And I love the way you make me feel better just by being around. That's enough for me.\"\n\nLaurie's heart was singing. Heather always seemed to know exactly what to say to ease all of Laurie's fears, even if she didn't know she was doing it. \"Well, I guess you better start planning then.\"\n\nHeather's brow scrunched up. \"For what?\"\n\n\"For next year's anniversary, silly,\" Laurie grinned. \"I figured it'll be your turn next time, and honey, I'm not going anywhere.\"\n\n\"I beg to differ,\" Heather said with a sly smile. \"You're going with me under the covers again, right about now!\"\n\n--------------------------- -------------------\n\nA month and a half later . . . \n\n--------------------------- -------------------\n\nIt seemed almost unnaturally sunny to Heather. Not the sort of weather one would expect for an occasion such as the one she was attending. Those things were always supposed to be overcast, a bit wind and much darker. Whoever heard of perfect weather for a funeral?\n\nBut that's what she was experiencing: a bright sun in the sky over a dark, six-foot-long, six-foot deep hole in the ground. She was dressed in black slacks, black blouse and a jacket. She wished she could have gone without the jacket, considering the heat, but it seemed that wearing a coat of some variety was just what people did. And strangely, how to dress had been the most difficult thing for her on the entire trip.\n\nJust three days earlier, she had been down on the ranch with all the girls from the band, as well as the actual residents as well as Liz. Liz and Michelle were getting along famously now, and Liz's knowledge of electronics and engineering had helped in getting the remaining electrical systems set up. Alice, Freddie, Jenny and Jane were doing a lot of decorating and painting, while Michelle, Liz, Heather and Mary did the heavy work. Jane had actually pulled in some contract work as well, and the bed and breakfast/ghost town was on track to open by the end of the summer. The girls were sticking with their plan: work four ten-hour days and then travel back up to the college area to play the clubs and bars on the weekends. The radio station that had sponsored the contest had put their music into heavy rotation, and the girls were actually developing a pretty large local following. Mary had been in contact with the executive from the record label and the girls had almost finalized their developmental deal. They were all so excited, and everything had been going their way. \n\nHeather had just helped finishing the re-finished the roof for the barber shop and had plopped her ass down on the front porch of the main house when a sheriff's office patrol car pulled up. Everyone came out of the house to see what was going on. He apparently knew the owners of the place and said his hello's, but quickly moved on to ask if there was a Heather Englund present, as he had been informed by Mr. Jack Price that she was working there for the summer. When Heather had identified herself, he had asked her to step to the other side of the street for a moment. All her friends were concerned that she was in some kind of trouble. After a short conversation, she headed back towards the house, her expression hard to read. Laurie had been the first to inquire as to what was going on. In a flat voice, Heather told her. \n\nHeather's mother had committed suicide. She had apparently downed a bottle of sleeping pills and a bottle of Jack Daniels, and she never woke up. Then Heather had gone inside and up to her room. The rest of the crew had been stunned. No one was sure what, if anything, they should say. They knew about Heather's family and her feelings about them, but still . . . she had lost a mother in a horrible fashion. \n\nLaurie had wandered up to the room, only to find Heather throwing clothes into a bag before heading to take a shower. Laurie had asked how Heather was doing. Heather could only respond that she wasn't sure. Then Laurie said she would call the airline, and Heather thanked her. But Heather was in for one more surprise. Laurie was going with her, and wasn't going to be talked out of it. She was going to be there for the girl she loved, and she almost desperately needed to see first hand where Heather had come from. Strangely, Heather chose not to object. She actually wanted the blonde girl's company. Reservations were made, the band's gigs for the following weekend were cancelled, and Heather and Laurie were off. It was many hours drive to the nearest airport, most of which was spent listening to music on the CD player in Laurie's car. Heather simply had no idea what to say or what to feel.",
        "They had arrived in Haddonfield and had asked Mr. Price if they could stay with him. Heather's mentor wasn't one to refuse Heather much of anything. Laurie thought the whole thing very surreal. Heather's father's house was right down the street, but Heather wasn't going to stay there. It just seemed wrong to her. But her opinion changed when she finally the man in question. Heather's father, whose first name was Jeremy, was a widower less than two days, and it smelled like he had been drinking that entire time. Heather had gone to pay a courtesy visit, and Laurie had gone with her. The house had been slightly cleaned, but there were still beer bottles and cigarette ashes all over the place. Windows had been boarded up when broken rather than replaced. Mr. Englund had actually leered slightly lecherously at Laurie when he had first seen her, but that turned to disgust when he discovered that she was his daughter's \"dyke friend.\" Just being around him for ten minutes made Laurie's skin crawl. One of his poker buddies came over and made some offhand comment about making \"a real woman\" out of one or both of them, and Heather's father just laughed. Heather's fist had clenched and her whole body was trembling in pure rage, so she decided it was best that she cut the visit short. Heather's mother wasn't even in the ground yet, and her father's friends were whistling at the two of them on the way out the door.\n\nThey had avoided any further contact with Heather's family and \"friends\" until the funeral itself. The preacher's words seemed so hollow during the ceremony. They were the generic things that were said about generic people when no one cared enough to write anything else. Heather's mother had been a chain-smoking alcoholic who had always looked the other way when Heather was suffering her father's anger, mostly because it meant she didn't have to take the blows herself. She had experimented with drugs and adultery, and both had left their marks. The most skilled mortician in the world couldn't make that face look peaceful. Heather's mother had died a long time ago, but her body had simply kept moving around and taking up space. Laurie glanced around at the other attendees. 'How did someone like Heather come from a place like this . . . from people like this?' Laurie thought. 'How could someone with as much passion as she has come from two people with no passion at all?' She looked at her girlfriend and gingerly took her hand. She felt Heather accepting her hand and gripping it tightly. The blonde girl felt a tear developing in the corner of her eye. She admired Heather more at the moment than she had in the rest of their relationship together, and that was saying something. And the strangest thing was that the tear in her eye was probably the only one shed at that event.\n\nThe wake itself was the most uncomfortable thing Laurie ever had to attend. A woman, however sad she may have been in life, had just died, and no one seemed to care. She wondered if many of them even really noticed the woman was gone. But they noticed Laurie though. They noticed an attractive woman on the arm of another attractive woman, even though one of those girls was the daughter of the deceased. Laurie was sickened when she and Heather were actually propositioned while they were supposed to be mourning the loss of life. Finally, Heather had enough. She grabbed Laurie by the hand and headed towards the door of her father's house. \n\n\"Where do you think yer goin'?\" the man slurred. \"Yer runnin' off to do that bitch of yours, ain't you? You got some nerve comin' here and flauntin' your perversion on the day they buried yer sweet mother.\"\n\nHeather stopped in her tracks. \"Laurie,\" she said with eerie calmness. \"Could you please step outside for a moment.\"\n\nLaurie realized that this was one of those times that she probably shouldn't argue. She stepped out onto the dilapidated front porch and closed the screen door. She left the main door open a smidge, having a burning need to know what was going on.\n\n\"What?\" Heather's father said. \"Got somethin' you wanna say, you perverted little . . .\"\n\n\"Father, you can either shut up or I can shut you up. Decide now.\" The room went dead quiet. Most of Mr. Englund's friends were looking forward to this confrontation with almost sadistic glee.\n\n\"I'm not too old to . . .\"\n\n\"Yes, you are too old,\" Heather interrupted. \"You're old, drunk and worthless. You may have been able to beat me around when I was little, but I've grown up. Now, I can hit back.\" Several onlookers began to look very uncomfortable. They generally accepted what had gone on in the house over the years. Hell, similar events probably transpired in their own homes. But like most dirty little secrets, it became a truly distasteful thing when exposed to the light of day. \n\n\"You wouldn't dare,\" her father started.\n\n\"Yes, I would. I put up with your shit for eighteen years,\" Heather almost growled. \"And I put up with hers,\" she said, looking in the direction of her mother's picture. \"But if you say one more word about Laurie, so help me God I'll beat the shit out of you right where you stand.\" Laurie moved over and glanced in the window. Heather's father actually looked dumbfounded. He was a bully and an abuser, and those were always uncertain on what to do when actually confronted. Something made sense to Laurie all of a sudden. She understood why Heather had reacted so vehemently when Jamie had emotionally used Alice. Heather had seen that as a way of lashing out against the abuses that she herself had suffered. And now, Heather was standing up for Laurie.\n\n\"I've got half a mind to . . .\"\n\n\"I told you to SHUT UP!\" Heather shouted. \"I get to talk now! You don't have 'half a mind.' You drank your entire fucking brain away years ago. You are NOTHING! Do you hear me? Nothing! You're the filth under my fucking feet! That girl outside actually loves me, which is something you and Mom never did! And she does it unconditionally! That was something you were supposed to give me. The only thing YOU ever gave me was bruises and disappointments. I had school pictures taken with bruises you left and bones you broke. Well guess what Dad? You didn't break me! You can't hurt me anymore, and you'll never get a chance to hurt Laurie. I only came back because Mom gave me life, and I owed her for that at least. You never gave me anything except the hope that maybe I'm really the mailman's daughter. Because it would be better to never know my lineage than it is knowing that I'm actually related to you!\"\n\nMr. Englund's face was contorted in rage. He took one step forward, but that was as far as he got. Heather kicked him in the groin and then punched him in the face as hard as she could, dropping the inebriated man in his tracks. \n\n\"Goodbye Father,\" Heather said, her voice calm again. \"I'm done with you.\" And with that, she walked out the door. Laurie met her there, half expecting her girlfriend to be crying or raging or something . . . but there was nothing. Heather's face was as composed as her voice had been. The two girls headed down the street to Mr. Price's house, hearing the laughter of the crowd directed at the man who had just been put down by his own daughter. Heather never looked back. That was the last time she would ever see her father. \n\n--------------------- -----------\n\nThe plane trip home . . . \n\n--------------------- -----------\n\nHeather and Laurie had an early flight the next day. They sat towards the back, chatting idly about airplane food and other trivial matters. Laurie wanted to talk to Heather about what had happened. She was worried, since her girlfriend didn't seem to be grieving at all. Apparently, her confusion was apparent.\n\n\"Don't over-think it,\" Heather said with a slight smile. How many times had she told Laurie that? Then the dark-haired girl placed her hand gently against Laurie's cheek. \"I'm so sorry you had to see that.\"\n\n\"I think I needed to,\" Laurie returned. \"I don't know if I ever would have understood you the way I want to if I didn't get to see where you came from. I just wish it hadn't been so hard on you . . .\"\n\n\"But it wasn't,\" said Heather with a look of curiosity playing across her face. \"It wasn't hard at all. The only thing I feel bad about is that I really didn't feel bad. Does that make me a horrible person? I couldn't even bring myself to grieve at my own mother's funeral.\"\n\n\"Then maybe all you needed was closure,\" Laurie said softly. \"Maybe it was your past you were burying, not your mother.\"\n\nHeather settled her head on Laurie's shoulder. It was odd, since Heather was usually the one doing the comforting. Laurie stroked Heather's hair and kissed her on the head.\n\n\"We couldn't even bury her like a normal family,\" Heather said, referring to her mother. \"You know that when I was younger, I would go and peek into other people's houses. Most kids my age would pretend that they were cops, robbers, firemen or famous actors. I would fantasize about being normal. I would dream about sitting around with my parents and laughing about things and eating meals together and going on vacations together. I just wanted a real family,\" she whispered.\n\nLaurie was almost at a loss for something to say. She realized on that trip that she had vastly underestimated the abuse that had gone on in Heather's life. When Alice had been in a state of denial after the incident with Jamie, Heather had told their friend that she knew the signs of depression because she had been there herself. 'How long were you hiding in those deep dark places?' Laurie wanted to ask. 'And how did you survive?' She made a mental note to do something really special for Mr. Price someday and to give Liz a great big hug when they got back to the ranch. Those two had been the only guiding light for a young girl trying to find her way to a better place.\n\n\"You have a family,\" Laurie said. \"You have me. And you have Alice, Mr. Price, Liz, Mary, Jenny, Mike, Michelle, Freddie and Jane. And all these people are your family by choice. They're your family because they love you and see how wonderful you are. And I'm going to love you forever because . . . because I don't know how NOT to love you.\"\n\nHeather turned her head up and kissed Laurie gently. \"And that's the answer to your question.\"\n\n\"What question?\"\n\n\"Remember our anniversary? You asked me why I loved you. Mr. Price, bless his heart, I think initially just felt sorry for me. And Liz had her own agenda,\" Heather said wryly. \"But you are the first person in my life to actually make ME believe I was really worth something. You're the first person to make me believe that I even COULD be loved . . . that I might actually deserve to be loved. I just wish I could make you realize just what that means to me.\"\n\nLaurie had never heard Heather so emotionally exposed before. True, they had talked about their insecurities, problems and desires, but this was at a whole different level. \"You have the rest of our lives to figure out how to tell me,\" Laurie whispered. \"Because that's how long I'm going to stay with you.\"\n\nThe two of them settle into a comfortable silence, with Heather's head resting on Laurie's shoulder. Both girls enjoyed the presence of the other, listening to the hum of the jet engines as they hurtled through the air towards the ranch, their friends and their life together.\n\n---------------------- ----------------\n\nA warm August night . . . \n\n---------------------- ----------------\n\nHeather had never heard anything as loud as a crowd of fifty thousand screaming people before. She had been AT concerts that big, but standing up on the stage was like standing in a whole other world. And the stage lights were blazing down like stars that had far too close to earth. And for a brief moment, she was standing in the absolute center of the universe.\n\nEarlier that evening, Lost in Texas had gone out to play their five-song set in their opening for the Eagles. With each song, the girls got the crowd a little more into the show. They had started with \"The Itch,\" which got the younger members of the crowd riled up, and then they followed it up with \"A Devil and an Angel,\" \"Where the Buffalo Roam,\" \"Dinner at O'Malley's\" and they finished off with their trademark tune, \"Lost in Texas.\" By the end of the set, they had most of the stadium on their feet. They knew that their friends and loved ones were out in that crowd somewhere. But for a moment, their family had grown to include tens of thousands of new members. They had gotten a great roar of approval when they finished their set and took their first ever big-league bow. It wouldn't be their last.\n\nThey had gone backstage where they were going to watch the headliners do their thing. There was a man waiting there representing the record label with the necessary paperwork for them to sign. Mary looked it over and approved everything before the rest of the girls signed on. They would be going into a professional studio with an actual producer to work on their first official album. The company was fine with their material so far, but wanted them to produce a more polished form of it. The sound quality on their demo CD was less than stellar. The girls were all screaming and hugging and were rightfully excited. But their evening wasn't over yet. \n\nThey hung out in the back and chatted with all the people who made the tour happen and listening to the Eagles play. At the end of the show, Don Henley was jokingly complaining to the crowd about his voice giving out. He grabbed a camera and took him into the back with the entire crowd watching the big screen over the stage. He meandered into the back to where the still excited local band was hanging out. He had wandered up to Heather and asked her if she would mind helping him sing one last song. Heather almost went into shock. The only reason she was able to move was that the Eagle's front man grabbed her by the arm while the rest of the band gathered around her and pushed her towards the stage. Suddenly, she was out on stage with one of the biggest bands in rock history. Then someone handed her a microphone. Mr. Henley told the crowd that he felt that the young woman on stage with him had one of the most spectacular voices he'd heard in a while, and he was wondering if the crowd would mind them finishing off the evening with a duet. The crowd roared its approval.\n\nHeather's head was still swimming. She couldn't do this. She didn't even know what the song was. It was like that dream everyone has about showing up for class and having to take a test he or she hadn't studied for. But when the music started, she knew it was a song she could sing. Anyone who had listened to a jukebox or radio in the last twenty years knew the opening for \"Hotel California,\" and Heather was no different. From the moment that Don Henley let the words \"On a dark desert highway,\" escape his lips, Heather was in the zone. She got the nod after the first verse, launching into the second with \"There she stood in the doorway.\" If she WAS actually dreaming all this, she was going to milk it for all she could. \n\nWhen the song ended and the crowd erupted, Heather found herself with her face in her hands, much like when she had sang karaoke that first time almost a year earlier. All the members of the Eagles actually gave her a quick hug before she waved to the crowd and ran off stage and directly into the wait arms of her girlfriend. The other band members quickly swarmed the two of them. Heather heard them yelling jubilantly, but their voices quickly blurred into an incomprehensible stream of gibberish. The only thing she heard clearly was something Laurie whispered into her ear.\n\n\"Your heart is beating so loud,\" the girl said. Heather wasn't sure why she was able to make that out amongst the noise, but she didn't care. But it was true. She felt her heart pounding like a big drum and she could feel the blood pulsing through her veins.\n\n------------- ------------------------\n\nA little later that evening . . .\n\n------------- ------------------------\n\nEventually the clock struck midnight, the coach turned back into a pumpkin and it was time for Cinderella to leave the ball. The band was loading up their gear into their cars, soaking in what they had just been a part of. A bunch of people had actually come over to talk to them and ask when their CD was likely to be released. Their family and friends who had been in attendance had come over to talk to them and congratulate them. Most of the band relished the attention, but Heather found herself completely exhausted. She had just placed her guitar in the backseat of her beat-up, Volkswagen Thing when she felt someone tugging on her shirt. She turned around, thinking that maybe it was one of her band-mates. It wasn't.\n\nIn front of her was a young girl, no more than thirteen or fourteen years old. She was a gangly looking girl with an Eagles tee-shirt that was a size too large for her, and her big brown eyes were looking up at Heather from beneath a shock of brown hair. A couple, who Heather assumed were the girl's parents, was standing nearby. The girl was looking at Heather shyly. She held up what appeared to be an autograph book and a pen. The girl's name was written on the front of the book; Sarah Smith. Heather was perplexed. 'This girl isn't asking for what I think she is, is she?'\n\n\"Would you sign this for me?\" came the girl's voice in a whisper. Heather smiled down at her.\n\n\"Sure,\" Heather responded. She took the pen in her shaking hand. 'What's that about?' she wondered. \"First one of these I've ever done,\" she said. \"Did you enjoy the show?\" she asked. The girl nodded her head wildly.\n\n\"I want to be a musician when I grow up!\" the girl said excitedly. \n\n\"Good to hear!\" Heather said as she started to write. \"Rock'n'roll?\"\n\n\"Yep!\"\n\n\"Good. We need more girl rockers,\" Heather said warmly. She finished her autograph. It read: 'To Sarah. To the very first person who ever asked me for an autograph. You are now OFFICIALLY my favorite fan. When you're ready sign YOUR first autograph, keep me in mind! Thanks, Heather Englund.' She handed it to Sarah. \"I hope I did okay,\" she said.\n\nThe girl looked incredibly pleased and suddenly threw her arms around Heather's waist. Heather couldn't begin to describe what she was feeling. Then Sarah met her gaze again.\n\n\"Someday, I wanna be as good as you,\" she said, then rushed off to join up with her parents. The girl's mother waved and mouthed the words 'Thank you,' as their delighted daughter grabbed both her mother and father by the hand and dragged them towards the car. Heather waved back, then slumped back against her car.\n\n\"That was a wonderful thing you just did,\" came a voice from behind her, making her jump. Heather didn't even have to turn around to recognize that voice.\n\n\"Hi Jane. I'm glad you guys were able to make it.\"\n\n\"We wouldn't have missed it for all the world.\" Jane wrapped her arm around her young friend's shoulders. \"You were magnificent today. You know that, don't you?\"\n\n\"I was alright,\" Heather returned bashfully. \"I wasn't the only one out there.\"\n\n\"Maybe not, but you were one of the most popular topics of conversation. I'm proud of all you,\" Jane said as she kissed Heather on the forehead. \"But whether you want to admit it or not, you ARE something special Heather Englund. And that young girl was only one of the many people who have realized how special you're going to be.\"\n\nHeather hugged Jane hard. \"You know,\" she whispered, \"I think I realize why Michelle and Freddie love you so much.\"\n\n\"I know, I know,\" Jane said. \"I'm irresistible.\" The two of them looked over at the assembled mass. Laurie was talking with her father when she noticed that she was being looked at. She smiled at Jane, but positively glowed when her gaze met Heather's. \"Go ahead,\" murmured Jane. \"I'll see you at the restaurant.\" The gang was going to assemble at a local Italian restaurant where an entire room had been reserved for them, and the celebration was probably going to continue well into the night. But at that exact moment, Laurie had broken off from the main group and was heading over to the car. She stopped to give a quick hug to Jane and gave the older woman a friendly kiss as Jane headed back over to join the group. The hug Laurie gave Heather was much longer and the kiss was much sweeter. ",
        "\"Hey gorgeous,\" Laurie said at last. \"You're not sulking for some odd reason, are you?\"\n\n\"No,\" Heather said, holding Laurie close. \"Just trying to absorb it all. That was us out there tonight. I wasn't dreaming, was I?\"\n\n\"You weren't dreaming, sweetie. You were just making dreams come true.\"\n\n\"Hmm,\" Heather hummed as she and Laurie exchanged another kiss. \"A philosopher and a poet,\" she said. \"How did I get so lucky?\"\n\nLaurie giggled and blushed. \"It wasn't entirely luck,\" she said, nuzzling noses with Heather. \"Part of it was your fantastic ass!\"\n\n\"Is that all you think about? Sex?\" Heather and Laurie exchanged a laugh. Except when they had fought or had gone separate places on the holidays, the two of them probably hadn't gone for more than three days without engaging in some kind of sexual activity. And Heather was just as guilty of being amorous as her girlfriend. \n\n\"So,\" started Heather, \"ready to conquer the world?\" she asked, pointed her chin in the direction of the assembled mob. \n\n\"Where you go, I follow,\" Laurie said. \"Mostly because I want to stare at your ass.\"\n\n------------------------- ------------------------\n\nThe epilogue: Twelve years later . . . \n\n------------------------- ------------------------\n\nHeather was sitting on her couch, waiting for the camera crew to get set up. There was a time she never thought anyone would want to interview her, but she found herself doing quite a number of them. For the sake of her convenience, the crew and the nice man conducting the interview had driven all the way out to the sprawling ranch house that she and Laurie had shared for almost a decade. They had lived together in an apartment until the house was built, as it had been a custom job. 'Twelve years,' she thought. 'Has it really been that long?'\n\nHow much had happened in the decade plus since the band had played that Eagles show? To say that the band had met with some success would be an understatement of tremendous degree. They had produced four multi-platinum albums in the prior decade and were planning their fifth. They had been labeled by Rolling Stone magazine and the Grammy Awards committee as the Band of the Decade, and were one of the best selling bands in recent American history. They had pulled off three successful tours as headliners, two of which went international. CNN had decided to do a weeklong special on the group. They had talked to all the members of the band and their \"supporting cast.\" That included the members of the band, Laurie's father, Mr. Price, Liz, Alice, Jane, Michelle and Freddie. What a decade they had all had!\n\nFreddie, Michelle and Jane were still running the Ghost Town Bed and Breakfast, which was only a twenty-minute drive from Laurie and Heather's house. The business was quite successful for them. They had a staff of about ten people besides themselves, and the place had been listed as \"the perfect family getaway\" in People magazine's review of that type of business. Jane's health had held up over the years, as had her relationship with Freddie and Michelle.\n\nJenny and Mike had broken up within a year of the concert, but they had done so as friends. After a whirlwind romance that included a lot of threesomes, the two had realized that there were long-term issues that would have made marriage difficult. Mike wanted to settle down and start a family right away, while Jenny loved the life of a rock star. Mike met a nice girl and had invited the entire band to the wedding. Jenny had a couple of relationships after Mike, until finally marrying a guy named David Johnson, the group's tour manager. \n\nMary had taken an interest in the business aspect of the music industry, and actually helped produce some albums for some up-and-coming bands during her free time. Strangely, the girl who had dated a different guy each week BEFORE being in a member of a successful band had needed to become a rock'n'roll star before she settled down. Her friends had all made fun of her for being the only person to mellow out when she was on tour. She had started dating the lead singer of one of the hot boy-bands at the time, and the two were still together. Mary had to bow out early of the group's second tour so she could give birth to the first of her two children. She had hired a full-time nanny to accompany her and her children whenever they went on tour. This was an idea that would influence some of her band-mates later on.\n\nThe strangest change the band underwent was when Alice left the group after their first tour. Her primary love had become songwriting, and that first tour had taken her away from Liz for longer than she wanted. The two women were still together and still playing their sex games. Alice was still considered a member of the band and was given her props on all their albums. This was also due to the fact that Alice wrote about eighty-five percent of Lost in Texas's material. She did do some dates with them when the band's tour came nearby, and she was instrumental in finding her own replacement. They had been listening to some demos by applicants when they found a girl who could apparently play almost any musical instrument. The girl's name was Audrey Barker, a twenty-three-year-old from a small farming town in Nebraska. She had been born mute, but had so much love for music that she had learned every instrument she could. She was a thin girl with short brown hair who was as shy as could be when she got called up to meet the band and audition. The members of the band loved her the moment they met her, and they couldn't imagine a better replacement for Alice. It was good, because she had been the only person they had bothered to call. After Heather had helped put a little bit of muscle on the girl's frame, she had started leaving a trail of broken hearts behind her. Mary was happy because it meant she wasn't the only completely heterosexual member of the band anymore.\n\nAnd then there was Heather and Laurie. The two were just as in love as they had been that first summer down on the ranch. The decision to build this house and live together had been easy. Five years after they had met, the Supreme Court of the United States had declared that the Defense of Marriage Act violated the Constitution, allowing a lawsuit filed by a number of gay couples to go forward. Soon thereafter, gay marriages (or \"civil unions\") were allowed. The band had been playing in Madrid, Spain at the time. Heather had told Jane to call her as soon as the final decision was handed down. When that call came, Heather had proposed to Laurie on stage in front of about thirty thousand people. To no one's surprise, Laurie said \"yes\" with tears of joy in her eyes. Afterwards, Heather had taken Laurie's last name. She wanted to leave her own name behind.\n\nSeveral years later, the group had decided to take some time off from touring and spend a bit longer putting their next album together. The entire crew had all bought houses in the same area, except for Alice. She and Liz had to live about two hours away due to the proximity to Liz's new workplace. But Alice still made the trip out to visit her friends at least once a week while the group was in town, and she talked to someone from the group at least once on day on the phone. Each member of the group was working on their own projects, though each of them made it clear that NONE of them had any desire to go solo. Their personal projects were only going forward if they didn't interfere with band activity. Heather was working on an album with consisted of cover tunes that she had always wanted to sing. From Harry Chapin's \"Mr. Tanner\" to Warren Zevon's \"Lawyers, Guns and Money,\" she was able to pay some tribute to the artists that had influenced her. And she even included Don McLean's \"Babylon.\" It was almost two decades since she had run crying from a high school gymnasium stage, but she was finally able to sing that song. And like Johnny Cash had done over a decade earlier, the album was just her and a guitar. The CD was going to be released that Christmas season, and all proceeds were going to Heather's favorite charity. The charity in question was a Dallas based group that raised awareness for and provided support to the victims of domestic violence. \n\nSitting around and watching Mary's children playing at the groups numerous recording sessions had a tremendous impact on Laurie and Heather. They had actually begun discussing adoption, much to everyone's surprise. Heather was surprised herself. Laurie had always wanted to be a mom, but doctors had told her that, due to some strange anatomical anomaly, that carrying a child to term could actually be dangerous for her. Laurie had been understandably disappointed, but the idea of adoption was on the table. What surprised people was Heather's willingness to go through with it. Even she was shocked at how badly she wanted a family. It wasn't that she would have been unhappy if the only other member of her family had been Laurie, but Heather wanted to be a mother. Laurie had lovingly reminded her of their conversation on the trip back from her mother's funeral. Heather had always fantasized about being part of a family. Suddenly, she had a chance to make that fantasy a reality. They had gone ahead with their plans to adopt, but Heather had dropped another bombshell. She wanted to have a child of her own. Laurie had been overjoyed, and the two had found a cousin of Laurie's that was willing to donate the sperm. This way, the child would be biologically related to both of his or her mothers. After the miracle of artificial insemination and the passing of nine months, Heather had given birth to twin boys. \n\nTheir names were Mark and Matthew, and they were precious beyond words. Of course, the birth itself had been a circus of almost epic proportions. Laurie had wanted to be in the room during labor, but had passed out early in the event. Mary, having endured this process herself, was coaching a very distressed Heather who wanted nothing more than to be doped up and awoken when it was all over. When that request was denied, she had let loose with a stream of expletives that would make a sailor blush with shame. The young, the old and a number of people in between had gone running for cover to escape the verbal tirade. Michelle, one of the only people who didn't seem to be \"grossed out\" by the whole process, had later told Heather that it had been some of the most original swearing that she had ever heard in her life. Coming from a muscular cowgirl who had spent some time on the rodeo circuit, that was high praise indeed.\n\nBut then came \"the moment.\" It was that point in time that Heather held both her sons in her arms for the first time. Their looks of innocence were mirrored in Heather's own face. Her eyes were opened wide as she looked down at those little faces. Laurie had come around and had moved to the bedside. Heather looked at her wife with total wonder on her face. \"Did I do this?\" she asked. \n\n\"Yes,\" Laurie had said, love emanating from her every pore. \"Yes, you did.\" Heather had handed Laurie one of THEIR sons. Laurie was just as captivated as Heather had been. She simply hadn't sweated as much.\n\nThe years since that moment had been the happiest of the two girls' lives. Doctors had been able to help Laurie induce lactation so that both women could breast feed, helping her and Heather establish a greater sense of equal participation in their relationship. They also had adopted a little blonde-haired girl named Margaret who had been three years old at the time. Like Mary, they had hired a full-time nanny to help with the children, particularly when they were on the road. The lady they hired was the granddaughter of Amelia, the woman who had been Laurie's nanny when she was younger. Their little family had gotten a little larger. And having people willing to baby-sit wasn't going to be a problem. At least one of their band-mates or one of the women at the ranch was over almost every day when Laurie and Heather were home. Margaret, now six years old, absolutely ADORED her Aunt Freddie, Aunt Michelle and Aunt Jane. The boys had grown up around these women and were fairly comfortable around them, though they did tend to cling to the legs of one mother or the other from time to time. \n\nAt that moment, both her sons and her daughter were sitting on another couch with Laurie, who had her hands full trying to keep their mob sitting still for Heather's interview. Watching the little rascals interact with the still somewhat childlike Laurie brought a smile to Heather's face. Mark was trying to crawl over the back of the couch, but Yesenia, their nanny, was there to stop him from falling off the back. Laurie smiled at the sweet woman before she went back to trying to clean a food stain off Matthew's shirt. But finally, it was time to start the interview. \n\nThe interviewer sat down in a chair next to the camera array and smiled. Margaret had peppered him with questions of her own about what kind of questions he was going to ask her mother. Then she had shown her favorite doll to every member of the camera crew. Now she was sitting over next to Laurie, waving wildly at one of the cameramen who was trying very hard not to be distracted by the young girl's overwhelming \"cuteness.\" \n\n\"So,\" started the man conducting the interview with a smile on his face. The two of them were temporarily distracted again when Matthew got loose from Laurie and came running over to hug one of Heather's legs. She picked him up and nuzzled noses with him until he started giggling and wrapped his tiny arms around Heather's neck. She patted him on the back a couple of times, then put him back on the ground. \n\n\"Go sit next to Momma Laurie while Momma Heather talks to this nice man. If we don't finish this up, we might not have time to go over to Aunt Jane's and play with the doggies.\" Matthew's eyes opened wide and he scurried over to Laurie and climbed into her lap next to his brother. Jane and her partners had recently gotten a couple of new puppies, and the boys were obsessed with them. Laurie wrapped her arms around both boys and hugged them, smiling at Heather all the while. \"Sorry,\" the blonde woman said. \"They're slippery little rascals,\" she finished as she tussled the boys' hair. \n\n\"So,\" said Heather with a grin, turning her attention back to the interviewer. The man had been getting a chuckle out of seeing the two young women try and wrangle their little pack of devils. \n\n\"I guess the best place to begin,\" the man said, \"is at the beginning. We've already told the world about how successful this group has been and the influence they've had on new artists, particularly women. So how, in your own words, did all this come about?\"\n\nHeather was still smiling. \"I guess you could say it all started when we got lost in Texas . . .\"\n\n------------------- -------------------\n\nThe End"
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "battle bands",
        "give heather",
        "dark-haired siren",
        "made laurie",
        "whispered laurie",
        "laurie tits",
        "freddie jane",
        "record label",
        "heather close",
        "alice birthday"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/lost-in-texas-ch-05"
}