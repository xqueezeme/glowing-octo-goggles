{
    "title": "The Circle Ch. 42",
    "pages": [
        "<p align=\"center\">Chapter 42 \u2013 Reality TV show starts</p>\n\n\"Quiet! Come on, the show is about to start.\" That command came from four or five people in the lounge to stop the hum of conversation. Almost thirty people crowded into the room.\n\nThe entire Circle was gathered in the family room in front of the large TV set. That night was the first airing of the reality TV series entitled  'The Circle. ' It was the start of thirteen weeks showing the edited taping from the nearly continuous videography of The Circle for the past six months. The producers had told Bob, the point person for the video work, that they had enough material for three seasons if the show became a hit.\n\nThe commercial break ended, and a picture of the house on the cul-de-sac came into view, photographed from above through some flowering trees, no doubt by a drone. The voice over announcer said, \"This is the home of The Circle, a most unusual living arrangement for thirteen men and seventeen women. If you were to ask the basis for The Circle, you would think you'd get thirty different answers, but not from this group \u2013 everyone will tell you that love and caring is the basis for living here, and it's because of that response that we bring you this unique show.\"\n\nThe camera angle lowered to the ground, and sweep across the driveway, as it came up behind Jim coming out of the garage and heading towards the front door. The voice over continued, \"Even with this philosophy, this group has one interesting experience after another, and that's the reason for this televised series. Join us as we join The Circle ...\"\n\nThe camera magically followed Jim inside, and right into the arms of Renee, Lynn, Ellen, Zoey, Monica, and Tina, and the warm handshakes and backslaps from Bob, Nathan, Steve, Kurt, and Bill. The voices of welcome filled the sound waves.\n\nThere were some mundane conversations about how each person's day had gone. This was obviously a welcome home after a normal day at work. Matt came in a few minutes later, receiving a similar welcome. Lolly appeared, and then Ellie, and they both received loving welcomes from everyone.\n\nThe scene changed to where Jess was interviewing Jim, and she asked, \"What is the purpose of all of the welcome home rituals The Circle does?\"\n\nJim smiled, \"It's easy to walk into a place \u2013 home, for instance \u2013 and be greeted or welcomed. In our case, we want to show each other that we are glad they are back in our presence. We want to show each other that we celebrate that presence, and we know they feel the same way. If you love somebody, you don't just say, 'Oh, yeah. Hi. I remember you from yesterday.' You get up and make a fuss. You want them to feel good. Regardless of the type of day I've had at work, when I get home, I know I'm loved, cared for, even adored, by all of my partners. It changes my whole perspective on life and what I can accomplish.\"\n\nThe video flicked back to Brad and Sandy coming into the house. Everyone gave them a round of applause. After a few kisses, Sandy did a little happy dance, and explained about how the large lunch that she'd arranged and hosted for a local charity had gone \u2013 five hundred people and a national-level guest speaker. Everyone listened with rapt attention and asked intelligent questions as she talked about the event; NBC had wisely bleeped out the name of the charity and speaker.\n\nAfter a commercial break, the TV show returned, and it was the moment when Lolly announced her pregnancy to the entire house and everyone was so happy for her. They even showed the men offering up their paternity, a point I was sure would make for great gossip \u2013 long after the fact \u2013 in the supermarket tabloids. We all knew that later in the series Lolly would indeed chose Derek as the official baby daddy.\n\nAlso captured at the dinner table were Lolly and Don canoodling together with little kisses and obvious love. Down the table Michelle and Steve were similarly engaged. We all figured The Circle was in for a major blast from the public, particularly the red states, even though they had the higher divorce rates compared to blue states.\n\nThere were a few more interactions and the hour-long show ended.\n\nBob muted the sound from the TV set, and asked, \"What'd you think?\"\n\nAlice jumped in first, \"I think they did a great job of editing, but it's obviously not chronological. They've left a lot of open questions about who we are that'll make people want to tune back in.\"\n\nZoey said, \"NBC put up a whole website about us with our pictures and inter-relationships and everything, even little bios. They showed the web address at the end.\"\n\nMonica said, \"I'm sure we'll get a dose of hate mail full of judgments about our sexual and romantic mores.\"\n\nZoey chided, \"But that's why we're on TV. That NBC guy who was here said that Sister Wives got some of that kind of mail, but most of what they got was fan mail.\"\n\n\"How will we get any of it?\" Lolly asked.\n\nBob said, \"NBC will collect it in batches and then send it unless it's overwhelming. They have machines that check for bad stuff in the envelopes too, even anthrax and other viruses. We have an assistant screening it in New York, as well as keeping tabs on us. Her name is Marty.\"\n\nSheila bounced Marshall on her lap; \"Do we need to get security, now that we're on TV again?\"\n\nSeveral of the others murmured in agreement.\n\nBob nodded, \"It wouldn't hurt. I'll call first thing in the morning and get something set up like we had last time. Does everyone still have those little stickers on their bumpers we gave out the last time?\"\n\nTammy raised her hand, \"I don't.\"\n\n\"Remind me after we break up and I'll put one on your car. The stickers allow the security guys to wave you through the barricade without stopping you.\" He turned to the broader group, \"Any worries or concerns about the TV show?\"\n\nNo one spoke up. Jim finally said, \"I guess we'll all know more when we go to work tomorrow.\"\n\nPractically everyone in The Circle got calls or visitors the next day, and the conversations all started the same way: 'Hey, I saw you on TV last night.' \n\nAbout two-thirds of the commenters followed-up with a statement such as, 'I didn't know you lived like that ... with all those other people. That must be fun.' Apparently, they'd missed all the prior ballyhoo about the Circle's lifestyle in the press.\n\nSooner or later, the sexual innuendo of the show was brought into the conversation, be it with males or females. 'Do you really all ... you know ... sleep with everybody else?'\n\nOver the coming weeks, the word 'polyamory,' which had been almost nonexistent in the American vocabulary, was suddenly the most frequently used word on other TV shows such as Extra, What's On, Access Hollywood, Oprah, Ellen,  and the late night shows. All in all, the treatment was kind and neutral, acknowledging that we lived a very different life style from most of the population.\n\nPeople magazine did a three-page spread about the show and our living arrangements, removing a little of the mystique that NBC was trying to verge on. The mag blatantly explained how we were all having sex with everyone else \u2013 well, not the guy-guy thing, but everything else. At least they weren't judgmental about it; they only reported the news.\n\nSince we'd invited the press coverage we didn't respond. One thing the magazines did do was help explain who the various people were in The Circle. Name recognition happened quickly.\n\nTraffic on the cul-de-sac did increase, but the presence of a ninja warrior about as big as our house, with a large bulge in his jacket, and in a black SUV with blacked out windows discouraged further enquiries. People just turned around and kept on driving hoping they wouldn't get shot; they'd at least seen a corner of the house far up the driveway.\n\nMarty Graham, the NBC groupie connected with the show, called on Friday. She got Bob on the line; \"I just wanted to report about the mail \u2013 and you as a group have a ton of it. It'd take weeks to read everything that's come in so far, so I'll just send along a sample bag after we've checked it over. There were some implied threats and we're following up on those with the police.\"\n\nBob asked for details. Marty explained, \"In reality TV, you'll find someone who wants to hate every show, and every character on it. We have some real problems with the Bachelor and the Bachelorette \u2013 stalkers, people wanting to 'get to' the main characters, people who threaten everything from murder to suicide if they're not the chosen 'one.'\"\n\nMarty went on, \"In your case, you've threatened the foundations of marriage \u2013 and I want to thank you for that personally. You've said to the world, 'Look, you don't have to be married to be loved and to have meaningful relationships.' I so agree with the way you're living, but every intolerant fundamentalist and conservative has their nose out of joint; we predicted that, and it sells corn flakes in Boise. The advertisers are ecstatic about the show and its ratings; those other groups aren't, and they're demanding that we take it off the air. That said, they'll keep on watching. NBC and producers give the show an 'A' rating \u2013 their best.\"\n\nMarty laughed, \"A controversial show attracts viewers, and the more viewers the more advertising revenue. It's a nice symbiotic relationship. So, we are going to spice up some of the upcoming episode a little more than we had to drive that controversy; not over the line \u2013 I hope \u2013 but we want controversy ... and sex. You might tell Lolly that we're going to play up the paternity issue a bit more with a reminder of what went on. I hope that's OK with her.\"\n\nBob and Lolly had already talked about that very issue, and she was quite content about having that raised. It was predictable. He told Marty to proceed. People at the PR firm where Lolly worked already knew about her lifestyle, so it was no big deal to them.\n\nMarty did allow as how a large portion of the mail also raved about the show and the characters, and contained several hundred offers from men and women who wanted to join The Circle, some offering significant money to buy into the group.\n\nShe laughed, \"If I could, I'd be on that list too. I think what you've got there is exactly what I want in my life \u2013 beautiful people, loving and caring relationships, everybody supports everybody else, sex; I think it's the best living arrangement I've ever seen. I already love everyone, and I haven't even met any of you face-to-face.\"\n\nBob chuckled, \"Well, you come on out here from L.A. and we'll show you how well we treat our guests.\" The flirty tone in his voice certainly conveyed some level of sexuality to her.\n\nMarty replied with a laugh, \"I'm in New York, and someday soon you might find me on your doorstep.\"\n\n<p align=\"center\">* * * * *</p>\n\nThe next episode of The Circle aired a week later. As Marty had said, this one opened up with a recap, including Lolly announcing her pregnancy. This time, the offers to be the baby daddy weren't glossed over; if anything they were amplified with close-ups and exciting music as each man volunteered to be listed on the birth certificate as the 'official' father. The episode made the announcements look much more dramatic and serious than they had been.\n\nEven Don's offer was aired, including his comments about leaving babies to Monica's generation but wanting to be on Lolly's 'good side.' The implication about sex with her was obvious. The video flashed to Michelle's reaction too, except she was leaning back against Steve, and it was obvious that they'd just shared a kiss. Again, the whole situation was made to look really perilous, particular the way some background music entered the scene. Somehow they made Michelle's kiss look like a touch of revenge. No one liked that part.\n\nThe next part of the episode contained a conversation Mike had with Zoey about his teenage daughter who lived with her mother, and how pissed she'd be to find out her father was on a reality TV show. He told Zoey with a chuckle about how he'd tried to let her know ahead of time, so she could be prepared with responses about her father's lifestyle. Instead, the teen had adopted her usual arrogant 'up yours' attitude and probably didn't hear what her father was trying to tell her. This came out as a 'told you so' scene for the daughter; 'up yours' back at ya.\n\nThe rest of the episode followed Renee and Ellen going over various aspects of the supermodel's schedule, including the controversial bits, plus some modeling of clothing and lingerie she did for a few members of The Circle. There were a few scenes of Renee at work on a photo shoot. Renee was becoming the poster child for The Circle because of her fame and looks.\n\nAgain, The Circle was a hot topic on the talk and entertainment-related TV shows. This time the 'adult' nature of the subject matter on our show was explicitly addressed, mainly around Lolly's pregnancy and the indeterminate fatherhood of the baby. At least most of the shows emphasized the loving nature of the relationships and the conscious decision not to track paternity, since everyone wanted to be the baby's parents.\n\nMarty called again at the end of the week with a report about the fan mail. Apparently, another couple of truckloads had arrived. The results were similar to the week before, either condemning Lolly for her sluttish ways as a mother-to-be, or praising her liberated point of view as well as that of all her friends and lovers.\n\nThe third episode of The Circle focused on how everyone interacted with the three toddlers and three babies we already had. The show featured Tammy, Lynn, and Michelle, as they played 'universal grandmothers,' and then the mothers, including how they swapped the babies around for things like breasts feeding. Of course, this was standard behavior in America in colonial times, even into the twentieth century, up to World War II. The men were featured in their 'daddy' roles, usually interacting with multiple children. Several times, a woman or man would be called ma-ma or da-da, regardless of the bloodlines.\n\nAnother part of the show featured Matt's photography exhibition and show that he'd had about six months prior. One hoped for result had been resurgence in purchases of his nudes, and that indeed turned out to be the case. Suddenly, instead of being a noted photographer on the local level, he became nationally renowned.\n\nThe fan mail on this episode dropped off, according to Marty, and split between how loving everyone was with the children, and how terrible it was that each child didn't have a clearly identified mother or father. The specter of what the kids would be like as they got older ranged from perfect and well-adjusted, to demented and homicidal druggies with perversions involving guns, small children, and pets.\n\nThe next episode featured some of the struggles Tammy was going through. She was rightly embarrassed, but acknowledged that she had been asked if she'd allow her story to unfold over several weeks on the show.\n\nSomehow, Sheila also appeared on the show talking about how she'd been screwed over in her freshman year in college, how she'd found out, and how devastated she'd been. She even talked about being an ice princess until she met Bob, Matt, and Jim, all of whom had been so patient with her.\n\nThere was also an orchestrated discussion with Nathan and Matt, where Tammy asked about what the men remembered about the convenience store robbery they'd thwarted. The show even made a dramatic moment about playing the video of the robbery from the security camera to Tammy who hadn't seen the security camera footage.\n\nLater in the same show, they showed a conversation with Bob and Derek about the start of The Circle. Bob specifically talked about falling in love with four women simultaneously, and how he didn't want to choose just one \u2013 he wanted Zoey, AND Monica, AND Sheila, AND Alice as his girlfriends and lovers. So had Jim and Matt. The discussion led to a short discourse between them on monogamy and exclusivity, and how there were other options than tacitly accepting what had become the norm for society. Derek also asked some good questions about jealousy, and how The Circle dealt with it.\n\nThis time the show also delicately addressed Matt's photographic work, including the photo shoot he did with Renee and Ellen, where they modeled nude for him to be included in his larger exhibit. There were some teasing views of the two naked women, but strategic placement of equipment, lights, or other things were in the way of a complete body shot; only their heads, upper torsos, or legs could be seen. Again, there was a boost in online sales.\n\nThe next show also got a little daring and 'adult.' The show dealt in part with the jobs \u2013 past and present \u2013 of many of The Circle members. In doing this, the show revealed that Marlene and Tina had been 'adult entertainers.' The show didn't go any further to explain that terminology, but anyone with an IQ over ten could infer that the women had been strippers and/or in the porn movie industry.\n\nThe show also focused in on Tammy again, and a long talk Zoey and later Alex and Marlene had with her about dealing with the grief she carried about her late husband, and moving on with life by being more involved. They were very supportive, and the emotions and caring showed on that segment to the extent that many viewers reportedly got tears in their eyes.\n\nIn talking to Tammy, Alex suggested counseling, and that led to Tammy's first encounter with Dr. Jessica Slarinsky. In this regard, the show revealed that Dr. S had also helped Ellen before the episodes had started. Further, the tilt of the show at that stage emphasized that there is help available for the kinds of problems they each faced.\n\nSome of the more mundane features of The Circle were also shown in that and other episodes, including some of the Sunday evening meetings when there were some decisions made about a new landscape and plowing service, buying some new patio furniture, adding to the carport, buying another refrigerator, and getting some artwork for some of the halls and lounge. The producers wanted this because it showed the decision-making process in our Circle.\n\nThe next episode of The Circle dealt with some of the drama and homework Tammy did as part of her counseling, and some of the mechanics about living in the house.\n\nA cute part of the episode was when Jim described to her the code about how doors were placed in the house, even including a demonstration: wide open door, come in and even participate in any 'activities' going on within \u2013 he hinted strongly about their potentially sexual nature; partly open door, voyeurs are invited; and closed door, privacy please unless you live here. The complex world of roommates was also described. This produced a lot of fan mail, much of it humorous about other methods of signaling the intent of the parties in the room, such as a condom on the doorknob inviting safe sex participation.\n\nThe next episode dealt entirely with the first part of the plane crash that Tracy was on, particularly the anguish and anxiety at the house as the news came in, and then Jim, and later Matt and Sheila going to St. Louis to be at the scene of the crash with Jim \u2013 Tracy's brother. Of course, the show spliced in many scenes of the air crash from the news, and the on-scene rescues, any one of which could have been Tracy. Some scenes had later been captured at the hospital, with Jim and the others in the waiting room, and later even a couple of scenes in Tracy's hospital room. The episode was a tearjerker by any measure, and there was no closure to the case when the show ended.\n\nThe following week picked up with Tracy and then her return home as an invalid and healing patient. If there was one show that demonstrated the love and caring of the entire Circle, this was the one following on the heels of the one before. It was a rare look at someone who had actually survived a plane disaster, and the show made it look as though the love surrounding Tracy had been the turning point in her personal disaster. The show also gave homage to Doug Mayes, Tracy's boss, who had died in the disaster, including some long shots of Tracy at the cemetery putting flowers at his monument.",
        "The edges of the show and a few after that followed Tammy and Tracy through their very different struggles about rebuilding their lives, and broadened the focus on the daily life in the house, including some of the pairings and threesomes that formed some evenings after dinner and that went off to make love. Each episode of the show seemed to show a little more of that side of things.\n\nJessica's move into the house to do some 'research' was a feature of one episode, including long talks with Jim and Monica where they each encapsulated many of the values, principles, and operating practices of The Circle. The episodes featuring the interviews built up a latent audience for Jessica's research paper on the polyamorous intentional family.\n\nAs promised, Marty sent a bag or two of fan mail each week \u2013 the letters she thought were the more interesting and representative of the thousands received. They sat piled on a table in the lounge and it became a favorite pastime after dinner for some of The Circle members to gather and read them to each other. A favorite expression heard often in this pastime was, \"Oh, hey. Listen to this one ...\"\n\n<p align=\"center\">* * * * *</p>\n\nDarrell Brinnell or 'Dar' \u2013 rhymes with 'car' \u2013 as he told everyone to call him, was the top cameraman or videographer on the NBC team assigned to the filming of The Circle.  Tall and gangly and in his late thirties, he had a quiet demeanor, a sense of humor, and a pleasing personality on or off the job. He had a knack for capturing the rare and interesting moments in the daily life of The Circle on film, and that was probably why NBC had put him on the job to film The Circle TV show. He was a professional.\n\nDar obviously liked the people in The Circle, and enjoyed bantering with them between shots. When a comment or two would lighten the day and not interfere with the filming, everyone liked it when he stepped in to say just the right thing. \n\nDar knew everyone's full name, even the babies \u2013 and he could tell them apart, unlike some of the other crew. He was engaging, and in brief conversations revealed that he had a wide range of interests and knowledge.\n\nBecause of her work at the local TV station with other cameramen, Willow was drawn to Dar, and it became no surprise to see them hanging out together even when he was off of his shift. Willow made a natural move to include him in some of The Circle's public activities, and he fitted in well. The pair especially liked to bicycle around the back roads and go on short adventures \u2013 to the state forest for a picnic, or into the small town to poke around the various shops and maybe get an ice cream.\n\nDar outfitted one of the bikes in the garage with a toddler seat so that Ariana could accompany them. He'd put a diaper pack on the back of his bike, wore a backpack with lunch or other supplies, and off the three of them would go, often accompanied by several of the others. Of course, this also meant that he got videoed by another NBC team because he was socializing with one of the members \u2013 and a somewhat famous one at that. He became an outside 'boyfriend.'\n\nDar was inclusive, and liked group activities. The more the merrier seemed to be his motto. One could feel his enthusiasm rise when other people wanted to join in a picnic or outing of some kind.\n\nIt was rare to hear Dar disagree with someone, even on his own staff, and the word 'but' \u2013 an indicator of a negative opinion, just wasn't in his vocabulary. He had a natural way of coaxing someone to see other points of view without discord. He never criticized another person, even public personalities in the news. At the other extreme, he was quick with praise and celebration when someone on his team or in The Circle did something noteworthy.\n\nWhen Tracy finally shed the cast on her broken arm from the airplane crash and simultaneously lost the therapeutic boot on her injured foot, Dar was the first to see the changes and give her a brief hug and supportive word about her progress.\n\nBecause of her job at WWLX-TV, Willow became the focus of several of the camera teams for a couple of weeks. She would go into work in the mid-morning, pick up the copy for the noon news and deliver that accompanying another newscaster and a weather girl, work up the copy for the evening news in the afternoon plus handle some station breaks, and then at five, five-thirty, and again at six would host half-hour newscasts. After that, she'd wrap up for the day and return home.\n\nOne day, Dar caught up to Lynn who was playing with Ariana just as her mother came on TV. Ariana lit up like a Christmas tree, and kept pointing at the TV set and repeating 'ma-ma.' Ariana eventually paid rapt attention to every word her mother was saying, whether it was about the crisis in Syria or the local city council meeting; the toddler looked so intent on catching every nuance of the news. Dar captured the cuteness of the toddler on film with rare and pleasing camera angles.\n\nLater, Dar showed Willow and Lynn the clip to much laughter between them. Even Ariana liked watching herself on the television set.\n\nDar invited Lynn and Willow to dinner one Sunday evening when everyone was off duty. He took his double date in stride and was the perfect host for the two women. He was equally attentive, showing great interest in everything either woman raised. A week later, he took Tammy and Michelle out, obviously aware that Michelle was married, but wanting to just spend time with some of The Circle who he saw most frequently. He obviously liked everyone, especially the girls.\n\nDuring the week he started to engage more with Alice who worked from home, and then some of the other women. He even got to follow Tracy around Visionix one day to get an indication of what she did on the job. Visionix loved the free advertising.\n\nDar and Matt had a natural affinity because of their mutual interest in photography, including of the human form \u2013 Matt with still lifes, and Dar with the video camera. They had a whole new vocabulary about cameras, lenses, focal lengths, CMOS chips, light adaptions, and so on that seemed foreign to most of the others. It was not unusual to see Matt standing behind Dar as he shot some scenes, learning about positioning and camera angle from the pro.\n\nMatt and Alice confessed to Dar about the porn films they'd done. No one as yet had alerted NBC to this aspect of The Circle. Dar laughed, and did borrow copies of a DVD or two to view.\n\nOne night after Willow and Jim had made love, she asked, \"Would I be creating an awkward situation if I made love with Darrell sometime soon? I really like him, and so does everyone else.\"\n\nJim smiled, \"Of course not. Despite your presence in The Circle, you are still a free woman. No one owns you or needs to give you permission.\"\n\nWillow nodded, \"I just wanted to be sure ... and that you especially are OK with that?\"\n\n\"I like Darrell, and I know most of the others do too. He's gone way out of his way to befriend each of us, and we all know he likes us and we like him. He's a good choice.\"\n\nWillow snuggled into Jim's arms, \"Thank you for understanding. Dar has been so good to me and Ariana.\"\n\nJim thought a moment, \"Does he want to belong to The Circle? He could, you know. Right now it might compromise his work, but someday the TV show will end. He might like a home with us. Ask him about it.\"\n\nJim could feel Willow smile against his chest. She just kissed him to indicate that she'd heard his remark.\n\nWillow sought out Darrell the next evening immediately after she got home from work. An astute observer would have seen the seductive smile on her face, and the enthusiasm with which she greeted her friend. After a few minutes, there was some whispering and then the two of them silently slipped away from the others for the night.\n\nJess had observed the interaction of Willow and Dar. She'd not yet interviewed Willow for her research paper, but now that need ratcheted up on her agenda. She also decided to put Darrell on her list too. \n\nAs Jess sat thinking about her research and findings so far, a pair of strong hands came onto her shoulders from the back, and gently massaged her muscles. She closed her eyes and instantly gave into the sensations provoked by the hands, even purring aloud to indicate her approval.\n\nA minute later, someone kissed her ear and then down her neck. She turned into Mike's arms and kissed him on the lips. \"Yummmm,\" she purred. \"You do that divinely.\"\n\nMike said, \"I can do a little better without the sweater.\"\n\nJess gave a subtle laugh, \"I bet you could do even better than that without clothes.\"\n\nMike nodded and kissed her nose, \"You have the best ideas; maybe we should try that.\"\n\nJess rose and put her arms around his neck as he joined her in front of the sofa. \"I want the whole treatment. Come with me.\" She led him away from the lounge towards the stairs to her room.\n\nSteph had been sitting a few feet away watching the less than subtle invitation to couple between the pair. She'd also seen Willow and Dar disappear; it was that time of the evening.\n\nA minute later when she looked up from her magazine, Steve stood in front of her with a hand out to her. \"I am hoping you might like to join me tonight. We haven't had time together for several weeks, and ... well, I really missed you while you were away.\"\n\nSteph broke into a smile and stood. She took Steve's hand, kissed the back of it with the roughness honed from his manual work, and then wrapped his arm around her. Together, they headed off.\n\nTammy had stayed after dinner, not to babysit, but to enjoy full membership in The Circle. People were still very gentle in approaching her for sex, but she was slowly getting to know many of the people in an intimate way.\n\nKyle came over and sat down beside Tammy. Just his presence at this time of night signaled a wish for sexual union. Kyle leaned in and kissed Tammy, and she kissed back with more than her usual ferocity. \n\nSince breaking through the sexual barriers she'd put up years earlier, Tammy had rediscovered the kinetic joy of sex, and was like a new convert to some cult \u2013 she couldn't get enough of that side of The Circle, fast enough. Not everyone knew of this side to her, however. \n\nKyle pulled away, \"Wow. I like the way you kiss.\"\n\n\"Me too, and the answer is yes.\"\n\n\"Answer? I haven't asked a question yet.\"\n\n\"But you're going to, and the answer is yes, I'd love to, please.\"\n\nKyle teased, \"So, you really don't mind taking over my job of emptying all the public wastebaskets each day next week? \n\nTammy poked at him, \"Nonsense. You were going to ask me if I'd like to go to your room with you. You want to intimately explore my hot middle-age body.\"\n\nKyle laughed, \"True, that.\"\n\n\"And so, my answer is yes. I want to make love with you.\" Tammy pulled Kyle's head to hers and they kissed again. \n\nKyle continued to suffer from some level of disbelief that Tammy could be so ready to go off with him after her months around The Circle as she struggled with the last steps to her grief and unwillingness to commit further to the world. \"We don't have to ... you know ... if you'd rather just ...\"\n\nTammy leaned into Kyle so her words would be clear and only for his ears; she whispered, \"I want to fuck you. I want you to fuck me. I want us to make love. NOW.\"\n\nKyle found his sea legs at that point. \"Great. Let's go.\" He put out his hand, Tammy took it, and off they went towards Kyle's quarters. Tammy looked so pleased. \n\nThe next night the TV cameras recorded some other pairings by the same women. Willow went off with Bill. Lynn captured Dar and led him away instead of Derek, her previous night's partner. Jess went off with Alex. Mike led an increasingly pregnant and very happy Lolly away towards his room. Steph accepted an obvious proposition from Matt; and Steve went off with Tammy, who had another wide grin on her face because she was going to get to make love to a new man.\n\nThe camera also captured Alice leaning in and kissing Monica in a romantic way. Together the two women made a rather obvious indecent proposal to Jim that made him break into a huge smile, and the three of them headed off together. Right behind them Bob and Nathan had captured Ellie for some similar evening fun."
    ],
    "authorname": "SteveWallace",
    "tags": [
        "polyamory",
        "group",
        "relationships",
        "orgy",
        "threesomes",
        "foursomes",
        "reality tv",
        "family life"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-circle-ch-42"
}