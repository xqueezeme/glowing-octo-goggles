{
    "title": "Christian College Sex Comedy Ch. 04",
    "pages": [
        "(Once more, thank you frontma for your editing) \n\n*\n\n*Pain is either not knowing what it is or forgetting what it was*\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic I'd like to think it is mostly a good-natured romp.)\n\nI was slumped down on the floor against the wall when an expensive pair of shoes came at me. Since my stomach and left side were well acquainted with pain already I chose to block with both arms which hurt a little bit less. This unnamed assailant pivoted back for another kick when Heaven grabbed him by the back of the neck and slammed his head into a picture above my head.\n\nHe dropped like the sack of shit that I'm sure he was. I was struggling up when Cappadocia grabbed my wrist and helped me stand. Three more guys stood between us and the bathroom door, outside of which a battle of the sexes was starting to be waged; FFU vs. AKA fraternity. You may be wondering how I ended up here; I sure am.\n\n(I promise this will all make sense eventually)\n\nStarting in the Past\n\nThe light tapping on my door broke my oral attention on Barbie Lynn's right nipple. I kept frigging her with two fingers in her cunt while I caught a quick look at the time. It was twelve-ten in the morning. Who the hell?\n\n\"I need to check this out,\" I warned Barbie.\n\n\"What?\" she wondered. \"What's going on?\"\n\n\"There is someone at the door and I think I know who it is. I'll be right back,\" I explained. Barbie looked apprehensive for obvious reasons. I grabbed a robe and headed down to the door as there was a second rap at the door.\n\nI swung the door open and there stood Rio.\n\n\"Hey, Bitch, are you going to make me wait out here or what?\" she teased me. I stood aside and followed her back to my bedroom. Barbie had disappeared under the quilt and covers but I was careful to not sit on her when I flopped onto the bed.\n\n\"What can I do for you?\" I inquired of Rio.\n\n\"Keep it holstered, Cowboy,\" Rio laughed. \"Save that python for your playmate Barbie. Do remind her that if she rides you too rough, she can break it off.\"\n\n\"I'll have you know she's the most gentle and sensitive woman I've ever known,\" I countered with a grin of my own.\n\n\"Really?\" she asked speculatively.\n\n\"Really,\" I affirmed.\n\n\"In that case, maybe you can give her to me for an evening. I'd like to play with her; you know, a little light bondage, spanking, and a dildo, vibrator or three,\" she asked suggestively.\n\n\"Is that all?\" I asked.\n\n\"Of course, I'd put those succulent lips to good use and I bet her tongue is to die for. I'd also love to chew on those massive titties, bite her and mark her as my own,\" Rio added. \"If she moans like enough of a slut, I'll even eat her out too.\"\n\n\"If it somehow comes up in casual conversation I'll let her know,\" I promised, while at the same time I resolved to actually have a decent hiding place when I fixed things up.\n\n\"Don't do that,\" Rio insisted. \"I'd rather kidnap her, blindfolded, so that I can take her to a bar and hand her around like a party favor.\"\n\n\"That's kind of cold,\" I cautioned her. \"What about her virginity?\"\n\n\"There are all kinds of chastity belts I can fit her with that leave her mouth and ass free,\" Rio regaled me. I really had no idea but I didn't doubt it existed.\n\n\"Isn't that a bit harsh? What has Barbie Lynn ever done to you?\" I was curious to know.\n\n\"Barbie Lynn, she is a girl in need of a good, hard fucking, regularly and repeatedly\" She grinned like she was a female Loki, Goddess of Mischief. \n\n\"If you think so...I guess I could tie her up and leave her for you, bound and gagged in the trunk of my car. I'm sure when you get to the bar you'll find some big strong men to take her out for you,\" I outlined the plan. Rio desperately fought down her giggles.\n\n\"Well, that's given me some pleasant images to get to bed with,\" Rio came over and kissed me on the cheek. \"Give me that sleeping bag and I'll catch some Zs.\"\n\n\"Sure, no problem. You know how I snore so if you hear any noise coming from my bed, just ignore it,\" I winked.\n\n\"Okay. As long as nothing touches the floor, I'll be fine,\" she assured me.\n\n\"What happens if something touches the floor?\" I had to ask. It was getting downright hilarious.\n\n\"I scream like a banshee. I was molested by a Chihuahua when I was young and I've never gotten over it,\" Rio snickered.\n\n\"I will keep all my bits up on the bed, then. Now, get squared away so we can get some sleep,\" I grinned. Rio laid out my sleeping bag below the footboard and climbed inside.\n\n\"Good night, Zane,\" Rio yawned as I cut off the light.\n\n\"Good night, Rio,\" I replied.\n\n\"Good night, Barbie Lynn,\" Rio giggled. \n\nThere was a long pause as a naked Barbie tensed up, then wiggled up from beneath the bed coverings. She looked at me curiously then crawled down on all fours to the foot of the bed. I was momentarily paralyzed by the look of Barbie's entire rearview cast in the pale moonlight.\n\n\"How did you know I was here?\" Barbie Lynn questioned Rio.\n\n\"Unless Zane started sleeping with fifty pounds of extra bedding, there was someone under the covers with him; then it was a matter of figuring out who was the sexiest upperclassman who would take the risk,\" Rio explained.\n\n\"So this whole talk about kidnapping me and taking me to a bar was meant to scare me?\" Barbie accused Rio, who snickered yet again.\n\n\"Tell me, Barbie, did that get you hot or what? Be honest now,\" Rio challenged her. Barbie Lynn flushed furiously and looked over her shoulder at me, trying to gauge her words to my reaction.\n\nI moved up behind her, kissing from the small of her back then forward while my hand rubbed along her ass and flanks. She kept her eyes on me until my hand cupped her sex, at which point her eyes shut and her breathing increased.\n\n\"Ooohhh...\" Barbie Lynn sighed as she let her legs part and her cunt went from damp to dripping.\n\n\"If Zane was with me, I'd feel safe,\" Barbie stammered nervously. \"He'd not let anything bad happen to me...but I'd like to...just a little.\" I'd never tied a girl up before now, I'd never really wanted to, but taking in all of Barbie right at the moment, I made a note of consorting with my sorority friends about what to use when the opportunity presented itself. \n\nTwo fingers in, two fingers out, two fingers in, two fingers out...one finger in her cunt and one in her ass. Barbie shuddered deliciously.\n\n\"You two fuck your brains out,\" grumbled Rio. \"I'll lie here and try to get some sleep.\"\n\n\"Good...good...good luck with that,\" panted Barbie Lynn, \"I'm a real screamer,\" and she really was.\n\n\"I swear, if one more girl had climbed into that shower with you, I was going to tape on a stun gun in the on setting and toss it in,\" Rio joked.\n\n\"A, you don't have a stun gun, and B, the floor was so wet you would have stunned yourself too,\" I pointed out.\n\n\"Threaten me not with logic, dumbass,\" Rio chuckled.\n\n\"Fine. Not that I mind your company but, don't you have to get dressed?\" I groaned.\n\n\"Do you think anyone would notice if I went to class naked today?\" Rio wondered.\n\n\"Notice -- yes; make you the target of a direct-to-video lesbian gangbang porn flick -- yes too,\" I taunted her.\n\n\"Damn it, Zane,\" Rio squawked, \"you've tapped into my secret fantasy!\"\n\n\"Save it for your creative writing assignment in English class,\" I nudged her. \"Now seriously, I need to get dressed and so do you.\" Rio's exaggerated frown only made me chuckle harder but I did manage to shush her out.\n\nI sang my way to breakfast -- literally. The latest demand of my Handmaiden's Duty was a rendition of 'Call Me Maybe' which garnered us quite an audience if not accolades for my proficiency. Rio tried to record me on her phone but an observant junior picked Rio for a piggy back ride. Iona hovered closely to Barbie Lynn again, which kept her safe.\n\nChristina snatched us on the way to Assembly. One look told me things had gone horribly wrong but I didn't know why. She picked me and when I protested (a junior named Sybil had pre-ordered my services) Heaven grabbed Iona as a clear threat to me. Chastity hijacked Rio before she could throw her food tray on Christina's head but I admired my buddy's fanaticism and loyalty.\n\n\"I'm with Sybil,\" I tried to explain, but that girl did a quick disappearing act. \"Okay, then, what do you want me to do?\"\n\n\"We seem to have this little disagreement about you thinking you can dictate my behavior,\" she smiled sweetly, \"so I'm going to be monopolizing your time for the rest of the semester.\"\n\nIona groaned and I was afraid Rio would do something stupid.\n\n\"Zane, I want you to carry my books to my next class,\" which didn't sound too bad but, \"on your knees,\" she gloated, \"but I'll...\"\n\n\"You conceited bitch!\" snapped Rio.\n\n\"Stop it!\" I growled back to Rio angrily enough to stop her. \"This is what they want.\"\n\n\"Hmmm...\" Christina contemplated, \"I was going to allow you to crawl on the grass but now I think you will do it on the walkway.\" Crawling all that way on bricks would be painful to say the least.\n\n\"Now I think we'll have Rio do it,\" she continued. I waved Rio to silence. \"As I remember you have this noble streak so I'm going to give you the option of you traveling on the bricks or letting Rio do it.\" It was some horrible sick joke and I knew the results before I spoke.\n\n\"I'll do it,\" I answered, but again, I knew it was useless.\n\n\"Agreed,\" Christina handed me her book bag while Heaven did the same to Rio, \"Rio can take the walkway and I'll let you take the grass.\" She waited for my response.\n\n\"What; no repose? No protests? No rants?\" she questioned.\n\n\"That's not where my mind is at, Christina. You just keep digging a deeper hole. I'll bury you in it; how you crawl back out is your business,\" I shrugged.\n\n\"I understand, Zane. Faith, give your books to Iona. She can share the walkway with Rio,\" Christina ordered. Again I had to stop Rio from erupting; there was nothing I could do. We were boned in this bizarre institution's humiliating ritual.\n\n\"Zane will take the walkway on his knees, Rio can do the same on the grass, and Iona can carry the rest of our books,\" Chastity announced out of the blue.\n\n\"Chastity?\" Christina questioned her rebellious minion.\n\n\"They get the point,\" Chastity suggested.\n\n\"I'm with Chastity,\" Hope declared.\n\n\"I'll explain when we get outside,\" Chastity all but begged. \n\nI had to scratch megalomania off my list of possible character flaws of Christina; she motioned our little troupe to proceed and made no protests when we freshmen took up our duties. Rio and I had to cover two hundred feet on our knees; I flashed Rio a vicious, confident grin. She grinned back and mouthed 'Fuck all the bitches,' which made me chuckle.\n\n\"What is so funny?\" growled Heaven. \n\n\"Your skirt is caught in your underwear so every time you step left your skirt rides up,\" I lied convincingly. Heaven reached around and tried to straighten out the nonexistent problem.\n\n\"Heaven, he's playing you,\" Hope intervened. Heaven's eyes rained fiery death down on me.\n\n\"Who is digging themselves a deeper hole now?\" Christina taunted me.\n\n\"I accept that Heaven is going to get her due and I'm fine with that. Of course, when I finally bring you to your knees, I know that look on your face is going to be priceless,\" I glared back.\n\n\"You are also not going to see Barbie Lynn outside of official business,\" Christina informed me.\n\n\"I'll give your suggestion all the merit it deserves,\" I smiled.\n\n\"That is not a suggestion, and if you do see her again, she will be expelled and a letter of explanation will be sent to her parents and fianc\u00e9,\" Christina said intently. That brought me up short. \"I'm not going to mention you, Zane. She'll go down but you will remain scot free.\"\n\n\"Why are you doing this to him?\" Iona murmured.\n\n\"He needs to learn his lesson,\" Faith whispered to her.\n\n\"Oh,\" the normally timid freshman responded, \"is that what this is? He is so going to own all of you if this is the best you've got.\" Hope burst out in laughter at the mouse's challenge.\n\nThe ordeal was over for the period but resumed when class let out again. Iona's schedule was in shambles because Christina had let word get out that Rio and I were out of bounds for anyone else in the school. By the time I went to Archery, my slacks were torn and my knees were bleeding. Chastity did what she could do as my Team Captain but then I was back on my knees heading to Karate.\n\nIn an abstract way my teammates in Karate knew what was happening to me but when they saw that I could barely move without wincing in pain, they became conflicted. Coach Dana was nice enough to offer to take me to the Chancellor so I could quit and end my suffering. I opted for letting my teammates in the second squad beat me up instead.\n\nThe only hard part about my dinner plans was the reality that I was the only boy on campus. No one would confuse me with any other student so sneaking off to my dorm was impossible. The answer to my dilemma should have been obvious to Christina -- glaring obvious. As it was, I had to get Christina's reaction secondhand as Rio, Iona, and I were cruising into town in my car with civilian clothes helpfully provided by my secret ally.\n\nRio groaned sarcastically when we arrived at our destination where Iona clapped her hands in glee. My argument was that everyone liked ice cream and, while Rio declared the whole endeavor to be juvenile, that didn't stop her from ordering three scopes with whipped cream and sprinkles.\n\nI was paying for our outing when three girls walked in.\n\n\"Zane?\" the third girl asked. I took her in only long enough to know she looked better in a swim suit.\n\n\"Hey, Leigh,\" I grinned. \"You look even better with clothes on.\"\n\nLeigh gave a hearty laugh while her companions tried to make sense of the situation.\n\n\"The Zane?\" the lead woman inquired. I looked at her quizzically. \"Zane, our next door neighbor?\" How had I suddenly become famous enough to earn a 'The' in front of my name?\n\n\"Sure, that's me. I've been at school but that's my house,\" I responded.\n\n\"This is Tawny Flores, our chapter President, and my sister Ricky Frasier,\" Leigh said.\n\n\"Rio Talon, my ex-roommate, and Iona Becket, my cohort in crime,\" I offered.\n\n\"Sorority chicks? Seriously, Zane, you need to start raising the bar on the quality of women you hang out with,\" joked Rio. That went over like a lead balloon.\n\n\"Your girlfriend is a bit jealous,\" Leigh broke the silence.\n\n\"I'm not his girlfriend,\" Rio grinned viciously. \"I prefer boys who've reached puberty.\"\n\n\"Tawny, Ricky, and Leigh, I apologize for Rio. We've had some issues with upperclassmen all day long and it has left some of us crankier than others,\" I said.\n\n\"Things can be rough for freshmen; we understand,\" Tawny allowed as she eyed me speculatively.\n\n\"How about I buy you all some cones?\" I offered in return.\n\n\"We are not here for ice cream...or ice cream in cones,\" Leigh explained. \"We have a party Saturday night, our first of the semester, and we need to place an order for a few gallons.\" \n\n\"Cool. I hope you ladies have a blast,\" I nodded as I moved to join Rio and Iona, letting the sorority girls move to the counter and make their order. They eventually did get some cones and came our way.\n\n\"Horny sluts at seven o'clock,\" whispered Rio as they approached me from the rear.\n\n\"Zane,\" Tawny smiled down at me, \"are you rushing a fraternity?\" Rio snorted in derision.\n\n\"Zane couldn't rush a fraternity,\" Rio explained. \"It would tragically cut down on his time with all his girlfriends.\" The three older women gazed at me, looking for the punch line.\n\n\"Here you go,\" Iona stated, holding up her phone to Tawny. \"This is Barbie Lynn...Christina...Chastity...Brandi...Hope...Cappadocia...Opal...\" she continued to go down the list of women in my life as well as displaying their pictures. The ladies went from skeptical to confused to impressed.\n\n\"You are sleeping with all these girls...in your first three days of school?\" Leigh wondered.\n\n\"No,\" Rio pre-empted, \"he hasn't actually had sex with all of them. That's silly. The magic thing is how often he gets them to orgasm. What's your record, Zane?\"\n\n\"It is not a contest,\" I protested.\n\n\"Oh, come on,\" Tawny urged me playfully.\n\n\"Ugh, fine. Seven, but she's really sensitive and responsive -- we mesh well,\" I answered. I'm not sure how many of them got past me saying the number '7'.\n\n\"Are you going to be home this weekend?\" Leigh inquired suddenly.\n\n\"Planning on it,\" I replied.\n\n\"Well, why don't you come by Saturday night, then,\" Tawny suggested, \"unless you are afraid of a little competition.\" Seeing my uncertainty, she added, \"We are having our brother fraternity Alpha Kappa Alpha over for the party. The guy/girl ratio should be two-to-one so I can't promise you any time.\"\n\n\"Oh,\" I shrugged. \"Do you want me to bring a friend or two?\"\n\n\"Sure,\" Tawny grinned, \"but make sure to keep an eye on them. The boys of AKA are pretty aggressive.\"\n\n\"I'll make sure to only bring the grown-ups,\" I laughed. We were all still chuckling when we broke up for the evening.\n\nI Love Pushing Boulders Uphill\n\n\"Did you sleep well?\" Christina greeted me. Since I'd been Barbie-free last night I had to frown.\n\n\"Thanks for asking,\" I shrugged. \"I slept like a baby. Honestly, I'd expected a little more creativity from you, not this simplistic jack-booted thuggery. Please try to keep my interest today if you can.\"\n\n\"Ah, the smell of burning bitch-flesh,\" Rio giggled, unleashing her sadomasochistic impulses. Christina didn't rise to the bait.\n\n\"Let's get some breakfast...on your knees you two,\" she commanded. Clearly their plan for us involved attrition.\n\nDuring breakfast the idea was to keep us apart, but they apparently forgot we'd all graduated kindergarten. We wandered around like loss little lambs and came to our collision from different angles. My only real worry was that Iona would chicken out since she had always been the good girl. She even sold the slip and spill well. This time Hope was the recipient of our hate and she looked quite fetching covered in grits, eggs, melons, and bacon.\n\nThe miraculous thing was that the kitchen let us reload. Chastity almost dodged the bullet but we nailed her pretty good as well. As we headed out for our first class, Rio and I on our knees, she turned to me grinning like a maniac.\n\n\"I am so looking forward to lunch,\" she told me.\n\n\"Really? So am I. I'm going to get the soup,\" I chuckled.\n\n\"Ooohhh...soup. I like soup. I may get two bowls,\" Rio exulted. There wasn't time to warn Rio, I had to act, so I threw myself on Rio and took Heaven's kick to the ribs myself.\n\n\"Heaven!\" Christina shouted, but it was too late. I hurt like hell but I was damned if I was going to show it.\n\nRio looked up at me and rapidly put together what had happened. Before she could explode I prodded her.\n\n\"I hope the croutons in the salad are extra hard,\" I wheezed.\n\n\"Zane,\" Rio whispered, worried about my well-being.\n\n\"Give them nothing,\" I winked. \"We know what low-life pieces of shit they are now. Give them nothing.\" Rio nodded and got back on her knees.\n\n\"Zane...I'm sorry,\" Christina said softly. I looked up her and projected my most indifferent expression.\n\n\"Can we get this over with? You bore me,\" I sneered at Christina. She snorted and shook her head.\n\n\"Take my books to class, Zane,\" she commanded, and I headed off. They took Rio and Iona off in another direction.\n\nI was bleeding by the time I kneeled my way to lunch. Sadly, Team Christina was vigilant so we had to settle for a few bites sitting up against a wall before a Dorm Mother directed us to separate seats. We buried her in soup and crotons for her efforts, then apologized profusely. Dr. Burns chastised and lectured us about good Christian virtues. The senile old bastard almost let us go back for seconds but a different Dorm Mother pointed out the danger just in time.",
        "The craziest thing was that they let me go to Marksmanship because it wasn't like I wanted to climb up on the water tower and take pot shots with a high powered rifle at anyone; right? \n\n\"Let me bandage your knees,\" Hope asked me. I looked to the rest of the class who couldn't bring themselves to meet my gaze, then laughed.\n\n\"What is wrong with my knees?\" I questioned. She pointed out the holes in my pants and the blood still oozing out of my torn flesh.\n\n\"Really. I hadn't noticed,\" I winced as I moved to get my gear.\n\n\"You could get infected,\" Hope insisted.\n\n\"At what point do you think I lost faith in your capacity for compassion, Hope?\" I sighed. \"Let's get to work. Inside this class, you are the instructor; outside of this class, you sicken me.\"\n\nI actually did pretty well working wind drift and range-finding during the class and Hope gave me a mild compliment on my growing proficiency. I listened but said nothing. \n\nWhen the rest of the group dispersed, Hope held me back. Heaven was waiting to make me crawl to her class.\n\n\"That was uncalled for,\" Hope insisted. \"We are only doing what we have to do.\"\n\n\"The failure of your courage is only eclipsed by your lack of principles, Hope,\" I verbally slapped her which only made her angrier. \"Maybe you can put some weights in my back pack to make yourself feel better, or would you rather sow the sidewalk with salt?\" If Hope was expecting me to back down, she was sorely disappointed.\n\n\"So, are you going to get revenge on me too?\" she mocked me. I looked mildly amused and insulted.\n\n\"Hope, you aren't worth my vengeance. You don't matter to me. You are a tool, an obstacle, and nothing more and I have things that actually matter and I need to concentrate on so if you would please get out of my way, I believe Heaven wants to show me what an inhuman beast she can be.\"\n\n\"You have to pay for that,\" Heaven growled at me as I struggled along on all fours to Orienteering.\n\n\"Remember this moment, Heaven, because when I break Christina, she is going to be crying out your name and you aren't going to be able to do anything to help her, and after all she's done for you,\" I taunted her.\n\nThat earned me two sharp kicks to the ribs to add to the one I'd already had. I picked myself up and continued on our way. Orienteering was brutal and I suffered a good deal of humiliation at Heaven's hands. I quietly took it. \n\nAs if that wasn't enough, Heaven walked me to my study period and Faith took me to the Dining Hall. Rio looked pretty brutal and Iona had been crying but at least they'd been bandaged up. Ms. Goodswell came up to me in the dinner line.\n\n\"You need to have someone look at those wounds. You could also use a fresh pair of pants.\"\n\n\"There is nothing wrong with my knees,\" I said in a bland monotone.\n\n\"You are bleeding into your socks, Zane,\" she informed me. I looked down and nodded.\n\n\"Yes, that seems to be the case. Can I get my dinner now?\" I inquired calmly.\n\n\"No, Zane. Go to the Infirmary and get that taken care of,\" Ms. Goodswell insisted.\n\n\"I invoke my right to refuse medical treatment due to religious convictions,\" I grinned.\n\n\"Zane, you could develop permanent damage,\" Virginia warned me.\n\n\"No. You hypocrites can cripple me if you like but you aren't pinning this on me. I don't recall wanting to walk anywhere on my knees. I'm not going to quit though; if you want to get rid of me, you will have to become more inventive than this,\" I told her. When she didn't reply I went back to my place in line.\n\nChristina tagged me heading toward the dorm. Chastity had Rio and Faith had Iona.\n\n\"What do you think we'll have for breakfast?\" Rio joked.\n\n\"Keep quiet,\" Christina cautioned us.\n\n\"I'm hoping for corned beef hash covered in ketchup,\" I responded.\n\n\"I told you to be quiet,\" Christina ordered.\n\n\"Which one of us are you talking to?\" Rio teased.\n\n\"I want milk and cereal,\" Iona suggested.\n\n\"Quiet,\" Faith told Iona with a hand on her shoulder.\n\nThey decided that we should be getting back to our rooms to study but the elevator wouldn't be necessary; we could take the stairs...on our knees. I wasn't sure Iona could make it; she was the shortest and weakest of us. But it turned out I needn't have bothered. We opened the door to the stairwell and there stood Barbie Lynn.\n\n\"I've got it from here,\" she told Christina and company cheerfully. The idea that Barbie Lynn was here to save me was kind of funny.\n\n\"That is not how it works,\" Christina informed her.\n\n\"No, Christina, read the Handbook. My dorm, my rules, and my rules say that if you don't belong in my dorm, you can leave...now,\" Barbie Lynn countered with determination.\n\n\"Don't do this, Barbie Lynn; they will expel you. You are hardly bulletproof,\" Christina warned Barbie.\n\n\"At what point did we cease being the Israelites and become the Philistines?\" Barbie answered.\n\n\"If you do this I'll have to report you,\" Christina explained. \"In thirty minutes you won't be Dorm Mother. Think about your future.\"\n\n\"I am,\" Barbie Lynn stated. \"Do I really want or deserve a future if I do nothing now? I don't think so.\" There was a pause, then, \"Get out.\"\n\nChristina's gang turned and left, Chastity last of all.\n\n\"Barbie Lynn, have his legs taken care of before his pride cuts him in half,\" she said meaningfully. Barbie nodded, then Chastity ran to catch up with the others.\n\n\"Let's get you to your rooms before they come back,\" Barbie Lynn urged us.\n\n\"Can we take the elevator? I'm not sure I can take all these stairs,\" I groaned.\n\n\"Baby,\" snorted Rio, but I noted she was the first one to hobble for the elevator. Iona drew close to me, looking for some small comfort.\n\n\"What are we going to do?\" she whispered to me.\n\n\"Rio and I are going to tough it out; we don't have any real options. You are going to be sick tomorrow and go to the Infirmary. After that, they should leave you alone as long as you avoid us,\" I told her.\n\n\"No,\" Iona responded. \"I can't leave the two of you alone here.\"\n\n\"Get over yourself,\" mocked Rio. \"You are slowing us down. Zane and I are hardcore bad-asses and you're nothing but a dweeb.\" That was Rio's way of saying 'I like you.' Iona began sobbing.\n\n\"I'll take care of her as long as I can,\" Barbie Lynn frowned as she wrapped an arm around Iona.\n\n\"Thanks for everything, Barbie Lynn. Sorry for dragging you down in all of this,\" I told my blonde dynamite.\n\n\"Ha,\" she laughed. \"I've had more fun -- felt better -- in the past four days than I've felt in the past three years here.\"\n\n\"Man, that is so pathetic,\" choked Rio. \"If my life was so damn boring, I'd have become a shit-faced drunk by now.\" I think that was Rio saying 'thank you' but I wasn't sure. \n\nWe made our way to our rooms and wisely settled in for the night. Around eight-thirty Barbie came to my room and escorted me to the bathroom for my own 'safety'.\n\n\"Thank you. What are you going to tell your family and fianc\u00e9?\" I asked. Barbie Lynn shrugged.\n\n\"Can I move in with your Aunt if things don't work out?\" she countered.\n\n\"Sure. Do you think it will come to that?\" I answered.\n\n\"Well, I'm definitely not marrying Jerome, that's for sure,\" she grinned. \"He's about as interesting as a box of rocks and he's got a tiny penis ta' boot. Lord above, all he wants to do is work in his Daddy's bank and play golf while I stay home and make babies.\"\n\n\"Ummm...Barbie Lynn, I don't see us getting married so if I...\" I stammered.\n\n\"Lord Jesus,\" Barbie laughed, \"if I married you I'd have to convert to Islam because I'd need at least three other wives to keep up with you. You are fun, Zane, and you've never lied to me about anything.\"\n\n\"Barbie Lynn...I've lied to you,\" I admitted shyly.\n\n\"What about?\" she questioned.\n\n\"You know those tiny little grunting noises you make between orgasms?\" Barbie Lynn blushed but nodded. \"Well, I don't like them; I love them. In fact, last time I rushed you through one orgasm just so I could listen to those sounds.\"\n\n\"You are a bad man,\" Barbie laughed musically. \"I don't believe you.\"\n\n\"Oh, so I'm going to have to prove myself, am I?\" I gasped in mock protest.\n\n\"I'm counting on it,\" she smiled seductively back at me.\n\n\"When this nuttiness is over, I'll do that,\" I grinned. Barbie Lynn looked suddenly sad.\n\n\"Is this going to end...in a good way?\" she sighed.\n\n\"Five-thirty tomorrow I'm in my car and driving out of here for the weekend. I'd like you to be with me,\" I told her.\n\n\"I can't be gone all weekend long, Zane. I'm Dorm Mother,\" she explained.\n\n\"How about Saturday night? I've made some plans,\" I hinted.\n\n\"Hmmm...okay, but how are you going to stop them from catching you if you come back? Escaping tomorrow is going to be tough enough,\" she pointed out.\n\n\"I'll think of something,\" I sighed. What that was; I had no idea.\n\nWhen I got to the top of the stairs after my bathroom break I noticed Chastity and Hope waiting for me. I could have said 'what do you want?' but I decided on a softer approach.\n\n\"What can I do for you, the two ladies most likely to kill at a distance, this fine evening?\"\n\n\"We came by to see if you, Iona, and Rio were doing okay,\" Chastity related to me.\n\n\"How's Iona? I imagine Rio was less than cooperative,\" I responded.\n\n\"Rio told us if we came in by the door we were leaving by the window,\" Hope informed me. \"Iona is doing okay physically but she's beaten up on the inside.\"\n\n\"She says you threw her out of your little club,\" Chastity went fishing for confirmation.\n\n\"Yes, she's out. I no longer give a crap what happens to her,\" I lied. Hope and Chastity snorted in disbelief.\n\n\"She didn't tell you, did she?\" Chastity questioned me. Since the answer was 'no' I kept silent.\n\n\"The Chancellor instructed her to abandon you and Rio and to help the rest of us get you two expelled,\" Hope informed me. All I could think of was, poor Iona, stuck in that spot.\n\n\"She responded with a tale of one of the early martyrs,\" Chastity picked up the story. \"All the martyr had to do to save her life from the lions is renounce Christ and kiss the hem of Caesar's robe. The young girl responded, 'I would rather spend my last hour in the dust with the Christians...'\n\n'...than live ten thousand more days as a Roman,' I completed the story. Sure, the story came from a hundred years after the real Caesar was dead, but who really cared? \"I don't think that went over well.\"\n\n\"I imagine a less than sterling letter was fired off to her parents,\" Hope suggested.\n\n\"Fine,\" I muttered after a moment.\n\n\"What?\" Chastity inquired.\n\n\"Chastity and Hope, I apologize for what I said earlier. I was pissed and I lashed out when you were stuck in the same fucked up situation I'm in,\" I admitted.\n\n\"Apology accepted,\" Chastity grinned.\n\n\"Don't make a habit of pissing me off, Zane,\" Hope cautioned me, \"and the next one of you to come at me with a food tray gets it in the teeth.\"\n\n\"Why did you pick Hope and me?\" Chastity asked about the food trays we'd dumped on them.\n\n\"I'm not saying we plotted anything but if we did, we would have created a random list for each meal. We get target one, then go to target two, and so on,\" I answered. \"If it was randomized it would be harder for you guys to figure out who was next.\"\n\n\"Do you have any other retaliatory actions planned out?\" Hope inquired.\n\n\"What do you think?\" I smirked.\n\n\"How did you plan all this out?\" Hope persisted.\n\n\"Since you are still dedicated to having us expelled, I don't feel it is prudent to tell you,\" I replied. I was hardly going to admit Iona set it all up, including that little trick of blanking out our call logs.\n\n\"Fine. Let's get out of here, Chastity,\" Hope sighed.\n\n\"I'll be with you in a minute,\" Chastity told Hope. \n\nWhen Hope was halfway down the stairs, Chastity turned to me with a sly grin.\n\n\"How did you know I'd help you?\" she whispered. \"For that matter, how did you slip me the note and the key?\"\n\n\"I promise I'll tell you one day, Chastity,\" I replied. I could hardly tell her that Ms. Goodswell had slipped my message and her key into Chastity's pack. That Chastity would actually gather up the clothes that Rio, Iona, and I needed was the greater risk. She'd done it and we'd made our Wednesday night getaway for ice cream. I still wasn't sure why Virginia had known Chastity would do it but figuring it all out would be fun. It wasn't as good as sex but...well; it wasn't as good as sex.\n\nThe Object is not to Die\n\n\"Let me wash you,\" Opal requested of me as I entered the bathroom the next morning. Warning her that I was poison was pointless. I looked, smelled, and sounded like trouble. I imagine if I asked her, she'd tell me I tasted like trouble too, but I didn't want to tempt fate.\n\n\"I can keep your bandages dry,\" she promised. Mentally, I cracked when she finished rinsing my hair.\n\n\"Why are you doing this?\" I had to know.\n\n\"Zane, you are the only non-related male I'm going to be in contact with for the next two years. If I let you go, I'm going to lapse into homosexuality,\" she explained. I couldn't resist.\n\n\"Does that mean you would be opposed to a three-way?\" I grinned.\n\n\"I don't know,\" she mused, \"who do you have in mind?\"\n\n\"Brandi; she is cute and receptive,\" I suggested.\n\n\"Good choice,\" Opal beamed, \"she's scrumptious. Do you think she's game? Don't bother -- I'll snare her in; you make sure you show up, okay?\" Up until this point in time I'd been fooling around but I had the distinct impression that Opal wasn't.\n\n\"Let me guess; you are on the Soccer team,\" I chuckled.\n\n\"Striker,\" Opal responded.\n\n\"I should have known; you have that killer instinct,\" I sighed knowingly.\n\n\"I know what I want and I go for it,\" she smiled as she closed with me and stroked my member. It was to our immense mutual disappointment that we simply didn't have the time to take it any further.\n\nI could appreciate Barbie Lynn throwing herself under the proverbial bus for us but I really wish she didn't look so sexy doing it. She stood with Rio, Iona, and me as we walked out of the dorm toward Christina and company. Rio and I exchanged conspiratorial glances with Iona.\n\n\"I'm hoping for oatmeal,\" Rio quipped.\n\n\"I'm betting on pancakes and syrup,\" I replied.\n\n\"Oh, hot syrup,\" mused Iona. \"I like syrup. It turns pancakes into fly paper.\" We walked up to our tormentors and held out our arms for their book bags, which they dutifully handed over. \n\nAs we got ready to assume our kneeling position, Christina cleared her throat.\n\n\"What are you doing?\" Christina commented dryly. Seeing our confusion, she sniffed derisively, then added, \"I haven't got all day.\" With that, she turned and walked off at a good clip we had to jog to keep up with. \n\nWe hobbled into the Dining Hall without a word being said but when we got into the food line, Rio broke the spell.\n\n\"Does this mean we don't dump food on them?\" she whispered. \n\n\"They've tossed us an olive branch so we shouldn't shower them with defoliant just yet,\" I suggested.\n\n\"We need to know what they are up to,\" Iona added. That was the thing none of us had an answer to so we were served and went searching for someplace to sit.\n\nCappadocia, Captain Willie, and another Karate teammate named Evangeline caught sight of us and chose that moment to rise and take their trays away, leaving us three adjacent seats. We leapt on them in an instant since another part of the Enemy's plan was to keep us isolated from one another.\n\n\"I hate to rain on our parade but Queen Christina at six o'clock,\" Rio muttered.\n\n\"Phone,\" Christina demanded of Iona.\n\n\"We are in the Dining Hall,\" Rio spat, \"you can't demand shit from us.\"\n\n\"Watch your language, felon,\" Christina responded drolly.\n\n\"It is Friday, Christina, in case you forgot. Your time is running out,\" I warned Christina that her time to make an apology to Rio was coming to an end. She looked haughtily down her nose at me.\n\n\"Here you go,\" Iona said meekly. She had a point; even if we won here, Christina would jump us the moment we left the sanctuary of the Dining Hall. Christina took the phone and typed a message in, then sent it before returning it to Iona. Without explanation the Queen strutted away.\n\n\"What was that about?\" Rio muttered to Iona who was checking her text log.\n\n\"She put Zane back on the market,\" Iona whispered in disbelief.\n\n\"What the fuck!\" Rio squeaked, trying to keep her shock from echoing across the hall. I looked around and saw phones ringing and the ripple of the word spreading out as girls looked my way.\n\n\"What do we do, Zane?\" Iona asked. I had to think that over and a grin slowly creased my face.\n\n\"Give me ten names: Juniors and seniors only,\" I smiled. That would be part of my party list.\n\n\"How is that going to help us get those bitches?\" Rio asked.\n\n\"Rio, living well is the best revenge, and I finally figured out how we are going to live well,\" I explained. My two companions didn't get it yet but Iona was busy getting my names.\n\n\"What do I do with the list?\" Iona asked.\n\n\"Ask them to my party,\" I winked and the lights came on.\n\n\"Sweet!\" gloated Rio, \"but how are we going to get away with it? The Chancellor is going to be watching us like a hawk.\"\n\n\"Do you trust me?\" I asked Rio and Iona. Iona nodded but Rio looked incredulous.\n\n\"Why in the hell should I trust you, Jungle Boy?\" Rio taunted me.\n\n\"Because the other option has you crying tears of loneliness into your pillow tomorrow night, Arizona,\" I teased right back. Rio was from Arizona in the same way I was from the jungles of Thailand.\n\nBreakfast was drawing to a close so I had to make my move. When Christina and crew put their trays up I followed them quickly outside.\n\n\"Glutton for punishment?\" Hope questioned as I finished my approach.\n\n\"I need a moment alone with Christina,\" I responded. Heaven snarled at me; very becoming.\n\n\"So, I no longer bore you?\" Christina threw my earlier words back in my face.\n\n\"I need a favor and it will help me with your demise,\" I grinned because I knew I had her; the girl couldn't stand not knowing what I was up to, or so I prayed. Christina shrugged her indifference but motioned for me to follow her off to the side, away from the others.\n\n\"So, after I've already done you two favors today, what else do you want of me?\" she asked. I had to admit that she was no longer making me crawl on my knees and she'd freed me up for gentler hands, but I had my needs.\n\n\"I want you to go to an off-campus party with me tomorrow night,\" I beamed hopefully.\n\nChristina studied me, clearly looking for my deceptive angle, but when none became evident, a smile slowly forced its way across her lips.\n\n\"Okay, Zane, I give up. What is the catch?\" Christina chuckled.\n\n\"There is a Sorority party at my neighbor's house. They are inviting a fraternity over and I imagine a few people will crash. I've been invited and I was thinking we could bring around twenty of our girls for a fun night out,\" I explained.\n\n\"Zane, we are a Christian Girls school; we don't do the whole partying, drinking, and spending time with strange boys thing,\" she lectured me.\n\n\"You'll have fun,\" I promised her.\n\n\"An hour ago you hated me,\" she pointed out. \"How do I know this isn't some kind of trick?\"\n\n\"Sure, I hated you an hour ago, but that was then and I'm not going to waste my time fighting past battles. Besides, you did the right thing, though you took your time doing it,\" I answered. \"Also, who in the Administration would I work for? I certainly wouldn't go outside the school.\"\n\n\"Yet you are still going after me about Rio,\" Christina said.\n\n\"That has to do with how you treat people, not what you did in the past,\" I corrected her. \"If I leave it alone you will continue to treat people that don't conform to your world view like dirt.\"\n\n\"You aren't going to win, Zane, but I tell you what; drop this silly vendetta and I'll consider going to that party,\" she offered.",
        "\"Oh, I'll keep my vendetta and see you at the party anyway,\" I laughed which made Christina cross.\n\n\"What makes you think that?\" she replied through narrowed eyes.\n\n\"You are fearless, hungry for knowledge, and you never pass up a challenge where there is even a remote chance of success. You won't go for me; you will go because this is something you can do and do well, and you can't pass up an opportunity to shine,\" I pointed out.\n\n\"So you are attempting to flatter me with a fictitious character assessment,\" she chided in return. Busted!\n\n\"You are not calling me a liar,\" I countered. We locked gazes for a few seconds.\n\n\"I wish you were older,\" she commented.\n\n\"Younger means I have more stamina,\" I offered.\n\n\"Older means more experience, more to offer, and greater competition,\" she volleyed.\n\n\"Younger means you can teach them more, less baggage, and a stronger desire to catch their quarry,\" I grinned.\n\n\"Is that what I am to you; quarry?\" Christina questioned me.\n\n\"No. You are the girl I'm going to marry,\" I stated matter of factly before turning and running for Assembly. As it was, we were on the verge of being late, though Rio and Iona saved me a seat. Rio tried to get me to tell her what happened but I warned her to silence with the fey light in my gaze. \n\nWhen we got out a senior named Janice snatched me up. Her trick was dueling Bible verses. Sometimes I don't get chicks at all but I guess she thought she was doing my soul some good.\n\nThe crew was waiting at my car when I was preparing to make my exit from campus. Christina was sitting on the hood of my car when I showed up. She pushed up and met me a few steps forward.\n\n\"We've discussed it and we'll go,\" she told me, \"but don't think this means even remotely that I'll ever marry you.\" By the looks on their faces this was the first her girl posse had heard about my intentions.\n\n\"Oh, you will marry me,\" I said, feeling terribly self-assured. \"I won't settle for anyone less and neither will you.\" Christina smirked but there was this light in her eyes. Chastity laughed while Faith and Hope looked stunned. Heaven looked pole-axed. I got in my car and rolled out for the short drive home. It was Friday night and I still had a lot to do before Saturday's party.\n\nTo say that the situation with Aunt Jill at home was awkward would have been an understatement. Last Monday before I met with the Chancellor, Jill got a call from the university telling her that she'd sent a boy to a girl's school. I imagine it was some consolation that she hadn't bragged to our church about where I was going to school yet.\n\n\"So...umm...\" Jill began as we sat down to eat dinner, \"your Spiritual Advisor tells me you are making great strides in your Christian education. She also says you are well-received by your fellow students and that they don't hold your...condition against you.\"\n\n\"Actually, several girls have shown great concern over my well-being,\" I expressed.\n\n\"A few have told me they want to stop by the house tomorrow night and make sure I'm okay,\" I added. I could see Jill balk. \"By that, I mean that twenty of them want to come over.\"\n\nThe sheer number first worried, then impressed her. Surely she must be thinking that I'd be safe with so many women around.\n\n\"That's good news, Zane. I was worried that you would be a slave to your baser nature but I see Jesus Christ has provided you with a new direction,\" Jill smiled lovingly. I decided not to tell her that the tools Christ had chosen were young ladies like Barbie Lynn, Rio, Iona, Chastity, and Opal, and I definitely knew better than to tell her about the party we would all be going to.\n\n\"Speaking of new directions, I notice you are still wearing the clothes the young ladies next door picked out for you,\" I re-directed the conversation. Jill looked down at her plate for a minute.\n\n\"I bought some of my old styles Monday but when I wore them Tuesday, a co-worker asked me if there had been a death in the family. What a horrid thing to say,\" she groaned.\n\n\"Have you garnered any male attention?\" I inquired, deeply curious. \n\n\"Nothing you need worry about,\" Jill turned away, \"I have one man in my life and you're more than enough for me to handle.\"\n\n\"Jill, if you like I could come home one or two days a week for dinner; campus is so close,\" I offered, \"and I'm sure my Dorm Mother won't mind.\" Jill looked up and studied me.\n\n\"That would be nice, Zane. I know we didn't get off to a good start here but I'm willing to work at it if you are,\" she stated. \"Kathryn has offered to come out here for a few weeks once harvest is done,\" Jill continued. I didn't know Kathryn, Jill's older sister, except for the few pictures I'd seen. \n\nI knew she'd been the first woman Uncle Tim was interested in but she ended up marrying a church elder thirty years her senior. She was like Jill, except thirty-seven years of age and a bit thicker. She worked on the family farm in Oregon doing, well, farmer shit. Jill said we could expect her the first week in November so we had better get the guest bedrooms ready for the visit.\n\nWe caught a movie on TV, drank some wine, and talked about campus, classes and such. Jill had gone to an open university were Christian students were penalized for their beliefs (so she felt) and was fascinated with the idea of a place where Christian women alone sat in judgment of other Christian women. I pledged then and there to never put Rio and Jill alone in the same room together because I'd surely end up an orphan.\n\nIn the morning, Jill and I picked up the place (Jill was a haphazard housekeeper), did some laundry, and went grocery shopping. In the checkout line I said something inane and Jill gave me an exaggerated giggle that I was becoming all too familiar with. It was the one a woman gives to a man when they think the man wants to be found amusing.\n\nIt is kind of endearing when it comes from a teenage girl but a bit creepy when it comes from your female guardian. Jill really needed a man in her life but I was at a loss as to how to make it happen. \n\nUnfortunately, I had things to do after we ate lunch, namely going back to school to pick up Rio and Iona for a shopping trip.\n\nRio had been stripped of all her 'party-wear' when her parents shipped her here and Iona never had anything like it at all. \n\n\"Barbie Lynn wanted to see you in your room,\" Rio grumbled when Iona and I showed up in her abode. I had no idea what that was about so I left Iona in Rio's room and headed to the Solarium on my own.\n\nWhen I got to the top of the stairs Barbie's gaze met mine from my bed where she was sitting. She glanced past me to see if I brought company.\n\n\"Are we alone?\" she purred. I nodded in agreement, at which point Barbie Lynn sat up on the bed on her knees facing away from me. Slowly, looking over her shoulder, she hiked up her skirt until her bare-naked bum was revealed to me.\n\n\"I've missed you,\" she moaned, then she began rubbing her right butt cheek and added, \"We've both missed you.\" I stalked toward her, barely able to restrain the desire to pounce on her proffered posterior. Barbie grinned lustfully, went down to her hands and, as I was taking my pants and underwear off, she collapsed further onto her elbows, pushing her ass out even more.\n\nI started to caress her thighs, flank, and back, planting kisses along the way, when I noticed her ass crack and anus was slick with lubricant.\n\n\"No foreplay; just fuck me,\" Barbie Lynn demanded with a voice heavy with need. I aimed my cock to her anus and slowly pushed in. Barbie gave a sharp intake of breath as her resistance was overcome, followed by this deep, animalistic vocalization of pleasure.\n\nHer breathing came in sharper and sharper gasps as I pushed steadily in until I was totally encased by her flesh. I put my weight on her back, reaching around and fondling her breasts through her shirt -- no bra which, with Barbie's cleavage, was erotic and impractical yet wonderful to the touch.\n\nOur bodies synchronized into some really violent, ravenous sex when Barbie looked over her shoulder at me.\n\n\"So, you are going to marry Christina?\" she panted. I couldn't read her emotional state.\n\n\"Yes, in about three or four years,\" I answered.\n\n\"What about me -- about us?\" she whimpered as her passion began slipping her control.\n\n\"You are a great friend, Barbie Lynn, but I don't love you. Is this going to be a problem?\" I breathed heavily.\n\n\"No,\" she rasped with a smile on her lips and eyes shut, \"I wouldn't give up our time together for anything. Okay, it hurts a little, knowing I'm going to lose you one day.\"\n\n\"We'll never lose what we have right now,\" I grunted as Barbie began to tremble against me. Her anal muscles began to squeeze and contort around me. Eyes squinted, she gave me a wicked little smile and I rewarded her with a sharp slap to the ass. Barbie hopped up but her fists kept clenching my sheets.\n\n\"Oh, Zane,\" she gasped. I spanked her two more times hard and Barbie Lynn cried out,\n\n\"Lord Jeeesssuuuussss!!!!\" she called out in her own inimical way as the first major tremor grabbed her body. I hammered away for three more strokes when her heat and passion overcame me and I erupted into her ass.\n\nBarbie pushed up and back against me for over a minute before we finally collapsed on the bed, panting and sweating profusely. \n\nWe lay there, young and vital, soaking up each other's warmth until Barbie Lynn wiggled her ass against me and sighed contentedly.\n\n\"You're still hard,\" she murmured.\n\n\"Whose fault is that, you vixen?\" I teased her between deep breaths.\n\n\"Don't you need to go shopping?\" she titillated back.\n\n\"Do I look like I want to go shopping?\" I responded with both words and a jab with my cock.\n\n\"Damn, oh damn,\" she moaned, as she stroked my cock with anal contractions. \"Okay, one more time, then you have to go,\" she whimpered lustfully.\n\n\"Two fucking hours!\" Rio spat. \"Jesus Christ, man, can she still walk?\" Okay, so we did it more than one more time, I must confess, but I wasn't telling Rio that.\n\n\"She was asleep when I left her,\" I stated, \"but I think she's ambulatory.\" Iona blushed which reminded me that I still owed her a full-body hot oil massage.\n\n\"Were you ever not the Hammer of God?\" Rio questioned me about my sexual prowess.\n\n\"Well,\" I chuckled, \"my first sexual encounter, from stripping off our clothes to my shot, was less than a minute. I got one stroke in, pulled out too far, and ejaculated all over her pubic mound and stomach. I wanted to die.\"\n\nIona's eyes went wide because she must have imagined I was some sort of Sex God sprung forth from the lustful thoughts of young maidens, fully formed. As I said earlier, we all start somewhere.\n\n\"What did you do?\" Iona asked softly while Rio laughed out loud at my expense.\n\n\"She smiled kindly, sucked me off until I was hard again, and that time I lasted longer. Six months later I could go an hour and knew the difference between making a woman orgasm and making her want to orgasm.\"\n\n\"Now you are scaring Iona,\" Rio mocked me. \"You know she's never had an orgasm, much less a boyfriend.\" Yeah, Rio could be really abrasive at times. Iona looked like she wanted to fade into the cracks in the wall. I walked over and put an arm around Iona.\n\n\"Iona knows I'm here for her when she needs me,\" I responded.\n\nIona looked up at me and smiled with something uncomfortably akin to worship. I caught Rio flashing a sly smile my way. Iona had stood by us and pushing her into my arms was Rio's way of paying her back without looking soft.\n\n\"Let's get shopping, ladies,\" I said, while giving Iona a squeeze, \"unless you want to go to the party in what you have on.\" \n\nThe girls beat me out the door, though my long legs brought me to the car first. Just like last time, Rio hollered the moment we passed the gates leading to the outside world. When we got to the mall I abandoned them for my own special mission. It took me a while to pick up what was needed and by the time I got back to the ladies, I could tell there was trouble.\n\nIona looked pissed with Rio and Rio regarded Iona with thinly veiled contempt.\n\n\"What happened?\" I began, followed by, \"Iona, you look great, even more attractive than normal. I'm going to have to get you a taser so you can keep all the guys at bay.\"\n\n\"I hope no one takes a picture of me,\" Iona groaned, \"my parents would just die.\"\n\nRio was in a medium blue silk blouse that showed off her gossamer red bra and a black mini-skirt, black mesh hose, and matching blue calf boots. Iona was similarly dressed but with a red blouse and white bra with black trim plus black hose and black calf-boots. Iona kept shifting uncomfortably.\n\n\"What's going on?\" I inquire softly.\n\n\"She's making me wear a thong and it is pushing up my butt,\" Iona complained.\n\n\"Come with me,\" I directed her, and while Rio looked on curiously I took Iona into a side access out of sight of the general population. \"Trust me,\" I asked Iona gently.\n\nWhen she nodded I knelt before her and lifted up her skirt, causing Iona to tense stiffly and inhale deeply. I put my nose inches from her crotch while carefully running my hands along her upper thighs, around to her ass, gently massaging her with my fingertips. I reached around until I found the thin material of her undergarment and adjusted it with sensitivity and care.\n\n\"How does that feel?\" I whispered.\n\n\"Huh?\" Iona sounded dazed.\n\n\"Is that more comfortable?\" I clarified.\n\n\"Yes, yes,\" she responded, looking down into my eyes and smiling.\n\n\"If you need any more help, let me know,\" I smiled, as I straightened her skirt and stood towering over her once again. I took her hand and led her back to the impatient Rio.\n\n\"Damn, Dude, did you nail her already?\" Rio joked with me.\n\n\"You'll never know,\" I shot back playfully. Rio snorted and took a step toward Iona.\n\n\"If I reach under your skirt are you going to be wet as hell?\" she teased Iona. \n\nIona panicked and backpedalled behind me. \n\n\"That would be a big 'yes',\" Rio laughed. \"Zane, she's got it bad for you.\"\n\n\"What about you?\" Iona said accusingly. \"You get bitchy every time he's with another woman.\"\n\nFor an instant Rio looked hurt but she masked it quickly.\n\n\"Girl, I'm always a bitch. Ask anyone who knows me.\"\n\n\"Well, you are my bitch and I'll fight anyone who says differently,\" I pointed out. Once I had them change back to their school uniforms, I wrapped my arms around them both and we traipsed off to my car, and from there to my home. \n\nJill clearly had a hard time taking in my two buddies. Iona was very obsequious and polite while Rio was distant and sulky. Iona kept Jill busy until the next wave of guests began to arrive. First to arrive were Wilhelmina and Cappadocia, who wasted no time in slipping off to the bathroom to change into their party attire. They came out and as Jill struggled to adjust, I slipped off with my girls. \n\nWhile Iona changed I gave Rio her 'gift'. She took the bag with a smirk but as she poured the contents out on the bed, she nearly cried tears of joy.\n\n\"How did you know what to get?\" she stammered.\n\n\"Iona hunted down your old Facebook page and I ran down the list of your friends until I discovered one that would send us a picture and description of them all,\" I grinned. Rio hit me in the shoulder, then stalked over and punched Iona too.\n\n\"Ow,\" muttered Iona, \"what was that for?\"\n\n\"That's for being so nosey,\" she replied, while wiping away a tear.\n\n\"It was Zane's fault,\" Iona accused me.\n\n\"Fine, I'll go hit him again,\" Rio snarled playfully. I took my clothes and fled to the bathroom before Rio could thank me again for restoring to her all the body jewelry her parents had taken away from her when they exiled her to FFU.\n\nBy the time I finished dressing more than half of the ladies had gathered. Jill was beside herself with the bevy of company, though she was starting to figure out that most of the women were older than me. In fact, the only freshmen were Rio, Iona and I. Around seven Opal, Brandi, Jill and I cooked up some dinner for the rest. We ate light because for every one of us, this was our first experience in college debauchery. "
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "hazing",
        "tease",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-04"
}