{
    "title": "Fool's Gold: Claim Jumpers",
    "pages": [
        "Fool's Gold: Claim Jumpers\n\nBy DFWBeast\n\nAuthor's Note: This was supposed to be my main contribution to the Wine and Old Lace event. Due to real life issues, I'm late. Duh! My deepest thanks to outofshadows, kimi1990 and blackrandl1958 for their beta reading and editing. They made this into a much better read than it was. Of course, any errors are mine since I always mess with the story before I submit it!\n\nNote: This is a period piece that takes place in the Colorado Rockies in 1885. It's set during the Colorado gold and silver rushes, and also occurs around the railroad wars of 1877-1880 in that area. Although some of the supporting characters are historical, most, including the main characters, are fictional. I've obviously taken literary license with some of the facts, so if you're looking for complete historical accuracy, this ain't it. \n\nWarning: This story is more like a historical mystery with the story slowly being revealed layer by layer. If you're looking for action and adventure or a lot of sex, I'd skip this one! LOL!\n\nAlso, there's lots of slang and bad grammar in this story. Some of the more uncommon historical slang terms have been listed at the end. If interested, look through them, it may make this story a more enjoyable read.\n\n*****\n\nCrested Butte, Colorado\n\nLate-Summer -- 1885\n\nAbigail Hawthorne stood atop of the steps leading down off the train. She was immediately assaulted by the competing smells. The fresh evergreen wind off the Rockies battled with the mechanical steam odor of the train, as both mixed with the smoky haze that emanated from the small town. It only had a few hundred residents but supplied the thousand or more miners in the area.\n\nShe adjusted the bustle of her dress and tucked the small pillow she'd been sitting on under her arm. Thankfully, her dress wasn't the Victorian styled full bustle that was common back East, or the train ride would've been intolerable.\n\nLooking down, she saw her three traveling companions staring back up at her. Two of the three were very distinct looking, compared to the townsfolk.\n\nThe first was a short thin balding man who was very well dressed and wore spectacles. Edmond Horace was a lawyer from Denver, who had been her father's attorney for the past several years. It bothered Abby that he rarely smiled, and when he did it made shivers run down her spine.\n\nDwarfing them and most men, as well, was the man they called the Swede. Jonas Swanson was a mountain of a man. He was almost two heads taller than Mr. Horace, and about three times as big around his chest. Abby wondered how he could find suspenders large enough to stretch over all those muscles and keep his britches up.\n\nBesides his imposing physique, he was covered with bright blonde hair. From his long unkempt mane to his full beard to his hairy chest and arms, he reminded her of a huge golden bear.\n\nThe third man she'd recognize in any crowd. Even though he was dressed like most there in the town, Abby knew she'd recognize the way he walked and talked anywhere. He was a good looking man with black curly hair and a full black beard. His big blue eyes and outgoing personality separated him from most. Besides that, he was Abigail's husband for the past five years, Thomas Hawthorne.\n\n\"Stay close,\" warned her husband as he helped her down. \"This is certainly no place for a lady.\"\n\n'You should know,' she thought to herself as she fought back bitter comments.\n\nShe knew this was in his blood. It had been his life for more than a decade before he'd come back home. She looked into his eyes and could see the excitement he was trying to hide. It was a look that a year ago would've made her heart skip a beat, but now it was just a reminder of those things she'd given up.\n\n'Like a moth to the flame or Icarus to the sun,' she silently sighed\n\n\"Mrs. Hawthorne,\" Horace interjected, \"please remain very close to us. Unfortunately, up in these parts, an attractive woman is rarer than the gold and silver these men are seeking.\"\n\n\"Thank you, Mr. Horace, both my husband and the Swede are packing iron and I know the Swede has his rifle close by, as well. I feel quite protected. Still, I'll be careful and stay close.\"\n\nHorace nodded and turned to the Swede. \"Grab our things and I'll go find this Buckman and his transport.\"\n\nThe big man grunted and nodded. The Swede rarely spoke. Abby always believed it was because he didn't speak much English, however he seemed to understand it very well.\n\nAbby looked over at her husband and could see his smile partially hidden within his beard. His eyes searched the town as if he was looking for something.\n\n\"Do you really miss this?\"\n\n\"What?\" he replied, his face showing some surprise.\n\n\"You were looking at this place like it was your long lost lover.\"\n\n\"Well that's a bit dramatic, but yeah, I miss this every now and then.\"\n\n\"So planning on leaving again?\" she hissed.\n\n\"Dammit, woman! Save your venom for someone else! Yeah, I miss this, but I'm still here ain't I? I'm still married to you and living on the ranch.\n\n\"Listen, Abby,\" he sighed. \"I know you got your back up 'cause of this trip. I ain't looking forward to facing him, either.\"\n\nAbby took a deep breath and calmed herself. She knew her husband was right. She'd been on edge for the past four months, since everything seemed to be falling apart. Now she was going to face her ex-husband and that promised to be a nightmare.\n\n\"I'm sorry, Thomas. You're right, this trip is upsetting. Things haven't been right since Sarah ran away last May. Now having to face Jeremiah again is bringing back a lot of bad memories.\"\n\n\"You know this meeting has to happen. As for Sarah, well, I told you I didn't do what she said I did. She's still mad about her father. I am sorry she ran away though.\"\n\n\"I know,\" Abby replied. \"She never forgave us for getting married. You were drinking pretty heavy back then.\"\n\n\"Dammit, Abby! Not here, not now!\" he snarled at her.\n\nAbby turned away and looked over the little mining town. She forced herself not to dwell on the past several months. She remembered better times.\n\nShe'd moved to the Colorado Territory with her father, Henry Thompson, when she was only six. They'd left Pennsylvania a few months after her mother had died. It was 1860, just a few years before the Great War between the States. They'd arrived in Colorado several years after the \"Pike's Peak or Bust\" gold rush.\n\nHer father wasn't searching for gold, but was seeking riches of another kind. He'd purchased a ranch that was one of three covering a small valley on the southeast base of Pike's Peak. That valley had the potential to become very valuable if the railroad ever went through.\n\nTheir ranch was adjacent to the two others in the valley, the Old Wilson place and the Hawthorne ranch. Old Man Wilson lived up to his name and seemed to have a bone to pick with just about everyone. The Hawthornes had been heaven sent. With so few other children in the area, she'd been lucky to have two that were close to her age as neighbors. Abigail had immediately befriended the two Hawthorne brothers, Thomas and Jeremiah. She was the same age as Jeremiah, and Thomas was a couple years older. The three grew up and became inseparable.\n\nAbby smiled, thinking back to the hours and hours the three had played together after their chores were finished. Even back then the brothers were polar opposites. When they were out playing Jeremiah always had to be the lawman, while Thomas was the outlaw. She'd always played the damsel in distress or the princess.\n\n'Funny how I was drawn to the one with the wanderlust even back then,' she chastised herself. 'Well I caught him, mores the fool! I sure shouldn't be surprised he's restless now.'\n\nThey had only been on the ranch a few years when the war broke out. It hadn't touched Colorado much, but it did affect the Hawthornes. Mr. Hawthorne had left his wife and two young boys to go fight when Thomas and Jeremiah were only eleven and nine. He was only gone two years, but when he came back he was a changed man. Abby remembered him as loud and full of laughter, before, but what came home was a crippled, broken man.\n\nHe'd lost his right arm and was partially blind in his right eye. He'd also lost his spirit. Abby could count on one hand the number of times she'd heard him laugh after he came home. Her father had said he'd died in the war, but his body just hadn't lain down yet.\n\nHis condition was a strain on his family. Mrs. Hawthorne nursed him, but everyone knew she wasn't very interested in the ranch so Thomas and Jeremiah basically ran it under their father's oversight.\n\nIt was Abigail's dream to stay in the valley and raise a family, and that seemed to be Jeremiah's, as well. Thomas had other dreams and wasn't interested in a life on the ranch. His outlaw personality and craving for adventure matched his vagabond spirit.\n\nShe'd loved both Thomas and Jeremiah back then. Jeremiah had been her castle, her knight in shining armor while Thomas had been her pirate, the one who stole her heart. Like most dreams, reality crushed hers when shortly after his seventeenth birthday, Thomas left to seek his fortune looking for gold and silver in the Rockies.\n\nIt had broken her heart but made her choice easy. Jeremiah was her future. At the ripe old age of sixteen, she and Jeremiah were married.\n\nTheir marriage had started out rough. Things were tense when Jeremiah found out Abby wasn't a virgin. She'd given herself to Thomas just before he'd left. It took a bit, but they were able to work through it and the marriage began to get better.\n\nThe only other rough patch during those first years was after she'd given birth to Sarah. The birth had been difficult, but her daughter was born healthy. Unfortunately, Abby was never able to carry another child more than a few months after that.\n\nAbby had been heartbroken, but Jeremiah had been her rock back then. His love and attention had covered her and her love for him grew.\n\n'But it wasn't strong enough, was it?' she thought to herself.\n\nHenry Thompson had been busy about that time, as well. A small village at the mouth of the valley sprang up. It wasn't large, only about 50 people lived in it, but it had the basics of being a town. It had a general store, a church, a smithy and a boarding house with a tiny saloon attached to the back. Abby was aware her father owned a stake in almost all of those. Unsurprisingly, it was called Thompsonville.\n\nShe and Jeremiah had been married just over six years when Mr. Hawthorne quietly passed away. Unsurprisingly, Mrs. Hawthorne decided to go to San Francisco and stay with her sister. Jeremiah told Abby that his father had left the ranch to him and Thomas with a provision that they care for their mother.\n\nA year later, in 1877, the Denver &amp; Rio Grande Railway and the Atchison, Topeka &amp; Santa Fe Railway went to war over access rights.\n\nThe most notable incident was a major standoff when Bat Masterson and his strongmen from Dodge City, who were hired by the AT&amp;SF Railway, took over the roundhouse in Pueblo. A man from the D&amp;RG railway ended up bribing them to leave.\n\nDuring those several years, there were rumors of homesteads being burned and people being run off their land. The valley was tense with fear. That was when her father brought the Swede onto the ranch.\n\nDespite the Swede's presence, the railway war touched the valley. The Wilson's ranch burned one night. His grandson and his new wife had just arrived a couple months earlier to help on the ranch. Old Man Wilson died in the fire and his grandson was badly burned.\n\nNot a week later, the grandson and his wife had left, but not before selling the ranch to Henry Thompson. Her father had said they did it because the grandson wouldn't have been able to rebuild and they wanted to keep it out of the railway's hands, at least for a little while.\n\nJeremiah had always questioned the particulars of those events, and the relationship between her father and husband soured dramatically. It put a huge strain on her marriage and she felt like she was constantly defending her father to Jeremiah.\n\nAs the railway wars continued, Abby's marriage began to slowly fall apart.\n\nThey were arguing more and there were fewer and fewer nights that they didn't go to bed angry at each other. Gone were those nights of passion, the heat of his breath as he claimed her. Missing even more were those nights of tender love making, when she'd swear that they were one person. She missed his strong arms holding her at night and his soothing voice telling her they were going to be all right. She knew they'd both failed each other. She'd stubbornly rebuked most of his advances and he'd quit trying, giving in to his frustration and anger instead.\n\nSometime later, Jeremiah told her he needed to go check on something and would be gone for several days. When she'd questioned him he'd been vague and said he just wanted to be sure of something. He left two days later.\n\nThe next day the nightmare began at the Hawthorne ranch. It was two months later before Abby was able to confront Jeremiah.\n\nWith a deep sigh, Abby closed her eyes and remembered one of the worst days of her life.\n\n \n\n*****\n\nThompsonville, Colorado\n\nSpring -- 1880\n\nJeremiah rode warily up the ranch house. He knew things were wrong. The last two months had been frustrating. First he'd gone up to Leadville to check on his father's investment. Finding it safe, he'd gone to Denver to check on when Henry Thompson had actually put a claim on the Wilson ranch. Something hadn't seemed right, the dates he'd told Abby didn't match with how things seemed to happen.\n\nHe'd stopped by the law office Henry had used and asked some questions. They'd told him that he needed to speak with a Mr. Horace, who would be back in a couple of hours.\n\nHe'd gone into a saloon just across the street to wait. Not thirty minutes later a man accused him of insulting his family and hit him. A few minutes later, both he and the man found themselves in the Denver city jail. He was tried and convicted, despite his claim that he'd never seen the man before that day. Thirty days later, he was given another thirty days for unknown reasons.\n\nAfter he'd been released, he'd stopped by the law office again, but was told Mr. Horace was out of town. He was also told that the documents he was looking for were missing. The man suggested Mr. Horace may have them for some reason.\n\nHe'd known things were strange when he'd gotten to Thompsonville. He'd stopped at the small saloon and found that Pedro and Maria Mendez were gone. The new owner served him and disappeared. Several minutes later he reappeared and let Jeremiah know he wasn't welcome anymore. Surprised and annoyed, Jeremiah left and headed home.\n\nWhen he'd gotten to the ranch he found a welcoming party waiting for him.\n\nAbby was there with her father. Besides them, was the Swede and a small well dressed man. To his surprise, Jeremiah noticed that Thomas was with them as well!\n\nJeremiah quickly dismounted and walked over to the group.\n\n\"Tom!\" Jeremiah said smiling, \"when did you come back?\"\n\n\"About six weeks ago,\" Thomas said coldly.\n\nJeremiah was surprised at his brother's reaction but quickly focused his attention on his wife. Striding up to her, he reached out to take her in his arms. Instead he felt her hand slap across his face!\n\n\"Bastard!\" Abby screamed. \"How could you do that to me?\"\n\n\"What in blazes are you talking about, Abby?\"\n\n\"Maria Mendez! And don't you play dumb with me!\"\n\n\"I'm not playing dumb; I just don't know what you're talkin' about!\"\n\n\"Maria and Pedro paid us a visit not two days after you ran away!\"\n\n\"I didn't run away. I went to Denver to check on a couple of things before I talked to you about it. When I got there stranger accused me of something and then started a fight with me. I've spent the last two months in the Denver city jail!\"\n\n\"Why were you up in Denver?\"\n\n\"Abby, we need to talk about this, alone.\"\n\n\"No! We'll say everything we need to right here! I know why you ran, Maria told me everything!\"\n\n\"What are you talkin' about, woman!\"\n\n\"Maria said she was with child!\"\n\n\"Oh gawd!\" Jeremiah snorted. \"Whoever the father is better run before Pedro gets ahold of them!\"\n\n\"She said it was you, you bastard! She said YOU were the father!\"\n\n\"Me?\" Jeremiah replied in shock.\n\n\"And you're right,\" Henry interjected, \"Pedro wasn't happy and came after you.\"\n\n\"Pedro never talked to me,\" Jeremiah stated. \"This ain't funny y'all.\"\n\n\"No it's not, son,\" Henry said in a patronizing voice.\n\n\"Don't you ever call me that, you hear?\" Jeremiah seethed. \"I ain't your boy and I ain't NEVER touched Maria. Abby, you've got to believe me!\"\n\n\"She said you did! And then you shot her Pepe!\"\n\n\"What?\" Jeremiah stammered. \"Pedro is dead?\"\n\n\"No,\" Henry said, \"you just wounded him in the arm.\"\n\n\"I never shot Pedro and I sure as hell never slept with Maria!\"\n\n\"That's not what they say,\" Henry continued, \"and that's not what they told the Colorado Springs sheriff.\"\n\n\"That's a lie! Where are they? I'll get to the bottom of this.\"\n\n\"They're already gone!\" Abby yelled with tears in her eyes.\n\n\"Yes,\" Henry said calmly. \"They left shortly after they talked to the sheriff. I believe they were headed to Santa Fe, or further south.\"\n\n\"What, they just up and left their boarding house and saloon?\"\n\n\"No, I bought it off of them so they'd have money to start over somewhere else.\"\n\n\"This stinks, Henry. It smells like someone's trying to frame me!\"\n\nJeremiah turned to his wife. \"Abby, you can't believe...\"\n\nJeremiah's heart froze as he saw her in Thomas' arms being consoled. The look on his face went from anger to one of great sadness.\n\n\"No,\" he groaned. \"Abby please tell me you didn't.\"\n\n\"Thomas, why are you holding my wife?\"\n\n\"She was hurting, Jeremiah. After what you did, she was hurting.\"\n\n\"I didn't do anything!\" Jeremiah retorted flatly, the anger beginning to return. \"So you came back just in time to swoop down and take my place? It that what you're telling me, dear brother? How long have you been sleeping in my bed?\"\n\nThomas said nothing and he held Abby tighter.\n\n\"You son of a bitch!\" Jeremiah growled and started towards Thomas. Unfortunately he was so focused on the couple that he didn't see the giant shadow moving towards him. The Swede hit him once, but it was more than enough to knock Jeremiah out.\n\nWhen he came to, he was laying on the floor inside. He struggled to stand and leaned against the wall to keep his balance. In front of him sat Henry and the smaller well dressed man. Beside them stood the Swede and behind them Abby and Thomas.\n\n\"Where's Sarah?\" He croaked.\n\n\"She's back at my ranch,\" Henry said calmly. \"We didn't think she needed to see this travesty.\"\n\n\"Ashamed of yourself, Henry? You should be.\"\n\n\"I'm sorry, Jeremiah, but that sounds mighty hypocritical coming from a man who impregnated a girl and then shot her father!\"\n\n\"I didn't do those things.\"\n\n\"They said you did!\"\n\nJeremiah searched the room for anyone who would believe him and found none.\n\n\"Regardless of your denials,\" Henry continued, \"there are some things you need to know. The sheriff in Colorado Springs has created a warrant for your arrest. Mr. Horace and I have convinced him not to issue it yet.\"\n\n\"Mr. Horace?\"\n\n\"Yes, Mr. Horace is my attorney from Denver. I've mentioned him before.\"\n\n\"He's the one I was looking for in Denver! They said you had the documents I was looking for, Henry's land acquisition on old man Wilson's ranch.\"\n\n\"Why were you looking for that?\" Henry inquired.\n\n\"Because the date you said Wilson's grandson sold it to you doesn't match up with when it was supposedly written. If my calculations were right, those documents were written before old man Wilson died in that fire! That would mean you are lying about what you know about that!\"",
        "\"That's absurd!\" Henry huffed. \"I didn't have anything to do with that!\"\n\n\"Mr. Hawthorne, I can assure you that you are mistaken,\" Mr. Horace added.\n\n\"So where are those documents? Your office said you have them.\"\n\n\"They were wrong, as well. I don't have them!\"\n\n\"This is all hogwash!' Henry interjected. \"Just the attempts of a guilty man trying to smear others to lessen the severity of his own actions! Boy, you need to know that I'm the only thing preventing that warrant being issued!\n\n\"Now, unless you want to be an outlaw, I suggest you listen closely. Mr. Horace has some papers for you to sign. It will turn over your portion of this ranch to Thomas. In return, that warrant will never be issued. Your wife and daughter will be taken care of for the rest of their lives.\"\n\n\"My wife is a cheating whore and is being taken care of by my backstabbing brother!\"\n\nAbby gasped and clung onto Thomas. Jeremiah took a step towards the couple but the Swede stepped in front of him.\n\n\"You sit. Don't make me hurt you any more,\" the giant growled.\n\nJeremiah looked into the faces of his accusers. He realized he had lost. Spending time in the Colorado Springs jail wound be futile. Henry would find witnesses to lie against him and Thomas would still end up getting his share of the ranch. Thankfully, his father had foreseen possible problems surrounding the ranch. It was a small victory considering what Jeremiah had lost. There was nothing left to do but retreat.\n\nHe'd agreed to their terms and asked to say goodbye to Sarah before he left. They refused. She'd been told that he'd ran off a month ago.\n\nJeremiah Hawthorne left the valley that day a defeated man.\n\n*****\n\nCrested Butte, Colorado\n\nLate-Summer -- 1885\n\nAbby, remembering that terrible day, wiped a small tear from her eye. Jeremiah had seemed so sincere denying his actions, but the evidence against him showed otherwise. She'd also struggled with her actions during that time.\n\n'Did I quit on our marriage too soon?' she questioned herself. 'What if Jeremiah was telling the truth and he hadn't run off. Then I really was an adulteress!'\n\nAbby had been an emotional wreck after their meeting with Maria. She'd not been able to get through those first days without breaking down in to great sobs. It had been two weeks after that meeting when Thomas returned. She'd like to have said she didn't run into his arms, but she knew she had. She'd found solace there, comfort from the storm that was tearing her world apart.\n\nIt was two weeks after he'd arrived that he'd sought her out. He had since shared their bed. When Jeremiah had returned he'd recognized the truth, that she had moved on and was now Thomas'.\n\nIt was three months after Jeremiah's confrontation that Thomas and she were wed.\n\nSarah had been beside herself. She couldn't believe her father could've done the things he was accused of. She'd only been ten at the time. She'd been young and naive.\n\n'Na\u00efve? She was still only a girl. What was my excuse? Why didn't I stand beside Jeremiah then? Why did I choose my father and then Thomas over my husband?'\n\nThose were the questions she'd fought with for the past several years. They were questions to which she didn't have answers.\n\nExcept for Sarah, the following years had been relatively calm. Her marriage to Thomas had been a challenge.\n\nThomas has been becoming more and more emotionally guarded. When he learned of his mother's death three years before, he'd simply brushed any feelings aside. Abby realized he hadn't seen her in over fifteen years, but she'd hoped he wouldn't have been so callus about it. As Thomas continued to hide his feelings, Abby felt more and more distant from her husband.\n\nAdded to their lack of closeness was the creeping suspicion Abby had that Thomas was being unfaithful. She feared it was occurring on Thomas' monthly visits to Colorado Springs. She'd confronted him several times, and he'd denied it each time. Unfortunately, she didn't have any proof.\n\nNow his wanderlust was beginning to show again. She could tell there were times he resented being stuck on the ranch, and his drinking had been getting steadily worse.\n\nFour months ago things exploded.\n\nSarah had always resented Thomas for trying to take her father's place. It seemed that her anger at him continued to fester. There were many times she'd sass back to Thomas and Thomas would threaten to put her across his knee and tan her bare backside.\n\nOne night while Abby was at her father's ranch, he done just that.\n\nSarah claimed it went further than that. She said he touched and caressed her womanhood. Thomas vehemently denied it. Sarah didn't know what to do. She didn't know whether to believe her daughter or her husband.\n\nHad her drunk husband crossed a line and molested her fifteen-year-old daughter, or was her resentful daughter lying to get back at the man she blamed for her father leaving?\n\nAbby was lost. Then Henry intervened. He chastised Sarah for trying to stir up a hornet's nest right in the middle of their negotiations with the railway. He believed that Thomas shouldn't have disciplined her like he did, but he felt that Sarah had mistaken what had happened.\n\nSarah was crushed and ran to her room. Abby tried to console her, but Sarah wouldn't allow her too, since she'd sided with Thomas and her father. Much to Abby's regret, she allowed Sarah to be alone.\n\nTwo weeks later, Sarah ran away. They'd searched for her for days and even had someone report that she'd been seen in Colorado Springs. From there, they'd lost her. Abby had wept for days as Thomas tried to console her. Even now, Abby would still sometimes cry herself to sleep at night thinking of her daughter.\n\nThankfully, two months ago, they'd received news that Sarah was alive and well up in Leadville. It was a surprise to find her, since the man who found her wasn't actually looking for her; he was actually looking for Jeremiah.\n\nSeveral months earlier, Henry had discovered that Thomas didn't own controlling interest in the Hawthorne ranch. It seems Mr. Hawthorne had used 51% of the ranch to secure a loan to buy a small business in Leadville. The profits from the business had been used to provide for Mrs. Hawthorne after he died. When Mrs. Hawthorne passed, the business and stake had gone to Jeremiah.\n\nJeremiah now owned controlling interest of the Hawthorne ranch.\n\nHenry had hired a man to track down Jeremiah. His search had accidentally turned up Sarah. She was living and working as a handmaid for some rich widow named Wilcox up in Leadville.\n\nA few weeks later, Jeremiah was discovered near Ashcroft. Now Abby and her party were heading there in an attempt to persuade Jeremiah to sell or sign over all or a portion of his claim to the ranch. It figured to be an emotional and unpleasant meeting.\n\n\"This is a bad idea,\" Abby said flatly.\n\n\"What?\" Thomas replied.\n\n\"I said this is a very bad idea.\"\n\n\"We don't have much of a choice.\"\n\n\"Mrs. Hawthorne,\" Horace added, \"We need to do everything possible to convince your ex-husband to sign over at least a small portion of your ranch. The deal your father is working on with the railway requires full access through the valley.\"\n\n\"I realize that, Mr. Horace, but I don't know how we are going to do that. If Jeremiah still believes that we betrayed him and he was framed, there's little we can offer him.\"\n\n\"Not true! Besides the fair amount of money I'm carrying, we have several other incentives.\"\n\n\"Surely you don't think an apology from Thomas or me will persuade him?\"\n\n\"No, not by itself,\" Horace explained. \"However, that, together with a good amount of money and possibly portions of the deeds to many of the Thompsonville businesses should help ease the hostility.\n\n\"We'll offer to make that old warrant for his arrest go away for good. We'll further offer information on Sarah's location. So he'll be able to reunite with her. I believe that will help seal this deal.\"\n\n'I'm not so sure, Mr. Horace,' she thought to herself. 'The look of pain and betrayal on his face that day...'\n\nThat look had haunted her for years. It screamed of his innocence in the face of the evidence of his guilt. She'd been so hurt by his betrayal it had torn out her heart. Even though their marriage was in a bad place, she'd loved Jeremiah.\n\nHim missing for so long and her emotional pain had left her lost and alone. When Thomas had returned, she'd fled straight into his arms. He'd been there for her at her lowest time.\n\nAbby reverie was broken by a loud voice talking as it approached. It was coming from a rotund man with a huge smile.\n\n\"Yes sir! We'll get y'all up to Ashcroft in a jiffy!\"\n\nThe man came to a stop in front of the group.\n\n\"So y'all ready? We'll be on our way shortly. The trip will be a little slow and some parts are pretty rough, but we should get you up to Ashcroft sometime this afternoon. We'll be going through Pearl Pass, real pretty, but a bit rough.\n\nAbby knew she'd just met Mr. Buckman.\n\nThe man continued to talk the entire time the group walked over to his stagecoach, then he continued as they loaded their things. It wasn't until they were leaving Crested Butte that he finally seemed to take a breath.\n\n\"Kinda surprised y'all didn't take the stage out of Aspen. There used to be a couple stages daily out of Ashcroft. That was about a year ago, but that's the nature of the beast, ain't it?\"\n\n\"What do you mean?\" Horace said.\n\n\"There's got to be hundreds of little boom towns like Ashcroft spread out all over these mountains,\" Buckman laughed. \"Someone discovers gold or silver and everyone comes a running. Of course, a town pops up there overnight until the gold runs out and then everyone goes running for the next rumor of a strike.\n\n\"That's what happened to Ashcroft. About five years ago a couple of prospectors had a big silver strike. When they went back to Leadville, word got out and the rush was on. Within a couple of years, a town sprang up that eventually had over three thousand. Hellfire, the place had over twenty saloons, two newspapers and even a school.\n\n\"Haw Tabor's wife tried to make it a respectable town a couple years ago when she held a big shindig for a bunch of toffs and toffers. Ain't never seen that many highfalutin people in these parts.\n\n\"But nothing could save the town when the silver run out. Didn't take but a few months before Ashcroft began looking like a ghost town. Nowadays, I only make couple runs a month up to Ashcroft. Most every month a hunting party from Leadville or Denver hires me to take them up there.\"\n\n\"A hunting party?\"\n\n\"Yep, always head up to the Jenkins place. Sometimes it's John Jenkins himself, sometimes it's a friend of his named Ambrose from Denver. He's a bit of a toff if you ask me. When it's that Ambrose fella, he always brings this here big black fella with him.\"\n\n\"He ain't as big as you,\" Buckman said looking over at the Swede, \"but he's big.\"\n\n\"Is this hunting party up there now?\" Thomas asked.\n\n\"Yep,\" Buckman said grinning. \"Took them up five days ago. Ambrose, the black fella and that skinny lad.\"\n\n\"Skinny lad?\" Horace asked.\n\n\"Yeah, teenage boy. Looks kinda sickly, a bit of a Molly, if you know what I mean. Never talks, but he's always comes with both parties, Jenkins or Ambrose. I think they're trying to make a man out of him. Maybe put some hair on his chest by taking him out hunting and fishing. Although if you want my opinion, it ain't working!\"\n\nBuckman laughed heartily at his own joke.\n\n\"Mr. Buckman,\" Abby asked cautiously, \"Do you know a man named Jeremiah Hawthorne?\"\n\n\"Can't say that I do, ma'am. But there's a man out at the Jenkins place named Jeremiah. He's the guide for those parties. Haven't ever heard the name Hawthorne, but it could be him, I reckon.\n\n\"You could ask Old Zeb when we get to Ashcroft. His daughter and granddaughter lives up at the Jenkins place so they'd know for sure.\"\n\n\"They live there?\"\n\n\"Yep, Desiree, that's Zeb daughter, used to help him run the Hotel View. She's a real beauty. Tall as them there Amazons and mean as a rattlesnake! Anyway, she got pregnant and her husband died, or vice versa. I don't really know which came first and I sure as blazes ain't gonna ask her or Old Zeb! Either of them would probably bite my head off!\n\n\"So John Jenkins builds this real nice house for his wife and she ups and goes back to Leadville! Jenkins then brought Desiree out to the place to be the housekeeper. Now, I ain't sayin anything was going on between Jenkins and Desiree, but she really is something!\"\n\nOver the rest of the trip Buckman gave them a tour of the scenic landscape. Abby had to chuckle to herself when he'd start spouting things that she knew weren't exactly true. He was entertaining.\n\nAs they rode into Ashcroft, Abby could see why Buckman had referred to it as a ghost town. There were dozens upon dozens of makeshift frames for tents and shoddy buildings. There were, however, several building that appeared well made. Two in particular drew her attention. The first was the two-story hotel called the Hotel View. The second was a solidly built saloon called the Blue Mirror Saloon. What was noticeably missing were the people. There were only a few that could be seen walking in the street.\n\nBuckman pulled up his stage in front of the Hotel View. Getting down, he looked at the hotel and then over at the few saloons still remaining.\n\n\"Zeb!\" Buckman bellowed. \"Got guests for ya!\"\n\nThree older men stepped out of one of the saloons.\n\n\"Figures he'd be at the Blue Mirror,\" Buckman laughed.\n\nOne of the men began walking over to them. He was a shorter man with a grizzled beard and matching hair. His big smile showed several missing teeth.\n\n\"Evenin' folks,\" he said in a thick Cajun accent. \"Welcome to the Hotel View. If you'll get your stuff and follow me, we'll get y'all fixed up.\"\n\n\"These folks,\" Buckman continued, \"will need someone to take them up to...\"\n\n\"Mr. Buckman,\" Horace interrupted. \"Thank you for your assistance. We'll take it from here, though.\"\n\n\"No skin off my back,\" Buckman said smiling. \"Just send word when you are ready to go. I'll be back up here day after tomorrow to pick up that hunting party, but I can come back another day if y'all need.\"\n\n\"No sir,\" Horace stated. \"Day after tomorrow should be fine.\"\n\nAbby and her party went up to their rooms, then came back down and met on the porch. She noticed that there was already a mule team hitched to a buckboard wagon waiting on them. Horace stated he'd already told Zeb what they needed and that he'd take them the two miles to their destination. The Jenkin's place was located south, close to Taylor's Peak.\n\nIt only took a few minutes after they'd left Ashcroft before Horace asked Zeb a pointed question.\n\n\"Mister ah...\"\n\n\"Zeb will do just fine.\"\n\n\"Okay, Zeb. You didn't seem that surprised when I asked you to take us to the Jenkins Place.\"\n\n\"Nah,\" the old Cajun said smiling. \"Back a month ago , had this here stranger come to town askin' questions about Jeremiah. It weren't too hard to figure there was a fox in the henhouse.\n\n\"If it had been a year or two ago, nobody would've noticed. But with everyone leaving, a person askin' questions about one of the few who were staying, that got noticed.\"\n\n\"How many are left in Ashcroft?\" Thomas interjected.\n\n\"About a hundred, give or take,\" Zeb replied. \"Couple years ago there were well over three and a half thousand, but then the silver dried up and they had a big strike up near Aspen. Most left before winter. Now there's only a handful left in town, few dozen more mining around here.\"\n\n\"Sir,\" Abby said gently, \"Mr. Buckman said you had a daughter and granddaughter living up at the Jenkins Place?\"\n\n\"Buckman talks to damn much!\" Zeb snorted. \"Hope y'all didn't tell him anything you didn't want everyone within twenty miles to know about by morning.\"\n\nSlowly he shook his head and looked over his shoulder at Abby.\n\n\"Yes ma'am, my granddaughter's name is Monique, but we call her Lil Moe. She and her momma been up at the Jenkins place for the past four years. She used to help me at the hotel 'till she got with child.\n\n\"Mr. Jenkins was kind enough to let her board and kept up his new house. Now she and Jeremiah take care of the place when Mr. Jenkins is gone. That's most of the time, since Mrs. Jenkins never liked it here. She liked her big house back in Leadville.\"\n\n\"Don't you fear for their safety?\" Abby asked.\n\n\"I guess some, but it's no more dangerous there than anywhere else in the territories. Probably even safer than back home, since the war. Desiree can handle herself pretty well. Besides, Jeremiah, Robbie is still there; he's a bit of a saphead, but he's loyal as a coonhound. They had a couple other hands, but they left for Aspen last fall. Course, then there's those damn dogs!\"\n\n\"Dogs?\" Thomas replied.\n\n\"Yeah, few years back, Mr. Jenkins ran across three abandoned pups. Turns out they were part wolf. Skittish as hell, but they made damn good guard dogs. Jenkins had two older dogs that adopted them. Now they run like a pack and are very territorial and protective.\n\n\"What surprised everyone was how quickly they took to my Desiree and Lil Moe. A couple prospectors walked up on the house unannounced one night two years ago. The dogs killed one and maimed the other.\"\n\nAbby gasped in horror, while other three men listened intently.\n\n\"So, no ma'am, I ain't particularly worried. No more than any man worries about his family.\"\n\n\"Will we be safe?\" Horace questioned.\n\n\"Should be. It's daylight and I've been up to the place so many times that they'll recognize me. I'll ring the bell to make sure Desiree puts them up, though.\"\n\n\"Will Jeremiah be there?\" Abby said gently.\n\n\"Doubt it. He's probably taken the Ambrose party out hunting or fishing. They usually do a night or two, then back to the house depending what they shot. Then they leave again the next morning.\"\n\nAs they approached a clearing, they saw a bell mounted on a post. Zeb got off the wagon and went over to it and rang it. He had barely gotten back up on the wagon when they heard dogs barking and a woman's voice shouting commands. Moments later there was another bell that was rung twice.\n\nZeb guided the wagon across the clearing. As the broke the hillcrest they saw a large two-story house with a small bunkhouse and barn behind it.\n\n\"That'd be the Jenkins place,\" Zeb announced.\n\nSlowly, they drove up to a split rail and Zeb hopped down and tied off the team of mules. Before he could say anything to his passengers, there was a high pitched squeal.\n\n\"Pappy!\" the dark haired little girl yelled as she ran toward them. Zeb laughed as he picked her up and she squealed again.\n\n\"This here be Lil Moe! She ain't very tall, but we keep hoping.\"\n\n\"Pappy! Momma says I'll get bigger!\"\n\n\"Speakin' bout your momma,\" Zeb said smiling, \"Where is she?\"\n\n\"Right here,\" replied a smiling young woman standing on the porch. \"Waiting on your old hide to bring that bag of curls you got there back to the house!\"\n\nShe was tall, almost six feet, and quite the beauty, if oddly dressed. She was dark complected, attesting to her Cajun heritage. She kept her long black curls up in a simple ponytail and had on a simple dress. She also had on a pair of britches with the front of the dress tucked in!\n\nHer gentle smile faded as she looked at Abby and her party.\n\n\"Can I help y'all?\"\n\n\"We're here to see Jeremiah Hawthorne,\" Horace stated. \"Is he here?\"\n\n\"And who be asking?\"\n\n\"My name is Edmund Horace, and we have a business proposition for him.\"\n\n\"And it takes four of you to ask?\" she said, carefully eyeing the Swede.\n\n\"No ma'am,\" Horace continued. \"This is Mr. Hawthorne's brother and ex-wife. They're here to talk to Jeremiah and heal some old wounds. Mr. Swanson is here for our protection, since I'm carrying a good bit of money with me.\"",
        "Desiree nodded.\n\n\"Fair enough. I'll send Robbie to go fetch him. He took a hunting party up into Taylor Pass yesterday.\n\n\"Robbie!\"\n\nA tall, gangly man in his twenties came running. It was obvious that he was what would be called touched or slow. One eye was slightly cockeyed and he carried one arm oddly. He had a perpetual smile on his face that was contagious. It shone even brighter when he addressed Desiree.\n\n\"Yes, Miss Rae?\"\n\n\"Go fetch Jeremiah. He took them up to Taylor's Pass.\"\n\n\"Yes ma'am,\" Robbie said grinning.\n\n\"And Robbie, make sure they hear you coming. Don't want them to shoot you by mistake!\"\n\nRobbie left quickly, but the others could hear him cackling as he ran.\n\n\"I expected them back tomorrow, but if Robbie finds them quick, they should be back in a couple hours. Y'all are welcome to wait inside, but those barking irons need to be left at the door. There's a chest just inside the door you can put them in and they'll be safe. Don't be bringing no guns into the house or I'll turn the dogs loose on you, hear?\"\n\nEveryone nodded and followed her into the house. Desiree watched closely as Thomas and the Swede put their sidearms into the chest.\n\nAs Abby entered the house, she was immediately taken back. The house was large and fancy, but the furnishings were ordinary and practical. The place looked more like a hunting lodge than a home.\n\n\"I've got some salt pork and biscuits I can warm up if y'all are hungry?\" Abby stated flatly, obviously hoping no one would take her up on her offer.\n\n\"And gravy?\" Zeb asked ignoring her tone.\n\n\"Gravy!\" Moe squealed.\n\nDesiree shot her father a dirty look.\n\n\"All right,\" Desiree snorted. \"Pappy, you take them to the sitting room. I'll go get it started.\"\n\n\"That jug still hiding behind the rocker?\" Zeb grinned.\n\nDesiree huffed and turned to go back to the kitchen.\n\n\"May I help?\" Abby asked softly.\n\n\"I don't need...\"\n\n\"Me too!\" I wanna help!\" Moe yelled out, struggling to get out of her grandfather's arms.\n\nDesiree sighed, looking at her daughter.\n\n\"All right, now I guess I do need the help.\"\n\nWhile the men settled in the sitting room with a large jug of moonshine, Abby followed Desiree and her daughter back to the kitchen.\n\nAs Moe played with a small spoon and pot, Abby broached the awkward silence.\n\n\"She's beautiful,\" Abby stated as she stared at the little girl playing.\n\n\"She's a handful,\" Desiree responded. not looking up from her work.\n\n\"Is... is Jeremiah her father?\" Abby asked softly.\n\nDesiree stopped what she was doing and stared at Abby.\n\n\"No, Moe's daddy died before she was born. He worked in one of Mr. Jenkins and Haw Tabor's mines. The fever took him two weeks before I knew I was pregnant.\n\n\"I was helping Pappy at the Hotel View, back then. Then Mr. Jenkins built this fine house and hired my fat, pregnant butt to work here. I think he did it out of charity, but I was still grateful. That's when I really got to know Jeremiah. I'd seen him around Ashcroft several times before. He followed Mr. Jenkins out here from Leadville and worked a while in the mines.\n\n\"One day Jeremiah overheard one of the bookkeepers tell Mr. Jenkins something that didn't sound right. Jeremiah approached Mr. Jenkins later and told him his concerns. Turns out the bookkeeper was skimming some of the profits.\"\n\n\"Yes,\" Abby agreed, \"Jeremiah was always good at his numbers and book learning.\"\n\n\"Well, Mr. Jenkins was impressed and moved him out of the mines and put him out here. I think so he'd look after me, but also so he could begin looking over the books from each mine. The things Jeremiah didn't understand he'd ask one of the other mine bookkeepers. He's found some things, nothing as bad as that man skimming, but things that have helped. He's done really well these past few years.\"\n\nDesiree looked Abby and paused as if she was trying to determine if she should continue. Abby stared back and started to ask a very personal question.\n\n\"Are you ...\" Abby began. \"I mean...\"\n\n\"Are me and Jeremiah a pair?\" Desiree replied with a smirk. \"Not for a while now. Up till a couple years back we was, though. Jeremiah helped me when I got so big with Moe that I could barely do the chores around here. He'd talk to me at night when I was lonely and looked after me. After Moe was born, he looked after both of us.\n\n\"He was so wounded when I first met him. Not on the outside, but inside. We helped each other, I think. But weren't lovers till a couple months after Moe was born.\n\n\"There was something tween us right from the beginning. We weren't making mooneyes at each other, but there was a kind of love. He's a damn good man but we weren't fixin' to spend our lives together. Still, I spent many nights in his bed and I doubt he had any complaints. Then Mrs. Tabor's big party happened and things changed a couple months after that.\"\n\n\"What happened then?\" Abby asked softly. \"Why did things change?\"\n\n\"Jeremiah met someone, well...\" Desiree stammered, \"well... special.\"\n\n\"Who?\" Abby asked, and immediately knew she'd gone too far. Desiree's eyes flashed and her body tensed. The look on her face turned cold and dangerous.\n\n\"What's it to you?\" she snapped. \"You threw him out like he was a piss bucket!\"\n\n\"I didn't...\" Abby started.\n\n\"Don't lie to me, you bitch!\" Desiree growled. \"I know who you are. When I first met him he was like a man going through each day, praying it would be his last. It weren't until Moe was born that I began to see life in his eyes again. So don't pretend you care about him. I know what you and those bastards sitting in there done to him, and it almost killed him.\"\n\n\"What I did?\" Abby retorted loudly, her own anger building. \"What about what he did to me?\"\n\n\"And what did he do to you?\"\n\n\"He cheated on me and got the girl pregnant!\"\n\n\"Says who?\"\n\n\"Says the girl he was cheating with!\"\n\n\"And if she wasn't telling the truth?\"\n\n\"Why would she lie?\"\n\n\"I dunno, why would she lie? What possible reason would she have to do that?\"\n\n\"She wouldn't!\" Abigail yelled.\n\n\"Jeremiah was wrong,\" Desiree sneered, \"you're not blind, you're dumb as a stump!\"\n\n\"Hey!\" Zeb yelled from the sitting room. \"Y'all need any help in there?\"\n\n\"Come into my kitchen, old man,\" Desiree yelled back, \"and you'll have a skillet up side your head!\"\n\nDesiree looked over at her daughter, whose eyes were as big as saucers.\n\n\"Baby, go crawl in your Pappy's lap and ask him if he's going to hell cause he drinks so much like preacher man says.\"\n\n\"Okay, Momma,\" she said dropping her things and running into the sitting room. A few seconds later Zeb called out.\n\n\"That ain't right, Rae!\"\n\n\"No, it weren't!\" she called back. \"So stay out of it!\"\n\nTurning back to face Abby she forced a smile that made Abby's skin crawl.\n\n\"Now where were we... oh yeah, you were going to tell me why you'd believe this woman instead of your husband. No wait! You didn't even give him a chance to defend himself, did you?\"\n\n\"He disappeared for two months!\"\n\n\"Did you even go looking for him or did you just go climb into bed with his brother that night?\"\n\n\"That's not how it happened!\"\n\n\"Well you better get your story straight and have a damn good explanation for Jeremiah when he gets back. Cause if you don't, he'll throw y'all off this here property regardless of how big that there Viking is in there!\n\nAbby took a deep breath and swallowed her response. They needed to keep their talk with Jeremiah as calm as possible. If this was what was in store for them, then their confrontation with Jeremiah was going to be ugly.\n\nAbby worked in silence along side of Desiree as they prepared and served the makeshift meal.\n\nA few hours later, just before sundown, they heard the dogs announcing someone's arrival. Minutes later, they heard hushed voices outside. Abby realized Desiree had slipped out and was probably talking to Jeremiah before he came in. She was also probably letting him know that it was safe, as well.\n\nAbby felt her stomach tighten with anticipation as soon as her ex-husband walked into the house. He looked much like he had five years ago, maybe a little leaner. He was no longer clean shaven, a look Abby had always preferred; instead, he'd replaced it with a trimmed moustache and goatee. Missing, as well, was the gentle smile and warmth in his eyes. Now those eyes were cold and hard.\n\n'This was a fool's errand,' she thought to herself again.\n\nIt appeared Jeremiah was about to yell at them when he was interrupted.\n\n\"Mi-ah!\" the little girl yelled out and threw herself at him. Without looking, he caught her and swung her around. Her squeal of delight brought a temporary smile to everyone. Jeremiah pulled her up into a big bear hug as she giggled. Abby felt a twinge of sadness as she remembered Jeremiah doing that same thing with Sarah when she was little.\n\n\"Moe, you little rascal, go find your momma,\" he laughed as he put her down. \"She's outside with your Pappy and Robbie.\"\n\nThe little girl skipped out the door laughing as she went.\n\nJeremiah turned and glared at them. His look let everyone know that any joy had just left with that little girl.\n\n\"What do y'all want?\" he said coldly.\n\n\"Mr. Hawthorne,\" Mr. Horace began, \"We've come here with a proposal that I think you'll find quite beneficial to you.\"\n\n\"I remember you. You're King Henry's mouthpiece. Have you thrown any orphans or widows out in the street this month? I figured you got some kinda bonus for doing that type of thing since you've sold your soul to the Devil!\"\n\n\"Mr. Hawthorne, I assure you...\"\n\n\"Stop right there,\" Jeremiah interrupted. \"Your assurance means nothing. I'd trust a rattlesnake before I'd trust anyone one of you.\n\n\"Be that as it may, sir, I believe we have a business proposal that will benefit everyone.\"\n\nJeremiah's laugh lacked any mirth.\n\n\"So, King Henry finally found out he didn't control the ranch? Found out about the livery stable in Leadville, did he?\"\n\n\"Well yes. We were all quite surprised...\"\n\n\"I'll bet you were! My old man might have been a little touched in the head when he came home from the war, but he could still smell a skunk. He had that bank up in Leadville loan him the money to partner with someone he knew from the war and buy that livery. He staked a majority share of our ranch against that loan.\n\n\"Each month, the profits would be split with our share going to payoff that loan and still provide a stipend for Momma after he died. That way she'd have a steady stream of money, regardless of what happened to the ranch.\n\n\"He set it up in both mine and Momma's names since he knew I wouldn't run off and abandon her,\" Jeremiah said looking over at Thomas. \"He would've left it to both of us if you'd stayed around.\"\n\n\"I never wanted to stay on the ranch,\" Thomas stated.\n\n\"When you left though, you broke both Momma's and Abby's hearts.\"\n\n\"I needed to leave and go out on my own.\"\n\n\"I got no issue with that. Course that didn't stop you from coming back and staking a claim on someone who wasn't yours, ain't that right dear brother?\"\n\n\"Gentlemen please!\" Horace exclaimed. \"This isn't helpful.\"\n\n\"Who said I was trying to be helpful?\" Jeremiah barked.\n\n\"Mr. Hawthorne I realize you are angry and feel you were wronged.\"\n\n\"I WAS wronged! I was stabbed in the back by those I loved and trusted. Now why are you here?\"\n\n\"Please Jeremiah!\" Abby blurted. \"Please hear us out.\"\n\n\"Like y'all heard me out?\"\n\nAbby flushed, before speaking very gently.\n\n\"You're right; what happened the day you left was wrong. Things were bad and then got worse. I'm sorry for how we all seemed to attack you. You, Thomas and me need to sit down and talk some of this through. There's a lot to be said from all of us.\n\n\"But first you need to hear what Mr. Horace is proposing so we'll all have our cards on the table. Please, Jeremiah, please just hear him out?\"\n\n\"All right,\" Jeremiah growled and walked over to a chair, \"let get this over with.\"\n\nSitting down, he watched as everyone found a place to sit.\n\n\"You, mouthpiece,\" he said, as he continued looking at Mr. Horace. \"How you gonna bribe me this time?\"\n\n\"Mr. Hawthorne,\" Horace began, unfazed by his hostility, \"I'm here to offer you several things in exchange for all or a portion of your holdings on the ranch.\"\n\nJeremiah shook his head and snorted. \"What do think you have that I could possibly want now?\"\n\n\"Well to start, I have a significant amount of money here.\"\n\nJeremiah sat there with no reaction.\n\n\"Plus,\" Horace continued, \"I've notes to several deeds in Thompsonville that could be used to back up any type of arrangement we might need to make.\"\n\n\"Go on,\" Jeremiah said shortly.\n\n\"Besides that, I have it on good authority that the incident with Pedro Mendez can be made to disappear forever. There will no longer be the threat of a warrant hanging over your head.\"\n\nJeremiah sat back and looked like he was thinking.\n\n\"Is that it?\" Jeremiah said calmly.\n\n\"No, besides clearing the air with your ex-wife and brother,\" Horace said smiling, \"we have some information that might help you reunite with your daughter, Sarah.\"\n\n\"Really?\" Jeremiah said very warily. \"So why isn't she here?\"\n\n\"Unfortunately, she ran away.\"\n\n\"Ran away! Why did she run?\"\n\n\"She ran away,\" Thomas interjected, \"because she didn't like it that I tanned her backside when she got uppity with me. She's always resented me for marrying Abby.\"\n\n\"Showed she was smart. Do you get excited when you spank teenage girls?\" Jeremiah retorted, glaring at his brother.\n\n\"Calm yourself, sir,\" Horace said evenly.\n\n\"So where is she?\"\n\n\"We know where she is and that she is safe. We are very willing to share that information with you as soon as we conclude our business here.\n\n\"Mr. Hawthorne,\" Horace continued in a slightly condescending voice, \"It's obvious that you're not interested in returning to the valley. Why not sever any remaining ties to a place that holds no joy for you. Certainly, we can come to some type of agreement that both sides will find profitable?\"\n\n\"You're right about one thing,\" Jeremiah said as he glared at Thomas and Abby, \"I have no desire to ever go back to that valley. With Sarah no longer there, there's NOBODY there that I give a damn about!\"\n\n\"Jeremiah,\" Abby said softly, \"I'm sorry for how we confronted you that day. Things were so twisted back then. I know I didn't do you right by the way I handled things.\"\n\n\"Didn't do me right? That's a hoot!\" Jeremiah sneered. \"I'm thrown into the Denver city jail for a fight I didn't start. People I've never met lie about me and I spend two months locked up. When I finally get home I find I'd been tried and convicted without even having the chance to defend myself. On top of that, my wife was now sleeping with my brother!\n\n\"I always knew you took a cotton to Thomas, but thought you were mine when we'd wed! I never thought you'd turn into a cheating whore!\"\n\n\"And I never thought you'd share your bed with another woman! Let alone get her pregnant!\"\n\n\"Still don't believe me, do you?\" Jeremiah said shaking his head. \"Still can't believe it's possible I was railroaded and that King Henry was behind it?\"\n\n\"No, he wouldn't do that!\"\n\n\"I've heard tell that Pedro and Maria's official testimonies are on record over in Denver. Not only that, but they swore to a very different story than what they'd told you!\"\n\n\"Mr. Hawthorne...\" Horace began.\n\n\"Shut up, mouthpiece! It's my turn!\"\n\n\"They told the Denver sheriff,\" he said never taking his eyes off of Abby, \"they were forced to lie to you. They said the Swede threatened them and then he shot Pedro in order to frame me.\"\n\n\"Liar!\" the Swede barked as he started to get up.\n\nHe froze when he heard the hammer of a gun being pulled back. Everyone turned their attention to the attractive Amazon standing in the doorway, aiming a shotgun at the Swede's chest.\n\n\"Sit back down!\" she said coldly. \"Or I swear to God I'll kill you right there!\"\n\nThe big man slowly eased himself back into the chair. Jeremiah and the Swede glared at each other.\n\n\"Don't believe me?\" Jeremiah flatly stated, \"Go to Denver and see for yourselves.\"\n\nAbby looked at Jeremiah and then over to the Swede. Her stomach began to turn as she finally seriously considered that she'd been lied to. That uncomfortable possibility slowly crept into her thoughts. However, Jeremiah wasn't done.\n\n\"I have a couple of questions for you two, though,\" her ex-husband said turning his attention to her and Thomas.\n\n\"Surely both of you,\" Jeremiah's voice dripped with sarcasm, \"found it suspicious that my wayward brother would return so soon after I left?\"\n\nAbby was silent as Thomas responded.\n\n\"Henry sent me a telegram a few days after you disappeared and the Mendezs had visited.\"\n\n\"How did he know how to find you?\"\n\n\"He'd contacted me a few months earlier.\"\n\n\"You never told me that!\" Abby gasped.\n\nThomas looked at her innocently.\n\n\"What was there to tell? Your father sent me a letter asking me to come home. He was hoping I could help him convince Jeremiah to pool our resources and offer a deal to the railway. I wasn't interested in coming back until I heard about all the trouble Jeremiah was in.\n\n\"Brother, I'm sorry that things turned out this way for you, but I didn't come back planning to take your place. When I got there, you'd already disappeared and Abby was alone and hurting. I stayed for her.\"\n\n\"So Henry sent someone to find you before he sent you that letter?\" Jeremiah stated calmly as Thomas nodded. \"And then Henry sent someone to find me here in Ashcroft?\"\n\nAgain Thomas nodded.\n\n\"Then how come he could find you, Thomas, after ten years of prospecting and me after five years of being gone, but couldn't find me sitting in a damn Denver jail for two months! Surely both of you were looking for me right? Surely Mr. Mouthpiece here knew I'd contacted his office there in Denver? It wouldn't be too damn hard to question someone in the sheriff's office about me would it?\"\n\nNeither Abby nor Thomas could continue to look him in the eye. Whatever level of guilt they had was written in their faces.\n\n\"Truth is,\" Jeremiah continued, \"neither one of you cared if I came back. I was already guilty and convicted without even a trial. Y'all had already cheated on me! You stabbed the person you said you loved, your own kin, in the back. So y'all can take your pathetic apologies and burn in hell!\"\n\nJeremiah stood in front of them, daring them to meet his eyes. His face was contorted in pain and his nostrils flared like a bull preparing to charge.\n\nAfter a few moments of awkward silence, Jeremiah turned to Mr. Horace.\n\n\"So here's my answer, mouthpiece.\"\n\n\"Mr. Hawthorne...\" Horace began again.\n\n\"There's nothing you have that I want. I don't trust you enough to believe you really know where my daughter is and there's not enough gold in these mountains for you to bribe me with. Go back to your master tell him it'll be a cold day in hell before he EVER gets his hands on my family's ranch!\n\n\"Now, it's dark outside so I won't throw y'all off this place, but I want you gone in the morning.\n\n\"Abigail, you can stay in one of the rooms here in the ranch house. Zeb, you and Robbie sleep here as well. These three can have the bunkhouse. Those barking irons stay in that chest until you leave, understand?\"\n\nMost everyone nodded as Jeremiah went over to the door and called out for Robbie. They could all hear him come running up to the house.\n\n\"Robbie, I'll take off at dawn and go meet up with Ambrose and the others. Would you make sure my horse is ready?\"\n\n\"Sure thing, Jeremiah!\"\n\nJeremiah turned to the group.\n\n\"Y'all got a few minutes before Robbie turns the dogs loose for the night, so I wouldn't waste anymore time in here. Those barking irons will stay in the chest until you leave. Careful you don't wander around here in the dark; the dogs are pretty dangerous at night. Now, I'm a bit tired. If y'all will excuse me, I'll turn in for the night.\"",
        "With that, the group slowly dispersed. Soon everyone could hear the dogs barking as they watched over the place.\n\n*****\n\nJeremiah mounted his horse. The sun was just breaking and he knew several places in Taylor's Pass would still be in the dark. He'd need to be careful; some of the cliffs up there were steep. Slowly he looked over at Robbie and nodded.\n\n\"He leave?\"\n\nRobbie nodded and grinned. \"During the night sometime. Probably before I let the dogs out.\"\n\nJeremiah nodded in agreement.\n\n\"Robbie, put the dogs up and keep your eyes open. Watch out for Rae and Moe. Hope to see y'all later today, if not, tomorrow morning.\"\n\n\"Sure, Jeremiah,\" Robbie nodded.\n\nJeremiah sighed as he slowly rode out. His skin crawled and his heart pounded. He knew that Horace wasn't going to give up this easily. What his, or more likely King Henry's, next move would be troubled him. Still, things were now in motion and stopping them would be like stopping a rockslide.\n\nAs he rode, he smiled since he could hear Robbie yelling at the dogs. If anyone was sleeping, they weren't now. He knew he'd have to be cautious, since the trail ahead would be tricky. Those parts of the road that were sunlit would be breathtakingly beautiful, while those parts still in shadow could be dangerous.\n\nTaking a deep breath, he tried to clear his mind. Seeing Abby and Thomas again had reopened old wounds. Past feelings of anger and bitterness were trying to bubble to the surface. He forced himself to focus and stay sharp.\n\nBack at the Jenkins place, everyone was gathering for breakfast. Rae was serving up some biscuits and gravy, much to Moe's delight.\n\n\"Where's the Swede?\" Abby asked Thomas.\n\n\"Don't know. He slept out in the barn last night.\"\n\n\"In the barn?\"\n\n\"Yeah, his snoring is horrible. Sounds like a train, so he agreed to go sleep out in the barn. He's probably still out there.\"\n\nAbby turned and was alarmed by what she saw in Desiree's eyes. She was afraid.\n\n*****\n\nJeremiah slowly rode his horse down into a small, shaded gulch. His eyes were still adjusting when he heard the click of a gun hammer being cocked. He launched himself off his horse and away from the sound just as the gulch exploded with the noise of a gunshot.\n\n*****\n\nThe dogs announced someone approaching. Everyone began walking out onto the porch. Before he went out, Thomas went over to the chest and reclaimed his gun that he'd put in there when they first arrived. By the time he got outside, they could all see a single horse with two riders slowly coming in. Jeremiah and Zeb dismounted and Jeremiah said something briefly to Robbie. Robbie remounted the horse and rode out fast back towards Taylor's Pass.\n\nAs Jeremiah and Zeb began walking towards them, Abby could see the rage on her ex-husband's face. She noticed he kept his hand on his gun as they approached. She felt Thomas start to slowly shift away from her. Without warning, Jeremiah drew and aimed straight at Thomas.\n\n\"You reach for that, you son of a bitch,\" Jeremiah snarled, \"and I'll blow your head clean off, kin or not! Now throw that barking iron over on the porch real careful like.\n\n\"And you,\" Jeremiah growled at Horace, \"you best not be hiding nothing in those fancy clothes.\"\n\n\"I assure...\"\n\n\"Hogwash! Zeb search him. You find a weapon on him... gut him like a fish.\"\n\nZeb smiled and pulled out a long thin knife. Horace turned white and raised his hands in front of him.\n\n\"I... I seem to have overlooked ...\" he stammered. \"In my inside coat pocket.\"\n\nZeb reached into the lawyer's top-coat and pulled out a small single-shot pistol.\n\n\"Mr. Hawthorne,\" Horace began before Jeremiah cut him off.\n\n\"Y'all says I assure you one more time and I'll shoot you dead. Lucky you didn't try to draw that thing or you'd be deader than that Swede bastard.\"\n\n\"What?\" Abby gasped.\n\n\"That bastard tried to bushwhack me up around Taylor Pass. He snuck up behind me and had the drop on me but Old Zeb here put him down.\"\n\n\"He's... he's dead?\" Horace said obviously shaken. \"Where is the body?\"\n\n\"At the bottom of an old abandoned mineshaft,\" Jeremiah said smiling. \"Hopefully, he's keeping the Tommy Knockers company!\"\n\n\"You sure that he's dead?\" Thomas questioned.\n\n\"Sure as I'm standing here,\" Zeb grinned evilly. \"I blew a hole clean through his back.\"\n\n\"You shot him in the back?\"\n\n\"He was about to shoot your brother in the back, I just shot first!\"\n\n\"Now that I feel a bit safer,\" Jeremiah said, then looked at Abby and frowned.\n\n\"Rae, search her,\" he said pointing at Abby. \"Make sure she ain't hiding anything.\"\n\n\"Jeremiah!\" Abby yelped in surprise. \"I would never... you can't believe that.\"\n\n\"Why would I trust you?\"\n\nThere was no response, just an awkward silence.\n\n\"Take her inside, Rae.\"\n\nAfter the two women left, Thomas cleared his throat.\n\n\"Do you really think Abby is armed?\"\n\n\"What I think is that I don't trust any of you.\"\n\n\"Ain't you worried about if Abby has a weapon?\" Thomas said mockingly as he nodded towards the house.\n\nBoth Jeremiah and Zeb snorted.\n\n\"Thomas,\" Jeremiah said coldly, \"A pretty girl like Rae out here amongst all these wolves, both human and animal? I'd put her up against any of you, except for maybe the Swede. Well now, maybe him as well, since he's worm food.\"\n\nAlmost as if on cue, both women reemerged.\n\n\"Nothing there,\" Desiree smirked. \"At least nothing special.\"\n\nAbby felt her face flame red as Zeb's laughter seemed to diffuse some of the tenseness of the situation.\n\nThe next two hours were filled with accusations and denials. Abby and the rest all denied any prior knowledge, and Jeremiah called them liars. Both groups had finally reached an exhausted impasse in the argument when they heard Robbie's voice shouting in the distance, announcing his return.\n\nSlowly everyone began filing out of the house to meet the returning party. Abby was surprised to see Robbie leading a foursome that consisted of two men, one white and one black, and two teens, a thin male and a girl. Even though the girl was dressed in typical male attire, Abby recognized her immediately. It was her daughter, Sarah.\n\n'Thank heavens she's safe,' she sighed in relief and then had an epiphany. 'That's how he knew so much! Of course, she'd tell him her side and he'd believe her.'\n\nHer eyes were slowly drawn to the men as they dismounted. The older white man had a grizzled beard and carried himself with an air of authority. He was obviously Ambrose, and the leader of the group.\n\nBeside him was large black man. Buckman had been right, he wasn't quite as tall as the Swede but he was just as muscular. His big bushy beard was as black as midnight and his big toothy smile looked like a crescent moon on a starless night.\n\nThe young lad named Sam dismounted, and Abby could immediately see why Buckman had referred to him as a Molly. He certainly had several girlish traits. She guessed he'd probably been a sickly youth. His clothing was baggy and ill fitting, and his hairless face was mostly hidden by a large floppy hat.\n\nTo her shock he ran towards Jeremiah and launched himself into his arms. Even from where Abby stood, she could hear his gentle sobs.\n\n\"Thought... lost you... died,\" Sam stammered as Jeremiah gently comforted him.\n\n\"Afternoon,\" Ambrose's voice boomed, drawing everyone's attention.\n\n\"My name is Ambrose, and this is Mr. Jacob,\" he said pointing to his black companion. \"And, of course, you already know Miss Sarah. She's already told us quite a bit about y'all.\n\n\"And that is Sam...\" He chuckled.\n\nThe group turned and watched as Sam gave Jeremiah a passionate kiss. The entire Hawthorne party stood in silent amazement.\n\n\"What's the matter, mother?\" Sarah smirked.\n\n\"Nothing! I just didn't realize,\" Abby stammered as she turned to look at her daughter. \"I mean I know there aren't a lot of women up here but...\"\n\nSarah burst out laughing and pointed back over at the couple. \"Look again, mother. Don't let the clothes fool you.\"\n\nSam's hat had fallen on the ground, revealing the long, blonde braid it had once hidden.\n\n\"Mother, let me introduce Sam,\" Sarah chuckled. \"Well more like Samantha, she's Papa's fianc\u00e9e!\"\n\n\"Fianc\u00e9e?\"\n\nSarah nodded as the couple slowly walked arm-in-arm over to the group. Abby was taken back by the look on Sam's face. It was contorted like she had just smelled something very rotten.\n\n\"I know why y'all are here,\" Sam sneered. \"I also know one of you tried to kill my Jeremiah! Now I want you off my property!\"\n\n\"Your property?\" Thomas asked.\n\n\"Sorry,\" Sarah interjected smiling, \"I should've introduced her better. Miss Samantha Jenkins Wilcox, this is my mother and her excuse for a husband.\n\n\"I want you gone by dark!\" Sam stated and spun around, leading Jeremiah away.\n\n\"Girl's got a fair bit of sand don't she,\" Ambrose chuckled. \"She dresses that way to avoid any unwanted attention. You know, a mine owner's daughter traipsing around the woods? Kind of strange, but does make a certain kind of sense, doesn't it?\"\n\n\"But we haven't finished...\" Horace interjected.\n\n\"The lady said,\" Jacob growled menacingly, \"you best be gone by night. I'd heed that warning if I was you, mister.\"\n\nJacob's stare let Horace and Thomas know they were in immediate danger. It was Ambrose's strong voice that broke the tension.\n\n\"I'm sure there are many questions and things that still need to be discussed. However, it would seem that a little time to cool down is in order. I would suggest that you go back to the Hotel View. We'll clean up and cool down, and then we'll all have dinner and talk afterwards.\n\n\"Will that be all right with you, Zeb? You think you could convince the Widow Brown to prepare something for a large sit down this evening?\"\n\n\"I figure she'd probably be able to do that,\" Zeb snorted. \"Been awhile since the hotel's had a good-sized gathering like that.\"\n\n\"We'll make sure both of you are well compensated.\"\n\n\"Well with everyone gone, we'll sure not turn down any coin!\"\n\nWith that, they all went back into the house, leaving Abby, Thomas and Horace standing. Zeb told them he'd get the buckboard and take them back to town.\n\nThey rode in silence for the entire trip. Once they got to the hotel, the trio met in one of the hotel rooms. Abby was the first to speak.\n\n\"Was it true?\" she spit at Thomas. \"Were the things Jeremiah said true?\"\n\n\"What things?\"\n\n\"Were the things Jeremiah said about the Mendezs true?\"\n\n\"How would I know? Abigail, I wasn't even there when any of that happened!\"\n\n\"And we don't even know if what Jeremiah said was true or just gossip,\" Horace said calmly.\n\n\"Beside,\" Horace added, \"Even if there was some truth to it, it happened five years ago. It's in the past.\"\n\n\"It matters,\" Abby hissed. \"because if I was lied to, then I BETRAYED Jeremiah before he betrayed me! My revenge wasn't justified, because I cheated on HIM and slept with his brother!\"\n\n\"I'm sorry,\" Horace said calmly, \"I wasn't trying to say it didn't matter, only that it was something that happened years ago. It's not something that can be changed or taken back.\"\n\n\"I understand that, Mr. Horace. But it does change things in my mind. If it's true, then I need to question those who lied to me. I need to know if my father is involved.\n\n\"Jeremiah was right about one thing, though, I didn't ask my father to try and find him. I was so angry and hurt.\"\n\n\"Abby, you can't blame yourself...\" Thomas started.\n\n\"Off course I can! I didn't believe him when he came back, either. So who else can I blame? You Thomas? You didn't go a try to find him either!\"\n\n\"You're right, I didn't. I'd been gone for so long that I didn't know if Jeremiah was capable of doing those things or not. So instead, I tried to comfort and protect you!\"\n\nAbby turned and stared at the lawyer.\n\n\"Did my father know, Mr. Horace?\"\n\n\"What?\"\n\n\"Did you and my father know that Jeremiah was in the Denver jail?\"\n\n\"Yes,\" Horace sighed, \"we learned that he was there.\"\n\n\"And you never told me!\"\n\n\"What was the point, Mrs. Hawthorne? The Mendezs had already spoken to you and left. The warrant for his arrest had already been delayed. And honestly, ma'am, you were already sharing your bed with Thomas. What good could've come from us telling you that?\"\n\n\"I... I don't know,\" Abby stammered as the tears began to stream down her face. \"Maybe it would've changed how I treated him when he did come home.\"\n\n\"Please, Mrs. Hawthorne. You knowing that wouldn't have changed the outcome of our confrontation with Jeremiah. Those things had already been done.\n\n\"Now,\" Horace continued, \"now, we have to face the facts that there's little we can offer your ex-husband that will persuade him to sell any part of the ranch to Henry. Now we'll have to convince him to join us, to make him a partner.\"\n\n\"Good luck with that,\" Thomas grumbled. \"He certainly hates us now. He thinks we sent the Swede to kill him.\"\n\n\"Yes,\" Horace sighed, \"I wish the Swede hadn't done that. I don't know what he was thinking.\"\n\nAll three stood and stared at each other in silence.\n\n*****\n\nThe Ambrose party arrived at the Hotel View just before sundown. Gone was the sensible, protective clothing needed for hunting or fishing. In its place was the finery that suggested Ambrose, Samantha, and even Jacob, belonged mingling with Denver's high society.\n\nSarah, Desiree and Monique all wore the common dresses of the day and looked the young ladies they were. Samantha walked in on the arm of Jeremiah, who still donned the common attire, but was clean.\n\nHowever, Samantha's transformation was startling,\n\nThe effeminate shy tomboy was replaced by an attractive, svelte woman, who showed no fear looking anyone in the eye. She wore a stylish Victorian dress that emphasized her smallish assets. While Desiree and Abby would be considered more naturally pretty, Samantha's presence demanded everyone's attention.\n\n\"Lordy, Miss Jenkins!\" Zeb exclaimed. \"Ain't you a sight? I haven't seen y'all gussied up like that since Missus Augusta Tabor's big shindig a couple years ago!\"\n\n\"It's been awhile, kind sir,\" Sam smiled and curtsied. \"I haven't worn this since that night. It's been packed away, but tonight's a special occasion.\"\n\n\"Ah, that's right, you'll be headed back to Leadville and Jeremiah will be following you there soon after.\"\n\n\"Yes, but we'll only be in Leadville till the wedding. Then we'll be leaving for Denver!\"\n\n\"Well I'll be! So this is a real farewell night?\"\n\nSam nodded.\n\n\"Then I figure I'll add to that. I'll be taken Desiree and Lil Moe back to Louisiana with me after Jeremiah leaves.\"\n\n\"Really? I thought you might head up to Aspen,\" Ambrose interjected.\n\n\"Nah, been doin' this for too long,\" Zeb sighed. \"Not the life I'd hoped to give Desiree. Certainly not the kind I want for Lil Moe.\n\n\"Now come on in and get seated. This'll probably be this hotel's last time to have its lobby filled with people and food! The Widow Brown outdid herself and made fried chicken with a mess of fixins!\"\n\n\"She sure is special,\" Jeremiah said grinning. \"Maybe she'd like Louisiana?\"\n\nDesiree burst out laughing and Zeb grinned wide.\n\n\"Well,\" he said slowly, \"I kinda already asked her. She's coming with us.\"\n\n\"Along with Robbie,\" Desiree laughed.\n\n\"Yeah,\" Zeb groaned, \"and all those damn dogs! We're gonna look like damn settlers going the wrong way, going east to Louisiana instead of west!\"\n\nThe Ambrose party laughed and congratulated him. Soon everyone was seated. The tension that hung over the gathering did little to keep them from enjoying a fine meal. Any serious discussion concerning the purpose for the Hawthorne's' visit was tabled, and the conversation ranged from mining to weather to Denver. Upon completion, Ambrose produced two bottles of fine port. After everyone was served, he cleared his throat.\n\n\"I believe we should get to the heart of this little get together,\" he began. \"First things first, we never got around to finishing the introductions. Jeremiah and Sarah have informed us of who you are, but I need to introduce myself. My name is Ambrose Weitbrec. Perhaps you've heard of my brother, Robert Weitbrec? He was the treasurer for the Denver &amp; Rio Grande Railway, back when they had that little incident with Bat Masterson.\n\n\"Missus Hawthorne, I'm sure there is some doubt about the validity of the information Jeremiah shared with you yesterday. The Pinkertons I hired were very thorough. I know that the testimonies in question have been notarized and are being kept in a safe in Denver.\"\n\n\"Mr. Weitbrec,\" Horace interrupted, his voice betraying his anxiety. \"I hope you're not insinuating that...\"\n\n\"I'm not insinuating anything, Mr. Horace. I'm just stating that we have notarized testimonies from Pedro and Maria Mendez concerning the false accusations that involved Jeremiah's warrant and his supposed indiscretion. Their testimonies clearly state that they threatened and forced to give false testimonies against Jeremiah. They stated that it was the Swede who threatened them and that he was the one who shot, or should I say grazed, Mr. Mendez in the arm.\n\n\"Mr. Horace, we both know frontier courts are very suspect. Justice out here comes from a bag of coin or the barrel of a gun, as much as through our legal system. These testimonies were taken in order to expose the lies surrounding Jeremiah. As to whether they actually link your current employer, that is for each person to decide for themselves. Regardless, there is no warrant out for Jeremiah and any claims against him can be proven false.\n\n\"Now, Jeremiah has told all of us what you were asking of him. Unfortunately, I need to inform you that Jeremiah here can't give you what you want, even if he was so inclined.\"\n\n\"Which he isn't!\" Sam interjected much to the amusement of several at the table.\n\n\"Sorry,\" she said sheepishly as Jeremiah reached over and took her hand. The loving smile he gave her was unmistakable.\n\n\"Never apologize for defending your man, my dear,\" Ambrose chuckled.\n\n\"You see,\" Ambrose continued by addressing everyone, \"he can't give you what you want because he no longer owns that business or any of its holdings.\"\n\n\"What?\" Thomas and Horace blurted out together.\n\n\"That's right,\" Jeremiah said grinning. \"I sold the livery back to my father's partner and paid back what was left of the loan. Then I sold my stake in the ranch as well.\n\n\"It no longer held anything but bad memories for me. So when a pretty young lady accepted my marriage proposal, I sold it. Everything is already signed and agreed upon and will begin the day after our wedding.\n\n\"The deal I made secured me a position with a bank over in Denver. It gives me a small stake in that bank, and I'll be working and learning the financial business under a mentor. I'm sure y'all probably think that sounds boring, but because of that I'll be able to secure a future for my wife and children.\"\n\n\"But why,\" Abby said softly as she stared at Jeremiah, \"why didn't you say something earlier?\"\n\n\"Why would I?\" Jeremiah growled. \"Y'all ambushed me... again! Then you give me some cock and bull about how sorry y'all are and try to bribe me with my own daughter. Why would I trust any of you?\n\n\"I wasn't sure how far you'd go to get what you wanted, since you brought the Swede. I figured I was in danger, but better me than my friends and loved ones.\n\n\"I knew Zeb would protect Desiree and Lil Moe. I also figured y'all didn't know about Ambrose and Sam. I was pretty certain y'all didn't know about Sarah, either. The simple truth is, I'd die before I ever let anyone harm either of my girls!\"\n\nSam wrapped her arms around his and beamed.\n\n\"Last night I met with Zeb and told him if anything was to happen, it would involve the Swede. Turns out I was right. Zeb followed him and watched him get his rifle out of the wagon and then begin walking towards Taylor's Pass. When he tried to ambush me, Zeb put him down like the dog he was!",
        "\"Now I can focus on my future. I was happy back on the ranch. I had a wife and daughter that I loved, but one of them was taken from me and the other broke my heart. Some very kind people returned my daughter to me, and an angel has healed my heart. I look forward to holding that angel every night.\"\n\n\"Someone returned Sarah to you?\" Abby asked.\n\nJeremiah nodded and looked over at Ambrose.\n\n\"When I ran away I must have had angels watching over me,\" Sarah interjected. \"I wasn't sure where to go, at first. I'd heard you say that Papa had gone to Denver before he came back that day. So I went to Colorado Springs first. I was lucky to hitch up with a family going to Denver.\n\n\"When I arrived in Denver, I began asking questions at the city jail. Then I went to one of the churches. A Reverend and his wife took me in for a few days and then introduced me to Mr. Ambrose.\n\n\"Mr. Ambrose took me to Leadville to meet Sam. She took me in. They told everyone that I was her new handmaid.\"\n\n\"Why?\" Abby asked.\n\n\"Well that was at my suggestion actually,\" Ambrose explained. \"You see, I wasn't fully prepared at that time.\"\n\n\"Prepared for what?\" Mr. Horace asked.\n\n\"Well, in truth I wasn't prepared for this visit. I needed to make sure your man couldn't track Sarah to Jeremiah too quickly. There were still a few loose ends that demanded my attention. Thankfully, those were taken care well before your man ever went to Ashcroft. We were able to smuggle Sarah here just a few days after she'd been discovered in Leadville.\n\n\"I've got another small confession,\" Ambrose grinned. \"It wasn't with the most honorable intentions that I delivered Sarah back to her father. I knew Jeremiah was a fair man and that my gift would influence his decision to sell.\n\n\"What Jeremiah didn't say was that he sold his interest to me and my partners. It's also my group's bank, and I'll be the one working with Jeremiah. He's got a fine head for figures and should do quite well. The fact that he and his future bride have a vested interest in the bank is an added bonus.\n\n\"I didn't buy out Jeremiah simply as a favor to John Jenkins. I agree with Henry Thompson. Besides looking out for my good friend's daughter who I love like my own, it is also a very good investment.\n\n\"Those placer mines they've already found up round Pike's Peak may have already been all panned out, but there's a very good chance that all that gold had to come from somewhere. It's likely that sooner or later someone will discover where and then...\"\n\n\"And then that little valley will be extremely valuable. Owning the majority interest in the Hawthorne Ranch gets me a foothold in the valley.\"\n\n\"But Mr. Weitbrec,\" Horace said cautiously, \"Henry Thompson owns most of that valley.\"\n\n\"That's very true, Mr. Horace. However, I bought Jeremiah's stake not only because it might be a good investment, but it also put me in a position get a little vengeance.\n\n\"You see, sir, my wife's cousin, \"Ambrose's voice became low and threatening, \"lives in Kansas City. We aren't particularly close with that side of the family, so my wife and I didn't hear about this until a few years ago,\"\n\n\"Well, this cousin has a daughter who married a nice young lad. Several years ago, she traveled with him to Colorado to help his grandpa run his ranch. Their bad luck was to arrive right in the middle of a railway war. As you know, there were a lot of ugly underhanded things going on about that time.\n\n\"Never in their worst nightmares did they think they'd run across people who were trying to run the grandpa off his land. Not just run him off, but burn him out! They were threatened and then terrorized by a big blonde bear of a man. The husband still has burns on his arms from trying to rescue his grandpa from the burning house. His last name was Wilson.\"\n\nHorace looked very uncomfortable.\n\n\"So you can imagine my surprise when I started talking to this man who had impressed a very good friend of mine. This man had won the heart my friend's daughter, and his stories about his past were eerily familiar. I even learned this Thompson fella had a man working for him that sounded like the son-of-a-bitch that did that to my wife's kin. Well, I certainly became very interested.\n\n\"I was even more surprised to find out that same man had been buying out both land and businesses in that area. It was a blessing from heaven to learn he'd severely over extended his line of credit. It was like Manifest Destiny! It took me a bit, but I finally bought up all his debt. That was the loose ends that needed tending.\n\n\"I figure I'll take most everything he has except his ranch when I call in all his markers at the end of the month. Oh hellfire! It wouldn't even surprise me if there weren't an accidental fire or two up on that ranch before winter!\"\n\nAmbrose's grin sent shivers down everyone's backs.\n\n\"By the law or the gun, Mr. Horace. Please tell your employer that it's a given that anyone involved with him is in danger when all this happens. Also, sir, Denver isn't a particularly safe town either, even for lawyers.\n\nThe table was silent as each person processed Ambrose's thinly veiled threat.\n\n\"Now that that nasty business is done,\" Ambrose continued essentially ignoring the Hawthorne party. \"Would anyone care to join me and Jacob in a cigar?\"\n\n\"Hell yes!\" Zeb stated from the kitchen entryway. \"Right after I helps clean up here!\"\n\n\"Go on ahead, Pappy,\" Desiree laughed. \"Sarah and I will help get this done.\"\n\nZeb grinned from ear to ear.\n\n\"Jeremiah?\" Ambrose asked.\n\n\"Please excuse Jeremiah,\" Sam interjected. \"He needs to spend a little time with his fianc\u00e9e. Jeremiah would you please escort me outside for a little walk?\"\n\n\"I'd be honored to.\"\n\nThe couple got up and went outside arm-in-arm. Silently, the guests Left the table and congregated in smaller groups. Horace and Thomas went upstairs to their rooms while Abby lingered downstairs for a few minutes before slipping out the back door.\n\nShe needed to talk to Jeremiah and apologize. She also knew that Sam wouldn't be happy with the interruption. Still, it would probably be her last opportunity to speak with her ex-husband.\n\nAs she approached them she could hear their voices.\n\n\"... sorry, Jeremiah. I don't mean to be such a bother.\"\n\n\"Shh, sweetheart. You're not a bother.\"\n\n\"It's just I get scared. I know what they say about me behind my back. That a man would only be after my money to ever wed a harpy like me. They say I'm a spoiled, little princess, who probably drove her husband to his grave. But you know that's not true, don't you?\"\n\nJeremiah chuckled and smiled. \"Yes, I know that's not the truth. However... the spoiled bit...\"\n\n\"Okay, they might have a point there,\" Sam choked back a small laugh, \"but I'm getting better. It's just that I was so angry at James, leaving me in Leadville and spending a year up in the mountains, working in one of my Dad's mines. We hadn't even been married two years and he left. He hadn't even given me that baby he'd promised me!\n\n\"When they told me he'd died of pneumonia, I fell apart. I know that lots of people thought I'd gone loco, but it was just the pain. It was the knowing that the wonderful life I'd planned for us was dead. All I was left with was the dark hopelessness of being a widow before I was even twenty.\n\n\"After that, I looked at every man that sought my hand through those dead eyes. I did that for four years, and I probably did become that harpy they claim I am. I know I went to Mrs. Tabor's big party kicking and screaming. I'm glad Daddy demanded that I be there. It wasn't till afterwards that I learned he'd wanted me to meet someone who he had a great deal of respect for. It was you Jeremiah Hawthorne, and when I first met you I was ashamed.\"\n\n\"Ashamed?\"\n\nShe nodded and smiled sheepishly up at him.\n\n\"I wanted you to like me so badly that it scared me. I hadn't had that feeling since James. When you took me into your arms the first time we danced I almost cried. It was the first time I'd ever let myself hope to be happy again.\n\n\"But then I started looking at myself and the type of person I'd become. I swore to God right there that if you gave me a chance I'd become the kind of woman you'd be proud to be married to.\"\n\n\"Samantha, I've always been proud to be with you. Even when you were dressed like a man!\"\n\nSam laughed and playfully slapped his arm.\n\n\"I was honored to be near you,\" Jeremiah said in a somber voice. \"Sam, I love you.\"\n\n\"Even though I act like a spoiled brat sometimes? Even when I let my temper get the better of me?\"\n\n\"I love you no matter what, Samantha Jenkins Wilcox. You tell me about how I changed your life, but you changed my life even more. You know how broken I was when you met me. What they did to me about killed me.\"\n\n\"I know, sweetheart. That's why I'm so angry with them. How could you ever do that the someone you claim to love? I'm sorry if I let my claws out a bit.\"\n\nJeremiah laughed softly. \"Well no one can say they don't know how you feel!\"\n\n\"Jeremiah, I'm sorry. I'm really trying.\"\n\n\"Hush, beautiful. It's okay. It feels good to have someone love you enough to fight for you.\"\n\nJeremiah's words struck deep into Abby's heart. She tried but was unable to completely stifle her sob.\n\n\"Who's there?\" Sam barked.\n\n\"I'm sorry...\"\n\n\"What do you want?\"\n\nSam was obviously getting upset before Jeremiah wrapped his arms around her and spoke gently.\n\n\"It's all right, sweetheart,\" he said softly, \"Let her say what she needs to. She can't hurt us.\"\n\nAbby watched as Sam melted into his arms. Her body seemed to relax and Abby thought she even heard her sigh softly. Abby fought back the memories of how she once felt so safe in those arms.\n\n\"I just wanted to apologize to both of you. Samantha, I'm sorry our visit caused Jeremiah's life to be threatened. That was never my plan, and I'll be asking Daddy about it when I get home. I'll also be asking him about the Mendezs and about Old Man Wilson, as well. I just can't believe that Daddy was behind all this. But I promise you, Jeremiah, I will ask. I just can't believe Daddy is as evil as you think he is.\"\n\n\"Maybe not evil,\" Jeremiah snorted. \"Maybe he's just a damn carpetbagger! Feeding on the misfortune of others. Either way, I'm sure he'll someday regret things. Whether you believe it or not won't change anything, Abigail, but it could cost you dearly when his chickens come home to roost.\"\n\n\"Do you really think that Ambrose man would... surely he wouldn't... \"\n\n\"Yes, I believe he'll do exactly what he said he'll do. Ambrose is a good man, but he has a dark side, too. If the Swede was involved with what happened to Old Man Wilson and Ambrose's kin, then I got no doubt Ambrose will do just what he said.\n\n\"Abby, I don't hate you anymore, so I hope you don't get hurt. But I won't shed a tear if something bad happens to your father or Thomas. I know you don't want to believe it, but they took away all good things in my life. Thomas took away my wife and daughter and King Henry tried to take away my family's ranch. I hope they both meet the Swede in hell!\"\n\n\"I guess I can understand that. But for the way I treated you and for betraying you with Thomas, I am truly sorry. I know it don't mean much now but I doubt we'll ever see each other again, and I just wanted you to know. Hopefully, you'll ask Sarah to visit me someday.\"\n\n\"Not likely. As long as Thomas and your father are around, I doubt she'll ever visit.\"\n\nShe nodded and wiped away a tear.\n\n\"Goodbye, Jeremiah.\"\n\nShe turned and walked back into the hotel, knowing her future held several long hard discussions with her father. She also suspected she'd likely never see her ex-husband again.\n\n*****\n\nSt. Louis, Missouri\n\nSpring -- 1905\n\nAbigail Hawthorne slowly entered the cottage. It had been a long winter, but spring brought hope. She prayed it would bring a new life to her, as well.\n\nIt had been nineteen years since they'd moved to St. Louis.\n\nAfter they'd returned from Ashcroft, she'd confronted her father. He'd told her that he'd secretly given the Swede a stake of the expected profits. Henry said that the Swede was acting on his own when he threatened the Mendezs, and again when he tried to kill Jeremiah.\n\nHe swore to her that he hadn't instigated any if those things, but did confess to taking advantage of them after they'd occurred. Abby wasn't completely convinced, but soon after their talk several things happened that limited her options.\n\nFirst, Edmond Horace went back to Denver. A week later he left town. No one knew where he went other than his last statement of \"Back East, where things were more civilized.\"\n\nNext, Thomas gave up and sold the rest of the ranch to Ambrose. Thomas then left to go back to prospecting out West. Abby had been torn watching him leave again, knowing that with the ranch sold and everyone gone, her father was all she had left.\n\nShe'd heard from Thomas a couple of years later when she received a telegraph from him. It was from San Francisco, and stated that they found gold in the Klondike and he was sailing for Alaska. She never heard from him again.\n\nAmbrose Weitbrec had been a man of his word. It had taken a little longer than expected, but by the Spring of 1886, her father had sold off almost everything to cover his debts. He'd been able to sell the ranch for a bit of profit, even though one of the barns had burned to the ground just before Christmas. There had been just enough to buy this little cottage and a small store.\n\nHenry Thompson had left Colorado a very bitter man. He'd became even more depressed and despondent in 1891 when a major gold strike occurred in the Cripple Creek and Victor areas. To service those areas, the railroad built a spur that ran through their old valley. Ambrose Weitbrec and his investors were now even wealthier.\n\nThe past long years had been difficult, at times. Abby and Henry had worked the store until Henry had become too ill. She'd sold it in order to take care of him this last year. He'd died the previous December, and now she was alone. She was alone, but that was partially by her own choices.\n\nOver the years she'd had several suitors, but she never felt she could abandon her father. Those suitors she fancied the most seemed to be the same ones her father disliked the most.\n\nNow, in her fifties, she was alone.\n\nShe walked over to her bed and sat down. The stillness in the cottage was almost overwhelming. She reached over to a small ornate box that sat beside her bed. Opening it she retrieved two items that were very precious to her, a letter and a telegraph.\n\nThe first was a letter she'd received from Sarah four years before. The second was a telegram she'd received the day beore. It was in response to one she'd sent a month earlier.\n\nShe slowly unfolded the letter and began reading the words she'd already knew by heart.\n\nDearest Mother,\n\n \n\nI'm writing you to fulfill a promise I made to someone very dear to me. He feels it will do me and those I love some good to pen my thoughts and feelings and send them to you. He's said whether you ever get this letter or not, it will be healthy for me to write and say whatever I need to say. I won't tell you that I welcomed his request. \n\n \n\nI guess he knows what he's talking about since he's a doctor. I also know he loves me deeply and is only watching out for me. Truth be known, I would do almost anything for Dr. Harold Thornton, my husband.\n\n \n\nI reckon I should get right to the heart of the matter. Mother, I forgive you. I forgive you for not believing me and not protecting me, afterwards. I won't tell you I completely understand why you did what you did, but if it gives you any peace then you have my forgiveness.\n\n \n\nI hope you understand why I ran away. After I told you what Uncle Thomas did, none of you believed me. It was just like what happened to Papa. None of you believed him either. I felt like I was unprotected, so I needed to go find someone who would look after me. It was a miracle that I found Papa so quickly. It was an even bigger miracle that I found Harold a few years after Papa and Sam got married.\n\n \n\nI got a letter from Desiree a few months ago. She was the woman with the little girl you met at the Jenkin's place near Ashcroft. She said that she and everyone was doing fine and that she'd gotten married again. Little Moe was growing up into a real beauty and her Pappy was already threatening to skin some of the local boys if they got too handsy. Zeb and the Widow Brown still aren't married, but they're always together and will be the rest of their lives.\n\n \n\nIt was Desiree's letter that gave Harold the idea for me to write to you.\n\n \n\nAs I said before, I'm married now to a doctor. You have two grandchildren, a boy, John Ambrose, and a girl, Samantha Desiree. We moved down here to Santa Fe about ten years ago with Papa and Sam and my half-sisters.\n\n \n\nPapa is the president of one of Ambrose's banks. He and Sam have three pretty blonde-haired hellcats. Of course, that's not really true; all three of my half-sisters are pretty sweet most of the time but all of them got Sam's temper. It's funny to watch them around Papa. Each one of them thinks they have him wrapped around their little fingers. What's even funnier is when Sam shoos them away and sits in Papa's lap and let's them all know that Papa is hers and always will be. I swear, I laugh every time I see all three of them girls with their bottom lips out, pouting.\n\n \n\nI asked Papa once if he ever got tired of all the constant commotion of having four girls in the house. He just smiled and hugged me and said he'd missed five years of being with me, so this was heaven. \n\n \n\nHe also said he couldn't ask for more. He had a wife who loved him as much as he loved her, four wonderful daughters, and a grandson and a granddaughter who hung the moon. We have good homes, food on the table and we are in good health. We even had a doctor in the family. He said we are very blessed. I can't really argue with that.\n\n \n\nBefore I go, I need to let you know that you're welcome to visit us. I can't say Grandpa or Uncle Thomas will ever be welcome but you are. Even Sam said she'd behave if you came.\n\n \n\nShe's sure changed over the years. She's much happier now. She says it's because of Papa, and while I'm sure that's true, she absolutely dotes over her three girls.\n\n \n\nWe'll I need to end this letter now. I've honored my husband's wishes by writing this letter and I think I'll soon be working on another of his wishes. Harold has been hinting about us having another child!\n\n \n\n If you ever decide to come, just telegraph your arrival date and we'll pick you up at the station.\n\n \n\nBest wishes from your daughter,\n\n \n\nSarah\n\nAbby wiped away her tears, refolded the worn letter and placed it back in the box. Slowly she unfolded the telegram. She'd waited until after Henry had passed and the cottage taken care of before she'd responded. She'd reached out to Sarah, asking if the offer to visit was still good. The previous day, Sarah had responded.\n\n \n\nLooking forward to seeing you. Will meet. Grandkids excited.\n\nAbby didn't know how things would eventually turn out, but she knew she had to try. Even if she only got to see her grandchildren once it would be worth it. She'd bought a train ticket to Santa Fe and telegraphed back her arrival time within a day of receiving Sarah's response.\n\nIt was Spring. A time of new beginnings.\n\n*****",
        "Some Less Familiar \"Old West\" Terms:\n\nBarking Irons -- Pistols.\n\nCotton to -- take a liking to.\n\nHighfalutin -- Highbrow, fancy, self-important, pompous. The origin is the Dutch word verlooten, meaning stilted.\n\nMolly -- An effeminate young man.\n\nMouthpiece -- A lawyer.\n\nPacking Iron -- To carry a six-shooter.\n\nPlacer Mine -- Comes from the Spanish word for gravel beds. Prospectors would scoop some dirt and water into a pan, swish it to wash the gravel away, and look for gold in the bottom.\n\nSaphead -- Blockhead, a stupid fellow.\n\nSand -- Guts; courage; toughness.\n\nToff -- A dandy, a swell, one who dresses well. \"Toffer\" is the female version.\n\nTommyKnocker- Miners who have been trapped in cave-ins and pound on the rocks for rescue. It is believed that the ghosts of these miners go on knocking in the mine shafts long after the victims have died.\n\n \n"
    ],
    "authorname": "DFWBeast",
    "tags": [
        "betrayal",
        "cheating wife",
        "colorado",
        "gold rush",
        "historical romance",
        "wine and old lace story"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/fools-gold-claim-jumpers"
}