{
    "title": "Solitary Man",
    "pages": [
        "*Author's note: After writing Best Buy, in which an older woman with three little girls marries a younger man, the idea for an 'older man' story came to me in which he falls in love with a younger woman who has three little boys; three very little boys.\n\n*****\n\n\"So, Sarge. You gotta be glad you're not still a patrolman on a night like this.\"\n\n\"Don't forget I spent ten years as a beat cop and loved damn near every day of it. Hell, the only reason I even took the sergeant's test was because my ex-wife never stopped complaining about not having enough money.\"\n\n\"Yeah, but it's eight degrees out there and it's blowin' like hell. Don't tell me you miss that.\"\n\nSergeant Michael Simms grew up in Indianapolis and had been with the city's police department for 15 years. He'd enlisted in the Marine Corps right out of high school, did four years as a military police officer, then, the following year, went through the academy and joined the force back in his hometown.\n\nHe didn't get married until he was 31, and the marriage, if it could be called that, somehow lasted for nearly three years before he couldn't take anymore demands for a nicer house, a newer car, fancier clothes, more jewelry, and many other things a police officer could never afford. The only saving grace was never having had a child with her, so when the divorce was final, it was over and done, and he was free and clear.\n\nAs far as the weather was concerned, frigid temperatures and blowing snow were just part and parcel of life in Indianapolis. So while he wasn't wild about being outside when temperatures were in the single digits with wind chills well below zero, he'd gladly trade his desk and paperwork for a squad car any day. The only problem was, now that he was a sergeant, he no longer had the opportunity to ride around in one.\n\n\"I don't miss that kind of cold, but I do miss being out on the streets. That's what cops do, right? We help people. We keep 'em safe by making sure people obey the law. And when they don't, we take 'em off the streets. That's what I miss.\"\n\n\"Okay, Sarge. If you say so,\" the second-year officer replied as he tried to get warm after coming inside from the brutal cold. His tour was over, and he had the next 24 hours off in which to warm up, and with any luck, maybe even warm up the bed with his new wife when he got home.\n\n\"Give my best to Jessica, okay?\" the sergeant told him.\n\n\"Yeah, thanks, Sarge. I'll let her know. And I was serious about settin' you up with her aunt. I gotta tell ya, she's pretty damn hot for someone your... you know. Older than...\"\n\n\"Yes?\" Sergeant Simms said, enjoying watching the younger man twist in the wind.\n\n\"I uh, I'm just gonna go change out of my uniform now,\" the officer wisely said as his sergeant tried not to smile while remembering being in his place just a few minutes ago. Or at least that's how long it seemed to him at times like that.\n\nAs bad as his marriage had been, Mike Simms was well aware he'd loved being married. But being married to a woman who'd sucked the life out of him and bled him dry financially was something he didn't miss at all. So as much as he resented his ex-wife for becoming materialistic to the point of insanity, he still craved the love and security that came with a family. He had all kinds of opportunities to date but rarely took advantage of them.\n\nAnd for now, at least, that was just fine by him. He was currently very content being what Neil Diamond sang about all those years ago\u2014a solitary man.\n\nOn the way home that evening, he was listing to the 60s station on Sirius XM, and by pure coincidence, that very song started playing. When it did, Mike cranked it up and sang along. He was no Neil Diamond, but he could carry a tune, and no one else could hear him anyway, so he belted out the lyrics at the top of his lungs.\n\n\"Don't know that I will, but until I can find me. A girl that'll stay and won't play games behind me. I'll be what I am\u2014a solitary man. A solitary man, uhmmm, uhmmm.\"\n\nBut when he walked into his apartment with no wife, no kids, no dog, and only a stray cat he'd taken in to greet him, the solitary man wasn't quite so thrilled about his solitude. Even though he lived in apartment building, it was so quiet he could hear a pin drop, and until he turned on the TV, the silence was nearly deafening. He knew part of the reason was the thick blanket of snow which not only muffled sounds but caused people to be more subdued than in warmer places like Miami or Los Angeles.\n\nHe was off the following day, too, so he poured himself two fingers of single-malt then coaxed the cat up onto his lap and took a sip as he watched what had to be the 40th season of Wheel of Fortune. As he did, he found himself thinking Vanna White still looked awfully good for a woman her age.\n\n\"For her age. Ha! Listen to yourself, Simms,\" he said out loud as he shook his head and drained the glass. \"That's you now. The guy who's not too bad\u2014for his age.\"\n\n\"Guess it's just me and you, little girl,\" he told the cat as he thought about pouring himself another even though he knew he wouldn't. \n\nHe'd had her for two months and still hadn't given her a name. But when she curled up around his neck and started purring, a name didn't seem all that important. And while the love of a cat wasn't much, it beat the hell out of the loneliness of the years since his divorce.\n\nMike Simms really was a decent-looking guy, and just 'for his age', with a decent job, and the only thing keeping him from finding someone new was his deep-seated notion of 'once burned, twice shy'. Never in his wildest dreams could he have imagined the woman he'd married changing so dramatically in such a short amount of time. But change she had, and he wasn't quite ready to jump back into the fryin' pan after escaping the fire.\n\nSo he saved every dollar he could while he tried to get his head back into some kind of place where he could find a more appreciative, more family-oriented woman.\n\n\"Okay, let's see what else is on TV tonight shall we, Cat With No Name?\" he said once the Wheel and Jeopardy were over.\n\nOne of the few things he'd retained after the divorce was a decent indoor exercise bike, and after a cup of coffee the following morning, Mike got on it and road it hard to nowhere for about 45 minutes. It was way too cold to go outside and run, and even going to the gym in that kind of weather held no appeal. \n\nThe bike made it possible for him to wear himself out then enjoy the mild high that came from the workout for a couple of hours. After that, on days he wasn't working, he was on his own.\n\nAfter a long, hot shower he felt pretty good and decided to do something he only did once or twice a month. He decided to head up to the McDonalds on 38th street and grab an egg McMuffin or two and another cup of coffee. As much as he hated to admit it, he loved the greasy little 'sliders' as he and buddies called burgers on active duty. A McMuffin wasn't technically a burger, but it was close enough for government work, another favorite saying he'd picked up in the Corps.\n\n*****\n\nOne month earlier in Columbus, Ohio\n\n\"I don't understand,\" she told him as she fought off the urge to cry.\n\n\"Jesus. Are you deaf? I said...I can't do this!\" her husband of less than a year told her.\n\n\"But...I...I gave up everything for you. I dropped out of college, I alienated my family, and I moved away from Indianapolis to start a new life here in Columbus with you. And I've already lost most of the weight I gained during the pregnancy. I promise I'll lose the rest if you'll just give me a little more time,\" she told him, more pleading than telling.\n\nShe seemed to believe that if she only pleaded hard enough or persuasively enough, he'd see her point of view and change his mind. And just the thought of the word 'change' made ever even more aware that all three of the triplets needing changing. They'd been crying for the last twenty minutes, but her husband told her 'we need to talk' just after the first one started, and he still wasn't done.\n\nSo she ignored her children's helpless pleas and listened to the man she loved, and whom she believed loved her, tell her this wasn't what he'd signed up for. Initially confused, his beautiful, young, 23-year old wife, Brandi London, didn't understand what he was saying. So he spelled it out for her.\n\n\"I'm 25 years old, for Christ's sake!\" he angrily told her. \"I married you because you were hot as hell and the best lay I've ever had. But I did NOT marry you to end up with three screaming kids a year later and fat-ass wife I don't even want to look at!\"\n\nHe paused for effect, pointed right at her, then hissed, \"NOW do you understand?\"\n\nHis voice was dripping with venom, and Brandi finally understood. And yet, as the mother of three baby boys, she was fully aware she couldn't possibly support them on her own. Making matters worse, her father had made it clear when she chose her husband over her parents' strong objections that she would be on her own if he ever left her. \n\nNow, just over a year later, she could almost recall his words verbatim when she told him she was dropping out of college and leaving Indianapolis with her boyfriend; a guy she'd only known for a little over three months.\n\n\"We will always love you, Brandi, but we won't blindly support you. If you leave with this...bum...then you are responsible for whatever happens. And knowing this guy like I do, there will be consequences, and they won't be pleasant.\"\n\nHeartbroken, she'd pleaded her case then, too.\n\n\"Daddy, that's not fair. David is a really great guy, and he loves me. And...I love him.\"\n\n\"That's fine, honey. But I'm telling you, this David guy is a snake. He has no core principles. He has no...moral fiber. He's lazy, arrogant, and self-centered. Your mother and I aren't wealthy, but we've always provided for you. But if you run off with this...this jerk...I promise you, you'll end up supporting him. And if he doesn't cheat on you within the first year, I'll be shocked.\"\n\nHis tone softened before he finished warning his daughter.\n\n\"Honey, listen. You're dropping out of college less than a year before you get your degree, and for what? For this piece of sh...work? Brandi, please. Just listen to me and think this through. Please?\"\n\nBut she hadn't listened. She found David to be unbelievably handsome and dangerous and she was head over heels in love with him. Going against everything she'd ever been taught, she left home and started a new life with her boyfriend in Ohio. They married in front of a justice of the peace a month later, and within three months, Brandi was shocked to learn she was pregnant. \n\nDavid wasn't happy at all about having a child so soon and blamed her for the 'mistake' even though she was on the pill and never missed. But when a sonogram later showed she was carrying not one, not two, but...three babies, he stormed out of the exam room leaving Brandi and her doctor wondering what that was all about.\n\nA few minutes later, she found him out in their car, angry and on the verge of exploding. He vented all the way home then later apologized, but things were never the same after that. And when Brandi gained nearly 40 pounds carrying the triplets, he lost all interest in her physically and started sleeping on the couch. Not long after that he started not coming home all night and was unwilling to say where he'd been when he'd finally roll in late the following morning.\n\nToday, evidently, David London had reached his breaking point. So as the boys cried, their mother did, too, while their father grabbed a couple of ratty suitcases, packed them up, and walked out of their lives for good. \n\nAdding insult to injury, the last thing David said to her was, \"If you think I'm paying child support for those three screaming kids, you're out of your fat, fucking mind! You can't squeeze blood out of a turnip, and you'll never get a dime out of me. You fucked my life up big time by getting pregnant, so now you can go fuck yourself!\"\n\nHe slammed the door on his way out, leaving Brandi too stunned and too hurt to think. At some point instinct took over as she somehow got up and changed their diapers, fed them lunch, then changed them again.Two hours later she had no recollection of having done any of it as she'd cried herself the entire time. \n\nAll she had left was pain, sorrow, and a crushing sense of numbness as she sat all alone in the tiny apartment unable to do anything but cry. Brandi didn't know a single person well enough to ask for help, but she knew she needed it, and a whole lot of it, and in a great big hurry.\n\nOver the next few days, she managed to get signed up for every program she could find, and as the benefits trickled in, the help she received allowed her to feed her children and get basic medical care, but she would soon be unable to afford the apartment they lived in which was little more than a dump with walls.\n\nIt was nearly a month to the day after her husband walked out when the only remaining option became clear. Knowing her cell phone service would be discontinued at any time, she swallowed her pride and called home. \n\nHer hands were shaking, and she was trying hard not to cry when she heard her father's voice.\n\n\"Hello?\"\n\n\"Daddy? It's me,\" she said before she began to sob.\n\n\"Brandi? Are you okay?\" her father, who hadn't heard from her since the day she walked out, was suddenly worried sick.\n\n\"No. I'm not okay,\" she said, choking out one word at a time.\n\nHer father's resolve to never give in melted away in an instant when he learned he was a grandfather three times over.\n\n\"Is that our daughter?\" his wife anxiously asked when she saw the reaction on her husband's face. \"Is she okay?\"\n\nHe put the phone on speaker and let Brandi talk. She began by tearfully apologizing and saying how right her father had been as she continued to sob out of desperation and frustration.\n\n\"Just come home, honey,\" her mother said.\n\n\"Daddy? Can I?\" his daughter...pleaded.\n\n\"Yes,\" he said as he fought off tears of his own. \"Yes. Come home. Or if you can't get home, we'll come and get you.\"\n\nThey'd taken Brandi's car to Ohio, and it was the one thing David hadn't taken when he left. Somehow they'd scraped together enough money to buy three car seats that they'd wedged into the backseat so tightly they appeared to be connected.\n\nHer parents wired their daughter enough money to get her and the boys home, and, with her help, also accessed her online account to catch up on her cell phone bill so they wouldn't lose touch on the way. It was a three-hour, 175-mile drive home, and once Brandi had the money her parents sent her, she could head out as everything they owned fit into her car.\n\nThe night before Brandi intended to leave it had snowed heavily all across a huge swatch of the country, so until road crews cleared the highway, there was no way she was going anywhere. And because she had just enough food for the boys to last another day, any delay was a real concern. But because snow was a regular event during winter, it was around 5am when a snow plow went flying by which meant Brandi could load up the triplets and head home; a word that had never sounded so sweet to her in all her life.\n\nPresent Day\n\nBy 7am, they were on the road. and for once the boys were all tired at the same time. They had dry diapers and full tummies, and their mother's hope was they might sleep all the way back to Indianapolis where they'd meet their grandparents for the first time.\n\nBrandi was trying to remember a happier moment than when she saw the city limits sign for the place where she'd grown up just before 10 o'clock that morning. In just a few more minutes she'd be back home where it was warm and where there was food and hot water, and above all else, unconditional love, something she'd never again take for granted.\n\nShe turned onto 38th street knowing it was only another mile to the final turn before arriving at her parents' house, and she was being particularly careful with the traffic due to the heavy snow and the possibility of black ice on the roads. \n\nShe was almost at a stoplight not far from a McDonalds she'd been to many times when one of the boys started crying. She didn't turn around, but it did distract her. Even so, that wasn't the cause of the accident. A teenage boy with two friends was driving and texting while the music was blaring. By the time one of them screamed, it was too late.\n\n\"Oh, no,\" Mike Simms said. He'd just pulled into the parking lot when he heard the sickening crunch and saw a car being pushed into oncoming traffic. \n\nMiraculously, no one else hit it as he reached for the police radio in his own personal vehicle and called it in. \n\nMike never went anywhere without his badge or his weapon, and after finishing the call, he jumped out, threw on his coat, then began stopping traffic by holding up his badge.\n\nHe carefully made his way into the middle of the street as the sounds of approaching sirens grew louder. The woman in the driver's seat of the vehicle that had been hit broadside was unconscious and slumped over the wheel. That wasn't surprising considering her door was badly crushed in. What he saw in the backseat, however, shocked the veteran police officer.\n\n\"You've gotta be kidding me,\" he said as the cries from the three identical, nearly bald babies in the back seat hit him all at once.\n\nHe was pretty sure none of them had been hurt, but it was obvious the impact had scared them pretty badly. That meant his first priority had to be the woman in front who was almost certainly their mother. \n\nAn EMT vehicle arrived first, and Mike directed them to the best place to park while a squad car pulled up.\n\n\"Traffic!\" Mike yelled as he pointed to one uniformed officer and then his partner. \"You\u2014east bound. And you\u2014west bound!\"\n\n\"Roger that, Sarge!\" they called back as they began directing the flow of traffic when Mike and the EMTs assessed the scene.\n\n\"Barring internal injury, she doesn't look badly hurt,\" the EMT after opening the driver's side door and assessing her head and neck before trying to move her. He, too, was blown away by the three little kids who were all dressed in blue, and therefore probably boys, in the back who were wedged in like sardines.\n\n\"What do you think, Mike? Triplets?\" the EMT asked as he unbuckled the woman's seat belt.\n\n\"Yeah. What else could it be?\" Mike replied as he saw them wailing away in the back.\n\nHe hollered at one of the uniforms and told them to get social services out here ASAP. Until the mother regained consciousness or next of kin could be notified, no one else could take the children unless their lives were in danger. They weren't, so a social worker had to be summoned.\n\n\"Let them know there are THREE small boys!\" he also hollered as he held up three fingers for good measure.\n\n\"Got it!\" the officer told him before calling it in.\n\nDetectives arrived to assess the accident scene just as the mother was being moved to the EMT vehicle on a gurney. Mike looked in the woman's purse and saw an Ohio driver's license and learned her name was Brandi London and that she was 23 years old. He also found her cell phone, but it was locked making it impossible to look for anyone to call.\n\nThe last thing he remembered the EMT saying was that the adult female had a distended abdomen, a telltale sign of internal bleeding. He hung around until he knew the little boys were safe and warm then walked back to McDonalds. But as he stood in line to order his food, he found himself unable to let go of what he'd just seen, so he got his order to go and headed to the hospital to check on Ms. London.\n\nHe no sooner walked in when the charge nurse at the front desk saw him.\n\n\"Michael! Long time no see,\" she told him, a bright smile on her face.\n\n\"Ruth. How you been?\" he asked, smiling back.",
        "\"Good. You?\"\n\n\"Same old same old,\" he told her.\n\n\"You need to find yourself someone...not so 'same old',\" she politely advised before asking what she could do for him.\n\nShe thought about asking him to 'do' her but knew that was unacceptable. Besides, she'd hinted around enough in the past to know that if had any interest in her at all, he'd have asked her out by now. He hadn't, so the proverbial handwriting was on the wall where any future relationship with him was concerned.\n\n\"I'm looking for the young mom brought in a few minutes ago,\" he told her.\n\n\"Oh. Right. The London girl. From Ohio,\" Ruth quipped. \"Oh, I heard she has triplets.\"\n\nMike dutifully smiled at her humor then said he believed she was correct about the three little boys. Ruth, in turn, let him know his patient was being examined. She also promised she'd let him know as soon as the woman could have visitors.\n\nHe thanked her then sat down and finished the rest of his half-eaten egg McMuffin and the black coffee he'd ordered with it. An hour passed, and Mike went back to the desk to find out what was going on.\n\n\"I understand there's some internal bleeding, and I believe she has a serious concussion. They've taken her to an OR, so this could be a few more hours,\" Ruth told him, knowing she wasn't supposed to. But she'd had a thing for this particular police officer for quite some time now, and she knew he'd never let on that she'd shared something confidential with him.\n\nAnother two hours dragged on, and as Mike got up to ask again, Ruth informed him know she was out of surgery.\n\n\"But she's not awake yet, and only immediate family can go in. For now.\"\n\n\"Can I at least just look in and see how she'd doing?\" Mike asked.\n\n\"I am so gonna get fired,\" Ruth said as he smiled at her. \"Okay. But please, please don't go inside the room.\"\n\n\"You're a doll, Ruth,\" he told her.\n\n\"Yeah. Lucky me. A doll. Just like a teddy bear everyone wants to hug and be friends with but nothing more,\" she said to herself as Mike turned and headed down the hall.\n\nUnlike in the movies, where the patient almost always had a bandage wrapped around their head, Brandi didn't, in spite of the severe concussion. In fact, there were no visible signs that anything was wrong with her.\n\nHe stood there for a minute or so before curiosity got the best of him. He checked to make sure no one was looking then Mike slowly walked toward the bed where she was laying as monitors beeped around it.\n\nFor the first time he realized she was a very pretty young woman. She could possibly be carrying a bit of extra weight, but Mike correctly assumed that was likely due to having recently carried around three tiny lives inside of her. \n\nHe'd seen her earlier but hadn't had time to look at her. For some reason, he did look at her hands, and one of the things he noticed was that there was no wedding ring. Were that true, it meant she might well be raising those three boys on her own. \n\nHe knew that raising one was tough. Two would be a huge challenge. But three? That was more than Mike could imagine anyone doing by themself. \n\nBut as he stood there looking at her, he had a feeling of some kind that, with the right woman, raising three young boys might not only not be so bad, it could quite possibly be a pretty great thing. For some reason, an old TV show called My Three Sons with Fred McMurray, who portrayed a single father raising three sons without their mother, came to mind. He also thought about things like teaching them to ride bikes, play catch, and everything his dad had taught him to do, and those thoughts made him smile.\n\nHis thoughts were interrupted when he heard Ruth's voice from just behind him.\n\n\"Now how did I know I'd find you in here?\" she asked very quietly, a smile on her face.\n\n\"Sorry. I'll leave,\" Mike whispered to her immediately.\n\n\"It's okay. I knew you'd go in, but I knew it was only because you were concerned. And that's just one of the many things I admire about you, Sergeant Simms.\"\n\nMike backed up a step, put his hand on Ruth's shoulder then said, \"I don't know why I'm so concerned. I don't even know this woman. But those three boys in the back not being with their mother just keeps eating at me, you know?\"\n\nRuth put her arm around his waist, fully aware it was the closest she'd ever get to holding him, and replied.\n\n\"My heart goes out to all four of them, and anyone else who loves them and may not know where they are. Did you find any family to notify yet?\"\n\n\"Not that I know of. I asked one of the detectives to call me as soon as he finds anything out.\"\n\n\"Well, I suppose the good news is she should make a full, speedy recovery. Oh. I heard the driver of the other car was texting.\"\n\n\"Now how did you hear that when I haven't even heard that yet?\" Mike asked with a smile.\n\n\"Oh, I have my sources,\" she said, looking up at him and smiling back.\n\n\"You're the best, Ruth,\" he told her as he lowered his arm.\n\n\"We really shouldn't be in here,\" she reminded him.\n\n\"Right. I just had to check on her.\"\n\nAs they walked out, Mike asked Ruth if she'd call him once the young woman woke up.\n\n\"Of course. Your number's on my speed dial,\" she said as though she was teasing. But the truth was he was indeed in her list and fairly close to the top. After today, though, that might just change.\n\n\"Thanks, Ruth. I'm off until tomorrow morning so call me anytime.\"\n\nRuth sighed knowing he meant that only for official business, but she forced another smile and promised she would.\n\nWhen Mike got home, he called the precinct to see if there was any news and ended up speaking to the detective who'd processed the scene. As they spoke, the detective confirmed what Ruth told him about the other driver texting.\n\n\"Young kid. Texting about some party this weekend. He wasn't hurt, but he's pretty shaken up, and his parents are mad as hell. I know I wouldn't want to be him right now.\"\n\n\"Was he insured?\"\n\n\"Oh, yeah. Good thing, too. I heard the mother had to have surgery, so their insurance is gonna be shelling out some dough.\"\n\n\"Yeah. I heard that, too,\" Mike said, not wanting to admit he'd been to the hospital.\n\n\"As far as the kids, child services has them. We haven't had any luck tracking down a family member yet, but we're working on it. We did find out she's married to a David London in Columbus, Ohio, but we haven't been able to get ahold of him. But I'm sure the Columbus PD will locate him soon.\"\n\n\"Is he her husband?\" Mike asked, wondering why he cared.\n\n\"Yeah. But my 'spider sense' tells me they're separated or maybe divorced. I could be wrong, but that's where my money is. Anyway, I'll let you know as soon as I hear anything, okay?\"\n\n\"Yeah, thanks, buddy,\" Mike told him before hanging up.\n\nHe was just finishing dinner when the phone rang. He answered it and recognized Ruth's voice immediately.\n\n\"Hi, Mike. I just wanted to let you know your mystery woman woke up. I'm getting ready to go home, but I needed to make sure you knew before I left.\"\n\n\"Ruth. You're amazing,\" he told her as he stood up and went to look for his keys.\n\n\"Yeah. That's me,\" she said rather wistfully knowing that, too, was just Mike being the good, decent guy he was.\n\n\"Thanks for callin', Ruth. And you have a nice night, okay?\"\n\n\"You, too, Mike,\" she said, letting go of her fantasy yet again.\n\nMike was back at the hospital by seven o'clock, and after checking in at the front desk with a nurse he hadn't seen before, he went back to the woman's room again. He stopped outside, took a deep breath, then poked his head around the door jamb.\n\nHe waited until she looked over at him before asking if he could come in. The woman only nodded, but that told Mike it was okay.\n\n\"Hey,\" he said quietly. \"I uh, I'm Mike Simms. I'm a police officer. I was...\"\n\n\"Oh, okay,\" Brandi said very quietly. Her head was throbbing in spite of the pain medication. She didn't recognize the police officer's name, but a doctor had explained what he'd learned about the accident when she woke up. He'd just walked out leaving Brandi to start recuperating.\n\n\"Thank you,\" she said very weakly. \"Have you heard anything about my boys?\"\n\n\"They're fine,\" he assured her. \"And as soon as you feel up to it, they'll bring them over for a visit.\"\n\n\"I feel lost without them. I'm just so thankful they're all okay.\"\n\n\"Not a scratch on any of them,\" Mike let her know. \"They're triplets, right?\"\n\nBrandi tried to smile but gave it up.\n\n\"Yes. They're my whole world.\"\n\n\"Have you asked anyone to call your husband?\" Mike asked innocently.\n\nBrandi looked away and said without bitterness, \"He's the last person I'd call.\"\n\nFeeling a little uncomfortable, Mike asked about parents or siblings.\n\n\"I think they called my mom and dad a few minutes ago,\" Brandi told him. \"I haven't seen them for over a year.\"\n\nNow very uncomfortable, Mike asked if there was anything he could get her or do for her.\n\n\"Do you have a spare head?\" she asked, trying to kid around, but the lame attempt at joking only caused her head to throb even more.\n\nMike smiled and said, \"I'm glad you still have your sense of humor. But no. The only head I have is this one, and I'm afraid it would be a serious downgrade from the one currently attached to your shoulders.\"\n\n\"I'm a little loopy from the pain medication, but your head looks very nice to me. Handsome even.\"\n\nMike smiled then thanked her.\n\n\"Coming from such an attractive young woman, that's very nice of you to say.\"\n\n\"You seem nice, too,\" she replied in a quiet, frail-sounding voice.\n\n\"I have my moments,\" Mike told her, still smiling.\n\n\"My husband is very handsome, too, but he's not nice. At all.\"\n\n\"Um, I...I should probably let you get some rest.\"\n\n\"What did you say your name was?\" Brandi asked.\n\n\"Mike. Simms. And you're Brandi, right?\"\n\n\"Yes. Brandi London. \"But when I get divorced it'll be Cromwell, again. But I suppose my boys will still be Londons.\"\n\nMike knew she was tired and groggy, so he excused himself and went to leave. But as he turned, Brandi raised her right hand and touched his arm.\n\n\"Could you maybe stay a little longer?\" she asked, trying to smile. \"Please?\"\n\n\"Sure. Yeah. I can do that,\" he replied, smiling back.\n\n\"Is the other person okay?\" she suddenly wanted to know.\n\nMike filled her in on everything he knew and assured her the accident wasn't her fault.\n\n\"Thank God. If I'd hurt someone...or if my boys had been hurt...\"\n\n\"No. You didn't, and they're fine. And they're being well cared for, okay?\"\n\n\"You really are nice, Mike,\" she told him.\n\nBefore he could reply, they both heard voices, the first one being a nurse.\n\n\"She's right in here,\" the nurse said. \"She's had surgery on her abdomen so be careful, okay?\"\n\nThey both heard a 'thank you', and Brandi tried to sit up when she recognized her father's voice.\n\n\"Don't,\" Mike said, gently pushing on her shoulder so she couldn't.\n\n\"Brandi. Honey!\" a man said as Mike stepped aside to make room.\n\n\"Daddy. Hi,\" she said, as tears welled up in her eyes.\n\nHer father tried to embrace her as gently as he could as he fought off tears of his own.\n\n\"Hi, sweetie!\" her mother said from the other side of the bed.\n\n\"Mom!\" her daughter said before getting another gentle hug.\n\n\"Are you okay? Do you need anything?\" her mother asked as Mike silently looked on.\n\n\"No. I'm fine,\" she assured them.\n\nThere was a quiet moment before Brandi looked at her father and began to cry.\n\n\"I'm...so...sorry...Daddy,\" she choked out one word at a time.\n\n\"No. It's okay, honey. You're home now, all right?\"\n\n\"You were right. About everything. And I was so, so wrong!\"\n\n\"All that matters is that you're okay. We'll figure everything else out,\" her father told her.\n\nAnd then both of the Cromwells realized they weren't alone.\n\n\"Hi,\" Mike said, not sure how they might react after they looked at him.\n\n\"Hello. I'm...Brandi's father, Tom Cromwell. And this is my wife, Lisa.\"\n\n\"Mike Simms,\" he told them.\n\n\"He's the police officer who saved me. And the boys,\" Brandi said, the pain killers overpowering her need to continue crying.\n\n\"God bless you!\" Tom said as he hugged the man he'd never seen before.\n\nBefore Mike could explain how little he'd done, Lisa came around the bed and hugged him, too. She also kissed him on the cheek and thanked him for saving their daughter and grandchildren.\n\n\"No, I...I really didn't do anything. I only...\"\n\n\"I admire modesty, officer, but you don't have to hold back. My wife and I can't thank you enough.\"\n\nRather than force the whole truth on them right then Mike quietly accepted their thanks then tried to say he should be going again.\n\n\"You're more than welcome to stay,\" Lisa told him. \n\n\"Yes. Please stay, Mike,\" Brandi said as she looked at him between her mother and her father.\n\n\"Okay, but just a few more minutes, all right?\"\n\nTom asked Mike to fill him in on the accident, the boys, and everything he knew, and the police sergeant was happy to do so.\n\n\"My mom and dad have never seen their grandsons,\" Brandi told Mike when he finished explaining what he knew.\n\nHe tried not to act surprised, but after listening to her and her father talk, he had a better understanding of what was going on.\n\n\"Brandi, I take no comfort in being right. In fact, I've felt awful about being so...pigheaded when you left. You were my daughter and I...\"\n\n\"Daddy, no. I was the one being pigheaded. I thought I was so in love and that I'd be the happiest girl on earth. But...well, here I am in the hospital and the mother of three baby boys at the age of 23. So all of this is on me. All of it.\"\n\nTom was going to tell his daughter that wasn't true when all of them heard more voices.\n\n\"Is the mother in here?\" a female voice asked.\n\nThe same nurse Mike and Brandi heard earlier said, \"Yes. Her parents are in there with her, too, along with the police officer who saved their lives.\"\n\nThe woman stepped in and said, \"Excuse me. Brandi London?\"\n\n\"Yes?\" Brandi answered, fearing something awful.\n\nShe stepped aside and three younger women walked in one at a time, each holding one of her boys.\n\nBrandi began crying again almost immediately as they handed one to her.\n\n\"Liam! Hi there, sweet boy!\" she said as she held him.\n\nThe second woman handed one to Lisa who looked at her daughter.\n\n\"That's Noah, Mom.\"\n\n\"And who's this little man?\" Tom asked as he took the third baby.\n\n\"His name is Elijah, Daddy.\"\n\n\"Elijah. Hi there, buddy! I'm your grandpa, but don't call me that, okay? We'll come up with something befitting a man of my youth before long.\"\n\nTom and Lisa were both just 47, so being grandparents was going to take some getting used to.\n\nThe first woman who came in said, \"I'll be just outside. You'll be able to spend one hour with your sons, and once we know more about your condition tomorrow we'll decide when to return them to you.\"\n\nEveryone understood she wasn't asking their permission, so no one complained.\n\nMike was about to excuse himself yet again when Brandi winced.\n\n\"What's wrong, honey?\" her mother asked.\n\n\"It hurts. Where they operated on me,\" she said.\n\nLiam was laying right on her wound, and Mike reached over and said, \"Here. Let me help.\"\n\n\"Thank you,\" Brandi told him. \"I want to hold them all so bad, but I can't.\"\n\n\"You'll have plenty of time to hold them,\" her father assured her. \"For now, let your mother and me get acquainted with our grandsons.\"\n\nTom was already making goo-goo eyes and had Elijah laughing, his two tiny, little front teeth showing when he smiled.\n\n\"They're so adorable!\" Lisa said as she hugged Noah.\n\nMike wasn't having as much luck with Liam whose lower lip curled up as tears filled his eyes.\n\n\"I think this little guy just realized he got the ugly mug in the room,\" Mike said as the first soft cry came from the little boy in his arms.\n\n\"Oh, nonsense!\" Lisa told him. \"You're a very handsome young man.\"\n\n\"Handsome and young. I...I like that,\" Mike joked.\n\n\"I told him that, too, Mom,\" Brandi said as she eked out a smile.\n\nWhen Mike tried smiling, Liam stopped crying so Mike started doing 'peekaboo' and when Liam laughed he said, \"Hey, look! I'm a natural.\"\n\nTom looked over and laughed, too.\n\n\"You have any kids, Mike?\" he asked as he gently bounced Elijah.\n\n\"Oh, no. Just a...bitter ex-wife,\" he said before realizing that might be a sensitive issue.\n\nBut Brandi only smiled and said, \"I bet your ex didn't leave you with three little boys because they were...harshing his mellow.\"\n\nMike saw her smiling, but he knew she was hurting.\n\n\"No. I can't say that. I thought she was selfish, but after hearing you say what you just said, I guess it proves the old saying about everything being relative.\"\n\n\"Oh, lemme tell you, Mike, he's a real peach,\" Tom said bitterly before apologizing to his daughter.\n\n\"It's okay, Dad. Again, you saw what I couldn't so please don't apologize.\"\n\nThere was no one to hand Liam to so Mike stood there and held him as the four of them got acquainted.\n\n\"A Marine, huh? Semper fi,\" Tom said when he mentioned having been an MP while on active duty.\n\n\"Were you in the Corps?\" Mike asked.\n\n\"Me? Nah. I never served. But I had an uncle who was a Marine back in the 60s. Did a tour in Vietnam. I respect those who've served, and I gotta tell you we love our men...and women...in blue, too. And even more so today.\"\n\n\"That's always nice to hear,\" Mike replied sincerely. Not wanting to even touch on anything political in terms of a national attitude about police officers, he left it that.\n\n\"Mike, you simply have to join us for dinner some night very soon,\" Lisa told him during a short moment of quiet.\n\n\"Oh, I don't want to horn in on your family time.\"\n\n\"Nonsense!\" Tom said. \"We insist. In fact, let me give you our number.\"\n\nMike held 'his' boy with one arm and reached for his phone with the other. He pushed a couple of buttons then said, \"Okay. Let 'er rip.\"\n\n\"Daddy? Could you give him mine, too, please?\" Brandi asked.\n\n\"Oh, sure thing, honey.\"\n\nTom shared her number, too, and just seconds later the social worker came back in and said, \"Ten more minutes, folks.\"\n\nBrandi asked Mike and her parents to let her kiss her babies before they left so each of them dangled one son in front of their mother who held their sides, kissed them, then told each one that she loved them.\n\nWhen the four women came back to get them, all three of the boys started crying, and Brandi felt like her heart would break in spite of the pain medication.\n\nHer mom bent over and hugged her and told her the boys would be back the next day.\n\nThe social worker confirmed that and asked if 9am was acceptable.\n\n\"Yes, that sounds fine, and we should all get going,\" her father said for her after Brandi nodded her approval.\n\n\"Right. And I've definitely overstayed my welcome,\" Mike chimed in saying.\n\n\"No. No, you didn't. I'm really glad you stayed, Mike,\" Brandi told him as she reached out a hand.\n\nMike took it, put his other on top of it then said, \"Get some rest, okay?\"\n\n\"I will,\" she promised. \"But you have to promise you'll come visit us.\"\n\nHe looked at her dad then her mom who both visually indicated they agreed with their daughter, so he promised he would.\n\n\"Thank you again, Mike,\" Brandi told him. \"If I could move, I'd kiss you.\"\n\n\"Well, I can do that for you,\" Lisa said as she pecked the tall, good-looking police officer on the cheek again.\n\n\"Okay, okay. Enough of that,\" her husband said, causing his daughter to smile.\n\n\"That's not quite what I had in mind, Mom,\" Brandi said, now feeling the effects of the last time she pushed the button for more of whatever it released. Her mom laughed politely and told her it was her pleasure to 'help out'.\n\nTom then shook Mike's hand heartily and thanked him again, too.\n\n\"My pleasure, and it was a pleasure meeting you. All six of you.\"",
        "Everyone laughed as Mike waved when he left the room. As he walked away he realized he hadn't felt that good in a very long time; so good, in fact, he was whistling as he walked by the nurse's station.\n\nAs he got in his car he said to himself, \"If only she wasn't so damned young.\"\n\nBut he was 37 and she was 23, and that was wasn't going to change.\n\nA week or so later, Mike got a call one day while he was at work. He was too busy to answer it and let it go to voicemail, having no idea who was calling. Later that evening he listened to it and smiled.\n\n\"Mike. Tom Cromwell. Brandi's father. Listen, Lisa and I were hoping we could get you to join us for dinner this weekend. If you're interested, and Brandi says 'you better be', give me a call back at this number so we can agree on which evening works best for you, okay? Brandi's back home and so are the boys. They're all doing well, so thanks again for everything. Okay, um...take care, and...call us. Please.\"\n\nMike hadn't forgotten about them, he just didn't feel it was his place to contact them again. He'd thought about Brandi and those three little boys many, many times, so he was happy to call back and see how they were doing. \n\nThey agreed on Saturday evening at 7pm or 6:30 if Mike wanted a cocktail before dinner. He enjoyed a drink every now and then, and this was a special celebration of sorts, so a drink to toast the good fortune of those involved in the accident seemed appropriate.\n\nWhile Mike was nowhere near rich or even well off, being a single sergeant meant he had a rather large amount of discretionary income, nearly all of which went into the bank. Since he had Saturday off, he went to a toy store and tried to find something for boys under a year old. He didn't know their exact age, but he knew he close enough.\n\nAfter getting some help from an attractive, younger associate, he left the store with three gifts. The first was called a \"Peek-a-Boo Touch Puzzle\", an animal puzzle with five large pieces that fit into the five cutout shapes on the board. The second was a set of velcro blocks that made stacking easy for a child that hadn't yet developed any real dexterity. Lastly was something called a 'pound and press bench' with a little hammer. He had no idea how much noise their grandparents could tolerate, but he took a chance and bought it anyway knowing little boys would love hammering away at it.\n\nHe decided he'd bring a bottle of wine even though Tom and Lisa said there was no need to bring anything. And that left him wondering whether or not it would be appropriate to bring something for Brandi. Nothing romantic, of course, but something...thoughtful.\n\nIt was times like this he wished he had a sister he could call for advice, but again, he asked for help in a store, and after explaining who it was for, Mike walked out with a very nice-looking, fairly expensive, cashmere scarf. It was still what his fellow officers called 'butt-ass cold', and a scarf couldn't ever be wrong in a city like Indianapolis. Or so he hoped. \n\nNothing was wrapped, and he also hoped that would make the gifts seem a little less formal. The last thing he needed was to have anyone thinking he was some kind of 'weirdo', another thing he could have asked a sister about, if he had one. It wasn't that he was socially awkward, it was more that he had heart of gold, a secret he didn't let many people in on. In uniform he came across as the consummate professional, but deep down he was really a rather quiet man, his gregarious side shown at work reserved for the job.\n\nMike normally wore his hair with a little bit of product in it to make it look shorter at work, but when he blow dried and left it that way, it had a softer look to it that women had called 'sexy' more than a few times over the years. He had a masculine-looking face, but not the stereotypical square jaw. As much as he sometimes hated admitting it, he still looked younger than his 37 years, and most of that was due to having something else several women had pointed out over the years\u2014really great skin.\n\nThat, plus his bright, baby-blue eyes and great smile, the courtesy of 18 months in braces during his freshman and sophomore years of high school, meant he wasn't a bad looking guy at all. And being a shade over six-feet tall and around 175 pounds gave him a trim, athletic look even though he wasn't a 'gym rat' by any means. \n\nAnother comment he'd heard a few times was how he looked more 'preppy' than police officer or Marine, something he wasn't quite sure how to take. But he always took comments like that in stride knowing they were meant as compliments. Still, it would have been nice to hear something like 'ruggedly handsome' every once in awhile, but...c'est la vie, no?\n\nMike put the gifts in a large, green canvas bag he'd had since he was on active duty, and never thought twice about showing up toting something that was an ugly, olive-drab in color. Fortunately, Tom didn't notice, and Lisa was too polite to say anything other than 'what's in the bag?'. He told them, and when he produced the bottle of wine, Lisa gave him a hug without the kiss on the cheek and nothing more was said.\n\nThey led him inside and explained that Brandi was with the triplets trying to get them to eat again then go to sleep early.\n\n\"Any luck?\" Mike asked just as he heard the first scream.\n\n\"Poor Liam's sick, and when one of them starts...\"\n\nAnd then, as if on cue, the other boys followed suit.\n\n\"Ah. A regular cacophony of crying,\" Mike said with a smile.\n\n\"Cacophony. That's a very good word for it,\" Tom said a little louder so Mike could hear. \"Come on. I'll walk you back there so you can say 'hey' to Brandi.\"\n\nAs the noise got louder Tom said, \"Not that you'd need a guide to find the source of the um...cacophony.\"\n\nTom knocked on the door, and Brandi hollered, \"Come in!\"\n\nMike noticed two things immediately.\n\nThe first was that Brandi seemed to be very good at orchestrating 'managed chaos', and the other was that she was even more attractive than he'd given her credit for in the hospital. He'd wondered what she looked like with her hair and makeup done, and assumed it would be a very pleasant sight. He just had no idea it would be this pleasant, her small amount of post-pregnancy weight aside.\n\n\"Mike! Hi!\" she said as she stopped for a moment and gave him a very long, very warm hug. \"I am SO glad to see you!\"\n\n\"It's good to see you again, too, and you...look amazing,\" he told her as Tom excused himself.\n\n\"Oh, gosh. Thank you. I don't really have anything nice to wear yet, so I hope this is okay,\" she told him.\n\n\"I wasn't referring to your clothes,\" Mike said with a warm smile. \"I meant that you look really great.\"\n\n\"Oh. Um...thank you. That's very sweet of you to say.\"\n\nMike wasn't sure but he thought she was flattered by the compliment, and that surprised him because attractive women were used to hearing those kinds of things. And the truth was, she did look very nice, even in the modest-looking, off-white sweater and black sweatpants she was wearing. He was fairly sure she was in the sweats because they were all she had that would fit her, and once she lost the weight, any pants she might buy that would fit now would be too large then, so it all made sense.\n\n\"Here. Let me help,\" Mike said as he dropped the big, green bag and went to pick up a crying boy.\n\n\"Which one is this?\" he asked.\n\n\"That's Liam,\" Brandi told him. \"You probably don't want to...\"\n\nMike already had him in his arms, and as soon as he picked him up, Liam stopped crying and started staring at the man's face the little boy may have somehow kind of recognized.\n\n\"Oh, my goodness. How are you doing that?\" Brandi asked as she picked up Noah and turned him toward Mike. As soon as she did, Mike made a funny face, and he stopped crying, too. And when Elijah realized his brothers were no longer crying, he stopped, as well.\n\n\"Can you just stay here like that for say...another 17 years or so?\" Brandi teased, grateful for the silence.\n\n\"I might need to be fed every now and then and use the bathroom occasionally, but...sure,\" Mike kidded causing Brandi to laugh, revealing a beautiful smile of her own under the two full lips that were painted with a shiny gloss that only added to her own natural beauty.\n\n\"I'm glad to see you laughing. Are you in any pain?\" he asked.\n\n\"Not really. The antibiotics and pain pills have been doing the trick, and I'll be getting the stitches out sometime next week,\" she informed him.\n\nMike knew there'd been internal bleeding, but he wasn't about to ask where they'd gone in. Besides, he was reasonably sure it was the abdomen, and as long as she was okay, it didn't matter.\n\n\"So what's in the green bag, Officer Simms?\" she asked, that beautiful smile shining brightly.\n\n\"Hey. That's...Sergeant Simms, okay?\" he said very seriously drawing another genuine laugh.\n\n\"Oh, yes, sir, Sergeant, sir!\" she said back just as seriously.\n\nMike couldn't resist using an old line from his days in the Marine Corps and said, \"Don't call me 'sir', I work for a living.\"\n\nIt wasn't all that funny, but Brandi laughed anyway, and Mike suddenly realized he was...feeling the effects of her physical attractiveness.\n\nTo avoid things 'growing out of hand' he quickly changed the subject as he turned away and spun Liam around in the air, getting another baby laugh in return.\n\n\"I uh, I got something for the boys,\" he told her once the swelling had subsided.\n\n\"What? Mike. Why would you do that?\" she asked, making him second guess himself.\n\n\"Well, because...I'm just so glad they're all okay?\" he replied as he bent down and picked up the bag with his free hand.\n\n\"Let me get that,\" Brandi said. \"If Noah will let me lay him back down, that is.\"\n\nShe cooed to him as she placed him in the crib, and he smiled back at her.\n\n\"May I?\" she asked as she opened the bag.\n\n\"Of course. Please.\"\n\nShe pulled out the puzzle first and when she saw it, she started tearing up.\n\n\"I can take everything back if you don't like it,\" he said immediately.\n\n\"What? No! I love it. Mike, this...this is so...incredible.\"\n\nHe saw her reach up with her free hand and try and wipe away a tear and realized she wasn't upset at all. And by the time she pulled out the last item, less the box at the bottom, he knew how much this meant to her. He couldn't be sure, but the cop inside him was thinking she'd been treated poorly by her husband and any little thing was something to be treasured. \n\n\"There's one more thing in there,\" he told her.\n\n\"But I'm out of boys,\" she said with a smile mixed with the remaining tears.\n\n\"Then it must be for you, huh?\" he told her, smiling back as he bounced Liam in his arms.\n\n\"What? You...you bought something for me?\" she asked, not sure she heard him correctly.\n\n\"It's no big deal. It's just something...practical.\"\n\nBefore even opening it, Brandi hugged him with one arm and fought off another round of tears. But when she opened the box, and pulled back the crinoline paper, the tears fell anyway.\n\n\"Oh, my goodness. Mike, it's...beautiful,\" she told him as she gently unfolded it and touched the soft fabric. \n\n\"Do you like it?\" he asked.\n\n\"I...I love it, but...it's too much.\"\n\n\"Why?\" he asked, the way only a man could.\n\n\"It's cashmere, that's why. It's beautiful, but it has to be very expensive,\" she explained without any hint of accusation.\n\n\"I didn't think it was expensive,\" he told her in a way that sounded almost naive.\n\n\"Are you sure?\" she asked, her eyes a mix of gratitude and disbelief.\n\n\"Put it on. Let me see,\" Mike told her, his smile back in full force as he took the box.\n\nBrandi looped the scarf around her neck and crossed it in the front then looked to Mike for approval.\n\n\"Wow. It looks great on you,\" he told her sincerely.\n\nThis time, she hugged him with both arms, taking Liam with them, then kissed him on the cheek.\n\n\"Thank you, Mike. This is just...so special,\" she told him as she moved back and stroked the soft fabric.\n\n\"Well, you and these boys and are kind of special to me, so...\"\n\nLisa popped her head in and said, \"Come on, you two!\" \n\n\"Here. Let me take Liam,\" Brandi offered.\n\n\"What? And risk getting something on your new scarf?\" he told her with a smile.\n\nLisa noticed it and started stroking it, too.\n\n\"Oh, my goodness! This is...gorgeous!\" she told him just as she noticed the toys. \"Did Mike...\"\n\n\"Yes. Yes, he did, and look at the toys,\" Brandi said as though she was verbally chastising him for doing something wrong or at least foolish.\n\n\"I think I may just be in love with this man!\" Lisa said before giving him another hug and one more kiss on the cheek.\n\nThe kiss was interrupted by a loud, \"Ahem!\" causing everyone to laugh at her husband's feigned jealousy.\n\n\"Drinks are waiting,\" he said to them all.\n\nMike kept Liam, and the two other boys stayed quiet when they walked out. Liam was so tired and so sick that he'd laid his head on Mike's shoulder and by the time they got to the kitchen, he was sound asleep.\n\n\"What's your pleasure, Mike?\" Tom asked quietly as he pointed to the liquor bottles.\n\n\"Um...Scotch. On the rocks, please,\" he replied. \"And I'm gonna try and lay this little guy down with his brothers, if that's okay.\"\n\n\"Good luck!\" Brandi nearly whispered.\n\nWhen he reappeared a minute later and the house was still silent, Lisa said, \"Oh, my. I am very impressed!\"\n\n\"Yeah. Me, too,\" Brandi said to her mom as she smiled at the handsome police officer.\n\nFor the next two hours, they ate, drank, and mostly talked. Mike didn't like talking about himself, but his three hosts kept dragging one fact after the other out of him from growing up to enlisting to his service on the force. \n\nOf course, his ex-wife came up, and although Mike tried not to badmouth her too often, he did finally explain how she became so materialistic it ruined their marriage. \n\nA few minutes later, it came out that Brandi's experience was very different than his, and his earlier suspicions were confirmed. Her ex rarely ever bought her anything, and after the triplets were born, he was so angry and resentful that he walked away from them.\n\nMike also learned that Brandi had less than a year's worth of credits left to earn to get her bachelor's degree, and after that he did his best to stay away from former spouses and onto...anything else.\n\nBut as it turned out, Brandi was carrying around a very large load of guilt for having dropped out\u2014against her father's wishes\u2014so his attempt to find a more pleasant topic failed miserably when he asked her what she'd majored in.\n\n\"What about you, Mike?\" Tom asked, sensing his guest's discomfort. \"Do you have any big plans with the force?\"\n\nLisa shot him a dagger then said, \"He just sat here and explained why he became a sergeant, and you're asking if he plans to do anything big? Isn't sergeant pretty big\u2014Thomas?\"\n\nWhen she used his full name, her husband backed off and apologized even though he didn't think the question was out of line at all.\n\n\"No, it's okay,\" Mike said with a laugh to diffuse the tension. \"I don't really know. I miss being out with the public, but being a sergeant kind of has its benefits. So were I to say...settle down...who knows? I could see myself being a lieutenant or maybe even a captain someday.\"\n\n\"Well, I'm sure you'll have no problem finding someone whenever you're ready,\" Lisa told him. \n\n\"I agree,\" Brandi said very sweetly, causing Mike to again notice how pretty she was just as a loud cry came from the back of the house. \n\nAs she got up to attend to the boys, Brandi also said, \"And while it's none of my business, I just wanted to say that I can't imagine a woman needing anything more than a loving, caring husband.\"\n\nBrandi waited a second then added, \"I hope that came across the right way, Mike.\"\n\n\"It did, Brandi. And I can't tell you how many times I wanted to hear those words from her.\"\n\n\"Well, if you'll excuse me,\" she said.\n\n\"Wait. Let me...give you a hand, okay?\"\n\nMike didn't see the way Lisa looked at her husband because he was too focused on the beautiful, younger woman who'd completely captivated his attention.\n\n\"Oh. I can't imagine you'd want to subject yourself to any more torture,\" Brandi told him.\n\nMike stood up, smiled at her, then assured her there was nothing torturous about it.\n\n\"Okay, then. If you're sure.\"\n\n\"I'm sure,\" he told her, this time his starry-eyed comment drawing a raised eyebrow look from Tom once he noticed what his wife had already seen.\n\nOnce they were out of earshot, Tom said, \"Are you thinking what I'm thinking?\"\n\n\"If you're thinking they just might be smitten with each other then\u2014yes,\" his wife said.\n\n\"Why couldn't Brandi have waited for a guy like Mike?\" Tom said almost rhetorically.\n\n\"Because our daughter had to learn this lesson the hard way, honey\u2014through personal experience. That's why.\"\n\nTom kind of shook his head then said, \"He's a little too old for her, but he's a heckuva nice guy.\"\n\n\"He's very nice. And while he is a little older, he's not that old, and I can't help but maybe get my hopes up.\"\n\n\"Honey, Brandi's not even officially divorced yet. Aren't you putting the cart a little ahead of the horse?\"\n\nLisa smiled then said, \"Maybe a little. But I know a good man when I see one. And I know that look.\"\n\nTom got up then moved over next to her and playfully said, \"Oh, I see the way you look at him.\"\n\nKnowing he was only teasing, Lisa said, \"Well, you can't blame me, can you? He's a very handsome young man.\"\n\n\"Yeah? What about me?\" Tom said, pretending to be hurt.\n\n\"Well, you're not so young anymore, but I still think you're kinda handsome,\" she replied, trying not to laugh.\n\n\"I can live with that,\" he said rather glibly before kissing the only woman he'd ever loved.\n\n\"Stop that! What if the kids come back?\" she told him.\n\n\"Kids? What kids? The boys can't even walk yet.\"\n\n\"Tom Cromwell, you're...terrible!\"\n\n\"You won't be saying that later tonight, Mrs. Cromwell,\" he assured her.\n\n\"No. No, I won't,\" she said very sweetly before she kissed him back.\n\nMike tried working his magic with Liam again, but this time there wasn't any magic left to work. \n\n\"He's probably hungry,\" Brandi said. She slid a finger under his diaper and added, \"And he needs to be changed.\"\n\n\"I can change him,\" Mike said.\n\nBrandi stood up, looked right at him, then said, \"Mike, you're an amazing guy, and I owe you so much. But this is my responsibility, and you don't need to spend any more time making me feel good, okay?\"\n\nMike smiled at her then said, \"So...I'm making you feel good?\"\n\nBrandi smiled weakly but couldn't laugh.\n\n\"Yes. But as much as I appreciate that, these boys are a lifetime commitment, and one I'm gladly and willingly making. So as much as changing a diaper would be really nice, I can handle it. Really.\"\n\nMike moved a little closer, and when he did, Brandi momentarily wasn't sure how to take it and instinctively moved back.\n\n\"Sorry,\" Mike told her.\n\n\"No. It's okay. I...I just had this kind of...flashback. About my husband. I'm the one who's sorry.\"\n\n\"Don't be. You have nothing to be sorry about.\"\n\nHe moved closer again then gently touched her forearm as he spoke.\n\n\"Brandi, I don't mind helping. And while I know I'm...a few years older than you...I have to say I haven't felt like this about anyone before.\"\n\n\"Felt?\" she asked, now paralyzed with a different kind of fear.\n\n\"Well, yes. \"I'm not sure I understand it myself yet, but I...I find myself...\"\n\nMike hesitated, ran a hand through his thick, dry hair, then said, \"I guess the word is...drawn...to you.\"\n\n\"You're...drawn to me?\" she said, her heart beating wildly out of nowhere.\n\nThe boys were all screaming their lungs out, but Mike didn't care. He moved a little closer then put his hands on her shoulders and told her he was drawn to her in the sense of being very attracted to her.",
        "\"And I...I feel some kind of connection with these boys.\"\n\nRattled, Brandi replied over their cries, \"Yes. It's the feeling that your eardrums are being perforated.\"\n\nMike laughed then told her that wasn't it at all before speaking to their mother again.\n\n\"Listen. I know we just really met, and I know you're still legally married, and you know I'm...a bit older than you, but...\"\n\n\"How...much...older are we talking?\" Brandi asked, as her eyes moved as fast as her heart was beating.\n\n\"Well, I'll be 38 in a few months, and you're 23, so...\"\n\n\"That's...that's not old,\" she said, too quietly to be heard.\n\nBut Mike didn't need to hear. He read her lips and saw it in her eyes.\n\n\"So...can I at least stay and help you change the boys?\" he asked as their eyes locked.\n\n\"Okay,\" she whispered, unable to speak any louder.\n\n\"And is it okay if I...\"\n\nHe lowered his head to kiss her, and as he did, her eyes closed and she moved her hands up and rested them on his chest as their lips met for the first time.\n\nThe kiss was soft and short, but it made Brandi's heart race even faster, and it caused what was becoming a recurring reaction in the tall, handsome police officer who quickly turned away.\n\n\"Okay. Who's first, boys?\" he said over the 'cacophony'.\n\nBrandi laughed a happy laugh a minute later when she saw the cockeyed diaper on Liam.\n\n\"Here. Like this,\" she said as she tore the tape off, repositioned the diaper, then re-taped it.\n\n\"Ah, okay. Got it!\" he told her with a smile.\n\nHe picked the sick child up and held him and as before, the little boy stopped crying as his mother finished changing his brothers.\n\n\"Okay. Now it's time to feed them, and you most definitely don't have to stay for that,\" she told Mike just before realizing she might mean breast feeding them.\n\nBrandi understood, smiled happily, then told him she'd run out of milk a month ago, and that they all drank formula now along with babyfood.\n\n\"But you still don't need to stay,\" she told him again.\n\n\"Even if I want to?\" he asked, that smile convincing her meant it.\n\nBrandi's heart had slowed down, and she began thinking about a possible setup. Not an intentional one, of course, as Mike didn't seem like that kind of guy. But she realized she could quickly fall for this attractive, older man, and, just like David, he could suddenly realize three crying boys wasn't something he wanted to deal with in his life.\n\n\"That's up to you, I suppose,\" Brandi told him, the smile gone. It wasn't curt or terse. It just wasn't as nice as the other things she'd said to him.\n\n\"Then I'd like to stay.\"\n\n\"You're sure?\"\n\n\"Never more sure of anything,\" he replied, and the way he looked at her eased her doubts. For the moment anyway.\n\nBy the time they went to get some baby food, Tom and Lisa were still 'snuggling' on the couch.\n\n\"I swear!\" Brandi said, causing her father to sit up straight.\n\n\"I thought Mike left,\" he said. \"Not that I'm complaining.\"\n\n\"No, he's helping me with the boys. But you were too busy canoodling with Mom to notice,\" his daughter teased.\n\n\"What can I say? I'm in love with your mother.\"\n\nAs Brandi warmed up some food she knew the boys wouldn't eat cold, she said almost absentmindedly, \"That's what I want.\"\n\n\"What? Strained peas?\" Mike replied, knowing what she was heating up.\n\n\"No. Not strained peas,\" Brandi said, his humor making her feel little better. \"What my mom and dad have. After all these years, they're still like teenagers in love.\"\n\n\"I'd have been happy just to be appreciated for anything I did for my wife rather than constantly be told there's never enough money.\"\n\n\"It's none of my business, but what did she expect? Diamonds and fur coats? A mansion?\"\n\n\"Um...all of the above\u2014and more,\" Mike told her.\n\n\"That's so sad. Don't get me wrong. I want to provide well for my sons, but I can't imagine saying something like that to my husband. Well, okay. I actually could say that about my future ex-husband because just buying the boys some baby formula caused him to gripe and complain about how expensive they were.\"\n\n\"Now that's sad,\" Mike said, using her words. \"I'd work a second job if I needed to to provide for my family. But 'providing' evidently means very different things to different people.\"\n\n\"I know firsthand that life without any money pretty much sucks. But how much do you really need if you can pay the bills and you have a roof over your head and food on the table?\"\n\nBrandi wasn't ready for Mike's reply, and although she tried not to laugh, she couldn't help it.\n\n\"Oh, let's see. Enough to buy a Range Rover. And a country club membership. Let's see. Oh, yeah. Several new outfits a week\u2014every week\u2014with new shoes and jewelry. Um...shall I go on?\"\n\nAfter she laughed Brandi apologized.\n\n\"That isn't funny. Sorry.\"\n\n\"No, it actually is kind of funny. Looking back on it anyway. It wasn't a lot of fun living it, but now? Yeah, I can look back and laugh.\"\n\n\"Why do people change, Mike? Why can't they just be themselves rather than put on a false front then let their real selves come out after they reel you in?\"\n\n\"I hope that's a rhetorical question, because I don't have a good answer. The only thing I can offer is that, to some degree, we all wear social masks. You know, the way we all put our best foot forward with strangers hoping to make a good impression? I suppose once some people have done that, they start letting their guard down a little, and in some cases, it was all nothing but a mask. That's only a gut feeling, mind you, and as a cop, I prefer to rely on facts and evidence.\"\n\n\"No, that makes a lot of sense,\" Brandi said. \"I've just never met anyone who did such a Jekyll and Hyde kind of thing like my husband did, you know?\"\n\nShe saw the look Mike gave then laughed.\n\n\"Oh, right. You do know, huh?\"\n\n\"Oh, trust me. I know,\" he told her as the microwave beeped.\n\nAs they fed the boys, Mike sat there wondering how one person could ever keep up with three children of any age, but especially when they were incapable of doing anything for themselves at all. And yet as he watched her cheerfully move from boy to boy, Mike found himself admiring this attractive, young mom even more, and wondering...what if?\n\nOnce the three of them were all back in bed, Mike told Brandi he really did need to excuse himself.\n\n\"Oh. Okay,\" she said, surprising him by the way she said it.\n\n\"I just don't want to, you know, get in the way or anything.\"\n\n\"You're not in the way, Mike. But I can understand how you feel. After all, this is my parents' home, so it only makes things that much harder.\"\n\n\"Things?\" he asked with a smile. \"Does that mean there's 'things' going on here? Between you and me?\"\n\n\"I don't know,\" Brandi told him. \"Are there?\"\n\nShe smiled at him in a way that made his mouth feel dry as he said, \"I'd like there to be.\"\n\n\"Even after seeing this?\" she asked, nodding toward the triplets who were already falling asleep.\n\n\"Even more so after seeing this,\" he told her as he reached out for her hands.\n\n\"Well, if this didn't scare you off, then...maybe 'things' can happen. Between us,\" she said quietly, the smile still there.\n\n\"I'm not easily scared,\" he told her as he moved a little closer.\n\nBrandi didn't flinch, but she did move back slightly.\n\n\"Mike? I...I think you're a really great guy, but...\"\n\n\"But?\"\n\n\"I...I have three boys to look out for, and I have to look out for myself, too. I have to admit I find you very attractive, and not just physically.\"\n\n\"But?\" he said again.\n\n\"But I can't risk getting involved with someone again if there's any chance I'm going to end up getting my heart broken. It isn't that I don't like you or trust you, it's just that...\"\n\n\"If one man you trusted could hurt you so badly then another one could, too.\"\n\nBrandi wasn't smiling anymore. In the smile's place was a deep-seated concern, one that was making its way to Mike in a very strong way.\n\n\"It'll take time to learn to trust me,\" Mike began. \"So I guess the question is, 'Are you willing to give me the time to show you I'm not like him'?\"\n\nShe stood there looking up into his eyes for several seconds then quietly said, \"Yes. I am. And...I'd like that.\"\n\n\"Yeah?\"\n\n\"Yes. Definitely,\" she told him.\n\n\"So can I maybe see you again soon?\"\n\n\"You may,\" Brandi replied very sweetly.\n\n\"I'm working tomorrow, but I could stop by after work.\"\n\nThe smile faded again as something else occurred to Brandi.\n\n\"You do understand that every time will be a lot like tonight, right? I'm not ever going to be available to go out for fancy dinners or dancing or even ball games all by myself. Ever.\"\n\n\"May I tell you something?\" Mike asked.\n\n\"Of course,\" Brandi replied hopefully.\n\n\"I felt this...connection or something...with you and those boys from the moment I saw you. All four of you. So I'm well aware of what I'm getting myself into, Brandi. And again, I don't scare easily.\"\n\nFor the first time in quite awhile, Brandi felt hopeful. \n\nShe smiled at him then very sweetly said, \"Then I'd love to see you tomorrow...Sergeant.\"\n\nHer smile was back, and Mike asked, \"May I kiss you again?\"\n\n\"You may, but from now on, you don't have to ask me,\" Brandi replied just as sweetly as before.\n\nWhen their lips met, Mike had this inexplicable feeling he was falling in love with her, but it went away almost as quickly as it came. And yet, when the kiss ended, and he looked into her eyes again, that feeling came back just as strongly.\n\nOn the way out, he stopped to say goodnight to Brandi's parents and thanked them for their hospitality.\n\n\"It was our pleasure!\" Lisa assured him.\n\nTom stood up to shake him hands and thank him for all he'd done.\n\n\"Please come back, Mike,\" he said sincerely as they shook.\n\nBrandi came out with him, and once the two men released their grip said, \"He'll be back tomorrow, Daddy. If that's okay.\"\n\nHer father raised an eyebrow and said, \"Oh. Is that right?\"\n\n\"If that's okay,\" Mike also said.\n\n\"Of course it's okay!\" Lisa said, answering for her husband. \"We'd love to have you, and you can come back anytime, Mike. Anytime at all!\"\n\nBrandi grabbed her coat and handed Mike's to him then walked him outside. As they stood there on the porch she began to shiver.\n\n\"Mike? You...you don't need to feel obligated or anything. I mean, I'd love to see you again, but please don't think you need to...I don't know. Save me or anything. Well, other than when you actually did save me, of course.\"\n\nHe put his hands on the puffy sleeves of the coat then told her, \"I couldn't save you if I tried. But I could easily see myself spending a lot of time with you, and if you don't get tired of me...who knows?\"\n\n\"Okay. I just wanted to be really sure you don't see me as some kind of charity case or something.\"\n\n\"No. Not at all. I see a beautiful woman with three beautiful boys, and so far, I really like what I see.\"\n\n\"You mean like sick kids and messy diapers?\" she said with a smile.\n\nMike laughed quietly then told her that didn't bother him in the least.\n\n\"All right. I'll just take your word for it then.\" \n\nHer reply was unconvincing, but that's because she wasn't yet fully convinced herself.\n\nMike gently touched her cold cheek then said, \"You can take it to the bank, Brandi. My word, that is.\" \n\nThen, without asking, he kissed her softly one more time.\n\n\"Now go back inside and get warm, okay?\"\n\n\"Okay. Goodnight, Mike.\"\n\n\"Goodnight. And I'll see you around, say...seven tomorrow night?\"\n\n\"I'll look forward to it,\" she said.\n\n\"Yeah. Me, too,\" Mike told her. \"Now scoot!\"\n\nBrandi was so surprised by what had happened over the last few hours that she was struggling to accept it. She couldn't help but hope this was happening, but having been hurt so badly, she was going to be very careful before putting too much trust in another man; a man she really barely knew. \n\nHe was definitely very attractive to her, and so far, he was one of the kindest, most caring men she'd ever met. And if he could love her\u2014and her boys\u2014then, as he said, who knew?\n\nAs Mike drove home, that feeling of falling for this young mother lingered off and on all the way back to his apartment where he spent several hours recounting every moment of his time together with Brandi and the boys before he finally tried to go to sleep.\n\nHe was up very early and on the bike to nowhere the next morning as he again ran through everything he could recall from the moment of the accident to telling her to go back inside the house. Before he realized it, he'd been on it for close to an hour and was sweating like a stuck pig. Or...something. \n\nMike knew he was gonna have to hustle if he wanted to get to work on time. Being late was so unacceptable to him, he knew he'd have driven in half dressed rather to avoid that happening.\n\nSergeant Simms pulled in with five minutes to spare, and by the time he got his computer booted up, it was time for the morning briefing. For the first time he could ever remember he was having trouble focusing. He just thankful today wasn't his day to be conducting the briefing. If it had been, it would have been an unmitigated disaster and a huge hit to both his reputation and his ego.\n\nThe morning dragged on, and when lunch finally came, Mike walked across the street to his favorite place, and couldn't resist sending Brandi a text.\n\n\"Hi,\" the text began. \"I hope you're having a good day, and I hope Liam is feeling better. I had an absolutely fantastic day yesterday (thanks to you), and I'm really looking forward to seeing you again tonight.\"\n\nHe sat there for quite awhile trying to decide whether or not to say anything else, and after concluding any more might be too much he hit 'send'.\n\nHis favorite waitress or...server...refilled his coffee cup and asked if he needed anything else. The way he smiled at her made her wonder what was going on when said everything was fine. Very fine.\n\n\"If I didn't know better, I'd think you're cheating on me,\" she said, continuing an longstanding shtick between them.\n\n\"Nah. No way, Karen. You're the only girl for me. You know that, right?\"\n\nKaren was maybe 45, heavyset, and not what anyone would call attractive. But she was genuinely friendly, and Mike always looked forward to seeing her, and he unfailingly tipped her well.\n\n\"Uh-huh. Sure,\" she said, still smiling as she set the check next to him face down with a smiley face and a heart on the back.\n\n\"Hey. You didn't leave me your number?\" Mike teased.\n\n\"Yeah, I know. But my woman's intuition tells me you've given your heart to someone else, so I guess all I can do now is dream.\"\n\nMike laughed, but he couldn't help but wonder if maybe she really did this intuition thing. Whether such a thing existed or not she'd pretty much nailed the assessment. His heart, along with his head, was definitely somewhere else, and it was divided up into four little parts that he hoped to see in a few more hours.\n\nAs much as he loved his job, the rest of the day dragged on almost mercilessly. The good news was there hadn't been a shooting or any violent crime reported so far, and for a city the size of Indianapolis, any break was a welcome relief. It wasn't exactly New York or LA, but it did have its share of violent crime. Just not that day.\n\nBy 6:30, Mike was dressed and ready to leave. He'd stopped by a flower shop on the way home and picked up two roses. One was red and the other yellow. The red, of course, was for Brandi. The yellow was for Lisa. \n\nMike was pretty sure Tom wasn't actually jealous, but he'd been on one too many domestic violence calls in places he never dreamed that would happen to rule anything out. So he was a little hesitant to offer it, but he was determined to do so and hope for the best.\n\nLisa was absolutely thrilled with the flower, but Tom definitely ribbed the younger man about flirting with his wife.\n\n\"I can't blame you, though. She is a hottie,\" he said.\n\nBrandi was deeply touched by the thoughtful gesture, but the way Mike treated her mother was even more moving. So as she stood beside him when this little exchange played out, she felt whatever barrier she'd put up begin to slowly disappear. It was still there, but it was somehow...thinner than it had been just 24 hours earlier.\n\nLisa asked if there was anything she could get him, and after thanking her, Mike assured her he was fine.\n\n\"Okay. You kids...sorry. You two\u2014have fun,\" she told them.\n\n\"We will, Mom. Liam has diarrhea now, and I think Elijah's getting sick, too.\"\n\nNot sure what else to say, Lisa excused herself and went back to the kitchen to finish cleaning up the aftermath of dinner with three little boys. Brandi had already cleaned up their highchairs and plates and put the bibs in the laundry, but there was still plenty more to do.\n\nWhen she and Mike finished in the kitchen and got back to the bedroom where the triplets stayed, the noise level was already high.\n\n\"Mike, I'm sorry about all this,\" she began saying.\n\nHe put his arms on her shoulders and said, \"Why? These little guys are great. And by the way, I'm dying to kiss you again.\"\n\nBrandi smiled then said, \"I wasn't sure you'd even want to stay let alone kiss me.\"\n\n\"And yet I am and I do,\" he told her with a smile.\n\n\"Then maybe you should kiss me before the next crisis unfolds,\" she replied over the noise.\n\nUndeterred by the volume, Mike kissed her softly and told her he'd thought about her all day.\n\nThe look she gave him was enough to make him ask what was wrong.\n\n\"Oh, I don't know,\" she said, only adding to his concerns.\n\n\"Brandi. Please talk to me.\"\n\nShe turned to look at him then finally said, \"Good things don't happen to me. Ever. So when someone as nice...and as handsome...as you comes into my life, there has to be a catch.\"\n\nMike took her hands and as he looked into her eyes said, \"There's no catch here, Brandi. What you see is what you get. I have no hidden agenda and nothing to hide. I really am very attracted to you, and I see your boys as a huge plus, not some kind of...annoyance to be tolerated in order to be with you.\"\n\nHe waited for a second then said, \"Okay?\"\n\n\"Okay, but...\"\n\nMike smiled at the 'but' and waited for her to explain.\n\n\"My dad always says, 'If it's too good to be true, it isn't.' Don't you believe that?\" she asked, thinking she'd made her point quite well.\n\n\"Sometimes. But there's another saying to keep in mind if we're going to use them to make decisions.\"\n\n\"And what might that be?\" she asked, her eyes hopeful yet not quite trusting.\n\n\"There are exceptions to every rule.\"\n\nHe saw her brain thinking it through and when it finally registered she smiled.\n\n\"Okay. I...I can't really argue with that.\"\n\n\"Do you want to keep arguing?\" he asked, trying not to smile.\n\n\"No. And honestly? I'd rather have you kiss me again instead,\" she told him as she struggled to again put her fears behind her.\n\n\"My pleasure,\" he said before kissing her a second time.\n\nThe kiss was interrupted by a blood-curdling scream from Liam followed by a gawd-awful smell.\n\n\"Uh-oh,\" Brandi said, knowing full well what had happened.\n\n\"I'll take of it,\" Mike told her after Brandi pulled off one side of the taped-up diaper, her other handing holding her nose.\n\n\"No. You can't do that,\" she told him as she took a quick breath to talk before pinching off the horrific smell again.\n\n\"Why? Because I'm a man?\"\n\n\"No. It's just...disgusting.\"\n\n\"Oh, I see. So...it's not disgusting if you do it though, right?\" Mike teased, the horrific odor not seeming to even bother him.\n\nHe gently moved in and pushed away and told her, \"I got this.\"\n\n\"Thank you,\" Brandi said, almost too quietly to be heard as Mike went to work on the aftermath of the explosion.\n\nBrandi couldn't believe that Mike, or any man, for that matter, was willing to tackle that kind of human disaster. But he cleaned, wiped, powdered, and re-diapered her baby without so much as a complaint.",
        "\"Okay. All done,\" he announced once the diarrhea-laced Pamper was in a plastic bag and then in the outside trash can. He laughed to himself when he thought it should be placed in a container with a huge warning label on it to prevent anyone from getting too close. \n\n\"Until the next...event,\" Brandi warned.\n\n\"They're not little forever, you know,\" Mike gently said as he reached out for her hands again.\n\nAs Brandi gave them to him, she still couldn't shake this sinking feeling Mike would soon tire of all this and move on. So as badly as she wanted to let him all the way in, she had to keep a some part of her heart free and clear for when it happened.\n\nBut a week, and many more dirty diapers later, he was still there. Liam was healthy again, and Brandi was deeply moved by how much time Mike spent holding them and just making faces or lifting them up high to get a smile or a laugh. He'd even been pitching in and helping bathe the boys and get them into their little jammies for bed.\n\nSo when, another week after that, Mike told her he was taking her out that Saturday evening, Brandi almost didn't believe him. Until her dad told her it was true.\n\n\"But I told you and mom I didn't expect you to babysit for me. Ever,\" his daughter reminded him.\n\n\"We're not. Mike's got a babysitter all lined up,\" her father informed her.\n\n\"Subject to your approval, of course,\" Mike said to Brandi. \"She's the daughter of one of our best detectives, and although she's only 15, she comes very highly rated. And that's from several of the wives of male police officers, as well as from a female officer who's used her more than once herself.\"\n\nBrandi was so moved she didn't even know what to say. In fact, she was so touched she couldn't help tearing up.\n\n\"Hey. What's up with that?\" Mike asked.\n\n\"I...I still can't believe you're real,\" Brandi told him as she fought hard not to cry.\n\n\"I'll uh, I'll leave you two alone,\" Tom said quietly as he gave them some space.\n\nMike moved closer and put his hands on Brandi's upper arms then said, \"Well, I am. And I'm not going anywhere unless you make me go.\"\n\n\"Why would I ever do that?\" Brandi asked, the battle now lost as Mike moved even closer and put his arms around her.\n\n\"I don't know. Because I'm...ancient?\" he said quietly as he stroked her hair.\n\nTrying to sound playful, Brandi said, \"You're not...ancient, Mike. Old, yes. But ancient?\"\n\nWhen she pulled back to look up at him and smile, her good fortune overwhelmed her and she burst into tears.\n\n\"Old, ugly, and downright scary, huh?\" he said, knowing why she was crying.\n\n\"You're not any of those things, Mike,\" she choked out a word or two at a time.\n\nHoping to at least get a smile out of her, he said, \"Not even old?\"\n\nBrandi tried drying her eyes with the sleeve of the sweatshirt she was wearing then said, \"Maybe just a little.\"\n\nShe tried to smile, and when that failed, too, she just laid her head on his chest and let him hold her.\n\n\"You've been through so much,\" he said quietly. \"I'm not sure you're even aware of just how strong you are.\"\n\n\"I don't feel strong,\" she told him.\n\n\"That's okay. I'll be strong for both of us until you feel strong on your own,\" he said as he held the back of her head against his chest.\n\n\"I don't even have anything nice to wear,\" she finally said.\n\n\"Hmmm. Then it's probably a good thing I have so many friends and contacts around the city, huh?\"\n\nBrandi moved away just enough to look up at him then waited for him to explain.\n\n\"I just happen to know someone who's willing to bring a whole bunch of things over here on Saturday for you to try on. All you have to do is decide what you like, and it's yours.\"\n\n\"I...I don't have any money, Mike. Did you forget about that?\"\n\nHe put his hands on her puffy face then said, \"But I do. And it would make me very happy if you let me do this for you.\"\n\nHe saw her eyes darting back and forth between his and knew she was trying to think of something to say.\n\n\"Please?\" he said before she could tell him why he shouldn't.\n\n\"You're not going to let me say 'no', are you?\" she finally said, a very weak smile emerging at the corners of her mouth.\n\n\"Nope. Not a chance.\"\n\n\"Where are you taking me?\" she also managed to ask, not caring where it was. She would quite literally be thrilled to sit in his car and talk, so anything more than that was nothing short of miraculous.\n\n\"Dinner. So don't pick jeans and a sweatshirt, okay?\" he told her, a genuine smile on his face.\n\n\"Will you please just hold me?\" Brandi asked.\n\nShe wanted to be able to somehow just...melt into him and let him know how much his kindness meant to her. But she couldn't so she settled for standing there with her arms around him while he continued to hold her close.\n\nIf Mike's kindness had blown her way, there were no words for what happened on Saturday afternoon around 3pm. \n\nHis friend showed up with two girls from the shop she owned, as did the babysitter who introduced herself and let Brandi know she'd be caring for the boys until their mom got home\u2014no matter how late that might be. \n\nAfter showing her the boy's room and where everything was, the lady from the boutique had an array of dresses and other items laid out in Brandi's size for her to choose from.\n\n\"How...how do I even decide?\" she asked the woman whose name was Lola.\n\n\"Let's start with me making some suggestions then have you try on the ones you like best and go from there,\" Lola suggested.\n\n\"This...this is crazy,\" Brandi said when she looked at the beautiful dresses. \"How much are these?\"\n\nLola laughed then assured her they were all under a hundred dollars with most under fifty.\n\n\"You're kidding,\" Brandi said as she picked one up that she really liked.\n\n\"A very nice choice,\" Lola said. \"That's an asymmetric hem dress with an embellished neckline.\"\n\nShe leaned closer then said, \"How much do you think that one is?\"\n\n\"Oh, this one has to be close to a hundred if not more.\"\n\n\"Uh-uh,\" Lola told her.\n\n\"This is fifty dollars?\" Brandi said, unable to believe this gorgeous blue dress with layers of chiffon was so inexpensive.\n\n\"No. Not fifty,\" Lola told her. \"It's $35.\"\n\n\"I'll take it!\" Brandi said without a second thought.\n\n\"You might want to try it on first, dear,\" Lola suggested. \"And...try these shoes with it.\"\n\nThe three-inch, open-toed blue heels matched the dress and had an ankle strap making them look very expensive.\n\n\"Less then $50,\" Lola informed her before she could ask. \"Go on. Try them on!\"\n\n\"I believe we have a winner!\" Lola announced when she came back out. \"We just need a warm coat, and my job here is done!\"\n\n\"And that's where I take over,\" another woman, quite a bit younger than Lola said. \"I'll be doing your hair and makeup after you shower and wash it for me.\"\n\n\"Wait. Are you...are you serious?\" Brandi asked, not sure she heard correctly.\n\n\"Yes. Very,\" the woman told her.\n\nAs she undressed to shower, Brandi heard one of the boys cry, and started to head toward him when the babysitter called out, \"It's okay. I've got it!\"\n\nBy the time Mike showed up at 7pm, Brandi felt like she was back in high school and ready for the prom in a brand new dress, her hair, makeup, and nails all done to perfection.\n\nHer parents told her she was beautiful, as did the babysitter, and when Mike saw her the smile on his face said it all.\n\n\"Wow. You look...sensational!\" he told her as he handed her a bouquet of flowers.\n\n\"I won't if my mascara's all over my face,\" she replied as tears welled up in her eyes again.\n\n\"No crying tonight,\" Mike told her as Brandi tried to take in just how good he looked, too.\n\n\"Speaking of 'wow', you look amazing in a jacket,\" she told her attractive date.\n\nMike laughed then said, \"Thank you, and I hope you're okay with me not wearing a tie. I have a very strong aversion to those things.\"\n\n\"No. You...you look very handsome,\" she told him.\n\n\"You ready?\" he asked.\n\n\"Let me just put these in some water and we can go.\"\n\nBrandi's mother intercepted her and said, \"I'll take of those. You just go and have a wonderful time, okay, honey?\"\n\nTrying hard not to be overwhelmed yet again, Brandi picked up the beautiful new coat and purse and told Mike she was ready. He helped her put it on then opened the front door and said, \"After you.\"\n\nMike did most of the talking on the way to the restaurant. That wasn't because Brandi didn't feel like talking, it was more that she was still having a very hard time accepting that she was actually doing this. The clothes, the makeover, the babysitter, the flowers. And now dinner. And all with a man she not only found attractive, but one she now feared she might be falling in love with. And were that to happen, and were he to abandon her and her boys...\n\n\"Ah, there it is,\" she heard Mike say.\n\n\"Noah Grant's Grill House and Oyster Bar,\" Brandi read out loud.\n\n\"Oh, wow. I didn't even ask. Do you like seafood?\"\n\n\"What? Are you kidding? I love seafood!\"\n\n\"Then you're in for a real treat,\" Mike told her as he parked the car then ran around to get her door.\n\nIt was still freezing cold outside, so Mike put an arm around her and sheltered her the best he could. The wind wasn't blowing, so at least Brandi didn't have to worry that her hair would be a mess before they even sat down.\n\nAn hour later she'd had some of the best blackened salmon she'd ever tasted along with a couple of buttered sea scallops and even a raw oyster. She'd never tried them, and after Mike insisted, she slurped one then shuddered.\n\n\"That's...disgusting!\" she said as she reached for her drink.\n\n\"It's...an acquired taste,\" Mike told her, trying to sound all 'high and mighty'.\n\nBrandi laughed happily and told him that was a taste she would never acquire.\n\nBut as their server refilled her champagne glass, she said, \"Now this, however, is a very different story.\"\n\nMike had his refilled, too, then proposed a toast.\n\n\"To...chance encounters?\" he said as he raised his glass.\n\nBrandi understood and realized that had she not been involved in the accident, she'd have never met this amazing man.\n\n\"Yes. To chance encounters,\" she repeated, forgetting for the first time that she was the mother of three small boys.\n\nAs they drove home, Brandi took Mike's hand and thanked him for what was at least the third time for a wonderful evening. And for as many times he told her it was his pleasure.\n\n\"I'd forgotten what it was like to have a life outside of my boys,\" she said. \n\nBefore Mike could reply, Brandi told him, \"Not that I want any other life, mind you.\"\n\n\"I understood,\" he replied. \"But do you maybe think there might be room in your life for maybe one more?\"\n\nAs another first, Brandi let herself begin believing that Mike might not run away and smiled at his question before answering it.\n\n\"If that other person is you, I think I could probably squeeze him in.\"\n\n\"Yeah?\" he replied with a smile as he kissed the back of her hand.\n\n\"Uh-huh. If, of course, there's room in his for four others.\"\n\n\"There is,\" he told her without hesitation. \"In fact, there's more than enough room in my life...and in my heart. For all of you.\"\n\nHer resolve was already waning, and she had to ask him something.\n\n\"Mike? I am forever grateful for all you've done, but there's something I just don't understand.\"\n\n\"Then ask me.\"\n\n\"I'm almost afraid to ask, but I'm more afraid not to.\"\n\nMike reached for her hand then told her she could ask him anything.\n\n\"How can you possibly want to get involved with me and everything that goes with that?\" she finally got out as kindly and gently as she knew how.\n\n\"Ah, okay. Now I understand,\" he told her with a warm smile.\n\n\"Let me see if I can explain. You're the easy part. You're a beautiful woman. But were you only beautiful on the outside, I'd have checked in on you once at the hospital and never looked back.\"\n\nBrandi's eyes were filled with hope as she listened, wanting to hear something that might convince her this was real.\n\n\"But you're also an amazing person. I don't know much about you before we met, but my instincts, which are pretty darned good, tell me you're a very special person.\"\n\n\"Okay, but that's only one-fourth of the...equation.\"\n\n\"You didn't let me finish,\" Mike replied, still smiling.\n\n\"The boys are...well, the way I see it anyway...they're my future. What I see when I look at their little bald heads and almost toothless smiles are three grown men graduating from college or maybe becoming police officers or some other kind of professional. I see years of fun playing sports and video games with them. I see teaching them to ride bikes, going fishing, and playing catch in a big back yard.\"\n\nMike laughed a little then said, \"Well, not so much in the winter, but you know what I mean, right?\"\n\nHe squeezed her hand then told her he saw her boys as a huge plus in his life.\n\n\"But wouldn't you want children of your own?\" she asked.\n\nIt was a very legitimate question, and Mike treated it as such.\n\n\"In my mind, they would be mine. Not biologically, but why should that matter? Isn't being a dad about being there for the child rather than sharing DNA? No offense to your husband, but he gave them half of their DNA, and he wants nothing to do with them.\"\n\nMike leaned her way a little then said, \"Brandi, I want to be with them. I know we have a long way to go ourselves, but if you feel like I do, then it's just a matter of time.\"\n\nWhile deep in the recesses of her mind, Brandi knew this could still possibly be some kind of...con game...she couldn't think of a reason to run this con on her. She had less than no money and three screaming sons. So the only logical conclusion was that this very attractive, older man really did want to be with her. And more importantly, with her boys.\n\n\"How...do you feel about me?\" she asked, her hopes now soaring.\n\n\"I think about you all the time. I imagine us together in a big old house raising our three little boys with the goal of one day seeing what I just described to you.\"\n\n\"But is that what you really want? Being home and raising kids?\" she asked, still kind of struggling with that one remaining issue.\n\n\"Yes,\" he said immediately. \"I'm 37 years old. I've been in quite a few states and several different countries, and traveling doesn't really interest me. I have a good, steady job that pays pretty well. All I need is a house and a family to fill it. And you're the only woman I've met since my divorce that even interests me.\"\n\nHe leaned over and kissed her then said, \"And I'm very interested in you.\"\n\nHe saw her eyes moving rapidly between his and asked, \"May I ask how you feel about me?\"\n\n\"That's easy. I...I think about you all of the time, too, Mike. And I also dream about us in a nice house raising our boys. But until now I've been afraid to call it anything but a fantasy.\"\n\n\"I'm not rich, Brandi, and I never will be. But I've saved a ton of money since the divorce. I ready to move on to the next chapter of my life. And again, my gut tells me that involves you and three tiny little future men named Liam, Noah, and Elijah.\"\n\n\"Mike?\" Brandi said very quietly.\n\n\"Yes?\"\n\n\"You're making me fall in love with you. You do know that, right?\" she said very sweetly.\n\nMike smiled a broad, happy smile then said, \"Really?\"\n\n\"Yes. Really.\"\n\nHe did a small fist bump and quietly said, \"Yes!\" causing Brandi to laugh.\n\n\"I love when you smile,\" she told him as she squeezed his hand.\n\n\"You, too...beautiful,\" he told her before kissing her again just as their server walked up.\n\n\"Oops!\" Brandi said when she saw the other woman politely waiting.\n\n\"No. Take your time. If I had a boyfriend that handsome, I'd kiss him, too,\" the woman said in a way that didn't sound flirtatious at all.\n\n\"He is kind of handsome, isn't he?\" Brandi replied without taking her eyes off of Mike.\n\n\"No comment,\" the woman tactfully said before asking if she could bring them anything else.\n\n\"No. I have everything I need right here,\" Brandi told her as she smiled at the man she was indeed falling in love with.\n\nAn hour later they were on their way back to the Cromwell's when Brandi said, \"I had a wonderful time tonight, and now I kind of feel like Cinderella returning from the ball.\"\n\n\"Then let's hope this vehicle doesn't turn into a pumpkin,\" Mike jokingly said.\n\nBrandi took his hand then told him, \"No one has ever treated me like this before, Mike. Ever.\"\n\n\"I can't promise you champagne and roses every night, but I can promise you love, loyalty, and all of my devotion,\" Mike told her.\n\n\"What girl could ask for anything more?\" she said in reply.\n\n\"Oh, I can think of at least one girl who could,\" Mike quipped, clearly referring to his ex-wife.\n\nBrandi signed then said, \"In the past, I was selfish. Not in the sense of not wanting to share things but in the sense of only wanting what I wanted. That's how I ended up running off with a lazy, good-for-nothing man who won't take responsibility for anything.\"\n\n\"That's all behind you now,\" Mike reminded her.\n\nBrandi smiled at him and said, \"Yes. Yes, it is.\"\n\n\"I wish I could invite you in and...ask you to stay,\" Brandi said almost sheepishly when they got to her parents' house.\n\n\"There'll be time for that,\" Mike told her sincerely. \"That's the least of my concerns.\"\n\n\"Mike? I...I just wanted to tell you how thankful I am again. For...for everything.\"\n\n\"My pleasure, and...me, too,\" he said back.\n\n\"I should probably get inside, huh?\"\n\nMike reached into his jacket pocket and handed Brandi an envelope.\n\n\"This is for the sitter. Please thank her for me, okay?\" he said, knowing her mom would be coming to pick her up.\n\nThere was a hundred-dollar bill inside, and Brandi winced at that amount of money being spent on a sitter. And yet she knew they were lucky to find someone to care for three small, often-screaming boys for that long.\n\n\"I will,\" she promised. \"And thank you for dinner. And the dress. And the shoes. And...\"\n\n\"You're welcome,\" Mike said, stopping her before she could add to the list. \"And please know it makes me very happy to do things like that for you, okay?\"\n\nMoved nearly to tears again, all his date could do was say, \"Okay.\"\n\nFinding time to be alone with Brandi was a huge challenge, but one Mike never worried about. It was awkward seeing her at her parents' home, but as the weeks passed, little hints here and there seeped into the conversation that told him they both liked him very much and approved of him seeing their daughter and grandchildren.\n\nNearly two months had passed since their night out when Brandi's husband called her out of the blue.\n\n\"Well, you should be very happy. I got served yesterday,\" he began. \n\nHe laughed his snarky laugh then said, \"I guess they had a helluva time finding me.\"\n\n\"Oh. Okay,\" Brandi replied, too nervous and afraid to think.\n\nThe call itself was a huge surprise, but not as big as the offer he was about to make. He told her he would not only not contest the divorce, he also said that if she wouldn't ask for child support, he'd sign over his parental rights.\n\nMike was there but never spoke. He only whispered to Brandi, \"Tell him you'll think about it,\" which she then said to her future ex.\n\n\"The divorce will be final in less than 60 days,\" Mike told her after she hung up. \"And that's independent of what you decide about the child support.\"\n\n\"But that's a lot of money, right?\" she asked, not having thought it through.\n\n\"Only if he has money,\" Mike gently told her. \"Does he?\"\n\n\"No. He almost certainly doesn't even have a job.\"\n\n\"You've heard the old saying about not being able to squeeze blood out of a turnip, haven't you?\"\n\nBrandi laughed then told him she had.\n\n\"Well, he's the turnip.\"\n\nMike paused then said, \"From what little I know, that's true in more ways than one.\"\n",
        "Brandi laughed and told him she agreed.\n\n\"And money is the blood you'll never squeeze out of him. You might be able to get him thrown in jail, but you still won't get a dime out of him.\"\n\n\"So you're saying I should accept the offer?\" she asked.\n\nMike smiled then got up and stood in front of her.\n\n\"I was waiting for our next night out, but I can't think of a better time than right now,\" he said as he reached into a pocket and produced a fuzzy, blue box as he got on one knee before her.\n\n\"Oh, my...\" Brandi said as her hands began to tremble.\n\n\"Brandi? Honey? I realize the divorce isn't final yet, but I think you should accept his offer...and I hope you'll accept mine, too. You see, it'll be easier to accept his if you accept mine, because I promise you I will always be there to support you and those three boys of yours. Our boys.\"\n\nBrandi was now crying, and that brought first her mom and then her dad. They stayed far enough away to give them some privacy, but they couldn't not see this once they knew it was happening.\n\nLisa was now crying, too, and Tom had his arm around his wife's shoulder, a big smile on his face.\n\n\"I told you he was a great guy,\" Tom whispered as Mike finished proposing.\n\nNeither of them heard another word other than a very loud, \"YES!!\" from their daughter who pulled her fianc\u00e9 on top of her and kissed him on the couch.\n\nWhen they came up for air, Tom and Lisa began clapping and that caused Mike to turn around and Brandi to quickly sit up and smooth her hair as though she was still 16.\n\nBefore she could explain herself, her mother ran over and hugged them both. Tom didn't even bat an eye when his wife kissed Mike on the mouth before hugging him and telling him she loved him.\n\nAs she turned to her daughter to congratulate her, Tom shook Mike's hand har and congratulated him heartily.\n\n\"Thanks, Tom. But I'm the lucky guy here,\" he said to his future father-in-law.\n\n\"We're all lucky, Mike. Especially those three little boys who have no idea they just won the lottery.\"\n\nMike laughed then said, \"Again, I beg to differ. I feel like I'm the guy who hit the jackpot.\"\n\n\"No. That's me,\" Brandi said, as she looked at her father while leaning up against the man who'd rescued her and then saved her. \n\n\"I nearly ruined my life by ignoring the advice of the smartest man I know and running off with the dumbest man I know; a man who never really loved me. It didn't take long for my foolishness to prove that wise man right, but because he's also a man of true character, he forgave me and let me come home.\"\n\nShe then turned to her handsome fianc\u00e9 and said, \"And if that wasn't enough of a miracle, what could have been a fatal accident turned into the best thing that ever happened to me.\"\n\nShe put her arms around Mike then said, \"And possibly even more so to our boys who'll grow up with two loving, devoted parents, and a man who will be an amazing role model for them.\"\n\nTom suddenly realized the boys had been silent the entire time.\n\n\"Well, would you listen to that,\" he said as he cupped his ear.\n\nEveryone chuckled before Tom suggested they all go have a celebratory drink while the peace and quiet lasted.\n\n*****\n\nTen years later\n\n\"Okay, so what do you do if there's a man on first base and the ball's hit to third?\" Mike asked his 11-year old boys.\n\n\"Ground ball or line drive?\" Noah wisely asked.\n\n\"Someone's been paying attention,\" their dad said before asking Liam what to do if it was a grounder. After getting the correct answer he asked Elijah about the line drive.\n\nSatisfied they got it, he hit a sharp ground ball to Liam at third who smoothly fielded it then pivoted and threw to Noah at second who did a spin jump and threw to first.\n\n\"Yeah! That's it! Nice work. Double play. Okay, bring it in, guys!\"\n\nThe boys couldn't help but smile when their one-woman cheering section clapped, whistled, and hollered, \"Them's my boys!\"\n\n\"Nice work, boys,\" Mike told his sons. \"I'm proud of you. All three of you.\"\n\nHe pulled them in for a group hug, and without prompting, Liam said, \"I love you, Dad.\"\n\nThe other two then told him the same thing, and the police lieutenant had to fight off tearing up as his wife walked over and said, \"I love you, too, honey.\"\n\nAs Brandi Simms joined the four 'boys' she loved more than life itself, the one-time Solitary Man knew he'd found his calling in life. \n\nRaising three young boys he'd adopted 10 years earlier was the most challenging and rewarding thing he'd ever done, but Mike Simms knew he wouldn't trade a minute of it for anything on earth. And loving their beautiful mother was a joy he'd never dared even dream of before that cold winter's day when he was on his way to McDonalds.\n\n\"Hey! Who wants an egg McMuffin?\" Mike suddenly called out without explaining why as the circle broke.\n\n\"Me!\" all three boys hollered back.\n\n\"Can I have sausage with mine?\" Noah asked as Liam said he wanted ham and Elijah asked if he could have two.\n\n\"See what you got yourself into, Lieutenant?\" his pretty, young wife asked with a smile.\n\n\"Yep. And it's about as close to heaven as a man can get here in this life, honey,\" he said as he turned toward her and kissed her while the boys picked up the rest of the gear scattered around home plate."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older man",
        "younger woman",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/solitary-man"
}