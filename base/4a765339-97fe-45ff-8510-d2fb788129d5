{
    "title": "Lost Empire Ch. 49",
    "pages": [
        "0001 - Tempro\n\n0003 - Conner\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship) - Derrick\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0908 - Tara - Mara\n\n0999 - Zan\n\n1000 - Sherry - Lucie (for the moment)\n\nLooking at the charge on the holo/micro shield projector Derrick sighed as he leaned over the man he'd snapped the neck of. Pressing all three buttons twice a beam shot out scanning up and down the dead man's body. Pressing another combination, Derrick's appearance changed to that of the dead man even as a huge number of men came through.\n\n\"Ya see 'er?\" The man in the lead asked. Derrick just grunted shaking his head no. \"C'mon she's no get far.\" The man said egging the other men on. Leaning over the leader whispered to Derrick, \"When ya see her kill 'er nice 'n quick!\" The leader laughed as he went after the rest of the group. Laughing the men moved off.\n\nDerrick breathed a sigh of relief as he watched the violent group of men move off. Shit! What was he going to do? Tempro was the only one that had the power to retrieve him. Shelby had power though he'd have to get further from the palace before she could use her IMT. Shaking his head this reminded him of when he had been back in Gregor's time.\n\nDerrick stopped a moment, was there a way that he could risk it? He had both sets of codes. Sighing he nodded his head yes this appeared to be the only way. It would be almost a day before all the counter measures he'd entered into Tempro to take complete effect. I knew I should have entered them sooner.\n\nShaking his head again Derrick slowly made his way further toward the palace, further into the midst of the ongoing battle.\n\n[Sire where are you going?] Derrick heard Tempro's thoughts.\n\n[I have to get within the palace, it might be the only place I will be safe. At least 'til such time as all the protocols I reset in you take effect.] Derrick thought back to Tempro.\n\n[I understand that Sire, though I would advise against it. You aren't known to either side as a matter of fact you can't be known. As far as they all are concerned you are the enemy. I feel that neither would hesitate to terminate you. Please Sire, reconsider this course of action!] Came Tempro's frantic thoughts.\n\nSighing Derrick stopped a moment. [I am a target no matter where I am, at least within the palace I'll be less at risk especially when Mary enacts emergency shutdown, protective cover solution.] Derrick looked at his chronometer. [If I'm not mistaken that should take place in an hour or two.]\n\n[Yes Sire, though 'til such time it is extremely dangerous there. Mary won't recognize you without a DNA test, even with the codes.] Tempro told me.\n\nA wry smile appeared on Derrick's face. [I guess she'll have to perform one. When she finds that I am who I say I am then I can just order her to delete the information.] Derrick said.\n\n[Sire, are you sure she will?] Tempro asked.\n\n[Oh I'm very certain your mother is nothing if not loyal. Though I will have to word it exactly what I need her to do.] Derrick thought.\n\n[Do you wish for me to word it for you so there are no mistakes?] Tempro asked.\n\n[I do believe that will be a good idea. In the mean time how long before you can use the IMT?] Derrick asked.\n\n[Even as we think, the counter measures are reverting everything back to normal. I am afraid that as you thought it will be almost a whole day before I can effectively use the IMT!] Tempro told Derrick.\n\n[Alright just keep working on it for now I have to get to the palace before Mary closes it off.] Came Derrick's urgent thoughts as he quickened his pace toward the palace.\n\n______________________________\n\nKimison and Rayburn both gave a great sigh when they saw history change back towards what they knew it should be. \"Empress?\" Kimison said as he turned toward Shelby. \"It appears that we were successful. Everything up to five hundred years ago is now as it should be. Now reading changes in time two hundred years ago. Shit!\"\n\nShelby jumped up looking over both men's shoulders. Damn it! It appeared as if Derrick was in the midst of the last two days of the empire! \"Has he managed to change anything yet?\" She asked.\n\n\"At first it appeared that all were killed when the palace fell. A moment ago that changed when the Empress and her son disappeared from the palace. Much has changed though for the moment there is nothing of her ever being found!\" Kimison snapped his head to look at Rayburn. \"You think that the additional data has confused Tempro?\"\n\nRayburn was typing furiously then suddenly stopped. \"It appears he didn't get enough.\" Looking at Shelby, Rayburn said. \"I'm afraid that we need to send another data burst.\"\n\n\"You both do realize that the last we sent damn near burned out the redoubler. Not just on Celeste but the others also. If we do this again we will have to completely synchronize ALL the ships to keep this from happening.\" Shelby told both men.\n\nBoth of them smiled as they looked at each other. \"I don't think that will be a problem. Well, as long as we can link to all of them. You see Rayburn and I already have a link.\"\n\nShelby nodded she'd thought that they moved and thought too close to what the other was, NOT to have a link. \"Alright, I am trusting the two of you. Bring the emperor home!\"\n\n\"Yes your highness!\" They both said as they started back in typing, calculating.\n\n_______________________________\n\nGreeson had relieved the man watching the Duke hours ago. It wasn't that he didn't trust the men and women under him, far from it. He didn't trust the Duke as far as he could throw him, preferably out an air lock. Greeson smiled at his joke, he hoped that whoever did get to kill the bastard did it slow and painfully.\n\nA moment later the Duke started to yell again. \"Let me out! You are holding a high ranking noble of the empire. I will have you whipped to death. Whipped 'til the flesh is hanging from your bones! You there I said...\"\n\nGreeson growled as he opened the outer door. Closing it he opened the inner door. A fist was flying at Greeson as he started to laugh, it was in slow motion! Moving behind the Duke Greeson tapped the man on the shoulder. Even as the Duke was turning \n\nGreeson clipped the Duke up side his head, effectively knocking the man to the floor.\n\nPutting his foot on the Duke's throat Greeson growled, \"You are nothing! The Emperor has all that you did, the money that you paid the sect! Your voice inciting the aliens to invade! All your doing. The only thing you can look forward to is dying, you piece of scum! Now shut the hell up or would you prefer I numb your throat so you can't talk?\"\n\nWhen the Duke looked up at Greeson his eyes went wide as he recognized the man that had captured him.\n\n\"Well? You were talking your head off a moment ago. What's it going to be? Quiet or no voice?\" Greeson growled.\n\nAgain the Duke's eyes went wide as Greeson drew back his hand. Placing his hands over his mouth Greeson smiled.\n\n\"Good! See how easy that was?\" Leaning close Greeson whispered. \"No one is going to help you. All the people here are fiercely loyal to the Emperor. So I suggest you stop trying to bribe them.\"\n\nWalking to the door Greeson walked through it as the Duke attempted again to render Greeson unconscious. Shaking his head, the Duke's face met Greeson's fist, then a hand appeared from nowhere knocking him back into the room, out cold.\n\n____________________________________\n\nDerrick had been weaving his way closer to the palace though he wasn't quite there yet. Damn it! Looking at his chronometer he didn't have much time! Twenty minutes later he was finally within the palace grounds, he still needed to get inside though. Creeping along he finally made it to the wall, pressing several places he watched as a door opened.\n\nBreathing a sigh of relief he stepped inside. Waiting a moment Derrick nodded when no alarms went off. So far so good he thought. Now all I have to do is get to Mary before she blasts the hell out of me. Smirking he thought, 'then there was what was left of the palace security also.'\n\nMoving as quickly as he could, Derrick went as far and deep as he could. Listening at the door he wasn't sure if it was safe or not. Peeking out he saw the massive destruction that had been done due to the battle.\n\nCreeping out, he was almost to the computer room when a voice stopped him cold.\n\n\"I suggest that you stop right now. I don't know who you are nor do I care. Just know that you are about to die!\" The cold voice told him.\n\nDiving behind a statue Derrick started to finger the holo projector. Hope this works Derrick thought, the charge is at twenty five percent. Not sure if the shield could stop an energy weapon.\n\nSitting not moving Derrick heard the tall, muscular, security officer move toward him. There was a gasp then the man was saying with confusion, \"Your highness! I thought a rebel was here. I apologize for not recognizing you! We need to get you to safety!\" With that the man held out his hand to Derrick.\n\n\"Take me to the computer room. It has higher defenses than anywhere in the palace!\" Derrick said surprising the man.\n\n\"But Highness! It is too dangerous to stay here! May I suggest...\" The man protested.\n\n\"No, take me there now!\" Derrick said forcefully.\n\nNodding the man bowed and led Derrick toward the computer room. Derrick had just stepped in when the security man went down bleeding from his chest. Pushing Derrick the rest of the way in, the door sealed.\n\nA moment later Mary's hologram appeared. \"Empress I... , intruder alert! Intruder alert! You have ten seconds to recite proper codes before you are expunged!\"\n\nTaking a deep breath Derrick recited the codes that Shelby had given him in Gregor's time. \"Sigma, epsilon, chi, upsilon, rho, epsilon, alpha, lambda, lambda. Alpha, chi, chi, epsilon, sigma, sigma. Alpha, lambda, epsilon, rho, tau. Alpha01, Delta02, Delta03, Omega04, Nu05. Enact and transfer.\"\n\nAll was quiet a moment then Mary repeated all that Derrick had just spoken. \"Secondary control has been transferred. Please submit genetic material for deoxyribonucleic acid test to confirm. All security measures have been enacted to seal this room 'til such time as identity confirmation.\" A moment later a vial appeared next to Derrick, there was a quick pinch then it was withdrawn. \"Now commencing test.\"\n\nDerrick nodded as he watched what was going on outside the room and the rest of the palace. Shaking his head grimacing he watched as the security force was steadily overcome. The palace forces were good but the sheer numbers against them were by far too much.\n\nDerrick sat as he could only watch as more and more of the palace came under the rebellion's control. There was a movement next to Derrick then Mary appeared. \"Deoxyribonucleic acid test complete. Results are as follows. All genetic markers indicate within ninety five point five percent that you are of direct relation to the imperial line. Sire,\" Mary said as she bowed low to Derrick causing him to groan.\n\n\"So you are saying that I am related to the emperor? Good then...\" Derrick started.\n\nA startled look came over Mary's face as she shook her head no. \"No sire, you ARE the emperor! The Emperor was assassinated as were almost all known male members of the family. You are the only male member related to the family that is known to be left alive. I have thereby started to shut...\"\n\n\"NO! Do not stop the emergency shutdown, protective cover solution! When the last of the royal family within the palace ceases, then I want you to proceed. I am of no consequence in that respect!\" Derrick was suddenly advising her.\n\nMary seemed to hesitate a moment then stated. \"Yes Sire, continuing all protocols. Sire if these are enacted, I am afraid that you also will cease within a short period of time. I am also afraid that I do not have a name to call you by.\" \" For now Sire will do. Though I am not taking the throne, I am afraid that I will not be here that long.\" Derrick told a startled \n\nMary.\n\nMary nodded as she was deep in thought. \"As I said Sire, I do not know exactly who you are though I am starting to think that you might be out of time.\"\n\nDerrick kept his expression as passive as he could after Mary stated what she had. It wouldn't do for her to learn everything possibly keeping it all stored within her memory. Derrick couldn't really risk her possibly changing something later on in the next two hundred years.\n\nTurning back towards the monitors Derrick grimaced even more. A second wave of rebels was sweeping into the palace even stronger than the first. Derrick could only shake his head there had to be thousands of the rebel dead out there. Still they were coming like an unending wave of humanity deeper into the palace.\n\nFinally a small group of the palace security was making it way toward the computer room. Derrick tensed up shaking his head he knew they wouldn't make it. Then tears started to fall as he watched the small group as it was ambushed. Unmercifully the rebels killed the group, firing several shots after they had all fallen.\n\nGrowling Derrick nodded his head as his fingers flew over the keyboard in front of him. A moment later he heard several shouts then high pitched screams as all the rebels in the hall way went down.\n\nA steady tone caught Derrick's attention then Mary's voice could be heard. \"Emergency shutdown, protective cover solution now enacted. All persons within the palace and it's grounds have exactly ten minutes to evacuate. Upon termination of time period, all of the palace and grounds will be sealed. Count down commencing now!\"\n\nDerrick nodded as he watched most of the rebels flee the palace. Then he saw a well dressed, tall, older man advance upon the computer room door.\n\nStanding in front of the door the man stated, \"Palace computer. Stop all sealing procedures. Relinquish all control to Duke Krysam.\" Then Derrick watched as the man then dug into his shirt reciting the codes he THOUGHT would work. Derrick shook his head as he started to laugh; the man was in for a very big surprise. Finally finished the Duke stated, \"Now relinquish control!\"\n\nThe visage of Mary appeared before the Duke and the rebels. \"Unable to comply. You now have seven minutes to evacuate. All codes have been rescinded due to primary control being transferred and confirmed. You now have six minutes forty five seconds.\"\n\nTurning, his face red the Duke stared at the leader of the rebels. \"You fool! You let one of them reach here! I should kill you where you stand!\"\n\n\"Ay! We did our job! You were supposed to 'ave all the answers! You're as bad as the rest of the nobles!\" The leader yelled his face twisting into a mask of rage. \"You think you're so good then you stay! I'm not about to tangle with that machine!\"\n\nTurning the leader and the rest started to move off. \"Come back here you scum!\" The Duke yelled even as he pulled an energy weapon shooting the leader in the back.\n\nFalling, badly hurt, the leader started yelling to kill everyone. The Duke's small force was well trained but soon was over come. Dragging the Duke to the dying leader the man lifted his hand. \"Too bad,\" the man said with his dying breath.\" Pulling the trigger the man blew a hole in the Duke's head, a look of great surprise on the Duke's face as he fell.\n\nDerrick smiled as he heard the rest of the men start yelling then watched as they started running for the exits.\n\n\"One minute thirty seconds 'til full measures enacted of emergency shutdown, protective cover solution. Please evacuate the palace and grounds. One minute fifteen seconds 'til enclosure of all.\" Derrick heard Mary's voice say.\n\nDerrick nodded as Tempro's thoughts came to him. \"As soon as you are done Mary I'll need you to IMT me to a certain set of coordinates.\"\n\n\"Of course Sire. Thirty seconds 'til activation.\" Mary replied. Derrick could feel and hear the planetary generators as they started to come to life. \"All systems on line. All persons not outside the perimeter of the grounds are being expunged. I am sorry; all within the palace will be exterminated.\"\n\nEven as he watched the shield he remembered when he first saw the palace started to spread throughout. Nothing in its path was spared as he watched bodies fizzle to nothing. \"Now commencing second section of protective cover solution.\" Mary said as the shield moved outside of the palace slowly advancing outward. Two minutes later the shield stopped at the extreme edge of the palace grounds. \"Secondary protective cover solution now complete. Sire? Shouldn't you try to regain power?\"\n\nDerrick shook his head as he looked over everything. Rapidly typing in commands he looked up when he heard Mary gasp. \"I'm sorry Mary I have no choice.\"\n\n\"Sire? You deleted all public and almost all private recordings of everything dealing with you. The small part you didn't has the strangest encoding. At present I am not even recognizing the syntax it is in.\" A shocked Mary stated.\n\n\"I am sorry Mary; anything dealing with time must be protected. Though in this case I am afraid that it is more than necessary.\" Derrick told her.\n\n\"I see Sire. You remind me much of the first Emperor Gregor. He was as calculating as you are.\" Mary told him\n\nDerrick narrowed his eyes then told her. \"Yes, he was almost to a fault.\" Derrick seemed to stop a moment then nodded. \"The following is to be carried out as soon as you safely IMT me to these coordinates. All conversations you had with me will be deleted; all pictures and videos will be also. All mention of anything dealing with me as an unknown will be expunged also. When I am gone it is to be as if I was never here.\" Derrick walked to the keyboard rapidly inputting more orders. \"I want you to destroy the DNA test now!\"\n\nThe visage of Mary appeared as she bowed. \"All records of you are being deleted now.\" A low level beam shot out over the keyboard, the door, chair anything Derrick had touched. \"All physical evidence has been eradicated.\" Bowing low Mary said, \"It was an honor to serve you Sire even if for only a short time.\"\n\nDerrick nodded as he suddenly flashed out appearing on the command deck of Tempro. \"Are you monitoring her?\" Derrick asked.\n\n\"Yes sire all evidence of you is gone. I can feel Mother going into a standby mode. Now reading time line drifting to what it should be. Excellent work Sire!\" Tempro told Derrick.\n\n\"Drifting? It still isn't where it should be?\" Derrick asked surprised.\n\n\"No sire, if you remember we still have visitors.\" Tempro replied.\n\nSighing, Derrick nodded how could he forget. \"Alright we need to get her to where she has to be. Take us there.\"\n\nTempro nodded as there was a wind up of the engines. Less than a minute later, they arrived out on the edge of the empire. 'Damn,' Derrick thought, 'he knew she was way out, but he hadn't imagined it was this far.\n\n\"I'm afraid that you are going to have to talk to her before we let her go. She wrote much about the man that saved her life though she never knew his name. What she wrote of though let everyone know what happened in the last days. I guess you told her.\" Tempro revealed.\n\nFlashing in at the back of the quarter's section Derrick sighed as knocked at the door.\n\nAn almost shrill female voice sounded from the other side. \"You knock when I am a prisoner?\" Then Derrick heard a huff, \"you can enter!\"\n\nDerrick sighed then nodded to the visage of Tempro. A moment later the door opened with Derrick entering the room. Bowing low Derrick waited for the woman to speak before he started. Sitting the Empress studied the man that entered the room. He almost appeared to be the same as the one she saw right before she appeared here ... where ever it was.\n\n\"So, I am your prisoner even though you rescued me. You are a most impertinent man sir. Doing something noble only to revert to almost an animal!\" The woman spit out.",
        "Sighing Derrick could see that this like the last time with Tara was going to take a while. As patiently as he could with what he could tell her Derrick went into what he had seen while he'd been in the palace. Finishing up Derrick told her, \"I'm sorry that all of this has happened your highness. Your husband's sudden death without passing the codes to his son caused Mary to hesitate. As with the others of the line, they all had such mistrust of the very system created to protect them.\"\n\nThe Empress looked at Derrick then even closer. \"You speak with a familiarity of the family and the royal line. Much of what you have said strikes several chords of memory. So then,\" the woman said sitting up straight. \"What is to become of me and my son?\"\n\n\"All I know is that you were saved and made your way to this outer planet of the empire.\" Derrick told her.\n\nThe woman's eyes narrowed then she nodded. \"I understand you can't tell me of the future, thereby effecting your own life. I go wishing you luck with everything.\" Bowing low she said with a smile, \"Emperor!\" Then the woman and the child both vanished from the ship.\n\nTempro appeared a moment later. \"She is ensconced within the structure Sire. I made sure that she had adequate supplies. I also equipped a small shield for her. I am afraid though that the power is only for a year. I have no reading of her or her son after a year. I'm sorry Sire.\"\n\nDerrick nodded as he turned toward Tempro from the spot where the Empress had stood. \"Yeah I know Tempro; it has to be this way. It always has to be this way.\" Derrick said then whispered. \"At least for now.\"\n\n\"Status on Shelby?\" Derrick suddenly asked.\n\n\"She is nearing completion of her regen cycle. She...\" Tempro started.\n\n\"Actually brother,\" came Shelby's voice. \"I am here. I am close to being completely repaired Derrick. I apologize that it took as long as it did. There was far more damage than I had at first thought.\"\n\n\"Good,\" Derrick said a smile lightening up his face. \"Bout time we had some good news. So am I going to get some from you?\" Derrick asked of Tempro.\n\n\"Going over data now Sire. It appears that the drift is now moving more into correct position. It would seem that the talk you had with her was what was needed to finally set things back to where they should be.\" A now smiling Tempro told Derrick. \"An extremely good job Sire. Almost everything in our time is as it should be or rather almost as it should be.\"\n\n\"Good 'bout time things started to go our way for once. I suggest light cloak 'til such time as Shelby is finished with her regen.\" A now happier but tired Derrick told both of the ships. \"I need to get some rest before we go on any further. Wake me in six to eight hours.\" Derrick moved off toward the quarter's area again, suddenly finding he was standing outside the Captain's Quarters. Smiling Derrick went in lying down asleep almost as soon as his head hit the pillow.\n\nIt was about seven and a half hours later that an alarm awoke Derrick. His sleep had been fitful as he'd heard a few of the ships that were left doing his best not to respond to them.\n\nFlashing onto the command deck Derrick rubbed the sleep from his eyes as he saw a small pirate fleet approaching. Damn it they weren't ready! Tempro didn't have near enough fire power to take this many! \"Shelby? How long?\" Derrick asked.\n\n\"I need two more hours! Derrick there is no way I'll be ready in time!\" Derrick started typing at a furious pace. Shocked a moment he started to type faster. Looking up he saw the pirate fleet as several ships exploded. Then several more! There was an trans-warp flash then twenty more ships exploded. Within minutes all the ships were debris. Smiling \n\nDerrick nodded then started to type instructions to Tempro. Nodding Tempro emitted a blue wave moving into it.\n\nDerrick watched as the past Tempro, Shelby and his self entered the red wave. Well past as he thought of it. \"Alright Tempro moving to dock, set for our time.\"\n\n\"Affirmative Sire coordinates set, moving to dock.\" Tempro stated.\n\nAs they shut down Derrick sighed now they could finally go home! \"Great job Shelby! I just hope we can get all the way home this time.\"\n\n\"I am hoping also Derrick. I miss my children as I do mother and the Empress.\" Shelby told him.\n\nDerrick flashed to the command deck looking everything over when a thought hit him. Stepping to the control keypad Derrick started to type at an almost furious and desperate speed. With a smile he sat as the Tempro emitted a red wave then was moving into it.\n\nAs space went dark Derrick said a silent prayer as they moved forward. A mere two or three minutes later they emerged near a freighter. \"Sire?\" Came Tempro's concerned voice. \"We seem to have stopped five to six years before our present time. I am not reading anything that needs to be corrected. SIRE! I am reading a system failure with the freighter in front of us! It appears that the structural integrity is failing with the pressure hatch! Failure imminent!\"\n\n\"I know Tempro! I think it's about time we fixed a few things in our time!\" Derrick said as he watched intensely then the hatch failed as a body was blown out of it. \"Move to intercept!\" Derrick yelled. A moment later a tall man was gasping for breath as Derrick lowered him to the floor. \"It's ok Sergeant, I got you!\n\nThe man was still gasping for breath suddenly stopped looking up into the eyes of Derrick, \"Co ... Commander? But how?\"\n\n\"That's a long story. Got a proposition for you Sergeant Norman. You in?\" Derrick asked a wide smile on his face."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-49"
}