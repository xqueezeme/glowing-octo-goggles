{
    "title": "A Tale of Revenge Ch. 14",
    "pages": [
        "So I hadn't fully realized that there were two cliffhangers in a row. Hopefully this chapter helps everyone tired of being out on the edge. It's also my favorite. Enjoy!\n\n Ch. 14\n\nHe couldn't scream, not again. The sound of it made him furious. Even with all this agony, the violation and indignity of the man's rutting, he had been denied the sound of his own pain. Instead every time a sound emerged from his tortured throat it sounded like her, that bitch who had left him here, encased in her skin. \n\nThe man behind him finally finished, again, and pulled out of his beaten body. He chuckled and slapped Orlith's ass. \n\n\"I was nun so pleas'd to 'ear I couldna split your cunny, but I must admit to enjoyin' this all the same.\"\n\nOrlith groaned, the feminine sound deepening his hatred further. The large man whistled a tune as he rummaged around behind Orlith's back. Fucker, Orlith cursed mentally, having been deprived of words as well. He had taught this man half of what he knew, despite the fact that the big oaf was dumb as a brick. He had even encouraged the idiot's love of employing his skills on women. Orlith struggled to speak again, \"Cooper, it's me, stop this.\" All that emerged was a low moan, Anna's moan, a sound that had once made him hard and eager. \n\nThe jailer appeared before him, an evil grin on his face, \"Do that once more fer Cooper, sweet thing, let me 'ear ya 'gain.\" Orlith shot him his most withering look but the man was already licking his lips and glancing down the feminine form he saw before him. \"Yer gonna wear me out, girl. I got a job t' do on ya, y'know.\" \n\nOrlith screamed his frustration into the man's face; the big man just smiled wider and pinched his nipples so hard it made him arch his back trying to relieve the pressure. Cooper simply twisted the nubs in his fingers until Orlith was sure his skin would rip off. Orlith was panting when he was finally released; the large man chuckled as he moved away again. \n\nHe had been through worse, he thought. He had endured the monastery for years on end, as a child no less. This would be no different. He could hear Cooper dragging something heavy across the floor. Orlith closed his eyes and retreated inwards, finding the sanctuary he had created all those years ago. The pain, the indignity, the frustration, all of it felt more distant, like he wore it on the skin she'd forced on him, and he wouldn't let it penetrate to his person. It was Anna being tortured, not him. The pain faded, the room with it. He would remain apart.\n\nThe burning hatred for the cunt surfaced again. He would find a way to bring her to heel. He had seen her almost break so many times. Even this last time, he knew she was just moments from crumbling. He only needed to endure until he could get to her again. And when she did submit it would be all the sweeter. The thought gave him solace, again bolstering him against Cooper's inelegant torture. He knew exactly how the man would proceed and none of it scared him. He would endure. And he would rip the man's throat out. \n\nAnd then the things he would do to her would not equal a fraction of what he had managed before.\n\nThe chain slackened for the first time in hours. His arms were still chained but his feet finally rested completely on the floor. He opened his eyes to see the basin in front of him, the water black in the torchlight. He eyed it impassively. \n\nCooper released the chains completely, and Orlith crumpled to the floor, the weakness in his limbs more profound than he'd thought. The man dragged him to the edge, whispering words Orlith ignored as he shoved his head under the water. At first the veil of distance remained intact and Orlith felt more removed than ever from the body twisting in the water. But the burn of his lungs, the panic of a brain denied oxygen set in, and he could not remain separate. Over and over Cooper shoved his face under the surface, never allowing him a moment longer than absolutely necessary to breathe. Distantly, Orlith recognized his own lessons on the intensity of torture. \n\nThe last time Cooper shoved him under he was still desperately inhaling and the water rushed eagerly into his lungs. He thrashed, coughing reflexively and inhaling more liquid, the dark spots in his vision closing in too quickly. By the time Cooper dragged him from the pool he was barely aware of the liquid running from his mouth, the desperate inhalations only half effective. \n\nThe big man left him there as he passed in and out of consciousness, memories long since buried haunting the darkness behind his eyes. How long he hovered there he could not be sure, the sounds of old screams ringing in his ears. A strange shape started to coalesce until it looked like a man. The austere face before him was so familiar he could not muster up surprise to see it floating before him as he came back to himself on the floor of the dungeon. \n\n\"Rise, my son,\" the man said, holding out a ghostly hand for him. Orlith groaned, unsure but he reached for it all the same. It was his own hand he saw as he grasped the offered support, and when he was pulled to standing he looked down at his own body once more, the hateful witch's magic gone from him. He felt stronger, as if the man's grip was strengthening him as he rose. \n\n\"How,\" he began, looking around the small room. Cooper was gone, the basin as well. \"Am I dead?\"\n\nThe man smiled, \"No, Orlith, you are very much alive.\"\n\nOrlith gaped. \"What? Why are you here?\"\n\n\"You are a child of the North who wandered away from the path. Now I've come, just as you learned I would.\" \n\nOrlith shook his head, confused. Disbelief warred with his senses, this could not be, and yet it was. In his early years Orlith had cultivated a well-deserved hatred for those around him, and it had followed him even when he escaped the land of his birth. But that hatred was based in the knowledge that those men were liars and sadists who invented stories to justify their licentious tastes. The man before him was a myth, just one of the many creations they used to keep their flock in check. \"It's not true. None of it is. They were lies.\" Orlith stumbled back from the man before him. \n\n\"It is alright my child,\" the man said, stepping forward and raising his hand to his cheek. \"Much of it was lies.\"\n\n\"You are Jakob, the shepherd of the Dark God, the one who brings him the disbelieving dead to be devoured.\" Orlith shuddered as the words of his youth flowed from his lips, the lessons he had rejected resurfacing so quickly it was as if they'd never left. \n\n\"The Dark God is a lie, Orlith Mortok, a fabrication of the monastic orders in the North. But I serve a God more powerful than they can dream of, and he has sent me to you.\" The tiniest smile flitted across his stern lips.\n\n\"You waged battles in his name, you brought the mountain ranges to heel for the glory of Death and those who serve him,\" Orlith sputtered. He felt unsteady, his body shook with exhaustion and his brain tumbled violently with overlapping, contradictory claims. The order ruled the frozen mountains in the North with a strong hand, secluded as they were from most of the kingdom. Those chosen to join the monks, the most promising young boys, were taught that pain was a prelude to death and a supplication beloved by their god. Orlith had been left with them as a boy in order to save his older brother, a crime he had made his mother pay for before he left for the capital.\n\n\"I did,\" Jakob said. He seemed to glow slightly in the dank room but the hand that rested on Orlith's shoulder was solid and weighty. \"And I did so for the Dark God, only near death did I learn that there was no such deity.\" He looked deeply into Orlith's eyes. \"But that does not mean there are no gods, and my master is one such being.\" \n\nOrlith shook his head, his eyes wide, still confused. \"Why did he send you? If it is not my desertion that must be punished what does he want?\" The small boy who had kneeled before the imposing altar was still terrified even after all these years. Jakob's name had been spoken in hushed tones, a threat and promise to those who tried to escape. \n\n\"You are to suffer, my child.\" Jakob's voice was almost pleasant and Orlith nearly misunderstood him. The ghostly man grasped Orlith's wrists and pulled him with inhuman strength back to the chains that hung from the ceiling. Orlith was still slow, his reactions dimmed by the torture and Jakob's revelations. Before he could think to struggle Jakob had him secured to the chains, his body stretched and open for punishment.\n\n\"No!\" Orlith twisted in the chains, but it was too late. Jakob, the hero of the order, the man whose painted image had looked down on the boys as the monks had strung them up just as he was now, whose stern countenance witnessed each time the whip or cane was brought down on them, faced him once more. Orlith's sanctuary crumbled, his quiet away from the pain he had suffered for so many years, vanished. \"It is a lie! You said so yourself. There is no lord to drink our pain, no Dark God who wishes to feel the suffering of those living who long for his embrace.\" Tears he had not shed since the first year in the monastery gathered in his eyes. \n\nFor the first time since he was small, Orlith was afraid.\n\nJakob nodded, \"That is true. But my master calls for this. And I, who have seen into your heart, am happy to fulfill his wishes.\" Jakob's hand slid up Orlith's flank until he found the tender spot where Anna had cracked the bone, and he dug in. Orlith gasped in pain, writhing within the confines of the restraints. \"You are to suffer until you plead for death, and then I will heal your wounds, and then I will do it again.\" Orlith saw no shred of pity in the man's face. \"In the end, your fate is in her hands and I will leave you with those who live,\" Jakob reached for the whip, \"but until then, we have much to accomplish.\"\n\n*\n\nLeonid paced the sorcerer's bed chambers. Emera had seated herself in one of the room's large chairs. She watched as his feet traced the same path across the ornate rugs, over to the stones at its edge, back to the window and then finally along the side of the bed. Leonid's eyes ran over the girl's sleeping form again, his fingers twitched as if he were about to reach out to her, and then he stopped himself, continuing his circuit over towards the roaring hearth. \n\n\"Leonid, please,\" Emera said finally. \"Sit down.\" \n\nHer brother turned to her, his face tight with worry. And then, a moment later, it was smoothed away, the god who had emerged with her a millennia ago the same as he'd ever been. Leonid moved fluidly into the chair at her side, his body relaxing convincingly.\n\n\"Are you satisfied with The Five's decision?\" he asked, placing the tips of his fingers against their counterpart on the other hand. \n\n\"Her punishment would have been more severe if you had been there to plead the case with us. As it was she is merely banished, by no means thwarted fully from trying again,\" Emera said, her eyes flashing at him. He knew her well enough to know she was annoyed that he'd left, but she was unsure enough of his state that she was not going to push him now. \n\n\"She will find other ways to entertain herself, I'm sure,\" Leonid said with a sigh. His gaze was drawn back to the sleeping form on the bed. His power ran over her body again, checking her for any lingering injuries, despite having checked her this way a hundred times since the day before. \n\nEmera's gaze was intense as she studied him, searching for cracks in the facade. \"What called you away that was so urgent you had to leave the proceedings in my hands? The Five did not enjoy feeling like you'd slipped away. Whatever you said to them before you called us in had them,\" she paused, searching for the word, \"anxious.\"\n\nLeonid turned back to Emera, forcing his mind from Anna's unchanged state. \"I might have suggested that their doctrine could potentially be flawed, and that the true nature of The Balance was beyond even their comprehension.\" He was rewarded for his attentions with a look of shock and incredulity from his sister that he could not have imagined more perfectly.\n\n\"You did what?\" she said, shock coloring her voice and tugging at the corner of his lips.\n\n\"I said\u2014\" he started again, giving in to the smile as her facial expression didn't change.\n\n\"Don't be a pest, Leonid.\" she cut him off with a snap. \"You said to five beings of a higher plane, ones who control our fates and rule our existences, that they might have been mistaken about the whole basis of everything we know about our purpose?\" \n\nLeonid nodded, \"I may have been a bit more diplomatic than that.\"\n\nEmera huffed. \"You are lucky you aren't banished to a lonely corner of the universe like Imonesh. Why would you test them like that?\"\n\nHe shrugged. \"I wanted to see if they had feathers to ruffle.\" She gave him a knowing look. \"I knew they would not take the charges against Imonesh so seriously. We had the king, yes, but she has slipped out of worse. They knew her as the great stabilizer after my destruction. If I set them off balance, questioned their authority, then maybe they would use the opportunity to reassert their control.\"\n\n\"And how did you anticipate that they would use Imonesh and not you and Anna as their example?\"\n\n\"I didn't know for sure,\" Leonid confessed. \"But she and her ward were there, and Anna was not. I took a chance.\"\n\nEmera quieted. She searched Leonid for another sign of whatever was going on in his head. She knew that there were forces at work she did not understand. Seeing him in the state she'd found him during Anna's imprisonment had been disturbing. Emera had serious concerns that he would kill the king before they had a chance to bring him before the five, but again he has surprised her, appearing as himself, no sign of the angry, tormented god who had willingly suffered the fate of a lower being.\n\nPart of Emera had hoped he'd done it for her, that he'd put himself through all of that for the benefit of her realm. But seeing him here, after he'd disappeared and left the whole mess in her lap, Emera realized she was mistaken. It was not for her, his mate in creation and for most of their existence; he'd done it for Anna, a mortal he had not even known a scant few months before. \n\n\"What called you away so precipitously, brother?\" Emera asked again, her eyes riveted on his face to watch for a break in his composure. \n\nLeonid's face remained placid, but she noticed his fingers tapping against each other lightly. For a moment he didn't speak. He grimaced slightly, a human mannerism she disliked, and said simply, \"Her mind fractured. It was a matter of some urgency, as the injury can become permanent.\"\n\nEmera looked him over again. At first he seemed perfectly normal, his face devoid of any real expression, his body relaxed into the contours of the chair. But just because she couldn't see it, didn't mean it wasn't there. \n\n\"And how did you prevent it from becoming permanent?\" she asked cautiously.\n\n\"I had to enter her mind and begin the healing process, restore the proper function and put up barriers between her consciousness and the events that occurred, so she would not be overwhelmed when she awoke.\" He said this evenly, almost overly controlled.\n\nEmera noticed. \"You have spent an extended amount of time occupying her thoughts, revisiting the pain you endured with her and feeling as she does. Are you suffering the consequences?\"\n\nFor a moment Leonid looked at Emera and she saw something she recognized but could never understand. He looked sad, almost broken. But when he looked to her he had hope in his eyes, as if she were asking after him, concerned for his state, and somehow could provide him relief. But in a flash it was gone and his eyes looked like clouded glass to her, as they should be. There was disquiet in seeing him so altered. \n\n\"It had to be done,\" he said and he settled back in his seat.\n\n\"Are you not concerned you will begin to act foolishly? Aren't you worried\u2014\"\n\n\"Don't lecture me, Emera. You don't know what they did, how deeply they damaged her. It was my fault, and yours, for mixing her up in this cesspool. I intend to right this wrong.\" The mask was slipping further and she saw his eyes dart over to the bed once more.\n\n\"Guilt does not suit you,\" Emera said.\n\n\"You're wrong.\" Leonid got up and stood by the fire, his back to her. \"It may suit you as well if you took a moment to consider it.\"\n\nEmera decided she had had enough of this. His behavior was disconcerting and she wanted \n\nto be free of his presence. But one bit of business remained. \"You can't remove her yet, Leonid. She is the rightful queen now that the king's energy has been released to another realm. She could do so much good, bring back the empire of old...\" she trailed off as she felt the press of his power begin to radiate from him. She had overestimated his control this time.\n\n\"Leave, Emera.\" His voice was hard and loud from where he stood, his face still hidden from her. \"My debt is paid. Do not press me, or her, on this matter again.\" The goddess made no reply but waited until she felt his power settle and the room return to a normal stillness. \n\n\"We will speak of this later,\" she said, unwilling to give up the fight so easily but finally understanding that now was not the right time. He made no move or response so she took her leave, shaking off the strangeness of his mood as she made her way out of the realm.\n\nLeonid stood there for a while longer, his gaze lost in the flames of the fire. In his solitude he found no place to retreat, no distraction to redirect his thoughts. Instead he was forced to face what he had done. The last week played over in his mind, how she had trusted him and he had betrayed her moments later, allowing Imonesh to bring her harm. And then again, knowing the danger, he capitulated to her will instead of keeping her safe. He flinched as he felt the phantom pain from her torture wash through him. He had stood by, for good reason, but still he had allowed it.\n\nAnd then, just as she was meant to be safe, he left her to face the northerner alone. Anger welled up inside him at the thought. His application of self-control when it came to dealing with that man was impressive, even by his standards. He turned back to Anna's form on the bed. He couldn't leave her, even to see that man punished. He needed to be here, for once, when she woke up. \n\nThe door opened and the Ionian came in, the other woman with him. Leonid watched as the pair made their way to the bed where the healer placed a gentle hand on Anna's forehead and reached into her body with his magic. For a moment they were still and silent. \n\n\"No change?\" the woman asked when the man opened his eyes and sighed.\n\n\"Nothing,\" he looked concerned. \"There is something that is not right but I can't for the life of me ferret out what it could be. There is a...lack, or a conspicuous nothing, I can't find the right word.\" The man's face was grave as he spoke. \n\n\"It's alright, Marek,\" the woman murmured, \"She needs to rest. Orlith and Evo had her for four days together. She just needs time to heal.\"\n\nThe man frowned further. \"That's just it, she doesn't.\" The consternation was evident in his tone. \"Everything is functioning normally, her body is fine.\" He trailed off as a light of understanding came into his face. \"It's my doing, Serena,\" he whispered, aghast. \"I did this.\"\n\nThe woman put her hand on his arm. \"That's not true, Marek. You saved her; she knows that.\" \n\nMarek backed away from the bed and collapsed into one of the chairs so recently vacated by the deity in the room. \"I healed her, I took away the pain and the injury, but I cannot erase the knowledge of that pain. That's what I'm feeling when I feel the absence of injury or illness. She should be hurt, she should be able to feel what has happened to her. Instead I took it all away. Her mind and her body disagree. I created that lack inside her and her mind cannot agree with what she feels.\"",
        "Serena crouched down before him, a position Leonid recognized from when Emera had come to him during Anna's imprisonment. \"Marek, you did what you had to do. If you had refused, Evo would have forced you to do it anyway. She will live, and learn to heal her body and her mind. You've given her that chance. Without healing she would have died days ago, you said so yourself.\" The older man looked mournfully at her. \"I know you feel helpless, we all do, but we must be patient.\"\n\nThe man sighed again and looked back at Anna's sleeping face. \"You would have thought that after all these years with Evo I would be more accepting of the damage our powers can do. But I held onto this idea that somehow, despite his use of it, my magic was incorruptible, that healing could never be used as a weapon. But then she came, and what they did...\" Tears started down the man's cheeks. He put his head in his hands and Serena wrapped him in her arms as he cried. \n\nLeonid watched the two of them as Serena consoled the healer. He knew the man's pain, as it reflected his own. Helplessness, he hadn't even considered it, but it was exactly what was eating him. For all the power he held over this sphere, he could do nothing more than these humans as they sat and waited for her to wake up. The pair finally gathered themselves and quit the room, and once again Leonid was left to his lonely vigil.\n\nIt could have been hours or days as time crawled along at an excruciating pace. Every time he turned to the window to see only an hour or two had passed he was sure it was some trick. The rays of the late afternoon sun fell obliquely into the room, illuminating the corner where Anna lay motionless. Leonid made his way towards her, looking into her face as the sun played across her skin, shining off the long lashes that rested on her cheeks. In sleep she looked so peaceful. \n\nHe remembered watching her in the bath, the same placid look behind her closed lids. It caused an ache in his chest, a desperate and impossible wish to reach back in time to that moment. If he had chosen to stay in the inn that night, if he had managed to explain himself before she left for the capital, if only. He could almost picture the happy picture she would make had he managed to avoid all of this mess. He turned away from her sleeping face. The regret was a searing agony during his wait, one he decided was a fitting punishment.\n\nWhen he heard the soft sound of her voice, he thought he was dreaming it. Only when it was coupled with the sounds of her body shifting did he dare look back at her. She was sitting up, her dark hair tousled around her confused face.\n\n\"Leonid?\" she said, her voice running over him like cool water. In an instant he was at her side. He brought his hand to her cheek and was gratified to feel her lean into his touch.\n\n\"Anna,\" the relief in his voice was so very human sounding, \"Are you alright?\"\n\nShe looked to him and nodded but he watched as her gaze swept around the room. He lowered his hand and took one of hers in it. Her face lost the peacefulness of sleep and her brow furrowed in confusion. \"I am,\" she paused. She looked around the room, then down at herself, then to him. \"No, that's not right. Is it?\" She frowned again.\n\nHis heart squeezed. He had tampered with her mind and the thought he may have done more harm than good had kept him fretting for the last day and a half. \"Do you remember me coming to you here?\" he asked softly. \n\nShe nodded. \"I came back here and Serena and Evo left with the Duke. I wanted to sleep,\" she trailed off. \"Then nothing.\" But she sounded unsure. She looked back at him. \"What happened?\" \n\nHe wanted to smile and reassure her but he was not comforted himself. \"Do you recall the last few days? Since coming to the capital?\"\n\nShe nodded again. \"I was with Dev. We found the soldiers and Orlith came and put the collar around my neck. I woke up back in the tower.\" She trailed off again, her eyes looking far past the walls around her. \"Then Evo and the king and it becomes...unclear.\"\n\nAnna tried to focus on her memories but she felt something cool shift against the skin between her breasts. She knew what it was before she reached for it. Dev. She remembered, but she didn't, she knew he was dead, that she had seen it, but it was like trying to look through troubled water\u2014she couldn't make out exactly what had happened. Her fingers grasped the little bead as her eyes burned. He was dead and it felt like someone had shoved a knife through her chest.\n\n\"What did you do?\" she asked quietly.\n\nLeonid smoothed her hair, drawing her face up to his so he looked back into her dark eyes. \"I created a barrier in your mind to bar the worst of these experiences. The memories are not gone but they are contained.\" Tears sparked in her eyes. Her head felt fuzzy, out of focus. The sensation was infinitely worse than the times they had erased her physical injuries. This was invasive to her core, a dissonance she found distressing; she could not reconcile herself with the reality she found herself in. \n\n\"Why?\" she managed to whisper as her throat tightened with unshed tears.\n\n\"Your mind shattered, Anna.\" He said it so simply. She shook her head.\n\n\"I have no memory of that.\" But it made sense; she knew it. How many times had she flirted with the edge of her pain? How many times had she pushed it aside, intent and focused on what was ahead of her? It had never left her, it still hadn't. \"It's still here,\" she said pressing her hand to her chest where it felt like some strange shadow had taken root.\n\nHis hand came and covered hers, soothing. \"In time you will be able to face it. You have the choice to recall what I've clouded whenever you feel ready.\"\n\nShe didn't want to. \"I can't.\"\n\nLeonid's own chest ached for her. She was better than he had feared, but not fixed as he had hoped. He knew, of course, that she would not be. But some part of him had desperately wanted to be able to cure her without ever putting her through this pain again. Now was not the time for him to despair; he refocused on her.\n\nHe cupped her face in his hands, his skin hard and smooth against hers. \"You won't succumb to madness again. You have withstood in a few months what most never have to face in a lifetime and you succeeded where many have failed. You should not doubt yourself.\"\n\nShe shook her head. This was all too much. \"I'm hungry,\" she said noticing the pit in her belly was not entirely from waking up with swaths of her memory wiped away.\n\n\"You've slept for over a day,\" he said as he rose from the bed, extending his hand to her.\n\n\"A day?\" She took his hand and let him lead her to a small table by the window, the evening sun illuminating the gardens below. \"What of the others? What happened with the king? And Rafia?\" She settled in the chair, a large tray of food set out before her.\n\nHe sat across from her and the soup began to steam. She looked at him and he gave her a small smile. \"Eat, Anna, all is well. It is late in the day. The others have the situation well in hand.\" He gestured to her meal and so she set about eating, aware he was watching but having none of the control necessary to make it a more elegant process. \"Serena and Wreg have managed to keep the council under control, they have had no warning thus far of Rafia's march which is underway. Marek has visited you and assured the others that you are simply exhausted and need rest.\"\n\n\"And Imonesh?\" she said, her mouth half full with a roll.\n\n\"She is banned from this realm, her powers curtailed. You won't have to worry about her. The king's soul is gone, taken as punishment. His body is back in his chambers. The others found it and are keeping it hidden for now.\"\n\nAnna nodded, relieved to hear that the world had not fallen to pieces. The news of the king's death settled strangely with her. She knew what had happened with him, she even knew she had been horrified and deeply violated but she could not feel it the same way she should have, as if it were a story that happened to someone else. What would it be like to reclaim the emotions she'd had at the time? She shuddered at the thought.\n\nLeonid watched her carefully as she finished her meal. He was trying to be patient, to allow for her to come back to him on her own. He desperately wanted to have her in his arms again, but he could not force it this time.\n\nAnna for her part was stranded in her own thoughts. Her head felt strange, the holes in her memory lurked just out of reach, as if she might fall into one, not knowing where they were. She knew but could not feel or recall her memories precisely. It was a strange sensation. She looked up at Leonid who was regarding her with patient consideration of his own. She frowned slightly, unsure how she felt about what he'd done to her.\n\n\"What is it Anna?\" his voice rumbled, though she could tell he was trying to be gentle.\n\n\"Don't you know?\" she asked, half to bait him but also because she was curious. \"Aren't you inside my head? Don't you know my thoughts?\"\n\nLeonid gave her a small smile and shook his head.\n\n\"Why not? Wasn't that the bargain?\"\n\n\"It seems that spending time inside your thoughts and with full access to your emotions has some unexpected consequences for me. I have to remain apart as much as I can.\"\n\nAnna's eyes grew wide. There was something both thrilling and terrifying about the idea of her influencing him. She could almost feel the tipping of the scales in her mind, realizing she was not as powerless as she seemed. And yet he was trying to remain apart, to maintain the imbalance. \"But you went and clouded my memories, regardless of the consequences.\" It both was and wasn't a question.\n\nLeonid nodded. \"That was necessary.\"\n\nShe looked away, still confused as to how she felt about him, her influence and most urgently, the holes in her memory. \"I feel like pieces of me have been erased.\" She had no pain in her body, yet she knew she had been hurt. She felt the loss of her friend without the memory of his death. There was something so wrong in all of this. She twined her fingers in her long hair \"I don't know if this makes sense. I know you did it to help, so did Marek, but,\" she looked up at him, hoping he might understand, \"I don't feel fixed.\"\n\n\"You aren't, Anna.\" He got up and sat next to her, pulling her hands from her hair and grasping them in his own. \"That will take time, and healing, the real kind, one that magic can't make right. There is a price to pay for healing your mind and body too quickly, for the use of magic instead of the natural pace of things. The Balance is precise, Anna, there is nothing free in power or magic, what you gain in time and healing you must pay for in another way. That can't be hastened.\"\n\nAnna looked away from his shining eyes. She knew this, didn't she? She had seen what her power had done to her, how she had paid dearly for the abilities she had never earned. She'd led herself and her friend right into the belly of a most wicked beast and he had paid the ultimate price.\n\n\"But I'm still here, alive and somewhat sane, all due to magic. That seems unfair considering everything that's happened to others.\" A wellspring of feelings rose up inside her and she at once pushed them down. She did not like the implication that she had a long road of healing ahead of her. That road seemed fraught with more pitfalls, more pain. She didn't want to face it, any of it. Her face grew cold and she slipped her hands from his. She would lock it all away. He'd already started the process and she would finish it. She could know they were all dead, June, Dev, her mother and father and everyone else, and she could just refuse to feel sadness, or anything for that matter. And the madness would stay at bay, and her heart would continue its onward march and she would simply exist until she didn't anymore.\n\nLeonid watched her face close off, the wheels in her head turning and coming up on apathy. He could almost understand it, but knew it could never be the ultimate solution. He took her hands again, pulling her gaze back towards him.\n\n\"Shutting everything out is not the answer,\" he said gently.\n\n\"It seems like the only reasonable one,\" her voice was miserable and flat.\n\nLeonid brushed his fingertips along her cheek, watching her eyes as she leaned ever so minutely into his touch. \"No, Anna, it's not.\"\n\nHe leaned in and kissed her softly, more aware than ever that he should not push her now, though part of him wanted to. While she may not remember, he was horribly aware of every blow she'd sustained this last week, every vanished mark on her skin, every piece of violence committed against her. It tore him apart in a way he couldn't fully understand. Part of him was desperate to reclaim her, to wash away all that had happened. But the other part understood his helplessness was driving his reason, and his guilt and sorrow did not outweigh her own.\n\nHer eyes met his after he pulled away from the kiss. For a moment she searched his face and something like sorrow passed over her features. \"You know,\" she said softly, her eyes not leaving his even as tears gathered. \"You saw everything they did.\"\n\nHe nodded. Anna was shocked to see the haunted look in his eyes, one she recognized from Serena and Marek's faces. A great swell of emotion both heartrending and uplifting rolled in her chest. He'd been unable to stop it while Imonesh was in power, and he knew her pain. She could feel his anguish because it so closely mirrored her own, as if they held two ends of the same rope.\n\nWithout thinking about it she leaned in to kiss him, her hands coming to cup his face and pull him into her. She felt the same tug towards him that she had before, the same feeling of connection, as if he were an anchor in the whirling chaos around her. She understood why she pulled away when the others had hugged her\u2014she wanted him to be the one who held her.\n\nLeonid broke the kiss as she tried to deepen it and held her back. \"Anna,\" he began but the look in her eyes stopped him. She was reaching out to him, asking him for comfort he had never given her, that he owed her. For too long he had left her to be tended to by others, intent as he was on pushing her boundaries and keeping himself occupied. He had neglected her, ignorant of the deep scars her emotions and experiences had left in her body and mind.\n\nHe stood and pulled her to him, wrapping his arms around her and holding her against him, their faces inches apart. A swirl of excitement unfurled in his chest as her eyes widened, the pupils dilated and her lips parted in a small gasp. He held her there, her hands resting on his arms, their bodies pressed together. He enjoyed the flicker of emotions that crossed her face, the visceral reaction to his contact. He dipped his head, running the tip of his nose past hers slowly, his lips hovering just out of reach. Her fingers tightened on his arms, a shudder ran through her body and her breath caught. His lips brushed hers so lightly it was hard to distinguish from a breath of air.\n\nAnna responded, following him when he pulled back and kissing him more solidly. She was at once elated and conflicted by the feeling of his kiss. A bitter thought marred the sweetness of his touch, as if to say she shouldn't be feeling this way, that she didn't deserve it. But she wanted it, so much she could feel it like a physical need, pulling on her towards him. But even as her mind resisted, her guilt tugging at the desire to feel pleasure, her body complied. She relaxed into his kiss, allowed herself to be swept up in him. Her hands smoothed up his arms and clasped the back of his neck. His arms tightened around her, drawing her to her toes and pressing her flush against him. His control was soothing, releasing her from the turbulence of her considerations.\n\nHe kissed her in earnest this time and he felt the small tremor of hesitation in her touch, but she did not tense or pull away from him. He knew it was not rational, that he should end this but he found he couldn't bring himself to. Then she relaxed into his arms, her body molding itself against him and all thoughts of stopping vanished.\n\nHeat rose in her belly. His tongue did wicked things to banish her thoughts. Her skin was aflame where it touched him. She made a small noise in the back of her throat, overwhelmed and still conflicted. Without loosening his hold, Leonid began to move her back towards the bed. His hands stroked down her back, grasping the flesh of her bottom before starting upwards again. Deftly he undid the belt that held the over-sized shirt secured to her body. The slide of fabric brought her back to her senses and she pulled her mouth from his. His fingers found her skin, sliding across her flank, leaving tingling wakes behind them. \n\n\"Wait,\" she started. His hands stilled as he grasped her ribs, his hand spanning her side. Her breath was fast and the movement of her chest became more obvious with the weight of his hold. \n\nShe was unprepared for the emotions painted clearly on his face. He wanted her, badly. But his brow was touched with worry; his eyes were fiercely protective. His thumbs moved slightly, stroking the skin just below her breasts so her breath caught. She wanted him to continue, needed to feel something good, reminded that the world was not as bleak as it seemed. But still she fought it. \"I shouldn't, we shouldn't...\" she started again.\n\nLeonid stilled immediately, his eyes concerned. \"Do you want this, Anna?\"\n\n\"Yes,\" she breathed before she could stop and think. The word hung between them, a confession she hadn't meant to release. But should she want it? Did that matter? She held back from the truth of what she'd said, not withdrawing but not encouraging him either. He released his hold on her skin, which made her ache with the loss. She stepped into him, unwilling to lose contact with his body and his arms came around her.\n\n\"Is that wrong?\" she whispered into his chest.\n\n\"I don't know,\" he confessed himself. \"I find myself ill equipped to answer.\" She tipped her head back, looking up into his face and finding his expression honest, and somewhat perturbed. It struck her as funny that he could be confounded by something as commonplace as sadness or confusion.\n\nThe small laugh that escaped her took them both by surprise. She smiled at him and his surprised expression. He was there with her, finally truly there, not just some punishment or game, but holding her as though she were precious to him, as if he cared for her.\n\nHe leaned down to kiss her and there was no hesitation this time, instead she pulled herself into him, hungry for his touch. Leonid shoved his guilt away, refusing to let it interfere. Now he needed her pleasure as much as she did, he needed to know that after all she'd suffered he could still make her feel perfect and complete, even if just for a few seconds.\n\nHe pushed the shirt off her shoulders. His hands met her naked back and she shuddered again, He took her arms and wrapped them around his shoulders, bringing her close and pressing her naked breast into his body. The loose pants had barely held onto her with the removal of the belt, perched as they were at the curve of her bottom. A flick of his hand and they pooled on the floor next to the shirt.\n\nFinally she was bare to him; he moved his hands over her, knowing where she was most sensitive, how to elicit the most delicious sounds from her. But it was a careful touch, one that could not ignore the damage that the flesh beneath his fingers had suffered. He wanted to feel her skin, unmarked and unblemished, and he wanted her to feel it too, to understand she was whole.\n\nAnna was fast losing any sense of deliberate thought. She was sinking further into his hands, the tactile experience of touching and being touched, the thrill in pleasure and desire. The nagging voice that spoiled her thoughts, that told her she didn't deserve this, that letting him in would only bring heartache, that she was too damaged, was slowly silenced as all of her nerve endings chorused their approval. Her fingers twined in his hair as his lips continued their passionate kiss. She moaned into his mouth as his thumb slipped between their bodies, sliding along the sensitive underside of her breast.",
        "She reached for his tunic before she thought to stop herself. When her fingers pulled at the hem, she stilled. She had never seen him bare and she did not know how he would react to her insistence. He barely paused, pulling his garment over his head in one fluid movement, dropping it as though it was already forgotten. He moved back to her but she stopped him, placing her hands against his expansive chest.\n\nShe had never seen him before, here in the full light of day, his body in clear view, available to her fingertips. His skin was the same rich tan, darkened only by the barest flicker of black flames beneath the surface. It felt smooth and harder than hers, cooler despite the power beneath it. The hair there was soft to the touch, sliding beneath her roaming hands. He looked so human and yet there was an eerie sameness to his skin, as if made from some more permanent material, like a living statue.\n\nLeonid was patient with her exploration though he longed to do the same to her. As long as she was untroubled, he would give her time. She raised her face, looking into his, a blush on her cheeks and she pulled her hands away. He grasped them and pulled her back to him. He took her chin and tilted her face up, seeing the unease in her eyes, the flicker of doubt.\n\n\"Do you trust me, Anna?\" he asked in a low voice.\n\nShe looked up at him, her dark eyes meeting his blue ones. For a moment she didn't speak, searching his gaze for what she could find in his countenance.\n\n\"Yes,\" she whispered, her tongue darting out to wet her lips.\n\nHe didn't know if he deserved that, if he could answer for all that he'd put her through. He'd underestimated the power of human emotions, of connections between people and the loss of those closest to her. He hadn't taken proper care of her during all those months, intent as he was on his own interests with her, never thinking about what was left untended to. But now was not the time for his guilt either.\n\nHe poured all of his desire into his kiss. The moan that vibrated her chest made him all the more determined. He bore her down on the bed, never releasing her mouth as his hands ran the length of her torso, seeking out her arousal.\n\nAnna gasped and arched her back as Leonid's fingers found her damp lips. He teased and stroked her there, drawing her attention away from everything else. When his finger teased the entrance to her channel she gasped, releasing his lips as it penetrated her. His mouth traveled down her neck, trailing fiery kisses along her skin. When he closed his lips over her nipple, she grasped the back of his hair. His tongue was slowly circling her bud, sliding across her sensitive skin. \n\nHis fingers drew back and he began to kiss lower, over her belly, nibbling at the lower curve of her ribs making her squirm. He loved her body, her long limbs and torso, the way her breasts were perfect mounds topped with the sweetest pink nipples. Her smooth skin reacted to his touch, he could feel bumps rise when he stroked her softly, the heat that began when she was aroused. It was beautiful.\n\nShe missed his body as he settled between her legs; she wanted to feel his arms around her, his large body encasing her like some sort of protective shield. And then he kissed the soft curls at her mound and she forgot to feel bereft. He peppered her outer lips with small kisses, enjoying the soft sounds she made. He pinned her hips down when she started to squirm and began his intentions in earnest. Today was not about teasing, and he would give her what she desired when she wanted it.\n\nHis tongue met her pink flesh and she gasped, the sound encouraging. He lavished attention on her opening before moving upwards, seeking out her engorged pearl with the tip of his tongue. Anna felt her muscles clench as his mouth came over her sensitive nub. Just as it had been in her dreams, he held nothing back from her. She felt him penetrate her with his tongue only to return to her clit, humming to stimulate her.\n\nHer hand sank into his hair as he pushed her legs up over his shoulders, his fingers coming to coordinate the attack on her senses. She arched her back as it continued, his relentless push towards her pleasure, no retreat, no moment for her to catch her breath. She called out as her climax came, the dizzying pleasure radiating up her body, her fingers tingled as the blood rushed from her extremities. Ecstasy lit up inside her, great waves of it rocketing under his skin. He kept her at her peak until her body relaxed; a great sense of contentment suffused her.\n\nHe came back up her body, his greater form surrounding her again. He held himself on his elbows, his fingers stroked her cheek as he kissed her sweetly. She brought her hands to his cheeks, pulling him into her, enjoying the slow dance of their tongues and the soft touch of his lips. He shifted so as not to crush her beneath him, but she lowered her hands and brought him up short.\n\nWrapping her legs around his narrow waist she ran her hands over his shoulders. She loved the feeling of his stomach against hers, of his large chest over her, arms caging her in. It felt so good to touch him like this. She arched her back, rubbing against him like a cat, then reversed her hips, bringing her core up to his rigid shaft, pressing against him.\n\nHe pulled back from the kiss, surprised by her movements. Anna brought her hands to the back of his neck and looked into his deep blue eyes. \"Please, Leonid,\" she said, pressing against him more insistently. \n\nLeonid looked back into her pitch-dark eyes, the depth of her desires laid bare to him. He had not planned to take his pleasure with her, intent as he was on her own and wary after what she had most recently suffered. But he could not deny her. When her face flickered with uncertainty, the heated look cooling, he made up his mind.\n\nHis lips met hers again solidly, his body shifting so he was above her center. He hoisted her long legs so they were perched on his hips and he ran his hand up the length of her torso, smiling into the kiss as she pressed into his touch. Her hands gripped his shoulders as he caressed her lithe form, stoking the fire again, reveling in the delicious sounds she made. He banished the rest of his clothing without a thought and she was pressing her wet slit against his bare skin.\n\nLeonid had discovered that human emotions were felt in the skin, gut and chest, the physical manifestations of them overwhelming at times. Now, as he was more sensitized to them, he discovered that tactile pleasure was amplified as well. He moaned into the kiss as her heat slid against him, the sensation novel as it seemed to extend and crawl up his back with the exciting promise of what was to come.\n\nAnna ground harder against him, mindless in her intention. There was an aching hole, a need to feel connected that ate at her. After months of dreaming of truly coupling, she couldn't hold back now that he was finally there with her. She wriggled until his smooth tip was pressed against her opening. She made a desperate sound in the back of her throat, his tongue still occupying her own to prevent her from speaking her plea. It quickly turned into a low groan as he pressed forward, his girth stretching her open.\n\nLeonid released her lips, his eyes finding hers as he sank into her. She looked back, her eyes glazed in pleasure, lips reddened from his kisses. \"Oh yes,\" she whispered almost to herself as he sheathed himself inside her. Her head tilted back, eyes closed, the rocking sensations overwhelming her till there were no deliberate thoughts left, only the touch of his lips and the stretch of him inside her. He continued, slowly working his way in, enjoying the friction that sent fissures of pleasure throughout his body. When he was fully encased he stopped, selfishly reveling in the tight grip of her channel, the soft fluttering of her intimate flesh against him.\n\nAnna's grip on his shoulders tightened and she wriggled, trying to make him move. A small bloom of frustration at her attempts at control echoed in his chest. And once again he acted without thinking. His hands slid up her body, teasing her sensitive sides, he continued up her arms until he grasped her wrists, removing her hands from his shoulders and pressing them into the mattress above her head. All this time he watched her, relieved to see her arousal grow as he took control, the answering tightening of her legs around him and the groan she let loose a confirmation he needed.\n\nHe intertwined his fingers with hers as he began to move above her. She grasped his hands tightly, her eyes closed as her body arched towards his. Anna felt a great pressure inside herself, a crescendo that kept building and building with every thrust that filled her and every drag of his hard flesh against her own. His body moved against hers creating ripples of sensation across her entire skin. She tightened her legs around his waist, drawing herself up to him so that he would penetrate deeper inside her.\n\nHis lips came down on her neck, kissing along her collarbone even as he kept his pace. He found her lips again and she answered his touch with the passion she could feel welling up inside her. He pulled back and looked into her face, her lips open, her brow creased as her peak remained just beyond her reach. He released one of her hands, bringing his hand to her cheek, running his thumb over her skin. \"Open your eyes, Anna.\" He knew he should leave her alone, let her enjoy this for its own sake. But he wanted her there with him. Her eyes opened at his command sending a shock of arousal down his back.\n\nAnna found his gaze and was surprised by the depth of his feelings projected in his features. It was almost as if she could feel the emotions he had unwittingly let in when he accessed her mind. He cared for her, deeply, though it was mixed up in this tangle of guilt and the uncertainty that echoed her own vulnerability. The same sensation squeezed her lungs, as it had all those nights ago when she had been bound before him in the woods. It broke down the walls she had built around her feelings for him, crumbling them until all that was left was her own affection for him, exposed and undeniable. \n\nThe emotions poured forth and met the physical wave of pleasure as it rolled through her. The two combined, making her feel as if her skin would burst. She saw it in him as well for the first time, the unfurling of his pleasure. \"Yes, Anna,\" he spoke the words and they seemed to go through her, straight to her core and it burst the pressure into millions of pieces that shot through her body. She screamed his name as her ecstasy peaked, her limbs locked around him. He surged powerfully inside her, sustaining that dizzying pleasure as it echoed through his own body, her name on his lips as he came.\n\nHe kissed her sweetly, hungrily still, as if he could harness what had passed between them in the gesture. She returned it, tangling her fingers in his hair, pulling him into her. He shifted his weight as he released her lips, pulling her body with him so she was curled up against his side. The two of them attempted to catch their breaths as they settled against each other.\n\nAnna rested her head on his shoulder. She let her hand run over his chest before her and she watched as the black fire under his skin seemed drawn to her fingertips so that she drew ripples of power behind her as she moved her hand slowly. Her own magic answered, dancing beneath the skin of her fingers, darkening the skin there so that it matched his. She felt a deep peace with the languid release of her muscles, her body and mind quiet for the first time in a long while.\n\nShe flattened out her palm on his chest and raised her head so that her chin rested on the back of her hand and she could look up at Leonid. He had brought the arm that wasn't around her up behind his head and he was looking up at the ceiling, the quiet expression on his face quickly being replaced by an emotion she knew all too well, and wanted no part of for the moment. She laughed softly, drawing his attention and gaze.\n\n\"What is so funny?\" he asked, his voice rumbling through her palm.\n\nShe smiled at him. \"You lost your breath.\"\n\nHe returned the smile. \"It happens rarely.\" He brought his hand down to her cheek again, his thumb running along her skin until it reached her lips. Her tongue darted out and she placed a small kiss on the tip of his thumb. She met his eyes again and ducked her head, amused at her own boldness.\n\n\"Are you still smiling?\" he asked softly, a laugh in his words.\n\nShe put her chin back on her hand. \"It is nice to see you again.\" She saw the guilt creep back into his face.\n\n     \n\n\"I'm sorry for leaving you, Anna, and for all that has happened to you. I should not have let you come here.\" His face was mournful.\n\nShe found it endearing but misplaced. \"And how would you have stopped me?\" she asked, a smile still on her lips.\n\n   \n\n\"I should have stopped you when I learned of Imonesh's plans, before you entered the capital.\"\n\nShe gave him a look. \"And I would have hated you for it.\"\n\n\"I would take your hatred over your pain given the choice.\"\n\n\"But you gave me the choice instead.\" She said plainly.\n\n\"That was very foolish of me.\" He sighed again, stirring her annoyance.\n\n\"Don't be an oaf,\" she teased, surprising him. \"Wasn't it you who told me I was not a little girl anymore and I had to live with my decisions? It would set a terrible example if you went around taking them away from me.\" She ran her fingers across his chest again. She felt calm and centered for the first time. She didn't know how long it would last, but she chose to enjoy it while she could. It was a strange reversal that she should be so sure and he should be tormented.\n\n\"I did say that didn't I?\" he said with a sigh. \"That was also foolish.\"\n\n\"And why didn't you come for me when I was captured?\" She could see the pain her question caused but she pressed on regardless.\n\nHe turned his gaze back to the ceiling. \"To protect you from a worse fate, and the entire sphere from possible destruction.\" He saw her tactic but it did little for his turmoil. Her fingers tingled with her magic as it called out to the power beneath his skin.\n\n\"It seems the fault then lies elsewhere,\" she said, her voice soft. He looked down at her and saw her eyes bright with unshed tears. She turned her face from him.\n\n\"No, Anna,\" he caught her chin and kept her looking at him.\n\n\"It was my choice, Leonid, I will learn to live with it.\" There was strength behind her sorrow. His own words came back to keep him from denying her claim. He would have to let her heal herself, just as he had told her when she'd woken up, but it did not stop him from wishing he could do it for her.\n\n\"I'm sorry,\" he said.\n\n\"As am I,\" she replied.\n\nHe brought her to him so he could kiss her again, trying to ease the weight of the conversation with a physical balm. She did the same, bringing her hands to the back of his neck, pulling herself into his kiss, her lips soft and delicious. She pulled away, her eyes meeting his and she smiled again. He returned it, \"I won't leave you again, Anna.\"\n\nShe settled against him and he drew his arms around her, enjoying the feeling of her head on his chest, her weight comfortable as she pressed into him. They were quiet for a long moment, the simple act of touching each other was enough for them. But Anna's mind would not quiet for long, his last declaration teased at her greatest fears, the calm that had permeated her seemed to dissipate.\n\n\"What happens now?\" she whispered, scared to ask and more of the answer. He heard it in her voice and felt it in her body.\n\n\"It seems I find myself presenting you with another choice,\" he said. She moved to sit next to him, her body still leaning against him but now she could face him more completely. He shifted to sitting as well, resting against the great pillows at the head of the bed. \"You can come with me, away from this sphere. Or you can stay here, where you may choose to reign as queen or to slip away, live your life as you would have it.\" Her eyes were wide as he spoke and he could see her fears behind them. \"You do not have to choose now, Anna,\" he ran his fingers up her arms and moved her long hair over her shoulder.\n\nShe took a breath at that, relaxing but only just. \"Where would we go if I chose to come with you?\"\n\n\"To my home on the First Level, where the gods reside. Your body would remain here, but your energy, everything that makes you who you are, would be able to live with me there. Though that is only the beginning. We could go anywhere after that.\" He saw the look of confusion draw her brows together. He brought up his hand, inspired by Emera's model he created one out of light in his palm so that she could see the universe as he knew it. \"Each of these revolving spheres is a realm. Each is unique, the laws of nature, of power and magic differ from one to another. There are men in some, endless space in others, but the common thread they hold is the shared energy. When something or someone dies, their energy is redistributed throughout these spheres. What was once a volcano might become a man, what was an army, a forest, and so on.\" She was watching him with rapt attention. He could imagine slipping in behind her eyes to watch as her brain lit up, but he held back and she looked to him to continue.\n\n\"I live here,\" he pointed to the flat disk at the center of the model, which all seven spheres revolved around, each in their own intersecting orbits, \"It is called the First Level. All of us created by The Balance to oversee the functioning of the spheres below reside there. This,\" he pointed and one of the spheres lit up brighter to distinguish it, \"is your home. We call it The Realm of Men. But there are other spheres, other worlds beyond your imagination, and we could visit them all.\"\n\nShe looked from the model back at him, \"What is The Balance?\"\n\n    \n\n\"The Balance is the force which holds the universe together as it is. It is greater than I am, greater than The Five who are beings of another plane, one that is above even the gods of the First Level.\"\n\n\"I was always taught there was nothing but sky above me,\" she reached out towards the lit sphere as it made its way around the others. \"We know so little.\" She suddenly felt very small looking at the universe he held in the palm of his hands. There was layer after layer of complexity to the greater scheme. \"Why in all this is the throne of this country so important?\" she looked at him. \"How could any of this truly matter?\"\n\nLeonid smiled at her through the spinning orbs and they disappeared. \"That is a much longer story.\" He paused but she gave him no reason to stop. \"Most of us influence many spheres though all of us have favorites, and my sister was most well utilized here in this realm, with your ancestor as her ward. They were of one mind and so the empire flourished. But mortals are finite and the empress died. Emera could not maintain the royal house as it stood though she was still bound to them.\n\n\"When her connection started to chafe with the new emperor, I was bored and unfocused, my talents never having found a permanent home like Emera's had. Imonesh was newly made by The Balance and she came to me, innocent and curious, or so it seemed. I was fooled into making a game of the lives of men and stole the connection my sister had forged with the heiress, your great grandmother. But I miscalculated, I had not realized that much of my frustration with Emera came from a connection that I have with this place in particular. And when I was overcome, Imonesh took the opportunity to usurp the connection with the younger princess.\" Leonid paused. He knew he was overwhelming her, but she seemed so intent and focused.\n\n\"Why were you overcome?\" she asked. He smiled, wishing she had not picked out that particular detail of the story, but not surprised she had managed to hone in on the purposely vague point. He decided the best answer was the complete one.",
        "\"The Balance is complex. It is both order and chaos, good and bad, death and rebirth. Emera and I were made together, both made by The Balance at the same time, at first fused as one being while consciousness was granted to us and then we quickly divided of our own wills once we were completely formed. We took our places amongst the gods as a pair, complementary in our contrasts. But we were not aware that we were each imbued with a power that would one day bring about the destruction of a particular sphere when The Balance demanded it.\"\n\n\"This one was yours,\" Anna said, her eyes wide with understanding.\n\nLeonid nodded. \"And I could not bear to have my other half prosperous in a place I felt so differently about and so I made an easy target for Imonesh's manipulations, though neither of us was aware of why. I came back to right the wrong, to drive Imonesh out for Emera, but it required a great deal of self-control on my part to engage with this sphere so intensely.\" He reached up, tucking strands of her hair behind her ear, running his fingertip along the edge of her jaw to her chin. \"So I chose distraction.\"\n\n\"Me,\" she said.\n\n\"Your mind,\" he specified. \"The mind is sacrosanct, a trick of the energies here. By breaching that barrier I was able to access the full spectrum of human thoughts and emotions, something we gods are not meant to have. It made me sensitive to the complexities for the first time; I could inhabit the depths of a mortal's feelings.\"\n\n\"My feelings.\"\n\n\"Yes.\"\n\n\"And now you feel them too,\" Anna whispered, her hand pressing to his chest as if she sought the very tug he could feel there.\n\n\"I do.\"\n\nFor a moment they stayed there, quiet as she digested the immensity of all he had told her. For her part Anna still felt small; a strange reaction for one favored by a god, a god who revealed to her the secrets of the universe beyond her own world. But she was simply a tiny bit of the energy that made up a much larger place than her mind could possibly comprehend. Would it not be wondrous to escape this plane, to move beyond the confines of her skin and her sky?\n\nAnd what of this world she would leave behind? She had no one to keep her here, no greater purpose anymore. Her mission was complete; justice had been served to her family's murderers. She had no duty to Emera to take up the throne, no responsibility to the others. She had freed them and now she too could be free.\n\nThe bead at her chest shifted against her skin with her breath and brought her attention back to it. She could run from this pain. But he had already told her that would not heal her, that only time would. Would an eternity away from this place heal her or would a lifetime here give her peace? She looked up at Leonid. Whatever she chose, she knew she could not be cut off from him again.\n\n\"Will you stay if I choose to live out this life here?\" she asked, averting her eyes from his face.\n\nHe brought her hand to his lips, placing a kiss at the center of her palm. \"I won't leave you again, Anna.\"\n\n ***\n\n Is that better? I hope so. I would love to hear how you feel about their reunion and if it satisfied...I know I've left you guys out there for a few heavy chapters and I want to know if I made it up to you.\n\nThanks for reading! Comment and vote!"
    ],
    "authorname": "AmoryParks",
    "tags": [
        "reunion",
        "control",
        "romance",
        "reconcile",
        "healing"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/a-tale-of-revenge-ch-14"
}