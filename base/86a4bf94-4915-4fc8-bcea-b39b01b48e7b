{
    "title": "Prom Night Pegging",
    "pages": [
        "*This story contains themes of pegging, female domination, bisexual sex talk, and sexual role reversal. If you're seeking something more vanilla in nature, well, don't say I didn't warn you*\n\nHer name was Bridget Ramirez and she was the hottest fucking thing to ever walk the walls of Cheyanne Mountain High School, in Colorado Springs, Colorado. \n\nShe was an 18-year-old Senior, reigning Junior Year Prom Queen, ASB vice-president, and standout all-state varsity soccer star, four years running. \n\nShe had also come into this Camilla Cabello-esque body, but with somehow an even rounder ass. The sporty hourglass of her body was absolutely perfect, and even her clothing seemed to cling to her body with jealousy. Her mother was Spanish and her father was anglo-saxon, buzzcut, military white. \n\nStudents, teachers, janitors, principals, curious girls on her soccer team-they would all stop to gawk when she walked by. She was delicious to her core and she knew it. All it took was a pair of jeans and a button-up blouse and she could fell kingdoms. \n\nFor most though, she was also a total enigma. In the four years she had been in high school, she'd only ever casually dated a few guys for a couple weeks at a time. She had never taken a boyfriend. She had never been dragged through the high school dating drama or become gooey-eyed over an older guy. Guys that dated her were cagey afterwards. No one knew why. But many of them wanted her badly still. \n\nAnd it wasn't for lack of trying. No one could lock her down, even though so many attempted to keep her attention. The guys she had slept with, she had completely ruined. There were rumors about how good she was. Even teachers had heard them. \n\nShe was fun and outgoing and super sexy. She was easy to talk to and the sex was always mind-blowing-but then she'd typically lose interest very fast. She wasn't finding what she was looking for. Not exactly. Not yet. \n\nAnd that was when I transferred in to Cheyanne. I'm Jackson Detwiler and my family had just moved into town midway through the school year as my father was given a prestigious position at the Air Force Academy. \n\nWe'd been in Southern California before that but my Dad had been offered a prestigious teaching position at the Air Force Academy and it was too good an offer for the family to pass up. \n\nI was very unhappy to be leaving friends behind so close to graduation, but what was I going to say? This was my Dad's livelihood. Stiff upper lip and such. My very last weekend in socal, my friends took me out for my eighteenth birthday. They used a fake idea to get me into a club and we partied for one final time. It was bittersweet to be leaving once again, but I was happy for my Dad's success. \n\nI saw Bridget on my very first day of school. She was walking out of one of the college counselor's office's and into the main school office area where I was checking in for my first day of classes. She was wearing this cute, brown-and-white blouse that clung to her tan curves like a condom. She tossed her medium length brown curls as she walked down the hall and had just turned to say hi to someone as she rounded the corner, completely running into me as I gathered up a rather large stack of new-student paperwork. Her very pert breasts crashed right into my hands, as I grasped for my things. \n\nWe both went tumbling down awkwardly and the papers went flying all over the floor. It was an honest mistake. She felt immediately terrible and began to help me. \n\n\"Ohhhh My Goddd! I am soooo sorry,\" she said, kneeling down impressively low on the floor (considering she was wearing a low-cut cotton skirt and tank top) to help me gather up the spilled papers. I saw a flash of a white thong, as she spread her sexy legs briefly to awkwardly grab one of my folders. \n\nI looked up to see her concerned face, right above her gorgeous line of cleavage and her beautiful green eyes with their long eyelashes waving at me like palm fans. She was mysteriously beautiful. \n\n\"No, it's not a big deal, you didn't mean to,\" I assured her. I was more than happy that she had bumped into me. She was the kind of girl you wanted to bump into you. She looked up to see me staring at her, and gave me a cute, yet sheepish grin. \n\n\"Uhh, wait...I don't know you, I'm Bridget. Bridget Ramirez.\" she offered me her hand quite officially. \n\n\"I'm Jackson. Jackson Detwiler.\" I echoed her introductory tone. \"New student. This is my first day, actually,\" we shook hands. Her hand felt incredibly soft in mine. It felt nice, and a little cooler than my own. \n\n\"Oooh, well, sorry, from this point forward I think I'm supposed to bully you. Ya know...new student rules and all,\" her eyes watched for how quick my reply would be. \n\n\"Oh, completely. I wouldn't have it any other way. In fact...I wore my most threadbare shirt because I expect I'll be getting quite a few swirlies today and I like to dry fast. Would you like to be my first?\" I asked her, as I bowed my head to her, and she was quite pleased that I was up to the challenge of her banter. \n\n\"Oh, yes, that sounds great. Go ahead and meet me in the cafeteria bathroom at, let's say 11:15?\" She added on. We were standing again now. \n\n\"Certainly. But...there's a problem there,\" I figured I'd keep this going as long as I could. This was not too shabby a first person to meet on my very first day at a new high school. I wasn't nervous to begin with, but Bridget had been a marvelous surprise. \n\n\"What's that?\" She countered. \n\n\"I don't know where the cafeteria is...or...well, anything for that matter. Cuz, you know...\"\n\n\"First day, \" she concluded. \n\n\"First day,\" I confirmed. \n\n\"Well, I'll be honest...I was probably just gonna go hang out in the ASB room for the next hour to avoid government, and then go tease my math teacher into giving me more extra credit work but, what the hell, I can give you the grand tour if you'd prefer.\" She offered in the most immediately helpful way. Bridget was fun. She radiated kindness and quickness and fierceness. Also she was the hottest fucking thing. I couldn't believe how normal she seemed. It almost didn't compute. \n\n\"I would very much appreciate that Ms. Ramirez,\" I deferred to her directions. \n\n\"Well then Mr. Detwiler, let us be off,\" and she walked in front of me out the back double doors and into the campus quad. \n\nI immediately hit it off with Bridget that first day. We ended up having two different classes together and, between my ASB and various sports interests, she and I developed a fast friendship as we headed towards graduation. We simply saw each other a lot. It was a kind of kismet. I think a lot of people were jealous of me. They didn't know who I was or why their popularity queen was suddenly so buddy-buddy with the new guy. \n\nI think Bridget liked having someone from out of town. Someone that no one knew. Someone that she could sort've claim as her own. Our friendship was genuine and she was by far my favorite part of that last half of my senior year. \n\nClearly I was insanely attracted to her. But I also wasn't going to screw up this killer friendship I'd begun. \n\nAs Senior Prom rolled around, she was between guys again, and didn't really have anyone she was flirting with or even kind of seeing. Neither did I. I hadn't really been looking that hard. She asked me to go with her. I immediately said yes. We were going as friends and we were totally okay with that. We had way too much fun together. \n\n\"Honestly Jackson...I think I'd have more fun with you anyway. You've kind of become my best friend this year. It's like, the most genuine thing I've had in a while.\" She said to me in the sweetest way. I truly adored this girl in every way. \n\nThe night of Prom I arrived to pick her up from her place, and almost had a heart attack when she opened the front door to greet me. she was wearing the tiniest lavender mini dress covered in sparkles that showed off her full rack under thinly clung spaghetti straps. Her hair was down and done with streaks of glitter. Her face also had streaks of glitter and dark, shadowed makeup. She was fiercely beautiful. She was a force of nature. \n\n\"You look...\" my mouth was hanging open flabbergasted at how hot she looked. This did not look like a going-with-a-friend kind of dress. This dress felt much more like a blowjob-on-the-way-there type of affair. \n\n\"Sexy as fuck?\" She gleamed at me with the most flirtatious smile, \"I know.\" She put a friendly hand on my tailored blazer. \n\nWe both had a laugh and gave each other a huge hug as her suspended breasts pushed forward into my body and i secretly died a thousand deaths. She squeezed my arms and I smiled at her warmly. \n\n\"You fill out this jacket well, Mr. Detwiler.\" She said to me, and I gave her a theatrical body building routine which she pretended to be my photographer for. I gave her the purple corsage and she pinned on my boutonni\u00e9re. \n\nAfter pictures and goodbyes we were back in my refurbished Bronco and off on our way to dinner. \n\nBridget was in an amazing mood. We both were. There was something to be said about a friendship this close. We were eating at this Italian spot that Bridget had recommended. \n\nIt was the type of restaurant that fills only one room of space with fifteen or so spread out tables. Bridget and I were led to one of the window seats that fit against the front corner on an L shaped cushion bench. We sat adjacent to each other, our legs barely grazing in the below the the tablecloth. \n\nDinner was amazing. We were thick as thieves. Cracking up all night long. I noticed that she seemed to be getting closer to me throughout the night. \n\nHer leg pressed up against mine under the table and I was trying to keep my cool. Bridget was the type of girl that always seemed like she could be flirting because we were just becoming so close, and she was so friendly in that way. I had to be careful to remember who we were, and to make no assumptions based on the generally frivolous mood the night. \n\nAnd then something very unexpected happened. \n\nWe were back in my Bronco on the way to the dance. It was around 9:00 PM. She had sidled over next to me on the bench seat of my old SUV. I blasted our favorite playlist and rolled down the windows. It was an unseasonably warm night out for March in a mountain town. \n\n\"Ya know what Jackson? I know we're only going to Prom as friends, but I feel like we deserve to indulge in all the traditions...don't you?\" Her hand slid over the top of my right leg to massage the inside of my thigh. I gulped and looked down at her on my shoulder as her fingers traced the inner seem of my slacks. \n\nAll I could do was smile at her with a confused eyebrow. Was this really happening? \n\n\"Eyes on the road, Mr. Detwiler,\" and she slowly worked her hand up to my belt and zipper to undo them. My cock was harder than jail time. She fished out my absolutely bulging seven inches of glory and began to give me the most teasing blowjob of my life. \n\nWe were 20 minutes away from the dance, which was being held at a ski resort. I drove slower than I needed to. She knew that. We were both quite focused on our tasks now. \n\n\"MMmmmmm, I always wondered how big you were. What a sexy fucking cock this is,\" and like that she had disappeared down my body, and the hot, wet breath of her mouth was soon licking up the side of my tool, as she jacked me softly against her lips. \n\nShe engulfed my cock as I drove, trying my best to maintain my speed in the slow lane. \n\nI wasn't going to last long. Her perfect lips bobbing on my sensitive glans. Her soft hair bouncing in my lap. Bridget sucked cock better than any girl I'd ever had suck my cock. She bobbed on me and I never felt a single bit of teeth. She also suctioned tighter to me than I'd ever had before. Everything felt so soft and so good and it was only about five minutes in that I told her I was going to cum. \n\nShe never stopped. Her head continued it's torturously good up and down motion, as her tongue swirled my head like an ice cream cone on each pass. \n\n\"I'm cummmming fuckkkk, Bridgettttt!!\" I moaned. And she gulped and licked and gulped and licked. She stayed on my cock, long after the shudders had slowed down, as she slowly came up with a satisfied pop of her lips. \n\nI watched her push a drop of cum on her lips into the corner of her mouth and smile at me. \n\n\"Mmmm, that is a delicious cock,\" she mewed, and I died all over again. \n\n\"Holy shit! Where did that come from? I mean I'm not complaining but...wow!\" I was smitten. She had completely drained me. She looked so sexy there next to me, her face covered in my juices and sweat. She'd already started to readjust her makeup in the car. I was wondering why she'd brought such a large makeup bag. Wow. She'd known she was going to do that probably. \n\n\"Welll...if I'm being verrrry honest with you...I think I've kinda had a small crush on you ever since we first met.\" She said, and my heart grew a couple of sizes when she said that. She was applying fresh lipstick and had her face pressed forward into the passenger side visor mirror as she steadied herself. \n\n\"Damn...I had no clue. Obviously you've probably already figured out that I feel the same way,\" I said back, in a slightly less smooth way. \n\n\"I know Jackson. You've been an amazing friend these last few months...but your eyes also undress me every time you see me,\" she stopped to look at me with a little sass. \n\n\"Guilty. Yeah...I'm sorry...you're like the hottest girl I've ever been close with. I just figured you wanted to keep it as friends,\" I said, feeling a little silly at how obvious I'd probably been. \n\n\"I don't think I knew quite what to do with you...I think the moment I put on this dress...I knew I was going to be fucking you on prom night,\" she said, and my heartbeat started going even faster. \n\n\"Oh yeah?\" I said with the dumbest smile. \n\n\"Yeah silly, but first let's go dance our asses off and make the popular crowd jealous.\" \n\nWe had so much fun that night. We did all the things. Pictures. Talking to friends. Sneaking a flask into a dark corner. Saying hello to teacher's working as dance proctors. \n\nWe didn't rush it, even though we both knew where the night was headed. When we did finally walk out into the crisp night air, the sweat started to dry on our bodies. We had truly gone all out. We weren't worried about how we looked. The night was all about us and one else. \n\nShe hung onto my arm as we walked. My teenage heart was bursting out of my chest. \n\nWe got in the car and drove to a lookout point that everyone in the town knew. There were seven cars parked in a line with all the city shining back. I never thought I'd ever be sitting in my car next to Bridget-fucking-Ramirez in a dress that made my cock hard from a mile away. She was breathtaking. \n\nWhen we pulled up to the spot, she turned up the radio and jumped onto my lap. We began to make out immediately. She wanted me bad. I could feel her urgency. I turned the engine off and the lights went out other than the radio, which was set at just the right volume for car fun as her Spotify playlist set the downbeat. \n\nShe fished my cock out of my pants and I went to grab a condom from my wallet. She grabbed it from me and ripped it open with her teeth as her hand was jacking me off. She quickly worked it down my cock with experienced ease. Neither of us were virgins, though I hadn't really gotten much out of her about her sex life, or kinks for that matter. We'd only been friends for a few months. Some things, naturally, came later on. \n\nWhen she'd gotten the condom rolled onto my boner, she pulled to ensure the little space at the tip, she jacked me in her hand for a few seconds longer and admired the throbbing size in her grip. The thin condom was barely noticeable as she touched me. She kept biting her bottom lip and arching her neck. \n\n\"Take my panties off,\" she said, as she leaned back on my steering wheel, spreading her legs up towards me. Her red-bottomed, all-black heels were pressed against my seat, holding my chest in place. Her entire outfit was a sexual mood. I pushed the seat all the way back which gave us enough room for our current position. (Yes...I have a sliding, front bench seat. My Dad and I were car fanatics and had decked out this car together over the last four years in the garage.) She mewled when I did that. \n\nI pulled the short skirt up her legs and could already see her ridiculously sexy lingerie panties. She'd clearly known she was going to be doing all of this tonight. They were crotchless, and had four strings running down which attached the waist and small triangle at the bottom, as the string disappeared between her cheeks. Her pussy was perfect, and of course she shaved. She even had one of those little tanning hearts that girls often got. She just looked like sex. \n\nI pulled the strings open, and just like that she was sitting forward on my cock. She impaled me inside of her as her own gushy wetness made her very ready. She groaned loudly at my impressive length and I enjoyed every second of my best friend's crazy hot pussy for the very first time. \n\n\"Jacccckkksoonnnnnnn, fuckkkkkkkk!\" She loved my cock. She squeezed me with her vaginal muscles and shook on top of me with a zing of all-over pleasure. \n\nWe steamed up that car like the hyper-horny 18-year-olds we were, for the next twenty minutes. I was impressed with how long I lasted. She really had emptied me with her mouth earlier that night from the surprise road head. \n\n\"Bridge...I'm close...\" I told her, as she ground herself in delicious up-and-down circles on me. She was wetter than any girl I'd ever been with, not that I was any sort of sexual poet laureate as of yet. \n\nHer skilled pussy seemed to be milking me through those final bounces on my cock. She undid the straps of her dress to reveal a sheer, frilled black bra, barely holding her erect nipples and C breasts. Her dark brown hair falling over her gorgeous chest looked like an avalanche of pin-up candy. I could see her hard nipples peaking through the sexy design. \n\nShe pulled her boobs out and squeezed my hands against them as I moaned into her.\n\n\"I'mmmm cummminggggg!\" My cock blew up inside the condom and she rode me hard through my second ejaculation, squeezing my tool with her pussy. \n\n\"Fuckkk I'm gonna cummm too baby, don't stoppp!\" She achingly moaned, and I felt her body shudder all over as she bucked like a bronco on my hips with immaculate passion. I did my best to ram my hips upward to fill her fully through her orgasm. She came with a gigantic intensity that sucked me into its heat. \n\nMy hands loosened their grip on her perfectly perky breasts. She was so damned hot and I had just cum harder than I could remember ever cumming. \n\nShe kissed me and we made out softly for about five minutes, just enjoying the feel of being connected like that. My cock was still hard inside of her. She felt so good. She felt like young pussy that would be tight for years. \n\n\"Mmmm I am SOOO glad you have a good cock,\" she had her hands around my neck playing with the tufts of my hair. \"I was SO hoping you would.\" \n\n\"MMMhmmm. Well you're very welcome,\" I said, in my own cocky way. \n\n\"We're not done,\" she countered, as a sultry tone returned to her voice. I was so obsessed with this girl. \n\nShe pulled her pussy off of my cock and I looked down with a sudden gasp. My still rock hard penis was sticking nakedly through the obliterated condom, cum coating just about everything. \n\n\"OHHH!\" Bridget noticed now, and she paused and then started to laugh. I was mortified. I'd never had a condom break, and I had cum a ton. \"That's pretty funny,\" she said, biting a finger. I didn't quite see the humor that she did. I cocked my head. \n\n\"It is??\" I asked, confused.\n\n\"Yes. Babe. We're totally fine. I'm on birth control. I don't have any STD's. Do you?\" she was so damned cute and unstressed by the world. ",
        "\"No,\" I was instantly relieved. Birth control. Phew. \n\n\"Good, then.\" Her smile was like molten lava.\n\nWe made out more as I took the broken condom shards off, hardly missing a beat. \n\n\"Lay down on your back,\" she told me with more of an insistent tone in her voice. \n\nI did as she said. I was wrapped around her finger. \n\nThat's when she climbed up onto my chest and placed her pussy on my mouth, her skirt still bunched around her waist. Her knees slid forward so she was straddling my face now. A bunched up sweatshirt on the seat allowed me to meet her at the right angle. \n\nI didn't hesitate. She had a look in her eye that said \"Eat. My. Pussy.\" I began to slurp at the very wet folds as she rubbed her sweet sex on my mouth and nose. She was still drenched in all of our juices. I licked my cum out of her and I heard the way she moaned as she watched me clean up our mess. \n\n\"Mmmm, yessss. Fuckkkk, lick that juicy cum out of my pussy, baby. Taste your salty cum for me, Jackson.\" I couldn't believe how she was talking to me, but I loved it. I'd never heard her like this before. It was shockingly erotic. I tasted my own cum mixed with the sexy fragrance of her teen pussy juices and whatever lotion she used on her skin. I loved it. \n\nI was moaning as I ate her. That's how intoxicating all the smells and flavors were. \n\n\"YES Jackson, lick that messy pussy. Eat your sticky cum out of me, baby.\" She held my hair and pushed my face against her vagina, as I breathed out of my mouth whenever I could manage. \n\nAfter I'd thoroughly cleaned her up she surprised me again as she climbed off. \n\n\"Flip over on your stomach.\" She said to me. This was something new. \n\nI flipped over and my hard cock pressed into the leather bench seat. One leg went around her back and the other hung down to the floor below the steering wheel. \n\nShe sat behind me and i felt her legs grab my upper thighs as she brought her lips down to my ass cheek and lightly nibbled my muscular ass. \n\n\"Jackson...have I ever told you you have an amazing ass?\" She had moved her hands up to squeeze my naked buns. I looked back over my shoulder at her in the darkness of the car as her sexy face disappeared between my cheeks. Her body was bent over mine now. \n\nHer lips teased barely past my hole, and I felt her place more kisses on my inner thighs and buns. I could feel her tongue slide out to massage all the way up my anus and my taint and then she fully sucked her mouth against my very sensitive perineum. She licked the bottom of my balls and sucked them into her mouth and then came back down. \n\nI was practically holding my breath at this point. My nerves were going crazy, but it felt so fucking good. \n\nThe hottest 18-year-old girl in my high school was giving me my first ever rimjob on Prom night, and I was moaning into the worn leather of the seat, in gobsmacked wonder. Every single hair on my body stood like corn stalks, and she was simply whispering into my radicalized brain: \"If you lick it...he will cum.\" \n\nI felt her tongue drag into my crack and slide into my asshole finally. She broke past my sphincter as she slid further into my butt. I had a tongue inside my asshole for the first time and my eyes had completely rolled into the back of my head to search for some kind of new religion, as my cock oozed pre-cream. \n\n\"Bridgetttttttt,\" I moaned her name because I wanted her to know how turned on I was. \n\nThen she was propping me up for more and I watched as she pulled my cock back towards her. this forced me to arch my lower back up as much as possible. \n\nI imagined what a cop would see if he approached and shone a light into the car: my ass, popped and spread, as the high school's It-girl tongued my tightness like a tigress. What a fucking scene we made. \n\nShe had managed to get my cock back towards her now and I felt her moving around. She was taking her dress off and bunching it under my crotch to allow me to rest my cock backwards more comfortably towards her. She was still wearing her sexy heels. I had to really pop my ass up so she could bend my boner fully back behind me. She started to teasingly stroke me against the softness of her dress, with one or two fingers rubbing the tight skin of my shaft. I was so hard and she noticed that. \n\nShe pushed her mouth back to my ass while she rubbed me and even spit her saliva into my crack and the sheet dirtiness of it made me melt. She was immediately wilder than any girl I'd ever hooked up with. \n\nAs she jacked me her lips came off my wet hole and I felt her fingertip run between my buns as she began to stroke my sensitive ring. This was a new kind of sorcery. \n\nI moaned loudly again. I'd never had a girl play with my ass before, much less a girl that this was feminine and this stupidly hot. \n\nHer pointer rubbed spit over my hole\u2014softly and seductively making its point. I felt her rubbing her own juices all over me. I moaned as she did it. I couldn't believe how amazing the sensations were from ass play. \n\nShe stopped stroking my cock and reached her fingers into her very wet pussy to collect a sloppy, wet collection of our juices. Then she painted my asshole with all that slop like a brush to canvas. \n\n\"You have such a fucking sexy ass, Jackson,\" And as she said this, I felt her pushing a finger into me for the first time,\" I groaned out loud and tensed my body as I felt her enter me and my ring tensed to hold onto her intrusion. \n\n\"Holyyy fuckkkkk, Briddgget,\" I oozed out sensual sounds. \n\n\"Yessss, Jackson...just relax your body and enjoy the way it feels to be fingered by a girl that's obsessed with your ass.\" I could tell how turned on she was by the way she moved with me. Her own body was grinding up against me from behind as she worked me slowly open. \n\nHer finger traveled all the way into my very tight hole and I took deep breaths in and out. When I'd started to breathe easier and get more comfortable she began to push in and out. And then I gasped again when I felt her shove a second digit inside of me. \n\n\"MMmmmm, such a gooood boy,\" she cooed at me and I kept my eyes clothed as my teeth lightly gritted in pleasurable depravity. It hurt...but I also was beginning to like it. Her fingers were curling inside of me with a small hooking motion, and she flicked at my prostate before I even knew it was a thing. \n\n\"MMMmmmmfuckkkkk,\" I moaned longingly. Bridget was starting to finger me with a little more consistency now. In and out, as her free hand gently jacked the very base of my shaft with only her thumb and pointer.\n\n\"Bridgetttt ummm gonnnnna cummm soooonnn...\" I confessed to her in a muffled garble. \n\n\"No you're not,\" she said without missing a beat, and her hand grabbed my balls around their base and squeezed hard. \n\n\"Ahhhh!\" Escaped from lips, as I again arched my ass up, which further gave her permission to increase the pace she was fingering me. She completely squeezed off my orgasm, denying me what I so badly needed. My ass was on fire. Everything in my loins felt connected and I desperately needed to cum; but only a dribble of sperm drizzled out the tip of my dick. \n\nShe rubbed the cum into my hole and kept going. \n\n\"Oh my goooodd you're fucking incredible,\" I moaned back to her. \n\n\"I know baby,\" she fluttered with all the confidence of a sexual butterfly, wildly comfortable and graceful in the power of her demeanor. \n\nShe fingered me longer and harder and I moaned louder. We were getting sweaty. She rolled the windows down and continued. Little did I know, but there was a blonde slut in the car right next to ours that was being pounded up against the window, and because they had a taller SUV, they could see my ass through the half-open window, and could see Bridget fingering me, though thankfully in the dark we were only shadows. Bridget would tell me this story much later on. About how she and the blonde traded very sexual gazes while they got their fill. I wondered if it might've been a schoolmate. What would they have thought? \n\nAnytime I'd start to get close, she slow down her grip on my cock and squeezed my balls hard. All while continuing to spit juice into my hole as she pushed her fingers into me harder and harder. \n\n\"You like that Jackson?\" She asked me, as her hand began to jack me off very hard, and her fingers continued to thrust inside my buns. \n\n\"Fuckkkkk yessss Bridget...I wanna cum so badddd.\" \n\n\"Oh yeah? You wanna cum while I finger your ass baby?\" She asked me with this insanely sexy tone in her voice. \n\n\"Yessssss!\" I was drunk for her. \n\n\"Cum for me baby,\" she demanded, and her pussy ground on my leg as she finger-fucked me like one of those automatic fucking arms from the deeper reaches of a porn website. Her hand felt stellar on my cock, and soon I was cumming all over her dress and the seat. It was so much cum. I drained buckets as she flicked her fingers across my titillated prostate with every caress of her hooking fingers. She'd done this before, that much was clear. \n\nI cursed into the car door as the sensitivity became too much and I pushed her fingers out of my sensitive hole. I was shuddering against the seat and felt like I could honestly cry. \n\nShe pulled me to her and we made out, messy and without boundaries. \n\n\"Shhhh, it's okay...it's okay, Jackson,\" she comforted me as her beads of sweat lit up her gorgeous body in the moonlight. \n\n\"Fuckkkk. Ohhhh my Godddd. Bridget. Fuck.\" I couldn't form sensible sentences. I was merely words and emotions. \n\n\"I know, trust me, I know,\" she said with a very big smile as she stroked a bit of hair from my forehead, caked in sweat. \n\n\"I've never...ever...cum so hard,\" I was being honest. That was an orgasm for Hall of Fame consideration. \n\n\"Most guys don't ever get to see just how fucking good playing with their asses can feel, so yeah, you're not the first guy that's told me that...\" she was staring at me in such a sexy way. She was into me. She wanted me. I loved it. \n\nI kissed her again and then she stopped me. \n\n\"My dress is a total disaster,\" she held it up between us in the air, and there was a huge pool of cum on her skirt. \n\n\"Look at all of this dirty cum, Jackson. I can't walk around covered in cum,\" it was like she was challenging me. Like she wanted to see what I would do. I wasn't going to back down from this girl. Not when I was so entranced. \n\nShe flicked her tongue out at the dress and some of it fell into her mouth. It was the hottest show I'd ever seen. I brought my lips up to the hem of the dress she was holding. I stuck my tongue out and gathered my own salty cream into my mouth, watching her the whole time. Her eyebrows raised and she smiled. We started to kiss now. Our mouths sucked the rest of the cum off her dress and shared it between us. And then she really surprised me. I felt her grab my head and she pushed me down to the leather seat. There was more cum. I licked the cum off of the seat as I allowed my tongue to taste every single drop. She smacked my ass behind me as she kept my hair firmly pulled and held to the seat. \n\n\"Eat your cum for me, Jackson. Show me you love it,\" and she smacked my bottom again. I groaned wantonly. \n\nWhen I was done cleaning my mess up she pulled me back up and we made out even more. She was VERY horny now. \n\n\"Holy fuck, Jackson...you are so much fucking fun and so sexy and I LOVE how dirty you're being with me,\" she moaned rapid fire confessions. \n\n\"I can't believe how amazing it feels to be so naughty with you.\" I was so into this girl. \n\n\"Take me back to the hotel. I've got a big surprise for you.\" She said, as she pushed me over to the steering wheel and took the middle seat next to me. \n\nI gave her a big eyebrow as we both hastily threw on our clothes. We clearly looked like we'd been fucking. She smiled at me with so much lust and adoration. \n\nI raced the five minutes down the road to the ski resort-esque spot I'd managed to snag us for the end of our Prom night and we checked in as quickly as we could, fully aware that we looked like a sweaty mess to the hotel check-in desk. We grabbed our bags and keycards and headed up to the top-floor room that looked over the illuminated city below. Her parents were told she'd be staying with friends. They trusted their little angel and had no idea she was a little devil. We were handsy with each other all the way up the elevator and down every hall. She stroked my cock through my pants as I struggled to the get the door open. I pushed her into the room and we started to make out ravenously again. \n\nShe was on the bed and she flipped her dress up and I fucked her doggy style for an amazing ten minutes. The sounds this girl made would've had Ophelia Rain blushing. She came on my cock and I loved hearing her orgasm for me. \n\nShe pushed me off and went over to her bag. I watched her pull out some toys. A vibrator. A plug. A strapon. Lube. \n\nHoly fuck. \n\nShe took her dress off, but once again, left her sexy heels on. Now she was only wearing the lingerie set and her heels. She also put on this lace choker from her bag that I hadn't expected. Her entire look began to become that of something more controlling. \n\nShe pushed me back onto the bed before I could overanalyze anything, and then folded my ass up. I felt her drizzle the water-based lube onto my hole and soon she was pushing the medium-sized, silver plug into my hole. I moaned and clutched at the sheets as the fat, glass head squeezed past my sphincter and tightly fastened to my inside, as the base attached to my ring. It really did plug me. The name made sense. It was a crazy full feeling. \n\nOnce the plug was inside of me, she sat me up on my knees to make out with her again. She knew what she wanted and she didn't wait for it. I loved this. She was a complete package of certainty and the sexiness of it was almost unnerving. \n\n\"Do you like that?\" She asked, as she broke our kiss. She brought her hands down to squeeze my cheeks behind me. \n\n\"Yesss, I really do, Bridge...\" it hurt, but I loved the kind of hurt it was. Not painful...so much as...a necessary pain. The pain you want. \n\n\"Good, cuz I've been thinking about your ass all week,\" She admitted, and I watched as she pulled on the dark red, leather harness over her panties. A thick, six inch dildo swung firmly through the front ring, and soon she was cinching up the straps to tighten everything to her body. She turned on a small vibrating egg that pushed against her clitoris from behind the silicone cock. \n\nShe pushed me backwards on the bed and I gulped as her smaller frame seemed to instantly take over. She sucked on my very hard cock as she pushed my legs up and smacked my ass a few times. Anytime she would spank me the plug inside of me would cause my entire crotch to pulse with pleasure. It was such a totally new feeling to have. I looked up at this gloriously hot girl with her dark brown hair brushing her neck. She was a goddess above me. She was Cleopatra reincarnated. \n\nAnd then she started to pull the plug out of me, even as her lips deep-throated my tool. Once it had plopped fully out, she threw it aside and squeezed more lube from the bottle out onto the toy cock and down my hole. She spread my legs around her and scooted into my crotch, centering her cock at my anal ring. \n\n\"Jackson...breathe deep for me baby\" I did as she said as I felt her pushing the plastic cock into my body. It was one of those life-like dicks that had all the real ridges and helmet head. It burned when the tip was cresting me, and then it plopped in much like the plug had, but it hurt much less due to how big the plug had been, and also from all the lube, and also because I was so transfixed by her cute face as she smiled at my strain. I wish that wasn't a run-on sentence. But that's how everything felt, like a run-on sentence of nerves and excitement. \n\n\"OOommmmfffffff,\" I moaned loudly, and she brought her body down on top of mine as I wrapped my legs behind her. This was so insanely intimate. \n\nShe gave me a moment to adjust to the fullness and then began pushing her cock further inside of me. I was breathing very fast. I was actually going to be fucked by a strapon cock. I couldn't believe it. \n\n\"You like that, Jackson?\" She asked me in the sexiest alto, as the cock burrowed further into my virginity. \n\n\"Yusss,\" I moaned up at her. She kissed me, and then she fully impaled me, shoving the final two inches in with the squelch of the generous lube in my crack. I clung to her back like a scared cat at first, and she kissed me over and over again, as her strong thighs pushed my legs open. \n\n\"Just relax baby, let me have you. I want you so bad,\" and I did as she told me to do. I relaxed my body, breathing deeply in and out, and soon she was pulling out and pushing back in. \"You're so fucking sexy, Jackson. Give me your ass, baby.\" \n\nBridget Ramirez, recently crowned senior year Prom Queen, and mysterious object of everyone's affection, was taking my anal v-card on the top floor of a luxury hotel. I noticed how her playlist had changed. It had gotten sexier, and more dangerous. My Body is a Cage bellowed as I panted for her. \n\nShe began to grind into me in amazing ovals, and my body slowly got used to the feel of being so stretched. Her movements pushed the cock into my G-spot over and over, and my stupidly hard cock pressed against her soft navel and left trails of my sperm all over her stomach. The cock entered me repeatedly, and forced high pitched moans from my mouth. \n\n\"Mmmm, look at how hard you are Jackson...you really like this, baby...give me your ass baby, give it to me.\" Every word she said made me harder. I wanted to give her my ass. I love how she phrased that. I love how she wanted me. I moaned louder and arched my body up to her. She sat up and began to fuck me harder. Every thrust was timed with her hand on my cock. She jacked me and fucked me and totally took me on this wild ride with her. \n\nThen she was picking my legs up to rest on her shoulders. I watched her lean her upper body back and thrust into me with her own whorish moans of delight, as she listened for every submissive sound suddenly spewing from my mouth to know what I liked the most. She knew what she was doing at every turn. \n\n\"Fuckkkkk, Bridgettt...yesssss fuckkkk meeeee fuckkkk meeee fuckkkk meeee I fuckinggg love yourrr cockkkkk!\" I honestly had never felt so powerfully turned on by another human being before. She was unlocking me and I said dirty things on cue for her. \n\n\"Yesss Jackson...take my hard cock up your slutty ass. Take this big, hard dick baby and tell me you fucking love it,\" She was bouncing into me, each thrust wanting to go deeper, wanting to fill me more. \n\n\"I loveeee it...I loveeee your cockkkk sooooo muchhhh,\" and before I could even warn her I was cumming. \n\n\"MMmmm BABBBBBYYYYY!\" She squealed and folded me upwards as she filled my deepest depth with her athletic pegging pounds of pleasure. My cock geysered cum all over my tummy and chest and I kept my eyes closed as I was racked with shaking tremor after shaking tremor. I couldn't remember ever cumming so much in the span of just a few hours. My balls were absolutely emptied. \n\nShe slowly let my legs down and fell back on top of me, refusing to take the cock out of my very stretched hole. I loved her hot tits pressed up against my own pecs through the sexy bra, as she held me to her. \n\n\"That was everything I've wanted with you for so long,\" she said, and her lips kissed my chin and nose and eyes and cheeks. I could feel how tightly she was holding the cock inside of me, keeping me full. She wanted me to be at my most submissive. \n\n\"How did I not know any of this about you?\" I was smiling as I recovered still from the all-over pleasure of my orgasm. I couldn't believe what a dominant dynamo Bridget had been hiding. I don't know what I thought she would be like in bed. In my fantasies she had always been a silly little slut, and yet there I was...spread and taken. ",
        "\"Why do you think I never stay with guys for that long?\" She said, and I felt her softly rocking the cock inside of me. I shuddered again as I held her to me. \n\n\"So you reveal that you're super kinky and...unnnfff...guys get scared offfff?\" I asked in a whisper between us, enjoying the continued fullness and her naked skin pressing against me as we lay there all wrapped up together. \n\n\"Basically. I've had a couple of guys that were into it...but they couldn't handle me in the end. Jackson...I'm like...REALLY kinky. And whoever I date...I basically need them to be that kinky too,\" she said. I felt her push the dildo into me firmly as I kept my legs wrapped around her butt. \n\n\"Well...I'm super fucking into you so far,\" I told her, and she gave me a wicked smile. \n\nShe pulled out and rolled me over onto my stomach. Then there was more lube, and she was straddling my ass and pushing inside me again. This was strictly for her now. I was cummed out. It still felt incredible. She fucked me from behind and used me for her needs. \n\nShe lay down on me and just fucked me for a while, good and firm, in a rhythm that stimulated the buzzing toy against her pussy. She was grinding into me in a way that left me feeling completely hers. \n\nShe brought her hands up under my arms to hold my shoulders as she fucked. Her lips traveled up beside my face. \n\n\"My dream boy let's me take his ass whenever I want. Do you understand?\" She said to me, and her hips fucked my spread buns. \n\n\"Mmmmhmmmm,\" I moaned back, and her pounds made me whimper. \n\n\"My dream boy has a slutty ass and will do whatever I tell him to do,\" she said. And again I moaned affirmatively to her. She could tell how much I was loving the verbal seduction. She fwapped against my hole with her fat cock, as the strapon straps dangled against me. \n\n\"I want a boy that loves cum...and I want a boy that'll take cock for me.\" When she said this I instinctually moaned, but I wasn't sure what she meant by \"cock\" here. Did she mean her cock or...or did she mean...?\n\nShe leaned in closer to my ear. \"My biggest fantasy...\" and the way her soft lips dragged against my ear, I was actually starting to get hard against the bed again. She was on another level of sexy. \"Is a boy that'll let me train his ass to love cock and cum,\" I gulped as she confessed this. I should've been so turned off, but that was impossible because I was being impaled and moaning like a whore the whole way through. \n\n\"I want a boy that'll suck on a cock while I watch. I want a boy that'll share a cock with me. And I want a boy that'll let me bend him over and get fucked by big cocks...Just. Like. This. Cock.\" And each word was a thumping thrust that rocked the whole bed. She was so in control of my fantasies. I imagined being this submissive for real cock. I thought about her laying beside me while I was fucked by an actual cock. It sounded exciting. Because she made it sound so sexy to her. And I wanted to please her so badly. \n\n\"Yessssss fuckkkk,\" I was dying for how she fucked me. \n\n\"Are you going to be a little slut for me, Jackson?\" She asked, and she fucked me so hard I could hear the fwapping of her skin against my ass. This girl was pounding me. \n\n\"YESSSSSS!\" I moaned back to this insatiable vixen. \n\n\"Are you gonna swallow cock and take cock up your ass?\" I moaned back yes again. \n\n\"Goood Boyyyy!\" I heard her moaning louder and harder all the way through what would be her final orgasm of the night. The sexy talk and the intense buzz inside the strapon brought her crashing down on top of me in a pile of intense tremblings as she rammed me fully through her explosive finale. She came the way I came. \n\nHard. \n\n\"Mmmmmmmmmmmm babbbbbbyyyyyyyyyyyyyyy,\" she moaned into my sweaty back, as she rubbed her appreciative body against mine. \n\nWe untangled as she pulled the messy dick out of me. She unstrapped herself and put the toys on the bedside table. \n\nShe crawled back into bed with me and we stared at each other longingly. She ran her hands down my chest and shoulders and arms. I did the same to her. We were naked and so fucking into each other. The attraction was mindnumbingly intense. \n\nWe lay side-by-side and she played with my half-hard cock below us softly, the way no girl had ever done with me after sex. Her perfume filled my nose and her sweat was my funky pheromonal match. \n\nWe stayed up talking for a while which was amazing. \n\n\"So were you serious about all that stuff you said while you were fucking me?\" I asked her, wondering if any of it was exaggerated for her orgasm. \n\n\"Yes. Completely. I know it sounds super kinky and I'm sorry, I didn't mean to just reveal all of that all at once but I was so horny while I was fucking you,\" she said. \n\nI grabbed her suddenly around the waist and pulled her into hold her face with me hand. \"Hey...do not ever apologize for being yourself. I'm so fucking turned on by you. I LOVE how direct you are. And that was the best sex I've ever had.\" She beamed at my compliments and looked at me like she couldn't believe I was real. She brought her hands up to rest on my face and neck. \n\n\"Mmmm Jackson I love hearing you say that,\" she said, and she was so honest and heartfelt in the way she said it. \n\n\"I have never had my ass played with before tonight,\" I said to her, blushing a little as I bit her finger traveling past my mouth. \n\n\"I knew you hadn't,\" she said, \"I could tell by your sounds and reactions...I wanted to make your first time really good,\" she said in the sweetest way. \n\n\"How did you know I wasn't going to freak out?\" I asked curiously. \n\n\"Oh...I didn't. And trust me...guys have freaked out with me before. But look, that's who I am sexually. I like the role reversal, I like to be in charge sometimes...and like...I'm super into boys who explore their sexuality. It's my biggest turn on. Also...I'm an ass girl. Like...I'm obsessed with ass. So. Fucking. Obsessed.\" She slid down my body and rolled me onto my stomach again as I turned to look back over my shoulder at her. It was honestly exhilarating to have a girl that focused so much on my butt. I'd never had that attention before. \"And your ass is...babe...it's fucking sexy as fuck. I wish you could've seen how good you looked with my cock inside of you.\" I smiled wide at her blatant honesty. She was absolutely shameless in her adoration of my buns. \n\n\"That's kind of hot...no one has ever talked about my ass like that,\" I said, looking back at her. \n\n\"Really? That blows my mind. You are so crazy hot,\" she replied. \"And especially because you let me take you,\" and she kissed my hole with a little peck, before spanking both of my buns playfully with both hands. \n\nShe crawled back up the bed with me and we snuggled. After bathroom trips and teeth brushing we were cozied up under the covers. \n\nWe fell asleep cocooned against each other. I was so happy with this girl. She was so happy with me. \n\nI woke up that next morning feeling something very warm. I opened my eyes to her lips spreading over my cock head and engulfing me in her hot mouth. \n\nHer fingers teased my hole and she sucked me with long, slow slurps. \n\n\"Fuckkkk Bridge...gooood morning to you,\" I moaned happily as my body quickly awoke to the all-over pleasure of a morning wood blowjob. Her messy hair was pulled up in a ponytail as she worked. \n\nWe traded off. I ate her out and licked her ass. She did the same for me. We sixtynined and ate each other's buns and said nasty things to each other. She was just as slutty as I had been for her. She had me sit down on one of her dildo's, and then climbed on top of me to ride me. \n\nThis was incredible. I had this big thing in my ass while she rode me and squeezed my cock with her pussy muscles. She watched my face with lust each time she would sink down on me, noting how the toy inside me contorted my lips with each new thrill. We made out for a while like this, and each time her ass would push down on my crotch, I'd feel the toy press firmly into my ass. \n\nShe began to ride me harder, like a true cowgirl. \n\n\"Mmmm, fuckkk, yesssss, Jackson your cock is sooooo fuggging gooooodd,\" and her hips bucked on me with all the energy of an 18-year-old in heat. \n\n\"I'm gonna cummmm,\" I moaned to her, and her own orgasm began to rise with mine. \n\nThe combination of the toy rocking in my bottom and her pussy sliding smoothly over my hard cock was too much. She was so perfectly tight and smooth and this girl was so wet when she was horny. \n\nWe moaned horny noises into each other's mouths as we fucked hard for sixty more seconds. We poured everything into each other. \n\nMy eyelids were practically fluttering as she held my neck and moaned into my mouth while we came together. It was delightfully erotic in every way. \n\nShe fell down next to me, and pulled me with her, still inside her. We held each other tightly, not able to get enough. The dildo slid out and I threw it on the nightstand to clean later. \n\nThe sun was barely peaking over the distant mountains and seeping through the thick, hotel curtains. It wasn't even 6:00 AM yet. She had such a sexual appetite. Maybe even more than me, which I didn't even think was possible. \n\nShe looked over at me with hair draped across her face. She was aglow with the wonder of post-orgasmic bliss. I loved being in her body. \n\n\"Baby...\" she looked at me with these glazed eyes, as my hand caressed her cheek and felt the warm flush of her beautifully tan skin. We pretzled our legs below us and scooted very close to each other, as she locked my fingers in hers. \n\n\"Yeah...I know.\" \n\nAnd we fell back asleep."
    ],
    "authorname": "SluttyBisexualGuy",
    "tags": [
        "bi encouragement",
        "broken condom",
        "dildo",
        "femdom",
        "first time anal",
        "orgasm denial",
        "pegging",
        "rimjob",
        "strapon",
        "submissive male"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/prom-night-pegging"
}