{
    "title": "The Personnel Manager",
    "pages": [
        "This story is about a young man's infatuation with an attractive, mature and self-assured professional lady. She is the Personnel Manager in the offices of a big London accountancy firm, where Ben starts work after university. Nowadays she would be the Human Resources Manager but I wanted to stay true to the times.\n\nI think of it as a love story with sex. I hope you enjoy it.\n\nSylviafan\n\nI was twenty-two when I finished at Leeds University where I'd read accountancy. It was as dull as ditch water but I saw it as a means to an end; I'd got my sights set on learning the trade then setting up my own business and retiring at fifty. Forty-five if I could manage it. So I'd worked hard at Uni and I'd got a First-Class honours degree and had come second on my course, out of a hundred and forty-eight.\n\nSo when I applied to each of the big six accountancy firms I wasn't surprised to be invited to interview at all of them over the space of a fortnight. The fourth interview was with Bright and Alcott, who would probably have been my last choice, mainly because I knew less about them than the others. This was the early nineties, when the big six took hundreds of graduates on in their big city offices every autumn. This meant that you didn't get much time in an interview to impress. And if you bullshitted them and they found out... I'd heard horror stories of interviews where a managing partner had asked a fearful candidate what distinguished them from the other twenty candidates waiting their turn. One acquaintance had said 'I can juggle,' thinking that such a response would indicate wit, initiative and originality or some such thing. He'd been unprepared for the interviewer producing three tennis balls from a drawer and handing them solemnly over.\n\nBright and Alcott's offices were firmly in the Square Mile, not far from the Bank of England, and covered three huge floors of a towering office block. The interviews were on the uppermost of the three floors, in an executive boardroom. The interviewee faced a panel across a large rosewood table, bare apart from a jug of water and some glasses. It was intimidating. It was supposed to be. Some of the thirty-something associates in the organisation still thought they were Gordon Gecko.\n\nI'd dressed carefully that morning in my best suit, a sober grey with a faint blue pinstripe and I'd spent some time knotting my tie; I'd even polished my shoes. And I thought that I looked the part in the full-length mirror in the bathroom of my north London flat. Very much the smart, keen young graduate ready to take his place on the City's financial stage. Confident, but not too confident. So as I sat outside with the other candidates I didn't feel particularly nervous, just a slight deliquescence in my stomach as I contemplated pitting myself against the interview panel. I knew I'd get a job with one of the big six so I wasn't worried or needy. And I had certain attributes in my favour, not least of which was that I was generally considered to be a very good-looking young man: abundant black curly hair, deep brown eyes, chiselled features and a faint Mediterranean tone to my skin. Of course, such attributes don't guarantee success, but it's a fact that male and female alike generally respond better to beauty than to plainness. It isn't fair, but there it is.\n\nI was called in at eleven forty-six, an hour and a half after I'd arrived for my ten forty-five appointment. Seated across the table was the panel of three interviewers. The panel's chair, a managing partner, introduced himself as Martin Thomas; he was in his fifties, thin and bony, a ring of grey hair enclosing a shiny, bald pate. Unbelievably he was wearing half-moon spectacles which he looked over at me like some Dickensian clerk.\n\n'My apologies Mr er,' he consulted the CV in front of him, 'Walton. We're running a little late I'm afraid so we should get straight on. This is Mr Leaning, one of our associates,' he looked at the thirty-something man sitting on his right, staring at me with faint hostility, 'and this is Mrs Denholm, our personnel manager.' She nodded slightly and smiled. Mr Leaning did neither. But I hardly noticed, because that was the first time that I set eyes upon Judith Denholm.\n\nI don't believe in love at first sight. Love's too complicated an emotion to be generated in a flash. It's not just about looks either. Probably it's less about looks than personality and spirit and vulnerability and a hundred other traits that make up the human psyche. But I believe in desire at first sight, and my first thought was that Mrs Denholm was intensely desirable, even though she was clearly the wrong side of fifty. It would be easy to say at this point that I've always had a secret passion for older women, which is not unusual, I believe. But I haven't. Or at least, up to that point I hadn't. I didn't remotely fancy my mother, who was probably five or ten years younger than this lady. Or any of my numerous aunts. Or indeed any of my friends' mothers. When I had dated, it had been with my own age-group. And I'd had plenty of dates; my female university contemporaries had not been backward in approaching me nor in any way reluctant, in many cases, to jump into bed with me.\n\nSo what was it about this middle-aged personnel manager that was so fascinating? Well for one thing, she was not, by any means, unattractive. She wasn't Ava Gardner or anything like that but she'd got nice, regular features that, when taken together, all worked. Her face was slim, with high cheekbones and a slightly square jaw. A straight nose was surmounted by serious grey eyes and dark eyebrows, which matched her collar-length auburn hair. She was, so far as I could tell from the upper half of her body, slim and well-proportioned with a neat bust and long, slender hands, just beginning to show some faint, brown age spots. The years were also apparent in her face: crows' feet at the corners of her eyes and the beginnings of some vertical lines on her upper lip. But somehow, instead of militating against her attractiveness, it enhanced it. It's hard to describe, and I'm writing about events that happened thirty years ago. All I can say is that as I looked at Mrs Denholm, then forced myself to look away, I was smitten and I knew that I wanted to know this lady. To be her friend, to learn about her and be close to her. And, naturally, to make love with her.\n\nIt wasn't a great start to the interview because my mind was initially in a whirl. Fortunately, the first few questions were about my CV so I didn't have to think too much about my answers. Then Mr Leaning started the general questioning and lost no time in putting the boot in.\n\n'It says on your CV that you were second on your course,' he was looking at me rather than the sheet of A4 on the desk in front of him. 'Why weren't you first? Did you make every possible effort to get the top place?' His tone was almost combative and I noticed the chairman stir in his seat.\n\nRight, you bastard I thought, suddenly not caring if I failed this interview: 'I had a bereavement in the family during my finals. My grandmother passed away.' It was a blatant lie designed to embarrass the inconsiderate twat opposite me but the panel had no way of knowing that. Mr Leaning went slightly red and I guessed I'd made an enemy. He seemed about to say something but Mrs Denholm stepped in, the first time she'd spoken.\n\n'And you still got second place,' her voice was calm and clear, middle-class English, no trace of an accent. 'A remarkable achievement.' I nodded modestly and she went on: 'This company has to work with organisations that operate in very diverse fields. Some of those fields, nuclear power for example, give rise to ethical problems for some people. What would your reaction be if you were required to audit a company whose product went against your code of ethics?' It was a great question and not one that I'd rehearsed.\n\n'Well,' I said, possible responses flashing through my mind, 'I don't think I'm above averagely sensitive to ethical issues. I mean I'm not uncaring or socially irresponsible, but I don't carry a torch for anything, apart from the usual fuzzy wish for a more equitable world. I suppose most of us feel that way,' I said, looking at the three panel members and thinking it unlikely that Mr Leaning in any way desired a more equitable state of affairs. 'And besides,' I assume Bright and Alcott has a business code of ethics and I'd be surprised if I couldn't operate within them. But of course if there were any problems,' I finished, 'I'd highlight the issue straightaway with my manager or supervisor and see what could be done to work around it.'\n\n'Thank you, Ben,' said Mrs Denholm. Mr Thomas smiled at me. Mr Leaning's face was expressionless as he asked the next question.\n\n'It says on your CV that you play rugby in the winter and cricket in the summer. Which position do you play at Rugby?' It was obvious to me that he was trying to catch me out. I'm not built like the Incredible Hulk, but then not all rugby players are.\n\n'Number ten,' I replied, promptly, which happened to be true.\n\nMr Leaning waited for a few seconds but I didn't elaborate. He was a spindly fellow and I suspected that the closest he'd been to a game of rugby was watching it on the television. It was quite possible he didn't know which position wore the number ten shirt and I wasn't going to help him. The silence was getting awkward when Mrs Denholm spoke again.\n\n'Apart from sport, do you have any other hobbies?'\n\nI smiled gratefully at her; it was a question that was designed to let me sell myself a bit. 'Well I'm writing a book,' I began.\n\nThe chairman looked at me. 'What sort of book? Fiction or non-fiction?'\n\n'Fiction,' I replied. 'It's a police procedural novel, mostly.'\n\n'Do you know anything about police procedure?' asked Mr Leaning, a trace of sarcasm in his voice.\n\n'My father's a detective chief inspector with the Metropolitan Police. I get quite a lot of information from him.' Checkmate and fuck you I thought, with some satisfaction, but the personnel manager hadn't finished.\n\n'And have you got the whole plot, the whole book mapped out in your head, or on paper?' She sounded genuinely interested.\n\n'Actually no. I've got two or three possible endings and I'm not sure which one I'm going to use. I thought that if I didn't know the ending while I was writing it, the readers wouldn't be able to guess it either. I know it sounds a bit odd, but it's something I wanted to try out,' I explained.\n\n'I think it's fascinating,' said Mrs Denholm, smiling. 'I'll look out for your name on the bookshelves. Or are you using a nom de plume?'\n\nThe interview ended shortly afterwards and I stood up and left the room, thanking the panel for their time and patience. Mr Thomas nodded to me; Mrs Denholm smiled and Mr Leaning deliberately looked out of the window. A pity, I thought, as I made my way back to my North London flat. It would have been nice to work with Mrs Denholm; more than nice. But there was no doubt in my mind that Mr Leaning would veto my appointment.\n\nSo it was with some surprise that I received a job offer through the post the following week; nothing about a second interview, just an offer. This put me in a slightly difficult position. By this time I'd had first interviews with all but one of the big six and had been invited back for a second interview at three of them. Bright and Alcott requested that I accept or reject within seven days, which meant accepting or rejecting without knowing who else wanted me and what their remuneration packages might look like. Having said that, the Bright and Alcott package looked to be about industry standard, and a bird in the hand is undoubtedly worth two in the bush. Also there was Mrs Denholm.\n\nAnd looking back, I can see that the personnel manager was the decisive factor to me accepting the position, which sounds pretty lame and not the sort of logical and impartial thinking that one expects of an accountant. Which, I suppose, goes to show what an impact she had had on me during that one, half-hour interview.\n\nI started in late September. It was a grey, drizzly day, a forewarning of the approaching autumn, but I was buoyed up as I arrived at the offices. This was the first day of my career. And I'd see Mrs Denholm again, which was important to me; I'd spent the intervening weeks thinking about her, fantasising about her, even. Aware on one level that nothing could possibly come of my youthful infatuation with this middle-aged lady but nevertheless warmed by the flames of imagined eroticism, however unlikely any realisation of my imaginings might be.\n\nI didn't have to wait long to see her: the twenty-three graduates who were starting that day were guided to the same executive boardroom where the interviews had been held for a welcome and introduction by the personnel manager and her two assistants. My stomach lurched as she walked into the room. I had wondered if she would have the same impact on me after ten weeks, whether I would think that I'd taken the job on a completely false premise. I needn't have worried, she looked just as elegant, just as attractive and just as self-assured. Furthermore, as she walked past me on three-inch heels to the front of the room, I could see her lower half, which had been concealed during the interview. And it matched the upper half perfectly, almost exactly as I had imagined she would look. Long, shapely legs, slim hips and a confident, feminine posture.\n\nShe was wearing a plaid skirt with a white blouse above and black stockings or tights below and she looked scrumptious. I barely heard her opening address and had to make a conscious effort not to openly stare at her. I wondered briefly if the other male newbies were similarly affected. After the opening speech, we were given into the charge of the assistants, both of whom were highly presentable twenty-something females, and Mrs Denholm disappeared into her office down the corridor.\n\nAfter that first, gut-wrenching vision of Mrs Denholm, I became adept at feigning indifference as I settled into the routine of a working life with Bright and Alcott's and began to learn my trade. My desk was in a large, open-plan office on the lowest of the three floors that the company rented. Mrs Denholm's office was on the uppermost floor, in the executive suite where the partners had their offices. I had to go up to one or other of the partners' offices about once a day on average -- legitimately. I took to visiting unofficially two or three times a day so that I could look through the window of her office as I passed on my fictitious errand. Mostly she wasn't there. Sometimes she was, and I got a tantalising glimpse of her at her desk or standing looking out of the window, a mobile phone pressed to her ear. She was a regular visitor to my floor too, and I tried to take the opportunity to walk past her as she transited the office so that I could say hello. When this happened she invariably smiled and said hello too, though I wondered if she remembered who I was.\n\nIn the evenings, in my flat, and at night, thrashing about in bed, unable to sleep, I told myself not to be stupid. She's old enough to be your mother. Maybe your grandmother at a pinch. Stop mooning over her and look for someone your own age. Well, that wasn't difficult. One of the personnel assistants had already made it plain that she was interested in me. And she was a pretty girl with a good figure and a bubbly personality. What was my problem? But logic never seemed to satisfy. I took Sally -- the personnel assistant -- out a few times and we became friends. In truth, one of the reasons I went out with her was to learn more about her boss. That made me feel a bit shitty. And nothing I learned about her boss helped either: she was fifty-five or fifty-six, Sally thought, and was married. Had been for thirty odd years. She had no children and lived in the Home Counties north of London. Further than that I dared not ask for fear of exposing myself. In November I was sent, with some other recent starters, to the Leeds office for a week to broaden our outlooks. After that, we went to Glasgow then Bristol. Altogether, we were away for a month, and I missed Mrs Denholm and looked forward to my return to London. My pre-occupation was beginning to feel unhealthy.\n\nBack in the office the ramp up to Christmas was starting, with decorations being put up and secret Santa's being organised. There was also the Christmas party. This was traditionally held on the office premises, in fact on my floor; it was generally believed that the company was too stingy to hire a proper venue. But they got caterers in and didn't stint on the booze or the food so everybody, it appeared, had a good time. My concern was whether the personnel manager would be going. If she weren't then neither would I; Sally was beginning to get a bit clingy. But she did confirm that her boss always attended when I asked who of the top brass would be there. She also confirmed that wives/husbands/partners etc were not invited.\n\nThe party was on the Saturday evening before Christmas and would be the last time that the staff saw one another before the break. It started at seven pm, although it was uncool to turn up before eight-thirty, and went on until twelve. This led to a transport problem as the tube stops at midnight and buses were a bit irregular. This was solved by a complex arrangement of shared taxis and I got in with three others who lived in vaguely the same direction as me.\n\nThe evening started well; four or five of us did a pub-crawl around the City and arrived at the office just before nine o'clock. I'd had enough to drink to calm my nerves and give me the confidence to ask Mrs Denholm for a dance, or just talk to her, but not enough to lose control or embarrass myself, or so I thought. As soon as we arrived I looked around and spotted her in a group of senior partners at a table in a corner of the room. She was wearing a black cocktail dress and a garland of tinsel around her neck. I had another drink and danced with Sally, and with some of the girls from my graduate entry. But all the time I was looking around for Mrs Denholm, and all the time she was either dancing with one of the old fogeys from the top floor or surrounded by a merry throng of associates; only once did I see an opportunity to approach her and, as I did so, Mike Leaning, of the difficult interview questions, appeared from the left field and whisked her away. As he did so I fancied that she looked across at me for an instant but it was hard to say; the lighting was dim and the dancefloor was packed.\n\nThis made me pretty miserable and Sally, after asking what the matter was, drifted off to enjoy herself in more uplifting company leaving me alone, sipping a bottle of beer and wishing I'd stayed at home. By now it was nearly half-past eleven, time for the disco music to be replaced by some slow numbers before the final lights went up to signal the end of the evening. My taxi was at twelve-fifteen, so I couldn't leave yet although I did contemplate going and waiting outside. Instead I threaded my way across the dancefloor to join Sally's group by the bar and that's when I saw her. Mrs Denholm, sitting at the senior's table in the corner, alone. Without thinking I veered in her direction, expecting any second that she'd get up and walk away or someone else would claim her. But she was still alone when I got there.\n\n'Hi Mrs Denholm. Would you care for a dance?' I asked, diffidently.\n\nShe looked up at me, her calm grey eyes making my stomach turn over. 'Oh, hello Ben. Would you mind awfully if I said no? I've been danced off my feet this evening and I can hardly stand. My feet are killing me'\n\n'Oh, that's fine,' I said.\n\nThere must have been tragedy in my expression or my tone because she smiled at me. 'But you could do me an enormous favour and get me a drink. I'm parched and I really can't face the scrimmage at the bar.'",
        "'Of course. What would you like?'\n\n'A large glass of soda and lime with ice, please. Not very exciting, I know, but I'm driving.'\n\nWhen I returned with her drink, and another bottle for me, she was still alone. 'Do you mind if I join you?' I asked.\n\n'Of course not.' In the dim lighting of the corner table she looked enchanting. 'I try to get to talk to all the graduates within a few months of starting but I seem to have missed you out, although we've got your staff appraisal in January.' She paused for a few seconds, taking a sip from her drink, a ghost of a smile on her face and I noticed that she'd painted her nails a dark red. 'Yes, it's all coming back now. You're the Ben whose grandmother passed away and that was why you only came second on the Leeds course right?'\n\n'Right,' I agreed.\n\n'Was it true?'\n\n'No. My grandmothers are both still alive and kicking.'\n\nShe laughed, a rich, deep laugh. 'I thought not.'\n\n'That Mr Leaning asked me such a shitty question, well, more like an accusation, that I thought I'd put him on the spot.'\n\n'Clever. And is your father a chief inspector with the Met?'\n\n'Yes.'\n\n'And the book writing?'\n\n'That's true too. I limit myself to one big whopper per interview. Or maybe two smaller ones.'\n\nShe laughed again. 'Have you finished it yet? The book, I mean.'\n\n'No. I've not made much progress since starting work, to be honest. I've probably only written twenty thousand words since August.'\n\n'What's your target?'\n\n'A hundred and twenty thousand is a good number for a publisher. I'm about half-way there. Actually, Mrs Denholm, I've got a question for you, although I'm fine if you'd rather not answer it.'\n\nShe looked at me expectantly. 'Ask away, but please call me Judith.'\n\n'Ok, Judith, why did I get a job offer when at least one of the panel took against me?'\n\nShe smiled again. 'The panel decision was unanimous. A certain person was just showing off. He actually thought you were the best candidate we'd seen.'\n\nWe talked for another fifteen minutes, until the main lights came on and the music stopped. I couldn't tell you what we talked about -- I was three sheets to the wind by that time, good resolutions or not -- but I do know that our conversation was easy and unforced and I for one wanted it to go on all night. The vision of my dreams had turned out to have a personality to match: funny, kind, considerate, and as sharp as a razor. The harsh overhead lighting showed up her crow's feet and the fine lines around her mouth and she suddenly looked vulnerable.\n\n'Thank you, Ben,' she said, standing up. 'It's been lovely talking to you but I must go upstairs to the CEO's office now; there's some sort of presentation to David Rowling, he retired on Friday. Have a good Christmas!' And she was gone.\n\nI made it to the bar in time to get a last bottle of beer and then went looking for Sally, but she'd apparently left half an hour ago. In fact I couldn't find any close acquaintances so I just stood and drank my bottle and then collected my coat and went down to the lobby and out into the street to find the taxi we'd ordered. Unfortunately the three bastards I'd arranged to share the taxi with had left fifteen minutes before, according to a couple of eyewitnesses. That left me with a problem. My mobile phone was flat so I couldn't call another taxi and it's unlikely I'd have got one anyway. I had no idea about bus services and neither did anybody I asked. The few people standing outside in the faint drizzle melted away as their taxis arrived and I was left alone, wondering what to do, although the obvious thing was to start walking. It was about five miles to my flat -- say two hours, if I didn't get mugged on the way.\n\nI'd just decided to get on with it when a sleek, black, saloon emerged from the underground car park and swung onto the road, the headlights momentarily blinding me. To my surprise it came to a halt alongside me and the passenger window was powered down.\n\n'Ben?' It was Mrs Denholm.\n\n'Oh, hi Judith.' My circumstances obviously required some explanation. 'My taxi went without me.'\n\n'Without you?'\n\n'Well, there were some other people in it,' I added, lamely.\n\n'Where do you live?'\n\n'Winchmore Hill. Near Enfield,' I explained.\n\nShe appeared to consider, both hands still on the steering wheel. 'Near the A10?'\n\n'Yes, about a mile off the A10,' I said, my hopes rising.\n\n'Ok, hop in, I'll give you a lift. It's not far out of my way. I live in Hertford,' she added.\n\nIt was warm in the car and smelt of leather upholstery and Judith's scent -- a faint citrus odour. 'Thanks, you've really saved my life. I didn't fancy walking all the way.' I fastened my seat belt and the car pulled away from the kerb and accelerated. Mrs Denholm was a confident and competent driver and I enjoyed her decisive hand movements and the ease with which she controlled the powerful saloon. We picked up our conversation and chatted easily as she drove north through Islington and Tottenham, the streets almost deserted. As we approached Palmer's Green she asked for directions and I guided us to the street I lived on where she pulled up on the road rather than pulling into the forecourt of the big Edwardian villa whose top floor flat I occupied. I undid my seat belt but made no move to open the passenger-side door.\n\n'Nice place!' said Judith, looking at the house. 'I guess it's not all yours.'\n\n'I wish. I'm in the top floor flat. That's quite enough for me. I've got a mortgage the size of a small nation's GDP as it is.'\n\nShe laughed again. 'You are funny. I bet you've got a good view, you're right up on a hill here.'\n\n'Yes, the view of London from the balcony's amazing. I'd invite you up to see but it's dark.'\n\nThere was an awkward pause, at least I interpreted it as such, but she just smiled. 'Another time perhaps.'\n\nI felt a sudden surge of hopeless longing. This gorgeous women, who I'd had a wonderful half-hour talking to this evening, and who I was rapidly becoming irreversibly smitten with, was about to drive away and I wouldn't see her for two weeks and all the magic of this evening would be a distant memory by then. And I was a bit drunk, too.\n\n'Thank you, Judith. I've had such a lovely time talking to you. I,' I hesitated, then plunged on. 'I think you're wonderful!' I leaned across the centre console and kissed her on the lips. She didn't respond, but neither did she draw away or turn her head. Her lips were warm and soft and I kept contact for as long as I dared, which was only about five seconds, then sat back in my seat. There was another pause, more awkward than the last, the stolen kiss hanging in the air between us.\n\n'I ought to go,' I said at length. 'Thanks again for the lift and happy Christmas.' I opened the car door and felt the drizzle blow in onto my face.\n\n'Happy Christmas to you too, Ben.'\n\nI looked around at her before I got out and was mildly surprised to see that she was smiling that gentle, kind smile of hers. I smiled back, or tried to, went to say something, thought better of it and got out of the car and closed the door. Standing on the pavement I waved as Judith engaged drive and accelerated away down the street.\n\nUp in my flat I contemplated myself in the bathroom mirror. 'Well, that was a smart move, Ben. Getting pissed at the office party and trying to kiss the middle-aged personnel manager. That hasn't been done before.' I wished with all my heart that I could turn the clock back. I'd never have had any chance with a lady like that anyway; now she probably thought I was a dickhead. She was probably right.\n\nThe acute embarrassment of the evening faded as the Christmas holiday progressed but it didn't disappear and I was aware that there might be some reckoning when we all went back to work. Christmas itself was ok, I spent it at my family's place in Buckinghamshire and my sister and her husband joined us. New Year I went skiing in the Dolomites -- Cortina d'Ampezzo -- which was brilliant and exhilarating and for a few days I almost didn't think about Judith Denholm.\n\nBut all too soon it was January and the wretched return to work in the semi-darkness and the slush of a recent snowfall, the icy winds penetrating deep into tube stations. I was on tenterhooks for a few days expecting a summons to the top floor, but none came. At least until the following Monday, an appointment with Mrs Denholm in her office at ten o'clock two days hence, which I thought odd. You didn't wait a week and a half to deliver a bollocking, did you? Then I remembered that she'd mentioned a staff appraisal in January and when I actually read the email it explained this and suggested what preparatory work I should undertake before the meeting. Of course, I still had to go to her office and sit across the desk from her; this thought made me squirm in my chair.\n\nThere was a good piece of news too: Bright and Alcott had succeeded in gaining a new account with a major multi-national; Mike Leaning was heading the newly formed audit team and he wanted me on it. This was praise indeed; I was still barely out of nappies in professional accountancy terms. The downside was that due to shortened timescales the first team meeting was on the forthcoming Saturday morning. Still, I generally hadn't got much to do at the weekend anyway so I may as well work on my professional skills and reputation.\n\nOn the following Wednesday at ten o'clock sharp I tapped on the glass pane of Mrs Denholm's office. She was on the phone, sitting behind her desk, but beckoned me in and pointed to a chair by the little conference table she had in her office. I could smell coffee as I entered and sat down and tried not to look at her. It was the first time I'd seen her since the debacle outside my flat before Christmas. Today she was wearing a charcoal-grey suit and a dark-green blouse. I thought she might have had her hair done since Christmas, but I didn't want to stare so I busied myself with the bits of paper I'd brought to the meeting. At length she finished the call and stood up.\n\n'Happy New Year, Ben. How was your break? Did you get some skiing in?'\n\nThis wasn't the disapproving undertone I'd feared, not by any means. 'Yes,' I replied. 'The skiing at Cortina was fantastic. How was your break?'\n\n'Oh, you know, ok. Quiet. Would you like some coffee? It's fresh.' She poured two mugs and brought them to the table, a folder under her arm. And for the next ninety minutes we went through the company staff appraisal process and it was all good news: all my reports were positive, and the feedback she'd had from the associates and partners that I'd come into contact with was highly laudable. 'A very good start, Ben, keep it up,' she said in summary. 'And you're happy with the forward action plan that we've agreed?' I nodded. 'Good. Is there anything you'd like to ask me?'\n\n'Well,' I began, 'about the Christmas party thing...' Mrs Denholm turned to look out of the window, but not before I'd seen the ghost of a grin on her face. When she turned back to face me her expression was neutral.\n\n'Ben, it's not exactly the first time that's happened after an office party. And you did me a big favour that evening.'\n\n'Really?' I said, surprised.\n\n'Yes, I was feeling a bit down in the dumps -- Christmas always seems to do that to me -- and you came over and got me a drink and cheered me up. So a little kiss was fine. You were quite gentlemanly, I didn't have to fend you off or anything, which I've had to do on occasion.'\n\n'I'm afraid I was a little drunk.'\n\n'Well that's office parties for you. Now, I've got about fifteen minutes until my next meeting so why don't we have another cup of coffee and you can tell me all about Cortina. Weren't the nineteen-fifty-six winter Olympics held there?'\n\nI came out of the personnel manager's office on cloud nine and took Sally out to lunch at a pub around the corner from the Bank of England. The euphoria continued for the next couple of days so I was by no means unhappy to go into the office on the following Saturday morning. In fact I was the first of the team to arrive and was vaguely surprised to find the main office doors open. I'd assumed that the most senior person would have to open up on a Saturday, when the security staff were down to a skeleton crew. The answer came when I arrived on Bright and Alcott's top floor and walked past Mrs Denholm's office. To my intense surprise she was at her desk, the office door closed, typing away at her keyboard. I didn't knock or anything but she must have been aware of me passing the window because she looked up and waved briefly before going on with her typing.\n\nThe team meeting for the new account dragged on until lunchtime; an hour's effort shoehorned into three, mostly for the greater glorification of Mr Mike Leaning -- he just wouldn't shut up. Eventually the proceedings trailed to a close and the team members stood up, as though awakened from a drugged sleep, and made for the door. I was the last out and the corridor was empty as I walked past Mrs Denholm's office, wondering what to do with the rest of my Saturday. Behind me a door opened.\n\n'Ben.' I turned around to see the personnel manager at her office door, in the informal weekend dress of jeans and a jumper. The jeans were tailored and tight and the hand that rested on the door frame had bright red painted nails. 'Are you all finished?'\n\n'Yes, thank goodness.'\n\n'Long meeting eh?' she said, sympathetically. 'I'm done here too. I wondered if you'd like a lift home. Maybe we could stop for lunch on the way, what do you think?'\n\nIt was like the plot of a corny romance when you'd just about given up on the leading couple and they get together in the last five minutes and walk off into the sunset hand in hand. I was almost lost for words. 'Yes,' I said, with a lump in my throat, 'yes, that would be wonderful.'\n\nWe ate lunch in a traditional Victorian London pub, and we ate traditional pub fare: cheese ploughman's for Judith and steak and ale pie for me. And we talked and laughed and life was good. Afterwards, Judith drove me home and swung into the gravelled forecourt of the house. On the journey home I'd been rehearsing reasons for inviting her up to my flat, or asking her out, or anything that would either prolong the afternoon or give promise of some future time together. In the event, the best I could do was offer her some coffee.\n\n'Would you like to come up for a coffee? I grind my own beans and I've got some Kenyan stuff that's nirvana in a cup. And you could see the view,' I added.\n\nJudith smiled her calm, kind smile: 'I can't stop long but yes, a coffee would be nice.' I led the way up to the top floor of the house and unlocked my front door, glad that I'd done some housework before coming out this morning.\n\nIt was a good flat: a decent sized lounge with double doors leading to a pint-sized balcony built on the two-storey bay window beneath. The kitchen was ok too and there were two bedrooms, one a double, and a very modern bathroom, all stainless steel and ceramic tiles. The flat had cost a fortune but most of that fortune had been supplied by my maternal grandmother. It still left me with a hefty mortgage but I couldn't have afforded it otherwise.\n\n'There's the view,' I indicated the double doors and disappeared into the kitchen to grind the beans and brew the coffee. When I emerged a few minutes later with two mugs of coffee Judith was looking at the titles in my bookcase.\n\n'You read a lot?'\n\n'All the time. I think that's part of the desire to write. Do you read much?'\n\n'Yes, I do, though I've never felt the urge to write myself. What will you do with your book when it's finished?'\n\n'I don't know. Maybe try to get it published. I'll probably let a few friends and family see it first. It's hard to be objective when you've sweated blood over the thing. It might be a load of rubbish.'\n\n'I'm sure it won't be, but if you need an objective opinion... I'd be honoured to be asked.'\n\n'Really?'\n\n'Really.'\n\n'Judith,' I hesitated, 'would you like to do something together one day? I mean go for a walk or go to a museum or art gallery and maybe have lunch.' I realised I was holding my breath and let it out with a faint whoosh.\n\nJudith looked at me with her grey eyes. 'You mean do something together like friends?'\n\nWas she teasing me? 'Yes, I suppose like friends. I mean I think you're a really special person and I'd love to have a relationship with you,' I hadn't planned this but now it was all coming out. 'But I know you're married and older than me and, well, I wondered if we could be friends.'\n\nShe looked at me and sipped her coffee. 'What is it about me that fascinates you, Ben? I'm not fishing for compliments; I'd really like to know. I mean you are a very good-looking and articulate young man and I can't imagine you have any difficulty attracting girlfriends. In fact I know you don't; my assistant Sally is always talking about you, although she pretends indifference.'\n\nI thought for a long time. 'Ok, well it's complicated. First of all, I'm not generally attracted to older women. I never fancied any of my teachers or university lecturers. I don't want you to think it's that. And it's not just physical attraction. Yes, you are very attractive, and you've got a lovely figure but that's just a bit of the picture. You're also elegant and sophisticated and kind and thoughtful and you've got a great sense of humour and you know lots of things and it's really interesting to talk with you. It's not the same with girls like Sally. There's an emptiness there which takes years to fill I suppose. Maybe it never gets filled.'\n\nJudith blushed, making her look even more desirable. 'That's really sweet of you to say those things and I think you mean them too. But I'm just me. I don't see me as anything special.' She paused. 'But it would be disingenuous to say that I don't find you attractive too.' My heart gave a great lurch. 'And yes, I'm married and yes there's a large age difference, but perhaps that shouldn't stop us becoming friends. So ok, let's go for a walk one day, maybe next Saturday. Can you get to Epping Forest? There's a wonderful walk that I know and it'll be deserted at this time of year.'\n\n'I've got a car,' I said. 'Epping Forest sounds good.' A few minutes later she was at the front door.\n\n'Well, I'll no doubt see you in the course of next week, but next Saturday is a date then. I think we've got a lot to talk about.'\n\n'Do friends get to kiss each other goodbye,' I asked, aware that I was pushing my luck but also feeling that I was on a roll.\n\n'Maybe on this occasion, as you've flattered me and cheered me up again.' She moved towards me and placed her hands on my shoulders. I put my hands on her hips and gently drew her into my arms. She was only an inch shorter than me in her heels and I was able to look into her grey eyes as our heads came together.\n\n'Just a kiss,' she said, and then our lips met and I closed my eyes and felt her mouth open slightly against mine and I traced my lips over hers and smelled her scent and felt her warmth and the feel of her hands on me. It wasn't really a friends' kiss; it certainly wasn't chaste. But neither was it a lovers' kiss, though it gave promise of what such passion would be like together. We kissed for maybe a full minute, it's hard to say. The expression \"time slowed down\" had never seemed so true. I didn't try to put my tongue in her mouth and we maintained a slight gap between us which was disappointing because I wanted to feel her breasts against my chest, but also convenient because lower down my erection was straining at the zipper of my denims. Then she gently disengaged herself, said 'goodbye' and disappeared down the stairs.\n\nI walked back into the flat in a daze, my mind whirling. I stared out of the window for a few moments, unseeing, sat down on the settee, got up, wandered into the kitchen, then the bathroom. Eventually I stripped off and put my running gear on and went around the local park half a dozen times. By the time I'd done that and showered I was in a calmer frame of mind and could start to think about what had happened.",
        "Did this mean Mrs Denholm and I were going to be proper lovers? It hardly seemed possible. And besides, she'd been quite clear on the \"being friends\" and \"I'm married\" angles. But she'd also said that she found me attractive, and why would she want me just as a friend? A lady like Judith must have dozens of friends. The arguments went round and round as I attempted to analyse each gesture and each word and the short winter day came to a close outside the windows. Eventually I gave it up. After all, the important thing was that Judith and I were meeting up next Saturday morning. There would no doubt be questions to resolve then, she'd intimated as much. But no use worrying about it now. I considered checking the weather forecast for the following Saturday -- it would be a tragedy if it were rained off -- but hey, this was Britain, the only reliable forecast was to look out of the window. In the end I phoned a friend who lived nearby and arranged to meet him in our local; getting well and truly wasted tonight was probably a good way to stop worrying about the future.\n\nI'll draw a veil over the next five or six days. Suffice it to say that the week dragged painfully by while I lived in fear that Judith would realise what a mistake we were making and cancel Saturday. I saw her a few times during the week but not to talk to. Once she smiled at me across the room but that was about the sum of our contact, which suited me fine. Saturday morning did finally dawn and as a bonus the ridge of high pressure that had moved in from the Atlantic during the week showed no signs of imminent movement and the morning skies were icy blue, the temperature down in the low thirties.\n\nI found the meeting place Judith had suggested easily enough -- a bare-earth car park close to Copthall Green, deserted apart from Mrs Denholm's company car. I pulled up alongside it and got out. Mrs Denholm got out too and walked round to the back of her car where she raised the tailgate and changed into walking boots. She was wearing walking trousers and a padded, bright-blue anorak with a woolly hat hiding her auburn hair. She was also wearing sunglasses, giving her a vaguely exotic look.\n\n'Hello, Ben,' she smiled her kind, calm smile and I felt like falling down and worshipping her.\n\n'Hi Judith. How long's this walk?'\n\n'About ten miles. There's a pub after six, we can have lunch there if you'd like.'\n\nWe set off down a rutted, well-trodden and currently frozen track, bare fields to one side and stark, winter woodland on the other. Overhead the sky was a brilliant blue.\n\n'Judith,' I said, after we'd gone a couple of hundred yards in silence, 'can I ask you what your husband thinks you're doing this morning?'\n\nWe tramped on for another fifty yards. 'I work most Saturday mornings,' she said. 'It's quiet and I can answer all the emails that I don't have time to read during the week. That's where my husband thinks I am. He's called Frank.' We walked a little further then jumped as a pheasant exploded out of the undergrowth just ahead of us and flapped wildly off giving its choked-sounding warning cry. We walked on for another half a mile then Judith broke the silence again. 'I think there are some things I need to say to you, Ben.' My stomach flipped over. This would be when she says that after thinking about it for a week, the idea of us being friends doesn't seem so good.\n\n'Let me tell you a bit about myself,' she began. 'Those things you said to me in your flat last weekend, it was very nice of you and I suppose that's how you see me, but I'm really a very ordinary woman. I've led a very ordinary life. I dated a few men in my late teens then got married at twenty to Frank, who was ten years older than me, because he represented safety and security. I didn't go to university, which I regret, and I never had children, which I regret even more.' She stopped suddenly and gave a choking sob. Horrified, I rushed over and put my arm around her but she fended me off. 'It's alright, I'm fine. Thank you.'\n\nIt was the first time I'd seen any hint of discomposure. It made her seem more vulnerable and, yes, more attractive. The male protective instinct in me I suppose.\n\n'I need to say these things because I want you to understand where I'm coming from. It's important to me that you do.' She took out a handkerchief and blew her nose. 'Ok, where was I? Yes, no further education and no children. Well I've accepted all those things, I've worked hard and I've got a good job, a responsible job. And my marriage has been happy, we're very content. Frank has provided for us very well over the years...'\n\nI felt that the conversation, or rather monologue, was coming to some conclusion but I wasn't clear what that was. Judith seemed to be telling me that she'd led a comfortable but dull life.\n\n'About six years ago, Frank developed a condition which meant that he couldn't have sex with me anymore.' She looked at me as though expecting a comment but I said nothing and stared straight ahead down the track. 'I was fine with that. We hadn't had a particularly strong physical relationship over the past ten years. Maybe never. Frank isn't a very physical person, not in that sense. But about a year ago it started to bother me. I started to feel that my life was wasting away. I can pretty well pinpoint the exact time; it was my fifty-fifth birthday and my friends said that now I could draw my company pension, would I take early retirement. And I thought early retirement! I haven't done half the things that I was going to do, haven't been to a quarter of the places... I suppose I went through -- am going through -- a mid-life crisis. And one of the things I wanted -- still want -- is a physical relationship, a sex life.' She looked at me again but I still said nothing. What could I say?\n\n'When Frank's condition was diagnosed, and we understood the implications, he offered to divorce me so that I could find someone normal, as he described it. Or failing that he gave me his blessing if I wanted to find a lover. Can you imagine how that made me feel? How could I ever hurt a man like that? How could I ever divorce him? I want to be there for him till the day he dies. That hasn't changed. But the idea of a lover has started to appeal very strongly to me.'\n\n'Have you discussed this with Frank?' I asked.\n\n'No,' she said, shortly. 'I wanted to clarify my thinking.'\n\n'And?'\n\n'And now I have.' There was another pause. Our feet crunched iced over puddles on the track, a skein of geese flew overhead. 'I don't want a replacement husband who's in full working order. I've got a husband, and I love him very much. I want to find someone that won't be a threat to my marriage. And I'm not interested in married men. That pretty well rules out people of my own age group. Which brings me,' she said with a sigh, 'to Ben Walton, who dropped into my life last September in an unusually interesting interview.\n\n'To put it very bluntly, Ben, I made a list of all the things that I was looking for in a lover and you ticked all the boxes. And some boxes that I hadn't thought of. The job's yours if you want it.'\n\nIt was the first time in my life that I fully understood the expression \"going weak at the knees\". I felt I needed to sit down. But first I had to reassure myself that I'd heard Judith correctly.\n\n'You're saying that you'd like us to become lovers?' I said, a note of disbelief in my voice.\n\n'If that's what you'd like,' she smiled, 'yes.'\n\n'I don't know what to say.'\n\n'Well perhaps you'd better leave the talking to me; I've had a week or so to think about this.' I looked at her expectantly. 'Ok Ben, I'm going to be really blunt here. I'm fifty-six. There's a certain amount that I can do with cosmetics, but underneath my clothes I'm fifty-six. There are a few wrinkles where there used not to be, my breasts sag a bit. So does my bottom. You might find that when I'm undressed, you don't fancy me as much as you thought you did. So the first time we sleep together will be in a hotel -- neutral ground. And if you don't like what you see you can walk out of the door. No hard feelings. I will completely understand.'\n\n'I cannot imagine that happening\u2014'\n\n'I've probably got fewer illusions than you, Ben, that tends to come with age. The other thing I wanted to talk about was discretion. I want you to agree to never speak about us to anybody. Ever. I will do the same. The only exception is my husband. I may decide to tell him, I haven't decided yet. And besides,' she grinned, 'if you walk out of the hotel room, I won't need to.'\n\n'I absolutely promise that I will never say a word to anyone, not even to Sally.'\n\n'Especially not to Sally!'\n\n'I was teasing you.'\n\n'And there can be no inappropriate remarks in the office. No extra familiarity. Ok?'\n\n'I get it. You can trust me.'\n\n'Yes, I think I can.'\n\n'One last question, Judith. If I walk out of that hotel room, is there another candidate waiting in the wings? You don't have to answer that if you don't want to.'\n\n'There is no one else. This whole thing is based around you. Always was. Now come here and let's have a proper kiss.'\n\nWe came together on that icy January track and our lips met and our mouths opened and my tongue found its way into Judith's mouth and her tongue flicked and darted against mine and explored my mouth, running inside my lips and across my teeth. I pulled her close and she responded, our mouths mashed together lips working against each other. After what seemed an age Judith pulled her head back. Her eyes were wide, the pupils dilated and her face was flushed.\n\n'Bloody hell, Ben, I hope I don't put you off in that hotel room! I don't think I could bear it.'\n\nThe rest of the walk passed in a bit of a blur, for me at least. I was incandescent with excitement. My wildest and most impossible dream appeared to be on the verge of coming true. We kissed a lot more before we reached the pub. Then we kissed some more on the way back to the cars. I could hardly bear to let her go in the carpark.\n\n'Are you ok for next Saturday?' she asked just as we parted. When I said I was she said: 'I'll organise a hotel room and let you know by text.'\n\nThe following week went by agonisingly slowly. I saw Judith a number of times in my open plan office and in the corridors. She just said hello and gave me an impersonal smile. I'd like to think I looked equally detached, but I'm not sure. Anyone who knew me would have seen straightaway that I was excited about something but only Sally knew me anything like well enough and she didn't comment. The waited-for text arrived on Thursday afternoon, just as I was starting to get anxious that I hadn't heard. It said:\n\nWoodland Lodge Motel off the A10 at Enfield. They do day rooms which are available from ten till five. I'll get there at ten and get the room, then I'll text you the room number. Xxxxxx\n\nI re-read the message twenty or so times but it was still difficult to take in. Was I actually going to meet Judith Denholm, the personnel manager and epitome of mature sophistication, in a motel room on Saturday morning and have sex? It appeared that I was.\n\nSaturday dawned wet and windy, but I cared not. I showered thoroughly and had a wet shave. Then I dressed carefully in chinos and a shirt, making sure my socks and underwear were presentable and without holes. I was too nervous to eat so I paced around the flat until a quarter to ten then drove to the motel. It was only ten minutes from my flat; a non-descript nineteen-sixties block in a small business park. Utterly anonymous and ideal for our tryst. I parked and switched of the engine and had hardly had time to get nervous when my phone announced an incoming SMS message -- Room 345 xx.\n\nI walked nervously past reception but none of the staff gave me more than a passing glance. The lift was out of order so I walked up to the third floor and knocked gently on room 345. Judith must have been hovering inside because the door was opened almost immediately. I slipped in and she closed the door behind me. We were alone together in a hotel room.\n\n'You look nice,' I said. She was wearing black trousers and a tan satin blouse. She smelt fresh and clean as I kissed her tenderly on the lips.\n\n'I would have worn something a bit sexier but I'm supposed to be going to the office. I hope you're not disappointed. Would you like a coffee? I was too nervous to eat breakfast, so I've got some croissants from the restaurant downstairs.'\n\n'I didn't have breakfast either,' I admitted. Nerves as well.'\n\nJudith grimaced. 'Well I'm nervous you won't like my body. What are you nervous about? Your body's probably amazing.'\n\n'I'm nervous that I won't be able to satisfy a mature and sophisticated lady.'\n\n'Hmm. I get the impression you've had quite a lot of experience.'\n\n'My experience has been with callow girls of my own age.'\n\n'Like Sally?'\n\nI blushed. 'Like Sally.'\n\nWe ate our croissants and drank our coffee and held a stilted conversation about the weather and the traffic conditions on the way here. After we'd finished, Judith disappeared into the bathroom and I heard her clean her teeth and wished I'd had the foresight to bring a toothbrush. When she came out she walked over to me and put her arms around me and kissed me on the lips, opening her mouth and darting her tongue past my teeth.\n\n'Would you undress me please, Ben. I don't want to hide anything from you.'\n\nI nodded, wordlessly and fumbled open her trouser belt and buttons. She kicked off her high heels and the trousers dropped to a pile around her feet, which she stepped out of. Underneath she was wearing sheer black stockings with a lacy black satin garter belt with three suspenders to each stocking. The suspenders passed under her silky black panties. I felt my throat constrict with desire.\n\n'I hope you like stockings,' she whispered.\n\nI nodded dumbly again and started to unbutton her blouse. I was breathing more heavily, my pulse thumping in my ear. Judith too was clearly affected: her breathing was audible and there were spots of colour on her cheeks. I finished the front buttons and she held her wrists out so I could unbutton her cuffs. Then she shrugged her shoulders and the blouse joined the trousers on the floor. She was wearing a black bra and for the first time I could see the size of her bust. She wasn't huge; her breasts were about the size of oranges. I undid the clasp at the back with a practised motion and the bra fell forward revealing her in the flesh; pert and upturned still, despite her age, the nipples large and deep pink. She shivered slightly and I took her in my arms and kissed her. There were the beginnings of wrinkles on her upper arms but her stomach was taut and her skin a light honey colour with few age blemishes.\n\n'You're beautiful,' I said, with sincerity, 'more beautiful than I would have believed possible.'\n\n'Thank you. Just don't open the curtains fully.' We laughed and I kissed her again. 'My turn now.'\n\nI stood mute as she bent down and unlaced my oxfords then I raised each foot so that she could pull off the shoe and sock. Then she took my shirt off and ran her hands through my black chest hair. I wasn't covered with the stuff, just a scattering on my pecs and a line of silky hair running down to my navel. After another kiss she undid my belt and zipper and my trousers, after they had been manoeuvred past my erection, joined hers on the floor. Which just left my underpants. Judith knelt down on the carpet in front of me and, taking each side of the waistband between finger and thumb, pulled them down, my erect penis springing up almost into her face. I kicked off my underpants and stood naked in front of her. She reached out and took my penis in one of her long, slim hands, the red-tipped fingers closing lightly over my shaft and gently stroking its length. I groaned and she looked up at me, smiling gently.\n\n'You're beautiful too, Ben.'\n\nThen, very slowly and deliberately, she leaned forward and took the head of my penis into her mouth, sliding her red lips down past the glans and taking in the first three inches of me. I closed my eyes, my legs feeling suddenly wobbly, but she withdrew from me and stood up. I took the hint and knelt before her and slowly pulled her panties down to reveal a neatly trimmed dark bush, her labia visible in the middle, the lips puffy and slightly apart, a hint of pinkness inside. I leaned forward and inhaled her scent, freshness and the underlying musky sweetness of her vaginal secretions. Copying her I ran my tongue once up the length of her sex then stood and kissed her again.\n\nWithout a word she climbed onto the bed and lay down. I followed and for a long time we just kissed, enjoying the mouth-to-mouth contact and the intimacy of our shared nakedness. I cupped her breasts and traced her nipples with my fingertips, gently squeezing them and causing her to moan softly into my mouth. After a time, my hand strayed further south; I stoked her soft pubic hair and traced her labia with the tip of my middle finger. She gasped as I slid the finger between her lips and into the sopping wetness of her cunt. She started kissing me harder as I slid another finger into her then withdrew them and slid my juice-coated digits up to tease her clitoris.\n\nJudith didn't last long. I took my mouth from hers and sucked one of her nipples into my mouth, licking and sucking and gently nibbling; my fingers were masturbating her clit with a circular motion. 'I'm coming!' she gasped, urgently as the waves of pleasure overcame her and she cried out. As the orgasm subsided, she clamped her legs together to still my fingers on her hyper-sensitive clitoris.\n\nShe was silent for a few moments. I lay next to her, supporting myself on one elbow and looking down at her face, trying to commit this scene to everlasting memory. At length, she opened her eyes. 'Have me, Ben. Penetrate me!' I got up and knelt between her legs, holding my cock in one hand and supporting myself on one arm. 'Go gently at first, darling, it's been a long time.'\n\nWords can hardly describe my feelings as I rubbed the end of my cock up and down her slit to lubricate it. Not that it needed much help; I'd been leaking a clear, sticky fluid pretty much since getting into the hotel room. But the here and now was that I was poised to penetrate Judith Denholm's vagina. The personnel manager that I'd fallen in lust with the first time I'd set eyes on her. Here she was, lying on the bed underneath me, dressed in nothing but stockings and suspenders and a garter belt, asking me to penetrate her, calling me darling!\n\nI pushed and my cock slid slowly in, the full length. I'm not hugely endowed, but I guess she was getting six and a half inches of me inside her. And God was she tight! More like an eighteen-year-old virgin than a fifty-something lady, the walls of her vagina gripping me in a warm, soft, wet embrace.\n\n'Is that ok for you?' I whispered.\n\n'Oh,' she said, looking up at me with something like rapture on her face. 'It's more than ok.'\n\nI started to fuck her. Slowly at first, getting into a rhythm as she flexed her hips to meet me, her wonderful legs, in their black stockings, locked over the backs of my calves, my cock making a faint slurping noise as I slid in and out. This time it was me who didn't last long. Withing a few scant minutes I felt the tingling in my scrotum and the approach of my climax. I tried to slow down but Judith, seeming to know what I was doing said: 'no, don't stop! I want you to come inside me.'\n\nHearing those words tipped me over the edge and I was wracked by the most powerful orgasm I've ever experienced It went on for a long time and I felt as though I were pumping a gallon of semen into Judith's cunt. Eventually the waves subsided and my penis grew soft and I withdrew it from my lover and lay down next to her. She put her head on my chest and I hugged her to me, thrilled and excited beyond measure at what had just taken place.",
        "'Oh hell,' said Judith, a minute later, 'I'm leaking onto the duvet.' She got up and went to the bathroom and I lay stunned on the bed, listening to the sound of running water. 'Do you want a coffee?' she asked, coming back into the bedroom.\n\nWhile she made the drinks I went and washed myself and we lay on the bed and drank our coffee in silence. There was a tiny atmosphere between us. At last I turned to her.\n\n'Judith, darling, are you alright? You seem very quiet.'\n\n'I'm fine. Just feeling a bit silly and insecure.' She paused. 'I was just a bit anxious, am a bit anxious, about how you'd feel about me after we'd made love. Men can get this post-coital disgust, I believe and...' she tailed off.\n\n'Yes,' I agreed, 'that can happen. I've had it myself once after a one-night stand. But I'm a million miles from that now. You're still beautiful and when my body has recovered sufficiently, which should be in a half-hour or so, I will prove it to you. So we snuggled together under the duvet and talked about inconsequential things for a while until Judith's hand found its way down to my crotch and she started running a fingernail up and down the length of my flaccid cock. It didn't stay flaccid for long, but when I went to kneel up, Judith put a hand on my chest.\n\n'I'm going on top, if that's ok with you.' She threw back the duvet and straddled me, guiding my cock to her slit and sinking slowly down onto it. Then she started a rocking that rubbed her clit against my pelvis. At the same time she cupped her hands on her breasts and twiddled her nipples between finger and thumb. I took her hips in my hands and urged her backwards and forwards on top of me.\n\nAfter about five minutes she started rocking very hard and fast and after a scream of pleasure she collapsed on top of me and lay there gasping, her heart thumping in her chest. 'I'm all yours now,' she said. 'Take me however you want.'\n\nBut I was passed my peak of frenzied eroticism; all I wanted to do was make slow and gentle love to her and I told her this and she cried a bit and said that would be wonderful and I penetrated her again in the missionary position and we made love for long minutes and she came again and, eventually, so did I. Then we showered and dressed and went down to the restaurant for some lunch.\n\n'Will you come to my flat next time?' I asked as we ate. 'It seems like an unnecessary expense to get a room and nobody in Winchmore Hill's going to recognise you.'\n\n'I'd love to,' she answered. 'The hotel room was a one-off, just in case it didn't work out.'\n\n'Well, I think we can safely say it worked out,' I smiled.\n\n'Yes. I think we can.' She looked at me, her expression serious. 'I think I can quite safely say that I've never experienced anything like this morning before.' The restaurant was empty and we could speak freely. 'It occurs to me too that we've only just scratched the surface. I can't imagine what the future might hold.'\n\n'Was it that good for you?' I asked, fishing for compliments.\n\n'You know full well it was. But great as it is, I'd still like us to do other things, not just screw each other all the time.'\n\n'I agree,' I said. 'Perhaps we could go for a walk next Saturday.'\n\n'No,' said Judith, firmly. 'Next Saturday we're in your flat.'\n\nIt was a strange week that followed. I couldn't stop thinking about the hotel room and what may happen in my flat the following Saturday. As a result, I found it difficult to concentrate on my work. I also came under pressure from Sally to spend a night with her during the week. This raised the serious question of fidelity and it's meaning in the context of an illicit relationship. I managed to put Sally off without offending her but I resolved to bring the subject up with Judith at the weekend.\n\nShe arrived just after nine am on Saturday, wearing jeans and a T shirt and carrying a holdall. For one horrifyingly exciting moment I wondered if she'd left her husband and was moving in with me.\n\n'I normally wear jeans to the office on a Saturday,' she explained, 'and I don't want to arouse suspicions, so I've packed some stuff to wear when we're together. Is it alright if I leave it here?'\n\nThe intimacy of this simple gesture thrilled me and I told her so as she went into my bedroom to change, emerging fifteen minutes later clad only in her underwear. 'I've got a skirt and blouse with me but I thought we might bypass that stage, on this occasion, and go straight to bed.'\n\nI needed no second invitation and ten seconds later we were in a passionate embrace with me trying to get my hand into her knickers. 'Take them off,' she told me. 'And while you're down there perhaps you could show me your skills at oral sex.'\n\nI was surprised at her frankness. There were certainly indications that Judith Denholm might not be as demure and staid in the bedroom as I had originally assumed. She lifted her bottom to allow me to pull her black satin cami-knickers down and I knelt down and buried my head in her glorious hairy snatch, licking and sucking at her labia, trying to get my tongue deep into her wet pinkness, flicking it around the little hood over her clitoris until she squealed with pleasure, her hands tightly gripping the duvet and her legs high in the air. The I entered her, suddenly, causing her to open her eyes wide and gasp. I fucked her for five minutes then recommenced my cunnilingus on, then back inside her, fucking and kissing, letting her taste our juices on her lips.\n\n'Let me suck you,' she said as I went to penetrate her for the third time. I rolled on my back and she knelt over me and took me in her mouth, one hand on my shaft, gently masturbating me. The sensation was exquisite. Velvet soft and wet and warm, her mouth sucked up my shaft then down again until I had to tell her to stop or I'd come. She took no notice, in fact she sucked harder and gripped my shaft more firmly. I exploded in her mouth and she carried on sucking until I'd stopped squirting semen into her. And she swallowed the lot. Then she looked at me, a satisfied smile on her face.\n\n'I've always wanted to do that. To see if I could. And to find out what it tasted like.'\n\n'And...?'\n\n'It's nice. Salty, but nice.'\n\nAfter that I licked her clitoris while fucking her hole with three of my fingers and she came with her hands on the back of my head, forcing my face into her cunt and shouting 'yes, yes, yes.'\n\n'Judith,' I said, as we lay together afterwards in my bed, 'I've got a bit of a problem, with Sally. She wanted me to stay the night on Wednesday. I didn't but I'm wondering if I should formally break it off with her or...'\n\n'Or would it be ok with me if you fucked Sally as well as me,' she finished. It was the first time she'd used the word \"fucked\" and I was mildly surprised and it must have shown in my face. 'I do know those words. I just don't use them very often. As for Sally, I can hardly expect you to be my exclusive lover, although I'd prefer it if you didn't sleep around. I'm sorry, darling, that sounds awfully bossy.'\n\n'No, that's fine. It'll just be you and Sally,' I said smugly.\n\nWe ate an early lunch and went back to bed again until two o'clock, when Judith said she had to go. We'd made love twice in that time and I'd taken her from behind for the first time. I'd fucked her hard too, admiring the sweep of her buttocks and her rosy-brown puckered little anus. I'd never indulged in anal intercourse, though I admit I was curious -- a lot of my male friends talked about it at the pub. I did know from experience that many women enjoyed a teasing finger around their rosebud and even the tip being pushed inside. To my surprise, Judith had enjoyed it too when I tentatively stroked my forefinger down the cleft in her buttocks and across her anus. I hadn't gone any further but I knew that at some point I would.\n\nWe kissed for a long time at my door and I was filled with the urge to tell her that I had fallen in love with her, but something held me back and eventually she pattered down the stairs and I heard the front door slam, thinking that I'd get a key cut for her next time.\n\nI went out that same afternoon and got a key cut and I put it in the internal mail to her first thing on Monday morning. At lunchtime I got an email from her.\n\nDear Ben, Thank you for the key! It made me all tingly to get it. I know we talked about doing other things like going for a walk, but the weather's so foul in January and February and I think we've got a lot of exploring to do. So perhaps we should stick with your flat for a few more weeks. What do you think? Judith xxxxxxx\n\nI emailed back that that was fine with me, then I read her email again, lingering on the words \"I think we've got a lot of exploring to do...\" I thought when Judith and I first made love that my hopes and expectations had reached their peak. Now it seemed that there was some way to go to the summit.\n\nThe next Saturday Judith let herself in with her new key and after some kissing and cuddling, she went to get changed in my bedroom while I cooked us breakfast. When she appeared, fifteen minutes later, in a silky black gown over her underwear, it was all I could do to resist throwing her over the kitchen table and fucking her there and then. I think she was in a mood to tease me that morning, because she lingered over breakfast and asked for another cup of coffee. I was in shorts and a T shirt and my erection must have been obvious to her. Eventually she drained her cup and stood up, shrugging off the gown. Underneath it she was wearing black seamed stockings held up by suspenders and a garter belt. A lacy black bra completed the outfit. She wasn't wearing any panties.\n\nShe held her hand out to me, long and slender, a wedding ring on her third finger, her perfect nails painted a dark red. 'I've been waiting all week for this moment, Ben.'\n\nI took her hand and led her to the bedroom, where we kissed for long minutes. While we kissed I unhooked her bra she stepped back and removed it. I cupped one of her neat breasts and lowered my head, taking the nipple in my mouth and sucking on it.\n\nJudith moaned softly. 'Mmm, it's nice when you bite them gently.' I obeyed, clamping down lightly on the erect bud. 'Yes! A bit harder.' I bit down harder, tugging at the nipple and Judith moaned louder. 'That's it! That's perfect.' I transferred my attentions to the other nipple then Judith stepped back again, her hands on my arms. 'Would you lick my fanny please Ben?' If you do, I'll suck you off afterwards.'\n\nI wanted to laugh at her choice of words but instead I guided her to the big, upholstered chair that took up too much room in the bedroom. 'Sit down and put your legs over the arms.' She did as I asked her, the long, stocking-clad legs open wide, her labia exposed and vulnerable.\n\n'Oh God darling, I've been dreaming about this all week.'\n\nI was still thrilled when she called me darling, and beside myself with excitement that my mature lover, the once unattainable personal manager, was sitting like this in front of me, asking me to lick her cunt. I dropped to my knees and stroked her pubic bush, brining my nose up close and smelling her scent. Sweet, musky, a hint of citrus which I think was her shower gel. I used my thumbs to part her labia and started licking her in long, sensuous strokes, my tongue darting into the pink interior and flicking over the little hooded clitoris. She was very wet; clear, sticky secretions were gathering at the bottom of her labia and would have overflowed down to her perineum if I hadn't been lapping it up like a cat with the cream. She started wriggling around as I concentrated on her clitoris, sucking it and flicking my tongue across the tip. At the same time I slid two fingers easily into her vagina and slowly finger-fucked her.\n\n'Christ, Ben, what are you doing to me?' Her hands were gripping her thighs, knuckles white against the sheer, black nylon.\n\nShe was breathing in short, fast gasps, a bead of saliva at the corner of her mouth, when I withdrew my fingers from her cunt and started smearing her juices around her perineum, moving towards her anus. She moaned louder as I touched her most intimate place. Now would be the time for her to stop me but instead she braced her legs and tried to raise her hips to give me better access. I circled her puckered hole with a fingertip and started to press it in. The fingertip, well lubricated, went in easily and she gasped and tried to buck her hips. I licked faster and she threw her head back against the chair and gave something between a wail and a moan.\n\n'I'm coming, Ben. Push your finger right in!'\n\nI slid it in as far as it would go, feeling her sphincter spasm around it as her climax washed over her in a tsunami of pleasure and wild abandon.. When it was spent, she subsided into the chair and I gently withdrew my digit, which was pleasantly free from any mess.\n\nNow I wanted her. I stood and pulled her up, almost pushing her onto the bed, parting her legs, thrusting myself into her sopping cunt. And it was sopping. It was just as well that Judith had the tightly muscled vagina of someone thirty years her junior or I wouldn't have felt any sensation, such was the amount of lubrication she had produced. There was some of mine, too; I'd been leaking seminal fluid since Judith arrived that morning. Now I thrust into her mercilessly and she hooked her legs over mine and wrapped her arms around me and dug her nails into my back and we kissed furiously and then I started squirting spunk into her and the world went a bit grey for a few minutes as wave after wave of exquisite sensation washed through me and then it was over and Judith was lying in my arms, the sweat on our bodies cooling.\n\n'I hope you didn't mind me pushing my finger into you like that,' I began, hoping to start a discussion.\n\nI felt rather than saw her smile. 'I think you know perfectly well that I enjoyed it, Ben.' My abandoned lover was taking a back seat, Judith Denholm was back in charge. 'I haven't always enjoyed it,' she went on, surprising me. 'When I was eighteen and started dating boys they'd always be trying to stick their fingers in my bum, or their penises! I always said no. But then in my fifties, when I stopped having any sex with Frank, I began to experiment a bit, while I was masturbating. This probably sounds terribly shocking to you, Ben.'\n\n'Not at all', I said, truthfully, 'it's fascinating.'\n\n'When I masturbated I used to finger my anus sometimes. Well, more than finger it. I used to push my finger in and out. It just felt nice. And very, very erotic. I suppose it was the eroticism that I was missing in my life. Although to be honest, my married love-life was pretty tame. I probably shouldn't be telling you all this. I'll feel terribly guilty later. I even bought a butt plug and used that.'\n\n'Really?'\n\n'Yes, really. I used to go out with it in. I even went to work wearing it.'\n\n'I can't believe it! You mean when you interviewed me you might have had a butt plug inserted in you?'\n\n'No, not that day.'\n\n'But you've never had full anal intercourse?' I couldn't believe I was saying these things to Judith Denholm.\n\n'No, I haven't. How about you?'\n\n'I haven't either.'\n\n'I don't believe you.'\n\n'It's true. I've used my finger a few times but that's it.' There was a heavily pregnant silence.\n\n'Would you like to try it? With me?' Judith said quietly.\n\n'Are you sure? I don't want to think I've pressured you into anything.'\n\n'I wouldn't if I didn't want to. But I don't want to get to seventy and regret not having done things. I'm curious about it and if there's one person I'd like to try it with it's you because I know you'll be gentle and considerate and you'll stop if you're hurting me.\n\nWe didn't pursue anal intercourse any further that Saturday. For one thing I had nothing in my flat to use as a lubricant, apart from cooking oil. So I undertook to get some specialist lubricant by the following Saturday and Judith promised to be wearing her butt plug when she came around. Suffice it to say that once again the next week dragged by in a frenzy of anticipation. I was about to enter the ranks of those men who'd penetrated a lady's anus. Judith, at the age of fifty-six, was about to enter the ranks of ladies who had their anuses penetrated by a male penis.\n\nThe following Saturday was characterised by gale-force winds and sheeting rain that kept the streets clear and people indoors with the central heating on. Judith was late, which was unlike her, and I fretted and looked out of the window until I saw her car draw up in the forecourt.\n\n'Sorry, darling,' she said, giving me a damp hug. 'There was an accident in Hertford town centre.' She disappeared to change and I put the croissants in the oven.\n\nBreakfast was a bit stilted by the spectre of anal intercourse. The conversation didn't flow as it normally did between us. 'Did you get the lubrication?' asked Judith, eventually.\n\n'Yes,' I replied. 'Have you got your thing in?'\n\nIn reply to this Judith got up from the kitchen table and came round to my side, taking off her satin gown as she came. 'Look,' she said, bending over, her forearms on the table, naked apart from stockings and suspenders and her black high heels. I didn't need to part her buttocks to see the purple base of the butt plug protruding from her anus. 'See. I'm ready for you my darling.'\n\nI felt a wave of emotion roll over me. God I loved this woman. And today I was going to tell her. The moment I'd fucked her arse. Who said romance is dead? We went into the bedroom, still a little awkward.\n\n'Are you sure you still want to do this, Ben?'\n\nI nodded, taking my shorts, T shirt and underpants off and producing the lubricant from one of the bedside table drawers. We kissed a bit but something was missing. We both seemed to be overcome with the idea.\n\n'I'm very excited, Ben. Feel me.'\n\nI put my hand between her legs and felt her sopping, gooey cunt. And that did it. That broke the spell of awkwardness and the next thing we were on the bed and kissing as if our lives depended upon it, my hand rubbing her juicy twat and hers stoking my erection. After five minutes she pulled her head from mine.\n\n'Are you ready?' I nodded and Judith rolled over onto her front. 'Take my plug out and then lubricate me a bit more.' I grasped the base of the plug and pulled, gently. Nothing happened. 'You'll need to pull quite hard.' I pulled harder, twisting the plug like a corkscrew and it started to come out. Once the thickest part was clear of her sphincter the rest was ejected with a faint \"plop\". I squeezed a dollop of lubricant onto my fingers and spread it all round her little puckered hole, pushing my lube-coated middle finger in and sliding it in and out. 'Use a bit more, darling.' I repeated the process, this time pushing two fingers in and sliding them up to the third knuckle. Judith groaned. 'I think I'm ready for you now.'\n\nShe opened her legs wide and I positioned myself between them, supporting my weight on one arm, my cock in the other hand, smeared with lube. I rubbed the tip of my erection around her anus and pushed.\n\n'A bit higher, Ben.' I moved my cock up a fraction and pushed again, gently. 'That's it! Now slowly, please darling, very slowly.' I kept up a steady traction but nothing happened. 'Push a bit harder,' said Judith, a note of urgency in her voice. I pushed harder. Then harder still. Then Judith gasped and said 'ouch' and the head of my penis squeezed past her anal sphincter and into her rectum. After that it went in easily, although I took it very slowly.\n\nIt was a very different sensation to being in her vagina. The sphincter gripped the base of my shaft and the walls of her rectum cocooned my penis in a gentle, warm and well-lubricated embrace. It felt marvellous. It also felt wildly erotic. Here I was, buried up to my balls in the anus of the most desirable woman I'd ever come across.",
        "I waited for her to adjust to my entry. Is that ok for you, Judith?'\n\n'Yes', she said, breathless. 'You feel very big and I feel very full, but it's a lovely sensation. Do you want to, you know, start fucking me?'\n\nI was careful at first, just coming out an inch or so and sliding gently back in. But she seemed comfortable and I increased the length of my stroke. 'Yes,' she gasped, 'that's good. Keep doing it like that.' A few minutes later she said 'harder' and I increased the length and speed of my stroke. Now I was coming almost all the way out and thrusting back in. Six inches at a stroke, my thick cock stretching her rectal walls. One of her hands was underneath her and I knew from the muscles flexing in her upper arm that she was masturbating. I felt my orgasm approach and thought I ought to warn her.\n\n'I'm coming, darling.'\n\nShe started masturbating faster, her hips bucking up to meet my thrusts. 'Yes! Fuck my bum hole till you come. Fill me up with your hot spunk.'\n\nThis dirty talk, so unlike Judith, tipped me over the edge and I started pumping semen into her rectum. Eight, nine, ten jets, and then I was empty, the sensations dying away as I slowed down and collapsed down onto her. I waited until my erection had subsided to avoid her discomfort as I withdrew and I plopped out easily, my cock shiny with lubricant but otherwise clean.\n\nAfterwards we both washed and lay down on the bed again.\n\n'Did you enjoy that?' asked Judith, smiling at me, that gentle, tender, calm smile that I loved so much.\n\n'It was unbelievable. Fantastic. Amazing.'\n\n'So you'd like to do it again then,' she laughed.\n\n'God yes. But more to the point, how was it for you.'\n\n'Well there was a tiny bit of pain when your glans went past my sphincter, but then it was fine. And when you started sliding in and out, it was heavenly. A completely new sensation, but I really loved it.'\n\n'So you'd like to do it again then,' I teased her.\n\n'Oh yes, definitely. Maybe not every time. I don't want to end up with any problems down there, but I really do want it to be part of our intimacy. Well, you can't get more intimate than that, can you?'\n\nLater that morning we made love again and I climaxed at the same time as Judith. As she came she looked up at me and said: 'I love you.' Just like that. So I said: 'I love you too,' and afterwards we hugged and kissed for a long time and Judith cried a bit from the emotion of it all. I told her I loved her as we parted on my landing and she cried again and said she loved me very much.\n\nBack in my flat I felt a little deflated and couldn't concentrate on a book or the television. Life was just too exciting, and now I was in love with a wonderful woman who also appeared to be in love with me. I was just thinking about going for a run when the doorbell rang. My first instinct was that Judith had forgotten something, although surely she'd let herself in with her key. But when I opened the big front door downstairs there was just a man in his sixties I didn't recognise standing there, dressed in jeans and an anorak.\n\n'Can I help you?' I asked, politely.\n\n'Possibly,' he said, smiling disarmingly at me. 'I'm Frank Denholm, Judith's husband.' I took an involuntary step back. 'It's alright,' he said, holding up his hands, 'I haven't come to cause any trouble. I just want to talk. Perhaps in your flat? I don't imagine you want your neighbours hearing us.' I nodded and led the way back upstairs.\n\n'Would you like a coffee?' I asked when I'd closed the flat door and ushered him to the settee, where he made himself comfortable.\n\n'Thank you, that would be nice. Just black, please.'\n\n'Does Judith know you're here?' I asked when I returned with two steaming mugs.\n\nHe smiled at me again. 'No, she doesn't. I'm afraid she'd be horrified if she knew.'\n\n'So what exactly do you want from me Mr Denholm? Have you come to warn me off?'\n\nHe took a sip of his coffee. 'I've come to find out who you are and what you're after,' he replied. I stared at him. 'May I call you Ben?' I nodded. 'Well, Ben, you can't be married to someone for thirty-five years and not notice a change in their behaviour. I don't know what my wife's said to you but I assume she's at least implied that I can't have a physical relationship anymore. Haven't been able to for a few years.' He sipped his coffee again, reflectively. 'When it all came up I gave Judith my blessing to go and have a physical relationship elsewhere, but she declined. She was concerned with hurting my feelings. But over the past few weeks it's become obvious to me that she is seeing someone and I assume that by not confiding in me, she thinks she's protecting me.\n\nSo I employed a small agency that I've occasionally used in my line of work to find out who she was seeing, and it turned out to be Ben Walton, a junior accountant at the same accountancy firm as Judith. I was concerned to discover that you're only twenty-two and that you're a handsome fellow so I got to wondering what your motives are for having a relationship with a fifty-six-year-old woman. And that's why I'm here. I'm not concerned that my wife is having sex with you, but I don't want her to be hurt.\n\nI thought for a few moments while he watched me and sipped his coffee. 'Ok,' I said at last, 'I think the best thing I can do is tell you what happened. That will cover the \"why\", I think you'll find.'\n\nSo I started at the beginning with my interview and my infatuation with Judith and the subsequent development of the relationship to the point where I'd fallen in love with her. I didn't mention any gory details, neither did I mention that she was probably in love with me.\n\n'Are you having other relationships?' he asked when I'd finished. I explained about Sally and the dilemma I'd had about cheating on Judith. He looked at me a long time, while I grew red under his scrutiny. I was just working myself up to telling him to say something or piss off when he spoke.\n\n'I get a good feeling about you, Ben. I think you're probably a decent lad. I hope very much that you will make Judith happy and not hurt her when the time comes for the affair to end, as it will; thirty-four years is much too big an age difference.'\n\n'She'll never leave you,' I said. 'She made that plain from the start. I think that's why she was ok with a much younger man, because I couldn't be a threat to her marriage.'\n\n'I think you're probably right,' he said, standing up.'\n\n'Are you going to tell her about meeting me?'\n\n'Yes,' he said. 'She deserves to have some enjoyment and have a clear conscience.' We shook hands at the door, which felt odd to me.' 'Goodbye, he said, walking down the stairs. 'I don't suppose we'll meet again.'\n\nJudith rang me that evening while I was in the pub with some mates. I went outside into an icy February evening to take the call in private. 'Ben, I'm so sorry about what happened this afternoon. I had no idea.'\n\n'I know.'\n\n'But it appears you passed the interview.' I could hear the smile in her voice. 'And without telling any more whoppers.'\n\n'How do you know I didn't?'\n\nShe laughed, sounding happy. 'I'm really glad it's all out in the open. My only regret is that I didn't tell him off my own bat. He was lovely about it. And guess what?'\n\n'What?'\n\n'Frank suggested that I have a night in town mid-week to save the commute.'\n\n'What, you'll stay the night in my flat?'\n\n'Yes. What do you think?'\n\n'I think that's a bloody brilliant idea! How about Wednesday?'\n\n'Wednesday it is! Can't wait!'\n\nOn Tuesday evening I cleaned the flat from top to bottom and changed bed linen. Wednesday was wet and windy and I got soaked running from the tube station to the office. By ten o'clock I'd more or less dried out and I went to the vending machines by the lifts in search of a chocolate bar. While I was scanning what was available one of the lift doors opened and Judith walked out, with one of the managing partners.\n\n'Hello, Ben,' she said, smiling brightly at me.\n\nThe managing partner nodded: 'morning, Ben.'\n\nMy chest felt tight but I managed to respond, watching their receding backs, her glorious long legs in their black stockings. Legs which I knew would be wrapped around my back later that evening, wondering what her boss would say if he knew.\n\nI was home by five-thirty, preparing dinner and obsessively tidying the flat. In between I stared out of the window for her car pulling into the forecourt. She arrived just before seven, apologising for her lateness.\n\n'I'm sorry, darling, I should have warned you. We had a management meeting at four and they always go on for ages. But hey, we've got the whole evening and night ahead of us!' She came into my arms and we kissed fiercely, arms locked around each other. 'Do you want me now?' she asked, breaking the kiss, passion filling her eyes.\n\n'God, yes,' I breathed. 'But it'll have to be a quick one, dinner will be ready in half an hour.'\n\n'Perfect,' my middle-aged lover said, leaning over the back of the settee and lifting her skirts. 'Give it to me now. It'll make the next event last longer and we'll probably enjoy dinner more.'\n\n'When did you take your knickers off?' I asked, staring at her exposed pussy.\n\n'In the toilets, just before I left the office. And driving here without any panties on has made me sopping wet so just shove it in and fuck me until you come.'\n\nI didn't need asking twice. My erection was already straining at my trouser fly, intensely excited by what Judith had said and her rare use of expletives. To save time I dropped my trousers and underpants and took hold of my shaft, slick with my pre-come and, standing between her outstretched legs, I steadied myself with a hand on her buttocks, positioned my cock at the entrance to her vagina and pushed myself all the way in.\n\n'Oh, that's good! Now give it to me hard...'\n\nIt was over in about two minutes flat. Sopping she might have been but her pussy was still gloriously tight for a fifty-six-year-old. My orgasm arrived with a blinding flash and I made no attempt to delay it but just revelled in squirting my load into Judith. I pulled out and she ran to the bathroom to mop the stream of spunk that was starting to run down her inner thighs.\n\nHer suggestion was spot on. We ate dinner calmly, by candlelight, the underlying passion not spoiling the romance of the occasion, or my half-decent attempt at duck a l'orange. Then we sat on the settee in the little front room and watched a drama while we finished the rest of the dinnertime wine. And when that was done we looked at each other and nodded and stood together and went into my bedroom.\n\n'I want you so much, Judith,' I said, closing the bedroom door and drawing the curtains.\n\n'The feeling is mutual,' she replied, starting to strip off her blouse and skirt. I followed suit and in a minute I was naked, my erection back to industrial strength and waving at my lover. She was in stockings and a garter belt, her labia puffy and open with desire and her nipples hard. I sat on the edge of the bed and she straddled me, lowering herself onto my hardness, using a hand behind her back to guide herself in. We stopped like that while she bent forward and kissed me. 'I love you, Ben Walton.'\n\n'I love you too, Mrs Denholm.'\n\nShe pulled a face and nibbled my ear, starting to rock gently back and forth. I took one of her nipples in my mouth and suckled and nibbled it, biting gently until she cried out in pain and pleasure. Then I sucked the other nipple and kissed her again, our tongues moving in and out of each other's mouths, saliva on our lips and chins. Judith was breathing in short, sharp gasps, starting to rock harder, her hands on my shoulders, her bright red nails digging into my skin. Her cunt was like a hot, velvet glove, squeezing my cock, and I could feel her leaking pussy juice on my thighs. She hadn't had a climax like me and I wasn't expecting her to last long, and she didn't. Throwing her head back and letting out a half-scream, half-moan, she started bucking her hips back and forth wildly, her nails painful on my neck and shoulder. It seemed to go on for a long time, then she slowed and slumped down onto me, breathing heavily, sweat running down between her breasts and beading on her forehead.\n\n'What do you do to me Ben?' She climbed off my lap and lay down on the bed, face down, arms outstretched, her long, stockinged legs open wide in invitation. She turned her head to the side, her auburn hair falling across her face, and said words which six months ago, in my interview, I could not have imagined her saying, even in my wildest dreams. And now, Mr Walton, I want you to tie my hands to the bedposts and then I want you to sodomise me.'\n\nI felt my throat constrict with desire and excitement. We had talked about bondage and Judith had brought over a handful of long, silk scarves the previous weekend. Now it was to become a reality, it appeared. I found two of the scarves in a bedside drawer, with the lubricant. Taking one scarf, I folded it in half and looped it over one of her slim wrists, pulling the ends through and tying it off before knotting the ends of the scarf around the bed post. I repeated the exercise with her other hand and there she was, tied down and at my mercy. Even after the events of the past two months I still found it hard to believe that these things were happening and happening to me. It just seemed as though I was living in my own fantasy.\n\nKneeling on the bed beside her I squeezed a big dollop of lubrication onto my fingers and smeared the sticky fluid around her anus before slipping my second finger in and working it gently around. I really enjoyed doing this and so I spend more time than I needed to and more lubricant. Judith moved her buttocks around as I pushed my fingers inside her; then I was ready. Kneeling between her legs and supporting myself on one arm, I guided my rigid penis to her little pink puckered hole and pushed gently. She knew what to expect now and was relaxed, her sphincter opening more easily than the first time, my purple glans stretching the muscle wide as I slid slowly into her rectum. Then I was in, all the way.\n\n'How does that feel, darling?'\n\n'Big and dirty and erotic.' She turned her head to the side again and I leaned down and kissed her lips, our tongues meeting and flicking against each other. Slowly and gently I withdrew an inch or two and pushed back in. I increased my pace very gently until I was coming almost all the way out and pushing my six or seven inches of rigid meat back into her arse. Judith groaned as I thrust in.\n\n'It's good, Ben. I like it like this. I want you to do this to me lots of times.' Although I'd been inside her a scant five minutes, I could feel my orgasm approach as she said these words. It was just too much for me: the glorious body, tied down on my bed, her slim, stocking-clad legs open wide for me, and my diamond-hard cock sliding in and out of her stretched-open anus. I gave in to it. I was desperate to come, and we had all night... So I surrendered as the storm hit and engulfed me. Judith knew I was coming and she shouted 'yes, harder!' and tried to thrust her hips back at me as I pumped my come into the softness of her rectal passage.\n\nAfterwards she lay in my arms in the darkness of my bedroom. 'Are you really sleeping with me tonight?' I asked, hardly able to believe it.\n\n'All night, darling. I'll be next to you when you wake up in the morning. And if you don't make love to me before we go to work I'll knock two points off your next annual efficiency assessment.'\n\nEpilogue 2021\n\nThirty years on I still remember that first night we slept together. I lay awake for hours just listening to Judith's breathing, running the events of the past six months through my mind on an endless loop. And so I remember that we did make love the next morning and I even remember that it was slow and gentle, all the urgency of the previous night spent. And we both reached a climax together and it seemed as if heaven had opened its doors to us, at last.\n\nThat night was the beginning of a run of the best years of my life. I never did meet Judith's husband again -- he died about ten years ago -- but he was as good as his word and he never interfered or tried to stop Judith seeing me. She came to my flat at least one night during the week, sometimes two, and we spent weekends together too. Sometimes in my flat but also in hotels, either in the country, so that we could walk the wooded hills and moors, or in cities so we could visit art galleries and museums. We even went on holiday for a week together every summer, usually to a Greek island; Samos was our favourite.\n\nBut the years went by and Judith, especially, was aware of the age difference between us and she urged me to marry, which I did, eventually. And yes, it was Sally from work that I married. That put a stop to most of our activities though we still managed to see each other once a week, usually an illicit encounter in a hotel in the afternoon. Inevitably, I suppose, Sally found out and I had to tell her all about us. What happened next was unexpected and would probably make another story in its own right, though I don't suppose I'll ever write it. I'm only writing this because I'm trying to fan the flames of memory. I am infinitely sad because Judith died a month ago and the world looks very dark. I was at her bedside at the end. But I will recover. I have Sally, and my memories and the knowledge that I had all those years with the love of my life, a woman so wonderful that my heart aches when I think of her.\n\nThe End"
    ],
    "authorname": "Sylviafan",
    "tags": [
        "love story",
        "anal sex",
        "oral sex",
        "older woman",
        "tit sucking"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-personnel-manager"
}