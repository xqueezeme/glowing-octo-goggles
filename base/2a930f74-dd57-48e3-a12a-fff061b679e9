{
    "title": "Adventures of Hiking Ch. 02",
    "pages": [
        "***You will need to read Chapter I to understand Chapter II. Don't be that person who reads the second part and then complains about to knowing what is going on. There is more to this story but I have not yet written it. \n\nGreg thought about her offer and although he said yes, he was thinking about the whole night and the next day's hike. With the gorgeous scenery of the mountains, he let his mind drift to the right and wrong of having sexual relations with a transsexual. He knew he didn't feel gay, but he also couldn't stop thinking about how great it felt to feel her take his anal virginity too. \n\nThe guide was calling out trees and plants while Greg was feeling Jessie's panties holding in his privates as it was a constant reminder that he was wearing her panties and that there was more of her he would have to see. It was like there was more to her story and more to their relationship and yet he didn't know if there was a relationship either. \n\nHe thought constantly about how she fucked him and how it felt for her to have a dick inside of him. He could feel part of him question his sexual preference, but he still saw her as a girl, just with something extra. He repeated questions in his head he wanted to ask her and then knew it was strange to ask her and that he could have said no at any time. He also knew the worst part was he liked wearing her panties as it reminded him of her in a kinky way.\n\nWith his mind finally settling, he then began snapping pictures like his camera was a gun and he was in battle. From birds to scenic scenes he took photos of everything he saw as beautiful. Nothing was left undocumented. He felt as he was getting his money's worth. The liberating experience of the outdoors was all around him and yet he couldn't shake the erotic thought that his ass was fucked and ejaculated in by a transexual.\n\nThe guide took them far out but then told them they were heading back. He knew there was more to see and explore as the trail they were on continued. Not wasting a moment, he began taking pictures on the way back as well sucking up the time away. Each night he set up his tent thinking about how good Jessie's dick felt to fuck him. Each morning his erection was filled with the memory of what they did.\n\nWhen the guide began to bring them back, he knew he was going to see her again soon. He wanted to be grossed out and feel disgusted with what he did but he knew it felt amazing, like a drug that had no side effects even. Greg finally gave up the wrong doing idea and settled on the erotic memory of feeling her girl dick unload cum in his ass. He felt his arousal from the memory and thought that she pumped his ass full with a creamy load and left him wearing panties for his trip.\n\nAs he walked the tour guide spoke, but his thoughts were about Jessie. The feeling of wearing the panties was like a leash to bring his thoughts back to her. Even while wearing the second pair of panties, Greg let his mind drift to Jessie as they were almost back. He knew there was no saying no to her as he felt himself get an erection from thinking about her and her girl dick. He wondered if he should go further as his mind now put her genitalia in the \"spank bank\" portion of his brain. \n\nNever before did he ever think about sucking a dick or even playing with one; now he couldn't get it out of his mind. Questions came to him about what he did and yet he knew deep down that it felt good, and he liked spending time with her. His whole body felt the strange nervous energy when he thought that Jessie was going to ejaculate in his ass again. He knew deep down that he wasn't going to say no, it was just a matter of sucking her dick and possibly swallowing her girl cum if she came.\n\nHe still had a half day of hiking to get to the pickup location he told Jessie aboutas he wondered if she was going to even offer sex. Wondering if she wanted him now nagged at him as he knew she was the catch and not him. Greg thought about himself and then wondered why he should be the catch for her. In the end, he knew he was rationalizing something more.\n\nJust as he walked closer to the meeting spot, he saw his Jeep. As he got closer, he felt his heart beating knowing she was there too. As he closed the distance, he saw her get out of the Jeep and lean against the hood as if belonged to her. Not wanting to make a big deal of it and yet so happy she was there he just waved to her smiling wide.\n\nHe wanted to hug and kiss her but ended up just smiling wide and being cautious. \"Thank you for doing this.\" \n\n\"Well, you did promise me money.\"\n\n\"I did, I did. Well worth it too,\" he joked as he knew it saved his trip.\n\nAs he got in the Jeep, she adjusted the radio back to a normal level since she was blasting it while waiting. \"Get something to eat or head back to my place?\"\n\n\"Any place good?\" he said as the thought of a sit down meal sounded like heaven to him as all he ate was rations and some canned food.\n\n\"I know a good place. It's a drive, but better than the shit they serve around here,\" she joked as he finally got the Jeep moving to leave.\n\nIt was a longer drive then anticipated but he used the time to talk about the pictures he took and how relaxing it was. Jessie seemed to listen and then added the things she liked about hiking and what she saw in the past. She seemed to joke about him spending money on a hike that he could have done for free though.\n\nThe place looked like a bar that was used for biker rallies, but Jessie insisted it was a good place to eat. Greg wondered about it though as he did see a line of motorcycles parked by the front to add to his assumption too. The inside seemed to match the outside as it looked like they could film a biker movie inside.\n\nJessie walked to the side booth away from people as he sat across from her. The waitress looked like a trailer park queen from back in the day, but she was sweet and took their orders quite quickly. He looked over at Jessie wondering what place she took him to.\n\n\"You sure about this place?\" he wondered, looking around as everyone seemed to be a biker or some sort of trucker.\n\n\"Yeah...my friend Amy works here. Place has good food and is way better than anywhere by me.\" \n\nNot going to be deterred by his instincts, he gave in and continued the conversation about hiking. Jessie then talked about places she had been to in the mountains that the trail guides don't know about. Greg thought it was a good question but knew it could be sensitive as he ventured asking her about her web work.\n\nJessie shrugged it off as something she only did for the money and that she just wanted enough money to get her tattoo business going. Not asking more questions, he switched over to heading back home as Jessie seemed to laugh at the idea he would travel a dozen states to hike.\n\nGreg wondered if sex was going to come up as he looked at her thinking about how they already had anal sex. She had all the facial features of a girl and a neck that was both thin and sexy. If he didn't already know the answer, he would never have guessed she had a dick between her legs. Even her mannerisms were that of a girl as he wondered how much practice she had at it.\n\nThe food was not bad as he could feel it was a greasy option to a good meal and it was still better than the trail food. Just as Jessie was finished, she looked up at him with a serious look. He wondered if she was pissed maybe since he brought up her webcam work.\n\n\"You still want to fuck tonight?\" she asked keeping her dead stare on him.\n\n\"I...did think about it. I was hoping we could.\" He knew it sounded weak and not manly, but he still could not get it out of his head that she had a dick he wanted in his ass again.\n\n\"Good. But I have some rules. First, no hitting my ass. I ain't into that. Second, if I say stop you stop.\"\n\nHe put his hands up and replied quickly as he knew she was thinking he was some sort of man that liked rough sex and he knew he wasn't. \"Sure. I am not into the rough stuff at all.\"\n\n\"You like kissing?\" she shot back quickly with a face like she was a dog ready to attack.\n\n\"Yeah. I love to kiss,\" he admitted as making out was something he liked to do a lot with his former girlfriends.\n\n\"No kissing. I don't kiss,\" she snapped back shaking her head to emphasis it.\n\n\"Okay. No kissing,\" he replied wondering if she was mad at him.\n\nShe then softened her look at him. \"Okay. Let's head back to my place.\"\n\nThe drive back was quieter as the conversation seemed to be more on sex than other things. He knew it was awkward when she turned to him and asked. \"So. Did you think about what we did? Do you still think it's gay?\n\nHe knew he thought a lot about it but felt it was a complicated answer and that he was still attracted to girls. He knew that she was not a girl in the technical aspect of it but also knew that no matter what he was attracted to her. He also felt like she was somebody to talk with and have fun with too and it was more than just a dick in the ass relationship, if there was a relationship.\n\n\"Well...I am not gay. I mean, I like girls and find them attractive. What we did was experiment...right? I mean, I don't see you as a guy and you are attractive so...does that answer it?\" his voice sounding worried that she would be pissed.\n\n\"Fair enough. And thank you. But did you think I was a girl when you talked with me? I mean some guys can tell, then some guys only hit on me because I am trans too. You said before you thought I was not a trans...I am just trying to see if you were really telling the truth.\"\n\nHe knew the question was kind of loaded but he decided to just lay his chips on the table and be honest. He still wanted to try new things but if it didn't happen then it wasn't the end of the world he felt.\n\n\"I really didn't know...honest. I just wanted my Jeep fixed and when agreed to it, I was like great. I really wasn't expecting anything else. I just thought you were a girl that worked at the gas station.\"\n\n\"Did you like it? Some guys like it and some just try it and then never do it again. Oh, and you still owe me money.\"\n\n\"I did like it...just never did anything like it before,\" Greg answered honestly, still thinking he was walking on eggshells with her not wanting to upset her.\n\nAs they pulled into her place, she shifted it into park and looked at him seriously. \"I haven't had a guy fuck me in awhile. I use toys sometimes, but my work gets me off, so I don't get out much to find guys. The ones I do find all want to be bottoms too.\"\n\n\"Okay. Whatever you want is fine.\"\n\n\"You really want to do this?\" she asked with a curious look on her face as if what he said was not clicking with her.\n\n\"Yeah. I kinda liked it,\" Greg answered as he knew he was not telling the whole truth. He knew he could not stop thinking about how it felt for her to ejaculate inside of his ass.\n\n\"Fair enough,\" she replied and then got out of her car.\n\nWith his gear stashed, he sat and waited for her Jessie to get out of the shower. When she did, she was naked with her soft member hanging in full view as a reminder that she was a girl with extra parts. The excitement of the taboo came to him again as he smiled looking at her.\n\n\"Clean up. I want to fuck you still.\"\n\n\"Okay,\" Greg replied feeling the sexual excitement come to him as he knew he wanted it more than he let on.\n\nHe walked into the bathroom and started to close the door only to have Jessie put her hand out stopping it from closing and peering in. She smiled as he knew she wanted to watch him get undressed. Not being bothered by it, he removed his shirt and then his pants. When he got his pants down, he could see the big smile on her face as he was now down to her panties. \n\n\"You like wearing them?\" she asked with a big grin on her face.\n\n\"Not bad,\" Greg replied, not wanting to admit it did feel kinda nice.\n\nHer devious smile seemed to know that he liked wearing them. \"Mmm, I bet you liked it.\" \n\n\"A little,\" Greg gave in as he turned the water on.\n\n\"You can keep them if you want. Wear them or just keep them as a reminder,\" she commented as he smiled at her knowing to him it was both.\n\nJessie walked away as he got cleaned up for sex. All the while his brain was going crazy with the idea that she was going to fuck him. He was going to get her cock in his ass again with the full intention that it would spurt warm cum in him. The girl he could not stop thinking about during his trip had a real life cock and he wanted it in him. The dirty taboo of it all was only adding to the idea that he wanted it too. All the wrong thoughts of what was going to happen and what did happen now shuffled into the enjoyment column on his brain.\n\nWhen the shower and cleaning were done, he saw Jessie on her bed drawing in her sketchpad. She was completely naked laying on her stomach with her ass in plain sight. The curve of her ass was all girl to him too. She had the hips and then bubble shape of a girl's ass and if he didn't know any better, he would never have guessed anything else either.\n\nShe then turned over and then sat on the edge of the bed. \"Ready?\"\n\n\"I guess,\" Greg replied wondering who was going to make the first move.\n\nJessie then pulled him closer and opened her mouth taking in his limp penis. The instant sensation of getting head came to him. For all things considered, Greg never remembered a girl who could suck on him as good as she did right away. Her tongue instantly swirled around the ridge of his crown as her mouth took him in deep as his erection grew in her mouth.\n\n\"Ohhhh...shit,\" he murmured as Jessie was working her hand from the base and her mouth from his tip so her hand and mouth would meet.\n\nHer tongue went along the sensitive underside as her lips gave attention to his crown, so it was getting the intimate feel of having a blow job. Her hand was stroking his shaft giving it the feel- ing of having sex too, while her mouth was bringing his climax closer and closer.\n\nAs she continued, he felt her lips mimicking sex while her hands stroked him like she was giving him a hand job. She then stopped with her mouth and swirled her tongue around the ridge of his crown while still stroking him. He could feel the intense feeling of it all as she seemed to know exactly what to do and where to put her tongue.\n\nJessie then pulled away and bent over on the bed. \"Fuck me now.\"\n\nAs Greg got on the bed and positioned himself, Jessie pulled some pillows to her chest for leverage as she moved down so her ass was higher for him giving him a perfect view of her asshole. Her anal entrance was both pink and glistening like she was prepared for a cock to fuck it hard too. There was not a single hair to be found on her smooth ass crack or balls that were hanging just slightly. Her rose bud was ready for his cock as he aimed his tip right for it like a target.\n\n\"Need to be kinda gentle going in. Don't just go jamming it in me,\" she commented as Greg moved his mushroomed tip right towards her pink anal cherry.\n\nWith his member slicked up and covered in lube, he pushed in. Her tight sphincter held true but only for a split second before giving way and letting him enter her anal cavity. Her stretched anal muscles were now dealing with his girth as he was deep in her ass. The instant snug feeling came to him as he popped her anal rim muscles giving him access to her anal passage.\n\n\"Ohhh...ahhhhhhhh. Fuckkkkk. Fucking feels so goooood,\" Jessie moaned out in a satisfying way. His cock was fully immersed in her rectum as he was waiting to move it not wanting to rush it.\n\nIt was like her ass was overly tight and yet slippery enough to fuck. It was the tightest hole ever and yet slick enough to move in and out of. As he pushed in more before pulling out, he could feel the immediate pressure on his crown too. His tip was getting all the attention of her ass muscles as he moved the slightest inch too.\n\nHe went a little bit faster feeling her tight anal hole giving him the ultimate fuck tunnel to love. His body was bumping against her ass bone as he felt his shaft being gripped tightly by her ass too. Not going overly slow, he was asserting his power in her ass but not pounding it either. His hands weresteady around her waist as he pulled her towards him making sure he was fucking her and not the other way around.\n\n\"Ohhhhhh...fuckk. Oh God...Fuck. Fuckkkk,\" Jessie moaned loud as he thrusted a bit harder feeling her ass finally accept that his cock was owning it. \n\n\"You like it? Ohhh fuck...you like my ass?\" she moaned again as he was pulling back and pushing forward giving her the full feeling of his entire length in her butt.\n\n\"Feels so good,\" Greg moaned as he knew it was better than fucking his ex-girlfriend too. Her ass was tight and yet easy to fuck giving his cock the most perfect hole to fuck.\n\nStill holding onto her hips, he speared his length in and out of her with a nice steady rhythm. The sound of the flesh hitting flesh got louder and louder as he was pounding her anal hole for all its worth now. She moaned with each thrust like she was giving up and allowed him to take her ass. Her anal muscles were giving him an almost massage as he penetrated too not holding back as he gave her the full length of his manhood too.\n\nJessie pulled away for his dick to feel the cold air as he was no longer inside of her. \"Ohhh fuck. I got to stop,\" she pleaded almost out of breath.\n\n\"Too hard? Did I hurt you?\" he responded to her wanting to stop, fearing that he did something wrong.\n\n\"No. No. I fucking loved it. I just didn't want to cum though. I almost came from you fucking me. It was just that good,\" Jessie smiled with her response.\n\n\"You could have came. I want you to cum.\"\n\n\"I know. But I want to fuck you. I want to cum inside of you like last time. I get requests from guys all the time and that's what they want. All they talk about is having me cum in their ass. I want to do it for you though. I want you to enjoy it. Let me give you something every guy asks me to do to them.\"\n\n\"Okay. Can I ask you a question though?\" He was not going to argue as he thought about it the whole trip. It was both erotic and the biggest taboo he could think of.\n\n\"Sure.\"\n\n\"How many guys have you came in?\" He thought it was an honest question but knew it would be talking about her past.\n\n\"Just one other guy. He loved it but I didn't like him so it was just once.\"\n\nJessie got on her feet and grabbed the bottle of lube as she knew it was time for him to get into position to be taken. His heart pounded fast knowing that he was once again going to feel a cock in his ass. He swallowed hard knowing that her girl sperm was soon going to be in his rectum and most likely going to spend the night there.\n\nAs he got on top of the pillow and leaned forward, he could feel the cold air on his ass since it was now slightly elevated. He breathed in knowing it wasn't going to hurt but he was going to be ass fucked. There was no turning back and he knew it and was ready to take the lead of being a guy who loved cock in his ass.\n\nLooking around he saw all her things from tattoo books to stuffed animals. He felt vulnerable as the cold lube was smeared on his anal rim. It was surreal as he knew he was in a girl's bedroom and yet he knew his ass was about to be fucked. It was shocking and yet he felt so turned on by her doing it.\n\nShe put the small syringe device in his ass and heard the click of plastic confirming lube was being inserted in his ass for the intent purpose of anal sex. \"Guess you only need one dose this time,\" she commented as he felt wetness in his ass from it all. \n\nThe sound of the mattress compressing came to him as did the pressure of her cock tip wanting entrance into his anal cavity. His sphincter muscles gave in quite easily as the lube expedited the process. Jessie's tip speared into him as did half her dick as she plunged it past his sphincter.",
        "\"Ohhhh...ohhhhh,\" Greg moaned feeling the fullness in his rectum as he knew her girl cock was inside of him.\n\n\"Hurt? I can stop.\"\n\n\"Nooo. No pain at all. I just feel you in me is all. Feels good really. Never knew it would feel good,\" he admitted as he felt her girl meat slide further in his ass.\n\n\"I want you to really enjoy it,\" she added as she retreated slightly only to push in like she was claiming his ass with her girl spike.\n\n\"I am,\" Greg moaned slightly as he could feel her body completely pressed against him. She was balls deep he thought, and it was just a pressure and fullness he felt.\n\n\"You do have a nice ass by the way. I love fucking it,\" Jessie joked as she gripped his hips and plunged in and out slowly as if she were building up steam for a hard core fuck.\n\n\"Just relax...stay calm. Just let go and allow your ass to be fucked,\" her soothing voice said in a calming manner he felt. \n\nThe pace was increased slightly as he felt the full length of her girl rod plunge in and out of his real hole like it was a hole to be fucked. Back and forth her body went as he felt it bump against his each time she bottomed out in his ass hole.\n\nHis mind went blank thinking of only how good it felt to feel her mushroomed tip pierce through his anal muscles like he literally had a hole for fucking. Each wonderful push was like her rubbing something pleasureful inside of him too. The pressure and fullness was almost like a constant inner massage as she speared her girl member in and out of him.\n\n\"Ohhh...you're doing great. Ohhh fuck, I love your ass. I really love your ass. I could fuck it all the time. Ohhhh yessss,\" Jessie moaned loud as he felt her continue on piercing through his anal muscles giving him this inner build up of intensity that connected right to his own dick.\n\n\"It feels good...Ohhh fuck yes. I love this. Thought about it the whole trip,\" he finally confessed, knowing the secret was out and that he loved to be fucked.\n\n\"Me too. I want to cum so hard in you. I want you to feel me loving your ass,\" she commented back as she increased her pace.\n\nThe sounds of her body slapping against his backside now dominated the room. In and out her cock went as she was full bore fucking him now. He felt open and yet fullness, stretched and yet tight as her thickness pounded away at his anal hole. He felt vulnerable and weak as Jessie was doing all the fucking and yet it was giving his insides this pleasuring massage too.\n\nEach time her body slammed hard against him he felt her rod reach full insertion in his ass. He breathed deep relaxing allowing his anal muscles to stay open and stretched for her. His mind raced with erotic dirty thoughts about how his ass was now being fucked by a girl. He exhaled staying calm letting the rush of sexual endorphins course through his body.\n\nThe sound of her body hitting his added to the sexual excitement as he knew he was being buttfucked. His rectal muscles stretched wide and stayed that way as it was a hole to be fucked. Her cock was spearing deep in his anal fuck hole hard as he felt her mushroomed tip give him a building sensation that anal sex was pleasurable. \n\n\"Mmmm fuckk. Your ass feels sooo good,\" she moaned as he felt the fullness of having her girl cock at full extension in his ass.\n\n\"Ohhh...shit...it feels good for me...ohh shit...I feel it,\" he moaned, knowing he was in full admission he was enjoying being the bottom to anal sex.\n\n\"Mmm, I knew you would like it. You feel dirty me fucking you like this?\" she asked as she slowed down her thrusts.\n\n\"Yesss...fuckyesss,\" Greg answered moaning and feeling a bit guilty for enjoying it as much as he was.\n\nShe then stopped as he felt her length full spear in his ass. Her hands then went to his hips and then move towards his dick. He then felt her hand on his cock. \"You dirty fuck. You are dripping pre-cum.\"\n\n\"I am?\"\n\n\"Ohh you are. You are liking this a lot. Bet you thought about this while you were camping too, how you let a trans girl fuck you and cum deep in you. Admit it...you loved it.\"\n\n\"I did...a little. It does feel better than I expected. Greg confessed slightly feeling her cock own his ass as he felt plugged by her cock.\n\n\"Mmm good. I am going to cum in you again. Does that sound dirty to you?\" her voice sounding almost sultry.\n\n\"Yesss. I liked it though,\" Greg confessed letting go of guilt and embracing the taboo erotic idea that he was going to be pumped full of her creamy mess.\n\nJessie pulled out as he felt a little loose in his ass. She then slid all the way back in slowly as he felt like her cock was a foot long. The soothing sensation mixed with her fullness of her rod gave him the satisfaction of knowing she was balls deep in his ass. She then thrust slowly as if she wanted him to feel the subtle movements of her dick.\n\nHer voice sounded purposefully sexy as she cooed to him, \"Mmmm yessss. I am going to bust my load all up in your ass. That gooey feeling is going to be my seed being absorbed into your body.\"\n\n\"Ohhhfuckk,\" he moaned feeling not just the plugged sensation of her dick but the thought that her sperm was almost owning him.\n\nShe then thrust hard confirming to him that his asswas hers and it was just a hole to fuck. Again and again her body rammed home against his body. He felt like a girl and yet was living it. His body was taking her hard thrusts as he felt his ass just give up and surrender to a cock. The thought that he was being truly buttfucked by her drove him wild and made his own dick throb with need.\n\nJessie was not slowing down at she was ramming hard against him. He felt her erection just glide into his ass like he was a veteran of having cock up his ass. Involuntarily he clenched his ass muscles only to feel her tip spear through his anal muscles giving him the feeling that his ass was something to be fucked by cocks. The feeling of her pushing through his stretched fuck hole was almost better than sex.\n\n\"Ohhh...I am gonna cum. Ohhh...God, I am gonna cum,\" she moaned as he knew that this was the moment her girl seed was about to be sprayed all inside his anal walls. He was going to be creamed like he was a girl and yet it was almost satisfying knowing that she was going to do it.\n\nShe then pushed in as he felt her thrust had more power behind it, like she was being forceful with her cock. It was fucking his ass but only in short powerful bursts going deep but not to its full length as she pumped her waist against him. He felt his ass muscles flex slightly as her trans cock throbbed like it was ready to give out its warm reward in his ass.\n\n\"Ahhhhhhh! Fuck. Ohhh fuck!\" she moaned loud and in a deep tone as he felt his ass seemingly plugged tight as he felt another flex of her cock and then a pulse.\n\n\"Ohhhh God. Shit...I feel it...ohhh shit,\" Greg moaned, and a slight sensation of warmth was followed as she held it firm inside his ass as to make sure her girl sperm was sprayed all in him.\n\n\"I came...ohhh fuck, I came hard,\" Jessie replied, swallowing hard and then finally retreating from his ass as he felt open as the cold air hit his wet cum filled rectum.\n\nGreg leaned forward and then turned on his side to see a look of total satisfaction on Jessie's face. She smiled at him as he got a good look at her glistening cock that fucked him. It was still hard and covered with a mix of lube and cum. All the guilt of what he did was gone as he knew deep down it was an amazing fuck that he would never forget.\n\n\"You ready to fuck me?\" she asked as he reached down to feel that his own erection was covered in precum. It was as if he was precisely onthe edge the entire time she was balls deep in his ass too.\n\n\"Yeah, if you want,\" he said testing the waters to make sure she was okay with it and not to upset her. He had an urge to please her and didn't want to come across as a guy only interested in his own pleasure.\n\n\"Please. I really need it.\"\n\nJessie took his position on the bed and lifted her ass in the air slightly and leaned forward again. She then turned back grabbing the lube and reapplying it in and around her rim as to prepare herself once again. Not wanting to take chances, he put more lube on his own tip so that he wouldn't hurt her.\n\n\"Do you want me to use that syringe thing?\" he asked wondering if it might help her.\n\n\"No, you're good. I put a whole lot in me before. You should be good to go, and you can go hard too.\"\n\nHe put his crown at her anal rim and then eased its journey past her anal flower and home into her anal passage. It was an easy push as it went right in without any concerns for her being in pain. It was both slick and tight as he instantly felt her butt muscles constricting against his dick too.\n\n\"Mmmmmmm. Fuck you got a thick cock. Ohhh Fuck, I love your dick baby...fucking amazing,\" Jessie moaned as he pushed slightly further into her ass making sure he was fully embedded in her anal cavity like his cock was a plug.\n\nSlowly he pulled and pushed in and out of her butt. This was no pussy he reminded himself but it was almost better and tighter too. Her girl ass was really gripping his shaft too as he plunged in her butt like it was a pussy too. He was not being gentle but not ramming it either. He wanted to fuck it but not abuse it either.\n\n\"Ohhh...ohhh shit. Fuck, fuck, fuck. So THICK,\" Jessie cried out her moan as he plunged in and out of her girl butt making sure his thrusts were long and hard as to go as deep as he could.\n\n\"Feel good?\" he asked as he was going a little faster as he found a steady pace of fucking her now.\n\n\"God yes. Ohh fuck yessss,\" she moaned her reply as his body was now bumping hard against her.\n\nJessie shifted her body further down as if she was almost flat on her stomach now. The pillow under her waist was the only support she had as it held her body in a curved position as he now was on top over her. His thrusts were in a more downward position as he felt the meat of her ass absorb his waist as he now hammered his erection into her like he was a machine.\n\n\"Ohhh fuck...harder. Fuck it...please fuck my ass,\" she moaned softly as he could feel the power he had as his dick slipped through her anal muscles like it was a fuck hole for him now.\n\nHe put his hands out near her head holding himself up as he pumped downward hard, feeling her hole give his cock the tight slick sensation of fucking now. The sound of her ass taking the abuse reminded him that he was truly fucking her and not playing around either. His cock was pushed deep into her as he pumped too.\n\n\"Ohhhhpleasee. Fuck it...fuck me,\" she moaned out again as he knew she must be loving it now.\n\nThe urge to cum was there as he wanted her to know that he was loving it too. \"I am close. I am going to cum.\"\n\n\"Ohhhhyessss!\" Her voice was almost guttural as he felt the throbbing need to release building inside of him. His shaft thickening up became more rigid as his cum was preparing to be shot out.\n\nWanting to hold out was there, but he hit a spot in her ass that brought him past the edging part. Her anal muscles flexed then as if she was pushing him out too. As he pushed hard, it was as if she was super tight, and it only caused him to thrust hard as his dick was now almost stuck in her butt. There was no going back now as his urge to climax was there. With one final thrust, he held it and released.\n\n\"Ohhh...yes,\" he moaned feeling his seed ejaculating inside her anal hole, making sure he didn't pull out an inch too.\n\n\"Ohh fuckkkk. Yesss...keep cumming in meee,\" she moaned out sounding like she was almost high on drugs.\n\nThe pressure in her ass got more intense as she clenched forcing his dick out. He moved to the side of the bed as she shifted her body. He was laying on his back as Jessie then moved the pillow and moved closer towards him. \n\nThey were both on their sides as she shifted over and moved her head towards his. He didn't think anything of it and then did as her face got even closer. Before he could react, her lips were on his. It was a sensual moment he felt as he moved his tongue and found her mouth receptive to it as their tongues now caressed each other's.\n\nAs he moved his hands to her side, he caressed her hips and arms while not stopping his tongue from mixing with hers in her mouth. Her moans were muffled as he kissed her while feeling her soft skin as they kissed. \n\nJessie then moved her head as she looked at his eyes softly. \"Sorry, I just wanted to kiss is all.\"\n\n\"It was great. But I thought you didn't want to kiss.\" he stated, remembering her rules from before. \n\n\"You didn't like it?\"\n\n\"Nooo. No. I loved it, but you said no kissing,\" he said, confused as she sounded off.\n\n\"I know. I just felt like doing it. Did you like it? You know, fucking me.\"\n\n\"Ohhh yes. I loved it.\"\n\nShe then smiled before quickly getting up from the bed. Greg wondered about the kissing and felt like asking her as he thought she shouldn't be upset about it since she initiated it. \"You still want to kiss?\"\n\n\"Maybe after I shower. I came again when you fucked me,\" she said almost hesitating when she responded too.\n\nAs she walked away, he saw her ass as he reminded himself that she had all the curves of a girl too. The draining euphoria of fucking and getting buttfucked was there as he felt he could fall asleep right then and there too. The hesitation in her voice still wouldn't leave him though as it was an unfinished kiss and a quest to see why she broke her own rule.\n\nAs the sound of water was heard, he could feel she wanted to be kissed but didn't for her own reason. Not letting this go away, he got up and went to the shower. He needed to clean anyway and figured he could kill two birds with one stone. \n\n\"Do you mind if I join you?\" he asked stepping into the small bathroom.\n\n\"Kinda tight.\"\n\nHe knew it was her way of saying no but he still felt she wanted to kiss him. There was no way the kiss meant nothing as he felt it meant something to him. Ignoring her, he pulled back the curtain and stepped in. The warm water hit him as he eyes opened wide in shock that he just stepped in.\n\n\"What...\" she blurted out but was stopped when he moved quickly kissing her.\n\nAs he pushed his tongue in her mouth, she opened allowing him access. His hands went to her sides and then to her lower back holding her close. She moaned once again in his mouth as her hands roamed his sides and then his chest. He continued kissing her feeling the water spray against them.\n\nGreg knew his plan worked when her hand began exploring his softened member as she seemed to be playing with it. She wasn't stroking it as much as she was caressing it. He then did the same as he began caressing hers. \n\nHer pubic area was devoid of hair as was her sack which he liked how the elastic skin felt without hair. They kissed and still did not break it off, but her muffled moans continued. He finally moaned himself, feeling this embrace was more passionate than anything else they did.\n\nAs she now stroked him softly, he wanted to get erect again. Although his wants never came, it was still nice to feel her hand play with his soft member like it was her toy to play with. With his hand cupping and then playing with her sack, he thought about what they contained and what was in his ass.\n\nJessie finally pulled away as the cramped conditions in the shower made it impossible to do anything. \"I really liked that. I do need to clean up though.\"\n\n\"Can I watch?\" he asked still trying to understand why he was attracted to her and was unable to look away.\n\n\"Normally yes, but I don't want you to see me clean myself. Let's just say you really came hard, and my butt isn't going to hold it in for much longer. Please don't be weirded out...I just don't want you to get grossed out.\"\n\n\"Okay,\" Greg smiled as she did the same.\n\nAs much as he wanted to kiss her when she got out, he knew he should clean up too. His whole body was getting sticky from the lubrication. He just showered after her, cleaning himself up and also feeling the attraction he had for her. He knew it was feelings as the nervous energy for being with her filled him.\n\nWhen he got out, she was in bed with the covers pulled back for him to get in. \"I was hoping you would sleep with me.\"\n\nIt almost sounded like she was going to offer the couch but stopped herself. Not wanting to ruin it or needing another chance at being with her, he found himself in her bed. She then draped her arm across his chest as her other hand found his limp member. \n\n\"You really fucked me good. I came from you fucking me. I don't normally do that either...unless it's really good.\" \n\nHe kissed her lips quickly and replied with a big smile knowing that he did it right with her. \"Is it strange that I liked you fucking me? I never thought about anal sex...I mean me being the one to get fucked in the butt. But I liked it...a lot.\"\n\n\"Mmmm, good. I liked fucking your ass. You have a cute ass too. You still think of it as gay?\"\n\n\"With you no,\" he answered feeling it was the truth as he now categorized it as sex with a person he had feelings for. \n\n\"Would you date a trans girl then?\"\n\nIt was obvious to him that she was feeling him out. He also knew that his feelings for her was coming on faster than he had with his ex too. There was no doubt in his mind that there was something between them either.\n\n\"I guess, I would. My ex and I would fight about everything and she was hot. Guess a relationship where I liked being around the person would be better.\"\n\n\"Ohh, so I am not hot?\" Jessie hissed back.\n\nGreg turned at her smiling and then holding and caressing her shoulders. \"You are. Trust me, you are very hot. I was just saying that there is more to it. I mean, you have to like the person too. I like you.\"\n\n\"Better think I am hot,\" she smiled back.\n\n\"Trust me, I do,\" he replied smiling and then caressing her breasts loving how they felt natural but knowing they weren't.\n\n\"Are they real?\" he asked as his hand cupped her right breast feeling like it was real.\n\n\"I tried to grow them naturally, but they just didn't look right. I got implants, but small ones to make it look natural. You think they look good?\"\n\n\"Mmmm, yes,\" he answered, feeling them and then letting his hand roam down her flat stomach. Before he knew it, his hand had grazed the tip of her limp penis.\n\n\"You like that too?\" Jessie softly answered as he felt her tip move across the side of his hand.\n\nExperimenting more, he moved downward and began caressing it. \"Never got turned on by a dick before...now I can't stop touching it.\"\n\nHer dick was more flexible and smoother unlike his. It seemed her skin was so much softer, almost thinner too. Her sack was almost like a massage ball one would squeeze with it being both flexible and perfectly shaped for cupping in your hand.\n\n\"Feels nice with you touching it. You still thinking it was wrong doing what we did?\" \n\nIt was like she was bringing it up again as she asked. His hand was feeling her smooth hairless dick and pubic region as he looked at her wondering why she brought it up again. \"I really did like it. I wouldn't have done it a second time if I didn't like it. You know you asked me the same question.\"\n\nHer face contorted as if she got caught. \"I know. I know. I just never fucked a straight guy before. I had sex with a gay guy once, but it's mostly bi guys or guys who have tendencies to bi. You are the first straight guy...although you seemed to like me making the video. Do you mind me asking if you are bi?\"\n\n\"It's alright. I never got turned on by a guy or a cock before. I don't know...it was just you, I guess. I don't know how to explain it...I just like doing things with you.\"\n\n\"You keep touching my dick makes me think you really like cock,\" she giggled out as Greg thought about it but just knew it felt nice since it was hers.\n\n\"I like yours,\" he answered back finally stroking it, trying to make it hard. Her soft skinned shaft almost felt like silk in his hands.",
        "\"Mmmm. I don't know about fucking tomorrow, but I will suck you off if you want.\"\n\n\"You want me to do the same?\" Greg replied, thinking that sucking her dick could not be that bad although he didn't know if he should swallow, but then knew he might regret it later on if he didn't.\n\n\"I would like that, but you don't have to if you don't want to.\"\n\nGreg gave her a soft kiss and eased her worries. \"I want to.\"\n\nHe listened to her dreams of opening a tattoo parlor and what designs she wanted to make. Listening was the easy part, but he knew on his mind was going further with her. It wasn't the sexual exploration but the connection he felt listening to her as he cupped her sack and played with her soft member. \n\nHe let her go on and on not wanting to stop her as she went from her tattoos to movies and books she liked. Not adding the trivial parts of his life, he just flopped her soft member from side to side caressing it and feeling the soft skin of it while she talked. He wanted the night to last but over time he lost the fight to sleep still holding her limp member in his hand."
    ],
    "authorname": "Deeplust",
    "tags": [
        "transgender",
        "anal creampie",
        "panties",
        "shemale",
        "anal",
        "anal sex"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/adventures-of-hiking-ch-02"
}