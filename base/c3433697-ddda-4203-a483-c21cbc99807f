{
    "title": "A New Way of Seeing Things Ch. 27",
    "pages": [
        "Gwen went over her mental checklists Saturday morning while cleaning and re-cleaning the house. She knew she couldn't leave it anything less than spotless for her daughter and son-in-law, but occasionally found herself distracted by doubts about what she had packed prior to Tim returning home the evening before. \n\nThe dress she intended to wear to dinner that evening was hung by her small suitcase and ready to go while the items to wear under it were tucked safely out of sight in the bag. Still, she checked several times to make sure she had included everything she felt she needed for their evening at the Inn. \n\nTim's gifts were in there, too; more than once Gwen considered leaving the album at home to be given later, when the time was right, and even went so far as to take it out of the bag once. Only the thought of having to explain her delay to Natalie made her return it to its hiding spot underneath her packed clothes. \n\nBringing the objects under the magazine in her nightstand had been briefly considered as well. It was dismissed, though; using them might be too brazen given the romantic circumstances this trip was intended for, and besides, what if someone went through their bags while they were at dinner and found them? The idea of returning them to the closet crossed her mind as well, but Alison already knew about their existence, and Jason too, she thought ruefully; they were probably better hidden where they were.\n\nThe time she had spent with Natalie the day before weighed heavily on her mind as well. She had mentioned to Tim that they had ridden together, hoping he would ask for more information, but had apparently been too occupied with several phone messages to ask whether they had done more than ride. She had not told him of their activities after, and it bothered her that she had not been more forthcoming about their activities, despite the fact he had not been upset with her past dalliances. She would offer to tell him more, as much as he wanted to hear, Gwen decided. After this trip was over, though\u2014she had enough to worry about as it was. \n\nTim and Gwen were on the road that afternoon well before their housesitters arrived. They took their time, stopping several times along the way to browse local shops one or the other found interesting. \n\nIt was a little past 4 when they made the turn onto the long driveway of the Inn At Little Falls. \"More cars,\" Gwen murmured, remembering how empty the parking area had been the last time she was here. More cars meant more people, more people meant more risk of others finding out why they were here, and why she had been her before...\n\n\"More cars than what?\" Tim asked, a smile on his face.\n\n\"Oh, uh more cars than I expected would be here,\" Gwen quickly lied. He would find out soon enough this was not her first visit; no need to start the explanations and apologies now. Steven and Norman awaited them at the top of the stairs that opened on to the wide porch. Gwen was mildly relieved to see they played their part perfectly, greeting her as if this was her first time in their establishment. It was only when Steven was leading Tim forward on a tour of the premises that Norman fell back, slowing Gwen as her husband turned a corner up ahead. \"Natalie told us why you're here. Don't you worry about a thing!\" She smiled, but a wave of panic rushed over her. They knew?\n\nHer memories were vivid as they were shown to their room. The afternoon sun lit the space rather than the morning light she had remembered from that day, but everything else was the same. Tim whistled appreciatively. \"Nice place,\" he told the innkeepers. \"This is perfect!\" \n\n\"We like it,\" Steven, replied casually. \"We're glad you do, too. I understand you have reservations down at Levi's?\"\n\nTim nodded. \"Our children set that up for us as an anniversary gift. Good food, I hope?\"\n\n\"The best this side of Atlanta! In the meantime, please feel free to wander the grounds, have a glass of wine or a beer...the porch is wonderful for sitting this time of afternoon. If you need anything at all, just let us know.\" \n\nGwen thanked them, and the door closed with a quiet thunk as they took their leave. The room produced adrenaline and fear, like the recollection of a memorable unbroken horse or a roller coaster...\n\nTim looked at her. \"We've got a little while before dinner,\" he motioned to the French Doors. \"Want to sit out in the garden?\" A quick test of the bed would be fun, he thought, but she seemed too distracted for that just now.\n\n\"Maybe later. I think the porch might be nice, though.\"\n\n\"Porch it is.\" \n\nThey were not the only couple out there, and Gwen was grateful for the distraction of other people, quietly sipping her wine before excusing herself as Tim talked fishing with another middle-aged gentleman. As good a time as any to get ready, she decided. \n\nClosing the door behind her, she took her bag and retreated to the bathroom to sort out the items she had worn that morning not so long ago. I won't show him this until he's seen the album, she resolved. If he doesn't like the pictures, he won't like this. The corset and stockings were fitted as quickly as possible, the possibility of being interrupted and prematurely exposed hurrying her efforts. The Slut suggested it might be a good night to go pantiless, but the Lady loudly squashed the idea, reminding her that the underwear was so wispy and brief as to be practically non-existent anyways, and that she was going to dinner with her husband in a nice restaurant, for goodness sake! At least pretend to be raised properly! The dress itself was the black one she had worn to the Chamber of Commerce dinner, more racy than she was used to, but presentable for a dimly lit restaurant. She reluctantly had to admit it managed to not hint too broadly at what lay underneath. Somewhat satisfied, she exited the bathroom as Tim returned from the porch. \n\n\"Hey, I was wondering where you\u2014\" He stopped as he took in her transformation. \"Wow.\" \n\n\"What, is something wrong?\"\n\n\"No, no, something is very right, but uhh, wow, different. You look incredible.\" \n\nShe could tell his words were genuine. \"Well, thank you. I figured this dress would be alright since we're out of town anyways.\" \n\n\"Of course it is.\" The dress is great, Tim thought, but there's something more, something he couldn't put his finger on...he looked to her feet. \"Have you ever worn shoes with that much heel? I like 'em. A lot.\" \n\nOnce before, the Slut slyly replied, but Gwen did not put voice to the answer, instead looking at the floor. \n\nHe took her in his arms. \"Wanna skip dinner and get to dessert?\" \n\n\"Plenty of time for dinner and dessert,\" she said with that soft firmness he had first seen all those years ago. \"Get dressed.\" \n\nTim almost seemed to pout. \"Yes, ma'am.\" \n\nGwen made her way out to the garden on slightly unsteady legs and sat while he changed, confident in the privacy the lush greenery afforded, smiling when her husband came out in a shirt and tie. The only time she ever got to see him like this were weddings, funerals, and planning board meetings, she mused, but darn, he cleans up nicely. She could not deny the pride she felt in the anticipation of being seen with this handsome man. \"Shall we go?\" \n\nTheir hopes of a romantic setting and good food were not disappointed. They exchanged their customary gifts before ordering, a fishing supply gift certificate for Tim, a tack shop spree for Gwen. They stayed for some time, just enjoying each other's company, before deciding it was time for bed. \n\nThe drive back to the Inn was made in silence, Gwen fretting over what was about to take place, Tim, just smiling in anticipation of what he hoped was to follow. A bottle of champagne and two glasses were in their room when they returned, compliments of the innkeepers. She was not really much into champagne, but anything would help. Gwen poured a glass for herself, then her husband. \n\n\"Tim, I, uh, have another gift I'd like to give you.\"\n\n\"Hopefully it's under that dress, because I love unwrapping presents.\" \n\n\"Not that, at least not yet. Something else.\" \n\nHis smile never wavered. \"Honey, you didn't need to get me anything else...\" \n\nShe smiled weakly and moved to her suitcase. Her back to him, he looked on curiously as she fiddled for a moment then turned, a gift wrapped box in her hands. \"I know I can't ask you not to be upset with me, but Natalie said you would like this...\" Gwen handed it to him, picked up her glass, sat down on the edge of a chair and nervously sipped. \n\nTim was baffled by her statement. Her normal air of calm and control was gone, replaced by a sense she was about to bolt for the door. He sat on the edge of the bed and carefully unwrapped the package, a red leather-bound album coming out of the paper. Tim looked at her questioningly, but she looked down to her glass and took another sip.\n\n\"Family photos? We haven't sat for one of those since the kids were in high school.\"\n\n\"No, not quite,\" she murmured, but offered no more. \n\nHe again smiled, arched his eyebrows, and turned the cover as Gwen held her breath. The smile disappeared and his eyes widened as her husband turned the first page. Tim flipped forward two pages, then back, and looked up. The shaking woman would have giggled at the expression on her husband's face had she not been on the edge of panic. \n\n\"How, wha...?\"\n\nThe Lady and her worst fears took over. Gwen hurried to where he sat and grabbed for the album. \"I am so sorry,\" she blurted, \"I thought you might\u2014\"\n\nTim quickly pulled the leather-bound book out of her grasp. \"Oh hell no! You're not gonna tease me and then take it away!\" Gwen finally dared hope the look in her husband's eyes was not anger or disgust, but excitement. \"Are they all like this?\" She nodded, still looking for further confirmation he was not somehow displeased. \n\nTim again opened the album to the first photo while Gwen returned to her seat and nervously sipped champagne. He only made it to his original stopping point before looking up again. \"These are all of you?\"\n\nGwen managed a smile. \"I know it doesn't look much like me, but it is me, and I had someone\u2014a professional photographer who specializes in that...kind...of picture take them. You're not mad, right?\" \n\n\"Mad? Gwen, I've only looked at 3 pictures and this is one of the best gifts you've ever given me! I would never have believed you had it in you!\" His voice dropped a bit. \"The rest of pictures are like this, right?\"\n\n\"Worse.\" \n\nTim's eyes were already back on the album in his lap. He turned several more pages, each one intently studied for quite some time, until he looked up and over at the dressing table, then back down at the page, then back at the dressing table. \"You took them here? In this room?\"\n\nGwen took a gulp of champagne, almost choking on the bubbly liquid. \"Yes.\" \n\nConfusion again crossed her husband's face. \"But when? I thought you've never been here before?\"\n\n\"I'm so sorry Tim, I lied, but I couldn't think of any other way to keep this a secret. We took the pictures when I told you Natalie and I came to Atlanta to go shopping.\" \n\nTim smiled, but was unable to resist the urge to resume viewing the photos. \"I see. I should have known\u2014you hate shopping. At least, you used to...so Natalie was in on this?\"\n\n\"It was her idea\u2014she did the same type of thing for Adam!\" Gwen stopped abruptly, afraid she had given away one of her sister-in-law's secrets.\n\n\"Well, that's a bit of a surprise, but not as much as this.\" It was several more pages before he spoke again. \"You showed so much skin\u2014you're practically naked! I can't believe you did this!\"\n\nGwen's fears again rose to the surface. \"Please don't be mad, I really thought you would like it!\"\n\nTim moved to where she sat and kissed her. \"Honey, I'm not mad, I'm incredibly flattered that you would do such a thing for me. I can only guess how hard it was for you to let your guard down like this.\" He sat back on the bed and resumed viewing his gift. \"Guy or girl?\"\n\n\"What?\"\n\n\"Was the photographer a man or a woman?\"\n\n\"Oh\u2014uhh, a man, but his wife was in the room the whole time, and Natalie was here with me, too!\" \n\n\"That must have been even harder for you, to get naked in front of a strange man like that.\"\n\n\"I was so worried you were going to get mad for letting him see me like that. You're not mad, right?\"\n\nTim laughed, but did not look up. \"Trust me, I'm about as far from mad as I can get right now. I'm just impressed he was able to keep his attention on his camera long enough to take these. This is like seeing you naked for the first time again!\"\n\nIt took him some time, but from her vantage point, Gwen could see when he reached the blank page dividing the bedroom photos from the bathroom set. He smiled and flipped the page. \n\nTim laughed. \"That old shirt looks a hell of a lot better on you than it ever did on me! And where was this taken?\"\n\n\"The Innkeepers' private quarters. They let Barry use it for the shoot.\" \n\nHe continued to intently study the photos. \"I've seen Walt in that position dozens of times,\" Tim said without looking up, referring to the picture of Gwen lying on her back under the sink, \"but never once did I consider it sexy. Is it bad or good if I see this the next time he's headfirst under a vanity tightening the feed lines?\"\n\nIt took him some time before he slowly flipped the last page over and looked up at Gwen. \"Wow. This has been a night full of surprises.\" Tim delicately laid the album on the nightstand, stood and moved to where his wife was still sitting and clutching her empty glass. Gwen looked up nervously at the man towering over her. What now? She quickly glanced at his midsection, now at eye level. Her husband's dress slacks were unable to adequately mask the rigid length straining against the fabric. Maybe she had read his reaction to the album correctly? \n\nTim took the glass from her and set it on a nearby table, then gently took her hands and pulled Gwen to her feet. He kissed her, not roughly, but with the intent of a man who knew what he wanted. Callused fingers grasped the catch of the dress's zipper and pulled, the purr quick and muffled. Hands reached for her shoulders as he stepped back. \n\nThe dress was pushed off of Gwen, momentarily catching on her hips before Tim finished the job. \"And yet another surprise,\" he murmured as corset and stockings were revealed. \"I thought you felt a little different under that dress. The same outfit as that one, right?\" He asked, gesturing to the album on the nightstand. Gwen nodded and looked down at the floor, slightly embarrassed for some reason. \n\n\"Well I hope you brought my shirt too, because you're gonna model that after,\" he continued. \"But right now\u2014\" Tim firmly placed his hands on Gwen's hips and steered her to the side of the bed before lifting and tossing her back, \"I've got something I really need to take care of.\" He quickly began discarding clothes, his eyes never leaving the corset-clad body on the bed. \"Take your panties off, but leave the rest,\" he commanded. \"Spread your legs.\" Gwen had the underwear off by the time her husband was rid of his pants, Tim's boxer shorts tented by the staff between his legs. \"Touch yourself. Are you wet?\"\n\nShe already knew the answer, but followed his direction anyway. A finger was inserted at her opening and dragged up and over a clitoris anxious to be touched. Gwen nodded. \"Mm-hmm.\"\n\n\"Good. Keep playing with yourself.\" Tim watched for a moment to make sure she was doing as she was told, and then began pulling off socks and underwear, his cock snapping lewdly against his stomach as he pulled the shorts over it. \n\nGwen was embarrassed to be masturbating in front of her husband, of so openly showing him what was his to take. Her clit had no such reservations and begged to be touch and stroked. \n\nTim stroked his now-free cock several times as he watched the show in front of him before climbing between Gwen's legs. She thought he might use his fingers or kiss her down there, but he was in no mood for preliminaries. His hands came down beside her shoulders and he crouched briefly before flexing his hips and stabbing forward. His lips met hers as his cockhead pushed against her other lips. There was no subtlety to his movements, and with a single thrust he buried his length deep inside her, balls slapping against the skin of her cheeks. \"I guess you were wet,\" he murmured and began to stroke. \n\nTim did not take her gently, rising up on outstretched arms as he pounded while her breasts wobbled under the repeated impacts. Gwen knew he could not last long at this pace, and soon after he proved her right, using his feet to lever himself more deeply into Gwen's welcoming body as his seed filled her.\n\nSpent, he rolled to his side and exhaled sharply. \"Sorry, that was really selfish of me,\" he grumbled. \"Let me take care of you now.\" A hand was already sliding down towards her sex, towards where the remains of his orgasm were already beginning to leak out of her...\n\n\"Let's take care of each other,\" Gwen announced as she closed her legs and rolled over to kiss her husband. \"Do you think you can do it again?\"\n\nTim smiled. \"I may have a hard time walking out to the truck tomorrow, but I'm pretty sure I can go all night.\" \n\n\"Then let me use the ladies' room and we can do exactly that.\" Gwen rose, careful not to allow her leaking sex to make contact with the duvet cover. \"Would it be alright if I took this off?\" she asked over her shoulder as she moved to the bathroom. \"It's pretty, but a little constrictive.\" \n\n\"Only if you come out wearing less than what you went in with.\" \n\nGwen cleaned up as best she could, certain there some of her husband's orgasm remained in her even after she finished. \"Well, that's definitely less,\" Tim agreed as he looked up from the album he had again opened and to his now completely nude wife. \"Still a great look for you, though.\" \n\nShe smiled and climbed under the covers next to where he still lay on top of the bed. \"So, you really did like your gift?\"\n\n\"Oh yeah, there's a couple of things I got my eye on for the boat\u2014\"\n\n\"Not the gift certificate, the album!\" she pointed out, completely missing his jest.\n\n\"I know,\" he smiled. \"but I do like the gift certificate. The album is on a whole 'nother level of like, maybe about 20 levels up.\" Tim kissed her. \"I can't get over how much you must love me to do something that out of character. I would have never have guessed in a million years you would do that.\" \n\n\"I do love you more than anything,\" Gwen agreed, \"and Natalie kept telling me how much you would like the pictures, but I have to tell you\u2014after I got over being scared, I liked doing it. It was fun to try and be sexy in a way that you'd like and would look good in an album.\"\n\n\"You succeeded beyond anything I could have ever imagined.\" And I've imagined a lot, he thought. \n\nNothing more was said for quite some time as they made love, relaxed and passionate, Tim bringing her to orgasm with his tongue and fingers before mounting her for a slow and gentle coupling. Despite his declaration to go all night, they fell asleep in each other's arms shortly after he spent himself inside her again. \n\nTim's stirring awoke her the next morning, early morning sunlight streaming in the windows. \n\n\"Want to go get some coffee and sit in the garden?\" Gwen asked, smiling at her husband. \n\n\"We can do that,\" he agreed, but do me a favor and put on the shirt you wore in the pictures so you can model it for me when I get back with the coffee. \n\n\"I can do that,\" she agreed, and went to her bag after Tim had put on a t-shirt and pair of shorts and padded down to the breakfast area. Gwen thought about leaving the shades on the bay window and French doors shut, but the urge to be just a little bit naughty prevailed as she tied back curtains and opened windows and doors, the grass yard and trees behind their room offering enough seclusion this time of morning. As promised, she was dressed in nothing but the faded Nelson Plumbing shirt when Tim returned with their coffee. ",
        "\"Even better live than in the photos. Shame I didn't know how good you looked in that before last night. That might be the most I'll let you wear at home from now on.\" \n\n\"Stop it,\" Gwen replied, taking the steaming mug from his hand and kissing him. \"It's just a shirt.\" \n\n\"It's sexy as all hell. Hey, I know that you wore the other things in here, but would you mind posing for me in the shirt\u2014like you did over by the window?\"\n\n\"The Inn was empty when I posed there last time,\" she laughed. \"It's full now. Somebody might see me.\" She didn't really think so, but the Lady insisted on voicing caution.\n\n\"At this time of morning? Besides, it just lawn and woods out there. No reason for anyone to be there. Please?\" \n\nGwen rolled her eyes and put down her coffee. She cautiously approached the window, looking for signs of life beyond, before assuming the first pose Barry had put her in that day. She felt incredibly self-conscious to be doing this in front of Tim, but the familiar tingle of arousal spread through her as well. She liked being the center of attention, the object of desire. Gwen warmed to the task, and continued to move about as her husband approached. \n\n\"Put your hands on the edge of the windowsill and bend over,\" he growled. Gwen looked over her shoulder at him as she did as he instructed, head and shoulders into the bay window while the unbuttoned shirt fell open, her breasts dangling below her. Gwen could feel the hem ride up above her butt. She again looked back in time to see Tim sink to his knees and press his face up against the crack of her cheeks. The feel of his tongue probing her lips shocked her but the sheer perversity of the act only inflamed her further. Gwen thrust her hips back and walked her legs out more, giving him full access to her sex while his finger snaked around her leg and found her clit. A whimper of delight escaped her; to Tim it was the sound of a cheering crowd. \n\nShe was beginning the climb to orgasm when he stood, his tongue replaced by a very ready cock. His entry was not so direct as their first time the night before, and he slid it back and forth between her cleft before finally resting the spongy head at her opening. His hands tightened their grip on her waist. \"Tim, somebody might see us,\" she protested, but her heart was not in it. Let them see. For all she cared, they could be jealous for what she was getting and they were not. \n\nAs if on cue, Norman appeared around the corner of the garden to her right, his path taking him right by the window they occupied. The Lady screamed to duck, hide, do something, but Gwen took no notice. Everything just felt too right. Let him look! \n\nThe innkeeper turned his head, smiled, and waved as he passed, seemingly not shocked at all by the couple obviously joined together in the window barely ten feet away. Gwen nodded her head in reply, her mouth open in surprise and the orgasm that was even now breaking upon her. \n\nHer legs turned to jelly and only Tim's hands and penis kept her upright. She had only barely regained her ability to control her lower body when she felt him pull out.\n\n\"Turn around and kneel down.\"\n\nGwen did, thankful to be able to allow her legs to fully recover their strength. Her head was firmly taken between two masculine hands, and a glistening penis bobbed before her, the tip an angry red. Gwen knew what was expected, and she welcomed it. Her mouth opened wide and she bobbed forward to capture the cock being presented to her. The taste of her husband and herself created a perverse, intoxicating nectar. \n\nShe let Tim use her mouth, to fuck it, and she knew how they both wanted it to end. Masculine fingers reflexively tightened about the back of her head and the first jet struck the back of her throat. Gwen instinctively recoiled but quieted to receive each spurt, her tongue tickling the end of the invader to encourage more. She swallowed only after her husband's body gave a final shudder and relaxed. \n\nThe couple shared the shower before dressing and making their way to the dining room for a more substantial breakfast. The appearance of Norman halfway through their meal made Gwen blush and avoid eye contact, but the innkeeper made no mention of what he had seen. After one more relaxed lovemaking session in their bed, windows still open, they packed and said their goodbyes with the promise to return. \n\nThe ride home was quiet. Both reflected on the summer, and how much \"things\" changed in three short months. Tim didn't regret them in the least, instead welcoming them; Gwen still harbored some doubts among the feelings of freedom and confidence. She wondered where her limits now lay; what she had thought incredibly slutty in May now seemed harmless. Was it going to be easy for her to identify when she stepped over the line? The Lady stood ready to guard against it, and the Slut stood ready to push the boundaries. She decided the woman whose shoulders they rode on would be her own master. \n\nTim smiled and turned to her. \"Hey hon, you, uhh, think I can take some pictures of you some time?\" \n\nThe End\n\n*****\n\nIf you've made it this far, thank you so much for reading! It is incredibly flattering to know that there are readers who have developed a bond with the characters I created\u2014one of my goals when I started writing this story was to put some \"humanity\" into it, not to mention believability, and from the comments and e-mails I've received, I'd like to think I've not failed miserably. \n\nDeveloping characters this way comes with a price, though. Making the people in my story something readers care about also means many readers become concerned for their wellbeing and safety or punishment and downfall. My intent has never been for Natalie to be viewed as a bad person, or to turn Gwen into someone who is lying or deceitful, and most definitely not to make Tim a cuckold. If you feel I've done that, or am well on the way to it, I apologize\u2014my efforts have been quite the opposite. \n\nIt is becoming apparent that any further exploration by Gwen runs the risk of darkening or cheapening the story for readers who have invested their time in identifying with the characters. Too much of the real world goes bad in the end; I would rather my story not suffer the same fate for those who might interpret its twists and turns that way despite my effort to the contrary. So while I still have plenty of situations I could get Gwen into, there would always be the danger of stepping over the line with those whom it would make uncomfortable. One commenter felt this might be a good place to put the story down, and after some thought, I agree. \n\nThis has been a very entertaining way for me to creatively fill time on my work commute or as I wait for that delayed flight. My wife has suggested that a \"Part II\" might be a good way to allow those who think the current story was beginning to cross the line to drop off without any further disappointment. I'm also open to the idea of a new theme to start fresh with. Please feel free to leave a comment or send me an e-mail with a story idea you might like to see me do my amateurish best with. I can't make any promises, but if it's something I feel brave enough to attempt, who knows? \n\nThank you again for reading and caring enough to comment,\n\nBusyBadger"
    ],
    "authorname": "BusyBadger",
    "tags": [
        "wife",
        "hotel",
        "husband",
        "photos",
        "lingerie"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-ch-27"
}