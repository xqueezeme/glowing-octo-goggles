{
    "title": "Boneshaker",
    "pages": [
        "Yes, yes. This one took a while. I apologize. Forgive me. I've been a bit side-tracked for a bit. But it's finished now, so feel free to dance.\n\nI have had a few people get confused on the series since I forgot to number the chapters, so I'll do that now. So far, we have: \n\nDealmaker (1), Helldancer (2), Firekeeper (3), Soulseeker (4), Secretkeeper (5), Havencaller (6), Shadowrunner (6), Demonbreaker (8) and Boneshaker (9). The title of the last chapter of the series (yes, we're almost there) will be listed at the bottom of this chapter.\n\n<center>***</center>\n\nThe mist raged to itself, letting out horrified shrieks of pure hatred the echoed across the still air of the marsh. Thick strands of liquid silver lashed around wildly, severing the frail limbs of the dead trees that survived precariously in the swamp. Stones cracked under their rueful lashes, the sturdy bricks of the wall even crumbling under their ferocity.\n\nHow dare they take her away! It was so close, so close! She was under its spell, lost in its intoxicating persuasion. She was crushing that ornery old bitch back into to her place, letting the others understand the true sense of its power. Damn the spider for pulling her away. Damn her lovers for breaking her back. She belonged to the mist. It owned her. How dare they! \n\nCarefully, slowly, the mist managed to pull its fury inward. The strands of silver retreated back into their host, leaving rows of lifeless trees and split stones in their wake. The onyx-stained clouds swirled around each other, flashes of crimson and gold visible as they moved.\n\n\"How dare they?\" the soft whispered voice hissed. \"So close. All mine.\"\n\nThe memory of her brought forth a fresh batch of screams. So delicate, her pale limbs glowing sliver in its soft light. Her eyes hollow, waiting for orders. Her dark hair whipping in the breeze. The alluring scent of her skin swirling around in its grasp. So delectable...\n\nSlowly, the mist calmed itself, pulling back its thunderous raging to a seething silence. Damn them all. And damn her as well. She had given them a fight, yes, but she had fallen to their trap nonetheless. It would be a challenge to lure her back now. She would need more than a simple ambush or a seductive whisper to bring her back.\n\n\"So be it,\" the mist hummed to itself. \"If it will take more, then I shall give her more.\"\n\nSlowly, the clouds of black and silver began to twist around itself, its form tightening and shifting into a tight circle. The swirls of fog started to spin, slowly at first, then gaining speed after each rotation, becoming a blur of onyx, silver and crimson. Flashes of light flickered inside the cloud, illuminating the shadows within. It whirled faster, becoming smaller and darker with every turn.\n\nSlowly, the whirring cloud began to ease it spinning. Threads of mist broke away, dissolving into the air. The orb sank down into the soft peat of the marsh, gradually dissipating into the cold night air. Bit by bit, it evaporated, leaving behind only the tiniest traces of its existence on the wind. The marsh went still, only the sound of the howling icy winds and screams of damned souls piercing the silence.\n\nFingers twitched slightly. Silver eyes opened. Muscles under pale flesh shuddered to life. A steady heartbeat started and strong lungs began to draw in air.\n\nLetting out a soft growl, the young man pushed himself to his feet, brushing off any wayward chunks of moss from his ashen skin. Long strands of white hair whipped behind him in the wind. A dark smile played on his lips, slowly growing with every beat of his heart. He rolled his neck and shoulders, cracking the bones into place and stretching the tight muscles of his back.\n\nHe groaned. \"Much better.\"\n\nHis attention turned to the main wall, the great barrier that had held him off from the endless mass of souls for years. He strode toward it, stopping just short of the cold stones. He reached out, placing a hand on its smooth surface. A broad smile broke onto his face. No burning, no shocking, no invisible barrier that prevented him from going further. The smile widened an inch. His plan had worked.\n\nDigging long fingers into the rock, he scaled the enormous wall, moving quickly to avoid any delays or mistimed interruptions. Hauling himself over the edge of the wall, he peered down the main hallway, searching for any sign of possible resistance. It was deserted for now, the guards having made their rounds hours ago. Perfect.\n\n\"Now then,\" he whispered. \"Where are you?\"\n\nClosing his eyes, he tilted his head back and inhaled deeply, searching for her scent on the air. He found nothing, causing him to scowl. He sniffed again, deeper this time, still searching for her delicious scent.\n\nFinding nothing, the young man turned and strode down the cavernous hallway, taking deep breaths as he went. He'd find her eventually. His new form was convincing enough: tall, handsome and powerful despite his lean appearance. A little coaxing, a few seductive games and she'd be his again. All he needed was patience and a little-\n\nThere! Her scent stunned him awake from his musings. His smile returned, more wicked and menacing then before. \n\n\"Found you.\"\n\nHe turned, making his way down the hall, following her aroma with every step. Oh yes, he'd have her soon enough. And this time, she wouldn't get away.\n\n<center>***</center>\n\nSticky tendrils of webbing wrapped around her wrists, jerking her hands forward and dragging her across the marsh. Another bolt of webbing circled her ankles. She screamed in rage, roaring out when another sharp tug hauled her forward. More sticky strands looped around her head, covering her mouth and silencing her cries.\n\nThe cold stone of the walls smacked against her back, making her gasp in surprised rage. Anger rushed through her veins, fighting to break out of her bonds. Whoever or whatever had captured her would face her wrath soon enough. Pulling her away from her target was beyond foolish. Now they wanted to take her away from her master? Idiots. \n\nA booming alien voice rumbled in her ears, calling to children she couldn't see or feel.\n\nThe tickle of tiny legs across her skin startled her. Tiny limbs raced across her arms and body, spreading their own silky webbing over her, containing her further. Tiny bodies of spiders did their magic, restraining her limbs in sticky threads until she was rendered immobile. A few crawled to her face, spinning thin thread over her cheeks and neck, trying to block the tendrils of mist from reaching her.\n\nA few of the infant arachnids pawed gently at her face, attempting to calm her with tender touches. She gave a muffled screech and tried to shake them off. They stayed put, holding on tightly and kept up their gentle stroking while their siblings continued to bind her. \n\nA single spider dared to crawl closer, its tiny furry body inching farther up her face. Eight microscopic eyes stared at into her own while one thin leg gently pawed at her nose. So tender, so sweet to her despite her ferocious struggle. It continued to stroke her face, emitting soft squeals as if caressed her.\n\nOne thin tendril of mist lashed out, striking the tiny spider across its abdomen. It rolled backwards and collapsed and rolled onto her shoulder, a deep gash splitting its small body open. Green liquid oozed out of the wound as its tiny legs twitched in agony. She stared at the small arachnid as it died on her skin, watching the very life drain out of its small black eyes...\n\nClaire bolted up in bed, her breathing harsh and ragged. A thin sheen of sweat coated her skin, her heart raced under her ribs. She whipped her head around, searching for any sign of liquid silver. Finding nothing, she swallowed raggedly and sat back against the wall, pressing a hand to her chest to calm her heart. She settled back, relaxing against the cool stone of the wall.\n\nPulling her legs to her chest, she looped her arms around her knees and hung her head. Her mouth quivered slightly, tears began to stream down her face. The dream \u2013 a memory, really \u2013 of the small spider that had died for her made her heart break.\n\nPoor thing. This was all my fault.\n\nDespair crushed down on her. She felt uncontainable guilt for that tiny creature, knowing it was only trying to help her. Its brothers and sisters had helped, too, and more of them had lost their lives for her than she had thought. Would they ever forgive her or having to make such a sacrifice? Her heart sank. Surely Kerion hated her for causing him to lose his children. None of them would care for her. Why should they? This was her fault in the first place. \n\nOut of the corner of her eye, she noticed a small ball of fuzz crawling out from under the bed. Tiny, with eight long slender legs and a furry black body covered in multicolored swirls, it scratched at the ground searching for food.\n\nOh.\n\nShe wiped her eyes and leaned over, reaching a hand down to the floor. Gently, she scooped up the tiny spider, watching as it turned and reared up in shocked anger. It paused, lowering its body back down onto her palm. She smiled softly and pulled her hand back up, balancing the tiny creature as it soared off the ground.\n\nShe raised her hand to her eyes, watching as the infant spider pawed around on her hand for a moment, trying to find its balance. She giggled and reached out her other hand, tenderly petting its silky fur. It squealed happily and reached out to stroke her finger, begging for more attention. A broad smile cracked her sullen features, a small glimmer of happiness starting to spark in her soul.\n\nShe pulled her finger away, bringing her hand and the spider close to her face. She nuzzled her cheek against its soft body, smiling when tiny legs reached out to stroke her skin.\n\n\"I'm so sorry,\" she whispered. \"This was all my fault. You lost your siblings because of me.\"\n\nThe spider squealed again, its slender legs rubbing faster against her cheek. A small attempt to calm her nerves and ease her guilt. She giggled and turned her head, planting a kiss on its tiny back.\n\n\"You're so sweet,\" she giggled. \"Thank you.\"\n\nThe spider squeaked happily again.\n\n\"Could you do me a favor?\" she whispered.\n\nIt backed away an inch, holding completely still as it watched her expectantly.\n\n\"Could you please tell your father I'm grateful for everything your family has done? I owe you all so much.\" Tears stung her eyes, though she blinked them away before they could escape.\n\nThe tiny spider nuzzled her palm, squeaking again and pawing at her fingers.\n\n\"Thank you.\" She giggled again. \"Come on. You must be hungry.\"\n\nFlipping the sheets back, Claire swung her legs over the edge of the bed and stepped down onto the cool floor. She stepped carefully to the table, making sure there were no surprises waiting below her feet. She pulled a chair away and sat down, gently laying out her hand on the table so the spider could climb off. It stepped lightly onto the table, turning to watch as she dug through the piles of food.\n\n\"Let's see...what could you eat?\"\n\nShe scowled as she rifled through the innumerable plates and glasses. Nothing here would do. The creature was far too tiny to eat any of her beef or drink the wine. She stared at the food, unsure of her next move.\n\nOh. I know!\n\nReaching out, she pulled the bowl of cherries forward. She plucked one from the bowl and set it in front of the small spider, settling into her chair and watching closely. One slender leg reached out to paw at the fruit, testing it cautiously. It crawled closer, the tiny fangs at it mouth moving, curious. Suddenly, it squealed and launched its tiny frame upon the fruit, sinking its mouth into the fruit and devouring it eagerly.\n\nClaire giggled. \"A spider that eats fruit...imagine that.\"\n\n\"Imagine what?\"\n\nDarrow's voice caught her off guard for an instant. Strong arms looped around her shoulders and his lips pressed against her neck.\n\nShe closed her eyes and leaned her head back into his shoulder. \"Good morning,\" she purred.\n\n\"Good to have you back.\" He kissed her throat.\n\nHer smile widened at the feel of his mouth on her flesh. She sighed inwardly. This was her normal, this was her regularity. Wrapped in his arms with his mouth teasing her skin, she felt more at home than she had in years.\n\nShe opened her eyes to see the tiny spider staring at her. The cherry was nothing more than a wrinkled husk now, and Kerion's child was cleaning its mouth parts with its front legs.\n\n\"Done?\" she inquired.\n\nIt squealed at her happily. She smiled and picked up the cherry, tossing it into the pool of shadows on the wall. It soaked into the blackness instantly, disappearing from view. She turned back to the spider, noticing that it stood completely still when it had her attention. As if waiting for an order.\n\n\"You ready to go home?\"\n\nIt squealed again, and she held out her hand. It scampered onto her palm eagerly, she bent over, pulling out of Darrow's embrace and placed her hand on the cool floor. The spider climbed off easily, hesitating a moment before turning around and nuzzling her thumb. She smiled and stroked its silky fur again.\n\n\"Remember to thank your father for me,\" she whispered.\n\nThe creature squealed one last time before scampering off across the floor and into that shadows. It dissolved into the darkness, leaving her alone with Darrow. She sat back in her seat again, leaning back so she could rest into Darrow's strong arms again. He complied willingly, wrapping his hands around her waist and pulling her close.\n\n\"One of Kerion's, I presume.\" His breath scorched the delicate skin of her neck.\n\nClaire nodded.\n\n\"Did anything happen?\"\n\n\"Nothing of importance. Just some guilty tears and apologies.\"\n\n\"I see.\" His kisses became firmer. \"Then I have nothing to worry about?\"\n\nHer brows raised an inch. \"Meaning?\"\n\n\"You running off with Kerion.\" She could hear the smile in his voice.\n\nShe giggled. \"No. I love Kerion and his family, but for totally different reasons. Besides,\" she reached up and caressed his neck with her fingers, \"someone else has claimed me already.\"\n\n\"Damn straight.\" He licked her ear.\n\nShe groaned. Shaking her head, she wriggled out of his embrace and stood up from the chair, turning to smile at him. His eyes were both confused and expectant. Grinning, she held out her hands to him.\n\n\"Which reminds me. I still owe you for saving me.\"\n\nHis brows rose. \"Just me?\"\n\nClaire shrugged. \"I figured the blowjob was for Silthos and the animalistic sex was for Thaltos. The leaves you.\"\n\nA wicked grin cracked his lips. \"That it does.\"\n\nShe wiggled her fingers, beckoning him. He stepped forward, smiling down at her.\n\n\"Know a place we can be alone for a moment?\" She blinked her eyes innocently.\n\nDarrow hesitated. \"I'm not...there has to be-\"\n\nShe shook her head. \"No, not like that. Someplace with music.\"\n\nRelief etched his features. \"There's a few here. Do you have something particular in mind?\"\n\nShe gave him a sly smile. \"Perhaps.\"\n\nHe grinned knowingly, stepping close to loop his rams around her waist. \"At least let me tell the others so they don't think something's happened.\"\n\n\"Fine.\" She rose on her toes and kissed him, then spun around and strode toward the shadows that lined the wall. \"I'll be outside.\"\n\nHe stilled. \"With Tarrin?\"\n\nClaire's smile turned wicked. \"Maybe.\"\n\nHe cocked his head to the side, quizzical. \"You will be careful, correct?\"\n\nHer sinister smile never faltered. \"I can't promise anything. Take too long and I may need to find relief elsewhere.\" Thin strands of shadow reached out and encircled her limbs, gently pulling her in.\n\nHis brows creased. \"Fuck you.\"\n\n\"Only if you hurry.\" She winked and disappeared through the shadows.\n\nShe exited the pool of blackness a heartbeat later, rolling her neck and shoulders to realign her bones. She stood alone in the main hallway, deathly silent now except for the soft sound of souls screaming in the distant hellfire. She smiled softly. It was peaceful here. True, beyond the wall was something she dared not approach or tease again, but still. The quiet allowed her a small slice of calm.\n\nThe shadows behind her shuddered, signaling Darrow's approach. Giggling, she sprinted around and hid behind a stone column, pressing up against it and hiding in the shadows. Darrow stepped through, a sly smile on his face. Clearly, his mind had drifted straight into the gutter while talking with Silthos. His face dropped when he noticed her absence, his eyes narrowing in suspicion.\n\n\"Claire?\" he called out.\n\nHer muscles tensed in excitement. She bit her lip nervously, heart pounding in anticipation.\n\n\"Claire?\" He stepped forward cautiously, his dark eyes scanning the hall.\n\nShe bit her lip harder, stifling her giggle of excitement.\n\nDarrow continued forward, his steps slow and sure, his eyes moving constantly. His breathing increased slightly, his nerves on edge. She could see the thought in his eyes as he neared the column. Not again. He stepped up to the column, his eyes moving rapidly, searching for any sign of her. \n\nReleasing her tight muscles, she launched herself at him.\n\n\"Cl-\"\n\nThey tumbled the ground in a heap of twisted limbs. Claire threw her head back and laughed, clutching her stomach as tears streamed down her eyes. Darrow, lay splayed out on the cold stone floor, stunned. His eyes narrowed in playful anger, his mouth twisting into a dark smile.\n\n\"You want to play then?\" His voice was dark, deep and menacing.\n\nHer laugher stopped abruptly, anxiety slowly seeping into her veins.\n\nDarrow rolled over, wrapping his arms around her waist and pulling her close. He sat up, stretching his legs out and spinning her around. He laid her across his knees, using one arm to pin her down. His free hand stroked the pale flesh of her ass.\n\nShe squirmed against his body, her nervousness now turning to fear. \n\n\"I should spank you for doing that.\" One finger caressed her cheek, drawing intricate swirls on her tender skin.\n\nHer lip quivered. \"Sorry.\"\n\nDark laughter sent a chill up her spine. \"No, no, no. Too late for that, my dear. You've upset me, and now I have to teach you a lesson.\"\n\nShe whimpered. This wasn't like Darrow at all. She knew he had some questionable tastes, but never once had he lashed out at her or threatened punishment. Maybe the mist had gotten past the walls in the middle of the night and turned him against her. She shivered and closed her eyes, fear bubbling up from her belly.\n\n\"Now then,\" his pale swept across one pale cheek. \"Hold still, Claire. You've disappointed me, and I need to make sure you don't do it again.\"\n\nWithout warning, his palm smacked against her ass, wringing a soft whimper from her throat. Her body tensed, the sting in her flesh not leaving quietly. She whimpered again, convinced her punishment signaled the loss of her dearest friend.\n\n\"I'm not done yet. You still need to learn your lesson.\"\n\nHis hand traveled downward, long fingers playing with the entrance of her sex. Slowly, two fingers slipped inside, twisting and massaging her pussy as only Darrow knew how. His touch washed away the pain of his smack, making her body come alive under his iron grip. She shivered, a small moan escaping her throat. \n\nHe pulled his fingers away, giving her another hard smack on her bottom. She bit her lip, holding back her cry. Again he pulled away, again he sank his fingers deep inside her body, teasing her endlessly.\n\nHer body relaxed a bit, the fear starting to dissipate from her belly. She hadn't lost him after all. He was simply upset at her game \u2013 a trick, no doubt, that made him worry he'd lost her for a third time \u2013 and had found a gentle, exciting way to punish her for it. Despite her previous fears, Claire couldn't deny that she honestly liked his punishment. Spanking wasn't something she was quite used to yet, but mixing in his teasing fingers made it far more enjoyable.",
        "Another hard slap and another delicious twist of his fingers made her writhe beneath his touch. She was panting softly now, her body silently begging for more.\n\n\"Like this, do you?\" Another slap and tease made her squirm.\n\nSwallowing, Claire nodded, her fingers clawing at the cold stone floor for support.\n\n\"Will you ever do that again?\"\n\nShe shook her head. \"No.\"\n\n\"Do you promise?\" Another round drew a soft moan from her throat.\n\n\"I promise,\" she whispered.\n\n\"Good girl.\"\n\nHis fingers slid deep inside her, twisting and rubbing the warm, slick walls of her pussy. This time Darrow didn't pull away to spank her. Instead, he continued his delicious massaging, twisting his fingers and coaxing a litany of soft moans and whimpers from her throat.\n\nHe laughed again. \"You love this, don't you?\"\n\n\"Yes,\" she gasped.\n\nHis fingers stopped abruptly. He pulled out of her body and toyed with her entrance. She moaned, begging him for more, her body burning for his touch.\n\n\"I don't know, Claire. You upset me with the damn trick of yours.\" His drummed the fingers of his free hand on the small of her back. \"I'm debating even letting you come. I'm not sure if you deserve it.\"\n\nShe groaned, exhausted, and tried to arch her hips against his hand to force him in. He laughed and pulled his hand back. She whimpered again. Damn him. Her body was on fire now, anticipation and need coiling tight in her belly.\n\n\"Please,\" she begged.\n\n\"Hmm? I'm sorry. I didn't quite catch that.\"\n\nShe exhaled sharply, on the verge of losing her mind. \"Darrow, please.\"\n\n\"I'm still not convinced you've earned this, Claire.\"\n\n\"That's not fair!\"\n\n\"When did I ever say I played fair?\" She could hear the smile in his voice.\n\n\"Darrow!\" Her body ached for his touch, her sex clenching so hard it almost hurt.\n\nHis laughter echoed through the hall. \"Very well.\"\n\nHis fingers sank deep once again, relieving her body of her hollow emptiness. She moaned his name, her body arching in response. A shiver ran up her spine as he teased her again. God, he could make her squirm. Silthos had amazing techniques and Thaltos had more than enough control, but Darrow could make her scream like no one could.\n\n\"You look so lovely here, Claire. I rather like this position for you.\" His free hand stroked her back. \"Perhaps we should introduce Silthos and Thaltos to this. They may enjoy it, too.\"\n\nShe dropped her head and closed her eyes, savoring the feel of every thrust and pull of his wonderful fingers. Another shiver rocked her body. Her fingers trembled and her blood pounded in her ears. She moaned his name again, begging him to continue.\n\nHer body finally surrendered, tensing and shivering as she closed her eyes and screamed his name. Her pussy convulsed around his fingers, holding him tight and never letting go. Beads of sweat shimmered on her back, her breasts now full and aching. Slowly, very slowly, she drifted back down to earth, her famished body now fully stated.\n\nShe relaxed into his lap, panting out exhausted. She closed her eyes and nuzzled his thigh with her cheek. His hand stroked the curve of her ass, easing her descent back into reality.\n\n\"I must say, Claire. That was one of the best views I've ever had of you.\" His voice was light again, playful as always.\n\n\"Hmmm.\" It was all she could manage.\n\n\"Are you alright?\"\n\nShe nodded, then frowned. \"Yes, I'm fine. But you made me too tired to do I had planned for you.\"\n\n\"Oh, I'm sorry, Claire.\" His hand stroked the length of her back. \"I'm sure it was something heartfelt and very special.\"\n\n\"It was a striptease,\" she whispered.\n\n\"Damn.\" He growled quietly to himself. \"Well, I...do you suppose you could perform it later?\" His voice was soft, pleading.\n\n\"Of course. But you've exhausted me and I don't perform well when I'm tired.\"\n\n\"Thank you,\" he purred.\n\nShe smiled and settled into him, reveling in the aftershock of her climax mixing with his wonderful caress. She wondered how Thaltos and Silthos were. Probably still asleep, she guessed. Maybe she could show them all her little dance when they'd woken up. She'd have to practice first. Dancing was never her strong suit. The last time she'd tried, she nearly knocked over her grandmother's ceramic vase. Dancing was banned from the house after that.\n\nThe wind whistled softly through the hallway, its soft breeze cooling the sweat on her back. She glanced up to watch a handful of intricately patterned strands of webbing float by, twirling and twisting in the air. The thought remaindered her of the small spider in her room, of Kerion, of the apology she had to make.\n\n\"Oh.\" She placed her hands against the floor, pushed herself up and slid off his lap.\n\n\"What? What is it?\" Darrow stared at her with wounded eyes. \"Did I actually-\"\n\nClaire shook her head. \"No. I have to see Kerion. His family saved me and I need to thank them.\"\n\n\"Oh, I see.\" \n\nDarrow stood and offered his hand. She smiled up at him and gripped his wrist, letting him haul her to her feet.\n\n\"I don't know where they are.\" She chewed her lip anxiously as she peered down the hall.\n\n\"Would you like me to walk with you?\"\n\n\"No. I'll be fine.\"\n\nHis expression turned worried for an instant. He managed to swallow his fear and stretched out one thick arm to point down the hallway.\n\n\"They live in the shadowed corridors off the main hall.\" He stretched out one long arm and pointed down the hall. \"If you walk all the way down, you'll reach a dead end with two halls branching off to either side. Take the right hall and go until the end. You'll see his web covering the whole wall.\" \n\nShe stood on her toes and kissed him, cupping his face in her hands when she pulled back. \"I'll be fine, I promise. Go back to bed. I'll give you your prize when I get back.\"\n\nHis eyes lit up as his face split with his grin. \"Yes ma'am.\" He stepped back, slowly making his way towards their room. \"Are you sure you don't want me to come?\"\n\nShe shook her head and smiled.\n\nHe shrugged and stepped into the shadows. \"Don't take too long, Claire.\" His grin was devilish. \n\nShe smiled back, and spun on her heels, looking over her shoulder to blow him a kiss.\n\nHe grinned back and bowed his head, slipping into the shadows and out of sight.\n\nShe smiled one last time before making her way down the vast hallway. It was still deserted despite the fact that the lockdown was long over. Still, not a soul accompanied her down the vast corridor, and she walked in silence, lost in her own musings of her dance.\n\nMinutes \u2013 or hours, she couldn't tell which \u2013 passed as she walked. Her eyes slid to the swamp, and she stopped in her tracks. Curiously devoid of any trace of silver or cold, she could clearly see the shadows of souls as they made their way across the marsh. Among the shadow, the wizened form of the old woman could be seen, hobbling along as she walked in endless circles.\n\nA flash of memory erupted into her mind - scenes of the woman's face, horrified, bruised and covered in blood, staring up at her as she rained blows onto her cheeks. Gasping, Claire stumbled back and shook her head, tears pricking her eyes.\n\n\"Oh, no. No, no, no!\"\n\nShe watched the old woman as she circled back around, anger and disgust crushing her heart. How could she? That poor woman. To be attacked so viciously by her friend. Guilt nearly suffocated her. Losing any regard for her safety or fear of the marsh, Claire rushed forward and hauled herself over the wall. \n\nShe raced across the soft peat of the bog, tears streaming from her eyes. How could she do such a thing, even while under that evil spell? She should be here, not the old woman. She deserved it more.\n\nThe woman noticed her as she made her next round. Before she could react, Claire plowed into her and knocked her to the ground. Burying her face in the warm fabric of the grandmother's dress, Claire cried out her sorrow and anger, screaming unintelligible apologies through her tears.\n\nThe old woman's fingers twisted into her hair, stroking her as she whispered soft words of comfort. Claire continued to cry, still babbling broken pieces of apologies. Other souls turned to watch the spectacle. Those who had witnessed her uncontrolled attack knelt down and stroked her skin, wanting to help the girl who had offered them comfort. They stroked her back, offering calming sentiments to soothe her damaged heart.\n\nThe old woman continued to stroke her fingers through her hair, whispering into her ear. Claire's tears slowly started to dry, her breathing becoming more stable. Gently she pulled away, sitting back so the woman could push herself up. They stared at each other for a moment, neither making a sound. A small smile cracking her winkled face, the woman stretched out one withered hand to stroke her face. Claire flinched away, turning her head to hide the last remains of tears. The woman hesitated for a moment, then smiled and cupped her cheek, stroking her skin with her thumb.\n\n\"Claire,\" she whispered. Her voice was raspy but warm, like her grandfather's before he passed away, mixed with a heavy English accent.\n\nClaire turned to face her, wiping away the last of her tears from her face.\n\nThe woman smiled wider. \"'Twas my name once, long ago. Before I passed and fell into this miserable place.\"\n\nShe swallowed. \"Your name was Claire?\"\n\nThe woman nodded. \"Claire Harden. Born in London, England in the summer of 1794. My parents were Christian and Victoria.\"\n\n\"Claire Harding. I was born in St. Louis, Missouri in 1994. My mom is Christina and my dad is Victor.\"\n\nShe paused. Harden and Harding. 1794 and 1994. Victor, Victoria. Christian, Christina.\n\nImpossible.\n\nThe similarity was hard to ignore. Their eyes were the same soft grey, their skins the same porcelain color. The two of them shared high cheekbones, full lips and straight noses. One had short chestnut hair; the other's had turned grey long ago. A feeling of shock settled into her gut as she stared open-mouthed at this mystery woman. Though, she wasn't so mysterious anymore...\n\nHoly shit. I'm her.\n\n\"I knew you the instant I saw you drop the grape into my hands, dear girl.\" Her thumb continued to stroke her skin. \"I saw myself in you. That same warm smile, that same fighting spirit. I knew you before we'd even met.\"\n\n\"Holy fuck,\" she whispered. Claire's head began to spin. \"I am you?\"\n\n\"Not quite, my dear. A new idea of me. I never feel in love with demons or had to fight that damned cloud. But I did have parents who sold me off and a grandmother that despised me.\"\n\nHoly double fuck.\n\nWarm hands cupped her face. \"You listen to me. I have never faulted you for the attack you made. I have never doubted you for anything you've ever done. Your love for those demons, your encounter with Tarrin, your sacrifice to save them. I've never judged you for anything because I know I would have done the same. But you're beginning to doubt yourself. I can see it.\"\n\nClaire chewed her lip and looked away. \n\n\"You mustn't do that. You must keep your eyes up,\" she snapped her fingers to regain Claire's attention, \"and your heart strong. Once you doubt yourself, once you give into that self-loathing and sorrow, you'll never come out. I watched my own son fall into that same trap. I watched him kill himself. You must never, never do that, Claire. No matter the pain or exhaustion you feel. You mustn't.\"\n\nShe nodded, fear and anxiety pooling in her gut. This woman, the woman that shared so much with her, knew something was going to happen as clearly as she did. \n\n\"Promise me you'll never leave them.\" The old woman stared into her eyes.\n\nShe nodded again. \"I swear.\"\n\n\"Good.\" The old woman smiled. \"Now, hold your chin up, keep your eyes open and your heart steady.\"\n\nClaire smiled back. \"Yes, ma'am.\"\n\n\"Now go. I believe you have someone to thank?\" Her eyes sparkled with mischief.\n\nGod, that's uncanny.\n\nNodding, Claire hauled herself up from the ground, extending an arm out to her predecessor. The old woman smiled and grapes her hand, carefully hauling herself from the soft earth. They grinned at each other, a shared spark in their grey eyes. She had the strength now, the self-confidence and resilience she needed to handle whatever threat came her way. She would see Kerion first and handle her apology, then go home to her lovers and. She could handle herself here.\n\nStill, she would have to leave her new friend \u2013 indeed, her old self \u2013 behind. Claire's smile faltered an inch. \n\n\"I don't want to leave you behind.\"\n\nThe old woman shook her head. \"Don't you worry about me. I can handle myself.\"\n\n\"You're sure?\" She chewed her lip worriedly.\n\n\"My dear girl! I am as much you as you are me. You should know I'll be alright.\" Her grey eyes shined.\n\nClaire nodded, still chewing her lip. The old woman grabbed her shoulders and spun her around, giving her a gentle shove towards the wall.\n\n\"Go, child. And hurry. The mist is gone from here, no doubt seeking you out. The quicker you see Kerion, the safer you'll be.\"\n\n\"What?\" Claire spun around. \"What do you mean it's gone?\"\n\nThe woman shrugged her bony shoulders. \"No one has seen it for hours. It must have moved past the barrier and into your part of this world.\"\n\n\"But it can't move past the wall!\" she cried. Fear started to boil in her gut.\n\n\"Not in its vaporous form, it can't. But the mist is tricky. You've seen the magic and the power that swirl around inside. I'm sure it can change its form to hide itself from the guards.\"\n\nOh no. Darrow! It knows where they are!\n\nHer stomach dropped to her feet. \"Shit. It knows where we live!\"\n\nThe old woman's eyes widened. She spun Claire around again and began shoving her towards the wall. \"Then go to Kerion and warn him. Tell him the mist has used its magic and gotten loose it's hunting you now, and it won't top until it breaks you completely. We'll send a guard to warn your lovers. Go, Claire!\"\n\nWith one last shove, Claire took off running towards the wall. Panic and anger fueled her run, pushing her faster than usual. She flew across the bog, barely feeling the ground beneath her feet. Reaching the wall, her fingers dug into the cracks in the stones, all the strength in her slender arms combining to haul her up. She tumbled over the edge, landing on shaky feet as she straightened herself. Taking one quick breath to find her center and reset her motives, Claire turned and raced down the hallway to find Kerion.\n\nThe hall remained empty through her run. In the back of her mind, she wondered vaguely if the absence of life had more to do with the mist's escape than a miscommunication about the lockdown.\n\nReaching the end of the main hall, she veered right and continued down the cavernous branch of corridor. Her lungs ached, her legs burned. But she'd be damned if she stopped. She had to find Kerion, had to warn him about the mist, had to save her lovers.\n\nShe followed the endless curves of the hall, sliding on the tiled floor every time she made a turn. She ran on, never slowing her pace and never looking away from her darkness before her. She noticed the floors and wall of this corridor were chipped and broken from years of neglect. Clearly, Kerion's home wasn't used much.\n\n\"Claire!\" \n\nShe turned to spy the old woman, her ancestor, standing in the middle of the bog, waving to her.\n\n\"We've sent the guards! Your lovers have been warned.\"\n\nShe nodded and picked up her pace, returning her gaze to the darkness ahead. Good. They'd be safe for now. All she had to do was find Kerion and warn him about the mist and she'd be home free.\n\nStill running at full speed, she took the final corner too fast. Without watching her footing, she slammed into a wall of muscle and skin. Strangely, the barrier was cloaked in ink-black feathers. She bounced back from the collision, landing hard on the floor with her head spinning.\n\nWhat the fuck was that?\n\nSe shook her head to clear it, still unsure of what she had run into.\n\n\"Ah! Claire!\" Kerion's warm voice drew her back to her senses.\n\nShe looked up to see him carefully making his way over to her, his eight legs treading cautiously over the broken stones of the floor. He stopped only inched from her, numerous eyes alight with joy and concern.\n\n\"My dear, are you alright?\" One slender leg stretched out towards her, offering a handhold to pull her up.\n\nShe nodded and griped his leg, pulling herself to her feet. She rubbed her bottom, wincing in pain. \"I was trying to find you when I ran into something-\"\n\n\"Oh, yes, of course!\" Kerion cried joyfully. \"I meant to introduce you eventually. Claire, this is Lucifer, the ruler of our lovely realm.\"\n\nHer stomach did a back flip and landed on its head. Lucifer! She was fucked now. Trembling, she looked over to stare at the creature she had unfortunately crashed into.\n\nThe fallen angel stood silent, leaning against the nearest wall, arms folded over his chest and regarding her silently. He was bigger than she'd expected, at least a foot taller than she was, with muscular arms, a powerful chest and a strongly defined abdomen. Gold-toned flesh glowed in the soft light of the sconces. Enormous ink-black wings were folded against his back, the tips flaring out on the stone floor behind him. The lines of his face were so sharp, so severely cut, she wondered if he could be touched without drawing blood. Eyes made of liquid gold burned into her, making her squirm in her own skin. \n\nOh no. \n\nThose eyes narrowed at her for an instant before sliding to Kerion. \"This is the girl?\" His voice was beyond beautiful. Dark, rich and deep, it promised delicious secrets and sinful desires.\n\nThe enormous spider nodded. \"Yes. This is the one.\"\n\nLucifer's gaze found her again. \"Interesting. She doesn't seem like much.\"\n\n\"Yes, I know. But from what Tarrin's told me, she possesses the gift of reading the mist before it makes a move.\"\n\nGold eyes widened a millimeter. \"She can read it?\"\n\n\"Yes, sir.\"\n\nA slow, sinister smile spread onto Lucifer's perfectly sculpted lips. She shivered inside herself. Of all the religious bullcrap her grandmother had shoved into her head, this fallen angel was the one story she never doubted. Hell's master terrified her more than the mist ever could.\n\n\"Very interesting, Indeed,\" he whispered. \n\nHis eyes burned into her, making her head swim and her limbs go numb. Fear mixed with arousal deep in her gut. Her grandmother had warned her that he was a dangerous lure, fatal even. She had to keep her distance from him, or else she'd be pulled into his wicked traps. But her body burned suddenly, and she found herself wishing to feel his beautiful wings. Oh, if she could just touch those lips...\n\n\"Claire, what on earth are you doing back here?\" Kerion's voice mercifully caught her attention. She noticed Lucifer's faded instantly, annoyed her attention was now directed elsewhere.\n\nShe shook her head again, turning to face the old spider. \"I came to warn you.\"\n\nKerion cocked his head. \"Warn me about what?\"\n\n\"The mist.\"\n\nKerion laughed. \"My dear, the mist has been handled. It's been contained far stricter than ever before. There's no need to worry now, you'll be safe here.\"\n\nShe shook her head. \"No, you don't understand one of the souls in the marsh, she told me-\"\n\n\"You went into the marsh? Claire! The mist is in there! That's suicide!\" Kerion's eyes narrowed at her in frustration.\n\n\"No, Kerion. Listen, I-\"\n\n\"My children went into the cursed bog to save you once, and now you go back?! Why?\"\n\n\"I needed to see someone. Now, please, Kerion.\"\n\n\"Of all the foolish, idiotic things you could do, Claire!\" Kerion's front legs rose up in anger. \"Even Tarrin helped, and you go back into that damned marsh. I cannot believe that you would so something so arrogant and dangerous. My, God, Claire! We-\"",
        "Frustration broke her patience. Taking a deep breath, she closed her eyes and let loose. \"I wend down into that marsh to apologize to the woman I attacked and when I got there, there was no mist!\"\n\nKerion froze. \"What do you mean there was no mist?\"\n\nFinally.\n\nShe swallowed. \"The marsh was empty. There was nothing but bog and dead trees and human souls.\"\n\nKerion pulled back, his eyes wide and fearful. \"Oh. Oh, no.\"\n\n\"Kerion?\" Lucifer's melodic voice slid seductively into her mind.\n\n\"It's become a doppelganger.\"\n\n\"WHAT?!\" Lucifer's roar knocked her off guard and shook loose stones from the ceiling.\n\n\"A doppelganger? What does that have to do with the mist?\" She managed to keep her gaze off Lucifer, despite her body's craving to stare at him again.\n\n\"Claire, do you know what a doppelganger is?\" Kerion turned to her.\n\nShe nodded. \"It's a mimic, isn't it? It's a spectral copy of a person that's mischievous.\"\n\n\"Exactly. Usually, doppelgangers are no more harmful than poltergeists. Simple, playful spirits that scare and shock, but don't so any damage. However, the mist isn't so carefree and gentle. It's much more vicious, as I'm sure you've seen.\"\n\nShe nodded, suddenly cold from the memory of being under its spell.\n\n\"The doppelganger from it has is the only way is can cross the barriers we've placed around it. We're not sure why, but we think it's because our barriers only sense one type of magic. Taking on the form of another creature, its signature changes and renders the barriers useless.\"\n\nShe nodded shakily. \"So, it's taken another form. Why can't catch it?\"\n\n\"The issue remains in the fact that the mist can take on whatever form it chooses,\" Lucifer chimed in. \"Unlike true doppelgangers, the mist has no set image it must abide to. It can choose any form it wants. We're not as gifted as you are, miss Harding, so we have no idea what body it's chosen. At this point, we're at a severe disadvantage.\"\n\nShe chewed her lip for a moment, the flood of information slowly sinking in. the mist, with its new form, was wandering the halls searching for her. But without knowing what body it had chosen, they had no idea where to start.\n\n\"Well, I am linked to it in a way. Maybe I can find it.\" A spark of hope began to blossom in her chest.\n\nKerion's shook his massive head. \"I don't know, Claire. With its power having been changed into something different, even you may not be able to recognize it.\"\n\nThe bubble of hope burst immediately, sending her scowling at the floor.\n\n\"Perhaps she could find it, Kerion.\" Lucifer's voice once again caught her attention. \"The mist seems unusually, shall we say, attracted to her. She might be able to lure it out.\"\n\nKerion shook his head again. \"It might work, but I'm not willing to risk that. If Claire does manage to bait it out to where we can reach it, it might lash out and capture her again. We can't take that gamble.\"\n\nLucifer's expression darkened a bit. Claire's stomach twisted around itself. His annoyance at Kerion's refusal to throw her out into the wild made her feel beyond uncomfortable. Her grandmother's warnings about his ruthlessness and sadism seemed true enough here.\n\n\"Kerion, it would be the easiest way to capture it. If we used the girl-\"\n\n\"But that would put her own life at risk. She's not a wandering soul, she's still alive. Sending her out there would make her a perfect target.\"\n\n\"Yes, but what other choice do we have? Without her, we have no idea where it's going or who it's after. We need her to lure it out or we're fighting blind.\"\n\n\"I can't let her go out there again. It's already broken her once. Who's to say she'll survive a second round?\"\n\nTheir argument made her head spin. Her frustration reared its head again, demanding she return to her lovers. At least there she could find both safety and a universal consensus on something. Sighing, she turned and approached Kerion, throwing her arms around his head and kissing his soft fur.\n\n\"I have to go. I need to go back and make sure Thaltos and the others are safe.\"\n\nKerion stared at her. \"Claire! You can't go out there! The mist will find you for certain, and there's no guarantee we can save you a second time.\"\n\nShe rolled her eyes. \"And what else am I supposed to do? Stay here listening to you two bicker like schoolgirls while the rest of Hell is being stalked by an unknown evil cloud of shit?\"\n\nKerion stayed silent, rendered speechless by her argument.\n\nShe nodded. \"Good. Now, I'm going. You can stay here and sort this out yourselves, but I need to go and make sure my boys are safe.\" She crossed her arms and planted her feet, signaling that the argument had ended. \n\nDefeated, Kerion nodded. \"Very well. But please don't go by yourself. I wouldn't stand myself if anything happened to you on your way back.\" He turned to Lucifer. \"Sire, could you perhaps...\"\n\nOh no.\n\nLucifer's smile was ecstatic. \"Of course. I'd be happy to accompany the girl on her journey back. We may even be able to bond a bit on our walk.\" His eyes glowed with mischief.\n\nShit.\n\nClaire had finally decided she no longer like Lucifer, despite his hypnotic gaze. His enthusiasm and constant stare made her want to shift into one of Kerion's small children and hide in the cracks of the walls. Hesitantly, she nodded and hugged Kerion again.\n\n\"Thank you so much. I owe you my life,\" she whispered.\n\nKerion's front legs wrapped around her and pulled her close. \"Ah, Claire. You owe us nothing. We were saving someone all of us honestly cared about. Don't you worry about that.\"\n\nShe smiled and squeezed him tight before pulling away. \"Still, I feel I owe you something. Please give my thanks to your children as well. Will you be okay here?\"\n\nKerion waved a slender leg at her, an attempt to brush aside her worry. \"My children and I will be safe. We'll regroup the guards and explain the situation. You go with Lucifer and stay with your keepers.\"\n\nShe nodded, hesitantly turning to look at Lucifer. \"Ready to go?\"\n\nThe old demon wore a soft smile. \"Of course.\" He stepped forward, stopping just inches from her body. Icy coldness radiated from his skin, chilling her flesh and temporarily rendering her mind blank.\n\nOne strong arm looped around her shoulders. \"I'll watch over her, Kerion. Miss Harding and I will be just fine.\" He looked down at her and gave an impious grin. \"Won't we?\"\n\nShe swallowed loudly and nodded, forcing a tight smile to her lips.\n\n\"Sire, I don't mean to give orders, but we truly don't have time for games,\" Kerion warned. \"Claire must be returned to her keepers as quickly as possible if we're going to have a chance at fighting this thing. Please, sire, I beg you. Don't take any more time than is necessary.\"\n\nLucifer's eyes never left her. \"Stop worrying, Kerion. Miss Harding and I will be completely fine. She'll get back. I swear it.\" His grin widened an inch.\n\nShoving her fear and discomfort down into her gut, she squirmed out from under Lucifer's hold and side-stepped away from the old demon. \"Come on. We have to go. I'm starting to get paranoid about them.\"\n\nLucifer bowed, gracefully motioning to her to lead the way.\n\nShe nodded and began to walk down the twisting hallway with Lucifer close behind. Suddenly self-conscious, Claire wrapped her arms around herself and stared at the ground. Out of curiosity, she peered over her shoulder to see Kerion scurrying up the stone wall towards the ceiling. An endless line of tiny spiders trailed behind him. \n\nShe smiled to herself and resumed glaring at the ground. She could feel Lucifer's presence beside her, but she refused to look at him. His gaze was far too hypnotic, his body far too enticing, for her to risk another peek at him.\n\n\"So. You're Thaltos' girl?\"\n\nShe jumped an inch. She'd been hoping for a silent walk that avoided any type of communication with him. \"Yes.\"\n\n\"You enjoy your time with him?\"\n\n\"I enjoy my time with all of them?\"\n\n\"Oh?\" His curiosity made him far more intrusive. \"And who else owns you?\"\n\n\"Silthos and Darrow.\" She tried to keep her answers short, hoping to bore him out of his inquisition.\n\n\"Ah, yes. A quiet one and a spitfire. What a curious combination you have there.\"\n\nShe sighed and hugged herself tighter. \"Well, they're what I've got and I wouldn't trade them for anything?\"\n\n\"Anything?\" His voice was beyond inquisitive, becoming almost challenging.\n\nShit.\n\nShe knew where this was going and she intended to stop it now. \"No. I love who I have now. I wouldn't want anyone else, no matter how amazing they are.\"\n\n\"Quite stubborn, aren't you?\" His voice had turned humorous.\n\n\"I suppose it takes one to know one,\" she snapped.\n\n\"Don't.\" Lucifer's tone had taken on another sudden change. This time it was menacing.\n\n\"Don't what?\"\n\n\"Chastise me like that. I've already had one bitch crush my balls. I don't need you doing it as well.\" He spoke through gritted teeth, his fury almost palpable.\n\nHer annoyance at him finally burst forth. \"Well, maybe that was a good thing. Hopefully she managed to deflate your ego a bit and put you in your place.\"\n\nClaire continued walking, scowling at the ground as she mulled his ego-fueled inquiries over in her head. God, that creature was beyond annoying! Selfish, irritating, and anything but humble. It was a wonder he didn't drive the other demons here insane. \n\nShe noticed from the corner of her eye that Lucifer no longer walked beside her. She slowed her pace, confusion starting to sink in. Taking a risk, she peeked over her shoulder. Lucifer stood about thirty feet back, his eyes blazing and his mouth twisted into a tight scowl. His night-black wings twitched restlessly.\n\nHe crooked a finger at her. \"Come here,\" he growled.\n\nShe froze, barely able to breath. He looked so outraged, so menacing, she wondered why he hadn't just killed her now.\n\n\"I said come here.\" His eyes narrowed to gold slits.\n\nShe shook her head, fear now coursing thick through her veins. She took a tentative step backwards, trying to put some distance between them.\n\nA low growl escaped his throat. \"Miss Harding, you have ten seconds to haul your skinny mortal ass over here before I come get you myself.\"\n\nPanic ensnared her, forcing her to turn and take off down the hall. She didn't get far. Cold fingers looped around her wrist, jerking her backwards and forcing her off balance. She stumbled backwards into Lucifer's immovable form, wincing when his grip on her wrist tightened. He stepped forward, forcing her against the cold stone of the wall. Her cheek and breasts were crushed against the unforgiving stone, her body pinned in place by Lucifer's impossibly strong body.\n\nHis chest pressed against her back, holding her in place against the cold stone of the hallway. He leaned close, nuzzling his cheek against her neck and growling into her ear, she shivered and whimpered, closing her eyes so she wouldn't have to see him.\n\n\"You've seen our world, you know how it works. The good go up into paradise, the bad go down into the fire, and the rest of them stay here in this cold, desolate pit. You know this, yes?\"\n\nShe nodded, keeping her eyes closed.\n\n\"The Fire Pits are where my demon lords live, the ones who control the realms of hell that deal with the sins of man. I watched over one of their daughters while she chose a husband. She was beautiful, like you. Intelligent, like you. Strong, like you. But she was by far more ferocious and much more outspoken. She was the one who put my balls in a vice to get her way. The bitch even slapped me across the face!\"\n\nHe pressed harder against her, forcing her to wince as her body was crushed against the wall. \n\"And now I have you being a smart-ass to me and trying to force your hand. I don't need that.\"\n\nHe gripped her shoulders, spinning her around to face him. His golden eyes speared through her, glaring at her with a ferocity she'd never seen before. She bit her lip instinctively, squeezing her eyes shut and wishing him away.\n\nA strong hand gripped her chin, forcing her head up. \"Kara's already fucked me over. I don't need your snappy little comments added to the misery she gives me already. Now stay still and be quiet.\"\n\nShe clamped her jaw closed and stared up at him, her heart pounding in her ears. She was terrified of him, even fearing for her life now. But he still had that strange appeal to him. That distinct, unearthly allure that nearly made her forget his ferocity and the power he held.\n\nHe smiled at her wickedly. \"Good girl. At least you listen.\" He leaned close, inhaling her scent and grinning to himself. \"And you smell delicious.\"\n\nHer gut twisted. As bad as it was being chased down by a vengeful mist that's taken on an unknown form, but having Lucifer inhaling her scent and looking ready to devour her was far more frightening.\n\nHe purred in her ear. \"And you look just as appetizing. I wonder...\"\n\nHis free hand slid behind her head, fingers twisting in her hair and holding her completely still. He pounced, crushing her lips against his in a scorching but n=unwanted kiss. She squealed, horrified, and tried to squirm away, but his body pinned her tightly against the stone walls and kept her immobile.\n\nA thick tongue, slick and warm, gently pressed against her lips trying to work its way into her mouth. She tried to keep her mouth closed, but his persistence paid off. His tongue slipped into her mouth, twisting and teasing, trying to coax a more acceptable response from her body.\n\nIt worked slightly. Her body followed its own course, her back arching to force her breasts against his icy skin. Her belly stirred with heat, and an ache started between her legs. Her body burned for him suddenly, wanting nothing more than to hold this darkly beautiful creature and to feel him ravaging her.\n\nHer mind and heart, however, started gathering ammo for their rebellion. She couldn't want Lucifer! That monster had every quality and feature she hated in men. She had Darrow, Silthos and Thaltos who loved her and risked their lives for her. Lucifer simply trapped her in a hallway and forced himself on her. \n\nNo, she would not fall to him. She had people who truly cared for her. People she loved far too much to risk sleeping with the darkest of fallen angels.\n\nHer heart set, Claire did her best to fight back, clawing at his back and squirming against his rigid frame. Her struggles were useless, though, only doing enough damage to draw out a muffled laugh from his throat. His chiding laughter finally broke her control. Glaring at him, she bit down hard on his invading tongue, hoping the pain would send him running.\n\nLuckily, it worked. Golden eyes shot open as he groaned in pain. Lucifer pulled away, cupping a hand to his mouth as he stumbled back. She stood against the wall watching him, her body aching to run but her fear welding her to the floor. His eyes flicked to her, full of outrage and disbelief.\n\n\"Damn bitch,\" he hissed. \"You'll pay for that.\"\n\nHer flight response kicked in, sending her racing down the hall. She never once looked back, staring straight ahead as she wound her way through the twisting corridor. Her heart wanted to give out, her lungs wanted to burst, her legs wanted to crumble beneath her. But her mind forced her body on, promising it the pleasures of her lovers if it kept moving. She picked up her pace, taking a sharp turn as she exited the corridor and burst into the main hall.\n\nTears streamed from her eyes, the guilt, anger and humiliation twisting in her gut. She knew Lucifer's kiss was forced, making her faultless, but still! A shiver of disgust stalled her body for an instant. It would take days of eating her favorite beef and rice dish to scrape his taste from her mouth. \n\nShe shook her head, clearing her mind of any residual thoughts of that hateful kiss or Lucifer's unnerving allure. She had better things to do. Better people to be with, really. She straightened herself and began to make her way down the enormous hallway, taking care to peer over her shoulder every few minutes in case Lucifer' had decided to chase her down.\n\nAgain, the hall remained curiously empty. Even the bog was sparsely inhabited, with only a few shadowy spirits darting in and out from the shadows. Now armed with the knowledge that the mist had gotten free, the emptiness seemed more chilling and unsettling than before. Instead or reveling in the few precious moments of silence, she saw the hollowness and absence of life as a warning, an omen of tragedy.\n\nShe continued down the hall, lost in her thoughts. She hoped the guards had warned Thaltos and the others soon enough. She hoped they were safe, barricaded by the thick stone walls of their room. Once back, she hoped her own fears and anxieties would be gone as well. After all, where could she be safer than in her room, surrounded by the three demons ho loved her?\n\nA sudden chill snapped her out of her musings. It wasn't the winter winds that whipped through the hall. Nor was it palpable like Lucifer's frozen touch. It was a cold that made her soul shiver and her heart ache. A deep, restless iciness that clogged her thoughts and rendered her soul motionless.\n\nSuddenly, whispers invaded her mind. Cold, dark, menacing thoughts from a mind that was not her own. Thoughts that twisted her gut and squeezed her heart.\n\nThe girl...hungry...find her lovers...old wretch...kill...girl is weak, won't fight long...\n\nOh no.\n\nClaire took off down the hall, her once-frozen body now bursting to life. She could hear the mist, even feel it now. Its new form had done nothing to disguise the connection they shared. If anything, their link had become enhanced. She could read its thoughts clearer, know its intentions sooner than before.\n\nIt was heading for her home, hunting her lovers with frightening precision.\n\nAnger boiled in her blood. No, it would not take her lovers. It would not harm her predecessor. It would not have her. She would fight it this time, and she'd give it everything she had. Her brow furrowed in anger. Damn that creature. \n\nWeak, am I? \n\nWith her fury fueling her strength, Claire took off down the main hall again, using her heart to follow the icy trail of darkness. She'd find it before any damage could be done, and she'd kill it this time. Her lovers would be safe again, and she could finally find peace in this world of restlessness and pain.\n\nWe'll see how weak I am.\n\nShe raced down the hall, her heart burning and her soul hard as stone. Yes, they'd all see exactly how weak she was.\n\n<center>***</center>\n\nWhat Claire didn't see was the figure watching her from deep within the shadows of the enormous hallway, his body barely outlined by the soft light of the stone sconces. His golden eyes peered out from the blackness, narrowing as her watched her run. His tongue still throbbed slightly. That woman had one hell of a bite.\n\nLucifer scoffed. He desired and despised women equally. Damn them for eternally tempting and rejecting him. Especially this one. Kara was tempting enough, but her husband and sons worked well as excuses to avoid him. This Claire, however, was still technically open prey.\n\nDamn women. She and Kara, both. I suppose I'll have to find a way to break them down slowly. Not even Kara can resist temptation for that long. This girl should be much easier though. She's not as experienced, but she's just as fun.\n\n\"Sire?\" Kerion's voice interrupted his musings.\n\n\"Yes?\"\n\n\"Did the girl make it back safely?\" The enormous spider slowly crept down the wall beside him, eight eyes shining in the firelight.\n\nLucifer nodded. \"She's on her way now.\"\n\n\"Now? But she should have been home...oh, sire. You'll never learn, will you?\"\n\nA smirk crossed his perfect lips. \"I suppose not.\"",
        "Kerion sighed. \"Well, as long as she's on her way. Has she sensed anything?\"\n\n\"Yes. As did I, though miss Harding was considerably faster at tracking it down. It's moving, most likely toward her keepers. She took off down the hall just a moment ago.\"\n\n\"Oh no. She's going to get herself killed!\"\n\n\"Yes, the poor thing. She should have known better.\" He turned to leave.\n\n\"You're not going to do anything, sir?\" Kerions's voice was tinged with confusion and bewilderment.\n\nLucifer sighed. \"Why should I. It's not like she'd thank me for saving her.\"\n\n\"Sire, you can't let old worries and frustrations hinder your duty. We must save Claire or we're all doomed from that damn cloud...Besides, Kara has forgiven you. Why you're holding such a grudge, I don't know.\"\n\nHe rolled his eyes and seethed to himself. If there was one thing about Kerion he disliked, it was that the old spider was too wise for his own good. Time after time, he brought up valid arguments that rendered Lucifer's rantings pointless, leaving the demon king frustrated and feeling supremely ignorant.\n\nHis mentioning of Kara didn't help. That damned half-breed with her bright eyes and dark hair and that you're-an-asshole attitude. He hated and desired her eternally. The sound of her name was enough to drive him mad. His wings twitched, the memory of her drawing out a need to crush the solid rock he stood on.\n\nStill, this girl was just as intriguing. Superbly loyal and strong for her size, she would make for an excellent lover if given the chance. Her only issue was how she treated her lovers. She was terrified of hurting them, even going as far as biting his tongue to push him off for fear of having an affair on them. Damn human and their useless morals. He'd have to find a way to convince her that sharing his bead wasn't against the rules, though he doubted she'd listen.\n\nOf course, since I rule this realm, she wouldn't technically be betraying anyone if she and I did...\n\n\"Fine, then,\" he snapped. \"We'll help the girl.\" \n\nSpinning on his toes, Lucifer started on his way down. Kerion followed closely at his side, watching him cautiously.\n\n\"Do you think we'll actually have a chance to save the girl?\"\n\nLucifer shrugged. \"Don't know. I suppose we'll have to wait and see.\"\n\n\"I just hope she'll be able to handle herself until we get there. Claire's strong, but her heart is far too tender to do anything if one of her lovers is put in danger.\"\n\n\"Yes, soft hearts have a habit of failing in times of distress. Though, I doubt she'll crumble so easily. If she was able to push me off, I think she can stand her ground for a while.\"\n\nKerion nodded, a smile in his eyes. \"Yes, I suppose that's true.\"\n\nLucifer smiled down at the old spider, reaching down to place a warm hand of his furry back. \"Come, my friend. Let's watch the fireworks.\"\n\n<center>***</center>\n\nAnd there you go - chapter 9. Congratulations, my people. You've just met Lucifer (kind of an ass, but I love him anyway). For those of you who know of my 'Date with Destiny' series, yes, I planned that. But no, Kara's not going to make a surprise appearance. That would just be too confusing (as if it's not already, right?).\n\nFinal chapter...Gravedancer"
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon",
        "hell"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/boneshaker"
}