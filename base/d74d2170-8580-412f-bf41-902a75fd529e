{
    "title": "My New Girl? Ch. 05",
    "pages": [
        "This story is a departure from my usual subject matter, at least to a certain extent. I hope you enjoy it. This story is also a *romance* so if you are not interested in that aspect of a relationship please do not read it or comment as those comments will be cheerfully ignored since you have been warned. \n\n*****\n\nThe wedding was held in my parent's back yard, complete with tent in case of rain. The weather cooperated but it was nice to have a shady area anyway since the day was sunny and warm. Jamie was, in my opinion, the most beautiful bride I've ever seen. She wore a long white dress with a lacey bodice and sleeves. Gene walked her down the aisle, the very picture of a proud father. Her sister, Emily, was the matron of honor and my friend Paul was my best man. We'd decided that we only wanted a small wedding, family and close friends, but still there were over one hundred people in attendance.\n\nThe reception was a bash to end all bashes. Linda and my mother had outdone themselves. The DJ was great, the food delicious, and the photographer unobtrusive but thorough. We even had the event on video so we could watch ourselves in our golden years, I guess. We danced our first dance, cut the cake and circulated. We made sure we talked to everyone in attendance, thanking them for coming and for their gifts. I was told many times that Jamie was a lovely girl and I was lucky to have her. I couldn't have agreed more and I said so. Our eyes kept meeting across the yard as we mingled, her smile warming my heart each and every time.\n\nBy six o'clock we were on our way to the airport and by eight we were winging our way to Miami where our cruise would depart the next morning. It was after 11 PM by the time we got to our room. I carried my bride across the threshold while we kissed. I closed the door with my foot as I set her down.\n\n\"I love you, Mrs. Williams,\" I said as I drew her into my arms.\n\n\"And I love you, Mr. Williams,\" she replied, wrapping her arms around my neck. Our heads moved in unison as our lips met. Our tongues flitted back and forth into each other's mouths, tasting and teasing until we had to break for air. I glanced around the room and noticed a bottle of chilled champagne on the table next to a plate of chocolate covered strawberries.\n\n\"It looks like someone sent a gift,\" I said nodding towards the items on the table.\n\n\"Oooh, I wonder who sent it?\" Jamie asked excitedly. She hurried over to the table and picked up the card. \"Have a happy honeymoon, love Linda, Gene, Mary and Joe,\" she said as she read the card. \"Isn't that nice of them? I just love chocolate covered strawberries!\" She grabbed one off the plate and bit into it, moaning with delight.\n\n\"They're delicious! Have one!\" I joined her, taking a strawberry and popping it into my mouth. She was right, they were good. I opened the champagne and poured two glasses. I handed one to Jamie as I clinked our glasses together.\n\n\"To my lovely wife, I hope she'll be as happy fifty years from now as she is right now!\" We took a sip, our eyes dark with pent-up desire.\n\n\"To my husband, my lover, my life, as long as you are by my side I'm the happiest woman in the world. I love you.\" She touched her glass to mine and we sipped again. We set our glasses down almost simultaneously. We moved into a kiss that was both loving and passionate. Our hands roamed, touching and caressing the other, our excitement growing by the second. Suddenly Jamie pulled back, a sexy grin on her face.\n\n\"Wait right there, I have a surprise for you!\" she said as she grabbed her suitcase and ran into the bathroom. I assumed she'd bought a new teddy for the occasion and I felt myself hardening in anticipation. While we always slept nude she loved lingerie and had a very sexy assortment of teddies and other things that she wore to entice me. I loved unwrapping her almost as much as I enjoyed making love to her. I undressed quickly, pulling the silk boxers she'd bought for me out of my suitcase. I usually wore briefs but these were for enticement more than everyday use.\n\n\"Close your eyes!\" she called out from the bathroom.\n\n\"Okay, they're closed,\" I said as I stood there waiting for her. I heard her feet on the carpet as she came closer then I felt her hand on my chest, her finger tracing around my nipples. My cock hardened in my shorts, tenting them.\n\n\"Open your eyes,\" she whispered. I gazed at her and saw a vision in white. The teddy was sheer and lacy, covering everything while obstructing nothing. I was cut high on her hips turning into a thong in the back. The top plunged low, showing off her cleavage nicely while it barely covered her rock hard nipples. The back was open leaving her virtually naked from the rear.\n\n\"God, you're beautiful,\" I whispered, stunned by how sexy she looked.\n\n\"So you like it then?\" she teased, her chocolate brown eyes were dark with desire.\n\n\"You know I do. It's too bad I have to take it off, it's so sexy.\"\n\n\"Who says you have to?\" she asked huskily.\n\n\"Well I wouldn't want to ruin it and what I have in mind might do that.\"\n\n\"Oh? And just what do you have in mind?\"\n\n\"That's my little surprise for you, my lovely wife.\" I drew her into my arms, running my hands over her almost naked back and bottom. She ground her hips into my raging erection as her hands were roaming my back, chest and bottom. She hooked her fingers into the waistband of my boxers then she pulled them down. It wasn't easy, our bodies pressed together like they were but she was persistent. I felt the silky fabric slide down my legs to land at my feet. I kicked them to the side at the same time her hands grasped my shaft. She drew back from me, coming to rest kneeling at my feet.\n\nShe began kissing and licking my shaft, making love to me with her mouth. I assumed that she was preparing me for her like she always did so I touched her head, getting her attention.\n\n\"Baby, I want to do you first, you know, tease you a little before we make love,\" I said as I caressed her cheek lovingly.\n\n\"And you will, my love. I'm not getting you ready for lovemaking. I want to make love to you. I want you to come for me, yes, but I want you in my mouth when you do.\" I groaned in ecstasy as her lips wrapped themselves around the head of my cock. She slowly drew me into her mouth, inch by tantalizing inch. Jamie had taken the art of fellatio to new heights. She could do things to my cock that no one had ever done. She loved to suck on me but we rarely went through to completion. I was usually in too much of a hurry to bury myself in her sexy body. Now I was getting the full treatment and I planned to enjoy it.\n\nOur eyes were locked onto each other's until just before she engulfed me completely. When I felt the head of my cock slide into her throat she had to lower her head to get me all in. I placed my hand on the top of her head, running my fingers through her hair. How she managed to stay like that without gagging I'll never know. I knew from previous experience that she had excellent breath control so it wasn't surprising when I felt her tongue as it swiped my scrotum. Her arms were holding my butt, tickling the crack as well as my pucker. Before Jamie I'd never liked it when a lover would play with my butt hole but now I loved it. She didn't try to push her whole finger in. She liked to play with me just using the tip of her finger. I found that more exciting than almost anything else.\n\nShe sucked hard on the way out, her cheeks hollowing as more and more of my spit-shiny shaft emerged. As soon as she could our eyes locked again. Her eyes crinkled in a smile, pleasure evident even though her mouth was otherwise occupied.\n\n\"God, I love you,\" I said as I caressed her cheek. \"You are absolutely amazing!\" She licked my shaft, sucked hard then drove herself back down to the base of my cock as she hugged me tightly. She settled into a rhythm that I knew from experience would have my balls giving up their load in no time. \"Umm, so good, baby. Just like that! Oh, yes, so, so good!\" I laid my hand on the back of her head, caressing her lovingly. She made what I can only call a purring sound as I caressed her, the whole time she worked my cock like a virtuoso.\n\n\"Soon, baby, soon,\" I hissed, my hips thrusting forward as my knees weakened a little. Jamie doubled her efforts it seemed, sliding one hand around to my ballsack so she could caress the orbs contained there. She knew when I was ready to blow because she could feel my balls tighten at the same time the head swelled in her mouth. She took me deeply into her throat then, holding me deep while I shot my cum straight into her belly. When the flow slowed she pulled back slightly and I could feel her tongue caressing the head so she could gather what remained before she swallowed.\n\n\"Damn, Jamie, I think I just shot my balls down your throat!\" I said as I pulled slowly out of her mouth and sat down heavily on the bed.\n\n\"Don't worry, lover, they're still there. I had them safe in my hand the whole time. Umm, I love the taste of your cum,\" she said as she licked her lips, swallowing once more.\n\n\"Come 'ere,\" I said as I drew her to me. I kissed her deeply, tasting the remnants of my orgasm still in her mouth. I ran my finger down her chest and into her cleavage. \"Now, it's your turn.\"\n\nI started at her shoulders, carefully lowering the straps of the teddy. Even though the sheer fabric did nothing to hide her charms I enjoyed the sight of her naked breasts as they were revealed. Her nipples were hard as rocks, standing up proudly from the rounded mounds on which they stood. I bent my head capturing her left nipple with my teeth. I nipped her bud and she reacted, pushing her chest into me, begging for more contact. I released it as I attacked its twin. This time I held on, stretching her nipple away, my teeth sinking slightly into the tender flesh.\n\n\"OH GOD!\" she cried as she thrust her chest into me, begging for more. I moved back and forth, sucking and biting her nipples just enough to cause a little pain but not enough to hurt her too much. I knew, of course, that she liked rough breast play on her nipples but I didn't want her to orgasm, or at least not yet. Pulling away I stared into her dark hooded eyes, our gazes almost burning each other.\n\nMy hands moved back to her teddy once more drawing it down her torso. As her belly button came into view I leaned down, kissing her belly and tonguing her navel. I licked it with just the tip of my tongue, flicking it like it did to her clit. Again I resumed sliding the teddy down until she had to lift her hips to allow me to expose her completely. Now that she was unclothed her clit stood up proudly. The teddy had held it down between her legs so that I couldn't see it but now it was there for me to see *and* touch. Instead of taking it into my mouth like she expected I stood up.\n\n\"Be right back, don't go anywhere!\" She looked at me like I was crazy. I mean where was she going to go? I hurried over to the champagne bottle then with a quick stop in the bathroom for a towel I returned to the bed.\n\n\"Lie on this, would you? I don't want to make a mess of the bed.\" She did as I asked; lying on the towel I had placed beside her. I lay down beside her the bottle of champagne beside me.\n\n\"What do you need the champagne for?\" she asked curiously.\n\n\"I'm going to pour champagne on you then lick it off, sound like fun?\" I asked.\n\n\"My, you *are* a kinky devil aren't you?\" she said with a delighted twinkle in her eyes.\n\n\"I try, my love, I try.\" She lay back, waiting for me to begin. I poured a small amount of champagne in between her breasts. She shivered.\n\n\"It's cold!\" she complained.\n\n\"Quiet! I'll warm you up.\" I began to lick up the liquid using long slow strokes of my tongue caressing her body as I did so. As I poured some directly onto her left nipple she shivered once more, most of it running down the outside of her breast and onto the towel. I licked and sucked her nipple enjoying the taste of her skin combined with the taste of the champagne. It tasted good, not like some brands. I'd have to remember to thank our parents for it, omitting the use to which I put it, of course. I repeated the process with her right nipple getting sloppier with the wine as I took more time licking and less time pouring.\n\nJamie was in a constant state of arousal from my tongue and also the effect of the cold liquid on her body. She'd get a dash of cold champagne then my hot mouth would be there warming her flesh while at the same time the caressing of my tongue excited her in a whole different way. I moved to her belly, pouring champagne directly into her navel. I did this a number of times, sometimes licking sometimes sucking the liquid, enjoying the sounds and motions her body was making as I did so.\n\nFinally I moved down to her genitals. I poured some directly on to the head of her clit and she jumped.\n\n\"It tickles!\" she said though she quickly settled back down, her legs spread wide for me. In fact her hands went to her knees so that she could hold them as wide as possible. I loved to see her like this, so open and trusting of me. She'd never trusted anyone enough to let them see her like this but she trusted me. It was a humbling experience. I began by licking the champagne that was on her abdomen first, pointedly ignoring her clit. I tried to avoid all contact but I couldn't and she would jerk with delight as I made contact with the hard sensitive flesh. I poured a goodly amount up and down her shaft, taking great delight in the way the little organ stiffened, the blood filling it, darkening the little head. Licking the wine from her skin and once more avoiding her clit I teased her mercilessly. I even poured some over her scrotum so that it ran down over her pussy pucker. I licked there, making her scream in frustration. I licked from there up to her balls sucking them into my mouth.\n\nThe highlight of the evening, for her I hoped, was next. I took a big swig of the champagne then I quickly pulled her clit into my mouth! Her hips left the towel as she jumped from the contact.\n\n\"OH FUCK! OH GOD! STEVE!!!!!\" she cried as she stiffened on the bed her head thrown back in orgasm. I felt her clit pulse once, twice, three times then, surprisingly a fourth! Her sweet juices mixed with the wine forming an intoxicating liquid that had nothing to do with alcohol! Jamie thrashed around on the bed, her hips hunching as her body flopped around almost uncontrollably. I had to hold on to her hips so I could keep her in my mouth, which I was going to do come hell or high water.\n\nWhen at last she relaxed back down I slowly pulled my head back allowing her now soft clit to slip from between my lips to fall limply onto her belly. I swallowed what was in my mouth in two gulps, savoring the unique taste. I knew that I'd have to do this more often, it was that good! I climbed carefully onto the bed and drew her body into my arms. She was still pretty out of it, I guess I'd exhausted her because all she could manage was a weak smile when I kissed her. I held her, savoring the feel of my wife's body against mine. I smiled at the word: wife, my wife. It had a good ring to it.\n\n\"Ste...\" she swallowed roughly. \"Can I have some water?\" I laid her down carefully then I got her a glass of water. I supported her as I helped her drink it. She probably didn't need my help but I was feeling protective of her just now. \"Thanks.\" I set the glass on the table then took her in my arms once more.\n\n\"You okay?\" I asked. In all the time we'd been together I'd never seen her this wiped out from an orgasm.\n\n\"Yeah, or I will be once I've had a chance to rest. God, what did you *do* to me?\" she asked wonderingly.\n\n\"I sucked you with a mouthful of champagne, that's all. I didn't realize... I'm sorry!\" I apologized.\n\n\"Don't be sorry, Steve! I loved it! It was mind-blowing, unlike anything I've ever experienced, and I love you for giving me that kind of pleasure.\" I sighed with relief. I thought for sure I'd hurt her.\n\n\"In that case, it was my pleasure to give you so much pleasure. It wasn't too much, was it?\"\n\n\"Define too much! I saw stars and all those other clich\u00e9s but no, it wasn't too much. I don't think I'd want to do it every time, but once in a while, oh yeah! And to think, I never really liked champagne!\" she giggled.\n\n\"I know, I was thinking the same thing. I think I'm going to get a hard-on every time I see a bottle of champagne though. Boy *that* could be embarrassing!\" I said laughing with her.\n\n\"Can we take a nap, honey? I'm beat. I'd love to make love with you but right now I'm sure I'd be no fun.\"\n\n\"Of course, baby.\" I pulled down the covers and helped her under them. I took the time to put the bottle of champagne in the bucket and threw the towel into the sink. By the time I got back my sexy little bride was snoring softly so I climbed in behind her, kissed her on the cheek and settled down for the night.\n\n*****\n\nI woke from what I thought was a very erotic dream that turned out to be my new wife arousing me from sleep with some very vigorous sucking. I opened my eyes and smiled sleepily.\n\n\"Hey,\" I said with a yawn.\n\n\"Hey yourself. My you were dead to the world! I thought I was losing my touch!\" she said as she crawled up the bed to kiss me.\n\n\"I was having this wonderful dream that turned out to be real. What time is it, anyway?\"\n\n\"Two AM, why?\"\n\n\"Isn't it a little early? We don't have to be at the dock until ten.\"\n\n\"It would be way early if we were going to the dock. We're going to have sex on our wedding night and it's not too early for that!\"\n\n\"Oh, I see. What we did earlier wasn't sex?\" I asked innocently.\n\n\"It was but not the kind *I* want on my wedding night. I want to feel my husband's cock buried deep in my pussy, as he makes mad passionate love to me.\"\n\n\"I can do that!\" I said as I grabbed her, pushing her down on the bed as I crawled between her legs. Even though she'd been sucking me I figured I might not be wet enough since we'd been talking for a bit so I grabbed her legs and folded them up so that her knees were almost to her shoulders. This opened her lewdly to my gazed, her little pussy winked at me in anticipation. Leaning down I swiped my tongue over her making sure to get her good and wet with my mouth. I pulled back while she held her legs open and wet myself. I placed my cock at her entrance and pushed. I loved to watch as I entered her and now that I was entering my wife for the first time the act took on new significance.\n\n\"I love you, wife,\" I said gazing deeply into her eyes. She was a picture of contradiction. Her face bore an expression of sheer love while her body was lewdly displayed to her lover as he entered her body.\n\n\"And I love you, husband. Take me, my love. Take your wife and make her yours!\" She threw her head back in delight as I bottomed out in her. I lay on top of her, sliding my arms under her shoulders, gathering her body close to me. She released her legs allowing her to lock them around my waist. I wanted this coupling to be slow and loving but Jamie wanted something else. \"Yeah, baby! Fuck me! Come on, honey let me have it!\"\n\nHer hips began to pound into me, using her legs as leverage to allow her to fuck me rather than the other way around. If she wanted it hard then who was I to deny her? I lifted up a little, gaining a little leverage. I began to stroke into her using long fast strokes. I pulled back as far as I could then quickly shoved myself home, meeting her thrusts back at me. Our loins smacked loudly, rapidly, the slap, slap, slap of flesh echoing off the walls. I worked hard to hold off, aided by her previous efforts earlier in the evening, but long before I wanted to I felt my orgasm rising in my balls.\n\n\"Ugh! Cumming! Baby, God I love you!\" I ground out as I buried myself deeply and spilled my semen into her hot orifice. Luckily she reached her orgasm soon after me. I felt her muscles clench around me and the wetness of her ejaculation on my belly.",
        "\"YES!!!! OH GOD YESSSSSSSS!\" she cried out so loudly I hoped that she didn't wake the people in the next rooms. I loved how free she was, how vocal, but at times like this I did worry that she might disturb others. I pushed into her with my softening cock, eliciting little grunts from my lovely wife. Once I slid from within her I rolled onto my back bringing her with me, our usual way of enjoying the afterglow of our lovemaking.\n\n\"So is married sex any better than when we were living in sin?\" I asked teasingly.\n\n\"I don't know, ask me again in ten or twenty years, okay?\" she replied quite seriously, even though her eyes were twinkling.\n\n\"I'll make a note in my calendar.\" I replied in a dead-pan tone of voice. I tilted her chin up so I could kiss her, a kiss of love, not lust. \"I love you, Jamie.\"\n\n\"I love you, Steve. How about we get some more sleep? I think I'm sufficiently tired now.\" I snuggled up to her, spooning as we usually did. She turned out the light and clasped my hand, joining our fingers. She brought our hands to her breast nestling them into her cleavage.\n\n*****\n\nThe dock was a beehive of activity. Our bags were checked and would be delivered to our cabin so we climbed the gangway to check in.\n\n\"Mr. and Mrs. Steven Williams,\" I said as we checked in with the purser.\n\n\"Oh yes, you're on Deck 5, cabin 515. Here are your key cards. The welcome aboard cocktail party will be at 5, right after the mandatory lifeboat drill at 4. Please be on time to your station. You'll find that information in your room.\" We headed to the elevators after checking which one was closest to our cabin. Our bags had already been delivered and were waiting for us when we opened the door.\n\n\"Oh, Steve, we have a little balcony! You didn't tell me that!\"\n\n\"I know, I wanted to surprise you. It didn't cost much extra and I knew you'd like it.\" We walked outside where two lounge chairs took up most of the small deck. It was nice and private though. If we were reasonably quiet no one would know we were there. I had plans for that deck.\n\n\"I can't wait until we're at sea,\" Jamie said. \"I bet the ocean is beautiful seen from here.\"\n\n\"Not as beautiful as you, anywhere,\" I said softly as I wrapped my arms around her, hugging her to me as I kissed her neck.\n\n\"Umm, God that feels good, baby,\" Jamie moaned. She shivered as I hit the sensitive spot behind her ear with my lips but she stayed still allowing me to continue my exploration of her neck. As much as I wanted to take this further, a lot further, we really didn't have the time.\n\n\"So, what do you want to do until it's time for the drill?\" I asked.\n\n\"Why are we having a lifeboat drill anyway?\" Jamie asked petulantly.\n\n\"Well for one, it's the law. Ever since the Titanic disaster laws about lifeboats have been getting stronger. Basically they want to make sure everybody knows where to go and what to do in the unlikely event of the ship sinking.\"\n\n\"Well, it still seems stupid to me. When was the last time one of these cruise ships sank anyway? However, since we do why don't we explore the ship?\" We walked around the various decks, looking at stores, checking out the casino and the clubs. We also signed up for our dinner seating time so we were all set. The lifeboat drill was as boring as you'd expect but the crew tried to make it as interesting as possible. After that we made our way to the top deck where the welcome aboard party was being held. I grabbed a beer for myself and a Tom Collins for Jamie and we started walking. We came upon a group of people about our age who were just introducing themselves.\n\n\"Hi,\" I said at a lull in the introductions, \"I'm Steve and this is my wife Jamie. Mind if we join you?\" We were invited to join them and after introductions we talked about the usual things new people do: jobs, where we lived, how long we'd been married or dating, that kind of thing. When the group found out we were on our honeymoon we were congratulated and then regaled with all the marriage advice that strangers want to give. We smiled politely as they seemed to be nice people and well meaning. We chatted for a bit more then we all broke up to do some more mingling.\n\nWe met six more couples, two of whom were also on their honeymoon as well. Being newlyweds we kind of gravitated to each other after a while. One couple, Brad and Mia, were from California and the other couple Bill and Suzy were from Ohio. We'd all gotten married on Saturday so we spent a lot of time comparing weddings, dresses (God was *that* boring) and how long we'd known our spouses before the wedding. It turned out Jamie and I were the newest couple but, in my opinion, we were the most in love. Since we seemed to hit it off we made plans to meet at a night club for some drinks and dancing after dinner. None of us had the same seating so we agreed to a later time to go clubbing.\n\nAs we headed back to the cabin to dress for dinner we saw a few of the couples we'd met earlier in the day were on our deck. We traded greetings as we passed but that was about it. I wore one of my best suits but Jamie had bought some new dresses for the trip and she pulled out my favorite. It fit her like a glove, showing a hint of cleavage, the skirt coming to just above the knees. In her high heels her legs looked even longer than they were and her ass, well it was about perfect!\n\n\"You, Mrs. Williams are going to be the most beautiful woman at dinner.\" I said as I looked lovingly at her as she straightened her stockings. Soon after she'd moved in she traded all her panty hose for holdup stockings, which I loved. The sight of her in a thong and stockings was the stuff of dreams!\n\n\"And you, Mr. Williams are very, very biased. I'm probably going to be only *one* of the most beautiful women in the room!\" she said sassily.\n\n\"Well, it's good to see all my compliments haven't gone to your head,\" I said with a chuckle.\n\n\"I love your compliments, baby. The best thing about them is I know you really mean them.\" She walked over to me slowly, her hips swaying sexily, her lips parted in preparation for my kiss. We kissed gently, lovingly because we knew we couldn't let things go too far. I reluctantly pulled back so I could escort my bride to dinner.\n\nDinner was an uncomfortable affair. The people at our table were not very friendly or really interested in talking to us as they were traveling as a group. We made our escape as quickly as we could vowing to try to have dinner with the other newlyweds, if at all possible. Since we were free early Jamie and I headed to the club so we could get a table. Since it was pretty early we basically had our pick. We chose one near the dance floor but with an eye on the door. Since it was going to be a long night we started out with soft drinks so we wouldn't get too far ahead of our friends. The band didn't start until 10 but they had some decent music playing so Jamie and I danced some while we waited. I'm not much of a dancer but I do okay. Jamie is poetry in motion. She had a natural grace and rhythm that made me look like a better dancer than I was.\n\nAt last Brad and Mia and Bill and Suzy showed up, almost together. We waved them over and once we got settled we ordered a round of drinks.\n\n\"So, it looks like you guys have been here a while,\" Brad said. Jamie told them about our less than exciting dinner companions, laying it on pretty thick.\n\n\"It wasn't quite that bad,\" I said, \"Jamie doesn't like to be ignored but it didn't bother me. I was more interested in her anyway.\"\n\n\"Well, our dinner companions weren't much better,\" Bill said. \"How about we all try to eat together for the rest of the trip?\" That suggestion was met with a chorus of agreement so it was settled. Once the band showed up we spent most of the evening dancing with our spouses though we did change once in a while to be polite. Mia and Suzy were both good looking women and good dancers but I couldn't wait to get Jamie back into my arms and I made sure she knew it. We danced and drank, more dancing than drinking, until the club closed at three AM. Since the next day was a travel day we made plans to meet for a late breakfast at a buffet. The other couples were on Deck 6 so we all rode the elevator together. We said our goodnights then made our way back to our cabin.\n\nI slipped out of my coat and shirt then walked out onto the balcony followed by Jamie. She'd shed her dress and was now clothed only in her thong, stockings and heels. It was a warm evening with no moon. The stars shone brightly, more of them than I'd seen before. Jamie slid into my arms, kissing my chest.\n\n\"It's beautiful here, isn't it?\" she asked as she laid her head on my chest, hugging me tight.\n\n\"Yes, it is, and you make it perfect. God, Jamie, you know how much I love seeing you in a thong and stockings, don't you?\" I said huskily, my hands sliding down her back to cup her bottom.\n\n\"I think I do. Something hard is poking me in the tummy. I think he wants to come out and play.\" Jamie's hand moved to my zipper, tugging it down. Her hand slid in, pushed down my briefs and pulled my rock hard cock out. She slowly ran her fingers up and down my shaft lazily, while she began to lick my nipples. I struggled to take my pants and underwear off but finally I was naked. She had maintained her slow teasing of my cock the whole time. I didn't know this kind of stimulation could be so exciting, maybe it was the atmosphere combined with our outfit but in almost no time I was ready to come.\n\n\"Baby, baby you gotta stop or I'm gonna cum,\" I hissed as I clenched my teeth, fighting the sensations.\n\n\"Umm, that's what I want. Go ahead baby, shoot for me, shoot your hot come all over me,\" she growled as she nipped my right nipple with her teeth. I lost it then, my balls contracted and I began to shoot. She pressed my cock to her stomach so I fired shot after shot all over her belly and breasts. \"That's it lover, give me your cum! God it feels so hot and nasty. Do you like cumming all over me, baby?\" Her hand worked me, drawing out the last bits of my orgasm so that they dripped down the shaft and onto her hand. My legs kind of gave way then. I flopped down on the chair my chest heaving.\n\nI saw Jamie standing over me, her whole upper body shiny with cum. I was surprised at the amount. Most of the time it ended up in her pussy or mouth so I was surprised there was so much.\n\n\"God, Jamie, I'm sorry, honey. I don't know what happened but your fingers just drove me wild,\" I said apologetically.\n\n\"You have nothing to be sorry for, Steve. I wanted you to do it on me, I told you to, remember. And as for losing control, well, it's my job to make you lose control!\" She swayed closer to me her body mere inches from mine. Before Jamie could think I leaned over to lick her nipple, finding it coated in cum. I'd tasted myself before, and while I wasn't turned on by it I also wasn't turned off. I swiped her nipple sucking the cum along with the nipple.\n\n\"Umm,\" I moaned as I sucked her breast, licking the cum from it as well.\n\n\"Oh God, baby, that's so hot!\" she cried as she held my head to her. \"Umm, lick all that nasty cum off my tits, baby!\" She growled deep in her throat. I pulled her other breast to me licking the skin, now clean but still slightly sticky. Jamie used her fingers to gather up the cum from her tummy so she could smear it on her nipples. I went back and forth, cleaning her cum coated nipples until there was no more to be found.\n\nI pulled her close so I could slide her thong down her legs leaving her clad only in her stockings and heels. Her clit stood up proudly, begging for attention. She thrust her hips forward at the same time as she grabbed me by the back of my head, drawing my mouth to her hard clitty.\n\n\"Open wide, baby! Suck me while I fuck your mouth with my clit!\" Jamie was on fire now. She began to fuck my face with her clit, holding my head still as her hips moved back and forth slightly. I sucked as hard as I could so I could give her the pleasure she deserved. I'd never seen her this aggressive but I liked it. Maybe it was the drinks but this bit of role reversal was fun.\n\n\"Umm, you're a good little clit sucker aren't you, baby! Yeah, that's it, suck Jamie's clit!\" I tried to look up but it was awkward and I didn't want her to slip out of my mouth, but what I saw excited me. Her head was thrown back, her hair streamed out behind her. Her breasts were heaving, her nipples were hard as rocks, poking into the air. I felt myself getting hard again so I knew I'd be ready for another round once she was done with me. She had a tight grip on my head as she pumped me, holding me in almost a death-grip. I reached up to her breasts to tweak her nipples. She let out a whine that I hoped didn't wake anyone, it was well after 3 AM by this time. I pulled and twisted her nipples this time, I figured if she wanted aggressive I'd give her aggressive.\n\n\"AIEEEEE!\" she cried, \"I'M CUMMINNNNGGGGGGG!!!!!\" I felt her clit swell and her sweet ejaculate dribbled into my mouth in three little pulses. While she was still coming down from her orgasm I rapidly bent her over the railing of our balcony, spit on my fingers to wet her pucker then did the same to myself. I placed my cock at her entrance and pushed. I went in a bit more slowly than usual but soon I was buried deep inside my new bride.\n\n\"Fuckmefuckmefuckme,\" she chanted louder and louder.\n\n\"Quiet!\" I hissed as I slapped her sharply on the butt. \"You'll wake the neighbors, if you haven't already!\" Since she'd just come I didn't worry about her getting off. I saw to my own pleasure, driving into her in long, deep strokes. A couple of times I even fell out but a quick hunch of my hips had me buried inside her hot clasping tunnel once more.\n\n\"Fuckmefuckmefuckme,\" Jamie mumbled, quietly now but it seemed that she was lost in lust and not really aware of the world around her. I was surprised to feel my orgasm upon me so quickly, considering I'd come not that long ago but there it was. I sped up, pounding into her roughly until I spilled myself into her.\n\n\"Take it! Take it! Take it all! Oh God I'm cumming sooo hard!\" I whispered to her as I lay over her back. As soon as I could I grasped her around the waist and brought her with me to the lounger. I pulled her into my lap, her head resting on my chest while we both tried to catch our breath.\n\n\"Well... that... was... fun!\" I gasped. I held her to me tightly, even though it wasn't cold there was a slight breeze and I wanted to keep her as warm as possible.\n\n\"It... was?\" Jamie said softly and it sounded like she was crying.\n\n\"Baby? What's the matter?\" I tried to get her to look at me but she scrunched her head down so I couldn't see her face. \"Jamie? You're scaring me, baby. What's the matter?\"\n\n\"I was mean to you!\" she cried softly. I could feel her tears falling on my chest and stomach.\n\n\"Mean to me? How? When?\" I asked, clearly confused. Where was *I* when all this happened.\n\n\"I made you eat... eat... eat your cum! I fucked your mouth! I was mean!\" She broke down into great sobbing now and no amount of logic would get through to her at this moment. I held her tightly whispering words of love to her. I also ran my hands up and down her back trying to soothe her. She thought she'd been mean to me and nothing was further from the truth. Once her sobs had reduced to an occasional sniffle or hiccup I tried again.\n\n\"Jamie, first of all, I love you so very much. Now, I want you to hear me and really listen. You were *not* mean to me. You were aggressive, yes, but not mean. Do you think that even though I love you I'd accept you being mean to me?\"\n\n\"No, I guess not,\" she said softly though was still not wanting to believe me.\n\n\"No, I know not. You didn't *make* me do anything. I thought it was fun, different but fun.\"\n\n\"Fun?\" she said incredulously, raising her head to look at me for the first time. I dried her tears with my thumbs as much as I could and kissed her salty lips.\n\n\"Look at it this way. We are two consenting *married* adults. Neither of us forced the other to do anything and even though some might consider it nasty and dirty remember the old saying: if sex isn't dirty you're not doing it right!\" I said with a chuckle. \"So, no more talk about you being mean, okay?\" She nodded her head, laying back down on my chest.\n\n\"By the way, I didn't hurt you, did I?\" I asked.\n\n\"No, I was a little dryer than usual but no, you didn't hurt me. I got off on that little slap you gave me though and that was all it took for me to get into it.\"\n\n\"Well, you were getting loud again. Heck I'm surprised you didn't wake everyone on this side of the ship when you came!\" I laughed as she cringed in my arms.\n\n\"Oh God, Steve, you don't really think I did, do you?\" she said miserably.\n\n\"Probably not, but I think *we* need to get some sleep, it's probably after four by now.\"\n\n\"I love you, Steve,\" Jamie said. She leaned up to plant a soft, loving kiss on my lips.\n\n\"I love you too, Jamie, don't ever doubt that.\"\n\nI grasped her under her legs and carried her into the cabin. She tugged the covers down and we climbed in, snuggled together and were asleep in moments.\n\n*****\n\nTo be continued in part 6"
    ],
    "authorname": "oralfriend",
    "tags": [
        "ts romance",
        "ts love story"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/my-new-girl-ch-05"
}