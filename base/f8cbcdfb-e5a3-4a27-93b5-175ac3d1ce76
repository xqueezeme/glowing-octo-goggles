{
    "title": "A Matter of Blood Pt. 08",
    "pages": [
        "Author's Note\n\nPart 9 may be somewhat delayed as it is going to be quite a bit longer than average (estimated at 20k words at this time) and I want to take the time to get it right in revisions, even though most of it is written already. Live or die, Finn's story will end.\n\nFamily Tree - Updated for End of Part 7\n\nEach generation is separated out and ordered by age.\n\n* * *\n\nGrandmother (Mother of Father and Syrlin, other two sisters are his half-sisters) - Deceased, was a Weirdling. Could float and make people temporarily lose memories.\n\n* * *\n\nFather (Artan) - His relationship will all three of his sisters was fairly good, if sometimes tempestuous. Was in actual love with Syrlin. He cared for family but could be ruthless, cold, and cruel. He never hit women, but had no such compunction about his sons. Confirmed dead. Killer will perhaps forever be unknown as neither Bayrd nor Tyr took responsibility for his death.\n\nSeigaldia - Mother of Tyr (1st Child) and Adewyn (2nd Child). She's more or less loyal to her son, but she has equal devotion to her daughter. Wife. Proud and has a temper. In Marche Grodayn, status unknown but alive.\n\nBayrd - Brother, Finn's Uncle. Has no known children. Was not permitted to marry any of his sisters and has many affairs with commoner and lesser noble women. Spymaster for kingdom. Is in obsessive love with Syrlin who he forced into his bed and later sent demons to abduct leading to her maiming. Was a conspirator with Tyr and at least imprisoned his brother immediately prior to his death. Encouraged Tyr to act against Finn although he claims that he did not plan to murder him, only keep him imprisoned. Is summoning and using demons to enforce his grip on power.\n\nSyrlin - Mother of Finn (3rd Child). Made First Wife due to her unquestioned love and loyalty to her brother. Social butterfly, renowned for her beauty and charm. Capable mage. Escaped from Marche Grodayn and is currently with Finn. Lost her right forearm during Bayrd's attempt to abduct her using a summoned demon of hunger.\n\nCedyr - Mother of Merwyd (4th Child) and Raisa (5th Child) and source of their red hair. Concubine, not full wife. Raisa's name is different from the others out of respect for a friend of hers who died. Concubine without full rights of a wife, reason why is not public knowledge. In Marche Grodayn, status unknown but alive.\n\n*. * *\n\nTyr - Elder brother, former heir and attempted murderer of Finn. Killed in open battle.\n\nAdewyn - Ex-wife of Tyr, rejected. Legal Wife of Finn. Very much in love with Finn but will not put up with his shit. Finn loves her and trusts her advice on all military matters. While she is independent by nature, she is also the most traditional of his sisters, and takes her role as wife seriously. Hell of a temper. Is the mother of Finn's firstborn son, Artan.\n\nFinn - He has married Adewyin and Raisa, but not Merwyd as of yet. Reputation for sleeping around, although this was during times when Adewyn and/or Merwyd were not with him and before Raisa as of age, so it is somewhat undeserved. Mostly.\n\nMerwyd - Finn's first head-over-heels love. First Wife of Tyr, had a daughter named Gwyn with him. Suffered under Tyr's brutal sexual demands. With Finn now.\n\nRaisa - Legal First Wife of Finn. Loyalty and love for him is complete, although she seems a bit naive and innocent from time to time. Finn loves her deeply and is as protective of her as she is of him. She was trained to be a shadow-magic assassin and is smarter than she gives herself credit for. Is pregnant with Finn's child. The child is a Weirding, and will be born with a strange appearance and probably some natural magical abilities.\n\n* * *\n\nGwyn - Daughter of Merwyd and Tyr. Precocious, adopted by Finn. Has bonded with Caliban.\n\nArtan - Finn's firstborn son, named after his grandfather.\n\n==============================================\n\nCHAPTER TWENTY-TWO\n\n==============================================\n\nRaisa and Adewyn were arguing in a good natured fashion when I found them in what the mayor called the eminence room, where speakers waited prior to addressing the Assembly. The Assembly of Guilds met in the adjacent room, which we had taken over for our own purposes. Right now the greatest mages and priests of the North (and also many of the coastal cities elsewhere) sat there, doubtless both irritated at being summoned like accused criminals and afraid at the implications of dire need. Priests and mages essentially wielded the same art, but did not enjoy being reminded of it. Only in dire emergencies would one work with the other. I considered this such an emergency.\n\n\"I heard that they're calling you the Ice Dragon again,\" Raisa said, needling her elder sister a bit.\n\nAdewyn merely laughed.\n\n\"Better than what they're calling you,\" she replied.\n\n\"What?\"\n\n\"You don't know?\" Adewyn twisted the knife, as only elder sisters can.\n\n\"Just tell me!\"\n\n\"The Wraith-Queen of Cymru.\"\n\n\"What?\" Raisa sounded shocked, the poor dear, \"That's not even...\"\n\n\"You have to admit,\" I said, stepping into the room, \"it is pretty catchy.\"\n\n\"Finn!\" Raisa protested, \"It isn't very nice!\"\n\n\"Neither is 'Finn the Lusty',\" Adewyn said, starting in on me now, \"but it's true.\"\n\n\"Ugh,\" Raisa said, \"You're both the worst.\"\n\nThen she pouted, adorably. For a moment, we were all children together again, joking and making fun. Not adults responsible for a kingdom and its salvation. It was nice. Merwyd coming in, looking disheveled and a bit awkward and completed the scene. She always was adorable like that when she'd been studying. And I had no doubt that she'd been up all night with the task I had appointed her.\n\n\"I'm ready,\" she said, simply, offering me her wide smile, \"and I didn't have to make many changes. You did a good job with the basic diagrams, Finn. I just clarified things.\"\n\nI smiled back. Doubtless she brought the clarity of her brilliance to my post-sleep scrawlings. My sisters and I were together again. We could do anything. We entered the room.\n\nI'll spare you all the details of the meeting. In total we spoke to around a hundred people. Priests, priestesses, lords of various arcane guilds and societies, and royal mages. It was our job to get them all to understand the threat and why we needed their cooperation. Merwyd explained the technical details of what would need to be taught and how quickly it could be learned. By the end of her presentation, all in the room knew how to draw the wards and purify magic. \n\nThen she explained how little we knew of the threat itself. Bayrd could bring forth physical monsters, but that took much effort, and he probably wasn't capable of conjuring them in great numbers. Spirits were easier, but again, they were largely powerless without a host, and they couldn't simply possess anyone without preparation or permission. It was likely that Bayrd would find a way to use both, and perhaps other forms as well, so she stressed the importance of being wary and warding as much as possible.\n\nNaturally, when I stood up and made my final request for aid in securing the kingdom and its people was when things broke down.\n\nOne gentleman questioned whether I had the right to demand anything of them as king. I gave him the classic \"you must of course follow your conscience\" answer, but I believe it was just for form. I agreed, in spirit, to many tax reductions as well as further royal donations to various temples and colleges.\n\nThe real problem came when I couldn't deliver it all at once, so one of the older and most respected members wanted it all written down and signed. If anyone could agree on anything, that probably wouldn't have been a problem, but as it stood he wanted to adjourn for a few weeks and then come back and negotiate. Around half or more of the audience there rolled their eyes, understanding the dire nature of the threat. Eventually, I was forced to ask myself what my father would have done.\n\nOctavius, the older priest who had healed my mother and killed a demon, was my greatest advocate, desperately attempting to bring the intransigents over to my point of view. When he failed, I stepped up.\n\n\"I suppose I understand your concerns. There's nothing about royalty that makes men honest. My father lied quite a bit, often to me.\"\n\nAs I was getting into the field of royal fallibility, the wiser members of the audience began to become concerned.\n\n\"The problem is, simply, that I don't have time to negotiate. And neither do you. We have, regrettably, found that the traitor Bayrd has suborned individuals who were in our service. Anyone who does as I ask today will be remembered and the magical and religious institutions that they serve will be rewarded. It is in the kingdom's best interests. That said, anyone who doesn't assist me will be considered to be in Bayrd's pocket.\"\n\nThere was an outcry. The gentleman from the front stood up, indignant.\n\n\"Are you saying we'd be considered treasonous?\"\n\nI smiled broadly. He'd taken the bait.\n\n\"No. As the succession was in question for some time, I couldn't really do that. However, Bayrd is a proven diabolist, so you too, as fellow arcanists, would be considered the same. Merwyd, dear, please remind me what the punishment for consorting with demons is as recorded in the most ancient and sacred laws of Cymru?\"\n\nMerwyd looked surprised to be called upon, but did a fine job, speaking so the entire room could hear her.\n\n\"Crucifixion.\"\n\n\"Ah,\" I said, firmly, \"there you have it. Make up your minds or I will be forced to start making assumptions. You have until the chancellor calls your name to decide.\"\n\nI wasn't sure if it would have the desired effect, but having killed my own brother made me seem like a credible threat. It probably helped that Merwyd and I were the two strongest mages in the room. I stood and watched as each and every person in the room agreed to do whatever it took to preserve the kingdom from the demonic threat. Which amounted to all of the battle-trained mages being sent to my army as soon as possible and the rest getting to work on warding everywhere of importance in the north and eventually south.\n\n\"Crucifixion! Ha! He's definitely his father's son,\" I heard Octavius say from the front of the room to his neighbor. I'd be offended but he clearly meant it as a compliment.\n\n* * *\n\nOnce we had as many mages as we could stand, we marched south. We made it through the pass with no resistance. The men loved it but Adewyn didn't. Bayrd wasn't a military genius but he was intelligent. Smarter than me, anyhow. Adewyn pointed out to me that even a token force would have been able to slow us for days if not weeks, with sufficient magical support. It just meant that he'd be focusing his forces elsewhere, and had plans to wipe us out at a place of his choosing. A place with no opportunity for retreat or escape.\n\nThe worst part, for me, was that Raisa had no intelligence on what was happening in the mid-south. She had plenty of news from the coastal cities that Bayrd held and inland and even from the western mountains and valleys, but virtually nothing from the deep interior where we were headed. The south of Cymru is rolling hills and fertile valleys, until it hits the mountains and coastline. Farmland and good pasture as far as the eye can see. So, it stood to reason that someone, somewhere would have some news, and share it, accidentally or not. But they hadn't. Raisa felt incompetent but I knew her to be an extremely capable spymaster, so it was probably something far worse.\n\nWe didn't discover how much worse until we neared Marche Grodayn after almost a week of free movement. We heard it before we saw it. Hell, we heard it before we'd made it entirely through the pass. The scouts riding back looked like they'd seen death.\n\nThey had.\n\nWe hadn't heard anything from here because nearly of the population was dead, murdered at Bayrd's command. We hadn't seen any bodies because they were all standing between us and the castle. Standing, walking, and worst of all, screaming.\n\nThese weren't the quiet dead that the death singers of the Eldest sang into being long before man walked here. They had voices, and low animal cunning. To Adewyn's dismay, they did not oppose our entrance into the valley under Marche Grodayn that I had not seen in over five years. They waited for us to file in, smiling with inhuman hunger.\n\nMy family and I stood on a hill together, the army making camp beneath us, our mages setting up wards as fast as they could work, protected by archers. Every now and then a few of the things rushed our lines. Arrows brought them down.\n\n\"Tyr was mad and vile at the end, but not stupid,\" Merwyd said. She had figured it out first. \"He was murdering those villages in the north so that they could be possessed by demonic spirits. He must have expected Bayrd to aid him with the process, because it never happened. Thank the gods we burned our dead before we left.\"\n\n\"Can they inhabit any corpse?\" I asked, my mind filled with images of graveyards vomiting up generations of the restless dead. \n\n\"No. They must be fresh. Relatively. Probably three days or less, maybe a week. By a fortnight they would be completely spoilt as vessels. They won't rot while they are inhabited, however. They trick nature into think that the corpse is alive, and thus does not decay.\"\n\n\"You know much of this subject,\" mother said with unhidden suspicion. \n\nMerwyd didn't gat angry, to her credit. She just sighed.\n\n\"Father had me research the topic and bring him information. He forbid any practical learning, however. Which is unfortunate because, illegal or not, I could have perhaps wrested control of Bayrd's new army from him if I had but an ounce of knowledge of...\"\n\n\"No,\" I said, firmly, \"you will not become a diabolist because you perceive our situation to be desperate. That is the path that Bayrd has chosen. I do not pretend to wisdom or understanding, but I've grown to understand my uncle through his true actions. He most certainly believes himself to be aggrieved in some manner,\" as I said this mother looked away in disgust, I did not blame her, \"and is acting accordingly. He did not set out to be a mass murderer, and probably feels like he was pushed into it. As if he had no other path to deal with his family.\"\n\n\"But that's ridiculous!\" mother said, \"You must know what kind of man he is by now! I can't...I can't have been the only one he...\"\n\n\"Peace,\" I said softly, putting my arm around her, \"I do not mean he is good, or ever was. He's always treated women poorly, and I simply willed myself not to see it. I do not defend him. I understand him because it would have been easy for me to become like him.\"\n\n\"Rot,\" Adewyn said, and Raisa nodded, \"you're nothing like him. You'd never have harmed your mother or us like that. Even when you were at your most selfish or angry, the worst you ever did was argue, never hurt us or take what wasn't freely and enthusiastically offered.\"\n\nThat made me feel pretty good, to be honest.\n\n\"It isn't rot,\" I said, sighing, \"It's just the truth. I came out of that lake changed. I was stronger of will, to be sure, and mercenary service made me powerful, but the feeling of being wronged can lead a man down an awful path. Every day I thank the gods for Raisa's love. Without it I would have been lost.\"\n\nShe blushed and I held her hand. Her child was growing at a much slower rate than Artan had. Her stomach was only slightly visible through her clothing. Every time I saw it I was reminded why I had to kill Bayrd and finish this fucking war.\n\n\"Merwyd,\" I said, \"will the wards stop the possessed bodies?\"\n\n\"Yes. In fact if they cross the ward they will be banished and the corpses will become inert. They can be stopped through simple physical harm as well, but not as easily as a man. On the bright side, as such things go, they will not have a venomous bite and are fairly simple minded and unlikely to use armor effectively. They probably can pick up swords and such but will be clumsy with them. They won't have strength or abilities beyond that of the body they inhabit, either. They can also be dangerous to have around, so Bayrd is probably keeping them outside of the castle.\"\n\n\"So they have numbers but lack skill.\" Adewyn said, \"We've beaten worse odds than this.\"\n\n\"Well,\" I said, \"I'm not the expert here but I know enough about the wards to know that they will break if the diagram is significantly damaged. So expect Bayrd and his mages to target them when they are ready to attack. And probably his soldiers as well.\"\n\n\"I agree,\" Raisa said, \"I think that means that they aren't likely to attack at night, though. They need to see their targets just like we do.\"\n\n\"Tomorrow we'll give them some battle,\" Adewyn said, \"and see how things go. We'll probe. No overreaching. If we can we'll advance the camp a little more each day, like a movable fortress. I'd expect Bayrd to have more of those flying fucks and maybe some other surprises. What do you think, Finn?\"\n\n\"I think that it's nice that you asked me, honestly,\" I said, \"but everyone on this hill knows who runs the army. I'm just the guy who has to look pretty in a shiny hat.\"\n\nAdewyn laughed and then came closer. My family began to split up and talk about what each of them had to do. Almost without any intervention on my part, both mother and Merwyd had found responsibilities for themselves, largely of a magical nature. They argued with each other and it was clear that mother had some distrust of Merwyd still, but I could also see genuine affection. I suspect that most of it game from Merwyd sharing a bed with Tyr for so long and her own projection over her similar situation with Bayrd. That bothered me too, but it didn't make me trust Merwyd any less. It made me want to dig Tyr up so I could kill him again.\n\nMy selfish revenge fantasies were interrupted by Adewyn's hand on my ass. Her touch was hesitant, almost delicate. It had been a while for her, and we had not been together since she had given birth. I had been on my very best behavior with her. Barely.\n\n\"You know,\" she said, casually, \"my six weeks are up tonight. The priestesses said that we could...\"\n\nShe didn't get another word out. I picked her up as a groom would his bride and carried her off, to her great amusement and some cheering from my family.\n\nYou only get one life to live, after all, and the undead would still be there tomorrow.\n\n* * *\n\nI took Adewyn back to my own tent. She giggled and distracted me with kisses on my face and neck all the way back. I lay her down gently upon my bed.\n\n\"You're not being quiet as fierce with me tonight,\" she said, looking up at me with dreamy, half-lidded eyes, her voice husky with desire.\n\n\"I can fuck you hard if you want,\" I said pulling off my shirt, \"but right now I'm still getting used to you being the mother of my child.\"\n\n\"Finn...you don't have to treat me any differently,\" she said, \"you know what I like. All it means is that I'm more in your debt. I'm yours as long as you'll have me.\" It was flattering the way that she couldn't keep her eyes off of the muscles of my torso. \n\nI could see the devotion in her eyes. What we had was changed, but it wasn't unwelcome.\n\n\"Well, if that's so, then take your shirt off for me, slowly.\"\n\nI said it rather intending it as a joke. The idea that she'd do exactly as I had said without any backtalk was completely absurd. But that's just what she did. \n\nShe got on her knees first and then, slowly, hesitantly, took her shirt off. She wore no binding or underclothes and as she took it off her enlarged breasts popped into view. I'd of course seen them since she'd given birth, but she had been feeding our son, so sex hadn't been the first thing on my mind. Her skin still had its natural tan. Her belly wasn't quite as toned, and had a bit of fat, but it merely added additional curves. She sat and looked up at me with expectation...and maybe a bit of anxiety. ",
        "\"Gods, you're more beautiful now then you were before. I don't know how that's possible.\"\n\nShe looked down.\n\n\"Finn...come on. I know that's not true.\"\n\nI put my finger on her chin and brought her gaze to mine and leaned in and kissed her softly. She leaned up towards me as I stopped, chasing the kiss, wanting more.\n\n\"Yes it is. Don't contradict your husband while he's adoring you. Did you think I wouldn't find you as lovely after you'd borne my child? That I would be so shallow and cruel?\"\n\n\"No, love! I just...I just don't always recognize myself in the mirror any more. That's all. I was worried I would disappoint you.\"\n\n\"The only way you'd disappoint me right now is by leaving. Right now, I've very much missed your fine mouth.\"\n\nShe smiled again, flushed with excitement. Then she reached up, hands trembling a little with excitement and began to unbuckle my belt eagerly, like a child unwrapping a gift at their birthday. She drew my cock out eagerly, and then licked her lips as she looked at me. My cock twitched as she did it.\n\n\"I so missed your taste, brother,\" she said, and then took me in her mouth. More, she took me as deep as she could, right away. \n\n\"Oh fuck, Adewyn. That feels...gods...\"\n\nI put my hands on her head, entwining my fingers in her fine hair. She moaned at my touch, moving faster, licking, sucking and gripping my head with her throat. She barely took time to breathe. Any part not in her mouth was serviced by her agile hand, her saliva making every touch slick and wonderful. \n\nI felt my cock twitch in her mouth. I wanted to stop her, I truly did but she wasn't having it. I understood what she wanted. She was serving me, being a good sister. \"\n\n\"Adewyn, I'm close...\"\n\nShe sped up and then looked up at me, locking eyes as she slowly took me in her mouth deeply again, and held me. It was too much. \n\nI came, spurt after spurt, and she swallowed as fast as she could, even as I fired more down her throat and filled her mouth. She did her best, but a little escaped as my cock came out of her mouth and hit her on the cheek and spilled down her chin and on her swollen breast.\n\nAs I watched, suddenly relaxed, she scraped every bit of my seed off of her face and breast, and licked it as if it were the finest delicacy. Then she looked up at me and smiled, like the goddess she was.\n\n\"Lay down,\" I said.\n\nShe did, and lifted her ass up to accommodate me pulling her breaches off. Her ass was a little larger, and it was gorgeous to see it jiggle slightly as it came out of her slightly too-tight pants. Her legs were pressed together on the bed and I could see her sex, swollen and wet. And gods that smell. It wasn't that strong, not truly, and certainly not unpleasant. Like all my lovers I was attuned to it's musk. Hers had changed again, after giving birth. It was...richer, somehow. \n\n\"Spread your legs for me.\"\n\n\"Finn, you don't have to...\"\n\n\"That wasn't a request,\" I said, softly, but firmly.\n\nShe laid back and parted her legs. Gods I loved her white thatch so much. \n\n\"I've missed your flavor, Adewyn. I've been thinking about it a great deal lately. How much I wanted to feel you cum on my tongue.\"\n\nShe bit her lip and looked up at me, trembling. She was a mix of hesitancy, still not quite convinced that she was as attractive to me post-birth, and need. She was far more aroused than I had thought, and probably frustrated. I appreciated that she had serviced me first.\n\nI leaned down, slowly and kissed her inner thighs first. She shuddered a bit as I let my breath pass over her labia and held it there.\n\n\"What is it that you want, Adewyn. Say it.\"\n\n\"I...oh Finn I want you to lick me. Please lick me and touch me and make me cum. Please. I haven't cum in...in so long. I've waited for this...I wanted it to be...like real...oh Finn, gods Finnnnn...\"\n\nShe'd waited? As in she hadn't even touched herself? For six weeks? For a Pureblood that was like being a temple maiden. This was an old tradition for marriage. Most Purebloods didn't do it. It was regarded as being difficult at the best of times. No restrictions on the man, of course, but women were supposed to abstain from anything that would give them orgasms for at least a month prior to the actual wedding. \n\nI didn't truly let her finish, however. I moved in and sucked part of her labia into my mouth and then probed deeply within her with my tongue as I used my thumb to gently caress her clit. Her body jumped as if I'd burned her, her hands locking in my hair, her back arched to push more of herself into my mouth. I'd need to make sure that she came hard tonight.\n\nI couldn't help but stop for a moment, teasing her a little.\n\n\"Easy there sister. I'll make you cum when I'm ready.\"\n\nShe looked down at me, her eyes filled with desire and she nodded, biting her lip. \n\n\"Pl...Please, Finn. I'll be good. Please let me cum. Please.\"\n\nI wasn't used to this. I expected her to call me a brat and tell me to get back to work. Her acquiescence aroused me in new ways. I rewarded her with my tongue around her clit, as I pushed a finger inside of her. I didn't make her wait long. I circled and lapped at her clit while I pistoned my finger inside of her. How in the hell was a woman who just gave birth this tight? Then again she always did have powerful internal muscles that she'd always used to milk my cock for every drop.\n\nI added a finger and plunged it in her again and again. She gasped and moaned and rolled her hips into my probing and lashing tongue. Her grip on my hair grew tighter, painfully so. \n\n\"Finn, oh gods...please be my husband tonight, please don't lea...oh godsssss...\"\n\nShe didn't get the words out. Her hips bucked as she came, and it wasn't gentle. Her back arched again, and locked. She cried out, as loudly as when she'd given birth, and fell back quivering and shaking. I realized that she wasn't done, the orgasm was drawn out and pushing her, holding her and toying with her. Tears ran down her cheeks. I'd never seen her like this and it was deeply arousing. In fact, I was as hard as a rock.\n\nI slid up her body smoothly as she was distracted and entered her. I didn't hurt her, as she was well ready for my cock. She had a little surprise on her face as I began to fuck her in earnest and I kissed her full on the lips as I did so, our tongues meeting and her moaning into my mouth. Gods it felt good to be inside my sister again.\n\nHer orgasm blended into another, and then another. They were small, fast, and wouldn't stop carrying her. She clung to me as if I was her only hope in a storm, moaning into my ear now as I whispered into hers.\n\n\"I'll never leave you, Adewyn. Never. You belong to me. Do you understand. Me and only me. I love you and that is all you need to know tonight.\"\n\nI felt her nodding into my shoulder as she shuddered again, then went limp. I was just getting started, however, and I pulled her legs up over my shoulders and truly began to fuck her hard. Not painfully so, but enough that she knew how much my desire was for her. And gods, the slight amount of weight around her belly and the generous size of her breasts made her jiggle deliciously with each impact. And she gasped and whimpered each time I plunged inside her. She was, essentially, helpless to me, opened and vulnerable.\n\nShe had one hand on my chest and one on my face, and she met my eyes with such giving love that I began to lose control already. \n\n\"Gods sister...if you look at me like that...you'll be pregnant again...soon...\"\n\nShe laughed, throatily, as her body began to shake again. Again! Gods, her quim was gripping me so tightly, if I wasn't so hard it would be difficult to re-enter her. I couldn't hold out a moment longer, I came. \n\nMy seed entered her deepest places. I doubted that she would be fertile right now, it was a difficult proposition for Pureblood women at times, but I still felt the new magic that I was becoming accustomed to. The filling of her with me, physically and spiritually. She gasped as she came one last time, surprised but much more gently, looking me in the eyes as she did so. Finally, I was spent, completely. I rolled off of her. She mewled sadly as I left her, my cock still fairly hard.\n\n\"Gods, woman, did you need more?\"\n\nShe laughed.\n\n\"No, Finn. I just...loved feeling you inside me again. I feel quite well loved right now. No one ever made me feel like this, you know.\"\n\nI looked at her flushed face and adoring gaze. I felt very loved in return.\n\n\"Isn't a husband supposed to get his bride some kind of gift? I suppose I got you that ring, but really, that doesn't count.\"\n\nShe was wearing the ring now, and she held it up as I mentioned it.\n\n\"But I cherish the ring, its perfect and I never want another. And I already know that you have things picked out for us. I suppose if you wanted to grant me a request...I never had a Bridal Night, you know. I would like one, in my own bed, when we take the castle back. If that's all right with you, of course, husband.\"\n\nWedding ceremonies could be elaborate or simple, but the Bridal Night was always enforced. The groom and his new wife would be sequestered for the entire night. Words would be exchanged, family decisions made. There were a few, very simple rites. Mostly, making love was the most important thing. More even than a ring, the women regarded it as a sign of a man's actual commitment. \n\n\"You're damn right you're going to have one. But you know you don't have to be quite that humble, right? I love you as you are, and I...I know that we clash, sometimes. I love that out of all of my family you keep me honest to myself.\"\n\n\"But I want to be humble! Don't worry, I'll still be a bitch from time to time, and I'll speak my mind. I just...when its just us, I want you to know that I'm your wife. I'm your wife. And for Pureblood women, that means submission to your will. I'll still be on top if you want, but...I want it to be what you want. I want to be yours. I want to do this right. I know you'd never leave me and I never want to give you reason to regret your decision to marry me.\"\n\nI looked at her quite seriously.\n\n\"I meant everything I said. I don't regret it and I won't. There will be no releasing you.\"\n\n\"You're gods damned right there won't,\" she said, more like what I was accustomed to, \"if you keep making me cum like that, I'll steal you away from Raisa and Merwyd forever.\" She smiled at me.\n\nI smiled widely at her in return, and pulled her into a deep and soft kiss, and then let her settle on my chest to sleep. We'd probably get woken up a bit so she could feed Artan. That was fine with me. It always made me feel complete to watch her feed our son. \n\nThe sight reminded me what was worth dying for.\n\n==============================================\n\nCHAPTER TWENTY-THREE\n\n==============================================\n\nBefore this part of the war, \"making camp\" had been pitching tents and making sure we had a well patrolled perimiter. Now it meant that, and wards, and trees cut crudely and arranged into barricades and walls. We had towers not just on the outside but also simple ones on the inside, in case anything managed to breach our wards or overflew us. We trained our Sergeants in how to spot possessions, and any with even the vaguest amount of magical power were taught how to repair wards. We advanced a little bit each day, fighting for every inch of ground we gained, almost totally surrounded by Bayrd's army of the damned, moving our mobile fortifications with us. Each part of our force was a cog in a well-oiled machine. Archers protecting mages who were drawing wards while heavy infantry fought ahead of them. \n\nThe wards a the outside of our lines constantly glowed eerie blues and greens as they were always in proximity or touching some kind of demonic presence. It certainly felt as though Bayrd had opened the gates to the pit. It was a vision of hell, and I was never prouder to be a part of this army. \n\nA few broke from the constant noise and aggression. To my surprsie, Adewyn recommended that any man whose courage failed him be treated with compassion and given rest in the center of the camp, the safest part. I'd always believed in the sort of harsh discipline that father taught me but her way worked better. Usually the same men who broke would end up back on the line later, ready to serve again.\n\nWhat helped morale more than anything however, was that we were \"winning\". Or at least moving towards our objective, the outskirts of the town and the castle itself. Also, despite seeing more of the flying things and seeing some huge misshapen things moving in the night, not one demon had been able to break more than our outermost ward. They couldn't go around, over, or under them, and we drew them as we moved often even as men fought. \n\nThe real problem was what we would do once we got there. We could put the castle to siege. We could not take it by force. In fact, I'm not sure any army could, at least without breaking down the walls with magic. For a variety of reasons this was not a wise solution, although I had entertained it in discussions with Merwyd. She agreed that it could be breached, in theory, but the amount of force required may very well bring the whole castle, or indeed the side of the mountain down. And neither of us were capable of such a feat, in any case.\n\nThe worst of the fighting, that I witnessed anyway, was at the end of the third day. We could see the castle, through the ugly gray mist that had stuck to the ground throughout the morning and afternoon. It was looming over us, presaging tomorrows struggle. Night was coming. The evening didn't bring peace, not precisely, but the attacks simmered down to raids. It appeared that possessing spirits were still limited by the bodies that they inhabited. The human eye could only see so well at night and the creatures were not accustomed to losing sight because of simple darkness, so they tended to get confused more easily then men.\n\nAt Adewyn's urging I spent a great deal of my time walking the lines and assisting where I could with magic. At Raisa's urging I tried not to stay in one place or make myself obvious for too long, because Bayrd had mages and archers mixed in with his hordes, and they doubtlessly had orders to kill me. Merwyd understood how difficult it would be for me to both help with war magery while remaining non-descript. Shooting lightning out of your fingertips does tend to draw the eye.\n\nSo she hung back, just a bit, a few steps really, and focussed on defense, while I provided help on the line where it looked like it was bending, or blew holes in the enemy lines to allow forward movement. We were, as always, in effortless sync. \n\nI stepped forward to gain better line of sight on a target, and she moved her almost-invisible walls of force with me. She stepped back a bit because she was drawing fire, I shifted to attack her attacker. It was like a dance. \n\nI threw gouts of fire, powerful, uncontrolled. They washed over the enemy lines and the things inside screamed, feeling the pain of their stolen bodies. Arrows and even some lightning crackled over the energies that Merwyd held between me and death. I looked back at her and we met eyes, just for a moment. Her dark red hair stuck to her forehead with sweat, her simple dress clung to her curves. She smiled, just a little crooked raising of her left lip. A mage thought that I was distracted and drew upon ice to kill her. I deflected that and with a word she made the earth swallow him.\n\n\"I always knew that you had magic in you,\" she said, strengthening a ward on the line while a noviitiate priest ran up and fixed it, \"Raisa and I both knew it. We even went to the castle library together and did research on how to help you. Short of causing you extreme pain, possibly to the point of dying, we found nothing. And we didn't want to give you or father any ideas.\"\n\nI laughed. Father would have liked it and I would have gone along with it for the slightest chance at unlocking my magic.\n\n\"I found something,\" I said, bringing lightning down farther back among the enemy advance, \"in a book written by a madman. It turns out emotional distress works just as well as physical. Maybe better.\"\n\nMerwyd frowned, thinking as she wove magic. Her power was lower than mine but her skill was unparalleled. If she had ever truly wished to kill me, she could have, in the past or now. Her train of thought stopped and she focused on deflecting a rain of deadly-sharp hail that fell upon our soldiers. I laid bursts of fire at the origin of the attack.\n\n\"Gods,\" she said, finally, \"were you that distraught? Over Tyr's betrayal? I'd wondered how it was for you to survive, after your fall, but...I was afraid to ask.\"\n\nThe attacks were dying off. Twilight was growing deep and there was little point in their raids now. Fresh troops took up the defense as our mages re-drew the wards that would mark our line for the night.\n\n\"That was bad, but it wasn't what brought about my awakening.\"\n\nShe looked at me, her brow furrowed in puzzlement. Now I was distracted, because she was adorable like that. I walked up to her and brushed some of her sweat-laden hair out of her face.\n\n\"What was it?\" she asked.\n\n\"Honestly? It was you. It was losing you, then thinking that you had betrayed me. You fell pregnant so quickly, I thought...well I thought that you might have even had foreknowledge if not acceptance after the fact.\"\n\nHer face shifted from thought to anxiety so quickly I felt bad for telling her. She opened her mouth to defend herself but I spoke first.\n\n\"I know,\" I said, \"I know well enough now, and had I been thinking then I would have at least kept a more open mind. For a while, months if not a year or more, I was not well. I thought of revenge against Tyr and you almost in equal measure. I even considered hurting Gwyn, although I did not yet know her name. Now even the idea makes me sick. It still hurts to think about you being with him...after what he did to me. I won't lie about that to you. At times I grow angry about it, and others I grow sad at the thought of you enduring something that you never wanted, in order to stay alive. The truth is I don't know what I would have done had our positions been reversed.\"\n\nShe looked at me, deep sadness in her eyes. She had worked to conceal it from me, I knew. She still carried some guilt as I carried anger, but when we were together, it was evident that our affection was dominant, and slowly overcoming the rest.\n\n\"I never want to be separated from you again, Finn,\" she said, touching my face lightly as she smiled, \"and I truly do not care if you marry me or not. I don't need special privledges with you because I know you won't hurt me. When things were at there worst...I remembered us, together. Sometimes when we were making love, but other times when we were playing as children, or even when we kissed in the garden. Do you remember that? When we were too young to even truly understand love, but we were most definitely in it.\"\n\nI laughed, genuinely.\n\n\"How could I forget? It was the first time I truly enraged father. It was worth it, and I told him so.\"\n\nShe looked puzzled.\n\n\"I remember us being caught and I was...sent away for a few months to 'consider what we had done' as we weren't supposed to be seeing each other outside of lessons. Too much kissing. When I got back it took us a few more months to start again, and then I reached my majority and things became...very nice.\"\n\nShe smiled at the memory, I did too.\n\n\"You missed quite a bit, and I made Adewyn and Raisa promise not to tell you.\"\n\n\"What?\" she said, alarmed.\n\n\"Your mother and mine took you away. I know that they gave you a 'stern talking to' before you left. I was upset. In fact I was truly angry for the first time. Father told me I was not to see you any more and was to wait for Raisa. I told him to fuck off and that we loved each other as mother and he did. I called him a hypocrite to his face.\"",
        "Merwyd looked shocked. It was a pretty stupid thing to do.\n\n\"What...what happened?\" she asked, quietly.\n\n\"I got beaten to within an inch of my life. My ribs were cracked and there was blood in my urine for almost a week. I had trouble standing and walking about. Father forbid the healers from doing more than ensuring that I would not die, and denied me any tea to kill the pain. He wanted the memory of the consequences to linger. He did the same to Tyr once as well, for backtalk. It wasn't 'unfair' but it was brutal and mad.\"\n\n\"Oh...oh dear gods,\" Merwyd said, horror dawning on her face, \"they told me you were just confined for a week to your room and were fed poorly for a while...I had no idea.\"\n\n\"No, you didn't. They didn't lie. I was confined, not that I could go anywhere. But, as I told him after he had calmed down and I had gotten better, you were worth that and much more.\"\n\nMerwyd leaned in and kissed me, very suddenly and spontaneously. It was most unlike her, and I reached around her and grasped her ass, holding her up, pressing her into me. My body responded to hers and we stopped, panting, her leaning her forehead into mine.\n\n\"I...I was going to my tent to bathe and get cleaned up...you look like you could use some attention as well...\"\n\nThe she gave me her crooked little smile, turned and swayed away. I followed. Later that evening I would be glad that I did.\n\n* * *\n\nI followed her in. There was already a large wooden bath there, full of water. Merwyd was always prepared.\n\n\"Bartles has Gwyn for a little while longer,\" she said, untying a simple cord at the back of her dress and letting it drop off of her petite and curvy frame. It was so sudden that I felt my jaw drop. \n\nHer pale and freckled skin was glistening with sweat from her exertions, her dark red hair wild and her deep green eyes alive with lust. Her breasts were heavy and large, lightly upturned and barely sagging even after motherhood, her nipples hard. She stood, one foot forward, making her full hips posed like a statue of the ancients. Her bush was full and wet with sweat and her arousal, which I could scent from where I was.As I watched a cold breeze entered from under the tent flap and her skin broke out in gooseflesh. She shiverred, involuntarily, which made her body move and jiggle an an unbelievably sensual fashion. I felt my cock twitch at the sight. She noticed having been staring at the very noticeable bulge in my breaches.\n\nShe said a word and the water bubbled briefly and began to emit steam. She stepped in and sat down.\n\n\"Are you coming, brother? I'm feeling quite dirty this evening and I might need a little help...\"\n\nShe laughed at me as I fumbled with my breaches and shirt. I stopped when I was nude, however, looking at her with a smirk. She looked worried for a moment, and I wasn't above teasing her a bit.\n\n\"You know,\" I said, strolling over to the bath as if I was in no rush at all, \"your sisters told me all about your little plans and manipulations. When you were but a scholarly young thing and wanted my attention. The bullies and your ankle 'injury'. The many times I caught you changing. The foreign gentleman.\"\n\nShe was already pink from the heat of the bath, and now she turned bright red. She bit her lip adorably and sunk low in the bath as if hiding from me.\n\n\"Oh...oh lord, Finn,\" she stuttered out, \"I...I was so young and stupid. Adewyn was naturally sexual and knew how to get you hot with little effort and even Raisa seemed to know how to be a bit seductive and flirty even if she was too young for you and I had no idea. I was so plain and naive compared to them. So...so I... I made plans...and...oh gods...this is so embarassing...I never wanted you to...\"\n\nI showed her mercy.\n\n\"You are always so cute when you get flustered,\" I said, stepping into the bath.\n\n\"Oh gods...I'm never going to live this down...\"\n\n\"I hope not,\" I said, sitting down and gently pushing her legs apart as I moved over her, \"I wish to make you blush that wonderfully again in the future.\"\n\nShe looked up at me and put her hands on my face, her lips parted in anticipation.\n\n\"Finn, I'm so ready for you, but I'm so unsure of so many things. My mind won't stop. I don't know why you tolerate me, brother. I love you truly but what if I'm of no use to you or make you look bad? What if I'm...I'm no longer fertile? Many Pureblood women can only have one child. What..what if something happens to you? Sometimes that keeps me up all night and...\"\n\nI kissed her, long and slow. Her tongue shot into mine eagerly. One arm wrapped under mine and around my back to pull me closer and the other reached out and held my cock gently, rubbing it affectionately. I growled in my throat as we kissed.\n\n\"I don't know what will happen tomorrow, love,\" I said, after we stopped for a moment, \"but tonight I'm going to make you cum, hard, and forget about your worries for a little while.\"\n\nWe were done with words. She nodded and her small hand left my cock and grabbed my buttock, pulling me closer with urgency, deeper into the bath, towards her sex. She rolled her hips to let me inside her more easily, and whimpered as I reached her entrance. I slipped inside her warm tightness naturally, easily, as though we were meant for each other.\n\nMerwyd whimpered as I entered her, pulling me close, and for a moment clutching me tightly in place, as if she wanted this oneness to last forever, biting my neck, then she loosened her grip a bit. She let me move out of her and then pulled me back into her, the water making waves as I did so. It wasn't rough. I knew that we wouldn't be tonight. The time for roughness had passed as our negative emotions had begun to wane. This was as we should be. \n\nAs I moved she grew more and more responsive. Not a stroke went by without being answered by a whimper, then a moan. My hand slid easily over her breast, gripping it tightly, then pinching and teasing her nipple, pulling on it ever so gently. If I did not love her so I do not know how I would have maintained enough control to do so. She gave me soft cries in response, as high pitched and gentle as a small bird in distress. I kissed her neck, nipping and marking her, although somewhat lightly. \n\nThat was something that she had always loved, to have marks from me, even if she had to hide them in the past. She said they reminded me of who she truly belonged to. Her nails dug into my back, involuntarily as she came. Her breath shouted out in irregular ragged exertions, the water sloshing out onto the floor, as she was carried on the wave of her orgasm. It was not small, nor was it brief. I fucked her through it, building in intensity, but I held her head and kissed her mouth gently as it passed through her.\n\nAfter the day's work I was tired, although I had no intention of slowing. She knew this almost preternaturally, and pushed on my shoulder gently, as if to spin me. We rolled over, smoothly, as one, her on the top and me on the bottom. She looked down at me, smiling, her small hands on my chest. I had one hand on her waist as I thrust into her and she rolled and bucked her hips on me. With the other I gently caressed her clitoris, teasing and prodding her to greater movements. She bit her lip and closed her eyes and came again, this time hard and shuddering and quick, her quim giving me quick strokes and clenching me tightly over and over, as if with a tight but soft hand. It was almost too much to bear.\n\nThe water began to slosh more, spilling out on all sides, sloppily making everything wet around us. Merwyd's eyes opened hungrily and she began to truly ride me, like a tigress in heat, taking her pleasure from me and giving it in equal measure. I knew that she was trying to make me cum, exciting me until my seed entered her. This part had always excited her the most, getting me to my peak and over, showing me how much she loved me and cherished me by draining my cum into her quim.\n\nI came, grunting and growling, gripping her waist with hands that trembled. Thick ropes of my love filled her, painting her sacred space even as our power mingled. She gave to me as I gave to her. Although this was effort after a difficult day, I often wondered whether or not the energy she gave me helped me later when I needed it most. This was the last time we would be together before the storm, and we both knew it. There would be no other chances until after all was done.\n\nI finshed and she collapsed on top of me, panting and kissing me, making me feel as though I was the only man in the world. Eventually she rose off of me. We cleaned each other in silence, quietly soaping and feeling and kissing as if fulfilling a sacred rite. When we were done we got out, she dressed for sleep, and I pulled my clothes back on. I had things I still needed to do that evening, so I could not stay.\n\nAs I left, we looked at each other, melencholy at parting, but satisfied in each other's love. Each knew where the other stood. I felt on more solid ground than I had even a half hour ago. \n\nThe latter wouldn't last, but it was lovely at the time.\n\n==============================================\n\nCHAPTER TWENTY-FOUR\n\n==============================================\n\nMuch of my family came close to dying that night. Bayrd had waited patiently until we felt that we understood the only threats that we faced, and it almost paid off for him. It was a form of complacency, even if we were ready and waiting for the next demonic attack. I ask myself at times if we could have done more. Probably, but the world was madness around us, and we were doing pretty well despite it.\n\nI was with Adewyn in the headquarters tent and we were going over strategies for fighting the army of the damned, as I came to think of it. Even here we could hear their cries and moans. Specifically, how to deal with flying demon attacks, or magical ambushes, or hordes of dead men who felt no pain or fear. Wards would be effective until his mages could destroy them or his human soldiers could deface them. We had plans for a single battle, punching through and getting close enough to the castle where I could throw Caliban and hopefully she could add enough momentum for me to go to her and get on the wall or near a window. She could float slowly, but not carry me so I'd have to be accurate and quick if I wanted to avoid falling, but it was the best way we could think of getting me closer to Bayrd. Adewyn, naturally, thought it madness, and she suggested several alternatives, including possibly simply scaling it with a small force the following night. It would be difficult but there was a great deal of wear on certain faces of the castle. She also floated the concept of Raisa going alone with Caliban and using her to bring me in, although I had never been called that before, and I wasn't all that happy with the idea of endangering my pregnant wife in that way, even as capable as she was. We didn't come to a final decision, but we agreed on several possibilities that we could decide from when we reached the foot of the fortress. We were wrapping up, putting away maps, when she stopped in thought.\n\nShe looked away from me. I had to make my own preparations for tomorrow's fighting but I knew she wasn't delaying for no reason.\n\n\"Finn,\" she said, softly, \"do you remember when I came to your room all those years ago in the middle of the night? It was maybe a few weeks after your majority...\"\n\nI nodded. I did. It was long ago but I remembered it clearly, if only because it was so out of character for her. I had been reminded of it when we had made love right before she gave birth, because of the unusual vulnerability that she had shown when I held her afterwards.\n\n\"That was when I should have known. I should have told you everything and just asked you to come with me to speak with father or even just leave together. I never wanted to talk about it because it made me feel ashamed and weak. Up to that point I always tried to be the good older sister and look out for you, and it wouldn't have occurred to me to go to you for protection. Tyr and Bayrd came back from drinking at one of the local pubs. They stunk of liquor and sweat. Tyr wanted me, which I didn't complain about. It was a very typical request, it was my duty, and I loved him. But he had me right there, in the study. Bayrd watched. It was so strange and unsettling. When Tyr started getting a bit too rough, I asked him to slow down, and eventually I pleaded for him to stop. He didn't. Bayrd egged him on, telling him that I needed to be put in my place, and then he...he joined in. It was the first time anything like that had ever happened to me. I was past twenty then, I think, but still naive. Especially with men. I cried, and they didn't care, Finn. Afterwards neither of them stopped me from leaving. I guess they didn't think that they had done anything wrong. I cleaned myself up as best I could and drank as much Bride's Bane as I could find. Then I went to my room. But I was so afraid, Finn. I was afraid they'd come and do it again. So I went where I knew I would be safe. I went to the one man that I knew would never, ever do anything like that to me and help to protect me if I needed it. I went to you, Finn.\"\n\nEven after all I had seen and all I had learned, I was still shocked. How could they? And to Adewyn? The girl who loved Tyr. Loved him at least as much as Raisa had loved me those years ago. What kind of monsters had I been living with? How could I have missed all of these signs? She wasn't looking at me, and she had more to say.\n\n\"I know now I could have gone to father. I should have. He would have done...something. Maybe stopped all this years before. Put Tyr right, somehow. Exiled Bayrd. Something. I know it's my fault, in part. So I just wanted to ask you one more time for forgiveness. And tell you how much I loved you for being different. Then and now.\"\n\nThe anger in my voice startled her and she jumped a little. It startled me, as well. I thought I had been controlling it well. \n\n\"No. You aren't to blame for those rapists. Mother isn't to blame for not getting Bayrd killed for the things that he tried to do to her. I still feel angry that father missed it. Hell, I'm angry at myself for the same thing, but it wasn't our fault. Just them, Adewyn. Just. Them. I killed one of them, and I'll kill the other one soon. I'll do it so you will be safe and I'll do it so no one has to go through what you did again. No one is hurting you like that again. You...you are precious to me, as you should have been to Tyr or anyone with a heart and sense.\"\n\nWe embraced and I kissed her gently. I think things would have gone a nicer way despite my earlier activity with Merwyd, had I not noticed two things. The first was that Caliban was floating by the table, and sent me anxiety. I had her near me, as I commonly did, but she had her own will and sense and acted on it. Something was happening and she wanted me to know about it.\n\nThe second was that Adewyn's shadow started to grow and rise from the floor, becoming three dimensional. My first thought in my stupor was that it was a demon, but that couldn't have been, we were in the most heavily warded part of the camp and someone would have needed to physically remove or damage quite a few inscriptions to get at us. Regardless, I'm proud to say I did the right thing, even if it wasn't particularly graceful.\n\nI shouted and pulled Adewyn away from her own shadow, which quite unnaturally stayed in place, almost throwing her behind me with one hand while projecting an Arrow of Light with the other. There was a cry of shock from Adewyn but also a grunt of pain from the shadow. It melted away, revealing the corpse of a man in a cowl and hood.\n\n\"Seyla assassins,\" Adewyn said.\n\nI nodded, about to ask her for her opinion on what to do when Caliban simply vanished. That was unexpected, and I'd never seen it before. \n\n\"Did someone take her?\" Adewyn said, confused.\n\n\"No. No-one can force her to come to them. She has to respond to their call, and she can't do so unless she's contacted their mind before and she won't do that unless she likes them...\" I said, trailing off as I realized the actual severity of the situation. I felt Caliban calling out to me, and all I had to do was give her permission to draw me to her, wherever she happened to be. I looked at Adewyn and made a decision, \"Go check on Mother and Raisa!\"\n\n\"What about Mer...\" was all Adewyn got out. I disappeared. This was the farthest trip that I'd taken using this ability, and I would be lying if I said that I didn't feel a little anxiety about it, although I was fairly certain I knew where I was going. Every other time I'd let Caliban call me we'd been in direct line of sight with her. This time it wasn't quite instant, and I saw a flash of shadows and flame.\n\nThen I was in Merwyd's tent, having arrived where Caliban was floating just moments before. Merwyd was on the ground, a man standing over her, holding chains. It seemed like he had just hit her, as her lip was split and bleeding. Standing off to the side, crying, was Gwyn. As I had reasoned, it was she who had called Caliban. She'd been in contact with my spear during the first demon attack. Another two men were closing on the little girl. Caliban was doing her best to interpose herself, but she needed a combatant to wield her to actually fight.\n\nTime seemed to slow for me, as it does when one is in a crisis. The man to the left of Gwyn moved towards her suddenly, viper-quick while the one to her right flanked her. I saw movement from the hand of the man who was standing by Merwyd. I only had time to react to one of them. I loosed lightning at both of the men near Gwyn, easily catching them both and killing them. I aimed high to avoid hitting my niece and the bolt went through the roof of the tent.\n\nI think I had assumed that the gesture was the Seyla drawing a weapon, but I was very wrong. It was magic. Caliban tried to help to protect me, which is the most likely reason that I survived. I was dimly aware of Merwyd killing him with well-placed white flame at exactly the same time I was hit. \n\nI felt incredible pain and pressure in the upper left of my face as sight from my left eye simply winked out. I spun like a child's top, and must have flown a good few paces back into the wall of the tent. I was still trying to recover, or indeed even to think properly as Merwyd and Gwyn ran to me. The fourth man, whom neither of them saw, threw some kind of chains over Caliban. She fell from the air and from my mind as if she were but a common item of bone and steel. Then he simply caught her and carried her away as she dropped into his hands.\n\nI passed out rather swiftly after that. I remember thinking that at least I wasn't going to die alone, as I had thought I would ever since I went out that window years ago.\n\n* * *\n\nI came to, in my tent, maybe a half hour later. I knew what I'd lost. Most of it anyway. The pain was awful but it was bearable. Such is the dubious blessing of the frequently injured. \n\nOctavius was standing over me. While he examined my face and eye, I could hear most of my family outside, probably giving him time and space to work.\n\n\"I can't see out of my left eye.\"\n\n\"That's because its wrecked, son,\" he said, with compassion, \"I'm going to have to clean up the area, and then heal the actual wound. That's all I can do for you, I'm afraid. You might get your sight back eventually, and you might not. Purebloods heal from things that ordinary men do not, from time to time.\"\n\n\"It would have to happen today, of all times.\"\n\nHis eyebrows went up.\n\n\"There isn't a good day to lose an eye. I can give you something for the pain if you want.\"\n\n\"No. I have to fight tomorrow. All of us do. Clean me and heal me and get some rest. You'll need it for all the newly wounded after the battle.\"",
        "He laughed, grimly.\n\n\"You know it's bad when my patients are telling me to sleep. All right, hold still. This will hurt a little, but it will mostly just be uncomfortable. Hold still.\"\n\nI felt peculiar magics, and then water began to pour out of the area of my eye. He was summoning pure elemental fluid directly there. It was uncomfortable, but I felt better afterwards. The healing he did afterwards was brutal and quick, however, and made my eye feel like it was on fire. He finished with simple clean bandages.\n\n\"Tomorrow, replace this with a patch, but keep it covered. It will give you a superior chance to regain your vision.\"\n\n\"Thank you, Octavius. Stay safe tomorrow.\"\n\n\"I'd tell you the same sire but I know you won't, so instead I'll just say good hunting.\"\n\nI shook his hand. I'd never had much use for priests, to be honest. Now I felt differently about at least one of them.\n\nI watched my family members come in. Gwyn was unhurt and Merwyd had developed a black eye and a split lip from her encounter. She hadn't bothered getting it healed prior to visiting me and it didn't appear to bother her at all. She gave me a sweet little smile that reminded me of our encounter earlier in the evening. It seemed like a hundred years ago. Mother and Artan were fine, and in fact she had no idea anything was amiss until Adewyn found her. Since the two demonic attacks we'd kept her location a secret, and apparently the Seyla could not find her either. Adewyn was unharmed as well, thank the gods. But someone was missing. Adewyn looked at me. She clearly didn't want to say it, but she was brave and she knew that she had to.\n\n\"We can't find Raisa.\""
    ],
    "authorname": "LateStageInfernalism",
    "tags": [
        "brother",
        "older sister",
        "younger sister",
        "submission",
        "epic",
        "magic",
        "fantasy",
        "incest",
        "love",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-matter-of-blood-pt-08"
}