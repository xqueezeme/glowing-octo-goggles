{
    "title": "A Certain Tension Ch. 15-20",
    "pages": [
        "Author's note: Well, my friends, I know it's been a wait. Life has gotten in the way, but the story is almost over. One more installment after this and we're there. Thanks so much for your messages, encouragement to keep it going, and all the positive feedback. I hope you enjoy!\n\n<p align=\"center\">~ ~ ~ ~ ~ ~ ~</p>\n\nChapter 15\n\nThere are places in this city that I know so well, I could sketch them with my eyes closed. Places that are as nostalgic as my childhood bedroom. And Rosie's Diner is one of those places.\n\nThe diner itself is fairly unremarkable-- just your standard Manhattan diner featuring a handful of old, worn booths scattered about with a d\u00e9cor that hasn't changed since it opened. It's not the food or ambience that has me so sentimental about the place. Rosie's Diner is just a core part of my childhood.\n\nOne of the things I always appreciated about my parents was that no matter how much money they earned, or how many hotels they opened, they were always grounded. While other private school kids I grew up with spent their weekends being waited on by private chefs and staff, my family spent our Sunday mornings at Rosie's, ordering greasy food and arguing about who gets which side of the booth.\n\nGrowing up, we may not have always had a lot of my parents' attention, but they always made time for Rosie's. I don't even remember fighting with Ian on those Sunday mornings. It was as if there was a truce in Rosie's that we both stuck to, and looking back, those breakfasts are some of my happiest family memories.\n\nWhen my uncle asked to get lunch with me, this is the first place I thought of. Rosie's reminds me so much of my parents that before I came back to Manhattan, I had planned to stay away-- for the rest of my life if I could help it. But something seems to be happening to me on this trip. The pain I've held onto for so long isn't as easy to grip anymore and for the first time, I want to start to let go.\n\nFor once, I feel like being closer to my parents. For once I don't want to push the memories of them away. Everything about being back in New York has made me feel closer to them and I don't know if it's just time that's helped to heal my pain or if it's something-- or someone-- else.\n\nAs I sit here alone waiting for my uncle, I can't help but smile thinking about that someone else. It's only been a day since I've seen the woman and yet my mind seems to be on one constant loop of Annie. There's just no way that I can deny the impact she's had on my trip home.\n\nIt's not as if our situation has miraculously fixed itself-- not even sex as good as ours has that power. But I've also been riding a high since leaving her art studio that I'm not willing to spoil with reality. Or at least not yet. Annie makes me feel like myself again. She makes me feel like the person I thought I lost on the night of my parents' accident. Annie makes me long for the next moment that may come and for a long time I've been stuck solely in past moments.\n\nConsidering she's still with Ian, I should probably regret what happened on Saturday night. But the only thing I regret is that I had to leave her so early the next day. Luckily, Kat was still passed out by the time I got back to the hotel and our group breakfast became a group lunch with nobody even noticing that I was gone all night. Nobody except Holly, who kept giving me meaningful looks the entire time.\n\nI was thankful when my Aunt Sandra gave the two of us time off from wedding duties. Now I won't have to face my nosy cousin again until tomorrow when we're doing a movie night at Kat's. Hopefully, Holly will be distracted by whatever sappy movie Kat chooses and won't focus on me. Not that she hasn't been texting me incessantly. Those are just easier to ignore than her face.\n\nI don't know how to answer her texts and I don't need to confirm what she already knows. Sex is one thing, but the last thing I need is for Holly to know that I also asked Annie out on a date. In fact, the less my cousin knows, the better. While I do trust her, she tends to let things slip when she drinks, and Holly loves to drink at family events.\n\nMy stomach does a flip as I think about that date. Annie and I haven't spoken since I left her studio yesterday morning and I've stopped myself from texting her numerous times. I haven't heard anything from the family about a breakup with Ian, but she never really told me when that was going to happen. Considering how we spent Saturday night, part of me assumed she'd do it right away, but I also know the timing isn't great with Kat's wedding coming up.\n\nI check the time on my phone and see that my uncle is now ten minutes late. Usually, he's as punctual as his daughter, but it is in the middle of a workday, and I know how busy he gets at the Dawson offices.\n\nI turn my phone around in my hands as I think about Annie again. I have no idea what the etiquette is for texting your brother's girlfriend-- or possible ex-girlfriend-- about going out. But I can't exactly play it cool considering I head back to LA in another week.\n\nBefore my uncle gets here, and more importantly, before I can second guess the thing I've wanted to do since I left her studio yesterday, I open a new message and send Annie a text.\n\nHello, Annie.\n\nAs soon as I hit send, I regret my decision. Or at least I regret my decision to say that. But just as I'm about to follow it up with what I'm hoping is something a little bit more charming, I see the three chat bubbles that indicate she's responding.\n\nIt's ridiculous that the sight of her texting me can make my entire body heat up like this, but there's no use telling my body that. I feel a rush of excitement and she's not even here.\n\nUm, hello. Who is this?\n\nI smile at her response. Annie already gave herself away with her little area code trick on Saturday. She knows exactly who's texting her, but if she wants to play, we can play.\n\nCharlie...I think you may remember me?\n\nCharlie...hmm...I'm trying to place you.\n\nSexy blonde. Unbelievable tits. Charming. Gives the new meaning to \"dream girl\"...\n\nOkay, that helps a bit. Did we meet at the club on Saturday?\n\nYes, I was the one giving your orgasms.\n\nI worry for a moment that my text was too forward, but that feeling is erased as soon as Annie's quick response comes in.\n\nOh! Right. That Charlie. I was confused because *that* Charlie asked me out on a date but then never followed-up about it.\n\nIt's only been a day. You must miss me a lot.\n\nA day is a long time to be as wet as I am.\n\nI almost drop my phone as I read Annie's text. The bravado I felt just a moment before is immediately replaced by arousal and once again, Annie has taken control of the situation. I'm so suddenly turned on, that I have to cross my legs to temper the throbbing that's settled in. I look over to the diner door and am relieved to see that Uncle Neil isn't here yet. I don't want this conversation to end, and I really don't want to explain to him why my face looks three shades redder than normal.\n\nI look back to my phone, but before I can think of a response, my phone is buzzing in my hand and there's a new text from Annie.\n\nDid I get you flustered, baby girl?\n\nThe throb I can feel deep within my center only intensifies with her use of that pet name. In my past, I would never have imagined getting turned on by such a submissive term, but with Annie, everything is different and when I think about our Saturday night together, it's one of the things I fixate on the most.\n\nI take a few breaths as I look at my phone. I can't let Annie think she can fluster me this easily-- even if it's completely true. As I type out my response, I try to remind myself that I do have some game.\n\nAn entire day is a long time to be perpetually wet. You should do something about that.\n\nAgreed. Know any good doctors?\n\nUnfortunately, no. I prefer holistic methods, myself.\n\nSounds intriguing. Care to share any with me?\n\nI'm always willing to lend a hand. Or anything else that will help.\n\nHow kind. And smooth.\n\nI wait to see if Annie says anything else, but my phone goes quiet. I don't want our sexy banter to end but I know I'm running out of time, and I did text her for a reason-- one we're clearly now dancing around. If I wasn't afraid of how it would look, I'd ask to see her tonight. But I don't want to rush Annie. For the first time in a long time, I want to do this right. I send another, much more tame text.\n\nHow about we discuss it more in person. Wednesday? 6:00?\n\nWednesday marks our one-week anniversary. How romantic.\n\nShe sends her text with a winking emoji, and I feel a warmth move through my body that has nothing to do with my arousal. Annie has the unique ability to make me feel like I'm on fire in one moment and then a puddle of mush in the next. I attempt to suppress the goofy smile that's growing on my face as I respond, but I'm pretty sure I'm unsuccessful.\n\nI have my moments. Is that a yes, then?\n\nYes.\n\nAnnie had already agreed to this date, so I don't know why her simple answer makes me feel so giddy, but it does. I pause when I see her text bubbles appear again.\n\nAnd what will we be doing, Casanova?\n\nHa. My sister calls me that.\n\nDo I want to know why that is?\n\nThis time the emoji she attaches to her text is of an angry face and the small show of jealousy just makes my smile grow.\n\nMaybe because I like Italian food.\n\nChoo Choo fits you better.\n\nNoted. Now, for Wednesday-- can the Astor Princess get herself to Harlem or does she need an escort?\n\nI'm just going to move past the Dawson Heiress calling *me* a princess. And yes, I can get myself to Harlem just fine. My crown is waterproof.\n\nI laugh at her response and am about to keep the teasing going, but then I see my uncle crossing the street towards the diner and know that I need to put my phone down.\n\nElegant and practical. I'm about to have lunch with my uncle. But I'll send you the address later. And I'll see you on Wednesday?\n\nI see Annie's text bubbles appear before they disappear again. My uncle is opening the door to the diner by the time she finally responds and when I see her response I have to hold in a gasp.\n\nI'll be the one with the soaked undies. See you on Wednesday.\n\nHer text is accompanied by a train emoji, and I'm again confused as to how she can have me turned on and amused at the same time.\n\n\"Hey, kiddo. Sorry I'm late. I had a meeting run over.\"\n\nMy uncle rushes over to my booth as he speaks and pulls me up into a quick hug before moving into the spot across from me.\n\nHis tie is loose around his neck and his jacket is open. He looks more disheveled and distracted than he usually does, but that gives me a moment to compose myself. I'm still vibrating from my final exchange with Annie, so I take a sip of water before I respond.\n\n\"No problem,\" I say, moving a menu over to him. \"The menu hasn't changed so I already know what I want.\"\n\nMy uncle smiles as he looks down at the crinkled, laminated menu in front of him. \"I'm pretty sure the menu hasn't changed since 1979.\"\n\n\"Dad always did like consistency.\"\n\n\"That he did,\" my uncle says, giving me a soft look before turning his attention back to the menu in front of him. \"He always got the Rueben when we'd come here.\"\n\n\"He even did that when it was breakfast time. They'd make an exception and serve him from the lunch menu. Even if it was early.\"\n\n\"I suppose I'll do the same in his memory.\" My uncle sets his menu aside and turns in his seat so he can look around the diner. \"I haven't been here in years. I'm surprised this is where you wanted to meet.\"\n\n\"I'm trying out something new.\"\n\nMy uncle's eyes come back to my face. \"Oh? And what is that?\"\n\n\"Feeling.\"\n\nHe nods quietly. My uncle has always been good at knowing when to push and when not to push and I'm grateful he lets my significant comment come and go without overanalyzing it.\n\n\"And how was the bachelorette party?\" he asks instead. \"Holly says that everyone had a good time. I think your cousin is still hungover.\"\n\n\"It's nothing compared to Kat. Jake already texted me a lecture about letting her get that drunk.\"\n\n\"Your sister is an adult and made her own choices.\"\n\n\"Can you text that to Jake? And while you're at it, tell his mom that I'm a lovely human.\"\n\nMy uncle laughs and it reminds me so much of my dad that I have an immediate craving to hear it again. But before I can continue joking with him, a familiar, grey-haired woman is beside our booth.\n\n\"What can I get for you?\" she asks.\n\nApparently, Rosie's hasn't changed their staff in decades either because I'm pretty sure this is the same woman who used to wait on us all those years ago. Except she looks the same.\n\n\"Waffles, please,\" I say to her.\n\n\"Waffles? It's noon,\" my uncle says in a fatherly tone, lifting one eyebrow as he looks at me.\n\n\"There is no unacceptable time to have waffles,\" I argue. \"Waffles transcend time.\"\n\nMy uncle gives me a judgmental look before turning his attention to the woman. \"I'll have the Reuben and a Diet Coke, please.\"\n\nThe waitress rolls her eyes at us as if we somehow inconvenienced her, but her attitude only makes me smile. Getting bad service at Rosie's is part of the experience.\n\n\"So, you wanted to get lunch,\" I say, once she's left our table. \"As much as I love seeing you, I know this isn't simply for some quality time.\"\n\nMy uncle takes off his jacket and rolls up his sleeves before he turns his attention to me. \"I'll take all the time I can get with you before you disappear again,\" he says. \"Unless you're thinking about staying.\"\n\nMy stomach tightens. My uncle knows I'm still planning to go back to LA-- I have an entire business to run there, and I have a life there now. But verbalizing that is another matter. Because leaving New York means leaving Annie.\n\n\"Why would you think I'm staying?\" I ask.\n\n\"Wishful thinking,\" he responds with a smile. \"But you're right. I didn't just ask you here for quality time. I want to talk to you about The Dawson Hotel Group. As you know.\"\n\nI already knew why my uncle wanted to meet me for lunch. And maybe I've been able to face more of my past throughout this trip than I was expecting, and even if thinking about my parents doesn't hurt quite as much as it did, I'm still not interested in the family business. That's Ian's domain now.\n\n\"We're at a New York diner talking about the family business,\" I say with a smirk, trying to delay the inevitable. \"I kind of feel like we're in the Mafia.\"\n\nMy uncle lets out a quick laugh. \"You certainly are in a better mood than the last time I saw you.\"\n\nI smile before I feel my face grow more serious. As much as I'd love to keep this lunch light, it's hard when I know my uncle wants something I can't give him.\n\n\"That doesn't mean I can help you, Uncle Neil.\"\n\n\"We need to talk about it.\"\n\n\"There's nothing to talk about.\"\n\n\"Charlie, the will--\"\n\nI cut him off before he can say what I've already heard a hundred times. \"I made it clear to mom and dad that I never wanted anything to do with the company. Years ago. So, who cares what the will says?\"\n\n\"You should care that their legacy is being destroyed. And you should care about your future. And what has been financially withheld from you.\"\n\n\"I don't need my parents' money. Kat was taken care of, and I know Ian didn't mess with that. That's all I care about.\"\n\nHe leans back in the booth and shakes his head slightly. We've talked about this before, but this is the first time my uncle looks truly upset with me. \"I'm surprised by you,\" he says.\"\n\n\"Why?\"\n\n\"You seem so precious about their memory. You left here because you were so broken.\" His voice is harder than I can ever remember hearing it. \"But you don't care about the thing they cared about most. Outside of their children that is. The Dawson Hotel Group meant something very important to them. And to me. You don't have to be CEO. You just have to care, Charlie.\"\n\nI turn my water cup around in my hands as I let his words sink in. When I look back up to him, the hard expression is gone, and he looks more tired and defeated than I've ever seen him.\n\n\"Tell me what's going on,\" I reply. Even if I don't want to be involved, my uncle is right about one thing. My parents would want me to at least care.\n\n\"Ian is making a deal. A bad deal. Phillip Astor has been in his ear for too long.\"\n\nMy stomach does a flip at the mention of Annie's dad, but I move past it so I can focus on the topic at hand.\n\n\"The franchise deal?\" I ask. \"He's moving Dawson into the Midwest.\"\n\nOur conversation is paused as the waitress comes back to our table and sets our food down. My uncle looks down at his sandwich with his brows furrowed.\n\n\"How do you know that?\" he asks, bringing his gaze back up to me.\n\nMy mind races as I try to think of a way out of what I just revealed since my uncle knows Ian would never tell me anything about the company. I quickly decide that a version of the truth is probably safest.\n\n\"Annie mentioned something briefly while we were all out on Saturday,\" I say, cutting some of my waffles up even though I'm not hungry now.\n\n\"Right. I forgot she went out with you all.\" My uncle plays with his napkin as he watches me eat, apparently trying to work through his thoughts. \"That's only part of it,\" he continues. \"From what I've been able to gather, one of the companies that Astor Properties is working with is an investment fund.\"\n\nMy uncle looks at me like I should know what he's talking about, but I don't so I take a bite of my waffle and wait for him to go on.\n\nWhen he continues to stare, I swallow my bite and point at myself. \"Artist, remember? I may have grown up in a Dawson house, but I don't really know what any of that means.\"\n\n\"Franchising is one thing if the Dawson Hotel Group maintains ownership. But I've seen the proposal. Your brother is selling the company and our family will lose sole ownership.\"\n\n\"Can he do that?\"\n\n\"He runs the company.\"\n\n\"Why would he do that?\"\n\n\"Your brother knows as much about the hotel business as you do. He may have more interest in it, but he has no real experience besides a few summers when he worked for your dad and me. He's taking advice from the wrong people. People who see a very large dollar sign attached to the Dawson Hotel Group portfolio.\"\n\n\"You mean the Astor's.\"\n\n\"Phillip Astor, more specifically.\"\n\nMy uncle looks like he swallowed something toxic as the name comes out of his mouth, which is the opposite of how I feel anytime I hear the name Astor. But he also looks even more worn down than when he came into the diner. He hasn't touched his food and his entire body is slouched.\n\n\"I don't know what I can do about this,\" I say, pushing my plate aside. \"Why didn't you stop him?\"\n\n\"Ian doesn't listen to me. He doesn't listen to anyone in the company. The only people who can do something are you and your sister.\"\n\n\"How? You just said it. Ian runs the company.\"\n\n\"It's not his company to run.\"\n\n\"How do you know that?\"\n\n\"Because I've seen the will.\"\n\n\"Is everything okay?\" the same grey-haired waitress from before asks as she comes back to our table, clearly oblivious to the cliffhanger she just interrupted and seemingly annoyed that we've hardly touched our food.\n\n\"Perfect,\" my uncle says to her.\n\nHis tone is polite, but I can tell that he wants her to leave. When she looks at me, I just shake my head and the woman walks away, mumbling something under her breath about wasted food.\n\n\"How have you seen it?\" I ask once we're alone again.",
        "\"It's public record, Charlie. I've known what the will said for years. You've never been willing to talk about it.\"\n\n\"You never told me you saw the will.\"\n\n\"Would that have mattered? Do you want to know what it said?\"\n\n\"No.\"\n\nWe're both quiet for a few minutes and I stare down at the table to avoid his gaze. I know I look like a child refusing to face the real-world, but it's only this week that I've even been able to face my parents' death. Whatever my uncle is about to tell me feels like it will bring that precarious progress tumbling down.\n\n\"When your parents died, I just wanted you three to be okay,\" my uncle says quietly, finally breaking our prolonged silence. \"Kat has her clinic and you disappeared. Fighting over the will seemed like it would just destroy the family. I still don't want to do that. As much as your parents loved that company, they loved you three more. They'd tell me to let him destroy it.\"\n\n\"So why don't you?\"\n\n\"Because what your brother is doing isn't right.\" He looks around the diner again, but this time the look of nostalgia is replaced by a deep sadness. \"I understand why you wanted to come here. To feel closer to them.\" His voice breaks as he brings his gaze back to mine. \"That's what the Dawson Hotel Group is for me. It's my life. It was his life. The three of us built it together. I can't lose my brother and this. Please, Charlie. Help me.\"\n\nWhen I don't say anything, he reaches across the table and grabs onto my hand. \"When you wanted to leave, we all let you. I made it clear I wanted you to stay, but we didn't fight it. Because I knew you needed to get away. For you. But it's been four years and now I'm asking something of you.\"\n\n\"I don't know what I can do,\" I reply, looking down at our joined hands.\n\n\"Most of your parents' assets are in the trust, which as you know, Ian also has control over,\" he says, finally moving his hand off mine. \"And I can't see what's in there or what he's withheld from you. But the company was handled in their will.\"\n\nHe pulls over his briefcase and opens it, bringing out a file. He slides it over the table until it's in front of me, but I don't make a move to open it.\n\n\"Now I really feel like we're in the Mafia,\" I say.\n\n\"I don't think the Mafia operates on the upper west side,\" he replies, but his tone is still serious. He points down to the file in front of me. \"That's the will that Ian filed with the court. But knowing you, I have a feeling you won't open it. So let me tell you what's in there. Your parents left the company to the three of you. Evenly.\"\n\nHis words hang heavy between us, but they don't surprise me. I think I've always known that my parents did that. To them, the company was a legacy that belonged to all of us. But they always put too much trust in Ian and their hope that one day we'd all put our differences aside was unrealistic.\n\n\"You two can stop him,\" my uncle continues.\n\n\"If I bring this up to him, you know what will happen. He'll just tell me to fuck off. So what am I supposed to do? Take him to court?\"\n\n\"That's one option.\"\n\n\"Any others?\"\n\n\"Kat. She's the only person he listens to. I think Kat can make him see reason.\"\n\n\"Kat's getting married in five days. I can't bring this up to her now.\"\n\nMy uncle lets out another deep sigh. \"I know that,\" he says, rubbing a hand over his face. \"But this Astor deal is getting close. As soon as the wedding is over, you need to talk to her.\"\n\nMy mind is racing now. Between Annie breaking up with Ian and this mess, I'm going to be putting a lot on my sister right after the happiest day of her life. My plan to come quickly into New York before slipping back out again is proving impossible. I'm like a bulldozer that's come in to ruin my sister's life. A life she's worked hard to come by.\n\n\"Eat,\" he says, pointing to my food and finally moving his uneaten sandwich in front of him. No matter what tension is happening at the moment, a Dawson never wastes food. \"Take a look at it. We'll talk in a few days at the rehearsal dinner.\"\n\n\"Okay,\" I mumble, my mind still thinking about my sister and how much all of this will devastate her.\n\nI watch my uncle eat but I have a very different feeling in my stomach than when he walked into the diner, and I've lost my appetite. All the sexy excitement I was feeling earlier is now dimmed in light of what he just asked of me.\n\nI suppose I was na\u00efve to think I could just slip in and out of New York like it was nothing. This city has a way of moving and shaking even when I'm trying desperately to stand still.\n\nChapter 16\n\nAn address? You just sent me an address? That's kind of creepy.\n\nI tip my phone away from my sister and cousin, but I know I'm not able to hide the smile that suddenly appeared on my face the moment I saw Annie's name come across my phone screen.\n\n\"I said no phones during the movie, Charlie,\" my sister says from the couch where she's sitting with Holly.\n\n\"You've been on your phone the entire night,\" I argue back.\n\n\"Talking to my fianc\u00e9. About wedding planning. Because my wedding is this week.\"\n\n\"It's bad enough you have us doing a bridal movie marathon. Are you going to continue mentioning your wedding every sentence?\" I ask.\n\nMy sister sticks her tongue out at me but smiles right after. She knows I'm not being serious and that she's welcome to talk about her wedding as much as she wants. But I'm also not going to pretend that I'm paying any attention to the horrible movies she's put us through for the past six hours.\n\nKat claims she's still hungover from Saturday and needs a movie night to recharge while Jake is hanging out with his parents. I don't mind since it gives me the chance to hang out with my sister and cousin without Holly being able to corner and interrogate me about things. Not that I can't tell that she wants to with the raised eyebrow she keeps directing my way. I've also ignored about fifteen texts from her about the situation since the weekend.\n\n\"What next?\" Holly asks when the credits finally roll for whatever movie we were just watching.\n\n\"Can we please watch something that's not a Hallmark movie?\" I ask, hoping it will launch the two of them into another half hour debate on what to watch so I can text Annie back in peace.\n\n\"Father of the Bride is not a Hallmark movie,\" Kat says. \"It's a classic.\"\n\n\"I'm with Charlie on this one. I'm beginning to hate weddings. And movies. And love,\" Holly says, throwing her head back onto the couch. \"Please put on something else. Or we can go out. I feel like I've melted into this couch.\"\n\nKat shakes her head. \"I know what going out with you means. And I'm still recovering from the last time we went out.\"\n\n\"You're so dramatic,\" Holly replies with an eye roll. \"That was three days ago. I think you're fine.\"\n\n\"Yes, but I drank almost every drink that was available on the lower east side. I think I'll need at least two more days to fully recover.\"\n\n\"Or maybe you're just trying to avoid hanging out with Jake's parents,\" I say.\n\n\"There is no avoiding his mother, believe me. She's everywhere. I'm surprised she lets me pee alone. So, I can't lie. I am quite enjoying this relaxing reprieve from her.\"\n\n\"I think that's the first time I've ever heard you say something negative about someone,\" Holly says with a fake gasp.\n\n\"That's not true,\" Kat argues. \"I say mean stuff about Charlie's ex all the time.\"\n\n\"She does. All the time,\" I respond.\n\n\"Oh, well that's warranted,\" Holly says. \"Jen sucks.\"\n\n\"I still think you're crazy for not going for Lilly,\" Kat says as she grabs the remote and hands it to Holly.\n\n\"They don't even live in the same city,\" Holly says, giving me a quick glance before looking down at the remote in her hand. I'm thankful that she easily smoothed over that topic for me. I don't want to have a repeat conversation about why Lilly isn't right for me. \"Does this mean I get to choose what we're watching?\" Holly then asks Kat.\n\n\"Only because you're being annoying about it,\" Kat responds. \"And anyway, if Charlie fell in love with someone here then maybe she'd stay. You can't blame a sister for trying.\"\n\n\"There's still time,\" Holly says, giving me another significant look. \"Maybe she will.\"\n\n\"I won't hold my breath,\" Kat says.\n\n\"Since you two don't seem to need me for a conversation about me, I'm going to go find more snacks,\" I say, coming up with any excuse to be alone with my phone for a moment.\n\n\"There are chips in the top cabinet,\" Kat says as I pass them on the couch, causing me to stop abruptly and turn to her.\n\n\"There are chips in this apartment, and you've been making me eat paper?\"\n\nKat rolls her eyes as she looks up at me. \"It's not paper. They're quinoa chips. They're healthy.\"\n\n\"Those are not chips, Kat. They taste like the arts and crafts I give my students,\" Holly says, pushing the bag on the coffee table aside with her foot. \"Get me some real chips.\"\n\n\"Only one of us has to fit into a wedding dress this weekend, so hush,\" Kat says.\n\nI look at my sister fondly as she shoves a \"chip\" into her mouth and gives us an overexaggerated hum of approval and I can't help but laugh. Kat is just one of those people that can easily make people smile and I've missed her personal brand of silly.\n\n\"Stop. You're going to be the most beautiful bride anyone has ever seen,\" I say to her softly and then nod to the offending bag of chips. \"Even if you have a Dorito.\"\n\nKat smiles up at me. \"Thanks, sis. But sorry, we don't have Doritos.\"\n\n\"Well, I'm going to go see what you do have.\"\n\nI wait until I'm all the way out of the room before I pull my phone out of my pocket. A smile quickly grows on my face as I read Annie's last text to me again. If I take too long in the kitchen, Kat or Holly will come find me, so before I respond to Annie, I look through Kat's top cupboard to see if I can find some popcorn to make.\n\nLuckily, there's a box in there and I'm grateful that it's butter and not infused with something gross like Kale or sunflower dust. You never really know with Kat and I'm guessing this box is Jake's.\n\nAs the popcorn begins to cook in the microwave, I open Annie's text so I can respond.\n\nSending you an address is creepy? I seem to remember you doing the same thing to me on Saturday night.\n\nI have a feeling that Annie was waiting for my text, because only a second later, I can see three bubbles indicating that she's typing.\n\nThat was different. I was sending you to my art studio.\n\nAnd where am I sending you? A dungeon?\n\nI thought this was a 'no sex' date? Now we're talking about dungeons?\n\nHer text makes me laugh out loud so I pretend to cough to cover the sound. I send her a response just as the microwave beeps.\n\nMaybe your mind is just in the gutter, Ms. Astor.\n\nIf Annie is in the mood to text, I don't want to stop that. I'll just have to be subtle about my texting in front of Holly and Kat.\n\nAs I come back into the living room with the popcorn, Holly and Kat hardly even notice me. Holly is staring intently at the TV and Kat is hiding her face behind a pillow.\n\nWhen I look at the screen, I'm not surprised at all to see that Holly chose some horror movie to make Kat suffer through-- Kat who used to get scared by animated musicals. And according to Jake, she still sleeps with a nightlight on.\n\n\"I made popcorn,\" I whisper as I set the bowl down onto the coffee table. Kat stays behind her pillow, but Holly immediately grabs a handful of popcorn as she continues to stare at the screen.\n\nI move back to my chair and pull out my phone. I don't even need to be subtle at this point-- Holly's choice of movie created the perfect distraction. When I look back at my phone, there's a new text waiting for me.\n\nThat's entirely possible. When it comes to you, my mind seems to always be in the gutter.\n\nI have no idea if her use of the word 'come' was intentional, but it's like an instant shot to my pussy. And as much as I'd love for this conversation to go that way, I'm hyper aware that my sister and Holly are sitting only feet away from me.\n\nYou know you could just google the address... modern technology is incredible.\n\nI include a winking emoji in my text so she knows I'm just teasing and put all my power into not smiling in case Holly looks over here.\n\nI did Google it, sass pants. It's just a building.\n\nMy smile grows as I read her latest nickname for me.\n\nThen I don't know what the problem is. You can see it's not a dungeon.\n\nThe problem is attire. How am I supposed to know if what I chose to wear is appropriate for this secretive date?\n\nJust dress like you usually do. You always look beautiful. We aren't going anywhere fancy.\n\nI can't stop the rush of butterflies that fly through my stomach or the smile that just keeps growing on my face. The fact that Annie is stressing about what to wear indicates she's as excited about Wednesday night as I am, and I can't believe I have to wait another day.\n\nI can see that Annie's typing, but the text bubbles keep appearing and disappearing and it's adorable that she seems to be overthinking what she wants to say. As her next text comes in, I feel an instant rush of heat hit my face.\n\n...would you like to see if what I chose is appropriate?\n\nMy fingers move to reply so quickly that I almost drop my phone.\n\nYes.\n\nAre you sure? That doesn't seem very enthusiastic.\n\nMy fingers can't seem to type as fast as I want them to and I should probably be embarrassed at how eager I sound in my next response, but I'm too curious to know where this is going to care much.\n\nYes. Please. Show me. Please.\n\nThat's better. And I like your manners, baby girl.\n\nI wait for Annie to send another text, but nothing comes in for a couple of minutes. My eyes move to the movie Holly and Kat are watching, which only seems to have gotten gorier and more intense. When I see the front of my phone light up, I open the new text and this time, I actually do drop my phone.\n\n\"Whoa there, Sparky,\" Holly says looking over before her eyes dart right back to the movie. \"Is the move scaring you?\"\n\n\"Here,\" Kat says, throwing a pillow over to me. \"Put this over your face. It helps.\"\n\n\"Thanks,\" I murmur as I pick up my phone.\n\nI position the pillow on the side of the chair, giving me extra coverage-- coverage that is now essential as I look down at an image of Annie on her bed wearing nothing but a black bra.\n\nShe's laying down and looking up at the camera with a mischievous expression and all I can seem to do is stare with my mouth hanging open.\n\nYou can answer now.\n\nHer text causes my mouth to close but my whole body is shaking now, and my fingers don't seem to want to cooperate.\n\nOf course, over the years, I've received sexy photos from women. But nothing that has paralyzed me quite like this. Artists around the world would sell their fortunes for one glimpse of such a perfect model. Each curve and angle were meant to be painted. Not for the first time my fingers ache for a brush. But I know that would be futile. Annie is the art. And live art like this can't be replicated.\n\nI finally take a few deep breaths so I can respond.\n\nWell, that's not fair.\n\nWhat's not?\n\nI didn't realize you weren't dressed.\n\nHow is that unfair?\n\nBecause you're really hot and I'm here and not there.\n\nYou could always remedy that by leaving wherever you are to come here.\n\nI feel another shot go straight to my pussy.\n\nDon't say 'come'. This is hard enough.\n\nPoor, baby. But you still haven't given me any feedback on my outfit choice.\n\nI'm a fan. To say the least. But you might get cold? It's December.\n\nHmm. Very logical. I'll have to re-think my choice.\n\nMaybe just throw a scarf over it?\n\nYou're really not going to tell me where we're going?\n\nI take it you're not very good with surprises.\n\nI'm just impatient to see you.\n\nI wasn't expecting Annie's honest response and my body warms in an entirely different way than it had before. Annie's always had a way of disarming me with just a simple word or look and her text doesn't fail to do the same.\n\nI take another deep breath and slowly type out a response. My finger hovers over the send button, but if Annie can show some vulnerability, I should reward her with the same. Finally, I hit send.\n\nSeeing you is all I've thought about since Saturday.\n\nSo, you're saying you like me then?\n\nI more than like you, Annie.\n\nMy eyes stare at the text I just sent. I didn't even think before I sent that-- as If my fingers had their own agenda.\n\nWhen I can see Annie's text bubbles appear and disappear again, I immediately regret being so honest. That was something I should have said in person, and I probably just freaked her out. I don't even know what's happening with Ian and I should probably hold off on spewing romantic statements until I do.\n\nI've almost resigned myself to watch whatever movie is on the screen when a new text appears on my phone.\n\nI more than like you too. And it scares me. I wasn't expecting this. Or you.\n\nBefore I can respond, she sends another text.\n\nI don't know what to do.\n\nI don't know if Annie is talking about her feelings for me or her situation with Ian, or both. I stare at my phone and chew my lip. This is the Annie I want. Open and free and raw. But right as a woman screams for someone not to kill her on the screen, I decide that maybe this conversation would be better face to face.\n\nLet's start with our date. And then we can figure things out. I'm taking you somewhere that means a lot to me (not a dungeon).\n\nI'm relieved when Annie sends a laughing emoji and then another, lighter text.\n\nI look forward to it. And on that note, this grandma is taking herself to bed. We're not all on a two-week vacation. Some of us have work in the morning.\n\nHer text is accompanied with a winking face, and I feel a sense of relief and regret. I still don't think we should process all these intense emotions over text, but I'm also disappointed that our conversation is coming to an end. I send her a response.\n\nI'll think about you when I'm sleeping in tomorrow and lounging around until our date.\n\nWell now you're just being mean. Careful, Choo Choo.\n\nCareful? What are you going to do from over there, darling?\n\nHmm, I guess nothing. By the way, I thought you might want to see my updated date outfit. I think the scarf works.\n\nAnnie sends another photo along with her text, which looks like the last one, but this time she's lost the bra and a bright red scarf is loosely covering her bare tits.\n\n\"Fuck,\" I say out loud.\n\n\"I know,\" Kat says, her voice muffled behind her pillow. \"I hate this movie.\"\n\nI'm grateful my sister thought I was talking about the movie and not the image that's currently in my hand of our brother's half naked girlfriend.\n\nI've never met a woman as naturally confident as Annie is. She knows the exact effect she has on me, and I feel frozen to do anything but stare.\n\nNot a fan of red?\n\nAnnie's follow-up text makes me smile and I type out a response, even though I feel more turned on than I should be in my current predicament.\n\nBig fan. And touch\u00e9. You win. Skip work and come sleep in with me.\n\nI thought we agreed not to use the word 'come?'\n\nI broke the rule.\n\nGood to know you're willing to break rules. I'll have to keep that in mind tomorrow. Goodnight, Choo Choo.\n\nGoodnight, Annie. Looking forward to tomorrow.",
        "I set my phone down after I sent my final text, but there's nothing I can do about the smile that seems to be stuck on my face. Thankfully, I don't have to school my features for long because it's about then that Kat pauses the movie and throws her pillow at the screen, pulling all the attention to her.\n\n\"Holly, you're never choosing a movie on Wedding Movie Night again.\"\n\n\"I think you just made up that night. And you just paused the film at the best part. You have to see what she does,\" Holly responds.\n\n\"Wait,\" Kat says, holding up her hand. \"You've already seen this horrible thing you've made me sit through?\"\n\n\"We've only seen like 30 minutes of it, but yes. I've seen it. And technically it is a wedding movie.\"\n\n\"The groom was trying to hunt down and kill the bride,\" Kat responds.\n\n\"Exactly. Bride. Groom. Just slightly more blood.\"\n\nKat gets up and throws Holly the remote. \"You two finish it then. I have a facial in the morning so I'm going to bed.\"\n\n\"It is past ten. I'm surprised you're still awake,\" I say to my sister as I stand up to give her a hug.\n\n\"I know,\" she replies, pulling me into her. \"You guys broke me. I'm a party animal now.\"\n\n\"You should change your clinic name to that. Specialize in hamsters,\" Holly jokes.\n\n\"Why hamsters?\" I ask.\n\nHolly looks at me like I'm an idiot. \"Because they have little parties in their cages at night. My college roommate had one.\"\n\n\"Well actually, many animals that are nocturnal--\" Kat begins to say before Holly cuts her off.\n\n\"Weren't you heading to bed?\"\n\n\"Fine. Remain ignorant,\" Kat says playfully. She then moves over to Holly and pulls her in for a quick hug. \"And anyway, I'd have to pass this new clinic idea by Jake. He hates hamsters.\"\n\n\"And the patriarch wins again,\" Holly says, releasing Kat.\n\nUsually I'd join in the banter, but I'm still so distracted by Annie's texts that I'm relieved the night is coming to an end. I want alone time so I can read our conversation again-- and look at those unbelievable photos.\n\nKat moves to the door on the other side of the room but turns as soon as she gets to it. \"Charlie, you can stay on the couch if you don't feel like going back to the hotel.\"\n\nI shake my head but smile at my sister. \"Thanks, but I'm going to head back now. All my stuff is there and I'm sure you and Jake want some alone time.\"\n\n\"If his mom ever releases him to me,\" she says, leaning her head against the door and letting out a small sigh. \"Thank god Ohio is states away from Manhattan. I'll see you guys on Thursday. Thanks for watching trashy romance with me.\"\n\nKat makes a kissing face and then opens the door to head down the hall to her bedroom. The room is suddenly silent, and I don't remember another time that I felt this awkward with Holly.\n\n\"What's happening on Thursday?\" I ask, doing anything I can to sound casual even though I know this is exactly what Holly has been wanting-- to get me alone.\n\nHolly looks at me and then lets out a loud laugh. \"What's Thursday? You truly are the worst Maid-of-Honor ever.\"\n\n\"Holly, we always knew I was going to be bad at this. Mom and dad missed my graduation because I gave them the wrong day. Kat knew better than to do this to me!\"\n\nShe playfully rolls her eyes at me. \"How do you run a gallery?\"\n\n\"With help. So, what's on Thursday?\"\n\n\"The bridal lunch with the bridesmaids. It's all in the packet my mom sent you. And we have our final fitting before that.\"\n\n\"Right. The packet. I totally read that. And the lunch is where we take the bride...to lunch?\"\n\n\"No. She takes us to lunch as thank you for being helpful with the wedding.\"\n\n\"Do I have to go then?\" I ask with a smirk. \"I haven't been helpful.\" Holly just raises her eyebrows at me in a way I'm sure her students have seen once or twice. \"And Friday is the rehearsal dinner,\" I add proudly, finally remembering one of the events.\n\n\"Bingo. See? I am a good teacher.\"\n\n\"And an asshole.\"\n\n\"Only you think that. Anyway, are we finishing the movie?\"\n\n\"No, that movie was terrible. I'm going back to the hotel to sleep.\"\n\n\"How would you know it was terrible? You were texting the whole time. And how is Annie?\"\n\nI narrow my eyes at her trying to decide if I should be truthful or not. But ultimately, this is Holly and I know I can't lie. So instead, I decide not to answer at all, and I busy myself by going over to the chair and grabbing my coat.\n\nHolly lets out a harsh laugh at my nonresponse. \"It's as if you think four years away could erase an entire life together. I know you. And I can tell when you're texting someone you like. That's how you looked when you met Jen.\"\n\nI stop myself from telling her that what I felt for Jen pales in comparison to what I feel for Annie. And I really have to stop myself from thinking about those photos she sent again.\n\nI meet Holly's gaze for a moment before I speak. \"She's fine.\" I then turn and head towards the hallway that will take me out of the apartment.\n\n\"That's all you're going to tell me?\" Holly asks as she follows me down the hall.\n\n\"There's nothing to tell. And keep your voice down. I don't want Kat to hear.\"\n\n\"Well, you still haven't told me what happened after the bar on Saturday.\"\n\nI turn once I'm at the door and lean against the wall. It's not like I can just walk out in the middle of Holly's interrogation, so I resign myself to finishing this conversation.\n\n\"Nothing. We talked.\"\n\n\"That's all? You talked?\" she asked with a skeptical eyebrow raised.\n\nI take a deep breath and close my eyes as my head falls against the wall. I slowly let out the breath before opening my eyes and leveling my gaze at Holly.\n\n\"No, Holls. We didn't just talk.\"\n\n\"And have you seen her again?\"\n\n\"No.\"\n\n\"Are you going to?\"\n\n\"Well, I suppose she'll be at the wedding.\"\n\nI decide not to tell her about our date. She'll find out eventually, but this is probably the worst place to discuss that.\n\nHolly stares at me for an uncomfortable amount of time before she speaks in a steady, quiet voice that I'm not used to hearing from her.\n\n\"Shit happens, Charlie. If you like her, the family will get over it--\" I start to interrupt her, but she puts her hand up. \"Even Kat. She loves you and I don't think she's under some assumption that those two are right for each other. If you like her, tell her. This family deserves some happiness and if she makes you happy, don't let that go.\"\n\nHolly's words almost take my breath away. I feel a tear sting the corner of my eye and while it doesn't fall, something in me finally wants to let go and just confide in my cousin.\n\n\"I'm seeing her tomorrow night,\" I say quietly.\n\nHolly's face doesn't look as surprised as I thought it would and she leans against the wall opposite me.\n\n\"I assume she hasn't ended things with Ian?\"\n\nMy stomach tightens. \"I don't think so. Not yet at least. This has all happened really fast.\"\n\n\"Why are you seeing her tomorrow?\"\n\nHolly's voice isn't judgmental-- if anything, it's gentle.\n\nI let out a long sigh. \"I don't know. Because I'm an idiot who wants to see her again. Because I always want to see her. Because I want her to experience life outside of her parents' clutches. Because she deserves so much better than Ian. And I don't know, probably because I've fallen in love with the girl.\"\n\nI said the last part way too loudly and look down the hall to make sure it's still dark and quiet.\n\nHolly puts her hands up in the \"time-out\" position and sometimes it seems like she really can't help but be a teacher. \"Let's deal with one 'because' at once. She hasn't broken things off with Ian.\" She waits for me to nod. \"That makes sense considering how fast all this has happened. And the wedding is coming up and I'm sure she doesn't want to ruin things for Kat. On to the next one. You want to see her. So what? Charlie, maybe it's not the worst thing that you feel something for someone again.\"\n\n\"I feel things for people,\" I say, but even I can hear how defensive I sound.\n\n\"Outside of family? Annie seems to make you excited. You know how long it's been since I've seen you look like anything but a bored sloth?\"\n\n\"Uh, thanks?\"\n\n\"The point is that, yes, this is messy. And Ian will be mad. But everyone could get over it if she's your person.\"\n\n\"I live in LA, Holls.\"\n\n\"Yeah, why exactly?\"\n\nThis time I let out an even louder, more exaggerated sigh. \"I have a life there. I own a gallery.\"\n\n\"Oh, and we have no art here in New York,\" Holly responds sarcastically. \"If nobody else will say it, I will. And I only am because of what's happened with Annie. You're in LA because you ran. Because you can't handle the hurt of being here. For fuck's sake, you owned a gallery here. You could have owned dozens with our name.\"\n\nI push off the wall and take a step closer to her, so I don't have to shout. \"You don't think I know why I left? I know I'm a coward. But I can't handle being here. I had to leave.\"\n\n\"And what about leaving Annie? How will that feel?\"\n\nThe anger I felt just a moment ago dissipates in an instant and I rub my hand against my face and take a step back. \"I hardly know her, Holls,\" I whisper.\n\nHolly gives me a small smile before she shakes her head. \"Charlie, I've known you through every gay phase you've ever had. Like that time you only dated vegans even though you hate most vegetables.\" We both let out a small laugh at the memory. \"But one thing I've always admired about you is your ease. You're just so smooth and confident. I've always wanted your blas\u00e9 attitude with women. But I've never seen you like this. You're like a puddle. Annie has affected you and even from the small exposure I've had, I can see that. You really think you can just walk away from that?\"\n\n\"It's so much more complicated than that.\"\n\n\"Everything in life is fucking complicated. Let me ask you this. How has it felt being back?\"\n\nI know what she's asking, and I take a moment to really process the question. Parts of being back in this city have still felt heartbreaking. But more than I could have ever imagined, it's also felt good. Like I'm back in a home that doesn't continuously remind me of what was lost.\n\n\"It's not as hard as I thought it would be.\"\n\n\"Then maybe see her tomorrow. With an open mind. And see how you feel. No location is permanent. No decision is permanent.\"\n\n\"What about Kat?\" I ask after a long pause.\n\n\"You mean about Ian and Annie?\"\n\nI nod.\n\n\"She'll be upset. She loves Ian too. But she wants you to be happy. And she'd give just about anything to have you back in Manhattan. Just wait before you tell her. Because if you ruin her wedding, the dinner menu will be updated to offer fish, chicken, or Charlie.\"\n\n\"That's disgusting\"\n\n\"You're right. There is no way enough of you could feed 150 guests.\"\n\nI roll my eyes as I pull my cousin into a hug. \"I'm going to head out. Thanks for talking.\"\n\n\"I love you. But that wasn't talking. That was me prying things out of you with a forklift.\"\n\n\"Whatever works,\" I reply, winking at her before grabbing the door. \"See you Thursday for the Bridal Brunch.\"\n\n\"Bridal lunch.\"\n\n\"Bridal Brunch has a better ring to it,\" I say as I walk out the door.\n\n\"I'll be sure to bring it up to the official Wedding Association,\" Holly shouts after me.\n\nI wave back to her, shaking my head. As I walk down Kat's street waiting for a cab to pass, I start to shiver. I have a coat on, but I'm pretty sure my shaking has nothing to do with the temperature outside and has everything to do with what I just told Holly. My own words keep rolling around in my head as I walk.\n\nI don't know, probably because I've fallen in love with the girl.\n\nI didn't really need Holly to tell me what I already know-- I've never felt for anyone like I do about Annie. But what to do with those feelings is what is causing my stomach to tighten. Beyond the hurt I'd cause to Kat, can I really come back to this city? For a woman I just met?\n\nChapter 17\n\n\"Annie.\"\n\nI open my hotel room door without even thinking to see who was on the other side. I'm just so used to Dawson hotel employees dropping off random things at all hours that I didn't even think to look through the peephole. If I had known Annie was on the other side, I would have at least combed my hair quickly. Or changed my shirt. But it's also two hours before we're meant to meet, and I wasn't expecting to see her here.\n\nAnd yet here she is, looking stunning in a long red peacoat and tight black pants. Her hair is falling over her shoulders and it's clear it's cold outside because she has an adorable flush to her cheeks.\n\nAnnie's lips slide into a slow smirk as she stands there confidently-- as if she's pleased with herself for catching me so off-guard.\n\n\"I like the way you say my name,\" she says, leaning against the doorway.\n\n\"How do I say it?\"\n\n\"Like it's the most delicious thing that's ever rolled off your tongue.\"\n\nI open my mouth to respond but nothing comes out, so I close it again. Annie's sudden presence here and her easy swagger has disarmed me unusually fast.\n\nAnnie's smile grows as she looks at me before she leans in and speaks in a much quieter voice. \"It's probably safer for me to come into the room. Unless you'd prefer to keep standing there and staring.\"\n\nHer confidence seems to increase every time I see her, and all it does is cause my own attraction to grow. \"No, it's not safe,\" I manage to get out in a hoarse voice.\n\n\"Which is why you should maybe let me in?\" she asks slowly, raising one, sexy eyebrow.\n\nIt's clear I can't trust my voice right now, so I simply open the door for her to come in. Before she moves fully into the room, she stops in front of me and looks at my hair. She pushes some of it aside before dragging one finger down my cheek.\n\n\"You look so sexy when your hair is a mess,\" she says before moving past me into the room.\n\nMy legs feel unstable as I follow her in, but the main thing I feel is regret as I watch Annie and see where her gaze has landed. If I had known she was coming, I would have made my bed, but as of now, it's a complete mess with clothes thrown all over it.\n\n\"Sorry, I wasn't expecting you,\" I mumble.\n\nAnnie turns to me with a look of amusement on her face. \"I'll forgive you for not making your bed. You're in a hotel after all.\"\n\n\"Maybe I should tell you now that I rarely make it at home too.\" Thankfully, I can feel my voice becoming steadier than it was when she first arrived. Maybe I can talk if I'm not right next to the woman.\n\n\"We can work on that,\" Annie says, looking back to the bed.\n\n\"We can?\"\n\nAnnie gives me a small smile before turning and walking over to a chair that's on the other side of the room and setting down her purse.\n\nShe turns back to me and stands there as if she owns the room. As if I'm in her space now. \"I know we didn't agree to meet here.\"\n\n\"We didn't. But I'm not complaining,\" I reply, looking down at the old t-shirt and ripped jeans I'm wearing. \"Though, I was going to change. If I had known you were coming, I would have made myself look a little less like a teenage boy.\"\n\nAnnie lets out a quick laugh before her face becomes serious and she walks slowly over to me. Once she's in front of me, she lightly plays with the hem of my worn shirt.\n\n\"That's not exactly how I would describe you,\" she says, bringing her eyes up so they can land on my lips.\n\n\"How would you describe me?\"\n\nAnnie lets out another laugh, but this one is quiet and sexy, and her eyes never leave my mouth.\n\n\"Are you okay, Choo Choo?\" she asks, finally making eye contact with me. \"Your voice just got very.... raspy. Do you need some water?\"\n\nAs her smile grows, so does the wetness in my panties. This version of Annie will always have me wrapped around her finger and by the look on her face, she knows it. I simply shake my head, not trusting my voice again.\n\nShe brings her hands up and pushes some of the messy hair out of my face and behind my ear-- not that it will stay there.\n\n\"Do you know why I like your hair so messy?\" she asks.\n\nI shake my head, too mesmerized by the glint I can see in her aqua eyes to speak.\n\n\"It reminds me of you on your back,\" she says in a quiet voice. \"How you look after I've fucked you.\" She then moves the hand that was on my hair down my neck until she can lightly play with my collarbone. \"And I like you in this outfit. Don't get me wrong, you looked beautiful at the club. But you look even better like this. It reminds me of the first night we met.\"\n\nAnnie moves both of her hands around my back and trails her fingers down until they're resting on my waist. \"So, to answer your question, I guess I would describe you as my perfect brand of sexy.\"\n\n\"Does that mean I don't have to change?\" I ask, but her face is so close to mine that it's becoming almost impossible to keep the conversation going without kissing her.\n\n\"Considering I don't even know where we're going, I can't answer that. I'm here for a different reason.\"\n\n\"Which is?\"\n\n\"To discuss loopholes.\"\n\n\"Should we move our mouths farther apart to do that?\"\n\n\"Not necessary,\" she replies before lightly swiping her tongue against my mouth and sending an instant shiver down my spine. \"Be strong, baby girl.\"\n\n\"And what are these loopholes?\" I ask, doing my best not to shake from the extreme arousal I feel growing with every breath I can feel hit my lips from her mouth.\n\n\"I'm sure it's not lost on you that I'm early for our date. And I'm not in the location you sent me.\"\n\n\"This has not been lost on me.\"\n\n\"Then technically our date has not yet begun.\"\n\n\"This is true. We are outside of technical date time.\"\n\n\"And if I remember correctly, the 'no sex' rule only applied to the date.\"\n\nAnnie pushes gently on my waist until I'm moving backwards towards the door. I allow her to move me easily, too turned on by this little game to stop it.\n\n\"Also true,\" I reply.\n\nI suddenly feel my back hit the door, and Annie presses her body into mine. She leans in and I can feel her lips lightly hit my ear, sending another shiver down my body that I know she can feel. \"I guess that means I can fuck you right here and we're not breaking any rules.\" Her lips latch on to my ear right before she drags her tongue down my neck.\n\nI close my eyes and let my head fall back against the door. Her lips feel so good against me that I don't even remember why I made the stupid rule to begin with.\n\n\"I've always been a rule breaker anyway,\" I say, finally opening my eyes when Annie's lips leave my neck. Her eyes are cloudy, and she looks ready to devour me.\n\n\"I had a feeling that might be the case. But just to make sure we're at least trying to follow the rules, I think I'll just fuck you against this door. Not in the bed.\"\n\n\"You may be the smartest woman I've ever been with,\" I pant out as my head hits back against the door again.\n\nAnnie pushes off my waist so there's more space between us and the lack of contact causes my eyes to open and my head to lift. When I look at her face, both of her eyebrows are raised.\n\n\"Shall we continue to talk about your past women, or would you like me to fuck you so hard you forget about them forever?\"\n\nI've never been one for possessiveness, but Annie's show of jealousy, which was still dripping with confidence, has me even more turned on.\n\n\"What women?\" I ask.\n\n\"Good girl,\" she says as she moves back into my body and captures my mouth in a kiss.\n\nThis kiss isn't slow, and it doesn't build. It's not romantic or sensual. Annie takes my mouth like she has so many other times. Like she needs it for survival. Annie's desire is so potent and raw that I let out a moan as her tongue slides its way into my mouth and takes what it wants. In this moment, everything else falls away and I would choose kissing Annie over anything else in the world.\n\nBefore I'm ready, she pulls her mouth away from mine and the moan of frustration I let out doesn't even embarrass me.",
        "Annie looks at me but she's no longer smiling. The easy banter and amusement she wore so easily is gone-- replaced by a look of pure arousal.\n\n\"Unbutton your jeans and slide them down your legs,\" she commands. \"But leave them at your ankles.\"\n\nI move my hands to my buttons and as soon as I do, I'm rewarded with Annie's mouth back on my own.\n\nIf the last kiss was passionate, this one is purely erotic. Almost messy. Our tongues slide against each other with no rhythm or strategy, and I can feel Annie moan loudly into my mouth as I push my pants down my legs.\n\nWhen she breaks her mouth away from mine again, I don't complain. I need to take a breath and by the way Annie's own chest is rising and falling, I can tell that she does too.\n\n\"You look so fucking sexy standing there like that,\" she says in a breathy voice, looking down my body. \"Now take off your shirt.\"\n\nI playfully narrow my eyes at her before I do what she asks. She smiles at me as if she knows exactly what I want from her.\n\n\"Please,\" she says sweetly, her smile growing.\n\nI move my hands down to the hem of my shirt and pull it quickly off my body. But instead of throwing it aside, I dangle it on one finger for her. I love the way Annie likes to dominate these situations, but I'm not going to submit so easily. \"You wanted this?\"\n\n\"Thank you,\" she says dryly before taking it and dropping it on the floor and raking her eyes all the way up my body-- slowly as if memorizing every inch. \"Charlie, I could never tire of seeing or touching you. But most of all, tasting you. May I?\"\n\nI nod and at this point I don't care what or where she touches. I just need her everywhere.\n\nAnnie dips her head and takes one of my nipples into her mouth before moving her tongue across my chest so she can taste the next. She continues switching back and forth in a slow, torturous pace that has me squirming against the door.\n\n\"Fuck, baby. Please,\" I pant out.\n\nI feel a vibration of laughter against my nipple before she lets it go with a pop. \"Please? How vague. Please what?\"\n\n\"Touch me, baby. Now.\"\n\n\"God it's hot when you're demanding.\"\n\n\"I think we both know who the demanding one is here.\"\n\n\"Complaining?\"\n\n\"No.\"\n\n\"Good,\" she says as she trails her hand down my torso until her fingers are lightly touching my pussy. \"Let's see how wet you are for me, baby girl.\"\n\nI'm so turned on that I can barely move so I lean back as I allow Annie's fingers to dip inside my pussy and as they slide in, I can tell that I'm already dripping.\n\nAnnie's forehead falls against mine as she lets out a low noise that sounds somewhat like a growl. \"You are so wet.\"\n\n\"Just for you,\" I say, and I mean it. I've never gotten this wet from so little activity. I was wet the moment I opened the door and saw Annie standing there in red. I fear I'll never be dry again when in the presence of this woman. Or when I see red. It could turn into a major inconvenience.\n\nAnnie easily slides two fingers inside me and begins to drive them in and out. I'm so wet though that I can tell she can't get the friction she needs. Like always, Annie knows exactly what to do. She slides another finger in and pushes in deeper, spreading them inside so I feel all of her.\n\nWith her free hand, she grabs one of my own and lifts it so she can press it into the wall behind us while she continues to pump her fingers into my pussy. \"I can't believe you actually thought I could wait to do this,\" she breathes into my ear. \"Tell me how it feels, baby girl.\"\n\n\"So good. More though. Add another, please. Fuck me harder.\"\n\nShe's right of course. Now that our bodies are pressed against each other's and her fingers are deep inside me, it's clear that the entire rule was futile. This doesn't just feel like sex. It feels like an animalistic need to release something.\n\nWithout saying anything else, Annie slides two more fingers into my pussy and pushes up against me to anchor herself. It feels so hot and erotic to be fucked against the wall like this, with my pants still wrapped around my ankles, that I can feel a familiar throb begin to build already. I should be embarrassed at how fast Annie can bring me to climax, but it's as if my body was made to come for her and only her.\n\n\"You're going to make me come so fast,\" I cry out, moving my hands to her shoulders for something to hold onto.\n\n\"Don't hold back. I want to feel you come around my fingers,\" she replies before leaning in for another deep kiss. When she comes up for air, she looks like she's as close to an orgasm as I am.\n\nEven though we've only been together a few times, Annie seems to know exactly what my body needs. She brings the hand she had pressed into mine back down so she can lightly rest it on my neck. As she squeezes lightly, she curls her fingers up and in almost a second, I can feel an orgasm crash into my body.\n\n\"I'm coming,\" I say after I already came. Everything happened so quickly that it felt like a bolt of lightning smashed into my body and my words couldn't catch up with my orgasm.\n\nAnnie slows her fingers, allowing me to catch my breath as I come down. My legs are shaking, but I'm at least able to stand on my own. I close my eyes and lean back against the door.\n\n\"You're so beautiful when you come,\" she says, pushing some of my hair aside with her dry hand. \"Open your eyes,\" she then commands and when I do, she's holding up her soaking hand and giving me a satisfied smile.\n\nAnnie looks at her wet hand before looking back at me with a smirk. \"Looks delicious,\" she says right before she sticks her fingers into her mouth to suck on them. She lets out a moan as she licks off my juices, her eyes pressing closed as she does it and I can't help the way my mouth falls open at the sight.\n\n\"And I was right,\" she says when she finally brings her fingers back out and opens her eyes. \"Delicious. Now I need a real taste though.\"\n\nShe sinks to the floor with a thud and slides her hands behind my legs until she can grab my bare ass. She looks up at me with the same hungry look I've seen on her face before.\n\n\"Feel free to fuck my face,\" she says but she doesn't wait for me to make a move before she sinks her tongue into my folds.\n\nI need something to hold onto and Annie's head seems like the hottest option, so I grab hold of her hair and push her into me. Annie seems to appreciate this move because she lets out a vibrating moan against my pussy and digs her fingers into my ass.\n\nAs I feel her tongue lick up and down my pussy, I can feel myself getting closer to another orgasm. \"Yes, baby. Keep going. Your tongue feels so good.\"\n\nI know Annie likes to talk during sex, but not even she seems to have words right now. Instead, she dips her tongue all the way inside my pussy, so her entire face is covered by me. She grabs my ass harder as she begins a steady thrust in and out with her tongue.\n\nI push myself off the door so I can stand straight up and move my hands to her cheeks. I grab them gently and begin to pull her face into me-- doing just as she said I could.\n\nThe moment Annie's tongue comes back up and begins to swipe against my clit, I lose all control and feel myself falling into another orgasm and also onto the floor.\n\n\"Baby. Fuck. I'm coming. I can't stand.\"\n\nAnnie guides me down onto my back and as soon as I'm in a more comfortable position, she puts her mouth back on my pussy and licks slowly up and down-- gently as if she knows I'm too sensitive for anything else. She finally stops the movement of her tongue and slides my pants off my ankles. She then moves her body so she's resting on top of me.\n\nHer face is so flushed, and her eyes are so dark that she looks like she's about ready to come herself. And as much as my body is screaming to just lie here and relax, my mind has a different idea, and I can't wait any longer to make Annie feel as good as she just made me feel.\n\nI roll us over and stand up on legs that feel like they may give out at any moment. But seeing Annie laying there on the ground looking up at me with that challenging smirk, gives me the strength to stay up. I put my hand out to her and she doesn't hesitate to grab it.\n\n\"My turn,\" I say, pulling her up. \"Get on the bed.\"\n\nShe shakes her head as soon as she's standing in front of me. \"No bed, remember? Time to get creative, baby girl.\"\n\nI feel an entirely new rush of wetness flow out of me, but I'm not wearing anything, so it just flows down my leg. I never know what to expect with Annie and no woman has ever made me feel like that. I can't help but be perpetually turned on by her.\n\n\"You want me to get creative?\" I ask her in what I hope is a low and commanding voice. \"Then make your way over to that desk and put your hands on it. Your back to me. Now.\"\n\nAnnie raises one eyebrow but doesn't move. I take a step closer to her and gently grip her chin so she's looking right into my eyes. \"Now, I know you love having control over me. And baby, I love it too. But this is my turn. And right now, you're going to listen to me. Desk. Now.\"\n\nAnnie's eyes get progressively darker as I speak, and I know she's as into this as I am. She gives me a simple nod and saunters slowly over to the desk. When she gets there, she looks over her shoulder once before putting both hands on the desk and turning her back to me.\n\n\"Is this acceptable?\" she asks, and I have to stop the odd growl that wants to escape my lips at her sudden submission. I take a few deep breaths before I start moving towards her. I stop just feet away, not touching her until I'm ready.\n\n\"No. That is not acceptable at all,\" I reply.\n\n\"What can I do to make it better?\" she asks in a demure voice that is obviously put on, but so hot that I let it slide.\n\nI smile even though she can't see it, but whatever game we're playing is getting more fun by the minute. \"Annie. Look down at yourself and tell me what the problem is.\"\n\nAnnie looks down and then brings her head back up, continuing not to look back at me. \"You don't like red.\"\n\nI let out a small laugh. \"Baby, I know you must be wet right now. And it can't be comfortable in those tight jeans. Tell me what my problem is.\"\n\nSomething about finally having the upper hand with this woman is making my pussy throb almost painfully, despite the two orgasms I just had. I love how easily we can transition between different dynamics and in the back of my mind, I don't know how I'll ever be able to stop needing this. Needing her.\n\n\"I'm wearing clothes,\" she finally responds.\n\n\"Fix it.\"\n\n\"What should I take off first?\" she asks, turning her head slightly but still not looking at me.\n\n\"Your coat.\"\n\nAnnie undoes the belt on her coat and then takes her time undoing the buttons. I know she's going slow on purpose, but I could watch Annie do anything and never get bored.\n\nWhen the coat falls to the ground, I let out a gasp and all the cool and control I had felt just a moment ago dissipates in a second. Because underneath her coat, Annie isn't wearing anything. Not even a bra.\n\n\"Jesus,\" I whisper, causing Annie to let out a low laugh. \"You forgot a shirt,\" I say in a louder voice.\n\n\"I guess I did,\" she says innocently.\n\nMy eyes home in on her nipples, which are so hard that my mouth craves to latch onto them. I move my body closer until I'm right up against her. I feel a rush of satisfaction when she shudders at the feeling of my naked body touching her. I move my hands around so I can cup both of her tits and I lightly pinch her nipples.\n\n\"I think you knew exactly what you were doing,\" I say. \"No shirt under a simple jacket in December? You came to my hotel room with one single thing on your mind.\"\n\nI pull harder on her nipples, and she lets out a low, guttural sound and pushes her body back against me. \"But I knew you would keep me warm,\" she says in a strained voice. \"And maybe let me borrow a shirt for our date later.\"\n\nDespite how hot the moment is, I let out a laugh at her last statement. This is what I love most about Annie-- her ability to turn me on and make me feel like I'm melting into a puddle at the same time. I quickly push the \"l word\" that just went through my head away and focus on the feeling of Annie's perfect tits in my hands. This isn't the time to overanalyze my intense feelings for the woman.\n\nI need to regain control of the situation. I can tell Annie wants more of my hands on her tits, but she's still far too clothed for me. I take my hands off her and am happy to hear that I'm not the only one who can sound desperate. Annie's small sound of frustration is exactly what I wanted to hear.\n\n\"I know, baby. But I'll be back,\" I say, taking one small step away. \"Take off those pants. With you, I would never presume to think that you're wearing underwear, but if you are, remove those too.\"\n\nAnnie laughs, but it's not her harsh, sexy laugh. It's light and familiar and it reverberates through my body like something I've heard a hundred times. Something I want to hear a thousand more.\n\nAfter she removes her pants, I can see that she is in fact wearing underwear. Once she has them off, she gives me a small smirk and then turns back around to the desk to resume her position.\n\n\"You are the most beautiful thing I've ever seen,\" I say without thinking.\" It's not that I don't mean it. But I can't tell what Annie's reaction is with her back to me.\n\nThe room is quiet, and I quickly try to think of something less intense I can say but then Annie speaks.\n\n\"I've never wanted anyone's hands on me like I do yours,\" she says in a quiet voice. \"Please.\"\n\nEvery inch of me yearns to touch this woman. Anybody in the world would be lucky to even graze an inch of her perfect curves. But something in me just needs to watch her for longer. I'm not ready to lose sight of something so rare. After our first time together, I didn't think I'd ever get to lay my eyes on her again. And now that I have, I want to savor every moment. I don't know how many more there can even be.\n\n\"Not yet,\" I reply in a stern voice. \"Remove one hand from the desk and touch your nipples.\"\n\nAnnie doesn't move immediately, but from the slight way her head is turned to me, I know she's smiling. Finally, she takes one hand off the desk and begins to pull and flick her nipples.\n\n\"Wet them,\" I command.\n\nAnnie takes two fingers and puts them in her mouth. She turns her head to me so she can suck on them in an exaggerated way. She then slides them down her chest and onto her nipples, making them glisten.\n\n\"Take those two same fingers and suck on them again,\" I tell her.\n\nAnnie complies without a word and in a way, I can't believe I get to see this. I've seen some of the greatest works of art in the world and yet seeing this makes me feel unworthy.\n\n\"Now touch yourself with those fingers,\" I say next.\n\nAnnie lets out a laugh. \"I didn't need to suck my fingers, baby girl. I'm already dripping for you.\"\n\n\"I know that. But I wanted to see those perfect lips wrapped around your fingers. Now touch yourself.\"\n\nAnnie seems to be out of things to say or she's just too turned on to continue our banter because she quickly moves her hand down to her pussy and begins to rub her clit in a slow motion.\n\n\"How does that feel, baby?\" I ask her in a low voice, pushing my body into hers again.\n\n\"So good. But I need more.\"\n\n\"Then slide two fingers inside. Now.\"\n\nAnnie obliges and lets out a cry of pleasure as soon as her fingers are buried inside her pussy. \"I need you, Charlie. Please touch me,\" she pants out as she continues to fuck herself.\n\nAs much as I want to continue to watch the sight in front of me and as sexy as it is to see Annie giving herself pleasure at my command, I feel an even greater urgency to finally touch her.\n\n\"Here, baby. Let me help.\"\n\nI push her down onto the desk so her front is draped against it and her hands are gripping the other side. I graze my fingers over her back as she lies there, relishing in having her in this position and as I do, goosebumps break out all over her skin.\n\n\"Please, baby. Fuck me. I need you,\" she cries out, pushing her ass out to me.\n\nI don't make her wait any longer, mainly because my fingers are aching to dive into the pussy that I know is wet for me. From behind, I push two fingers inside of her before bringing them out quickly again. Annie cries out and pushes her ass into me again.\n\nI repeat the movement over and over, getting deeper with each thrust. Soon, I'm pushing her down onto the desk and fucking her at a fast, hard pace.\n\nI love how uninhibited Annie is right now. Her face is pressed into the desk and she's releasing a series of sounds that I've never heard from her but are loud and erotic and so damn sexy.\n\nI slow my fingers and pull them out, eliciting a sound from Annie that makes me smile.\n\n\"Sit on the desk and face me,\" I request.\n\nAnnie is slow to move but I think that's more because she's turned on and less because she's trying to defy my order. Once she's sitting on the edge of the desk, she spreads her legs and I again feel my mouth drop open at the site.\n\nIf there was anything in this world worth painting, it would be Annie sitting there spread out, her glistening pussy just staring at me. Waiting for me.\n\nBoth of Annie's hands are on the desk and she's looking at me like she's drunk-- her breathing coming out in short breaths. It's clear neither of us can wait any longer for what's next so I quickly move over to the desk and sink to my knees. Luckily the table is low enough that Annie's pussy is in the perfect position for my mouth, and I waste no time slipping my tongue onto her pussy.\n\nFor a few minutes, all I can do is lick up all the flowing juices that have already seeped out of her. Once I've cleaned her up a bit, I begin more direct strokes up and down her folds, making sure to hit her clit with my tongue.\n\n\"Yes, yes, yes, baby. God that feels good. You're going to make me come so hard like this,\" Annie says, leaning back on her hands and pushing her pussy closer to my face.\n\nWhen she begins to push her hips up, I can tell she needs more friction, which isn't surprising considering how wet she just seems to keep getting.\n\nWith one hand, I drive three fingers into her while my tongue takes its place on her clit. I begin to make a flicking motion as I continue to fuck her hard against the desk.\n\n\"I want you to come for me like this. Spread against this desk. All mine\" I say, taking my mouth off her pussy for only a second before resuming my gentle attack on her clit.\n\n\"More. Add a finger. I'm so close,\" she cries.\n\nI add one more finger and push in deeper. I can't fuck her hard enough with my mouth on her pussy, so I push my body up so I'm hovering over her and pushing in deep.\n\n\"Come for me, baby,\" I say as I feel her walls begin to clench around my fingers. \"Come hard for me.\"\n\nI grab her shoulder and push in so I can curl my fingers up and as I do, Annie grabs both of my shoulders, digs her fingers in and cries out as her orgasm hits. I keep pushing in until I can feel her grip begin to lighten on my shoulders.\n\nThe only noise in the room now is our collective breathing and I slowly remove my fingers so I can pull her into my arms. Annie wraps both legs around my waist and rests her head onto my shoulder, continuing to breath loudly.\n\nI don't even know how long we stay like that, but feeling her naked body wrapped into mine is a feeling I don't want to let go of any time soon. After a while, Annie lifts her head, leans back, and gives me a slow, sexy smile.\n\n\"That was fun,\" she says, causing me to laugh.\n\n\"Fun is a good word for what that was,\" I reply.\n\nI look over my shoulder at the bed before turning back to her. \"I know we said no bed, but now that the sex part is over, can we maybe lay down together?\"\n\nAnnie gives me a much softer smile than the hungry one she's had on her face for the past hour and nods. \"I would love to get in bed with you. I think we earned some rest.\"",
        "She hops off the desk with more agility than I would after being fucked like that, grabs my hand, and leads me into the bed. We both crawl into the sheets and I pull the covers over us. Once I settle in, I turn so I'm face to face with her.\n\n\"Well, this was unexpected,\" I say quietly, but I can immediately feel my eyes start to grow heavy. \"But I'm glad you broke the rule. It was a silly rule to begin with.\"\n\n\"I'm glad you agree. And you're so cute right now trying to keep your eyes open. Close them. Rest for a bit. I'll take the first watch for monsters.\"\n\nMy eyes close but I'm smiling as they do. As I'm dropping off, I can feel Annie's lips graze my ear and even though I'm half asleep, I don't miss what she whispers.\n\n\"I don't want to lose you.\"\n\nI pull her body into mine. \"So don't,\" I reply, feeling a completeness that sends me straight into sleep.\n\n\u200b\u200bChapter 18\n\nI feel soft kisses trail down my jawline, and this has to be my new favorite way to be woken up-- especially with Annie's lips doing the kissing.\n\nWhen I finally open my eyes, she's staring down at me as if she's been watching me sleep. But the look on her face isn't as happy or serene as I would have thought it would be after the hours we just shared. I can't decipher the expression, but I wouldn't describe it as relaxed.\n\nI look over at the clock on the bedside table and realize I've been sleeping for two hours.\n\n\"I'm sorry. I didn't mean to sleep for so long,\" I say, looking back up at her. \"I guess sex makes me sleepy.\"\n\n\"All sex?\" she asks with a small smirk that lightens up her face a bit.\n\n\"No, just sex with you.\" Her hair looks disheveled, so I push some of it back behind her shoulder. When I look up to her again, that same concerned expression has settled back on her face. \"What's up?\" I ask, continuing to play with the ends of her hair.\n\nShe looks down at me for a while before she speaks, her eyes moving over my face as if she's etching each part with her eyes. As if she's trying to memorize something. I've noticed her do it before and I wonder if it's the artist in her or if it's just my face that affects her like this.\n\n\"I don't want to scare you.\"\n\nHer voice is so quiet and strained that it's almost jarring. Annie's presence has felt so large tonight, but right now she feels fragile.\n\nI push my body up against the pillows so I'm in a better position to talk and she also sits up so she can face me. I'm grateful that she pulls the sheet up around her chest, so I'm not distracted. We're obviously about to talk about something heavy and I don't think I can do that while Annie's bare body is so close.\n\n\"Annie, how could you scare me?\" I ask, trying to get her to raise her eyes.\n\nShe seems so small right now but not in the way that I've seen her when she's with Ian. I've just never seen her seem so vulnerable-- even while we were at her art studio, and she was telling me about her family.\n\n\"I've never felt like this,\" she continues in the same quiet voice. \"For any man or any woman or really any person at all. It's like when I'm with you, I just feel like me. A me that I didn't even know existed. It was like I was this shell that could eat and breathe and sleep. But that's it. I've been sleepwalking.\"\n\nI pull her hands into mine as she speaks, trying to do what I can to reassure her. \"I feel the same way, you know,\" I say. \"And it scares me too. I've never had something I've felt so strongly about. Or someone.\"\n\n\"But I know you had that ex--\"\n\nI cut her off immediately with a harsh laugh. \"You mean Jen? That wasn't the same.\"\n\n\"How is this different? Ian said you proposed to her.\"\n\nI take a deep sigh and feel the same annoyance I feel every time I think about my ex. But if Annie and I are really going to get to know each other, I suppose this is important information in understanding why I'm so reticent about relationships.\n\n\"Jen and I met at Pratt,\" I reply. \"She's a sculptor. Or she was at least when we met. She was a year ahead of me at school and everyone seemed to know her. She wasn't a brilliant artist, but she was engaging. And she had a way of surrounding herself with talented people. I guess you could say she was charming. And beautiful.\"\n\n\"Okay, okay. Moving on,\" Annie says in a cute, jealous voice that makes me smile for a moment. \"And you were one of the people she brought into this circle?\" she asks next.\n\n\"No. I wasn't nearly as talented as her snobby Pratt friends.\"\n\n\"I bet that's not true.\"\n\n\"I wasn't bad. I did well at Pratt. But not like the people she surrounded herself with. I was just enamored with her. And I guess she was enamored with my family's resources. I just didn't see that at the time. Soon, I was helping finance the art shows for her friends. And at the time, I just thought it was romantic that we were creating things together. But once we graduated, she started pressuring me to give up art and become more involved in the family business. She said it would give us more opportunity to do what we wanted, and she made it clear I wasn't talented enough to do it on my own anyway. She hated it when I opened the gallery. She thought it was a waste of time.\"\n\n\"You must have felt strongly about her though. Were you in love?\" Annie's voice doesn't hold any jealousy-- it's just soft and understanding and in four years, nobody has made me feel so open about talking about any of this.\n\n\"Yes. Or I thought I was.\" Playing with Annie's hand as I speak seems to relax me, so I turn it over and begin to trace lines down her palm. \"Jen has this big, enigmatic personality and it took me too long to realize that her personality changed based on what she wanted. She was my first real girlfriend. She was very good at making it seem like I was lucky to be with her. And I felt like I was at the time. Now I can see we weren't right for each other at all. Anyway, after we graduated college and moved in together, I proposed. My parents died shortly after.\"\n\n\"Ian told me it was a car accident, but he doesn't talk about it. We don't really talk about anything,\" Annie says, and it seemed like she didn't want to mention his name, but in this instance, it doesn't bother me. I'm not surprised Ian doesn't talk about it. None of us really do.\n\nI pull the covers up over me as if trying to create some sort of protective blanket. I know where this conversation is going and it's so much bigger than Jen. But it's also something I haven't talked about in four years-- not even to Kat or Holly.\n\n\"It was an accident,\" I repeat in a quiet, strained voice. \"They were running late, and their driver went through a red light.\" I can feel my throat tighten, but the tears that usually sting my eyes are unusually dry as I speak to Annie. Maybe it's the way she's scooted closer to my body, so our knees are touching, and I feel the warmth of her body against mine.\n\n\"Anyway,\" I continue. \"My parents left Ian as the executor of the will. And I didn't care much anyway. I wasn't interested in their money. But he didn't give me a dime from the trust. And Jen flipped out over that. She wanted me to fight him over it. And that's when it became clear what her real interest in me was. My parents had just died. And all she cared about was the money I wasn't getting. When she figured out that I wasn't going to do anything about it, she moved out.\"\n\nAnnie is quiet for a moment before she speaks. \"That's really horrible. And she obviously never deserved you.\" She stops talking and opens her mouth before she closes it again. \"But why didn't you fight him? I didn't realize he did that.\"\n\n\"Why would you? He's not going to tell his girlfriend that he did something illegal. And I didn't want the money. I wanted my parents back.\"\n\n\"Is that why you two hate each other so much? He's never spoken kindly of you, but he's also never really mentioned a reason.\"\n\nThe elephant in our perpetual relationship has now ridden into this hotel room and I know there are things we need to talk about. Things we didn't get to the other night in her art studio. This isn't exactly how I thought our first date would go, but I also never thought I'd fall for my brother's girlfriend either.\n\n\"We've never gotten along. We're just too different. He's always cared about station and money, and he's always been a bit of a misogynist. I think my parents always wondered how he got like that. My dad even sent him to boarding school during high school in upstate New York, which I actually don't think helped.\n\n\"Ian talks fondly of that time,\" Annie offers.\n\nI laugh. \"I'm sure he does. It's where he met all his other asshole, conservative friends. But he's always had different values than the rest of us. And yet he tried so hard to get their approval. He just did it in all the wrong ways. When I was sixteen and he was just eleven, he found a note in my room that a girl had written to me, and he made a big deal of showing it to my parents. As if he could out me. Too bad for him they'd known since I was six.\"\n\nAnnie lets out a genuine laugh and it's nice to hear something lighter as we talk about all this.\n\n\"He's just always tried to undermine me,\" I continue. \"He used to lie to our parents about things I did to get me into trouble. And that's followed him through his whole life. He can't be honest.\"\n\n\"But Kat doesn't have the same relationship with him?\"\n\nI take a deep breath as I try to decipher the entire situation and something that's always bothered me even though I understand it-- Kat' loyalty to Ian.\n\n\"They're twins,\" I say. \"They have a twin bond, I guess. Kat loves Ian. And Ian has always been sweet to Kat and protective-- even if it's usually in a sexist controlled way like trying to decide who she could and couldn't date in high school. Kat knows who Ian is. But they'll always be twins.\"\n\nAnnie looks down at our hands and pulls hers away before she shakes head. She continues to stare down at the bed until I put a hand under her chin and gently lift it until she's looking at me. \"What just went through that beautiful head of yours?\"\n\n\"I just can't imagine what you think of me. For being with him.\"\n\nI let my hand fall but grab onto her hands again. \"I understand family dynamics. And the pressure that can bring.\"\n\nShe shakes her head again, causing my hand to drop. \"But you didn't give in to it. I've done everything my parents wanted for so long that I don't know what the difference is between what they want and who I am. And I don't know how to stop it.\" She finally looks up at me and my heart clenches at the tears I can see pooling in her eyes. \"Until I met you that is. And I know we just met. But you make me feel at ease. For once in my life.\"\n\nMy heart clenches when I can see the obvious anxiety on her face. I push up so I can get on my knees and put her face in my hands. \"I feel the same,\" I say, swiping away the one tear that fell. \"I haven't felt like myself since my parents died. Until I saw you walk into that bar and completely dismiss my presence for an hour.\"\n\nAnnie laughs and sometimes I wish I could record it. It comes out so easily and sharp and I would listen to it all day if I could. \"To be fair, I was playing a game. I couldn't give in to that swagger too easily.\"\n\n\"Swagger, huh?\"\n\n\"Don't let that go to your head. Your nickname is still Choo Choo.\" She smiles at me again before her brows draw together. \"I thought you'd be mad that I haven't ended it with him yet.\" Her voice is so quiet that I can barely hear her. \"I haven't even seen him since our night together at the art studio. You have to know I'm going to do it.\"\n\nI drop my hands from her face but stay where I am so that we're still close. I'm not mad that Annie hasn't broken it off with Ian yet. In fact, I was so surprised by her arriving here and the subsequent activities that occurred, that I haven't even thought about him. But now, my stomach tightens at thought. I meant everything I just said to Annie about how I feel, but I'm also hyper aware of how all this could affect my family. Affect Kat.\n\n\"When are you going to end it with him?\"\n\n\"As soon as I see him next.\"\n\n\"How do you think he'll take it?\"\n\n\"From the way he talks, nobody has ever broken up with Ian,\" she says. \"So maybe his ego will be hurt. But he can't be that heartbroken. He's only with me for public appearances. I've been with him a year and he's only seen my apartment once.\"\n\nI immediately feel my entire body tense. Talking about this is one thing but the last thing I want to think about is Annie and Ian in Annie's apartment. Where her bedroom is. Annie seems to notice my reaction though because she quickly continues.\n\n\"Sorry. I didn't mean it like that.\"\n\n\"Let's not talk about that,\" I say, trying to relax my muscles.\n\n\"If it helps, we were never a real couple in my eyes. It was all for show. And honestly, it's my dad who will probably be the most devastated. Not only does he like Ian, but he also thinks we're a 'proper match' as he puts it.\"\n\nI remain tense as soon as Annie mentions her dad. Everything my uncle told me at lunch is rolling through my head about his part in the decimation of my parents' company. But this isn't the time or place to bring that up and I doubt my uncle would want me to. Right now, this conversation is about Annie and me.\n\n\"I think it's pretty brave,\" I say instead. \"What you're about to do.\"\n\n\"Breaking up with a man I don't love, never did and was only with to appease my parents? How is that brave?\"\n\n\"For finally making a decision for you. Some people spend their whole lives trying to make others happy. It seems you've followed their plan for a while. I do think it's brave to deviate from that.\"\n\n\"What would be brave is to tell them that I'm gay. But I'm still so scared.\"\n\n\"Because of your sister?\"\n\nAnother tear falls down Annie's face but before it gets far, I catch it with my finger. \"I don't want to lose her,\" she says in a whisper. \"Not like Dylan did.\"\n\n\"She's only a couple years from being an adult herself. And your parents don't need to know everything about your life. Who you're dating isn't really their business anyway if you don't want it to be.\"\n\n\"I would never want to hide the person I love. I couldn't do that to you.\" Annie's eyes widen the second the words come out of her mouth. I can feel my own heart rate begin to pound against my chest, but I know neither of us are ready for that kind of declaration, so I move the conversation along.\n\n\"Maybe just one thing at a time then.\"\n\nAnnie takes a deep breath and rubs her hands over her face before letting out a small laugh. \"I promise I'm not usually the cry after sex type.\"\n\n\"I don't think it counts if its two hours after the sex,\" I respond with a smile, rubbing my hand over hers.\n\nWe're both quiet for a minute before Annie looks back up at me. \"You're going back to LA.\"\n\nShe doesn't phrase it as a question and the sudden statement has my stomach tighten all over again.\n\n\"I have my gallery,\" I say simply, not knowing what else to say.\n\n\"And here?\"\n\n\"I don't know what I have here yet.\"\n\n\"Because I haven't ended it with Ian?\"\n\n\"No. Because being back here is more complicated than just that. It hurts.\"\n\nAnnie moves closer to me and puts one hand on my cheek, bringing my eyes to hers.\n\n\"Does this hurt, Charlie? Has any of this hurt? Because I've felt more alive with you than I've ever felt. Are you telling me I'm alone in that?\"\n\n\"No. You're not alone.\"\n\n\"So, I'll end it. And then we'll figure out what's next.\"\n\nI wish I could just kiss Annie and tell her that we can have some happily ever after once the wedding is done. But I know this is more complicated than that and this will cause a tidal wave of drama with my family.\n\n\"Not until after the wedding,\" I say.\n\n\"What do you mean?\"\n\n\"Don't break up with him until after the wedding. When my parents died, I just left. I left Kat alone. It's not like Ian would talk to her about it and Holly and Logan didn't get it in the same way. And now that I'm back I just want to do right by her. She deserves this week to be about her. Not Ian going through a breakup.\"\n\nAnnie nods. \"I can wait. As long as you know where my heart is.\" She's looking at me so softly that I just want to wrap her up into my arms and never let go. The expression on her face is so soft in fact, that her next words cause my eyes to widen. \"And as long as you also know that my pussy won't stop throbbing until I can really be with you.\"\n\nMy mind is racing around all the things that just came out of her mouth. Annie's words are romantic and sexy at the same time and all I want to do is hang on to them for dear life. The larger implications of all this still loom large. But now all I can think about is having this woman the way I've never wanted any woman-- slow and soft and loving.\n\n\"I know there's a lot we need to figure out,\" I say, gently pulling down the cover over Annie's tits so I can see her bare body. \"And if the wedding is in a few days, I guess we have some time. But what really concerns me is that throb. I may be no doctor, but that sounds concerning.\"\n\nAnnie moves the rest of the cover off her body and brings her legs over me so she can straddle my own. Without even kissing me again, she moves one hand down to my pussy. I'm suddenly overwhelmed by the sensation of Annie touching my apparently still wet pussy and her perfect tits just sitting in front of my face.\n\n\"Based on how wet you are, I would guess I'm not the only one with a throbbing issue.\"\n\n\"It seems that way.\"\n\n\"Should we check Web MD?\"\n\n\"I'm not sure that's a reliable source.\"\n\n\"Hmm, you're probably right.\" Annie allows her fingers to spread themselves across my pussy again before she pulls up her hand. Like always when she's teasing me, I have to stop myself from letting out a grunt of frustration.\n\n\"Though, baby girl,\" she says, licking the juices off her hand like it's nothing. \"I seem to remember somewhere you wanted to take me. Have I made us late?\"\n\nI'm too distracted staring at her fingers inside her mouth to answer. But apparently that wasn't what Annie wants because she removes her hand and gives me a stern look.\n\n\"You have,\" I say in as steady a voice as I can muster. \"But we can really get there any time. And I will need to eat before. Someone has made me very hungry.\"\n\n\"If you need to eat, I have some ideas,\" she says, leaning down and kissing me. She's smiling when she finally comes back up for air.\n\n\"You are insatiable and it's one of the things I love most about you,\" I say.\n\nThis is the second time tonight that word has been casually thrown about and even though butterflies are erupting in my stomach, Annie's eyes only get darker, and she doesn't seem surprised or freaked out. She dips her head down so our lips are an inch apart. I can't see her eyes, but I can feel her light breath against me.\n\n\"This is something isn't it?\" she asks in a whisper, her lips grazing mine.\n\n\"This is something.\"\n\n\"Then make love to me.\"\n\nAnnie lifts her head so she's looking straight at me and I'm not sure I've ever experienced a look so intense and connected. Something about the way she's making eye contact with me makes me want to capture the moment forever. As if it's too significant to forget. It's as if she's fully giving herself to me, but not in submission. Right now, Annie is offering me her heart. And I'm going to do what I can to fill it.\n\nI move my body so she falls to the side, and I can climb on top of her. I push my body into hers, trying to feel as much of her naked skin against mine as I can.\n\n\"You feel so good on top of me. I love feeling you like this,\" she says, almost sighing as she says it.\n\nI pull my body up slightly so I can trail my fingers down her torso. Once I reach her pussy, I don't tease, and I don't linger. I need to feel my hand deep inside her. I need to feel all of Annie wrapped around me. Annie grips my back, but she doesn't close her eyes as I slide inside her. Right now, she's looking directly into my own eyes, her mouth parting slightly as she lets out a sweet sigh.",
        "\"Yes, baby,\" she says, lifting her head so she can give me a brief kiss before it falls back onto the pillow. \"Like that. Just give me you. All of you.\"\n\nI push in harder as I stare down at her. \"You have me.\" I lean in and take her mouth in another kiss-- the kind of kiss I've never experienced. Our lips are soft against each other. They move tentatively and I can feel hers quiver under my own. There's no pressure or urgency to the kiss but there doesn't need to be. We're just breathing each other in, and it almost feels as if her breath is my breath.\n\nAs we continue to kiss and I continue to push into Annie slowly and deeply, I can feel her move our bodies so we're side by side and I'm not on top of her. Once we've changed positions, she slides her own hand down to my pussy and mirrors my movements. I push my hips up, hoping to take even more of her hand.\n\nOur foreheads touch and as we fuck each other, and our breathing becomes progressively louder. If this is making love, I've certainly never experienced it with another woman. Every part of me feels connected to Annie-- as if we're just meeting while at the same time, our bodies seemed to have mapped each other's for generations.\n\n\"How can you leave this?\" she asks in a whisper against my lips. \"How can you not be mine?\"\n\nI'm too close to an orgasm to even be able to process her words so instead of answering, I lean in and capture her month in a passionate kiss. And as our tongues swirl together, I push in deeper, and I can feel her orgasm hit through the vibration she lets out into my mouth. As she grabs onto my back, my own orgasm follows, and we moan into each other as we both climax.\n\nAs we come down, our bodies are completely entwined, but neither of us seem to want to move so we stay like that as our breathing evens out. After what feels like ten minutes, Annie finally rolls to the other side of the bed and turns her body so she's facing me.\n\n\"Still hungry?\" she asks.\n\n\"Well, technically, I didn't get to eat anything just now.\"\n\n\"Poor baby didn't get her sustenance.\"\n\n\"No, but I got something better.\"\n\nWe smile stupidly at each other for a few minutes and part of me wants to scrap the whole date and stay in bed. But there's still somewhere I want Annie to see.\n\n\"Well, this is your date, Choo Choo. What's for dinner?\" she asks.\n\n\"My date?\" I say, laughing. \"You've directed this entire night. Not that I'm complaining,\" I add quickly. \"How about we grab a slice of pizza on our way to the place?\"\n\n\"A Dawson eating at a pizza joint. That's not something I ever thought I'd see.\"\n\n\"I'm not my brother,\" I say seriously.\n\nAnnie reaches out and lightly pulls on my bottom lip. \"Don't I know it,\" she says. \"But you'll have to let me borrow a shirt.\"\n\n\"Because you didn't wear one.\"\n\n\"Slipped my mind.\"\n\nI raise one eyebrow at her. \"Yeah, happens to me all the time. But fine. You can wear one of my shirts, but I get to choose which one.\"\n\n\"Considering I've only ever seen you in white t-shirts, I think I can handle it.\"\n\n\"Great. Deal.\"\n\n\"Are you ready to go to this mysterious place then?\" I ask.\n\n\"I'd go anywhere with you.\"\n\n\"That was cheesy, Choo Choo. I'll let it slide but only because of that face.\"\n\n\"Glad to know you can't resist it.\"\n\nAnnie rolls her eyes and throws a pillow at me. \"How about you stop talking and go get that t-shirt.\"\n\nI roll out of bed so she can't see the huge grin on my face. Sure, I do usually wear white t-shirts. But she hasn't seen the box of shirts I ordered for the bachelorette party that Holly vetoed. I don't think Annie will feel quite the same about this one.\n\n\"One shirt for the Astor Princess coming right up.\"\n\nChapter 19\n\n\"Stop laughing at me.\"\n\nThe scowl Annie is directing at me from across the table at the pizza place only makes me laugh harder.\n\n\"Oh, come on. It looks cute.\" I grin widely before taking the final bite of my slice of pizza.\n\n\"You had to have more shirts than just this one.\"\n\nI shrug. \"Yes, but you said I got to choose.\"\n\n\"Where did this even come from?\"\n\n\"I got them for the bachelorette party, but Holly said they were tacky.\"\n\n\"And you didn't think--\" she looks down to read her shirt. \"Pop the Bubbly, I'm Getting a Hubby wasn't tacky?\"\n\n\"Kat likes tacky.\"\n\n\"And Holly doesn't.\"\n\n\"Exactly. She vetoed my only contribution to the party. But luckily, they're not being wasted. You're contributing to the sustainability of our planet.\"\n\n\"Oh yes, just call me Captain Planet.\"\n\n\"He is our hero.\"\n\n\"We better be going somewhere dark,\" she says as she gathers both of our empty plates.\n\n\"You could say that. Ready?\"\n\n\"Pop the bubbly,\" she responds sarcastically.\n\nAnnie pulls her coat closer to her body as we head out of the pizza place and into the cold New York winter and now, I almost feel bad for not giving her something warmer to wear. But the look on her face when I handed it to her at the hotel was priceless and worth it.\n\n\"We're just going down the block,\" I say, pointing down the street.\n\nAnnie looks tentative for a moment but then walks over to me, slides her hand down to mine and links our fingers together. We're in Harlem so I have no real fear of seeing someone we know, and the small gesture has me smiling like an idiot. I squeeze her hand before pulling her along.\n\nWe're quiet as we walk hand in hand, and it feels like we've been doing this for years. I have to remind myself that this is our first date and probably a doomed one at that.\n\n\"Here we are,\" I say, finally stopping in front of a building that actually looks pretty similar to Annie's art studio. It has a warehouse feel to it, but maybe a little more inviting.\n\nAnnie looks up at the building. \"Ah, so this is the dungeon.\"\n\n\"Yes. Not as daunting as one would think, right?\"\n\n\"Depends on what kind of dungeon you're talking about,\" she replies with a wink.\n\nI drop her hand because the walkway up to the building is narrow. It's clear that the team here haven't cut the foliage around the walkway since the place opened about ten years ago.\n\n\"I didn't take you for the Harlem type,\" Annie says as we walk up to the door.\n\n\"You need to stop making assumptions about me based on my last name.\" My words come out harsher than I meant them to, but her pizza comment also rubbed me the wrong way. I may be a Dawson, but my parents did all they could to keep me grounded.\n\nAnnie puts her hand on my arm before I have the chance to ring the doorbell. \"You're right. And I'm sorry. I know you're not like him.\"\n\n\"And he's nothing like my parents. The Dawson's like pizza. And the subway. And normal, everyday things. We're not all Ian.\"\n\n\"And I know that.\"\n\nAnnie turns me to her and places a gentle kiss on my lips. It's so cold out that I can see steam between our lips. But the kiss is so sweet and soft that I forget all about my momentary annoyance. And really, it's not her fault. I've always been sensitive to people assuming things about my family.\n\n\"So do we just ring the doorbell?\" Annie asks when our lips finally part. \"There's no doorknob.\"\n\n\"Yep. Access is a little protected here.\"\n\n\"I suddenly feel like I'm part of The Little Rascals and the He-Man Woman Haters Club.\"\n\nMy hand is almost on the doorbell, but her statement makes me laugh so hard that I drop it. \"The He-Man, what?\"\n\nAnnie just rolls her eyes. \"We obviously have some 90s movies to catch up on. That can be date two.\"\n\n\"Oh, so we're liking this date then? Already thinking about date two?\"\n\n\"Just ring the damn doorbell,\" she says, huffing out a stream of steam from her mouth. \"I'm in this stupid t-shirt and I'm cold.\"\n\nI'm still laughing but I do as she says and ring the doorbell that I've pressed more times than I can remember. A speakeasy window opens in the middle of the door and a young guy with blue hair peeks his head out.\n\n\"Welcome to Atelier. Do you have an appointment?\"\n\n\"I'm here to see Dorian. He knows I'm coming.\"\n\n\"Charlie,\" the man on the other side of the door says in a shout. \"Come in!\"\n\nThe door opens and we enter a lobby that is covered in velvet-- from the couches scattered about the room to the walls. It's hard to find anywhere that's not sporting the red, thick material. Nothing about the room has changed since I was last here, including the worn-out check-in desk in the corner.\n\nThe blue haired man comes up and shakes my hand aggressively and now that I'm close to him, I can see that he's not really a man at all-- he's probably only college aged. The Atelier attracts a lot of young artists.\n\n\"I've heard a lot about you,\" he says, still shaking my hand. \"You're a legend here. They've covered it up now, but people around here still talk about your graffiti job on the Pratt student hub. That was brilliant.\"\n\nAnnie looks over at me with both eyebrows raised. \"You graffitied your school?\"\n\n\"It was a dare,\" I reply before turning back to the stranger.\n\n\"Oh, I'm Bradley,\" he says, shaking my hand again.\n\n\"This is Annie,\" I say. Bradley goes over to her, grabbing her hand with the same excitement.\n\n\"Dorian is around,\" he says once he lets her go. \"Let me just text him that you're here. And I'll take your coats.\"\n\nI can see Annie pull her coat around her and I know it's because she doesn't want him to see her shirt.\n\n\"It's warm in here,\" I say to her with a smirk. \"Lose the jacket.\"\n\n\"This is what you wanted, isn't it?\" Annie glares at me before taking it off and handing it to him.\n\nBradley immediately zeroes in on Annie's shirt and lets out a loud whooping sound. \"Congrats! When's the big day?\"\n\n\"She gets a little stressed talking about the wedding,\" I reply, trying to hold in my laugh. \"Better not ask.\"\n\nBradley sweetly nods in understanding and then skips back to the desk on the other side of the room so he can hang up our coats. \"I'll just text him now,\" he says, pulling out his phone.\n\nAnnie steps closer to me, pulls on my arm, and whispers into my ear. \"Okay, now you have to tell me where we are. Because this room actually does look like a dungeon.\"\n\n\"I guess you could say that it's a community art center. Atelier Populaire. It was inspired by the French art movement. Our own New York house of clashing ideals and social issues.\"\n\nI follow Annie as she walks around the room and checks out the space.\n\n\"When it opened a decade ago, it was just a workshop for artists who couldn't afford their own space. The back area of the building is still used for that. And there's also an area that keeps the Atelier Populaire movement alive by creating political posters. But the place has expanded a lot. They do experimental performance pieces here and sometimes even some traditional theater. But it's still mostly a secret to the city.\"\n\n\"And you spent a lot of time here?\" she asks, turning to me.\n\n\"After Pratt, I basically lived here. My best friend at school was Dorian and his brother Atlas started this place. You could say it was a home away from home and it's actually where I did most of my own art.\"\n\n\"That's amazing,\" Annie says. \"I had no idea this was here.\"\n\n\"He's ready for you!\" Bradley says in the same excited voice he's used since we arrived. \"You can head back through the performance space since there's a show going on in the theater.\"\n\nI know this center like the back of my hand, so I guide Annie to the right side of the room where there's a large door that I push open. The next room is just an empty one. This is usually where people stand before they are allowed to enter the performance space, which changes almost monthly. Over the years, the reputation of the space has grown, and I know they can have a lot of people waiting in this empty room at times.\n\n\"Gossip Ends Here?\" Annie asks, as she reads a red neon sign above the door on the other side of the waiting room.\n\n\"Must be part of their recent performance piece.\"\n\nI move over to the door and Annie follows. But as soon as we're in the next room, it's dark and there are three beds pressed against one wall. The beds are old and draped in white cloth. A woman occupies each, pretending to be asleep.\n\nAnnie screams and grabs my arm because as soon as the door closes behind us, one of the women shoots up from the bed and shouts. \"I saw Sarah Good with the Devil!\"\n\nImmediately after, the next woman sits up and shouts. \"I saw Goody Osburn with the Devil!\n\n\"I saw Bridget Bishop with the Devil!\" the final woman shouts from her bed.\n\n\"What the fuck,\" Annie whispers into my ear.\n\n\"I think there may be an active performance piece going,\" I whisper back.\n\n\"I'm scared. Get me out of here,\" Annie says louder now.\n\n\"Lies! Lies! Lies! Salem lives in lies. Lies! Lies! Lies!\"\n\nThe women keep shouting as we rush over to the door on the other side of the room and leave as fast as we can. We both lean against the wall outside the door and Annie looks like she's in a bit of a shock before she bursts out laughing.\n\n\"Was going through the Salem Witch Trials or whatever that was part of this date?\" she asks.\n\n\"Nope. Not even a little bit. Wow. That was just. Wow. Come this way.\"\n\nI head down the hall until we get to another door, but before I can open it, Annie puts her hand on my arm. \"Please tell me this isn't some reenactment of the Boston Tea Party.\"\n\n\"I promise you, it's not,\" I say, pushing the door open to a much larger and brighter room.\n\n\"The prodigal artist has returned!\"\n\nA huge, booming voice is heard from the other side of the room and a handsome man is running over to me in a sprint. He's wearing the same white, fringed leather jacket he's worn since college, which has always looked striking against his dark skin. Before I can even say hello, Dorian is pulling me into one of his usual tight hugs.\n\n\"Charlie, Charlie, Charlie. My heart. My love. My reason for existing. I've been an empty vessel and now I have returned to my former self. Hold on a second,\" he says finally releasing me and holding up his hand. \"Yes, yes. I can breathe again.\"\n\nI'm not surprised by his exuberance-- Dorian has always been this way. He's just a loud, proud, overly excitable man.\n\n\"A bit dramatic there, Dorian,\" I respond. \"But it's good to see you too. I've missed you. But what the actual fuck did we just walk through to get back here?\" I point in the direction of the performance space.\n\n\"Ah, yes. Gossip Ends Here. Andrea's taken over the performance pieces and she's into showcasing the plights of women. Did you wait until they got out of the beds and grabbed hands? That's when it gets really weird.\"\n\n\"No, thank god.\"\n\nDorian seems to finally notice Annie and promptly pushes me aside. He circles her entire body as he gives her an exaggerated analysis that has me shaking my head. \"And who is this angel you brought to me?\"\n\n\"This angel is named Annie,\" Annie responds playfully, sticking out her hand to him. He takes it, but instead of shaking it, he places a kiss on top of her hand.\n\n\"Oh, Jesus, Dorian. Stop it,\" I say.\n\nDorian lifts his head from her hand and looks up at her with the smile I've seen melt more than one heart over the years. \"I may be gay as Christmas, but I can still appreciate beauty when I see it. Humans can be pieces of art just as much as a canvas can. And what a piece you are.\"\n\nAnnie grins at me. \"Oh, I like him, Choo Choo.\"\n\n\"Choo Choo?\" Dorian asks, finally coming back over to me so he can put his arm around my waist.\n\n\"It's her new nickname,\" Annie replies. \"She loves it.\"\n\nDorian lets out a loud laugh and my whole heart feels like it's filling as I hear it. I've missed Dorian so much. In college, we were inseparable and besides my family, he was the hardest person to leave behind in New York.\n\n\"And I like this one too,\" he says. \"She seems nicer than the last one.\"\n\n\"That was years ago, Dorian. Jen's not in the picture anymore.\"\n\n\"Prettier too,\" he says next, continuing to look at Annie as if he didn't hear anything I just said.\n\n\"She can also hear you,\" I mumble.\n\nAnnie dramatically pushes her hair over her shoulder. \"Oh, no. Please continue.\"\n\nDorian lets out another loud laugh and claps his hands together. \"Oh, I do like this one. Sassy pants. Charlie needs that. The others have not been up to par.\"\n\n\"Oh, and how many have there been?\" Annie asks, directing her gaze at him but she has a smirk on her face, making me think she's not actually serious.\n\n\"I don't think I'm allowed to answer that. Gay best friend rules. But Charlie is right. That was a long time ago.\"\n\n\"Annie is an artist as well,\" I say to Dorian, but when I look over to her, the light that was shining so bright in her eyes just a second before has dimmed.\n\n\"Not really,\" she says. \"I don't show or anything. Just a hobby really.\"\n\n\"A Hobby?\" I ask. \"Pretty talented hobby to be accepted to SAIC.\"\n\nDorian walks over to Annie and puts his hands on her shoulders. He's always been a touchy person and through the years I've gotten used to it. Luckily, Annie just smiles up at him like they've known each other for years and even covers his hands with her own.\n\n\"Angel, you don't have to show to be an artist. Just ask Charlie.\"\n\n\"I thought you've had gallery shows though?\" Annie asks me.\n\n\"Oh, she's shown. But I've been taking photos since my mama gave me a plastic toy camera and I never have. Art is about the creation. Not the response.\" He drops his hands from her shoulders and turns to me. \"Shall we? The collection is in the back.\"\n\nDorian walks towards the corner of the room where there's another velvet curtain hanging and pulls it open. I hear Annie's gasp before I even get the chance to look at what's there-- but as soon as I do, I understand.\n\nNot that I'm completely surprised-- Dorian's photography is the some of the best I've seen from a modern artist. Of our entire class at Pratt, Dorian was the student earmarked for greatness. But Dorian has always been Dorian. And he's never had an interest in that kind of attention. Convincing him to show in my gallery in LA this year has been one of the most challenging artist negotiations of my career-- despite how close we are as friends.\n\nIf I wasn't somewhat used to Dorian's photography, I probably would have had the same reaction as Annie. And though I didn't let out a gasp, I can feel my heart begin to race as I look at a full wall of brightly colored photos. Photos that I wasn't expecting. And it's as if I don't know where to look. There are just so many.\n\n\"Dorian,\" I whisper. \"You told me you were giving me twelve. This is unbelievable.\"\n\nHe moves over to the wall so his back is to us, and I can see him shrug as he looks up at this work. \"I'm giving them all to you. I trust you, Choo Choo.\"\n\nHe looks over his shoulder and winks but I'm not in the mood to play. I still can't take my eyes off the wall. Annie moves over to Dorian and stands next to him as they look at the collection together.\n\nDorian's photos aren't just candid. They're the moments between the moments. He and his camera seem to be able to capture the real truth behind us all. They don't just capture humans-- they capture all the tiny things we miss every day as we live our lives. He captures the emotion behind the moment. In every one of these photos, I can see something unique that will never be seen again.\n\n\"Dorian, these are breathtaking. I've never seen--\" Annie says, seeming lost for words. \"Will you tell me about them?\"\n\n\"Thank you, angel. This collection is my Harlem. My community. After school I just lost my sight. Every time I looked through my lens, it felt dull and everything through it felt forged. Until I came back here,\" he says, waving his arms around the studio. \"And I realized that this community is what I see and have always seen. It's my home. I wanted to capture the place I find more beautiful than anywhere in the world. My heart beats for each one of these faces.\"",
        "He's quiet for another moment before he turns to me. \"And this annoying woman convinced me that maybe the world should see them too. Or at least the devoid culture of Los Angeles.\"\n\n\"Culture can have a presence anywhere you bring it. And I agree with Charlie. People need to see these,\" Annie responds, walking down the line of photos and giving each a long look. \"Did you know all the subjects?\"\n\n\"No,\" Dorian replies. \"Many I didn't know personally but they recognized me. My family has been here for decades. But this one--\" Dorian says, bringing Annie down the line to the last photo. \"This one is a special woman.\"\n\nThe photo is of a woman probably in her 60s laughing as she wipes a tear from her eye.\n\n\"Your mother,\" Annie responds. \"I can see the resemblance. You have the same light about you. The same love.\"\n\nDorian looks over at me more seriously this time. \"In fact, I like this one a lot. You can keep her. Unless your hubby cares,\" he adds to Annie.\n\nAnnie looks at him in confusion until he points down at her shirt with a large grin. Annie's eyes snap to me in a glare.\n\n\"Charlie made me wear it,\" she says in a surly tone.\n\n\"Annie doesn't know how to dress herself.\"\n\nWe smile at each other for a moment, relishing in our little banter until I hear Dorian clear his throat dramatically. \"Well, aren't you two cute,\" he says. \"How long have you been together?\"\n\n\"We're not--\"\n\n\"No, Dorian--\"\n\nWe both speak at the same time, which only makes Dorian laugh. \"God, you lesbians. You always have so much processing to do.\" He turns back to the wall of photos. \"Well, Ms. Dawson. Do you have what you need, and will you stop pestering me now?\"\n\n\"You're really willing to put all these in the show?\" I ask. \"You don't need to. I know this is a big first step.\"\n\n\"Then I guess it's time for others to see them. Isn't that what you told me, my love? And if there was ever a curator I trust, it's you. So, shall I put them in a backpack and away they go?\"\n\nDorian knows there is so much more to a gallery showing than that, but I also know that he and logistics go together like oil and water. My team will need to work with him on presentation, shipping, marketing-- all of it. But that can wait for now.\n\nI walk up and put my arm around him. \"Oh yes, just put them in some plastic bags and send them via carrier pigeons to LA.\" He puts his own arm around me and for a few silent moments we all just look at the photos.\n\n\"They're perfect, babe. Thank you for trusting me,\" I finally say.\n\n\"Always. Now, enough about me. Are you a New Yorker?\" Dorian asks Annie.\n\n\"I am.\"\n\n\"Well, you've never seen the real New York art scene. I promise you that. I hope you two enjoy the exhibit.\"\n\nAnnie looks around the room with a furrowed brow. \"There's a gallery here? How big is this place?\"\n\nDorian laughs. \"Not a gallery. More like a museum of lost relics. The art that was never deemed good enough at the time. We've collected different pieces over the years. It's a blast from the past of New York's greatest movements.\"\n\nDorian always speaks like he's some Shakespearean actor on a stage, but Annie doesn't seem to mind, and she looks more excited than I've ever seen her.\n\n\"Then show me the way,\" she replies.\n\n\"Just head through there,\" Dorian says, pointing at another door. \"I have some things to finish up here, but I'll see you in the lobby once you're done.\"\n\n\"I know the way.\" I move closer to Annie so I can lace my fingers with hers again. \"Ready?\"\n\nI'll never tire of the soft expression that Annie has on her face when she looks at me. It feels like a look that's reserved just for me.\n\n\"Always.\"\n\nHer words make my stomach do a flip and I try not to focus on what she means by that word and instead pull her to the door.\n\nThe room we enter is one large space, similar to the last one we were in but with softer lighting. There are panels that give it some structure and different areas so the center could aggregate certain styles or time periods together. But when Dorian called it a \"museum,' that may have been a bit of an exaggeration.\n\nAnnie drops my hand as she excitedly wanders into the room looking at the different pieces. The room is full of so many different things. Paintings-- some of which are good and some of which aren't-- sculptors, quilts, posters and even some random items from New York City bygones. One of my favorite things in there is an old traffic light from 1917 that was one of the city's first attempts at using them.\n\nAnnie looks like a kid again as she moves through each section of the room, looking at each piece and shouting out to me like I haven't seen them before. I knew Annie would love this place as much as I do. And I only took her here because Annie means something to me too.\n\nI let her explore for a while as I slowly walk around the room. There's a section of new political posters in one corner, but other than that, I recognize most of the pieces in here. But it's not the art or the objects themselves that feel so familiar. It's the smell of the room. It smells like home, and I feel a sense of calm being back here.\n\nThis is the art world I wanted Annie to see. Not one that's built around prestige and snobbery. This is real and raw, and it's obvious that the artists who created these pieces did it because they loved it. Not because they'd get famous or rich-- most of them didn't. This place inspires me, and I can't believe I've been away from it for so long.\n\n\"Charlie!\" I hear her shout from across the room. I go over to what she's looking at. \"Where is this from?\"\n\nWhen I reach the end of the room where she's standing, I look up and see the neon \"Apollo\" sign.\n\n\"That's the original Apollo Theater sign. It was first put up in 1940, I think. They have a new one there now that matches. But this was gifted to the art center so that it stayed in Harlem.\"\n\n\"That's so wonderful,\" she says, turning around and looking at the rest of the room. \"This whole place is. Thank you for taking me here. I'd say this was a pretty good date.\"\n\nAnnie pulls me into her body and puts her arms around my neck. Our lips are close, but we don't kiss-- instead we just stare at each other-- something we seem to do more and more. I move my hands down to her waist and squeeze.\n\n\"You think the date is over?\" I ask.\n\n\"It's not?\"\n\n\"What kind of a woman would I be if I didn't buy you dessert?\"\n\n\"The horrible kind actually.\"\n\n\"Then would you like to join me for ice cream?\n\n\"In December?\"\n\n\"I'll keep your mouth warm as you eat it.\"\n\n\"Then count me in.\"\n\n\"Let's go say goodbye to Dorian and then I'll take you to the best ice cream joint in New York.\"\n\n\"Lead the way, Choo Choo.\"\n\n<p align=\"center\">~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~</p>\n\nDorian is leaning against the front desk talking to Bradley when we finally emerge from the exhibit.\n\n\"Angels, how was it?\" he asks, coming over to us.\n\n\"Wonderful. So much history and beauty in one room. I'm in such awe of what you've done here,\" Annie responds.\n\n\"And what kind of art do you make?\" he asks her.\n\n\"Charcoal portraits. But again, it's just a hobby.\"\n\n\"They're special, Dorian,\" I chime in. \"I've seen them. Better than Clarke.\"\n\n\"Who's Clarke?\" Annie asks.\n\n\"A woman we went to school with. She has a showing at the Whitney right now. And her work is nothing compared to yours.\"\n\nDorian nods his head as he listens and then turns and heads back to the front desk. He picks up a card and brings it over so he can hand it to Annie.\n\n\"This is my info. We have a collective of artists here. And I think you should join. We do showings all the time. Nothing fancy like Ms. LA over here,\" he says, nodding to me. \"But I think you should join our little group.\"\n\n\"You've never even seen my work,\" Annie says, tentatively taking the card.\n\n\"Charlie has. And she has the best eye in the business.\"\n\n\"So she keeps telling me,\" Annie says with a smile.\n\n\"Call me. Please,\" he says.\n\n\"I will,\" Annie says but I'm not sure I believe her.\n\n\"And now we're off. I've promised the bride some ice cream,\" I say.\n\nBradley rushes over and hands us our coats without me even having to ask.\n\n\"Gerald's?\" Dorian asks.\n\n\"Only the best,\" I respond.\n\nHe looks over at Annie. \"Get the maple ice cream. It's divine.\"\n\n\"Thanks for the recommendation,\" she says before moving over to him. \"It was lovely to meet you. Thank you for allowing me to be here.\"\n\nDorian leans down and places a kiss on both of Annie's cheeks. \"I plan to have you back soon.\" He then moves over to me. \"And you. I suppose we'll be speaking soon. Business, business, business.\" He kisses my cheek. \"You look well, Charlie. Happy. Whatever has done that,\" he says looking over at Annie. \"Maybe keep it around.\"\n\n\"I'll call you soon,\" I respond, ignoring his last statement since I know Annie can hear.\n\n\"Stay warm, loves,\" he says before moving back to the desk where Bradley is.\n\nAnnie gives me that soft smile I crave and reaches out for my hand. \"Now get me that dessert you promised and let's get back to that hotel room.\"\n\n\"The hotel?\" I ask. \"I suppose we did already break the rule.\"\n\n\"And they were made to be broke.,\"\n\nI take her hand as we leave the center. And for the first since my parents were alive, I feel home.\n\nChapter 20\n\nAnnie and I are sprawled across the bed, both trying to catch our breath. We didn't even make it three feet into the hotel room before we were pulling on each other's clothes and falling onto the bed. The bachelorette shirt had its moment, but it's now somewhere on the ground. Annie made a point to throw it as far as she could.\n\n\"I still can't believe you got chocolate ice cream,\" she says in a breathy voice.\n\nWe're both still on our backs. After hours more of sex-- or what is slowly starting to feel only like making love-- neither of us can seem to move too much. I can't even muster the strength to turn my head to her.\n\n\"That's what you're thinking about right now?\"\n\n\"Good thing we fucked because it's almost all I've been able to think about.\"\n\n\"Chocolate ice cream is a staple flavor. It's like chocolate or vanilla. It's a classic.\"\n\n\"Maybe in 1920. But now we know better. Who gets plain chocolate ice cream anymore? You didn't even get sprinkles.\"\n\n\"Sprinkles conflict with the creamy texture of the ice cream. Now I feel like you're an ice cream snob. And that seems like a pretty big red flag.\"\n\n\"I thought you liked me in red?\" she asks, turning her body on her side and giving me a seductive smile.\n\nI let out a sigh as Annie's fingers softly trail down my hair and then onto my arms. It doesn't feel sexual, it just feels intimate, and I've never felt this comfortable with a woman. Not even with Jen at our best.\n\n\"I do indeed,\" I say, letting my eyes close for a moment. \"But I like you in anything. Even tacky shirts.\"\n\n\"You're so cute sometimes, you know that?\"\n\nShe leans in and gives me a quick peck on the lips. But before she can pull back, I deepen it. It's not urgent or passionate-- it's simply romantic. Our lips move together, and I can feel us both sigh into it. Somewhere along the way tonight, things changed. Our bodies seem to be drawn to each other like magnets. I feel charged when I'm connected to her.\n\n\"I like this. I like being with you. Did you have fun tonight?\" I ask, finally turning my body so we're facing each other.\n\n\"I did. You showed me a new side of New York. And I'll cherish that forever.\"\n\nI try not to let my emotions take over when she uses the word \"forever.\"\n\n\"What's the New York that you know?\"\n\n\"Well, you know about my family. They're snobbier than yours even though they have no right to be. Everything was strict. Ordered. Serious.\"\n\n\"But you're close with your siblings?\"\n\nI want to get to know Annie better. I want to know everything about her. But I wasn't expecting my question to cause such sadness to spread across her face.\n\n\"Very close. Zoe was so much younger than Dylan and me. I wouldn't say we helped parent her, but we were huge influences. My parents were never around. So, we took care of her a lot. For about five years, she even slept in my bed every night. And whenever she cried, it was always Dylan she wanted, not mom or dad.\n\n\"It must be so hard for Dylan to be kept away.\"\n\n\"It is. It's heartbreaking for him. We sneak visits every now and then but it's not the same. And it's hard not to be able to be open about my relationship with him too. He's to me like Kat is to you. He's my best friend. And I have to keep it a secret from my parents. They don't even know I see them.\"\n\n\"I can understand why you're so scared to come out.\"\n\n\"Zoe needs me. I can't just leave her life.\"\n\n\"What's she like?\"\n\nA smile plays on Annie's lips as she looks down at the sheets and I can see a different kind of affection on her face that she's never shown.\n\n\"She's sweet. And quiet. Very introspective. Basically, the opposite of Dylan. Dylan is the loudest person I know and doesn't ever stop talking.\"\n\n\"Sounds like Kat,\" I say.\n\nAnnie laughs. \"Very much. They'd get along. But Zoe is sensitive and like the rest of us, has always wanted to please our parents. But she's a good kid. We used to have so much fun together. When she breaks out of her shell, she's really funny and silly.\"\n\nI play with the fingertips of Annie's hand and I'm silent for a few seconds trying to gather my thoughts. For someone who has lived for her family for so long, I know what this all means to her and how daunting it can be. But I also want to know what she sees in her future. And with whom.\n\n\"You need to live a life for yourself too,\" I say tentatively. \"She'll always have you.\"\n\nAnnie nods her head but keeps looking down. \"I know but it's so much more complicated.\"\n\n\"Would you consider Dorian's offer? I hope you know he was sincere.\"\n\n\"I don't know. I draw for myself. I don't know if I want to be part of some collective. It's hard enough finding time to do it with my job.\n\n\"But you don't need that job. You've never once said it makes you happy.\"\n\nAnnie sits up and pulls the sheets around her body and in less than a second, the room temperature feels like it's dropped ten degrees.\n\n\"And what am I going to do?\" she asks in a short tone. \"My parents have basically ensured that my success lies in their company.\"\n\n\"How do you figure? You have an art degree from one of the most prestigious schools in the world.\"\n\n\"It's just a degree, Charlie.\"\n\n\"But you could support yourself through your art. You don't need them. This isn't 1950. You can do anything you want. Your talent needs to be seen. And you've said yourself that you want out of their clutches.\"\n\nAnnie turns to me with narrowed eyes. \"Is that why you took me there tonight? To push me into the same thing you pushed Dorian into? Is that what you said to him? Is it me you want or my art?\"\n\nI'm so confused by the sudden change of mood that my head feels like it's reeling. I sit up so I can see her better.\n\n\"I never pushed Dorian into anything. And I'd never want you just for your art. I took you there because it's special to me and I wanted to share it with someone who's also special to me.\"\n\n\"But not special enough to leave LA for.\"\n\nI let out a harsh laugh that has no humor in it. \"Leave for what? Someone who will never let herself be happy? Who will always lean on a father who clearly doesn't care about her happiness? I'm not sure you'll ever let yourself be happy.\"\n\nI suddenly feel exposed so I reach to the floor and grab a t-shirt I can throw on so I'm less naked.\n\n\"He's not a bad man,\" she says defensively. \"I told you I need to change my life, but my dad isn't some monster.\"\n\n\"Maybe not. But he'll do anything he can to succeed. Not worrying about what or who he takes down in the process, including his own daughter.\"\n\n\"And you know my dad that well?\"\n\n\"The fact that he's decimating my parents' entire company and using you to get to Ian gives me a pretty clear picture.\"\n\nAnnie just stares at me without saying anything but it's as if I can see all her thoughts flashing behind her eyes, one right after the other. I had never planned to mention any of that. What happens with the two companies has nothing to do with Annie or myself, and I know my uncle wouldn't have wanted me to say that. But I'm past caring about that. This is about us. And if there even could be an us.\n\nEarlier tonight I thought it was clear that's where we were headed. But she can't seem to get out of the dichotomy of wanting freedom and wanting to please them for as long as she can.\n\n\"That's not true. That's not even what we do,\" she says, getting up and putting her pants on. \"We invest. We're expanding the hotel group.\"\n\n\"It's not, Annie. And Ian knows it too. He's working with your dad to make a whole lot of money from my parents' legacy. And from what I've seen, your dad only cares about one thing. Just like Ian. Money and prestige.\"\n\nI watch as Annie puts on her coat, and I don't know how to stop the freight train of drama that just came crashing into this room, but I've clearly hit a nerve with her just like she has with me.\n\n\"Will you stop?\" I ask when she begins buttoning her coat. She looks up at me with a hard look on her face. \"Why are you getting so defensive about something you've already admitted is a problem? I know you love him. But why would you let him dictate your whole life? You're not Zoe's age anymore.\"\n\nShe looks at me with tears in her eyes and I immediately get off the bed and go to her. I don't even care that I'm pantless-- I never expected this night to blow up like this and it kills me to see her cry. I thought Annie agreed with all this. But it's clear she's conflicted on what her future holds and how much she's going to allow her family to dictate it.\n\n\"Because he's my father. It's my family. And he's not the man you're claiming he is.\"\n\n\"I'm trying to protect my own family too here. And your dad and Ian are trying to destroy it.\"\n\n\"It's not like that,\" she argues again.\n\n\"It is Annie. One day you'll have to face who he is and who you want him to be. And you'll have to decide who you're going to live for.\"\n\nAnnie gives me a long look, one tear streaming down her face. \"I thought of all people, you'd be the one to understand not wanting to lose a father. Don't pressure me into taking away what you've already lost.\"\n\nI take a step back because her words feel like a slap in the face.\n\nIt takes a moment, but Annie's eyes widen as she realizes what she just said. \"Charlie, I'm so sorry. I didn't mean that. I'm just feeling defensive. I know you're not pressuring me.\"\n\nAnnie has told me herself that she doesn't want to live the life her family has created for her. But there's clearly some barrier she can't break through. Maybe she's just behaved the way they've wanted for so long that the thought of evolving that is too hard. Breaking up with Ian is one thing but changing more seems like something else.\n\nI take another step back, feeling my walls growing with each passing moment. \"You're right. I'd give anything to have my dad back. And I guess you have yours. Congratulations.\"\n\n\"Charlie--\" she begins to say but I walk towards the door of the hotel room.\n\n\"I don't think this conversation is going anywhere good tonight. And I have to be up early for the final fittings and then some bridal lunch. Maybe you should go.\"\n\nAnnie stands there like she doesn't know what to do, but finally, she nods and walks towards the door. When she gets there, she turns to me.\n\n\"Tonight was the best date I've ever had. Best night I've ever had. I'm sorry I'm not being brave fast enough for you.\"\n\n\"I never asked you to leave your family. And I never gave you a deadline. I just wanted to know there was a future where we could be free.\"",
        "Annie's eyes tear up again and she looks like she's trying desperately not to let them spill completely. \"I've never been brave enough for anything, Charlie. You deserve better anyway. You're special. No wonder I fell in love with you so easily. I'll see you at the rehearsal dinner.\"\n\nAnnie opens the door and walks out without another word, and I'm left standing there in a daze. What started out as the best night of my life slowly turned into a chaotic mess.\n\nI sit down on the floor right where I am, put my head in my hands and let the tears fall that have been waiting to tumble since our conversation started.\n\nAnnie is all I want. She's all I could ever want. But our relationship was doomed from the start and it's now clear that the barriers I thought might fall, are only growing impossibly tall.\n\nThis rehearsal dinner is going to be hell."
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "lesbian",
        "romance",
        "lgbt",
        "erotica",
        "new york",
        "lesbian romance",
        "lesbian sex",
        "queer",
        "girl on girl"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-certain-tension-ch-15-20"
}