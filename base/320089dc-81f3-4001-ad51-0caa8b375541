{
    "title": "Slender Man Ch. 02",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 7 - Slender In Farm Fields (Continued)\n\n11:30pm, Wednesday, March 8th. Town & County Police Headquarters.\n\nIt was on the verge of chaos. The missing girl's name was Henrietta Claymore, a fourth grader. Her sobbing mother Carla Claymore was in the Pastor's Room with Chaplain (Captain) Calvin, our Protestant chaplain. Her father John Claymore was also there, but was in the Admin Group's breakroom with Protestant Chaplain (Lieutenant) Hobson. The parents were legally separated, so we kept them physically separated, as well. The divorce lawyers were with their clients: Tina Felton with Carla, Ferguson Stegall III with John.\n\nBlockades were manned at every road leading out of the County; no one was leaving without their car being examined, and any suspicious vehicle was pulled over and the driver asked to open the trunk. Those that demanded warrants were held in place until the warrants arrived... and Judge Rodney K. Watts was having no problem issuing those warrants on the merest whim of 'probable cause'.\n\nThere was a huge crowd of reporters in the Press Room. Some of them, especially John Hardwood of KSTD, were angrily and viciously snarling at Captain Briscoe, Public Relations Officer; the reporters were demanding that Commander Troy personally make himself available to them to answer their questions. Obviously, I was not exactly feeling beholden to the Press, and so I was having none of that.\n\nAnd speaking of Your Iron Crowbar, I was in MCD, which was our 'War Room'. The large monitor screen on the wall was hooked up to computers that showed where every Patrol cruiser was as they searched for the missing girl. Detectives were at their desks, taking phone calls, examining information being piped in to their computers, and trying to find any scrap of a hint that would help find the girl. The Mouseketeers were at two of the desks, gathering data on the girl, her family, her family's friends, any information we could find about her school and the people working at it.\n\nAnd I was standing right in the middle of it all, in the middle of the MCD room, staring at the big television monitor but my mind a million miles away and going a million miles an hour...\n\n\"Commander...\" I heard a voice say, seemingly from far away. It was Captain Ross, standing next to me. \"Sir, Myron and Mary have some data, and it might be better to go over it in your office.\"\n\n\"Yes.\" I said, barely audible. Then I got aware of everything. \"Yes. Let's go to my office...\n\n* * * * * * * * * * * * * * * *\n\nMary started us off once we were seated in my office: \"John Claymore is a teacher at Town High School, in the Vocational Department. Teaches electrical wiring as part of the homebuilding program. He's also been hired by the I.B.E.W. to give refresher training to that Union's membership from time to time. Carla Claymore is a teacher at River Valley Middle School.\"\n\n\"They've been married twelve years, and Henrietta is their only child.\" Mary continued. \"Neither has a criminal record other than two speeding tickets each in the past. Carla filed for divorce from John about three months ago, and it became a raging battle over custody of Henrietta. John accused Carla of verbal and physical assault of Henrietta, and Carla fired back by saying John tried to sexually abuse Henrietta. Doctor Yates and Doctor Fredricson examined Henrietta and said there was no physical or sexual abuse. Both parents' lawyers tried to file restraining orders against the other parent, and Folsom shot both petitions down.\"\n\nMary went on: \"The Federal Marshals became involved last Christmas, when Carla took Henrietta to Carla's parents' home, which is in Hammondsville to our west... and across the State Line. John immediately called the FBI, as the temporary custody order in place while the divorce is working through the courts forbade Carla from taking Henrietta out of the State.\n\n\"Marshals brought them back, and John and his lawyers really ratcheted things up in Court and tried everything to get Henrietta away from Carla's custody. Ultimately, the judge ruled that Henrietta would stay with her mother, but Carla now knows if she takes Henrietta even out of the County, she, Carla, will go to prison and lose custody of Henrietta forever.\"\n\nI said \"So each parent is accusing the other of this crime?\"\n\n\"Carla says she thinks John is behind it.\" Myron said. \"So the first thing we did was check on John. He was at the Kiwanis Club meeting when the news of Henrietta's disappearance broke. He'd been at the School all day, and was then at the Fire Department Range talking about the wiring in the house they're going to burn for training in a few days. It's not that he was always in someone's sight, sir... but that the windows for him to have done something are narrow.\"\n\n\"And the wife?\" I asked. \"Where was she?\"\n\n\"She said she was at school,\" said Mary, a bit skeptically, \"then went grocery shopping, then went home to cook dinner. Henrietta was at her friend Heather's house, and when she was overdue to come home, Carla called Heather's mother, Jen Lance. Jen said Henrietta had left some time before, and that's when Carla called the Police.\"\n\n\"You sound skeptical.\" I said.\n\nMary caught her breath. \"My apologies, sir. I should leave my emotions out of my reports.\"\n\nI said \"I don't mind you sounding skeptical if you're skeptical. I'm curious as to why you're so skeptical.\"\n\nMary said \"Something doesn't fit. She's so worried about her husband taking her child away, but she lets the girl walk home alone from her friend's house when she could have gone and got her?\"\n\n\"Did John accuse Carla of being behind Henrietta's disappearance?\" I asked.\n\n\"No sir.\" said Myron. \"I watched him being interviewed by Teddy Parker. He told his story, answered Parker's questions directly, but didn't speculate further. I didn't sense he was being evasive, sir, but I can't read minds like you do.\"\n\n\"I wish I could read minds. It would make all our jobs easier.\" I said. \"Did the parents talk with their lawyers very much?\"\n\n\"I don't know, sir.\" said Myron. Mary also wasn't sure.\n\n\"Mary,\" I said, \"don't ever be afraid to go with your instincts. I happen to think you are correct that there are inconsistencies in the wife's actions. That doesn't mean she's done anything wrong, though. Okay, is there anything else I should know? Who are these people who Henrietta visited today?\"\n\n\"Larry and Jen Lance, and their daughter Heather.\" said Mary. \"Coincidentally, or maybe not, Larry and Jen are also getting a divorce. Heather is a little younger than Henrietta, but both are in the same classes in school. Neither Larry nor Jen has a criminal record. I haven't done any digging into their pasts yet.\"\n\n\"Go ahead and glance into that.\" I said. \"I'm going back to MCD.\"\n\nI went back into MCD, Cindy following. As I looked at the monitor of our deployment, I asked \"Why are so many of our people right in the River Valley neighborhood?\"\n\n\"Because the girl lives in that area and disappeared from it, sir.\" Cindy said matter-of-factly.\n\n\"Sir,\" said Captain Teresa Croyle, \"we're using the concentric circles method of searching, from inside and in ever-widening circles.\"\n\n\"Okay.\" I said. \"Listen, I want you to take half of the Patrol cruisers inside the neighborhood, and a third of those in this next ring, and send them further out. I don't see any coverage at all of the farm fields west of the River, where we've had Slender Man sightings, and where Kevin Greeley was dragged to his death. What do we have in the way of drones?\"\n\n\"Sir,\" said Hugh Hewitt, \"we have six drones, including two on loan from the FBI.\"\n\n\"Do they detect infrared?\" I asked.\n\n\"Yes sir.\" said Hugh. \"They can be set to either infrared or visible light, but not both at the same time.\"\n\n\"Put 'em on infrared.\" I said. \"Fly over those farm fields. We'll see the girl's heat signature before we eyeball her in the darkness.\"\n\nWhen Teresa and Hugh just stood there, I said \"Is there a question?\"\n\n\"Uh, no sir.\" Teresa said.\n\n\"Good. Go. Get to it.\" I replied. They scurried out. I noticed the MCD room was a bit quieter, and there were surreptitious looks in my general direction. I watched the monitor, and within five minutes saw Patrol cruisers being redeployed. I went back to my office.\n\n* * * * * * * * * * * * * * * *\n\n\"Jack Muscone would say 'Four hundred years ago...',\" Cindy said as she came into my office behind me, her imitation of him a poor one. \"So why do you think this girl is in the farm fields?\"\n\n\"Two reasons.\" I said. \"First, a kidnapper is not going to take this girl and just stand on a nearby street corner. Either they're in a house, and we're prohibited from barreling through them without proper warrants despite what the Boston Police did after the Boston bombings; or the kidnapper took the girl somewhere else. I really did not understand the concentration of Police vehicles right in that area when we have 300 square miles of County to search.\"\n\n\"And second,\" I continued, \"the Slender Man sightings. He's been seen in several neighborhoods and here at Police Headquarters. But there was another sighting... in a farm field, west of the River. And we're not even looking there.\"\n\n\"More training to follow.\" Cindy said. That got her a look from me, eyes blazing.\n\n\"That's the least of my worries right now, Captain.\" I said icily. \"Finding this girl is my priority. Let's make that happen.\"\n\nCindy nodded and scurried out.\n\nPart 8 - Lost And Found\n\nAs the clock neared midnight, I got tired of repeated texts from Captain Briscoe. I told Cindy to go get him and tell him to report to my office immediately. When he came into my office, I did not invite him to sit down but locked his heels.\n\n\"Captain,\" I said sternly. \"I am getting tired of these texts. I know the Press is arrogantly demanding I go give them personal updates. The Press can sit and spin on a crowbar for all I care.\"\n\n\"Sir, John Hardwood keeps yelling about----\" Briscoe started, but I didn't brook it.\n\n\"Yelling?\" I said. \"Tell him that the next time he yells, he will be arrested and booked for disorderly conduct and disturbing the peace, and I'm not kidding; I'll send Rudistan and Morton in there right now to break his ass down. And tell everyone in the Press Room that the Police Commander will not be dictated to by the lying Fake News assholes of the Press.\"\n\n\"Sir, I can't say that to them...\" protested Briscoe.\n\n\"I'll go tell 'em!\" Cindy happily offered.\n\n\"I expect what I said to be relayed verbatim, Captain Briscoe.\" I said. \"Get out of my office, and don't text me again unless it's actually important.\"\n\nBriscoe left, and I could tell he was not happy about our 'conversation'. Tough, I thought. Why am I the only one that treats the Press like they should be treated... respect or disrespect them in the exact same measure they respect or disrespect me?\n\n* * * * * * * * * * * * * * * *\n\n\"This is Alpha-4. We've got her!\" came the call.\n\nMCD cheered as the radio messages came in. \"She's groggy, but seems to be okay. We are taking her to University Hospital now.\"\n\n\"Roger that.\" said Lt. Croyle. \"Crime Lab team, meet them at the Hospital. Also send a team to inspect the scene where she was found.\"\n\n\"This is Commander Troy.\" I said into the radio. \"Congratulations, good job by everyone. Alpha-4, come to Headquarters and my office when you are done at the Hospital.\"\n\n* * * * * * * * * * * * * * * *\n\n\"She was just lying there, sir, asleep.\" Patrolman Johnson said. She was lying on a white sheet, which is what we saw in the moonlight. She had her coat on, and her breathing and heartbeat were slow like she was sleeping, but otherwise she seemed to be okay.\"\n\n\"Did she see anything when she was kidnapped, or afterward?\" I asked.\n\n\"She was incoherent at the scene, sir.\" said Patrolman Barker, one of the newer Officers on the Force. \"She was murmuring, but no clear words.\"\n\n\"Okay.\" I said. \"Good job, guys. Report to your Sergeant, and get your written reports in as fast as you can.\" \n\n* * * * * * * * * * * * * * * *\n\n3:00am, Thursday, March 9th. Information was coming in fast and furious. I'd told my Captains to gather it and put it together into reports for my consumption. I told Captain Briscoe to announce that the girl was found, and that no more statements would be made until the next morning. Though the Press continued to make demands that I personally address them, it became clear I'd be doing no such thing, and they finally cleared the Press Room and went to the Hospital.\n\nCindy and Teresa knocked on my door and came into my office. \"Sir, is the Chief here?\" asked Cindy.\n\n\"He's asleep in his office.\" I said. \"I told him the girl was found and that he should go home and get some rest. He said he'd rest here in case something came up. So, whaddya got, Angels?\"\n\nTeresa started: \"The girl Henrietta was admitted to the Hospital for observation. She was drugged with a sedative, but will be fine after she sleeps it off. She was not physically harmed otherwise, and was not sexually molested.\n\n\"One of our Officers interviewed Heather and Jen Lance last night.\" Teresa continued. \"Heather said she and Henrietta were talking on the front porch and Heather had to go to the restroom. When she got back to the porch, Henrietta wasn't there, and was nowhere in sight. Heather thought Henrietta had just walked home, even though she wasn't supposed to, and didn't even say anything to her mother for a while. Then Carla Claymore came over to pick up Henrietta, and that's when the hysterics started... with Jen and Carla. Both women became very upset, and still are.\"\n\n\"And Heather saw no cars on the road, no one else walking on the sidewalk at all?\" I queried.\n\n\"She says she saw no one and no cars at the time Heather disappeared.\" Teresa said. \"She said cars passed by over time, but she took no notice of them.\" I nodded.\n\n\"Sir,\" said Cindy, \"the Crime Lab team got the sheet that the girl was lying on. The only footprints leading to it were our Police Officers's. They said they looked for footprints as they walked, and saw none. They tried to be careful about doing as little as possible to mar the scene, one walking in right behind the other. But they had to approach the girl and check her out when they found her.\"\n\n\"Of course.\" I said. \"So where was she as we look at the map?\"\n\n\"Along the same road that Kevin was dragged upon to his death.\" Teresa said. \"But much further east, not far at all from County Road 5.\"\n\n\"Any camera footage into that area?\" I asked. \"Or along the way that might show us a car that came from the River Valley subdivision to that farm?\"\n\n\"Myron and Mary are gathering that, sir.\" said Cindy. \"But I'm not hopeful. The perp could've taken a hundred different routes to get there, including all the way around the Bypass from the south side.\"\n\n\"Sir,\" said Teresa, \"I want to apologize for my poor plan in searching for this girl. You are right that it was bad----\"\n\nI held up a hand. \"Don't apologize. What you were doing was very much standard procedure. You also did very well making sure every road out of the County was covered. We'll discuss more efficient deployments at a better time. For now, tell the Night Shifts to continue looking for suspicious vehicles, and everyone else can stand down... after their police reports are turned in, of course.\"\n\nPart 9 - The True Enemy\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Thursday, March 9th, from in front of Police Headquarters. \"Ten-year-old Henrietta Claymore was found alive and unharmed last night after disappearing late yesterday afternoon or early evening!\"\n\n\"Police Commander Donald Troy has refused to give the Press any information about the girl's disappearance nor her recovery.\" Bettina continued. \"Commander Troy also refused to update the Press with any information as the search for young Henrietta was underway. Fortunately for Commander Troy, his Police Officers found the girl alive and well. After asking if the FBI was being asked to assist in the search for the girl, Channel Two News was told that Commander Troy had not asked for such help, and that he didn't need it.\"\n\n\"I am going to have Briscoe's ass spinning on this crowbar.\" Cindy said, her voice full of anger, her ice-blue eyes blazing with cold fury.\n\n\"No no no no...\" I said. \"Briscoe didn't say any of that. Bettina made that shit up, if I don't miss my guess.\"\n\n\"And in other news,\" Bettina said, \"Governor Val Jared continues to insist that the SBI will be dismantled, and all that is left will be expected to support inferior local Law Enforcement personnel, even as the Budget battle continues to be deadlocked. The SBI has been gutted largely by the actions of Commander Donald Troy, who arranged the Legislative compromise that has left our State at the mercy of drug lords.\"\n\n*CLICK!* \n\nThe television screen went black, briefly protesting as the power to it was cut off. The remote was in the Green Crowbar's hands. I have rarely seen her so angry.\n\n\"I can't listen to any more of that shit.\" Cindy said. \"I am getting tired of that bitch!\" She stalked out of the room.\n\n\"If she hadn't have turned it off,\" said Joanne Warner, \"I would have... by throwing something at the screen.\"\n\n\"What is up with her?\" asked Theo Washington, who had a stunned look on his handsome face.\n\n\"I dunno.\" I said. \"I must've done something right. The Press hates me the most when I do something right. All right, I have work to do. Y'all have a great day, and let's bust some perps.\" With that, I headed back to my office.\n\n* * * * * * * * * * * * * * * *\n\n\"This is Priya Ajmani, Five-Alive News in the Morning!\" said Priya at 8:00am from in front of City Hall. \"Five-Alive News is continuing its coverage of the aftermath of the disappearance and rescue of Henrietta Claymore last night! Let's go to trusted reporter John Hardwood for the latest. John!\"\n\n\"Thank you, Priya.\" said Hardwood, who was in front of the Courthouse complex. \"Although Henrietta Claymore was found safe just hours after disappearing, the Press is being stonewalled in obtaining the facts you have a right to know, about what happened last night. Commander Donald Troy refused to speak with the Press last night, and also has refused to issue any statements to the Press regarding the investigation.\"\n\n\"Additionally, continued Hardwood, \"Five-Alive News has learned that Jay Swenson and Ken Eidex of 'Citizens For Police Accountability\" plan to file a lawsuit against Commander Donald Troy, saying he authorized forced warrantless searches of Citizen's cars during the hours Ms. Claymore was missing. Commander Troy has not responded to our repeated requests for comment.\"\n\n\"John,\" Priya asked as the television went to split-screen, \"were any citizens actually searched without a warrant?\"\n\n\"Mr. Swenson and Mr. Eidex believe so.\" said Hardwood. \"Additionally, Priya, citizens complained about being detained by Police if they objected to having their cars searched.\"\n\n\"That is total bullshit!\" snarled a very angry Cindy Ross as we watched in my office.",
        "\"I know.\" I said. \"You might notice how carefully Hardwood crafted his words to make sure he didn't actually say himself that we made any warrantless searches. And I always think it's amusing when they have to tell us that a reporter is 'trusted', as Priya did of the most very untrustworthy Hardwood.\"\n\nJust then there was a knock on my door. Chief Moynahan came in. \"I just got off the phone with the Sheriff. We were talking about what Bettina had said, and we watched the Hardwood comments together, via phone. I am going to give a press conference and shoot down these accusations. As part of that, i will tell the Press that I ordered you to not speak to them. And I really did do that, though maybe just in my head. But it's to humiliate them.\"\n\n\"I appreciate it, Chief,\" I said, \"but I doubt they'll carry it live on the air, and they sure as hell won't air it on tape later.\"\n\n\"If they don't,\" said the Chief, \"then I will close the Press Room, and forbid the Press entrance to Police Headquarters, either Precinct, or County Jail if it's not aired by the noon broadcast.\" With that, the Chief took his leave of us.\n\n\"What I want to know,\" said Cindy, \"is why they're doing this. I don't have to be you or your mother to see that this is orchestrated and coordinated.\"\n\n\"Yes, you're right, it's definitely intentional.\" I said. \"But I wonder if Priya was part of it. She seemed surprised by Hardwood's attacks. Maybe Bettina and Hardwood collaborated on this.\"\n\n\"I would not be shocked at all.\" Cindy said. \"Don, you need to fuck the hell out of that bitch and get her head back on right. She's starting to really, really piss me off.\"\n\n\"After porking Priya,\" I said with a grin, \"why would I put my pecker into Bettina's pickled pussy again?\"\n\nIt took Cindy five full minutes to stop laughing and regain her composure.\n\n* * * * * * * * * * * * * * * *\n\nKSTD covered the Chief's press conference live. KXTC did not. Nor did KXTC show any of it during their noon broadcast. That got Burt West and Bettina phone calls from the Sheriff, threatening to deny KXTC access to City Hall, Police Headquarters, or any Police crime scene. They would show the bare minimum of Chief Moynahan's comments during the six o'clock newscast.\n\nPart 10 - Slender In Memory\n\n9:00am, Thursday, March 9th. We were meeting in Classroom 'E'. Present were: Chief Moynahan, me, Cindy, Teresa, J.R. Barnes, Myron and Mary, Joanne, and Teddy Parker.\n\n\"Dr. Yates talked with Henrietta an hour ago.\" said Cindy. \"It was taped by Sergeant Rudistan, and that has been put in the evidence servers. The gist of it is that Henrietta said she was walking home when she thought someone was behind her. She turned and saw a very tall man, but didn't see his face. She doesn't remember anything else. There is a puncture mark on her neck, which was likely the injection point of the sedative that knocked her out.\"\n\n\"Okay.\" I said. \"Not much there. Captain Croyle?\"\n\n\"Interviews of neighbors in Heather and Henrietta's neighborhoods have yielded nothing.\" said Teresa. \"No one saw anything, apparently. Considering that there are signs all over the place that it's a 'Neighborhood Watch' place, it's kind of scary that no one saw anything... or else they're just not talking to Police.\"\n\n\"Some of both, I'd imagine.\" I said. \"Mary, Myron?\"\n\nMary said \"I got a little bit more on Larry and Jen Lance, whose daughter Heather was the girl Henrietta was visiting. Larry Lance was a process engineer for Burke Enterprises before Michael Burke sold out to his son, Todd. Larry resigned when the Burke company was absorbed into BOW Enterprises. He's done freelance contract work and some work for StatePowerCorp since, but it doesn't look like he was making what he used to.\"\n\nMary continued: \"Jen Lance works for Forbes & Sehgal Engineering, but only for the last two years. Of interest is that some years ago, she was an ardent environmentalist and may have been involved with the PCGW when they went to war with Crown Chemicals.\"\n\n\"Okay.\" I said. \"Any video show up anywhere that we can use?\" I asked.\n\n\"No sir.\" said Myron. \"We tried an algorithm to compare cars in the Kensington and River Valley districts to the west side, anywhere near where the girl was found. No joy at all. It's worse than looking for a needle in a haystack; at least we know the needle is in the haystack in the first place.\"\n\n\"True enough.\" I said. \"While I have you here: anything on that pickup truck that dragged Kevin Greeley to his death?\"\n\n\"The license plate was reported stolen ten months ago.\" Myron said. \"It belonged to an elderly Korean War veteran, a Lewis Grissom. He's in bad health, in Hospice, and his wife doesn't drive vehicles anymore.\"\n\n\"Okay.\" I said. \"Unless someone has something else, we have Richard Ferrell to catch, and we have Slender Man to find. Fortunately, this girl was not harmed. But let's do what we can to prevent any more abductions... and quite frankly, I'd like for the pranks to stop. This bozo might make an appearance and suddenly find some good ol' boys or teenagers shooting at him... that was the Apple Grove method of dealing with pranksters pretending to be ghosts.\"\n\n\"My hometown, too.\" Teresa said.\n\n* * * * * * * * * * * * * * * *\n\nGoing back to my office, my assistant Helena said \"Commander, an FBI Agent Les Craig has called you twice. I told him you were in meetings, but he called back and said it was urgent. He wanted me to get you out of the meeting, but I said I couldn't do that.\"\n\n\"I'm sure he thinks it's urgent.\" I said. \"Helena, you generally know which calls to take and which aren't important. For most of the FBI, do what you can to accommodate them. But if it's Les Craig, tell him I'm unavailable. If he insists or calls back, tell him I'm unavailable to him.\"\n\nHelena smiled her pretty smile and said \"Yes sir, I will do just that.\" And I knew she would enjoy doing just that.\n\nGoing into my office, I barely had sat down when I heard Helena's phone ring. Then less than a minute later, my personal cellphone rang. I pushed the button to send it to voicemail.\n\nA moment later, the Chief buzzed me. \"Mr. Crowbar,\" he said, \"I have Agent Craig on the line. I know, I know... but just take his call and dispense with him, would you please?\"\n\nFer cryin' out loud. \"Okay, Chief.\" I said. A second later I heard \"This is Les Craig, Commander.\"\n\n\"What do you need, Craig?\" I asked, a bare minimum of courtesy in my voice.\n\n\"I'm calling to see where you are in finding Leonard Lotz.\" said Craig.\n\n\"Are you kidding?\" I asked in spite of myself. \"You harassed my secretary and then went over my head to my Chief to ask about Leonard Lotz?\"\n\n\"He's a wanted criminal that might be in your area.\" said Craig. \"We've asked your Sheriff and your Chief to make his capture a top priority. So how is that coming along?\"\n\n\"I've got two murders and an abduction to solve.\" I said. \"Leonard Lotz is at the very bottom of my list, to the point I really don't care about him right now unless he shows up on my doorstep.\"\n\n\"Commander,\" Craig said, trying to put authority in his voice, \"maybe you're not fully aware of the gravity of this situation. Leonard Lotz is a dangerous criminal and an escapee from---\"\n\n\"HOW is he dangerous?\" I thundered. \"I know what dangerous criminals are; I've arrested more of them than you have, for damn sure! Lotz has never killed anyone. Why do you keep saying he's dangerous? Why the frickin' panic in you over this guy? Eh?\" \n\n\"Lotz is dangerous, Commander.\" said Craig. \"I can't go into details with you, but---\"\n\n\"Well, if you can't tell me, then I guess I can't find the time to look for him for you... which is what you want me to do. You want me to do the job you can't get done, even with all the FBI's horses and all the FBI's men.\"\n\n\"I don't know why you're being so hostile, Commander Troy,\" said Craig, \"but you better think about the future. The FBI can be a great help to you, or can cause you problems.\"\n\n\"Is that a threat?\" I asked. The silence on the other end was deafening. Then I realized that it was prolonged. The line was dead; Craig had hung up on me.\n\nThe party never stops in the Iron Crowbar's world, I thought to myself as I put the phone receiver back in its cradle.\n\n* * * * * * * * * * * * * * * *\n\nCaptain Teresa Croyle came into my office.\n\n\"I'm glad you're here.\" I said. \"I was wondering if---\"\n\nShe handed me a file folder. \"Larry Lance's employment file at Burke Enterprises.\" she said.\n\nI smiled. \"Thank goodness I've got some competent people around me.\" I sighed and said \"Thank you.\"\n\n\"May I?\" she asked, indicating a chair. I nodded and she sat down.\n\n\"There's not a lot there, sir.\" Teresa said. \"Larry Lance was pretty good friends with Michael Burke. He did say in his resignation letter that he was leaving due to the ownership change, but there seemed to be no personal animosity towards Todd. Mr. Lance may have thought his job was in danger, and he probably was right. Todd took BOW Enterprises in new directions; Lance was part of the 'old school' crowd that was stagnant.\"\n\nI looked at the file. \"So no issues with anyone, no reason to think he's a nut of some kind?\" I asked.\n\n\"Not that I can tell, sir.\" said Teresa.\n\n\"What about John Claymore, Henrietta's father?\" I asked. \"Did you get a chance to observe him?\"\n\n\"Yes sir.\" said Teresa. \"There was obvious tension between John and Carla Claymore. But a lot of it was on her side. She was upset about her daughter, of course, but I thought she was more hostile to him than he was to her.\"\n\nI nodded. \"Okay, so I've got an eight foot nutjob that was looking into my office window and now has apparently abducted a child. Not exactly a lot to go on, eh, Captain?\"\n\nTeresa made a muffled sound that might've been a short laugh. \"Time to get Bowser on the case, sir...\"\n\nPart 11 - Insubordination\n\n3:00pm, Thursday, March 9th. I was called into the Chief's Conference Room. He escorted me in, where Sheriff Daniel Allgood was sitting.\n\n\"Have a seat, Commander.\" the Chief said, having me sit in the near chair to the door, with my back to the door. The Chief sat on the end of the table to my left. To his left, facing me, was the Sheriff.\n\n\"What this is about, Commander,\" said Sheriff Allgood, \"is the situation with FBI Special Agent in Charge Les Craig. I understand you had a phone conversation with him that turned ugly?\"\n\n\"That's one way of putting it.\" I said.\n\n\"What would be another way?\" asked Allgood.\n\n\"Another way would be an unwarranted intrusion into my work, him wanting me to do his job for him while at the same time not explaining why he wants me to do his job for him.\" I replied. I expected the Sheriff to ask me to elaborate... but he did not.\n\n\"Commander,\" said the Sheriff, remaining formal and stiff at all times, \"when the FBI requests your help on something, especially the apprehension of a dangerous, wanted criminal, why would you be opposed to giving it?\"\n\nI looked over at Chief Moynahan, who was offering me no help.\n\n\"First,\" I said, \"because Agent Craig will not explain his obsession with Leonard Lotz, and I don't share the opinion that Lotz is as dangerous as Craig makes him out to be. Second---\"\n\n\"Isn't that Agent Craig's job to determine how dangerous Lotz is?\" asked Allgood.\n\n\"If that's the case, and I'm to have no input on that, then why does he need or should he expect my help in the first place?\" I fired back.\n\nSheriff Allgood was beginning to get angry, and now the Chief intervened.\n\n\"Sheriff,\" Moynahan said, \"I bee-lieve Commander Troy has made a very cogent point.\"\n\n\"I don't agree.\" said Allgood. \"If Agent Craig says Lotz is dangerous, why should he not be believed? If the FBI, the Federal Bureau of Investigation, says Lotz is a Top Ten criminal, who are we to debate that?\"\n\n\"Do you think the FBI is better than we are, Sheriff?\" I asked angrily.\n\n\"You forget your place, Commander.\" Allgood shot back. \"I'm asking the questions, here.\" It deteriorated quickly from there. \n\nI stood up. \"I can reply one of two ways.\" I said. \"First, you ask the questions then reject my answers, seemingly accepting Les Craig as some kind of LEO god, and you apparently think I'm a piece of shit by comparison. Well, I interviewed Leonard Lotz at the Asylum; he's not a mass murderer like George Aurus, and I see no reason why he's more of a threat than Les Craig himself. Les Craig failed in Southport for years, and now he can't find Leonard Lotz when it should be easy to do so. Worse, Craig may be dirty, and there is no way I help Craig find Lotz without knowing what Craig wants with him. I might well be sending Lotz to his death if I do.\"\n\n\"Are you serious?\" Allgood asked disbelievingly.\n\n\"Hell yeah, I am.\" I snarled. Then I leaned over the table and said \"And my second reply... Sheriff Allgood... is that if you want to start throwing rank around with me, I'll shove my badge up your ass so far you'll never shit again. I sure as hell don't need you, nor this job, more than you need me right now. And when the next kid disappears, is abducted? Good luck to you.\" I turned for the door.\n\n\"Where are you going?\" shouted Allgood.\n\n\"Somewhere else.\" I said. \"Before I say something you and your wife will truly regret.\" I turned and left the room, slamming the door behind me.\n\n* * * * * * * * * * * * * * * *\n\nIt was two hours later. I was sitting in my office, alone. No one had entered in that time, and my only communication with the outside world was to tell Helena she could go home.\n\nThe door was locked, but one of the two other people who had keys opened the door: it was my wife Laura. She had the blood-taking kit.\n\n\"No.\" I said. \"Not now.\" Laura nodded, set the kit down on the edge of the desk, and sat down in a hot chair.\n\n\"So,\" my wife said, \"what did you mean about saying something that Daniel and his wife would regret?\"\n\nI peered at her. \"You do know Melina's a racist, don't you?\" I asked. \"And Daniel was head of I.A. but did nothing when Captain Malone exercised racism against blacks within this Police Department and outside of it?\"\n\nLaura nodded, but I was not done: \"And now we have a group of White Supremacists who brought nerve agents into this County, and dragged a man down a dirt road to his death, and Daniel is sitting there trusting FBI Agent Les Craig over me?\"\n\n\"You think Craig is part of the white supremacy group?\" Laura asked.\n\n\"I don't know.\" I said. \"But what I want to know is why Les Craig is so hell-bent on finding Leonard Lotz, so obsessed with it. If Lotz were a killer like George Aurus is, I could understand, but Lotz... he's not a freaking killer. He's a Silverfish-wannabee. He robs banks. He doesn't take hostages. He was never considered a threat or a violent person while in prison.\"\n\n\"I see your point.\" Laura said. \"But is that all it is with Craig? Obsession over one bank robber?\"\n\n\"No, and Craig is not all I have a problem with.\" I said. I got up and opened my whiteboards. I took from the boards the composite picture of the man that was hanging there, then turned and handed it to Laura.\n\n\"That,\" I said, \"is the man I saw at the State Capitol, and the man who I am sure I saw while I was being tortured by Casey B. Walker. I believe he is the leader of a rogue cell that may include CIA Agents, FBI Agents, and people in other Departments and Bureaus.\"\n\n\"I've never seen him before.\" Laura said. \"Do you want me to try to have him identified?\"\n\n\"No.\" I said. \"You'll never be able to, and you'll only alert him to the fact we know about him. As an example, how easy would it have been to find out anything about 'Diana', your old mother?\"\n\n\"I again see your point.\" Laura said. \"So you think he's one of those? The ones whose names cannot be spoken?\" I nodded, and then explained my thesis that he was involved in the eugenics experiments of Dr. Yarborough. (Yes, the bug-killer was on.)\n\nWhen I was done, my stunned wife said \"Well, that explains why you're under stress.\"\n\n\"And why I'm not very trusting of certain people right now.\" I said. \"Including a Sheriff that has his head up his ass. So... any other schools you ever thought about working at?\"\n\n\"No.\" said Laura, trying to suppress a grin, and failing. \"You'll just have to take the SBI job.\" I just shook my head, then chuckled.\n\n* * * * * * * * * * * * * * * *\n\n7:30pm, Thursday, March 9th.\n\n\"I think he understood.\" said Chief Moynahan as I stood in front of is desk, having not been invited to sit down. \"When you said that about his wife, he almost collapsed. That hit him as hard as your crowbar ever could.\"\n\nThe Chief then looked up at me. \"He hasn't suspended either you or me, at least not yet. But today has been a bad day. I know you don't like Les Craig, and I don't blame you. But I have received calls from others in Washington, including U.S. Senator Samuel Russell, Congressman Condor. They're only hearing Craig's side of the story of your altercation with him, and when I told them there was another side to it, they said they did not care. The Governor also called, but it was more to get the full facts.\"\n\nI remained standing, not saying anything, just absorbing it.\n\n\"Mr. Crowbar,\" said the Chief, \"you have built up one hell of an organization here. You have a very loyal group of people working for and with you. Your record of successes is respected and in some cases envied by more people than you know. Even your dog meets a higher standard.\" He was peering at me for a reaction; I did not give him anything to read on my face. His own face became disquieted.\n\n\"But there are limits, Mr. Crowbar. Not everything has to be a war.\" continued the Chief. \"Sooooo, keep your head down, try not to make any noise or headlines through the weekend, and we'll find a way to get through this, too.\" I still said nothing. \"Anything you want to say, Commander?\"\n\n\"No sir.\" I said.\n\n\"Okay, then. Dismissed. Wrap it up and go home.\"\n\nI left. What I did not know was that the Chief got on the phone. \"Yeah, it's bad... as bad as I've ever seen him... nooooo, he's way past that... I said something about his dog, and he didn't even blink... yeah, that bad... I'm afraid he'll quit, he'll leave... and then Ross and Croyle will leave, and his Data people will go, and maybe even some of his Detectives... morale would go into the toilet... we'd be destroyed...\"\n\n* * * * * * * * * * * * * * * *\n\nI went into my office and looked around. I'd always felt an aura about the place, a feeling that this was where I belonged, where I should be as I led my Police Force. But tonight, I was not feeling that. I was feeling nothing. Not just since I got this office, but for the first time since I became a TCPD Officer, I felt like this room was not home.\n\nI was contemplating how many boxes it would take to get my personal stuff out of here. One for the framed stuff on the walls, one for the Trojan Horse, one big box for the contents of my safe...\n\n\"No, you're not packing, you're not going anywhere.\" a voice behind me said. I turned to see Cindy, dressed in a black pullover sweater, blue jeans, and black civilian boots. Looking damn hot.\n\n\"I may not have a choice.\" I said, still in a mood.\n\n\"Let's go get a drink.\" Cindy said.\n\n\"Isn't Callie at your place, waiting for you?\"\n\n\"I called her.\" Cindy said. \"She knows I'm going to be late.\"\n\n\"You know,\" I said, \"I don't feel like drinking. Let's drive around Town.\"\n\nPart 12 - Slender On Deck\n\n\"Wow.\" Cindy said. \"First the Media, then Les Craig being an ass, then the Sheriff being a bigger ass...\"\n\n\"Yep.\" I said as I drove along North Street. \"All in one day. Quite the coincidence, wouldn't you say?\"\n\n\"Maybe.\" Cindy said as we turned to go south on the Bypass. \"What bothers me is how you're reacting to it all. Got Slender Man in your head? It's obvious you're driving this route looking for him.\"",
        "I gave a brief smile. \"Yes, it may come to nothing, but I'm seeing what the patterns are around here, so I can then spot the abnormal. And yes, Slender Man is in my head, and has been since I opened that window and there he was. I literally felt the electricity running up my arms... up... my... arms...\"\n\nCindy did not let me stay in the reverie long. \"You okay?\" she asked.\n\n\"Yeah.\" I said. \"I just thought of something. Okay, let's keep going south.\" Instead of taking the Bypass curve that would take us east, I turned onto a small side road that took us to County Road 5. Going south, I turned east onto County Road 2 at the southern border of the County, which took us back to the main roads. I drove up Hotel Row, seeing the lights and the cars, then past the car dealerships that were near where the Nextdoor County Highway came in. Then north along University Avenue.\n\nCindy was watching the University campus, and the mountain face to the east. Then she tensed up.\n\n\"Don,\" she said, \"the deck light to the Cabin is on.\" At that moment, my personal cellphone chimed, which was an alert that the sensor at the Cabin had been tripped.\n\n\"Don! Pull over! Look!\" Cindy said. I pulled to the side of the road and took the binoculars Cindy had been using and looked out the window past her. I could see the Cabin, perched on the mountainside high above the School. And standing on the deck, illuminated by the light that had turned on, was a very tall man in black... with a white, featureless blob of a head!\n\n\"Holy crap, it's him!\" I gasped. I gave Cindy the binoculars back, turned on the blue lights and siren, and blasted onto the road. Cars scrambled to get out of our way as I sped north, turned hard onto the road by the stadium and rumbled up the hill to the driveway of the Cabin. Cindy was calling for backup on the radio.\n\nWe parked in front of the gate, locked the car, and scrambled over the gate. I might add that a warrant was not needed, as the owner was giving permission to do this. As we ran up the driveway, we could see the deck through the trees; there was no one there.\n\n\"Stop.\" I said quietly. Cindy stopped. I pointed to our left, where the top of the hill was. \"Keep your eyes peeled.\" I whispered. \"He may have run up into the woods and would have a tactical advantage on us.\"\n\nWe kept close to the mountainside as we went along and past the Cabin, to the 'trail' that led up into the woods. I peered up, seeing nothing, then went on up. Looking down at the Cabin and below, we saw two Patrol cruisers converging on the road. We went back down. I crept along the side of the house and looked onto the deck... no one there. And though we'd distinctly seen Slender Man standing on the deck, and not hovering over it, there was not a single trace in the dust that anyone had stood or walked there.\n\nBut as we turned back, I saw the piece of paper taped to the window. It was a crudely drawn circle, with a crudely drawn \"X\" through it.\n\n\"Slender Man.\" I said. \"This is one of the eight messages either he or his victims reportedly leave posted.\"\n\n\"Well,\" Cindy said, \"at least we weren't dreaming when we saw him.\"\n\nRudistan and Morton came up. \"Find anything, sir, ma'am?\" he called out from the driveway.\n\n\"Just this paper.\" I said. \"Careful not to touch it. Bag it as evidence for fingerprint analysis. Captain Ross and I will go inside and clear the house.\" We did so, and there was no one home.\n\nWhen we were done, I said \"Rudistan, put out a full alert, increase patrols in neighborhoods with children. Be on the lookout for tall men in suits and ties where such clothing would be incongruous.\"\n\n\"That's a grownup word, sir.\" said Rudistan. \"They don't teach us big words like 'incongruous' at the Police Academy.\" Cindy grinned at the joke; I did not. I was too far gone inside my own mind palace... \n\n* * * * * * * * * * * * * * * *\n\n\"No fingerprints at all, sir.\" said Christina Cho in my office. She had just analyzed the paper we'd found. \"There are a couple of smudges that actually show that gloves were worn while handling it. The paper is the standard stuff found at any Wal-Mart, and the ink is the common cheap stuff from a disposable pen.\"\n\n\"I saw this on the Internet.\" said Teddy Parker, who had come in. \"The kids making videos in England said this was the most common sign of Slender Man.\"\n\n\"I think it's used in the video game, too.\" I said. \"I haven't played the game, so I'm not sure. There are Youtube videos about it, though. Interesting stuff... except when the kidnappings get real.\"\n\n\"Sir,\" asked Parker, \"do you think this was left at your house to taunt you?\"\n\n\"That's my thought.\" said Cindy.\n\n\"I don't know.\" I said. \"It's common knowledge that it's my house, but if you go ask people on the street whose house is that on the hill, they likely as not won't know. Also, it was really timely that we happened to be driving up University Avenue and saw the guy up there.\"\n\n\"But you got an alarm, sir.\" said Cindy. \"So that drew you in like a moth to the flame. And it's not the first time the bad guys have used that to lure you in.\" She was remembering Henry Wargrave's attack on me, where the redoubtable Bowser had run for help and raised the alarm. (Author's note: 'Reichenbach', Ch. 03)\n\n\"That's true.\" I said. \"So that would get us up to find the drawing. But actually seeing Slender Man as we did? That seems more coincidental.\"\n\nCindy said \"So maybe the perp puts up a Slender Man mannequin while he's posting the drawing, hoping people will see it and call the Police. And it just so happens the Police were the first to see it.\"\n\n\"It's getting late,\" I said, \"and I am making the mistake I always preach against: theorizing without data. Let's go home and pick this up in the morning, and we'll see then if anything new develops.\"\n\nPart 13 - Slender In Baseball\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared Bettina from in front of the statue of President Jefferson in Courthouse Square, on Friday, March 10th at 7:00am. \"Channel Two News has learned that there have been more sightings of the legendary figure known as 'Slender Man'!\"\n\nBettina continued as a tape was shown. \"Three County High School baseball players captured this footage of Slender Man at the edge of the woods behind the baseball field at the school last night just before sunset. As the tape shows, 'Slender Man' is very tall, wears a suit and tie, and has no facial features! The students turned the footage over to the Police later that night.\"\n\n\"The Police Public Relations Department issued a statement this morning, advising residents to stay calm in the face of what they call 'prank', but they do advise parents to be increasingly watchful of their children as a precaution.\" Bettina continued. \"Meanwhile, Commander Donald Troy and the Police apparently have no new clues about who kidnapped young Henrietta Claymore Wednesday evening, as Commander Troy continues to avoid the Press, and he has issued no updates on that situation.\"\n\n\"They just will not stop on that.\" said Cindy as we watched in MCD.\n\nBettina said \"In other news, the lawsuit filed by Jay Swenson and Ken Eidex on behalf of 'Citizens For Police Accountability', charging that Police violated Citizens' rights by making warrantless car searches, was dismissed with prejudice by Judge Patrick R. Folsom, who cited that Swenson, Eidex, and the CFPA have no legal standing to file the complaint. He stated that only individuals who were illegally searched could bring suit, and no one has done that to this point. The TCPD also issued a statement that every search they made had either the consent of the car's operator, or a warrant was secured before making the search.\"\n\n\"And in State news,\" Bettina said, \"Governor Jared has called upon Legislators to work through the weekend to pass a Budget bill and bring it to his desk for his signature. Karl Frazier of Public Policy Polling found some surprising results in their latest polls, including that a majority of the State's citizens want a smaller SBI that serves local law enforcement, and are supportive of the Governor's stand on the Budget bill.\"\n\n\"Ahhh.\" I said as I heard that.\n\n\"What?\" Cindy asked.\n\n\"I'll need confirmation from other news broadcasts,\" I said, \"but it looks like we're going to win the budget battle. The Press is laying the groundwork for it.\"\n\n\"Sir,\" asked Theo Washington, \"do you really believe the Media actively does things like that? I mean, intentionally working with politicians to 'lay the groundwork', to use your words?\"\n\n\"Absolutely.\" I said. The room got quiet as I continued: \"Just recently, a MSNBC hostess admitted out loud, on the air, that the Press's job was to tell people exactly what to think. And there's the famous example of collusion: back in the early days of George W. Bush's presidency, there was one weekend on the Sunday shows where no less than thirty-three reporters used the word 'gravitas', saying President Bush didn't have it.\"\n\n\"Whatever we think about President Bush doesn't matter; when 33 people use the exact same word on the very same day... and a Lexus/Nexus search showed that the word was not used at all prior to that day... well, that kind of coincidence has Dame Agatha Christie rolling in her grave.\"\n\n\"C'mon, Theo,\" Joanne Warner said happily, \"you know the Press is biased!\" I could see that someone was getting a dig at someone, but Theo rolled with it.\n\n\"They're worse than biased.\" I said. \"They're downright dishonest, in their methods if not the words they carefully choose to avoid being charged with libel.\"\n\n\"Welllll,\" said the Chief as he came in, \"I can see that this morning's conversation has turned to the worst possible subject, the Media. Why don't we discuss something more pleasannnnt... like Slender Man.\"\n\n\"If someone had not been kidnapped,\" said Theo, \"I'd say it was Mr. Todd Burke in a suit and white face mask. This guy fits Mr. Burke's body type, and he's almost as mischievous as Sergeant Rudistan..\"\n\n\"Say whaaaa?\" asked Teresa Croyle.\n\n\"Speaking of 'mischievous,\" I said, \"I think Theo is ribbing you and me both, Captain Croyle.\" Seeing Theo's 'movie star handsome' grin may have been my first observation about that. \"But seriously, Theo, that's a good observation, the body types are similar. If Todd were two feet taller, I'd have to send Captain Croyle to arrest him.\"\n\n\"She does that every night.\" Cindy said. \"And extracts 'confessions' out of him.\" That brought the house down, especially when they saw Teresa's face...\n\n* * * * * * * * * * * * * * * *\n\nMeanwhile, at 7:00am Sheriff Daniel Allgood was sitting down to breakfast in the back room of the Country Breakfast Diner. Seated at the table with him was Police Chief Emeritus Griswold.\n\n\"I'll just get right to the point of why I asked you to meet me this morning.\" said the old Chief. \"I heard you had an altercation with the Iron Crowbar yesterday.\"\n\n\"Yes, Chief, we did.\" said Daniel. \"How much have you heard?\"\n\n\"Enough, but let me hear your side of it.\" Griswold said. Daniel gave his side of the story.\n\n\"Now that I've had time to cool down,\" Daniel said, \"I realized that it was Les Craig that got Don so hot under the collar. Not sure why, though.\"\n\n\"Did Craig ask you to push Don about pursuing Lotz?\" asked the Chief.\n\n\"No.\" said Daniel. \"He called to complain about his own conversation with Don earlier in the day. He said Don blew him off, and about pursuing a dangerous criminal in Lotz.\"\n\n\"Tell me this, Daniel,\" said Griswold, \"how well do you know Les Craig?\" Daniel looked surprised; this was not the route he'd expected the conversation to take.\n\n\"Uh, not particularly well, but I know him. When I was in Internal Affairs, he'd call me and other I.A. units in Police Forces in the State and all around Southport. He was working with us to find possible Mob moles in our Departments, and he wanted to use them to pass false information to the Mob in Southport. As you know, Chief, we had different issues to worry about then.\"\n\n\"And as you know,\" said Griswold, \"a certain someone used a crowbar to pry that rot and corruption out of our Police Force and our County. My point is this, Daniel: you have seen Commander Troy at work. You have seen him solve crimes and bring down some of the most God-awful bastards we've ever seen. By way of contrast, I know that Les Craig was in way over his head against the likes of Jimmy 'Coffin' Cerone and Orrin B. Taggart. Craig is not necessarily a bad FBI Agent, but he's not exceptionally good, either.\"\n\nThe Chief landed his fish: \"So why in the world would you take Les Craig's word over Don Troy's on any thing at any time?\"\n\nAllgood said \"Well, Chief, I guess it's because I've always respected the FBI to the point that if one of their Agents says Lotz is dangerous, then I believe it. And no disrespect intended, sir, but I really don't understand why Commander Troy is so reticent to help find Lotz, even if he doesn't think Lotz is all that dangerous.\"\n\n\"You know,\" said the Chief, as if reminiscing, \"sometimes things with Don Troy are not as the world seems. I still remember the day that a DNA test came back positive for Selena Steele as the Black Widow... she was as good as strapped to the table at Jacksonville Prison. Don asked me for one hour, just one hour, and I argued against it. But Paulina gave him the hour... and I hate to think what would've happened if it had not been for Don Troy that day.\" (Author's note: 'Case of the Black Widow', ch. 04)\n\n\"I know.\" said Daniel. \"And the 800-lb. gorilla in the room you're not mentioning is that Don put me up for Sheriff, and you think I should be more grateful.\"\n\n\"No, not necessarily.\" said Griswold. \"Don has always said he did that because you were the right fit for that job, and certainly moreso than himself. Now I do think more than he does that some loyalty should be expected, but he doesn't ask for it. And he doesn't have to; he's always right.\"\n\nGriswold continued: \"I thought there was no hope when he asked for a weekend to save what we thought was a dirty cop that had assaulted a drunk driver. He worked like a dog to get the truth... and with a good FBI Agent helping him, I might add. He saved that Police Officer, and she is now his Captain of Operations, with four Purple Orders and a Police Cross to her credit.\" (Author's note: Teresa's Christmas Story.)\n\n\"No, Daniel,\" Griswold said, getting stern, \"the 800-lb. gorilla in the room is what he finally brought up yesterday... your wife. He knows her as well if not better than you do, and he knows what she is. He is fighting like hell against a very powerful white supremacist group, and he knows your wife agrees with their views more than his. His instincts of who to trust and who not to trust are incredible... but not infallible. So Daniel, if he has reason to disagree with Les Craig's opinion of something... maybe there's a reason for it. And maybe you should reconsider who to trust more.\"\n\n\"Are you saying he doesn't trust me?\" asked Daniel.\n\n\"Not when you take Les Craig's side against him.\" replied the Chief. \"I'll also add that you've gotten into a scrape or two with Chief Moynahan. Now I have great respect for Sean Moynahan, and I know he's a tough Cavalry Officer who won't back down from a fight. He also knows the measure of his Police Commander, but he has not worked with you like I had when you were in the Police Force. I think Don is giving you the benefit of the doubt. He knows you love your wife, and while he respects that, he's going to be careful.\"\n\n\"And you, son...\" finished the Chief, \"you need to let some of the best people you could hope to have running our Police Force do their jobs, and take up their side against outsiders like Craig, and protect and defend them...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, why did I not hear about this video until the 7:00am coffee klatch?\" I asked. I was sitting behind my desk, and my Angels were sitting in front of me in my office.\n\n\"I take responsibility for that, sir.\" said Captain Croyle. \"The video was turned into First Precinct. I will make sure they understand the urgency of getting material like that up the chain of command from this time forward, sir.\"\n\n\"I appreciate you stepping up and taking responsibility, Captain.\" I said. \"Yes, do have a word with Precinct Captain Briggs. Sometimes he's a bit too thoughtless, too retiring, in his handling of things that might require some urgency and sense of purpose.\" Teresa knew exactly who I was blaming for this, and I new she'd handle it 'appropriately'.\n\n\"Having said that,\" I said, \"what's the real story behind it?\"\n\n\"The tape was brought in about 9:30pm last night, sir.\" said Teresa. \"One of the kids from the baseball team and the team batting coach. It was a copy of the video on a jump drive, and they were asked to bring in the camera to be examined. That happened an hour later. We still have the camera.\"\n\n\"Good.\" I said. \"Okay, let's look at what they recorded.\" I began the video, which we watched on the television monitor. The outfield fence was blue, with pine trees behind it. Off to the right, behind the right field foul pole, was a road and a clear spot between the road and the pine trees. It was in that spot that a man was standing, the orange of the evening sky behind him, making it difficult to see. \n\nThe kids had been taking videos of their batting swings, and I heard someone say \"What the heck is that? Then the camera whirled over and bounced up and down as it focused in on the man, then zoomed in. The man was well past the fences, well behind where the outfield fence would be if it were extended past the foul pole.\n\n\"Suit and tie, white face.\" said Cindy. \"But that looks more like a mask on someone's head than the true featureless faces we've been seeing.\"\n\n\"He looks tall, but not a full eight feet tall, too.\" I said. We continued to watch as the tape continued. Then the camera moved as if jerked to the side, and when it came back, the figure was closer... standing right next to the fence. Then there was a high pitched whine, and the picture started whacking out, then went to black.\n\n\"Looks like someone turned on a bug killing device.\" said Cindy. \"Which is what it looks like whenever Slender Man gets closer to a camera, or a camera focuses on him.\"\n\n\"That looked a bit too much like what we would expect a Slender Man video to look like.\" I said. \"Have any of our Detectives gone to investigate the area, talk to the kids involved?\"\n\n\"Parker is on his way now.\" Cindy said. \"He's taking Jermaine Davis, Morton, and Johnson.\" She got out her cellphone. \"I'm sending a text to have him try to interview the baseball players.\"\n\n\"You're not going to go out there, sir?\" asked Teresa, with some surprise in her voice.\n\n\"No.\" I said. \"Parker and Davis will do fine. And Captain Ross's Detectives need to understand that I'm not always going to be there at every crime scene, so they'd better rely on themselves and not me.\" Cindy nodded, but the look on her face was a bit inscrutable.\n\n\"That reminds me, Captain Ross.\" I said. \"Is there a political situation brewing between Washington and Warner that requires my attention?\"\n\nCindy smiled. \"Noooo, no sir.\" she replied. \"I thought the same thing, but it's really a lot more friendly than it might look. Joanne is more Christian than Conservative, and Theo's not as Liberal as he makes himself sound sometimes. Their tweaking each other is like what Teresa and I used to do, when we were younger and she was wrong all the time.\"\n\nAs Captain Croyle turned to look at Cindy with a 'Teresa Cunt' look, I began laughing and just couldn't stop for a moment.\n\n\"Yes, Teresa,\" I spluttered as Teresa went from looking at a pointedly nonchalant Cindy to me, \"I will be sure to set those brackets up right.\"",
        "\"Thank you, sir.\" Teresa replied.\n\n* * * * * * * * * * * * * * * *\n\nTeddy Parker and Jerome Davis were sitting with me and Cindy in Classroom 'E' at 1:30pm, Friday, March 10th.\n\n\"We interviewed them individually and kept them apart.\" said Parker. \"All their stories were the same. The figure was there, then was closer, then disappeared. They all turned their heads when they heard a noise behind them, and that's when the figure disappeared.\"\n\n\"There were a lot of old footprints in that area, sir.\" said Davis. \"They said they retrieved home runs and foul balls all the time. But no fresh prints at all. The kids said they didn't go over there after seeing the Slender Man.\"\n\n\"I'm glad Davie Marsdon wasn't there.\" I said. \"He'd go right over and investigate.\"\n\n\"Hell, sir,\" said Cindy, \"Davie would go over there and confront Slender Man, and likely get himself into some trouble.\" I smiled and nodded.\n\n\"The point is that it's strange that none of them went over to investigate.\" I said. \"What do you think, Parker, Davis? Think this is on the up-and-up?\"\n\n\"Sir,\" said Davis, \"if it weren't for the other sighting at your Cabin house, I'd definitely think the kids were pranking us. I'm not sure they were going to bring the tape to the Police. It was the batting instructor that made the kid that owned the video camera come forward.\"\n\n\"Did he see Slender Man?\" I asked.\n\n\"No, he was in his office, waiting for them to finish their taping so he could lock up the facility. They came running in and showed him the video.\"\n\n\"That... sounds very strange.\" I said. \"Okay, thanks guys. What are your plans for tonight?\"\n\n\"I'm taking Janice Holloway out to dinner.\" said Parker. \"Then home to... watch a movie.\" I just grinned and gave him the thumbs-up sign.\n\n\"I'm on call this weekend, sir.\" said Davis.\n\n\"Wow, young Detective still wet behind the ears, and already on call, eh Captain?\" I asked, teasing Davis.\n\nCindy smiled. \"He's doing a great job, sir.\"\n\n\"So I'm told.\" I said. \"All right, keep up that great work. Davis, do stay by the phone... I have a feeling about tonight...\n\nPart 14 - Disappearing Act\n\nLaura had invited Callie and Cindy to have supper with us at the Mountain Nest. My mother had plans to eat dinner with the 'Crowbar Crew' old folks from the Community Center, so she was not here.\n\nTo my surprise, Carole was a little shy about meeting Callie, who was looking very beautiful and was outgoing as always.\n\n\"This is my friend Callie.\" Cindy said, to introduce Callie. Carole was hugging Cindy as Cindy held her, and had her head down on Cindy's shoulder.\n\n\"Hi Carole.\" Callie said. \"Oh, and this must be Bowser.\" she said, looking down and seeing a handsome almost-white-haired dog sitting on his haunches and looking up at her. Callie let Bowser sniff her hand, then petted him. Buddy would come up in a few seconds for his attention.\n\n\"See, Carole, Bowser like Callie.\" Cindy said. But Carole still clung to Cindy.\n\n* * * * * * * * * * * * * * * *\n\nCarole seemed a little better by suppertime. Jim had no reservations about Callie, and smiled brightly in return when Callie talked to him. He was going to be his father's son, and that with his cousin Todd's flirtatious ways with the women, I noted. Callie had been holding him while we talked before supper.\n\n\"Oh, it's great, so far.\" said Callie. \"Annemarie is essentially running the film company. She's got a really great eye for camerawork, and she likes the loving, romantic films like I do. I sold her 30% of the company, so she's got skin in the game now.\"\n\n\"That'll help tremendously.\" said Cindy. \"My gym is going great now that I'm out of the way and Ariel and Wanda are running it.\"\n\n\"How has Annemarie been doing?\" asked Laura. \"You know about her ordeal?\" She was referring to the 'Point Hollow' case, where Annemarie and another student had been kidnapped, gang raped, and left to die.\n\n\"She's doing okay.\" said Callie. \"I've really watched her, and we've had a couple of good conversations. She won't do any rough films, and she insists the actresses be treated right, which is good. She's a tough girl, a survivor.\"\n\n\"Speaking of tough girls,\" I said, \"someone is not being that. Carole, what are you doing with your peas?\"\n\n\"Giving them to Bowser.\" Carole replied. At least she didn't lie to me, even when she was going to be in trouble, I thought.\n\n\"Carole, peas are people food, not dog food.\" I said. \"You need to eat your peas without Bowser's help.\"\n\n\"I don't like them.\" Carole said simply.\n\n\"Carole,\" I said, \"because Callie and Cindy are here as our guests, we're going to have ice cream for dessert. But if you don't eat your peas, and if you give them to Bowser, you will not be getting any of the ice cream.\" I was met with a three-year-old's eyes cutting back at me, and I matched my daughter's look.\n\n\"Ohhhh-kayyyyy.\" Carole conceded. She made a fuss, but she ate her peas. Cindy was trying not to laugh, and Callie was watching with fascination.\n\n\"Wow.\" Callie said. \"I always got the 'Because I said so' treatment.\"\n\n\"So did I,\" I said, \"and I hated it. So I try very hard to not say that... though I'm sorely tempted at times.\"\n\n\"You're a great father.\" Callie said. Then she said \"You know, it's funny. Don't take this the wrong way, but I never thought of cops--- er, police officers as being normal people, with families and all.\"\n\n\"Yes, we are.\" said I said. \"And some of my Officers have lovely girlfriends.\"\n\n\"I think your son is trying to acquire that girlfriend for himself.\" Laura said, noting little Jim's fascination with Callie. He was giving the beautiful blonde his peas as 'gifts'...\n\n* * * * * * * * * * * * * * * *\n\nAs Laura, Callie and Cindy talked after dinner, I was petting Bowser and pretending to listen. But I was in my own little world, trying to put the puzzle pieces together:\n\n--- The attacks on me by the Press, Craig, and the Sheriff were too concurrent to be coincidences. What was behind those attacks?\n\n--- Why was Les Craig so desperate to find Leonard Lotz?\n\n--- Who was the power behind the Superior Bloodlines group?\n\n--- What was the role of the Mob, of Jerry Morelli, in all this?\n\n--- Where was Richard Ferrell?\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was Cindy's Police cellphone going off, followed closely by my own. Bowser began barking angrily until Carole said \"Hush, Bowser!\", whereupon the redoubtable Bowser promptly stopped barking.\n\n\"Oh boy.\" Cindy said as we hung up our respective phones. \"We gotta go.\"\n\n\"Yep.\" I said, then said quietly to Laura so Carole wouldn't hear: \"Another child has disappeared.\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar",
        "slender man"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/slender-man-ch-02"
}