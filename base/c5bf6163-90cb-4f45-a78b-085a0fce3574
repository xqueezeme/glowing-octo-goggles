{
    "title": "Mistress Mom Ch. 2 of 2",
    "pages": [
        "PART FOUR: SEXUAL ELEMENTS\n\nIt had been a few weeks since my last date with Mistress Anne. I hadn't found much time for hobbies... or play... since I'd been working really hard preparing for my finals, even though some of my study partners kept suggesting I should relax and take some time off in between exams as well. They probably had a point - I just felt guilty if I didn't spend most of my days actually studying. Once my last exam was done, though, I suddenly had quite a lot of free time on my hands. As soon as I got home that last Friday of the semester, I started hoping that my domme would be available for play sessions with me soon.\n\nI looked at her profile page online and noticed that she had put up some new photos of herself and some other people having sessions, so she was definitely active. Finally checking my e-mail inbox for the first time in days, I also noticed that Joey had sent us both a big folder with the photos from our session. I was just about to open it when Mistress texted me. Since she knew that this was my last exam day, I guessed this was not too much of a coincidence.\n\n\"Are you free this weekend?\" she asked.\n\n\"Completely.\" I replied, hoping she had something fun planned.\n\n\"Quick question: when was the last time you got tested?\"\n\n\"Tested?\"\n\n\"Yeah, for STDs.\"\n\nOh, right. I had actually had a couple of those tests done, since the last girl I dated was a med. student and was really strict about it - demanding clean tests from any prospective partner before so much as kissing them. That relationship didn't go beyond the first couple of dates, but she did manage to convince me that it was a good idea to get tested regularly, even though I always use condoms whenever I happen to get laid.\n\nI rummaged around for the printout with the latest results and took a photo of them, sending it to Mistress right away. It was a few months old, but I hadn't had sex at all since then, so I hadn't bothered going to the clinic again.\n\n\"Good. No sex partners since this one?\" she texted me back, picking up on this very fact.\n\n\"None, Mistress.\" I replied, slightly embarrassed, but quickly adding: \"I can get a new test too if needed?\"\n\n\"That's fine. I trust you.\"\n\nI smiled, enjoying the feeling of trust that had developed between us in a way that went way beyond what I had grown up with. It was true: I trusted Mistress with things I would never have thought about telling my mother. I would never have talked to my mom about my sexual partners, or lack thereof. It felt different with Mistress. I could tell her anything. She never judged or belittled me.\n\nThe next message ticked in:\n\n\"I need you for something. Short notice, I know, but are you free tonight?\"\n\n\"Yes, Mistress. I'll get ready as soon as possible.\" I replied.\n\nIt was already 5 p.m., and she usually planned these things some time in advance, so this was a bit of a surprise. A welcome one, though. I wondered why she had asked about the tests, and a nervous tingling started spreading in my stomach as I headed to the bathroom to prepare.\n\nI proceeded to trim and shave both my face and my downstairs area, both of which had been neglected during the recent times of hard studying. I tried not to rush it, taking my time fixing my general appearance until I deemed it presentable. After all, she usually had me walking around naked when we were at the club. It occurred to me that since I'd wear my leather hood, I probably didn't have to do too much to my face. Still, I just felt better when I was well groomed everywhere, so it took about an hour before I finally made my way out the door. I sent her a message that I was on my way, and drove on down to the club.\n\nAs I entered, I waved at the owner, Greg, and walked right through the cafeteria and into the club proper. I had really started to feel like this was one of my regular hangouts; I felt so at home that I just strolled right into the play area without changing first. I was thirsty, so I ordered a soda from the bar and sent Mistress a message telling her where I was.\n\nThere were several new photographs adorning the walls - one of them caught my eye because it was hanging on the brick wall behind the bar. Also because I recognized Mistress. It was a large blow-up in black and white, at least 50 inches in height, with a thin white frame. In the photo, I could immediately see the regal figure of my mistress sitting in a lovely Chesterfield chair.\n\nI couldn't recognize the person she was with, though. I stood there for several minutes, admiring the lighting, the setup and my mistress' wonderful appearance, and I still didn't see it. I tried to think about who it could be, kneeling on the floor beside her. She had several subs, so who could this one be? It was a man, clearly. Completely naked except for some kind of black hood covering the head, and a collar with a thin chain attached. I looked at it again and again, and my brain still couldn't place it.\n\nMistress sat majestically in the chair with her legs crossed, holding the other end of the lead in one hand and her riding crop in the other. She looked amazing. That outfit, her posture... just, wow. She was a dominatrix through and through. The queen of dommes. She was so far out of my league. I wasn't worthy to even...\n\nThat's when it clicked. As if I'd had amnesia and a memory suddenly clicked into place. Or suddenly seeing the solution to one of those math puzzles, without understanding how it could be possible not to have seen it before. That was me. On the floor, next to her.\n\n\"Admiring yourself?\" I heard her melodious voice behind me.\n\nI turned and enjoyed the view of her - the magnificent woman who now adorned the wall in a photo with my unworthy self positioned by her feet.\n\n\"Admiring you, actually. You look so beautiful... classy, commanding... worldly... sexy... the mask and the outfit... that posture... I mean, it's all just... wow.\"\n\nShe didn't respond right away. She was wearing her mask and the room wasn't very well lit, but for a second, I almost thought I could see her blushing.\n\n\"You really mean that, don't you?\"\n\n\"Yes. I don't think I've ever seen anyone so... I mean, I'm lost for words. You're the kind of woman who would make any man want to worship the ground you walk on. I can't believe how hot you are.\"\n\n\"All right, you charmer... You don't look so bad yourself, up there on the wall.\"\n\n\"It's weird... I didn't really recognize myself at first...\"\n\n\"Strange, isn't it? This world of ours... Have you looked at the other photos Joey sent yet?\"\n\n\"No, I've been so busy with exams... but I will.\"\n\nWe stood there for a little while, admiring the result of Joey's work. The lighting was perfect, with lovely shadows scattering over us in just the right places. My body was perfectly positioned, on all fours with my head slightly raised as if to look up at her. Her feet were not completely planted on me, but one of them definitely seemed to rest on my shoulder, as if she was keeping me down with with a gentle touch. I was naked, but the photo was so classy that it couldn't possibly be described as simple porn. This was art.\n\nEventually, she turned and took my hand to lead me away.\n\n\"It's good to see you - I wasn't sure if you could make it on such short notice.\"\n\n\"I'm ready, Mistress. I'm just going to change, put my hood on... and...\"\n\n\"That's not necessary. You won't need it today.\"\n\n\"Okay...?\" I said, curious.\n\nShe walked back toward the entrance, pulling me along until we came to one of the bathrooms. We went in, and I was surprised to see that it was occupied. I was just about to apologize and back out again, but Mistress held my hand in a firm grip, pulling me inside and locking the door behind us. Standing before us was a young girl with long, red hair tied into thick dreads.\n\n\"Ricki, this is my sub, Michael. Michael, this is my sub, Ricki.\"\n\n\"Pleased to meet you, Ricki.\" I said respectfully, offering her my hand.\n\nI noticed that she gave Mistress a quick glance before accepting it, but she then shook it and said:\n\n\"Likewise.\"\n\nMistress went on:\n\n\"I've been playing with Ricki for a while now and concluded that it's time for her to try something new. I'm gradually expanding her horizons, you see, and today... well, she's going to do something she's never done before. That's why I needed you.\"\n\nShe looked at me. They both did. I wondered where this was going. Why was I here? Why were we in the bathroom?\n\n\"What would you like me to do, Mistress?\" I asked.\n\n\"Oh, it's simple. First, undress and step into the shower. Get the water running.\"\n\n\"Yes, Mistress.\"\n\nI complied. Sure, that was a simple enough task. Even though I wasn't wearing my hood at the moment and there was a third party present... if Ricki was her sub, I thought, Mistress must trust her. That was enough for me to feel comfortable. I took off all my clothes and put them on a shelf, then stepped into the walk-in shower, which was separated from the rest of the bathroom by a glass wall.\n\nAs the water started running gently down my naked body, I looked through the glass at the two of them. At first, they just stood there for a minute, talking between themselves. When she was ready, Mistress picked up a chair, placed it nearby and sat down. She looked at Ricki and said:\n\n\"Your turn.\"\n\n\"Yes, Mistress.\" the girl replied meekly... and started to undress.\n\nShe had a small, slim figure - you might even say petite. Not really skinny, she was more shapely than that, but not by much. Her breasts were fairly small, but suited her frame pretty well. Her skin was pale, and as was revealed when she took off her clothes garment by garment, covered in tattoos. Colorful shapes of dragons and other fantasy animals stretched from her chest to her thighs, then circled her hips and came back up the other side. It was like they were wrapped around her whole body. She also had piercings - several of them. Rings in her lower lip and her nose, her ears, nipples and even her eyebrows.\n\nTattoos, piercings, dreadlocks... not exactly my 'type', if I had such a thing. I was the straightest guy in my class in high school - this girl looked like a hippie... or a biker chick. Or something. Something far from the girls I would normally ask out on dates, at least. Apart from the style, though, which was something I wasn't used to, I had to admit... Ricki was gorgeous.\n\nOnce she was naked and had put away her clothes on the shelf next to mine, she kneeled in front of Mistress, who had made herself comfortable on the chair just outside the shower.\n\n\"Now, Ricki, are you ready...?\"\n\n\"Yes, Mistress...\"\n\n\"Good. Now, you already know what to do. I don't want to hear a word of protest - in fact, I don't want to hear you say a word at all until the task is done. Is that understood?\"\n\nRicki nodded and stood up. Then she came to join me in the shower.\n\nClose up, she was even prettier. Beautiful blue eyes, full lips, and freckles sprinkling her fair skin all across her lovely face, down her shoulders until they disappeared under that impressive assemblage of inked figures.\n\n\"Gosh, you're pretty...\" I said, slightly mesmerized.\n\nShe gave me a quick smile before coming up to me. Wanting to be polite, I took the shower head down from the wall behind me and started to rinse her back with warm water, so she wouldn't get cold. I still wasn't sure exactly what was going on, and Ricki acted nervously, casting glances around as if not really knowing where to look.\n\n\"Ricki, stop procrastinating.\" Mistress said from the other side of the glass wall.\n\nRicki nodded, took a breath and looked up at me. Then she slowly kneeled down, still looking me in the eyes. Her hands started stroking my stomach, then slid down around my butt, then my thighs...\n\n\"Ah..!\" I exclaimed when she started stroking my cock, which hardened rapidly as a response to her touch.\n\n\"Now, boy...\" Mistress began to explain. \"This isn't really for you. You're just a tool I need to get this done. Here's what's going on: Ricki has touched a man's cock before - I made her do that last week. She has never put her mouth on one, though. That's what she's going to do now. Ricki?\"\n\nThe girl leaned forward and kissed my cock gently before pulling back. Her hands were still stroking me in places, although she didn't seem to have a plan beyond that.\n\n\"Well done, Ricki. Now for the next step. Go on.\" Mistress commanded.\n\nRicki leaned forward slowly. Hesitating, she looked up at me, almost as if she was asking if she was doing it right. She put one hand gently around the shaft, then kissed the exposed head of my cock before pulling back again. Mistress kept steering her actions:\n\n\"Not bad... but still only one small step. You know what the next one is, Ricki. Open your mouth. Don't think, just do as I say.\"\n\nRicki closed her eyes, then leaned forward, opening her mouth. She put it on me and I felt that lovely feeling of soft wetness directly against my sensitive glans, the feeling of my cock inside a girl's mouth. Before I got used to the feeling, though, she pulled away again, spitting as if in disgust and shaking her head. Mistress explained.\n\n\"Confused, boy? Well, you see, Ricki here is a lesbian. Currently, I am pushing her boundaries in the bisexual direction. She has now touched a man's cock, had one in her mouth... and by the end of this shower, she will have made a man cum. Using her mouth. Isn't that right, girl? Oh, that's right, you can't talk... because your mouth is full of man-cock. Continue.\"\n\nRicki obeyed. She leaned forward, taking me in her mouth once more, holding it there. My stomach churned and I felt a nervous tingling all over. Was this really okay? I kept rinsing her body with warm water, trying to avoid soaking her hair. I whispered to her:\n\n\"Are you... I mean, you don't have to...\"\n\n\"No no, I want to... to please Mistress.\" she whispered back to me, placing her hands on my stomach.\n\nShe looked me over, as if trying to figure out how the thing worked. Then she looked up at me. I recognized that look. That look of insecurity and hesitation. I knew what she felt. Nervousness - at doing a new thing, something challenging. Eagerness - to do what her domina commanded, to fulfill her wishes and please to the best of her ability.\n\n\"Just... help me out with... how do I...\" she whispered again.\n\n\"I'll show you. Here...\"\n\nI started jerking off with slow, gentle movements, while dipping myself in her mouth every few seconds. With that delightful feeling of a mouth on my cock while I masturbated, it wouldn't take long before I came. Especially since it had been so long since I'd had sex... I was really sensitive down there, and any kind of stimulation was likely to make me cum in just a few minutes.\n\n\"That's her job, Michael. Keep your hands off yourself.\" Mistress corrected me, not allowing the current strategy. I had to let Ricki do it, apparently, since our mistress continued her command: \"Go on, girl. Give my man his orgasm.\"\n\nA delicious tickling sensation spread through me at hearing her say the words \"my man\". Then an even better sensation spread through me as Ricki put her mouth back on me.\n\n\"Aaawhhh... damn, that's so good...\" I moaned as Ricki started slurping at my cock.\n\nIt still felt a bit weird, though. Her grip was a bit too tight, tugging at me instead of sliding her hand up and down the shaft. With her mouth, she made sucking motions as if sucking on a straw... which is not the best way to make a guy blow his load. At this rate, my orgasm would arrive in hours, not minutes. Still whispering so Mistress wouldn't notice too much, I started to give her some more pointers:\n\n\"Loosen your grip a little... just... let your hand glide up and down...\"\n\nShe adjusted as I said, and it immediately felt better. Her hand was now jerking me off slowly, gently, while her mouth worked my most sensitive bit. I kept going:\n\n\"Keep your mouth loose too... don't try to suck really hard at it...\"\n\nI kept the shower on her while giving her these tiny pieces of advice on how to do the stimulation that worked best on me. All men are different, so you can't just watch a blowjob video online and immediately be an expert; telling Ricki exactly what worked for me would definitely make her job easier. It still took her a while, but eventually, I remembered one last thing I'd learned from an anatomy book.\n\n\"The head... it's basically like a woman's clit... same kind of nerve cells, so the same kind of stimulation could...\"\n\nRicki's face lit up. Suddenly, she started darting her tongue back and forth, quickly licking the underside of the exposed head. A few seconds later, her tongue made circular movements around the whole thing. I immediately felt my orgasm building.\n\n\"Oh... shit... yeah, that's it... Keep doing that... and your hand too... then... I won't last long...\"\n\nI started moaning loudly as Ricki's hand jerked me off, sliding up and down the whole shaft while her tongue licked across that sensitive head. My legs started jittering as the stimulation reached its climax and initiated the first orgasm I could remember having in ever so long.\n\n\"Uuuuurhrh....\" I groaned, leaning back against the wall.\n\nOn a whim, I grabbed her hair with my free hand and pulled her backwards just as I came. Thick streams of cum shot out of me and hit her face and neck, running down her cheeks and onto her chest. Ricki looked up at me just as I managed to open my eyes and look back down at her. Man, was she beautiful. Even more so now, kneeling there in front of me with my dripping cock in her hand. Several seconds later, globs of cum were still leaking out of me, running down her fingers.\n\n\"Well done, you two...\" we heard Mistress' voice from the other side of the glass. \"Michael, you may wash yourself off. Ricki, stand up and come here.\"\n\nRicki did as ordered while I put the shower head back in its holder on the wall and turned around to make the water run down all sides of me. As I faced the wall, I snuck a peek at the two of them to see what was going on. Mistress touched Ricki's breasts, then held her fingers up to her submissive's face.\n\n\"Open your mouth.\" she said.\n\nRicki obeyed and Mistress put her fingers in between the submissive's lips, making her suck her fingers clean. \"You may as well get used to the taste now, girl, because the next time I have you give someone a blowjob, you're going to take the whole load right in your mouth. Remember that.\"\n\n\"Yes, Mistress... thank you, Mistress...\" Ricki replied meekly.\n\n\"Michael, get dressed and meet me out front. Ricki, wash off and join us when you're done.\"\n\nMistress left the room and I quickly finished showering, letting Ricki take over. Not knowing if I should say anything to her or not, and feeling almost embarrassed at being left alone with her, I put my pants on and hurried out. Then I finished dressing in one of the other rooms. I debated internally whether I should put on my hood or not, but eventually decided against it and just went back out into the cafeteria.\n\nMistress stood in line at the counter. She spotted me as I came out and pointed quickly at a table in the corner before turning back around. I sat down to wait, taking a moment to process what had happened so far. It felt pretty great, but it was over so fast that I hadn't really had time to think too much. It was just: Get over here. Get jerked off by this girl. Get dressed. It occurred to me that it was probably as Mistress had said - this session felt more like it was about Ricki than me. I also wondered how she actually felt about this whole thing; how much of this was actually part of her play with Mistress? How much had they talked about this beforehand?\n\nJust as I was thinking this, Ricki came out of the play area. Wearing a black leather dress and black shoes, and with a determined look on her face, she came right over and sat down at the table.",
        "\"Uh... hi.\" I said, attempting to start something of a conversation.\n\n\"Hi.\" she replied while looking at her phone, seeming uninterested.\n\n\"So... that was... cool.\"\n\n\"Yeah.\"\n\n\"How did you feel about it?\" I kept trying, not really getting much of a response.\n\n\"Fine.\"\n\nNot wanting to be rude, I didn't push too much. I was still really curious about this girl, though, so it didn't take long before I tried conversing again.\n\n\"So... you're not really bi, is that it?\"\n\n\"No. You saying I am? Just 'cause I let you put your cock in my mouth?\" she replied, seeming annoyed.\n\n\"No no, I didn't say anything. You decide what you are. I was just wondering...\"\n\n\"Some guys, I swear... they hear I'm lesbian and their first thought is to 'convert' me. They think they're God's gift to women and that the only reason I'm into girls is that I haven't tried being with them yet. Asshats...\"\n\n\"Sorry, I didn't mean...\"\n\n\"Lemme guess: you're one of those guys who's always had a fantasy about having sex with a lesbian woman, and now you want to...\"\n\n\"Ricki, are you being mean to the new boy?\"\n\nMistress interrupted Ricki's rant as she arrived at our table with a tray of muffins and three tall glasses of soda and ice.\n\n\"Not at all, Mistress, I'm just...\" she replied, but was again interrupted.\n\n\"He can't read your mind, you know. He doesn't know when you're kidding. And he's not as experienced as you. Mind going easy on the guy?\"\n\nRicki suddenly sat back and smiled. Her whole demeanor seemed to change from aggressive and uninterested to warm and welcoming.\n\n\"I'm just messing with ya.\" she said and winked.\n\n\"Oh... okay...\" I said and tried to smile back, accepting my drink from Mistress.\n\n\"I just love getting people all flustered.\"\n\n\"Yeah, well... it worked. Damn, I thought I was being a total douche... You know, I really didn't mean to offend you...\"\n\n\"Exactly. People who are afraid of offending me are the easiest marks. They're so afraid to step on my toes that they'll trip all over themselves to avoid it. Don't get me wrong - there are plenty of asshats out there, but I don't think you're one of them. Mistress says you're nice, and I trust her.\"\n\nShe grabbed a muffin off the table and started taking small bites. I did the same while she kept talking; once she got started, she was hard to stop.\n\n\"And thanks for your help during the session, by the way. That part was new for me, so it was nice to have some real communication going...\"\n\n\"Uh... yeah...\"\n\n\"How was today's session for you, Ricki?\" Mistress inquired, starting a post-session chat just like she usually did with me.\n\n\"Cool... good. I wasn't sure what you were planning when you said you were going to \"bring someone in\" but I guess it was only a matter of time before you came through on your threat from a while back...\"\n\n\"Yes, it's been a while since we talked about that. Once we started playing, I felt like today was a good day for it.\"\n\nMistress turned to me and went on:\n\n\"Yes, she's lesbian, not really bi. Bi-curious, I guess you could call her? No, that's not quite right either... this is more a forced bi fantasy thing - if you know what I mean.\"\n\nI nodded, having read about it online. While such a thing wasn't for me, I didn't mind being the instrument of Mistress' play with someone else. Especially someone as good-looking as Ricki.\n\n\"So far, then, I have made her touch a man's cock, put her mouth on one, and now she's even given a man an orgasm... She's very brave, allowing me to push her like this. Oh, and don't worry. As you understand, it's all part of our play; she can say no any time she wants. She hasn't so far, though, and I'm beginning to think she'll be ready for something radical soon. Hmmm... Perhaps I could simply tie her up and have a row of men fuck her brains out...\"\n\nAs Mistress said this, Ricki's pale face went crimson red. She looked down and away, stuffing the entire rest of the muffin in her mouth so she couldn't be made to answer. The thought I'd had once, of being tied down and taken from behind by a group of dommes with strap-ons, returned to me. The very idea made me incredibly nervous and I imagined that Ricki felt the same way - albeit with the forced bi element added to the mix. While this wasn't something I was in any way ready for, Ricki had apparently been working in this direction with Mistress for some time. I even started imagining that one of the men fucking this beautiful young lesbian was me...\n\n\"We've played for several hours now, Ricki. It's time to go home.\" Mistress said as she stood up, confirming my suspicion that they had been at it for a while before I became involved.\n\n\"Thank you, Mistress.\" Ricki replied, but remained seated.\n\n\"And you...\" Mistress added, pointing at me and making me nervous in the way only she could.\n\n\"Yes, Mistress...?\"\n\n\"You said your weekend was clear - that means you have time tomorrow and Sunday, right?\"\n\n\"Yes, Mistress.\"\n\n\"I want that time. Keep your schedule open.\"\n\n\"I will, Mistress.\"\n\nMistress Anne left the table, leaving her two subs behind. I was just about to wrap things up and leave the club as well, when Ricki suddenly stopped me.\n\n\"Before we go...\"\n\n\"Yes?\"\n\n\"If there is a next time for play between us, there's something you should know. Gimme your hand.\"\n\nShe held out her arm and I put my hand in hers. She started closing it and gave me a stare.\n\n\"I'm gonna be serious for a minute, so listen well. And look me in the eyes.\"\n\n\"Okay...\"\n\n\"Some people look at me when I play and think I'm vulnerable. They think I'm weak. Frail.\"\n\nHer hand started to close around mine and I could feel her fingernails beginning to dig into my skin.\n\n\"Ow...\"\n\n\"They hear that I'm only twenty-five years old and think I'm dumb. Inexperienced. That I'm easily tricked, easily abused.\"\n\n\"I'm not... Ow..!\"\n\nHer nails dug in deeper. It was beginning to hurt. Really hurt. Her grip tightened and as my hand jerked involuntarily from the pain, it was starting to feel like I was caught in a vise. A vise with claws. Under my breath, I suppressed a cry of pain.\n\n\"Aaaah-ho-hooow...\"\n\n\"I'm not weak. I'm not a timid little lamb, I'm not a shaky little leaf. I am that way when I play with Mistress because that's the role I love.\"\n\nRicki kept staring at me with fiery eyes, practically drilling a hole in my head. She looked almost angry.\n\n\"I've been in this game for a while now and I know what I'm doing. I'm not a girl who takes things lying down, and I'm not afraid of hitting back. Abuse me, violate my limits... and I'll make you regret the day you were born. Are we clear?\"\n\n\"Extremely.\" I whimpered, gritting my teeth.\n\nShe let go her grip and smiled.\n\n\"Glad we understand each other.\"\n\nWe both stood up and prepared to leave.\n\n\"It was nice to meet you.\" I said earnestly, clutching my tender hand.\n\n\"Likewise. Now I need to go home and eat something real - we've been here for... uh, a long time. Hours. I'm exhausted.\"\n\n\"You need a ride somewhere?\"\n\n\"I'm good, thanks. Seeya.\"\n\nWith that, the petite little minx was out the door. Possibly out of my life. It felt weird. I hadn't been the main event today, that much was clear. Mistress Anne had called me down here to use me as a tool for her play with Ricki, and now it was over. It occurred to me that there might not even be a next time. Still, it seemed like something was going to happen to me this weekend. Feeling that familiar nervous tingling in my stomach, I was beginning to wonder what it would be.\n\nI went home and enjoyed the feeling. The nervousness. Knowing Mistress' dirty, twisted mind, she probably had some kind of evil scheme planned. With me as the subject. The plaything. That feeling was so good - knowing that something was going to happen to me that I couldn't control. Something that would please Mistress. I loved thinking about the fact that she was soon going to play with me and do whatever she wanted. I was both dreading it and looking forward to it at the same time.\n\nSaturday morning, she started sending me instructions. They involved the usual cleaning and shaving process that I was planning to do anyway, but it also specified what I was going to wear. Instead of surprising me, she told me ahead of time, so that I'd be thinking about it all day. It worked as intended - my stomach started tingling as soon as I read her message:\n\n\"Be at the club at 18:00. You will be naked during this session, but you will wear shoes. You will also have on your collar and hood, then cuffs around your wrists and ankles. Additionally, you will wear a special leather harness. The session will be a long one, so make sure you eat something and go to the bathroom before we start.\"\n\nShe then sent me a picture of the harness - a cool-looking set of straps that wrap around the torso and waist, connected with several metal rings. For the next several hours, all I could think about was what it could possibly be intended for.\n\nI spent a long time preparing, just as she said. Showered and shaved twice, trimmed my body hair, made sure I was spotless everywhere. It was almost therapeutic, spending so much time making myself look my best for Mistress. When I finally drove down to the club that evening, I was just hoping she would be pleased with my efforts.\n\nWe met at the changing rooms as usual, I took off my clothes and put on my leather hood - so far, so normal. Then she handed me the harness. I stepped through two holes at the bottom, like you do with a climbing harness. Then I pulled it up and adjusted it to my body. Two straps came over my shoulders and across my chest, one went around my back. I also had one around each thigh, going up and around my crotch and buttocks.\n\nOnce I had it all on, Mistress stepped behind me and started fastening the clips on the back. I felt the leather straps tightening all across my body, and it felt really nice. It kind of felt like I was wearing combat gear or something - if it hadn't been for the fact that my junk was hanging out.\n\n\"This way.\" she said and started walking.\n\nI followed her towards one of the private play rooms. I was unable to prevent my gaze from dropping as she walked. My eyes stared at her curves as she swayed her hips from side to side. She probably knew what she was doing and that I would be unable to stop myself from watching, but I still felt like I was sneaking a peek without her knowing as she walked in front of me. That tight leather skirt covering her round butt, her corset perfectly hugging her waist as it curved in from her hips... I knew she was twice my age, but she still had an amazing body.\n\nOnce in the room, she turned and leaned against the wall, facing me. Then she just stood there, smiling sadistically. This just made me even more nervous, seeing her grin like that. Feeling my heart beat faster, I was unable to meet her gaze. She enjoyed making me wait like this.\n\n\"Here we are. Take your place.\" she eventually said, pointing to the metal mesh mounted on the wall. Screwed in place, it was almost like a wire fence, only much more solid.\n\nOnce I stood with my back up against it, Mistress fished out the leather cuffs. As she stood close to me, putting them on, it looked like she could barely contain herself - smiling cheekily and humming as she tightened them around my wrists. I nervously let her pull my arms down to the sides. She locked me in place, then she did the same with the harness. Now it became clear what her plan was: that wall had lots of anchoring points. With the harness on, she could lock my whole body to the wall using simple carabiner hooks.\n\nShe bent down to lock my ankle cuffs to the wall too. Legs spread out, exposing my... well, everything. So that was the reason she had told me to keep my shoes on - the floor in this room was pretty cold, seeing as it was just linoleum on concrete. Usually, it's also pretty hard to stand up against a wall with your feet pushed all the way in, but the harness took care of that. Testing the strength of the harness, I tried to let myself fall forward. The result was that I could lean just a fraction away from the wall. I clearly couldn't fall, let alone move anywhere. Arms, body, legs... all locked in place.\n\nMistress stood back and admired her work: her male submissive shackled tightly to a wall. Still smiling sadistically, she was giving me a constant feeling of nervous tension. What was her plan? What was she going to do to me? I stood there and watched her as she calmly paced back and forth, as if she was inspecting her slave. I loved this. She really knew how to build tension. She moved slowly, deliberately, not rushing anything. Let me get nervous, excited.\n\n\"So... the plan for today involves getting a little... physical.\" she said, reaching into her purse.\n\nShe pulled out her long, black vinyl gloves and started putting them on. Hairs stood up at the back of my neck as I remembered the last time she used them. I swallowed nervously as the sight of metal claws flashed before my eyes. This time, though, she had something different in mind.\n\nShe came up to me and looked me in the face. Standing this close, I could smell the scent of her shampoo and feel her breath on my naked skin. I felt her gloved hands stroke my body, moving from my shoulders and down the sides to my hips. Then she moved right in and touched me between my legs. I felt a nervous jitter as the glove cupped my scrotum.\n\n\"You remember who these belong to, right, boy?\"\n\n\"Yes, Mistress. They're... yours...\"\n\n\"Good. I'm going to play with them a bit today.\"\n\nShe reached into her purse and pulled out something that looked like a small black rubber band. Feeling it slide onto me down there was a bit weird, and I couldn't really see what was going on between my legs either. It felt like my balls were being pulled slightly down, as the rubber band thing was put around the base of my scrotum.\n\nMistress stood up and looked at me with brilliant eyes. Even through the holes in her mask, I could see her eyes shining like stars. Then she put her hand on me again, a bit more roughly this time, and said:\n\n\"Get hard.\"\n\n\"M...Mistress...?\"\n\nShe snarled. Bared her teeth like a lioness.\n\n\"Get your cock hard for me. Now!\"\n\n\"Uhm... yes... yes, Mistress...\"\n\nIt actually wasn't very difficult. I was already excited by this whole situation, and now my gorgeous domme ordered me to do something while she was standing inches away from me. She came in closer, pushing her large leather-clad bosom against my naked body. The sight of her... her smell... the feeling of her hands grabbing me in places and doing whatever they liked... It was all such a turn-on.\n\n\"There you go. Good. Not completely pathetic - at least you can get it up when your queen demands it.\"\n\nShe continued her work with the rubber band down there until she was satisfied. Eventually, I thought I'd understood what she was doing. The feeling was that of my balls being held down and away from my body, and my erection was being boosted by some kind of penis ring thing.\n\n\"There... Like your new ball stretcher?\" she said, taking a step away to admire her work.\n\nSo that's what they were. I'd heard of them but never tried. They felt a bit tight, but not really painful. I had the feeling that they shouldn't be on me for too long, but right now... they actually felt kinda nice.\n\nI felt a slap across my face. Mistress stared at me, angrily.\n\n\"Answer! I asked you a question!\"\n\n\"Yes! Yes... Mistress... they're... good...\" I blurted out, embarrassed that I'd lost focus for a second and forgotten to reply.\n\n\"That's better. Now behave. You don't want me to break out those claws again, do you?\"\n\n\"No, Mistress...\"\n\n\"You'd better do as you're told, then. I have a plan for tonight and I don't want to deviate from it at all. I want what I want, nothing else. If you sabotage me, there'll be... consequences.\"\n\n\"I will obey, Mistress!\" I said, determined.\n\nShe walked over to the table next to us again and fished around for something in her purse. Once she'd found it, she came back and stood close to me. Very close.\n\n\"Here's the arrangement for tonight: you will not have an orgasm. That's all. No matter what happens, you will not cum. Understand?\"\n\nI nodded. Looking down, I could see that she had some items ready. One of them was some kind of vibrating egg, attached to a rubber ring.\n\n\"H...aaaah...\" I gasped as she started stroking my cock with her vinyl-clad hands.\n\nFrom a small bottle, she poured a slippery liquid onto me and started rubbing it all over. My cock, balls, crotch and thighs... everything turned very slippery. Then she slipped that little egg onto my shaft, so that it came to rest underneath the exposed head of my cock. She took a step back, looked at me with another one of her sadistic smiles, and held up a small plastic box.\n\n\"Ready...?\" she said, gleefully.\n\nThen she pushed a button. I immediately jolted in shock at the feeling of vibrations on my lubed-up dick. After a few seconds, the surprise subsided and the feeling was instead replaced with one of immense pleasure. A vibrator right on the underside of the glans, held in place by a rubber band... My eyes started swimming. I tried shifting my weight from one foot to the other, but the stimulation remained the same no matter the position I was in. This was intense.\n\n\"Mistress... what if I can't stop it?\" I started whimpering, knowing full well that these vibrations would make me orgasm pretty soon.\n\n\"Then you will tell me.\" she replied. \"When you feel your orgasm approaching, you will tell me. Fail to do this... cum without permission... and I promise you: you will regret it.\"\n\nAs she said this, she held up her other hand. My heart skipped a beat and I swallowed nervously at the sight of the metal claws. She'd clearly put them on while I wasn't looking, and now all the memories were coming back... the fear of them, the fear that she'd use them on my most sensitive areas...\n\nFor the next half hour, I went through this extremely intense stimulation. The vibrating egg kept buzzing away, bringing me closer and closer to a delightful orgasm... and then Mistress would deny me. Over... and over... and over. It was torture. As soon as I told her I was getting close, she would either click the remote and switch the vibrator off, hit me with her riding crop, pinch me, tickle me... or all of the above. Anything that would make my body come down from the climax and stop me from orgasming.\n\nEventually, I just stood there, breathing heavily as if I was in the middle of a marathon. Drool was running out of my open mouth and down on the floor, my legs were trembling and my head was spinning. I couldn't see properly since my eyes were cloudy, and shaking my head to clear my vision stopped working.\n\nWhen the session began, it took a couple of minutes before I was nearing orgasm. After several denials, however, the build-up took less and less time. I would tell Mistress that I was getting close, and she would switch off the vibrator and whip me until I came down from the high... but once she started it up again, I'd be mere seconds away. Eventually, I became desperate.\n\n\"Please, Mistress, please let me cum...\", I whimpered, unable to believe that I could keep doing this any longer.\n\n\"No, you will not.\" she said harshly, pressing her clawed hand into my ribs to remind me.\n\nInstead, she increased the time between stimulation to give me more time to recover. That made it even worse. My entire lower body tensed up in anticipation when I was nearing orgasm, and when it didn't come, tight cramps started to spread from my crotch to the rest of my body. I was kept on the edge, unable to cum, but with my whole body screaming in protest.\n\n\"There, done...\" Mistress said after half an hour, squatting down in front of me and releasing the cock ring and ball stretchers.",
        "I breathed a sigh of relief, still drooling and shaking my head as I tried to focus on the pain she had given me rather than the excruciating pleasure. I looked down at my hands. They were trembling. As were my legs. After half an hour of orgasm denial, I was broken. Then Mistress continued her sentence...\n\n\"... with the vibrating egg. Time for something else.\"\n\n\"What!?\" I exclaimed in disbelief.\n\nMistress giggled and took the egg contraption off me. Then she practically danced over to the table, putting away the egg and pulling out something else from her purse. How much stuff did she have in there?\n\n\"Here is your next treatment...\" she said, walking over to me with a cylindrical object.\n\nAs she bent down to do something to me, I noticed that I was flinching - physically trying to stop her from getting to my nether region. Not that I could, being anchored to the wall. Instead, I just started squealing and moaning as she sat down on a stool beside me.\n\n\"Waaaa... No, Mistress, please... no more...\"\n\n\"Quiet. I haven't tried all my tools on you yet and I want to see how they perform. Now... get hard for me.\"\n\nI hadn't noticed until now, but after this exhausting marathon, my erection had faded once she took off the rubber bands. My penis was now hanging half-limp before her, and she wasn't happy.\n\n\"I said: get hard!\" she commanded once again.\n\nHer vinyl-clad fingers started to stroke and squeeze my oiled-up balls, and miraculously, this had just the effect she was looking for. My cock started to rise and once it was semi-hard, Mistress waited no longer.\n\nShe slid a sheathe onto my shaft. I'd heard of these. Made from some kind of rubber or silicone, an artificial pussy of sorts... it felt really good, especially in the hands of my mistress. She started sliding it up and down, fucking me with it, quickly making my erection stiffer.\n\n\"Ah... ahh...\" I started moaning.\n\nThe stimulation was less intense than what she had already done, but it didn't take long before I was once again nearing orgasm. Alerting Mistress, I felt her stopping the stimulation. She sat there, waiting for what felt like an eternity, but was probably more like twenty seconds.\n\n\"Ready for more? Yes? Good. Let's keep going.\" she cooed.\n\n\"No... please...\" I muttered haplessly, knowing full well that my pleas would be in vain.\n\n\"Dum de dum... doobie dub... edging my sub...\" she sang to herself.\n\nThere was no mercy. She just kept playing with me. I was a toy. Her toy. No will of my own. Just a toy.\n\nShe continued for hours, changing her methods and tools as she went. When she sensed that I was getting exhausted and needed a break, she had me eat a chocolate bar or drink soda through a straw to get my blood sugar back up. She didn't take me down from the wall, but kept me there. I drifted into subspace with the feeling of having handed over control of my body and soul to my mistress. I didn't even notice that we got visitors - people she invited in to watch as she went to town on her submissive. I had to be told later, but apparently, they enjoyed the spectacle. I didn't notice anything anymore. The world disappeared and the only thing left was her... and the things she did to me.\n\nI didn't even notice that she finished, my head was so fucked up. She eventually ended the session, took me down from the wall and helped me back to the changing rooms. I think we talked but I'm not sure. We gathered up our clothes and got changed, then headed home. My head was still swimming when I got there, and I immediately threw myself down on the bed. As soon as my head hit the pillow, I was asleep.\n\nThe next day, I woke to my phone making noises. Pinging again and again. Looking at it, I realized that it was past lunch time - I'd slept for ten hours. My body still felt pretty sore, though, like I'd been playing football or something. I desperately needed a shower and headed to the bathroom. Feeling the water running down my bruised skin revitalized me somewhat, but I also needed to eat. I threw a pizza in the oven and sat down on my couch to check the messages on my phone. Turned out, Mistress had sent me a dozen texts.\n\n\"That was quite the session! Loved it!\"\n\n\"You looked pretty beat. You OK?\"\n\n\"I can't believe how far you let me take you last night.\"\n\n\"I haven't had this much fun with a male sub in... ever! :) \"\n\nI kept reading her messages - they were full of praise and how much she loved the session, and she also kept asking if I was okay. As time had passed and I still hadn't replied, they started to focus more and more on the latter. Her first message was sent late last night, the last one at 13:47. Yeah, it was the weekend, but most people should be up by then - that's probably why her latest texts seemed a bit nervous. I eventually sent her a quick reply, still unable to form proper sentences:\n\n\"I'm OK, Mistress. Still tired. Need food. Will talk later.\"\n\nAs I hit send, I realized what I was feeling like. It was like I was hung over. Like I had attended a wild party and gotten really hammered. Minus the headache. Didn't have that. My whole body felt banged up, though, and my brain was still coming down from that mountain top of a high I'd been on. That's why I wasn't able to send her a proper reply yet. I had to wake up first.\n\nOnce I'd had some breakfast - or brunch, strictly speaking - I felt a bit better and sat down on the couch to answer her properly. We texted for a while as a sort of digital aftercare, which I liked a lot. I always enjoyed talking openly about our sessions. She heaped praise on me for letting her take it this far, and I was still wondering if we were getting anywhere near to how rough Mistress Anne could really be. I soon got my answer.\n\n\"Ready for another date today?\" she texted me.\n\nShe made my stomach tingle. Yeah, it was a date, wasn't it... A play date, between play partners, sure. Not as in a traditional date between prospective lovers, but still - the word made me feel pretty good inside. Then there was the nervous anticipation on top of that. She'd edged me for hours yesterday, and now she had plans for more play already? I wasn't sure if my body could take it. I still said yes, of course.\n\n\"Same procedure - get cleaned up and ready, same time, same place. See you there.\"\n\n\"Yes, Mistress.\"\n\nI almost dreaded this one. Was she going to do the same thing to me again? Hours and hours of edging and orgasm denial? The thought almost made me feel sick - there was a sinking feeling in my stomach and I tried to think about what other possibilities there could be. I almost wished I had other plans for the weekend. That I'd have to cancel the play date and be spared the agony.\n\nAnd sure enough, she wasn't pulling her punches today either. Even though I was still feeling the aftershocks of yesterday, Mistress went straight to work as soon as the session started. She put me up against the wall just as before, lubed me up and applied the same tools as last time. Having been through it before, I wasn't as afraid of the unknown this time around, but I was still nervous as hell since I knew what was coming. Or rather... wasn't coming. Once again, denial was the word of the day.\n\nMistress commanded me to \"get hard\" once again and slipped the vibrating egg onto my cock, which stood out from my shackled body like a bridge over a ravine. I had made sure my whole downstairs area was cleanly shaved, and it felt really good when she used her fingers to stroke and handle my slippery skin. I looked down at her long, shiny black vinyl gloves and had to admit that I found it incredibly sexy to be played with like this. To have her experienced hands manipulate my body, use me as her plaything.\n\nOnce I started squirming and moaning, she started cooing and laughing. It was obvious that she enjoyed this - torturing her slave like a true sadist. I couldn't remember seeing anybody get this much pleasure out of doing things to somebody else. She wasn't the one being physically pleasured, yet I got the feeling that she was the one enjoying herself the most. Seeing her like this made me feel so good inside that I couldn't begin to explain it. It also made me... horny.\n\nIt didn't take long before I had to call out to her that I was about to orgasm. She flicked the switch on her remote immediately, causing me to moan in frustration at the sudden shock of going from full stimulation to zero. My dick throbbed and twitched every time she started or stopped the vibrator. I was on the edge of orgasm after just a few minutes.\n\nThen she kept me there. Just like last time. My head started spinning and the rest of my body felt like I was about to explode. I was so sensitive down there that any stimulation felt like agony, and I desperately wanted release. I wanted to take matters into my own hands, but couldn't. My arms were securely locked to the bars behind me. I hoped to be given an orgasm, but wasn't. Mistress enjoyed seeing me squirm. Every time I practically screamed in frustration that I wasn't allowed to cum, she nearly drowned me out with her own cries of pleasure.\n\n\"Nooo! Pleeease, Mistress!\" I would cry out when she stopped me from cumming.\n\n\"Yeees! Fuck, yes!\" she'd shout back at me as I stood there, whimpering.\n\n\"Please, Mistress... I can't take any more...\"\n\n\"Oh, yes, you can. And you will. I'm the one who decides if you get to cum. And I say no.\"\n\nAfter an hour of this, I was desperate. I was crying, tears getting the inside of my hood all wet as I begged and begged for mercy. I couldn't think what else to do. I was completely under her control. I even had the thought of just cumming without letting her know that it was about to happen, but she knew me too well by now. She interpreted my body language and noticed that I was nearing the point of no return.\n\n\"How dare you!\" she said, sternly, as she switched off the vibrator and took it off me.\n\n\"S-sorry, Mistress... I...\"\n\n\"No! Shut up! How dare you?!\"\n\nShe came right up close to me and stared me in the eyes. I could barely see anything through all the tears, but I could tell that behind her classy and festive mask, she was fuming. I felt her metal claws grasp around my exposed scrotum and dig into my tender flesh, and she quickly brought out her riding crop as well.\n\n\"You! Do! Not! Decide! When! To! Cum!\" she growled at me, pausing after each word and making me genuinely afraid.\n\nEnraged, she started whipping my thighs and worked her way upwards, making sure I realized the error of my ways. By the time she was finished, there was no resistance left in me. No thought of ever doing anything Mistress Anne disliked. Only the fear of displeasing her and the desire to obey.\n\nI stood still, head spinning, feeling my skin burn everywhere she'd whipped me. She eventually took a few steps back, leaning up against the opposite wall and staring at me. Then she came back, moving up to me and pressing her voluptuous body against mine. She leaned in and whispered in my ear:\n\n\"So... you really want to cum, do you?\"\n\n\"Yes... please... Mistress...\" I begged, head still buzzing.\n\n\"Awwww... you're so cute, begging like that... Well, you know that I'm the one who decides if you ever get to do that again, right?\"\n\n\"Yes, Mistress...\"\n\nHer voice was melodious, yet authoritative. No need to shout anymore. She was in complete control and she knew it. I knew it too. My brain worked slowly, so it took a while for it to seep in, but I knew it. She owned me. My body functions were hers to control.\n\n\"Good. Now, I'm going to allow you to have an orgasm...\"\n\n\"Yes... please, Mistress...\" I whispered, still not quite able to believe it.\n\n\"But we can' let you soil this lovely play room with your body fluids, can we...?\" she continued.\n\n\"No, Mistress...\"\n\n\"So I'll only let you do this if you clean up after yourself. All right?\"\n\n\"Yes, Mistress, I'll do anything... anything...\"\n\nSlowly and deliberately, she picked the vibrating egg back up along with the bottle of lube. Pouring a bit more on my aching, pulsing member, she then stroked me with her vinyl-clad hand until I was slippery all over once more. Then she put the vibrator back on me and stepped back to the opposite wall. Holding her hand up to show me the remote, she looked at me and paused.\n\n\"Remember to ask for permission.\"\n\n\"Yes, Mistress.\"\n\n\"Ready?\"\n\n\"Yes, Mistress...\"\n\nCLICK\n\nI felt the buzzing spread through me immediately. My body started to shiver and I started gasping for breath. Seconds passed. Not minutes. Seconds. The muscles in my groin area were tightening up and my legs started shaking.\n\n\"Uhh... uuuuuhh...\"\n\n\"Remember to ask.\"\n\n\"Aaaahh...\"\n\n\"No orgasm without permission. Remember that.\"\n\nI looked at her and noticed something I hadn't seen before. She had put her hand down the inside of her skirt. Breathing heavily, she was touching herself while watching her sub approaching orgasm. It occurred to me that she might be as excited as I was from all this, and the sight of this amazingly hot woman masturbating was more than enough to get me off, with or without the vibrator.\n\n\"Please, may I cum, Mistress...?\"\n\n\"Yes, you may cum for me now.\"\n\n\"UUUUUUUUUURRRRHHHH!\"\n\nThe cramps spread through me, starting between my legs and causing my whole system to go into convulsions. I was seeing stars. I couldn't focus. The sight of my mistress faded from my consciousness as I experienced the most powerful orgasm I'd ever had. Two days of edging and teasing had caused such a build-up that I pretty much passed out from the experience. When it was over, I was hanging by the harness, shackled to the wall but unable to stand on my own legs.\n\n\"Oh... fuck... fuck, fuck, fuck....\" I whispered as my sight was returning.\n\n\"Good?\" Mistress cooed, grinning at me.\n\nI only managed to nod, still ravaged by the aftershocks. The muscles in my crotch ached from the ordeal they'd been through. Then I realized that the vibrator was still buzzing.\n\n\"Aaaaah... waaaaahh... please... off...\" I whimpered.\n\n\"Oh? I thought you wanted this?\" Mistress replied. \"You wanted to go all the way, right? You wanted it to not stop? Shouldn't we keep it going?\"\n\nThe head of my dick was now incredibly sensitive, and continued stimulation was more painful than pleasurable. I tried twisting my body from side to side, almost like I wanted to shake it off, but being shackled to the frame behind me prevented that kind of movement.\n\n\"Miss.... please...\"\n\n\"Awww... so adorable. Oh, well.\"\n\nShe switched off the vibrating egg and I breathed a sigh of relief. Then she reached down and pulled the thing off me... waited a few seconds, looked at me... and continued.\n\n\"AAAAH!!\" I squealed. \"It's so sensitive, Mistress! Please!\"\n\nShe smiled wickedly and kept stroking her gloved hand up and down the slippery shaft. Then she moved her fingers over the swollen head of my cock. I jolted every time she touched a particularly sensitive spot, pulling at the restraints to no avail. It was too much.\n\n\"Iiiih! Please!\" I once again yelled in a high-pitched shriek.\n\n\"That's right, squeal for me, bitch!\"\n\n\"Please, Mistress, please...\"\n\nI kept whimpering, throwing my head this way and that, begging for her to stop torturing me this way. The ring on my collar made noises like a baby's rattle, being shaken from side to side.\n\nFinally, she stopped. She looked at her watch and said:\n\n\"Sadly, we don't have this room reserved all night this time. Time to wrap it up.\"\n\nShe went up beside me and started to undo my bindings from the wall. I stumbled a bit when I was let down, and realized that I was still dizzy. My heart was pounding, my whole body ached... but my head was still way up in space.\n\nStarting to feel a bit sad that something this intense had to end, I regained my footing and looked down on the linoleum floor. I saw several small pools of white liquid; three or four streaks going outwards from the wall where I'd been standing served as evidence that somebody had squirted the fluids out from the wall. It did need cleaning up, though. I started to wander towards the door.\n\n\"Where are you going?\" I heard Mistress behind me.\n\n\"Uh... to the... bathroom? To get some... tissues.. and towels... to clean up...?\"\n\n\"Oh, that's cute.\"\n\nI turned around, my cock still dripping. I looked at her, trying to understand what she meant. She crossed her arms and leaned back against the wall again, staring at me expectantly. I still didn't get it, groggy as I was.\n\n\"Well?\"\n\n\"Sorry... Mistress...?\"\n\nShe laughed. Since the mask only covered the top half of her face, I could clearly see her sadistic grin as she looked at me.\n\n\"Towels? You don't need towels, slave boy. Use your mouth.\"\n\nStill woozy, it took me a few seconds before I realized what she meant. I looked down at the pools of cum on the floor. Then back up at her. She waited, clearly enjoying the moment, seeing her sub struggling to decide what to do. For me, though, there was no struggle anymore. I just sank to my knees.\n\n\"As you command, Mistress.\"\n\nPART FIVE: MILKING\n\nIt took me several days to recover from Mistress Anne's latest onslaught on my poor body. It had been an awesome experience. It had been one of those play dates that leave you feeling great but also worn out and broken. I honestly couldn't say whether it was good or bad - it was both. The thought that kept going through my mind was: \"why the hell did I let someone do this to me?\" Thinking about it, this was just the thing that made BDSM the right lifestyle for me.\n\nA couple of days later, we met in the club for a chat during one of their munches. No play, just a munch and some chatting with like-minded people. Near the end, Mistress turned her attention to me.\n\n\"As you know, I'm going away for a couple of weeks. While I'm gone, I'd like you to work on something.\"\n\n\"Very well, Mistress. What is it?\"\n\n\"Well, I've noticed that you cum a lot.\" she said, making me blush, seeing as there were several other people around the table. \"I saw it already when I had Ricki work on you, and even more so during our last session...\"\n\nShe wasn't wrong. After having being teased for so long during those torturous sessions, when I was finally allowed to cum, I had squirted out so much that even porn directors might have been impressed. Thinking about times when I'd been jerking off over the years, I wasn't sure if I really had a big load, but it was pretty clear that I'd cum a lot when I was very turned on. Mistress agreed.\n\n\"For long periods during our last date, you were positively dripping with pre-cum, and when you finally came... wow. It made me think of those fountains in Vegas.\"\n\nI blushed again. People around the table smiled and giggled. It was praise I was receiving, but it still felt a bit embarrassing being the subject of such a conversation in front of people.\n\n\"Ehm... thank you... Mistress...\"\n\n\"Now - I want to explore this further. I've got this bag for you, bring it home and take a look at the contents. I am also e-mailing you some instructions as well as some links to articles for study. Oh, and one last thing. I was serious when I said I wanted to control your orgasms, but feel free to have them while you're doing this. I want you to experiment. Practice. Find out how your body works. How things feel.\"\n\n\"Very well, Mistress.\"\n\nI took the bag home and opened it, discovering a selection of sex toys. Then I checked my e-mail to see what kind of homework Mistress Anne wanted me to do over the next couple of weeks. It was interesting, but still made me nervous. In a nutshell, she wanted me to start practicing anal sex. The toys I'd been given were butt plugs of different sizes, a dildo and a specialized vibrator for prostate stimulation. She had also included a large bottle of lube, which would clearly be needed if I were to practice this kind of thing.",
        "What really made my blood pump, though, was looking at the links she'd sent. Some of them were fine. They were links to articles on anal sex, which were very illuminating and I spent quite a lot of time over the next few days reading them - as well as related stuff. From these, I picked up a lot about the internal male anatomy and lots of advice on anal play.\n\nThen there were the video links. They went to porn sites, and I got the feeling she'd only sent those to mess with my mind, because they gave me strong hints about what kind of things she was interested in using me for. They were videos of people getting prostate massages; different positions suitable for anal sex; boys being 'milked' by their dommes in various ways... I had heard of this. Seen videos of it. Even fantasized about it. But never actually tried it. Generally, it got me excited, but also very nervous.\n\nWanting to please and impress Mistress, I started training the very next day. There's only so much you can learn from reading and watching videos - especially the latter. When watching porn, you don't see all the preparation the actors go through. The use of enemas to clean themselves internally, the application of lubricants...\n\nNor do you see the fact that they've done it before. They're sex experts. Watching a video of a guy getting pegged by his domme, I noticed how quickly and easily she started fucking him - really hard and really fast. This was definitely not their first time, despite what the video's title would have you believe. I took note of all this, read up on it myself and then started to prepare.\n\nI spent lots of time in the bathroom, getting cleaned up, inside and out. It took a while to understand just how much preparation was needed, but once I'd done it a few times, I knew how to rinse myself out properly. I experimented with the toys in the shower afterwards, and any trace of accidental 'spillage' was easy to clean up. After a few days of trial and error, I felt confident that I could prepare myself so that there wouldn't be any 'accidents' of the kind they don't show you in the porn films - even if a certain someone was to shove a large dildo up my ass.\n\nIt also took a while to get used to having something up there. The sphincter muscles at the rear door aren't really made for penetration, so it took some getting used to. Eventually, though, I found that it worked pretty well if I just took it a bit slow, starting with small plugs that had slim ends and not the biggest, roundest ones. After a while, I'd be warmed up and able to relax the muscles back there enough to insert something bigger.\n\nExperimenting with the actual internal stimulation took even longer. I tried both the dildo and the prostate vibrator, and they seemed to work okay, but I couldn't exactly say that the stimulation felt magical. Moving the vibrators up against my prostate seemed to produce some small amounts of fluids, but it wasn't the amazing feeling some people described it as in the articles I'd read.\n\nMistress had told me to write a detailed account of my findings and send them to her. She wanted to know how my body worked. As always, she would probably find out more by experimenting on me herself, but she also asked questions beforehand to gain any knowledge she could before starting anything. Always so considerate - I loved that about her.\n\nShe had also told me that it was okay for me to have orgasms during this, and I decided that I wanted to feel what it was like to have one while using a plug. Sitting in the shower, I started fucking my own ass with the toys she'd provided. Increasing the intensity a bit and moving up to the dildo, I managed to experience a little of that 'milking' thing I'd seen in videos. Small amounts of fluids came out of me when I really tried, and the feeling inside was also good - albeit a bit weird. I wasn't able to orgasm from anal penetration alone, though.\n\nI closed my eyes and started stroking my dick up and down, jerking off in the shower while the vibrator buzzed against my prostate. I started fantasizing, picturing hot women and typical scenarios. It didn't take long, though, before the images in my mind became all about Mistress. Her sexy curvy body, the feeling of those large breasts pushing against me as I was shackled to the wall and she played with my body...\n\nA memory popped into my head. That time she stroked my cock... Sure, she was wearing her vinyl glove... but she used her right hand. Moments before, I had seen her touch herself with that same hand. Masturbating. Touching herself between her legs, possibly getting the glove wet with her own juices. It occurred to me that she might actually have been smearing her own juices all over my cock without any of us realizing it. Once this idea fully manifested itself in my head... I came.\n\nIt felt a bit strange, having an orgasm with something up my butt. Normally, there are strong muscle contractions as the juices are pumped out of me, but when I had something up there, my body was forced to relax. As a result, the orgasm felt less powerful, but it also felt like more stuff came out. Instead of shooting out of me like water from a water pistol, it just sort of ran out like a dribble.\n\nOnce I'd done this a few times, I felt comfortable letting Mistress experiment on me as well. I stopped doing it, stopped jerking off and didn't give myself any more orgasms as long as she was away. She had told me that she wanted to control me. I respected that. It felt so good, wanting to do something but not letting myself having what I wanted - because she said no. It felt really good having to wait for Mistress.\n\nI didn't have to wait long. She was returning from her trip and told me she wanted a date. I loved it when she used that word. Not just a session - a 'date'. It made me smile. As it happened, my birthday was coming up, and I didn't have any plans. That is, until she learned that I was free.\n\n\"No plans for your birthday? No party with friends or anything?\"\n\n\"No plans, Mistress.\"\n\n\"Excellent. Then I want you.\"\n\nShe made my stomach tingle when she wrote stuff like that. I loved it.\n\n\"Yes, Mistress. Do you have plans for me?\"\n\n\"Yes, sending instructions now. Check your e-mail.\"\n\nThe instructions were simple. I was to have no orgasms until our date, prepare myself to be used in whatever way she saw fit, and meet her at the club at a specific time. It seemed doable enough - just another step in our play, nothing extreme or surprising. When was I going to learn?\n\nMy birthday started out the same as usual. Messages ticking in from friends and family, but nothing huge in the way of parties or the like. When I turned 20, we had a pretty big garden party with my extended family, but turning 23 wasn't quite as special. I spent the day preparing myself mentally as well as spending quite a lot of time in the bathroom, and when I arrived at the club, I felt ready for anything.\n\nMistress looked stunning as usual. This time, she wore tight black leather trousers contrasted really well by a red silk blouse. To match, she had also repainted her mask, giving it some black and red stripes against the white background. As she came out to the cafeteria to collect me, I couldn't take my eyes off her beautiful figure. When she put the collar on me, she smiled in that cheeky way that both made me nervous and happy. Nervous of the things she had in mind for me, happy that this gorgeous woman had chosen me to have them in mind for.\n\nShe put me on a leash and paraded me naked around the club for a while. Then, once she'd finished mingling while smacking my naked butt cheeks with her riding crop whenever she felt like it, she brought me back to one of the private rooms. She had something new in mind, she said. Something fun. As she said this, I wondered who she meant would be having the fun - and strongly suspected she wasn't talking about me.\n\nWe arrived in the private room and I immediately noticed a new piece of furniture - a special chair to lie back in, with two leg holders standing up on the sides.\n\n\"That's right, little one - it's a gyno chair. It will give me full access to... well, whatever I want. Go on, take your place in it.\"\n\n\"Yes, Mistress...\"\n\nI gingerly made my way into the chair, being careful not to break anything. Nervously, I lifted one leg at a time and Mistress helped me put them in the proper place. I ended up lying back with my back at an angle and both legs elevated and moved out to the sides, leaving my whole nether region completely exposed.\n\n\"Are you in? Comfortable?\" she asked.\n\nI shifted a little, making sure I could lie comfortably with my legs spread without cramping. The chair felt a bit cold and the leg stirrups seemed a bit flimsy, but once I was in it, everything seemed okay. I could probably sit leaned back like this for hours. I nodded in response to Mistress and her next statement made me swallow nervously.\n\n\"Good. You will be in it for quite a while...\"\n\nShe had a small bag on the table next to her. Opening it, she started pulling out the various tools she'd need. I couldn't see them all but I noticed several sex toys, cuffs and ropes. I felt myself being strapped in as she bound me to the chair, legs tied to the stirrups with ropes and chains. Then she put cuffs on my wrists and locked my arms to the frame holding the chair.\n\n\"Can you move?\" she asked.\n\nI tried lifting my arms, but couldn't. They were locked in place, just below my hips. I gently tried moving my legs, but couldn't move them either.\n\n\"Good. One last thing.\" she added, and I felt my collar being tugged.\n\nWith a click, she fastened it to the frame so that I couldn't lift my head either. My arms, legs, head and torso were now locked in place. I was unable to move, even if should wish to. Now that I was at her mercy, I really started wondering what she was planning to do to me.\n\n\"Let's get started, shall we?\"\n\nShe rolled up her sleeves and put on her long, black vinyl gloves. Then she introduced a small anal plug. Holding it up so I could see it, she lubricated it while looking at me to gauge my reaction. I didn't panic - that thing was small, no problem for me after the training I'd been doing. As she took her position between my legs and pressed it against my anal sphincter, I simply relaxed the way I had taught myself, and let her push it in.\n\n\"There you are. Good boy. Not a problem, right?\"\n\n\"It's fine, Mistress.\"\n\n\"Good. Let's leave that in for a minute, then move up gradually, shall we?\"\n\n\"Yes, Mistress...\"\n\nShe often did that - adding the \"shall we?\" and phrasing her statement as a suggestion. We both knew it wasn't. It was just her way of telling me what she planned. Teasing me with it, telling me what was coming.\n\nShe continued on with a couple more plugs, moving them gently in and out of my exposed asshole so that I could get used to the feeling. I was getting more and more turned on as she experimented on me. My dick grew in size and hardness, becoming erect as Mistress did as she pleased with my body. I also hadn't jerked off in over a week, and I was beginning to feel incredibly aroused by this whole situation.\n\n\"Time for something a bit more challenging...\" she said below me.\n\nShe pulled out a proper dildo of similar size to the one she'd given me for practice. I swallowed nervously, as I knew this one could be painful if used incorrectly. Mistress, however, was consideration personified.\n\nShe slid it into me slowly, letting me have time to focus and relax my muscles. I focused on breathing and relaxing everywhere, and suddenly, it was in. Once past the door, she pushed it further inside, lubricating as she went.\n\n\"Tell me how this feels. Be honest. I want to know how your body works.\"\n\nI nodded and started to take note of how it felt when she pushed the dildo further in. It just felt weird at first, then it started to feel a bit painful as it nudged against something deep inside me.\n\n\"Uhh... okay... that feels... not so good... and... not in a good way.\"\n\n\"Noted. How about now?\" she said and pulled it out a bit.\n\n\"Uh... yeah... better. It's like... a bit weird, I guess... but not painful or anything. Just like it's pushing against my walls in there.\"\n\n\"Keep talking.\"\n\nShe started pushing deeper inside me. I could feel the shaft sliding inwards, past my sphincter muscle and gliding up my rectum. It didn't stop after a few inches either, but kept coming, further and further in... I focused on my breathing and relaxing my muscles everywhere to make it easier. It felt weird. Not painful, but... a bit weird. Almost like feeling something at the inside of my stomach. When she pulled it out, it felt almost like going to the toilet, but then it was suddenly pushing inwards again.\n\nWith all the preparations I'd done, I felt safe that I wasn't going to soil myself - it was comforting to know that I was clean inside and that I was ready for anything. For the next few minutes, I lay there and told Mistress how it felt when she used her toys on me. She adjusted as I gave feedback. She wanted to know everything and I gave her what she wanted. Once she was finished, she revealed why she had been so thorough:\n\n\"Now that I'm learning how your body works, I am going to manipulate it. Use it. Play with it. I am going to have so much fun with you tonight, and since you're revealing all those secrets about yourself, there's nothing you can do to stop me. I used that dildo to measure you... and now I'm going to use what I have learned. Now... it's time for this one.\"\n\nAs she said this, she held up a vibrator, slightly bigger than the dildo she had just used on me. With the dildo, she had just measured me. Now she was going to fill me.\n\nI tried to relax as she penetrated me once more. Being as lubed up as I was, the vibrator slid in without much of a problem. Once in, Mistress turned it on. I immediately felt the buzzing filling me up internally. My cock started twitching.\n\n\"Oh? There's a spot there that your little man likes, is there?\" Mistress teased as she rubbed the vibrator against my inner walls.\n\n\"Uhhh...\" I just moaned, still trying to relax but finding it increasingly difficult.\n\n\"There we are... let's just see what happens when I nudge against that prostate, shall we...?\"\n\n\"Uuhhh....\"\n\nShe started fucking my ass properly. Probing me, pushing the toy up against my prostate gland and letting the vibrations do the work. It didn't take much time before she got what she wanted.\n\n\"There we are. There's the man-milk coming out...\" she cooed.\n\nI tried to look down, but couldn't lift my head too much because my collar was locked to the frame under me. I could only see parts of myself, but she was definitely right - droplets of clear white liquid had started seeping from the tip of my cock. It bounced every time she hit a sensitive spot inside, and she constantly moved the vibrator back and forth.\n\n\"So... do you enjoy getting fucked in the ass like this?\" she teased me.\n\n\"Yes, Mistress...\" I moaned obediently in reply.\n\n\"I can tell. Your cock is positively drooling. Look at that... it's just oozing out of you.\"\n\nI could also tell. That she was right. I felt the wetness on my belly as my body was forced to eject slippery liquid. My butt hole started to feel warm from the vibrations, and Mistress was now milking me for real, fucking my ass faster until streams of the stuff were coming out almost continuously. I couldn't do anything to stop it either, it just kept coming out.\n\nShe kept this going for several minutes, manipulating my body, making me feel small and helpless - a toy to be used for her merriment and nothing more. I started moaning louder and louder, losing more and more control over my own faculties. Mistress got excited too, partly from the physical effort and probably quite a bit from being in control over my body in this way. I could tell she was enjoying it, smiling and giggling as she was.\n\nEventually, she brought out a second vibrator - a small one, just to stroke me in different places. My cock jolted as she moved across it, sending vibrations right through me and moving me towards orgasm. Which she didn't let me have. When I felt it building, she stopped both vibrators completely and waited. Just waited. I started moaning, frustrated.\n\n\"Mmmhh....\"\n\n\"Aaaww... we wanted to cum, did we? Well, you know how it works. You don't decide these things anymore, I do. Let's keep working that butt hole and see if we can keep you on the edge a bit longer.\"\n\n\"Uuuuwwhhh...\"\n\nShe kept doing it. Fucking my ass with a one vibrator while touching my cock with another. Built up an orgasm within me and then stopped just before I came close. Each time, I came a bit closer, but she was still able to stop before it was too late. I started to become frustrated, pulling at my restraints and moaning uncontrollably while she teased me even further.\n\n\"Mmmhhh... please, Mistress...\"\n\n\"Yes, what?\"\n\n\"Uuuuhhh... please...\"\n\n\"Sorry, what were you saying? I can't hear you over all this moaning.\"\n\n\"Please... let me cum, Mistress... please...\"\n\n\"Oh, you want to cum, is that it? I had no idea. You really need to be clearer in your communication.\"\n\n\"Aaaaaaah!\"\n\nShe kept teasing while exerting her dominance. My body was under her control and she loved showing it - to me and others. I noticed at the corner of my eye that some people had come in to watch us, and Mistress exchanged a few comments with some of them before focusing on humiliating her slave again.\n\n\"Beg for it! Beg for my cock!\"\n\n\"Please give me your cock, Mistress...\"\n\n\"Louder! Beg me to fuck you!\"\n\n\"Please fuck me, Mistress!\"\n\n\"Are you my little anal slut? Say it!\"\n\n\"Yes, Mistress, I'm your little slut, I'm your little anal slut, Mistress...\"\n\nShe kept going, making me say all sorts of subservient and humiliating things - that I loved being fucked in the ass, that I loved being her little toy... the thing was, it wasn't a lie. I loved this feeling. In my head, I was flying. Being used by her like this was the most awesome thing ever.\n\nAs the minutes went by and started to feel like hours, my head started spinning again in that by now so familiar way. I was amazed that Mistress was able to do this to me so easily - even when I knew what was coming and had prepared for it, she could break down my will and make my body do whatever she wanted. I was putty in her hands.\n\nMy body wanted an orgasm. More and more as time went by, as she edged and teased me, milking me but not allowing me to reach climax - I couldn't think of anything but wanting that orgasm. Soon enough, I started pleading and begging for mercy.\n\n\"Please let me cum, Mistress...\" I kept begging as my vision went cloudy and I couldn't think straight.\n\n\"Awww... he really wants it, doesn't he... Well, here's the thing: since it's your birthday, I have something special planned for you.\"\n\nShe stopped everything and took the vibrator out of my abused asshole. For a second, I felt empty inside. Then she turned and lifted something else out of her bag, affixing it to her person. When she turned back, I could see that she was wearing a strap-on dildo. She held something else in her hand, but I couldn't see what it was.\n\nShe took up position between my legs and inserted herself into me. Technically, it felt pretty much the same as when she'd just pushed a vibrator up my ass, but the setting felt very different. This felt less clinical. She hadn't just put something in me like a doctor might - she was using her own body to fuck me, pushing herself forwards and bucking her hips to penetrate me fully.\n\nSeeing Mistress like that, above me and between my legs, fucking my ass with her strap-on-cock... it was amazing. My cock pulsed and jolted with excitement. She giggled as she pushed all the way inside me and placed her hands on my chest.",
        "\"Here you go, time for the second part...\"\n\nI felt something enveloping my dick - it was that artificial pussy again, sliding down on me. Slurping sounds filled my ears - everything down there was a sticky and slippery mess of lube and my own fluids. Mistress started fucking both my insides and my cock with her toys, and the feeling was so good that I could feel my orgasm approaching just seconds after she started.\n\n\"Please, may I cum, Mistress...?\" I begged, remembering to ask before it happened.\n\n\"Yes.\"\n\nI was surprised that her permission came so fast. Not that I could have controlled anything anyway; when she was inside me like this, I had no control over my own orgasm. It was all up to her.\n\nQuick as a flash, she pulled out of me and took the sheathe off my cock. Her gloved hands then grasped around the base of it and applied a vibrator to the tip. My whole body started shaking, jolting in the chair and pulling against the restraints. I moaned uncontrollably.\n\n\"MMMMMMHHHH!!\"\n\nSounds of appreciation filled the room as both Mistress and whoever was watching enjoyed the sight of my orgasm. Several spurts of cum squirted into the air like a fountain, the result of all that teasing, edging and building up. Mistress' hands held my pulsating shaft in place as I kept cumming. I couldn't believe the force of it - the orgasm made my head spin and I felt like I was about to pass out.\n\nAs I finally returned to my senses, I saw her lovely smile between my legs.\n\n\"Wha... uuh?\" I just moaned, making her giggle with excitement.\n\n\"Oh, so fun. Ready for round two?\"\n\n\"Wha...? But... I just came...\" I mumbled in a daze.\n\n\"Oh, that's cute. You thought I was finished with you. Well, I'm not. You wanted to cum so badly, didn't you?\"\n\nShe stroked the vibrator against me again, making me practically squeal. My cock was so sensitive now that the slightest touch felt extreme. I pulled and yanked at the restraints, shaking in a mixture of fear and excitement as she started her post-orgasm torture.\n\n\"No, no, Mistress! Please, no more, please!\"\n\n\"Oh, but this is what you wanted! You said you wanted to cum, right? Be careful what you wish for!\"\n\nShe started laughing maniacally. I couldn't believe this was happening. It was sensory overload and I couldn't do anything to stop it. The vibrator stayed on my cock for a full minute, making my whole body tremble. After this, Mistress once again penetrated me with her strap-on, filling me up from the inside before jerking me off with her artificial pussy. Without realizing it, I came again.\n\n\"That's right, little one, I'm not just going to give you one orgasm... let's see how many your body can handle, shall we?\"\n\nMistress went into high gear. Her hands were all over me, stroking and touching me with her slippery gloves. It felt like she was everywhere: she was inside me, she was covering my skin, she was possessing my mind... all at once. Now being in complete control of my body, she wasn't just applying post-orgasm torture, she was actually trying to force me to cum over and over. And she was succeeding. I lost track of time and the world. All I could hear was her laughter and my own loud noises. She made it happen again and again... until I passed out.\n\nWhen I came to, I heard Mistress' melodious voice.\n\n\"There you are... welcome back. Look at me... hi there...\"\n\n\"Whoa... whaa...?\"\n\nI felt like I was floating. My brain was totally blissed out. Mistress had moved up to the side, bending down to me. Smiling, she whispered in my ear:\n\n\"Happy birthday...\"\n\nWorn out, I was let down from the chair and brought to the bathroom. After a relaxing hot shower, I felt a bit invigorated. I got dressed and met Mistress in the cafeteria for some food and a post-session chat. As I sat down next to her, I realized how exhausted I was; my legs were buckling under me, drained of energy as if I'd been running until I couldn't run anymore.\n\n\"Thank you, Mistress... that was... incredible.\" I eventually said, causing her to give me a beaming smile.\n\n\"Glad you liked it. I did too.\"\n\n\"Was this all... planned?\"\n\n\"Hm... not entirely. I had planned to milk you once, and then administer some post-orgasm torture, but once I noticed that you could actually cum several times in a row, I just went with it. Did you know you could do that?\"\n\n\"No, Mistress... that's never happened to me before - I still don't really know what happened. My head is still spinning...\"\n\n\"Well, I loved it. It's been a long time since I played with a man who could orgasm like that... Orgasms like pearls on a string, one after the other... hihi!\"\n\nShe seemed thrilled. We sat side by side and she put her arm around me, pulling me in close and hugging me excitedly.\n\n\"Most men who claim they can do that, just haven't got a clue. They can usually keep having sex after the first orgasm, but it takes a while before they can cum again. They certainly don't keep cumming the way you did.\"\n\n\"How many times did it...?\"\n\n\"Six.\" she replied.\n\nMy jaw dropped. I couldn't believe it.\n\n\"What?? You're kidding, right?\"\n\n\"Nope. You came six times. Sure, after the first few times, there wasn't a whole lot of stuff coming out of you... it was mostly just like your cock was drooling... but I could tell from the way you were jerking and spasming... not to mention the moaning, grunting and squealing... yeah, they were orgasms, all right.\"\n\n\"But.. uh... I mean, is that even possible...?\"\n\n\"For a man to have multiple orgasms? Sure. You just proved it. I mean, it's on film, so you can see it for yourself later if you still don't believe it. As for how many it's possible to have, I don't know. Maybe that's something I should explore... with you...\"\n\nStill in disbelief, and completely worn out from being used until my body couldn't take anymore, I sat still for a minute, nursing a sandwich and trying to get my brain to return to normal. My whole nether region felt banged up and I knew it would probably take days to recover. Eventually, I managed to say what I thought of her idea of continuing to explore this.\n\n\"I'd like that... Mistress...\"\n\nA month passed.\n\nWe continued to play whenever we could. We played around with pain and pleasure; Mistress kept exploring how far she could push my body, both in terms of receiving beatings, humiliation, denial and forced orgasms. Sometimes a combination of it all. She especially liked doing things to me that took away my control over myself. Pushing my buttons just the right way, she could make my body do things on its own. I didn't mind that it had gotten sexual either - it felt like a natural progression of being used as an object for her pleasure.\n\nOne day, we were sitting in the club's cafeteria, chatting about everything and nothing, and she decided to embarrass me by showing me the status of her latest video. She'd gotten permission from Greg to set up a recording of the birthday session. She had uploaded it to the web, and now she loved watching me blush by showing me off to her friends around the room.\n\nThe video was one of those you only find occasionally. A genuine amateur production rather than professionally done, it was still of high quality. The camera had been standing on a tripod and I never even noticed it, yet it managed to capture the event perfectly. All the movements. All the noises. The only thing that was missing was having several camera angles. Now she giggled as she watched it on her phone with two of her domme friends, enjoying the sounds of her sub squealing. I sat a few feet away, red in the face.\n\nThe title alone was enough to make me blush: \"Mistress Anne fucking her new sub in the ass until he cums\" was just the kind of title that femdom lovers would be drawn to, and no more than a week after the upload, the vid already had hundreds of thousands of views. A month in, it had passed a million. The idea that so many people had seen me in this position made me feel warm inside - partly from the embarrassment, but also with a certain degree of pride.\n\nThere were also loads of comments. Some from subs saying they'd love for this to be them, some from dominants offering their compliments. I even noticed some who said they'd love to have had their mouth on my cock as it kept spewing forth its sticky nectar...\n\n\"Speaking of a man's cum...\" Mistress said as she returned to my side after having had her fun at my expense.\n\n\"Yes, Mistress?\"\n\n\"Time for a serious talk.\"\n\n\"Uh-oh.\"\n\n\"Don't worry, not that kind of talk. It's nothing bad, I think things are going great.\"\n\n\"I'm happy to hear that, Mistress, I think things are going great too.\"\n\nShe smiled. Then she hesitated, which was a bit unusual.\n\n\"Don't.... It's fine. This is out of play, let's talk normally.\"\n\n\"Normally, I call you Mistress all the time, Mistress.\"\n\n\"Yeah, I know. I'd like to... okay, for this talk in particular, I want to talk to you like an equal. Like a human being. Need you to be a bit less subservient and a bit more... independent. You know, like you've got a brain... and a will of your own.\"\n\n\"Okay, Mistress... oops... sorry.\"\n\n\"It's fine.\" she laughed. \"Like I said, serious, but nothing bad. It's just that I want to sound you out about something I'm planning.\"\n\n\"Okay. You mean... I get a say?\"\n\n\"Yes, this time. You know that I like to spring surprises on you sometimes... give you a bit of a shock for that extra adrenaline rush, but... this goes a bit far, so I feel like you need to know the general idea before I go ahead and do anything.\"\n\n\"Okay... I appreciate that.\"\n\nI felt my stomach churn at the thought of having something done to me that she actually thought was \"going a bit far\". Like, what we had done already didn't go that far?\n\n\"Also... Michael...\" she got a serious look on her face, clearly she wanted to have a real talk. \"This is one of those times when it really is okay for you to say 'no thanks', all right? If it's not for you... if you're not comfortable with the idea... I'm fine with that. No pressure. Genuinely.\"\n\n\"Okay...\"\n\n\"Right. So... How would you feel about getting a woman pregnant?\"\n\nMy eyes went wide as dinner plates and the butterflies in my stomach went crazy. This wasn't what I was expecting.\n\n\"Wow... that's... yeah, serious. You weren't kidding.\"\n\n\"I should explain. You know I play with both men and women. Some casual, once in a while, others more regularly... Well, one of my female subs has been trying to get pregnant, but as it turns out, her husband... can't. This has led to her wanting it even more, and... well, a while back, we happened to start talking about breeding play, maybe bringing another guy into the mix... Then we had the idea of making it real, using a guy to actually breed her. I thought about using a male sub to do it, and... therein lies the rub: the only male sub I have right now is... you.\"\n\nI was still shocked. I'd never even thought of anything like this. She went on:\n\n\"Oh, I should also mention... there won't be any legal consequences, paternity suits or stuff like that... I'd make sure that sort of thing is handled. They'd be the parents, you'd be out of the picture... but you really should say no if you're not feeling comfortable with this. I don't want to set up something like that and get a girl's hopes up, only to have to stop it all. Also, since this has consequences beyond a single session, it concerns you in a very real way. I wouldn't feel comfortable doing this if it didn't sit right with you.\"\n\n\"Thank you, Mistress... I appreciate your concern.\" I eventually said, having first cleared my throat.\n\nShe smiled sympathetically - I still used the M-word, it had become second nature to me. I also found it difficult to answer her question. A million thoughts rushed through my head and I couldn't organize them all to focus on one singular thing. How could I tell how I felt about something when I couldn't even think straight?\n\n\"You can take some time to think about it if you like. No pressure, like I said. Maybe you should go home and...\"\n\n\"That's okay.\" I interrupted. \"Can I ask you something, though?\"\n\n\"Sure.\"\n\n\"How do you feel about it?\"\n\nShe looked surprised.\n\n\"How I feel...?\"\n\n\"Yes. Is this something you want?\"\n\n\"How... what does that have to do with...\"\n\n\"If this is a fantasy of yours, shouldn't I want to fulfill it?\"\n\n\"Oh, I see. Well... yes and no...\"\n\n\"Meaning?\"\n\n\"Meaning what?\"\n\n\"Honesty, please, Mistress.\"\n\nShe leaned back, smiling. We were always honest with each other - it was one of the things we had discovered when we started playing together. Growing up, there were things I felt I couldn't talk about with my mother, but there was nothing I felt the need to hide from Mistress Anne. I only expected the same in return. It felt refreshing, not having the need to keep secrets. She took a deep breath and explained:\n\n\"All right. Yes. This is a fantasy of mine and I'd love to do this. Play with two subs at once, using my boy to impregnate my girl...\"\n\n\"Okay...\"\n\n\"But!\" she went on, insisting. \"I mean it, Michael. I really wouldn't feel comfortable pressuring a sub to do something like this if he has strong misgivings about it... Play is supposed to be play, it isn't supposed to invade our lives completely. That's how I feel about it, anyway. So... yeah. That's how I feel. I'd need consent on this. I'd need you to feel... free. To choose freely without feeling any pressure. Because there is none. You don't feel comfortable - no problem, we move on. For me to have fun with this, I'd have to know that it's something you don't find unacceptable. So... to ask the question again: how do you feel about the idea of being used to get my sub pregnant?\"\n\nI swallowed nervously, but I also noticed that during our conversation, my pants had gotten tighter. This was big. Being used for that, she said. On her command. Being used as a toy... as a tool even. Blood flowed to my nether regions at the thought of taking part in such a thing, and before long, I had an erection. My heart had started pounding and the butterflies in my stomach were flying around like mad, the way they only did when I felt incredibly nervous and curious at the same time. Eventually, I gave her my response:\n\n\"Actually... sounds kind of exciting, Mistress...\"\n\nShe smiled.\n\n\"So... how... how would it work, Mistress?\" I inquired. \"Do we get together, talk about it...? Is it like a session, getting milked again or...\"\n\nAt this point, she just stood up, picked up her purse and got ready to leave. She gave me a wicked smile. With glee in her voice, she said:\n\n\"This conversation is over. I know what I need to know.\"\n\nThen she stood up from the table and left.\n\nI was left sitting there with an incredible feeling of nervousness and a heart beating rapidly in my chest. Some of the women sitting opposite my table smiled and raised their glasses to me, having been shown a most entertaining video just minutes before. I blushed and smiled back - they probably had no idea what had just been discussed at the table next to them.\n\nI heard nothing more about this for the longest time. Initially, I had quite a few dirty thoughts about the scenario she outlined, but eventually, I forgot about it. Over a period of weeks and months, Mistress and I continued developing our play relationship, and as autumn turned to winter, we carried on with normal sessions. There were whippings and spankings, BDSM parties and the odd photo shoot. Sometimes there were sexual elements to our play, sometimes there weren't. We went outdoors - despite the cold - and indoors, alone and in front of others. It wasn't always about doing something new, but it never grew dull or routine either. Everything about this lifestyle... it was just lovely.\n\nThen, one day, she texted me.\n\n\"Have any plans this weekend?\"\n\n\"No, Mistress.\" I replied right away, knowing that even if I did, I'd cancel them for her if she wanted me.\n\n\"Good. It's time.\"\n\n\"Time, Mistress?\" I typed on my phone, having pretty much forgotten that conversation we'd had.\n\n\"Yes. It is arranged. You are now my breeding bull. The timing should be right this weekend.\"\n\nNow it came flooding back. The ideas. Images. Dirty thoughts. A violently nervous feeling spreading throughout my body, almost making me shiver. It was... exciting.\n\n\"When was your last orgasm?\" she inquired.\n\n\"Two weeks ago, Mistress, when you used the wand on me at the club.\"\n\n\"Good - you know the drill. No orgasms. Save it all up for me.\"\n\nOf course I would. It had long been established that I didn't give myself orgasms anymore. I wanted her to have them. I wanted nothing more than to save everything I had for her.\n\nThe following Saturday afternoon, I stood outside my place, waiting for her to pick me up. As I stood there, I was getting more and more nervous. I saw her car approaching. Part of me wanted to run back inside and hide away. Instead, I got in and buckled my seat belt. There was that feeling again. Doing something this wild felt like I was in a roller coaster car on my way up to the top, just about to plunge down the other side. Wishing I'd never got on the ride in the first place. Wishing I could get out, knowing full well that I couldn't... and that I didn't really want to.\n\n\"Put your hood on.\" she said, reaching into her purse before we set off.\n\nI did as she said, then she gave me a leather blindfold for me to wear as well. It went well with the hood, fitting snugly and without slipping, completely blinding my vision. I was already full of questions and not being able to tell where we were going added even more to the mystery. As we started driving, I couldn't stop myself from asking:\n\n\"So... who is this... girl? Woman?\"\n\n\"You needn't concern yourself with that.\"\n\n\"It's not Ricki, is it..?\" I asked on a whim.\n\n\"No. I told you, she's married. To a man. Remember?\"\n\nI didn't. I had completely forgotten.\n\n\"Oh, right...\"\n\n\"But I like the way your mind works...\" she then said, and I could hear in her voice that she was smiling.\n\n\"Is she being kept in the dark as well? Does she know anything about me?\"\n\n\"She knows that you're in your twenties, drug and disease free, pretty fit and handsome... and that's it. I haven't even told her that the man who's coming is the one I'm playing with at the club.\"\n\n\"Okay... so you're not going to tell me anything... like that?\"\n\n\"You won't stop, will you? Well, all right. She's in her thirties. Quite sexy. And like you, she's a good, clean girl.\"\n\n\"That's it?\"\n\n\"Yes, that's all I'm going to tell you.\"\n\n\"Oh... kay... So... that means you're going to make me wear this blindfold all the time? While we're... doing it?\"\n\n\"Yes. I'm the one who's doing this. I'm using you to do a thing. A job. You're a tool I'm using to get the job done... and a hammer doesn't need to know what kind of nail it's pounding. And, yes, she'll be blindfolded as well. Adds a bit of extra spice to the whole thing, don't you think?\"\n\nI sat still for a minute while I let the scenario sink in. I was glad I was doing this with Mistress, because this felt like I was getting into some seriously deep water. Still, I had to admit that not knowing added an extra layer of excitement to it all.\n\n\"It's about an hour's drive. You can take a nap.\" she eventually said.\n\n\"Yeah... I'll do that.\"\n\nI settled down and rested my head against the side pillar. The road noise and the hum of the engine made me drowsy, and despite my nervousness, I was eventually able to fall asleep.\n\nI woke up just as the car stopped. Mistress nudged me and told me we'd arrived, but didn't let me take off the blindfold. Instead, she came to the passenger door and helped me out. Then she took my arm and led me on a bit of a walk. We were walking on snow, then planks of wood, then we stopped by a door. I guessed we were on some kind of porch.",
        "\"Here we are.\" she said and opened the door for me.\n\nShe took my hand and led me inside, closing the door behind us. We came to a set of stairs, and I gingerly moved up the steps with the help of my navigator. Moving further in, we entered yet another room, closing the door as we went.\n\n\"Hood and blindfold off.\" Mistress finally commanded.\n\nI did as ordered and spent the next minute or so getting used to the sharp light. Looking around, I could see that we were in a bathroom. She handed me the leather harness we had been using at the club, as well as pointing me to some towels on a shelf. Then she laid down the rules.\n\n\"You'll get ready here. Get naked, wash thoroughly and put on this harness, then the collar, hood and blindfold again. When you're ready, I'll come and get you. I will lead you to the room where she is, and when we're done - or if a break is needed - I'm escorting you back here. You will not need to talk to each other. Clear? Well, set to it.\"\n\n\"Yes, Mistress.\"\n\nI started undressing as she turned to leave.\n\n\"Turn around so you don't see anything outside this door. Oh, and one last thing: there's a plug and some lube in the bag here. Start warming up.\"\n\nI turned and she closed the door, leaving me to my preparations. I had already cleaned myself and had a thorough shave before we drove here, but it couldn't hurt to repeat my rituals. Having tasks to do also gave me something to take my mind off the nervousness. As I put my clothes away, I heard footsteps walking in the hall outside. Floorboards creaking. A pretty old house, maybe? My brain couldn't stop trying to guess at where we were. I heard more footsteps. More than one person? That sound... voices...? I got in the shower and tried not to think too hard. I was a tool tonight, just a tool, that's what Mistress had told me.\n\nFinishing up in the shower, I was as clean as I could be, inside and out. I had also started using the plug, getting my back door ready for whatever Mistress had planned. I put on the harness and had just finished drying my hair as I heard a knock on the door.\n\n\"Ready?\"\n\n\"Almost - just the hood and blindfold left. Hang on...\"\n\nShe came in just as I blindfolded myself, and gave me a hand to check that everything was securely fastened. Then she came up behind me, took hold of my arms and started leading me towards the door. The floorboards creaked under my feet and I could hear her whisper behind me:\n\n\"She's really excited by all this. She just took a test before we arrived - she's ovulating right now... her body is all fertile and vulnerable, at its most receptive to what's about to happen... Just now, I could tell that her whole body was trembling with anticipation. I don't think I've ever seen her this turned on. You should know that what we're about to do... together... it's fulfilling a woman's wildest, craziest fantasy. She's been dreaming of this for years...\"\n\n\"Mhm...\"\n\nI swallowed nervously as she walked me down the hall. I felt her arm move in front of me and push open a door.\n\n\"This is so exciting... \" she whispered close to me - I could tell that even Mistress was worked up from this whole thing. She held my arms and walked behind me, pushing me into the room. As we stopped, I could hear someone breathing heavily.\n\n\"So... here he is... my young, virile bull...\"\n\nThere was a whimper and I could swear I heard someone moan below me.\n\n\"Are you ready to be bred, little cow?\" Mistress went on.\n\n\"Yes, Mistress...\" I heard a trembling voice reply.\n\n\"This way, bull. She's on her back on a bed just in front of you. I have a specific position in mind, so move forward.\"\n\nI did so and felt the edge of a bed against my legs. On her direction, I bent down and climbed in, immediately noticing that I was moving on top of a naked female body. Mistress steered me into place and then directed me to pull my knees up. I didn't quite get it at first, but after some more direction, I stood on my knees with my feet outside the edge of the bed. My upper body lay down on top of the woman below me. Then she was told to spread her legs and wrap them around me.\n\nHer skin felt warm against mine. It felt like she had a soft, supple body, full-figured and plump - not the skinny type but with large breasts that pushed against me as I lay down on her. I was getting really turned on by the feeling of her body against mine, and my cock started getting really hard in spite of how nervous I was.\n\nMistress kept arranging our positions. I realized that the woman underneath me was also wearing some sort of harness, and we were being locked together in several places. The woman's legs were being locked to the back of my harness so that she couldn't take them down; she was now forced to keep them wrapped around my body.\n\nThen I felt Mistress' hands on my butt cheeks. I was beginning to realize what was going on: she wanted us in a missionary position, but with me in a sort of doggy style, ready for her to do things to me from behind. It seemed to be working - I just needed to relax so that my legs wouldn't start cramping.\n\n\"Just a little closer here too...\" Mistress said, giggling.\n\nThen she pushed my head down until my face hit something, and I could feel her connecting something to my collar ring. I quickly realized that it was locked in place against a corresponding ring below. Mistress had shackled her two subs together all along the harnesses, and locked our collars together too. We were so close that we were pretty much breathing into one another's mouths.\n\n\"You may kiss.\" Mistress said, and I relaxed my neck instead of trying to avoid it.\n\nA soft, warm mouth connected with mine. A lively tongue licked against mine. It felt wonderful. I started moaning and felt the woman respond in kind. We lay there for several minutes, French kissing like horny teenagers while Mistress busied about her work.\n\n\"Almost ready now...\"\n\nMistress went down to the end of the bed for one last thing. I still hadn't penetrated the woman underneath me - my cock was nudging against her, but since she was flat on her back and I was on my knees, I wasn't close enough to connect. I soon realized what Mistress was planning; she stood behind me and started pulling at the woman's hips. Having connected some kind of rope or chains to her, I felt the body underneath me being pulled up to meet me. As Mistress pulled her onto me, I could feel my swollen member sink easily into a soaking wet, slippery channel.\n\n\"Mh... mhh! Mmmh!\" the woman immediately started moaning into my mouth.\n\n\"There you go... he's inside you now... filling you up...\" Mistress said with a raspy voice that told me she was getting really turned on by doing this.\n\nI couldn't remember the last time I had sex without condoms. It felt amazing. So... natural. Uninhibited. I could feel how wet she was - her pussy was drenched in slippery juices, getting us both wet as we rubbed against each another. We were both sweating too, becoming a hot, wet mess and soiling the sheets with our bodily fluids.\n\n\"Now for the final touch.\" I heard Mistress behind me.\n\nThen I felt something prodding at my back door. Nudging gently at first, then more firmly. I managed to relax my muscles down there, allowing her entry without causing me discomfort. Once she felt I was ready, Mistress penetrated my ass fully with what felt like a large dildo or vibrator, filling me up and causing my cock to jolt in response.\n\n\"Mmmpphhh...\" I moaned, causing my lover to respond by being even louder.\n\n\"Mmmhh!\"\n\n\"I'm about to start milking him... I hope you're ready to receive his seed, little cow, because this won't take long...\"\n\n\"MMMM!\"\n\nShe intensified her kissing, sucking at me and licking furiously as she was being fucked by an unknown man who was in turn being fucked by our common dominatrix. I didn't know who she was, but it felt incredibly intimate.\n\nVibrations started filling my insides. Mistress started moving the toy back and forth inside me, rubbing it against my prostate and no doubt causing fluids to start seeping out of me. Directly into the woman under me. I started grunting, rapidly losing control of my own bodily functions.\n\n\"Uuhh... uuurrhhh.... uuuuuurrhhhh...\"\n\nObviously sensing what was going on, my lover started losing it. She was so turned on that her body was trembling with excitement. We'd hardly started, but she was already crying out in orgasmic ecstasy.\n\n\"Oh! Oh! Mistress, I... ooooohh!\"\n\nMistress kept fucking my ass with her vibrator while she laughed and enjoyed her sub's cries of pleasure. I couldn't move back or thrust downwards - it wasn't me doing the actual fucking, it was Mistress, fucking her female sub through me. I felt my cock being squeezed by a series of contractions, and she was getting even more slippery from all the juices leaking out of her. I started moaning louder too - the stimulation on my cock as well as the vibrator inside me made it impossible to hold back. There wasn't even a proper build-up, the juices were just being milked out of me.\n\n\"Cumming.... cumming...\" I started moaning, desperately, used as I was to ask for permission.\n\n\"No need to ask permission this time.\" Mistress said, shoving her vibrator into my depths. \"Let it all flow. Just make sure you push in deeply as you orgasm, we want your seed to be deposited deep inside her.\"\n\nI didn't need to push. We were locked together tightly, I couldn't pull out if I wanted to. Under me, the woman was practically squealing with anticipation as Mistress egged us both on.\n\n\"There it is, I can tell it's happening... My bull is about to cum inside you, little cow. Are you ready?\"\n\nThe woman, shaking and crying with joy, started screaming loudly:\n\n\"Yes, please!! Breed me, Mistress!!\"\n\nI could feel my juices leaving me. Everything quickly became even more wet and slippery as my gooey fluids were pumped into the woman underneath. She started shivering again and sucked me in for another wet kiss. I was getting goose bumps all over as the two women together reminded me that my semen was now filling her with the specific purpose of reaching her womb.\n\nMy orgasm subsided, but Mistress now knew exactly how my body worked and how she could manipulate it to do what she wanted. She started out slowly, just letting some gentle vibrations hit my prostate. My cock, still inside my lover's drenched cunt, was being kept hard by gentle squeezing motions. Over the next few minutes, Mistress would slowly increase the speed and intensity of her stimulation, making my fluids ooze out of me, little by little. Then she did the thing that got me over the edge: she talked to me.\n\n\"Ready to burst again...? Flood my girl's insides with your cum? There's a good boy. Cum inside her. Cum for me...\"\n\n\"Mmhm... uhhh...\" I just moaned as I felt myself sending another dose of cum into the depths.\n\nMy head started spinning. The pleasure levels were incredible - I just started moaning and grunting, unable to do anything else. Under me, my lover was sobbing, her body shivering every time Mistress said something about what was going on inside her.\n\n\"That's it, keep it coming, fill her to the brim...\"\n\nEventually, I felt drained. Pretty much collapsing on top of the woman under me, it felt like we were melting together, a mess of sweat and juices. Sensing this, Mistress decided to give us a break.\n\n\"I'll go get us something to drink. You two... don't go anywhere. You may kiss, but no talking. I'll be right back.\"\n\nShe took the vibrator out of my ass and put it away before walking out the door, leaving me alone with my unknown lover.\n\nWe lay there for a few minutes, just making out like a couple of horny teens. I was still inside her, but because of the harnesses locking our hips together, I couldn't really move in or out. Mistress had clearly arranged it so that I wouldn't be able to fuck her sub without her help.\n\n\"Ohh... ohh...\" I heard her moan under me. \"You're still hard... oh, my god... Please... oh... such a virile man... so much cum... pumped into me... I need more... oh, please give me more... Please fuck me...\"\n\nI whispered to her, trying not to alert Mistress, who I felt certain was not far away.\n\n\"... We're not supposed to talk...\"\n\n\"Oh, I can't stop myself... I need you... fuck me, please fuck me...\"\n\nI could feel her pushing up at me. I wasn't really sure how to respond, and didn't get the chance to do anything. Mistress had clearly heard her.\n\n\"I thought I told you not to speak, cow.\" I heard her voice as she approached from the next room.\n\n\"Sorry, Mistress...\"\n\n\"Sorry isn't going to cut it, I'm afraid.\"\n\nMistress' nimble hands started loosening the carabiners holding our sweaty bodies together. I felt her tugging at me, pulling me back until my cock slid out of the warm, slippery hole it had been lodged in. My lover's legs were split and Mistress grabbed me by the harness, pulling me roughly backwards until my feet hit the floor. I buckled, almost falling, having been sitting in the same position for too long. Mistress, however, was unrelenting.\n\n\"Stand.\" she said.\n\nHaving been in this position for a while, my legs weren't quite ready to respond, so it took me a few seconds. While I stood up like she said, she moved over to the woman on the bed and pulled her closer. I felt a hand on the small of my back, nudging me forward. I realized that I was being positioned directly in front of the foot of the bed. Satisfied, Mistress commanded:\n\n\"He's right in front of you. His cock is all full of sticky juices. Clean him.\"\n\n\"Yes... Mistress...\" I heard the woman say say, hesitantly.\n\nThen I felt two fumbling hands touching their way over my stomach, trying to find my cock. Once she found it, she leaned forward. A wet mouth started licking and sucking my half-limp member, cleaning off the remains of cum and vaginal juices.\n\n\"Now, bull... you can sit over here for a little while. Here's a soda can - have a drink, get some rest... while I punish this disobedient little bitch...\"\n\nThere was an audible gasp and a slight squeal of pain, clearly caused by something Mistress was doing to her sub. The woman once again started begging:\n\n\"Please, Mistress, I didn't mean to... I'm sorry! Please, Mistress!\"\n\n\"Quiet. You disobeyed me and must face the consequences. Stand on all fours on the bed.\"\n\nI sat in a chair and drank my soda in seconds - it's incredible how thirsty you get from activity like this. I listened to the sounds the two women made while I was given a most welcome break. First, there was the familiar sound of a whip against moist skin. Then a voice crying out in pain. Then more swipes with the whip. Loud ones. More screams. Mistress was clearly hitting hard.\n\n\"Count them out.\" she commanded.\n\nWHACK! WHACK!\n\n\"OW! Yes, Mistress.... four... five...\"\n\n\"Louder.\"\n\nWHACK! WHACK!\n\n\"Ow! Six! Seven! Oooow! Please, Mistress...\"\n\n\"Keep counting. You're going to take fifty.\"\n\n\"Fifty?!\"\n\n\"Shut up and count!\"\n\nWHACK!\n\n\"Oww! Yes, Mistress... owh... Eight...\"\n\nMistress kept beating her sub, who kept counting and moaning in pain. I was just glad it wasn't me getting beaten this time. The sound of that whip was really loud. As the count went past forty, the begging got more and more insistent.\n\n\"Please, Mistress... I can't anymore... please don't hurt me...\"\n\n\"Shut it. I said fifty. Count.\"\n\nWHACK! WHACK! WHACK!\n\n\"Forty-three... forty-four... forty-five... please no more, Mistress!\"\n\n\"You'll take it all, as you deserve. Or would you rather I increased to a hundred?\"\n\n\"NO! No, Mistress! No... please... I'll.... I'll be good.\"\n\nWHACK! WHACK!\n\nThe woman was sobbing now. Literally crying. But still counting. Still obeying.\n\n\"Forty-six... forty-seven...\"\n\nWHACK!\n\n\"Forty-eight...\"\n\n\"I'll give you a few seconds between each of these last ones... make you feel each one...\"\n\n\"Aww, Mistress... I... oh... you're so... strict...\"\n\nWHACK!\n\n\"Forty-nine...\" she whimpered, anticipating the end of her punishment.\n\nWHACK!\n\n\"Fifty!\"\n\nShe started breathing heavily, gasping for breath as the whipping ended.\n\n\"Are you going to be good?\" Mistress asked coldly.\n\n\"Yes, Mistress... I promise to be good, I'll be a good cow-slut for you and your bull, Mistress...\"\n\n\"All right. But it's time to shut you up now. Open your mouth. You will be gagged for the rest of the session.\"\n\nA few noises followed as Mistress apparently attached some kind of gag to her sub, who would now be unable to talk. Then something happened that reminded me of what kind of thing we were actually doing. In a calm, mild voice, Mistress told her submissive:\n\n\"Remember, your safe word now changes to snapping your fingers. Is your hand free enough? Test it for me.\"\n\nI heard the sound of fingers snapping.\n\n\"Okay, good.\"\n\nOnly when this was taken care of did her voice turn back to the commanding and authoritative mode we were used to. She never forgot to look after her subs. I loved that about her.\n\nThere were shifting noises coming from the bed as the women arranged themselves. Mistress placed her sub the way she lay before, then turned to me.\n\n\"There, I think she's just about ready for more of your seed, bull. Come here.\"\n\nA shiver ran up my spine as she talked to me. I rose from the chair and shuffled towards them, once again assuming the position on top of the woman on the bed. I got on all fours as before, her legs were placed around me and Mistress pulled at her so that my cock once again slid into her waiting pussy.\n\n\"Mmmhhff... mmmmhh...\" I heard her moan through her gag below me.\n\nWe were locked even more tightly together this time, our bodies pressing against each other. I could feel her chest moving when she breathed, pushing her soft breasts up against me. I was so curious what she actually looked like - I felt like she was probably quite attractive, but I didn't know for sure. This was such a turn-on.\n\nOnce we were ready, Mistress stepped behind me. I heard some noises, then felt her prepare something. I prepared myself mentally for being penetrated once again, and sure enough, I eventually felt something bulbous pushing against my sphincter muscle. It had gotten pretty hot in the room, so the lube she applied felt a bit cold for a second. I relaxed my back door and waited for her to enter me.\n\n\"Here I come...\" she said, and I felt her hands grab my hips, nails digging into my flesh.\n\nA large phallus slid inside me, filling me up until I felt my mistress' body push against my buttocks. A strap-on, then, that's what this was. She was taking me from behind - fucking her female sub through my body.\n\n\"Uhhh...\" I moaned, feeling my cock twitch at the sensation.\n\nBeing fucked from behind like this while my cock was embedded in a fertile pussy... it was so hot. Then I heard those female moans as well. Under me... and behind me. That was definitely Mistress making those strained moans back there. I didn't know if it was from the physical activity or if she was being turned on by what we were doing, and I didn't care. I just loved hearing that voice echoing in the room. Hearing my mistress moan like that made me incredibly horny, and it only took a few seconds before I felt my orgasm building again.\n\n\"Cumming... uuhh... soon... Mistress... uuurhhh....\"\n\n\"Good... huhh... mmhh... let's fuck that little slut and knock her up...\"\n\nThe dildo slid in and out of me as Mistress grabbed my hips and fucked my ass harder and harder. She pushed all the way in, milking my juices directly into the waiting hole of the sub underneath me. Then the juice went thicker as it became filled with sperm cells when my orgasm shook through my body. Mistress was pleased. She stopped thrusting in me and started stroking my back.\n\n\"That's it... good boy... impregnate the little bitch... gooood boy...\""
    ],
    "authorname": "VilHaMer",
    "tags": [
        "bdsm",
        "dominatrix",
        "female domination",
        "male submissive",
        "mother son",
        "mistress",
        "bdsm novella",
        "ffm",
        "forced orgasm",
        "femdom"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/mistress-mom-ch-2-of-2"
}