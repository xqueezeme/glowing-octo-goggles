{
    "title": "The Girl With Golden Eyes",
    "pages": [
        "The house stood as all the others did, joined with its neighbors on the left and right, and so on and so on down the row. \n\nThe row houses of Friendship Heights seemed to mirror the name of the town in which they stood; there were no bars on the windows, no fences in the front yards, no gates with \u201cBeware of the dog\u201d signs hanging on them. Though the neighborhood sat on the edge of the city of Washington, DC, the crime and paranoia that pervaded the rest of the city did not seep over, as if an invisible barrier protected Friendship Heights from the world.\n\nIn much of the city, Halloween simply passed by unnoticed. In those areas, it was unheard of to let children out at dark to wander the streets in search of treats, and the only tricks would be the ones standing on the street corners in front of the liquor stores. Anyone daring to wander the streets on those nights would be the ones with guns, the ones without fear, the ones who owned the neighborhoods.\n\nIn spite of all that, in spite of the undeniable sounds of the city that could be heard from this quiet borough, the traffic, the police sirens, the occasional gunshots, the neighbors of Friendship Heights had no fear. They would, this Halloween as they did every Halloween, let their children out into the streets, knowing that they were protected by the unseen barrier of safety surrounding their neighborhood.\n\nStephen Harlow considered this as he sat perched on the doorstep of his own house, waiting for his daughter to finish changing into her Halloween costume. There was something in the air of the little neighborhood, in the brilliant Fall colors of the trees that lined their quiet street, in the gray clouds the filled the darkening skies, something comforting, something peaceful. If there was anything Stephen needed, it was comfort and peace.\n\nWhen Casey was finished trick-or-treating in his neighborhood, Stephen would drive her to her mother\u2019s house, thirty minutes away in another quiet, suburban community of Maryland, to finish out her Halloween. It would be the first year he had to do this, the first of many to come. He dreaded even a short visit with his ex-wife, especially this one, since it would be on her turf, in her house, and he would have to leave his daughter once again.\n\nStephen\u2019s heart dropped, his mood darkened. The three of them had once lived in the little town in Pennsylvania in which he had grown up, in the town where they had been a happy family. Before the arguments, before the fights, before the drinking. They moved to Maryland because of Stephen\u2019s job in the city, and the pressure closed in, like being underwater in a submarine approaching its crush depth. And Stephen had buckled.\n\nHe rubbed a hand against his stubbled, angular cheek, his sharp brown eyes shifting up the street along the line of row houses. He threw a neighborly wave to the Hendersons, a younger black couple in the process of carefully walking their toddler, Jimmy, out on his first Halloween. Stephen smiled at the Incredible Hulk costume he was wearing, complete with little foam rubber muscles.\n\nReggie Henderson handed off his son to his wife and wandered down the sidewalk.\n\n\u201cHey, Steve,\u201d Reggie said, \u201cyour little girl here tonight?\u201d\n\n\u201cYeah, she\u2019s inside putting on the finishing touches on. Not enough hours in the night when you\u2019re a Sleeping Beauty princess, you know?\u201d\n\nReggie laughed. He was an amiable man, and Stephen was glad to have him as a neighbor. He and his wife, Layla, had the kind of youthful energy that Stephen needed at this point in his life. When Stephen had first moved into the neighborhood, when he felt that he had hit absolute bottom, Layla and Reggie had shown up on his doorstep with a jug of fresh iced tea and a complete meal. It was the kind of simple, neighborly gesture that meant more to Stephen than anyone could have imagined.\n\n\u201cWell, when she\u2019s done getting beautiful, send her on down. Jimmy will be thrilled to see her.\u201d\n\n\u201cWill do, Reg. You guys have fun.\u201d\n\n\u201cYou bet.\u201d\n\nReggie flashed a smile and took off down the street to catch up with his family. The street was beginning to fill with neighborhood kids and their parents, but Stephen\u2019s eyes followed the Hendersons. He saw all three of them glance at the house coming up on their right, their faces uneasy, even little Jimmy\u2019s. They skirted across the street and continued down the sidewalk on the other side.\n\nStephen frowned and stood up. He walked down the stairs and out to the sidewalk, his eyes locked on the house that the entire Henderson family had been so careful to avoid. Number Seventy-two. \n\nStephen was forty-two years old, and had lived in many neighborhoods in his life, especially as the son of a military man. In every neighborhood, there was always that house, the house that the local kids made up stories about, the house that people of all ages tried to avoid. Stephen still remembered the house from his hometown in Marietta, Pennsylvania. The kids always said that a witch lived there, that she hung horse tails from a clothesline in her dining room.\n\nThey were always incredibly silly rumors, nothing that Stephen had ever believed, even as a child, but it was simply the presence of those houses that helped keep people away. Number Seventy-two was one of those houses.\n\nMost of the neighbors simply ignored the house, pretended that it wasn\u2019t even there. The Hendersons certainly never spoke about it, as Stephen learned during their first dinner together. When he had asked about it, Reggie had deftly changed the subject without blinking an eye.\n\nStephen shoved his hands into the pockets of his jeans and eyed the house with interest. It was, by all outward appearances, just like all of the houses on the block. It was, in fact, as well cared for as the other houses; by comparison, most of the \u201chaunted\u201d houses Stephen had seen in other towns were run-down, desolate places. They were the houses that looked like houses in the movies. Windows full of cobwebs, rotten siding or peeling paint, broken, dirty porches. \n\nThe exterior of number seventy-two, however, was in as good condition as the rest of the houses, if not better. The light blue-colored siding of the house was not rotting, nor was its front porch. The windows were not barred, and they did not have cobwebs hanging over them. The inside could not be seen only because of the light, silky drapes hanging over the picture window by the front door. This was a house someone lived in, someone cared for, and yet no one was ever seen, and no one was ever heard.\n\nThe row houses were all colored in various pastel hues, harking back to a slightly Victorian style. It lightened the neighborhood, gave it a cozy, hometown feeling. But Number Seventy-two stuck out like a sore thumb, not because of its color, but because of its lack of light, its lack of feeling, its lack of heart, that basic homespun warmth that the rest of the neighborhood exuded.  \n\nA shiver ran up Stephen\u2019s spine as he gazed upon the house. The only time he had walked past that house without crossing the street, he remembered feeling as if he were in a vacuum, as if the house itself were sucking all of the breath from his body. Along with the sensation came a feeling of loneliness and coldness that could not be attributed to anything in particular except fear.\n\n\u201cDaddy, where\u2019s my crown?\u201d came a sharp voice from the front porch. \n\nStephen shifted his gaze from the house down the street to his own house, where a tiny princess in a shimmering, iridescent gown stood on the porch, hands planted impatiently on her hips. He smiled at his daughter, though he couldn\u2019t help but notice how much Casey resembled her mother.\n\n\u201cYou look beautiful, honey.\u201d\n\n\u201cI can\u2019t look beautiful without my crown, Dad-dy,\u201d she said, but despite the irritation in her voice, he could tell she was flattered. Stephen wished that he owned a camera so he could freeze this moment in time. Casey was ten years old, almost eleven, and in not too many more years, she would be a young woman, casting aside her princess costumes and her crowns.\n\n\u201cYour crown was upstairs on the table in the guest bedroom, last time I checked, hon. Hurry up, they just took Jimmy Henderson down the street.\u201d\n\n\u201cOh, Dad, Jimmy Henderson is just a baby.\u201d\n\n\u201cYou used to play with him all the time, remember?\u201d Stephen knew he was reaching. Casey was growing up, and she was no doubt playing with older kids now. Older boys, too. It was a thought that made him less than comfortable; not too much longer and she would be bringing those older boys home to meet dear ol\u2019 Dad.\n\n\u201cYou like the Hendersons, sweetie,\u201d he continued, \u201cjust for tonight, okay? Jimmy likes you.\u201d\n\nCasey sighed and shrugged dramatically, as she was inclined to do lately. \u201cOkay, Daddy, just for tonight, though.\u201d She turned and went back in the house to get her crown.\n\nStephen exhaled a deep breath, but felt it crack a little. He was lonely, and he missed his little girl. Weekends and the occasional holidays were not enough to watch her grow up, and he knew it. Every weekend, she seemed a little bit older, and he knew there was so much he was missing in between. And he felt, in a small way, that she resented him for not being there.\n\nHe resented himself for ruining his marriage.\n\nStephen looked up at the sky and saw that it was growing darker. \u201cCome on, honey,\u201d he shouted, \u201clet\u2019s get this show on the road.\u201d A few moments later, he heard the sound of little feet running down the stairs, and Casey reappeared on the porch, a Disney princess trick-or-treat bag in one hand. She held her free arm out and twirled grandly.\n\n\u201cI\u2019m a beautiful princess,\u201d she said with a flourish, and Stephen couldn\u2019t help but smile.\n\n*  *  *\n\nThough the neighborhood wasn\u2019t all that immense, it felt like it took forever to walk through it. As Casey went from door-to-door, showing off her costume and begging for treats, Stephen admired the melting pot of ghosts, goblins, vampires, princes and princesses, cowboys, Spidermen, Spiderwomen, and one little tiny green hulk who insisted on flexing his padded arms and growling with a wide, ivory-toothed smile at everyone that walked past.\n\nStephen and Casey had met up with the Hendersons a block over, and as Stephen knew they would, Jimmy and Casey latched on to each other despite Casey\u2019s earlier objections. As Casey led Jimmy up and down the walkway of each house, the three adults hung back and watched them.\n\nAt some point, Layla glanced over at Stephen and smiled. \u201cSo, Stephen, what are you supposed to be this year?\u201d\n\nStephen glanced down at the old t-shirt and raggedy jeans he was wearing. \u201cI dunno. A plumber, maybe? College student. Slacker. Take your pick.\u201d\n\nLayla leaned over to him with a conspiratorial glint in her eyes. \u201cWell, you\u2019re the cutest slacker on this block.\u201d\n\nStephen glanced at Reggie and noticed him roll his eyes at his wife.\n\n\u201cWoman, what have I told you about hitting on the neighbors?\u201d\n\nLayla looked back at her husband with a sheepish grin. \u201cI\u2019m just saying, he looks pretty good for a middle-aged white man.\u201d\n\n\u201cThanks,\u201d Stephen said, \u201cthanks so much.\u201d\n\n\u201cSo, have you thought about it?\u201d Reggie asked.\n\n\u201cThought about what?\u201d\n\n\u201cAbout getting back into it. You know, the game.\u201d\n\nStephen gave a noncommittal shrug. \u201cI don\u2019t know, I don\u2019t think I\u2019m ready yet.\u201d\n\n\u201cIt\u2019s been two years,\u201d Layla said.\n\n\u201cYeah,\u201d Reggie said, \u201cand there\u2019s plenty of good-looking single mothers in this neighborhood.\u201d\n\nStephen laughed as they moved on to the next house behind the kids. \u201cWhat, so I\u2019m a middle-aged, divorced father of one, and now all I can get is single mothers?\u201d\n\nReggie nodded enthusiastically. \u201cWell, if you want to hit it on the first date, yeah, that\u2019s the way to go.\u201d\n\nLayla slapped her husband playfully on the arm. \u201cDon\u2019t listen to him, Stephen, he\u2019s a fool. But think about it. You\u2019re a good-looking man, you\u2019re doing much better, you have a good job, and a beautiful daughter who\u2019s growing up. Maybe it\u2019s time. I have a friend who you would\u2014\u201c\n\n\u201cOh, no no no no no,\u201d Reggie pleaded, \u201cdon\u2019t start this again.\u201d\n\n\u201cWhat?\u201d Layla asked.\n\nReggie turned on his best, high-pitched impression of his wife. \u201cOh, Stephen, I have a friend you would love if you into big asses and extensions.\u201d\n\nStephen began to laugh again, this time almost to the point of tears as he watched the stern look cross over Layla\u2019s face. \u201cTina does not have a big ass or extensions,\u201d she insisted, and Reggie shook his head and looked at Stephen seriously.\n\n\u201cLook, man, this ass is so big that when she sits around the house\u2014\u201c\n\n\u201cOkay, okay,\u201d Stephen interjected, \u201clook, I\u2019ll interrupt before you get your ass sleeping on the couch tonight. I\u2019m just not ready. Layla, I appreciate it, but it\u2019s just not time for me yet. I still\u2014I still have a lot of stuff I need to figure out.\u201d\n\nLayla nodded amicably. \u201cOkay, well, if you change your mind, or if you figure out your stuff, you let me know.\u201d\n\n\u201cYou\u2019ll be the first to know.\u201d\n\n\u201cAnd you, fool,\u201d Layla said to Reggie, \u201cdon\u2019t even try to tell me that the skank you dated before me didn\u2019t have a big ass and a raggedy weave.\u201d\n\n\u201cDamn, baby,\u201d Reggie said, wrapping his arms lovingly around Layla\u2019s waist, \u201cdon\u2019t even go there.\u201d They kissed each other, and Stephen turned away, for the first time in a long time missing his wife. Maybe not missing his wife, but missing someone.\n\nA few moments later, Casey and Jimmy ran up to them, their bags overflowing with treats. Stephen hadn\u2019t even noticed they were back on their own street, having cased almost the entire neighborhood.\n\n\u201cLook, Daddy,\u201d Casey said, excitedly throwing open her bag, \u201cwe got full-sized candy bars from Mrs. Kim. She gave us both two of them.\u201d\n\n\u201cOoh,\u201d Reggie said, squatting down to eye level with Jimmy, \u201ccan I get one of those?\u201d\n\nIn response, Jimmy growled angrily, flexed his green, foam muscles, and walloped his dad in the knee with a tiny fist.\n\n\u201cDaddy,\u201d Casey said, \u201ccan we go to that house?\u201d She pointed with a pink painted finger, which Stephen\u2019s eyes followed to the one house he\u2019d hoped she wouldn\u2019t ask about. He looked back at Casey to tell her \u2018no,\u2019 but the double-take that followed seemed unavoidable. \n\nWhen he had looked at Number Seventy-two earlier, at had been dark. It was always dark. But now, from behind the silk curtains came the soft glow of light, a flickering orange light, as if someone had a fire in the fireplace. Even more noticeable was the decoration of the front porch. Stephen strained his eyes to see through the darkness, and he could make out full bulbs of garlic hanging from the eaves of the porch, intertwined with what appeared to be some kind of jet black flowers. Beneath these strange bouquets, on the railing, were dozens upon dozens of lit candles, their little flames flickering through the night.\n\nStephen shook his head, and wondered how he hadn\u2019t noticed this when they turned the corner. The candles, at least, were bright enough to be seen up and down the block, they drew his eyes to the house like magnets.\n\n\u201cCan we, Daddy?\u201d\n\nStephen found his eyes shifting back to Reggie, who was looking straight at him. But, for a split second, he thought he had seen Reggie\u2019s eyes darting away from the house. If Reggie noticed the spectacle, he wasn\u2019t showing it.\n\n\u201cWell, buddy,\u201d Reggie said, his voice casual, \u201cwe\u2019re going to take this little guy home.\u201d He gestured to Jimmy, who was in the middle of a tremendous yawn.\n\n\u201cSomeone\u2019s ready for bed,\u201d Layla said, taking Jimmy\u2019s hand and leading him away. \u201cGoodnight, Stephen. Goodnight, Casey.\u201d\n\n\u201cGoodnight, Mrs. Henderson,\u201d Casey called after her, not taking her eyes from the house. Stephen found that he, too, could barely take his eyes away from the sight, though he was astounded that no one else, except for Casey, seemed to notice.\n\nReggie watched him for a long moment with a frown. \u201cYou alright, Steve?\u201d\n\n\u201cI\u2019m\u2014I\u2019m okay\u2014are you seeing this?\u201d Stephen gestured to the house, but Reggie rubbed his eyes and yawned.\n\n\u201cMan, it\u2019s been a long day,\u201d Reggie said, \u201cI think I\u2019m going to go crash with a beer and some of the boy\u2019s candy. He\u2019ll never miss it.\u201d Reggie winked, then turned to leave.\n\nStephen watched him walk away for a moment, then turned back to the house. He thought he noticed some movement at the window, like the curtains had shifted just slightly. Lost in the sight, he barely noticed a hand grasp his arm. He turned, startled to see Reggie back at his side, a look of intensity in his face the likes of which Stephen had never seen from the easygoing man.\n\n\u201cThe golden eyes have seen more death than you can possibly imagine, Stephen,\u201d Reggie said, his voice just barely above a whisper.\n\nStephen stared at him for a long moment, his jaw agape in shock. He was too surprised and confused to ask Reggie what he meant. It seemed like only a split second that Stephen glanced back at the house, but when he returned his gaze to Reggie, the man was already standing on his porch, at least fifty feet away. He was watching Stephen again, a scrutinizing gaze, full of wonder and wisdom, like an old man looks upon a baby. Then he smiled, turned, and went back into his house.\n\n\u201cWhat does he mean, Daddy?\u201d \n\nStephen turned his gaze down on his daughter, having almost forgotten that she was even there. \u201cWhat does he mean by what, sweetheart?\u201d\n\n\u201cWhat he said?\u201d\n\n\u201cI don\u2019t know, Casey. I think he was just being silly. You know how Mr. Henderson is.\u201d\n\nStephen found his gaze once more slipping back to Number Seventy-two. There was no doubt now that he saw the curtain move, and this time the silhouette of a figure faded back into the house. His curiosity was piqued, but there was something more than that drawing him to the house. It was as if the house, or the space the house occupied, was gathering him up in its unseen arms and pulling him near.\n\n\u201cOne more house, Daddy?\u201d he heard Casey ask, her voice distant.\n\n\u201cSure, baby. Last one, then we go to Mom\u2019s, okay?\u201d\n\n\u201cOkay.\u201d\n\nAs they crossed the street, Stephen felt as if his feet were barely touching the ground. This house was the one he had avoided in every neighborhood, in every town, in every state he had ever visited. And now he was approaching it head on, the one place in his safe little town that didn\u2019t feel safe. The hair on the back of his neck rose, and a tingle of energy surged through his body.\n\n\u201cIt\u2019s okay, Daddy,\u201d he heard from beside him, though Casey\u2019s voice sounded barely convinced. \u201cIt\u2019s okay,\u201d she said, more firmly this time, and he knew she was trying to convince herself.\n\nWhen they reached the bottom of the front steps, Stephen looked up at the garlands of garlic hanging from the porch. It was odd enough to see garlic as a decoration, but the black flowers confused him even further. Up close, he could see that they were roses, jet black, except with the lightest iridescent shimmer coating each one of them, like the material of Casey\u2019s gown. The effect played with his eyes, making him dizzy, like trying to focus on a chain link fence from far away.\n\n\u201cWhat is that?\u201d Casey asked.\n\n\u201cRoses, honey. I\u2019m sure they\u2019re fake.\u201d But from the odor drifting in the evening air, he could tell that the garlic was real. The roses, too, looked disturbingly real, complete with a light, flowery scent, though he couldn\u2019t imagine where flowers like that would actually grow.\n\nStephen placed a foot on the bottom step, then gently took Casey\u2019s hand. \u201cStand behind me, okay, honey?\u201d\n\nCasey complied, though Stephen wondered why, if he felt he had to protect her like this, they were even coming near this house in the first place. They climbed the stairs slowly, but the stairs were solid concrete, and they made little noise under foot. When they reached the top, however, the creaking of the wooden slats across the porch could have woken the dead. The candles lining the railing of the porch caused their shadows to glow eerily against the front door, and Casey hesitated, pulling on her father\u2019s hand.",
        "\u201cMaybe we should just go home,\u201d Casey whispered, eyeing the front door warily.\n\n\u201cWe\u2019ve come this far,\u201d Stephen said, realizing that he, too, was whispering, \u201cwe\u2019ll just knock. No one will probably answer anyway. I don\u2019t think anyone lives here.\u201d\n\n\u201cBut I saw the lady in the window, Dad.\u201d\n\nStephen looked at his daughter as she gazed up at him. The lady in the window? \u201cI think maybe someone just moved in,\u201d he said, \u201cthat must be it. Come on, honey, we\u2019ll knock, then we can go.\u201d\n\nCasey released a sigh that was closer to a whimper, then nodded her head. \u201cOkay, Dad.\u201d\n\nThey approached the door, Casey still lagging behind him, doing everything in her power to hide herself behind her father. For a split second, he felt like a complete rat putting his daughter in danger, but he shook off the thought quickly. This was a nice neighborhood. If they were getting new neighbors, it just meant that this house wouldn\u2019t feel so dead anymore.\n\nStanding before the door, Stephen glanced around behind him. It seemed as if the entire neighborhood had gone to bed, when only minutes earlier, the street was crawling with children and their parents. It was frighteningly silent; even the sounds of the city only a few blocks away had faded into nothing. Darkness had folded over the neighborhood like a thick blanket. How long had they been out?\n\nHe turned back to the door, feeling Casey\u2019s hand literally quivering in his own. He raised his hand to knock, and just as his knuckles hit wood\u2014\n\n\u201cDaddy, I want to go.\u201d\n\nStephen looked back at his daughter, whose eyes were frozen on the door, whose skin had gone almost completely colorless. When he heard the door open behind him, Casey uttered a gasp that made his skin crawl.\n\nStephen turned to face the occupant of the house, and the effect of the Halloween costume she was wearing could not have been any more unsettling. \n\nIn Stephen\u2019s opinion, the girl could not have been more than twenty years old. Her skin was pale, so pale, in fact, that the light blue of her veins could be seen running up her neck, across her head. Her hair was the color of pure spun gold at sunrise, her curvy lips a light pale pink. Her face, her entire body in fact, was slender, but not gaunt or haggard. This was revealed by the delicate, sheer dress she wore, which gathered into silky puddles at her feet. Looking at her, Stephen imagined that he could see just about everything.\n\nHe thought about it very little, however, because the most startling part of her costume made his blood pump wildly in his veins and his knees go weak. A cold sweat broke out on his forehead as he stared into her bright, gleaming golden eyes, golden eyes that locked on him so intensely that he worried he might scream. There was no sign of pupils in those eyes; they appeared to be, simply, shining golden orbs staring back at him.\n\nStephen\u2019s mouth and throat had gone dry, and he forced a swallow as the girl looked at him. Her appearance was startling, but at that moment, Stephen found her to be the most stunningly magnificent sight he had ever seen in his life.\n\n\u201cUh, trick-or-treat,\u201d he managed to croak, but the girl only stared at him with a look of puzzlement.\n\nStephen could still feel Casey\u2019s hand trembling in his own. The girl shifted her golden eyes down and peered around Stephen at Casey.\n\n\u201cHello, darling,\u201d the girl said, her voice soft and lilting, with a sumptuous accent that Stephen could not place. It sounded vaguely European, though from which country, he had no idea.\n\n\u201cUm, hi,\u201d Casey said shyly, peeking around her father\u2019s waist, \u201cI like your Halloween costume.\u201d\n\n\u201cHalloween?\u201d the girl said.\n\n\u201cYeah,\u201d Casey said, growing a little more comfortable, \u201cyou know, candy, pumpkins, trick-or-treat?\u201d\n\n\u201cI\u2019m not from here, little one. Although, for my people, today is a very special day.\u201d The young woman smiled, and the twinkle in her golden eyes made her entire face glow. She looked back to Stephen, who suddenly found himself speechless.\n\n\u201cI\u2014so, did you just move in,\u201d was all Stephen could manage.\n\n\u201cJust moved in, yes,\u201d the young woman said, eyeing him with curiosity.\n\n\u201cIt\u2019s\u2014a nice neighborhood, I think you\u2019ll like it here,\u201d Stephen said, managing to work the stutter out of his voice. \u201cHow long have you been here?\u201d\n\n\u201cOnly since this morning. If all goes well, I hope to stay for a long time.\u201d\n\n\u201cIf all goes\u2014\u201c Stephen stopped, remembering his failure to introduce himself. \u201cUh, my name is Stephen Harlow, I live just down the street there.\u201d He held out his hand, which the young woman stared at for a long moment. She raised her hand and simply brushed his palm with two fingers, sending a surge of electricity up Stephen\u2019s arm, and he couldn\u2019t help but pull back from her.\n\nCasey stepped from behind her father, and the young woman\u2019s eyes slipped to the little girl once again, widening in wonder.\n\n\u201cWhy, my dear,\u201d the young woman said, a tone of genuine awe in her voice, \u201cyou look like a princess.\u201d\n\nCasey smiled and held out her arms. \u201cI am a princess.\u201d \n\n\u201cYou must be. Where I come from, only true royalty dress themselves so exquisitely.\u201d\n\nA beaming smile spread across Casey\u2019s face, a red blush filling her cheeks. Stephen smiled at her. \u201cThis is my daughter, Casey,\u201d he said.\n\n\u201cPrincess Casey,\u201d the young woman said, taking Casey\u2019s hand in her own and bowing her head as if actually meeting the royalty of which she spoke. Stephen could tell that Casey was loving every minute of the attention.\n\n\u201cYou sure know how to flatter a little girl,\u201d Stephen said. The young woman straightened up and looked at him sternly.\n\n\u201cI offer no flattery. In my world, the daughters of royalty are held in the highest regard.\u201d\n\nStephen shrugged, trying to keep from laughing. This act was becoming quite amusing to him. \u201cI don\u2019t know about royalty,\u201d he said, \u201cI\u2019m just a computer programmer.\u201d\n\nAt this, the young woman nodded politely, though he could tell that she had no idea what he was talking about. His mind wandered back to what she had said. In my world. It must have been some sign of the language barrier; surely she must have meant her country. Yet Stephen couldn\u2019t tell how much of this was an act or not. Perhaps this particular young woman took Halloween very seriously. Regardless, he wasn\u2019t sure how to respond; he had no desire to offend his new neighbor.\n\n\u201cWell,\u201d Stephen said, \u201cwe\u2019re sorry to bother you, I just wanted to introduce myself, and, you know, what with it being Halloween and all\u2014\u201c\n\n\u201cOh, I apologize,\u201d the young woman said in embarrassment, \u201cI forget my manners. Will you come in?\u201d\n\nStephen shuffled his feet. \u201cI don\u2019t know, I need to get Casey to her mother\u2019s house\u2026\u201d\n\n\u201cPlease, Daddy,\u201d Casey said, \u201cjust for a little bit.\u201d\n\nStephen looked at the young woman, the most gorgeous creature he had seen in all his life. There was no doubt in his mind that even beneath her costume, beneath the make-up and the golden eyes, she was still beautiful. Although something about her made him a little uneasy, he decided that any more time spent with her would be a pleasure.\n\n\u201cWell, I suppose,\u201d Stephen said, \u201cjust for a little bit.\u201d\n\nThe young woman smiled her stunning smile, then stepped out of the doorway, gesturing for them to enter. A wild, flowery scent drifted to Stephen\u2019s nose, reminding him of spring in the rolling fields of his hometown. It was a scent he had grown unaccustomed to living so close to the city, but which still stood frequently at the edge of his mind, like the memory of a childhood dream. \n\nStephen stepped into the house, followed closely by Casey shuffling behind him. From the tiny foyer, Stephen could see that the layout to the house was identical to his own. Before him was the staircase to the upper floor, beside that a small hallway which cut through to the large dining room. To his right, the living room, which also opened onto the dining room, and at the back of the house he knew was the small kitchen.\n\nThe only difference between this house and his own was that this house was almost completely empty. It seemed odd, even for someone who had just moved that day, that there would be next to nothing occupying the space. Not a single box to be found, no suitcases, and the only piece of furniture was an ornately carved end table sitting near the fireplace in the living room. On top of the table was a gathering of the most beautiful crystals Stephen had ever seen, which shimmered in multiple colors as if the sun was shining down on them.\n\n\u201cYou pack light,\u201d Stephen remarked, \u201cthe movers haven\u2019t arrived yet?\u201d\n\n\u201cI require few possessions,\u201d the young woman said, closing the door behind them. She slipped around them into the living room, and Stephen was awed by the grace and beauty of her movements. With the material of her dress pouring down around her feet, she looked as if she barely touched the floor when she walked. \n\nThey followed her into the next room, but Casey\u2019s attention was almost immediately snagged by the small table next to the fireplace, and she wandered over to it with wide eyes.\n\n\u201cOh my gosh, Daddy, look.\u201d She walked up to the table, standing at eye-level with the crystals.\n\n\u201cAh, my dear,\u201d the young woman said, turning back and moving towards Casey, \u201cyou may look, but whatever you do, do not touch the crystals.\u201d She moved behind Casey and bent over at the waist, looking over Casey\u2019s shoulder, Casey barely aware of her presence.\n\n\u201cWhat are they?\u201d Casey asked.\n\n\u201cThey are very old, and very valuable. And\u2014\u201c she added with a wondrous flare in her tone, \u201c\u2014they are very, very magical.\u201d\n\n\u201cThey are?\u201d\n\n\u201cYes, little one, they are.\u201d\n\n\u201cWhat do they do?\u201d\n\n\u201cThey do all kinds of things,\u201d the young woman answered, \u201cthey can take you to other worlds if you want. That is why I ask you not to touch them. You never know where they might take you, if you do not know how to use them.\u201d\n\n\u201cWow,\u201d Casey said in an excited whisper, \u201cis it real, Daddy? Is magic real?\u201d\n\nStephen had been watching with an amused smile on his face. The young woman spoke with such fervor that even he almost believed it. The crystals glowed, their light flickering as if they were full of magic, but Stephen was almost positive he had seen a similar setup in a Halloween shop a week earlier. He found himself wondering where the batteries went.\n\n\u201cI\u2019m sure the magic is real, honey,\u201d Stephen said, \u201call you need to do is click your ruby slippers together three times and the crystals will take you wherever you want to go.\u201d\n\nCasey shot him a sour look, then turned back to the crystals. The young woman stood up straight and turned to him.\n\n\u201cYou do not believe in magic,\u201d she said.\n\n\u201cWell, I suppose it depends on what you mean by magic. I watched David Copperfield walk through the Great Wall of China once on television. That was pretty cool.\u201d\n\nThe young woman\u2019s head tilted in confusion again, and Stephen felt her gaze almost moving through him. \n\n\u201cLook,\u201d he said, \u201cI like magic tricks as much as the next guy, but do I really believe in it? No, not particularly.\u201d\n\n\u201cMagic is much more than tricks, Stephen,\u201d the young woman said, and the sound of his name rolling from her tongue made him shiver, \u201cmagic is very real. Tonight is a very magical night.\u201d\n\n\u201cIs it?\u201d\n\n\u201cIt is,\u201d she said, moving closer to him, her golden eyes holding him in their gaze, \u201cit is a very special, very magical night.\u201d\n\nBefore he knew it, she was so close to him he could almost feel the heat of her body against him. She looked up at him, and he was absolutely entranced. Was this girl actually hitting on him?\n\n\u201cMy people regard this night as a sacred night,\u201d she said, her hand moving to his chest, \u201cand yet it is a night we are free to do\u2026 whatever we want.\u201d\n\nHer touch, once again, was electrifying. It felt as if Stephen\u2019s heart began racing the moment she placed her hand on him, and threatened not to stop until she moved away. His breath quickened, and for a moment, he feared a heart attack. At his age, and having been an alcoholic and a smoker for many years, he was a prime candidate. This girl was strikingly beautiful, and she was certainly grounds for a heart attack, he just hoped he could do it somewhere other than here in the middle of her house. He would never get invited back that way.\n\nInvited back. It was what he wanted, wasn\u2019t it? It was the reason he had accepted her invitation to come in, the reason his lustful gaze kept moving over her. He wanted this girl, though she could have been half his age, he wanted her like he had never wanted any other woman. What was it about her that kept calling to him? Surely it could not have been the Halloween costume, Stephen was never one for tricks, novelties, role playing in the bedroom. But she excited him.\n\n\u201cIt is a night we are free to do whatever we want,\u201d she repeated, her voice just barely above a whisper. Her face still turned up to him, she closed her eyes, her pale pink lips parted, and it was all Stephen could do to keep from kissing her right there.\n\n\u201cDaddy?\u201d Casey\u2019s voice startled him out of his trance, and he pulled back from the young woman.\n\n\u201cYes, honey,\u201d he said, looking over at Casey, who was smiling brightly.\n\n\u201cAre you going to kiss that lady?\u201d Her voice was so full of childish taunting and girlish delight that Stephen had to smile in spite of himself. When he looked back at the young woman, he saw that she was smiling, too.\n\n\u201cNo, Casey,\u201d Stephen heard himself say, \u201cnot yet.\u201d\n\n\u201cWould you like to see where I come from?\u201d the young woman asked, and for the first time, Stephen realized that she had not yet told him her name. He imagined that it was something beautiful, something elegant. Her accent was so luxurious, her look so exotic, he knew she must be some princess in a far off land.\n\n\u201cTell me your name, first,\u201d Stephen said.\n\n\u201cMy name,\u201d she said, \u201cmy name will be difficult for you to say. I suppose in your language, the closest name\u2026 Cassandra.\u201d\n\nStephen grinned. \u201cCassandra, it\u2019s beautiful. Why don\u2019t you let me give your full name a shot?\u201d\n\n\u201cMy full name contains one hundred and eleven letters, and is only spoken fully when accompanied by music at official functions of the court.\u201d\n\n\u201cOfficial\u2014\u201c Stephen frowned, \u201cwhere are you from?\u201d\n\n\u201cCome,\u201d she said, holding out her hand, \u201cI\u2019ll show you. Young lady?\u201d Casey took her free hand, and Cassandra led them into the dining room.\n\nThe large dining room was dark, lit only by candlelight from a circle of five candles on the floor in the middle of the room. The candles were set at the points of a star, lightly outlined on the floorboards with chalk. It was a pentacle, something Stephen recognized as a symbol used in witchcraft.\n\n\u201cYou\u2019re a witch?\u201d he asked, and Cassandra looked at him as if he had just shot a bullet through her heart.\n\n\u201cI beg your pardon! Where I come from, witches are burned at the stake. I am not a witch.\u201d\n\nStephen, once again, found a laugh forcing its way up his throat. \u201cCome on, really, Cassandra, they don\u2019t burn witches at the stake anymore. Look, this whole act is very cute, but\u2014\u201c\n\nStephen\u2019s voice cut off as his eyes moved to the wall. There was in the dining room, as was in his own house, an alcove beneath the diagonal overhang where the stairs ran up to the second floor. With the wall set further back, it created a quiet area where Stephen had placed his computer desk and which he used as a workspace.\n\nThe space in Cassandra\u2019s house, however, was empty, and on the wall was painted the most massive mural Stephen had ever seen in a private home. The mural depicted miles upon miles of vast, mountainous land, perhaps the most lush, beautiful land imaginable. Rolling hills were covered with dense greenery, meeting on the horizon with cobalt blue skies. Stephen had been to the mountains of Appalachia, supposedly some of the most beautiful landscape in the world, but he had seen nothing that compared to this.\n\nThe mural was so full of beauty and majesty, it made Stephen shudder, but there was a single blemish that seemed to suck everything else in towards it. At the focal point of the scene, set just off center, was a castle like something out of a nightmare. Blackened stone lined its walls, dreadful, jagged spires rose up from its four corners, like skeletal fingers reaching to the heavens. It was an awful sight, and Stephen thought he could almost see the light being sucked out of the place.\n\nStill, for the horror of the structure sitting at the center, it was the most dazzling landscape Stephen had seen, and the mural was so detailed, so absolutely realistic, that he felt like he was looking through a window into another world.\n\n\u201cThis\u2014this is amazing. How did you do this?\u201d\n\n\u201cOn this night, the night you call \u2018Halloween\u2019,\u201d Cassandra said, \u201cthe window opens, and you have but to look through it. This is my home.\u201d\n\nStephen shook his head in disbelief. \u201cBut, this must have taken you forever to paint. I mean, if you\u2019ve only been here through today\u2014\u201c\n\n\u201cDaddy,\u201d Casey said, moving closer to the mural, \u201clook. There\u2019s\u2014there\u2019s a light in there.\u201d\n\nStephen moved closer, just behind Casey, who practically had her nose pressed to the wall. Upon closer inspection, Stephen could see no signs of brush strokes or paint lines, and when he turned his head, it was as if he could see more of the landscape than was in the original frame. Like looking through a window.\n\n\u201cDad, look.\u201d Stephen followed Casey\u2019s gaze to the castle, which was still as black as ever. And yet\u2026\n\nLight.\n\nThere was a fire flickering in one of the windows.\n\nStephen pulled away quickly, his hand on Casey\u2019s shoulder, pulling her back from the wall. He felt ill, felt like throwing up, but he took a deep breath and tried to calm his pounding heart. He turned to Cassandra, who was looking at them with deep interest, and an expression of pride on her face.\n\n\u201cOkay, okay,\u201d Stephen said, a weak grin spreading over his face, \u201cyou got us, you totally got us. This is all very cool, I have to admit, this is one of the greatest Halloween tricks I\u2019ve ever seen in my life. I mean, the crystals, the thing with the window, it\u2019s amazing. I\u2019ve been to a lot of haunted houses, a lot, but this one really takes the cake. You should go to Hollywood or something, seriously. However, it\u2019s getting late, and I really do need to get my daughter to her mother\u2019s house, so you\u2019ll have to excuse us.\u201d\n\nCassandra only stared at him with that calm expression of curiosity. Without another glance at the wall, Stephen propelled his daughter forward to the living room. He did his best to divert her gaze from the crystals and pressed her on toward the front door. As they reached the foyer, Casey dragged her heels and turned to Stephen.\n\n\u201cBut Daddy, I didn\u2019t get any treats.\u201d\n\nStephen glanced back and saw Cassandra standing by the table of crystals, her back turned to them. \u201cOh, honey, you got a treat, I promise. This is the coolest haunted house you\u2019ll ever see in your life.\u201d\n\n\u201cI do have something for you, darling,\u201d came Cassandra\u2019s voice from directly behind Stephen. He jumped at finding her suddenly so close.\n\nCassandra moved forward to Casey, her closed fist hand held out before her. When she opened it, a golden glow, nearly matching the one in her eyes, emanated from the object in her palm. Casey\u2019s jaw dropped.\n\n\u201cOnly a princess can own such a treasure,\u201d Cassandra said, bending down to meet Casey\u2019s gaze. Casey could only stare at the crystal being offered to her, and Cassandra smiled. \u201cYou may take it, my dear. You are, after all, a princess, aren\u2019t you?\u201d\n\n\u201cI am,\u201d Casey said, and Stephen knew he had never seen her so absolutely entranced, \u201cI\u2019m a beautiful princess.\u201d\n\nCassandra laughed, a high, lilting giggle. \u201cYou are a beautiful princess. Take it, my dear.\u201d\n\nCasey took the crystal very carefully in her hand and continued to stare at it. \u201cWhat does it do?\u201d",
        "\u201cYou put that crystal under your pillow when you sleep, and you will have the most wonderful dreams. When you awake, you will feel better than ever\u2026 like a new person. Promise me you will do that?\u201d\n\n\u201cI will, I promise.\u201d\n\nStephen smiled politely as Casey stuffed the crystal into a pocket beneath her gown. \u201cCassandra,\u201d he said, \u201cI thank for your hospitality, and the best Halloween trick I\u2019ve ever seen.\u201d\n\n\u201cStephen Harlow,\u201d she said, extending her hand to him, \u201cit was my pleasure, though I\u2019ve shown you no tricks tonight. Tricks are for court jesters and travelling magicians and...\u201d here she paused, a shudder running through her, \u201cfor witches. I am none of these, only a lowly handmaiden. What I have shown you tonight\u2014\u201c\n\n\u201cWas real, yeah, I get it. Goodnight, Cassandra,\u201d he said, and as he took her hand, he felt compelled to raise her hand to his lips and kiss her knuckles, something he had seen in countless movies. Cassandra seemed to appreciate the gesture; a breathy sigh escaped her lips.\n\n\u201cWelcome to the neighborhood,\u201d Stephen said, straightening himself to look at her again. He was startled to see how little emotion her golden eyes revealed. \n\n\u201cThank you,\u201d she said, \u201cI would be pleased if you should visit again, Stephen. Very soon.\u201d\n\n\u201cCan I come, too?\u201d Casey chimed in from beside Stephen.\n\nCassandra smiled at her brightly. \u201cOf course, little one, any time you want. I should be honored to receive a princess such as yourself in my home.\u201d\n\n\u201cWhy, thank you,\u201d Casey said, trying to mimic Cassanda\u2019s accent and curtsying. Cassanda, in return, curtsied to her and giggled again. It was a girlish giggle that Stephen found absolutely captivating, but he couldn\u2019t help but wonder how old she really was. \n\nCassandra gave Stephen one last glance, a slight smile, and went back into the house, closing the door behind her.\n\nThough there was no emotion in her eyes, Stephen knew what was in her smile.\n\n*  *  *\n\nStephen had very little time to reflect upon his visit with his new neighbor. It was already well past the time he had promised Casey to her mother, and Stephen knew he was in for a vicious tongue-lashing already. It was, of course, the last thing he needed from his ex-wife. They headed back to Stephen\u2019s house practically at a run, gathered up Casey\u2019s things, and were back in the car in the blink of an eye. \n\nIt was a half-hour drive across the Beltway to his ex-wife\u2019s neighborhood, and Stephen made it as quickly as possible without putting himself in danger of getting pulled over. He had already had his license suspended once for a drunk driving offense, and he had no desire to rack up any more violations.\n\nAs he pulled up in front of Julie\u2019s house, he expected the worse, and would not be disappointed.\n\n\u201cWe\u2019re late,\u201d he muttered absently.\n\n\u201cMommy won\u2019t mind,\u201d Casey said hopefully, though Stephen could tell by the tone of her voice that she was thinking the same thing he was, and it offered him little comfort.\n\n\u201cListen, honey,\u201d Stephen said, turning to his daughter in the passenger seat, \u201cyou know I love you, right?\u201d\n\n\u201cI do, Daddy.\u201d\n\n\u201cAnd you know I would never do anything to purposely hurt you or Mommy?\u201d\n\n\u201cI know, Dad,\u201d Casey said, gazing absently at her mother\u2019s house. \u201cYou know, Mom says she misses you sometimes. She says she wishes we had stayed in Pennsylvania, where we belonged.\u201d\n\nThe words cut him straight to the core. He had had the same thought on more occasions than he cared to admit. If only they had stayed in Pennsylvania... would things be any different? As far as Stephen was concerned, an alcoholic was an alcoholic, and if it hadn\u2019t been the city that pushed him over the edge, it would have been something else. Still, the guilt never failed to eat away at him.\n\n\u201cMom doesn\u2019t mean the things she says to you,\u201d Casey said.\n\nStephen looked at her a moment, then leaned over and kissed her on the cheek. \u201cWe should go in, honey, it\u2019s getting late.\u201d\n\nThey exited the car and made the walk up to Julie\u2019s house. Stephen could feel his insides twisting already. He envied Casey for being able to so freely open the front door and enter the house without a care. As he stepped in, the sight of Julie sitting impatiently on the sofa made him hesitate.\n\nJulie was still a beautiful woman, and though age lines had cut across her face, she wore them well. Her long, straight brown hair had streaks of gray flowing through it, but it gave her a distinguished quality. Now, however, her face was hard, stern, and Stephen knew it was only because he was there.\n\nShe softened when she saw her daughter, and Casey ran up to her immediately, throwing her arms around her.\n\n\u201cHi, Mommy.\u201d\n\n\u201cHey, baby,\u201d Julie said, \u201cdid you have a good time?\u201d\n\n\u201cI did, Mom,\u201d Casey said, sitting down on the sofa beside her, still in her little princess gown. \u201cMommy, we went to this lady\u2019s house, only it wasn\u2019t like a real house, it didn\u2019t have any furniture or anything, and this lady was so cool, she had gold eyes, and she had a table full of crystals and they glowed, and there was this picture and\u2014\u201c\n\nJulie laughed, and gently placed her arm around her daughter. \u201cHoney, honey, slow down, okay? Are you ready for some more trick-or-treating, or are you tired?\u201d\n\n\u201cOh, no, I\u2019m not tired.\u201d\n\n\u201cGood, sweetie. Listen, why don\u2019t you go put your things upstairs, and get ready? I need to talk to Daddy for a little bit.\u201d\n\nThe smile faded from Casey\u2019s face, and she glanced nervously at Stephen. She stood up and walked over to him, looking slightly dejected, as if she were in trouble, too. Stephen squatted down and looked her in the eye.\n\n\u201cCome here, little girl,\u201d he said, and she threw her arms around his neck. \u201cDid you have a good time tonight?\u201d\n\n\u201cYes, Daddy, thank you,\u201d she said, then quietly whispered in his ear, \u201cit\u2019ll be okay, Dad. Don\u2019t look sad.\u201d\n\nStephen shut his eyes and squeezed her a little harder, then let her go. She smiled at him, then made her way up the stairs. He stood up straight and turned back to his ex-wife, whose mouth was little more than a thin line on her face.\n\n\u201cYou\u2019re an hour late, Stephen. An hour. All the other kids have gone out by now.\u201d\n\n\u201cI\u2019m sorry, Julie,\u201d he said, \u201cwe lost track of time\u2014\u201c\n\n\u201cDamn it, Stephen, you\u2019re always losing track of time,\u201d Julie said, standing up and approaching him. \u201cYou have very little responsibility in this whole situation, and the least you could do is take the responsibility you do have a little more seriously.\u201d\n\nStephen\u2019s jaw clenched, his teeth grinding together. He wouldn\u2019t allow himself to lose his temper, even if it meant turning his stomach in knots.\n\n\u201cI have very little responsibility,\u201d he repeated, \u201call I have to do is take the blame for breaking up a happy family. All I have to do is take the blame for ruining your life, my life, and possibly the life of our daughter. All I have to do is face you every weekend knowing that I\u2019ve lost the only woman I ever loved. How\u2019s that for little fucking responsibility, Julie?\u201d\n\nJulie\u2019s eyes darted away from him, and for a moment he thought he had finally gotten his point across.\n\n\u201cJulie, we lost track of time, me and Casey. I\u2019m sorry. We were having a good time, and\u2026 we just lost track of time. I have so little time with her, and\u2014\u201c Stephen stopped when he felt his voice begin to crack. If there was anything he didn\u2019t want, it was for his ex-wife to see him cry.\n\nJulie sighed deeply and crossed her arms over her chest. Her eyes shifted to him, and the expression on her face seemed to contain an inkling of guilt. The corner of her mouth curled up in a tiny smile, and for a moment, she reminded him of the woman, the girl, he had fallen in love with.\n\n\u201cSo, who\u2019s this \u2018lady\u2019 you and Casey went to visit?\u201d\n\nStephen\u2019s eyes narrowed slightly. Was it jealousy he heard in her voice? \u201cNobody,\u201d he said, \u201ca new neighbor, just moved in today. The most\u2014realistic Halloween costume I\u2019ve ever seen.\u201d\n\n\u201cHmm,\u201d Julie mumbled, and Stephen continued to stare at her.\n\n\u201cWhy, exactly, do you ask?\u201d\n\n\u201cI\u2019m not allowed to ask about your girlfriends?\u201d\n\n\u201cWhat makes you think she\u2019s my girlfriend?\u201d\n\n\u201cThe tone of your voice when you talked about her just then,\u201d Julie said, \u201cI\u2019m a woman, I can tell these things. You like her.\u201d\n\n\u201cJulie\u2026\u201d\n\n\u201cIt\u2019s okay,\u201d she said, the slight smile still on her lips, \u201cStephen, really, it\u2019s okay.\u201d She began to walk away from him, up the stairs to the second floor, but her grabbed her firmly by the arm and stopped her.\n\n\u201cJulie, I think she\u2019s attractive, I really do, but she\u2019s not\u2014she\u2019s not\u2026\u201d his voice trailed off, and Julie watched him with a soft expression on her face.\n\n\u201cShe\u2019s not what?\u201d she said, her voice hoarse and breathy.\n\nStephen swallowed his pride and pulled her close to him. She came willingly, and as he pressed his lips to hers, she did not struggle or pull away. He kissed her, and she kissed him back. When her breath began to quicken, he felt a tingle of excitement inside him he hadn\u2019t felt in a long time, and he forced himself to pull away.\n\nShe seemed surprised, and she looked up at him with wide eyes and a hurt expression.\n\n\u201cI\u2019m not ready for you yet,\u201d Stephen said, trying to catch his breath.\n\nJulie\u2019s hand went to her mouth, a flush of red coming over her face. She was embarrassed, he could tell, more than likely because she had allowed herself to lose control. \n\n\u201cNo,\u201d she said, \u201cI don\u2019t guess you are.\u201d\n\n\u201cJules, if I could take it all back\u2014\u201c\n\nShe raised her hand to signal him to stop. Her face dropped into her other hand, and he could hear her voice wavering. \u201cDon\u2019t, Stephen. Please don\u2019t.\u201d\n\nHe reached out for her, but she pulled away from him, her face stern and hard once again. Her eyes were full of tears, but he knew she would be damned if she was going to let any of them fall. At least, not while he was there.\n\n\u201cDon\u2019t touch me,\u201d she said sharply. \u201cStephen, I know you\u2019re trying, you\u2019re trying to be an adult, but every time you come around, every time you come near me\u2026 you just make me feel so stupid.\u201d Her voice cracked again, and Stephen wondered secretly what he would do if she lost it.\n\nShe regained her composure quickly. \u201cI won\u2019t let you manipulate me, Stephen.\u201d\n\n\u201cI\u2019m not trying to\u2014\u201c\n\n\u201cI know you\u2019re not doing it on purpose, but you come around, you kiss me, you kick in the old Stephen Harlow charm, and then you turn me down so you can\u2014what? Have the power back? Is that it? I won\u2019t let you, Stephen, I won\u2019t. I appreciate that you\u2019re trying to change, and that you\u2019re trying to be a good dad for Casey. But don\u2019t you come back here and toy with me.\u201d\n\nWith that, she turned her back on him and headed up the stairs.\n\n\u201cYou can let yourself out,\u201d she said as she walked away.\n\n*  *  *\n\nStephen drove home with the feel of Julie\u2019s lips burning on his own. It had been a moment of weakness, a moment of loneliness, for both of them. And he had turned her down because he was not yet ready to take care of her again. Still, the kiss had been good, had been better than he remembered, and it only served to remind him that he was still a man, a lonely man, who hadn\u2019t been with a woman in nearly three years.\n\nJulie. She was a good woman, a good wife, a good mother, but she was not the kind of woman to be trifled with. Her reaction to Stephen\u2019s indiscretion was a vivid reminder that she didn\u2019t appreciate games, and that if Stephen was to come back to her, he couldn\u2019t do it halfway. \n\nTurning the corner onto his street, Stephen was glad to be back in the safety of his neighborhood, where he felt protected even from himself. He drove slowly down the dark street, now empty of the neighborhood children in their Halloween costumes. His car drifted past his own house, and he slowed in front of the Henderson\u2019s. He wondered if Reggie would still be awake, but all of the lights were out. Reggie was, no doubt, asleep in his bed beside his wife, his son sleeping peacefully down the hall.\n\nAt that moment, Stephen realized how alone he really was. This evening, with his ex-wife\u2026 a year later, and he still seemed determined to ruin their lives. Casey had told him Julie missed him, and he had tried to take advantage of that. He felt worse at that moment than he did during any of the moments he when he was still drinking.\n\nAnd then, of course, there was that. Two blocks away, within the city, there had to be someplace he could go, someplace he could get a drink. The liquor stores stayed open late, the bars\u2026\n\nHe stopped. There was a light in one of the houses. I would be pleased if you would visit again, Stephen. Very soon. \n\nStephen parked his car on the street in front of her house. When he set foot on the pavement, he could already feel himself being drawn to her. Without evening realizing it, he passed over her walkway, up her stairs, beneath the garlands of garlic and black roses, to her door. And before he could even knock, the door was open, and she stood before him.\n\nShe had not changed out of her costume, though he had not expected her to. He wondered vaguely how the character could so vividly stay with her, though deep down, he knew it was somehow a part of her.\n\n\u201cStephen,\u201d she said with mild surprise, \u201cyou grace me with your presence again so soon.\u201d\n\n\u201cI\u2014I\u2019m sorry. I was just\u2014I just took my daughter to her mother\u2019s house, and I was looking for someone to talk to, you know? Your light was on, and I thought\u2014\u201c\n\n\u201cI will sleep very little tonight. Tonight is\u2014\u201c\n\n\u201cI know,\u201d he said, \u201ca very special night. I got that, from the costume and everything.\u201d\n\n\u201cI don\u2019t think you quite understand as well as you think you do. But that is of little consequence. Would you like to come in?\u201d\n\nStephen exhaled a deep breath and looked around. The neighborhood seemed so dark this evening, much darker than usual. He certainly didn\u2019t want to be alone in the middle of it.\n\n\u201cIf you don\u2019t mind,\u201d he said.\n\n\u201cIt would be my pleasure,\u201d she said, a sultry smile curling on her pink lips. \n\nShe stepped aside once again so he could enter. He stopped near the doorway as she closed the door, and as soon as she turned, she pressed herself close to him. The heat from her body warmed him all through his own body, and he found himself aching to touch her. She turned her face up to him and closed her golden eyes as she had before.\n\nWithout hesitation, he bent his head close to her, pressed his lips to hers. He found the breath nearly knocked out of him as he kissed her, her mouth was so soft and so sweet. After a moment, they broke the kiss, and she smiled at him. Her hands reached for his, and she gave him a surprised look.\n\n\u201cYour hands are shaking,\u201d she said, \u201cwhy?\u201d\n\n\u201cI don\u2019t know, I guess I\u2019m just\u2026\u201d his voice trailed off as he reached a hand to her face. She was so startlingly pale, he had to see\u2026 he trailed a finger across her cheek, but not a speck of makeup streaked beneath it. His finger swept down the line of her jaw, and she sighed at his touch. Still nothing, across her lips, nothing. Her ghostly complexion, even more striking against her golden blonde hair, was no Halloween costume.\n\n\u201cMy God,\u201d he whispered.\n\n\u201cWhy do you pray,\u201d she said softly.\n\n\u201cYour skin, it\u2019s so light. Are you sick?\u201d\n\nHer golden eyes narrowed angrily, and again, Stephen could see no sign that she was wearing trick lenses of any kind. \u201cDo you ask the dark man across the street if he is ill? My skin is characteristic of my people.\u201d Her face dropped a little, her shoulders slumped sadly. \u201cDo you find me unattractive?\u201d\n\nStephen placed a finger beneath her chin and lifted her head. Once again, he pressed his lips to hers, the blood beneath his skin boiling at the feel of her lips, which parted against his own, their breath mingling together. Stephen could have kissed her forever, but he pulled away.\n\n\u201cIf all this is real,\u201d he said, \u201cyou\u2019re the most beautiful woman I\u2019ve ever seen in my life.\u201d\n\n\u201cYou flatter me,\u201d she said with a smile, and a twinkle in her eyes.\n\n\u201cI want to know everything, I want to know where you\u2019re from, I want to know about your family\u2014\u201c\n\nAt the mention of her family, Cassandra\u2019s face darkened. \u201cMy family\u2026 I do not wish to speak of that on this night.\u201d\n\n\u201cIt\u2019s okay, we don\u2019t have to talk about it, then. I understand, I just want to know you, Cassandra. I want to know what you\u2019ve done to me that made me want to come back here so badly.\u201d\n\nShe took his hand in her own and led him towards the dining room. \u201cCome, then, Stephen. We have much to talk about.\u201d\n\nAs they cut through the living room, Stephen couldn\u2019t help but glance over at the table of crystals, all of which seemed to be glowing even brighter than before. She led him into the large, empty dining room. The only light in the house was coming from a fire in the fireplace, and the shadows cast made it difficult for Stephen to see the mural on the wall. For that, he was thankful.\n\nThe candles were cleared away, the pentacle dusted away. In the middle of the room, Cassandra had spread out a large, downy blanket, which looked to Stephen to be made out of some sort of animal skin. Beside the blanket were two goblets and a dark bottle with no label.\n\n\u201cPlease, sit,\u201d Cassandra said, gesturing to the blanket.\n\nStephen sat and looked at the goblets; not the usual drinkware he was used to seeing. His wine glasses were, in fact, department store clearance. These particular goblets looked to be made of fine pewter, with several sparkling gems inlaid on the sides.\n\nHis eyes slipped to Cassandra, who had gone to tend to the fire. Standing before the glow of the flame only accentuated the sheerness of her dress, and Stephen took in the silhouette of the lovely body beneath. As she turned back to him, he looked away. She wandered back over, her dress trailing behind her, her smooth gait making her appear to float.\n\nShe sat down on the blanket across from him, and poured the liquid from the bottle into the two goblets, then handed him one. A sweet, flowery smell rose from the cup, its fumes making Stephen\u2019s head spin. He had never smelled anything quite so enticing in his life.\n\n\u201cWine from my home. A special vintage, not to be found anywhere else. I think you will enjoy it.\u201d\n\nStephen raised his cup to his lips, the scent filling his head. He took a small sip, and it turned out to be all he needed. The liquid washed over his tongue, so strong it threatened to burn his mouth, but almost as quickly, it turned to a soothing, luscious feeling that warmed him deep down. \n\n\u201cThis is amazing,\u201d he said, and Cassandra smiled.\n\n\u201cThere is nothing like it in the world.\u201d\n\nThere was a long moment of silence as they sipped their drinks, then Cassandra put hers down carefully on the floor next to her. She laid across the blanket, head propped up on her hand, and looked at him intently.\n\n\u201cYou seem sad, Stephen. Tell me why.\u201d\n\n\u201cI seem sad?\u201d\n\n\u201cYes. You spoke of your\u2026 ex-wife,\u201d the words came from her mouth like a foreign phrase, \u201cwhat does that mean?\u201d\n\n\u201cWhat, they don\u2019t have divorce where you come from? Marriages never end?\u201d\n\n\u201cWhere I come from,\u201d she said, \u201cwhen a marriage ends it means the woman has not done her duty as a wife, and she is executed.\u201d\n\nA slight chuckle escaped Stephen\u2019s lips, although Cassandra didn\u2019t seem to find it amusing. \u201cYeah, well, anyway, my ex-wife is still alive and well, and things are\u2026 complicated.\u201d\n\n\u201cDo you still love her?\u201d Cassandra asked, although by the tone of her voice and the expression on her face, Stephen didn\u2019t think she wanted an answer. It was, however, the most normal, the most human question she had asked all night.\n\n\u201cI don\u2019t know,\u201d Stephen said. \u201cI thought I did, but I think\u2014I think I\u2019m just not used to her not being around yet, you know? Love and routine are two different things. Do you understand?\u201d\n\nCassandra nodded sadly. \u201cLove and obligation are quite different, as well.\u201d\n\n\u201cObligation?\u201d\n\n\u201cYes,\u201d she said, \u201cyou feel obligated to this woman, do you not?\u201d",
        "Stephen didn\u2019t answer her for a moment. The word \u201cresponsibility\u201d was bouncing around in his head in Julie\u2019s voice.\n\n\u201cI do,\u201d he answered, \u201cvery much so.\u201d\n\n\u201cThen we have something in common.\u201d\n\nStephen frowned, and he simply had to ask. \u201cHow old are you, Cassandra? Have you been married before?\u201d\n\n\u201cI am, no doubt, older than you think. But I have never been married. I am betrothed.\u201d\n\n\u201cYou\u2019re what?\u201d\n\n\u201cI am to marry a man who I do not love,\u201d she said, \u201cbut to whom I am bound by honor and duty.\u201d\n\nStephen sat up bolt straight and stared at her. \u201cWhat the hell are you talking about? I\u2019m confused\u2014you\u2019re, uh, \u2018betrothed\u2019 to be married? What are you doing here?\u201d\n\nCassandra sat up as well, apparently alarmed by Stephen\u2019s reaction. \u201cI have one night, Stephen, that is why this night is so special. This Halloween, as you call it, it is the one night my people are free to enter your world, the one night the veil between our worlds is lifted, and\u2014\u201c\n\nStephen jumped to his feet and glared down at her. \u201cAlright, I\u2019ve had enough of this hocus-pocus bullshit. The crystals, the picture, it was all very cute, but it\u2019s getting old fast. Tell me the truth, where the hell are you from?\u201d\n\nCassandra stared up at him in fear, and without looking away, she pointed a shaky finger to the mural on the wall.\n\nStephen prepared himself to jump down her throat again, but as he looked at the wall, all of the blood drained from his head. The skies in the picture, which had been blue earlier in the evening, had darkened to black. The landscape was now highlighted in silver moonlight, and all along the walls of the black castle, Stephen could see dozens of tiny flickering flames. They moved sporadically back and forth. Torches. Movement. People. Life.\n\nA slight breeze touched his skin. The scent of wildflowers, which he had picked up in his first visit, grew stronger. He stood frozen, facing the mural\u2014the window\u2014into Cassandra\u2019s world, not feeling anything except for complete astonishment.\n\n\u201cIf you never believed in anything,\u201d he heard her say behind him, \u201cbelieve now, my love.\u201d\n\nStephen could only shake his head. \u201cI never\u2014I just couldn\u2019t\u2014this is impossible. This is impossible.\u201d\n\nCassandra came forward to stand beside him, staring out into the landscape before them. She spoke calmly and quietly, her words barely seeping into Stephen\u2019s mind. \u201cIt is possible, Stephen. Think back\u2014think back to what your mother told you about this night. Do you remember?\u201d\n\n\u201cHow do you know\u2014\u201c\n\n\u201cI know. I know she would take you out on this night, much like you did with your daughter tonight. And she tried to tell you, Stephen. She told you about the night when the veil between this world and the spirit world was lifted, and the spirits of the dead roamed the streets freely\u2014\u201c\n\n\u201cAnd the living would leave offerings to protect themselves from the spirits,\u201d Stephen continued, his mind barely registering the sound of his own voice. His gaze slowly shifted to Cassandra, who watched him with great interest. \u201cBut that would mean\u2014\u201c\n\n\u201cI am no spirit, Stephen. There is another world. The spirit world is an ethereal plane, a place where spirits do reside. My world, this other world\u2026 it is very, very real, like your own.\u201d\n\n\u201cWhy\u2014why are you here? Why are you telling me this?\u201d\n\n\u201cMy reasons are selfish,\u201d she said, a desperate tone coming into her voice, \u201cStephen, I am to marry, I have no choice. But these eyes which startle you so are capable of seeing things you could not imagine. And I have seen another man, a man who may be my salvation. That man is you, Stephen.\u201d\n\nStephen could not respond to her revelation. He was frozen in awe and fear, staring into another world, through the portal of this other world, right here in a house in his own neighborhood. Suddenly it seemed possible that all of the rumors, the strange tales, the ghostly bedtime stories, had all been true. His own mother had spoken of the history of Halloween as if it had all been true, and now he knew it was. The Spirit World, the... Otherworld from which Cassandra had come, they both existed. And who knew how many worlds beyond those?\n\nAs he watched in fascination, the torches continued to move about the castle.\n\n\u201cThe castle guards, on their nightly watch,\u201d Cassandra said softly from beside him. \u201cIt is a dangerous time in my world. If they were to discover I was gone...\u201d her voice trailed off, and she looked away with an expression of sadness.\n\n\u201cCassandra,\u201d he said, his voice a deep croak. He cleared his throat and forced himself to look over at her. \u201cThis man you\u2019re supposed to marry...\u201d\n\n\u201cHe is a terrible man who has done awful things, unthinkable things.\u201d\n\n\u201cAnd you think\u2014I\u2019m no one\u2019s salvation, Cassandra. I can\u2019t understand\u2014why me?\u201d\n\n\u201cBecause I have seen you in my dreams before. And I know it was you, because you came to my door, and you looked on me with kind eyes\u2014\u201c\n\nHe turned to her and found himself locked inside her golden eyes once more. What did those eyes see? Could they see within him, could they see what he was truly feeling? She moved closer to him, closer than she had been earlier, and he found himself trembling in spite of the warmth of her body. She turned up her face to him again, and he kissed her, deeply, passionately, not forcing himself to hold back this time. This was not the kiss he gave his ex-wife earlier, the kiss that had been full of loneliness. This kiss was full of yearn, lust, passion.\n\nStephen wrapped his arms around her waist, the soft material of her dress sliding like silk against him. She braced her arms around his neck and broke the kiss, placing a torrent of hot kisses along his jaw, his cheek. Then she hugged him tightly, and he felt a single sob pass through her body, felt her tears drizzle down on his neck.\n\n\u201cWhat if I can\u2019t save you, Cassandra?\u201d\n\n\u201cThen touch me,\u201d she said, \u201cjust touch me, so that I might know once, before I am wed, the touch of a man who has true love in his heart.\u201d\n\nAnd then, just as she began to sob again, he quieted her with a kiss that felt as if it should never end.\n\n*  *  *\n\nAt first there was nothing, the pounding of his heart blocking out all sound, the haze of lust in his eyes blurring away that which he dared not look upon. He could not see the dark landscape in the wall across from him, could not see the tiny flicker of life, could not hear the rustle of the breeze. There was nothing, only heat, breath, flesh, lust.\n\nAnd she brought him back, slowly at first. There was her flowing golden hair around her pale shoulders, the soft shimmer of her gown running down her arms and dropping to the floor. She covered herself shyly at first, an arm to cover her breasts, a hand to cover her most secret place. She stood before him not much more than a girl, and he wondered, for a moment, whether he could take her, whether he should take her. Her head bent down, her flaxen hair covering half her face, he could see a golden eye stare out at him, her lip curled in a reticent smile. \n\nShe was not unwilling, he knew, she only needed her timid veneer melted away. He stood close to her, letting his hands roam gently down her arms, his fingertips barely tracing the smooth lines of her body. And it was all she needed to allow her arms to drop away from her breasts, revealing the flowing curve of her body, the small, perfect bosom that Stephen lightly ran his fingers along. He circled her hardened nipples with an index finger, knowing they would be sensitive both from her lust and from the cool breeze that swirled around them from places unknown.\n\nShe released a slight breath, her eyes closed, lips parted. \u201cI have never been touched by a man in such a way, Stephen.\u201d\n\n\u201cDon\u2019t be afraid, Princess, I promise I\u2019ll never hurt you.\u201d\n\nHer eyes opened in mild surprise, though she tried to suppress it. \u201cYou called me Princess,\u201d she said.\n\nStephen gazed down at her for a moment. \u201cIt seemed right. I\u2019m sorry.\u201d\n\n\u201cDon\u2019t apologize,\u201d she said, her voice light, but full of hunger, \u201cyou may call me that if you wish. You may do whatever you wish to me. I ask only one thing.\u201d\n\n\u201cAnything, My Princess.\u201d\n\n\u201cTell me... before midnight...\u201d her voice, full of pain, trailed off in a wavering sigh.\n\n\u201cTell you what? I don\u2019t understand.\u201d\n\n\u201cYou will, my love, I promise. For now, take me as your own.\u201d\n\nStephen looked at her, this vision of pale flesh, warm to the touch, though her golden eyes somehow felt cold looking back at him. As if feeling his thoughts, she closed her eyes, and he could see her tremble in excitement, fear, anxiety. His thoughts were momentarily occupied by what she had said, but he knew it was well before midnight. There would be plenty of time, all the time in the world.\n\nHe bent his head down, softly kissing the curve of her breast, his warm breath raising goose bumps on her fair skin. His tongue slipped out against the rigid flesh of her nipple, and another soft cry escaped her lips. She pushed her chest forward to him as he sucked it into his mouth. \n\nHis hand, meanwhile, slipped down her body, down her smooth stomach which clenched at his touch. Her hand was still covering the private valley between her legs, but he carefully took her wrist and pulled it away. \n\n\u201cYou have nothing to hide from me, princess,\u201d he spoke softly, bathing her breast in his warm breath.\n\nHer only response was a lilting moan that told him to continue. As he sucked her nipple back into his mouth, he slipped his hand between her legs, over the soft patch of golden hair, his finger gliding gently over the cleft inside her thighs. His finger pressed only slightly into her, but for a moment, her body went limp as if she were about to faint. She was, he could tell, truly untouched by a man.\n\nHe took her in his arms and carefully lowered her down onto the blanket. She gazed back at him, the lids of her eyes heavy with desire, her pale face just a bit flush. Stephen slipped off his shirt, and the satisfied smile that she gave him was flattering. For a middle-aged man, he had not allowed himself to let his physique falter; after the alcoholism faded, it was one thing he held on to dearly. Cassandra reached up and traced a soft palm over his bare skin, sending a tingle of lust through his body. She sat up, pressing close to him, trailing kisses all over his chest.\n\nIt was sweet at first, like lovers gently teasing each other. But as she became more comfortable with him, the playfulness soon faded, and her mouth became hungrier. She slid her tongue down his belly, stopping near the waistline of his pants. She looked up at him, a questioning look in his face, though he knew what she wanted. His shaking hands fumbled with his belt, then his zipper. She watched him in anticipation, a finger resting absently on her lip, as he stripped his jeans off, leaving only a pair of boxer shorts behind.\n\nHe could not hide himself any longer. His erection pressed out against his shorts, flagrantly throbbing with the pulse of his heart. Cassandra did not hide her wide-eyed stare, and she reached out with a fingertip, carefully tracing the tip of his cock as if it might bite her.\n\n\u201cYour princess commands you,\u201d she said, tugging eagerly at his boxer shorts, \u201cto remove these at once.\u201d \n\nStephen couldn\u2019t help but smile at her playful remark. \u201cThis ain\u2019t a monarchy, sweetheart, it\u2019s a democracy. I have rights.\u201d\n\n\u201cYou have no rights, not tonight. Tonight, you are the suitor of a princess of the highest royal bloodline. Tonight, you are mine.\u201d\n\n\u201cYou said earlier you were only a handmaiden.\u201d\n\nCassandra shrugged and smiled at him slyly. \u201cEven a simple handmaiden can have delusions of grandeur, my love. For now, I only wish to see what you hide beneath those clothes.\u201d\n\nShe smiled playfully, but her face was a mask of pure desire. Stephen had never felt so wanted in all of his life, not by the line of women from his younger days, not even by his ex-wife. But Cassandra made him feel young again.\n\nHe slipped his boxers off, his cock jutting straight up at full attention, and Cassandra\u2019s eyes widened. Stephen felt quite exposed lying before her completely nude; it had, after all, been almost two years since he had been with a woman, but feeling her hand grasp him almost immediately put his mind to work elsewhere. The sensation of her soft hand around his most sensitive skin threatened to make him spend almost immediately, and he knew he would have to exercise better control than that.\n\n\u201cI have heard some of the other girls speak of this,\u201d Cassandra said, and Stephen perked his head up.\n\n\u201cSpeak of what?\u201d he said, but his head dropped back as he was answered immediately by her wet tongue running from the base of his cock to the tip. She sucked him partially into her mouth, letting her tongue slip against his flesh, and an involuntary cry of pleasure escaped his lips.\n\nShe held him there for a long moment, but not long enough for his taste. He ran his hands through her silky hair, but she pulled away from him and fixed him with a stimulating gaze.\n\n\u201cThis act is forbidden by the etiquette of my court. A woman who performs this on a man who is not her husband runs the risk of having her tongue removed.\u201d\n\nStephen couldn\u2019t help but laugh. It was not something a man particularly wanted to hear while he was getting blown. \u201cSweetheart, I\u2019d hate living in your court.\u201d\n\n\u201cSo would I,\u201d she said. \n\nWith her eyes still fixed on him, she slipped her lips over him again, engulfing him as deeply as she could with her mouth. She began a slow, gentle driving of her mouth over him, allowing her teeth to lightly brush against his skin. It was slow, deliberate, and his hips rose up off the floor to her. His groin was aching with the need to release its seed into her mouth, but he pushed her gently away.\n\n\u201cWhy do you stop me?\u201d she asked with an air of innocence that made his skin tingle.\n\n\u201cBecause this isn\u2019t how I want you, Princess.\u201d\n\nStephen sat up and rested himself on his knees. Cassandra\u2019s eyes never left his own as she laid back on the blanket. She was gorgeous, her golden hair spreading over the blanket, her fair-skinned body laid out in a perfect curve of flesh. He crawled up to her, her legs spreading to invite him. With his hands on her thighs, he bowed his head down, kissing along the inside of her knee. He worked his way further up, along the inside of her thigh, then with his tongue sliding along her flesh, to the slit between her legs.\n\nHe kissed her lips softly at first, working the small mound easily with his mouth. She released a ravenous moan, already arching her back to bring herself closer to him. When his tongue slipped out, only slightly penetrating her, the moan became louder. His mouth cupped over her, he let his tongue slide deeper into the smooth cleft of flesh, tasting her sweetness, her silky juices. Her moan became a hoarse cry that echoed through the empty room, and out into the night air, out into the Otherworld.\n\nHis mouth moved up a little further, his tongue seeking out the sensitive nub of skin that he knew would drive her to the brink. He felt her hands grasp the back of his head, pushing his face closer to her, and as he sucked her clit into his mouth, her legs closed in around his head, her mouth locked in a silent scream.\n\nAnd then she was pulling him up to her, her mouth seeking out his own, her hips rising to him, and he knew she was ready. Supporting himself above her with one hand, he reached down with the other, pressed down his erection to meet with the part of her wet cunt. He penetrated her only slightly, the moist warmth of her body sending a shudder up his spine.\n\n\u201cStephen,\u201d she said in a desperate whisper, \u201ctake me. Make me yours tonight.\u201d\n\nHe slipped himself inside a little deeper, her hole fitting tightly over him. He pressed on, and stopped, finding resistance, and a painful gasp escaped her, but she did not let go. Instead, she raised herself closer to him, wrapping her legs around his back. \n\n\u201cTake it,\u201d she whispered, her eyes clenched shut.\n\nStephen pushed himself forward into her, breaking past the barrier of her virginity, burying himself deep inside her. She bit her lip, suppressed the scream that was on the end of her tongue. Her body clenched him, the muscles deep inside her throbbing around him, but when he thought it would be too painful for her to continue, she only held on tighter. Her arms tightened around his neck, and he felt her hips begin to rock beneath him.\n\nHe pulled himself almost completely out of her, then slid back in, and she cried out, this time in pain and pleasure together. He began a steady thrusting motion, and found her body following his movements. Soon, they were rocking together, and the steady moans of pleasure escaped from both of them.\n\nTheir movements became desperate, both bodies begging for release. There was a wet slapping sound as he thrust into her heedlessly, over and over, her hips rising to meet him each time. He slipped his arms beneath her and pulled her upright to him, her hips riding against him steadily, her breath only coming in short gasps between the cries of pleasure, the cries for more.\n\n\u201cHarder,\u201d she cried out to him, \u201charder!\u201d But he needed little direction as her body took over, bucking against his hips wildly. Her hands locked around his neck, she leaned back, allowing her feathery hair to drop practically to the floor. He leaned forward and suckled her nipple into his mouth, his teeth biting her flesh. \n\nShe rode him hard, harder, and soon the air was filled with her steady, strong cry as he felt her muscles clench around his cock. Her entire body tightened as the orgasm drove through her, and as it did, Stephen felt his own release. His stomach tightened into a knot, then loosened, his cock throbbing mercilessly inside her as it pumped his seed deep into her. He felt as if the spasms would never stop, felt that he would fill her up until she could simply contain no more.\n\nBut as their orgasms subsided, the sound of their breathing filled the room. Stephen thought his heart might thunder out of his chest. She looked down at him, her eyes barely comprehending his presence, their golden glow even stronger than before. They did not frighten him any longer; they were beautiful. She was beautiful.\n\nShe hugged him close, her breasts heaving against his chest, her head resting on his shoulder, their bodies slick with perspiration. He laid her back against the blanket gently, then stretched out beside her. She threw her arm over him, tangled her legs in his, laid her head against his chest.\n\nAs silence overtook them, the only sound to be heard was the sound of the wilderness on the night air. Stephen found himself strangely comforted by the sounds of a world so far away, yet so near tonight.\n\nAs the fire in the fireplace dimmed, Stephen\u2019s eyes grew heavy, Cassandra\u2019s steady breathing lulling him into sleep.\n\nJust before his mind faded into unconsciousness, he heard Cassandra\u2019s exhausted voice from beside him.\n\n\u201cBefore midnight, my love. You must tell me... before midnight.\u201d\n\n*  *  *\n\n\u201cI love you, Cassandra, my Princess, I love you.\u201d\n\nBut he knew it was too late. Some clock, deep inside him, told him it was past midnight, and sure enough, he could feel her slipping away from him. He could feel her growing cold, and then there was nothing, his arms passing through her as if she were a cloud of dust.\n\nHis eyes opened, blinking uncontrollably, trying to chase away the blur of sleep. Beside him, her face was a mask of desperation, fear. He tried to grab her, tried to hold on to her for dear life, but she slipped out of his grasp. Her mouth formed words, but words he could not hear.\n\n\u201cCassandra, I love you, please don\u2019t go!\u201d But it was too late. She faded before his very eyes, her features dissolving into a fine gray mist. The mist swirled up in a funnel, then drifted to the wall, to the window into the Otherworld. There, it floated out onto the night air like a puff of smoke and disappeared from Stephen\u2019s sight.",
        "\u201cNO, CASSANDRA!\u201d His screams fell on nothing but an empty room. The landscape on the wall before him dissolved, dripping down the wall like a glass of water spilling over a watercolor painting. Stephen leapt up from the floor and ran towards it, but when he hit the wall, his fists only smashed against hard plaster and paint.\n\nHe shook his head in disbelief. There had to be another way, there had to be. He ran back to the blanket and threw his clothes on haphazardly, then stumbled into the living room. There, from the corner, blinked a ray of hope. The table of crystals was still there, and at the very center, a single blue crystal shone brightly. When he touched the crystal, a surge of energy shot through his body as if he had picked up a downed power line. It was a frightening sensation, but incredible at the same time.\n\nStephen clutched the crystal in his hand, its blue light shining out between his fingers. He had no idea what its purpose was, and yet, the energy that coursed through his body made him feel as if he was capable of anything. Wondering how much time he had, he glanced at the front window. It was still pitch dark outside, and he was thankful, but\u2014\n\nHe froze in his tracks, his mind barely registering the sight before him. He stepped closer to the window, his jaw hanging open.\n\nThere, in the street, were dozens upon dozens of figures, marching in a slow procession. \n\n\u201cMy God, it\u2019s true,\u201d he said to himself, his voice a terrified whisper, \u201cit\u2019s all true.\u201d\n\nThe figures had a translucent quality to them that was unmistakable, and they glowed with an energy that Stephen had never imagined. He stared at the procession that seemed to come from nowhere as it moved off into the distance. As his eyes shifted back to the street directly in front of Number Seventy-two, he could see, among the hundreds of spirits, a single solid figure, a living figure.\n\nIt was Reggie. His black skin stood out against the stark white of the dead, even in the darkness of the night. He stared straight at Stephen, his eyes engulfed in a blue glowing haze. His left hand was clenched into a fist, and Stephen could not see what was inside. In his right hand, Reggie held a jack o\u2019 lantern, into which was carved a face of unimaginable horror, an orange flame flickering behind its empty eyes.\n\nAnd the dead ignored him, walking on into oblivion.\n\n\u201cReggie,\u201d Stephen whispered from behind the glass pane. Reggie only stared back at him, his head shaking, his lips forming imperceptible words.\n\n\u201cI\u2019m sorry, Reggie, I don\u2019t have time to help you,\u201d Stephen said, stepping back from the window. \u201cI\u2019m sorry, my friend.\u201d His voice cracked a little. Though he dreaded leaving his friend outside, surrounded by the spirits of the dead, he knew he had little time to rescue Cassandra. He convinced himself that Reggie would be safe, that he knew much more about what was going on than he had let on to Stephen.\n\nThe golden eyes have seen more death than you can imagine, Stephen. Reggie\u2019s strange words echoed through Stephen\u2019s mind, though they made much more sense now.\n\nStephen darted quickly back into the dining room and stood directly in front of the wall where the window to the Otherworld had stood before. The crystal clutched so tightly in his hand he thought he might crush it, Stephen stepped forward, placing his hand against the wall. \n\nBut there was no wall. His hand passed straight through, as if he had touched a cloud.\n\nAnd when he was sucked in, he didn\u2019t even have enough time to scream.\n\n*  *  *\n\nFirst came the sensation of grass beneath his hands and knees. Then came the dizziness, the queasiness, so unbearable the he knew he would vomit. Even the sweet, flowery smell of wildflowers that drifted into his nose could not save him from emptying the contents of his stomach into the grass. He squeezed his eyes shut as his head spun out of control, so badly that he would have given anything just to vomit again.\n\nAnd yet, the horrible sensations eased, the knot in his stomach very gradually undid itself, and Stephen sat back in the grass. He breathed heavily, the sour taste of vomit making him feel ill once again. He spat in the grass to his side, suddenly thirsty. His attention was caught by a blue glint in the grass nearby, and he reached out, picked up the blue crystal he had had clenched in his hand. Just feeling its coolness in his hand soothed him slightly, and he released a deep breath in the night air. A moment later, he shoved the crystal into the pocket of his jeans.\n\nThe nausea passing, Stephen looked around in wonder. He was there, in the picture, or what he had thought was a picture. Behind him, a dark patch of trees spreading far into the distance. In front of him, the mountainous landscape he had seen that evening on the wall. Only this time, it was real, so real he could reach out and touch it. The grass in his fingers, the earth beneath him, all tangible.\n\nAnd, off in the distance, a black hole, darker than even the darkness surrounding it. The castle. Cassandra\u2019s home. Once again, Stephen could see torches moving along the walls. The night guard, according to Cassandra.\n\nThere was something pounding in Stephens ears, something he simply could not ignore. The sound of silence. There were no cars in the distance. No sirens. Not a single airplane in the sky, and even the steady hum of power and electricity was gone, the sound that most people in the city never even realized was there. In its place, only the light swish of the breeze in the trees, crickets, rustling\u2014\n\nBehind him. There was, in the dark of the forest behind Stephen, something moving. A rustle, coming closer. He rose, terrified, to his feet, prepared to run anywhere but where he was standing.\n\nA figure approached out of the darkness, and Stephen dropped to his knees in relief. But her face was frozen in shock and horror, and her hand clenched over her open mouth.\n\n\u201cStephen,\u201d Cassandra said breathlessly, \u201cStephen, how\u2014oh, what have you done?\u201d\n\nShe stepped forward out of the darkness to stand before him, wrapped in a dark, heavy cloak. She did not touch him, only stared at him in complete disbelief.\n\n\u201cI came for you, Cassandra. I figured it out too late, but I\u2019m here for you now. I love you, Princess\u2014\u201c\n\n\u201cShh!\u201d she hissed at him, dropping to her knees before him and pressing her fingers to his lips. \u201cDo not speak so loudly, my love. There are many ears in this forest.\u201d She stared at him for a moment, her golden eyes full of fear. Then she leaned forward and kissed him, her hands clutching at his desperately. She pulled away, and Stephen could see that her eyes were now full of tears.\n\n\u201cOh, Stephen, you never should have come. It is so dangerous here.\u201d\n\n\u201cI came to take you back, Cassandra. You have to come with me, I\u2019ll save you from this place.\u201d\n\nShe gave him a pitiful look, then shook her head. \u201cI cannot go back, Stephen. Not now, not this way.\u201d She glanced back at the forest, then bowed her head sadly. \u201cIt is too late, Stephen. You cannot save me now. But it is not too late for you to\u2014\u201c\n\nCassandra\u2019s voice cut off in a terrified gasp, a guttural choke that sent a shiver through Stephen. Her eyes stared off into the distance behind him, towards the castle. Staying completely still, Stephen could hear the sound of a galloping horse approaching.\n\nA tiny whimper escaped Cassandra\u2019s lips, and she reached for Stephen\u2019s hand. \u201cGo, Stephen, go now, you must hide\u2014\u201c\n\n\u201cCassandra, I won\u2019t\u2014\u201c\n\n\u201cDo it! You must! If he finds you here, with me, he will\u2014he will kill you Stephen, he will kill you without hesitation. Go, hide. I will find you again.\u201d\n\nCassandra rose to her feet, wrapping her cloak tightly around her and pulling a hood over her head. Stephen glanced behind him, and sure enough, the flame of a torch was approaching them out of the darkness. He glanced at Cassandra, who gave him a pleading look.\n\n\u201cPlease go, Stephen. I beg you.\u201d\n\nStephen watched her for a moment, then hurried off into the forest to find shelter behind a giant, gnarled tree. He ducked down behind a protruding root and watched, trying to catch his breath.\n\nCassandra stood patiently at the edge of the forest, her arms wrapped around her chest, as the robed figure approached atop an immense steed. The animal snorted and whinnied as it stopped next to her, avoiding trampling her by mere feet. Cassandra, however, did not move, did not even flinch, even as the figure jumped down from his mount and towered over her.\n\nThe man had to be easily a foot taller than Stephen, and twice as broad. Cassandra dwarfed in comparison to the giant figure, and Stephen could see from his vantage point that she cowered in the man\u2019s presence.\n\nThe voice that flowed forth from the hood of the black robe was not much more than a low snarl, though the accent was similar to Cassandra\u2019s. \u201cWhere have you been, Princess? The entire castle has been up in arms since you\u2019ve gone missing.\u201d The voice was terrifying, but the tone was calm and collected.\n\n\u201cI\u2014I have been out, My Lord,\u201d Cassandra answered in a wavering voice.\n\n\u201cYou\u2019ve been out,\u201d the man snarled, \u201cyou\u2019ve been out of the castle, after dark, in the forest?\u201d\n\nCassandra took a deep breath and straightened herself before the man, reaching up and pulling back her hood so that she could eye him more directly. \u201cThere is no crime in taking a walk in the forest, My Lord. Perhaps you and your guards should tend to your own affairs, and let me live my life.\u201d\n\nThe man\u2019s immense shoulders dropped a bit, and he turned from Cassandra. It was dark beneath that hood, and Stephen could barely make out the face beneath it. \n\nWithout warning, the man whipped back around, striking Cassandra hard across her cheek with a gloved hand, sending her smashing against the trunk of a nearby tree. She cried out in pain, and Stephen made a move to run to her, but he noticed her glance in his direction out of the corner of her eye with a stern frown. Stephen clutched the root of the tree, his hands trembling in rage.\n\nThe man advanced on Cassandra, and grasped her throat in his huge hand, pushing his hooded face close to hers.\n\n\u201cYour life is mine, My Lady, and you would do well to remember that,\u201d the man said. He pressed her against the tree, pinning her easily with one hand, and Stephen wondered how it was that her neck had not snapped. But through it all, Cassandra still glared at the man.\n\n\u201cMy life belongs to no one, Lord Kirsahn, you would do well to remember that.\u201d Her eyes once again shifted slightly in Stephen\u2019s direction, and for one terrifying moment, he thought he saw the man, Lord Kirsahn, turn his hooded head in the direction of her gaze. But he turned back to Cassandra, lifted his head, and took in a deep breath through his nose. Stephen could tell that he was trying to sniff something out.\n\nKirsahn clutched her neck harder and pressed near her, his voice not much more than a savage growl. \u201cYou smell different, Princess... you smell... strange.\u201d\n\nCassandra\u2019s hands clutched at the big man\u2019s wrists, trying to ease the pressure on her throat. \u201cI am sure that is only your opinion, Kirsahn,\u201d she said in a hoarse whisper, but he quieted her with another squeeze of his strong fingers.\n\n\u201cNo, you look different as well. There is something...\u201d he was dreadfully still for a moment. He raised a gloved hand to his mouth, pulling at the fingers with his teeth and dropping the glove to the ground. Cassandra could only watch him, her eyes wide with fear.\n\n\u201cI\u2019m sure you won\u2019t mind if I check something, My Lady.\u201d With startling quickness, Kirsahn\u2019s bare hand shot down between Cassandra\u2019s legs, recklessly tearing into her cloak, then shredding the light material of her dress. Her eyes squeezed shut, her teeth gritted in pain, and she tried to hold back a cry as he violated her. Stephen\u2019s own body trembled in utter fury, and he found himself looking around for something, anything, before he settled on a heavy tree limb lying on the ground at his feet. He picked it up and tested its weight, deciding that it would have to do, though he wasn\u2019t sure if it would be enough to bring the large man down.\n\nHe prepared to attack, but Cassandra shot him another warning glare. Stephen knew she would signal him when the time was right. Or would she?\n\nBut Kirsahn released his savage grip on her neck, and stood back, his bare hand raised before him, a trickle of blood running down the finger he had used to penetrate Cassandra. His other hand reached up and threw back his hood, and Stephen clutched a hand over his mouth to stifle a scream.\n\nStephen wanted to believe that the man didn\u2019t exist, he wanted to believe that the man couldn\u2019t exist. And yet he stood in full flesh, his eyes blood red, his teeth now gritted in a furious grimace, all sharpened to needle points, like the teeth of a piranha.\n\nIt was not these characteristics, however, that brought Stephen\u2019s heart to a stop, that made him wish he had never set foot in Number Seventy-two in the first place. It was the man\u2019s face, pure and simple, that brought a scream to the end of Stephen\u2019s tongue. When Stephen looked upon Lord Kirsahn, this devil from another world, it was his own face that he saw.\n\nKirsahn stared at the bloody finger with wonder and fury. He looked back at Cassandra, his eyes glowing redder than the blood running down his fingers. \n\n\u201cYou,\u201d he said, creeping closer to her, \u201cyou have been broken by another man.\u201d\n\nCassandra looked back at him wildly. \u201cI\u2014I\u2014you don\u2019t understand, Lord, I didn\u2019t\u2014\u201c\n\nStephen waited for another blow, as did Cassandra, but it never came. Kirsahn only pressed close to her, his face, Stephen\u2019s face, coming close enough that his breath swept against her cheek. He spoke in a low tone that Stephen had to strain himself to hear.\n\n\u201cMy Princess, you know, of course, that I have no need for a used up whore such as yourself.\u201d Kirsahn held his fingers to his nose, breathed in deeply, sneering in disgust. \u201cAnd with an earth-dweller?\u201d \n\nCassandra started to object, but Kirsahn grasped her jaw with his free hand, running his blood-stained finger along her lip. \u201cDo not deny it, Princess. I can smell the seed of one of those mud-crawlers, I can smell it from within you. Do you love him?\u201d\n\nCassandra squeezed her eyes shut, tears streaming down her cheeks as he squeezed her jaw so tightly it threatened to shatter in his grasp. But then, she opened her eyes, and despite the pain, nodded her head. Kirsahn released her and stood back, an amused smile on his spiny-toothed mouth.\n\n\u201cOf course you love him, you simple girl. And now he has stolen your virginity, which no doubt makes you love him more. But he, too, is a simple creature. He lives protected in his own little world, growing soft, with no concept of what is soon to come, as do all of the other earth-dwellers. And did you tell him, my dear?\u201d\n\nCassandra gritted her teeth, her eyes narrowed into a furious golden glare, and she shook her head.\n\n\u201cOf course you didn\u2019t tell him. Because he would never knowingly allow you to take the place of one of his own, would he?\u201d\n\nKirsahn once again pushed his face close to hers, his mouth barely brushing against her ear. She flinched, but did not pull away, only listened to him in horror.\n\n\u201cHe would never love you enough to let you take the place of one of his own. So you had to find another way...\u201d his voice trailed off, his mouth turning up into a sickening grin. \u201cBut you have crossed over, My Lady, and I shall see you burned at the stake for a witch. Or perhaps I shall see you hanged for your infidelity to your future husband. But first they will remove your eyes, your tongue, and\u2014\u201c he glanced down between her legs, \u201c\u2014your womb, which they shall serve to me on a silver platter.\u201d\n\nCassandra sucked in a deep breath, then looked at him calmly. \u201cI would rather be hanged, rather be burned, rather have every bit of me removed and served to the dogs before I marry a reeking swine such as you, Lord Kirsahn.\u201d\n\nKirsahn paused for a long while, and then, without warning, he lunged forward, his sharp teeth closing around Cassandra\u2019s earlobe. She screeched as he tore away her flesh, leaving only a trail of blood oozing down her neck. Her hand went to her ear as she started to run from him.\n\nKirsahn casually spat the piece of flesh onto the ground, then drew a massive sword from the scabbard which had been dangling beneath his cloak. He took two long steps forward, easily catching up to Cassandra and smashing the base of her neck with the hilt of the weapon. She dropped immediately to the ground.\n\nHe stood staring down at her for a long moment, and Stephen knew that if Kirsahn meant to rape her, then it would offer him the opportunity for an ambush. He clutched the tree limb tightly in his hand, but it seemed pitifully inadequate next to the mass of steel that Kirsahn held in his hand. And Kirsahn, Stephen knew, was a warrior. He would never stand a chance attacking him straight on.\n\nKirsahn had no such plans. He bent down and effortlessly picked up Cassandra\u2019s limp body, slinging her over the saddle of his steed. He turned and began to lead his horse back to the castle, and Stephen knew he would have no other opportunity.\n\nHe stepped out from behind the tree, trying desperately to keep his feet from crunching on the dead leaves and broken branches beneath them. His effort was in vain, however, and he knew he was making far too much noise, though Kirsahn made no indication that he heard anything. Hoping that the sounds of the wilderness would mask his approach, Stephen raised the heavy tree limb and set forward and a full run, dashing towards the bigger man, poising himself to strike.\n\nAs he came within yards of Kirsahn, the big man turned, and smiled his awful smile, reaching his hand out for Stephen\u2019s throat, deftly catching him. He held Stephen in a shockingly strong grip like a vice, and continued to smile in delight.\n\n\u201cEarth-dweller,\u201d he snarled, \u201cwhat a pleasant surprise! You came back to save your little bitch. What a noble gesture.\u201d Kirsahn pulled him close, eyeing him with fascination. \u201cYour face\u2014my face\u2014I thought I should never see the day. Do you know what this means?\u201d\n\nStephen had neither the strength nor the inclination to respond. He could only hang from the man\u2019s death grip, staring back into his glowing red eyes, the eyes which shone from his own face.\n\n\u201cThis means, my dear, pathetic brother, that I shall have your intestines on my plate to accompany your whore\u2019s womanhood.\u201d\n\nStephen grimaced as Kirsahn\u2019s hand clenched over his throat, his eyes feeling as if they were about to burst from their sockets. He grabbed the wrist of the massive hand that threatened to choke the life out of him, but before he could make a move to free himself, he felt the bone shattering pain of Kirsahn\u2019s sword hilt against his skull.\n\nThen, all went dark.\n\n*  *  *\n\nStephen awoke as a throbbing pain threatened to split open his skull. He blinked his blurry eyes, and once again felt the need to vomit. His grasp on consciousness, however was weak, and black shadows passed over his eyes, blocking out any hope of light.\n\nHe felt coldness, a chill like no other, creeping through his skin, his muscles, his bones. He did not know where he was, but he could feel someone beside him, he could hear light breathing, he could smell a sweet scent. It was Cassandra, but he could not reach out to her, he could not speak to her.\n\n\u201cMy love...\u201d he heard her voice only vaguely, like a song on the wind of a chill winter night.\n\n\u201c...am truly sorry...\u201d\n\nThe aching throb pulsed through his head again, and he groaned. He felt a cool cloth drape over his forehead, only subduing the pain a little.\n\n\u201cThey have given me one last chance to speak to you...before...I do not have much time.\u201d\n\nA warm hand grasped his own, though he barely had the strength left to squeeze back. He would have given anything to be able to fully awake, to take her in his arms, because he knew it would be the last time he would be with her.",
        "From somewhere in the distance, he heard a melodic male voice cry out, heralding the doom of his true love. \u201cHEAR ME, GOOD PEOPLE OF THE DARKLAND! THE PRINCESS IS TO BE HANGED BEFORE FIRST LIGHT FOR CRIMES AGAINST HER COURT, HER HUSBAND, AND HER FATHER, THE KING, HER SENTENCE TO BE CARRIED OUT IMMEDIATELY!\u201d\n\nA cacophony of cheering voices rose up behind the announcement, piercing Stephen to his very soul. The people would have what they wanted. He heard, from directly beside him, a desperate sob, a cry of utter despair. It was choked off quickly, and he felt the hand clutching his own tighten.\n\n\u201cMy love, I am sorry, I have been weak and selfish. My only atonement is that I have convinced them to spare you. You shall live your life, your soul shall move on. I can only ask that you find it in your heart not to forget me.\u201d \n\nStephen wanted to open his eyes, to brush away the shadows and the fog, to hold her. But he could only manage to force one word from his dry, aching throat.\n\n\u201cNever.\u201d\n\nHe could feel her smile, her light, her spirit bathing him. And then, from across the room, a door bursting open.\n\n\u201cYour time has come, Princess,\u201d a rough, gravelly voice spoke, and he felt her leave him.\n\n\u201cGoodbye, my love.\u201d\n\nAnd the door slammed shut.\n\nThere was a haze, the nausea, the queasiness, the despair overtaking him. He had no concept of how much time had passed before the screaming began.\n\n\u201cCASSANDRA!\u201d he called out, his cries falling upon deaf ears.\n\nMore screaming. She was being tortured. She was being cut. His beauty was being mutilated, along with his spirit. Screaming. And more screaming, and more, until, following a wet gurgle, it was muffled into silence.\n\nTime passed as the screaming, mercifully, stopped, and Stephen hoped it was over. He hoped that her misery had ended, her pain. His eyes opened, still staring into darkness, though it was now the darkness of night. He felt strong enough to sit forward, listening for anything else, any sign of his love.\n\nHe was in a musty stone chamber, laying on a bed of moldy hay. A single window faced him, and from below it came the glow of torchlight. He made to stand up, but the giant oak door on the far wall swung open, and a figure of dread entered the room, carrying in his hands a covered silver platter.\n\nKirsahn turned and closed the door, then turned back to face the man who bared his own face. \n\n\u201cEarth-dweller...ah, Stephen, she called you, I believe,\u201d the name rolled off Kirsahn\u2019s tongue like an awkward curse. \u201cStephen, her love, her true love. Well, my brother, I thought perhaps, tonight, dinner and a show might be in order. It is, after all, the pleasure of this court to treat its guests with kindness, if nothing at all.\u201d\n\nKirsahn strode across the room, towering over him. The man\u2019s red eyes seemed to glow brighter than ever, and Stephen only wished he had the strength to dig them out of the man\u2019s skull, to tear his face to shreds so that it might no longer reflect his own. Kirsahn bent down and placed the platter at Stephen\u2019s side, but did not remove the cover. Stephen could feel his entire body tremble as he gazed at the polished silver before him. If this demon was true to his word...\n\n\u201cI\u2019m not hungry,\u201d Stephen said quickly, his voice wavering uncontrollably.\n\nKirsahn threw off his cloak and removed the scabbard containing the massive sword from his side, which he carefully leaned against the wall. He squatted down beside Stephen, so close that Stephen could smell his foul, rotten breath.\n\n\u201cI should explain myself to you, my friend,\u201d Kirsahn said, his voice a low grumble, \u201cI know that your dear princess has spoken ill of me. But, in my defense, I am not a bad man. You see, I bring you dinner, I treat you with courtesy. Yes, it would have been nice to serve your steaming entrails on this platter, however, I saw fit to honor the Princess\u2019s final wishes, and spare your wretched life.\u201d\n\nA low murmur of voices slowly rose from below the window, and Stephen turned his head to listen. Kirsahn, as well, perked up, his head tilting.\n\n\u201cThe show begins, my brother. But we still have time to talk, to have a bite, to enjoy each other\u2019s company.\u201d\n\n\u201cI\u2019d rather enjoy the company of a fucking rabid weasel, you ugly piece of shit.\u201d Stephen\u2019s voice felt stronger, and he was glad to finally be able to give this thing a piece of his mind.\n\nKirsahn only smiled pleasantly, then with amazing quickness, reached out and grabbed a handful of Stephen\u2019s hair, yanking his head back, nearly snapping his neck. He snarled through his spiny teeth.\n\n\u201cIt is only through the grace of my king that you were spared, you worthless bastard. I should so very much have enjoyed cutting into you, just as I cut into your filthy bitch.\u201d Kirsahn\u2019s grip eased off Stephen\u2019s hair, instead moving to gently stroke his head. \u201cBut you, according to my king, are too important. No, we shall keep you alive, only until you have served our purposes. Then, and only then, shall you be turned over to me.\u201d\n\nHe smiled his awful smile again. \u201cAnd then the fun begins.\u201d\n\nHe dropped his hand from Stephen\u2019s head and fixed him with an almost casual gaze. \u201cUntil then, eat, my friend, and be merry.\u201d Kirsahn removed the cover of the silver platter and stood, turning to face the window.\n\nStephen felt his entire body tremble, his eyes widen, and the entire world felt as if it were going to drop away from beneath him. He had, in his life, heard stories of Hell, stories of fire and brimstone, stories of infinite torture. And yet, at that moment, he would have traded his place for an eternity of Hell. At that moment he felt, perhaps, he already had.\n\nIt could have all been uncooked meat, doused in its own juices. Flesh from flesh, it made little difference. It smelled fresh, bloody. Stephen gagged, and gagged, and gagged again until he thought he might spit out his own insides.\n\nAtop it all, a pink tongue, ripped from its mouth, and two golden orbs, torn from their sockets.\n\nSomewhere, far off in some other world, the roar of voices rose to a fever pitch, and Stephen heard Kirsahn\u2019s boots shuffle against stone.\n\n\u201cThe show begins, my brother. Join me by the window, I don\u2019t wish for you to miss a single moment of this.\u201d\n\nKirsahn grabbed Stephen by the back of his neck, and Stephen was almost relieved to be pulled from the bloody pile before him. He was thrown bodily against the stone wall, then his head shoved out the window.\n\nHis eyes darted around, taking in the inner court of the castle It was packed, wall to wall, with people. Stephen thought they looked like specters in the night, added to this, their eyes were all various colors, void of pupils, as Cassandra\u2019s had been, as Kirsahn\u2019s were.\n\nCassandra\u2019s...\n\nThe people cheered as a cart was rolled into the court, surrounded by guards wielding massive battle axes. Standing on the cart, bound at the wrists, was Cassandra. Stephen could see only two dark, empty cavities where her eyes had once been, blood streaming from them. From her waist down, the entire front of her silky dress was bathed in blood as well, and it stuck to the contours of her body. She looked as if she could barely stand, she trembled violently, yet she refused to fall down. Stephen all at once was horrified by her appearance and awed by her strength.\n\nThe cart was rolled through the courtyard, and the crowd parted to allow it. Their faces were masked in bloodlust, and Stephen knew that he could no longer stop what was about to happen.\n\nHis hands clutched the edge of the stone window, his nails practically digging into rock, blood pouring from his fingertips. They wheeled Cassandra into the center of the courtyard, where a large wooden gallows had been erected. Stephen turned desperately to the man standing behind him.\n\n\u201cThe king will never allow his daughter to be killed,\u201d Stephen said weakly, but Kirsahn only laughed gleefully.\n\n\u201cThe King? What do you know of the King? This was thing King\u2019s idea! The King of Death, The King of the Darkland, would gladly see his own daughter die before seeing his world threatened by the bastard child of an earth-dweller!\u201d\n\nStephen shook his head, his mind barely comprehending what he was being told. His wide eyes glanced back at the silver platter, which was thankfully hidden by the darkness. But Kirsahn caught his gaze, and smiled.\n\n\u201cOh yes, my brother, do not be so simple as to think there was not a purpose to your union. The Princess is beautiful, but she is quite deceitful when she wants to be. At least we do not have to worry about that anymore.\u201d\n\nKirsahn forced Stephen\u2019s gaze back to the courtyard. Cassandra was being helped up the stairs of the platform by two guards, her legs barely moving. For a moment, Stephen hoped she was dead already, but the hope was dashed when they released her and she stood on her own. They slipped the noose around her neck, then climbed back down the stairs, leaving her alone.\n\nThe herald began speaking again, his voice ringing out through the courtyard. \u201cCASSANDRA, PRINCESS, DAUGHTER OF THE KING OF THE DARKLAND AND ALL OF ITS SURROUNDING PROVINCES, YOU ARE HEARBY SENTENCED TO DIE ON THIS MOST SACRED NIGHT, BEFORE THE EYES OF THE GODS AND ALL IN THIS COURT!\u201d\n\n\u201cOf course,\u201d Kirsahn began in a low rumble beside him, \u201cthe Princess is quite light\u2014and quite a bit lighter now, of course. It is unlikely that the fall will break her neck and fate will hand her a merciful death. No, she shall no doubt hang and swing and twist and struggle, until the life is slowly and agonizingly choked from her body.\u201d\n\nStephen saw the hooded executioner standing by for the signal. He was gazing up at the dark tower on the opposite side of the castle walls. When Stephen\u2019s gaze lifted, he could see nothing in the tower, only a black hole of darkness.\n\n\u201cHe awaits the signal from the King,\u201d Kirsahn whispered. \u201cOh, it is so quiet, listen. Not a one of them dare to breathe. Perhaps, Stephen, now is your time. Perhaps now is the time for you to save your true love. You could jump from this window and dash madly across the courtyard, through the sea of people.\u201d\n\nStephen\u2019s heart was thundering, his breath quickening. There had to be something he could do, anything. He couldn\u2019t stand Kirsahn\u2019s taunting, the helplessness. His eyes darted back down to the executioner, who waited in silence.\n\nSomething, anything. Cassandra, my love. \n\nHe looked up at her. She stood, too, in silence. But then, for just a moment, her head turned, and though Stephen knew she could no longer see, she turned her head up to him.\n\n\u201cCassandra,\u201d he whispered, \u201cI love you.\u201d\n\nThere was, from the darkness above, an almost imperceptible movement. Stephen saw the executioner\u2019s arms pull back on the lever that would drop Cassandra to her death. He heard the crowd gasp, and he turned away at the very split second a sickening snap cut through the night air.\n\n\u201cOh,\u201d Kirsahn said with mild surprise, \u201cI suppose I could have been wrong.\u201d\n\nThe court erupted in a deafening roar, and Stephen glanced out the window just in time to see the multitudes converge at the center of the court, where Cassandra\u2019s lifeless body swung from the gallows. As total hopelessness coursed through him, Stephen covered his mouth with his hands, backing slowly away from the window.\n\nShe was gone.\n\nKirsahn watched him with satisfaction, even stepped out of the way as Stephen backed across the room. \n\n\u201cIt figures,\u201d Kirsahn said, \u201cthat her little neck would be too weak to hold up. And now she\u2019s gone and ruined all the fun.\u201d\n\nStephen felt his back hit the wall, and a solid metal object dug into his leg. His hand dropped absently to the object at his side, the sword which Kirsahn had leaned against the wall. Kirsahn\u2019s red eyes dropped to Stephen\u2019s hand, and he shook his head.\n\n\u201cMy brother, you couldn\u2019t possibly\u2014\u201c\n\nHe stopped mid-sentence as Stephen grasped the hilt of the sword and hefted it with all his might. The scabbard slipped away with a metallic screech and shot across the room. Kirsahn sidestepped the hurling object, offering Stephen enough time to dash across the room and give one mighty swing. The sword was incredibly heavy, and the blow struck low, the blade buried deep into Kirsahn\u2019s unprotected calf. The sound of crunching bone, accompanied by Kirsahn\u2019s howl of pain, was music to Stephen\u2019s ears, but he took little time to enjoy it.\n\nHe was back across the room seemingly in seconds, throwing open the massive oak door. He dashed blindly out into the corridor, then to the stairs winding downward. In his haste, he almost tripped, threatening to throw himself headfirst down the stairs. But he recovered, and pumped his legs as fast as they would go, away from Kirsahn\u2019s screams of agony and fury.\n\nThe stairs seemed to wind into infinity, but Stephen paid little attention, simply kept running. He hit the bottom and burst through another door, which, to his horror, opened straight out into the courtyard. He stopped, realizing that, so far, no one had noticed him. \n\n\u201cGUARDS!\u201d came a hoarse raor from high above him, and Stephen knew he stood little chance. A guard clad in black armor on the fringe of the crowd turned to him, red eyes glowing from his skull. He smiled and drew his sword. Stephen readied himself as the guard approached, but the guard, like Kirsahn, was nearly twice his size, and Stephen, a weak, soft earth-dweller, would be no match against a warrior.\n\nThe guard came toward him steadily, but just as he was about to reach Stephen and hack him to pieces, the sound of galloping horse hooves interrupted him. The rider bared down on the guard, practically trampling him, but within seconds, the was a silver glint in the night, the swish of steel through air, and the guard\u2019s head separated from his body, rolling several feet across the dirt courtyard.\n\nStephen barely had time to watch the guard\u2019s body drop before the dark rider atop the horse rode down on him. The sensation of flight overtook him as he was hoisted into the air and dropped onto the hard flank of the horse.\n\n\u201cHold on tight, god damn it!\u201d a strong voice commanded from beneath the rider\u2019s hood, a voice Stephen recognized barely.\n\nHis thoughts were interrupted as the rider spurred on his horse, the great beast galloping across the courtyard and out the gates of the inner walls of the castle. They rode on through the filthy town beyond, through dark streets, away from the cries of fury that followed them.\n\nThe wind struck Stephen, stung his face, brought tears to his eyes, but he never felt more relieved in his life. He glanced back once, and saw the twinkle of torches far behind them. He turned back, and clinging to the rider for dear life, saw the giant iron gate before them being lowered, the drawbridge beyond it being raised.\n\n\u201cOh, Jesus,\u201d Stephen uttered, and felt his own legs squeezing around the horse as they raced on, quickly approaching the exit.\n\nIn moments, the animal\u2019s hooves beat loudly across solid wood. The drawbridge had been raised about a quarter of the way, and was still rising, but the horse effortlessly soared across the chasm and came down on solid land on the other side. With nothing but open land in front of them, and the massive gate closing, having to be raised again to let the guards out, the rider slowed his horse just a little.\n\n\u201cWho the hell are you?\u201d Stephen called out over the sound of the wind whipping past his ears.\n\n\u201cNow\u2019s not the time, Stephen,\u201d the rider answered, and just as Stephen recognized his voice, the rider threw back his hood, revealing the dark-skinned warrior beneath.\n\n\u201cReggie,\u201d Stephen said in utter disbelief, \u201cwhat the fuck are you doing here?\u201d\n\n\u201cI told you, Steve, now\u2019s not the time, just shut up!\u201d\n\nThey rode on through the fields surrounding the castle. As Stephen glanced back, he saw that the drawbridge was being lowered back down over the moat, and he knew they had little time. Reggie spurred the horse on, and they quickly approached the edge of the forest where Stephen had first awoken.\n\nThe horse began to whinny beneath them, then stopped suddenly, throwing its head into the air and nearly tossing them off its broad back. \n\n\u201cCome on, we run from here,\u201d Reggie said, jumping down off the horse.\n\nStephen followed him, and they took off at a run towards the forest. Stephen glanced back and saw the castle guards quickly approaching. If they caught up, the two men would be slaughtered.\n\n\u201cCome on, Steve, god damn it, we have to move!\u201d\n\nThey sprinted full out until they were finally at the edge of the forest. Once there, Reggie stopped and frantically dug through his cloak.\n\n\u201cWhere the fuck is it?\u201d he whispered to himself breathlessly. After a moment, he pulled something out of an inner pocket and held it in the palm of his hand for Stephen could see. It was a blue crystal, just like the one he had been compelled to take off the table in Cassandra\u2019s house.\n\n\u201cSteve, listen carefully, you had to have one of these. Where is it?\u201d\n\nFor a moment, Stephen\u2019s heart dropped into his feet. Then he remembered. He jammed his hand into the pocket of his jeans, felt the cool crystal there, and pulled it out to show Reggie. Reggie, in turn, smiled in relief.\n\n\u201cOh, thank God. Now,\u201d he said, pointing towards the twisted trees, \u201cstand over there.\u201d\n\n\u201cReggie, what\u2014\u201c\n\n\u201cJust do it,\u201d Reggie said, calmly this time. Stephen had no desire to argue with him, so he moved to a spot just beyond the trees and watched carefully, ready to spring out and help his friend at any moment.\n\nReggie, however, would need no help. The Castle guards, seven of them by Stephen\u2019s count, approached quickly on their horses, but Reggie only stood watching them, his chin held high, his arms spread out to his sides. As the guards came within yards of him, his head dropped back, his eyes closed, as if he were praying to a higher power.\n\n\u201cNo hansa qua\u2019wahna wei!\u201d The words that slipped from Reggie\u2019s mouth were indistinguishable to Stephen, but before he could wonder any further, a flash of blinding light filled his eyes. There was an explosion that seemed to tremble the land, and through the wall of fire that appeared before Reggie, Stephen could see the guards\u2019 horses stop and rear back, several of them throwing their riders to the ground.\n\nReggie watched them in satisfaction for a moment, the bolted over to Stephen. He glanced back for a moment, then looked at Stephen.\n\n\u201cHoly shit, Reg, that was\u2014\u201c\n\n\u201cYou\u2019ll have plenty of time to kiss my ass later, Steve. For now, I need you to hang on to that crystal as tight as you can and walk back into those trees.\u201d Reggie pointed to the trees, and into the darkness beyond.\n\nStephen started forward, then stopped and turned to his friend. \u201cYou\u2019re coming with me, aren\u2019t you, Reggie?\u201d\n\nReggie looked at Stephen in shock. \u201cMotherfucker, you think I want to stayhere?\u201d\n\nStephen felt a grim smile spread over his face, then he turned back to the forest. He walked forward, not looking back, not feeling anything, not wanting to feel anything. If he allowed himself, he would never be able to erase the image of Cassandra from his mind, the image of Cassandra\u2019s insides on a silver platter, the image of Cassandra\u2019s body swinging from the gallows...\n\n*  *  *\n\nThere was, for the third time that night, the need to vomit, and he did so, all over the hardwood floor of the dining room in Number Seventy-two. Not far from him, in the same room, he could hear Reggie do the same, and then mumble something like, \u201c...never get used to that shit...\u201d\n\nStephen breathed heavily for a long moment, blinking his eyes and allowing his head to stop spinning, his heart to slow. And only then did he raise his head.\n\nDaylight was just beginning to break, sending streaks of rising sun through the room, and onto the blank wall in front of him. Stephen rose slowly, ignoring Reggie\u2019s groans of discomfort, and crossing the room, placing his hands against the cool wall. There was movement in it still, Stephen could feel it, but it was fading quickly. He rested his forehead against it, exhausted.",
        "\u201cDaylight,\u201d Reggie said behind him, \u201cit\u2019s over. It\u2019s closed.\u201d\n\n\u201cWhat\u2019s closed?\u201d Stephen said, his voice soft.\n\nStephen could hear Reggie stand and approach him, stopping a few feet away, but not coming too near. \u201cThis house is a doorway, Stephen, I think you know that already. It opens once a year, Halloween night, when\u2014\u201c\n\n\u201cWhen the veil is lifted,\u201d Stephen continued, repeating the story his mother had once told him, \u201cand the dead are free to roam the earth. I saw them, last night, out there.\u201d\n\n\u201cThen you know, too, that the spirits of the dead are the least of our concerns. They\u2019re truly beyond the grasp of this world. It\u2019s the others we have to worry about.\u201d\n\n\u201cThe others,\u201d Stephen said, turning to face Reggie, \u201clike him. Like Kirsahn.\u201d\n\nReggie\u2019s eyes widened in surprise, and his mouth opened, but he could not speak for a long moment. \u201cYou saw him, then? You saw your equal?\u201d\n\n\u201cMy equal?\u201d\n\n\u201cIn the Otherworld, we all have an equal, a soul equal, who mirrors our nightmares, or at least, our nightmarish perception of ourselves.\u201d\n\nStephen\u2019s eyes dropped to the floor. \u201cReggie, how do you know all this? How did you get into the\u2014\u201c\n\n\u201cThe Otherworld is what we call it.\u201d\n\n\u201cWe who?\u201d\n\n\u201cThere a certain ones among us who fight against the threat of the Otherworld. We fight against those who would try to escape it. And I got there the same way you did.\u201d He held out his fist and opened it. There, in his palm, was a pile of blue dust. He turned his palm over, and the dust floated to the ground. Stephen looked down, and saw the same dust sifting between his fingers.\n\n\u201cWhat do you mean by the threat,\u201d Stephen asked, \u201cthe threat of what?\u201d\n\nReggie sighed deeply. \u201cThe Otherworld is a terrible place, man. What you saw was just the tip of the iceberg, paradise compared to what else is out there. There are beings trying to escape it every day, evil beings like Kirsahn and his crew, and others...\u201d\n\n\u201cLike Cassandra,\u201d Stephen said, his voice cracking.\n\n\u201cJust normal folks who want to live in peace. But if they come here, they disturb a very fine balance that we\u2019ve trying to keep for longer than we can remember. If Cassandra had\u2014if she had made it, she would have had to take the place of a soul on earth. And that soul, in turn, would have to take her place back in the Otherworld. If she had succeeded, it would have opened a very small door just a crack. And then someone else would have followed her through, then someone else after that, and so on and so on until the flood gates opened. She was endangering her life, she was endangering your life, the life of your little girl, and every other life on this planet.\u201d\n\nStephen looked away. If she had succeeded... how would she? His eyes dropped down to the glittering pile of dust at his feet. The crystal. He knew now it had been the key to the doorway, the key that allowed him to slip through.\n\nHe looked past Reggie, into the other room. The table that had been covered in crystals, was now covered with nothing more than glittering dust.\n\n\u201cOne soul for another, Steve, that\u2019s the way it works.\u201d\n\nReggie\u2019s words echoed through Stephen\u2019s mind, but he barely heard them.\n\n...the life of your little girl...\n\n\u201cOh God, Reg...\u201d\n\nReggie stared at him intently. \u201cWhat is it?\u201d\n\n\u201cCasey!\u201d\n\nReggie watched helplessly as Stephen bolted through the house and out the front door.\n\n*  *  *\n\nThe highway was astoundingly barren as Stephen sped along at top speed in his car. He had blinders on, only seeing the highway before him. It came and went in a flash, and at the end of his drive, Julie\u2019s house.\n\nThe neighborhood was quiet, the corpses of carved pumpkins littering doorways, sunrise creeping through the trees. Stephen screeched to a halt in front of Julie\u2019s house and bounded out of the car without even turning off the ignition. He took the walkway at a full run, pounding up the front steps and slamming through the unlocked front door.\n\n\u201cJulie? Casey!\u201d he called out through the silence of the house. He once again bounded up the stairs, ignoring the burning sensation in his already exhausted legs. He ran down the hall, and stopped at the first door on the right: Casey\u2019s room. Without hesitation, he burst through the door, his eyes scanning the room desperately for his daughter.\n\n\u201cCasey? Oh God, Casey, where are you?\u201d\n\nHis eyes stopped at a shivering bundle in the corner of the room, a tiny princess still in her gown, her head drooping between her knees. Stephen ran, knelt down beside her, placing his arms around her, savoring the feel of her warm, living body.\n\nShe wept uncontrollably, and her arms automatically went around him. He held her close.\n\n\u201cCasey, honey, are you alright?\u201d\n\n\u201cI\u2014I only tried to help,\u201d she said between sobs, \u201cI was trying to help Mommy.\u201d\n\n\u201cCasey, I know, baby,\u201d Stephen said, relieved above all that his daughter was alright. \u201cTell me what happened.\u201d\n\n\u201cI\u2014I\u2014Mommy was so upset last night, after you left. She was so sad, she\u2019s always so sad. And\u2014and the lady, she said the crystal would give me good dreams...\u201d\n\nStephen\u2019s mouth went dry, and his stomach tightened into a ball. He picked up his daughter, holding her as tightly as possible, and carried her out into the hallway. He stood staring at the door to his ex-wife\u2019s room for a long time, debating whether to move forward and open it, or to leave the house forever and take his daughter with him.\n\nHe had to know. Casey held onto him for dear life, pressing her face into his neck. Stephen approached the door and put his hand on the knob. From inside he could hear the sound of soft weeping, and he opened the door.\n\nAt first he saw the bed, empty, save for the overturned blankets and pillows. Covering one side of a pillow, an unmistakable gold dust that glimmered in the soft morning light filling the room.\n\n\u201cI put it under her pillow so she wouldn\u2019t cry anymore,\u201d Casey whimpered into his ear.\n\n\u201cJulie?\u201d Stephen said softly. He cast his eyes around the room, and in one darkened corner, a corner the morning light had not yet reached, he found her. She was sitting much as Casey had been sitting, her knees drawn to her chest, her arms wrapped around them, her head down.\n\n\u201cJulie,\u201d Stephen said, hugging Casey even closer in his arms, \u201cJulie, are you alright?\u201d\n\nShe raised her head slowly, and Stephen inhaled a gritty, hissing gasp. He stumbled back against the wall, but kept a tight hold on his daughter.\n\nBeneath the eyelids of the woman who had once been his ex-wife, glowing, golden eyes. \n\n\u201cYou\u2014you tried to do this to my daughter,\u201d he stuttered.\n\nOne soul for another, that\u2019s how it works.\n\n\u201cStephen,\u201d came Julie\u2019s voice, but it was no longer her voice, \u201cStephen, I\u2019m sorry.\u201d\n\nOne soul for another...\n\n\u201cWhere\u2019s Julie,\u201d Stephen uttered through gritted teeth, \u201cwhere\u2019s my wife?\u201d\n\nThe woman on the floor only shook her head, tears streaming down her cheeks, her face red with shame.\n\n\u201cWHERE IS SHE?\u201d\n\n\u201cShe didn\u2019t\u2014we switched\u2014\u201c\n\n\u201cYou switched,\u201d Stephen growled, \u201cwhen? When? When did you switch?\u201d\n\n\u201cWhen they started cutting.\u201d\n\nStephen covered his mouth as a horrified yelp escaped his lips. He backed away slowly, those golden eyes watching him, pleading with him. But he slammed the door, carrying his sobbing daughter, away, away from her, down the stairs, far away from her, out the door, out into the light, out into the world\n\nOut into a world that would never be the same again."
    ],
    "authorname": "DarkLit",
    "tags": [
        "hand stephen",
        "stephen turned",
        "daddy casey",
        "stephen eyes",
        "door casey",
        "stephen wanted",
        "stephen made",
        "castle guards",
        "stephen thought",
        "spurred horse"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-girl-with-golden-eyes"
}