{
    "title": "A Death in the Family Ch. 04",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 22 - Fearless\n\nAs Trent Ridge moved towards the A.C. unit, another shadow crossed the back door. Standing there was Your Iron Crowbar, armed with the red crowbar and ready for personal combat with the ex-Navy-SEAL.\n\n\"Oh. It's you.\" said Ridge. \"So I didn't kill you. That'll be easy enough to fix.\"\n\n\"Bring it on.\" I snarled. \"There's no way out for you now.\" Trent realized the truth of that, and hurled himself into the attack...\n\n* * * * * * * * * * * * * *\n\nWhen Trent's gun had fired back in Daniel's house, it was between us at an angle. The bullet hit me on the side of the hip... right in the 'girdle' that I was wearing to support my back. The bullet lodged into the girdle, and the force of the blow spun me around, but also knocked the gun out of Trent's hand. Seeing me fall, he thought I was dead or injured, so he chose to run out the back door instead of retrieving it.\n\nDaniel had run down the stairs, and found me getting up off the floor. I took off my Police belt and handed it to him. \"Use the gun to protect the women.\" I growled. \"And use the radio to call it in.\"\n\n\"Don't you need the gun?\" Daniel called out.\n\n\"Not with the kids in the line of fire!\" I shouted back. I then tore off after Trent, despite the pain in my side from the blow to the 'girdle'. But what was pain and some bruising, when my daughter's life was at stake?\n\n* * * * * * * * * * * * * *\n\nTrent went after me to grab the crowbar, but I whirled it around out of his reach and then swung it at his side. He rolled with the blow, then went straight after me... displaying a shoulder joint. I knew what to do with those.\n\n*WHAM!*\n\nRidge went down hard, but he rolled with it and sprang to his feet. He was in his early 30s and in very good physical condition, and he had experience in personal combat. And it was bastards like him that were the reason I trained like hell. \n\nIt was time to finish this. It is said that when in a fight, to fight like you have whatever you love most behind you. In this case, I really did. Carole and Patricia were here, somewhere, and my failure meant their deaths. And that was more than enough.\n\nLike I had done against Cindy in the Police Boxing Matches, I feinted left and my body carried me right. Instead of swinging the crowbar, though, I grabbed Ridge's arm at the elbow joint and took him down by pushing on his shoulder blade. I landed on top of him, feeling his shoulder give way as his face and chest slammed into the plywood flooring. I pulled his arm on behind him as he screamed in pain. I held on for dear life as I heard sirens in the distance, and getting louder...\n\n* * * * * * * * * * * * * *\n\nA moment later, Police Officers were pouring into the house. \"Give me some handcuffs.\" I ordered. \"I'm not about to let this bastard go.\" I was helped to get Trent cuffed, then I got more handcuffs and cuffed his ankles together. Only then did I get up.\n\n\"This guy is dangerous as hell.\" I said. \"Make sure he's shackled at all times. Don't even play with him.\" Trent was physically carried out of the house and to a waiting Police paddywagon under heavy armed guard.\n\nThe screen to the A.C. unit clattered to the floor, and a bright smiling five-year-old face came into view. \"Well, hello, Carole!\" said Lt. Rudistan with great joviality. \"Playing hide and seek, there?\"\n\n\"Yes, Mr. Rooood-istan.\" said Carole. \"We were hiding from the bad guy until Daddy could get here and save us.\"\n\n\"And you did very, very well.\" I said. \"You were very brave. Both you girls were very brave.\" I hugged Carole as she climbed out and came to me. Then Patricia came out, looked around, and went flying into her dad's arms...\n\n* * * * * * * * * * * * * *\n\n\"Like you said, sir,\" said Sergeant Morton at County Jail, \"he's a dangerous one. We took his ankle shackles off, and he began kicking at us. Fortunately a lot of us have trained for the Police Boxing Matches, and Rudistan parried his blows until we TASERed him... TASERed the perp, that is.\"\n\n\"Yeah, he wants nothing more than to kill a Police Officer, if he can.\" I said. \"He stays chained and shackled when he's not in the isolation cell.\"\n\nWe were in the 1st Precinct Conference Room. Laura had examined me and found bruising on my hip, but no apparent further damage. I told the Chief and Cindy that I would be needing a new 'girdle', and they absolutely took advantage of the opportunity to give me no end of grief about it... though I knew a new one would be coming quickly, seeing as we were losing count of how often the 'girdle' had saved my life.\n\n\"All right,\" I said tiredly, \"we've got the Board of Inquiry in an hour. We'll have to hold Ridge until that's over, and I can interrogate him. Any word from the Feds on trying to get jurisdiction of him?\"\n\n\"Not a peep so far.\" said ADA Paulina Patterson. \"He'll be arraigned in the morning. Attempted murder of a Police Officer, two counts of attempted kidnapping, and then we'll work backwards to the other things he's done.\"\n\n\"I'd imagine,\" said the Chief, \"that the FBI will want him for the EMPTY-QUIVER-related charges. I hope so, anyway. I don't want us to have to deal with that mess.\"\n\n\"He didn't participate in that in this County.\" I said. \"So it's not a problem for us.\"\n\n\"My question is 'why?'.\" said Lt. Jerome Davis. \"Why in the heck did he go after Carole like that? With you around, sir? And Dr. Fredricson, and Mayor Allgood, and Mrs. Allgood all there?\"\n\n\"It's gotta be desperation.\" said Cindy. \"They must really want that Mutanix from BOW Enterprises. Or is Edward Blassingame so desperate to get his son out of jail that he'd have Trent take this desperate a gamble?\"\n\n\"No.\" I said. \"This was not about the Mutanix, nor Blassingame. It was worse. I think this bastard Ridge fully intended to shoot and kill Carole and Patricia, right in front of us, their parents. It was a suicide mission for him.\"\n\n\"Not that I would ever say you are wrong about any-thinnnnng.\" drawled the Chief. \"But why do you think that?\"\n\n\"Call it a vibe.\" I said. \"No rational explanation. Just a vibe.\" Cindy nodded in agreement as I said \"But it doesn't matter. It's over. We've got the son of a bitch.\"\n\nThere was rationality behind it, though. I just didn't want to say it out loud. The first thing I remembered was that Melina had stopped the KXTC vehicles from approaching us at BOW Enterprises, thus thwarting whatever Trent intended to do as the driver of the second KXTC van. \n\nAnd I also realized that Carole had felt the vibe that Trent intended to kill her, not capture her, and that is why she ran! Of course she did not leave Patricia behind, as she had not left Marie behind when Trent had tried to kidnap her earlier. She has a good heart. She did what she had to do, and she was alive now, and several of us were alive now, because of it.\n\nThe 'fun' part of my day was over. Now came the truly sucky part: County politics.\n\nPart 23 - The Board of Inquiry\n\n2:00pm, Wednesday, June 12th. The Board of Inquiry Chamber was full of reporters and Police Officers that were not being called to testify. The room was uneasily silent and tense as the five Board Members filed in and took their seats behind the bench. Chairman Silas sat in the middle, with Mr. Landau and Mr. Morse to his right, and Mr. Fitzgerald and Mr. Finneran to his left.\n\n\"I have appointed Mr. Finneran to act as the Manager on behalf of this Board of Inquiry,\" announced Silas, \"which means he will lead the questioning and call the witnesses.\"\n\nThe Police Captain Union's rep stood up and said \"I object to that, and I object to Finneran's presence on this Board. He has constantly shown bias---\"\n\n\"Overruled!\" snarled Silas.\n\n\"I haven't finished----\" started the Union Rep.\n\n\"OVERRULED!\" shouted Silas, standing up himself. \"I just told you that your objection to Finneran is overruled! You keep your damn mouth shut, or I'll have you forcibly removed! Mr. Finneran will remain on this Board of Inquiry, and he will lead the questioning of the witnesses!\"\n\n\"It's going to be that kind of day.\" I whispered to Mike G. Todd, my attorney, who was sitting next to me. I had been formally named as the object of the Inquiry, and so could remain in the room despite the intent to call me as a witness.\n\n\"Something's up with all this.\" Mike said. \"We asked for the witness list, and Silas refused to give it to us... until I filed a lawsuit asking for a postponement until I got the list. They sent it immediately. Problem is, according to the list, they only want to hear from Chief Moynahan, you, and Captain Croyle.\"\n\nIndeed, Finneran called Chief Moynahan to the stand. Finneran started in on him: \"Chief, whose plan was it?\"\n\n\"What specific plan?\" the Chief replied.\n\n\"The plan to raid the warehouse with a military-style assault.\" snarled Finneran.\n\n\"I bee-lieve it was the culmi-nay-shunnnn of several persons's input.\" said the Chief. \"I made the ultimate final approval, of course.\"\n\n\"Who specifically contributed to the plan, Chief?\" Finneran asked, his voice harsh and unfriendly. \"Name names, Chief.\"\n\n\"The SWAT leader, Lieutenant Hewitt.\" said the Chief. \"Lieutenant Irwin himself was a part of it. And myself and Commander Troy.\"\n\n\"Commander Troy.\" said Finneran. \"What about Captain Croyle?\"\n\n\"I had her sitting this one out, since it was her husband that was being held hostage.\" said the Chief.\n\n\"Did Commander Troy ever suggest Captain Croyle be a part of the raid?\" asked Finneran.\n\n\"No.\" said the Chief.\n\n\"Why not?\" snarled Finneran. \"He's sent her into harm's way several times, as her six Purple Orders attest. Why not this time?\"\n\n\"Like I just said, but you clearly didn't pay attention to,\" replied the Chief, \"I had her sitting this one out.\"\n\n\"But Commander Troy didn't sit it out. He was part of the planning, as you just said.\" Finneran shot back. \"Why was he a part of it?\"\n\n\"He was not a part of the raid, and that also was at my di-rec-shunnnn.\" growled Moynahan. \"He was part of the planning, which is what you asked earlierrrrrrr.\"\n\n\"Why weren't Commander Troy and Captain Croyle part of the raid?\" queried Finneran. \"Aren't they your best, most highly decorated Officers? Don't they have the experience to conduct raids like this?\"\n\n\"I've already answered that regarding Captain Croyle.\" said the Chief. \"As to Commander Troy, he is related by blood to Todd Burke.\" I thankfully noted that the Chief stopped short of saying it was not my job but the SWAT team's job... which Finneran would be eager to use against us in the future.\n\n\"So you admit you did not send your best people to conduct this raid?\" Finneran asked harshly.\n\n\"I admit nothing of the kind.\" said the Chief. \"Your question is disingenuous.\"\n\n\"Did you or did you not send your best people to conduct that raid, Chief Moynahan?\" snarled Finneran.\n\n\"Define 'best people', Mr. Finneran.\" replied the Chief. \"Particularly with regard to the conduct of that op-errr-a-shunnnnn.\"\n\n\"Stop trying to entrap the Chief, Finneran!\" Mr. Fitzgerald said loudly.\n\n\"I did not recognize you to speak, Fitzgerald.\" said Silas menacingly.\n\n\"I don't need your so-called recognition to call out Finneran for his dirty tricks.\" fired back Fitzgerald.\n\n\"I agree.\" said Mr. Landau. \"Finneran's questions are disingenuous, and are not seeking the truth but are hostile in intent.\"\n\n\"Ignore them.\" said Silas, to Finneran. \"Carry on, Mr. Finneran.\"\n\n\"No more questions.\" said Finneran, walking away in disgust. \"You may step down.\"\n\n\"Hold on.\" said Mr. Landau. \"The rest of us Board members have the right to ask questions, as well.\"\n\n\"I appointed Finneran as our Manager.\" said Silas. \"He asks the questions and says when the witness is dismissed.\"\n\n\"I object!\" said Mike G. Todd, rising to his feet. \"Mr. Landau has the right to ask questions. If you deny him that, I'm taking this to Court again to get this proceeding delayed for at least a week.\"\n\nSilas looked like he was going to pop a blood vessel, but he didn't reply to Mike. \"Ask your damn questions, Landau.\" he finally said.\n\n\"Chief,\" said Mr. Landau, \"you made the decision to send in the SWAT Teams and other well-trained Officers to conduct this raid, is that right?\"\n\n\"Yes, that's right.\" said the Chief.\n\n\"And regardless of how good Commander Troy and Captain Croyle are,\" said Landau, \"you held them back because of their kinship with the hostage, is that correct?\"\n\n\"That is correct.\" said the Chief.\n\n\"Sounds to me like you made wise, correct decisions.\" said Mr. Landau.\n\n* * * * * * * * * * * * * *\n\nFinneran called me up next, and had me sit in the witness chair rather than remain at the 'defense' table. I surmised he wanted to get me away from my lawyer and the Union Rep, not that that would help.\n\n\"Are you comfortable in that chair, Commander Troy?\" Finneran asked. \"Is your back okay?\"\n\n\"That's irrelevant to this proceeding.\" I said. \"And my back can outlast your hatred of Police all day, no matter what chair I'm sitting in.\"\n\n\"You will confine yourself to answering the Manager's questions!\" Silas practically shouted.\n\nI stood up. \"Mike, file the lawsuit. Let's end this charade now.\" Mike got up and fished his cellphone out of his pocket.\n\n\"All right, all right!\" gasped Silas. \"Continue with the questions, Mr. Finneran.\"\n\n\"No. You heard me, Mike.\" I said. \"Make the call.\"\n\n\"This is my Board proceeding, Commander Troy!\" Silas yelled. \"You file that lawsuit and I'll have you suspended!\"\n\n\"You don't have that power, Silas.\" I said menacingly. \"And I'm willing to prove it. Mike, make the call...\"\n\n* * * * * * * * * * * * * *\n\nThirty minutes later, the proceedings started again. Somewhat to my surprise, Judge Folsom got personally involved. He told Silas to get his (act) together, and instructed all of us to continue with the (charade).\n\n\"Commander Troy,\" said Finneran, \"why didn't you have Captain Croyle lead that raid in Lt. Irwin's place?\"\n\n\"First, because the Chief instructed that she would not participate in the raid.\" I said. \"Second, because it was her husband in there.\"\n\n\"But Commander!\" Finneran said with mock shock. \"In previous Inquiries, you've insisted that it's your job to make Captain Croyle's assignments, in spite of this Board's repeated requests if not demands that you reconsider placing her in danger. Why was this time different?\"\n\n\"I just answered that.\" I replied.\n\n\"Do you think Lieutenant Irwin was better for the mission that led to him being shot to death than Captain Croyle was?\" Finneran asked angrily.\n\n\"Like Chief Moynahan just replied,\" I said, \"define 'better for the mission'.\"\n\n\"You're avoiding answering my question, Troy.\" Finneran said accusingly.\n\n\"And I'm not going to answer it until you clarify it.\" I replied.\n\n\"I'm saying that Captain Croyle is smaller and faster than Lieutenant Irwin,\" shouted Finneran, \"and that she could've reached Todd Burke more quickly and gotten him out of the way more quickly. So why didn't you have her leading that aspect of the raid?\"\n\n\"Upon what do you base your unsubstantiated premise, which I don't accept, that Captain Croyle would not have met the same fate as Lt. Irwin did?\" I asked back.\n\n\"You fucked up again, Troy!\" Finneran yelled, his face beet red. \"And this time a Police Officer died because you chose wrong!\"\n\nI stood up. \"I am going to make an uninterrupted statement.\" I said. \"If you try to interrupt or stop me, this proceeding will end immediately and both local and Federal lawsuits will be filed.\" There was utter silence in response.\n\nI began: \"It is obvious that Finneran has no interest in getting to the truth, which is what this Board's mission should be. Yes, in the past Finneran claimed I was wrong to allow Captain Croyle to undertake dangerous missions. Now he's asserting, with no substantive evidence, that I'm wrong for not letting her lead the raid the other day.\"\n\nI continued: \"It is obvious that Finneran's bias and hatred of Police is such that if we do plan 'A', he will say we were wrong and should have done plan 'B'; and when we do plan 'B', he'll say we were wrong and should've done 'A'. No matter what we do, he says it was the wrong way. Nothing we do will ever be correct in Finneran's bias-and-hatred-addled eyes. Therefore, there is no point in me continuing with this sham, and I will answer no more of your questions.\"\n\nAnd with that, I stepped down from the witness stand and went back to the 'defense' table. And again to my surprise, Silas didn't try anything else with me. He said simply \"Call your next witness, Mr. Finneran.\"\n\n\"I call Captain Teresa Croyle to the stand.\" said Finneran. Teresa was brought into the room and took her place in the witness chair.\n\n\"So, Captain Croyle,\" Finneran said loudly. \"How do you feel?\"\n\n\"Objection!\" said the Union Rep, standing up.\n\n\"Overruled!\" Silas yelled back. \"I've already told you to shut your mouth. One more word out of you, and I'll have you removed.\"\n\nI stood up. \"The Union Rep has every right to speak up in defense of a witness being badgered with irrelevant questions. I would also ask this, Mr. Silas... who are you going to get to remove him? I'm not going to do it, and I will order anyone in the Public Safety Department to disregard your unlawful order. He's not going anywhere.\"\n\n\"Proceed, Mr. Finneran.\" Silas said.\n\n\"How do you feel, Captain Croyle?\" asked Finneran.\n\n\"In what context?\" Teresa asked.\n\n\"How do you feel,\" said Finneran gleefully, springing his trap, \"knowing that a Police Officer died and your husband lived?\"\n\nEven the Press in the audience gasped at the ugliness of Finneran's question. As the Union Rep stood up, Silas said \"Sit back down. Answer Mr. Finneran's question, Captain!\"\n\n\"Yes, I want to know how you feel,\" reiterated Finneran, \"knowing that a Police Officer died saving your husband, with you sitting outside and not participating. Why didn't you lead that raid yourself? After all, it was your husband being held hostage, and being lashed with a bullwhip in there.\"\n\nI rose from my chair. \"Don't answer that.\" I said. I went around and to the witness chair to escort Teresa out, putting myself between her and Finneran. \"Come on, let's get out of here.\"\n\n\"I'm not finished with her yet!\" Finneran said. I squared up to him.\n\n\"Yes you are.\" I said, brandishing my red crowbar. \"Unless you think you can physically whip me.\" My eyes bore into him, and I prayed he'd say or do something. Everyone else in the room was frozen in place.\n\nSilas called out \"You won't get away with this, Troy. We're going to get you. If not today, there will be other day, and other Boards.\"\n\n\"I'm counting on it.\" I said. \"Enjoy what little time you have left on the Board. You too, Finneran.\"\n\n\"You can't stop him from being on any Police Boards of Inquiry, Troy.\" said Silas.\n\nI just smiled. An ugly smile, that no one wants to see on my face. I said nothing. Teresa had come off the stand and was now taking my arm to lead me out of there. Mike Todd and the Union Rep joined us as we walked out, followed by Chief Moynahan and Sheriff Griswold.\n\nThe Sheriff stopped at the door. \"Better be sure, Silas.\" he growled. \"You're on this Board, for now. But Donald Troy is on a Commission!\" ",
        "The Sheriff had understood my smile; the day would come when the Town & County Charter re-write would take up the issue of Boards of Inquiry... how they're formed, who could be on them, if objections to a Board member could be made, etc. And I would have a powerful influence on that...\n\nPart 24 - Trent Ridge\n\n\"My God.\" the Chief said quietly, wiping his brow. We were sitting in the Chief's Conference Room, along with the Mayor, the Sheriff, the Deputy Chief, and the Captain of Operations. \"What in the hell was that all about? We know Finneran is an asshole's asshole, but what was up with Silas?\"\n\n\"He was trying to railroad that process through.\" I said. \"I used that against him, having Mike go for the lawsuit to delay it.\"\n\n\"True,\" growled Griswold, \"but that doesn't explain Silas's now-open bias. My own feeling is that it's racially motivated at its core.\"\n\n\"Finneran's not black, and he's even more biased.\" I replied. \"So I attribute it to the disruptive actions of the Left, be it Kelly Carnes and Reginald Lewis trying to disrupt Council meetings, or the attempt to steal the Mayoral election, or this sham Impeachment threat against Governor Jared.\"\n\n\"I loved the look on Finneran's face when you mentioned that Don was on a Commission, Sheriff.\" said Cindy, who'd seen that exchange. \"I just worry about Boards of Inquiry before any changes are made to the Charter.\"\n\n\"And I'm worried about the Council meetings.\" said Daniel Allgood, speaking for the first time. \"That's why I came in today: we need to figure out how to get control of all of this\"\n\n\"Can't you remove Finneran from the Board of Inquiry?\" asked Cindy.\n\n\"Carnes, Lewis, and Adams will sue if I do.\" said Daniel Allgood. \"I'd still do it, but they've got it lined up that Solicitor Ted Mason will take the case to Judge Nance. Both Nance and Finneran lust after underage boys, being NAMBLA members and all, so you know how that's going to turn out.\"\n\n\"We can ask Folsom to take the case from Nance.\" Cindy said.\n\n\"They'll say you don't have standing, that it's a Council matter.\" said the Mayor.\n\n\"No, she's a principal for the County.\" I said. \"As am I. That gives us standing. I'm going to talk to Mike Todd after I go interrogate Trent Ridge.\"\n\n\"Which just plays right into their hands.\" said the Chief. \"Lawsuits cost money, either for you personally, Mr. Crowbar, or the County. That's what they want, to bleed us financially. And you've got that case against the CFPA coming up this summer.\"\n\n\"Also, guys,\" said Daniel Allgood, \"I know you want to fight them, that it's in your nature to do so. But except for the Sheriff, none of you are elected officials. I have to consider what they're doing in political terms, and there's only so much I can do. I can't run and file a lawsuit at every slight.\"\n\n\"Then what do you have us do, Mr. Mayor?\" Cindy asked, frustration in her voice. \"We don't have to accept the disruptive tactics of the Left, packing Council meetings and having corrupt assholes on or Boards of Inquiry. We have to fight back, and we can!\"\n\n\"And that's why I'm here.\" said Daniel. \"I need ideas on how to fight back... but in a proper, legal manner that doesn't disrespect the processes of County Government. For example, what Finneran said to Captain Croyle was reprehensible, but the Press will make sure the People of the County don't see or know about that part; they're just going to show the Commander confronting a Board member with a crowbar, then all of you walking out. So... how can I fight back? Help me to find a way to fight back.\"\n\nI could see on Teresa and Cindy's faces that they were done talking to Daniel, and that their respect for him was falling through the floor. But I needed him, as Mayor, so I spoke up:\n\n\"Mr. Mayor,\" I said, \"just keep doing what you're doing. Keep controlling the Council meetings, don't tolerate their disruptive tactics. We'll be there to make arrests of anyone and everyone that declines to act in a civil manner in your Council meetings. Don't worry about the Press optics, just keep doing the right things.\"\n\n\"And that's another thing.\" said Daniel. \"With respect to you, Commander, they just love having you leading from the front on enforcing the law on those things. They're starting to figure out how to use that to their advantage. For example, when you arrested Reginald Lewis, everyone was so shocked they didn't take advantage of it. But next time, the calls of racism and Police brutality and abuse of power will be chanted.\"\n\nI smiled 'that' smile again. \"Don't worry, Mr. Mayor.\" I said. \"If Reginald B.F. Lewis disrupts an Executive Session again, I've got it taken care of.\"\n\n\u2028\"Whaa?\" gasped both the Mayor and the Chief. \"How?\" said Daniel. \"You go in there, they'll raise hell.\"\n\n\"Which is why  I  won't be going in there.\" I said. Only then did everyone else see the gleam in Teresa's eyes and the wicked grin on her lovely face...\n\n* * * * * * * * * * * * * *\n\n\"I appreciate you taking up for me today.\" said Teresa as she drove with me in my Police SUV to County Jail. \"I was about to make a reply that would've gotten us all in trouble.\"\n\n\"You handled it well.\" I said.\n\n\"You know,\" Teresa said, \"when Irwin's mother said that to me after the funeral, it really rattled me. I didn't know quite how to respond. But in a way, it was good she did that, because when Finneran said the same thing, it didn't shock me. I think he wanted me to react more than I did.\"\n\n\"Yep, absolutely.\" I said. \"My only question is why Folsom intervened and had us proceed. I fully expected the Inquiry to be suspended.\" A second later, I said \"Okay, here we go. Is everything ready?\"\n\n\"Yep.\" Teresa said. \"Every Officer and Deputy in the Jail section has been issued a TASER, with orders to electrocute Ridge if he tries any shit... and he wants to...\n\n* * * * * * * * * * * * * *\n\nI had changed clothes, wearing my light trenchcoat over the pullover black shirt and black pants. I was prepared to meet Trent Ridge as Teresa and I went into County Jail.\n\nThe isolation cells are solid walls, with metal doors on the right or left side, near the side walls and not the center. They open out into the hallway. Just inside the cell are a door of typical jail bars that slide sideways into the wall. The metal door to Trent Ridge's cell was open, with the bars obstructing his desire for freedom.\n\nIn the hallway, sitting in a folding chair, was FBI Special Agent In Charge Jack Muscone. There were four TCPD Officers in the hallway, armored and armed. Two of them, as well as other Officers and Deputies down the hallway, had TASERs.\n\nAs we came around the corner to go down the hallway, I heard Muscone say \"Come on, Ridge. There was no way you ever would get Peter Blassingame out of here. So why were you trying to kidnap little kids? That's really beneath what I'd expect of a Navy SEAL.\"\n\n\"You don't know shit, Muscone.\" said Trent Ridge from within the cell. \"First of all, we raped mothers in Iraq, right in front of their little kids, then slit the kids's throats in front of the mothers before killing the mothers, too. I have no problem at all kidnapping a kid, or killing one. Especially Troy's kids.\"\n\n\"Why him?\" Muscone said. \"What's your beef with him? Why his kid? You could kidnap anyone to get the Police to negotiate giving you Blassingame's kid.\"\n\nTrent laughed derisively. \"You are truly an idiot, Muscone. A total idiot. Truly typical of the FBI. God, you disgust me! You don't get it, do you?\"\n\n\"Get what?\" Muscone asked, unperturbed.\n\n\"Buddy, if I was going to get Peter Blassingame out of here,\" said Trent, almost boastfully, \"I'd hold him for ransom, make his daddy pay me millions for his sorry ass. I have no interest in that punk, nor his father.\"\n\n\"So what do you want?\" asked Muscone.\n\n\"I think I'm beginning to understand what he really wants.\" I said, coming into Trent's view. \"And why he had to kidnap my child, instead of anyone else's.\"\n\n\"Oh, there you are.\" Trent sneered at me. \"I hope you're better at interrogation than this FBI clown is.\"\n\n\"Oh, I'm not going to interrogate you, Trent.\" I said. \"I only want to know one thing from you. Only one thing...\"\n\n\"So why did he go after your child?\" Muscone asked.\n\n\"The Bodymaster.\" I said, staring at Ridge. \"It's awl about McGinty.\"\n\n\"Go fuck yourself, Troy.\" Ridge snarled, but I could see by the look on his face that I was right.\n\n\"What's that about?\" asked Muscone.\n\n\"It's about----\" I started, but was interrupted by a contingent of Deputies coming down the hall.\n\n\"Sir, Judge Nance moved this shit eater's hearing up to a half hour from now.\" said the lead Deputy.\"\n\n\"Have at him.\" I said.\n\n\"Put your hands through the opening.\" the Deputy ordered. \n\nRidge stayed back. \"Come in here and get me.\" he said. Deputies began drawing their TASERs. \"Or let Troy come in and get me. Let him lead by example.\"\n\n\"Why not?\" I said. I handed Teresa my red crowbar and my badge, and handed Muscone my holstered service weapon, and pulled a small device out of my pocket. \"Open the door.\" I said.\n\n\"Er, Commander...\" Teresa was about to admonish.\n\n\"If he wins I'll be dead, but you can TASER him to the consistency of burnt toast.\" I said. \"Go ahead! Open it!\"\n\nThe door of bars began sliding into the wall. Trent rushed the opening, but so did I. His shoulder was sore, so as he tried to grab me, I turned him and went for that shoulder, twisting his left arm back and pushing into that shoulder. I used the device to inject Ridge with a tiny chip into that injured shoulder. Then I slung him toward the bed and the back of the cell.\n\n\"Die, bastard!\" Trent uttered gutturally as he charged me again. I blocked his attempt, and threw a closed-fist punch into his midsection, making him double over. He attempted to move laterally and tackle me, but I grabbed him and pivoted, sending him headfirst into the wall. Then I took his arm again and pulled it behind him as I slammed him to the concrete floor, putting my weight on him.\n\n\"Kick him in the balls!\" I heard Teresa yell from the hallway.\n\n\"Like what they did to your husband, bitch?\" yelled Trent.\n\n\"He doesn't have any balls!\" I yelled. To Trent I said \"Navy SEAL? Harumph! You're pathetic. PATHETIC! You ain't SHIT! You're just a puny little cocksucking faggot!\" \n\nAs I hoped, my offensive word calling Trent a homosexual enraged him, and I used his attempts to get at me to tighten my hold on him, all but pulling his shoulder out of its socket. I punched him in the deltoid, right over the hurt shoulder, making him scream in pain, but also to make sure that tiny chip was fully embedded.\n\nOfficers came in and, with great effort, got cuffs on his ankles, then affixed them to his wrists. Only then did I release him. When they turned him over, I smashed my boot into his balls.\n\n\"There you go.\" Teresa said approvingly. \"Next time, use a bullwhip.\" Teresa said.\n\n\"I wish we had time for that.\" I said. Then to Trent I said \"That's two for two, Ridge. And I'll whip your sorry faggot ass every time. Every time, Ridge.\"\n\nAs I collected my things in the hallway, Jack Muscone said \"Dayum, you know how to fight.\"\n\n\"Yeah.\" I said, then said loudly to everyone. \"Do not try that at home, folks. You guys just TASER the shit out of him if he tries anything. Don't even play with him...\"\n\n* * * * * * * * * * * * * *\n\n4:25pm, Wednesday, June 12th. Teresa and I were driving in my SUV behind the paddywagon taking Ridge to the Courthouse. \"You worked off some steam.\" she said. \"Did to Trent what you wanted to do to Finneran, you did. I think you enjoyed it.\"\n\n\"Oh, I did.\" I said. \"And some of it was for trying to kidnap my little girl. I wanted to make sure he understood that I don't forget, and I do hold grudges.\"\n\nWe made our way into the Courthouse Complex, and stood with the Deputies in the back of the Courtroom. Trent was brought in, his wrists shackled with handcuffs that had a solid bar of metal between them, and chained to a vest (a 'girdle', really) and his ankles were similarly cuffed, with the addition of chains. He could barely walk, and the Deputies were half-carrying him to the defendant's table.\n\n\"Would you look at that.\" I whispered to Teresa. Trent Ridge's lawyer was none other than Nathan Masterson of Gresham & Mason, P.C.\n\nTeresa said \"The Swamp Frogs sent their legal beagle. They must want to save him.\"\n\nI shook my head. \"No... they want to control him. Masterson is here for his masters's interests, not Trent's.\" Teresa nodded in understanding.\n\nPaulina Patterson was at her place at the Prosecutor's table as the Bailiff announced \"Oyez, Oyez, Oyez. All rise; Court is in session, the Honorable Harry Nance presiding.\"\n\nNance came in and took his place behind the Bench. \"Okay, what are the---- what the heck? Why is this man shackled like he's a runaway slave or something?\"\n\n\"Your Honor,\" Paulina said, \"this man is a former Navy SEAL and highly trained in weaponless close-quarters combat. He has attacked Police several times, and is extremely dangerous.\"\n\n\"This...\" gasped Nance with mock shock, \"this is incredible! This is utter Police brutality! I blame Commander Donald Troy for this, but in the meantime, this \u2028Court orders that the Police are enjoined from shackling this defendant, and can only handcuff his wrists with one pair of standard issue Police handcuffs!\"\n\n\"But Your Honor!\" Paulina tried.\n\n\"But nothing, Counselor!\" Nance roared. \"Get those shackles off that man!\" Deputies moved to comply, first putting regular cuffs on Ridge, then removing the other restraints. As they were removed, Trent looked back at me, a sardonic smile on his face. I made sure to look disinterested.\n\n\"Okay,\" said Nance, \"the FBI and the Navy have both made requests to take custody of this defendant, but he still has charges of conspiracy to commit murder and attempted kidnapping. He's ordered held without bail until a hearing is held to determine proper jurisdiction.\" Nance banged his gavel, and Ridge was led out the side door, Deputies having TASERs at the ready...\n\n* * * * * * * * * * * * * *\n\nRidge was put into a Town & County Sheriff's Department van for transportation back to County Jail. Teresa and I were following in my Police SUV.\n\n\"So Trent was really after McGinty's dirt that we secured and gave to you?\" Teresa asked.\n\n\"That's my hypothesis right now.\" I said. \"It hit me when I was listening to him talk to Muscone, who did a great job drawing that information out of him.\"\n\n\"I was wondering who was playing who, there.\" said Teresa. \"I had the feeling that Ridge was feeding Muscone what he wanted Muscone to hear. By the way, what did you do with that stuff?\"\n\n\"I destroyed it.\" I said, outright lying to my friend and colleague. \"That stuff was too hot to hold... as having Trent go after Carole shows. There are a lot of people who would have killed to make sure that stuff didn't come out.\"\n\n\"True.\" said Teresa. \"But maybe we need to let the world know that?\"\n\n\"I'd rather let some of them think it's still out there, not found.\" I said. \"The threat of that is keeping a lot of heads down--- what the fuck?\"\n\nWe were on Riverside Drive, headed north. The van in front of us had hit the brakes, suddenly stopping. The side door opened and Trent Ridge jumped out. He ran at the top of his speed down the street, then turned and ran down a side street. The Deputy in the passenger seat up front also jumped out, and went running after Trent.\n\n\"I'm on it!\" Teresa yelled, opening the door and jumping out in pursuit. I turned on the blue lightbar and got out and went to check on the Deputies in the van.\n\n\"What happened?\" I asked.\n\n\"He broke out of his handcuffs.\" said the driver. \"I thought the door was locked, but he got it open and jumped out...\"\n\n* * * * * * * * * * * * * *\n\n\"No sign of him.\" said Teresa Croyle at Police Headquarters, in the Main Conference Room. \"He went down a side street and just disappeared. If I didn't know better, I'd say he had a car waiting for him.\"\n\n\"We've got checkpoints at all the usual places.\" said Cindy Ross. \"Needless to say, patrols are crawling all over the north side of Town and the wealthy neighborhoods north of there. And we're patrolling all the farm roads on all sides of the County, and we have two patrols at or near Point Hollow. But absolutely no sign of Trent. \"\n\n\"If Nance hadn't have ordered he only be restrained by one pair of cuffs,\" said Sheriff Griswold angrily, \"he could never have gotten out of that van, much less run.\"\n\nJack Muscone and Melina Allgood shook their heads, with Melina holding her head in her hands. \"God, that sucks!\" she said.\n\n\"He could strike anywhere, at any of our kids.\" said Cindy. \"And I don't want to bring them all to The Cabin, because that concentrates them at one place.\"\n\n\"I agree.\" I said. \"It's better that they're dispersed. Callie and Betsy are at Maggie's condo, which has good security; Molly and my mom have the boys, including Teresa's, at The Cabin; and Laura and Selena are watching the girls, including Marie, at the Mountain Nest.\"\n\n\"Tanya is at home with Pete and my girls.\" said Muscone. \"So... any idea where Trent will go? Where he might strike?\"\n\nI said \"My answer is to ask ourselves the question 'If it was any one of us on the run, what would we do?'. My own answer is that if I had food and was in a safehouse, I'd lay low and eat and sleep, then figure out what to do the next morning.\"\n\n\"I'd be running.\" said Jack. \"If I had help earlier to get away this afternoon, I'd have that help drive me over the County Line, and find a place to hide for a while.\"\n\nMelina said \"It depends on what kind of help he has, and what arrangements he made that no one else knows about. I'm continuing my thesis that the Swamp Frogs want him dead, too, and that he knows it.\"\n\n\"Anyone keep tabs on Nathan Masterson?\" I asked.\n\n\"He left for the City.\" Cindy said. \"His car was searched at the County Line, and he didn't put up a fuss about it. Nothing was found.\"\n\n\"Is that good or bad?\" asked Chief Moynahan.\n\n\"Neither, Chief.\" I said. \"It suggests to me that Melina is right, and the Swamp Frogs have lost track of Trent, too. If Masterson knew where Trent was, or had any expectation Trent would show up, Masterson would stay in Town, too... just to keep tabs on things.\"\n\nI looked at my watch. \"Okay, I'm going to City Hall for the Charter Commission hearing. If anything happens, please let me know...\"\n\nPart 25 - Charting The Course\n\n7:30pm, Wednesday, June 12th. The Charter Commission was convening in the Board of Commissioner's Chamber, which was a good medium between the small Board of Inquiry chamber and the very large public Council chamber. About half the seats were full of Citizens, along with a few 'cub' reporters.\n\nI banged the gavel (I admit, I like doing that), and said \"Okay, thank you for coming. Tonight's input is about the Town & County Council, its structure, responsibilities, duties, and powers.\"\n\nI made a slide presentation of the current structure and some of our proposals for change, which were actually few. I showed computer graphics of the districts and where we considered more or less Council members, and how ten worked out for the best.\n\nWhen I opened up the floor for comment, three men came forward, all older men wearing suits and ties. Two were white and one was black.\n\n\"My name is Joseph Aniston,\" said the distinguished-looking white man, who reminded me of Victor Kuykendall from the 'Days of Promise' soap opera. (Author' note: 'Soap Opera'.) \"I'm the President of the Town & County Chamber of Commerce. This is Herman Abel, President of the Black Business Council, and Horace Truelove of the Town & County Better Business Bureau.\" I remembered that Truelove was the brother of Harold S. Truelove, who was one of the University Regents.",
        "\"Glad to have you here tonight.\" I said. \"You're speaking together, and not separately?\"\n\n\"If we could, since this is a joint presentation that we all agree upon.\" said Mr. Aniston. We all agreed, and he began speaking as a young woman brought each of us folders containing a report.\n\n\"Our proposal, said Mr. Aniston, \"is to dissolve and do away with the Town & County Council. We believe the Council as currently constructed does not meet the needs of our Citizens nor our businesses.\" He paused for a second, and may have been surprised that we didn't really visibly react to him.\n\nEdward R. Steele asked \"Are you suggesting some sort of replacement for the Council?\"\n\n\"No sir.\" said Mr. Aniston politely. \"We are suggesting that the Executive Authority of the County reside solely in a Chief Executive Officer, who might be the Mayor or someone elected or appointed by the Mayor. Many counties in America, such as Dekalb County, Georgia, have Chief Executive Officers. But our point is to dissolve the unwieldy current Council, no offense to you intended, Mr. Steele.\"\n\n\"No offense taken.\" said Edward R. Steele. \"My wife and young daughter would love having me at home on Tuesday nights.\" There was laughter in the chamber as he said that.\n\n\"So what is your proposal for the Town & County government going forward?\" I asked.\n\nMr. Abel came to the podium. \"We believe the Town & County Assembly could serve as the sole Legislative body, and could also take on more of an oversight role that the Board of Commissioners currently does.\"\n\n\"You know,\" I said, almost musingly, \"that might be a way to solve another problem I want to address later. But the question I have is about the concentration of power you want to invest in the Mayor, if the Mayor were vested as this 'CEO' you're bringing up. And if you're dissolving the Council, are you also wanting to dissolve the Board of Commissioners? Or would they become the de facto Council?\"\n\n\"We are suggesting that the Mayor or a County CEO be the sole Executive Authority.\" said Mr. Aniston. \"If I may continue with our prepared remarks, some of your questions, particularly about the Board of Commissioners, may be answered...\"\n\n* * * * * * * * * * * * * *\n\nThe next persons to approach the podium to address us was well known to me. \"My name is Myrtle L. James, and this is Barbara Langram.\" I remembered Barbara Langram as being in the 'Hot Wives Investment Club' as its Treasurer. Mrs. Myrtle L. James was an icon in this County as well as being a University Regent.\n\n\"Nice to see you again, Mrs. James.\" I said. \"How can we help you tonight?\"\n\n\"Thank you Commander, ladies and gentlemen.\" replied Mrs. Myrtle L. James. \"I am here representing the Ladies Auxiliary Club as well as other groups. While we do not necessarily oppose the Chamber of Commerce's position on dissolving the Town & County Council, I want to suggest if the Council is dissolved, then a vote should be allowed to split the Town and the County into separate entities again...\"\n\n* * * * * * * * * * * * * *\n\nThe session ended at 10:30pm. Everyone in the audience had left, and we were packing our things to go.\n\n\"Those were some very interesting ideas that were brought to us.\" said Edward Steele.\n\n\"Now we know who was behind those rumors of abolishing the Council.\" said the Rev. Dr. Joseph E. Williams. \"But I could never quite figure out just why they're advocating it.\"\n\n\"Control.\" I said. \"It's a lot easier to elect and control one Mayor than ten Council Members. My surprise was Mrs. Myrtle L. James wanting to split the Town and County again if we abolish the Council.\"\n\n\"How do you all feel about that?\" asked Edna Carter.\n\n\"It won't really affect the legal and Court system,\" said Savannah Fineman, \"but it'll be expensive as heck to do, to separate the services... especially the Police and Fire Departments.\"\n\n\"True.\" I said. \"And they would split... not much point in having a separate Town and County if they still have combined Public Safety components.\"\n\n\"So, Don,\" said Edward, his voice suggesting joviality, \"which way will you go to? Town or County Police?\"\n\n\"Harrumph.\" I said. \"Let's hope we never have to find out.\"\n\n\"Maybe that's why they want it, Commander.\" said Rev. Williams. \"One or the other gets you out of their hair.\"\n\n\"That could be.\" I said agreeably. \"But we'll have to talk about this later. I've gotta go. A very dangerous criminal escaped custody today, and I need to see if there is any progress on getting him back into custody.\"\n\n\"Is that why there's so many checkpoints on the roads again?\" asked Savannah Fineman. I just nodded, then grabbed my briefcase and said my goodbyes as I left the chamber.\n\nPart 26 - Ridge Redux\n\n11:00pm, Wednesday, June 12th. I went into Police Headquarters. Captain Teresa Croyle was in her office, and followed me to mine as I passed her office. I noted that Detective Teddy Parker was working at his desk in MCD, and that he was alone in the room.\n\n\"The main searches are being done out of the two Precinct locations, County Jail and the Old Mill.\" Teresa reported, standing in front of my desk, despite my effort to get her to sit down. \"So far there's no sign of Trent Ridge at all, but I got a report from the Officers at the checkpoint going into Coltrane County that people are increasingly asking what the stops are about, and are complaining more strongly about it than in the past. Some have said they're going to contact their Council members and maybe their State Legislators about it.\"\n\n\"They have that right.\" I said.\n\n\"We did find out one thing.\" Teresa said. \"Myron checked on Amber Harris's ankle monitor. It's been at her home, her new condo home, all day, not moving at all. But a street camera caught her car on one of the roads near where Trent escaped the van. Myron thinks she's found a way to mimic the signal, or a way to get the ankle monitor off.\"\n\n\"Or, more likely, she's had help in doing so.\" I replied.\n\n\"Yes.\" Teresa said. \"Anyhoo, we've increased patrols in the area around her condo complex, in case she's been aiding and abetting him. Ditto that for Bettina Wurtzburg, but nothing out of the ordinary for her. She's been fucking some University student who is interning at KXTC, and he's with her tonight.\"\n\n\"Good.\" I said. \"And Myron may be right. Amber was at the scene at BOW Enterprises, several Officers saw her, but her ankle monitor never recorded being there. I wouldn't be surprised at all if she and/or Bettina were helping Trent. She better be careful, though; he'll kill just as quickly as he'll take her to bed. Anyhoo... how's Todd doing?\"\n\n\"Good.\" said Teresa. \"Laura thinks his nut is going to heal and won't have to be removed. It probably won't produce sperm anymore, though, which doesn't matter to me since I have no eggs for him to fertilize. His whip lacerations are healing, though more slowly. They may release him from the Hospital as early as tomorrow, and then I'll have to be the one to keep his wounds moisturized and change the bandages.\"\n\nI nodded. \"Yeah, he went through a lot. Good thing he has you to come home to. And you've been through a lot, too. If you need some time off, if you want to go up to my place at Lake Watchacoochie...\"\n\n\"I'll pretend you didn't say that.\" Teresa said. \"Seriously, sir, I appreciate it, but work has been my antidote to the emotional pain. And with the threats to your children out there, I'm going to stay right here and do my part to make sure Carole inherits your crowbar one day.\"\n\nI smiled. \"I appreciate that.\" I said. After a momentary pause, I said \"She's not even six yet, and she's already mentally tougher than I ever was.\"\n\n\"She's a great kid.\" Teresa said. \"Like her father before her.\" She turned to go. \"I'll let you know if anything develops with Trent Ridge.\"\n\n\"Thanks.\" I said. \"I'll be heading home soon.\"\n\nA few minutes later I came out of my office. I'd changed from the suit and tie I'd worn to the Charter Commission meeting and back into the all-black clothing I'd been wearing earlier in the day. Instead of going out to my car, I went to the front Duty Desk.\n\n\"Anything, guys?\"\n\n\"No sir.\" said the Duty Desk Sergeant. \"And it's starting to quieten down on the streets, which makes it easier for our patrols. If that guy so much as sneezes, we'll get him.\"\n\n\"Okay, thanks.\" I said. Instead of going out, though, I went into the room with the loading elevator and stairwell to the downstairs areas. I took the stairs, using my ID and passwords for each door, then went down the basement hallway to the I.T. room. \n\nThe office in the corner that has been my original office when I joined the TCPD was now Myron's. I used my Master key that unlocked every door in Headquarters (even the one to the Chief's office and all the Internal Affairs office doors) and went into the office.\n\nMyron had once hooked up a ham radio to all the TCPD precinct antennas so that he could triangulate signals. (Author's note: 'Pink Lemonade', Ch. 04.) He had never taken that apart, and the radio was still in the corner of his office. I went to it and turned on the power to it, set it to a certain frequency, then hooked a small device into it that gave me GPS coordinates of any signal at that frequency.\n\nThe device I'd injected into Trent's shoulder during that otherwise stupid fight in the jail cell was a tiny transceiver. If a radio signal of a certain frequency hit it, it transmitted a signal back of a slightly different frequency. The device was too small to transmit a strong signal, but detectors these days were getting better and better. The Government had crony businesses like the phone companies and MegaTech Industries providing them with the technology. I had Professor Marvin Milton and BOW Enterprises helping me out.\n\nThe Police radio towers were good enough in tandem for me to detect what I was looking for. And I recognized the location: Amber Harris's old house, in the Kensington district.\n\nI remembered going there and making some arrests. (Author's note: 'Fire in the Hole', Ch. 03.) Since then, with her divorce in progress, Amber had moved into a condo. Ownership of the house was being contested, but both sides had agreed to put it up for sale, and it was now empty.\n\n* * * * * * * * * * * * * *\n\nI drove up to The Cabin. Going in, I found that the boys and Molly were all asleep, but my mother Phyllis was still awake.\n\n\"Ah, hello son.\" she said when I came in the front door. \"I thought you would go to the Mountain Nest.\"\n\n\"I just came by to get something to eat. I'm starving.\" I said. \"And then I'm going to go back to Headquarters and keep looking for Ridge.\" I rummaged through the refrigerator and found some cooked hamburger patties and some chocolate milk. I heated up the patties and some buns, and feasted on the burgers and chocolate milk. Good stuff!\n\nAs I ate, my mother said \"Your Lieutenant Milton brought me a jump drive with the photographs on my cell phone. He said I needed to just buy a new phone, as he could not guarantee the old one was completely free of that virus that came with that text.\"\n\n\"Probably a good idea.\" I said. \"So, what's going on up in Apple Grove?\"\n\n\"It's growing.\" said my mom. \"With the BOW Enterprises construction going on, and other companies coming in, Fillmore County is starting to grow. Your Bed & Breakfast is doing very well, they have guests almost every week, usually the executives of the companies coming in.\"\n\n\"And of course growing pains are coming with it.\" Phyllis continued. \"The Apple Grove Police and the Fillmore County Police are going to be hiring. If you'd like a job with them, now is the time to apply.\"\n\nI grinned. \"I'm very happy here.\" I replied. \"So no problems up there?\"\n\n\"Not that I'm aware of.\" my mother said, though I caught a slight inflection in her voice that suggested she was aware of something, but was not ready to tell her only son what that was. At least not yet...\n\n* * * * * * * * * * * * * *\n\nAfter eating, I left The Cabin, but not in my Police SUV. Instead, I drove the Black Beauty out of the far-side garage and down the hill. It was on 'silent running', which meant that all possible radio transmission signatures were being suppressed or shielded, and it would not show up on any detectors.\n\nI drove to the Kensington district, seeing a number of TCPD patrols in the area. The houses in this area were aligned on the straight east-west and north-south streets, with the east-west streets running for long stretches. Between the rows of homes on their back sides were two-lane gravel strips, upon which the garbage trucks drove. I drove the Black Beauty down one of those two-lane strip roads and stopped at the corner of the property that was Amber Harris's old house...\n\n* * * * * * * * * * * * * *\n\nTrent Ridge lay on the two yoga mats, with a sheet covering him. His shoulder was hurting him, and he was exhausted. Losing twice to that bastard Troy in personal combat was humiliating enough, and the tension of his getaway had drained him of energy once the crisis moment was passed. \n\nBut he was also tired from the sexual workout Amber Harris had put him through. After picking him up after he easily escaped the Police van, she'd driven him here. She'd left for a while, then at dusk had brought him some food. After eating, the hot athletic blonde had voraciously sucked Trent's cock like a starved whore, swallowing every drop of his load. Then she had fucked him in several positions, ending up with him on top of her and coming deep inside her pussy after an intense 'fuck to pop' pounding.\n\nHis years of missions in foreign lands had taught him to sleep lightly. He heard the sounds of dogs barking and the occasional car passing on the road. He wondered what time it was, estimating it to be around midnight.\n\nAnd then he heard something, and came fully awake. He sat up, squinting to see in the near totally inky black darkness, his ears straining to hear.\n\nNothing, he thought to himself. I'm just jumpy. He lay back down...\n\n*creak...*\n\nHe opened his eyes again. He looked up, seeing only blackness. Then he realized that something was moving!\n\n\"What the...\" he gasped, sitting up.\n\n*ZZZZZT!*\n\nThe powerful voltage of the TASER coursed through him. When it stopped, he barely felt something pressing against his neck, then injecting him with a dose of sleeping agent, and his eyes fluttered shut...\n\n* * * * * * * * * * * * * *\n\n\"Uhhhh...\" Trent Ridge groaned as he regained consciousness. He tried to move his arms, but could not. As he came awake, he realized that he was sitting in a metal folding chair that was up against a pole, and that his arms were handcuffed around the pole behind him. He saw a small camping lantern with an LED light in front of him, but nothing beyond it's dim, bluish light.\n\n\"Where am I?\" he asked aloud.\n\n\"In Hell.\" replied a low, deep voice. \"Or the entrance to Hell.\"\n\n\"Who's there?\" Trent asked.\n\n\"Your worst nightmare.\" he looked over to see Your Iron Crowbar in the dim light, sitting on another folding chair. \"Don't you recognize this place? Oh, that's right. You and Quint didn't follow the nuke into the County after you ambushed those men and killed Randy Smith.\" \n\nWe were in the red-metal-walled building where the nuke had been parked in its truck trailer. Trent was able to see a few 55-gallon drums on the edge of the lantern's field of light, and he could smell the malodorous chemicals.\n\n\"Not that it will do any good,\" Trent said, \"but I want a lawyer.\"\n\n\"I'm sure you do.\" I said.\n\n\"What do you want, Troy?\"\n\n\"Like I told you earlier today,\" I said, \"I only have one question.\" With that I reached into the inner pocket of my trenchcoat and pulled out a small billfold. Opening it, I extracted the one syringe in it, filled with a clear blue liquid.\n\n\"This is going to hurt you a lot more than it's going to hurt me.\" I growled. I then injected half the contents of the syringe in Trent's upper back, then the other half into his lower back, just above is coccyx bone.\n\n\"AUUUGGHHHH!!\" Trent screamed as the pain began taking him. He began thrashing against the cuffs securing his arms to the pole and his legs to the chair.\n\nI just watched, noting the time. For long minutes Trent screamed and thrashed in agony. \"What do you WANT?\" he asked.\n\n\"I only have one question.\" I said. I noted that some biological smells were accompanying the chemical smells in the room; Trent was losing control of his bladder and his bowels.\n\nIt was hard listening to his shrieks of agony, but I reminded myself that this bastard had murdered people, committed atrocities in Iraq... but worst of all had tried to kidnap my daughter, then tried again with the intent to murder her. No, it wasn't too hard.\n\n\"I'll tell you everything!\" Trent shrieked. \"What do you want to know? I'll tell you!\"\n\n\"I only want to know one thing.\" I said. I waited.\n\n\"I don't know where Westboro's gold is! We never found it!\" Trent screamed out.\n\n\"That's obvious.\" I said. \"He who has the gold, makes the rules. And you're not the one making the rules here. But that doesn't matter... I only want to know one thing.\"\n\nTrent began babbling. He gave addresses of safehouses in the upper part of the State. I said nothing. He gave the phone numbers of contacts, and the passwords to use. Then he shouted \"Blassingame... Edward Blassingame... he was behind the nuke incident...\"\n\n\"You're lying.\" I said.\n\n\"No... I'm not.\" Trent gasped through the excruciating pain he was feeling. \"He... sent Dick Granger... and Jerry... B... B... Barsbane to... Idaho... then to...\" He named Teresa's hometown, then several other towns, including Barstow, California. \"He... wants to control... the routes... for troop transportation...\"\n\n\"You're boring me.\" I said.\n\n\"Then what... do you WANT?\" Trent asked. \"I'll tell you anything! Just make the pain stop!\"\n\n\"I only want to know one thing.\" I said.\n\n\"Blassingame's contact... in the Government... FBI... Andrew Parsons... MegaTech contact... Mai Ling... Senator Samuel Russell... Curtis Meigs... BigRoadAndRail... Arthur Wood...\"\n\nRidge had been vomiting, now his thrashing caused the chair to turn over, and he landed in his own puke, still thrashing. \"Make it stop!\" he yelled.\n\n\"I only want to know one thing.\" I said as I patiently watched.\n\n\"All right...\" gasped Ridge. \"I'll give you the names of the top guys. They don't know I know, but I know...\"\n\nI didn't even bother to say anything.\n\n\"They're all... in the... Intelligence Community.\" gasped Trent. \"Top guys... Warren Bern... point man... Brendan Chapel... the DNI... he's the top guy... they're going to have him... run for Vice President... then assassinate the President... AAAUUUGGHHH!!\"\n\nTrent Ridge did not speak again. He soon became a quivering mass of pain as his body began shutting down. I just watched...and remembered Ivar Irwin... \n\n* * * * * * * * * * * * * *\n\nDawn was breaking over the eastern horizon as I drove the Black Beauty through the streets of Town. Trent Ridge's dismembered body would never be found; the 55-gallon drums were half-full of sulfuric acid, and labeled as industrial waste, and now that acid was dissolving some biological material. I would remove the drums and have them disposed of with other hazardous wastes in the near future.\n\nI drove north on Riverside Drive, past Police Headquarters, my true home here in my Town & County. I turned east onto College Avenue, retracing the funeral route of Ivar Irwin... Joe Smedley... Pete Feeley. I passed by First Baptist Church, rebuilt.\n\nAs I took the road up to The Cabin, I thought about what Trent Ridge had said, without me even asking a question. I did not need to ask any questions. It wasn't an interrogation. \n\nThere was only one thing I wanted to know. How long would it take for my nephew Ned's brutal chemical concoction to kill the person into whom it had been injected?",
        "I thought I was going to find out when the despicable reporter John Hardwood had been captured after trying to murder my daughter, but Carole's mother had intervened and ended his worthless life, as was her right to do. (Author's note: 'Teresa's Christmas Finale', Ch. 03.) And then, like John Hardwood, Trent Ridge had tried to bring harm to my little girl. I only wanted to know how long it would take for the drugs to complete their mission, and for him to die.\n\nAnd now I knew.\n\nPart 27 - Epilogue\n\n8:00am, Thursday, June 13th. There had been no coffee klatch this morning, and all of Police Headquarters was quiet, with a pall seeming to hang over everyone. Captain Teresa Croyle was in her Duty Dress uniform, as were Chief Moynahan and Sheriff Griswold. In just a few minutes, she would be called into the Chief's office, to be disciplined for her insubordination to the Chief during the crisis at BOW Enterprises.\n\nTeresa and Deputy Chief Cindy Ross, attired in her normal duty uniform, were sitting in Teresa's office, awaiting her summons. Teresa had an envelope on her desk in front of her, a letter sealed inside.\n\n\"You don't have to do this, you know.\" Cindy said.\n\n\"I know.\" Teresa said. \"It'll depend on how it goes. I'm not backing down. I should have been the one leading that mission, not Irwin. He's dead because of me.\"\n\n\"No, he's dead because of karma.\" replied Cindy. \"It was his time. And he promised he would get Todd out alive, and he kept that promise. It was what it was, and it is what it is.\"\n\n\"I should've been even more insubordinate----\" Teresa started.\n\n*KNOCK!* *KNOCK!* *KNOCK!* *KNOCK!*\n\nTeresa and Cindy looked at each other. Cindy shrugged, then Teresa called out \"Come in!\"\n\nThe door opened, and in walked Your Iron Crowbar. I was also in a Duty Dress uniform. Teresa stood up, but I had her sit back down.\n\n\"Sit back down.\" I said. \"I came here to give you this.\" I extended a piece of paper. \"That is a direct order from your direct superior Officer that you are not to go into the Chief's office for any formal discipline on this matter.\" When both Teresa and Cindy gasped, I just said \"I've got it taken care of.\" I took Teresa's sealed envelope off her desk, put it into the inner pocket of my jacket, then turned and exited the office.\n\n\"What the hell?\" Cindy asked softly.\n\n\"I dunno.\" said Teresa. \"I just hope Don isn't doing something... 'direct' again...\"\n\n* * * * * * * * * * * * * *\n\nI went into the anteroom of the Chief's office suite. His assistant Cassie looked at me strangely, but did not stop me as I came up to the Chief's door and knocked, then opened the door upon hearing the words \"Come in.\" on the other side.\n\nI went into the office, closing the door behind me, then came up to the Chief's desk and stood at attention, noticing Sheriff Griswold looking quizzically at me from the sofa to the door's left, the Chief's desk's right. Chief Moynahan also was looking at me questioningly.\n\n\"Commander,\" he said, \"I did not call for you, and I'm about to have Captain Croyle's discipline hearing.\"\n\n\"Yes sir, I know.\" I said. Then I drew up even more straight and said \"Chief, I've given Captain Croyle a direct order to not come to this disciplinary hearing. Whatever you were going to do to her, sir... you can do it to me, and I'll take it.\"\n\nThe Chief glanced at the Sheriff, who was dumbfounded, then back up to me. \"Why, Commander?\" he asked.\n\n\"Because, Chief,\" I said, \"it should have been me. The answer Captain Croyle gave you... should have been my answer. And I should've done what I wanted to do... lead that rescue myself, no matter what the cost.\"\n\n\"Furthermore, sir,\" I continued, \"I won't say it in public, but I'll say it here... Finneran may have been right, this time: the best person to lead that mission was Captain Croyle, the family situation notwithstanding. She's faster, quicker, than anyone on the Force. She didn't go only because Lieutenant Irwin made a promise to her that he would get her husband out alive. And he kept that promise, at the cost of his life. He showed the loyalty to her that she has shown to me, and I failed them, both of them. His death and her actions are my responsibility, and I will be the one to take the consequences, sir.\"\n\nThe Chief glanced over at the Sheriff, who was now sitting back and looking more normal for him. Then the Chief looked up at me and said \"Any... other... reasons why you're doing this?\"\n\n\"Yes sir.\" I said. I pulled out the envelope I'd taken off Teresa's desk. I did not need to be Carnac the Magnificent to know what was in it. \"This is Captain Croyle's letter of resignation. Not retirement that she's entitled to, but her resignation. I cannot, and do not care to, run your Police Department without her as my Captain of Operations. I don't care to take the chance that she would give this to you, and make something... irrevocable. Therefore sir, I submit myself for disciplinary action in her stead.\"\n\n\"That is some loyalty, Commander. On your part.\" said the Chief. He held up the red folder on his desk. \"I could still administer this to her, you know.\"\n\n\"But you won't, sir,\" I said, \"if you administer it to me, as would be proper.\"\n\nThe Chief stared at me for a long moment, then thrust the red folder in my direction. \"Here, take it. Do whatever you want with it.\" I reached forward and took the folder, then the Chief said \"Now get out of here. Before I change my minnnnndddd.\" I executed a crisp 'about face', then walked swiftly to the door and exited the office.\n\nI went into my office, took the folder apart, and put the papers into my cross-cut shredder. Then I shredded Teresa's resignation. I put the shredded pieces of paper in a Pyrex bowl (that I use for popping popcorn or heating soup, if you need to know) and took it outside into the employees's parking lot, whereupon I set fire to the shredded paper. I watched it burn until nothing was left but ashes.\n\nI looked up, to see Teresa watching me from the building's side entrance. We just looked at each other for a moment, then I began walking to the door. We went back inside together, no words needing to be said...\n\n* * * * * * * * * * * * * *\n\n\"I should have known.\" said Chief Moynahan as he and Sheriff Griswold watched the Police Commander's display of pyrotechnics from that side's window of his office.\n\n\"What's that?\" asked Griswold, his mustaches twitching.\n\n\"The loyalty.\" said Moynahan. \"We had something like that in Midtown, Evans, and Masters, and Soltis and I. We had to. We didn't know who was clean or dirty down there, and we knew we only had each other that we could trust. And we forged very close bonds as a result. Just as you, Charles, and Smedley did.\" The Sheriff nodded.\n\n\"But here, and now...\" the Chief continued, \"it's a lot deeper than that. A lot deeper. These guys, they don't do favors for each other, then wipe the slate clean. Troy saved Croyle's career, she saved his daughter, and now he's saving her career again, putting himself on the line for her. Ross took bullets for him, and he led that mission to get her back from that Clinton County hellhole. Perlman was targeted in order to hurt him, and she lost the use of her legs... and he busted his butt to get her back on this Police Force. That is... some loyalty.\"\n\n\"They're family.\" said Griswold. \"All of them... Don, Cindy, Teresa, Tanya.\" He did not say his own name, though he could have. \"They're more than blood family, more than a Police family...\" The Sheriff's eyes gleamed with something more than pride as he finished:\n\n\"...they are truly the Clan of the Crowbar...\"\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "iron crowbar",
        "mystery",
        "police drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/a-death-in-the-family-ch-04"
}