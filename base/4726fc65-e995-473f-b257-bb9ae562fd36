{
    "title": "Mason Ch. 12",
    "pages": [
        "Toni sat up long after Mason left and Jamie was asleep thinking about the brief kiss. Like the kiss on the cheek it wasn't an erotic kiss but it could have easily turned into one, the thought made her nervous. To help her relax, she unpacked her clothes and hung them up in the closet trying to figure out what to wear to dinner with Mason. She had several outfits to choose from but then decided not to wear any of them, somehow it didn't seem right. After she took Jamie to her parent's house, she would do the one thing that she hated more than anything that she could think of, she would go shopping.\n\nShe stopped unpacking long enough to take a good look at herself, maybe a visit to the hairdressers was in order and while she was at it a manicure and pedicure. It occurred to her that she was acting like a teenager going out on her first date. In a way she supposed, that she was, not the teenager part but going out on her first date. She hadn't been out with anyone since James and wondered if the rules of dating had changed.\n\nToni's stomach gave a nervous lurch, she was tempted to look at that last disc again but didn't. James had given her the freedom to be with someone if she chose to be, it was time to accept that gift whether it be with Mason or someone else. She couldn't deny that she was attracted to Mason and that she liked him, what was there not to like? He was tall- she had always been partial to tall men, he was a gentleman who was hell of a cook and he liked Jamie. It was a sincere like, not the kind of pretend like that people sometimes did when they were attracted to someone with kids and Jamie liked him in return.\n\nWhen the last of her clothes was hung, she unpacked the boxes containing her underclothes, \"new ones\" she mumbled adding underclothes to her list of things to buy along with shoes and accessories for whatever outfit that she purchased. Finally finished, Toni took a hot soak in her Jacuzzi/bathtub grateful that no one was living below her as the sound of the jets filled the bathroom. Toni carefully climbed out of the tub, dried off and applied a liberal amount of 'Keri oil' to her dark skin before putting on her pajamas. She brushed her teeth, turned out the bathroom light and went into her bedroom to find Jamie sitting on her bed.\n\n\"Jamie? What's wrong?\" Toni asked.\n\n\"My stomach hurts.\" he replied as he rubbed his stomach.\n\n\"Too much popcorn huh?\" Toni asked sympathetically. \"Come on, lets see if we can find the mint tea.\" she said holding out her hand.\n\nAn hour later, Jamie was back in bed saying that he felt much better. Toni sat on the edge of the bed until he fell asleep and then went to her own bed. For once, sleep came easily.\n\n*******\n\nMason drove home thinking about how soft Toni's lips felt pressed lightly to his, it was all that he could do to walk away before he turned the kiss into something that he didn't think that she was ready for. The one thing that he was sure of was that Toni was drawn to him as he was to her and that she was struggling with the feelings, if she wasn't then she would be. He hadn't decided on what restaurant to take her to and had given some thought to calling Ethan's Caesar for a night at his restaurant but it was too short a notice and it might be a bit much. He would save that for another time, for a special occasion of some sort. \n\nHe arrived home to several messages all of them from Joyce.\n\n\"Hey Mason!\" she said in a cheery voice. \"I was wondering if you could cover me tomorrow night. There's a concert that I've been dying to go to and a friend has extra tickets, call me no matter what time it is.\"\n\nMason hit the delete button, he wasn't going to do anything of the sort, and Toni came first. It was the last message that made him call Joyce back.\n\n\"Hey Mason, it's eleven and you're not home yet or are you busy with Toni? Call me back when you're done!\"\n\nMason picked up the phone and dialed Joyce's number. It rang three times before she finally answered it.\n\n\"Mason? It's about....\"\n\n\"What did I tell you about minding your own business?\" Mason interrupted.\n\n\"What's got your panties in a wad?\" Joyce asked surprised at Mason's tone.\n\n\"We talked about this.\" Mason said. \"Stay out of my business.\"\n\nJoyce was silent for several seconds, \"Mason look, if you don't want people talking about you and Toni then you need to stop having lunch together, of course then the topic will be why you split up so it's a catch twenty-two. I will admit that leaving that message on your machine was well... not the best thing to do but I thought that we were friends and friends do tease.\" she said.\n\nJoyce was right he realized. If he didn't want any talk about him and Toni then they shouldn't have been seen together at the hospital but that didn't change the fact that Joyce was a busybody and they were not friends.\n\n\"So,\" Joyce said. \"About tomorrow night....\"\n\n\"No.\" Mason said.\n\n\"No?\" Joyce asked surprised by his answer. \"Why not?\" she asked.\n\n\"I don't have to give you a reason.\" Mason said. \"The answer is no.\" Mason said and then hung up before Joyce could say anything else.\n\nAs much as he hated to admit it, Joyce did have a point. They were in a catch twenty-two situation, \"fuck\" he grumbled and then stopped short. He couldn't talk like that with a child around, \"oh fu...\" he started to say and then stopped himself. Maybe he could curse in private he thought to himself but then decided that the best thing to do would be to stop cursing altogether. It occurred to him that it was going to be difficult to break a centuries old habit but for Toni and Jamie, he would try.\n\n*******\n\nToni was up just after nine because she heard Jamie in the kitchen. She got up, put on her house robe and went to see what he was up to.\n\n\"Morning.\" Toni said interrupting him.\n\n\"Hi mom.\" Jamie greeted.\n\n\"What are you up to?\" Toni asked.\n\n\"I was going to make pancakes for you.\" Jamie replied.\n\n\"I see.\" Toni replied with a smile. \"So Chef Jamie, do you know how to make pancakes?\" \n\n\"I watched gramma and it looks easy.\" he replied.\n\n\"Why don't we do this, when you go to grammas and grandpa's house today, you ask her to write the recipe down and then we'll try to make them here?\" Toni suggested.\n\nJamie's face scrunched up in thought but he finally agreed.\n\n\"Good, now let's get dressed and we'll go get breakfast before I take you over to gramma's house.\" Toni said as she ruffled Jamie's head. It was too long and needed to be cut, she would ask her dad to give him a hair cut sometime during his stay there.\n\nAs Toni dressed, she made the phone calls to the beauty salon and to the boutique she shopped at on the rare occasions that she shopped.\n\n\"Amanda? Oh good you're there. This is Toni Jacobson, I'm fine thank you. I need a new outfit and was hoping that you would be there to help me out. Great! I'll be there sometime later in the morning. See you then.\"\n\nToni's stomach gave another nervous lurch, tonight she would be going out with another man. She was surprised to find that just as she was nervous, she was excited as well and maybe just a little bit scared. The fear wasn't because she thought that Mason would hurt her, it was because she was beginning to see him as a man that she liked being around. For a few brief seconds, the slight fear turned into panic and then eased turning back into being just a little scared. \n\n\"I am not betraying James.\" Toni murmured to herself. \"I am not betraying him, he would want me to do this.\" she added and finished dressing.\n\nJamie was reading the last book that he and Mason read together. Toni could see his lips moving as he sounded out the hard words. He would have an advantage when he started school next year. School. Her baby was going to be going to school next year; it was time to start thinking about private versus public school but not now but later when she had the time to really think about the options.\n\nThey had breakfast at 'Denny's' which had remained her favorite place even after James had died even though she rarely went and had never taken Jamie there. The staff all knew them and many of them had gone to James' funeral service. The manager greeted her at the door with a smile.\n\n\"Dr. Jacobson! It's been awhile. And who is this handsome young man?\"\n\n\"I know it has and this is our son Jamie.\" Toni replied.\n\n\"It is very nice to meet you Jamie.\" the manager said. \"You're favorite booth is open if you want it.\" The manager said to Toni.\n\nToni hesitated and almost said no but then agreed. She took Jamie's hand and followed the manager to the booth. When they were sitting, she said to Jamie, \"When your papa was alive, we used to sit right here every time we came here for breakfast. As a matter of fact, you're sitting where he used to sit.\" Toni said.\n\nJamie appeared suitably impressed and from that time on, whenever they ate at that 'Denny's he always sat there. Toni looked at Jamie and missed James, he would have been so proud of Jamie and she told him so.\n\n\"What did papa like to eat?\" Jamie asked as he looked at the menu.\n\n\"He liked the 'grand slam' breakfast with the eggs scrambled.\" Toni replied.\n\nJamie chewed his lower lip like he always did when he was thinking. When the server came for their orders, Jamie ordered the same breakfast that James' always ordered bringing tears to Toni's eyes. That he wouldn't eat nearly all of it didn't matter, it was the thought behind the order that counted.\n\nToni ordered her usual order, a 'Denver omelet' and a cup of coffee.\n\nJamie ate a little more than a quarter of his meal before declaring himself full.\n\n\"Can I take the rest to grammas? He asked.\n\nToni had the remaining food packed up; she paid the bill and left the restaurant with promises to return soon.\n\nAfter dropping Jamie off, she went for her manicure and pedicure. She had forgotten how much she had enjoyed being pampered. It wasn't something that she had done a lot of and when she did, it was because James took it upon himself to make an appointment for her sometimes including the whole spa package. She would often protest that they didn't need to spend money for things like that and he would just kiss her and push her out the door.\n\n\"Sweetness, you deserve to be pampered so go and enjoy, I'll be here when you get back.\" he would say.\n\nHer nails really did look bad but by the time the manicurist was done, they looked absolutely gorgeous. The color of the polish that she chose was a deep red, her second favorite color. The nails on her hands looked so good that she decided to have her toes painted in the same shade.\n\nThe hairdresser was the next stop. Her hair had grown considerably longer but was in serious need of a trim. The hairdresser tried to talk her into putting blond highlights in her hair but Toni wouldn't budge.\n\n\"That just isn't me.\" she replied when the man asked her for the third time about adding some color to her hair.\n\n\"But a little change is good.\" he said as he examined Toni's hair. \"Just think about it, a little blond here and here...\"\n\n\"Look.\" Toni said finally out of patience. \"I don't want blond, blue or highlights of any kind; I just want a wash, a deep conditioning and a cut. Is that too much to ask for?\"\n\nThe hairdresser looked contrite.\n\n\"I'm sorry but they want us to push the other services and they actually listen to see if we are....\"\n\n\"I get it.\" Toni replied. \"What else do you have other than the coloring thing?\" she asked.\n\nToni walked out of the salon feeling like a million bucks. The deep conditioning had done wonders for her hair as well as the new cut that Julian gave her. She also left the salon with over one hundred dollars in hair care products and with Julian's card which made his day.\n\nAmanda was waiting for her at the boutique and greeted her with a hug.\n\n\"It's good to see you and I'm so sorry about James!\" she said.\n\n\"It's good to see you too.\" Toni replied and told Amanda what she needed.\n\nThree hours later, Toni left the boutique with a red dress that almost matched the color of the nail polish, matching undergarments and matching shoes. By the time she got home, it was almost four and Mason was coming at five-thirty. She grabbed a bottle of water from the fridge on the way to her bedroom tossing the sacks with her purchases on the bed on her way to the bathroom. She ran the bathtub and went back to the bedroom to take the dress out if the bag to hang it up. It was a nice dress she thought as she looked at it again, the top part of the dress showed off her large breasts without making them look obscene, the waist gathered in and then the rest of the dress flared out minimizing her hips and behind. The hem of the dress would end just an inch or two above her knees, the three inch red heels would give it a slightly sexy look.\n\n\"Am I really doing this?\" Toni asked herself as she undressed, added 'Keri bath oil' into the tub and climbed in. she turned on the jets and tried to relax. \"It's just dinner.\" she mumbled.\n\n*******\n\nMason had a very restless rest of the evening and day. Tonight was going to be one of the most important nights of his long life. Tonight, he hoped that the bond between him and Toni would kick in full force and that they could proceed to the next step-what humans called a monogamous relationship. They were already doing that but it wasn't \"official\" and wouldn't be until both of them acknowledged it as such.\n\nHe wondered what she would wear tonight but it really didn't matter, she would look lovely no matter what it was. The question was what was he going to wear? And he probably should have gotten his hair cut. It was longer than he usually wore it, it just barely touched his shoulders \"f...\" he started and then stopped himself. After deciding to leave his hair as it was, Mason went to his closet and looked through his many suits. The problem he realized was that they were all suits that he used for work.\n\nGoing shopping was out of the question, he loved shopping as much as he loved watching the news. He could wander around a store for hours and he didn't want to take the chance that he would lose track of time. In the end, he chose the suit that looked the least business like. It was the one that he wore the least specifically for that reason; it was charcoal gray with pinstripes that looked good with the gray dress shirt. To take away from the business look, Mason decided to forego the tie until he remembered that the restaurant had a dress code. It took him an hour to pick out a tie that he was satisfied with. As he was double checking the color combination of the suit, shirt and tie his cell phone rang.\n\nJoyce.\n\n\"Hey look, I'm sorry about last night.\" she said as soon as he answered, not giving him a chance to say hello. \"I shouldn't have left that on a message, so are you busy tonight? I really want to go to that concert.\"\n\n\"Joyce, I answered you last night, I said no and that hasn't changed.\" Mason replied.\n\n\"I can't bribe you somehow? I'll even work a weekend for you.\" Joyce said clearly begging.\n\n\"Sorry but I can't.\" Mason said and hung up.\n\nA few minutes later the phone rang again, this time it was Toni.\n\n\"Hey look. Maybe we could do this another night.\" she said.\n\n\"Why? Are you not feeling well?\" he asked concerned.\n\n\"No, it's not that it's just that... I don't know what it is.\" Toni said.\n\n\"Toni, are you nervous?\" Mason asked taking the bull by the horns.\n\nHer silence confirmed his suspicions. \"If it helps, I'm nervous too.\" he said.\n\nThat revelation surprised Toni; he could hear it in her voice.\n\n\"You? Why?\" she asked.\n\n\"You're not the only one that's going out for the first time since losing someone.\" he replied. He didn't consider what he and Gretchen had as going out, he didn't even consider it to have been a real relationship as it was only physical with no emotional attachment at least not his end and not too much on Gretchen's.\n\n\"I hadn't thought about that.\" Toni replied.\n\n\"You know, we don't have to go out if you don't want to. I can make dinner here and we could watch a movie if you want.\" Mason said actually liking the idea a little more than going out for dinner.\n\n\"I.... I don't know.\" Toni hedged.\n\n\"I don't bite and it would take some of the pressure off and I make a mean pasta. What do you think?\" Mason asked.\n\nThe more Toni thought about it, the better she liked the idea. \"What time do you want me there?\" she asked.\n\n\"I'll come for you as planned.\" Mason replied.\n\n*******\n\nAfter Toni hung up, she thought about what had just happened. \"What's wrong with me?\" she asked as she picked up the phone again.\n\n\"Mason, look, I changed my mind. Yes I'm sure. See you soon.\"\n\nAnd then she wasn't so sure but she refused to call Mason for a third time to tell him that she had changed her mind yet again. She glanced at the clock, time was racing by and she needed to start getting dressed, she oiled her body and put on the undergarments. The deep red color of the bra and panties looked good against her skin she decided as she looked at her reflection in the mirror. The black pantyhose went on next, Toni went slowly, she was notorious for poking holes in panty hose when she put them on; just to be safe, she bought two extra pair.\n\nToni slipped the dress on and examined herself again and decided that it would do, she applied a little lipstick not bothering with any other makeup, it was an art in which she had never become proficient at and she really didn't have the inclination to learn. She had just put her shoes on when the doorbell rang.\n\n*******\n\nMason was early but he couldn't wait any longer to see Toni. He stood at the door patiently holding a bouquet of roses. He felt himself calm as he heard Toni approach the door to let him in, tonight was going to be a good night he assured himself.\n\nWhen Toni opened the door, Mason's mouth went dry when he saw her. He had always considered her beautiful but tonight, dressed in red, she was beyond beautiful. He realized that he was staring at her and recovered himself.\n\n\"Toni, you look... beautiful.\" he told her handing her the roses.\n\n\"Thank you for the complement and the roses.\" Toni replied nervously.\n\nShe let Mason in so that she could put the roses in water. Her stomach was flipping so much that she was to the point of nausea. She took a deep breath to calm her nerves and rejoined Mason in the living room. He really is handsome she thought to herself. Physically his dark hair and eyes reminded her of James but that was where the similarity ended. Mason was taller than James had been by a good three inches and was bulkier where James had been muscular but thinner. Personality wise, the two men were polar opposites but they would have liked each other if they had met when James was sober.\n\nMason waited for a few seconds before offering Toni his arm, \"are you ready?\" he asked with a smile.\n\nToni smiled back and took the offered arm thankful that there were no nosy neighbors to watch them. Mason helped her into the car making sure that she was comfortable before getting in himself. The drive to the restaurant was quiet with neither of them saying very much, Mason was waiting for Toni and she was waiting for him. Finally, Mason had had enough of the pussy footing around and took charge.\n\n\"I've never been to this particular restaurant before so I can't vouch for how good it is.\" he said as he pulled up to the valet parking space.\n\n\"I'm sure that it'll be fine.\" Toni said.\n\nThe valet came to the car as soon as Mason stopped, while he talked with the valet that would be parking the car, the other valet opened her car door and moved to let her out. Mason excused himself and moved in to offer his hand to Toni. The valet's eyes widened in surprise and he murmured \"cool\" under his breath.\n\nAs Mason and Toni walked away, Mason had to wonder what was wrong with people today. It was or should be common courtesy to hold doors open or to assist a woman from a vehicle. Apparently such things were no longer taught to young men.",
        "They were greeted at the door by a pleasant young woman who led them to their table. Mason kept looking around the restaurant; something didn't feel quite right to him. He glanced over at Toni who was looking around just as he was. The restaurant looked clean; the staff was impeccably dressed so what was wrong? He wondered. Then it hit him, this wasn't Toni, she wasn't comfortable here and it had nothing to do with being on a date. She wasn't a dress up kind of woman, he didn't know how he could have missed that, even at home she was always in jeans or sweats and at work her dress was as casual as the dress policy would allow.\n\n\"Toni, let's go.\" he said taking her hand.\n\n\"What? We just got here.\" Toni said.\n\n\"I know but this doesn't feel right, let's go somewhere else.\" Mason said standing just as their server came to the table.\n\n\"Is everything alright?\" the server asked.\n\n\"Yes, the restaurant is lovely but I'm afraid that we must leave.\" Mason said as he helped Toni out of her chair.\n\nOnce outside Toni turned to Mason, \"mind telling me what that was all about?\" she asked.\n\n\"This place, it wasn't the right place to bring you for a first date.\" Mason said. \"I want tonight to be relaxed and not stuck up and stuffy. How about a drive up the coast?\" he asked. \"We'll find a place to eat on the way.\"\n\n\"But it's dark out.\" Toni said but secretly she was glad to be out of the restaurant. Every once in a while she and James would go to an upscale restaurant but it was usually because it was where his parents wanted to meet or there was some function to attend.\n\n\"The moon's out and it's much too beautiful a night to be indoors, what do you think?\" he asked.\n\nToni shrugged, \"I'm game if you are.\"\n\nA few minutes later, they were in the car and headed toward the water. Toni kicked off her shoes with a sigh of relief; she hated wearing heels as much as she hated dressing up. Before long, Mason pulled into the parking lot of a restaurant that he had heard about. They were much overdressed but they would both be more comfortable here.\n\n\"I've heard about this place.\" Toni said. \"They're supposed to have the best deep fried shrimp around.\" she added.\n\n\"I guess we're about to find out.\" Mason replied as he parked the car and got out.\n\nHe opened the car door for Toni and helped her out. Toni stood by the car, closed her eyes and listened to the sound of the ocean as the warm breeze blew across her hair across her face. Mason reached over and pushed her hair behind her ears without speaking. This felt right he thought as he waited for Toni to indicate that she was ready to go in.\n\nA few minutes later, they were inside of the restaurant sitting in a corner booth. After the first initial looks, everyone went back to eating their food. Their server was an older woman who could recite the menu from memory she had been working there for that long. \n\n\"What would you like?\" Mason asked as he looked over the menu that the server had just quoted verbatim.\n\n\"I don't know why you don't go first I should know what I want by then.\" Toni replied.\n\nMason looked at the server with a smile. \"Could you give us a few more minutes?\" he asked.\n\nThe server smiled back and left the table only to come back ten minutes later. This time Toni was ready but the server asked Mason for his order first. Mason deferred to Toni.\n\n\"Have you decided?\" he asked.\n\nToni ordered the jumbo butterfly shrimp, baked potato with all of the trimmings and a salad along with a Pepsi. Mason ordered the identical dinner with the exception of the drink, he had beer instead of the cola. When the server was gone, Mason leaned forward and said \"tell me about Dr. Toni Jacobson.\" in a conspirator whisper.\n\nToni leaned forward and whispered, \"There isn't much to tell.\" and then leaned back.\n\n\"I don't believe that.\" Mason said leaning back as their server came back with a basket of warm cheese biscuits and a plate of butter.\n\nToni shrugged, \"really there isn't much to tell. I'm an only child but you already know that. You know my parents who by the way are thrilled that we're out together. I've never wanted to be anything but a doctor, I never wanted to be a beauty queen or anything like that. I never saw myself as a wife let alone a mother just a doctor, nothing more and nothing less but you have me at a disadvantage, you know much more about me than I do you so tell me about yourself.\" Toni said as she took a bite out of one of the warm biscuit.\n\n\"Well, I have no siblings; my parents still live but don't live here in the states although they visit every so often. I like to watch the news and I read every newspaper I can get my hands on and as you know, I love to cook.\" Mason replied.\n\n\"Why psychiatry as opposed to other fields in medicine?\" Toni asked.\n\n\"I don't know, I guess I was and am still intrigued by the v... human mind.\" Mason said correcting himself before he said vampire. \"The brain is what catches my interest, the rest of the body is important but it is the brain that controls it.\" Mason replied. \n\n\"That's true but I like trying to figure out what's wrong with the body and leave the mental stuff to your profession.\" Toni replied. \"The question that I have for you is this, why leave a lucrative private practice to work at a hospital?\" she asked.\n\nToni was relaxed now; their conversation now flowed freely and without reticence. Mason was glad that they left the Italian restaurant.\n\n\"I started out in a hospital setting and decided to go back to it for a while. I haven't given up my private practice, I still see a few select patients.\" he replied.\n\n\"So it's the going back to your roots thing is that it?\" Toni asked not sounding convinced.\n\n\"Something like that.\" Mason replied keenly aware that Toni was more perceptive than she realized.\n\nTheir conversation was interrupted by the server arriving with their food. Toni took a bite of her shrimp and pronounced it excellent, a sentiment echoed by Mason. Neither of them spoke for several minutes as they ate their food. What Mason appreciated was that Toni ate like she normally ate; she didn't put on airs and pick at her food like some of the other human women that he knew. In watching her, he could see why James fell in love with her, hell he was in love with her himself.\n\nMason's fork stopped halfway to his mouth, he had just admitted to himself that he was in love with Toni Jacobson. When had that happened? He wondered. He knew that he was falling in love with her but at what point did he fall completely in love with her? \n\n\"Mason? Are you alright?\" Toni asked.\n\n\"What?\" Mason asked.\n\n\"I asked if you were alright, you just froze with your fork halfway to your mouth.\" Toni replied.\n\n\"I'm fine; I just had a thought is all.\" Mason replied putting the fork down on his plate.\n\n\"Care to share?\" Toni asked.\n\n\"I was just thinking that I'm glad that you agreed to have dinner with me.\" Mason replied which was true even if he hadn't been thinking about it at that moment.\n\n\"Wow, I never made someone stop eating before.\" Toni replied but she didn't believe him. He was lying to her again and she didn't understand how she knew that.\n\n\"Toni, I really am glad that you're here with me.\" Mason said quietly.\n\n\"Thank you for inviting me.\" Toni replied not sure of what else to say.\n\n\"You're welcome, how about a walk when we're finished?\" Mason asked. He knew that Toni didn't believe him when he told her what he had been thinking about but he also knew that she wouldn't call him on it.\n\n\"Sure, I need the restroom first though.\" she said as she looked around for the restroom.\n\n\"It's behind you.\" Mason said and stood when Toni stood and didn't sit down until she had walked away.\n\nWhen she came back, Mason stood again, held her chair for her as she sat down.\n\nThey heard an elderly man commenting to a younger man, \"You see that? That's what you call manners, that is how a man is supposed to treat a lady.\"\n\n\"Yeah well, this isn't the olden days.\" The young man countered. \"Women today don't want to be treated like that, they would call it sexual harassment or some shit like that. I'll bet that that woman didn't even like that he did that, she's just being polite and not saying anything.\"\n\nThis prompted Toni to speak.\n\n\"Excuse me but I couldn't help but to overhear your conversation.\" She said to the two men. \"I for one happen to enjoy being treated like a lady so I'm not just being nice about it. I will grant you that there are women who might be offended by the courtesy that my dinner date has shown but I think that there are more women who do appreciate it than not.\" Toni said before turning back to Mason. \"Sorry about that.\" she mumbled.\n\n\"Don't be, I have often wondered what happened to the art of being a gentleman....\"\n\n\"Which reminds me.\" Toni interrupted, \"Just how old are you? You look like you might be late thirties but forty tops but you have the mannerisms of someone much older.\"\n\nMason thought frantically, what age should he give her? \"You're a good guesser, I'm thirty-nine.\" Mason replied.\n\nHe just lied to me again Toni thought as she looked at him and she wanted to know why but this wasn't the place or time to bring it up. She was having a nice time but she was going to find out why he was lying to her, none of the lies were anything big or important but it bothered her that he felt that he had to lie to her.\n\nToni definitely was his mate Mason realized, she knew that he was lying to her and it was only a matter of time before she asked him point blank why and he'd better be ready to either tell her the truth or ....there was no or. He would have to tell her the truth.\n\nMason paid the bill, stood up and held Toni's chair out for her. Placing his hand on the small of her back, he guided her to the exit. They walked a short way from the restaurant and looked toward the ocean, the breeze blew Toni's hair in her face and once again Mason pushed it behind her ear. That was it he realized, that was when he fell in love with her, something so simple was all that it had taken. As much as he wanted to push things to their ultimate conclusion, Mason forced himself to slow down. He started out by wooing her in the human way; he would win her heart in the human way.\n\nThey walked for a few minutes before Toni gave up and took her shoes off relishing the feeling of having her feet free.\n\n\"What time do you need to pick Jamie up?\" Mason asked hoping that it wouldn't be too soon.\n\n\"He's staying with my parents for the night.\" Toni replied not seeing the glitter in Mason's eyes.\n\nIt was late well past midnight when he took Toni home. He walked her to the door and waited for her to unlock it.\n\n\"Would you like to come in for coffee?\" she asked.\n\n\"Only if I make it.\" Mason teased. He found out during the evening that coffee wasn't the only thing that Toni couldn't do, she couldn't cook either.\n\n\"How is that possible?\" he asked. \"Your mother is a wonderful cook.\" \n\n\"Yeah well, that was one of the things that I wasn't interested in.\" Tony had replied.\n\nToni got out the coffee and let Mason make it while she got out the mugs, sugar and creamer. Mason watched her out of the corner of his eye as she moved about the kitchen. He wondered what she would feel like in his arms but it was too soon to be thinking like that, it would only serve to get him more aroused than he was with no real way of relieving himself other than the obvious. To him that was no real option; he would wait for Toni and hope that he wouldn't have to wait for too long.\n\nToni put the coffee and creamer on a tray along side of the mugs and stood next to Mason waiting for the coffee to brew.\n\n\"I still haven't seen hide or hair of my neighbor.\" she said.\n\n\"Maybe he's just quiet or he's here the nights that you're at work.\" Mason replied.\n\n\"Maybe.\" Toni conceded as Mason poured the coffee into the mugs.\n\nToni had to wonder why Mason hadn't remarried or at least have a significant other. What woman in her right mind wouldn't jump at the chance to be with a man like him? As soon as the thought hit her, she realized that she really didn't like the idea of Mason being with anyone else.\n\nShit, she thought to herself as Mason followed her to the living room carrying the tray with the coffee, cream and sugar.\n\n\"Can I ask you a personal question?\" Toni asked when they were sitting and each had their mug of coffee.\n\n\"Of course although I don't promise to answer.\" Mason replied.\n\n\"What happened to her? The one that you lost I mean.\" Toni asked.\n\nSo it begins, Mason thought as he took a sip of his coffee to buy him a few seconds.\n\n\"She didn't die if that's what you mean.\" Mason replied. \"She's alive, well and happily married with twin daughters.\"\n\n\"I don't understand.\" Toni said, \"When you said you lost her I thought that you meant that she died.\"\n\n\"Toni, there's more than one way to lose someone. I lost Katrina-that is her name to another man, she was his ma....wife and while he was away, I fell in love with her.\" Mason said.\n\nToni was silent for a minute before she spoke, \"You had an affair with another man's wife?\"\n\n\"No, it wasn't like that at all. Ethan was and is a friend who needed me to watch over Katrina while he dealt with some personal issues. I didn't plan to fall in love with her, it just happened but you need to know that the feeling wasn't reciprocated. Katrina never saw me as more than a friend who was with her when she had the twins, it was my fault that I stayed as long as I did.\"\n\n\"Why didn't you leave?\" Toni asked believing him about the affair.\n\n\"I thought that maybe Ethan would fuck up and that she'd come to me but it didn't happen and to be honest, I knew that it wouldn't but I just couldn't make myself leave. When I left, I moved to Boston and joined a friend of mine in his practice.\"\n\nAgain Toni sensed no lie.\n\n\"Did her husband know how you felt about her?\" Toni asked.\n\n\"He knew but he also knew that I wouldn't act on my feelings, my sense of honor wouldn't allow me to.\" Mason replied.\n\nThere it was again, that old way of thinking but Toni found that she liked it and she was also glad that there had been no affair.\n\n\"And you and he are still friends?\" Toni asked somewhat surprised.\n\n\"We are.\" Mason replied\n\n\"The night that you helped me get James back to my apartment, she was the reason that you didn't want to have a drink with me wasn't she?\" Toni asked.\n\n\"Yes and I have to admit, I regretted turning you down.\" Mason replied.\n\n\"Do you still love her?\" Toni asked.\n\n\"I think that there will always be a part of me that will love her even though she didn't return my affections. Does that mean that I can't love someone else? Not at all. Katrina and I were never meant to be no matter how much I may wanted it. It just took me some time to understand that and once I did, I went through a grieving process similar to your own.\"\n\n\"I understand the love part of it.\" Toni said. \"Whoever I ended up with, if I ended up with someone would have to understand that I loved James and that is something that will never change but not only that, I will always love him. I know that it isn't fair but that's the way I feel.\" Toni said.\n\n\"I think I mentioned to you before that it would be unreasonable for someone to expect you to forget James and what you had together. He loved you very much and you have Jamie that you adopted and raised as your own, for that reason alone, you could never forget James and what you had together. May I ask you a question?\" Mason asked.\n\nToni hesitated before answering, \"Only if I'm under no obligation to answer.\"\n\n\"Fair enough, why did you initially change your mind about tonight?\" Mason asked.\n\n\"I... I thought that maybe I was betraying James somehow, that maybe Gina was right that it was too soon for me to be going out with someone.\" Toni replied.\n\n\"What changed your mind?\" Mason asked.\n\n\"James.\" Toni replied. \"The last disc that he left for me was his blessing for me to be with someone if I chose to be. He wanted me to be happy and told me that I wasn't supposed to feel guilty about it.\"\n\n\"And do you feel guilty about going out with me?\" Mason asked.\n\n\"Not anymore but I did at the beginning.\" Toni admitted with a small smile. \"By the way, I had a really good time.\" she added.\n\n\"Good enough to go out with me again?\" Mason asked.\n\n\"Good enough for that.\" Toni said blushing uncharacteristically.\n\nMason said a silent word of thanks and smiled at Toni. \"I think that the next date needs to include Jamie.\" Mason said as he sat his coffee cup down.\n\n\"He would like that, he was more than a little miffed that he didn't get to see you tonight and he wants to show off how well he can read.\" Toni said.\n\n\"I have to work tomorrow night, is it alright if I call you during my breaks?\" Mason asked.\n\n\"Oh, umm sure. I don't go to bed too early.\" Toni replied suddenly feeling a little too warm.\n\n\"Toni, tell me about James.\" Mason said. He wanted to know more about the man that Toni had grieved over for three years.\n\n\"What do you want to know?\" Toni asked.\n\n\"Whatever you want to tell me, I want to know about the man that loved you and Jamie so much.\" Mason said.\n\n\"This is really weird.\" Toni said. \"Most men wouldn't want to spend the evening talking about another man.\" \n\n\"I'm not most men and I think that you know that.\" Mason said.\n\nToni did know. She knew that there was something very different about Mason Donahue and she wanted to know what it was. It was more than his old fashioned mannerisms and his view on the way that he thought that women should be treated, it was.... What? She just couldn't put her finger on it.\n\n\"Tell me about him.\" Mason urged.\n\n\"James was probably one of the most patient men that I know....\"\n\nTwo hours later, Toni was still talking. Mason didn't interrupt her once, he had seriously misjudged James the first time that he met him. That didn't excuse him being so drunk that he couldn't have protected Toni but Mason did understand the pain of losing someone.\n\nHe felt Toni's pain when she realized that something was seriously wrong with James. He felt her sadness as she talked about how they had decided not to have children, they hadn't wanted to take the chance that their children would have the same condition that James did. He heard the happiness in her voice when they were at the hospital to see Jamie being born and then taking him home with them. Jamie's birth mother was completing her four year degree and headed toward medical school courtesy of James. \n\nBy the end of another two hours, Toni had told him about the events that led up to James' death.\n\n\"I didn't think that it was possible to hurt so badly. I felt as if my entire world had turned upside down. After James died, I couldn't even begin to think of going to work. I felt as if I should have known somehow like I did the first time, what didn't help was that Gina thought the same thing. Anyway, on the last disc, James made sure that I understood that it wasn't my fault. The thing is, we knew, both of us knew that he was going to die. That was why we spent so much time together during the last two years of his life.\" Toni wiped tears from her face with her hand and apologized for crying.\n\n\"Don't apologize, you still miss him and that's understandable.\" Mason said as he pulled a handkerchief out of the pocket of his jacket.\n\nHe wiped Toni's face and folded the napkin into her hand, \"keep it.\" he said as he moved away.\n\n\"Thanks.\" Toni said. \"I really didn't mean to talk about him so much.\" she added.\n\nMason really didn't mind, it was something that had to happen at some point anyway and he'd much rather it be sooner as opposed to later.\n\n\"It's alright, I asked remember?\" he said touching her shoulder.\n\n\"Yeah, you did and I bet that you won't ask again.\" Toni said sniffling.\n\n\"Toni, James was a big part of your life, if you say something about him or remember something that you used to do together, I won't be offended.\" Mason assured her.",
        "Toni didn't know what to make of Mason; he really was an odd bird she thought as she dried her eyes.\n\n\"How about we play miniature golf and get ice cream on Wednesday night?\" Mason asked changing the subject to something lighter.\n\n\"That sounds good but I have to warn you, I'm pretty damned good.\" Toni teased.\n\nMason laughed, we'll see but Jamie will probably kick both of our asses.\" Mason said forgetting his pledge not to swear.\n\nToni laughed, \"Actually, he is pretty good.\" \n\nIt was almost five when Mason left, during the last few minutes of their time together, he wondered if he should give her more of an erotic kiss. She had to know by now that he wanted more than friendship from her, there was only one way to find out and that was to kiss her and this time give her a chance to respond.\n\nMason carried the tray with the dirty mugs, sugar and creamer back to the kitchen and walked with Toni to the door.\n\n\"I really did have a good time with you tonight.\" he said smiling down at her. \n\n\"I did too, thanks for dinner and for letting me talk about James.\" Toni replied.\n\nMason took Toni's hands in his, bent down and kissed her. It was far cry from the kiss on the cheek or the lips that he had given her a couple of days before. This kiss left no question as to where he wanted their relationship to go; he broke the kiss and waited for Toni to say something. When she didn't, he kissed her again releasing her hands and pulling her into his arms. After the briefest of hesitations, Toni relaxed and wrapped her arms around his waist as she returned the kiss."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "bbw"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/mason-ch-12"
}