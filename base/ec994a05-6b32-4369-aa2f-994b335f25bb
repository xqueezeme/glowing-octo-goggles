{
    "title": "Coming to Grips Ch. 03",
    "pages": [
        "This chapter picks up immediately after the end of Chapter 2. Unless you have read the previous chapters, it will not make any sense. There is one more chapter to go, and that is being edited so it should a week or maybe a little more. Once again, I have to thank my editors, Terry and Snow. Both of them make this story possible. I owe them so much! I love both of you!\n\n*****\n\nMorning came much faster than Suzanne would have liked. Still, she answered the bell. When her alarm went off, she was out of bed in a minute and in the shower a minute or two later. If she took a little longer in the shower than normal, it wasn't by much. The rest of getting ready was quicker than usual. She had picked out a relatively conservative suit with a skirt and a high-necked blouse. She spent a little more time than she often did on her makeup. Overall, she was ready and packed in about half an hour. Because of timing, they would just check out now and keep their luggage in the conference room they were using.\n\nSuzanne kept herself so busy getting ready that the thought of what she would say to Colby had not even crossed her mind. Now that she was ready to go downstairs, it hit her with full force. It wasn't that she was worried about what Colby would think. Suzanne just didn't know what to say, and any explanation was complicated. It would take time that they didn't have now. After doing one last check to make sure she had everything, Suzanne grabbed her stuff and left the room.\n\nBy the time she checked out and made it to the restaurant, Suzanne had worked out how she hoped they could handle it. Colby had beaten her downstairs and Suzanne could see her already seated and waiting. She grabbed a seat next to her and sat down.\n\n\"Good morning,\" Colby said. Just like Suzanne, she was a little uncertain about what to say. Almost anything else might come off as critiquing last night.\n\n\"Morning,\" Suzanne replied. There was an uncomfortable moment of silence before Suzanne spoke again. As she did, she found it hard to look at Colby. \"I know I owe you an explanation about last night, and I will, but I would like us to just focus on the meeting. We can talk at the airport or on the plane.\" As she finished, Suzanne finally looked up and met Colby's eyes.\n\nFor a few seconds, Colby just looked at her in sympathy. When she spoke, that same emotion came through. \"First, you don't owe me anything. And second, of course. Let's deal with why we are here,\" she said. Reaching over, she patted Suzanne on the hand and then looked back at the menu. \"I thought I would get the one egg special. Do you know what you want?\" she asked.\n\nRelieved at the change in topic, Suzanne glanced at the menu. She nodded. \"That looks good.\" Just then, the waitress came by and took their order. The two of them fell into a conversation about the plan for the day and thoughts of anything else quickly vanished.\n\nThat stayed true through the rest of the busy day. Neither one of them had time to spare for thinking about other things. From the moment the first customers showed up at the meeting room until they were done packing everything away, both of them were running the entire time. Even lunch was sandwiches eaten on the go. Then when it was all done, they grabbed their things to get a taxi back to the airport so that they could do it all again tomorrow in Atlanta.\n\nOn the way to the airport, Suzanne checked her phone for messages. It had been on silent all day so that she could give the customers 100% of her attention. There were two messages from Jim. Even though her boss knew that she wouldn't be answering her phone, he couldn't help calling to find out how it was going. She smiled, thinking how predictable he was. Once she cleared his messages, she saw there was still the one from her dad. Even though he left it on Saturday night, she still had not listened to it. Now several days later, her feelings were still raw. Suzanne contemplated just deleting it unheard. She was not sure she could take whatever he would say. \"For now, I'll just leave it alone,\" she finally decided. Hearing him talk about what God wants was not going to help her sort out her feelings.\n\nBy the time they got through security and to the gate, there were only about 10 minutes before boarding would start. As they sat down, Colby noticed that Suzanne's excited mood from before had somewhat evaporated, especially once she finished calling Jim.\n\n\"Was Jim unhappy with what you told him?\" Colby asked her. \"I mean it seems like we got what we needed. And the customers liked the new software a lot.\" She didn't ask if Jim had asked about her. She heard Suzanne responding to questions that were clearly about how she did. When Suzanne told Jim that she had done just as well as Wayne would have, it made her glow with pride at Suzanne's praise.\n\n\"No, he was really excited,\" Suzanne replied.\n\n\"You seem subdued since you talked to him. Are you sure there isn't a problem?\" Colby said in response.\n\nSuzanne fidgeted with her hands, her attention on them. At first she didn't respond, and then finally she replied. \"No, it's nothing to do with work.\"\n\nWith all her energy poured into the meeting, Colby had mostly forgotten that they put off talking about last night. Now when the memory flooded back, she wasn't sure if Suzanne even wanted to talk. \"Suzanne, you don't owe me any explanation. I'll listen if you want, but your life is your own,\" she told her friend.\n\nColby's words seemed to get through to Suzanne. Looking up from her hands, she shook her head. \"No, it's okay,\" she said softly. Suzanne turned to look into Colby's face. Her eyes had a fire in them that Colby hadn't noticed before. \"I'm not ashamed, Colby. That isn't what it is, in case that's what you're thinking,\" she said more forcefully, as if to match the look in her eyes.\n\n\"I wasn't thinking anything, honestly,\" Colby said in a soothing tone. \"I'm here to listen, if you want that.\"\n\nSuzanne sighed. \"I'm sorry. I've never talked to anyone about this. It's just that I imagined you think I am ashamed of who I am and that's why I've hid it.\"\n\n\"I wouldn't think that, Suzanne. I'm in no position to judge anyone,\" Colby said as she reached out and squeezed Suzanne's forearm. \"I hope you know I'm a friend.\"\n\nThey both stopped talking as they heard the boarding announcement. For a second, neither one of them moved. Suzanne put her hand over Colby's. \"I do; you gave me the courage last night. I would never have talked to Sandy if I hadn't met you.\" She got up and walked towards the gate with her bag. Colby followed a pace behind. As they stood there and waited for the line to move, Suzanne looked back over her shoulder. \"I want to tell you, Colby. We have three hours sitting next to one another. I think I need to tell someone, and I'm glad it's you.\"\n\nOnce the line started moving, they were both quiet as they focused on finding their seats and getting their bags stored away. Even after that, the activity in the cabin discouraged either one of them from trying to talk. Colby thought about how lucky it was that they were on the left side of the plane with only their two seats. \"If there was someone seated right next to her, Suzanne would never be able to talk.\" Even still, it wasn't as if they had any real privacy. She wondered how open Suzanne would be.\n\nAfter they took off, Suzanne didn't talk right away. She was lost in her own thoughts and Colby did not want to push. Once they had their drinks and pretzels though, Suzanne gave a big sigh and looked over at Colby. Her face was full of conflicting emotions; doubt, relief, but more than any other was sadness. Colby felt her heart almost break for her friend. She took Suzanne's hand in hers and held it tightly.\n\n\"I feel like I've been a bad friend to you, Suzanne. I had no idea that you were this unhappy,\" Colby said in a quiet voice that did not carry far. She felt Suzanne squeeze her hand as she gave a little smile.\n\n\"Don't. We haven't known each other long, and I ... I'm good at suppressing it. I'm very good at it. I never let anyone see this part of me,\" Suzanne told her. She also kept her voice low and seemingly in control, although there was a tremor that betrayed her. \"You've been a good friend, that I'm talking about this shows that.\"\n\nSuzanne paused. Now that the moment was here, she wasn't sure how to start. As much as she wanted to, the habit of hiding was so ingrained. \"Trust her,\" she told herself. \"You have to trust someone.\" It was time to stop lying, especially to herself.\n\n\"I'm a lesbian. I've known almost forever. At least as long as I ever felt attracted to anyone. And only four people know, besides you,\" Suzanne said. \"I've only loved one person,\" she started to say before a wave of guilt came over her. Colby saw her eyes well up with tears that weren't yet shed, but soon would be. \"And I hurt and betrayed her. I turned my back on her.\" Even more than the guilt, the feeling of self-loathing almost overwhelmed her. It had a familiar taste and was part of why thinking about this was always hard.\n\n\"Suzanne,\" Colby said in a tone that made her empathy clear, \"I know you well enough to be sure that isn't the whole truth. Something happened.\"\n\n\"My parents caught us. I don't talk much about them. Growing up, family was so important to me. I always felt different and with my family, I had a safe place,\" Suzanne told Colby, but as she did, the emotions on her face shifted again. Colby could see anger. \"As long as I conformed,\" Suzanne added. \"They are religious bigots, Colby. And the worst of the worst are gays.\"\n\n\"Once I knew who I was, growing up was a constant fear that they would find out and reject me. And David dying made it worse. I love them. I really do, and they love me, but they cannot accept me if I choose to be myself,\" she said as a few tears started to run down her face.\n\n\"Oh Suzanne. That makes things so hard. I've had a few friends who faced a similar choice, and it's messed up,\" Colby said as she pressed her fingers around Suzanne's hand.\n\n\"I know others face this. It doesn't stop me from feeling alone, and honestly like it's different for me,\" Suzanne told her. \"David dying practically killed them. God kept them alive. God was all they had to cling to. And they were all I had. I couldn't lose them. I couldn't do that to them, or me.\"\n\nThe inwardly directed anger flared up again. Suzanne closed her eyes to try to clear it, but instead Chloe's face was there in her mind's eye. As usual, it was not the face from their happy times. It was the tear streaked face as Chloe pleaded with her not to walk away. Suzanne almost couldn't remember how she looked at other times. It was the look of betrayal that endured.\n\nSuzanne tried to continue but the tears flowing down her face made it hard. As one of the flight attendants passed by, she noticed Suzanne. \"Is everything alright?\" she asked.\n\nColby answered. She knew that Suzanne couldn't face anyone else. \"It's okay, but do you think you could bring us some tissues, or at least a few napkins.\"\n\nSensing there was nothing more she could do, the flight attendant nodded and was back in a flash with a box of tissues. \"Just let me know if you need anything else,\" she said.\n\nThe short respite helped Suzanne pull herself together a bit. She dabbed at her eyes. Finally, she felt ready to continue. \"So I hid. I pretended to be like everyone else. I was the daughter they wanted. And I survived.\"\n\n\"That's it? You survived?\" Colby couldn't help saying. She bit off saying that survival wasn't enough. Suzanne already knew that.\n\n\"I did until Chloe. Everything changed when I met her. We were friends almost from the moment we met. And I fell for her not long after that, but I didn't know what to do. I was too afraid to show my feelings,\" Suzanne said, and then she smiled for the first time since she started talking. It was a genuine but still forlorn smile as she thought back. \"She told me her feelings first. God, even then I could barely tell her.\"\n\nFor the first time since they started talking, Colby saw Suzanne almost seem happy. Thinking about the beginnings of her first love fleetingly made her forget about anything else. Colby remembered her own fumbling initial steps with her first girlfriend and had to smile herself.\n\nWhen Suzanne started to talk again, her voice was soft and wistful. \"Those were the best months of my life. Her mom knew and supported us. I could be open when we were there. I was myself. And I loved her so much.\" Slowly the happy glow faded. \"And she loved me back.\" When she said that, Suzanne's voice was so soft that Colby could barely hear her. Then she was silent again.\n\n\"What happened, Suzanne?\" Colby asked when the silence stretched out.\n\n\"I screwed up. I destroyed it,\" came the reply in that same whisper.\n\nColby tried to put the pieces together. Suzanne spoke earlier of betrayal and now this. While it sounded like Suzanne cheated on Chloe, it didn't make sense. \"If anything, she is the type to be too loyal,\" she thought. Still, she couldn't think of what else it could be. Finally, she just asked. \"How did you? Was there someone else?\"\n\n\"No. There has never been anyone else but Chloe,\" Suzanne answered. She spoke a little louder now. \"We had to keep everything secret from my parents. They wouldn't ... they can't accept me being lesbian. It's an abomination. I'm an abomination. So we were careful ... until I wasn't.\n\n\"They were out with Chloe's mom and we were at my house. Chloe's mom warned her not to do anything there. Chloe didn't want to either, but I convinced her. She kept saying we shouldn't but I wanted to and didn't listen,\" Suzanne said as the tears started again. \"I should have listened. I ruined it. My parents came home and caught us.\"\n\n\"Oh Suzanne, what a way for them to find out!\" Colby said as she squeezed Suzanne's hand. When Suzanne didn't respond, Colby sensed there was more. \"It wasn't just that?\"\n\nPulling her hand away, Suzanne dropped her head and covered her face with both hands. \"My mom saw us and had a heart attack. She almost died,\" she sobbed.\n\n\"Oh my God,\" Colby said in a shocked voice.\n\n\"I almost lost her, after losing David. And I would have lost Daddy too. My entire family would be gone, because he couldn't accept me. He would have cast me out. Chloe, I couldn't do that. I couldn't lose everyone,\" Suzanne said through her tears. She wasn't even aware that she said the wrong name. \"Even beyond turning his back on me, I think Daddy would have died if he lost Mom.\"\n\nShe looked at Colby and seemed to see her again. \"It didn't seem like I had a choice. Daddy made me promise not to see Chloe again, and to be straight. He made me do it while Mom was in the ambulance on the way to the hospital. I did it. To save them, I promised. I threw away Chloe and her love. I kept my promise and betrayed her.\"\n\n\"What a bastard,\" Colby said without thinking. She couldn't help it. That someone could do that to his own daughter was beyond her comprehension.\n\nAs angry as she was at him, Suzanne couldn't help rising to her father's defense. \"No, he really thought he was doing the right thing. God wasn't some abstract thing at home. Church and God were central. He truly believes that he is protecting me from being damned. He isn't a bastard, Colby. He loves me. It's hard to see that, I know, but this is how he sees the world,\" she said.\n\n\"Okay,\" Colby answered back. \"I think I see.\"\n\n\"You don't know what it was like, Colby. Losing David; seeing my Mom fall to the ground as she had a heart attack from seeing me and Chloe; and then the thought of losing all of them,\" Suzanne whispered low enough to make Colby have to lean her head over to hear. She sounded so lost that Colby moved her hand so that she could link her fingers with Suzanne's. She just wanted to let Suzanne feel her support.\n\n\"I was horrible to Chloe. I promised not to see or talk to her, and I kept it. She tried to talk to me and I wouldn't. I turned her away crying. I didn't know that I could be that cruel,\" she said. She looked up at Colby's face, so close to hers. Suzanne's eyes were red from the tears with her mascara and makeup smeared. \"I can't forgive myself for what I did to the only person I have ever loved. There isn't any way to justify it. Even if I had to end it, I didn't have to be like that.\"\n\nSqueezing her hand, Colby brushed away some of the hair that had fallen into Suzanne's face. For a moment, Suzanne was reminded of Sandy doing that the night before, and like then she was also reminded of Chloe. It wasn't the comforting gesture that Colby might have thought.\n\n\"Suzanne, you were only 18 and in your first relationship. The pressure you faced, the fear ... I don't think you can hold this against yourself forever,\" Colby told her.\n\nThe look that Suzanne gave Colby was almost frightening. Her eyes flared but all other expression disappeared from her face. \"I can. I will,\" she said. \"I hurt her in the worst way possible. Those are just excuses to make me feel better, but I can't do that. Don't you see?\"\n\nThe sympathy that Colby felt was easy to perceive. It hurt Suzanne to see it. \"I don't deserve it. Can't she understand? Chloe is the one wronged,\" she thought. She had to look away from those eyes that were telling her to forgive herself. \"I wish I was dead,\" she told herself. \"It would hurt less.\"\n\n\"Suzanne, what would hurt less?\" Colby asked. She hadn't caught all of what Suzanne had quietly mumbled as she turned away, only the last bit. There was a despondency in the way she said it that worried her.\n\nUnaware that she had spoken at all, Suzanne scrambled for an answer. Without looking at Colby, she spoke. \"If I could forgive myself, it would hurt less; that's what I said.\"\n\nIt didn't sound right to Colby but she sensed if she pressed any more, Suzanne might push her away. \"Oh, okay,\" she said. She leaned back against her seat. Suzanne wasn't the only one crying, although Colby's were just big slow tears that escaped rather than Suzanne's hard though quiet sobs. She mourned for what her friend had gone through, and still was. \"Have you ever spoken to a counselor? Not just about this, but David and seeing your mother like that.\"\n\n\"No. You're the first person I've ever talked to,\" Suzanne said. She sounded exhausted to Colby. \"I kept my promise, not just about Chloe, but everything. After Chloe, I haven't been with or dated any women. It's been guys only. I tried. They wanted me to be straight, so I tried. It just never worked, but I kept trying for them.\" Suzanne grew quiet again, lost in dark thoughts.\n\n\"Until last night,\" Colby finally said to try to bring her back. \"What changed?\"\n\nSuzanne gave a bitter chuckle. \"What changed? Colby, it was you. For the first time, I had an example of what life could be like. What a parent who accepted me would be like. I've avoided making close friends with lesbians so that it would be easier to hide who I am. I just couldn't hide from you. And it pissed me off,\" she said. Realizing how that might sound, she hurriedly went on. \"Not at you. I was pissed off at him. When I went for dinner on Saturday, it bubbled over. When we were alone, he said he hoped I was happy. I snapped at him that I wasn't and that I promised him I wouldn't ever be happy. Then I just left. I haven't talked to him since. He left me a voice message but I haven't wanted to listen to it yet.\n\nClosing her eyes, Suzanne pressed her head back against the headrest. She still had that exhausted tone to her voice. \"For all these years, I've been good. I kept my promise. I tried to be someone I'm not. The few times I was tempted, I told myself I made a promise to him,\" she sighed. Before speaking again, she looked over at Colby. \"It's all been a lie. It isn't the promise; it's knowing I would lose my family. I was scared of that; scared to face that and scared even to consider about how they could even do that to me. Colby, they would abandon me, rather than let me be happy.\"",
        "Inside her head, Suzanne could hear the accusing voice ringing. The guilt washed over her. \"You don't deserve happiness,\" it said. She knew it was true, after what she had done to Chloe. This was her punishment. Everything she told Colby was true, but deep down this was the truth she couldn't speak.\n\n\"Oh Suzanne,\" Colby said in a voice full of emotion. \"I'm so sorry. Everyone deserves happiness.\"\n\n\"Not me,\" the voice in Suzanne's head responded, but she didn't say anything. It was not a conversation she wanted. Finally, as the silence dragged on she felt like she had to say something. \"Thanks, Colby. Could we stop talking about it for now? It's been a long day and my head is starting to hurt.\"\n\n\"Of course. Just know I'm here for you as your friend,\" Colby said with a smile. She gave Suzanne's hand another squeeze and felt an answering one back. She started to pull her hand away but Suzanne's fingers tightened, so she kept it there. \"If she finds it comforting, I'm happy to hold her hand,\" she thought.\n\nThe rest of the flight was mostly quiet. Colby got her book out and read while Suzanne seemed to doze. Certainly, the conversation took a lot out of her. Towards the end, she really did fall asleep, but she spent most of it trying to sort out her conflicting feelings. She didn't get very far.\n\nAfter landing, it took them a while to get to the hotel. It was somewhat of a later flight anyhow and then their bags took forever to show up. Despite the hour, the line for a taxi was long so they didn't actually get to the hotel until 10.\n\nWhen they finished checking in, Colby looked over at Suzanne. \"Do you want to get something to eat in the hotel restaurant?\"\n\n\"I'm not really that hungry,\" Suzanne said in reply.\n\nColby looked at her. \"I'm famished. How can you not be too? All we had were those sandwiches that we wolfed down hours ago.\" Her concern for Suzanne was apparent.\n\n\"I ... I'm a little nauseous. It must have been something to do with the cab ride and an empty stomach. I think I'll go to my room and let it settle, and then order some room service,\" Suzanne said without meeting Colby's eyes. Her hand was playing with the handle of her luggage and she was looking there. Eventually, she looked up at Colby. \"I can keep you company, if you want.\"\n\nColby couldn't keep the sympathy she felt out of her eyes. \"No. If you aren't feeling well, you should go up to your room. I can do room service too. You need to eat something though, okay?\"\n\n\"I know,\" Suzanne said with a sigh.\n\nThey walked to the elevator and made their plans for meeting in the morning. This time, they were not on the same floor and Colby got off the elevator first. \"Well, have a good night. See you tomorrow!\" she said. \"Oh, and don't forget to eat something.\"\n\n\"Yes, Mom,\" Suzanne told the younger woman with a little smile as the door closed. She leaned against the wall of the elevator until it got to her floor. Mustering the strength to stand up straight, she walked out and made her way to the room. As soon as she was in, she got out everything she would need in the morning. She felt lethargic and when she was done, Suzanne sat down heavily on the bed. After a moment, she just fell backwards with her feet still on the ground. For a little while, she just laid like that and tried to quiet the voices in her mind. It was a struggle, but eventually she subdued them.\n\nFinally, Suzanne sat up, grabbed the hotel guide, and looked at the room service menu. Nothing looked good to her. \"I'm just not in the mood to eat,\" she told herself. \"All I really want to do is go to sleep.\" She put the guide back down and got up so she could get ready for bed. As she put toothpaste on her toothbrush, Suzanne sighed as she felt a little bad about having told Colby that she would eat. \"I'm so good at feeling guilty,\" Suzanne thought. \"I wish it wasn't one of the things I excel at!\" \n\nWhen she was in bed, Suzanne lay on her side and looked at the menu one more time. Still, nothing appealed to her. She put her head on the pillow and looked again. \"God, I'm tired,\" she thought. \"I'll just close my eyes for a second and rest.\" It felt much better to give into the bone weariness. Within moments, she was asleep. Sometime in the middle of the night, she woke up long enough to turn off the light but otherwise she slept through the night. If she dreamed, she didn't remember any of them. \n\nThe next day was pretty much a repeat of the one before, just in a different hotel. There were a few hiccups with some of the equipment but Colby turned out to be quite good at troubleshooting them. At the end of the day, Suzanne was once again extremely pleased with the data they gathered. Just like Tuesday, they left for the airport as soon as they finished packing up everything.\n\nGetting to their flight wasn't quite so rushed as the evening before. There were more options for flights to Chicago, and Suzanne picked one that gave them more time. The tradeoff was that they would get to the hotel somewhat later.\n\nAt breakfast, Suzanne had confessed to not eating when Colby checked on it. Suzanne was properly contrite, but had to hide the little smile at how Colby got pissed off. She was actually extremely cute as she lectured Suzanne about the importance of good nutrition. Since they had more time now, Colby insisted that they eat at one of the airport restaurants.\n\n\"Since I can't trust you to take care of yourself,\" Colby told Suzanne in a stern tone. \"I'm going to make sure you get something tonight.\" This time Suzanne didn't even try to hide her smile of amusement. She also did not argue with Colby. They found a nice place relatively close to their gate where the line wasn't long.\n\nWhile waiting for their food, they drank a glass of wine and talked about the day. Colby thought that Suzanne seemed substantially more at ease than she had seen for the rest of the week. Certainly, a second positive day of customer testing had helped. \"It's more than that,\" she thought. \"That sense of melancholy isn't as strong. It's not completely gone, just more muted.\" She did not want to do anything that might stoke it back up so she stuck with talking about the focus group. Still, it seemed like Suzanne was a little quieter than normal.\n\nColby was trying to come up with something else to talk about when Suzanne spoke again. \"Thanks for listening yesterday,\" she said and looked into Colby's eyes. \"It was good, I think. I've kept it bottled up for so long. I don't know what I want, but at least I'm thinking about it.\"\n\n\"Anytime,\" Colby said. \"I haven't gone through anything like you have, so I can't say I've been there. I can still listen though.\" She smiled at Suzanne with one of her smiles that lit up her face.\n\nThe way Colby looked gave Suzanne a small pang in her heart. \"She's so lovely and so nice,\" she thought. It was hard not to feel attracted to her. Anyone would want to be with her. Even as those thoughts crossed her mind, she couldn't avoid the feeling of guilt. She tried to tell herself it was because of their working together; deep down she knew it was much more than that. What she did to Chloe was still raw. \"Someone like Colby deserves a better person than you,\" a little voice inside her head whispered. She tried to hide from the feeling and faked a smile back. Despite the attempt, Suzanne couldn't escape beating herself up with darker thoughts. Memories of Chloe crowded into her head. Her eyes dropped away from Colby's face.\n\n\"What is it?\" Colby asked.\n\nFor a few moments, Suzanne resisted answering, but she could tell that Colby wasn't going to leave it alone. \"I was just thinking about Chloe. I hurt her so much. I wouldn't even tell her why.\"\n\n\"You need to give yourself a break,\" Colby tried to reason with her. \"You were in an impossible place.\"\n\nThe anguish Suzanne felt was obvious in her voice. \"I didn't even say goodbye.\"\n\nColby felt a lump in her throat. It may have been eight years, but the pain Suzanne felt wasn't diminished. It was just as powerful as it had been when all this happened. She wished she could do something to help.\n\n\"Suzanne, you have to find a way to move on. You can't let this define your life. You deserve to find happiness,\" Colby said as sympathetically as she could.\n\n\"Do I? I messed up Chloe's life,\" Suzanne whispered.\n\n\"You two were young. It hurt her but she must have gotten over it,\" Colby said. Dropping her head even further, Suzanne was quiet. Colby quickly got a bad feeling. \"Suzanne, what happened to Chloe?\"\n\n\"Nothing good, I heard. I mean I didn't keep in touch, but I heard through a few people she got into trouble after she moved back to Los Angeles,\" Suzanne replied. After a few moments, she added \"I heard she got into drugs.\" She looked up at Colby and her face was ashen. \"The Chloe I knew would never have done that. She changed because of what I did ... to the person I loved. I loved her and I didn't think about her. And she is paying for what I did.\"\n\nReaching over with both of hers, Colby held onto Suzanne's hands. \"She made her choices too. Whatever the reason she was hurt, you can't take responsibility for her choices. Don't do this to yourself, Suzanne. Do you really think she would want you to punish yourself forever?\"\n\nSuzanne looked up into Colby's face. \"Yes, I do, until I die.\" Her voice was completely calm and steady. There was a conviction in her eyes that let Colby know just how deeply Suzanne believed that. Something in the way that Suzanne said it scared the hell out of Colby. She couldn't put her finger on it, but it was chilling nevertheless.\n\n\"I can't believe that and as your friend, it's my duty to help you start to enjoy your life. Did you have fun last night?\" Colby asked.\n\nEven though acknowledging it made her feel guilty, Suzanne couldn't lie. \"Yes, it was nice.\"\n\n\"Well, I was going to tell you at some point but since we are staying in Chicago tomorrow night, there is this lesbian bar a friend told me about. I was thinking of checking it out. I think we should go together,\" Colby told Suzanne. Colby smiled at the look on Suzanne's face as she reacted to the abrupt change in subject. \"Seriously Suzanne, you could use another fun night. There will be music and dancing,\" Colby continued. \"I know you aren't ready for this back home, but at least here you can see what it's like. You did say that you didn't feel bound by the promise anymore.\"\n\nSuzanne was quiet as she looked at Colby. Her mind was a jumble of different thoughts. Meeting Sandy had been happenstance. She wasn't looking to find a woman and make out with her. Going to a lesbian bar was completely different. It was a deliberate act. Despite no longer feeling bound to the promise, Suzanne couldn't help a feeling of unease.\n\n\"I don't know, Colby,\" Suzanne finally said. \"I'm not sure I'm ready for it, even here.\"\n\n\"I'm not talking about trying to hook up. I'm just saying, let's go have some fun at a place where you are around other women, women like you,\" Colby told her. \"It just seems like it would be easier if you could go someplace with a friend you trust. I hope I'm that.\"\n\n\"Oh, you are Colby. You are my friend and I do trust you. It's just a big step,\" Suzanne replied.\n\n\"I know it is. Don't decide now. Just think about it and you can decide tomorrow,\" Colby said.\n\nSuzanne nodded. It felt better to push out the choice. \"Alright, I'll tell you then.\"\n\nColby steered the conversation into other directions. Even though Suzanne participated fully, she couldn't help being distracted by Colby's suggestion. Her mind kept coming back to it. It both thrilled her and terrified her.\n\nIt was almost time for their flight so they quickly paid the bill and headed to their gate. The question of tomorrow night kept intruding into Suzanne's thoughts until they were up in the air. She felt fortunate that she had work to do and once she had her laptop out, Suzanne buried her head in it for the rest of the flight. Even when she had to put her laptop away as they got ready to land, she was not done with work and her head was fully occupied with making lists of everything that she still needed to do.\n\nBy the time they got to the hotel, it was too late to do anything. As with the previous nights, they reviewed everything about the following day as they went to their rooms. They were on the same floor this time so they talked for a few minutes in front of the elevator before parting. Colby went immediately to bed, but Suzanne went back to work for another couple of hours. When she finally got into bed, it was almost 2 AM; she had to be up a short four hours later.\n\nDespite feeling dead to the world when she woke, Suzanne was up on time and down in the restaurant before Colby. She didn't let her weariness get in the way of having a successful day. None of the customers in the user group testing had any idea and it went off without a hitch. When it was over, Colby and Suzanne got everything packed up and ready to either be shipped back or carried with them. They actually finished a little earlier than either Tuesday or Wednesday. It was a good thing since, unlike the previous days, they had a dinner meeting with a vice-president from one of their largest customers.\n\nThey met him at the restaurant. Suzanne knew him from several meetings in the past. He was in his late forties and she had enjoyed getting to know him. Despite their good relationship, the primary purpose of the meeting was to negotiate a renewal of their licenses. While Suzanne wasn't in Sales, she sometimes had to take on the role. Colby was impressed by how tough Suzanne was in the negotiations. She managed to keep the discussion pleasant while extracting a significant increase in the license fees based upon the new features they had been testing.\n\n\"Wow, Suzanne,\" Colby told her during the cab ride back to the hotel. \"I can't believe how you handled that. Jim is going to be so happy. You got everything we were looking for; I mean everything we really wanted. Just another reason I can see why Jim thinks so much of you.\"\n\nSuzanne blushed and looked away. She always hated praise. \"Well, we have what they needed, and I compromised some.\"\n\n\"Not on anything that you really cared about!\" The admiring tone in Colby's voice just got stronger.\n\n\"Well... Okay, yeah we got a good deal,\" Suzanne finally admitted with a grin.\n\nColby grinned. She thought to herself that now was probably the best time to bring up going out. At least Suzanne was feeling good. \"So what about tonight? Have you decided whether you are going to come with me?\"\n\nThe grin on Suzanne's face disappeared in an instant. It was replaced by almost a look of panic. \"I don't know. I wasn't thinking about going out and I didn't bring anything for a club. I've got nothing to wear.\"\n\n\"Bullshit, Suzanne! First, there is no right thing to wear. Second, I know you brought a pair of jeans to wear on the plane tomorrow. Just wear those with the blouse you have on and you will look great,\" Colby told her. \"Especially if you unbutton two more buttons,\" she added with a grin. \"Come on, please! I don't really want to go alone.\"\n\nEven though it felt slightly manipulative, Suzanne admitted that Colby's plea helped make up her mind. Now it was easy to tell herself that she was doing it for Colby. Suzanne did not have to decide if she wanted to go for herself. \"Fine, I will do it,\" she said quietly, \"since you want me to so much.\" She laughed at the big grin that Colby got. \"Yes, you win.\"\n\n\"Yay! I win!\" Colby said. Suzanne loved the slightly smartass tone in Colby's voice. Since meeting her, she always felt a little better about being around her. Colby just had a positive attitude and never took the world too seriously. Suzanne wished she could be more like Colby in many ways.\n\n\"It's almost 9. We'll be back at the hotel in a few minutes. When should we meet to go? Half an hour?\" Suzanne asked.\n\n\"That sounds good. I can just manage to make myself look good in 30 minutes,\" Colby said with a smile.\n\nSuzanne couldn't help thinking that Colby didn't need 30 seconds. Even after a long workday where she had been running for much of it, Colby looked gorgeous. She wasn't sure what half an hour of primping would do to make her look better. Suzanne flushed and turned away, hoping that Colby did not notice. For herself, Suzanne didn't plan on doing much. As Colby said, she wasn't going there to hook up. She would change into her jeans and touch up the light amount of makeup she wore. Still she felt nervous. Completely forgetting about Sandy's reaction to her, she wondered if anyone would find her interesting.\n\nAs they got to the hotel and headed up in the elevator, Colby looked over at Suzanne. She could see the growing nervousness in her. She reached over and squeezed Suzanne's arm. \"Don't worry. It will be fun! I promise you that you'll enjoy yourself!\"\n\n\"I hope so,\" Suzanne said quietly.\n\nColby almost chuckled but remembering what Suzanne had been through made her hold back. It was a big step for her and Colby did not want to mock her. \"You will,\" she said with certainty. \"I'll come by your room in about 30 minutes, okay?\"\n\n\"Sounds good,\" Suzanne said as the elevator door opened. They both headed in opposite directions towards their rooms.\n\nOnce Suzanne was in her room, she went and sat down on the bed. She could feel her heart beating hard. \"What have I agreed to?\" she asked herself. She started to take off her trousers. As she pulled out her cell phone, she noticed that there was another voice message from her dad. She sank back down onto the bed again and stared at the screen until it faded to black. Finally, she unlocked her phone, went to the voice mails, and hit play on the one from Sunday night.\n\n\"Suzanne, I wish you hadn't run out like that. I ... uh ... I thought you could find happiness with ... uh ... someone if you just gave it a chance. I never wanted you to be unhappy. I hate leaving messages. Would you call and talk?\" Her father's voice was much less firm than normal. Suzanne could tell that he didn't really know what to say. She paused for a moment and then hit play on today's message.\n\n\"Honey, you haven't called me back. I know you are mad at me, but I thought we could always talk.\" There was silence for a few moments and she thought that maybe he had hung up, but then she heard him speak again. \"It's been tearing me up to think that you've been that unhappy all these years. You never said anything. I'd just like to talk. Call me when you're back in town.\"\n\nSuzanne's hand fell down onto the bed, the phone still held in her fingers. She just sat there, not sure how to take either message. He didn't really say much. She thought, \"Of course, I didn't say anything. What was there to say?\" She still didn't know. It wasn't as if it would make any fundamental difference. In the end, this wasn't something he could bend on.\n\nAll of a sudden, Suzanne felt a wave of weariness. What she really wanted to do was curl up in a ball and go to sleep until she needed to leave for the airport. She was tempted to call Colby and tell her to go without her, but she had a sense that Colby wasn't going to let her off, especially now that she had agreed. Sighing, she got up and finished slipping off her trousers.\n\nGoing to her bag, she got out her jeans. At least they were her tight ones, she thought. Normally if she brought jeans along on a trip, they were her ultra-comfortable ones. For some reason, she had packed the ones that flattered her. They were low-waisted and tight in a way that emphasized how long her legs were. She pulled them on and carefully tucked in and arranged her blouse. It was all white with little tiny pleated stripes and a nice oxford style collar. Once she undid the buttons like Colby suggested, it did look good enough for going out. Like the rest of her body, her neck was long and lean. She put on a silver belt before brushing out her hair so that it looked much better and then touched up her mascara and lipstick. After adding a few drops of perfume, she decided that her eye shadow and liner was still good enough. Glancing at her watch, she realized there were still 15 minutes left.",
        "Suzanne sat back down on the bed, this time with her shoulders against the headboard. She closed her eyes and tried to calm her racing thoughts. Between her dad and going out, she felt like her mind was going in too many directions. Suzanne focused and tried to take slow breaths to help get back a little control. After a minute or so, it started to work. Part of it was just how tired she was. Once the slow breathing pattern set in, it didn't take much for her to nod off.\n\nIt wasn't a deep sleep and while she didn't wake up when Colby first knocked on the door, the follow up banging jarred her instantly awake. Still she was a little groggy when she went to the door and opened that.\n\n\"Hey, none of that. We are off to have fun. You are not going to crash until I say you get to crash!\" Colby told her. \"See, I told you that you would look nice. Those jeans show how hot you can be, Suzanne!\"\n\nAs Suzanne shook off her grogginess, she took a look at Colby. Unlike Suzanne, she had completely changed. Gone was the professional looking business suit; instead, she had on a short black and silver skirt and a white halter-top. The top must have had support wired into it because the back was cut low with no bra strap anywhere to be seen. A plunging neckline showed off her ample cleavage. Colby didn't seem quite as short since she was wearing three-inch heels rather than her mostly one-inch heel shoes for work, like the ones that Suzanne was still wearing.\n\n\"I thought you said we weren't trying to pick someone up? Colby, you will have every woman there panting after you,\" Suzanne said in shock. Her own body had pulsed as she looked at her sexy friend. \"Yet another reason why there can never be anything between us. She is way out of my league,\" Suzanne thought.\n\n\"Well for one thing, I said you weren't,\" Colby told her with a wink that was far sexier since she had done some completely new and much darker makeup. \"I never said I wasn't trying to.\" When Suzanne's jaw dropped a little, Colby laughed. \"I'm just kidding. Still, no harm in looking my best. It's more fun that way.\"\n\n\"You look great! Way better than me!\" Suzanne said. Even though she said it without meaning anything bad, it earned her a frown from Colby.\n\n\"Suzanne, you look great. You will get a lot of attention, probably more than me. I'm a little over the top with the femme look tonight. A lot of women will like you much more,\" she said. After a few seconds, she looked at Suzanne in the eyes and blushed just a little. \"If you weren't my friend, I'd be one of them. I like them tall and leggy.\" She couldn't keep looking at Suzanne and finally forced herself to glance away. \"I hope that doesn't seem too weird to say,\" Colby added.\n\nUnable to keep from blushing too, Suzanne shook her head. \"I still think you've got the look, but to each her own.\"\n\n\"Are you ready to go?\" Colby asked.\n\n\"Maybe I should stay. I don't want to cramp your style,\" Suzanne said halfheartedly as she put her room card in her little travel wallet and slid it into her pants. She added her cell phone into the other back pocket, but she still held back.\n\n\"Shut up and let's go,\" Colby said and grabbed Suzanne by the hand and pulled her out the door.\n\nIt did not take them too long to get to the bar. While the name didn't give any indication of the client base, the people congregated outside definitely hinted at it. More than a few people had gone outside for a smoke and almost all of them were women. While there were all different types and shapes, even someone with less of a sense of it than Suzanne could tell that most of them were lesbians. Some of them glanced over at Suzanne and Colby as they got out of their cab. A couple of the more butch ones elbowed each other as they checked out Colby.\n\nOnce again, Suzanne felt her nervousness rise and questioned whether she really wanted to do this. Colby sensed it and took Suzanne's arm. \"Suzanne, it's going to be fun. That is all this is, a bit of fun. I'll stick with you as long as you want me to.\" She started to walk up the steps and Suzanne was just pulled along.\n\nAfter paying their cover charge and getting their hands stamped, they made their way inside. It was fairly packed and fairly loud. There was a female DJ playing some House music for the women out on the dance floor. It was a big mass of women and it wasn't always easy to see who was dancing with whom. Even off the dance floor, there were small clusters dancing together. It took Colby a little while to find a high little table where they could stand. They were not there long before a waitress came by and took their drink orders.\n\nOnce she had her drink, Suzanne sipped on it as she looked around the crowd. It was a completely different experience for her. She was familiar with the bar scene, though she did not do it a lot. That aspect of it did not seem that different, instead it was the feeling of freedom that came through. All of these women felt able to be with whomever they wanted. She watched as two women kissed with a total lack of self-consciousness. The only person who seemed to have any embarrassment about it was Suzanne. As their kiss ended, Suzanne hurriedly averted her eyes, rather than be caught staring.\n\nLooking elsewhere, the women dancing caught her attention. That wasn't unusual. When she went out, she often saw that. It was the way that many of them were dancing together. There was a sensuality to it that was intense. Suzanne could see how the actions and reactions fed each other, building their excitement towards a peak. She couldn't help feeling reflections of the passion on display that caused shivers to run down her back. Once again, she had to rip her attention away as she witnessed what seemed like an intimate moment in full view of everyone.\n\nAs she looked away, Suzanne noticed Colby watching her instead of the crowd. She had a slightly amused smile on her face. Suzanne couldn't help the renewed blush that spread over her face. Colby's smile got a little bigger. She leaned forward so that Suzanne could hear her over the noise.\n\n\"It's a little overwhelming, isn't it?\" Colby asked.\n\nSuzanne shivered again. This time she had no doubt as to why. The feeling of Colby so close, and especially when she brushed Suzanne's hair away from her ear, was impossible to ignore. She hoped that she covered it up enough. Suzanne nodded. \"It is. I've never seen anything like it.\" She pulled away just slightly so that Colby wasn't touching her. \"It makes me nervous. I'm not sure I can act this way.\"\n\nThere was no more humor in Colby's smile. It was instead full of warmth and understanding. \"You don't have to act any way you aren't comfortable with, Suzanne. I'm not suggesting anything else.\" She didn't seem to have any awareness of how she was affecting Suzanne. She patted Suzanne on the arm and left her hand there in a friendly way as she looked around.\n\nTrying to ignore the feeling of Colby's fingers, Suzanne looked back at the couple who were grinding against each other. \"Is it always like this?\" Suzanne asked.\n\nChuckling, Colby shrugged her shoulders. \"I don't know. It might be like this here all the time. I heard it was a hot place, and it certainly is. Not all lesbian bars are like this. Back in Seattle there are bars that are just nice, somewhat quiet places to get a drink with friends where you won't feel judged. Some are more like this, and then of course there are all sorts in between.\"\n\nAs they talked, a pretty woman came up to them. Her brown hair was short in back while longer in front where the bangs swept to one side. It was an interesting blend of masculine and feminine and Suzanne liked the look. She had on a short leather skirt with pumps, and a black Nirvana t-shirt. She wasn't tall but she was still a lot taller than Colby. If Suzanne had to guess, she would have put her age at about the same as Colby but she could have been younger. It came as a complete surprise to Suzanne when the woman spoke to her. She had been sure that she was there for Colby.\n\n\"Hey. I'm Piper,\" the young woman said as she stopped at Suzanne's elbow. She stood between Colby and Suzanne but her attention was clearly on Suzanne. First Suzanne and then Colby introduced themselves. \"I hope you don't mind me butting in.\"\n\nWhen Suzanne seemed at a loss for words, Colby spoke up with a smile. \"Not at all. We were just getting acclimatized.\" That finally got Piper to pay attention to Colby. Her eyes flicked all over Colby before looking at how Colby had withdrawn her hand from Suzanne's arm.\n\n\"Are you two together?\" Piper asked. Once again, Suzanne found it hard to find the right words and Colby filled the gap.\n\n\"We are both in town on business for our company, but we aren't together,\" Colby said with emphasis on the last word.\n\nPiper smiled and turned her attention back to Suzanne. \"In that case, would you like to dance?\"\n\nSuzanne looked at Colby with just a hint of panic in her eyes. \"Well, I don't want to abandon my friend,\" she started to say.\n\n\"Abandon away!\" Colby said, as her grin got a little bigger. \"I'll watch our table while you dance.\"\n\nSuzanne tried to stare daggers at Colby but clearly she wasn't going to let Suzanne off the hook. With a little gulp, Suzanne nodded. \"Sure, let's dance,\" she said with a little more confidence than she felt.\n\nGrabbing Suzanne's hand, Piper pulled her away from the table and into the crowd. When Suzanne looked back, Colby was already hard to see through the mass of dancing women. A few steps later and she disappeared from view. Piper kept going until she found a small clear space and then turned to face Suzanne. She said something but it was much louder now and Suzanne couldn't hear her. She shook her head.\n\nPiper smiled and moved close so that she could stand on her tiptoes and speak in Suzanne's ear. \"I'm glad you said yes.\" Suzanne could smell Piper's skin as she touched Suzanne's body to steady herself.\n\n\"Me too,\" Suzanne said as she turned her head to speak into Piper's ear. She was slightly surprised to realize how true that was. Just like with Sandy, it was a nice revelation to be found desirable by someone that she found attractive.\n\nPiper's body began to pick up the rhythm of the song that was playing. It had a steady sinuous beat and as she danced, Piper brushed up against Suzanne. Closing her eyes, Suzanne listened to the music and began to move her body too. Once she felt like she had the beat as well, she opened her eyes to look at Piper and tried to synchronize her dancing with Piper's. Neither one of them was deliberately rubbing against each other but as they danced, their bodies occasionally touched. Slowly the tempo of the song increased as did their touching. Suzanne found herself feeling very comfortable with letting go and allowing the music to lead her wherever it went.\n\nStill, it surprised Suzanne when Piper put one hand on her shoulder and how it changed the feeling of the dance. Rather than their movement together almost seeming random, now it felt more deliberate. Piper's fingers closed and she held on, either pushing Suzanne away or pulling her close. Before the sexual element of their dance felt unintended; now she built the tension in a calculated way. Suzanne didn't mind, but it did bring back a sense of precariousness, unsure where it was leading but willing to let it play out. As the song started to get closer to a crescendo, Piper changed again so that when their bodies came together it was her mound pressing against Suzanne's leg while Suzanne pressed against Piper's belly. Gradually they pulled away less and less so that for the last twenty seconds of the song, the two women were grinding against each other.\n\nWithout any pause, the next song flowed out of the first, but Suzanne was barely aware of it. Piper was looking up into her face. Her hand had moved from Suzanne's shoulder to behind her neck and there was the slightest pressure as if Piper wanted her to lean in for a kiss. Even though Suzanne freely admitted that Piper excited her, she wasn't ready to kiss someone she had just met, not yet. The movement of her body adapted to the new song, which was less seductive and with a harder pulsating beat. As she danced, her body separated from Piper's and soon she felt the fingers slip away from the nape of her neck. This time, Suzanne was the one leading.\n\nAs she danced, Suzanne would spin around but always came back to face the other woman. After a few times, Piper began to do the same thing as soon as Suzanne finished a revolution. Trading off, the two women tried to put more movement into their dance, trying to outdo the other. Suzanne felt more daring each time. When the tempo to the music suddenly changed as Piper was in the middle of a turn, Suzanne stepped in behind her and put one arm around her waist. With a hand on Piper's belly, Suzanne pulled her close as she pressed herself into Piper's ass. Her other hand slid down Piper's arm before resting on her hand. Instantly Piper matched her dancing seamlessly and it looked as if they were moving perfectly synchronized\n\nSuzanne felt Piper lean her head back against her shoulder with her cheek brushing against Suzanne's jaw and neck. Slipping her hand out, Piper reached behind Suzanne's head and into her hair. Suzanne felt little tingles of excitement everywhere she was touched. She ground harder against Piper's nice round ass. From the way Piper was rotating her hips, it was clear what she wanted. It had been so long since Suzanne had done something like that, and she was tempted to give it to Piper. She could still remember how happy she felt when she made Chloe cum. Still, she held off. She had loved Chloe, while this was an almost anonymous encounter in a club.\n\nPiper turned her head and kissed Suzanne on the neck. \"Please,\" she said loud enough for Suzanne to hear. \"You have me so fucking excited.\"\n\nJust then, the music changed again as that song ended and another began. Without thinking, Suzanne pulled back and released her. As she turned around, it was easy to see that she was breathing heavily and her eyes were alight with desire. There were little dewdrops of sweat on her upper lip. After a moment, a little doubt entered Piper's eyes although the lust there stayed.\n\n\"What is it?\" Piper asked.\n\nEven though Piper had spoken loudly, Suzanne couldn't hear her. She leaned close so that she could hear. She answered after Piper repeated herself. \"Sorry, this is new to me. I'm not sure I'm ready for it. Believe me, I'm not trying to lead you on,\" she told her.\n\nPiper gave her a smile and slid her hand back behind Suzanne's neck. She brushed her lips lightly against Suzanne's, before putting them right next to her ear. \"It's okay. I moved too fast for you. It's just that you turned me on so much. I couldn't help myself.\"\n\nWith each word, Piper's lips grazed against Suzanne's ear. She couldn't tell if it was intentional but she admitted to herself it felt good. Her pussy twitched and she could feel her nipples hardening. Despite that, she forced herself to pull away gently, hoping that Piper wouldn't feel rejected. She wasn't sure if she could go any farther, but she didn't want to say no either.\n\n\"I should go back and check on my friend. I'm just tagging along; she is the one who really wanted to come here,\" Suzanne told her.\n\n\"Alright,\" Piper said. She held out her hand and smiled broadly when Suzanne took it. They pushed their way through the crowd back to the table. Sometimes the crowd would close back together before the other could make it through an opening, but after a moment it would open again and they would continue.\n\nAs they approached the table, Suzanne saw that Colby wasn't alone. There was a woman sitting at the table with Colby. Even though they were not touching, there was a familiarity between them that caused her to feel a little pang. \"I'm not being reasonable,\" she thought. Still, she envied the other woman.\n\nWhen they reached the table, the other woman looked away from Colby with a little start. Realizing this must be Colby's friend, she got up from Suzanne's chair. \"Hi, I'm Hattie,\" she said to Suzanne and held out her hand. Suzanne had to let go of Piper's hand in order to shake it.\n\nHattie's grip was a strong one. Suzanne noticed that she was tall, although still a couple of inches shorter than she was. Her brown hair was cut relatively short, maybe an inch long. Suzanne guessed that she was probably in her mid-thirties. From an objective standpoint, Suzanne recognized she was attractive but just not her type.\n\n\"I'm Suzanne. This is Piper,\" she said before looking over at Colby. She just missed Colby looking away from having her eyes on Suzanne and Piper holding hands. Suzanne gave her a friendly smile. \"I told Piper we needed to check on you. Guess I didn't need to worry about you being lonely,\" she said as she sat back down in the tall bar chair Hattie had just vacated.\n\nColby blushed a little. \"Did you have fun dancing?\" she asked, ignoring what Suzanne had just said.\n\nThis time Suzanne blushed. Piper had already moved so that she was standing right next to Suzanne. Her hand was resting on Suzanne's leg, right above the knee. \"I did,\" Suzanne said. She wanted to say more but she felt inhibited by the other two women. It took her a long time to open up to anyone. \"Talking to Colby, or even Sandy, is one thing; talking about it with someone I've danced two dances with, or just shook her hand, is something else,\" Suzanne thought.\n\nDowning the last of her drink, Suzanne realized that between the drink and the dancing she needed to pee. \"I'm sorry, Colby. I need to go to the women's restroom. I'll watch our stuff when I get back.\"\n\n\"No worries,\" Colby told her. \"Hey do you want another drink? I'll flag down the waitress and order two more for us.\n\nHattie laughed. \"Good luck getting a waitress now. They are swamped, and there aren't enough to start with. Why don't I go buy a round for all of us?\" she offered. After a moment, Piper and Suzanne both nodded.\n\n\"You don't have to do that,\" Colby said, starting to protest.\n\n\"No, but I want to,\" Hattie said with a smile as she moved close and brushed against Colby.\n\nThat provoked a little laugh from Colby. \"Okay, okay. Sure, that would be nice,\" she said.\n\nHattie asked everyone what they wanted, repeated it once and then turned towards the bar. At the same time, Suzanne headed over to where she thought the bathrooms were, leaving Piper and Colby by themselves. Piper noticed that rather than watching Hattie walk away, Colby turned her head to keep an eye on Suzanne. It wasn't until she disappeared into the crowd that Colby turned away. Piper was still looking at her and couldn't prevent a little flush of embarrassment from being caught watching her.\n\nPiper leaned in close so Colby could hear. \"Hey, I know you said you two weren't together, but I don't want to step in the middle of something. I'm not blind,\" she said in a friendly tone.\n\n\"No, no! It's not that at all. It's just I convinced her to come here and I worry,\" Colby said hurriedly. \"I want to make sure she is okay with it all.\"\n\n\"Colby, I would believe you more if your eyes hadn't been fixed on her very nice ass,\" Piper said in that same friendly tone. \"Look, maybe Suzanne is new to this, but you and I have been around the block. She is a good-looking woman. Obviously I see the attraction too.\" She patted Colby on the shoulder. \"I'm trying to be the better person here,\" she added.\n\nLooking into Piper's face, Colby thought about her words. She seemed like a nice person, and she certainly didn't have to bring this up. \"It doesn't matter if I think she is attractive,\" she replied. \"For one thing, we work together. It wouldn't be right, and she definitely would have an issue with that. For another, she is my friend and she has gone through some pretty bad shit. I want to help her, and me seducing her wouldn't help her.\" She got a hard edge in her eyes. \"I'm looking out for her, Piper.\"",
        "\"I'm glad she has such a good friend then,\" Piper said and smiled. \"And now I sense you are telling me that it's women like me you are watching out for.\"\n\nDespite Piper's charm, Colby's look didn't warm up. \"Maybe. We are only here tonight with a flight home first thing in the morning. I may be younger than her, but like you said, I've been around the block. Not every pretty woman is a nice one.\" She looked at Piper and tried to see if she had taken offense. She couldn't see any signs of it.\n\n\"I wish I had time to convince you that I'm not like that,\" Piper told her. \"But that is something time shows, not words.\" She paused and pursed her lips. \"Bad shit?\" she asked.\n\n\"It's her story, but yeah, she has had to deal with a lot,\" Colby said, unwilling to say anything more.\n\n\"Okay. And it isn't going to bother you, me being with her here in front of you?\"\n\nColby slowly shook her head. \"I brought her here to meet other lesbians. If it bothers me, I won't let her see it.\" She didn't pretend that Piper would miss it. \"And I want to know if she wants to do something more, that it's her choice, not because someone takes advantage of her.\"\n\nBefore Piper could say anything more, she spotted Suzanne making her way back. \"She's coming back,\" Piper said as she put a little more distance between them. \"I'll be nice, promise.\"\n\nColby looked intently at Piper for another few seconds before she curtly nodded her head. \"Good!\"\n\nTurning to look at Suzanne as she got to the table, Piper smiled. Colby's smile took a little longer. Suzanne looked back and forth between them. Something made her slightly suspicious. \"What have you two been talking about?\" she asked.\n\nPiper glanced at Colby. Half the truth would be enough, she thought to herself. \"You have a good friend, Suzanne. Colby just wanted to make sure I didn't have evil intentions. I told her they are only a little evil,\" she said with a smile.\n\nDespite herself, Colby laughed. \"She is charming,\" she thought. Reaching over, she put her hand on Suzanne's. \"I got you into this; I am going to watch out for you.\" She gave Piper a grudging smile. \"I think she's safe. A little evil will do you good.\"\n\nUsually prickly when it came to her independence, Suzanne found that she didn't mind. On the dance floor, she felt off balance. She didn't know the rules yet, and knowing that Colby was there with a safety net was reassuring. Even better, it seemed like Piper was okay with it too.\n\n\"It's good to know you have the Colby seal of approval,\" Suzanne said.\n\n\"Provisional seal of approval, only provisional,\" Colby corrected. \"I only said I think she's safe. I reserve the right to revoke it!\"\n\n\"Understood,\" Piper said with a big smile as she looked at Colby. In the light of the bar, Suzanne didn't catch the seriousness in her eyes. Colby however saw it and gave a tiny nod.\n\nThe three of them began to talk while they waited for Hattie. The fact that it took almost twice as long for her to return from the bar as Suzanne from the restroom spoke volumes to how busy the bartenders were. They all profusely thanked her as she arrived with all of their drinks on a tray.\n\n\"Good thing I used to wait tables!\" Hattie told them.\n\nColby leaned over and gave her a peck on the cheek. \"Our hero!\" she said. Hattie gave her a big smile. It was clear that she wished the kiss had been on the lips. Colby smiled shyly but didn't move to kiss her again. She also avoided Piper's knowing eyes.\n\n\"We'll watch the stuff, if you two want to dance,\" Piper offered after they had been drinking and talking for a while.\n\n\"Yeah, it's your turn,\" Suzanne added.\n\nHattie got up from the table. \"You can't turn down an offer like that,\" she told Colby.\n\n\"You're right. Let's go,\" Colby said. As she got up, she nimbly avoided letting Hattie take her hand as she moved towards the dancers. Unlike Suzanne, she did not disappear completely into the crowd. She made sure that she could still see their table. She did not have any bad feelings about Piper, but she wasn't going to take chances either. As Hattie started to dance, Colby slowly moved in a circle until Suzanne was in view. Only then, did she give in to the pounding music and really start to dance. Still, Colby wasn't able to lose herself in it. Just as she would start to, she remembered to look over and make sure Suzanne seemed all right. Colby knew it was not fair to Hattie, but her reasons for coming here had changed. It wasn't about her having fun anymore; it was seeing that Suzanne did.\n\nWith Colby gone, Piper took her seat and began to talk to Suzanne. Even though she was trying to go slow, Piper found it impossible not to put her hand on Suzanne's thigh. Being close enough to be able to hear each other gave them an intimate feeling. Piper rationalized it as being better than putting her arm around Suzanne. \"If she doesn't like it, she will let me know,\" Piper thought. Even though she jumped a little, Suzanne didn't try to move away.\n\nWith Piper, Suzanne did not feel the same connection as with Sandy. She was pretty and Suzanne definitely was attracted, but it was at a physical level rather than an emotional one. With Sandy, it had been easy to open up to her about the details of her life. She just couldn't do that with Piper. Still, she felt like she needed to explain a little. The last thing Suzanne wanted to seem like was some bi-curious tease, too afraid to do anything.\n\n\"Thanks again for being understanding. I haven't done anything with a girl since high school. My parents found out and it didn't go well. For them, I've been trying to be straight,\" Suzanne said. \"I don't know that I think I can do that anymore.\"\n\nFrom what Colby had said, Piper was sure that Suzanne was holding something back. She didn't mind, nor did she press. \"It's fine. Coming out isn't easy. I am happy to just go with whatever you want.\" She picked up Suzanne's hand and kissed the top of it. When she put it down, Piper didn't let go.\n\n\"I have a flight home in the morning,\" Suzanne said, as if trying to find objections.\n\n\"We will just have to enjoy tonight, then,\" Piper replied.\n\nSuzanne smiled shyly. \"I'm running out of excuses, aren't I?\"\n\n\"I already told you; I'm fine with whatever happens. You don't need excuses.\" Piper purposefully didn't get any closer to Suzanne. It wasn't just a line about not pressuring her. Even though she did not know her, Piper could tell that coming on strong wouldn't be good for Suzanne. Her steps were already uncertain.\n\nSuzanne looked into Piper's face and tried to guess what was going on in her mind. It was impossible. The only person she could ever do that with was Chloe. Even it was only for an instant, the thought of Chloe was like a stabbing pain. She picked up her drink and downed almost half of it while she forced it away. As she looked back at Piper, she could feel the burn of the alcohol down her throat. Even though it was only her second drink, she felt the effects. \"I should have eaten a little more,\" she thought. The focus at dinner had been the negotiations and she had mostly just nibbled in between talking.\n\n\"You are very nice, Piper,\" Suzanne said with a little smile. She was pretty too. The way she wore her hair complemented her face, showing her strong cheekbones. Now that she was looking closer, Suzanne noticed Piper had a sprinkling of freckles over her nose and cheeks. Her hazel eyes seemed to glow with warmth.\n\nNot even realizing herself that she was doing it, Suzanne leaned forward and kissed Piper. It didn't last long. Piper was surprised enough that she only just started to kiss back when Suzanne pulled away. Her fingers tightened on Suzanne's hand, but she didn't try to extend the kiss.\n\n\"That was nice,\" Piper told Suzanne. \"Unexpected, but nice.\"\n\nGiving Piper another shy smile, Suzanne nodded. \"It was.\" A second later, she giggled a little. \"Don't worry, next time I think it will last long enough for you to get in the game.\" She liked the way that Piper smiled at that.\n\n\"A next time? Nice to hear that there will be a next time. I know it wasn't my best effort,\" Piper said. \"I can do better.\"\n\nThat made Suzanne laugh and she moved a little closer to Piper, which made her hand slip farther up Suzanne's thigh. She knew it was from her own movement, not Piper taking advantage. In fact, when Piper started to move her hand back to where it was, Suzanne put her hand under the table and stopped her. \"It's fine right where it is,\" she told Piper.\n\n\"Okay. I like having it there.\" Piper gave a little squeeze. Just like on the dance floor, Suzanne felt her body responding to how Piper was touching her. It didn't seem quite as disconcerting as it had before. Now she started to allow herself to enjoy it. Becoming aroused was such a nice feeling, she thought.\n\nSuzanne picked up her drink and sipped on it as she looked at Piper. Her lips glistened and Suzanne wondered if it was her lip-gloss or a little something left from their brief kiss. She couldn't help thinking about how she looked to Piper. Did her lips look as kissable as Piper's? Without realizing it, she moistened her lips with the tip of her tongue. Even though she knew Piper was attracted to her, she couldn't shake her nervousness. Thoughts of that first time with Chloe and how nervous she was, even after Chloe told her how she felt, threatened to crowd into her brain. She fought them away as best she could.\n\nTrying to focus her mind on the moment, Suzanne slowly leaned forward. This time Piper wasn't caught unaware. She waited until she felt Suzanne's soft lips press against her before she moved. At first Piper didn't do anything more than answer the pressure, then she let go of Suzanne's hand and slipped it behind her head. As Suzanne felt Piper's fingers in her hair, she parted her lips in a little sigh. Now Piper took the lead. Her tongue flicked out to trace along Suzanne's lips, feeling how her mouth opened more. She clearly welcomed what Piper was doing. \n\nAs Piper's tongue started to pass into Suzanne's mouth, it was met there by Suzanne's tongue. For a second the two tips hesitantly touched, greeting each other; then Piper slid hers in all the way. She could feel Suzanne's tongue swirling around her own, not yet daring to explore Piper's mouth. She pressed harder as Suzanne's excitement began to mount and she opened her mouth wider to let Piper do whatever she wanted in the kiss. From the little noises that Suzanne was making, Piper knew the effect she was having on her. Slowly she began to pull back, her tongue beginning to retreat back into her own mouth. As it did, Suzanne's tongue probed a few uncertain times but Piper ended this kiss. It wouldn't be the last; Piper was certain of that.\n\nWhen her lips lifted off Suzanne's, Piper opened her eyes. Suzanne still had hers closed, and her lips were still puckered and trying to prolong the kiss. After a moment, her eyes fluttered open. Piper slowly smiled. \"See, I told you I could do better,\" she told Suzanne.\n\nReturning the smile, Suzanne nodded. \"It was much better. It will be interesting to see if your improvement stays on the same trajectory.\"\n\n\"That is a pretty steep curve,\" Piper replied. \"I'm not sure if I can maintain it, but I'll try.\" Leaning forward, Piper initiated the next kiss. As their lips touched, they both closed their eyes and ignored everything else.\n\nFrom the dance floor, Colby saw the beginnings of the third kiss, just as she had watched as Suzanne kissed Piper before. \"I guess she's really interested,\" she thought to herself. It made her feel a little easier, having seen how Piper held back. Maybe she really was one of the nice ones. Still checking occasionally, Colby tried to shift her focus and enjoy dancing with Hattie. She felt bad for somewhat ignoring her. On the other hand, Colby wasn't sure if Hattie had even noticed. She certainly wasn't as insightful as Piper was. At the very least, she was hiding it very well if she realized that Colby was distracted.\n\nAs the song ended and a new one replaced it, Colby tried to make up for it. She reached up, put her hand behind Hattie's neck, and danced very close to her. Her body brushed against Hattie's in time with the music. It took Hattie a little bit to match it. Colby thought how Suzanne seemed to have more grace even though she was even taller than Hattie was. She could never get quite in sync with Hattie, not for any extended period. For a few brief moments, they moved as one but then Hattie would lose it. They always recovered and brought it back, but as much as Colby tried, it didn't last.\n\nAs the song ended, Colby took Hattie by the hand. \"I could use a break, and a little of my drink,\" she told Hattie. She had checked the table already to make sure that Suzanne and Piper weren't in the middle of something. They were just talking now, faces close to each other. Before that had just been a requirement to be heard; now there was a feeling of intimacy in the way they leaned closer. Even though she felt a little tightness inside, Colby tried to feel good about the steps Suzanne was taking in opening up.\n\n\"Hey you two,\" Colby said. \"I hope we aren't interrupting anything good.\" She had on a smile. Hopefully even the insightful Piper wasn't able to see through it. It was hard to tell since Piper barely glanced at her. Her focus was Suzanne.\n\n\"Not at all,\" Suzanne said with a sunny smile of her own. \"We are just getting to know each other. Piper's a physical therapist. She has some funny stories about how people hurt themselves.\" She gave Piper an affectionate look before looking back at Colby. \"Did you have fun dancing?\"\n\nBefore Colby had a chance to say anything, Hattie spoke up. \"It was great. She has some sweet moves.\"\n\nColby smiled and nodded her head. \"Yeah, it was fun.\" She looked over her shoulder towards the restrooms. \"I think it's my turn now. I'll watch the table and you can dance when I get back.\" Picking up her glass, she took a sip before moving off towards the back of the club. Hattie thought about following her but decided not to.\n\n\"You two seem to be hitting it off,\" Hattie said as she leaned up against the table. \"I wish I was doing as well with Colby.\" Piper looked away, keeping whatever thoughts she had to herself.\n\n\"Dancing was fun, right?\" Suzanne asked.\n\n\"It was. I'm just not sure how much she was into it, though the last dance was better,\" Hattie replied. She looked at Suzanne. \"Help me out. You're her friend. What would get her to like me more?\"\n\nSuzanne felt her insides squirm a little. Hattie seemed nice, but her loyalties were with Colby.\n\n\"Hey, that's not cool,\" Piper broke in. \"You are putting Suzanne in an awkward spot.\" It might be easier if Colby was occupied with Hattie, but Piper still didn't like it, especially with Suzanne's underlying nervousness.\n\nSuzanne glanced gratefully over at Piper before looking back at Hattie. \"I'm the wrong person to ask. I've only known her a few weeks anyway, and this is the first time we've gone out like this.\" When Hattie seemed skeptical, Suzanne felt a tiny flare of irritation. \"She is either going to like you for you, or she won't. I know that much about her.\" Her voice betrayed how she felt.\n\nHattie nodded. \"Okay, not a problem. Wasn't looking for state secrets, you know. I just wondered if you had a suggestion.\" She looked over towards the restrooms and took a few sips of her drink.\n\nGradually the tension dissipated. The three woman started to talk again. There was still a slight awkwardness to it, but Suzanne thought that was mostly because Hattie felt like a third wheel. Hattie was just talking to pass the time. Most of her attention was on checking if Colby was returning. Suzanne wasn't sure but it seemed like it was taking longer than her own trip to the restroom. She felt Piper's fingers start moving on her inner thigh, making slow circles. Flashing Piper a smile, she leaned in and gave her a brief kiss. Piper didn't try to draw it out. Neither one of them felt like making out in front of Hattie. Still, Suzanne moved slightly closer when it ended and put her head on Piper's shoulder.\n\nWhen Hattie perked up, Suzanne guessed that Colby must be coming back. \"She looks irritated though,\" Suzanne thought. Looking in the direction Hattie was, it wasn't too hard to figure out why. Colby was chatting with a pretty Asian woman as they walked back. They weren't touching, but they both had on big smiles as if they were enjoying each other's company. They both had a drink in their hand.\n\n\"Hey there,\" Colby said as she got to the table. \"This is Lily. We were standing in line together.\" She introduced the other three women to her. Hattie was civil, but just barely. Suzanne watched as Colby met Hattie's eyes. There was a touch of defiance in them. Lily barely glanced at Hattie as she was introduced. Suzanne guessed that she already knew about Hattie before she got to the table.\n\n\"She must not really like Hattie,\" Suzanne though to herself. The Colby she had gotten to know was polite and not the kind to tease someone. Nor was she likely to lead someone on. She tried to think how to help her friend out. She didn't dislike Hattie, but she also had no loyalty to her.\n\n\"So Lily, what do you do?\" Suzanne asked her. Lily smiled gratefully and started to explain that she was a stockbroker. As the women talked, Suzanne subtly checked Lily out. She had to smile at herself; her experience in hiding her interest in women might still have some value as no one seemed to notice it. She thought that Lily was very pretty, with her hair in a wedge cut so that it framed her face. Her eyes were dark and accentuated with heavier eyeliner that brought out an exotic look. She had on a short black dress that exposed most of her legs. It was tight and showed off what curves she had, which weren't big. Lithe was the word that came to Suzanne's mind. Her breasts were small, maybe even less than Suzanne's own, but that didn't seem to bother her in the slightest. Suzanne admired how comfortable she seemed to be with her body.\n\n\"Colby, would you like to dance again?\" Hattie asked, breaking into the conversation. It ground to an instant stop. Suzanne couldn't help glancing at Colby. She didn't look angry; instead it seemed like an expression of sad acceptance to Suzanne.\n\n\"Not right now, Hattie but thanks,\" Colby said. \"I'm having fun talking.\" She turned away and started to talk again. Now Hattie was clearly upset. Colby had been nice about it, but her lack of interest was obvious. Finally, Colby broke off what she was saying and looked over at Hattie. Sighing, she moved a little closer to Hattie so that she could speak in her ear.\n\n\"I'm just here for a night to have a drink and a little fun,\" Colby said in as low a tone as she could and still be heard. \"I'm not looking to hook up.\"\"\n\n\"I thought you were having fun with me,\" Hattie told her. \"You go to the bathroom and come back with another woman?\"\n\n\"I told you; I just want to have a fun evening. I had fun dancing but I wasn't here with you, Hattie.\" Colby could feel the tension in Hattie. \"Buying me a drink and dancing a couple of dances doesn't give you any rights over me.\" Colby looked Hattie straight in the eyes until finally Hattie blinked and looked away. A moment later, she took a step away from the table.\n\n\"I guess I will see you all some other time,\" Hattie said. Looking at Colby, Hattie added, \"Have fun.\" She turned on her heel and disappeared into the crowd.\n\nSuzanne let out the breath that she hadn't even realized she was holding. \"I guess going to a lesbian bar is a lot like going to a regular bar. Meeting women can be as weird as meeting guys.\"\n\nColby smiled at her and nodded. She turned to Lily. \"Suzanne's trying life out of the closet for the first time,\" she said, providing the simplest explanation.\n\n\"Cool!\" Lily said to Suzanne. \"Welcome to the light!\" Something about how Colby pursed her lips let Lily know to leave it at that.",
        "\"Thanks,\" Suzanne said as she stood up. \"Want to dance,\" she asked Piper. Her eyes were bright and she had a big smile. Piper nodded enthusiastically and started to get out from behind the table. \"I've never asked a woman to dance before!\" Suzanne said in an excited voice. Her eyes were on Colby, as if she wanted her friend's approval.\n\n\"It wasn't so hard, was it?\" Colby grinned, caught up in Suzanne's energy. \"It won't be your last!\"\n\n\"Nope,\" Suzanne told her as she grabbed Piper's hand and pulled her along into the crowd.\n\nThe two women left alone at the table giggled. \"She's had a little to drink, hasn't she?\" Lily commented.\n\nLaughing a little more, Colby nodded. \"Yeah, probably just enough actually. Right now, she's able to let go and enjoy herself, which is huge for her. Another drink will probably screw up her judgment, and then she'd regret it in the morning.\"\n\n\"She has a good friend to take care of her,\" Lily said as she put her hand on Colby's shoulder and then slowly ran it down her arm.\n\nColby had to admit that Lily's touch felt good, but thoughts of Suzanne were still foremost in her mind. Her voice was a little distant as she answered. \"She's had a lot of shit happen to her, and no one to be there for her.\"\n\n\"Well, now she has you,\" Lily said. \"She's lucky.\"\n\nColby covered up her look of embarrassment by taking a drink. \"Well, she deserves a little luck.\" The moment passed and she looked at Lily. \"So tell me, what do you do for fun?\" Lily flowed with the abrupt change in topic and the two of them started to get to know each other.\n\nOut on the dance floor, Piper found that she was following rather than leading like before. Suzanne picked the spot and the set the tone for how they danced. The first dance was energetic with both of them moving together but almost never touching. It felt almost like a game, where Suzanne was challenging Piper to match her movements. Every time that Piper didn't quite anticipate what she would do, Suzanne eyes blazed with triumph and her grin would widen. As the dance went on, Piper started to get more of a feeling for guessing Suzanne's next move. They flowed together better and by the end of that dance, they were synchronized.\n\nAs the next song started, the tempo was different. The beat was stronger, yet slower. There was more of a primal feeling to the song. After taking a few moments to understand it, Suzanne stepped closer to Piper. Her hands and arms still moved to the music without touching Piper, but the same couldn't be said for her body. As she danced, Suzanne's body brushed against Piper. Rather than being coordinated, they came together and then moved apart. The distance between them slowly lessened, but still they tried not to touch. It was just now they were seeing how close they could come.\n\nJust as the song came to its end, Suzanne leaned forward and brushed her lips against Piper's. Unlike the other night with Sandy, she was the one taking the initiative. Piper seemed to be just fine with that. Her lips matched the light pressure from Suzanne and lifted just a moment after her. Piper's eyes were a little clouded with desire and she licked her lips, but still she followed Suzanne's lead.\n\nThe next song was much slower than the other two. Hesitating for a moment, Suzanne debated what she wanted to do. The drinks were definitely hitting her. She wasn't quite drunk, but her inhibitions were lowered. The way Piper was looking at her was getting to her. The rational part of Suzanne's mind was still arguing for caution, but that had been her watchword for so long. \"Fuck caution,\" she told finally herself. \"Piper's hot! And she wants me too.\"\n\nStarting to move to the music, Suzanne circled around Piper. She stopped Piper from turning along with her with a shake of her head. When Suzanne was behind her, she stepped forward and wrapped her arms around Piper's waist so that she could pull Piper against her. As their bodies came together, Suzanne nestled her head down on Piper's shoulder. They moved to the music together, each sensing what the other was doing. Each place their bodies touched felt like a little caress.\n\n\"Mmmm,\" sighed Suzanne right by Piper's ear.\n\nPutting her hand behind her head, Piper ran her fingers through Suzanne's hair. Her hand only applied the lightest of pressure, but it was enough for Suzanne to know what Piper wanted. She turned her head and kissed the slender neck. Starting just below Piper's ear, she traced a path downwards. When Piper shivered, it sent a thrill through Suzanne. She was turning Piper on. It had been so long since she had done that. Even with boyfriends, they were always the ones working to excite her. They invariably wanted it more and needed to bring her along. \"Not since ...\" she started to think before forcing her mind to not go there. It mostly worked.\n\nMostly, but not completely.\n\nAs in tuned as Piper was to Suzanne, she instantly felt a change. It was subtle but there was a tension in her that had not been there before. The kisses didn't stop but they lost the passionate edge that was so exciting. She twisted around to face Suzanne. She put her arms around Suzanne's neck and started to dance with her in classic slow dance fashion. In the dim light of the club, Piper found it hard to read her face completely, but the confidence that had been there moments before seemed to have vanished.\n\nPulling lightly, Piper brought their lips together. She started with a little kiss on the middle of Suzanne's mouth before moving from kissing first one corner and then the other of her lips. It was only on the third one that she felt Suzanne respond by moving into the kiss. Slowly gliding her lips against Piper's, Suzanne pressed back and opened her mouth. That was all the invitation that Piper needed. The tip of her tongue flicked out and traced inside Suzanne's lips. She felt Suzanne release a long breath and her tension seemed to fade away.\n\nPulling back, Piper looked at her. \"Are you okay?\" she asked, as her fingers stroked the back of Suzanne's neck.\n\n\"Yeah,\" Suzanne said but her real answer was by kissing Piper back. This time there was no hesitation. Her mouth came down hard against Piper's with her mouth opening. It was Suzanne's tongue that pressed into Piper's mouth. Parting her lips, Piper sucked it into her mouth and felt it swirling around. She pressed her body against Suzanne, any pretense of dancing gone. Suzanne's hands moved downward to cup Piper's ass, caressing them and pulling the two of them together.\n\nWithout meaning to, one of Suzanne's legs slipped between Piper's. The difference in heights between them meant that Piper was arching her back as Suzanne leaned over. That thrust her hips forward a bit, which in turn pressed her against Suzanne's leg. At first, it was hardly noticeable. The longer the kiss went on, the more the two of them moved with it. It began to build. The friction of Suzanne's thigh pressing against her pussy stoked Piper's excitement. What had started as accidental became deliberate. She started to grind her pussy against Suzanne. As her excitement grew, it transferred to Suzanne. Their kissing became wilder and Suzanne tensed her leg so that it pressed against Piper.\n\nNeither one of them had any thoughts for where they were. In truth, they were not the only ones dancing like that. For the most part, they were ignored outside of a few knowing looks exchanged. Suzanne and Piper didn't care. They were lost in their own world.\n\nFinally, Piper couldn't continue kissing. She couldn't suck in enough air through her nose. She ripped her mouth from Suzanne's and pressed her forehead against Suzanne's shoulder. Her hips moved faster and harder.\n\n\"Oh fuck,\" she said. \"Oh, fuck!\" Her fingers curled and the nails pressed into the skin at the back of Suzanne's neck, just before her body started to shake as she came in Suzanne's arms. Her hips jerked against Suzanne's leg. It didn't last long, but when it ended only Suzanne's arms kept her from sliding to the floor. Her hands stayed around Suzanne's neck, but their grip was as limp as the rest of Piper's body.\n\nSuzanne continued to ignore the rest of the world. Closing her eyes, she held Piper close to her. Gradually she picked up the rhythm of the music and began to move a little with it. Shifting she withdrew her thigh. The two of them pressing together like that had been an accident. It thrilled her, but Suzanne didn't want to give anyone a repeat performance. As she readjusted them, she felt Piper stir in her arms and then a soft kiss on the collar and again on her neck.\n\n\"Jesus, and I thought you were the inhibited one,\" Piper murmured loud enough for Suzanne to hear.\n\nGiggling, Suzanne replied. \"I'm not the one who was humping my leg. Wow, this was a first time for me.\" She couldn't believe that she had just helped Piper cum like that. It was the boldest thing that Suzanne had ever done.\n\nAs they separated, Piper couldn't help looking down at Suzanne's thigh. She knew how wet her panties felt. While she hadn't felt embarrassed while she was recovering, her cheeks flushed beet red now as she saw the large wet spot on Suzanne's jeans. The combination of her cheeks flushing and her fixed gaze caught Suzanne's attention. She didn't even have to look down. She knew immediately. She hadn't noticed it before, but now Suzanne felt the sticky wetness adhering the denim to her leg. As much as she wanted to try to ignore it, Suzanne couldn't. Her eyes dropped and she saw the big wet patch.\n\nLooking back up, Piper's embarrassment was still clear to Suzanne. Beyond that, she saw something else. It excited Piper. She couldn't stop looking down and licking her lips. When she became aware of being watched, Piper met Suzanne's eyes. Before Piper's eyes had shown desire, now they shone with lust. She couldn't disguise it. Suzanne felt her own excitement flare even higher.\n\nStepping forward, Suzanne ignored the music as she put a hand behind Piper's neck and pulled her into a kiss. There was no pretense of dancing. Piper's hands went around Suzanne's waist as Piper lifted up on her tiptoes to deepen the kiss with the taller woman. Her mouth opened to accept Suzanne's probing tongue, and then sucked on it as Suzanne slowly fucked her mouth. Once again, Piper felt her hips press forward against Suzanne. She couldn't remember making the decision to do it. Her hips seemed to have a mind of their own.\n\nWhen Suzanne started to pull away and end the kiss, Piper protested and sucked harder while her hands went higher on Suzanne's back to hold her close. It was to no avail. Suzanne's height and strength gave her the advantage over the smaller woman.\n\n\"Not here,\" Suzanne said as she looked into Piper's eyes. \"Let's go find Colby and see if she is ready to go back to the hotel.\"\n\nFor a moment, Piper hovered on the edge of being out of control again, and then she swallowed hard and nodded. \"Okay,\" she said. Her voice was thick with lust and she stretched upwards to whisper in Suzanne's ear. \"I was trying to hold back, but fuck you turn me on. I really want you.\"\n\nEven though it was nothing more than what she already knew, Piper's words filled her with a mixture of feelings. Desire of her own was certainly one of them. At the same time, it had been so long that Suzanne worried that she would not be able to meet Piper's built up expectations. Just thinking about how long it had been brought memories of Chloe immediately to mind. She tried to push them away along with the sense of guilt and betrayal. Even as she mostly succeeded, Suzanne heard the little voice in her head. \"You don't deserve even this.\" Her eyes closed in pain and she was glad that Piper couldn't see how it passed across her face for an instant.\n\nWhen she straightened up, Suzanne's control was mostly back. The pain was there, as it almost always was, but once again hidden. \"Me too,\" she told Piper as she took her hand and started to lead her back towards the table.\n\nThe way her jeans stuck to her skin with each stride reminded Suzanne of what had just happened. \"Would Colby notice?\" she wondered. She tried to tell herself that she didn't care if she did, but she knew it was yet another lie she told herself. The truth was that she did not know if she wanted Colby to notice; and she was not even willing to examine the question. She squeezed Piper's hand and tried just to think of her. Her feelings about Colby weren't relevant right now.\n\nAs she got closer to their table, Suzanne noticed that Lily was nowhere to be seen. Instead, Colby was with a tall black woman. She was almost as tall as Suzanne was but built completely differently. While Suzanne's breasts were small and fit with her lithe body, this woman's breasts were practically popping out of her low cut top. Her long legs were equally on display below the miniskirt that enclosed her ample ass. It wasn't fat by any means but she had a wonderfully curved ass that fit her perfectly. Suzanne couldn't help envying her for those curves. Her face was just as pretty with dark eyes, a wide nose and puffy, kissable lips, with her hair back and put into long braids with beads. \"She's quite striking,\" Suzanne thought.\n\n\"Hey there,\" Colby said as she saw the two women approaching. Her eyes flicked down to look at how they were holding hands. As she did it, she noticed the spot on Suzanne's leg. Her eyes lingered there for a brief second but when she looked up there was no sign of any reaction. \"This is Nicole,\" she said before looking back at the black woman. \"These are the friends I was telling you about.\"\n\n\"Nice to meet you,\" Nicole said as they got to the table. Her attention had been on Colby and missed what Colby had seen.\n\n\"How are you doing?\" Colby asked Suzanne. It was impossible not to see the difference from when she left for the dance floor. Suzanne's arm was now around Piper's waist, holding her close. Her eyes kept being drawn back to look at Piper, who was clearly excited and enjoying the attention from Suzanne.\n\nWhile Suzanne smiled a little shyly at Colby, that seemed to be the extent of her embarrassment. \"I'm doing great,\" she told Colby. \"In fact, I was thinking about heading back to the hotel.\" She found it a little hard to continue meeting Colby's eyes although she managed not to look away. \"There is nothing between us so I shouldn't feel guilty about her,\" Suzanne told herself. She tried to ignore the other source of her guilt.\n\nAs Suzanne talked about going back to the hotel, Colby felt a little pain in her heart but did everything she could to avoid showing any sign of it. She smiled and nodded at both of them. Still, it was a little awkward and there wasn't anything obvious to say. Finally she simply said, \"Okay\" and laughed.\n\n\"I didn't mean that you have to leave too,\" Suzanne said looking at Nicole. She wondered what had happened with Lily, and how interested Colby was in Nicole. \"Piper has a car so she can drive me back and you can get a cab if you want to stay.\"\n\n\"No, I'm a little tired. It's been a long week,\" Colby told her. She couldn't help adding, \"And we have an early flight.\" As soon as she said it, Colby felt bad. It felt bitchy.\n\nSuzanne didn't seem to take it that way. Her smile got a little shyer and she looked at Piper. \"Luckily I can sleep on planes,\" she said.\n\nPiper's grin got bigger. She looked over at Colby. There was a bit of triumph in her eyes, despite trying to avoid it. Piper knew she was getting something Colby secretly wanted. She wasn't proud of the feeling, especially when she could see what Suzanne didn't; Colby hid it well, but her hurt was still there if you were really looking.\n\n\"Then you can ride back with us,\" Piper told Colby. \"Whenever you're ready.\"\n\n\"It's okay; I can take a cab,\" Colby said, protesting a little. \"You don't want a third wheel around.\"\n\n\"Don't be ridiculous. If we're all going to the same place, I don't want you taking a cab late at night,\" Piper said with an air of finality. Faced with logic, Colby gave in.\n\n\"I'll be ready in a few minutes,\" Colby said with a glance towards Nicole.\n\n\"No problem! Take your time,\" Suzanne said with a smile. The club was a little less crowded and the table next to them had opened up. They moved over to it and gave Colby a little space.\n\nColby turned to Nicole and gave her an apologetic smile. \"I guess I'm going,\" she said.\n\n\"Hey, I understand. You told me that you'd leave whenever your friend wanted to. I didn't have any other expectations, Colby. I'm sorry you don't live around here so I could get to know you,\" Nicole said with a smile.\n\n\"Me too,\" Colby said with an answering smile. Hattie had been too pushy and while Lily was less, she was looking to hook up. When she figured out Colby wasn't, she moved on. Nicole was very nice and they had just enjoyed talking.\n\n\"Like I said, I get out to Seattle usually a couple times a year to visit my folks. Can I call you the next time?\" Nicole asked.\n\n\"Sure, that'd be nice,\" Colby answered. She wasn't looking for a long distance relationship but then again right now Colby didn't feel like having any sort of relationship. Going out with Nicole when she was in Seattle for a few days would probably be as much as she wanted. She dialed her number into Nicole's phone who then called her. \"Now you can get in touch with me,\" Colby said. As she got up for the table, she gave Nicole a little hug and pressed her lips against Nicole's cheek.\n\n\"It was nice to meet you, Colby,\" Nicole told her.\n\n\"I'm glad we did. I hope you do call,\" Colby said with a smile. Looking over at the two other women, Colby hesitated. She wasn't sure if she should be surprised that they were kissing but it seemed awkward to interrupt them.\n\nNicole didn't have any of Colby's mixed feelings. She laughed. \"Jeez, get a room!\" she told them and then laughed again as they looked over at Nicole and Colby.\n\nSuzanne kissed Piper one more time, a little defiantly. As it ended, she looked at Nicole again. \"That was the plan,\" she said.\n\n\"Well good! You two have fun,\" Nicole said. She put her hand on Colby's forearm. \"See you,\" Nicole told her before walking away into the crowd.\n\nColby didn't look after her for more than a moment. Quickly turning to look at the other two women, she said, \"Shall we go?\" They all started towards the door with Colby leading the way and the other two following. It wasn't long before they were outside. The cool air and the lack of noise both felt welcome.\n\n\"Sorry to cut off your time with Nicole,\" Suzanne said as they walked in the direction Piper pointed.\n\n\"It's no big deal. I had fun tonight but I wasn't in the mood to hook up. Nicole overheard me say something about Seattle and we started to talk because she's from there too. It gave us something to talk about, but it wasn't going anywhere else tonight,\" Colby said.\n\nIt did not take long to find Piper's car. Colby got in the back behind Piper since Suzanne needed more legroom. From her position, Colby could easily see Suzanne's profile, though Suzanne couldn't really see her. Since her focus was on Piper, Colby could observe her without notice. In the bar, it was easy to pay attention to whoever was with her and to ignore what was going on with Suzanne. Even when Piper brought it up, Colby managed to brush it away. It was harder now to see the desire on Suzanne's face and know it wouldn't ever be for her. \"This is good for her and I am just a friend,\" she tried to tell herself. The words were true; she couldn't deny that. As she looked at Suzanne's pretty face, she also couldn't deny that deep down there was another truth.\n\nColby thought back to when she was alone with Piper and remembered what she had told her. \"She is my friend and she has gone through some pretty bad shit. I want to help her, and me seducing her wouldn't be good for her.\" That was also the truth. She stopped looking at Suzanne and instead looked out into the night. After a little while, Colby let a long silent sigh escape. \"She needs a friend who understands her more than a lover,\" she thought. \"I can be that for her.\" They were getting close to the hotel and she focused on getting her emotions under control. The last thing she wanted was to give Suzanne the impression that she was upset.",
        "Leaning forward, Colby put her head between the two front seats. \"You know, I was thinking. Maybe you can let me out before you go into the parking garage. That will give you some privacy in going to your room, and honestly as well behaved as you both have been, I still feel like a third wheel in your way.\" She smiled so that they didn't take it the wrong way.\n\n\"Sure,\" Piper said with a laugh as she turned into the hotel and drove up to the entrance.\n\n\"Do you want to meet for breakfast?\" Suzanne asked. Now that they were here, she felt shyer about what was going on and tried to cover it up with a veneer of professionalism.\n\nColby gave her a wry little look. \"Umm, why don't I leave that to you and whether you have time in the morning?\" She and Piper laughed together when Suzanne blushed. \"We need to be gone by 6:30, right?\"\n\nLooking over at Piper apologetically, Suzanne nodded. \"I'm afraid so,\" she said, more to Piper than Colby.\n\n\"I'll be down by 5:45 if you want to join me. And I will call your cell by 6:15 if you don't, just in case you oversleep or are ... ummm ... busy.\" Despite her mixed feelings, she couldn't help teasing Suzanne a little. Even as Suzanne blushed a deeper red, the fact that Piper didn't make things worse by laughing made Colby like her even more. \"At least, she hooked up with someone nice,\" she told herself.\n\nAs she got out of the car, Colby looked at both of them one last time. She avoided the sympathetic look that Piper gave her. She appreciated it but it hit too close to home. \"Have fun,\" Colby said simply then shut the door and headed into the hotel.\n\n\"Alone at last,\" Piper said as she started to go down the entrance ramp into the parking garage.\n\n\"Uh huh,\" Suzanne said in agreement. She leaned over and gave Piper's neck a soft kiss.\n\nThere was a slight jerk to the car as Piper couldn't stop a little shudder run through her. \"Hey, none of that until we are parked! You do it too well, and I might hit something,\" she said in a firm tone.\n\nSuzanne smiled and whispered, \"Sorry, Piper. I won't do it ever again.\" Her tone was low and very sexy.\n\n\"Fuck,\" Piper groaned. \"You do that well too! And I only meant no kissing until I park. After that, the sky is the limit!\"\n\n\"Ohhh! Promises, promises!\" Suzanne told her.\n\nAfter she pulled into a parking space, Piper looked at Suzanne. \"Leave by 6:30? Your work schedule is tough. It's almost 2:00 now. It doesn't give you a lot of time to get some sleep, even without doing anything else. Are you sure you want to do this? I've had fun but if you need to end it now, I won't feel too bad.\"\n\nSuzanne's voice was calm but the desire in her eyes burned fierce. \"I told you. I can sleep on the plane. Right now, I want to do something other than sleep in my bed, and I want to do it with you!\" she said.\n\n\"Okay, I just wanted to check one last time, but I want that too!\" Piper said as she kissed Suzanne. They both kept their passion in check. They would be in Suzanne's room soon enough. Neither one of them wanted to waste time in the car. They got out and headed to the elevator. As they walked, they held hands. Suzanne couldn't keep a smile off her face. \"It's the first time I've ever done this without worrying if someone sees me,\" she thought. Even though memories of Chloe threatened to crowd in, she successfully kept them at bay and focused on the moment. \"I like how it feels,\" she told herself. How could she go back, now that the wall was broken?\n\nStill, Suzanne felt a sensible restraint. She had no interest in giving a show to anyone who might be watching the security footage from the elevator rides. Neither did Piper. They kept kissing, but they were not wild. It was enough, though, to build the excitement both felt. When they reached the door to Suzanne's room, almost all pretense at restraint was lost. As Suzanne fumbled with unlocking it, Piper pressed her body against Suzanne's back and kissed the nape of her neck. With her arms around Suzanne, Piper pulled her even closer. The feeling of Piper grinding against her ass drove Suzanne crazy, making it even harder to focus on opening the door. Finally, she heard it unlock and they almost fell into the room.\n\nAs they recovered their balance, both women started to giggle. Hearing Piper giggle seemed funny to Suzanne and she giggled harder. That in turn spurred Piper. For a moment, it seemed like they would lose it entirely, but even through the laughing Piper kept her look of lust. Suzanne saw that and felt her own desire surge. Reaching out, she pulled Piper into a deep kiss. In the privacy of her room, Suzanne could finally completely give in to her needs.\n\nCupping Piper's ass with her hands, Suzanne mashed their bodies together. Piper's arms went around Suzanne's neck and she pulled them even closer. Once again, it was almost natural for Piper to straddle the taller woman's leg. It was as if she fit there. Unlike earlier, she didn't grind her mound but the pressure stoked her desire. She knew that her hard nipples were poking Suzanne's midriff, confirming her excitement.\n\nPulling her mouth away from Suzanne's, Piper looked at her with lust burning in her eyes. \"Let's get undressed! I want to fuck!\" she said in a husky voice.\n\nA bolt of pure wanton need shot through Suzanne at Piper's words. They captured completely what was going on. This was about fucking, not making love. She felt a pang in the back of her brain, but she managed to suppress it before she could think about it. She didn't need Chloe's ghost haunting her right then. Fucking was good enough. \"God, yes,\" she groaned.\n\nThe two of them unclenched. For Piper, it was easy to get undressed. She pulled off her t-shirt and threw it on the floor. Her bra joined it moments later. Her breasts were a little bigger than Suzanne's were, but she wasn't big chested. Even as Suzanne frantically tried to unbutton her blouse, she drank in the sight of Piper shedding her clothes. Her areolas were big round disks with long hard nipples in the middle. Suzanne's mouth watered with the need to taste them. As she pulled off her blouse, she cursed as one hand caught in the cuff and she had to pause to unbutton it. Finally, she was able to throw it behind her, followed immediately by her bra.\n\nPiper's eyes glanced over her. Suzanne didn't have an ounce of fat on her. She was almost too thin for Piper, with her ribs clearly visible. The lustful look on Suzanne's face, however, was incredibly sexy. The raw desire fired Piper's excitement to even higher peaks. She was impatient for more. With her own skirt, Piper was again much quicker than Suzanne was. She had already kicked off her shoes. Undoing her skirt, she pulled it off and her panties at the same time. She jumped onto the bed and grinned at Suzanne. \"Hurry up, slowpoke!\" Piper told her.\n\n\"I'm going as fast as I can,\" Suzanne said in frustration. Her own desire was burning and she wished that she was as ready to play as Piper was. Taking off her jeans was almost as challenging as her blouse, given her current state. They were very tight and she felt like she had to peel them off. As they came down, her panties slipped down a little, partially revealing her pussy.\n\nPiper's eyes lit up at the sight. Not only were they wonderfully wet, she could see how Suzanne's pussy glistened. \"I'm going to like licking that juicy pussy,\" she told her soon to be lover. She loved the way Suzanne blushed.\n\n\"I want to lick yours first,\" Suzanne responded. She wasn't going to let the shyness she felt at Piper's words stop her expressing what she wanted. She knew she was blushing even more now, but it didn't matter.\n\n\"Anything for you, Suzanne,\" Piper said with a smile, then lay back in the bed, and spread her legs.\n\nIt was the first glimpse that Suzanne had of Piper's pussy and now she saw it all. Unlike her own neatly trimmed little landing strip, Piper's mound was completely bare. A part of Suzanne's mind wondered if she shaved or if she waxed. \"I'll find out soon enough,\" she told herself. Even the best shaving job couldn't remove stubble like a waxing. She found that she was very eager to get the answer.\n\nAs soon as she pulled off her panties, Suzanne got on her hands and knees. Crawling across the bed, she moved between Piper's legs without any delay. The bare little cleft caught her eyes. As she stared, Piper moved her legs even wider and caused it to part a little more. Her clit poked out from under its hood. Suzanne didn't notice when her mouth opened and her tongue ran across her teeth. A little drop of saliva dripped out from the corner of her mouth and ran down to her chin. She was the perfect picture of desire.\n\nSlowly Suzanne lowered her head down. As she came close, the intoxicating aroma of Piper's pussy became almost overwhelming. The scent triggered memories that she didn't want. Suzanne tried to focus on how Piper differed from Chloe to help shut that out. Time had dulled some of the details, but Chloe seemed fresher somehow. It wasn't unpleasant; in fact, it reminded Suzanne that this time it was with a more experienced woman in her twenties. Whether it was true or not, she clung to that thought. \"This isn't Chloe. She smells different and I know she will taste different too.\"\n\nExtending her tongue, Suzanne dipped her head for her first taste. \"Oh please, let her taste different,\" she thought. As her tongue touched Piper's slit, she felt Piper jerk. From the way the bed shook, it must have been her whole body. At the same time, Suzanne felt an explosion of tastes in her mouth; tangy, musky and salty. It reminded her even less of Chloe than the smell that was still filling her nose. It helped Suzanne to lose the anxiety that had repeatedly threatened to overwhelm her. Instead, she pressed her tongue in deeper to lap up more of Piper's juices. The more that she swallowed the less that Chloe hovered over her. The smooth skin of Piper's labia answered Suzanne's question from before. It was definitely a wax job.\n\nReaching down, Piper put her hands in Suzanne's head. \"Fuck, yes! Just like that!\" she moaned as she lifted her hips up to press herself against Suzanne's mouth.\n\nSuzanne didn't need much encouragement, but Piper's words still served to spur her on. She began to slide her tongue up and down, feeling her way along. As she found spots that made Piper react, she focused on them for a brief time before trying to find the next one.\n\nWith a lick of one of Piper's petals, she felt it catch on her tongue. As it stretched, Piper's body tensed and then shook as it slipped free. If Piper's eyes hadn't been closed with ecstasy, she would have seen the mischievous look on Suzanne's face. First with her lips, Suzanne grasped that spot and sucked. That would have been enough to make Piper gasp, but she cried out when Suzanne pulled and stretched it far further than her tongue had. Slipping loose again, Piper couldn't control the tremors that ran through her. Suzanne did it again, this time with her teeth.\n\n\"Fuck,\" Piper growled deep in her throat. Her fingers were now tangled in Suzanne's hair and tugging to show she wanted more. Sparks flashed in the dark of her closed eyes when she felt Suzanne's teeth clamp down on the sensitive fold. Already, she was on the precipice.\n\nIt wasn't hard for Suzanne to sense that Piper was close to cumming. The tremors were no longer stopping between her little nips. While she was proud that she could excite Piper this way, Suzanne wanted to drag it out. When Piper came, it needed to be massive. Changing the point of attention, she heard Piper groan in frustration. It would have only taken a little more to go over that edge and Piper wanted it now.\n\n\"Not yet,\" Suzanne purred.\n\nHer voice made Piper open her eyes to see her lover's playful face. She felt Suzanne's lips slide down her pussy. It was a wonderful feeling, but not as electrifying as what she did moments before. Piper arched her hips, making her need extremely clear. Suddenly Suzanne stabbed her tongue deep into Piper's pussy. Her whole body jerked.\n\n\"Ahhhhhhhh!\" Piper called out. When she felt Suzanne swirl her tongue as she pushed her face against her wet pussy, Piper couldn't stop another scream. Suzanne lapped hard with her tongue broadened from the base of Piper's pussy into as far as she could reach. Then she circled her tongue, stroking the soft flesh inside. With each stroke, Suzanne pushed her tongue further inside Piper. It morphed from lapping into thrusts. Pressing her face against Piper's pussy, she began to tongue fuck her. Even as the force of her thrusts increased, so did the speed. With each probe of her tongue, Suzanne greedily swallowed Piper's flowing nectar.\n\nPiper's body was beginning to flail about as she felt the beginnings of her orgasm deep inside her pussy. Her legs hooked behind Suzanne's back, pulling her closer. One hand reached behind her and grasped the pillow there, twisting it. Her other hand held her breast, giving the nipple little tugs. Her feet curled down to press against Suzanne's back, letting Piper arch her back and lift her pussy up.\n\n\"Oh fuck, Suzanne. Yeah, baby!\" Piper cried out. \"Oh fuck ... Oh fuck!\" Her body was quivering and she found it hard to get enough air into her lungs. \"Oh, God!\" The tingling inside her pussy was quickly intensifying. It was like sparks now, shooting out into her body. Her mind was starting to go blank except for the extreme pleasure that Suzanne was giving.\n\nSuddenly it all unleashed and the orgasm swept over her like a massive tidal wave. Screaming, her whole body began to thrash about the bed. Piper bucked up and down, making it hard for Suzanne to continue to tongue fuck her. Despite that, Suzanne clung to Piper and did her best. She may have missed a few strokes, but not much more than that. She loved the incoherent sounds that Piper made as she came.\n\nIt wasn't long before it started to pass. Piper's body stopped thrashing about the bed and her screams turned into low moans. Finally, Suzanne felt Piper's body collapse down onto the bed. Her tongue flicked in and out of Piper a couple more times, but then she started to run her tongue gently over the outside of Piper's pussy. She wanted to clean up every little drop of juice that she could find.\n\n\"Mmmm,\" Piper sighed. \"That felt so good. Maybe it's been a while but you still know how to do that!\" Her legs fell to either side since she momentary no longer had the energy to hold them around Suzanne. She smiled when she felt Suzanne softly kiss first one thigh and then the other. Reaching down, Piper ran her fingers through Suzanne's hair. As she moved her hand away, Suzanne turned her head and kissed it.\n\n\"I'm glad it was good. I was nervous,\" Suzanne said with a tiny smile. Stirring from her place between Piper's legs, she moved up onto the bed. On her hands and knees, she straddled Piper and moved up so that she could kiss Piper on the lips. It ended much too soon for Suzanne, but Piper was still trying to catch her breath. Suzanne giggled as Piper pulled away to take a couple quick breaths.\n\n\"You shouldn't have been,\" Piper told her. \"It's like falling off a log! Easy if you just think about what would feel good to you.\" She smiled as Suzanne sank down onto one side of her.\n\nSuzanne lay there next to Piper with one hand on Piper's belly. Her fingers just slowly made little circles. It felt nice to be like that. There was a feeling of contentment that she never felt with a man. When she was with a man, there was always some small part of her that knew it wasn't right. Its absence was noticeable. She had almost forgotten the feeling of normalcy she only had with Chloe.\n\nThe thought of Chloe made Suzanne flinch slightly. She hoped that Piper didn't discern it. So far, she had kept Chloe's ghost at bay. If she could just keep herself in the moment, she would be okay. She tried to banish thoughts of Chloe from her mind. For the most part, it worked. Suzanne could feel her hovering on the edges of her thoughts, but that was all.\n\nPiper felt a little strength come back into her body. The orgasm that Suzanne gave her left her initially feeling wiped out. Turning on her side, she tenderly kissed Suzanne. Her slightly sweaty body pressed against Suzanne and she lifted a leg to place it on top of Suzanne's thighs. As Suzanne responded, the kiss slowly built in intensity. Piper touched one of Suzanne's nipples and idly played with it. It was not a real attempt to excite Suzanne but as the kiss deepened, Piper's fingers became more active. She could feel Suzanne's body beginning to move. Knowing that she was turning Suzanne on, her own excitement returned.\n\nFeeling eager to return the pleasure, Piper rolled on top of Suzanne. For a few moments, they remained locked in a kiss. Suzanne ran her fingers down Piper's back and then squeezed her ass. Piper growled into the kiss. She began to move her body down. \n\nAt first, she took her time. Piper kissed down Suzanne's throat and then back up. She liked the little gasps that Suzanne made as she paid attention to the sensitive skin there. She followed that with nibbles and kisses along Suzanne's collarbone. As Piper kissed all the way out to Suzanne's shoulder, she watched Suzanne's face. Although her own eyes were closed, Suzanne's face was expressive. Her face twitched and moved with each tender caress from Piper's lips. Her excitement was obvious from the way her body was moving against Piper's.\n\nTaking her clue from that, Piper slid her body further down in between Suzanne's legs. She could feel Suzanne pressing her mound up against her lower belly. \"She's really getting into it,\" Piper thought. It was nice to see. Lowering her mouth, she lightly sucked a nipple into her mouth. A little jerk ran through Suzanne's body, which made Piper's lips smile around the hard nub. Sucking a little harder, she lifted her mouth and felt the nipple stretch out a bit before sliding out. As she did the same thing to the other nipple, Piper began to sense a tension building in Suzanne's body. Piper smiled again. She wouldn't draw this out. Suzanne needed relief after so long.\n\nEverything that Piper was doing felt so good to Suzanne. Her experience was obvious from how she knew when to move on before whatever she was doing got too old or slightly irritating. Despite how much her body was enjoying it, her mind was not cooperating. Thoughts of Chloe were becoming stronger, as she remembered what was similar to Chloe or recognized how Piper was different. It didn't matter. Suzanne was finding it difficult to escape thoughts of her. The tension Piper sensed wasn't excitement but the war between her body and her mind.\n\nUnable to control her thoughts, Suzanne flashed back to that moment in the school when Chloe pleaded with her. The look of betrayal and hurt filled Suzanne's mind. It was almost as if Chloe was there in the room, staring at Suzanne as she betrayed her yet again. Suzanne felt Piper starting to move even further down. She wiggled her body to bring her face close to Suzanne's pussy. Soon she would be the first woman since Chloe to lick it. The tension grew stronger.\n\n\"Please!\" Suzanne moaned. To Piper, it was an expression of Suzanne's desire. It wasn't. It was a last desperate plea for Chloe to stop haunting her, to let her move on, but Suzanne's feelings of guilt were her own. And they were too strong.\n\n\"No, no!\" Suzanne gasped out just before Piper's tongue flicked out to caress her pussy lips. She frantically pushed at Piper's shoulders, trying to stop her. Her body thrashed as she tried to pull out from under Piper's body.\n\nWithout a moment's hesitation, Piper stopped. The panic in Suzanne was clear. Lifting her body up, she moved back up alongside her. Even though Piper no longer held her down, Suzanne continued to thrash about the bed.\n\n\"Hey, Suzanne, it's okay. It's okay, Babe. I've stopped. I won't do anything you don't want. It's okay,\" Piper told her. Her heart wrenched with sympathy as she looked at Suzanne's face. It had what looked like terror on it and tears were beginning to run down her face. \"Babe, it's okay,\" Piper repeated. She took the chance and put her arms around Suzanne to pull her close. It was the right move. Suzanne turned and buried her head into Piper's chest and began to sob.",
        "For a long time, Piper just held her like that. Suzanne couldn't control her tears. Part of it was the thoughts of Chloe, especially the crushing certainty that she didn't deserve to feel good again after what she had done to Chloe. Almost as bad was the realization that she had disappointed Piper. \"We were having such a good time and I've ruined it,\" she thought to herself. \"I'm so pathetic.\" She really wanted to curl up in a ball with no one around. Darker thoughts were in there too, but she tried to ignore them. Still, it felt good to have Piper hold her, murmuring soft assurances that it was all okay. Gradually Suzanne began to stop crying. Her embarrassment grew and she kept her face buried against Piper's neck.\n\nFinally, Suzanne took a deep breath. \"Sorry,\" she softly said.\n\n\"No need for sorry, Suzanne,\" Piper told her. She gave the top of Suzanne's head a little kiss, accompanied by a warm hug. \"It's okay.\" The pain that Suzanne just showed had got to Piper as well. At the height of it, she couldn't help crying a little too. It hurt to see someone she liked in that state. She squeezed Suzanne again.\n\nFor a while, they just lay like that. When Suzanne finally pulled apart a little, she looked at Piper. \"I'm sorry,\" she said again. \"Thank you for holding me. It helped.\"\n\n\"Oh, sweetie,\" Piper said with a little catch in her voice. \"I'm glad I could do something.\" She hesitated, but finally she had to ask. \"What happened, Suzanne? It seemed like you were enjoying it.\"\n\n\"I was. Oh, I really was. It just brought back memories. I thought I was ready. I guess I'm not,\" Suzanne said. She didn't want to talk about it and buried her face back into Piper's neck. At least the image of Chloe had faded. As long as Suzanne was doing a good job of torturing herself, Chloe didn't need to be there.\n\n\"Okay,\" Piper told her. She hugged Suzanne again. When she relaxed the hug, she twisted her body a little.\n\nLooking up at Piper with a start, Suzanne's eyes were almost brimming with tears again. \"Are you leaving?\" she asked in a little voice.\n\n\"Oh no, sweetie, I'm not leaving. I just thought I would turn off the lights and maybe pull up the covers. I was going to stay the night, if you want me to.\" Piper gave Suzanne a caress on the cheek and a smile.\n\n\"I want you to, if you want to,\" Suzanne said. After how she acted, she couldn't really imagine Piper wanting to stay. \"God, I'm such a mess,\" Suzanne thought. \"No one is going to want to be around me.\" For some reason, Colby passed through her mind and left Suzanne feeling even worse. She pushed that from her mind as quickly as possible.\n\n\"Of course, I want to,\" Piper warmly said. \"Cuddling is as nice as making love.\" She reached down and found the covers, bunched at the foot of the bed. When she had them all sorted out and pulled up around them, she reached over and switched the light off. Snuggling close, she held Suzanne again.\n\n\"Thank you, Piper,\" Suzanne said in that same little voice. There was quiet in the dark for a moment. \"I'm sorry,\" she said once again.\n\n\"Stop saying that, sweetie. There is nothing to be sorry for. You gave me a wonderful orgasm. I loved that and I loved making you feel good, but you weren't ready. It isn't something to feel sorry about. Sometime, the time will be right,\" Piper told her.\n\nAs nice as Piper's reassurance was, Suzanne still felt a sense of despair. Would it ever be right? She wasn't sure. She thought of her dad. She'd been blaming him for her unhappiness. It wasn't that simple. Accepting herself was only part of the puzzle. What she had done to Chloe was a much bigger piece. \"Maybe I'm just not worthy of happiness,\" she thought. \"I don't deserve ...\" She shut off the thoughts before they got any darker. She couldn't help the tears that started again. She tried to keep them quiet and not let her body betray her to Piper.\n\nDespite her efforts, Piper could tell. She felt the little tears dropping onto her breasts and running down them. She gave Suzanne another kiss in the top of her head and a long hug. Beyond that, she didn't acknowledge them. It didn't seem like it would help Suzanne.\n\nThe hour soon caught up with both of them. The emotions took the most out of Suzanne. Her tears started to slacken, and then her little sniffles faded away. Even though thoughts of Chloe weren't gone, they didn't have the power to keep her awake. Instead, they became dreams that troubled her and made it impossible to get a good sleep. As she lost consciousness, her breathing lulled Piper into a slumber of her own. Throughout the night, she held on to Suzanne as if she was trying to reassure her.\n\nWhen the alarm on her phone went off, Suzanne was the first to wake. Her head was still nestled against Piper's shoulder. It only took a moment for the memories of the last night to come flooding back. Suzanne's cheeks burned with shame at how she had acted. \"I never should have brought Piper back,\" she thought. \"She must think I'm an idiot. At least I'm leaving. No need for her to make excuses to me why she doesn't want to see me again.\" She took a deep breath and tried to make sure that there was no repeat of the breakdown.\n\n\"Hey you,\" Piper said, letting Suzanne know that she too was awake. Suzanne had to force herself to look Piper in the face. She had a caring smile that made Suzanne feel bad for her thoughts a moment ago. Piper leaned in and gave her a little kiss.\n\n\"Morning,\" Suzanne said as it ended. As she had the night before, she buried her face against Piper's neck. When Piper hugged her, she felt a little spark of warmth. It helped push back the dark clouds.\n\n\"What time is it?\" Piper said as she finally let go and rolled onto her back. Her muscles felt sore from not having moved all night. She didn't regret it. It was clear that Suzanne needed it.\n\n\"Too damn early,\" Suzanne said. \"I think I set it for four.\"\n\n\"God! Too fucking early is right,\" Piper said. She closed her eyes for a moment and then sighed. \"It's actually for the best. I need to get home and get ready for work.\" She sat up and groaned. \"Today will not be a good day.\"\n\n\"Sorry,\" Suzanne started to tell her.\n\n\"Don't be,\" Piper cut her off. \"Sweetie, you say that too much. It was my choice, and one that I'm glad I made. Don't take on burdens that aren't yours.\"\n\nSuzanne filled in the words that she thought were unsaid. \"I have enough that are mine?\"\n\n\"No, I think you have assumed some that aren't yours too.\" Piper's eyes were soft even as her voice was firm. \"Suzanne, I don't know you really, but you have to forgive yourself some time. Don't cut off your friends. Talk to them. They want to help.\" \n\nSuzanne felt her eyes moisten again and looked away from the caring gaze. She kept her thoughts to herself.\n\nIt was clear that Suzanne wasn't going to listen to her, so Piper let out a little sigh before getting out of bed. She picked up her clothes and walked into the bathroom. It didn't take long to wash her face and get her clothes back on. When she came back out, Suzanne was half way getting into some new clothes. She looked good in a skirt that was just above her knees and showed off her long legs. Her bra was all she had on top.\n\n\"Mmmm, you look lovely,\" Piper told her as she came close. When Suzanne hesitated, Piper reached out and pulled her into an embrace. She gave Suzanne a hug that turned into a gentle kiss. \"Thanks for last night,\" she said.\n\nSuzanne grimaced. \"I'm sure that was what you were looking for, a night with a weeping woman.\" Still, she couldn't bring herself to pull away.\n\n\"I wanted a night with you. I'm glad I got it, tears and all.\" Piper didn't pull away either.\n\nShe sounded sincere and Suzanne decided to take it that way. \"Thanks for holding me. It was the only thing that kept me from losing it.\"\n\n\"Anytime. If you get back to Chicago, call me.\" When she saw the disbelief in Suzanne's eyes, Piper smiled. \"I mean it. I'm sorry you live so far away.\" She wrote her number on the pad of paper by the phone. Stepping close one more time, she gave Suzanne another kiss. \"Bye, sweetie,\" she said as she headed for the door. She looked back once and then was gone.\n\nSuzanne felt her absence immediately. It had been a safety line. Now on her own, she focused on doing what she needed to get ready. It wouldn't take much longer.\n\nWhen Piper stepped out of the elevator, she saw Colby waiting by the front desk. She considered just going to the parking garage elevator, but rejected that idea. As she walked over, Colby saw her and nodded in recognition.\n\n\"She'll be down in a few minutes,\" Piper said.\n\nColby nodded. \"Okay, thanks.\" Piper looked at her for a few moments, as if considering something. \"What?\" Colby asked. She didn't mean it to, but it came out abrupt.\n\n\"Just, take care of her. You know her, but I think maybe she is hurting more than you realize. I like her. If I lived closer, I might ...\" Piper trailed off. \"Never mind, but just help her.\"\n\nNot quite sure why, Colby stepped forward and gave Piper a quick hug. She felt Piper returning it. \"I'll do my best,\" she said. \"Thanks.\"\n\n\"Gotta run! Bye Colby!\" Piper said as she turned and went back to the parking garage elevator. She was gone moments later, leaving Colby to wonder what had happened. She was not sure she could ask Suzanne. \"Well, I can certainly watch over her,\" she thought. When it came to work, Colby definitely felt her lack of experience compared to Suzanne. However, Suzanne felt like the younger of the two of them when it came to life experience. Even if she didn't feel something already, Colby had no problem with assuming the role of protector to her friend. She nodded and thought, \"like a friend, not a sister.\" No, sisterly feelings were the last thing she wanted with Suzanne.\n\nOnce Suzanne came down, getting to the airport was fairly simple. They caught a taxi and it was still early enough that they beat any traffic. The trip was quiet. Both of them were tired, but Colby thought that Suzanne looked particularly ragged. She hoped that getting them a little something to eat at the airport before the flight would help somewhat.\n\nUnfortunately getting through security threw a monkey wrench into that plan. The lines were extremely long and seemed to be taking forever. After a while, Colby stopped thinking about breakfast and just hoped they would make the flight. They did, but it was a near thing. The door was shut right after they took their seats.\n\nAs she listened to the flight attendants give the safety lecture, Colby wondered again what happened between Suzanne and Piper. The last time she saw them, things seemed to be going well. She tried to suppress a slight feeling of envy towards Piper. Clearly, things had changed at some point. \"Why else would she have said something this morning?\" Colby thought. It was somewhat against her nature, but she felt like she needed to pry into what happened.\n\nIt wouldn't be immediately, though. Even as the flight attendants were putting away the little bag of stuff for the safety demonstration, Colby felt Suzanne lean against her. Looking over, she was surprised to see Suzanne already napping. She was tall enough that her cheek rested against Colby's head. Each deep breath resonated in her ear. It was actually soothing. Maybe she hadn't gone to bed as late as Suzanne, but Colby still didn't get much sleep last night. She managed to stay awake through takeoff.\n\n\"If I can just hold off until they come around with food, I'll get something for both of us,\" Colby told herself. Grabbing the airline magazine, she tried to focus on reading it. Despite her height, Suzanne wasn't pressing heavily against her. In fact, she was struck by how light she seemed. She tried to turn to look at Suzanne, but when she moved, the sleeping woman made a little noise of protest. Not wanting to wake her, Colby stopped. Suzanne made a little sigh that brought a smile to Colby's lips. Her eye was caught by Suzanne's wrists. She hadn't noticed it before but they seemed a little bony.\n\n\"She doesn't eat enough,\" Colby thought. It wasn't a new thought. All week long, she noticed that without her pushing, Suzanne tended to forget about eating. Looking back, Colby realized that even when they did pause long enough to eat, Suzanne usually left food on her plate. Looking down again, she saw that it was not just Suzanne's wrist. Her fingers were long, but the skin was tight against the bone. \"It isn't just eating. She just doesn't take care of herself.\" Colby felt the unease inside her grow to become a worry.\n\nThe fretting about it made it easier to not fall asleep right away. When the flight attendants came through, Colby ordered a couple of the fruit and cheese trays. \"Hopefully she will argue less about eating one of these,\" she thought. The other options just looked too heavy. Colby stacked them on her tray and closed her eyes. Maybe she got more sleep than Suzanne had, but it wasn't much more. She tried to banish her worries about Suzanne and let her mind calm down.\n\nShifting slightly to try to find a more comfortable spot, Colby felt Suzanne stir and murmur a troubled \"no!\" The taller woman's body twitched a little and Colby feared that she had woken her. Without thinking much about it, she reached out and took Suzanne's hand in hers. She felt Suzanne's fingers automatically wrap around hers and after a moment, Suzanne seemed to calm down and fall back into a deeper sleep. Her breathing became regular again and it helped Colby to start to drift off too.\n\nSuzanne couldn't remember what she was dreaming about when she startled awake. It wasn't pleasant; that much she was sure of. She looked around to orient herself. Feeling someone holding her hand, she realized it must be Colby. The smaller woman was sleeping with her head against Suzanne's shoulder. Turning her head, she could see that Colby's lips were touching her jacket. A little wet spot there made Suzanne smile. Colby would be mortified at doing it again, she thought.\n\n\"Did I take her hand or did she take mine?\" Suzanne wondered. \"And why?\" She thought about trying to extricate her hand, but that might wake Colby. She just left it there, and looked out the window. Memories of last night came back. As she thought about how she lost it with Piper, Suzanne felt a familiar wave of discomfort in her stomach. She really needed to get that checked. She wouldn't be the first person in the office to develop an ulcer. It made the sight of the food on Colby's tray table turn her stomach a little. \"She's going to want me to eat some of that,\" Suzanne thought. Sighing, she knew even though she didn't feel much like eating, she would for Colby. It would worry Colby if she didn't, and Suzanne didn't want that.\n\nA little while later, Colby began to stir. Her hand relaxed and she turned a little more towards Suzanne. Pulling back gently, Suzanne took her hand out of Colby's grasp. A few moments later, Colby opened her eyes and blinked a few times. When she realized where she was, she did not jerk upright. It felt nice to have her head against Suzanne and she extended the chance as long as she could. Finally, she lifted her head up and smiled shyly at Suzanne.\n\n\"Anyone ever tell you that being next to you on planes makes it hard not to fall asleep? That's the second time!\" Colby asked.\n\n\"Me? It seems like you are the one who has been snoozing away, not me!\" Suzanne replied. Her grin lit up her face, erasing most of the haggard look to it.\n\n\"I was doing fine until you started with that slow breathing. I managed to stay awake long enough to get us some food, but then I was out.\" Colby checked her watch. \"Oh, we are almost to Seattle. Come on; let's eat before they come to collect things.\" Looking down to open them up, she missed the grimace that passed over Suzanne's face. When she handed one over to Suzanne, there were no traces left. She had a smile, though not a particularly enthusiastic one.\n\nThe two of them ate their food in completely different ways. Hungry after not having anything to eat for a while, Colby ate the cheese right away before starting in on the pieces of fruit. Suzanne picked at hers. She ate the grapes first, slowly pulling them off one at a time. The combination of sweet and juicy was welcome. After that, Suzanne started to eat an apple slice but without much enthusiasm.\n\nEying her, Colby finally spoke up. \"You should have the cheese. A little protein and a little fat will keep you going; at least until you get home.\" Her voice betrayed her concern.\n\n\"Between the drinking, the lack of sleep and the flight, my stomach is a little queasy. I'm not sure I can eat it,\" Suzanne said as she finished the first apple slice. She picked up another one but didn't bring it to her mouth.\n\nColby wanted to push it, but she could see Suzanne's throat swallowing even though there was nothing in her mouth. Getting her to eat something and then having her throw up wouldn't help Suzanne. Sighing, Colby held her peace. Instead, she asked about last night.\n\n\"So tell me if you don't want to talk about this, but how did it go last night. Did you have fun with Piper?\" Colby asked in a low voice. The noise of the plane helped, but there was no reason to make it easy for anyone to eavesdrop.\n\nAt first, Colby thought that Suzanne wasn't going to answer. She just stared down at the apple in her fingers. Just as Colby was about to say never mind, Suzanne spoke. \"It was good, at first. It felt nice to be normal. Trying to be straight, that never felt normal. I'm a lesbian and that's my normal.\" She paused a second and then smiled before looking at Colby. \"And Piper was great. She didn't push. She let me feel comfortable.\" Her smile got a little sheepish and she blushed. \"I made her cum,\" Suzanne whispered.\n\nColby smiled back at her, while at the same time feeling a stab of envy. An image of Suzanne naked and between her legs came to Colby. Her pussy twitched and she felt the faintest signs of it getting wet. She tried to control herself. \"That must have made you feel good, to see that you could do it.\"\n\n\"It did,\" Suzanne said. There was a hint of pride in her smile, but it faded.\n\n\"What?\" Colby asked. Clearly, something had happened.\n\n\"I ... She ...\" Suzanne tried to talk but found herself tongue-tied. She took a deep breath and tried to hold back the tears she felt building. Colby reached out her hand and Suzanne took it, their fingers interlacing. The support from Colby helped. Even still, her voice was halting with the raw emotion coming out.\n\n\"I couldn't stop thinking about Chloe when Piper was trying to make love to me. It was as if she was watching me. I couldn't ... I had to stop. It just got worse and worse,\" Suzanne said, as the tears began to drip down her face. \"Piper was nice but I am sure she thought I was a crazy woman.\"\n\n\"Oh Suzanne, I'm sure she didn't. And you aren't. Like everyone else, you have some issues,\" Colby told her. \"I wish ...\" she started to say before stopping.\n\nSuzanne looked Colby in the eyes. \"Say what you want to say,\" she quietly said as she reached up with her free hand to wipe the tears away.\n\nColby tried to smile at Suzanne but found it impossible to do. She gave Suzanne's hand a little squeeze. \"I wish you could forgive yourself, Suzanne. Don't you think Chloe would want you to?\"\n\nThere was something about Suzanne's eyes that really scared Colby. She had never seen them look so dead.\n\n\"No. I don't,\" Suzanne said and then closed her eyes and leaned back in her seat. In a voice that was almost inaudible, she added, \"I deserve this.\"\n\nLeaning over, Colby whispered in her ear. \"No Hun, you don't.\" She gave Suzanne a little kiss on the cheek. It was warm and friendly. The memory of it lingered for Suzanne. It was a little spot of warmth in the middle of the coldness of the rest of her.\n\nColby left it at that. She could feel the descent start and knew it wouldn't be much longer until they were on the ground. For the rest of the flight, she held Suzanne's hand. Even the one time when Suzanne halfheartedly pulled on it, Colby kept holding on. Suzanne didn't try again.",
        "Since they checked luggage, it took them a while to get out of the airport. It was frustrating for Suzanne who usually just took a carry-on bag. When the final bag came down the conveyor belt with the last batch of luggage, she breathed a sigh of relief. The idea of having to file a bunch of paperwork for lost baggage was not a happy one. She put the last piece onto the cart and they headed to the rental car shuttle. From there on, things went relatively quickly.\n\n\"Are you sure you want to go straight to the office,\" Colby asked Suzanne. \"It's been a long day already and except for the plane, you didn't get a lot of rest.\"\n\n\"You can just drop me off, if you want, but I've got stuff I need to do. It's still early afternoon,\" Suzanne said. \"I won't think any less of you.\"\n\n\"If you're working, I'm working,\" Colby told her. \"But we are stopping to get something to eat. You need more than four grapes and two slices of apple.\"\n\nEven though she still didn't feel much like eating, Suzanne didn't argue. They stopped at a sandwich shop and quickly ate. It felt like a lump in her stomach but at least Suzanne didn't think she would get sick. She worked on a list of things to be done as Colby drove them to the office. The closer that they got, the more the regular Suzanne reappeared. The haggard look diminished and the uncertainty she had shown earlier disappeared, replaced by confidence. It may have been a veneer, but even Colby found it hard to see through it.\n\nThe rest of the day was busy. After giving a report to Jim, Suzanne started work on crunching the numbers they gathered. For a while, Colby helped organize it but at some point her help wasn't needed. She went back to her desk and began to catch up with all of her own work.\n\nThe afternoon flew by. Before she knew it, Colby realized it was almost 6:00 PM. Suzanne was still working in her office with no signs of being done. The day was already long when they got to the office. After almost five more hours of work, it was getting to her. Standing up, she stretched and felt all the knots in her back. It would be nice to sleep in her own bed.\n\nWalking over to Suzanne's office, Colby could see that she was still deep into work. She stood there for a minute or two before she knocked on the door. Suzanne looked up with a dazed look on her face. \"I think it's time for us to go home,\" Colby said with a smile. \"I doubt you are really getting any more actual work done.\" From the sheepish look Suzanne gave her, she knew she scored a point.\n\n\"I suppose you're right. Give me five minutes to save everything and shut down, and we can go,\" Suzanne said. \"Sorry to keep you so late. You should have just let me take a taxi home and you could have left a long time ago.\"\n\n\"If you're working, I'm working,\" Colby told her again. \"I'm fine, really, or at least I was. I'm bushed now!\"\n\nSuzanne thought about it and then sighed. \"Actually, me too. I should have knocked off at least half an hour ago.\" She hit shut down on her laptop. \"Almost done. I just need to pack some things up for the weekend. I want to have this all done by Monday.\"\n\nAs Colby watched Suzanne get ready to leave, she thought about the contrast between her now and earlier today. If there was work to be done, she seemed to be able to keep the demons at bay. The sad and lost woman was gone, replaced by the efficient professional persona that most knew her as. Maybe keeping busy this weekend with work was the best thing. Her gut instinct was to tell Suzanne to get some rest after a hard week, but was that really the right suggestion? Colby wasn't sure.\n\n\"Hey, would it help if I came over and helped with any of it?\" Colby asked. Working this weekend was the last thing Colby really wanted to do, but it would let her keep an eye on Suzanne.\n\nNothing about her real motivation was obvious to Suzanne. Colby just looked like her normal helpful self. Suzanne nodded. \"It would actually. You could help organize the comments by type to make it easier to summarize them. And when I'm done, you can proof read the report. Another set of eyes will be better. I may be wiped out by the time I finish.\"\n\nLooking at Colby again, Suzanne noticed that she too looked tired. Her beautiful blue eyes were marred by being bloodshot and there were faint rings under her eyes. Even the way she was leaning against the doorjamb conveyed a sense of weariness.\n\n\"You don't have to. I can get it done. Colby, you did such a great job. I'm really proud of you. So is Jim! I can finish it. You should take it easy and get some rest,\" she told the little brunette.\n\n\"I could say the same thing about you,\" Colby replied. She had that determined look on her face that Suzanne already recognized. \"I know that you aren't going to rest until this gets done, so I'm helping.\" She emphasized it with a little stamp of her foot. It was kind of cute and Suzanne couldn't help chuckling.\n\n\"Okay, I was just suggesting. I'm happy for the help,\" Suzanne told her with a genuine smile. It would be nice to get some assistance, but there was another reason for the smile. After a week together, she was used to being with Colby. She felt a comfort with her that she had not found with many other people. Even with Chloe, the sexual side to their relationship was so powerful that it often overwhelmed everything else. Suzanne acknowledged the attraction; Colby was too gorgeous for Suzanne to lie to herself about that. Yet, it was the growing friendship that mattered. She would have missed that.\n\nFinally, Suzanne had everything she needed. Colby went back to her desk to pick up her things and they walked out to her car. Along the way, they settled on Colby coming over at ten. It was early enough to get a lot of work done, but they could both sleep in a bit. While Suzanne was usually an earlier riser, she had a suspicion that she would sleep until her alarm went off tomorrow.\n\nIt wasn't quite late enough for rush hour traffic to be gone, but it wasn't too bad. Unlike them, a fair number of people had gotten an early start on the weekend. Colby lucked out and found someone pulling out in front of Suzanne's apartment as she drove up. She quickly grabbed the spot. Between Suzanne's luggage and all the materials she brought home, Colby wanted to help her take it upstairs.\n\nAs they road up the elevator, Colby realized that the effects of a long day were starting to catch up with her. She tried to ignore the beginnings of a headache. Resting her forehead against the cool metal of the elevator wall helped a little.\n\nSuzanne noticed immediately. \"Are you okay, Colby?\" she asked. Her hands were full or she would have reached out to touch Colby's shoulder.\n\n\"Yeah, I'm just tired. I've got a little headache. I'll take something when I get home.\" Her voice betrayed her weariness. Suzanne couldn't remember her sounding so tired.\n\n\"Don't be silly. I've got ibuprofen. Taking some now makes a lot more sense than waiting,\" Suzanne told her as the door opens.\n\n\"Okay. Thanks,\" Colby said.\n\n\"Of course. I feel responsible. I should have sent you home earlier,\" Suzanne said, walking out of the elevator and heading to her apartment. As soon as she put her key in the lock, she heard Tuptim starting to meow. She smiled. Tuptim's greetings were the best thing about coming home. Opening the door, she felt her cat run out and begin weaving in and around her legs.\n\n\"Careful, you silly thing. You'll trip me!\" Suzanne hurriedly put her things down and picked up her cat. Tuptim was purring loudly and rubbing her head against Suzanne's cheek. \"Yes, I missed you too, Babycat,\" she told her. The unconditional love felt good. Her fingers reached into the scruff of Tuptim's neck and gently scratched her there. It didn't seem possible but her purr got louder.\n\nLooking over at her friend, Suzanne noticed a trace of the pain from Colby's headache on her face. \"Oh Colby, sorry. Let me get you the ibuprofen.\"\n\nDespite the slowly growing ache in her head, Colby couldn't help smiling at Suzanne holding her cat. It was obvious that she loved the cat as much as Tuptim loved her. \"It's okay. I can get it. Tuptim needs you now. Is it in your medicine cabinet?\" she said, looking towards where she guessed the bedroom was.\n\n\"Yeah. Sorry, she is always needy when I've been away,\" Suzanne said.\n\nColby stepped close to Suzanne and ran her hand down Tuptim's back. \"I can see that. It's nice to have your mom home, isn't it?\" Her smile got bigger as Tuptim closed her eyes in apparent bliss from the dual attention. Chuckling, Colby went through the bedroom and into the adjoining bathroom.\n\nOpening up the medicine cabinet, Colby found the ibuprofen without any difficulty. She got out two and popped them in her mouth. She dipped her hand under the faucet and caught a little water in her palm. Swallowing pills was always easy for her and that was all the water she needed. As she did it, something in the cabinet caught her eye. It was the two bottles of painkiller. They looked odd sitting there together like that.\n\nGlancing over her shoulder, Colby suppressed the awareness that she was snooping. Her concern about her friend overrode that. Picking them up, she looked at them. They were both for oxycodone and had close to the same dates. As she looked at them, Colby saw that the prescription number was the same. Looking back in the cabinet, Colby noticed that even though there were a couple of new prescriptions for Suzanne's stomach in there, these two were in the front.\n\nColby felt her stomach clench. All of the vague worries solidified. Maybe someone who had not spent the time with Suzanne would not have put them all together, but Colby was certain. \"God, it is worse than I thought\" she realized. It wasn't just the self-neglect. At least to some level, Suzanne was considering going beyond that. It scared Colby as much as anything she could remember. She took a deep shaking breath. The next one was a little less shaky. The one after that was almost normal, but not quite. It didn't get any better than that either.\n\nStill holding the vials in one hand, Colby closed the medicine cabinet. She looked at herself in the mirror for a moment. Slowly she got a determined look on her face. Taking the vials with her, Colby went back out to where Suzanne was still cuddling her cat.\n\n\"Suzanne, we need to talk. I'm worried about you, Hun,\" Colby said softly. She showed Suzanne the vials she was holding. She was not sure what reaction she would get. Certainly, Suzanne might have gotten angry over the invasion of her privacy. Instead, there was a flash of guilt on her face and she sank down onto the sofa. She drew her feet up onto the sofa, making herself into a small ball.\n\nColby sat down next to her. The little cat continued to stay with Suzanne, even though she let go of Tuptim. Colby reached out and put her arms around her friend to give her a long hug. \"Please tell me the truth, sweetie,\" she told Suzanne. \"Don't lock me out. You have to let someone inside.\"\n\nShe didn't answer right away. Finally, she started to talk. \"I've never done anything. I don't think I will,\" Suzanne said as her fingers absently scratched Tuptim's head. She looked at Colby. \"It hurts though. I hurt. And it never goes away.\" She stopped speaking and just looked at Colby. The misery in her eyes was plain to see.\n\n\"But you think about it, about taking all of these,\" Colby stated, putting it out there for Suzanne to either confirm or deny. Once again, tears leaked from Suzanne's eyes. This time Colby couldn't help doing the same. After a few moments, Suzanne nodded. \"Oh, sweetie,\" Colby sighed as she tightened her grip around her troubled friend.\n\n\"Meanwhile, you work too many hours and you don't eat enough,\" Colby added. When Suzanne tried to protest, Colby grabbed Suzanne's blouse and untucked it. She pulled it up and then ran her fingers over Suzanne's ribs. She could feel each one. Another time it might have felt erotic. This time, it made her cry a little harder.\n\n\"Suzanne, this isn't healthy. It's getting worse. I realized it on the trip. You've lost weight in the short time I've known you.\" Her fingers stayed there, touching Suzanne. She felt Suzanne laying her head down on her shoulder, her body gently shaking from the crying. For a long while, they just held each other. Finally the tears mostly stopped.\n\n\"I know. I know. I'll do better, Colby. I promise,\" Suzanne said, still with her cheek laying down in Colby's shoulder. She didn't want to look her in the eyes, but Colby was not going to let her off that easy. Putting both hands on Suzanne's shoulders, she forced Suzanne to turn and look at her.\n\n\"That's not good enough for me. Here is what is going to happen, Suzanne. By Monday, I will have a list of therapists for you. You can pick the one you want, but then I will make the appointment for you. And I'm taking these with me. If you need a pain pill, you just let me know and I will bring you one. Anytime, night or day, I will bring one over,\" Colby told her. Pulling her close again for another hug, she told Suzanne. \"I'll take you to your appointments if you want me to, but I won't accept a no.\"\n\nSniffing to clear her nose, Suzanne hugged Colby hard. \"Okay. I'll go.\" She wanted to say more, but keeping her feelings hidden was still too strong of a habit.\n\n\"Now, I'm going to make us something to eat. You just relax and give Tuptim the love that she clearly wants,\" Colby said with a smile. Getting up, she went into the kitchen and looked through Suzanne's pantry. It was pretty bare but there was pasta and spaghetti sauce. It would do for a start. She found some salad mix in the refrigerator that could be picked through to find enough for both of them.\n\nAs she worked on dinner, she watched Suzanne. She was telling Tuptim all about the trip. Colby thought the main attraction was probably the constant petting, but Tuptim gave every impression of being enthralled by the story. There was a pang in her heart for Suzanne. Despite knowing her issues and seeing the gauntness in her face, Colby couldn't help her feelings. Right now, however, Suzanne needed a friend more than anything. Not letting their relationship go beyond friendship was a sacrifice Colby was willing to make.\n\n\"At least we still get time together,\" Colby thought as she turned back to finishing dinner. It was enough for now."
    ],
    "authorname": "-Ripley-",
    "tags": [
        "lesbian romance",
        "lesbian love",
        "love",
        "lesbian novella",
        "romance novella",
        "lesbian sex",
        "cunnilingus",
        "coworker",
        "closeted",
        "coming out"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/coming-to-grips-ch-03"
}