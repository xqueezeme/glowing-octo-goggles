{
    "title": "What I Did On My Christmas Vacation",
    "pages": [
        "What I Did On My Christmas Vacation\n\nby Tx Tall Tales \u00a9\n\n==============================\n\nTeaching Mom and Sis the Big O\n\nThis naughty little tale is an entry in the Winter Holidays Story Contest 2014. It's nothing like my previous Winter Holiday Contest entries, but I hope you like it. It's a rather long, involved tale, and would normally be broken up into two or three chapters, but the contest requirements mandate it be one single story.\n\nI owe PatientLee thanks for providing editorial help on a difficult story. As usual, I kept going even after I got her feedback, so the remaining issues are all mine. \n\nI have also managed to work my way through most of the issues that have interfered with me being able to get much writing done for far too long now. I am writing again, and looking forward to posting more and reading your feedback. Thank you for your patience.\n\n==============================\n\nEng. 302 - Dr. Hamilton\n\nYour Holiday assignment is to rewrite the classic: What I Did On My Summer Vacation  but based on your holiday break. Your story has to be true, engaging, at least 3000 words long, and utilize at least ten of your twenty assigned vocabulary words.\n\nVocabulary:\n\n- ambivalent, convoluted, cognizant, commiserate, deft\n\n- diaphanous, enigma, inclination, irascible, ire\n\n- lament, lassitude, miscreant, nefarious, pristine\n\n- raiment, subterfuge, torrid, torpid, veracity\n\n==============================\n\nMy Christmas Vacation - by Travis Porter\n\nFirst, let me say that the names of the women involved have been changed to protect their identity. Should this story get out, it's not right that their reputations should be ruined, over a required class project.\n\nSecond, my story may be more torrid and salacious than would be normally acceptable. In some parts it is quite explicit about activities of a sexual nature. I'm not trying to cause trouble, but you were the one that insisted the story be true and engaging. Truth be told, this is what I was engaged with over the holidays. So I will tell the story honestly and to the best of my ability, and let the chips fall where they lay.\n\nThird and finally, I want to say for the record this isn't a fair assignment. Nobody who reads this is going to believe it, even though I swear to its 100% veracity. Even if they were to believe it, I'll probably get a zero because of the subject matter. Like that's my fault? It's what happened! If I somehow were to get a pass on the subject matter, and word got out, I'd be ruined. Everyone would think I was a sneaky, immoral, sick, and opportunistic bastard.\n\nI'm not sneaky. \n\nI hadn't meant to eavesdrop on Mom and Teri. I would even argue it wasn't my fault. I had every right to be where I was, when I was, doing what I was.\n\n'Where I was' was lying on the couch in the family room. 'When I was' was the middle of the afternoon, December 11th, one day before school was supposed to be finished. I had no exams the last two days, and took off for home a day early. 'What I was doing' was napping, due to my lassitude from packing up and driving five hours home from college, to start my Christmas break.\n\nSuch decisions are what lives are made of.\n\nIf this was one of those stories, I'd probably have walked in on Mom with her black boss, our slimy neighbor and her secret lesbian lover, in a m\u00e9nage \u00e0 quatre. I would have had to use my national champion karate skills I learned as a Navy Seal to kick some butts, my underworld minions would ship her off to a Mexican brothel, and I'd utilize my recent lottery winnings to do various and sundry nefarious things to those who had led my mother astray.\n\nOh. Never mind. That's what Dad would have had to do, but Dad's gone, five years now. I forget sometimes that not all of a father's duties trickle down to old first born, only son. Although a few more of them have lately, but I'm getting ahead of myself.\n\nThis is not one of those stories, and I'd appreciate it if you stopped trying to get me off track. Like I said, it was not my fault. I was minding my own business.\n\nIt was the sobbing that first pierced the veil of torpidity that enveloped me. I was about to speak up, but I held back. My sister is one of the least emotional girls I've ever met. My football coach (Second string, outside line-backer. No superstar here, sorry, this is non-fiction) used to say 'suck it up.' Baby sis had lived with enough pain and heartache to last a lifetime. She endured it all, never letting it show. When it came to 'sucking it up,' she could give a Dyson a run for its money.\n\nShe was in the car when Dad had the accident. She was trapped in her seat, both legs badly broken. She had to lay there in agony while she saw the light fade from his eyes. The last words Dad uttered was to tell her he was sorry, and to tell Mom he loved her. Teri was 13 years old, and missed an entire semester of school, spending the time with doctors, in hospitals, in surgery, and undergoing extremely painful physical therapy. The next semester she was almost kicked out of school for refusing to wear shorts for P.E. until the school principal saw the scars. She received a waiver. Her sophomore year she was bullied horribly. She kept it a secret, and endured the pain privately, until I found out. \n\nWhen moms and dads find out something like that, they go to the teachers, the principals, the school board, and the parents. I went to the school bathrooms, male and female, and dealt with things personally, out of public view. Second string linebacker, remember? I might not have been a great athlete, but I was big and strong, and very angry. Hurting my sister after what she'd been through wasn't right. Eventually all the miscreants involved agreed. They lamented their actions. I did get suspended, but it was only for three days and worth it.\n\nMy sister endured. She was tough, and kept her emotions bottled up. She had stopped crying after Dad's funeral. I had never seen her cry since. Hearing her sobbing like that made me keep quiet. I didn't want to embarrass her. Not my baby-sister.\n\nYou'd think she'd be happy. She was nearly done with high school, she'd been accepted into the college of her choice, and she had her first steady boyfriend, a popular student-athlete. Life was looking up for her.\n\nOr so I thought. From the sound of things, nothing could be further from the truth. I heard the crying and Mom's consoling words. I'm sure they figured they were alone in the house, there's just the three of us, and I wasn't due home for another day. I stayed quiet, and I listened. If somebody had hurt Teri, I'd have to do something about it. She might be a pain in the ass, but she was my pain in the ass.\n\nSeveral times I came within a gnat's ass of interrupting, and making them aware of my presence. There have been moments when I wish I had. Those moments are few and far-in-between. Most of the time, as warped as it may seem to you, the reader, I thank my lucky stars that I stayed hidden and kept my trap shut. I give thanks to the gods of chance, that had me come home a day early, made me park my car in the garage, and who encouraged me to nap on the couch. Otherwise this would be a very short essay, and my life would be infinitely more boring.\n\nAs I best recall, the portion of their conversation I inadvertently overheard went something like this:\n\n\"What's wrong with me!\" my sister's anguished words echoed in my ears, breaking my heart.\n\n\"Nothing baby. Trust me, what you're telling me is perfectly normal. Don't believe all you read and see on TV, love isn't like that. It's certainly nothing like some of that trash you'll find on the Internet.\"\n\n\"Kyle says it's me. That I'm a cold fish.\"\n\nKyle. That would be the aforementioned student-athlete first boyfriend. I was going to have to kill that asshole, for making my sister cry.\n\n\"I did everything he wanted, Mom. Everything! I tried to be a good girlfriend. I used my mouth on him. He was my first. Everyone said the first time was bad but it would get better. It's not getting better! I hate it. It hurts. What's the big deal with sex?\"\n\nEverything he wanted? That dick-head was having sex with my sister? Fuck! He was toast. It wouldn't just be swirlies for him, either!\n\n\"Honey, don't buy into the whole lie about sex. It's great for the guys, but it's our job to put up with it, and pretend. You know that movie, When Harry met Sally? That's what we do. We let them do what they want, and we make them think it's amazing.\"\n\n\"But Mom, my friends say it is amazing.\"\n\n\"We all lie about it, baby. It's society. We're told on TV and at the movies, in the books we read, that sex is this mind-blowing incredible experience. The incredible part is making a baby, and creating two wonderful children like you and your brother. The rest is all make-believe. Trust me on this. What you're saying is perfectly natural.\"\n\nTeri seemed to be calming. The sobbing had diminished to almost nothing, and she was no longer hiccupping through her half of the conversation. \"It hurts, Mom. It hurts a lot. Especially when he put it in my bottom.\"\n\nSon-of-a-bitch! That scum-sucking low-life had ass-raped my sister. When I was done with him, we'd see how he liked that. \n\n\"You made him use a condom, didn't you?\" Mom asked.\n\nI didn't hear Teri's response, but from Mom's reaction, it sounded like that was a 'yes'. Good for her.\n\n\"You should have come to me sooner, baby. I can help you. First of all, we've got to get you some good lube. It hurts when they stick it in. Using a condom can make it worse for us unless it's pre-lubricated. Before your dates, if you think you're going to have sex, we get ourselves ready. Every night before I went to bed, I did. Your father loved doing it, and it almost never hurt if I was prepared. As long as you're not in pain, it's easy to make them believe they're God's gift to us.\"\n\nI heard Teri sniffing. \"His stuff tastes terrible. Awful. It makes me want to vomit.\"\n\nHe made her swallow? That low-life motherfucker! Dead meat. He was dead meat.\n\n\"Shh. I know, honey. It tastes like bleach and bitter, salty phlegm. The texture is almost as bad as the taste. There's a trick to it. Once you learn to take him all the way into your throat, you won't taste it at all. Then you can pretend that it's raspberry sorbet, and beg for more.\"\n\nTeri gave a little laugh, and I calmed. \"Chocolate mousse?\"\n\nMom chuckled along with her. \"Whatever you want to imagine. That's what we do. Lay back, let them have their fun, and dream that we're somewhere else doing something nice. I think of that place on the beach, when we went down to visit my sister. I'm out sunning myself, under a gorgeous sky.\"\n\n\"So it's not just me? You swear?\"\n\n\"No, it's not you. If you want, we can call your Aunt Brenda. She'll tell you the same as me. Most women don't like it. I'm sure there are some that do, but they're the weird ones, not us. There are people who enjoy pain, who like humiliation, there are all kinds of weirdoes in the world.\"\n\nThis all was a frightening revelation to me. I thought girls liked it. I really did! They sure seemed to!\n\nI wasn't a virgin when I came to this college, and my first year was alright, but the last year and a half had been amazing. Simply incredible. I'd had two serious girlfriends. My first one caught me completely by surprise. She was old. A lot older than me. She was almost thirty, and had gone back to school to get a degree after getting divorced.\n\nRachel (not her real name) had taught me everything there was to know about sex. At least I had thought so. She was sexy, and loving, and very, very willing to share her knowledge with me. I spent entire days in bed with her, while she taught me all the ways to make her feel good. For nearly a year, all my free time was spent with her, a lot of that in her big bed. \n\nShe had certainly seemed like she liked it. The way she cried out and screamed for me, the way her body shook and trembled, the look in her eyes when we were connected, it had felt real.\n\nWas I that easily fooled?\n\nI thought I was in love with her, until I found out that I wasn't the only one she was teaching. She swore I was her favorite, that she was just getting things out of her system after seven years of misery and a failed marriage. Rachel told me I 'rocked her world', and that she'd soon be done with her phase. But she also told me she wasn't ready to settle down, and that she was too old for me.\n\nI thought that was bullshit. She was using that as an excuse. I was good enough for the moment, but she was interviewing others to see who would be an upgrade and take my place. Three weeks before summer break after my sophomore year, Rachel and I stopped seeing each other.\n\nThen there had been Courtney (also not her real name). Courtney was a quiet incoming freshman, who always had her nose in the books. She was in two of my classes, and we ended up both trying to get the same book for one of our papers. I had it first, but she seemed nice, and I knew she was smart. Real smart, to be in some of the classes she was in. So I told her we could share.\n\nWe did an all-nighter in the library, barely speaking except for the work. I snuck in a snack in my backpack, and we shared it. She had chocolate. We both got A's. When the next assigned paper came, we just looked at each other. We met in our same place in the lower stack of the library, combining our reference resources. She had brought a picnic. I had managed to get my hands on two wine-coolers. \n\nI soon learned that underneath her disheveled raiment, sweatshirts and baggy pants, she had an amazing body. Two weeks later she was no longer a virgin.\n\nTeri was right about one thing. Courtney didn't seem to enjoy sex the first time, but she swore she loved it, because it was me. I was starting to see that Mom was right. Court didn't know how to hide it yet. How to fake it.\n\nOver the next few weeks, I realized somebody must have taught her. I did all the things that Rachel had taught me, and Courtney put on her show. I didn't know it was a show at the time. She acted like I was driving her crazy. She would get so excited, stripping me naked every chance she got. She'd throw me on the bed, and sit on my face, begging me to get her off. Damn, that girl had me fooled!\n\nI'd use my fingers on her, my tongue, my mouth. I bought the same toys that Rachel had introduced me to, nothing like I'd imagined or heard about. A big heavy duty plug-in vibrator, a weird shaped narrow curvy one with a cupped end, flavored lotions and special lubes. They all had seemed to work on Courtney just like they had with Rachel.\n\nThere must have been some kind of training materials those women used. Like Mom was going to teach Teri.\n\nCourtney begged for my cock. She said she loved to suck it, loved how I tasted. She would plead with me to put it in her, and to never take it out. At least not more than six inches or so, until I pushed it back in. Whenever it went down, she'd do anything to get it back up again.\n\nI knew she was smart. Brilliant. Smarter than me. I should have realized she'd figure out the game, and play it like a pro. She was going to fool some very lucky guy. Maybe it would be me, but then again maybe not. We had broken up before the break. She swore she loved me, and that I had changed her life. But she had something she wanted to clear up over the holidays and she didn't want to hold me down. I had figured it was an ex-boyfriend or something. I was a little disappointed to be honest, but when school started again, I reckoned we'd be able to pick it up where we left off.\n\nI get it now. Hold me down? I bet she was like Rachel. She'd be interviewing my replacements over the holidays, now that she had learned what she could from me. She was no longer a shy amateur. She'd become an expert in subterfuge. She'd be looking to upgrade.\n\nThe thoughts racing through my mind distracted me enough to miss the end of the conversation. Mom and Teri had disappeared, while I was lost in my reverie. Listening carefully, I heard their voices in the back of the house, coming from Mom's bedroom. I quickly got off the couch and snuck out to the garage. I stealthily lifted the garage door, put the car in neutral and rolled it backward. Once I hit the street, I started it up. I drove into the garage revving the engine a few times before using the automatic garage opener to noisily lower the door.\n\nMy girls were waiting for me when I walked in through the kitchen. You'd never have known that either of them had been crying. I got hugs from both of them, told them about my luck with no exams the last two days, and let them feed me and spoil me.\n\nI couldn't help but look at them in a new light. They were women, a whole different species, and I didn't understand them. The level of trickery going on was mind-boggling. What else were they dishonest about? I never would have believed any of it if I hadn't heard it for myself.\n\nI knew my life would never be the same. I didn't know how true that was, and for very different reasons than I had imagined.\n\nThat was the start of my Christmas vacation, but far from the end. Up to this point, I've written in excess of the required 3000 words (3212). I've also front loaded my vocabulary words. Dr. Hamilton, if you could find it in your heart to commiserate with my plight, please read no further, and grade me on what I've written so far.\n\n* * * \n\nI sincerely hope that you haven't continued reading. What follows is an embarrassment and paints me in an awfully perverse and immoral light. Once again, I implore you to grade me on what I've previously written. If you do continue, I beg you to understand, my moral slide was never intended. Like so many, the path I followed was paved with good intentions.\n\nMy Christmas break story continues:\n\nFor almost a week, I walked around in a confused daze. I studied Mom and Teri, looking for other signs of deception. They had to be there. They couldn't be that good at hiding things. But they were.\n\nI couldn't help but think about Rachel and Courtney. I had a lot of time for thinking. Mom still had her job to go to everyday, and Teri had a week of classes to go. I was home alone, a lot.\n\nAfter four days of confusion and agony pondering the enigma before me, I had to do something. I still had Rachel's cell phone and gave her a call. She didn't pick up, so I left a message. I was afraid she wouldn't call me, even though we'd ended up as friends. She was my source for liquor, including those wine-coolers. I asked her to please call me, I needed her help and advice. \n\nIt wasn't an hour later that I received her call.\n\nWe chatted, and she seemed to be happy. She was dating, and even had a potential boyfriend, but pouted that he wasn't me. She asked me about Courtney and I confessed that we'd broken up. After the niceties were through she got right to the point.\n\n\"Your message sounded like you were upset, Travis. What's wrong?\"\n\nI didn't know how to ask what I needed to know. So I just blurted it out. \"Is it all a lie, Rachel? Do all women fake it? Is sex just good for the guys? Why put me through all that we did, if you don't even like it?\" By the end, I'm sure I sounded more than a little irascible.\n\n\"What are you talking about? Is what a lie?\" she asked calmly.\n\n\"Liking sex. The fake orgasms, the way you act, all that shaking. Does my cum really taste horrible? Does it hurt when I stick it in you? Do you have to\u2014\"\n\n\"Hold your horses, Travis, and settle down. Why the hell would you think that? Do you honestly believe I would lie to you about everything? You're really hurting my feelings right now.\"",
        "So I explained. I told her what I'd accidentally overheard. How I had found out the ugly truth.\n\nShe was quiet. \"You're in Dallas, aren't you?\"\n\n\"Prosper, north of Dallas,\" I told her.\n\n\"Listen Sweetie, I'm in west Ft. Worth, less than an hour from you. Could we get together tomorrow? I think you and I need to have a heart-to-heart conversation, and I'd like to do it in person, not over the phone. I'll give you my address. Why don't you see if you can come over around noon. I'll make us something to eat, and we can clear everything up.\"\n\nI hoped that 'clearing everything up' included a full confession and an explanation why. \"I can be there as early as you want. I have nowhere I need to be.\"\n\nRachel laughed. \"No earlier than 11:30. There's a few things I need to do in the morning. I'll see you tomorrow, lover.\"\n\nThe word 'lover' was a surprise. \"I can't wait to see you,\" I confessed, and knew it was true. She really was amazing. Even if she was faking it. And teaching other guys.\n\n* * *\n\nThat evening, I noticed that Teri still wasn't herself. She only had two days left of school, but she seemed like she was going through the paces. What I did notice was that she and Mom were spending a lot of time together in Mom's bedroom, and whispering together.\n\nThey were so involved in their own issues, that I believe most of the time they weren't even cognizant of my presence. Mom did have a list of things for me to do, and I'd knocked off most of them in my first week, with the house to myself, and still in a bit of a funk. I'd called a few friends to let them know I was in town, but begged off any activities. I had too many things to work out.\n\nI spent some time with Teri for the first time since my return. Just me and her. She asked me about school, and I got her caught up on my life. I knew she had something else she wanted to ask. Our conversation went something like:\n\n\"Go ahead, Teri. I can tell you're dying to ask me something.\"\n\nShe smiled nervously. \"You had two serious girlfriends in college, right?\"\n\n\"Yeah, Rachel and Courtney. Courtney and I decided to split up for the holidays, but we might get back together next semester.\"\n\nShe nodded, and avoided looking me in the eye. \"You guys had sex, right?\"\n\nI chuckled. \"Lots. Lots and lots.\"\n\n\"Did you like it?\"\n\n\"I love it. It's incredible. They were both very, very good with me.\"\n\n\"Did they like it too?\"\n\nAh, the big question. \"They certainly seemed to. Rachel was very sexual and loved to try anything. Courtney was much less experienced, but she's insatiable. She'd do it three or four times a day, every day given her choices.\"\n\n\"Her choice? You're not forcing her, trying to talk her into it, are you?\"\n\n\"I wouldn't do that. I'd never need to with either one of them. Do I initiate it? Yeah, but I'd guess less often than either of them did. I didn't keep count.\" Once I thought about it, I realized how true that was. If they didn't really enjoy it, was it just a way to win me over, control me?\n\nTeri was quiet. \"You had other girlfriends before. Did you have sex with them?\"\n\n\"You're awfully nosy tonight. Yes, I had sex with three other girls.\"\n\n\"They all liked it?\"\n\nI thought about it. \"I think so. Only one of those was even close to Rachel or Courtney.\"\n\n\"Maybe they didn't like it?\" Teri asked.\n\n\"Could be. I think part of it is I know a lot more now. I didn't really know what I was doing at first. Two of them it was their first time. One of those was really awkward and difficult. I don't think she liked it much. Not the first time.\"\n\n\"It makes that big a difference?\"\n\n\"Oh yeah. On a scale of one to ten, I'd guess I was maybe a two until Rachel. She swears I'm at least an eight now. She teases that with time she could make me a nine.\"\n\n\"Not a ten?\"\n\n\"Not unless my dick grew a couple of inches longer, she says.\" That had been a shock to me when I heard it. I thought I was hung pretty good, at seven inches long. Alright, 6 3/4, in order to keep this non-fiction, but you wouldn't begrudge a guy a quarter of an inch, would ya?\n\nTeri blushed. \n\n\"TMI?\" I teased.\n\nShe shook her head. \"I asked. Thanks for being so honest with me.\"\n\n\"Always, sis. If you have anything you want to ask me. Anything at all. I don't mind. Not with you.\"\n\nShe gave me a genuine smile. \"Me too, you know. If you have any questions . . .\"\n\nI gave her a hug. We weren't a real touchy-feely family, but I felt the urge. She tilted her head back and gave me a kiss on the cheek. \"Thanks, Travis.\"\n\nStill, my Christmas break, although weird, had not strayed into the unconventional or immoral. But the foundation had been laid for what was to follow. Please judge me not on my actions, but my intentions.\n\n* * *\n\nI continue. It's not too late to stop reading, give me my well-deserved 'A', and leave me with some dignity. Any further, and I doubt you'll ever be able to face me in class again without feeling disdain and disgust. \n\nDon't say I didn't warn you.\n\n* * *\n\nThe next morning, I had cleaned up as good as I could. I felt like I was prepping for a first date. I shaved carefully, and even used a splash of aftershave. Old Spice. I figured if it was good enough for Dad . . .\n\nI left too early, and drove around her area for 20 minutes before showing up at her doorstep. When she answered the door, I didn't know what to do, what to say, how to act around her.\n\nRachel had no such problems. \"Miss me, handsome?\" She opened her arms to me, and it was natural to hug her. My lips sought out hers, and it was like a welcome home. When we separated she gave me a smile. \"Let's talk, Travis.\"\n\nI liked her idea of talking. It involved getting naked in bed, and a fair amount of mutual oral sex, before I was lying on top of her making love. I watched her carefully, looking for the signs. If her pleasure wasn't real, there was no way I could tell the difference. When I'd finished inside her, she rolled over. \"Damn, I missed that,\" she sighed.\n\nShe dragged me under the shower, before we returned to the bed. We cuddled together, then she pulled up the covers. \"What's got you so worked up?\"\n\nIt was a few seconds before I could get up the courage to talk about it, in full detail. I was irritated when she laughed at first, but I gave her the whole story. What I'd heard them talking about, the questions that Teri had. My concerns about the reality of what I'd had with every woman until then.\n\nShe stopped her giggling and pulled me close. \"They're wrong, baby. They couldn't be more wrong. Not only can women get pleasure out of it, they can get a lot more than any man can. You can only have three or four orgasms on a good night. A woman can have dozens. A man can only have sex for so long, one woman can wear out almost any man. More than one - two, three, four, even more.\"\n\nShe moved down and her mouth covered my cock. She sucked me back to hardness. \"This is the source of your pleasure. Once he's down for the count, you can still have fun, but no more orgasms for you.\" She rolled over onto her back and stacked a couple of pillows behind her head. She crooked her finger at me, calling me over.\n\n\"How can you tell I'm excited, Travis?\" she asked.\n\nI grinned, and tweaked her hard nipple. She smiled at me. \"You think I can fake that? Make it hard on its own?\"\n\nI gave it a little suck, and heard her sigh. \"No,\" I admitted.\n\n\"What else?\" she asked. She opened her legs as a hint.\n\nI slid my hand between her legs. I felt the moistness of her cleft. \"Do you think I'm excited?\" she asked again.\n\nHer lips parted as I slid my finger inside of her. I pumped it back and forth, listening to the wet sound. \"Very.\"\n\n\"Anything else you can think of?\" Her voice was soft, almost pleading.\n\nI kissed her soft lips, and her tongue pierced my mouth eagerly. \"You turn red sometimes. Like now.\"\n\n\"What do I want, Travis? What do I need from you?\"\n\nI moved between her legs, and rubbed the head of my cock up and down her slit, moistening it. I hardened as I slapped my cock against her clit, teasing her. \"Please,\" she whispered.\n\nI eased my cock into her slowly, and listened to her sounds, her soft whimper. \"Am I faking this?\"\n\n\"No,\" I answered, pushing slowly onward, until my entire length was in her. \n\n\"Was that difficult? Did it seem like it hurt me?\"\n\n\"I think you liked it.\"\n\n\"I love it, Travis. I love to feel you inside of me.\"\n\nWe kissed while I slowly made love to her. Her eyes closed and she pulled me down into her arms, thrusting back against me with each stroke. \"Make me come,\" she whispered. \"Make me come for you, sweet lover.\"\n\nShe had taught me what she liked, what she needed. How to change position slightly, accessing different areas inside of her. Shorter faster strokes, with her legs pulled back, rising over her, pressing deep and hard, laying on her letting her feel my weight, grinding at the end of each stroke, moving my hips to stir her up. I used all of her little tricks, before she gave me her moan. \"That's it,\" she grunted. \"There, right . . . there.\"\n\nI kept the action up until she voiced her finish, coming hard on my cock for maybe five seconds, then relaxing a bit, sinking back into the bed. She pulled me down for a fierce hug and a deep kiss. \"Real?\" she teased.\n\n\"Very.\"\n\n\"Good. Now you have to do something for me,\" she grinned.\n\n\"What?\"\n\n\"Use me for your pleasure, ignore mine. Fuck me hard, do whatever you want, OK?\"\n\nI wasn't particularly creative, but I did what she asked. Took her from behind, bent over the bed, then on her hands and knees. I drove her to her belly and pounded her until the sweat ran. I wasn't worried about her, all I wanted was to enjoy that delicious body. I pulled out of her a few times to make her suck me, to watch that pretty face pleasure me, then I'd take her again. On her side, from behind, then straddling her leg. I put her on her back, legs over my shoulders, hammering her as hard as I could.\n\nTwice more she came for me, another little one like the first, and then a great big one that seemed to build forever. She was screaming at me before I could get her off, demanding I fuck her. Fuck her hard. Harder.\n\nIt was intense and I screamed out my own desire, groaning afterward as I pumped into her for all I was worth, draining myself.\n\nI collapsed on top of her, until she pushed me off. \"Move, you beast,\" she laughed.\n\nLaying on my back, my chest heaving, she wiggled in close. \"Did you enjoy that?\"\n\n\"Hell yeah,\" I laughed.\n\n\"Did I?\"\n\nIt was obvious she did. \"How? I didn't do any of the things you really like.\"\n\nShe dragged her teeth across my skin. \"Of course you did. I like all kinds of things, and once you've got me worked up, damn near anything done right can get the job done.\"\n\nShe wasn't done with me. We ate a small lunch, and then we showered again, playing, caressing each other teasingly. She made me help her change the sheets, and then it was training time. A different type this time.\n\nIt was all about the female orgasm.\n\n\"Everyone knows the two main types, Travis. You've gotten pretty good at those. You know what I'm talking about?\"\n\nI figured I did. \"The kind you get when I'm going down on you, from your clit?\"\n\n\"That's one.\"\n\n\"And the kind from fucking, inside you, right?\"\n\nShe nodded. \"Sort of. People tend to lump all the vaginal ones together. If you do a little research, or study tantric sex, the vaginal ones can be separated into different types. It's one of the reasons that different positions can give such different orgasms.\"\n\nThat was the start of the new lessons. I'd heard about the G-spot, and she worked with me to make sure I had that lesson down pat. \"Here's a secret. Fingering me is the best for that one. Done right, it's how a guy gets a woman to squirt. A lot of experts believe any woman can squirt if the circumstances are right.\" She moved my hand, with two finger inside of her. \"It's a very intimate thing to squirt. The woman has to have complete comfort and trust in her partner. Everything has to be just right.\"\n\nIt took a while, and we had to take a break, relax, and have a little of her wine, before we got that one right. It scared the crap out of me at first, but it was too amazing to only do once. She stopped me after two, and we had to take a long break. The first thing she had to do was pee, and then we relaxed with each other in the tub for a bit. \n\nThe towels on the bed dealt with most of the cleanup issues, and then it was back to my lessons.\n\n\"On the inside, besides the G-Spot, there are three other types that I know of\u2014\"\n\n\"Where did you learn all this stuff, Rachel?\" I had to ask.\n\nShe giggled. \"I'm curious. I found that playing with toys different ways gave me different orgasms. So did sex. I read, researched on the Internet, even took a weekend course.\"\n\nI grinned. \"That would be a fun class.\"\n\n\"It was. And you're getting most of the benefit of it right now.\" She gave me a kiss, then leaned over the side of the bed, reached into a drawer and pulled out a foot long clear-blue fake dick. She grabbed a bottle of lube, and squirted a little on that scary looking thing.\n\nI watched in amazement as she eased it into herself. \"This is very naughty, and if I didn't know you so well, and love you so damn much, I wouldn't be able to do this.\"\n\nShe loved me?\n\nShe closed her eyes, and maneuvered the thing until she moaned. \"Mmm, that's the spot. She grabbed the thing and pulled it out, holding her fingers tightly in a circle where it had stopped reaching inside of her. \"About that far in, for me at least, along the top side. It's behind the G-Spot. I think they called it the A-Spot. Contact there can give me a really nice orgasm, and sometimes multiples.\" It looked like it was about four inches inside of her. \"See if you can reach it with your fingers.\"\n\nI slid two fingers in as deeply as I could. \"Curl them up like your trying to pet the topside, with just your fingertips.\"\n\nI did as she asked. \"Longer movements,\" she said, wiggling her hips a little. After a few more times she smiled. \"Right there, try that a while.\"\n\nIt was more difficult, I felt like I was straining my fingers, but she seemed to like it. \"Mmm, alright, enough of that. Turn your hand over now.\"\n\nI inverted my wrist like she asked. \"Deep as you can go, back and down. Basically these last two are around the cervix. You know what the cervix is, right? Some girls are not going to like being touched there, it's uncomfortable. I like it, and a lot of women do, so you need to be aware.\" I did as she asked, and after a few tries, she told me I had it right.\n\n\"Those last two, you can hit those just right with your cock, if a guy's long enough. You don't have to be enormous.\" She slid her rubber dildo back inside, at a different angle, and pulled it back out. \"There. That's not even five inches. You'll have no problem hitting that, with plenty to spare.\"\n\nShe pulled it out, and rubbed the outside of her pussy. \"Wow. Not as much fun, when it's all technical. Those are three of the four vaginal ones. Got it?\"\n\nI nodded. \"What's the fourth?\"\n\n\"It's just called a vaginal orgasm. No G-Spot or A-Spot or whatever. If a guy's nice and thick, and can go a long time, usually a looong time, like at least fifteen minutes, the steady rhythm can build up to one of the biggest types. Really intense. You should know, you've given me quite a few of those.\"\n\nIt was a lot to take in. \"This is kind of crazy. Four different ones inside you, and playing with your clit?\"\n\nShe laughed, \"There's more, but not for everybody. Anal orgasms aren't uncommon, but I haven't figured that one out, not that I haven't tried. Some women can get off with just having their breasts and nipples played with. The girl's got to have really sensitive nipples for that. It doesn't work for me, but I hear it's not rare.\" She grinned. \"Oral sex, too. There are women out there who can come giving a blowjob. I think that's pretty amazing, and wish I could. I'd love to experience that feeling.\"\n\nI was lying next to her, completely fascinated. \"Then there's the one spot nobody talks about much,\" she said\n\n\"And that is?\"\n\n\"The brain. The excitement of seeing, hearing, smelling can create an orgasm all by itself.\"\n\nShe rolled me onto my back, and laid on top of me. \"Still think there's anything fake?\"\n\n\"Then what's the problem with Mom and Teri?\"\n\nShe gave me a long slow kiss. \"I can think of three possibilities right off the bat. They're not excited, maybe because they're too nervous. Whoever's with them could be doing it wrong and is not concerned with their pleasure, or in the worse case, some women just have issues. They are much harder to get to come, it takes time and patience, and a caring partner. Combining those issues could be devastating.\"\n\nShe gave me a quick peck. \"That's it. Just remember, the clit's the easy one. Don't abuse it, do it like I showed you, and most women will not only come for you, but they'll keep coming back for more.\" \n\nShe rolled off of me, and laid on her side, watching me. \"Did that help?\"\n\n\"In more ways than one. Can we do this again?\"\n\nShe scooted over next to me. \"We'll see. I'm seeing someone. It's not serious yet, but I think it could be. If it becomes serious, I'm gonna be exclusive. Why don't we talk on the phone a bit, and see how things are going.\"\n\nWhen I went home that evening, I had a much better idea of what was going on, but I still wanted more validation.\n\nThe call to Courtney was much less convoluted.\n\n\"Are you serious?\" she answered. \"Do you honestly think I was faking it?\"\n\nSo I explained my issues.\n\n\"You can be the biggest dope, Travis. Before I met you, I never came with anything but my own fingers. You showed me that it was possible, with the magic mouth of yours and that wonderful fat cock!\"\n\n\"You really like it then, it doesn't hurt or anything?\"\n\n\"I get sore sometimes, that's about it.\"\n\nI thought about another of my sister's comments, which I hadn't addressed with Rachel. \"You said you liked my cum. You swallow it. Mom and Teri says when they do it, it tastes horrible.\"\n\n\"Your mom and your sister tasted your cum?\" \n\n\"No! Of course not! Not mine, whoever's it was, Dad's I guess, for Mom.\"\n\nShe was a little slower answering. \"I may have fibbed a little. It doesn't taste very good.\"\n\nThere it was. Faking it. \"Why did you say it did?\"\n\n\"Because I love doing it for you. I love the way you respond. I want to make you happy.\"\n\nI thought about that. \"It does make me feel good. I like that a lot.\"\n\n\"Exactly! Look Travis, when you go down on me, does it taste good, or do you do it because you know how much I love it?\"\n\n\"I love it. I love what I can do to you. It doesn't have a very strong taste.\" I didn't mention the smell which could be a little strong sometimes.\n\n\"And I love that you're so willing to do it for me, and that you're so good at it. Amazing.\"\n\nShe giggled. \"I wish you were here doing it now. I miss you.\"\n\n\"I miss you too, Court. I miss you a lot.\"\n\n\"Don't be a stranger. It was nice hearing from you.\"\n\nThe conversation helped. A little white lie about how my cum tasted seem to be the worst of it. I still felt bad about Teri. I had no idea how I was going to start the conversation that we needed to have.\n\n* * * \n\nIt was difficult to write the previous passage. Now you know, I'm a perverse pussy hound, and easily controlled. Pussy-whipped, I believe the saying is. If you're still reading, I'm hoping that your curiosity and prurient feelings have been satisfied. Last chance to turn back, before reading the true depths of my depravity.\n\nSeriously. Last chance. It goes downhill quickly from here. If you harbor any decency in your soul, stop now. Please.\n\n* * * \n\nIt wasn't going to be that night. It was the last day of classes. There was supposed to be a big party at one of the houses, and Teri said she'd be coming home late. I guess she was going to try what Mom had taught her with Kyle. I'll be honest, the idea pissed me off a little.",
        "I'm not warped or anything. My sister deserved better, that's all. She never let it get her down, she trudged along, putting on her happy face, dealing with life as it hammered her. Dad's death, her leg injuries, the therapy, the bullying. As she got older, she had her friends, but not much luck with guys. Acne kicked in when she was 16, if life wasn't already tough enough for her. By the time it cleared up, I was gone, so I didn't have that good of an idea what the last couple of years were like for her. \n\nWhen she got home that night, she was broken, in tears, sobbing her eyes out. I felt too awkward to get involved, and let Mom take her in the back and commiserate with her.\n\nI never found out that night what had gone wrong. All I knew was that it was bad enough for her to stay in her room all the next day. Bad enough for Mom to tell me to leave her alone. \n\nLike I said, Teri deserves better.\n\n* * *\n\nIt was the week before Christmas, and all the old gang were back in town. I spent Saturday with some of my high school friends, swapping college stories. It was a good time, and when I got home it was late, and my mother and sister were already in bed.\n\nI confess. I was pretty drunk. Not hammered, but good and buzzed. We hung out in Steve's basement, and even though he was still only 20, he had a mini-fridge full of beer, and he didn't mind sharing. When I stumbled into Teri's room she bolted upright, clutching the covers to her chest. I sat down on the bed next to her, waiting for the room to stop tilting from one side to another. Alright, I was smashed.\n\n\"Travis, you're drunk!\" she hissed. \"You're in the wrong room!\"\n\nI groped for her hand, holding it in mine. \"Don't b'lieve Mom, she dunno,\" I explained, 100% content with the sharing of my newly gained wisdom.\n\n\"Don't believe what? What are you talking about?\"\n\n\"Girls like it. Like it lots,\" I explained.\n\nShe blushed, but I was hardly in any condition to realize it. \"What are you talkin' about, Travis?\"\n\n\"Sex,\" I explained. \"You'll fin' a right guy, he'll show you. It'll be great.\"\n\n\"Travis! Have you been spying on me?\"\n\n\"No spyin'. Heard you'n Mom. She's wrong.\" It was too difficult to sit up, so I fell back on the bed. It didn't help much. The room was balanced on a big ball, tilting all around.\n\n\"Damn you, Travis,\" she hissed, and slapped me. I was a little late blocking the second blow, and turned away, struggling to stand, holding the bottom column of her princess bed. \n\n\"Sorry,\" I mumbled, and staggered my way back to my room. I almost bumped into Mom, on the way, and she looked at me in surprise. \"You're wrong, Mom,\" I told her as I squeezed past her toward my room. \"Lotsa girls like it.\"\n\nThat was all I recall of my big announcement. I know. I'm an idiot. Then again, it's not like I'm the first person to say stupid stuff when they're drunk.\n\n* * *\n\nThe next day, I woke up late, and my mother and sister were giving we ambivalent looks. I couldn't remember much of my late night conversation with my sister, and they didn't seem eager to bring it up. I wasn't in any hurry to talk about it, especially the way I was feeling. \n\nThe weekend passed with each of us feeling awkward, keeping to ourselves. I went out more, the atmosphere at home painful, and hooked up with my old friends. We drank some, but I kept it under control. I was never a big drinker, and the other night when I'd confessed all was about the drunkest I'd been since high school.\n\nWe were chasing skirts of course. That was a big part of what being home on break was all about. I was looking for a part time job, but I wasn't in that big of a hurry. It gave me something to talk about with the ladies - if they knew anyone hiring, any good jobs, if they were working, etc.\n\nMy buds were surprised I was doing as well as I was. It was the Rachel and Courtney effect, of course. I was secure in my ability to keep and please a woman. Complex, beautiful women, to be honest. Yes, Rachel and I had split up, but I understood why and that was my decision. Courtney had wanted us to be separated for the holidays, but she was quite successful in making it clear to me she only meant for it to be temporary. So when I spoke with the girls, I did it from a position of confidence. I had an amazingly hot woman an hour away that I could probably hook up with if need be, and a brilliant young sexpot on a loose tether, who I could go back to in a few weeks. I chatted, I flirted, and if I wasn't an immediate success, I moved on. I didn't have the time or inclination to work for it. \n\nThat first weekend ended up with one of my sister's classmates giving me a handjob behind the bowling alley, after an extended make out session. I had her dancing on my fingers, thinking about what Rachel had taught me, feeling good when she shuddered through her orgasm. It was fun. I wanted, needed more, but it was a great start to the holidays. She gave me her number and asked me to call. I told her I'd see her around, no commitment, but figured I'd probably check in with her in a couple of days. \n\nWhen I got home late Tuesday evening, my good mood dissipated quickly. It was a quiet and somber house I walked into. I guess I wasn't as sober as I thought I was, because Mom, decided we needed to speak.\n\nShe sat me down, looking disappointed. \"You're drunk, Travis. This is becoming a pattern and I don't like it.\"\n\n\"I'm not drunk, Mom. I had a few beers. Less than half-a-dozen all night. I'm sorry about the other night, I don't usually do that, but I just needed to unwind a little.\"\n\n\"You're twenty years old. If you got caught driving drunk, it could ruin your future, baby,\" Mom said, leaning toward me anxiously. \"I know we had this talk after your freshman year. You wouldn't have a curfew, and I'd try not to butt in too much. I'm just worried.\"\n\nDamn. No yelling, no threats, just disappointment and concern. I almost wished she'd tell me off. \"I'm sorry. It's just . . .\" No, I couldn't tell her that being home was such a downer, the way that she and Teri were behaving. There was no joy there anymore, and I needed an escape. That explanation would only make things worse.\n\n\"I broke up with my girlfriend,\" I said. \"School was rough last semester. I guess I'm trying to get it out of my system. I'll be more careful, alright?\"\n\nShe took my hands in hers. \"Maybe I expect too much of you,\" she whispered. \"You've been the rock around here ever since your father passed. We need you. Teri's having a difficult time. The last thing I need is to worry about you. Please don't drive if you're drinking. Give me a call, or call Teri. We'll come get you. Try not to have too much to drink. It's not good for you.\"\n\nI sighed. \"Mom, don't worry. I've been drunk twice in my life. I don't drink a lot. I'm not going to start. I'll keep it under control, OK?\"\n\nShe nodded, but I still saw the concern. \"You can have your friends over here. If you're going to drink, I'd rather you did it in the basement, as long as none of you got drunk. Think about it.\"\n\nI had, but among other things, I didn't want Teri subjected to my friends. She was vulnerable, and to be honest, some of them were butt-heads when it came to girls. \"I will. Trust me, Mom, alright?\"\n\nThat was the end of that conversation, but she did convince me to think about what I was doing when I went out with the guys. I didn't bring up the case of beer sitting in the trunk of my car. That would have just caused trouble.\n\n* * *\n\nWe weren't wealthy, far from it. The insurance after Dad's accident went into the bank, as did the settlement with the company whose truck had hit him. Teri's medical bills had been paid for. The mortgage insurance paid off the house. What it meant was we had a lot of money, but it stayed in investments. The return on those supplemented Mom's income, and we had enough to get by on, but we lived frugally.\n\nI had earned the money for my car working part-time, although Mom paid the insurance. My schooling was a bargain, attending a state school. But if I wanted spending money for the year, I'd need to find a job. Summers and Christmas break, that was when I earned my spending money for the year. Besides, I wanted to get Teri something nice for Christmas, and I was kind of broke. Not totally, but it was worrisome.\n\nTeri had never worked. I didn't hold it against her when Mom gave her a car, even though I had to work for mine. Teri had it harder, school work didn't come as easy to her, and standing for long periods was a strain on her injured legs. \n\nMom had already gone into work. Teri came over and sat beside me in the living room, while I pored over the want ads. She grabbed the beer I had, and took a long drink.\n\n\"Don't,\" I said. \"Mom'll kill me.\"\n\nShe ignored me and took another sip. \"Looking for a job?\"\n\nI nodded, circling another possibility. \"How about you? You ever think about getting one?\" She hadn't been out of the house since getting home the other night, after her fiasco, whatever it was. Maybe a job would get her off her butt.\n\n\"Maybe. I don't know.\" She was quiet, no life in her voice. I hated to see her that way.\n\nI went down to the basement fridge, where I'd stashed the beer from the night before. I grabbed a couple more and headed back upstairs. I sat beside her, and moved the papers out of the way. She was still drinking, and I could swear she was forcing herself to. She didn't appear to be enjoying it.\n\n\"Tastes like crap, doesn't it?\" I said, taking a drink from my newly opened bottle.\n\nShe choked on the beer, coughing, and looked up at me, with almost a smile. Her slender arm rose up and wiped her mouth. \"Yeah, why do you drink this stuff?\"\n\n\"You get used to it. I like the buzz. Takes the edge off.\"\n\n\"What's it like to get drunk, Travis?\" she asked.\n\nAnd there she was. My sister, the curious little tag-a-long who always came to me with her questions. Her eyes had a little life, and the corner of her mouth turned up in a bit of a smirk. I'd missed her. \n\n\"Stupid. It's fun to have a few, it makes your troubles go away, everything seems fun, happy, for the most part. Some people are stupid or mean drunks, and you want to stay away from them, but most of my friends just do it to let go.\"\n\nI opened the other beer, and passed it to her, before continuing. \"Getting really drunk? That sucks. You say stupid things, do stupid things. You feel like crap the next morning. Finding that line between buzzed and bombed is something you have to learn, and then avoid crossing like the plague.\"\n\nShe listened as if what I said mattered, and took another small sip. She had a way of paying full attention to me, that made me feel older, important. \"I guess you can get used to this stuff. I'd rather drink soda or iced tea.\"\n\nWhich gave me an idea. Mom had a decent bar. She didn't drink much, but she felt the need to be able to entertain a guest when we had one. \"Wait here,\" I told my sister, and made the second choice that led me down the circumstances of that school break. Again, I swear, I wasn't thinking of where it might lead, it was a spur of the moment decision.\n\nA few minutes later I placed the large tumbler in my sister's hands. \"Try that. It's a Long Island Iced Tea.\"\n\nShe took a sip and looked up at me in surprise. \"That's pretty good. It has alcohol in it?\"\n\nNo shit. About a six pack's worth. Maybe more. \"Yeah, but it's not like beer, is it?\"\n\nShe took a long sip, knocking down about a quarter of the glass. \"Nope. Lots better.\"\n\nShe leaned back, sipping, looking at me. I could almost see the gears churning away upstairs.\n\n\"You want to talk about it? I know something bad happened the other night,\" I said.\n\nShe shut down, a wall slamming closed behind her eyes. \"No.\"\n\nToo early. \"I'm sorry I brought it up. Forget it.\"\n\nShe practically snarled, \"Yeah, I wish it were that easy.\" Damn, that wasn't good. I wondered how bad she'd been hurt. I felt my ire returning. Somebody was definitely getting an ass kicking.\n\nI leaned back, quiet. Whatever she wanted to say, she'd get to eventually.\n\nHer glass was half-empty before she finally got to the point. \"What you said the other night, in my room. Is it true?\"\n\n\"Teri, I was drunk. A lot drunker than I should have been. I don't even remember everything I said.\"\n\n\"I don't believe you, Travis. You didn't beat around the bush at all. Is it true?\"\n\n\"About girls enjoying it?\"\n\nShe nodded.\n\n\"Yeah. I'm pretty sure it is. After hearing you and Mom talking about it, I was kind of scared that Mom was right, so I had a heart-to-heart with my girlfriends from the last year. They swear they love it, and I believe them.\"\n\n\"All of it?\" she asked, her voice shaking.\n\n\"Maybe not all of it. Courtney used to say she loved my coming in her mouth. When I asked her about that, she admitted she doesn't like the taste at all, but she likes doing it for me, because it excites her to be able to pleasure me that much. As far as the regular sex goes, yeah, they like it a lot. I don't think they could fake the way they react. They love when I go down on them; I'm sure they couldn't fake that.\"\n\n\"You . . . you do that? To them?\"\n\nI could feel myself blushing. \"Yeah, I do. A lot. They love it, and I love to have them come for me, and it gets them so excited for the rest of it.\"\n\nShe looked like she was going to break into tears. \"I hate it Travis. I hate the way it hurts. I get nothing out of it. Is there something wrong with me? Is it because of my accident? Did something break inside of me?\"\n\nGod, I'd never thought of that, or if it was even possible. That damn accident, still playing such a huge role in her life. \"I don't know, sis. Honestly, I don't know that much about it. Half-a-dozen girls, and only the last couple really got into it. I heard what Mom told you. I don't think she's right.\"\n\n\"Aunt Brenda says the same thing. I have to learn to put up with it. Mom's trying to teach me how.\" She blushed deeply, and took another long sip, draining her glass.\n\n\"Teaching you? How?\" I asked, curious. I know, it's kind of warped, but I cared. Really. She was my baby sister, I was responsible for her, had been for years.\n\nShe couldn't look me in the eye. \"How to get prepared ahead of time, getting used to having something in me. How to shut down my thoughts, think of something else. How . . . how to act like I enjoy it.\"\n\n\"Is that what you've been doing in Mom's room?\" I asked, draining my beer. It was a bizarre image, her and Mom.\n\n\"Yeah. It doesn't hurt so much, once I have enough of that goop in me, and if we do it slow.\" She was playing with her empty glass, sucking on an ice cube. She didn't seem drunk, but it looked like it was hitting her.\n\nShe looked up. \"Can I have another of these?\" she asked, waving her glass.\n\n\"There's a lot of booze in those. Maybe one more small one.\"\n\nShe rolled her eyes at me. \"I couldn't taste nothing in that last one. Did you make it weak on purpose? Like I can't handle it? I'm eighteen, Travis. I've had a drink before. I'm not a little girl.\"\n\nI made her another one, the same as the first. It didn't seem to have hit her too hard. Maybe she had a better tolerance, or they weren't as strong as I remembered.\n\nOnce she'd had a sip of her new drink, she stretched out on the couch, her feet in my lap. \"How do you know your girlfriends like it? That they're not just faking it, like Mom says.\"\n\nI sighed. This was a lot more personal than I wanted to get. \"There's lots of ways to tell.\"\n\n\"Like what?\"\n\nSo I explained, what Rachel had shown me. All the signs. Hard nipples, moist pussy, flushing, the involuntary responses, the trembling, the shallow breathing, the sweet little sounds that escaped her lips. I took my time describing it for her, how they responded to what I did to them, watching them climb the peaks of their excitement. How they acted when they came for me. When I looked up at Teri, I smiled. \"Like that,\" I said with a nod to her chest.\n\nShe was wearing a diaphanous top and her nipples were hard. She looked down and covered herself with her arm. \"I'm cold,\" she said.\n\n\"No, Teri. Your face is flushed, your nipples are hard. I bet if you felt between your legs, you'd be wet. You're not frigid. The guys you've been with were jerks. They didn't know what they were doing, didn't know how to get you worked up.\" I felt bad for her, and rubbed her bare feet in my lap. \"Tell me about it, OK? I'm not going to judge you or anything. Just tell me. How did it happen?\"\n\nShe shrugged. \"Like everyone else I suppose, at first.\"\n\n\"What is 'like everyone else'?\"\n\nMaybe it was the booze, or maybe it was time. She finally opened up to me. \"You know. We kissed some. He put my hand on his zipper, and made me rub it. He pulled it out, and I moved my hand up and down. He grabbed my head and pulled it down, sticking his dick in my mouth just before he blew up, holding me there until he was finished. It was nasty, but I tried to block it out, and breathed through my nose, until it was gone.\"\n\n\"God, what an asshole,\" I muttered.\n\nShe shrugged. \"He stayed mostly hard, feeling me up under my clothes, while holding my head down. He was kinda rough. I could feel him get harder in my mouth. It smelled pretty bad, and I really wished he'd let me up so I could wash that crap out of my mouth.\"\n\nShe was staring off into space, telling it like it happened to somebody else, sipping from her drink. \"He told me to get in the back seat. He was my boyfriend, and I knew what he expected. I know it's what the other girls did, so I climbed in the back. Kyle got out and got in the back door. He had his dick out, stroking it. I watched him roll a rubber over it, so there was no doubt what he was going to do. He put one of my legs over the back of the seat, and the other one over the front seat. I was kind of scared, but I knew it was what he wanted, what girlfriends did. He pushed my skirt up, and pulled my panties to the side. Then he was pushing that thing in me, and it hurt, Travis. It hurt a lot. But he just kept pushing until he was in me.\"\n\n\"Was he too big?\" I asked. Maybe that was the problem.\n\n\"I don't know. I don't know how big they're supposed to be. It wasn't huge or anything. Smaller than a banana, I guess.\" She took another long sip, to get her courage up. \"Then he was leaning over me, grunting, pushing it in me for a couple of minutes. He . . . he called me names, ugly names, and then scrunched up his face, pushing hard before he pulled out. That was it. Sex. What everyone talked about. I hated it.\"\n\nSmall surprise. What a jackass this Kyle was. He and I would be having a talk, that much I was sure of.\n\nMy sister was sitting there, feet pulled in, knees curled up to her chest. I could see the tears running down her face. Tears from Teri. Tears I hadn't seen in years. I took the drink from her, lifted her into my lap and held her. She tucked her head into my shoulder and cried. \"Is it my fault? Did I do something wrong? I let him do whatever he wanted, Travis. Three more times, but it never got any better. I even let him stick it in my bottom. That really hurt, but I didn't cry. I let him do it. Aren't I a good girlfriend?\"\n\nI gave her a hug. \"It's not your fault, Teri. The guy's a complete ass. That's not how you treat a girlfriend. He didn't take care of you at all, didn't concern himself with your pleasure. Damn it, Teri! You don't let a guy do whatever he wants, even if he's your boyfriend. If he doesn't treat you right, you stop him. He used you, like a complete bastard. All guys aren't like that. Geez - I hope that most guys aren't. It's no surprise you didn't like it.\"\n\nI wiped her tears away, and brushed her hair back. \"Rachel says that there's a few reasons a girl might not like it. They're not ready for it, the guys doesn't know what he's doing, or some women need a lot of attention and time getting warmed up before enjoying it. Some women find it more difficult to find pleasure. I guess your problem with the asshole is all three. I'm sorry it was lousy for you. You need to dump that jerk, and find a better guy.\"",
        "She sighed. \"It's not like I've got a lot of choices, Travis. They're not beating the door down coming for me.\" I felt her tighten up. \"Even Kyle, that asshole, he didn't want me. It was a bet. A stupid bet.\"\n\n\"A bet?\"\n\n\"Yeah. Last day of classes, we were at his house with a bunch of friends. He took me upstairs and fucked me. When he was done, he got up laughing, and his friends were there taking pictures. 'Now do you believe me?' he said. They just left me there, and I heard him saying they each owed him ten bucks. That's all I was. A stupid bet, and now they have pictures.\"\n\n\"Fuck, Teri! You should have told me!\"\n\n\"Why? So you could get in a fight? It's over. I went downstairs, and he had his old girlfriend in his lap. He told me that Derek wouldn't mind throwing me a fuck. I ran out with them laughing at me and walked home.\"\n\n\"God, sis, I'm so sorry. I wish you'd said something. You should have at least called. I would have come and picked you up.\"\n\nShe shook her head. \"I had to get out of there. I couldn't stand the way they laughed at me. I was so stupid, thinking someone like him would want me.\"\n\n\"Bullshit, Teri. That's not stupid. Any guy should be happy to have you for a girlfriend. You're smart and pretty, and the nicest person I know. He's just an ass. You could do so much better.\"\n\n\"Right,\" she mumbled. \"I've turned down so many guys. Let me think a moment . . . there were, oh yeah, ZERO!\" she snapped.\n\n\"Listen, it's almost over. High-school's nearly done, just one more semester. You're going to college, and it's a fresh start. You'll meet a great guy. I know you will.\"\n\nShe sighed, leaning against me. \"You're a nice guy Travis. I know you mean well. I think you forget sometimes,\" she said softly.\n\n\"Forget? Forget what?\"\n\nShe sat up, and before I could stop her she was wriggling out of her sweatpants, pushing them down to her ankles. She leaned back pointing to the scars on her thighs. Even all these years later, they were ugly, discolored, long and thick. There was only one on her right leg, but the left leg was bad. \"I'm hideous, Travis. And it's never going to go away. What guy is going to want me, when he sees this?\"\n\nI felt bad for her. I touched the worst of the scars, running my fingers down it. \"Does it still hurt?\" I asked.\n\n\"No. My leg aches sometimes, and my hip gets sore, but the scars don't hurt, they're just so damn ugly.\"\n\nThe one on the inside of her thigh didn't look as bad but it ran all the way up to her panties. It made me wonder. \"Is, uh, are you, does your scar go all the way up?\" I asked.\n\n\"Is my pussy scarred? Is that what you're asking?\"\n\nHell I didn't know what I was asking. It looked bad, I had to admit. Maybe it really was a problem if she had scars there.\n\nWhen I didn't respond, she shook her head. \"No, only one of them goes past the top of my leg.\" She pulled the side of her panties down, and I saw it tracked up her skin an inch away and parallel to her little field of hair, ending a bit below her bikini line. I don't know why I did it, but I ran my finger along it. \"Does this one hurt?\"\n\nShe shook her head, and I saw her hand was trembling where she had pulled her panties down. \n\nI felt bad for her, and rubbed her sad scars. Then I did something stupid. I grabbed the sides of her panties and started tugging them down. She didn't stop me, but her hand dropped on top of mine, holding it, but not interfering. \"What are you doing, Travis?\" she whispered.\n\n\"Hush, Teri. Let me do this.\"\n\nShe let go of my hand, and I soon had the bottom half of her body naked. I stroked the insides of her thighs softly. \"Lie back now. Lie back and close your eyes.\"\n\n\"What\u2014\"\n\n\"Shh. Trust me. I love you, Teri, and I want you to trust me. Can you do that for me?\" \n\nShe slowly leaned backward, and I wedged one of the throw pillows behind her. Then I adjusted her in my lap.\n\n\"Relax now. I want you to try to relax completely.\"\n\nI knew that would be a difficult task, but I stroked her skin softly. I felt her jump a little, when my hand brushed between her legs before reaching her pubic hair. I scratched there gently. \"You've got really soft hair, sis.\"\n\nShe wiggled a little, and I started caressing her skin again. \"Don't get scared, alright? I'm going to touch you. I'm going to touch you the way a boyfriend should touch you. I won't hurt you. If anything feels uncomfortable, tell me, alright?\"\n\nShe whimpered a little as my fingers tentatively stroked along her pussy lips, barely caressing them.\n\n\"Travis\u2014\"\n\n\"Trust me, Teri, alright?\"\n\nShe nodded slowly a few seconds later, and I felt her start to relax. I ran my left hand over her upper body, soft, caressing, while my right hand touched and teased, skimming her bare flesh, breezing across her pussy, running slow gentle circles around her clit. It was a torturous foreplay that Rachel had shown me, something to do when she was tied up and helpless. It drove her crazy. I was hoping for similar results from my sister.\n\nIt took a long time to get any results from her. It felt good to see her nipples harden when I played with her tits a while. I was gently opening her up, separating her lips, teasing along their length. She was dry, her skin seemed to stick together. Nothing like Rachel or Courtney, either of which would have been soaked after ten minutes of teasing.\n\nI concentrated more around her clit, indirect contact, worrying one side of it, round and round, alternating a softer touch with something more direct. I licked my fingers frequently keeping them moist. Then I thought about what Rachel said, and tried to get Teri involved mentally.\n\n\"What are you thinking about?\" I asked.\n\n\"Nothing,\" she muttered.\n\n\"C'mon, what? Do you hate it? Does it feel OK?\"\n\nShe blushed. \"I'm doing what Mom said, alright? Thinking about the beach, the hot sun.\"\n\n\"Forget about what Mom said. Just for a while, alright? I want you to think about my touch, and tell me when anything feels good, or anything feels uncomfortable.\"\n\nI leaned toward her head. \"Your nipples are hard.\"\n\nShe shivered. \"This is bad, Travis. What if Mom saw us?\"\n\n\"Is it worse than what you and Mom do?\" I asked.\n\nShe shook her head.\n\n\"I'm your brother. I'm not going to have sex with you, Teri. This is not about that. I'm trying to show you what girls like. You need to relax, and let yourself enjoy it.\"\n\n\"It's naughty,\" she breathed.\n\n\"It is. Sex is naughty. It's fun too.\" I brushed my lips across hers. \"Relax for me. Do you like it when I touch you like this?\" I asked, caressing the inside of her thigh.\n\n\"Yeah.\"\n\n\"Like this?\" I asked, letting my fingertips trace their way along the length of her pussy.\n\n\"That's dirty,\" she whispered.\n\n\"Very dirty. You have a pretty little pussy. Does it feel good?\"\n\n\"MmmHmm,\" she purred.\n\nI was leaning sideways, watching her face, looking for her reactions. I brought my fingers to my mouth to wet them, then stopped, and put them to her lips. \"Suck,\" I whispered.\n\nShe opened her mouth, and sucked on my fingers for a second. \"Good girl,\" I told her, then went back to petting her pussy, teasing her open. I brought my fingers back to her mouth a few times, then saw her skin was flushing.\n\n\"How's this?\" I asked, rubbing circles around her clit.\n\n\"Nice,\" she said.\n\n\"This side?\" I asked, before rubbing the other side, \"Or this?\"\n\n\"Both, both,\" she answered, her breath shallow. \n\nI kissed her again, a little longer, tracing her lips with my tongue, before putting my fingertips inside her mouth. \"Make them nice and wet, baby,\" I told her.\n\nShe sucked like a woman determined, her tongue wrapping around my fingers, and then I went back down below, and inched them inside of her. \"Damn, sis. You've got a tight little pussy. So damn sexy.\"\n\nShe whimpered softly, as I worked them in. \"Hurt?\"\n\n\"No.\"\n\n\"Can I kiss you for real?\" I asked.\n\nShe turned her face toward mine and opened her eyes. She gave me a hesitant little nod, and I lowered my mouth over hers. She let me kiss her, but did little to respond. After a few seconds I backed off, and put my fingers back in her mouth. She sucked them, looking into my eyes. \"This time, kiss me back. Kiss me like you want to be kissed.\"\n\nShe was better, more active, and my fingers slipped in and out of her easily. After a while I could even hear it.\n\n\"You're wet, sexy girl,\" I said.\n\n\"Wet?\"\n\n\"Soaked.\" I took her hand in mine, and brought it down to her pussy. \"Feel.\"\n\nShe moaned sweetly as her fingers entered her opening, mine guiding them.\n\n\"This is how you should be before sex. Open, wet and ready. Understand?\"\n\nShe nodded nervously.\n\n\"This doesn't hurt, does it?\"\n\n\"No. It . . . it feels good.\"\n\nI moved my hand off of hers, and started teasing her clit, seriously now. She trembled when I touched her. I lowered my mouth onto hers again, brushing her lips. \"You're a sexy woman, Teri. Sweet little pussy. If I wasn't your brother, God, the things I'd do to you!\" I kissed her harder, probing her mouth with my tongue, teasing hers, while my fingers rotated through the patterns I'd learned, the little circles, the pressure, the gentle tugging, the vibrating touch.\n\nThere was no doubt about it, she took forever to get going, but by being patient I was getting her there. She was moaning in my mouth, pressing back against my hand. I could feel the trembling start.\n\n\"Travis,\" she gasped, when I pulled my mouth free.\n\n\"I'm going to make you come for me, beautiful. I want to see you come.\"\n\nShe whimpered softly as I held her head in the crook of my elbow, kissing her lips softly, telling her how beautiful she was, how sexy, how she had a hot little pussy, how much I wanted to taste it, to lick it, to make her come for me.\n\nI felt her tense up, and cupped my fingers around her clit, making my fingers vibrate, pushing down firmly. It was a trick I'd learned with Rachel, involving my whole arm, elbow bent, muscles tensed, hand stiff, fingers shaking back and forth only a half inch or so. It was exhausting and I could only keep it up for a minute or so. She gasped, and her eyes opened wide. I kissed her firmly, keeping the tiring vibration going until she pulled back. Then I left her clit alone, rubbing her pussy softly, easing my fingers inside of her. \n\nShe stared at me in amazement, and I gave her a little kiss. \"That, baby sister, is an orgasm. Not so horrible, was it?\"\n\nShe shook her head, mute for the moment.\n\n\"Did you like it?\"\n\nShe nodded almost imperceptibly, slowly.\n\n\"Sex isn't so bad is it?\" I teased.\n\n\"Not like that it isn't.\"\n\n\"Good, now relax. I'm not going to make you come again, I just want you to feel good, alright?\"\n\nShe nodded, and opened her legs for me as I encouraged her to spread them.\n\nI entered her with my fingers, slowly and gently. I took a few seconds to find the tell-tale feel of her G-spot, and petted it. \"Trust me?\" I asked.\n\nShe nodded. I gave her a little kiss.\n\n\"You have a sweet little pussy, sis. Very pretty, and sexy. There's nothing wrong with you down there, trust me.\"\n\nI kept petting the G-spot, teasing her clit a little with my thumb. \"Do you believe me?\"\n\n\"I want to. But you're my brother. You have to say that.\"\n\n\"No I don't. I wouldn't lie to you. Not now. This is too important. You've got a great pussy. This little girl is going to make some guy very, very happy. As long as he's patient, and gentle, you're going to drive him crazy. Fuck, Teri, trust me on this. I'd love to pound something this sweet and tight.\"\n\n\"Would you?\" she asked nervously.\n\n\"Damn straight I would.\" I kissed her gently and she grabbed my head, and kissed me wildly. It was kind of messy, and there was too much tongue, but she was trying, that's for sure.\n\nI pulled away, chuckling. \"We're going to have to work on that kissing. 'A' for effort though.\"\n\nShe looked at me worriedly and I knew I'd screwed up. \"I'm a bad kisser,\" she said.\n\n\"Not bad. Inexperienced.\"\n\n\"Make me better, Travis?\"\n\nHer little hips were wiggling while my fingers kept playing with her. \"We can't go too far, Teri.\"\n\n\"I know,\" she said.\n\n\"As long as we remember that, alright?\"\n\nShe nodded.\n\nHer eyes nearly popped out of her head, when I pulled my fingers out of her and sucked on them. \"Sweet,\" I told her.\n\n\"God, Travis, do that again,\" she whispered.\n\nI did, pumping her for a few seconds, then sucking my fingers clean.\n\n\"Am I . . . am I really sweet?\" she asked.\n\nI kissed her softly. \"No, you really don't taste much like anything. I'm never going to lie to you about sex, alright? What's sweet is that it's your juices, out of your sweet pussy. I love that. I love that you juice up for me. I love the idea of licking your wetness.\" I dipped my fingers into her, and put them to her lips. She opened up nervously, and I slid them inside. \"Naughty, but not too much to taste, really, is there?\"\n\nShe shook her head. I gave myself another taste, and smiled. \"Sweet as sugar to me. Baby sister, little pussy juice. I love it.\"\n\nShe smiled. \"Do you? Really?\"\n\n\"I do. I love everything about you. Anyone who doesn't appreciate this,\" I said, giving her pussy a little shake, \"is a damned fool.\"\n\n\"Am I drunk?\" she asked. \"Is that why it feels good?\"\n\n\"No, you're not drunk. Maybe a little buzzed. It feels good because we took our time and let you get worked up at your own pace. And because you trusted me.\"\n\n\"I do, you know. I trust you completely. I'd trust you with my life, Travis.\"\n\nI kissed her softly, and rubbed her pussy a little, sort of a goodbye rub. I reached down for her panties, and with a little effort, pulled them up into place. I looked at her face, and she was blushing. \"Almost a shame to put her away. Sweet little pussy.\"\n\nTeri didn't move much, letting me get her dressed, then pulling her upright to sit in my lap. I held her quietly. \"Are you alright?\" I finally asked.\n\n\"Better. I love you. Thanks.\"\n\n\"Not a word to Mom, alright? She'd probably freak out,\" I said.\n\n\"What about when she tries to show me, you know, how to put up with it?\"\n\n\"I don't know. Go along I guess. But you know the truth now, don't you?\"\n\n\"I guess. I mean, that was nice, but it's not sex. That might be different. Plus the whole sucking dick thing was pretty miserable.\"\n\n\"Because he was a jackass,\" I told her.\n\n\"Will you show me how it should be?\"\n\nI felt myself harden. But it was wrong. \"I don't know. It's not the same. I think that would be crossing a dangerous line.\"\n\nLittle sister was feeling her oats. She put her arms around my neck, and kissed me. We still needed to work on that, but I liked it. \"Think about it, OK? For me? I want to be a good girlfriend, for the right guy. I know you'd never hurt me. I wanna learn.\"\n\n\"I'll think about it, alright?\"\n\n\"More kissing too, right? And maybe some more of what we just did, so I can learn?\" she gave a teasing little wiggle.\n\n\"So you can learn?\"\n\nShe nodded, blushing so damn cutely. \"It took forever. I know it's not supposed to be like that. I think with practice it'll get easier. Maybe, in time, I can be almost normal.\"\n\n\"Teri\u2014\"\n\nShe grabbed my hand and put it between her legs. \"Please, Travis?\"\n\n\"It's gotta stay a secret, OK? You can't tell anyone. Especially not Mom.\"\n\n\"Of course. Our secret, always. You'll do it? You'll help me?\"\n\nI rubbed her pussy, feeling the heat between her legs. I didn't think it would take that long to have her responding faster. And she did have a sweet little pussy. \"No sex.\"\n\n\"You mean no fucking, right?\" she whispered.\n\n\"That's right.\"\n\n\"No sex, then. I . . . I'd let you if you wanted,\" she said.\n\n\"We can't. You understand, right?\"\n\nShe nodded.\n\nBut I think we both knew it would be damned hard to keep that promise, if we practiced too much.\n\n* * *\n\nIt's good to have friends. Especially close friends. When I told Steve and Drew what I wanted to do, they didn't hesitate a minute. It only took us two nights to find the asshole, out having a good time with his buddies. Once we'd found him, I confronted him. \"Hey asshole. What do you say you and I have a talk outside.\"\n\nHe knew who I was. He played JV when I was on varsity. Same school and all. \"So it's the crip's big brother. What's the problem? She come whining to you?\"\n\n\"Outside?\"\n\n\"Fuck you, asshole. She gave it up on her own. I didn't make her do anything. It's not my fault she's the worst fuck in school.\"\n\n\"Outside, or I'm going to bust you up, right here in front of everybody.\"\n\nI saw a look of fear in his eyes. \"Fuck you,\" he started, then I punched him in the face with everything I could. Seated, he had no way to avoid it. I had to lean over one of his buds to do it, and when I stood back up, I saw that Steve had the other guy by the hair, pulling him backward, and telling him to stay out of it.\n\nWe were all thrown out of course, which was fine by me. In the parking lot, we had a decent crowd surrounding us. He had a few friends with him, and a couple of girls. Drew was bigger than all of them, and pretty damn intimidating. I was facing Kyle in the middle while my guys told his friends to stay out of it. \n\nKyle was circling away from me, hands up like he thought he was some kind of boxer. \"What's your problem, man? I didn't do nothing,\" he whined.\n\n\"A bet, Asshole? You used my sister for a bet, and took pictures of it?\"\n\n\"I didn't make her do anything. She wanted it.\"\n\nI guess I'm lucky. Kyle was as big as me, but didn't seem to know shit about fighting. Two shots to the face, one to the gut, and he was on the ground covering his head. Once he was down, the guys tried to pull me away, but I couldn't resist giving him a kick between the legs. One of his buddies took advantage of the fact that Steve had me by the arms and was pulling me backward, and the douche bag hit me with an overhand. Luckily he got my forehead, when I ducked down, seeing it coming. That started another round, and my second punch splattered his nose nicely. It got ugly for a bit, with punches thrown by both sides, until the girls managed to split us up.\n\nThey looked pretty bad, all four of them bleeding. There'd be some ugly black-eyes and bruises the next day. Drew and Steve came out of it pretty clean, but my face was aching, and I had blood on my shirt from a split lip. \"Lose the pictures, assholes. If I hear about them from anyone, I swear I'll kill every last one of you.\"\n\n\"There's no pictures,\" Kyle said. He was still on the ground, hunched over, wiping the vomit from his face. He'd puked when I had kicked him between the legs a second time.\n\n\"Bullshit. Get rid of them. If I hear about them from anyone, you're dead.\"\n\nDrew and Steve were eager for us to get out of there. \"They probably called the cops, we gotta split.\"\n\nI let them drag me over to the car, while Kyle and his buddies probably talked about the revenge they'd never have the balls to try for. Besides, I wasn't done with them.\n\n* * *\n\nObviously, Dr. Hamilton, nothing I can say will stop you from delving into the full depths of my depravity, if you've gotten this far. Again, I hardly think it's fair that I'm required to divulge my personal experiences for a grade. \n\nThat said, I ask you, no, I beg you, try to understand what I did next, and why I did it. You've already read about the immoral activity I'd engaged in with Teri, but I'm not as perverse as my actions might indicate. I loved my sister. With all my heart, but in a sibling way, not a romantic one. I felt no lust toward her. I swear. \n\nBe slow to judge me, until you've walked in my shoes, and those of my baby sister. That's all I can ask now. \n\n* * *\n\nMom was angry about the fighting, but not as much as I expected. Teri was a little pissed, but I could tell she was happy I'd dealt with the asshole. She was overly affectionate, kissing my 'owies', telling me the jerk wasn't worth it.",
        "I don't think Mom noticed that she was a lot more intimate than usual while taking care of me. Probably considered it part of the appreciation.\n\nThe next day I was sore, and stayed in bed with an icepack on my cheek and lip. Once Mom was gone, Teri showed up in my room dressed in a t-shirt and panties. She checked on my bruises, kissing my injuries. The kisses moved to my lips. \"Thank you. You didn't have to, you know.\"\n\n\"Nobody hurts my sister, and gets away with it. Now he knows it, and so do all his asshole friends.\"\n\nI laid her down next to me, and gave her a long slow kiss. \"Don't kiss me back, pay attention to what I do,\" I told her. She had a bad habit of sticking her whole tongue in my mouth, like she wanted to lick my tonsils. After about fifteen minutes, she was a bit more constrained, and it was a lot more fun. \n\nWe had settled down into a nice kissing session, when I felt her wiggling. I looked down and she was peeling her panties off. She looked at me, and blushed. \"Please, Travis?\"\n\nIt would have been hard to say no. I touched her, still working slowly, fondling and caressing her all over before I concentrated on her pussy. She was still tense, and it took a little longer for her to relax. Lot of kisses and cuddles had her settling back into the pillows. \n\nThe girl was nothing like my other girlfriends. Ten minutes later she was barely moist. I talked to her softly, telling her what I was doing, how much I loved touching her. She finally opened up, and an eternity later, I had her squirming, ready to come. \"Come for me, beautiful girl. Make that perfect little pussy sing for me,\" I whispered. My fingers were tired, aching, but I found an absurd pleasure in making her buck for me.\n\nShe lay back, contented, breathing hard. \n\n\"Not so bad, huh?\" I teased, rubbing her softly.\n\n\"It shouldn't take that long, should it?\" she asked.\n\n\"I don't know. It takes you longer, yeah. But that's alright. We'll get there.\"\n\nShe gave me a big kiss and cuddled up to me. \"You're the best, Travis.\"\n\nI chuckled, fondling her butt. \"You're pretty hot yourself.\"\n\n\"I'm not,\" she pouted. \n\n\"You are,\" I insisted. I leaned down and sucked on her nipple through her shirt. She gasped, pressing her tit into my mouth. Sensitive, I thought. Maybe I could work with that.\n\nShe made me breakfast, and we returned to my room afterward. I peeled her shirt off, and noticed she had really nice tits, if not very big. Playing with her tits for several minutes, I reached down between her legs, and she was wet. \"I love your titties, Teri.\"\n\nShe was stroking my hair. \"That feels incredible. Touch me, Travis. Touch me.\"\n\nIt didn't take another ten minutes to get her off, while I sucked and nibbled on her tits. She was still gasping from her little orgasm, when I reached inside of her, and deftly went after her G-spot. She was so pretty, stretched out next to me, naked, her nipples hard and ready. I think the speed of her second orgasm surprised us both. It wasn't five minutes later that she was moaning and thrashing against my hand.\n\n\"Come, gorgeous, come for me,\" I told her. I took her nipple between my teeth and tugged on it, pulling up hard against her G-spot, the pad of my thumb pumping against her clit. She cried out for me, shaking all over, while she had her first big orgasm. I eased her down slowly, caressing her.\n\nShe gazed at me in open wonder. \"Oh my God, Travis! Is . . . is that what it's like?\"\n\nI laughed, hugging her and kissing her. \"That's a start.\"\n\n\"Damn,\" she said. She climbed on top of me, and rested, her body limp. I caressed her back, and fondled her butt cheeks. \"That was pretty cool,\" she whispered.\n\n\"I told you, you are a hot woman.\"\n\n\"Mom is sooo wrong.\"\n\n\"Aren't you glad?\"\n\n\"MmmHmm,\" she purred sweetly. \"Can I do something for you? A handjob at least?\" she asked.\n\n\"We shouldn't.\"\n\nShe giggled. \"I know. Let me, OK? I'm feeling guilty that I get all the pleasure.\"\n\n\"Believe me, sis. I get a lot of pleasure out of doing that for you.\"\n\nHer hand was between us, reaching into my boxers. \"I wanna. Let me?\"\n\nI nodded my assent, and she climbed off of me. She wasn't content to do it through my fly. She pulled my boxers off, and held my cock. \"Kyle isn't big,\" she said.\n\n\"What?\"\n\n\"Kyle. You asked if he was too big. I guess not. He wasn't nearly this big. Yours is kind of scary.\"\n\nI'm not huge, not by any means. Rachel had made sure I understood that. Nothing to be ashamed of at seven inches, but nothing a size queen would be looking for. \"I'm not that big, Teri,\" I said.\n\n\"They get bigger?\"\n\n\"Yeah. Lots bigger. I mean, I'm a little above average, but that's it.\"\n\nShe was stroking my cock, examining it from up close. Seeing her face so close to my cock had me aching already.\n\n\"What do I do?\" she asked.\n\nI almost laughed. \"It's like this, Sweetie. A gorgeous girl, holding my cock, is almost enough to get me off by itself. You don't have to do a lot, just stroke it up and down.\"\n\n\"I'm not gorgeous. Stop saying that,\" she said.\n\nI sat up, and pulled her hand away from my cock. \"Listen to me, Teri. Listen good. You are very pretty. You have a nice body. Sexy tits, and a sweet little pussy. Your ass is perfect. Don't tell me you're not gorgeous. I don't want to hear it.\"\n\n\"You have to say that,\" she mumbled.\n\n\"Stop it. I know you have issues with how you look. Yes, your acne years were pretty scary, and you were chubby when you couldn't walk much. That's your past. Right now, the young woman I'm looking at is very attractive. Very. You are the whole package.\"\n\n\"My legs\u2014\"\n\n\"\u2014are scarred. It's true. I don't know if that will ever go away. So what?\" I pushed her back and scooted down, kissing her leg. I placed a line of kisses along her scar. \"This is part of you. I love you, and I love every part of you, sis. It breaks my heart to see these, to know how much you suffered. But you pushed beyond what anyone thought you could. You don't even limp anymore. You're amazing Teri.\" My kisses wandered upward, and she whimpered sweetly when I kissed between her legs. I only spent a few moments there, then climbed up beside her. \"You. Are. Amazing.\"\n\n\"Really?\" she whispered.\n\n\"Absolutely.\" I kissed her hard. \"I need you to do me a favor. My balls are aching. Get me off, OK?\"\n\nShe grinned, and popped up grabbing my cock roughly. I had to calm her down, her wanking was a little out of control, but after a couple of minutes she was squealing and laughing as I came hard, making a mess on my belly. \"That was pretty cool,\" she said.\n\n\"Uh, can you get us something to clean up with, a washcloth or something?\"\n\nShe did, and after a few minutes had me pristine. \"Can I do it again?\"\n\n\"It won't be nearly as quick. Some lotion would probably help too,\" I told her.\n\nThe second one was much better, and she took my directions well. The couple of kisses she placed on the head of my cock helped a lot. I came hard, and groaned when she leaned over and sucked on the end. She made a face. \"Not sweet. Pretty nasty tasting.\"\n\nI chuckled. \"Sorry, beautiful.\"\n\nShe shrugged. \"I had to see if it was just him. Yours isn't much better. Girls really like that?\"\n\n\"Some. I think they like the results, not the taste.\"\n\nShe was wiping me up, playing with my cock a little. \"I guess I can see that.\"\n\n* * *\n\nThe next day was Christmas eve. I hadn't even found a job yet. I hadn't bought any presents. The only thing I'd managed to do was get drunk a couple of times, get in a fight, and make my sister come on my fingers a few times. The last one made the first two weeks of my break a success. I know that seems a little perverted, but if you had seen my sister, the look in her eyes, the way I'd turned her life around with something so simple, you'd have to agree.\n\nChristmas was on a Sunday. Mom only got one day off, the day after Christmas, but she reminded me that we were going to have a big Christmas eve dinner, and she wanted me home no later than six. Once she was out the door, Teri and I returned to my bed, and we spent another hour or so 'teaching' her about sex. She was still slow to get off, but with patience and a little effort, I had her come for me twice, and she gave me a couple of handjobs. I knew we were pushing the limits of what we should be doing, but it was a hell of a way to start the day.\n\nAs soon as we cleaned up from the second one, I climbed off the bed.\n\n\"Stay, Travis,\" she said. \"Let's play a little longer. Teach me more about kissing.\"\n\nIt was tempting. I leaned over and gave her a little kiss. \"I'd love to, but I still haven't done my Christmas shopping. It's now or never.\"\n\nShe pouted, then gave me a grin. \"I know what Mom wants.\"\n\nThat was good, cause I had no idea. None. Zilch. \"What?\"\n\n\"A new stereo for her car. The old one doesn't play her CDs any more. I was going to get her one, but even the cheap ones cost like seventy bucks, and they want even more money to install them.\"\n\n\"Did she say what kind she wanted?\" I asked.\n\n\"No. I don't think she even cares. She just likes to listen to her CDs.\"\n\n\"You want to split the cost of one with me? I'll install it for her tomorrow. It shouldn't be that hard.\"\n\nShe beamed. \"That would be great! Just not too expensive, alright?\"\n\n\"No problem. I'm sure that they're on sale somewhere. I'm not made of money either.\"\n\nShe got dressed while we spoke, and I couldn't help but notice how nice her body was. She really was pretty. \"You want to go shopping with me?\"\n\nI saw her eyes lose their glitter, and knew she was still hesitant about going out. Kyle had really done a job on her confidence. She shook her head. \"I don't think so. I got stuff I need to do anyway. If you get a chance, you could pick up some wrapping paper. Stuff a guy would like.\" She grinned when she said that.\n\nI gave her another quick kiss. \"Got it. Wish me luck, going out shopping today. I hope I don't get killed out there.\"\n\n\"Luck,\" she said, and then the little tease rubbed my crotch. I'd created a monster.\n\nA simple single CD car stereo only ran me about $60. I had figured on spending $50 each on Mom and Teri. If Teri split the cost with me, I could still buy Mom her favorite bubble-bath from Bath and Body Works. I had no idea what I was going to get my sister.\n\nIn the end I did something a little crazy. I could only hope she liked it. \n\nI got home before five, beating Mom home. Teri and I wrapped Mom's gift from the two of us, then I gave her the paper I'd bought for her, and we each disappeared into our own rooms to finish wrapping our presents. We had just finished putting them under the tree, when Mom arrived. \n\nMom and Teri started working on our big dinner, while I was tasked with setting the table, and getting a fire going in the fireplace. \n\n\"Travis?\" Mom called out, while I was lighting the starter log.\n\n\"Just a sec,\" I said, before getting the paper going, and turning to see her standing in the kitchen entrance. \n\n\"I need you to go to the store for a couple of things. I made a list.\"\n\nGreat. The only thing worse than last minute Christmas shopping, was last minute grocery shopping on Christmas eve. But it was Christmas, so I wasn't going to make a big deal out of it.\n\n\"Take your sister with you, she knows the kind of stuffing I want.\"\n\n\"Mom!\" Teri whined, stretching the word out to three syllables.\n\n\"Go on now. And don't give me any sass. Besides, you're out of shampoo, aren't you?\"\n\nTeri pouted, rolling her eyes, but she put on her jacket, and followed me out the door, Mom's list in one hand, and three twenties clutched in the other.\n\nShe was quiet as I drove. \"Smile, sis. Is it that horrible being seen in public with me?\" I teased.\n\nShe heaved a big sigh. \"Of course not.\"\n\n\"C'mon. Gimme a grin.\"\n\nShe turned and bared her teeth at me. It was kind of scary. Then she snorted and started giggling. Little sis was back. \n\nThe shopping was pretty easy. The list wasn't long, and the place wasn't as crowded as I thought it would be, despite the fact they were closing in half-an-hour. Everything was going smoothly, until I felt her hand clutching at my arm. \"Can we go, Travis?\" she whispered.\n\nI looked down at her, and her eyes were glued to the floor, as she tried to hide behind me. I looked up, and dick-breath was there, at the end of the aisle. I don't know if he was smirking, or scared, but he was staring at us. He was also standing with his mother and sister. \n\nI started walking his way, my anger growing. As I got closer, I could see he had a hell of a shiner, and he was backing away. Teri was tucked in behind me, clutching my arm. I didn't want to embarrass her, but I still had a bone to pick with her 'boyfriend'.\n\nAs I got closer, his mother noticed my approach, and saw Teri behind me. She started to smile then it faded when she saw the look on my face. She glanced back at her son, as I got within a few paces.\n\n\"Hey asshole,\" I said loudly. \"Did you tell your Mom how you fucked my sister and broke her heart on a ten dollar bet? You tell your family how you humiliated her, letting your friends take pictures of her naked, before dumping her the last day of school?\"\n\nHis mother looked shocked and turned to the dick. \"Kyle? I thought you said she wanted to break up?\"\n\nOld penis-breath had turned bright red. \"It's not like that, Mom. I swear. He's making stuff up.\"\n\nTeri peeked her head around my side. \"No he's not! You're a horrible person Kyle. I tried to be the best girlfriend I could, and you treated me like crap. And . . . and you have a little tiny dick!\"\n\nHis sister giggled, while I could see the veins popping out on his head. \n\n\"What do you say asshole?\" I said. \"You and me go outside so I can kick your ass again?\"\n\nKyle's Mom was turning three different shades of red. \"There won't be any fighting,\" she said. \"You apologize to her, Kyle! I didn't raise you to be a jerk!\"\n\n\"I didn't do anything wrong,\" he said. \"She wanted it.\"\n\n\"Apologize!\"\n\nI knew it had to be killing him. \"I'm sorry,\" he mumbled.\n\nTeri stepped around me, still clinging to my arm. \"Sorry? Sorry for what? For all the lies about you liking me? For treating me like crap? For taking my virginity on a bet and dumping me? For making my first time as miserable as possible? For making me suck that little tiny dick of yours? For taking pictures? What?\"\n\n\"I'm sorry, alright! It was just a joke. And I didn't take any pictures.\" \n\nI took another step toward him, and the little bitch moved behind his mother. \"No, you let your friends in the room, and they took pictures, before you told them they each owed you ten bucks. That's all my sister was worth to you, was ten lousy bucks? If any of those pictures see the light of day, I swear to God I'm gonna put you in the hospital, if I don't put you in a grave.\"\n\nIt was easy to see his mom was horrified. \"You bet ten dollars on this poor girl?\"\n\nHe shook his head. \"It was forty dollars. Ten each.\"\n\nHis mother looked royally pissed. She dug into her purse, and came out holding a fist full of money, pushing it toward Teri. \"Here, take this,\" she said, with a backward glance at the asshole. \"He's going to pay me back every penny. He's not going to profit off of treating you like that. And I promise, if there are any pictures, they'll be destroyed. I'm sorry.\"\n\nTeri shied away from the money, but I took it for her. \"It's not your fault he's a complete jerk and an asswipe,\" I said.\n\nHis mom shook her head. \"I raised him better than that. I can't believe he'd pull this kind of stunt. And you don't have to worry about kicking his butt. When I tell his father what he's done, he'll do the job for you.\"\n\nOld dick-head turned pale when she said that. It made me smile. \"Sorry I interrupted your shopping, ma'am. I just couldn't let him pull that shit with my sister.\"\n\nShe nodded. \"It's good that you stand up for her. Kyle could learn a lesson from you.\"\n\n\"He will, if he ever tries anything like that again.\"\n\nWe walked away, and I was waiting to see if Teri would get mad at me. I was surprised when she pulled my head down and kissed my cheek. \"Thanks. I think.\"\n\n\"I didn't mean to embarrass you, I swear. I just want to kill him.\"\n\nShe giggled. \"Me too. Now it sound like his old man will do the job for us.\"\n\nAfter that she was a whole lot more cheerful, talking up a storm on the way home. I felt good.\n\nAn hour later, we were back home, the dinner cooking in the kitchen, and Teri had counted out the money that her ex-boyfriend's mother had given her. It was more than $40. A lot more. One hundred and fifty-seven dollars, to be exact.\n\nI was sitting in the living room, when she plopped down beside me. \"I don't think I should keep this money. It doesn't feel right,\" she said.\n\n\"I know. I feel kind of weird about it too. But you have to understand, it's not like he's paying you. It's part of his punishment. His mother is going to make him pay it back. I think you should keep it.\"\n\nShe sighed, leaning against me, and I put my arm around her, giving her a squeeze. \"I don't know,\" she said.\n\n\"Don't worry about it, alright? Put it away for now. You don't have to spend it right away. Hang onto it, and see how you feel a little while from now.\"\n\nMom chose that time to walk in on us. She was smiling. \"It's good to see you two like the old days. Now break it up. Dinner's ready, and I need help.\"\n\nThere's not much more to say about that night, or even the next day. It was Christmas, like a million other homes across the country. We ate a big dinner, snacked on leftovers, watched hokey Hallmark movies, and drank spiked eggnog, with my mother's blessing.\n\nThe next day we got up early, and gathered around the tree. We only had a few presents each, but it seemed to me that everybody was happy with what they'd received. I knew I was. Teri got her first cell-phone, which I thought was a long time coming, but she was ecstatic. Mom adored her car stereo, as well as the smaller gifts we exchanged. We had a few presents from other relatives, books, music, clothing, gift cards, all the usual.\n\nMom's gift to me was cash. Two-hundred dollars earmarked for college spending money. I was happy to get it, although she seemed embarrassed.\n\n\"I didn't know what to get you, and I know how hard you work for your spending money. I wish I could do more, Travis.\"\n\n\"No Mom. It's perfect. Being here with you guys is a great present. This will help a lot.\"\n\nTeri got me a couple of things. A game I'd been looking at, and a new wallet, which I have to admit was kind of lame. She made up for it with her last gift. There wasn't a lot to it, just a T-shirt that said \"World's Best Brother.\" I liked it. I'm not sure I'd wear it very often, at least not away from the house, but it made me feel good.\n\nThen Teri opened her gift from me, and I braced myself for the shit-storm I expected. \n\nShe held up the naughty pink lingerie I'd purchased, and the matching pair of tiny frilly panties. She turned bright red. \"Travis?\" she whispered.\n\n\"You're a woman now, Teri. You're not a kid. You're a beautiful young woman, and you deserve to have something special to wear as beautiful as you. Maybe your next boyfriend can appreciate it.\"\n\nI don't know what I expected, but to see her run off in tears wasn't it. I sat still waiting for my mother to tear me a new one.\n\nAfter a long wait, I looked up at her, to see how much shit I was in. She had tears in her eyes. She looked at me, and slowly smiled. \"I'm not sure how appropriate that was, but it was a beautiful gift. Just what she needed right now. You're aware of some of the issues she's having, I take it?\"\n\nI nodded. \"That Kyle is a complete asshole. She deserves a lot better.\"\n\nMom came over and sat beside me, taking my hand in hers. \"You're right, honey. I received a call from his mother, late last night. She was mortified, to say the least. Thank you for standing up for your sister. I'm not sure that was the best way to go about it, but I guess it's better than beating him up again.\"",
        "\"I couldn't let him get off scot-free, Mom. I couldn't let him hurt Teri like that. I couldn't. I'm sorry.\"\n\n\"No, I understand. You're the man of the house, and it's up to you to watch over us. Your dad would be proud.\" She gave me a kiss on the cheek, and stood up. \"Time to get dressed. Church in less than an hour.\"\n\nChurch was church, an hour and a half packed in a building that was standing room only. Back home, I changed out of my good clothes and went to work on Mom's car. I guess I'm not as handy as I thought I was. It took me more than four hours to get her stereo installed right. It took two tries, but I managed eventually, and Mom and Teri didn't give me too much grief for delaying our Christmas dinner by an extra hour. \n\nI took some time out after dinner to give Rachel and Courtney calls to wish them a merry Christmas. I spoke with Courtney, and she seemed to be in a good mood. Rachel I left a message. I guess she was spending her holiday with somebody important enough not to pick up her phone. It made me a little jealous.\n\nLate that night, I got an extra Christmas present. Teri snuck into my room wearing the outfit I gave her. She looked gorgeous. I told her as much.\n\n\"I'm sorry I ran off earlier. I don't know why I did that. I guess it was just too much. I never had anything that pretty,\" Teri said.\n\n\"I didn't mean to upset you. I thought Mom would have a cow, but she didn't. Do you like the outfit?\"\n\nShe grinned, nodding, while she turned a slow 360.\n\n\"It doesn't look silly?\" she asked, modeling it for me.\n\n\"Sexy, not silly,\" I said.\n\nShe smiled, and climbed into my bed. \"We have to be quiet,\" she whispered, then pulled my hand down between her legs. \n\nI don't know if it was the outfit, the holiday, or what. But she was wet almost as soon as I touched her. I looked into her face, and she blushed. It didn't take long at all to get her off, and then we worked on her kissing for a long time. She was getting better. Afterward, she used her hands on me, then we did each other again. It was almost one in the morning before she slipped out of my bed.\n\n\"Merry Christmas, Travis. You're the best brother ever,\" she whispered, as she gave me a last kiss.\n\n\"Merry Christmas, Teri. Love you.\"\n\n* * *\n\nI managed to find myself a pizza delivery job evenings, even if it was only going to be for about three weeks. It paid good enough, but with tips it was over fifteen bucks an hour. I couldn't fault that. After a day spent with my sister, I was running up and down sidewalks, delivering pizzas as fast as I could. I only worked from four to ten, when they let go of most of the drivers, after the dinner rush. It was nice to have money in my pocket. \n\nUnfortunately I was too busy to spend much of it. Friday was the busiest pizza night, so I had to work. Saturday I got to hang out with the friends, which was nice. I made sure to pay for Steve and Drew after my first week of employment. I owed them. \n\nFor the rest of the week, I was playing with Teri in my bed, learning her body, what worked for her and what didn't. She was still slow to get excited, other than that one night, but if I was patient I could get her off. Once the first one was out of the way, the next few were a little easier. I still hadn't had another big one from her, but she was getting better.\n\nI got a couple of handjobs each time. We agreed to behave in front of Mom, and my job kept me out of the house most evenings. That next weekend was New Years. We were run ragged on the 30th, and they kept me late to close. I was exhausted by the time I got home.\n\nAfter staying until almost 1:30 a.m. to clean up, I slept in the next morning. I woke to the most amazing feeling. I knew that feeling, but didn't expect it at home. I was getting a blowjob.\n\nI peeled the covers back and found my naked sister with my cock in her mouth. \"Teri, we shouldn't,\" I said.\n\nShe looked up at me, and smiled around my cock. She pulled off. \"I couldn't help it. I came in and you were sleeping, and there it was. Now tell me if I do anything wrong.\"\n\nI surrendered, and let her suck me. She wasn't bad. Not at all. I told her so.\n\nShe seemed to like that, and a minute or two later I was coming for her. I warned her, and she pulled her head away, making a mess on my belly. She had come prepared and cleaned me up. \"Not bad, huh? I've been studying.\"\n\n\"Studying?\"\n\n\"Reading, practicing a little on that thing Mom gave me.\"\n\n\"Well, it worked. Thanks.\"\n\nShe blushed. \"Wanna do me?\"\n\n\"Do you?\"\n\n\"You know, with your mouth.\"\n\n\"Teri, we're really pushing things,\" I said.\n\n\"Please, Travis. I want to feel it. I . . . I get excited thinking about it. Just once?\"\n\nI knew that if I did it once, I'd probably be doing it a lot more than that. But I wasn't strong enough to say no.\n\nWe started slow, with kisses, and working my way down her body. I spent a lot of time on her tits, before traveling lower. By the time I got to her pussy, I was surprised to smell her arousal. She was wet. \"God, Teri. You really want this, don't you?\"\n\n\"More than anything. Taste me, Travis. Tell me I'm sweet.\"\n\nI still teased her a bit, kissing and licking the inside of her thighs, even kissing her sad little scars. When I put my lips over her clit for the first time she moaned loudly. \n\nIt must have been mental, because she came for me after only a few minutes. I kept working on her, doing everything Rachel had taught me, even playing with her puckered butt-hole a little. I was parked over her clit again, my tongue working diligently when I felt the big one coming. She advertised this one big time. When she came, she had her fingers in my hair, crying out, her thighs closed firmly around my head. As she calmed, I left her sensitive clit alone, licking and sucking on her lips, licking inside her. When she relaxed completely I climbed up the bed, after wiping my face dry on the sheets. \"Sweet as soda pop,\" I teased her.\n\n\"My God, Travis! That was amazing!\"\n\n\"I'm glad you thought so. It gets better.\"\n\n\"I don't know how. Any better and I'd probably die,\" she said.\n\n* * *\n\nI was invited to a New Year's party at Drew's house. I was torn, not wanting to leave Teri alone, not after all we'd been through. But there was no way that she was willing to go to the party with me, and frankly, I didn't trust the guys with her. \n\nAlright, maybe I was a little jealous. \n\nFunny thing happened. A girl approached me, flirting and teasing. I'd had a few drinks, more than I probably should have, or I probably would have recognized her sooner. I was flirting back, cornering her, getting her away from the crowd so I could move on her. Then it hit me.\n\n\"You're Kyle's sister.\"\n\nShe pouted and nodded. \"I'm not like him, Travis. This doesn't have anything to do with him.\"\n\nThat's what she said, but it had me worried. Was this some trick of his to get back at me? If it wasn't. did I want to go there? Would I be using her, to get back at him? Damn.\n\nShe moved closer, rubbing her hand on my chest. \"Forget that I'm related to that jerk. We were having a good time, weren't we?\"\n\nI nodded. Until the realization of who she was, I was having a great time. \n\n\"I'm Donna (not her real name). Me. Not Kyle's sister. I'm just Donna, OK?\" she asked. She seemed serious, and a bit nervous. \n\nWhat the fuck. Why not? I tilted her chin up and kissed her, doing my best. When I pulled away, her eyes were still closed, and she was breathing hard. \n\nAlright, I'm a bastard. A pussy hound. I've already admitted as much. Donna was pretty and willing, and a little bit drunk. I was horny and a little drunker than she was. Our first kiss turned into a make-out session, that we moved into one of the available bedrooms. \n\nLaying on the bed, I had access to her firm little body. My hands wandered over her, while our lips were engaged. I opened her pants, and slid one hand into them, with some difficulty I admit. They were very tight. Still I managed, easing my way into her panties. It didn't take my talented fingers long to have her moaning her orgasm into my mouth.\n\nHer butt lifted off the bed, and she was wiggling, pushing her too-tight jeans down over her hips. I decided to help her, first with the jeans, and then with her cute baby-blue soaked panties. Once I had the panties out of the way, I replaced them with my mouth, and taught that adorable teen a lesson. The door behind me creaked opened and closed twice, leaving us alone, while I brought her to a series of orgasms. After the last she was moaning for me to fuck her, and I couldn't think of a single reason not to.\n\nI had shucked my pants and boxers, and was between her legs about to enter her when she stopped me.\n\n\"This isn't revenge against my brother, is it?\" she asked nervously.\n\nI took her adorable face in my hands, my hard cock pressing against her crotch. I kissed her softly. \"No, Donna. When we started this, I hadn't recognized you. I had no idea you were Kyle's sister. You were just a gorgeous, friendly girl that I was flirting with, and hoped to get to know better. We don't have to go any further, if you don't want to.\" I wanted to, badly. But I wasn't that much of an asshole.\n\n\"You swear?\"\n\nI nodded slowly. \"God's truth. Right now, I don't give a fuck who you're related to. I want you so bad it hurts.\"\n\nShe gave me a sweet little smile, and her hands reached down between us and guided me home. God, that felt good. Incredible.\n\nI'd learned one thing from Rachel, and that was to make a woman's first time with you as wonderful as possible. Make sure her pleasure was the important thing, and from then on, you were golden. Under her excellent tutelage, I'm not saying I'm God's gift to women, but I dare say I was probably better at pleasuring a girl than 95% of guys my age.\n\nI took my time with her, doing the things I'd been taught, learning her tells, figuring out what worked for her, and then concentrating on that. I seemed to be doing my job. I had her moaning loudly, almost continuously, while I drove her up the slopes of her pleasure time after time, making her come for me. It's a hell of an ego trip to see it in a girl's face, when you've given her the best she's ever had. \n\nA couple of times, when I got too close, I'd pull out, and go back to work with my mouth, keeping her on edge, driving her crazy. When I finally couldn't resist any longer, I picked up the pace, hammering her tight little pussy like there was no tomorrow. She screamed my name only moments before I hit the point of no return, filling her warm tight hole.\n\nI eased her down after that, pumping slowly until I lost the last of my firmness. I was surprised when she gasped and pulled the pillow over her head. I heard laughter behind me, and the clapping. Looking over my shoulder, I found we had an audience. Shit.\n\nI was pissed, and I got up, yelling at them to get out, pushing a few stragglers out the door, closing it behind them. The echoes of their laughter grated on my nerves. When I got to Donna, she was crying.\n\n\"Why, Travis?\" she sobbed. \"Why would you do that?\"\n\n\"I swear, baby, I had nothing to do with that. I didn't know they were there. I swear.\"\n\n\"God, how am I ever going to show my face again?\" she asked.\n\nI took her in my arms, holding her. \"Listen, there are plenty of people doing what we're doing her tonight. It will blow over quickly. Just don't make a big deal of it. If anyone says anything, shrug them off. This wasn't your first time having sex, was it?\" I was pretty sure it wasn't, from her reaction.\n\nShe shook her head. \"No. But it was never like that.\"\n\nI gave her a short kiss, and caressed her sexy body. \"No kidding. You were amazing.\"\n\nA tiny smile lifted the corners of her mouth. \"Really? You think so?\"\n\n\"Damn, girl. I know so. I've been around a bit, and I'm telling you, that was incredible. You're incredible.\" It might have been a little white lie, but I figured I owed her that much. And it was very good.\n\nShe rolled toward me, hugging me. \"You were pretty amazing too,\" she whispered.\n\n\"I'd love to be amazing for you again,\" I said, rubbing her firm butt cheeks. \"But I think we have an audience out there.\" I kissed her, long and slow. \"Come on. Let's get dressed, and hold our heads high. I bet I'm gonna see a lot of jealous faces out there.\"\n\n\"You think?\"\n\n\"I know. C'mon.\"\n\nWe dressed, and I gave her a big hug and a kiss. \"You know this can't really go anywhere between us. I'm headed back to college in a few weeks.\"\n\nShe pouted. \"I know. I don't do things like this, you know? You're only my second.\"\n\nI gave her a little squeeze. \"I imagine you'll have the guys lining up to be your third. Make them work for it, alright? You don't want to get a bad rep.\"\n\nShe nodded, then stole another kiss. \"Thanks, Travis. That really was amazing.\"\n\n\"Ditto, beautiful.\" I opened the door, and was surprised to find there was no crowd outside our door. They'd moved down the hall and were laughing and pointing at some other unsuspecting couple. I took her hand in mine, and quickly dragged her along back to the party, before we could be spotted. I got her a drink, and scored another kiss before her girlfriends surrounded her, shutting me out, and dragging her off.\n\nIt was after midnight. We had rung in the new year ringing her chimes over and over again. I kind of liked that, and wondered if I could make it an annual ritual.\n\nI didn't stay much longer, but Drew did corner me before I could escape. He was laughing and high-fived me. \"Damn, you're bad. Now that's revenge on the mother fucker.\"\n\nAll I could do was shake my head. \"It wasn't that. I didn't even remember who she was at first. It was just a great time with a pretty girl,\" I confessed.\n\n\"No shit?\"\n\n\"Nope. Not that I'm complaining about who she's related too. But I'm not gonna make a big deal out of it. She doesn't deserve that. She's sweet.\"\n\nHe grinned. \"And loud.\"\n\n\"Yeah. And loud. Hot little thing.\"\n\nDrew slapped me on the shoulder with his big mitt. \"Hell of a way to start the new year, ain't it?\"\n\n\"It was. No doubt. None better.\"\n\nAnd even though I wasn't going to make a big deal about fucking Kyle's sister, at least not publicly, I got some satisfaction from it. I had no doubt he'd hear about it before long. He'd take it personal. Good.\n\n* * * \n\nIt was well after two in the morning before I snuck back in the house. It was quiet, and the lights were off. If it was anything like the usual, Mom and Teri stayed up watching the TV until the ball dropped, drank their one glass of champagne after toasting a new year, and went to bed shortly afterward. I much preferred my way of celebrating the occasion.\n\nI hadn't been in bed five minutes, when Teri opened my door a crack and slid into my room, closing it quietly behind her. She was wearing her new lingerie again, but it didn't last long.\n\n\"Happy New Year, Travis,\" she whispered, standing beside the bed, and removing her outfit before climbing between the sheets.\n\nI took her in my arms, kissing her. \"Happy New Year.\"\n\nIt was two hours later when she silently left my bed, returning to her room. We didn't do anything we hadn't done before, but it was still pretty intense, especially with Mom right down the hall. I know I could have fucked her that night. She made that obvious. But it was further than I was willing to go. She was my sister.\n\nI still managed to come in her teasing little mouth twice. I expected to hear some comment about where my trusty helper had been, but she never said a word.\n\nI slept like a log until almost noon.\n\n* * *\n\nIt was five days later when it all blew up.\n\nAdmittedly, Teri and I had gotten pretty brazen during the day. We wore hardly anything around the house, and would constantly tease and play with each other. I could only get off so many times, but I was learning how to keep my sister in an almost constant state of arousal. I loved to wring the orgasms out of her body, and would do it in the kitchen, in the bathtub, in the living room watching TV.\n\nThen it was off to work, for the dinner rush, before getting back home, and seeing if we could sneak in a little more once Mom went to bed.\n\nI had already come twice that morning, and had her on the floor in front of the TV, laying on a towel. I wanted to see if I could get her to squirt for me. I knew it would be a challenge, but I'd been torturing her, giving her one early climax, and teasing her for the next couple of hours getting her close, but never letting her have it.\n\nShe was lying there moaning, after I'd spent about ten minutes getting her worked up. I'd used my mouth for most of it, and now was leaning over her, two fingers in her pussy, pounding upward roughly, hammering her G-spot, while holding her upper body down. \n\nIt was another lesson of Rachel's I was putting to the test. Teri was still a challenge. I'd work her for about fifteen seconds, then drop down and use my mouth on her clit. Back and forth, I'd probably been at it a good five minutes, when I saw the response I was hoping for.\n\nThis time I didn't stop, tugging away at the inside of her pussy, refusing her any relief. I could feel she was close, so very close.\n\n\"Come for me,\" I growled.\n\nShe whimpered, her whole body trembling.\n\nI don't know if the TV was too loud, or we were just too caught up in what we were doing, but suddenly my mother was standing there, shrieking my name. I felt the pulse in Teri's pussy, and yanked my hand away, getting splashed as she squirted for the first time.\n\n\"Travis! Teri!\" Mom screamed.\n\nTeri was writhing on the floor, in the middle of a huge orgasm. I slapped at her pussy, keeping it rolling, while leaning over her, stroking her hair with my other hand. \"Shhh, it's OK, baby girl.\"\n\nMom leaned over and pushed my hand away, \"Stop that! What's wrong with you!\"\n\nI reached back down and rubbed Teri's pussy comfortingly. I knew the first big one would be rough on her. \"Relax, baby, you did good,\" I told her, glaring at Mom. \"In a second Mom, not now!\" I snapped.\n\n\"Travis,\" Teri whispered, blushing a deep red.\n\n\"Shh, that was beautiful, you're beautiful,\" I told her, giving her a small kiss.\n\n\"You two stop that!\" Mom squealed.\n\n\"Not now, Mom!\" I turned and stared her down. \"Sit! We'll be a minute.\"\n\nMom looked shocked, but sat down staring at her daughter's soaked pussy, and the puddle on the towel.\n\nI reached back inside Teri, tugging at her G-spot. I knew the way these things worked, or at least what Rachel claimed. Squirting was different. Once you got the first one, the rest came much easier. I kissed my sister, and pummeled her pussy until she squirmed and I felt her release, I pulled my hand away, slapping her clit lightly, while she sprayed a couple of times.\n\n\"Perfect, baby girl, that was so good. You're amazing,\" I told her. She stopped wiggling and giggled. \n\n\"I . . . I didn't think\u2014\"\n\n\"I know. I told you, you could do it. You're a hot tamale, once you're going. That was incredible.\"\n\n\"Travis?\" Mom spoke out, interrupting our talk.\n\nI kissed Teri, and pulled her upright, tugging her into my lap. \"Sorry Mom, I couldn't leave her like that, half finished.\"\n\n\"How could you?\" she asked, shaking her head.\n\nI had my hand between Teri's legs, rubbing her soothingly. \"I had to,\" I tried to explain.\n\n\"You're wrong Mom. You and Aunt Brenda are so wrong. Sex is great,\" Teri said. She leaned against me, almost limp.\n\n\"You're brother and sister! You can't do this!\"\n\nTeri crawled out of my lap, and into our mother's. \"Mom, stop it. Don't be mad. Travis is wonderful.\"\n\n\"But this is incest, baby. It's wrong,\" Mom said.\n\n\"No, we've never had sex. He was just showing me, teaching me that sex could be good. That I could get excited. I don't need to put up with it. I now know that with the right man it will be wonderful.\"",
        "Mom looked unconvinced. \"He was touching you,\" Mom mumbled.\n\n\"His touch is amazing, Mom. You have no idea. He can make me come and come. His mouth is incredible. Sex is awesome!\" Teri laughed.\n\n\"But baby, you guys can't. You're family.\"\n\nMe? I was staying out of it. Or at least I had hoped to.\n\nTeri clearly wasn't done yet. \"You're wrong about sex, Mom. All it takes is love and patience. I think the first time it took him hours to show me I could enjoy it. Now I can come for him whenever he wants.\"\n\nI adjusted my boxers. I wasn't quite naked, and the unwelcome surprise had killed any erection I had.\n\nMom looked over at me. \"How could you take advantage of your sister like that!\"\n\n\"How could you tell her that nobody liked sex? That she had to put up with it, and fake her enjoyment?\" I asked pointedly.\n\nMom looked stunned, pulling back from me. \"You don't understand, Travis. You're a man. For us women, it's not like it is for you. We do it out of love, not pleasure.\"\n\nTeri wasn't having any of it. \"God, Mom. You're so wrong! Don't you see? Didn't you see me just now? That was insane. He made me squirt! I never came so hard.\"\n\n\"No, honey, I don't know what you think happened, but you can't enjoy it. We don't. It just doesn't happen.\" Mom was in complete denial. Kind of sad, really.\n\n\"Stop it, Mom. You're talking crazy. Didn't you hear me? I come for him all the time now. Maybe a dozen times a day. It's wonderful,\" Teri said.\n\n\"But you're brother and\u2014\"\n\n\"Yes, I know. Brother and sister. The best brother in the whole world. He showed me, Mom. He taught me. He was loving and patient, and showed me sex could be wonderful.\" She turned to me. \"You've got to show her, Travis. It's not fair for her not to know.\"\n\nMom and I both responded in shock, telling her she was crazy. She kept shaking her head. \"Mom, have you ever had an orgasm?\" Teri asked.\n\nMom blushed. \"That's not an appropriate subject to talk about in front of your brother.\"\n\nTeri kept badgering her. \"You told me it didn't happen. Couldn't happen. You and Aunt Brenda both. You were wrong. Big time. Admit it. You never had one, so you thought I couldn't, right?\"\n\n\"Honey, it's not natural. I don't know what he's done . . .\"\n\n\"He loved me, Mom. He showed me it was possible. Let him show you. It's incredible. You can't believe how good it feels!\"\n\n\"Teri,\" I said, speaking up. \"It's not the same. She's our mother. That would be so wrong.\"\n\nMom, if anything, looked hurt. \"It's all wrong. Brother and sister?\" she said.\n\n\"But I couldn't let you tell her wrong, Mom. It wasn't fair to her. She's just eighteen; she has her whole life in front of her. Just because one asshole didn't know what to do, doesn't mean she couldn't enjoy sex,\" I explained.\n\nMom glared at me. \"Your father loved me! Are you saying he was an asshole, because he couldn't give me an orgasm?\"\n\n\"Did he even know, Mom? If you were faking it, he probably thought everything was great. You should have told him, given him a chance,\" I said.\n\n\"It was great! I loved making love to him. I didn't have to enjoy it, or have an orgasm. He was my husband, and I loved being there for him.\"\n\nTeri gave Mom a big hug. \"I know. You told me. But it could have been more. You just didn't know, he didn't know. You didn't have a Travis to show you.\"\n\nWe went round and round. Mom was adamant that it wasn't possible. Teri was equally adamant insisting not only was it possible, but it was incredible. I mostly tried to stay out of it, until I had to get ready for work, leaving them arguing with each other.\n\n* * * \n\nDr. Hamilton, I'm going to make one last plea. You've already read enough to know that I'm morally corrupt. Treating my sister like that was the last thing on my mind at the beginning of the holiday break.\n\nIt gets worse. I probably should just end this, and hope for the best, but I feel that after all I've documented, I have to finish this properly. Holding nothing back. \n\nAt least put this document away, and consider grading me on what you've read so far. Set it aside for a day, and give me a chance. I doubt you'll stop, since you got this far, but I need to warn you, things got worse. A lot worse. Shamefully worse. Please consider what I've said, and leave me this little bit of privacy. Please.\n\n* * * \n\nThe next few days were incredibly awkward. It didn't stop me from loving my sister each morning, while she tried to convince me it was my duty to teach Mom how to enjoy sex. She kept throwing Aunt Brenda's name in there as well.\n\nMom was barely speaking to me, the few hours we were together late at night. I felt bad about that. But I didn't feel what I had done was wrong. Yeah, maybe we took it too far, but I was proud of my sister, and how far she'd come. No pun intended.\n\nSaturday, I worked the day shift. Ten in the morning until five. When I got home I was tired and a little grouchy. Days were lousy for tips. I hadn't made twenty dollars, when on a typical evening I might make fifty. \n\nWhen I got home, I went straight to the shower. When I came out, Teri was waiting for me. I was worried about that; I didn't like throwing our relationship in Mom's face. She slipped into my arms, and gave me a kiss. \"You know you're the best brother in the world,\" she said.\n\n\"With the best sister ever,\" I reminded her.\n\nShe grinned. \"I put some clothing out for you. I want you to dress nice.\"\n\n\"Are we going out?\" I asked.\n\n\"No, but this is a special night, alright. Trust me?\"\n\n\"Always,\" I said, stealing another kiss.\n\n\"Dress nice, and join us for dinner,\" she said.\n\nWhen I came out, both Teri and Mom were dressed to the nines. Teri gave me a beer, and she and Mom were drinking wine. From the way they were acting, it looked like it might have been their second bottle. Mom had a roast in the crockpot, one of my favorite meals. \n\nTeri dragged me into the living room, and Mom followed shortly after. \"You love us right?\" Teri asked me.\n\n\"What's going on?\" I asked.\n\n\"I know you love us. Tonight, you're going to show Mom how you can get me off, and afterward, you're going to show her that sex can be good.\"\n\nI looked over at Mom, who was blushing. \"You don't have to let her get away with this,\" I said.\n\nMom nodded and gulped her wine. \"Is it true? You can make her enjoy it?\"\n\n\"I don't make her Mom. She just needs time and patience to get started. You need to know her hot buttons. Then she's very excitable.\"\n\n\"She has orgasms with you?\"\n\n\"Lots. Lots and lots. She's amazing, Mom.\"\n\nTeri quickly spoke up. \"He can do it for you too, Mom. I know it. He's, well, he's incredible. You won't understand until you let him show you.\"\n\n\"Teri, we don't know that,\" I said. \"Everyone's different. It wasn't easy to get you to come. Mom's been suppressing it forever. We don't know that I can change that.\"\n\nMom looked over her glass at me. \"Would you try, Travis?\"\n\nChrist on a pogo stick! Mom wanted me to! I looked her over. She had dressed up for me. She had makeup on. I could see how nervous she was, but she was trying. I scooted over to her, and put my hand on her leg. \"I love you, Mom. I'd do anything for you.\"\n\n\"Tonight?\" she whispered.\n\n\"I'd love to. I don't know if it will happen, but I'd love to try.\"\n\nDinner was awkward. We all knew what we were doing afterward, but we talked around it. I felt myself blushing for no reason. I was checking my mother out. How weird was that? She still looked good, for her age. She had turned forty-four the previous March. She'd kept her figure, mostly through dieting and walking. She was taller than Teri, and at least twenty pounds heavier. She had bigger boobs, and was a little thicker all over, but she was still pretty. I always thought it was wrong that she'd never dated after Dad passed away.\n\nOver the dishes, I stood behind Mom, and wrapped my arms around her waist. \"I love you, Mom. Whatever happens tonight, you've gotta know I love you like crazy. You're the best mom ever.\"\n\nShe kept facing the sink, rinsing the dishes and passing them to Teri who was loading the dishwasher. \"I love you too, Travis. You've been so good, taking over as the man around the house. I know it wasn't easy.\"\n\nI kissed her neck, and lifted my hands daringly, cupping her breasts. \"You're still a beautiful woman, Mom. I'm looking forward to make you come for me.\"\n\nShe almost dropped the plate she was holding, and Teri had to catch it. \"Travis . . .\"\n\n\"Beautiful. Sexy. I'm gonna make you come so good. You'll see.\" I kissed her on the other side of her neck. I wasn't sure I was going to be able to get through to her, but I wanted to try. I wanted to give her that, for all she'd done for me, for us. And I wanted her thinking about it, warming up to me.\n\nI squeezed her breasts, pulling on her nipples, rubbing my hard-on against her butt. I only did it for a few seconds, then I let her go. I dried the last of the pots and pans, and then we were done, all of us standing around the kitchen awkwardly.\n\nTeri giggled. \"Come on. This is silly. It's fun time.\"\n\nShe took Mom by the hand, and I followed them to Mom's bedroom.\n\nTeri turned to me. \"Out! Go to your room, and put on your blue boxers. You know the ones. Give us ten minutes.\"\n\n\"Fifteen,\" Mom said.\n\n\"Fine, fifteen. And bring the wine,\" Teri added.\n\nI did as requested. I also hit the bathroom and shaved extra close, and lotioned my face. I took extra care to make sure I was clean down there. Then I entered Mom's bedroom with a knock.\n\nMom and Teri were both sitting on the bed, wearing sexy lingerie. Teri had on black thigh-high stockings, to go with the outfit I'd bought her. It hid most of her scarring, but I could have cared less about that. They both looked sexy as hell. I had barely started to take it in, when I found myself getting hard.\n\nTeri leaned toward Mom. \"I don't want to shock, you, but we're going to have to deal with that a couple of times. No screwing, understand? But it would be mean to leave him worked up for hours and hours.\"\n\nMom just nodded.\n\nI approached the bed, and Teri scooted over. \"Me first, Travis. You need to take your time and show Mom what you do to me. I want the whole thing too. I want to come on your talented fingers, and on your amazing tongue. Show her how good it can be.\"\n\nI was feeling a little nervous, but worked my way through it. I concentrated on Teri, kissing her, caressing her body, starting on her breasts. I'd learned her nipples were the short circuit to her pussy. Playing with her tits cut the time to get her worked up in half. Once I had her moaning, the fondling of her legs and thighs moved up to her pussy. \n\nMom was sitting close, watching intently. \n\n\"So good, Mom,\" Teri whispered.\n\nShe was leaking nicely by the time I started working her clit. \"Juicy girl,\" I teased. She whimpered sweetly, her hips starting to move. \"You gonna give me a nice come, baby girl?\" I asked.\n\nShe squirmed under my touch. I kept working her, taking my time, whispering lovingly to her when I wasn't nibbling on her nipples. \"Sweet pussy girl. Hot, sexy sweet little pussy,\" I told her.\n\nI had her whimpering, and went for the vibrating touch that Rachel swore was my finest gift. I felt the tell-tale tensing. \"Give it to me, baby. Gimme that first sweet come,\" I urged her.\n\nIt wasn't a big one, but it was there. She came for me, moaning beautifully. I kissed her, rubbing her softly. \"I want another one, gorgeous. I want you to come and come and come.\"\n\nI know she was nervous, anxious over our mother's presence. She was harder than usual to get off, back to like she'd been the first week or so. But I was patient, and knew how she worked. I alternated some G-spot work with concentrating on her clit. She gave me a nice little orgasm.\n\nI brought her down slowly, fondling and caressing her, while she purred for me. \n\n\"You can get her to do that whenever you want?\" Mom asked.\n\n\"Pretty much, the first one's the hard one,\" I said, playing with my sister's body.\n\n\"That wasn't fake, was it?\" \n\n\"No, Mom. Nothing fake,\" I said. \"She was wet, her nipples erect, you could feel the breathing, the way her body reacted. All the details were there.\"\n\nTeri giggled. \"Real Mom. Very, very real.\"\n\nI kissed Teri on the lips. \"Ready for round two, gorgeous girl?\"\n\nShe smiled. \"I bet you're dying to feel my sexy stockings pressed against the side of your face.\"\n\n\"Tease. I'm going to make you beg for this one.\"\n\nIt took about twenty minutes of teasing and denial to have her grabbing my hair, begging me to finish her. I stopped blowing cool air across her clit, and took her in my mouth, twirling my tongue around her nub, before flicking it across her most sensitive spot. She cried out loudly as I provided her release, and I hoped I still had some hair on my head. And yes, the stockings pressed against my skin was pretty wild.\n\nShe was gasping as I crawled up her sexy little body. \"Love you, Teri,\" I told her.\n\n\"God, love you so much, Travis. So much.\" She hugged me tightly to her, then looked over at Mom. \"Best brother in the world, right?\"\n\nMom was flushed, and I was surprised to see her nipples were erect. \"That was . . . surprising,\" Mom admitted.\n\nThen Teri was pushing me off of her. \"I know, right? And now it's your turn!\"\n\nMom leaned back nervously. \"I don't know, Teri. We shouldn't make him. What if he doesn't want to?\"\n\nI crawled over to Mom, and hugged her close, feeling her stiffen in my arms. \"I want to Mom. I want to make you scream for me. I want you to collapse from so many orgasms you can't even see straight.\"\n\n\"Travis, baby, it's probably not going to happen.\"\n\nI eased her onto her back, and squeezed her breasts. \"I know it will, Mom. These tell me it will.\"\n\n\"My breasts?\"\n\n\"Exactly. You react just like Teri. Your nipples have been hard forever. I bet they're really sensitive too.\"\n\nThe lingerie was sexy, but I knew it would get in the way. Mom was shy about letting me see her body. \"I'm not a young girl, Travis. Not like her.\"\n\n\"Nonsense, Mom. You're sexy as hell. Let's get this off of you. I'm dying to suck those big titties.\"\n\n\"Travis! Be respectful. I'm your mother.\"\n\n\"No, Mom. Out there, you're my mother. In bed, you're my woman. And I'm going to go to town on those tits. I can't wait. None of my girls have ever had tits like these.\"\n\n\"Honey, I'm forty-four years old. Without this outfit, my boobs are going to be down around my belly.\"\n\nTeri had climbed behind her, and was tugging on the outfit. \"Bullshit, Mom. You've got great tits. They don't hardly sag at all.\"\n\n\"They're ugly. My nipples got really big after breast-feeding you two.\"\n\n\"All the more reason to love them Mom. Tell you what, how about I turn the lights down low? Will that help?\"\n\n\"You're sure you want to do this?\"\n\n\"Geez Mom!\" I got up on my knees, and showed her my erection. \"What do you think?\"\n\nShe giggled, and I wanted to ravage her. \"That's very naughty, Travis. Showing your old mom your tally-whacker.\"\n\n\"Tally-whacker, Mom?\" Teri laughed. \"That's a cock. A big juicy cock, and when he's done making you mess up the sheets, you're gonna help me get him off.\"\n\nDuring the talking, we eventually got her arms over her head, and her baby-doll outfit off. There she was, my mother, wearing only panties, blushing trying to cover her big breasts with her arm. \"Travis! Teri! The lights, you promised.\"\n\nTeri turned on the light in the bathroom, and turned off all the lights in the bedroom. I eased Mom onto her back. \"Relax, Mom. This is going to be wonderful, I promise. You don't have to come or nothing. All that matters right now it that we make you feel good.\"\n\n\"Be gentle, baby boy. It's been a long time since anyone touched me.\"\n\nI silenced her with a soft kiss. \"Love you, Mom. Let me show you how much.\"\n\nMy hands caressed her body, gently, avoiding anything obvious. I kissed her skin, her neck, her upper chest, before starting on the soft flesh of her breasts. I darted my tongue across her nipple, and blew softly across it, watching it shrivel and harden. \"I knew it. You have Teri's tits.\"\n\nTeri was opposite me, leaning into Mom. \"I wish. Mine are tiny compared to those.\"\n\nMom reached down and caressed her girl. \"Mine weren't much bigger than yours when I met your dad. We can blame your brother for an added cup-size. They never went all the way back after him.\"\n\nI took her nipple in my mouth, and felt her shudder. It was a good reaction. I was surprised to see that I wasn't going to be alone getting Mom going. Teri, leaned over and I saw her lick Mom's nipple. \"No, Teri,\" Mom moaned.\n\n\"My boobs too, Mom,\" Teri said, and then she was sucking beside me.\n\nI took my time, several minutes of gentle caressing before I started to work the insides of her thighs. When I finally got to her pussy, she was closed up tighter than a bank vault. I stayed patient, touching softly, teasing, parting the lips, nudging around her clit. Teri kept working on Mom's tits, letting me spread my attention around.\n\n\"Dad loved fucking you, didn't he?\" I whispered, pressing against her opening, teasing her lips apart.\n\n\"Always,\" Mom breathed. \"I never denied him. Never. He was my husband.\"\n\n\"I bet you were as tight as Teri,\" I teased. \"He would have loved that.\"\n\n\"Until you, baby boy,\" Mom whispered.\n\nI licked my fingers, then teased her clit a little. I remembered how successful it had been, getting Teri to lick my fingers, and pressed them against Mom's lips. \"Suck, Mom.\"\n\nShe looked at me, and sucked my fingers. I saw a little sparkle in her eye as her tongue circled around them. I put them back between her lower lips, easing her open. \"I bet you give a hell of a blowjob, Mom.\"\n\nShe licked her lips naughtily. \"Your father never complained.\"\n\n\"I bet.\"\n\nShe smiled. \"Don't misunderstand, baby. I loved doing things for your father. I did my best. I wanted him to be happy. I would do anything for him.\"\n\n\"God, you're going to be incredible, when I'm done with you.\"\n\nShe closed her eyes, leaning her head back, as my fingers gently eased in and out of her. I brought them back to her lips, and she sucked willingly.\n\nAfter that I started on her clit. Slowly, teasing, never touching directly, not for the longest time. I rubbed the sides, the top, applying pressure, from above. I teased her with the vibrating touch, and almost laughed when she gave me a little moan.\n\n\"You're crazy, Mom. You're a firecracker waiting to go off. Your pussy's on fire. I can smell you from here,\" I whispered. I leaned over Teri and put my lips to her ear. \"Gentle now, very gentle.\"\n\nI reached lower and found what I was hoping for. Mom was getting wet. Just a little, but it was a start.\n\n\"Naughty Mommy,\" I teased, fingering her, reaching up and petting her G-spot. \"You're wet. You're half way there already.\"\n\nShe gave me a sexy little whimper, and I sealed her lips with mine. Mom was a hell of a kisser. I think she could have taught both Teri and me something.\n\n\"Relax Mom. This is good. Don't worry about coming. Don't worry about anything but how nice it feels.\"\n\nI took her hand and put it on my cock, hoping I wasn't making a mistake. Mom wasn't like Teri. She knew what a cock was like. I bet she missed Dad's. Her hand wrapped around my shaft, and she stroked it gently. \"Feel what you do to me, Mom. You're fucking hot. Sexy as hell. This body was meant for loving.\"\n\nI returned to her clit, giving it the attention it needed. I was silent, enjoying her touch, working through my repertoire, reaching down to check my progress by how wet she was getting. It was good. I was pretty sure I'd be able to get her off. I wet my fingers from her pussy, and brought them to her lips. \"Sexy Mom. Taste yourself. You're on fire.\"\n\nShe moaned, sucking my fingers before I went back to her clit. On the way, I gave Teri's head a nudge, pushing downward. I saw her suck up a mouthful of Mom's tit, earning us another moan.",
        "I checked the clock and we'd been at it over half an hour already. That was fine. It's not like we didn't have time.\n\nI pressed my lips to Mom's ear, while I did the circles. \"You know I have to fuck you, don't you? Not tonight. Not until I have you coming like Teri. But I'm going to fuck you. I'm going to fuck you hard, and make that hot little pussy come all over my cock.\"\n\n\"God, Travis,\" she gasped.\n\n\"My pussy now Mom. Man, am I gonna love fucking you. Watching those big delicious tits bounce.\"\n\nHer breathing was shallow, and I could feel her responding. I almost had her. She was damned close.\n\n\"Stroke me, Mom, make me come for you. I need to come, you've been driving me crazy forever.\"\n\nHer hand moved a little firmer. I had no idea if it was the right move. I didn't want to distract her, but I thought that maybe, just maybe, this was what she needed to get over the edge.\n\nI nibbled her ear lobe, and gave her another shot of the vibrating touch. \"Gonna fuck you Mom. Fuck you so good. Fuck you over and over again. Make you come for me. Come on my big hard cock while I fill you up.\"\n\n\"Travis,\" she groaned, and I could tell she was on the verge. If I could just get her over the top.\n\n\"Gonna fuck you everywhere. Your dirty little mouth, your hot pussy, even your ass Mom. I bet your ass is incredible.\" She had said she denied Dad nothing.\n\n\"Dad loved your ass didn't he?\"\n\nShe nodded, whimpering sweetly.\n\n\"He loved everything about you, I bet. Such a sexy little bitch. Fuck, you are so hot Mom. Once I start, I'm never gonna stop fucking you. Tell me you want me to fuck you Mom. Tell me.\"\n\nShe gasped, licking her lips. \"My boy,\" she whispered.\n\n\"That's right. Your boy is going to fuck that hot little pussy. Jesus, Mom, you're dripping. Stroke me now. I'm gonna come for you. Stroke me, make me come, Mom.\" I was humping her hand and couldn't hold back much longer. Mom was thrusting back, her hips pressing up against my touch.\n\nIt took an enormous amount of effort and concentration, but right before I was going to come, I gave her the touch. I groaned as I spurted cum over my mother's hip, and she gasped, her hips raising upward. \"Come, Mom,\" I pleaded, and she obeyed.\n\nIt wasn't huge, but it wasn't tiny either, she was shuddering, sensitive, drawing away from my touch as she stiffened.\n\nI saw Teri lift up off Mom's poor breast, and she brushed our mother's hair back. \"Wonderful, isn't it, Mom? Isn't it great?\"\n\nMy fingers eased back, rubbing her softly, caressing her moist pussy. \"Love you, Mom,\" I told her, kissing her softly. \n\nThe look in her eye said so much. Surprise, sadness, even shame. I saw the tears start to develop, and I hugged her. \"That was beautiful, Mom.\"\n\n\"I . . . I didn't know,\" she whispered.\n\n\"We know.\"\n\nIt took almost as long to calm her down, as it did to get her going. We hugged her, caressed her, kissed her. Told her countless times how much we loved her. She was super-sensitive, so I left her clit alone, but played with her pussy, trying to keep her a little excited, without getting her worked up. \n\nWhen she finally calmed, Teri gave her a kiss. \"I'm gonna take care of him now, Mom.\"\n\nMy baby sister got a warm washcloth and cleaned me and Mom both up, before settling between my legs. She was getting better and I enjoyed watching her.\n\n\"Nobody can know,\" Mom said, cuddling up to me. \"It has to be our secret.\"\n\n\"Teri and I have been doing it since the week after I got home. We can keep a secret.\"\n\n\"I'm serious Travis, not a word.\"\n\nI hugged her close, and gave her a kiss. \"I bet you could teach Teri a lot about blowjobs.\"\n\nShe blushed. \"She seems to be doing fine.\"\n\n\"Please, Mom?\"\n\nShe gave me a short kiss, and a few seconds later I got to watch my mother take my cock in her mouth. That was pretty amazing. Between Mom and Teri, I didn't last another two minutes. I warned them I was going to come, and Mom took over, sucking me dry through my finish. I was amazed she could take me into her throat, but she let me finish in her mouth, before sucking me clean, and swallowing every drop.\n\n\"Isn't it nasty, Mom? How can you swallow it so easily.\"\n\n\"Love, baby. So it tastes a little bitter? Doesn't he deserve the best?\" Mom said, kissing my shaft.\n\n\"Yeah, but\u2014\"\n\n\"No 'buts' baby girl. Whatever he wants, always. Remember that. That's love. You love him don't you?\"\n\n\"Of course, but you said\u2014\"\n\n\"Never mind what I said. Love your brother. He deserves it.\" Mom took me back in her mouth, and proved I was right. She was damned good at it. And she wasn't afraid to share her knowledge with Teri.\n\nWe changed the sheets, and all slept together that night. We did for the rest of the holiday break. It was a couple of days later that I woke up to Teri sitting on my cock. She was moving up and down taking all of it.\n\n\"Teri,\" I groaned.\n\n\"Love me, Travis.\"\n\nI did, and Mom woke up and gave us hell for all of about two minutes. \"I knew this was going to happen,\" she sighed. \"I just knew it!\"\n\n\"Don't be mad, Mom,\" Teri said, rocking back and forth on my cock. \"You keep telling me I should love him.\"\n\n\"I'm not mad,\" she said, cuddling up to me. \"You're going to do me too, aren't you, Travis?\"\n\n\"Yeah. I'm going to love it.\"\n\n\"What am I supposed to do when you leave me? I've been so spoiled,\" Mom said.\n\n\"I hope you'll find a great man, and teach him what he needs to know you make you happy,\" I said.\n\nI was enjoying Teri, but didn't need the distraction. I rolled her over and went down on her, until she was pleading with me to let her come. That's what I wanted. I slipped my cock back into her, and now that she was worked up, I tried some of Rachel's tricks. God, I owed that woman big time.\n\nIt still took a few minutes, but I managed to get her to come for me. It wasn't a big one, but what the hell. She'd come on my cock, and that's all I wanted. I made her get on top, and let her play around until she found what worked. The little grinding motion didn't do a lot for me, but I sure enjoyed watching her get a big one, perched like a cowgirl.\n\nThe next night it was Mom's turn. She was still a lot of work to get going, and I imagine she probably would be for a long time. I tried my best, while I pumped her pussy with my cock, every trick I knew, to no avail. I loved it, loved every minute of it, but I could see that even though she seemed happy, I wasn't doing it for her. It was a big blow to my ego. She held me afterward. \"I loved it, Travis. I don't have to come every time. I loved feeling you in me.\"\n\nBut I was determined. Time was running out. I had less than two weeks before I had to return to school. I fucked Mom every morning and every night. I would get her worked up, sometimes making her come first, sometimes denying her. One time, I swear I must have fucked her for a solid hour, non-stop. I know she enjoyed it, but it was hell trying to get her to come. Especially since I was unsuccessful.\n\nOf course, once Mom left for the day, I had Teri all to myself. And little sister was a wild woman. I was the luckiest man in town. No doubt about it.\n\nThree days before I had to leave, Mom was in the kitchen, still in her work clothes, making dinner. I wanted her. Honestly, I didn't even care if she came. I wanted back inside her hot pussy. After weeks of it, I was getting addicted. Plus, Mom was hotter than ever, dressing nicer, losing a few pounds, doing up the makeup, even dying her hair. Shit, Mom was a MILF!\n\nI sidled up behind her and caressed her ass. \"Damn, woman, you look amazing.\" I ran my hand up her side, until I was cupping her breast. \"Jesus, Mom! You're getting way too hot to be going into an office full of men. I don't want anyone messing with my woman. My hot pussy.\"\n\nShe laughed at me as I worked her skirt up over her hips, trying to push me away. I yanked her panties down and pushed her feet apart. \"Don't fight me Mom,\" I said.\n\n\"I'm making dinner!\" she argued weakly. She was peeling potatoes for mashed, and I thrust my cock up inside her, without worrying if she was ready or not. She gasped, and I was surprised to find she was ready. Not soaked, but not dry as a bone either.\n\n\"Damn, Mom! You're wet. What have you been doing, you dirty girl?\"\n\nI bent her over, and pounded into her, making her grunt with each thrust. \"How come you're wet, Mom? Is there another man in your life? One of those office guys? Somebody been messing with my pussy?\" I teased.\n\nShe didn't answer right away, so I reached up and squeezed her titties. She moaned and gasped. \"Some bastard been man-handling your tits, Mom? Dipping his wick, in my private well?\"\n\n\"N-n-no,\" she groaned. \"He only kissed me.\"\n\nTo say I was shocked would be the understatement of the year. \"He kissed you? Some stranger kissed my woman?\"\n\nShe moaned, pushing back against me. \"I'm sorry, baby.\" \n\n\"You liked it didn't you?\"\n\n\"J-j-just a kiss,\" she grunted as I fucked her harder.\n\n\"He wants you doesn't he? Wants to fuck this hot little pussy.\" I slapped her ass, firmly. \"Wants to fuck my pussy!\"\n\n\"He's bad,\" Mom mumbled.\n\n\"Bad? How bad? Is he tapping this sweet ass? Sucking on these incredible tits? Is he Mom? Can the bastard make you come like me? Is he fucking my pussy?\"\n\n\"No!\" she moaned pitifully, \"Flirting.\"\n\n\"Flirting my ass!\" I slapped her bottom again. \"He touched you, didn't he? I bet he touched your tits. Couldn't resist those big tits!\"\n\nShe was gasping, and I realized she was about to come. I couldn't believe it. \"MY tits Mom!\" I growled, smacking her ass cheeks. \"Mine. My tits, my pussy, my ass!\"\n\n\"Yours,\" she whimpered, \"Oh God!\" she cried out, and I felt her pussy twitching around my cock.\n\n\"Dirty office slut, coming on your son's cock, thinking of another man! Don't you dare let him have you. You're mine 'til I go to school, you understand?\"\n\n\"Yours baby . . . I swear . . . it was only . . . flirting.\"\n\nI pounded into her, groaning as I reached the point of no return. \"Mine,\" I gasped, erupting inside of her.\n\nWhen I pulled out of her, she spun around and hugged me. \"I would never cheat on you, Travis. Never. He didn't stand a chance.\"\n\nI hugged her back. \"I know, Mom. But you're a hot woman. All those men are going to want you. I mean, seriously, look at yourself. You're a total MILF! I can't help but be a little jealous.\"\n\n\"Nobody but yours, Travis. I swear.\"\n\nI kissed her. \"Damn, Mom, you were on fire. You came when I was fucking that naughty pussy, didn't you?\"\n\nShe blushed. \"Maybe.\"\n\n\"Maybe nothing! You came on my cock, you dirty girl.\" I didn't know if it was the spanking, or talking about another guy, perhaps it was guilt. But I'd finally done it, and I was going to make sure it happened again.\n\nAnd I did, for three last incredible days.\n\n* * * \n\nSo that's what I did on my Christmas break. I taught my mom and sister how to enjoy sex. I made sure they had both learned the lesson well before I left for school. Mom took those last few days off, and between her and Teri, they destroyed me. Drained me dryer than the Sahara.\n\nLike I said at the beginning, if you read this you'll probably think I'm a sneaky, immoral, sick, and opportunistic bastard.\n\nI'm not sneaky, and I know who my father is. As for the rest of it, it may be true, but I have no regrets. I love my mother and sister, and I believe their lives will be better because of our magical time together, over Christmas break. I think I may have learned almost as much from them as they did from me. For five weeks, I lived a dream, even if the last week almost killed me.\n\nNow I need to find a way to avoid Courtney for a couple of days. If I tried to have sex now, my poor cock would scream and run away. Hell, I haven't talked to her in ages, it seems. She may even have a new guy. Wouldn't that be a kick in the pants?\n\nThen again, I really need to see Rachel, and let her know how much I appreciate everything she taught me. There might even be a thing or two I could teach her.\n\nI think it's going to be a great semester.\n\n==========================\n\nMr. Porter,\n\nYour story was definitely engaging, and you exceeded the length requirement tenfold, while using all the vocabulary words appropriately. The writing is more than adequate, with some grammatical dispensation for the dialog. However, the directions specifically stated it had to be a true story, and it is extremely difficult to believe this was how you spent your holiday break. Except for the possible fictional elements, you easily earned yourself an A. I would be in denial if I didn't admit it was the most interesting essay I received.\n\nMy office hours are Tuesdays and Thursdays from 2:00 until 4:00. Please plan to visit my office tomorrow at 4:00 pm and please be prompt. I believe I would be derelict if I didn't establish to my satisfaction the veracity of your claims. If necessary we can hold additional meetings until I'm convinced of the factual content. \n\nDr. Renee Hamilton.\n\nPS. I concur with the last line of your essay.\n\n==========================\n\nI hope you enjoyed reading this story. As I mentioned at the beginning, it is a contest entry, and your votes and feedback are appreciated as always. I love to hear back from my readers, and welcome all your comments and emails. - TTT"
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "mother son",
        "brother sister",
        "frigid",
        "teaching to climax",
        "orgasm training",
        "enjoying sex",
        "holiday break",
        "school essay",
        "revenge"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/what-i-did-on-my-christmas-vacation"
}