{
    "title": "CvsN 29: So Long, Sisters",
    "pages": [
        "===\n\nAnother house shakeup, with Robin's extended goodbye, and a discussion about plans for the future, including some major ones.\n\n===\n\nWork was all about getting everyone caught up on the most recent changes and putting together some documentation for creating a program to customize our work for other countries' needs.\n\nI insisted on a sit-down with Chris, to pull our notes together on the new work and to finish our trip report. She was reluctant at first, but finally agreed. We used the smallest conference room since it was just the two of us.\n\nWe started out all business and got through the new work stuff, but discussing our trip report was a little shakier. \"How should we describe the meetings with your favorite Colonel?\" I teased.\n\nShe blushed. \"Don't get started, Jack.\"\n\n\"The official ones, Chris. Jeez, get your mind out of the gutter.\"\n\nIf anything her blush was growing more intense. \"Productive. They were ecstatic with the results. We got more money for training out of them, and several likely updates. This project is going to be around for a while.\"\n\nI slid closer to her, and saw her hands nervously fidgeting with her pen. \"How's everything on the home front?\"\n\n\"A little better I think. We had a few good talks, and some nice quiet moments too.\"\n\n\"Quiet? You? I find that hard to believe.\"\n\n\"Yes quiet. As well as very nice, thank you.\" She gave me a quizzical look. \"How much of your adventure did you share?\"\n\n\"Pretty much everything with Debbie. I wasn't planning on it, but she could see right through me. The girl has some kind of sixth sense. Things were rocky for a bit, totally my fault, but I think it's stabilized now. The whole trip opened my eyes a bit,\" I confessed.\n\n\"Me too.\"\n\n\"Everything alright between us?\" I asked.\n\n\"Better than alright, I think,\" she said with a smile. \"If we can put the craziness behind us, I think we can be good for each other.\"\n\n\"As friends?\" \n\n\"As friends, as co-workers, as team-mates,\" she said.\n\n\"Good. You know I like you a lot, even fully clothed,\" I said, lowering my tone.\n\n\"Same here. But we still have to keep things professional.\"\n\n\"I know. But I'd like to think we were friends before all this started, and it would be natural for us to remain friends. Publicly.\" I smiled at her. \"Hell, if I stopped flirting with you it would probably raise some eyebrows. Why should you be the only gorgeous female not subjected to my advances?\"\n\nShe laughed. It was nice to see she was relaxing. She'd seemed tense when we started. \"Good point. Let's not get too carried away though. You can even hint at progress, if you'd like, it might explain my occasional lapses, but progress only, no homeruns.\" \n\n\"Understood. As long as we're going to play it that way, want to open another button for me? Put second base in play?\"\n\n\"Jesus, Jack! You are completely incorrigible!\" She sounded peeved, but her hands opened the top button, revealing a little more cleavage. \"Satisfied?\"\n\n\"Hardly. You know what it takes to satisfy me. Better than most. Let's say I'm happier.\"\n\nShe organized her papers. \"Tell you what. Send me the preliminary trip report from your end, and I'll merge the two. We need to breakup this meeting, before I forget all my promises to myself.\"\n\nI got up and stood over her, peering down her shirt. \"Fun, that's all. I won't push it. I promise.\"\n\n\"Please, Jack. I need you to be strong for us,\" she said turning in her chair, looking at my crotch.\n\nI reached down and cupped her chin in my hand. I tilted her head back. \"Eyes up here, wild thing. I'm only human you know.\"\n\n\"Hmmm. I know otherwise.\" She licked her lips salaciously, and I had to step back before we got carried away. \n\nI could see her instant embarrassment. She was blushing again. \"God. What you do to me, Jack! Get out of here, just smelling you nearby made me wet. It'll be a while before I'm over you.\"\n\n* * *\n\nI was late getting home, with so much to do, and getting to work as late as I did. I'd even made a short stop on the way to do a little shopping. I had some ideas for the bedroom that needed supplies. Not that things were getting stale, or boring, just the opposite was true. But I wanted to move the relationship along in some new areas, which I was relatively certain would be more than welcome. I was starving by the time I got in the door. \n\nRobin found me shortly after I arrived, slipping comfortably into my arms. The kiss was nice, not too desperate, but very friendly.\n\n\"Mmm. Welcome home, handsome,\" she said softly.\n\n\"Where's everybody?\" I asked, looking around the empty main floor.\n\n\"New schedule. Most of the kids don't get picked up until around six, some staying as late as seven. Debbie will be in soon to start dinner, no more than 30 minutes, leaving Beth and Amie to close up.\"\n\nOf course their workday would be long, dealing with early drop-offs and late pickups. I'd have to speak to the girls and get more details about the new trade-offs and long hours.\n\n\"Let's get you changed,\" she said, pulling me along by the hand, heading to the bedroom. \n\nShe turned around just inside the door, posing for me. \"Like the shirt? I wore it just for you.\"\n\nIt was tight, accentuating her sizable breasts. There was a large number on the front, in block characters like a sports shirt. \"68\". Underneath it in small letters was written \"You'll owe me one.\"\n\nI grinned. No subtleness with Robin. \"I like it.\" I opened the drawer at the side of the bed, and put my latest purchases inside, before turning back to the naughtier sister.\n\n\"Good.\" She started unbuttoning my dress shirt. I thought about my recent decision to stop being with women other than Debbie and Beth, but recalled Cathy's suggestions and the performance of the night before. It seemed reasonable to continue playing with the women in the house, as long as Debbie, and Beth somewhat, were still the center of most of my attention. Beth had all but said her fellow co-ed was fair game.\n\nRobin removed my shirt, then hers, exposing her bare breasts, nipples already hard. She moved closer, tugging my belt loose, and opened the top of my pants. With my trousers around my ankles she pushed me back on the bed, and took my shoes and socks off, before removing my last item of clothing.\n\nOnce naked, she encouraged me to lay back, her mouth settling in between my legs. It didn't take her long to get me hard and she seemed content to get me off with her willing mouth. After my strenuous last couple of days, I was happy to let her. I pulled a couple of pillows in place under my head, and watched her pleasure me. Life was good. Then again, so was Robin. \n\nIt only took a few minutes of her best effort to having me groan out my release. She finished me off, sucking me dry, before reclining beside me. \"There. Doesn't that feel better? All the work stress gone. You can relax and enjoy your evening.\"\n\n\"That was perfect. Exactly what I needed. Thanks.\" I drew her closer, kissing her lips softly, those generous lips that had worked so diligently for my pleasure.\n\n\"Are you going to miss me, Jack?\" she asked softly.\n\nI eased her onto her back, looking her in the eye. \"I know I joke around a lot, rarely taking anything serious. I want to make sure you understand that I'm being very serious now.\" I had my hand on her face, my thumb caressing her cheek. \"When you first moved in here with us, I was worried about the dynamics and having you around. Not now. I love having you here. There's so much wonderful about you. I'm going to miss you terribly. I hope that you remember where you're wanted, and spend a lot of time with us.\"\n\nShe looked sad. \"Maybe you might miss me, but I doubt any of the others will.\"\n\n\"You're wrong. It's true that things were awkward at the beginning, and the stuff between you and your sister made it worse. But once we got past that, you became part of us. You are different in so many ways, all of which contribute wonderfully to what we have under this roof. I think we can all agree that the central dynamic of this house is what Debbie, Beth and I have going. But what you bring to the table would be the next most valuable.\"\n\nShe laughed self-consciously. \"You don't have to butter me up, Jack. I know what I am. I know how I fit in. And you of all people should know that as long as I'm under this roof, I'm a sure thing. No sucking up required.\"\n\nI sat up, and quietly removed her tennis shoes and socks. \"Jack, I...\"\n\nI hushed her, massaging her feet gently for a few moments. I helped her out of her shorts and panties, then leaned in licked her gently. \"Please, Jack, I should clean up...\"\n\nAgain I shushed her with a smile. I went down on her for a few minutes, nothing crazy, just being intimate. I was hard when I sat up, opened her legs, and pressed my cock head against her pink petals. I eased inside of her, taking a few leisurely strokes to get fully buried. I straightened out over her, my face over hers, and kissed her softly. \"It's sad.\" I told her while stroking her easily. \"It's only now, as you're leaving, that we've ironed out all our differences and found how to integrate you in with everybody else. There's so much more for us, you can't be a stranger.\"\n\nShe was looking at me solemnly, the most serious I'd ever seen her. \"Please Jack, don't.\"\n\nI slowed my motion, brushing her hair back. \"Don't what?\"\n\n\"Don't make this more difficult than it is. When all I am is a fuck-toy, it's hard enough. If you make me out to be something more, I'm not sure I can handle it.\"\n\nI leaned in and kissed her passionately, expressing my desire for her. She returned it in spades. \"I'm not going to lie to you, or hide the way things are. I'm hoping for the best for you and Ron, you deserve it, and I think he's a great guy. But don't think for a minute I won't be a little jealous. You are special. It's not easy to get through your defenses, but now that we have, I'm not going to take you for granted.\" I kissed her softly, our tongues moving together easily. \n\nShe whimpered softly, when I extended the length of my stroke into her, working a little firmer. \"You are a sweet fuck, Robin,\" I whispered, \"and when it comes to playing in groups there's no one better.\"\n\nShe grinned, \"Does that mean we should invite some friends in?\"\n\nI smiled back at her. \"Not now. This one is just for me. To enjoy you the way I should more often.\" Her legs were wrapped around me, while she angled her hips to accept me better. \"Promise me that after you leave, you'll still visit often.\"\n\nShe gazed into my eyes, searching. \"As often as you'll let me.\"\n\nI was stroking faster, finding it harder to talk. \"What is it about you that gets me so worked up? I come for you faster than for anybody else.\"\n\nShe smiled. \"I'm not like the others. I'm only here for your gratification. All I want is for you to come for me. That's what makes me happy. I have no other expectations than being yours to use whenever you want, however you want. Can you come for me now, Jack? Fill your cum-bucket?\"\n\nShe was right. Her only desire had always been to have me use her, somehow. \"My sweet little cum slut. God you know how to make a guy feel good,\" I gasped. I rose up on my knees, opening them wide and fucking her for all I was worth. I didn't worry about what felt good for her, or how close she was to coming. I had no concern over what positions she liked. I was going to fuck her how I wanted. \n\nAs my need to come peeked, I pulled out of her, moving up her body. \"Face,\" I gasped, stroking hard. She lifted her chin, and opened her mouth, providing an eager and willing target. I painted her prettily, claiming her.\n\nShe smiled, rubbing my cream on her face, licking her finger clean. \"You don't mind if I wear it proudly for a while?\" she asked.\n\n\"Please. Let me know if you need it refreshed.\"\n\n* * *\n\nI finished changing, and headed out to see what was up. Debbie was in the kitchen, and welcomed me with a hug and a kiss. \"Why don't you see if you can help the girls close up out back? Dinner will be ready in 10 minutes.\"\n\nBeth was packing the last of the kids into a van, while Amie was doing some cleaning up. Ashley and Erin were diligently helping, but they seemed happy for the additional hands and it only took a few minutes for us to get the place back in order.\n\nI sat down and took the two six year olds in my lap, asking them how they liked the new place. They were eager to tell me both the good and the bad, taking me on a tour of their favorite stuff. I lifted one up in each arm, feeling their tiny arms slide around my neck, hanging on to me. I accepted their kisses with a smile, escorting them back to the main house. I dropped them off at the door. \"Go clean up, Debbie's almost got dinner ready.\"\n\nIt was only once I'd dropped off the tykes, and helped lock up that I got my first hugs and kisses of the day from the two older girls. Quite nice, really.\n\nWe had a nice casual evening, with the girls filling in more information about the day-to-day operations of their new business. They were up to 8 kids already, not counting ours, and were looking to add several more. \n\nRobin had cleaned up her face for dinner, and took the opportunity to tell us a little more about her work with emptying the warehouse, mostly consisting of setting prices, advertising, and making herself available to show stuff whenever she received a call. She was completing a couple of deals a day and making excellent progress.\n\nI shared my project plans at work, getting them all caught up on the business side of the escapade that had caused so much trouble recently. \n\nOver a bottle of wine we unwound, enjoying each other's company amicably. I massaged Debbie's feet, while relaxing on the couch, followed by Beth's feet and calves. It was the first real relaxing evening I'd had in quite a while and was surprised at just how much I enjoyed it.\n\nWe decided to call it an early evening, but not before Amie got after me about running.\n\n\"I gave you a break this morning, but I expect you to be out running with me tomorrow morning. I'm not going to take no for an answer,\" she warned me. \n\n\"I'm looking forward to it,\" I told her, which was at least partially true. I needed the exercise, and was looking forward to my reward if I ever caught her.\n\nBeth got up and pulled on my hand, dragging me to the bedroom. I reached out for Debbie, but she drew back. \"Monday. Beth's night,\" she reminded me.\n\nBeth stopped. \"But he just got back! We can still share tonight,\" she said softly.\n\n\"I think I'll hang out with Amie and Robin for a bit,\" Debbie answered. \"You two get started without me.\"\n\nShe was right. I needed some alone time with Beth, if we were going to maintain any balance in our odd relationship. \"Sure. See you in a while,\" I told her, putting my arm around Beth and steering her into our room.\n\n\"Feel like a shower?\" I asked my hot little teen bed-warmer. \n\nShe answered by turning on the water and disrobing. I joined her in the shower and we took our time taking care of each other. By the time we reached the bed, I was ready for more.\n\n\"How are you feeling, Angel?\" I asked, running my hand softly over her body.\n\n\"Still a little sore, but not too bad,\" she admitted.\n\n\"I think I'd like to do something a little different tonight, if you don't mind too much.\"\n\nShe looked at me askance. \"Different? What are you going to do that we haven't already done? Bondage? Spanking?\"\n\nI laughed. \"Spoiling,\" I told her. \"Roll over on your belly.\"\n\nShe turned over slowly. \"You're making me nervous, Jack.\"\n\nI opened the drawer and pulled out the bottle, pouring a little of the sweet almond oil into my hands and warming it up. I placed my hands on her shoulders and starting massaging them. \"Between swimming, and working with the kids, you must be exhausted. I thought a little massage might be nice. I can stop if you want.\"\n\nShe moaned. \"Don't stop! That's wonderful.\"\n\nI massaged her thoroughly from head to toe and back again. On the second pass, I worked deeper, kneading her muscles, searching out any tension spots. The oil was perfect, slippery and sexy, wonderful smelling, and getting absorbed into her skin so easily. I tried to make sure I covered everything, not spending too much time on her spectacular ass, no matter how tempting it was.\n\n\"Stay there a second, I'll be right back,\" I told her, getting up and returning with a large bath towel to put underneath her. I laid it out next to her, and had her roll onto it. \n\n\"I've died and gone to heaven,\" she sighed, as I started on her front.\n\n\"What did I tell you about dying? Not allowed. Never. Too much of a waste.\" I straddled her and gave her breasts an extended rub down, before moving on. When I reached her feet, I settled in for a while, sitting and holding them in my lap. I concentrated on her high arches and her cute little toes.\n\n\"Mmmm. What did I do to deserve this?\" she asked with a smile in her voice.\n\n\"Can't I spoil the girl I love every now and then?\"\n\nShe purred. \"You do love me, don't you?\"\n\n\"More than I know how to explain.\"\n\nShe giggled. \"Trust me, your hands are doing all the explaining.\" She sighed. \"Sharing you with her isn't easy you know.\"\n\n\"I know, sweetness. And I'm not all that good at communicating things like this.\" I started working my way back up her body. \"I know I don't say it enough, but I absolutely adore you.\"\n\n\"I'm not as pretty or sexy as her,\" she said softly, while I rubbed her breasts again.\n\n\"Debbie is what she is. Stunning. Gorgeous. But you are every bit as sexy as her. Inside, I've never met anyone as beautiful as you. Not as loving or caring or fun. I can't believe how lucky I am to have you in my life.\"\n\nShe giggled. \"Ok, now I know you're buttering me up for something. You're not going to tie me up and abuse me, are you?\"\n\n\"Not tonight. No abuse tonight.\" I kissed her lips lightly then moved down her body, opening her legs so I could continue a more intimate massage. I added more lotion to my hands, and got her inner thighs and between her legs lathered up. I massaged her pussy, sliding my fingers along the outside of her puffy lips, pressing them together, squeezing and sliding. I could feel the little nub of her clit buried inside her lips, and pressed them together, sliding up and down, feeling it move underneath the skin. She was moaning prettily, and I could see her sweet opening parting involuntarily. \n\nShe moaned. \"God, that feels incredible.\"\n\nI added more oil, and rubbed her all over, from her pubis down to her cute little butt-hole. I moved between her legs, bringing my mouth and tongue into play. The oil had a nice flavor to it, a slight taste of almond. I gently slid a couple of fingers into her, rubbing inside of her, nothing too harsh. I moved my mouth over the top of her pussy, sucking on her, using the flat of my tongue to apply a little pressure, while I caressed her insides. She was squirming slightly, making the most delightful noises. \n\nI felt her hand in my hair, petting me, running her fingers through my curls. I turned my fingers upward and gently stroked her g-spot, applying a little pressure, curling my fingers back while pushing upward. I got an immediate response out of her, which only encouraged me. I continued with the sucking, while I stroked her insides more firmly. She gasped, clasping her fingers in my hair. I felt the inside of her young pussy tighten down on me, and a small amount of sweet liquid flowed into my mouth. She moaned loudly, her whole body writhing on the bed. \n\nI sat up, running my hands over her body, soothing her, while her whole body orgasm continued unabated. \"Shhh,\" I whispered, pulling her hips back in line when she moved too abruptly. She slowly calmed down, trembling every time I touched her, gasping and whimpering so beautifully.\n\nI laid down next to her, holding her, kissing her pretty face. \"That was beautiful,\" I told her, my hands gently caressing her side.",
        "She looked at me with those big green eyes, opened wide. \"That...that was amazing,\" she whispered. \"So intense.\"\n\nI brushed my hand against her cheek, and kissed her lips softly. \"That was the first time a woman squirted for me. Your come is as sweet as you are.\"\n\n\"I...I didn't know I could do that,\" she said in a tone of wonderment. \"Make love to me, Jack? Love me like you love her.\"\n\n\"I'd love to.\" I moved between her legs, and stroked myself, rubbing my cock-head across her tight little opening. I felt the hardening, and eased the head into her, pushing deeper, letting her tightness add the final steel to my shaft. I leaned over her, kissing her more deeply, holding myself up on my arms, while my hips started their movement.\n\n\"Beth,\" I said softly. \"Beautiful Beth. Loving Beth. Sweet, kind Beth.\"\n\nI long-stroked her, enjoying the feeling of unity. \"Do you have any idea what it means to me that I was your first in all ways? That you gave yourself to me so completely?\"\n\nShe smiled. \"A little.\"\n\n\"I love you.\" I told her softly, looking into her eyes, while I maintained a slow and steady pace.\n\nI saw her eyes glistening. \"Say it again, Jack.\"\n\n\"I love you, Beth. I love everything about you. I want you always to be a part of my life. I want to feel you underneath me when we're old and gray. I want to look into those beautiful green eyes of yours and see my reflection.\"\n\nShe was breathing hard, her hips thrusting back against me. \"I love you, Jack. I'll always love you,\" she said breathily.\n\nI stroked her quietly, moving a little more urgently, thrusting a bit more firmly. \"You feel so amazing. Like nobody else. The perfect match to my cock.\"\n\nShe whimpered, pushing back more forcefully. \"Now Jack, I need it hard. Please.\"\n\nHard and fast is what she got, no more talking. I hammered into her, sliding a hand behind her neck, and tilting her head up. I looked into her eyes, trying to let her feel my desire for her, my love, my need.\n\n\"Come for me, Jack? Come with me?\" she was gasping, her excitement peaking nicely.\n\n\"Hold on a little bit, baby, I'm almost there,\" I said, my voice rough with need.\n\n\"Come, Jack. Fill me. Please,\" she whimpered.\n\n\"Don't come without me,\" I growled.\n\nShe arched her back, squirming underneath me. I shortened my stroke and fucked her harder, reaching up and squeezing her breast, pinching her nipple.\n\n\"Please!\" she gasped.\n\nI was right on the edge. I pulled back and slammed my full length into her over and over again, grinding against her at the end of each stroke. Her hands were clutching my arms, fingernails digging in deeply. \"Jack!\" she cried out.\n\n\"Come baby,\" I groaned, ready for my own release.\n\nShe screamed out, surprising me with her intensity. I drove into her one last time and erupted, holding myself buried deep inside of her, shooting repeatedly, while she came for me.\n\nI lowered my body onto hers, pinning her to the bed, while her legs wrapped around mine, holding me inside of her. \"You're mine, Beth. Mine for always. I'll never let you go.\"\n\nShe wrapped her arms around me, her hips still driving against me, coming on my cock again. \n\n\"Good girl,\" I cooed. \"Come for Daddy. Come on my hard cock.\"\n\nShe whimpered adoringly, reaching down and grabbing my ass-cheeks, while she ground against me. I moved my hips, playing inside of her, giving her a series of short little thrusts. \n\n\"That's it, baby. My sweet young sex bomb. Who do you belong to?\"\n\n\"You,\" she gasped. \"Only you.\"\n\nI thrust into her hard. \"Whose pussy is this?\"\n\n\"Yours, Jack. Yours.\"\n\nI long-stroked her again, immediately setting her off. She'd never been so multi-orgasmic. \"Did I say you could come?\" I asked.\n\n\"I. Can't. Stop,\" she moaned.\n\nI sat up, pushing her legs back toward her chest, leaning into her and fucking her steadily. I lowered my hips so my cock was rubbing against the top of her pussy. \"Hold your legs, gorgeous,\" I told her, grabbing her hips and tilting them upward aggressively. I reached down and rubbed her clit, while she squirmed under my touch.\n\n\"Can you come for me, baby?\" I asked her, feeling that she was on the verge again already.\n\nShe nodded. \"Whenever you let me,\" she gasped. \"Soon, please.\"\n\nI heard the door open behind me and moments later Debbie was sitting on the edge of the bed, caressing Beth's tits. \"You have her pretty wound up, don't you?\"\n\n\"She's amazing tonight,\" I answered, steadily screwing Beth, as if her need to come didn't matter.\n\n\"Please, Jack!\" Beth moaned.\n\nDebbie stood and whispered to me, \"Bring her down easy, she needs some comforting.\"\n\nI remembered Beth's plea to be loved like Debbie. This wasn't what she'd been asking for. Debbie headed to the bathroom and I heard the bathtub start to fill.\n\nI leaned over dear young Beth. \"Come for me beautiful, let me see your surrender.\"\n\nShe cried out, thrusting back hard against me, and came mightily, her body once again out of control. I settled onto her, letting my bodyweight pin her down, while she moaned and squirmed.\n\nI pushed deep inside of her, then held her head in my hands until the wild look in her eye disappeared. \"Shhh, Beth. Relax for me,\" I whispered.\n\nHer breathing slowed and her body stopped quivering. I ease myself in and out of her pussy easily. \"That's better. Relax. Be here with me. Nothing but you and me.\" I slowed my motion, taking several long seconds for each easy stroke. I kissed her softly.\n\n\"That was crazy,\" she finally managed to gasp.\n\nI smiled. \"I think you needed to get that out of your system. Now we can spend some quality time together.\"\n\nShe giggled. \"If that wasn't quality time, I don't know what is.\"\n\nI had to laugh with her. \"You win that argument. Let say we could use some intimate time together.\" I emphasized our continued connection below the waist. \"This is Ok, right? Nice and easy?\"\n\nHer grin returned, and she pulled me down for a kiss. \"More than Ok. Perfect.\"\n\nI leaned my forehead against hers, stealing a quick peck. \"This is good. A chance for us to chat a bit, without either being surrounded by an army, or investing all of our energy in sex.\"\n\nShe wiggled underneath me, with a sly smile. \"If you'd told me that sex could be relaxing, I would have thought you were nuts.\"\n\nI nodded. \"Tell me about your schooling,\" I said softly.\n\nShe looked at me funny. \"Really?\"\n\n\"Please.\"\n\nShe smiled. \"Can we switch? You're getting kind of heavy.\"\n\nI rolled off of her, and she settled back down on my cock, getting comfy. I pulled the sheets up over us, and held her while we developed a gentle rhythm, our hips doing all the work. \"Better?\" \n\nShe grinned. \"For talking. What do you want to know?\"\n\n\"Why GW, how do you expect it to work out, why not Florida? How good are you?\n\n\"Let start with the last one first,\" she answered, while I held her tight little ass. \"My swim club's among the best, and I'm good. Really good. Twice NCSA Juniors finalist. In breaststroke, I'm among the top 50 high-schoolers in the country. In the 200 yard IM, I'm in the top 20. Maybe top 10.\"\n\nI was a little stunned by her admission. I had no idea. \"I imagine you were recruited pretty heavily.\"\n\nShe nodded, resting easily on me, while I played around inside of her, just a little. \"Mmm. This is nice, Jack,\" she said softly. \"Yeah, most of the big programs showed interest. I'm good for a team, very competitive in all strokes. Great for relays.\"\n\n\"What are the big schools?\" I asked.\n\n\"Oh, you know. Florida, Cal, Texas, A&M, USC, Georgia, the usual.\"\n\nI had to laugh. \"I don't know the usual. I don't know anything about this stuff.\"\n\nShe wiggled sweetly, drawing me deeper. \"There's a lot of good schools in this area. Not quite the same caliber. Maryland and UVA are just a hair from the top. American, George Mason, GW, Georgetown, and James Madison all have good Division 1 teams.\"\n\n\"Why not Florida?\" I asked, holding her still for a moment while I caressed her.\n\n\"It was tempting. So was Texas A&M. If I wanted to define myself as a swimmer. But just think, I can go to Georgetown, GW or American on a full-ride scholarship, and be their big star. I'll just be a team player at one of the big 8.\" She nudged me with her hips, raising up a little, so I could poke her a little more. \"Only Stanford has that kind of academics, maybe Harvard, and 4 years from now, when my swimming is recreational, a big name degree goes a long way.\"\n\nI laughed a little, raising her hips and thrusting into her harder, getting a sweet little gasp. \"My little bed-bunny is a jock and a brain.\"\n\nShe ground against me. \"You got a problem with that?\"\n\nI smiled for her, pulling her down for a nice long kiss. \"No problem at all. I think it's amazing. I think YOU are amazing.\"\n\nDebbie slid into the bed next to us, smelling sweet and fresh. \"You guys having fun?\" she asked.\n\n\"Always,\" I told her. \"Did you know she was such a swimming star?\"\n\nDebbie laughed, leaning in and kissing me on the cheek. \"Of course. Everyone knows. One of the top 20 IM times in the country last year. Once the competitions start up in September, you're going to have to give her a rest now and then. These all night love-fests are a little taxing for a star athlete.\"\n\nBeth pulled out of my arms, sitting upright. \"Are you kidding? My best backstroke all year came the day after he pounded Amy and me all night! Coach asked me what I was doing to improve by a full two seconds, but there was no way I was going to answer that one.\"\n\n\"So no regrets staying local for swimming? It's not because of us?\" I asked, trying to keep the conversation serious.\n\n\"None. I made the decision over 4 months ago, no matter what my father thinks. My coaches are aboard 100%, although Coach Allen thinks Georgetown would have been better than GW. Coach Williams was pulling for UVA, which keeps me pretty close, very good academics, and a top 10 team.\"\n\nDebbie was cuddling close. \"You should Google her sometime. She was all over the sporting news, choosing a Mid-Major over a top program.\"\n\nI pulled my little swimmer down and put her on her side, facing Debbie. I lifted her leg, and Debbie reached between us, guiding me back into our bed-mate. \"Is that Ok?\" I asked Beth.\n\n\"Such a silly question. You're dick inside of me, while I get to gaze on our gorgeous roommate? Give it to me, Jack.\"\n\nI held her in my arms, screwing her more diligently. \"What's going to happen when school starts? Don't you have to live on campus?\"\n\nShe sighed. \"I have to have a campus room. Doesn't mean I'll be spending much time there. It's only required for the freshman year.\"\n\nI nuzzled her neck, while Debbie scooted in closer, kissing Beth's forehead, and running her hands over our teen's sweet body. I nibbled her ear. \"Beth, this is your future. I'm behind you all the way, whatever you need for the foreseeable future.\"\n\nDebbie tilted the girl's chin up and kissed her. \"We're behind you, completely.\"\n\nBeth's breathing was noticeably faster, responding to my increased attention. \"Things may get crazy come September. I'll be spending 4-6 hours a day swimming,\" she answered breathily.\n\nI lifted her leg higher, driving into her deeper and harder. \"Whatever you need, we'll work around it,\" I assured her.\n\nShe groaned, pushing back against me. \"Right now, this is all I need,\" she sighed.\n\nI left her on her side, but sat up, straddling her lower leg, and pounded into her. I caressed her muscular, tanned leg, kissing the calf of her leg I was holding upright. \"I need to come soon,\" I whispered to her.\n\n\"Fill me, Jack,\" she replied.\n\nI grabbed her leg just above her hip, and pulled her back against me, thrusting manically into her, the wonderful feeling driving me to my own imminent finish. With a groan I filled her, exploding within her tightness.\n\nWhen my spasming ceased, I pulled out of her, and Debbie moved down to take my softening cock in her mouth, cleaning me. Beth rolled away from us, onto her back, giving me room to settle in between my girls. After a short while of Debbie's loving attention, I reclined between the two. \n\nBeth climbed out of our bed and hit the bathroom, while Debbie slid into my arm. \"Have a nice chat?\" she said with a teasing smile.\n\n\"Actually, yeah. It was good.\"\n\nShe kissed my side. \"I'm glad. She's not your average girl, Jack. You need to get to know her better.\"\n\nI lifted her lips and kissed them. \"I want to get to know the both of you better. Living in the moment is great, but I've been thinking about our future. About a lot of things.\"\n\nShe shivered, and I pulled her close. \"This is for good, right? This thing between us. I never want it to end. I only want it to get better.\"\n\nShe gave me a hug. \"That's your call, Jack. I'm yours. Completely, totally, heart and soul. You have to decide what you're going to do with me.\"\n\nI heard Beth call out from the bathroom. \"What have you done to me Jack? I can't pee.\" She moaned. \"God, I have to go so bad, and I can't.\"\n\nI laughed softly, and climbed out of Debbie's arms, going to my problem child. I squatted beside her, taking her hand in mine, and giving it a squeeze. \"I think it's the squirting. It's going to take a minute or too for your body to revert to doing things the old way.\" I kissed her on her shoulder. \"Relax, don't think about it. Look at me.\" \n\nShe turned to look into my eyes. \"This is a little weird.\"\n\nI laughed. \"Weird? Peeing with me here? God, Beth, what part of your body is a stranger to me? I love everything about you, you know that. Peeing is natural. You make a mess, we'll clean it up. No problem.\"\n\nShe giggled, and I heard a little tinkle from between her legs. I squeezed her hand, \"Good.\"\n\nShe lowered her face, blushing, as the tinkle became a steady stream. \"I'm still embarrassed,\" she said softly.\n\n\"That's Ok, too.\" I tilted her head up. \"I want to kiss you now.\"\n\nShe was still peeing. \"Now?\"\n\nI turned her face to mine, and kissed her softly. She was slow to return the kiss but was soon as in to it as me. I heard the stream slow then stop. I reached across her and pulled out some of the toilet paper, tearing off several sheets. I held her chin in my hand, and gazed into her eyes, while I reached between her legs and dried her.\n\n\"You don't have to,\" she said softly.\n\n\"Of course not. You're a grown woman.\" I leaned forward and kissed her softly. \"I wanted to.\"\n\nShe smiled shyly. \"I probably should dry a little more,\" she whispered, parting her legs.\n\nI rolled off some more paper, folding it. I moved my hand between her legs. She whispered. \"Pat, don't wipe.\"\n\nI patted her dry, then helped her off the pot. She laughed. \"You are a little weird, you know?\"\n\nI nodded my head, giving my hands a quick wash under the faucet. \"What gave me away? It wasn't the two stunning women sleeping in my bed each night, was it?\"\n\nShe gave me a big hug from behind. \"Yeah. That was it.\"\n\nWe returned to the bed to find Debbie finishing changing the sheets. \"If you guys are going to keep playing, use the pullout. My spot was soaked.\"\n\nI pulled the covers back onto the bed, and jumped in, opening my arms so my girls would come to me. I don't think I love anything more than that feeling of holding the two of them, just before going to sleep. \n\nBut there was one more thing I wanted to cover, before sleep. A little something I'd promised a friend to go over.\n\n\"You girls know that Joe shoots blanks, right?\"\n\nThey both murmured their assent. \"They want to have another kid. Cathy wants me to be the father.\"\n\nI felt them both tense up. \"You're kidding, right?\" Beth asked.\n\n\"No, I don't think she is. I told her I had a problem with it. It would be too weird for all of us, but she wanted me to ask you guys if it was Ok.\"\n\nDebbie's voice was very steady. Calm. \"Do you want that? Do you want to have babies? Do you want her carrying your child?\"\n\n\"I never thought about it until she asked. When she first mentioned it, I thought it was kind of exciting, but now that I've had time to think about, I've been having second thoughts. I know I want to have kids some day, but the idea of my first child being theirs is difficult.\"\n\nBeth nodded. \"Weird. Better her than me, I guess. I don't see myself winning any swim meets with a huge belly. I'm going to have to wait a few years.\"\n\nI had figured as much. Debbie was the real issue. \"What do you think, Debbie?\"\n\n\"I'm afraid this is going to sound selfish,\" she said softly.\n\nI gave her a squeeze. \"Nothing in the world is as important to me as you two. I want you to be honest. Please.\"\n\n\"If anyone is going to carry your baby, Jack, it should be me,\" she said softly. \"It would kill me to see her getting big with your first child. I would hate it.\"\n\nBeth crawled over the two of us, cuddling up behind Debbie, sandwiching her between us. \"She's right Jack. If you have a kid, it should be ours.\"\n\nI chuckled. \"Easy for you to say, it wouldn't be your belly getting big,\" I teased.\n\nBig mistake.\n\nShe glared at me. \"You think it's easy for me to say someone else should be the mother of your child, even if it's Debbie? Don't you know I fantasize about what our kids will look like? How many we'll have? If the boys will be like their father? Don't tell me it's easy!\"\n\nHer words surprised me. I didn't know she thought about things like that. She was just 18, not even in college yet. I looked at Debbie. \"Do you think about things like that? About having children with me one day? What they'd be like?\"\n\nShe nodded. \"Every day.\"\n\n\"And that doesn't scare you? Doesn't make you nervous?\" I asked hesitantly.\n\nShe sighed deeply. \"A little. What you'd be like when my belly got big. If you'd still want me like you do. If I'd become the last in line at bedtime. Whether you'd still want me at all.\"\n\n\"Are you nuts?\" I asked sharply. \"How could I want you less if you were carrying my child? Knowing the bump between us was our baby? God, that would be incredible.\" I ran my hand over her smooth belly. \"It's the only way you could ever be more beautiful than you are now.\"\n\nBeth was grinning. \"Can you imagine how pretty she'd be with that baby glow? Shit, it's totally unfair.\"\n\nMy hand was still caressing Debbie, gently rubbing that belly we were discussing. \"Would you want to? Carry my child? Make a baby with me?\" Saying the words gave me goosebumps.\n\nDebbie looked up at me, her eyes moist. \"There's nothing I want more than to have your son,\" she said. \"Nothing. The thought alone makes me tingle all over.\"\n\n\"What about marriage? I can't marry both of you, as much as I wish I could.\"\n\n\"I don't care,\" Debbie said. \n\n\"Marry her,\" Beth said. \"I don't care. I'm still in school for at least 4 more years. Afterward we can work things out.\"\n\nDebbie turned and hugged Beth. \"Don't listen to her. She's the one you should marry. I've already told myself I'd never get married again. I mean, really, the first one didn't even last the length of my pregnancy. She should have a chance for a little normalcy.\"\n\nIt was all happening so fast. I looked at the two girls, and envisioned a family with both of their kids, little girls looking like their gorgeous moms, little boys a mix of us all. Young Erin as an older doting sister. \n\nBeth poked me. \"What? What's the big grin about?\"\n\nI smiled, reaching for her and dragging her on top of me, while I pulled Debbie in close. \"I was picturing our family. The three of us and ankle biters everywhere, with Erin complaining she hadn't signed up for being the big sister to a mob.\"\n\nDebbie was kissing my neck. \"Have we scared you away yet?\"\n\n\"Impossible. Would you really do it? Be the mother of my children?\"\n\n\"What are you asking, Jack?\" Debbie asked softly.\n\n\"Have my baby. Babies.\"\n\n\"This is a big step,\" she said softly.\n\n\"You said you were mine totally. It was up to me. Let me get you pregnant. Carry my first-born.\"",
        "Beth slid off of me, and pulled at Debbie who took her place. \"If that's what you want, I could never say no to you,\" Debbie said softly. \"I'd love it.\"\n\n\"Get off the pill.\" I told her firmly.\n\nShe smiled. \"I have, as of now. I only had one pill left in this pack anyway.\"\n\nBeth was giggling. \"This is going to be so cool!\" She leaned over and kissed my neck. \"For now on, no coming inside me. Every load goes into her until she's knocked up. She's going to be drowning in your spermies.\"\n\nOf course Beth insisted we start practicing immediately, particularly with Debbie already in position, perched on top of me. \"Enjoy the top ride, Deb, since you won't be seeing that upright view anymore,\" Beth teased.\n\nAfter dropping a practice load a little while later, I rested, holding my girls, thinking about what the changes in my life were going to be.\n\nDebbie laid against me, hugging me drowsily. \"Let me talk to Cathy,\" she said softly. \"I'll work things out, Ok?\"\n\nI gave her a squeeze and a butt fondle. \"Of course, if that's what you want.\"\n\n* * * \n\nMy day started early, with Amie dragging me out of bed for an early morning run. Beth was already gone, but Debbie was still in bed. It was odd getting out of bed before her, she was such an early riser. \n\nThe run went better than expected. Still not much chance of catching Amie, but I was able to run the whole distance at a decent pace. It was hard, but felt good. I was hoping for some playtime with my running partner, but work was calling for her, so I got cleaned up and went to the office early.\n\nI decided to go home for funch. I found an empty house, and headed out back to see how the day-care was shaping up. I learned they'd picked up another kid, up to 9, and starting to get close to where the effort would be profitable. The kids were getting fed, but Debbie made some time for me, joining me outside.\n\nAs soon as we turned the corner I drew her into my arms, kissing her warmly. \"Are you having any second thoughts?\" I asked.\n\n\"About last night's discussion?\" she replied quietly.\n\n\"Yeah. About that.\"\n\n\"One. After reading up a bit, it looks like a I should finish off my pill series. I won't be going off of it until tomorrow.\" She flashed me a teasing little smile.\n\n\"Feeling up to a little practice?\" I asked, reaching down and cupping her ass.\n\nShe gave me a hug. \"Don't get me wrong, I love these little surprises. But it is a surprise, and I already promised Cathy I'd join her for a short lunch to talk about things. Baby things.\" She gave me a kiss. \"If you'd given me even a hint of notice, we could have worked around it.\"\n\n\"Understood. I'll keep the complete surprises to a minimum. I guess this means Beth is going to be extra busy, with you out for a bit.\"\n\nShe nodded. \"Beth and Amie. But you might try Robin. It is her last week after all. I bet she'd love a little lunch surprise.\"\n\n\"Robin's not around.\"\n\n\"She should be back soon. She had to meet a potential customer at the warehouse, so she borrowed Beth's car. Said she'd be back by noon.\" She slid out of my embrace, taking my hand. \"Come on, I'll make you a quick sandwich before I have to go.\"\n\nI couldn't help thinking if we had time for a sandwich, we had time for a quickie, but I didn't push it. Debbie pulled together a nice little lunch for me, and gave me a quick peck after putting it on the kitchen table. \"I really do have to run. I'll make it up to you tonight, I promise.\"\n\nI didn't even get a reply in before she was out the door.\n\nI managed to finish about half my sandwich when I heard Robin come in through the front door. After all the big 'welcomes' she'd given me, I figured it was time to turn the tables. I hurried out to the entrance, and scooped her into my arms, getting a wonderful laugh for my effort.\n\n\"What are you doing home?\" she asked, wrapping her arms around me neck.\n\nI carried her to my bedroom, depositing her on the bed. \"Finding some private time for us.\" I leaned down and kissed her.\n\n\"Just us?\" she asked, sounding surprised.\n\n\"Us. You and me.\" I was working her clothing off, with her willing assistance, and once I had her naked I climbed between her legs, for a little oral worship.\n\nOnce I had her squirming nicely, I stripped and climbed on top of her, opening her legs. She stopped me before I could enter her. \"How much time do we have?\" she asked.\n\n\"I figure about 40 minutes,\" I told her.\n\n\"Can we spare 5 minutes to clean up? I need to go to the bathroom, and I want to be fresh for you.\" She wasn't even waiting for an answer, climbing off the bed. I heard the shower turn on, and wondered if it was possible for any woman to clean up in 5 minutes. Not from my personal experience.\n\nShe surprised me, returning from the bathroom as quickly as she did, her hair still moist after towel drying. \"I'm sorry, but unless I'm clean I feel uncomfortable, unable to surrender myself completely. Now I'm 100% yours.\" She dropped her head into my lap, taking my soft cock between her lips, ensuring it wouldn't be soft much longer.\n\nOnce she had me hard, I let her ride me for a while before taking over. \"Use me, Jack,\" she begged. \"Any opening. Fill me with your cum.\"\n\nI was still surprised how worked up I got for this crazy girl. We hadn't been going at it 5 minutes, and I was already feeling close. I was on top of her, pounding into her, kissing her. \"God, you drive me crazy Robin! I can't believe I'm almost ready to come,\" I gasped.\n\n\"Let me suck it out, Jack,\" she pleaded sweetly.\n\nI rose up on my knees and she spun around, her mouth stuck to me like a leech moments later. She gave me her best, fast and deep, and was rewarded with a mouth-load.\n\nShe kept working at me, gently at first, then more aggressively. When she had me fully resurrected, she spun around on her hands and knees, offering her backside. \"Fill one of 'em,\" she teased.\n\nI started back in her pussy, toying with her back-door, while I plumbed her depths. With my first one out of the way, I figure I'd be able to play a while. \n\nShe was pressing back against me. I stopped my motion and let her fuck herself, rocking back and forth. \"Fuck that pussy, Jack. Fuck it. Tame it. Make it yours.\"\n\nI took over, fucking her hard, my thumb buried to the root in her ass. She was making beautiful noises of pleasure, groans and whimpers, sweet cries, half-spoken words. I was riding her too hard to talk, enjoying her. Normally I liked to screw in a variety of positions, but everything about the moment was perfect, and the feeling of being inside her was too good to change.\n\nI felt her come for me, but it didn't matter. With Robin, her orgasm was an afterthought. If she came, great. If not, there was always next time. The important thing was for me to get my rocks off, and enjoy myself doing it. \n\nI must have pounded her like that for at least 15 minutes. If I could have bottled up the feeling and sold it, I'd be a billionaire. So often I was concerned with coming too soon, or making my partner feel good. With Robin it didn't matter. I wasn't trying to hold back, but I was in a zone, a perfect fucking machine, with the ideal receptacle for the job. She conformed to my need, raising her ass as needed, tucking her head down, pushing her hips back. I pushed her onto her belly, leaning over and fucking her desperately, driving her into the mattress. \n\nShe came again for me, how many times I couldn't count. I pulled her hair back and to the side, to see her cute face, in the throws of orgasm. Her eyes opened wide, mouth gaping. \"Use. Me.\" She gasped.\n\nI was close, so close. I pulled out and roughly turned her over, pushing her legs back to bracket her head. She helped me, tucking her legs behind her shoulders, bent like a pretzel, pussy exposed. I rammed my aching cock back inside and long-stroked, bottoming out on each stroke. \"Punish it,\" she gasped. \"Pound that pussy.\"\n\nI leaned over her, hands behind her neck, pulling her toward me as I hammered her until my hips hurt from the impact. \n\n\"Perfect,\" I gasped. \"You are the perfect fuck.\" I slowed a bit, still pounding deep, the finish only moments away. With a loud growl I erupted inside her, my cock buried completely, pushing against the back of her pussy, while I poured out my juices for what seemed an eternity.\n\nGasping for air, I knelt upright, watching while she released her legs from what must have been an uncomfortable position. I leaned over her, feeling those slender legs wrap around me. I pushed back inside her, while some of my hardness remained. Looking down I saw tears in her eyes.\n\n\"God, Robin! Did I hurt you? I'm sorry, I couldn't help myself.\" I reached out and brushed the tears away.\n\n\"Hurt me? Never. That was wonderful. Your need for me, making me come for you without a care, taking me completely. It was perfect. All perfect.\" She looked over at the clock, and we'd already run over by 10 minutes. \"Sure you have to leave? I have one more hole you could abuse to your heart's content.\"\n\nI kissed her softly. \"I do have to go. A meeting in less than 1/2 an hour. We'll take care of your sweet ass later.\"\n\nShe pouted prettily, then pushed me off of her, so she could clean me up with her mouth. She had me half-hard when she finally pulled away. She bounced off the bed, getting my clothes together, and helping me dress. It probably took longer with her help, but I wasn't going to complain. I loved every minute of it.\n\n\"Thursday. Open up your afternoon. I'm not going back to work after lunch, and I expect to find you in my bed, clean, naked and ready for action by 1:00 pm.\" I told her, pulling her into my arms for a goodbye kiss.\n\nThe smile she wore was dazzling. \"Really? All afternoon?\"\n\nI nodded. \"I'd make it all day, but I have a morning conference call with Spain I have to take.\"\n\nShe hugged me tightly, then pushed me away. \"Go. Before you're late. I don't want you getting in trouble on my account.\"\n\nI gave her pretty tits a last squeeze, before going. \"Thanks, Robin. That was incredible.\"\n\nShe grinned. \"I know, right? We're good together. If the girls don't mind, we can do this regular, even after I've moved out. If you want.\"\n\n\"I want. Don't let it mess up what you've got going with Ron.\"\n\nShe held up her hand, wiggling her fingers. \"Until he puts a ring on it, I still own this body, and you're a paid up, life-time member with free access to all rides.\"\n\n\"Better than Disney World.\"\n\n\"Isn't it? And no lines. Not for you, Jack. Now stop delaying and get your cute ass in gear. See you later.\"\n\nI stole a last kiss, kicking myself for waiting so long to bring her fully into the fold. \n\n=============\n\nNew plans, new changes, everything going so smoothly. How long before they hit another bump in the road?"
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "threesome",
        "oral",
        "anal",
        "massage",
        "slut",
        "squirting"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/cvsn-29-so-long-sisters"
}