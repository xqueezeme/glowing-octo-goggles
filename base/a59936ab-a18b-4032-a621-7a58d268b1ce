{
    "title": "E-Written: Elle 02",
    "pages": [
        "Mike watched his step daughter shuffle into the kitchen and get a poptart out of the cupboard, then shuffle back. She hadn't showered at all, or hardly come out of her room in weeks. She had intended on going to Houston early to get a job, but as far as he knew, she wasn't even going to go to college anymore.\n\nSince the day he had picked her up, covered in blood and looking half out of it in shock, she had hardly spoken at all. He couldn't say anything to her, he had just lost his job out of the blue. 'Cutbacks' that didn't affect a single other person in the facility, just him. The income from her estate was all that was keeping them in the house. He had been loath to mention it to her, having been her guardian and executor of her estate, he had never once mentioned to her that she even had an inheritance. He would have to when she moved out, but if she didn't...\n\nHe had secretly been overjoyed when she disappeared, having a good excuse as to why he hadn't handed everything over to her. Now he had just as viable an excuse, she was in no state to handle it. Whatever had happened to her had clearly unhinged her.\n\nAnna came out moments later. \"Daddy, my card still isn't working and I need this purse! Can I use yours again?\"\n\n\"Have you called to see why yours isn't working?\" he asked irritably.\n\n\"No, I've been busy. Some weird glitch online happened and I got locked out of all of my social media. I had to make new everything and I have been trying to regain my followers. Can I get it, Daddy?\"\n\n\"This is the last one. Call today and see why yours isn't working.\"\n\n\"Thanks Daddy!\" she cried happily, running back to her room.\n\nMike looked and Elle was in her doorway, looking at him numbly. \"Are you alright?\" he called to her. \n\n\"She thinks her social media accounts were all accidentally deleted all at the same time, and at the same time as her credit card? Has she called her bank? Have you? Does she have an account anymore, or were those deleted too? How long has she been just using your card?\"\n\nMike felt his face go red with anger as he blustered. \"She can use my card if she wants to! That's no concern of yours!\"\n\nElle just dropped her eyes and slipped into her room, shutting the door. \n\nMike immediately began calling the bank to find out what was going on.\n\nElle sat down on her bed, wondering if Anna was really that stupid. Who didn't realize they had been erased? Even if it was summer break.\n\nShe looked at her half packed bag that had been there since before the conference. She had started packing to leave for Houston, to get a job before school started. Now she felt like school was a little ridiculous. \n\nShe made herself sit up. Was she going to hide in Mike's house the rest of her life? Put up with his glowering looks every time she poked her head out?\n\nShe went through her clothes and went to take a shower, the water washing away some of her dark mood. It had been weeks and no one had come for her. No word at all, not even a phone call. Anna had still had her phone and wallet, she had tossed them in her room when she got home that first night after Elle had disappeared. \n\nMaybe he was dead and no one was looking for her? Maybe he was letting her go. Maybe he was in the hospital.\n\nEvery scenario had gone through her mind over and over again. Even being dragged away by the police for murdering him. \n\nShe went back to her room, drying her hair on the way and Mike stopped her. \n\n\"You have mail here, it's been stacking up.\"\n\nShe paused and looked at the stack, then went through it, tossing most of it. She paused at one of them, staring at it.\n\nLenotre. \n\nShe turned it and opened it slowly, her hand shaking. Acceptance, tuition paid in full for the culinary arts program. Class schedule. Everything.\n\nEnraged, she ripped it in half, then again and again before flinging it at the trashcan. She fled to her room and finished packing, then got online to find a job near the dorms and a bus ticket. \n\nIn two days, she was on her way out the door, her bags in tow when Mike stopped her.\n\n\"Elle, we need to talk.\"\n\n\"My Uber is here, is it important?\"\n\n\"Kind of. It's about what your mom left you.\"\n\n\"What my mom left me? My mom had nothing.\"\n\n\"She had insurance, and she inherited her parents estates which fell directly to you since she was gone.\"\n\n\"What? I had grandparents?\"\n\n\"They were estranged.\"\n\n\"When did they die?\"\n\n\"A couple years ago. Your grandfather seven years ago, your grandmother two. Do you... remember your freshman year I think it was? The older lady who came over for dinner and asked you all those questions?\"\n\n\"Mirriam, I remember.\"\n\n\"That was her. She didn't want to upset you and say who she was since you thought she was dead, but she wanted to see you. I let her because... it was a condition she put in her will. I am your legal guardian so I am in charge of all of that until you move out. It's usually 18, but since you turned 18 during your school year, the wording was changed.\"\n\n\"How come you never told me?\"\n\n\"I never discuss business with either of you girls.\"\n\n\"But I could have just paid for school and done what I wanted to! I didn't have to do something I hate to get a scholarship!\"\n\n\"It was my prerogative and it was a valuable lesson for you about working hard for your dreams.\"\n\n\"Right. As my guardian, how much did you get to take care of me? All this time I thought you were just being as nice as you were able because of my mom. How much, Mike?\"\n\n\"That doesn't matter. All that matters is now that you are moving out, we need to find a new solution. I am still your guardian and still keeping a room here open for you, so I feel like I am...\"\n\n\"You are what, Mike? Entitled to it? After how you have treated me, you and Anna? Is this how we are living here in this neighborhood when the other people you work with live in middle class suburbia? Is that how you moved us here?!?\"\n\n\"Elle, I wanted a better life for you, a better place.\"\n\n\"A better place! Seriously? You gave Anna two bedrooms with the master for yourself and me the little office nook and the whole time it was coming out of my inheritance? You have some fucking nerve telling me about what you are entitled to, Mike! Fuck this,\" she snapped. She dropped her bags and pulled out her phone and called her old guidance counselor from school, one of her two friends in the world. \n\nWithin 48 hours, she had a lawyer and charges filed against Mike, forcing him and Anna out of the house to stay with his mother. \n\nThe rest she could take care of from Houston. She had a job lined out and she kept it since it seemed Mike meant to keep her inheritance tied up in court. She cared less about getting it and more about keeping it out of his and Anna's hands. Hateful, hurtful people. She found a cheap car and basically lived out of it for a couple of weeks as she worked as many hours as she could get, then found a temporary roommate until college started and she could move in the dorms. \n\nShe liked the little coffee place she was working at and she liked her coworkers, even if it did take time to get used to being around people again and not being afraid every time she turned around and someone was there. \n\nBy the time school started, she felt comfortable in her job and in the area, but was less happy about the dorms. She liked her quiet, goth, wiccan roommate at the little apartment a lot more than she liked the bubbly cheerleader she was sharing a room with. She reminded herself she was also a cheerleader, but the thought of getting in front of massive crowds and smiling made her want to puke. \n\nWhen practice was getting ready to start, she considered not going. Quitting that and college and working until she could put herself through culinary school.\n\nOnce the idea occurred to her, it stuck and she did it. She moved back in with Luna and worked full time, excited to have a plan. As soon as she saved a few hundred dollars, she went to the local tattoo place and went in, looking around. \n\n\"You need something?\" an older man asked darkly. \n\n\"Yeah, uhh, I need this covered,\" she said, showing him the snowflake over her heart.\n\n\"Wow, that's pretty big... and really good work. Why would you want to cover it?\"\n\n\"I just do. How much?\"\n\n\"Something that big? It would have to be bigger and I would have to draw up something around it to cover it with. Probably 14 to 18.\"\n\n\"Hundred?!?\"\n\n\"Yeah, babe. How much did that piece set you back? You had to know covering it would be more.\"\n\nShe sighed and left, then took a weekend off and drove back to San Antonio. It was easy to find Ricky's tattoo parlor and she stalked in Friday night, furious.\n\nHe recognized her right away as he stood up off the man's arm he was working on. He went pale as he looked behind her, as if looking for cops. \n\n\"I'll be right back, man, I need to take this,\" he said to the man. \"I'll discount you.\"\n\nHe went to the back to a curtain and nodded her back, but she hesitated. \"Out here,\" she demanded. \n\n\"It's cool, just back here out of the other customers way. Please?\"\n\nShe stepped back, crossing her arms. \"You are going to cover this monstrosity on my chest and you are going to do it for free.\"\n\n\"Yeah, yeah, no problem. I can draw something up and have it to you by next weekend.\"\n\n\"No. Before Sunday, I have work Monday I have to be back for.\"\n\n\"Sunday! There's no way, I am booked solid all weekend!\"\n\n\"Then I tell the FBI agents I have been working with about you and what you did to me. Right now they think I have no name or identity and I was drugged. You do this by Sunday or I tell them.\"\n\n\"Fuck, fine! What's a good number for you? I will draw some things up and send them to you. Can I see it again? Measure it?\" he asked.\n\nShe showed him and he put his hand on it, measuring against his palm. \n\n\"Wow, are you sure? It really does look amazing. Can I see the one on your hip?\"\n\n\"No, and yes, I am sure. I want his brand off of me.\"\n\nRicky nodded. \"Ok, I'll get on it, but seriously... there is no way I can have it ready and done by Sunday. Can you come back next weekend? Or even like, Wednesday?\"\n\n\"I have Thursday off, I can come back then.\"\n\n\"Awesome, cool. Thanks. I will work up something great, I promise you. You have anything in mind?\"\n\n\"Something opposite.\"\n\n\"Like the sun?\"\n\n\"Yeah.\"\n\n\"I can work with that. Ok, I will text you mock ups, ok?\"\n\nShe didn't answer as she scribbled her number and name down, then left. She was able to pick up shifts that weekend and get Wednesday off and she was both excited and terrified. It was going to hurt, but she would be rid of that constant reminder of that week of hell.\n\nTuesday she had clocked out, and was considering going to San Antonio that night when a woman stepped in front of her in the parking lot. \n\n\"Hello, it's Rainelle Brooks, right?\"\n\n\"Rainelle Lewis now, may I help you?\" Elle asked warily, looking up at the tall, leggy, beautiful blonde. She was perfect in a completely plastic way.\n\n\"Hello. I am Marjori Hallan.\"\n\nElle froze, shock ringing to her toes. \n\n\"I see you recognize my name even if you didn't recognize me. I wanted to speak to you, if you please.\"\n\n\"About?\"\n\n\"About my son. There is... something very wrong with him and I think you might be able to help me find out what. Can we speak privately, please?\"\n\n\"Ok...\"\n\n\"My car is right here,\" she said, gesturing to a limo as a man opened the door.\n\n\"Oh, no, no thanks. We can go inside at a booth or something.\"\n\n\"It really will only take a moment, you understand why I am upset, right? I need to know how to help my son. I don't want to be where those people might overhear, do you know what it would do to our family name?\"\n\nElle sighed and looked at the empty seat, then back at the woman who looked like she was in pain. She eased into the car and the woman followed, the man closing the door and getting in. \n\n\"Now, I understand you were a guest of his at the hotel we stayed at in San Antonio?\" she asked as the man put the car into gear. \n\n\"I don't want to go anywhere!\" Elle yelled, grabbing at the handle and yanking.\n\n\"Oh, dear, it stays locked if the car isn't in park, it's ok. I don't want to sit in the parking lot and anyway, my husband also wants to know what happened. Wynter has been beside himself and we don't know how to help him. He needs help, but he won't tell us what happened. Nothing. We looked into it and discovered you were his guest that week.\"\n\n\"Guest is not the right word. Prisoner. Captive. Rapee. Torture subject.\"\n\n\"Oh, dear, I am so sorry! We are going to get this sorted! I promise you! And we will get him the help he needs. I want to know everything, every single thing that happened, but I want you to tell my husband too. He needs to know all of this too. I don't know if he will sign the commitment papers if he doesn't hear it from your mouth.\"\n\nElle glowered at the woman, feeling like this was a little much. Would his parents hunt her down to commit their only boy? Wouldn't that tarnish their name? It would be worse if he hurt someone or himself, she guessed. Maybe the woman actually cared about him.\n\n\"Your husband is here in Houston?\"\n\n\"Yes, we have one of those Airbnb houses by the river, he is there.\"\n\n\"Why now?\"\n\n\"It is getting bad, we didn't know what else to do. Not since that week when he harmed himself the way he did. It is all we can do to keep him from killing himself.\"\n\nElle sat back. She knew, on some level, those words should have evoked a sympathy response, but she had none for Wynter. One less abusive asshole in the world. \"Where is he?\" Elle asked warily.\n\n\"A hospital back home. Sedated for now.\"\n\nElle let out a breath slowly. She had been afraid she was being taken to where he was. \"How far?\"\n\n\"Not much further. Cris?\"\n\n\"6 minutes according to GPS,\" the driver answered quickly.\n\n\"So, Rainelle, tell me about you. Wynter has said so little of that week.\"\n\n\"Because he is a kidnapping rapist. Who wants to tell people about how they tortured someone for a week? He tattooed me! Permanently. Pierced me. Raped me repeatedly, drugged me a lot. He's a psychopath.\"\n\n\"I understand why you would feel that way. My husband is going to be so upset to hear all of this, but he does need to hear it. Do you think you could write a statement and sign it? So we can have him committed more easily?\"\n\n\"Yeah... yeah, I can do that,\" Elle agreed, surprised. \n\n\"That will make it easier. Thank you and I am so sorry that happened to you, Rainelle.\"\n\n\"Elle.\"\n\n\"Elle. Thank you, Elle! Here we are, that is the house there, the glass one up on the hill by itself,\" she said gesturing.\n\nElle looked at the huge mirrored glass house that looked more like art than a home and stared. She was once again struck by the opulence of this family as they pulled up and stopped. \n\nCris opened the door and let them out and Elle followed the taller woman into the house, feeling small in her wake. The house was huge and open and the first thing Elle noticed was that it was definitely a smart house with panels everywhere and digital everything. It was monochromatic minimalist, like something out of a magazine.\n\n\"Ok, dear, I will get my husband, he is probably in his office having a drink. You go have a seat right through that door and we will be in, ok?\"\n\nElle looked at the far door across the room and nodded, heading towards it as Marjorie went the other way. She pushed the door open and went in, pausing at the view across from her of the river and the gardens behind the house. The second thing she saw, with confusion, was the bed.\n\nA bedroom?\n\nShe blinked and turned slightly, taking the bed and it's contents in. The black slinky dress, the single high heeled shoe, the diamond torque necklace and earrings.\n\nShe turned back to the door to leave and froze again, getting her second shock.\n\nWynter. \n\nHe was standing right there on the wall, a small black shoe in his huge hands.\n\n\"No!\" she whispered, her knees buckling. \n\n\"So much drama,\" he said calmly, standing off the wall. \n\nShe stared at his face, his perfect face. Nothing at all wrong with it. Had she missed? His eye was fine. Had she imagined it? Just bruised him?\n\n\"Hello, Elle,\" he said gently, stepping up to look down at her. He held the shoe up. \"You misplaced this last time we saw each other.\"\n\n\"You... you can't! You CAN'T! I saw you...\"\n\n\"Wow. That's all you have to say? No 'hi', or 'sorry I destroyed half your sight'? Did you miss me?\"\n\n\"No! NO! Get away from me!\"\n\n\"I missed you too. A lot. Tried to get over you, but that shit was not happening. I couldn't even get off anymore because it wasn't you I was fucking. How fucked up is that shit? Wasn't quite ready for you yet, had to improvise. Couldn't have you covering up my beautiful work. Still, I have everything I need to make it work.\"\n\n\"You... you got your mother to help you kidnap me?\" Elle asked incredulously.\n\nHe laughed. \"Fuck no. That was some actress. Driver is real though. Me and Cris go way back. See, if you knew anything at all about my family, if you had bothered once to look me up, see how I was doing? You would have known that wasn't my mom. That was my own little 'fuck you'. She doesn't even look like my mom. So you fucked yourself there.\"\n\n\"How did you know I was getting the tattoo covered?\" she asked, scooting back.\n\n\"I was having you followed. Also, Ricky called me the second you left. Nice lie about the feds by the way. Gretchen? Your boss? For a couple hundred a month, she keeps a live feed on you at work, gives me your schedule and tells me every single thing you tell her. She sold you out for two hundred a month, Elle. Bobby sold you out for fifty a month.\"\n\n\"You told him to hit on me, ask me out,\" she said numbly, shaking her head.\n\n\"Sure did. Why don't you get up off the floor?\"\n\n\"Just... back up...\" she said, shaking her head and moving back until her back was against the glass wall. \"You are why Ben quit?\"\n\n\"He was getting too close. You can have all the female friends you want, no guy friends. Same with Todd.\"\n\n\"Todd?\"\n\n\"The hot guy who worked there for like one week last month.\"\n\n\"I never even talked to him.\"\n\n\"But he noticed you. Was going to ask you out. I knew you didn't like Bobby, but I wanted him to fuck with you. Keep things normal so you wouldn't feel like no one liked you every time I got rid of a guy who showed interest. I was controlling everything, watching everything.\"\n\n\"Why? WHY? Why couldn't you just let me live my life?!?\"\n\n\"Because I can't live mine without you. Do you know how long I spent in therapy with the stupid transplanted eye? Learning how to see all over again? You owe me, Elle.\"\n\n\"I don't owe you anything! Not after what you did to me! You are out of your mind!\"\n\n\"Tone down the yelling,\" he said, turning and going to the bed. He bent and picked up the necklace. \"Come here.\"\n\n\"No.\"\n\n\"Elle, let's don't start on the wrong foot, ok?\"\n\n\"I said NO!\" I won't do anything you say! You are not ruling me with fear this time, I would rather DIE than give in to you!\"\n\nHe nodded, smiling and went back to her, kneeling down to put the necklace on her.\n\n\"No! I don't want that!\"\n\n\"I didn't ask,\" he shrugged, allowing the magnetic lock to pull it together behind her neck. He stood up. \"Come put on the dress, I never got to see you in it.\"\n\n\"No!\" she yelled, reaching up to yank the necklace off. \n\nHer body seized, every muscle locking up as the collar around her neck electrocuted her.\n\nIt stopped and she lay there whimpering and panting, her hand fluttering around the necklace.\n\n\"I wouldn't touch it again, it's pretty sensitive,\" he said congenially. \"That was the low setting by the way. Never touch it, never try to take it off. Don't go near either outside door with it, that setting will make you piss yourself. Come put the dress on.\"",
        "\"No.\"\n\n\"See this?\" he asked, lifting his hand and showing her the smart watch on his wrist. He touched it and tapped and she was locked up again, screaming on the floor. He let it go and the shock stopped, though it took longer for her body to stop trembling. \"I think you might be understanding that I am not fucking around this time, Elle. Now get the fuck up and put the dress on.\"\n\nElle writhed on the floor, her muscles not wanting to respond as she gasped and looked at him with wide eyes.\n\nHe cocked his head. \"Maybe the voltage is too much for you... you are smaller than me... I will give you a moment.\"\n\nElle only gasped for air, staring at him in horror and fear. \n\nHe moved closer and picked her limp body up off the floor. \"Fuck,\" he whispered, laying her on the bed. He went to the panel by the door. \"Cris, call Hew back, tell him the volts are off and he needs to come fix it right away.\"\n\n\"Got it boss,\" came the quick reply.\n\nWynter turned back to her and looked her over. \"The uniform does nothing for you, does it?\" he asked, moving around to take it off of her. He tapped something into the watch, then reached behind her neck and twisted the necklace, pulling the clasp apart and off of her. \"Hew will fix this. For now let's get you a shower so you don't smell like coffee grounds. Missed this tight little body... pissed as hell you took the piercings out, but I can get those redone easily enough. You know I already have four tats drawn out for you? You are my perfect little canvas, you really inspire me. Can you stand yet? There you go. I even missed this, showering with you. This shower is a lot better. This whole house is a lot better. Come on babe, hold yourself up. There you go! See, it's not so bad. Just don't fuck up, right? Do as I ask, don't try and get away. That's all. And don't try and fucking kill me again. That was completely uncalled for, all I wanted was for you to spend the summer with me!\"\n\n\"S-s-s.\"\n\n\"What?\"\n\n\"F-f-free. Just...\"\n\n\"Shhh. It's over. That's behind us now and we are going to move on. This is the new us. I have surprises for you, Elle. You are going to be so happy here!\"\n\n\"Nn-no.\"\n\n\"Of course we are. You just have to give in to the inevitable. Come on now, tilt your head back, let me wash your hair... Fuck your body feels good in my hands. I have waited so long to fuck you again, Elle. I wanted you in the dress, but... I can have you now and then both,\" he breathed, lifting her off the shower floor to plant her against the wall. \"Fuck, you feel how hard my cock is for you, baby? I haven't been able to get hard for fucking anyone, I haven't gotten off in months. Just twice when I dreamed of you and woke up and jerked off, holding onto the dream for just long enough. Mmm, I missed this tight little cunt,\" he groaned, shoving a finger into her.\n\n\"Nnnn,\" she managed, shaking her head jerkily. \n\n\"I know you missed my cock baby,\" he breathed, lining his cock up to her slit and easing her down the wall slightly before shoving up into her. \"Oooooh! Oh, FUCK, Elle!\" he yelled, then came, shooting into her as soon as he was all the way inside her. He fell against her, still holding her against the wall. \"Do you see what you have done to me? How much I have been thinking about you? Didn't last at all. Did you miss me that way? You want to come for me?\" he asked, still panting. \n\n\"Nnn,\" she shook her head.\n\n\"Fuck, babe. Are you fucking brain damaged? Look at me, are you ok?\"\n\nShe jerked her face away angrily, her body still jerking and trembling on its own.\n\nHe looked worried as he pulled her close and turned the water off, carrying her out and wrapping her in a towel before taking her out to the bedroom. \"Elle, look at me. Tell me you are ok? Please?\"\n\nShe looked away angrily, still shaking. \"Y-you don't c-care.\"\n\n\"Of course I care. Look at me. I care. You are all I have thought about, Elle. Even when I was hurting and angry about what you did to me, all I wanted was to have you back in my arms again. I just had to wait until I was healed and I had this place ready for us. I watched you, took care of you from afar. I just had to speed things up a little when you decided you wanted to cover my tattoo.\"\n\n\"Your brand. L-like I am something you own and you have marked me.\"\n\n\"No, Elle. Above your heart because I want to have your heart. It's ok, I know I am going to have to have patience with you, teach you, train you. Show you how I feel and give you time to feel the same. I have it all set up here to give us the time we need. And I have so much planned for us, Elle. I have made it so you will love it here!\"\n\n\"That will never happen. I will never stop trying to get away! I HATE you!\"\n\n\"You don't have to be so hostile. You seem better now, good. He will fix that so it doesn't mess you up that bad. I have a doctor coming soon to get you one of those IUD things, I know how freaked you are about getting pregnant. He knows what is going on, so you don't have to bother appealing to him, I am paying him a ridiculous amount of money. He lost his license to practice for opioid addiction, but he's still good at what he does and is happy to do whatever I need. Same with the maid. She doesn't speak english, but she still knows what's going on. I have her whole family here from El Salvador and put up in a nice place and I pay her well. Her four grandbabies included. Do you know what it means to her to have her grandbabies here and safe? Do you think one woman being spoiled by a man in a place like this will compare to keeping her family safe? My tech guy too. They all know. Even the chef coming to train you knows. That's one of your surprises by the way, I have a real chef coming here to train you.\"\n\n\"I don't want anything from you.\"\n\nHe laughed. \"I've missed you so much. Come on, get up and put the dress on for me now, I want to see you in it.\"\n\n\"I don't...\"\n\n\"Elle. Don't start this off wrong, really. I have been waiting for this, I want it to be perfect. I need it to be perfect. I need you, Elle.\"\n\n\"If you really cared about me you would let me go live my life.\"\n\n\"No, no. I will show you how good it can be. You will want to stay soon. I even got us a couples counselor so we can work things out and you can understand.\"\n\n\"Wynter... that's insane! You know that's insane, right? We AREN'T a couple! I HATE you! You KIDNAPPED me, AGAIN! I will never feel anything for you but loathing and fear, ever! You think having some fake therapist come in here and say whatever you pay them to say is going to sway me in some way? You are an idiot on top of crazy!\"\n\n\"Shut up! Shut up, Elle, that's enough. Stop being a bitch. All I want is to show you I am trying and I will keep trying. That's all you can ask of anyone, isn't it? That they try to do better?\"\n\n\"No! No, it isn't all I can ask. I can ask that you let me go and stop torturing me! Stop kidnapping me and raping me!\"\n\n\"Shut UP!\" he raged, clapping a hand over her mouth as he pressed her into the bed. \"Get it in your head that you are staying! You are staying and there is nowhere to go but ahead with me and you! Learn to live with it! Make the most of it! Learn to feel for me what I feel for you!\"\n\nElle stared up at him, seeing the feverous madness in his eyes. There would be no reasoning with him, not at all. She stayed still, forcing her body to relax under his grip until he let her mouth go. \n\nHe pulled his hand away slowly, watching her carefully as he did. \"Put the dress on,\" he ordered, letting go of her.\n\nElle got up and pulled the dress on, then the black lace thong she hadn't noticed laying next to it. She put the shoes on more slowly, watching him warily as she did.\n\nHe stood up and picked up the earrings, putting them on her before running his fingers through her still wet hair, fluffing it and arranging it to all over one shoulder.\n\n\"Perfect. I knew you would look perfect in it. I will bring in someone tomorrow to re-pierce you. Ricky is coming in Friday morning for the ink I want on your back. To start it anyway. It's a really pretty huge piece, kind of a crossover. Like a nordic tree of knowledge with the celtic style pattern in the roots just a little warped and skewed, transitioning into a magnolia blossom tree on top with one red and one blue blossom in amongst them. A few empty spots for if we ever have kids. Red for ruby since you were born in July and turquoise blue for turquoise since I was born in December. Cool, huh? It took me a while to draw up and get perfect and I wanted to start it first. He says it will probably take four sessions since it is so big and detailed. I had one of a beautiful little bird with little tufts like pom poms, then I found out how much you hated cheering and scrapped it. It was cool though, showing you as a flyer. I have more. A lot more. I thought I would let you pick the ones you like and let Ricky have the others.\"\n\n\"Wynter...\"\n\n\"No complaining, Elle, it's happening.\"\n\n\"I will try things your way. I will try to be happy here, I will try to work things out. All I ask in return is no more tattoos.\"\n\n\"I like the tats and I drew them. I like them on you and I want to see them on you.\"\n\n\"Can we compromise? I can get temporary tattoos done, they last for over a month if you are careful. You can draw them on me yourself, wherever you want, whatever you want.\"\n\n\"We'll see, but after the tree. I want the tree.\"\n\n\"Wynter...\"\n\n\"No arguments. I am compromising. The tree and then the others I will look into your temporary ones. That sounds kind of fun actually, drawing on you.\"\n\n\"And I don't want children.\"\n\n\"I know.\"\n\n\"You said you were leaving room for if we had kids.\"\n\n\"You might change your mind, a lot of girls do. No pressure. I am getting you the IUD, you can take it out when you want, or not. I would like kids someday, but if you say no, I will respect that.\"\n\nElle wanted to make a snide remark to that, but she made herself stay quiet. It was something, at least, that he was respecting her not wanting kids despite the fact that he did. That was progress for him.\n\n\"If I prove to you over the next couple days that I will try, will you reconsider the tattoo and just draw it?\" she asked pleadingly.\n\n\"No. Try and I will reconsider the rest of them. But you can at least look at the rest of them and see if there are any you like. There's another pinup girl for your other hip that looks more like you but with a knife instead of a spatula. Thought that suited you more. Cute blue polka dot dress and white apron like the blue dress you wore for me. It was the next one I was getting done after the tree.\"\n\n\"Can I get that one instead of the tree?\"\n\n\"No, but you can get both.\"\n\n\"I don't want any, but if I have to have one...\"\n\n\"The tree is non-negotiable. It's for me. Are you going back on your promise already?\"\n\n\"I was only trying to negotiate. Compromise. It's what couples do. If I...\"\n\n\"Boss, Hew is here,\" Cris called on the panel.\n\nWynter crossed the room and hit a button. \"Good, be right out. Is Iola here yet?\"\n\n\"No sir, she won't get here till 5.\"\n\nWynter turned and motioned to her to come to him and she started to wobble over in the high heels. He watched her struggle a few steps, then went to her and offered his arm. She took it, her cheeks turning red with anger as she did, looking away as if trying to hide it from him.\n\nHe led her out and she looked at the small, overweight man setting up a laptop and other equipment on the coffee table. \"You have it?\" the man asked without looking up.\n\nWynter handed him the necklace.\n\nHew looked up finally, looking her over, then nodded. \"You never said she was so small. It's an easy adjustment, won't take ten minutes. 70? 75?\" he asked Elle.\n\n\"73,\" she answered, her face flaming with rage. What sort of man had perfected shock collars for women? She wanted to scratch his eyes out.\n\nHew nodded, ignoring her as he laid the necklace out and plugged it into a device. \n\nElle looked over at Cris, sitting near the kitchen at the island in one of the tall stools. He had a book in his hands, but he was watching. Was he a bodyguard on top of a driver? She was thinking he must be. Hewas huge and he looked like a bodybuilder type thug.\n\n\"These are hurting my feet, may I take them off?\" she asked, turning to Wynter.\n\nHe looked down at her. \"They hurt a lot more than my feet, I think you can stand it for a few minutes.\"\n\n\"Then can we sit down?\"\n\nHe sighed and moved her to the couch, sitting down next to her.\n\n\"She's stunning,\" Hew offered, looking over her again. \"If you get tired of her, I know some guys who will pay great money for her.\"\n\n\"Do I look like I need money?\" Wynter asked. \"And I am not going to get tired of her. I am going to marry her.\"\n\n\"Nice. Congrats,\" Hew said happily, as if he hadn't just offered to help sell her.\n\nElle was staring at Wynter, her mouth open. He glanced at her. \"What?\"\n\n\"Marry?\"\n\n\"Yeah. Of course. Why do you think you are here? I mean... I guess I hadn't got to that part yet, but yeah. We are getting married.\"\n\n\"That wasn't part of the deal!\"\n\n\"I mean, it doesn't fall outside of the deal. You said you would try.\"\n\n\"To be your girlfriend! NOT your wife!\"\n\n\"It's basically the same thing, the difference is you share my name and not just a house.\"\n\n\"It's more than that! You can't just...\"\n\n\"Elle! That's enough! You don't get to argue any more. I'm about to be done with negotiating and compromising and going back to doing things my way. I won't be swayed on this, it's already a done deal. It happens on Tuesday. 10/10. I have your dress and everything, it's in the closet with your other clothes I got you. Just accept it and move on.\"\n\nElle deflated, looking around again. Could she make it to the door? Cris was too close to it, he would stop her even if Wynter didn't. \n\n\"Here we go, all done. Try this,\" Hew said, handing Wynter the necklace. \n\nWynter took it and turned to her, but she leaned back, shaking her head. \"You don't need that Wynter, I told you I would try.\"\n\n\"Insurance,\" he shrugged, snapping it around her neck.\n\n\"Try the lowest setting, make sure it's right,\" Hew said quickly, his eyes shining as he watched Elle with a leer.\n\n\"No!\" she begged, grabbing Wynters hand as he reached for the watch. \"Please, I haven't done anything wrong! Can't you just send for him if it's not right?\"\n\n\"I need to know now,\" Hew insisted. \"You don't want it to kill her if you aren't here to stop it, use a short shock to test.\"\n\nWynter pulled his hand free and touched his watch to activate it. Elle panicked and reached up to yank the necklace off before she thought about it.\n\nShe went to the floor as she locked up and Wynter had to pry her hands off of it before it stopped. She lay breathing heavily and staring at the leg of the coffee table as she shook.\n\n\"Elle?\" Wynter asked, turning her to her back.\n\n\"Don't touch me!\" she cried, starting a hiccoughing sob.\n\n\"Elle, you did that yourself, I was only going to tap it lightly! That didn't seem as bad though.\"\n\n\"Yeah, I think that is the right voltage for her. It won't mess her up unless she does something stupid that makes it lock on. Anything else? I still have those shock toys that you can insert for...\"\n\n\"No. Nothing else, I told you before I'm not into that shit. The only reason I am doing this is preventative, not to actively hurt her.\"\n\n\"Nothing makes a woman respect you like pain. You'll have her toeing the line real quick if you...\"\n\n\"I said no. Pack up your shit and go,\" Wynter said irritably, standing up and helping Elle up. He picked her up and carried her back to the bedroom, pausing at the door. \"Cris, call back when Iola gets here. I want Elle to meet her.\"\n\n\"Yeah boss,\" Chris answered, watching Hew with a scowl.\n\nWynter took her into the room and laid her on the bed, stroking her hair back. \"You ok?\"\n\n\"Fine,\" she snapped, wiping her eyes.\n\n\"Elle, that wasn't my fault...\"\n\n\"Drop it.\"\n\n\"You're ok?\"\n\n\"Fine.\"\n\n\"Good,\" he said with a smile, leaning in and kissing her. \n\nShe jerked away quickly, grimacing in disgust.\n\n\"Elle! You said you would...\"\n\n\"That's not fair! I can't just flip a switch. I said I would try and change my mindset, but I can't do that overnight. I have to work up to it and I can't change my knee jerk reactions. Just like trying to take the necklace off a minute ago. It happened before I thought. You can't say I am not trying just because I have a few reactions when I am trying in other ways. It will take time. Baby steps.\"\n\nHe scowled as he closed his mouth and looked over her face. After a moment, he leaned in and kissed her again, holding her face in his hands so she couldn't turn away. She let him kiss her, but didn't kiss him back as she clenched her hands into fists.\n\nHis hand let go of her face and slid down and groped her breast, squeezing her nipple and making her breath catch.\n\nHe lifted his lips from hers, smiling. \"Yeah, I remember this... I fucking love it. I bet you're already wet too, aren't you?\" he purred, moving to kiss her neck. \"I figured out something else reading up on it. I have to make you come every time I do, girls want that in a relationship. To get off as often as he does. Foreplay and romantic stuff. Just wait until you see all the things I have planned for you, Elle. You are going to be the happiest little wife ever, I have it all planned out.\"\n\nElle could only look up at him, trying to hide her scowl and bury her angry feelings.\n\nHis hand squeezed harder as he rolled her nipple in his fingers and thoughts fled her for a moment as sensation sang through her. \"Foreplay and romance and little things along with the grand gestures. I have it all planned, Elle. Just wait. And once you fall in line? I will show you the world, take you everywhere, let you learn from chefs all over the world. Won't you love that?\" he asked with a purring growl, then licking her jaw.\n\nShe grimaced and pulled away and his face darkened as he looked down at her.\n\n\"You aren't trying!\"\n\n\"I am! I just... don't like being licked like that. Spit, slobber on my face, it's gross.\"\n\n\"Learn to like it! If it's something I want to do, you will learn to love it, do you understand? Damnit Elle! I wanted this to be so perfect and you are already trying to ruin everything! Stop! I should be punishing you! After what you did to me? Do you know how much that hurt? How scared I was? How awful the surgeries were and the pain after? It took forever to recover and even after I did, nothing has been the same! I should be punishing you for that! For breaking your promise and running, for hurting me. You could have killed me! Half an inch further and you would have! Instead of punishing you, I brought you here and planned out a perfect life for you! I got you into an elite culinary school and you didn't even bother looking into it! I would have given you ANYTHING! I made it perfect for you here! Why are you trying to ruin it?\"\n\n\"Because I don't want to be here! You can't kidnap me and expect me to be happy about it!\"\n\nWynter drew back his hand and Elle flinched, throwing her hands up to try and block the blow. When it didn't come, she peeked through her fingers. He was glaring down at her, his teeth clenched. \"Elle. That's enough. I really wanted to try and make this good for you, don't make me have to make things hard. It's already obvious you aren't really going to try so we go back to doing things my way, but I can make it a lot worse! I wanted to spoil you, show you how much I love you! Show you how great life can be, why won't you just let me try? I just want a chance to show you!\"\n\n\"Wynter... I HATE you. You need to understand that. I will NEVER give you a chance and I will NEVER fall in love with you. You are nothing but a monster! That is all you will ever be in my eyes! Just let me go and move on!\"",
        "\"I CAN'T! I can't move on! You want me to be a monster? I can show you what a REAL monster is!\"\n\n\"YOU'VE ALREADY SHOWN ME! Just because you can do worse doesn't mean what you have already done isn't horribly monstrous! You ARE a monster and I will NEVER love you. Ever. Just let me go!\"\n\n\"No. No, that will never happen. You refuse to even try? Fine. I will still keep you here and make sure I am happy. That will just be easier on me, I don't have to try so hard to try and make you care about me. Just remember, you made that choice. Get up,\" he demanded, rolling off the bed and getting up.\n\nElle warily scooted to the other side of the bed and got up, putting the bed between them. \n\n\"I should take you out there and let Cris fuck you. Call Hew back here and let him fuck you too. Ricky when he comes tomorrow. Tell him to bring as many friends as he wants and run a train on you. Watch you get fucked into oblivion until you are begging me to make you mine alone. Is that what you want?\"\n\n\"Of course not! You threatening me isn't going to endear me to you either! I won't...\"\n\n\"Shut up Elle! Shut the fuck up!\" he raged, swiping his finger over the watch.\n\nElle tensed, cringing and dropping to her knees so she wouldn't fall. \n\n\"Is this what I have to do to make you behave? Is pain really all that will get through to you? Do I need to get Hew back here and show me his lineup of turture toys?\"\n\n\"No!\" she answered fearfully, trembling as she hunched on the floor, watching his poised finger over the watch. \n\n\"Then stop being a fucking cunt!\"\n\n\"Boss, Iola is here,\" Cris called over the com. \n\nWynter turned and went to the com, \"I will be out in a minute.\"\n\nElle used the bed to stand, still shaking, then hugged herself as he turned back to her. \n\n\"Stop bawling, you know I hate that shit. No more of this yelling and drama bullshit either. I've have enough of it. No more arguing. I say it, it happens. I am taking you out there and you are going to meet Iola and you are going to fucking behave, do you understand? Or do I need to use your necklace like cracking a whip constantly to spur you to do as you should?\"\n\n\"I understand,\" she whispered, holding the edge of the bed to walk around it. \n\n\"Take the fucking shoes off for now, but you WILL learn to walk in heels. Practice or whatever. Come on.\" He grabbed her arm as soon as she kicked them off and pulled her out front and into the kitchen where a tall older woman was putting away groceries. She smiled at Wynter and began speaking rapid Spanish as she looked over Elle with a bright smile. Wynter spoke back in the same rapid spanish, very fluent. Elle only knew when he introduced her when he said 'Elle' and held her shoulders to pull her forward. \"Elle, this is Iola,\" he said, his voice sounding pleased as Iola smiled and seemingly gushed over her. \n\n\"Lovely to meet you, Iola,\" Elle mumbled. \n\n\"Iola usually does all of the cooking, but she knows you like to cook and want to learn more, so she has no problem with you taking over or just coming in and helping. She even said she would teach you some spanish.\"\n\n\"Thank you,\" Elle said, dropping her eyes, trying hard not to feel defeated again. \"Wynter, I don't feel very well, may I go lay down?\"\n\n\"You can lay there on the couch if you need to, there is a throw in that end table there. I thought you might like to help Iola put things away, get a lay of the kitchen.\"\n\n\"Would you rather I did that?\" she asked softly, still not looking up at him.\n\n\"If you need to lay down, you can. You can look around later. Iola is here from 8 to 8 most days.\"\n\nElle gave a single nod, then turned and went to the couch, curling up with the blanket and letting despair take over. She stared at the wall, through it, at nothing. She could hear them talking softly in the kitchen, but not what they were saying. It sounded like Cris also spoke spanish. She stared numbly for hours, until Wynter came and shook her shoulder softly. \n\n\"I called you, didn't you hear me?\"\n\n\"What?\"\n\n\"I said dinner is ready. Come eat.\"\n\n\"I'm not hungry.\"\n\n\"You need to eat.\"\n\n\"Please, Wynter, I feel sick to my stomach.\"\n\n\"No more arguing. Come to the table, now!\"\n\nShe got up, swaying slightly when she did, getting lightheaded. Wynter caught her arm and led her to the dining room where Cris was waiting by the door. Once Wynter had her in a chair and sat down, Cris sat down at the far end of the table, watching her.\n\n\"Is he your bodyguard?\" she asked numbly.\n\n\"Among other things. He's here to make sure you don't try and put a fork through my eye, or another shoe. He's also my driver and a friend.\"\n\nShe stared down at her plate as Iola served them dinner.\n\n\"Eat, Elle. She is a good cook. One of the best. She even learned how to make potato soup for you, though tonight it's chicken parm. She can make it any time you want.\"\n\n\"Thanks. I... Can I just sit here with you, just tonight? I will eat tomorrow, but if I put something on my stomach right now, I will throw up.\"\n\n\"You will eat breakfast?\"\n\n\"I promise.\"\n\nHe nodded, then reached over and stroked her hair back behind her ear. \"Do you want something for the nausea? I can have the Doc bring something here right away.\"\n\n\"It's just stress. Everything that has happened today, it's all just a little overwhelming.\"\n\n\"Ok,\" he said softly, touching her cheek gently. He turned to Iola and spoke to her quietly and Iola took Elle's plate and went back to the kitchen. She came back and put a glass in front of Elle with a motherly smile. \"Sip it,\" Wynter told her.\n\nElle looked at the glass, then sniffed it.\n\n\"It's nothing bad, Elle, it's just 7-Up, to help settle your stomach,\" he told her, sounding a little offended.\n\nElle sipped it quickly and gave Iola a tight smile and nod, thanking her. Iola seemed pleased with that as she headed back to the kitchen.\n\n\"Cris, I will be going to bed early tonight, we can play some other time.\"\n\n\"I figured, boss, no big,\" Chris shrugged. \"I can catch up on some reading while you get her settled in the next few days.\"\n\nElle sat and sipped her drink, watching Wynter eat. She looked at Cris and wondered if they were really friends or if Cris just put up with him because he was paid to. Maybe she could convince him to help her. \"What book are you reading?\" she asked quietly.\n\n\"It's a scifi book,\" he said with a shrug. \"The series that show is based off of, The Expanse? The books are way better.\"\n\n\"I haven't read those. I read more fantasy, but I have read some scifi. I like watching it better.\"\n\n\"You like to read?\" Wynter asked, confused.\n\n\"Yes? I thought you said you had been watching me?\"\n\n\"Yeah, at work and your online activity. I didn't have any cameras in your house, your stupid roommate never left.\"\n\n\"I read. A lot. I used to read more, but I have been a little depressed lately,\" she said flatly. \n\n\"I can get you some books. A library. Anything you want. Maybe you can read me your favorite book.\"\n\n\"Maybe,\" she answered with a slight shrug. She turned back to Cris. \"If that's really a good series, can I borrow it when you are done?\"\n\n\"Sure.\"\n\n\"I can get you the whole series, brand new,\" Wynter said quickly. \"I can order it right now,\" he said, pulling his phone out.\n\n\"No, it's ok. I would rather just borrow it, see if I like it. That way it's not taking space on my shelf if I hate it. You don't have to throw money at me, Wynter. You already know you can't buy me. Giving me a little free time to read is enough.\"\n\nWynter sat back in his chair, looking torn. \"Ok. But I am serious about the library. You can pick any books you want, I will let you get on amazon and pick all the books that look good to you. Not like trying to buy you, but just so you have books to read here. Ok?\"\n\n\"Thanks.\"\n\n\"Have you watched The Expanse?\" Cris asked.\n\n\"No, not yet. It's on my list,\" she answered.\n\n\"We should all watch it, boss. You might like it too, it's pretty good.\"\n\n\"You just said the book was better?\" Wynter answered, sounding a little annoyed.\n\n\"It is, but the series is good. Real good. The books are fantastic.\"\n\n\"If she wants to,\" Wynter answered with a shrug, but she could tell he wasn't overly happy about it. \"Elle, the chef is coming on Monday to start your training, he said he has a sort of schedule of things to go through and he will have homework for you. I have the list in my office. He said simple things first to see how much you already know, then moving up. That sound fun?\"\n\n\"Ok... will we be in Iola's way?\"\n\n\"No, she knows he is coming. He will be here every Monday and Thursday starting next week.\"\n\nElle gave him a small nod. \"What will you be doing while I am doing that?\" she asked, expecting him to say he would be right there watching her.\n\n\"Actually... I have been doing a lot of flash art. I sort of like it. If I don't want it for you, I send it to Ricky. He's been doing really well on it and some other tattoo artists have reached out and want some too. I'm giving Ricky first pick, but sending out the rest to two other good tattoo artists. Ricky says he can't keep up with all the appointments and he's had to hire on two more artists just to take the clients who don't want my flash. I told him that only he could do my flash so I would know it was done right. It's the same with the other two. People really are paying a lot just to have something I drew, it's crazy.\"\n\n\"That's... really nice,\" she said sincerely. \"I am glad you have something for you that you enjoy.\"\n\n\"He doesn't even charge them,\" Cris offered. \"Just gives them the flash.\"\n\nElle nodded and looked down at her plate. \"If you aren't charging them... then why not ask them to donate a portion of what they charge to a charity? They are making so much off of you, why not give something back in your name?\"\n\n\"That would look really great for your name,\" Cris said quickly to Wynter. \"Your parents would be a lot happier about you doing tattoo art if you did that.\"\n\n\"What were you thinking, Elle?\" Wynter asked. \"What charity?\"\n\n\"Let the client pick out of like 3 or 4 different ones. Ronald McDonald House, The Humane Society, or St Judes, Wounded Warrior Project. Like \u00bc of what they pay goes to the charity they pick.\"\n\n\"That's a really fantastic idea,\" Cris said to Wynter, leaning up in his seat. \"Your parents would be over the freaking moon to have their name attached to that. You know how upset your dad was about the tattoo thing, this would make him a lot happier. Not to mention the positive publicity it would get the tattoo artists.\"\n\nWynter was staring down at Elle thoughtfully. \"Ok. I am going to put you in charge of that, Elle. You talk to them and work out the logistics of it and decide who gets what flash.\"\n\n\"Why me?\"\n\n\"Because I want you to,\" he said, sitting back and looking at her. \"It's your idea, you can take it and run with it. Ricky will be here tomorrow, you can talk to him about it then.\"\n\n\"If I do that, then can...\"\n\n\"No,\" he interrupted her. \"You are getting the ink, Elle. Am I going to have to knock you out?\"\n\nElle shook her head miserably.\n\n\"Cris, I am done. Tell Iola it was good. Come on Elle,\" Wynter snapped, grabbing her arm and pulling her out of the chair. He dragged her all the way back to the bedroom and pushed her towards the closet. \"You have nightgowns in the top drawer on the right side. That's your closet, all those clothes are yours. You can look through them later. Find a black gown,\" he said irritably, pulling off his own clothes. \n\nShe pulled a black gown out and looked down at the black silk nightie. All of them were like that. She pulled the dress off and pulled the gown on, then stalled, hugging herself in the closet for a moment.\n\n\"Come on Elle!\" he yelled.\n\nShe peeked out and he was sitting up in the bed in nothing but a pair of boxers. He was leaning on a pile of pillows against the headboard, remote in his hand and staring at the television on the wall. \n\n\"Come on,\" he ordered, not looking at her. He held an arm out for her.\n\nShe went and climbed into the bed, looking around the room. Her eyes lingered on the lamp and she wondered if she could use it to hit him with. If she could just get to the front door... Would the necklace really stop her at the door? She pulled the blankets up and laid on a pillow, curling into a little ball with her back to him.\n\n\"Elle!\" he snapped angrily.\n\n\"I don't feel well, Wynter. Can I...\"\n\n\"Now.\"\n\nShe turned, but instead of sitting up next to him, she laid her head on his thigh and curled up against him. He didn't complain and she felt the tension drain out of him. He put a hand on her shoulder and rubbed her arm, then began stroking her hair as he found something to watch. \n\n\"You'll feel better tomorrow,\" he said softly.\n\nElle wasn't reassured, she just felt despondent. He did seem different this time, a little less unhinged in some ways, but more out of touch with reality in others. He was at least pretending to be nice to her and treat her like a person. Last time he treated her like something he owned and could use and that was all. If he truly cared, maybe she could eventually reason with him. Or he would let his guard down... To do that she would have to fake being nice to him and she knew she couldn't do that. She had no poker face and she was a horrible liar. She didn't know what to do, her only plan was maybe getting Cris to help her. Maybe if she could convince Wynter to take her out somewhere?\n\n\"You asleep?\" he asked in a whisper.\n\n\"Not yet.\"\n\n\"Still feeling sick?\"\n\n\"It's just stress.\"\n\n\"I can help with that!\" he said excitedly, pulling her further onto his lap and laying her the length of his legs, her head near his stomach. He began rubbing her shoulders and her head, massaging gently. \n\nShe lay still, his hands on her body not helping her stress. She tried to stay relaxed and not cringe away from his hands, but she couldn't help it.\n\n\"You're still really tight,\" he said softly. \"I can have a masseuse come in for you tomorrow before Ricky gets here, would you like that?\"\n\n\"It isn't that kind of stress, Wynter. It's from being kidnapped and tortured and raped again. Being trapped here with you again. Wynter... I am terrified of you. I have had nightmares about you, about what happened, almost every day. You have to understand that this is torture for me.\"\n\n\"That's enough! I am torture for you, Elle? Really? That's ridiculous! It's not like I buried a spike in your eyeball or anything! I made you come multiple times! You LOVED it, Elle. I gave you ink I created myself and paid for! I treated you well! Took care of you when you got sick!\"\n\n\"You MADE me sick! You drugged me! Raped me after I begged you to stop! Choked me and watched me struggle to breathe! You got off on it! And you were going to try and make me go with you to New York! Keep me! Of course I tried to get away from you, any sane person would have! It's YOU who are out of your mind! You can't just take people and demand they serve you and worship you and let you do whatever you want to their bodies! I don't care how you feel about them, no is no, you have to deal with rejection just like everyone else in this world!\"\n\n\"Stop it Elle! Just stop it! No more! No more of your tantrums or arguing or I lock you in the freezer.\"\n\nElle blinked in confusion at the odd threat. \n\nWynter rolled her off of his lap roughly and got up to start pacing. \"You aren't... you aren't doing what you are supposed to! Damn it, Elle! I just want us to be happy! I wanted to show you how I've changed but you won't let me! It's fucking ridiculous the way you are acting! I haven't even really hurt you!\"\n\n\"You've electrocuted me how many times?\" she asked acidly.\n\n\"Twice you did it to yourself!\"\n\n\"From the necklace you put on me specifically to electrocute me! You almost killed me!\"\n\n\"It wouldn't have killed you, quit exaggerating. Enough of the drama,\" he demanded. He moved back to the bed and stood at the edge, shoving his boxers down. \"Come over here and suck my cock.\"\n\n\"No!\"\n\n\"Now, or I will put you in the freezer after I fuck your mouth. You are swallowing my cock either way.\"\n\n\"I am not doing anything for you!\" she yelled, rolling across the bed to the other side.\n\nShe didn't make it to her feet before the necklace locked her muscles down and sent her to the floor in pain. She was whimpering when her vision returned and Wynter looked grim as he strapped the O-ring gag to her head. Her jaw was already painfully spread and she whimpered again, tears leaking from her eyes. She looked up at him imploringly, her hands jerkily going to his arms and holding his wrists. \n\nHe paused a moment, his lips parting as he looked down at her. \"You did this yourself, Elle,\" he said, his voice rough with emotion.\n\nShe whimpered again, her hands squeezing his wrists gently as she looked up at him pleadingly.\n\n\"I don't like having to do this to you, but you aren't listening! You aren't acting like I want you to!\" he said angrily. He yanked away from her hands and sat down on the floor, leaning against the bed with his head in his hands. \"FUCK!\" he yelled in frustration.\n\nElle rolled slightly and went to her hands and knees, trying to get her muscles to work again before sitting up and undoing the buckle on the gag. She pulled it out, then hesitated as she looked at him sitting there looking lost. She considered moving to the closet and locking herself in, but she was pretty sure he was unhinged enough that it might be easier than she thought getting away.\n\nShe crawled to him and ducked under his arms as she turned, then scooted back so that he was holding her from behind. He moved to accommodate her and held her against him, resting his chin on top of her head. She held on to his arms around her, half hugging him.\n\nShe felt a calmness wash over her as she came to a realization. The way out was not around, but through. She was going to have to go through this. \n\nShe stroked his arm and let out a sigh. \"Can we lay back down, Wynter?\" she asked softly.\n\nHis arms tightened around her like he didn't want to let her go from this spot and she squeezed his arms. \n\n\"You can hold me like this in bed,\" she promised.\n\nHe stood, still holding her and climbed into bed. He laid down and she immediately put her head on his shoulder and her arm across his chest, then let out a contented sigh. His arms held her almost too tightly, but she said nothing about it, she just held him for a moment before relaxing in his arms. Eventually, he relaxed his hold too.\n\nShe reached up and ran her fingers up his neck to his jaw, stroking lightly. \"I will try. You are right, you have changed and I can see that. I haven't given you a chance to prove it. You aren't the man you were, so I will try.\"\n\n\"What do I have to do? You are still getting ink, Elle.\"\n\n\"No. Nothing. No caveats, I will just try. I think you really have changed and if you really have, then you deserve a chance. I will give you a clean slate. Ok?\"\n\n\"Ok,\" he answered breathlessly and she could hear the excitement in his voice. His arms tightened again and he rubbed her back and she could feel him trembling. \n\nShe peeked up and he had a small smile on his lips and his eyes had welled with tears. She hugged him again, squeezing as hard as she could before relaxing with a sigh and pretending to start falling asleep. He held her, stroking her back softly as he picked something on the TV.\n\nShe lay thinking and planning until he finally turned the TV off and shifted her slightly so he could lay down and sleep. She made a whimpering noise and clutched him more tightly as if she were afraid he was going somewhere. \n\n\"Shhh, my love,\" he whispered. \"I have you.\" He turned to his side and held her against him, moving her so she was laying on his arm. She nuzzled into him, making a happy noise and pretended to fall back to sleep. He lay awake for a long time, his thumb stroking her back and kissing the top of her head every few minutes. ",
        "He finally fell asleep, but Elle could not sleep. She lay there looking out the large window and the lights across the river, planning her escape. \n\nShe was still there when the sun started coming up and she watched the world go from dark gray to light gray to a pretty golden hour as the sun peeked up over the horizon. \n\nWynter made a grumbling noise and started to turn over, then woke with a jerk when she shifted so he could move.\n\n\"Hey!\" he said, surprised. Like he had forgotten she was there and had just realized he was still holding her. \"How did you sleep?\"\n\n\"I... not very well. I woke up after you moved and just layed there feeling you rub my back and kiss my head. Like you were protecting me while I slept. I didn't want you to know I was awake, I was afraid you would stop. Then when you fell asleep, I lay here thinking. You really did do a lot for me and after what I did you still kept your promise and tried to send me to school. I was so full of anger, I never stopped to think about what that must have done to you. To make that gesture even after what I had done. Everything you set up for me here and how hard you are trying. I really want to try for you, you deserve at least that. Thank you, for all you are trying to do. Especially bringing a real chef in to train me. You can't know what that means to me after my mom...\"\n\n\"Hey, it's ok. I want to do that for you. I want to do everything for you, Elle, I do. I can't wait to make you my wife and show you the whole world. It's going to be amazing, watching you learn from chef's all over the place. It's going to be perfect, I promise you.\"\n\n\"It sounds exciting, and a little terrifying too. I have never been out of Texas before.\"\n\n\"I will be with you the whole time. Today is a big day, you feel like getting up and getting ready?\"\n\n\"Ok... do you think there will be a few minutes to catch a nap at any point?\"\n\n\"Yeah... actually, I decided I was going to have you sleep through the back tattoo. Ricky said it would hurt pretty bad and he had to do the whole outline today. It will take hours. I don't want you to have to go through that.\"\n\n\"Thank you, I think you are right on that. I will trust you.\"\n\nHe smiled, his face lighting up. \"I have a dress in there for you, I picked it special for today. A green and blue floor length dress with an open back. Go find it and put it on! I will make a few calls,\" he said happily, letting her go and getting up to get dressed.\n\nElle went to the closet and found the dress immediately, it looked like a watercolor print and it was a slinky silky material. The back was open and it hung on her, hugging her curves. She stepped out and he grinned at her, looking her over. \n\n\"Perfect. You look amazing! Come on!\" he said, offering his hand. She went to him and took it with a shy smile, and he led her out to the kitchen where Iola was cooking. \n\nIola smiled at them and Cris looked up from his book, looking her over warily before going back to his book. Wynter set her up on a stool at the island and sat next to her between her and Cris. \n\n\"Cris, I need you to call the Doc, have him come out just before Ricky comes out. She agreed to sleep through her tat. Actually, have him come early enough to give her the IUD too. She can sleep through all of it.\"\n\n\"Will do, boss,\" he said, standing and taking his phone out of his back pocket before stepping outside. \n\nIola set a plate of strawberry pancakes in front of her and Wynter watched her face excitedly. Elle knew she wanted her to react to him remembering that she liked those. She smiled up at him and reached over, squeezing his hand slightly. \"You remembered! Thank you. Thank you Iola, they look delicious.\"\n\nWynter beamed with pride as he grinned at Iola as she set a plate in front of him. \n\nElle forced herself to eat as much as she could, trying not to be obvious about watching Cris pacing outside the door on the phone. Was it unlocked? It must be, he had walked right out. If there was really a shock, could she get through it and far enough away that it wouldn't trigger it? Or stop triggering it? If she had enough momentum, maybe she could get past it. \n\nCris came back in before she was done and gave Wynter a nod. \n\n\"Everything is all set, my love,\" Wynter said happily. \"He'll be here soon and when you wake up, it will all be taken care of.\"\n\nElle gave him a halfhearted smile, only a little mollified that he wasn't drugging her and a doctor was going to be putting her under. She wondered if he could come every day and just put her under so she wouldn't have to try and fake things with Wynter.  \n\nShe forced another smile. \"So how about you show me the rest of the designs you have drawn up so I can pick?\" she asked, feeling sick that she was asking. What she really wanted was a layout of the house. \n\n\"Sure!\" he answered excitedly, jumping up and helping her off the stool. He pulled her down the hallway and she laughed at his excitement. He looked back at her, his eyes shining as he grinned. \"In here, this is my studio,\" he said happily, pulling her into a corner room with two walls that were windows. It was bright enough that Elle squinted. \"Here, this is my flash sketch book, and there, all those pinned up on that board, those are ones I like for you. That's the tree he is doing today and that's the pinup girl for your hip. Isn't she cute?\"\n\n\"She is... she really looks like me!\"\n\n\"Yeah, that's what I was going for. You like the knife or you want something more... sweet?\"\n\n\"I like the knife,\" she answered quickly. \"You sure I can't have this one today and do the other one next time?\" she asked, pulling the paper down and looking at it more closely.\n\n\"Yeah, it's cool though. He can do the outline, come back and do that one while the outline is healing, then come back and start filling it in. What other ones do you like?\"\n\nElle looked over all of the art on the board. \"I like the bee one... and these wildflowers are pretty. Both of them. The pink deer head with the branches as antlers and all the flowers on them, it's lovely. They are all really good. I guess I should just take down the ones I don't really like as much as the others? That way you have room to put more up once you get to know me a little better? Then we can kind of go from there after the first two are on?\"\n\n\"Yeah! Yeah, ok.\"\n\nElle removed a few of the ones she hated the most, especially the ones that alluded to his name and him. When she pulled down the mistletoe, he chuckled. \"Do you know where I wanted to put that?\" he asked, putting his arms around her from behind.\n\n\"I have a good idea,\" she answered, trying to sound amused and not horrified.\n\n\"I thought you would like the little blue fairy?\"\n\n\"She is cute... but not really me.\"\n\n\"Is it because she is an ice fairy and has snowflakes in her wake?\"\n\nElle blushed and looked down at her hands. \"Anyway, I thought we could leave room for when you know more of the things I like. Books, movies, shows, my fandoms. That sort of thing.\"\n\n\"Like what? What are your fandoms?\" he asked eagerly.\n\nElle turned in his arms to look up at him with a smile. \"We have time. Plenty of it, right? We will have time to get to know each other and have fun doing it.\"\n\n\"I want to know everything now,\" he said breathlessly, going to a knee so he could kiss her. \n\nShe let him kiss her, unable to force herself to kiss him back, but putting her arms around his neck. \n\n\"Boss, Doc is here,\" Cris called on the com.\n\nWynter pulled back, looking disappointed. Elle gave him a shy smile as he stood, holding on to his neck. He grinned as he picked her up and carried her out to the hallway. He didn't turn to go back to the front, he went further down the hall and opened another door, turning a bright fluorescent light on. \n\nElle was immediately confused. It looked like a doctors room with a table to lay on, with stirrups and counters and cabinets just like you would see in a doctors office. \n\nWynter set her up on the table and stroked her cheek softly just before a man walked in the door with a bag. \n\n\"Hello Mr Hallan! It's good to see you again, how are your headaches?\"\n\n\"Fine. This is Elle.\"\n\n\"Hello Elle! I am Doctor Weston.\"\n\n\"Are you?\" she asked nervously, watching him set the bag down.\n\n\"Am I Doctor Weston?\" he asked in amusement.\n\n\"A doctor? Wynter said...\"\n\n\"Oh, yes, that. Have no worries, all of that is long behind me and I am very good at what I do. Just lay back now. I am going to give you a little shot right here where I am going to put the IV so it doesn't hurt so much. A little burn... good girl. That wasn't so bad? Ok, lay still here and I will start getting your IV ready, ok?\" he said professionally, pulling things out of his bag.\n\nElle turned and looked up at Wynter in a panic. He smiled at her comfortingly and leaned down, stroking her hair and kissing her forehead. She grabbed his hand with her free hand and he held it tight. \"I will be right here,\" he whispered. \n\n\"Promise?\"\n\n\"Cross my heart. I will stay right here through everything, I won't let you go at all. Not once.\"\n\n\"What if I never wake up?\" she asked, starting to panic.\n\n\"Shhh, my love, you will be fine. He really is good. You know me, I would only let the best around you, I wouldn't let anyone near you that I didn't trust with my own life. He has helped me too. Relax now, slow your breathing. I have you.\"\n\n\"Will you hold me?\" she asked, pulling him closer.\n\nHe pulled her into a hug and squeezed her as the doctor put the IV in her arm. Elle clutched his hand, pretending to need him and be comforted by him. \n\n\"Ok, all finished. Now, it's wont take but a few seconds once I start this, ok? You ready?\" the doctor asked. \n\nElle leaned back and looked up at Wynter. \"One more kiss?\"\n\nHe smiled and leaned in, kissing her gently. She felt the doctor push the plunger of fluid into the IV slowly and let out a small sigh as she closed her eyes. \n\n\"Wynter?\"\n\n\"I am right here my love,\" he whispered back.\n\n\"Good,\" she breathed, then let go, letting whatever she was given take her into oblivion. \n\nWhen she opened her eyes, she was on her stomach in bed and she hurt. She hurt everywhere. \n\n\"Nnn?\"\n\nThere was movement, the bed jostling her, then a light coming on. \"Elle? How do you feel?\"\n\n\"I ache. My... my... lower stomach hurts.\"\n\n\"He said the IUD might cramp some. He gave me some pain pills for you. How about your back?\"\n\n\"Sore. Like a bad sunburn but worse.\"\n\n\"It looks amazing. You hungry? Iola left some potato soup here in the fridge, I can heat you some up. You shouldn't take these pain pills on an empty stomach.\"\n\n\"I don't know if I could sit up.\"\n\n\"What if I helped you?\"\n\n\"I can try. Ugh, I feel light headed.\"\n\n\"Yeah, you need to eat. Come on, I have you,\" he said, carrying her out to the kitchen and setting her on a stool. She winced and shifted as he went to the fridge to get her a bowl of soup. \"He said the cramping won't last too long,\" he said as he put the bowl in the microwave. \"And that you wouldn't even know it was there after a few days.\"\n\n\"Everything cool, boss?\" Cris asked, stepping into the kitchen from the hall.\n\n\"Yeah, she finally woke up. Getting her something to eat.\"\n\nCris looked Elle over, then went to his spot at the end of the counter and picked up his book. Elle noticed it wasn't the same one as earlier. \n\n\"You still going to let me borrow that series?\" she asked him.\n\n\"Sure.\"\n\n\"Looks like I might be laid up a day or two, it would be nice to have something to read.\"\n\n\"I will get you a tablet so you can pick the books you like,\" Wynter said quickly. \"You can get all your favorites so you will have them here and I can see what they are and everything you want to read as well. There is an extra bedroom I am having turned into a library, just for you.\"\n\n\"You don't have to do all that!\"\n\n\"Let him!\" Cris said, grinning. \"I will use it too and give you a list of my favorite books as well so I don't run out.\"\n\n\"I don't mind,\" Wynter said quickly, pulling the bowl out and putting it in front of her. \"I want to make sure you have a place just for you, you know? I have a room that's been kind of for me and Cris, hanging out and watching TV, playing video games. I thought maybe the kitchen would be your thing, but if you like reading too, then it would be another place for you. I want you to have that.\"\n\n\"Thanks,\" she said softly, stirring her soup.\n\n\"I will get it now and log on to amazon,\" he said, hurrying away.\n\nElle glanced over at Cris. He was an older man, but not too old, large. He had dark hair with a closely trimmed beard and dark eyes. He didn't look like a reader at all, he looked like... a bodyguard. A brute. \n\n\"How long have you known Wynter?\" she asked him softly.\n\nHe marked his place with his finger and looked up at her. \"His whole life. My father was a driver for his parents. I was about twelve when he was born. I became his driver once he got older.\"\n\n\"And his bodyguard?\"\n\n\"Yes, that too. He keeps me with him now, even when he travels. Since he got hurt so badly after the last time I wasn't with him.\"\n\nElle knew better than to appeal to the man's sense of honor or sympathy, he would just get defensive over Wynter. He knew what Wynter was and he was waiting for her to say something. He had a response ready. \"Did you have to train to do that?\" she asked instead.\n\n\"Yeah, I have trained in many different ways.\"\n\n\"So you just live here with him now? You never have any time off?\"\n\n\"It's not like it's arduous work. I have time off most of the time and he pays well. We just hang out really.\"\n\n\"I will try not to interfere too much with your hang out time,\" she said softly, taking a bite of her soup.\n\n\"I've never seen him like this, you know. Never. He really loves you. A lot. Even after what you did to him.\"\n\nElle felt rage boil up but she tamped it down and forced herself to say something other than what she wanted to say. \"I can tell he is different this time than he was the last time he kidnapped me.\"\n\nWynter came back in, tapping away on a tablet. \"Ok, my love, here you go. Pick all the books you want, especially your favorites. I want to know what all of them are, ok?\"\n\n\"Ok,\" she answered, taking the tablet. \n\nHe watched over her shoulder as she began typing in titles and authors, all of her favorites. She was fairly certain he intended to do research and find ways to incorporate her favorites into tattoos somehow. She wondered why he was so obsessed with tattooing her. Other than marking his property.\n\n\"You have the Dune series on there?\" Cris asked after a few minutes.\n\n\"Yeah, up until his son picked them up. He isn't really as good,\" she answered distractedly.\n\n\"Right?\" Cris asked in agreement.\n\n\"What is Dune?\" Wynter asked.\n\n\"Book series. A movie too, but it wasn't as good as the book,\" she answered, still distracted. She ate her soup as she added books. She was acutely aware of Wynter watching her and she pretended to be lost in what she was doing, though she was mostly stalling for time. She didn't really want to go back to bed with him right now, afraid of what he had planned.\n\nAfter she finished the soup, he set two pills in front of her and a glass of whole milk. She smiled up at him. \"You remembered that too!\" she said, feigning excitement.\n\nHe smiled, pleased all over again.\n\nShe took the pills and sat drinking her milk until she began feeling drowsy. \"Are those...? Am I supposed to feel this tired after sleeping all day?\" she asked, yawning.\n\n\"He said they might make you drowsy, but they would help with the pain. Here, Cris, go ahead and get all of those delivered right away,\" Wynter said, pushing the tablet across to Cris.\n\n\"Ok, but I am adding a few of my own to the list,\" Cris said with a laugh.\n\n\"Go for it, just make sure hers are next day delivery. Come on, Elle,\" Wynter said softly, picking her up and carrying her to bed. He laid her down and climbed into bed next to her. She was remotely aware of her back hurting as she laid on it, but it was distant and getting further away as she thought about it. She felt his warm lips on hers. \"Sleep well, my love,\" he whispered. \n\nHer last thought as sleep took her was that he really had changed so much from the selfish boy at the hotel room.\n\nWhen she woke in the morning, her head was pounding and she couldn't even open her eyes. She rolled to her side away from the light, then whimpered.\n\n\"Elle?\" Wynter asked quickly.\n\n\"Nnnn.\"\n\n\"What's wrong?\"\n\n\"Head,\" she whispered. \"Shhhhh.\"\n\n\"Oh... I don't think you should have a headache this bad? I will have Cris call the doctor and see? Hold on, sit tight. Cris, call the doc. Tell him she has a bad headache after taking those pain pills last night. Really bad. And she is super pale and looks sick.\"\n\n\"Will do boss,\" Cris answered through the com. \n\n\"Elle? Do you need anything? A drink? Anything at all?\"\n\n\"My head has never hurt this bad,\" she whispered. \"Can you turn off the light?\"\n\n\"My love, it's the sun, I can't turn it off. I will take you to an inner room, come on,\" he said softly, picking her up. He carried her out to the front room, then down the side hall to the room she had been in the day before with the medical table in it. He laid her on the couch along the wall, then stepped out and brought back a pillow and blanket, closing the door to the dark room. \"How is that? Better?\"\n\n\"Yeah,\" she whispered, pressing her head to his arm as he reached around to hold her.\n\n\"You feel a little warm,\" he said worriedly.\n\n\"You feel cool,\" she whispered, pressing her cheek to him.\n\n\"You want a cool cloth for your head? Your face?\"\n\n\"Please?\"\n\n\"Of course!\" He jumped up and hurried out, then came back with a wet cloth. He laid it on her head and stroked her cheek softly. \"Doc is on his way, he is bringing something that should help. Iola says she has a tried and true headache remedy, but Cris said it sounds like a migraine. Probably from sleeping too much and the lighting you aren't used to. He has a way to help with that, he's really good at it actually, he's done it for me. Doc has a shot too that helps with migraines if that's what it is. Do you ever get migraines?\"\n\n\"I don't think so,\" she whispered. \"My head has never hurt like this before. Can we be quiet for a while?\"\n\nIn answer he leaned closer and pressed his lips to her head and rubbed her shoulder. He sat there with her until Cris showed the doctor in. \n\n\"Cover your eyes, Miss, I need the light,\" he called.\n\nWynter pulled the blanket up over her face and the doctor turned on the light.\n\nElle turned her face into Wynter, clutching him as he spoke quietly to the doctor. She didn't listen, she just tried to find a way to hold her head that didn't hurt. \n\nThere was a small sting in her arm as Wynter squeezed her close, but it didn't even register with the pain in her head. \n\n\"Shouldn't be but maybe three minutes before it starts working,\" the doctor said softly. \n\nAfter a few minutes, she started relaxing and fell asleep again.\n\nShe woke with a jerk, feeling like she was falling off the couch, then opened her eyes and looked around. She was in bed. Alone.\n\nShe sat up and looked down at the little white nightie, then got up and went to the bathroom, feeling groggy and achy. She had no idea what time it was at all.\n\nShe stood a moment, holding herself up at the sink, then decided she wanted a shower. She pulled the nightie off and it caught on something and she looked down at the silver rings through her nipples. \n\nOf course he had pierced her again while she was passed out. A tattoo and an IUD wasn't enough. \n\nShe got in the shower, feeling grumpy.\n\nA moment later, Wynter was opening the bathroom door.\n\n\"Hey! How do you feel? Cris said you were up and around.\"\n\nShe frowned at him, wondering what he was talking about. How did Cris know? Was he watching her? Were there cameras?!?",
        "She let it go. \"My head is better. Mostly sore and... hungry I guess. What time is it?\"\n\n\"About seven. Iola is still here, you want some fajitas? We had fajitas, they were good. I will have her make you some,\" he said quickly, stepping out and calling out to Cris on the com.\n\nShe looked around, trying to be circumspect, but she caught site of the camera quickly. She pretended she hadn't seen it, keeping her eyes moving. \n\nShe was getting out when Wynter came back in and he helped her dry off, patting her back dry so the tattoo wouldn't hurt. He also helped her dress in clothes he grabbed, picking them out for her. She used getting dressed as an excused to turn and look around and she spotted two cameras in the bedroom.\n\nIn the living room, she saw another as she passed through, then another by the door and one in the kitchen as she sat down at the island.\n\nThey were everywhere, and those were just the obvious ones.\n\nThat made her glance at Cris and the large phone laying on the counter in front of him at the island. She wondered if it was on while she was alone and tuned in to whichever room she was in. She wondered why it bothered her so much that she was being watched in the house she was being held captive in.\n\nActually, now that she knew, she might be able to use it to her advantage, she realized.\n\n\"Here,\" Wynter said softly, setting her a glass of milk down. \n\n\"Thanks. Is there apple juice or anything?\" she asked.\n\n\"I will order some!\" he said quickly. \"Anything else?\"\n\n\"Oh, umm, no thanks. Milk is fine.\" She picked at her food, eating it slowly. \"How long was I asleep?\"\n\n\"All day? But your head feels better, right?\"\n\n\"Yeah. Just super... spacey now is all. Zonked.\"\n\n\"Need some coffee?\" Cris asked. \"I can doordash you some Starbucks.\"\n\n\"That... sounds perfect actually if it's ok.\"\n\n\"Boss?\" Cris asked.\n\n\"Yeah, sure, whatever she wants,\" Wynter answered. \"Go ahead and order it, and order one of those coffee machine things you were talking about.\"\n\n\"Keurig?\"\n\n\"Yeah, that, and whatever coffee she likes. Elle?\"\n\nShe told Cris quietly, wondering why Wynter sounded so perturbed now. Was he upset she liked coffee? Or that Cris had thought to ask and he hadn't? She wasn't sure.\n\n\"Hey, we have a few minutes,\" Wynter said with fake cheer, getting up. \"Come here, I want to show you something!\" \n\nHe pulled her down the hall to his studio and in, taking her to the board that was now completely full of art again. He pulled one down and showed it to her and she took it.\n\n\"Wow... wow, this is really really cool! I like it... a lot.\"\n\n\"That's your favorite, right? From the first series you picked out?\"\n\n\"Yes! It is.\"\n\n\"I have a ton done up of all your favorite books! I could do a whole sleeve of just books! You would look so hot with a sleeve, Elle!\" he said excitedly, his eyes sparkling. He took the art and put it back on the board, then turned to her and led her to the couch, pulling her to sit with him.\n\nShe assumed he wanted to talk to her, tell her something, but he immediately leaned in and kissed her, passionate and forceful, laying her on the couch and pulling her dress up. He slid his fingers into her underwear and quickly found her clit, making her gasp and go tense, then quickly lose herself and give in to the pleasure.\n\n\"Hssst! Oohhh... Wynter!\"\n\n\"Fuck, Elle,\" he breathed. \"I've waited so long to hear you call my name like that!\" He yanked her underwear off roughly and shoved his pants down, then rammed into her with a groan through his teeth. \"Fuuuuck, Elle, say it again. Tell me how much you missed me, missed my cock!\" he whispered, thrusting wildly. He shoved in hard, grunted again, then came, shooting into her. \"Fuck! I need to fuck you a lot more so I can start lasting again. Do you see what you have done to me? I can't even get it up for another girl and you... you make me come so fast I hardly have time to enjoy it. Soon. We just have to fuck a lot more,\" he whispered, pulling out and moving so he could slip his fingers back down to her clit.\n\nElle tossed her head, the rollercoaster of sensation and pleasure driving her mad. She grabbed his arm, needing him to see it through this time and pressed her hips up to his fingers.\n\n\"You like that baby? Fuck Elle, you are so godamn hot! I love this about you, how into it you get! Some girls could talk on the phone for as much as they get into it, not you. You are all in, you can't even fucking talk. It's so hot watching you.\"\n\nElle hardly heard him as it climbed, the bliss, making her insensible to anything else happening around her. She pressed up harder against his fingers, then came with a cry of relief and shock. It coursed through her quickly, rolling and making her jerk as her body locked up.\n\nWynter leaned in, kissing her as she came down. He was trying to be gentle and sweet, but Elle only wanted to turn away from him and rest a moment. She hated that she gave in to him so easily when her libido took over. \"Did you like that?\" he asked throatily, kissing her neck.\n\nShe didn't answer, pretending to still be too out of it to answer.\n\nHe chuckled and slid her underwear back on her before helping her up.\n\nShe was blushing furiously when they went back out and sat down, Cris pushing her a coffee across the counter. She wondered if he had watched what happened, eyeing his phone as she took the drink.\n\nWynter pulled her back to the media room and made her lay in his lap as he leaned back. Cris came in and sat down and Wynter looked over.\n\n\"Wanna play since she never watches TV when I have it on anyway?\"\n\n\"Sure. I'm in for a few rounds,\" he answered, moving to sit on the couch and taking the remote. \n\nElle was between them, her head in Wynters lap, all curled up with her toes barely brushing Cris's hip. He handed her a book and she looked at the well worn cover, then opened it and started reading. She lay reading while they games, laughing and ribbing each other. Ever so often, Wynter would comb his fingers through her hair and rub her shoulder, or rest his hand on her.\n\nShe rolled to her other side, her hip hurting and when she did, she saw Cris look down at her feet that were closer to his knee now. She wondered for a moment if they were bothering him, but quickly reassessed. The way he quickly looked at Wynter, then back down at her feet, looking them over as if he really liked what he was seeing. She wondered if that was a thing for him. She had heard of a foot fetish, but never met anyone who had one. At least that she knew of. She wondered if she could use that to help her get away. She shifted again, moving one foot against him and the other a little further out, rotating her ankle and wiggling her toes like it was falling asleep. He went completely still as he watched, then glanced at Wynter again before glancing at her. She was staring hard at her book, but paying attention to every move he made.\n\n\"Dude! A little help!\"\n\n\"Sorry, I was in my inventory,\" Cris said quickly. Breathlessly.\n\nShe lay there reading, keeping her feet pressed into his leg, hoping it would be worth it in getting him to help her get away. The long game. She had to remember the long game and play it. \n\nShe pretended to fall asleep, hugging herself like she was cold and burying her toes under his leg.\n\n\"Should I get her a blanket, boss?\" Cris asked quietly.\n\n\"What? Oh, yeah. Sure. Be quick, we're almost full.\"\n\nCris hurried off and came back, laying a blanket over her. When he sat down, he took her feet in his hand and tucked them into him again, keeping hold of one until their party was full and they left the lobby.\n\nThey kept playing until well into the night. She turned again and again, moving her feet against him and even stretching and putting one up on his leg at one point.\n\nWynter finally put the controller down and picked her up to carry her to the bedroom. She 'woke up' and threw her arms around his neck like she was sleepy and disoriented and afraid.\n\n\"I have you, babe,\" he whispered.\n\nHe took her to the bedroom and laid her down, pulling her dress off before he laid down next to her to sleep. She wasn't tired, not at all. \n\nAfter he fell asleep, she slipped out of bed and pulled his t-shirt on. She went out to the living room and looked around the dark room. She considered trying the door, but didn't want to hurt herself and get in trouble besides. She went to the kitchen and opened the fridge, pulling the milk out. \n\nWhen she shut the fridge, Cris was standing there in sleep pants and nothing else. \"He say you could be in here?\" he asked tersely.\n\n\"Oh! You scared me... umm. No. He's asleep. I slept so long then fell asleep again. I can't sleep. I was just getting a drink and was going to find that book. It's good, by the way. I'm enjoying it.\"\n\n\"I don't think he would like you being out here.\"\n\n\"I can't sleep... I can't just lay there. He wouldn't mind if I just read, would he?\" she asked, trying to sound innocent.\n\n\"If you are up, I have to be up.\"\n\n\"Oh, I didn't know that. How did you know I was up?\"\n\n\"Motion sensor alert on my phone.\"\n\n\"Sorry. Umm. Can I just sit and read?\"\n\n\"In his room, next to him in bed. He would flip if he woke up and you weren't there.\"\n\n\"Ok. Sorry. I wasn't doing anything wrong, I thought.\"\n\n\"You aren't, you just need to stay close to him. Just in case. Ok?\"\n\n\"Yeah. Thanks,\" she answered, then went back to the media room to get the book. He followed her and stood in the door. She hesitated at the couch as she picked up the book. \"I don't remember this blanket in here?\"\n\n\"It wasn't. You find the book.\"\n\n\"Yeah, it's here. Did he get me a blanket?\" she asked, heading to the door.\n\n\"Yeah,\" he answered, moving to let her pass.\n\nShe wondered why he lied. \"What are those rooms?\"\n\n\"Ask him tomorrow if you want to know.\"\n\n\"K. It's dark in the bedroom, can I sit in the living room?\"\n\n\"No, you have to be with him. Turn on the TV if you want, it won't bother him.\"\n\n\"Will a light bother him?\"\n\n\"Small lamp, not overhead. Don't get up again.\"\n\n\"Ok, I am going to get more to drink then. And a snack. Are there any snacks?\"\n\n\"Look in the pantry over there. There isn't much. Popcorn is it, I think.\"\n\n\"Can I make a grocery list?\"\n\n\"Yeah. Go lay down, I will bring in some popcorn.\"\n\nShe stopped trying to stall and went into the room. She got in the bed and curled up, making sure her feet were out. She watched carefully when he came in and watched his eyes go to her feet. He handed her the bowl, then hesitated slightly. \n\n\"You want some socks?\" he asked in a whisper. \"To keep your feet warm?\"\n\nShe looked at her feet, wondering if socks were a thing for him. \"Yes, please. I wasn't sure where they were.\"\n\nHe went to her closet and came out with some cotton socks. She expected him to hand them to her, but instead he bent over and took hold of her foot, sliding the socks onto her almost reverently.\n\n\"That feels good,\" she whispered when his hands went to her feet, disguising rubbing them as making sure the socks were pulled all the way up.\n\n\"Your feet hurt?\"\n\n\"The shoes, the high heels. I'm not used to them.\"\n\nHe knelt slightly, rubbing her feet in his giant hands.\n\nShe was playing into his fetish, but it really did feel good. She closed her eyes and dropped her head back, enjoying it truly and not just pretending to. \"I didn't know it felt this good to have your feet rubbed,\" she whispered.\n\n\"What babe?\" Wynter asked half asleep.\n\nCris stood up quickly and stepped back.\n\n\"Nothing. I got my book, I can't sleep. Can I turn on the little light and read?\"\n\n\"Sure babe,\" he answered, still not opening his eyes. His hand reached out and rested on her hip.\n\nCris eased back and slipped out.\n\nAfter a few minutes, when she was sure Wynter was asleep again, she eased out of bed and went into the bathroom. She ran herself a hot bath and put some oils and a little bubble bath in it. She pulled the shirt and socks off as unselfconsciously as she could, pretending she didn't know about the cameras, then got in the tub and sunk down in, reading the book and playing with the bubbles with her feet lazily. She posed her legs and feet against the bubbles as if she were just playing. If everything was motion sensored and he was watching, then maybe he was enjoying it. Maybe she could appeal to him sexually even if she was too short and little and not pretty enough. Maybe liking something extraneous about her would be enough.\n\n\"Elle?\" Wynter asked irritably shoving the door open.\n\n\"Hey! Sorry? Did I wake you?\"\n\n\"What are you doing?\"\n\n\"I was relaxing in a bath? Is that ok? I was trying to be quiet?\"\n\n\"Come to bed, babe.\"\n\n\"You said I could read?\"\n\n\"In bed, come on.\"\n\n\"Sorry,\" she said, getting out of the tub and drying off.\n\nWynter seemed to wake up a lot when she got out of the water and she was covered in bubbles and they were sliding down her. He cocked his head, watching her and his lips parted. \"You are so fucking hot, Elle,\" he said softly.\n\n\"To you.\"\n\nHe snorted. \"To anyone who looks at you. Leave the clothes... come lay down babe,\" he said, his voice full of want. He pulled her to the room and pushed her to the bed, making her bend over it. He reached down and touched her briefly, making her breath catch as his fingertips found her clit. \"Fuck babe! You are already wet,\" he groaned. \"Good book or were in there thinking about me and getting all hot?\"\n\nShe gripped the blankets, her breathing becoming labored as his fingers worked her. \n\n\"Fuuuck baby,\" he whispered, moving behind her and pushing his hard cock in. She gasped, grasping the blankets more tightly and pulling on them slightly as her eyes shut and she moaned. He grabbed her hips and began slowly pushing into her again and again.\n\nShe whimpered, rolling her head to bite into the blankets to stay quiet. She was already excited and she hadn't even really realized how good it had felt to pose for someone who was watching her on camera. It had been exciting and she was incredibly wet and worked up.\n\nShe came quickly, screaming into the bed as he groaned and plunged into her, coming on top of her. Her pussy squeezed his throbbing cock, milking him, pulling cum out of him as he groaned and his knees almost gave way.\n\n\"Fuck, babe!\" he cried as he finished and went to his knees, leaning over her. He ended up pulling her down into his lap since her legs wouldn't hold her either. She lay her head back against him as she held her. \"That was so hot, babe. I loved that. I love making you come.\"\n\nShe said nothing, laying there limp and spent. After a moment, he got up, picking her up and starting to lay her down.\n\n\"Nnn, let me go wash up and let the water out of the tub. I will be right back,\" she said softly, stumbling to her feet. She hurried to the bathroom before he could stop her and got back into the water to clean up before drying off and pulling his shirt and the socks back on. She laid next to him in the bed, on his shoulder since he was still awake and held his arm open for her.\n\n\"So were you? Thinking about me in there?\"\n\nShe blushed. \"I like baths sometimes... but I think the oils in the water helped that a lot. And how quickly you... did what you did.\"\n\n\"You came fast. What were you thinking about if not me? That book have sex in it?\"\n\n\"No. I was just reading. I... sort of like that position,\" she said softly. \"Aren't you tired? You can go back to sleep if you want, I will be quiet and be still and just read.\"\n\nHe laughed. \"So shy. Alright babe, don't stay up too late. I don't want us sleeping opposite of each other. Plus Ricky is coming back tomorrow for the pinup girl on your hip.\"\n\n\"So soon! The other one still hurts!\"\n\n\"Yeah, it's fine as long as it's not in the same area. Mmm. Get some sleep babe, ok?\"\n\n\"I will, promise,\" she answered, rolling away from him with the book. He moved closer, spooning her close and she barely stopped herself from sighing. \n\nShe fell asleep with the book in her hand and the lamp on. Wynter woke her, rolling her to her back and kissing her. She reached up, planning to push him back, but remembering at the last second not to as her hands touched his face. Almost as soon as they did, the necklace shocked her and he jerked back, yanking her hands away.\n\n\"Shit! Elle, are you alright? Elle?\"\n\nShe stared up at him panting in pain and fear. \"That hurt!\"\n\n\"I'm sorry, you must have had your hands too close to the necklace. Are you ok?\"\n\n\"Yes? It just hurt... a lot!\"\n\n\"I will get Hew back in to adjust the proximity. It has to do with your matching heart rate or something, he explained it, but I wasn't listening. I will have him make it closer. Ok? I'm sorry.\"\n\n\"It's ok. I know you weren't trying to hurt me. Now my head hurts though, can I have some tylenol?\"\n\n\"Yeah, hold on. I will have Cris get you some.\"\n\n\"I can get it, where is it?\"\n\n\"Sit tight, you are fine,\" he said breathlessly, getting up and going to the com. \n\nShe got up as he called to Cris and stretched.\n\n\"Wow, babe. You look kind of hot in my shirt. And the little socks. Kind of adorable. I thought I wanted sexy, but adorable works too. Wear that for me today? Do a little messy bun like they do on TV? It will be good anyway since he needs access to your hip. You sure you're ok?\"\n\n\"Yeah. Could I have more coffee?\"\n\n\"Of course. Same thing?\"\n\n\"Yeah, but an extra shot. Maybe the caffeine will help with my headache.\"\n\nHe led her out to the living room as she was and she saw Chris look her over, his eyes going to her socked feet immediately. He handed her the tylenol as Wynter told him to get more coffee. \n\nCris used the app to order coffee, then pulled out an ipad. \"She wants to make a grocery list. That cool boss?\"\n\n\"Yeah, whatever she wants. Get whatever you want babe, anything. Buenos d\u00edas Iola,\" he said as Iola came out of the pantry and smiled at them.\n\nElle slid the ipad closer and began filling the cart with ingredients and other things she wanted. Since she didn't want Cris to think she was trying to pump him for information the night before, she turned to Wynter. \"Hey? You think you could give me a tour of this place. It's a lot bigger than it seems from outside I noticed.\"\n\n\"Yeah! After breakfast! Or... I guess after Ricky.\"\n\nShe turned back to Cris. \"Almost finished the book last night, do you have the second one?\"\n\n\"Already? Shit. Yeah, I have it.\"\n\n\"Fast reader. Can I borrow it?\"\n\n\"Yeah, just don't go catching up with me and passing me.\"\n\n\"I won't!\"\n\n\"You're head hurting like it did before?\"\n\n\"Not as bad.\"\n\n\"She got an accidental shock,\" Wynter said. \"That reminds me, send for Hew to adjust it. Her hands weren't that close and they were on me and not her.\"\n\n\"Will do,\" Cris said, getting up and going outside. He walked right out the door and Elle wondered again if the door really did trigger the necklace. She would have to test it. \n\n\"Did he order the coffee?\" she asked getting up. \"I will remind him while he is...\"\n\nThe shock that hit her as she reached for the door put her on the floor, on her back. She was still a couple feet away from it!\n\nWynter pulled her back quickly, making it so she could breathe again and she lay there writhing and mewling.\n\n\"Did she just try to run?\" Cris asked incredulously, coming in the door.\n\n\"No, she was talking about reminding you about the coffee! I think she forgot! Shit! Elle, can you look at me?\"\n\n\"Isn't that set on high? Did he change that setting on her? On the necklace? Shit, Wyn, she looks out of it. You should call the doc! I will call him now!\" Cris said breathlessly, dialing the phone.\n\nElle stared up at the ceiling and tried to remember how to breathe, but it hurt so badly. \"Nnn,\" she managed to whimper as tears leaked out of her eyes.\n\n\"Elle, baby, please, look at me? Shit! Tell him to hurry, Cris! Babe? You'll be fine. I have you! I won't let you go, I promise. I will hold you till the doc gets here and gets you squared away. Cris! What do I do? She is just staring at the ceiling! Did that fuck her up? Did I not get her back in time?\"",
        "\"I don't know Wyn, I've never had experience with this before. Shit. I would just fucking lock the doors and get rid of that thing. That's twice today it hurt her for no reason.\"\n\n\"Hew will fix it! And she won't forget about the door again.\"\n\n\"If she remembers her name after this. Shit, Wyn. She looks like her brains were fried.\"\n\n\"Don't say that! Fuck, Cris, what do I do?\"\n\nIola hurried around the island with a cold compress and put it on Elle's head, then started rubbing Elle's hands. \"Off!\" Iola demanded, pointing at the necklace.\n\nWynter took it off quickly and Iola patted the ring of burns around Elle's neck with the cold cloth.\n\nElle whimpered again.\n\n\"Frotar!\" Iola demanded, handing Wynter Elle's hand and grabbing her other one to rub.\n\nCris moved down and started rubbing Elle's feet, hard and fast like Iola was doing. \n\nBy the time the doctor arrived, Elle had turned her head enough to press her face into Wynters stomach and close her eyes as she breathed shallowly. \n\nThey moved her to the medical room and laid her on the table, but shortly after that, she was able to whisper and clutch Wynters hand.\n\n\"Given the day, she will be fine. I would say the voltage is too high. A few more seconds and she may have gone into cardiac arrest. This is nothing to play with, Mr Hallan, shocks of this magnitude on her tiny body... she is not built for this sort of punishment.\"\n\n\"It wasn't a punishment! It was an accident, she wasn't...\"\n\n\"Just a turn of phrase. I was not suggesting you punished her, just saying she can not handle this sort of damage. Next time she may not come around. Do you want me to help her sleep?\"\n\n\"No. I want her to wake up, come around. I want to see her alert. You are sure she is ok?\"\n\n\"Positive. Think of it in terms of having her bell rung. She will be fine. Let her rest and come around in her own time, don't force it.\"\n\n\"Boss, Ricky is here. Should I tell him to come back tomorrow instead?\"\n\n\"No. May as well do it while she is too unfocused to feel it. You can go, doc, but stay on call. Be ready to come back if she needs it.\"\n\n\"Of course, always, Mr Hallan. Cris. Have a good day.\"\n\nCris saw him out and came back with Ricky.\n\n\"Fuck, what happened to her?\"\n\n\"Shock,\" Cris answered. \"She got too close to the front door, shocked the shit out of her.\"\n\n\"That's some like, old school mental patient shit. She hardly looks coherent. You sure?\"\n\n\"Doc was in, he said she will be fine. It's fine, this way it won't hurt so much and she will be still, right?\"\n\n\"Sure man, I guess. Let's do this then. Roll her and let's clean her hip.\"\n\nElle clutched Wynters hand more tightly as they rolled her to her side. Hands on her legs, on her feet told her Cris was there too. She wondered distantly if Wynter noticed his hands on her and if he cared. Cris was rubbing her legs and feet hard, like Iola had been doing. Was he trying to help or using an excuse to be a perv?\n\n\"Wynter?\" she managed.\n\n\"Babe! You talked! Hey, how are you feeling?\"\n\n\"Drink?\"\n\n\"I brought your coffee, it's right here,\" Cris said, halding Wynter the drink. \"Or would you rather have something cold? You want food? A smoothie maybe?\"\n\n\"Yeah. Yes please, that.\"\n\n\"Ok, I can do a mango pineapple or a strawberry banana.\"\n\n\"Strawberry one,\" she croaked. \n\n\"Coming up. Sip your coffee a bit.\"\n\nElle lay still as Ricky cleaned her leg and by the time Cris came back with a smoothie, Ricky had sat down and turned the tattoo machine on. \n\n\"Babe, why don't you tell Ricky your plan?\" Wynter asked quickly when she flinched and whimpered again as soon as the needle hit her hip.\n\nShe haltingly told him about the charity donations of the flash between gasps, hisses and whimpers. It didn't take long for him to agree and then go quiet again.\n\nElle gritted her teeth and more tears leaked from her eyes. \n\n\"It's ok babe,\" Wynter whispered. \"I have you, I'm right here. It will be over in no time.\"\n\n\"Elle?\" Cris asked. \"You hear they are making your favorite book into a TV show?\"\n\n\"Yeah,\" she breathed.\n\n\"I'm hoping it doesn't suck, one of my favorites too. You gonna watch it?\"\n\n\"Yeah.\"\n\n\"What about the new Dune about to come out, you excited for that? Bet you are, it's got Jason Mamoa in it. All the girls love him, right?\"\n\n\"No. Yes. I want to see it. No to Mamoa. He looks like he would gleefully kill me then have a beer after.\"\n\n\"Hah! He does have that look, doesn't he? You watch all the Marvel movies?\"\n\n\"Yeah. Not super into it, but they are entertaining.\"\n\n\"Yeah, the new one is coming out. We should all have a movie night and watch it. Anything special coming out you want to see? Tell us about it.\"\n\n\"Yeah!\" Wynter agreed quickly.\n\n\"The new Lord of the Rings show OW!\"\n\n\"Yeah, that looks great,\" Cris said, sitting down near her feet and patting her ankle gently. He asked her about movies and shows and then books. They talked about books they both liked and he kept her mind off of the tattoo and the pain until it was done with. She realized at one point that he was also rubbing her feet almost absently. Wynter was holding her and laying back and watching the tattoo, listening to them talk. Ever so often, Ricky would comment on a movie or show or book. Wynter stayed quiet, just holding her and listening as he watched.\n\nAfterward, he helped her up, walking her to the front so she could lay on the couch. Hew had come and gone, apparently, leaving the necklace with Iola. Wynter immediately put it back on her and she lay on the couch feeling despondent and empty. How was she going to escape?\n\nWynter didn't let her lay there very long, making her get up and go back to the media room with him while he turned on the TV. He felt tense and irritated.\n\n\"Are you ok?\" she asked him softly.\n\n\"Fine. Cris, have Iola bring a late lunch in here.\"\n\n\"Are you sure? You seem upset? What is it?\"\n\n\"I'm fine, Elle. I just... it's not you, ok? Cris?\"\n\n\"She's making it.\"\n\n\"No. I mean, ok, but, I need to go in my office a while. Make sure she eats. Stay in here with her and... you know.\"\n\n\"Got it, boss,\" Cris nodded and Wynter got up and left, looking like he had to go do something he didn't like.\n\n\"Is he ok?\" she asked Cris.\n\n\"Yeah. he has to step out for a while three days a week for something, sometimes more. It's fine. He'll tell you if he wants you to know.\"\n\nShe noticed he was a lot nice to her when Wynter was there. When he was gone he acted cold, like maybe he was only putting up with her for Wynters sake. \n\nOr maybe because he wanted to be closer but knew it was wrong and it would piss Wynter off?\n\nShe turned on the couch and laid down, her feet at the other end and poking out of the blanket. \"How long will he be?\"\n\n\"Depends. Hour and a half, three.\"\n\n\"Oh, so not just a few minutes. I guess I should watch something. Or here, you can. You have to be stuck in here with me, you can pick. Maybe we can watch that show that came from the books?\"\n\n\"Oh, nah. Don't watch the show till you have read all the books,\" he said, sitting down and taking the controller. \n\nShe noticed he watched her feet carefully, sitting as close as he could without sitting on them. \"You seen Firefly?\"\n\n\"Yeah, but I never say no to watching it again.\"\n\n\"Hah! Awesome, a browncoat?\"\n\n\"The shiniest!\"\n\n\"Fucking A! Firefly it is!\"\n\nHe started the show and sat back, throwing an arm across the back of the couch. She watched the show, but also watched him look down at her feet again and again. \n\nIola brought them lunch and she sat up to eat, but immediately laid back down, her head down further on the couch so that she had to curl up more tightly and there was less room. Her feet touched his hip and leg. She had also purposefully slid down so that the shirt had pulled up and her underwear showed, then pretended not to notice as she watched the show.\n\nHe noticed. He looked at her feet and her exposed backside and underwear.\n\n\"Hip sore?\" he asked.\n\n\"Yeah,\" she answered, leaning up to pull the shirt up and look at it, pushing the side of the underwear down so she could see it. \"It is kind of cool, but don't tell him I admitted that.\"\n\n\"Not a peep. He really is an amazing artist. The ink he has designed for you is badass. Thinking about having him do one for me.\"\n\n\"Yeah? Like the ones you showed him for me?\"\n\n\"What do you mean?\" he asked warily.\n\n\"The ones from my fandoms. I knew he didn't read the books, someone had to show him the symbols and artwork and stuff. You are the obvious choice.\"\n\n\"I just showed him some stuff online.\"\n\n\"See? I knew it was you,\" she said, touching the tattoo lightly. \"Stings still.\"\n\nHe said nothing, his cheeks turning pink as he looked back to the huge screen on the wall.\n\nShe covered her hip and laid back down, burrowing her feet under his leg.\n\n\"Cold?\"\n\n\"I'm ok mostly. My feet get cold.\"\n\n\"Your head still hurts too.\"\n\n\"Yes? How did you know that?\"\n\n\"I can tell. I can help, if you want.\"\n\n\"Yeah, ok,\" she answered, sitting up closer to him. She looked up at him from a foot away and he took hold of her face. His fingers traced around until one hand was on the back of her head at the base of her skull, two fingers on each side, the other hand around the front of her face, two fingers on the bridge of her nose. He squeezed the bridge lightly and slid his fingers down as he pressed on the back of her skull, then did it again and again.\n\n\"Better?\" he asked, letting her go.\n\nShe opened her eyes, looking around, then her eyebrows shot up in real astonishment. \"That... actually worked! How did you do that? I have never heard of anything like that! My head doesn't hurt anymore!\"\n\n\"Old trick my grandmother taught me, actually. It only works on stress and tension headaches though.\"\n\n\"Thanks,\" she said genuinely, then laid back down again. She even felt less stressed now and the pain was completely gone. She actually felt a little sleepy even, she was so relaxed. \"I feel so much better! That is kind of a miracle thing.\"\n\n\"Like I said, only works on a certain kind of headache, but I was guessing that was your issue.\"\n\n\"Yeah. A little stressed over here.\"\n\n\"I can help any time.\"\n\n\"Just the head thing or you do more of those foot rubs too?\"\n\n\"Of course,\" he said quickly, immediately grabbing her foot and pulling it to his lap.\n\nShe moved down closer, laying with both feet in his lap. \n\nShe lay watching the show and laughing with him as he worked on her feet. He pulled the socks off and got each little toe, then put the socks back on.\n\nWhen he started massaging one handed, she pretended not to notice his other hand trying to adjust his pants and hide his giant erection. She didn't really care. It felt amazing and it really was relaxing her enough that she started drifting off.\n\n\"Not sure you should sleep. Don't want you up all night again. 2 AM baths waking him up.\"\n\nSo he had been watching.\n\n\"I won't sleep,\" she said with a yawn. \"Promise. It just really feels good. Mmmm. How much longer will he be do you think?\"\n\n\"Don't know. After his remote therapy session, he has another with his parents. Part of their stipulation for letting him live out here alone after he... hurt himself.\"\n\n\"Is that what he told them? So he wouldn't have to admit he kidnapped a girl and she got away?\"\n\n\"No. That is what he told them so they wouldn't hunt you down and put you in the ground. They wouldn't really care about what he did, just about what you did to him and you keeping your mouth shut. So he lied and said he did it to himself. You said no to coming back to New York with him and he was so heartbroken, he hurt himself. That's what they think.\"\n\n\"But you know the truth.\"\n\n\"He told me everything.\"\n\n\"Even how he tortured me?\"\n\n\"Probably not all of it. He said he wasn't very nice to you especially at first. You grew on him really quick.\"\n\nShe sighed. \"I don't want to talk about this, or him. Why are you being so nice to me anyway? Helping my headache, rubbing my feet? Is he making you? You don't have to do this if he said you had to. I don't...\"\n\n\"No, he didn't. It's fine. I'm not a bad person, Elle. I know the logic might seem off to you, but I'm not. Wynter isn't a bad kid... he's just a little entitled and oblivious. You are helping with that.\"\n\n\"I don't love him. I don't even like him. I will do what I have to to survive, but... I am terrified of him. The things he did to me... I am afraid of that happening all over again. I told him that, but I think he thinks he can make me change my mind by throwing money at me. I know you will probably tell him, but I don't care. He knows. He doesn't care. I just have to hope he gets bored with me sooner rather than later and find little pieces of happiness where I can.\"\n\n\"As long as you at least fake it with him and he doesn't go off the deep end again,\" Cris said with a scowl. \"He really did almost kill himself, you know. When you never registered for classes, or even looked into the school he got you into. He was already volatile... I had to sit with him 24/7. It sucked, hearing him talk about you. You... aren't really like I imagined you. The way he talked at first, like you broke his heart. It wasn't until later when he started making plans and we came out here that I found out what really happened.\"\n\n\"I am betting not all of it.\"\n\n\"Probably not. Just hearing you talk to him a few times told me he didn't tell me everything.\"\n\n\"He drugged me, kidnapped me, tied me up. Hurt me, raped me over and over again. Drugged me some more, hurt me some more. Tattooed me against my will, pierced me. He promised he would let me go at the end of the week if I stopped fighting him. Stopped trying to get away. Then he changed his mind. Wanted me to come to New York and I knew I had to get away. I hit him and ran. It was torture. A week of terrifying hell. I tried to ask for help and he just gave them money. No one would help me. I stayed in bed for weeks, so afraid he would hunt me down. I don't know why he is set on me... I just hope he gets bored soon.\"\n\n\"Don't. Don't hope that,\" Cris said softly. \n\nShe looked at Cris and understood. If that happened, she would be dead. She had to get away.\n\nJust this moment, she couldn't fake it anymore and she didn't want to be touched. She pulled away from his hands and curled up under the blankets. She hid her face so he couldn't see her crying.\n\n\"He does care about you,\" Cris offered. \"I can see how hard he is trying for you.\"\n\nShe didn't answer him and he sighed.\n\nBy the time Wynter came in, she had cried herself to sleep. She jerked awake when he lifted her up to sit down so she could lay in his lap. \"Hey babe, how do you feel?\" he asked softly.\n\n\"I am ok,\" she answered quickly, feeling a little disoriented. She had been having nightmares. She looked around and Cris was staring at the huge screen with a scowl.\n\nWynter picked up the remote without even asking or saying anything and turned off the show, flipping through to find something he wanted to watch. She saw Cris glance at her, but she stared hard at nothing as Wynter held her. \n\nShe did stretch out a little and dig her toes under his leg. She didn't know why, but it did make her feel better. Safer. \n\nHis hand slid down his thigh and took hold of a foot, squeezing gently. Reassuringly. \n\nWynter picked something, a reality show was all she really noticed. He stroked her hair back absently, then looked down at her and smiled. \"You feel like going back to the bedroom?\"\n\nHe didn't wait for an answer, picking her up and carrying her out and towards the bedroom.\n\n\"I thought I got a tour,\" she said nervously, not wanting to ask him not to and piss him off.\n\nHe grinned, \"Later,\" he said huskily. \"I need you. I want to make you come!\"\n\nShe laid her head on his chest, not feeling up to trying to talk him out of it. He tossed her on the bed happily, like he was in a good mood and climbed into bed after her, tugging her clothes off as he did.\n\nElle leaned against the wall in the shower after, still feeling low.\n\n\"What's wrong, babe?\" Wynter asked cheerfulling, pulling her back in his arms.\n\n\"I just don't feel very good still,\" she lied, letting her head fall back on him.\n\nWhen she went to get dressed, she looked for more socks, but only found a single pair.\n\n\"Wynter?\" she asked, coming out. \"Are there more socks?\"\n\n\"I didn't think you would need them, you have all dress stuff mostly.\"\n\n\"My feet get cold,\" she lied. \"Can I order some more?\"\n\n\"Sure, I will get my ipad. You hungry?\"\n\nHe sat her at the island and she saw Cris look up, looking her over as Wynter opened the ipad and got on a website. He handed it to her after he opened it. \n\nShe hesitated. \"The light is making my head hurt. Can Cris do it while you take me on a tour of the darker parts of the house?\"\n\n\"Sure!\"\n\n\"Do what?\" Cris asked, taking the ipad she handed him.\n\n\"Get more socks. There are only two pairs in there. My feet get cold. Just whatever kind, I don't care. If you don't mind. Is that ok? I can do it after if you'd rather.\"\n\n\"No, it's cool. I can do that,\" he shrugged, but she saw the light in his eye that said he was excited to be doing it.\n\nWynter led her back into the house and showed her the extra rooms, including what he said he would make her library. She noticed he skipped a door in the back, one with a panel on it with a pin passcode to get in. She didn't ask, though she was curious. There was a back door, but the way he pulled her wide of it, she knew it was keyed to her necklace as well. She wondered if the windows were and if she could break one or open one. She hadn't seen one yet that could be opened. \n\nThey made their way back around to the kitchen and the island and Cris was still picking out socks, looking very engrossed in what he was doing.\n\nShe sat and ate with them, smiling at Iola, then Wynter led her back to his art room, setting her in a chair as he sat down to draw. Cris stood at the door with a book.\n\n\"Wynter?\" she asked softly. \"May I go lay down and watch TV?\"\n\n\"Why don't you read in here with me?\" he asked, sounding hurt.\n\n\"My eyes hurt, I was just going to lay down and watch something that didn't make my brain work so hard.\"\n\n\"Fine,\" he said a little dejectedly, getting up. \"Come on, Cris, let's go play. She can watch us.\"\n\n\"Not sure how fun that will be for her, but ok! Don't have to twist my arm,\" Cris said congenially, but she could hear the disapproval in his voice.\n\nWynter led her to the hall, but Cris touched his arm, holding him back and motioning her on. \"Remember you told me to tell you when I thought you were fucking up? No girl wants to watch two guys play video games. If she is watching something, don't come take the remote and change it to something you would prefer but don't even really want to watch. Indulge her. Pay attention to the things she likes and enjoy them with her. If she wants to watch something while you draw, let her. Don't suffocate her, let her spend time out of your proximity. Remember, distance makes the heart grow fonder, and she will respect that you are giving her space to learn to care for you. Not making her just sit and stare at you in boredom while you do something else.\"\n\nWynter sighed, an angry huff, but nodded. He caught up to her at the door where she was waiting and led her in. \"You wanna watch something?\" he asked a little grumpily.\n\n\"You can play, I don't mind. My head hurts too much to focus on a show anyway. Will I be in the way of your controller if I lay my head in your lap?\"\n\n\"No! Not at all,\" he answered with a grin.\n\nShe sat in the middle again, noticing Cris sat significantly closer, away from the end of the couch.She wrapped in the blanket and laid down, not even asking, just putting her feet up in his lap. He said nothing at all, acting like he didn't even notice as they played. He did constantly rest his hand on her foot and squeeze reassuringly every time he wasn't actively playing. "
    ],
    "authorname": "gabthewriter",
    "tags": [
        "rewritten fairytale",
        "feet",
        "fetish",
        "kidnapping",
        "noncon",
        "nonconsent",
        "reluctance",
        "romance",
        "non-con"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/e-written-elle-02"
}