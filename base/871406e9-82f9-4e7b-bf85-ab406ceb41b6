{
    "title": "Calendar Girl",
    "pages": [
        "A couple weeks ago I read an article about a group of students at the University of Sydney' s veterinary school who do an annual nude calendar to raise money for good animal-related causes. Naturally, I then did some research; turns out students do the same thing in Scotland, Liverpool, and other places, and that there's a subreddit just for these kinds of pics. It occurred to me that it might be awkward to be in that calendar... not because of the camera, mind. Because of your classmates.\n\nI'm entering this in the Lit Nude Day contest. Please enjoy and, if you like it, cast your vote at the end!\n\n* * *\n\nThey were discussing us again.\n\nThe Girls discussed us a lot, I knew. Me and Reagan. We were sitting in the Main Seminar Room that day with our feet up on the cheap table the professors use for department meetings, and we exchanged eye rolls. Why? Because they were discussing us again.\n\n\"It's the way of the world, man.\" The prophetic words of the immortal Dave, greeting me at orientation when I'd started the program. \"They treat you like a piece of meat here, and then as soon as you're off-campus they act like you don't exist.\" A piece of meat, yeah; Dave was famous for being treated that way. The guy could pull pussy like nobody I'd ever seen. \"Meet up with them at a bar in the neighborhood? Man, these girls are the most stuck-up bitches ever.\"\n\nHe'd been right, too, not that I'd tried to hook up with any of The Girls; I don't shit where I eat, and when you're in a grad program with a bunch of women, it doesn't take a rocket scientist to realize they'll all know if you put the moves on any of them. Not that that stopped me from admiring them, of course. Which was fair, because nothing seemed to stop them from discussing us.\n\nLike now.\n\nI could see the glances, snaking across the room from where they huddled in the corner. We were all waiting for Professor Lim to arrive for our required second-year seminar, the one on Nontraditional Roles For The Modern Library, and Reagan sighed. \"You think they're all in synch?\"\n\n\"Do what now?\" I blinked. I'd been busy checking out Erin's tits where she sat by the windows, while carefully adjusting my twitchy cock. Jaqui hadn't stayed over last night, and I'd really been looking forward to being with her. I was almost uncontrollably horny. It was like being a college freshman all over again. I stirred. \"What's that?\"\n\n\"In synch.\" Reagan pushed his glasses up on his greasy nose and grinned his unpleasant smile. \"Like, menstrually.\"\n\n\"Eww.\" I was only 24, with no sisters, so menstruation remained a vaguely unsettling mystery to me in those days. I just knew that Jaqui tended to simply avoid me for a few days each month, but one of the many things I didn't feel like thinking about was The Girls shoving tampons into themselves. \"Dude. Keep it down.\" I glanced over. \"They're already talking about us. I don't think we need to give them a reason to get skeeved out by us discussing their periods.\"\n\nHe shrugged easily and returned to his phone, where some sort of internet poker game had swallowed him up. Off to the side I heard The Girls crescendo into a higher and more urgent whisper before, suddenly, I caught Brandi's high, honking laugh. They were already gazing at me when, startled, I glanced over: four female faces, staring intently, a couple of them nodding coolly. I know I was blushing.\n\nMost of them weren't hot, per se; only Megan Ringo, with the first-years, truly qualified as a knockout. But they were women, and young, and smart, and Reagan and I were the only guys in the whole program. So there was always a secret ripple of sexual tension at moments like this, with The Girls looking boldly at me while I just smiled like a dumbass.\n\nI waited a decent interval before I blinked innocently at them. \"What?\" I said loudly, and the tornado of female laughter that came whooshing back at me left me redder than before. Except for Jenn. She was just squinting thoughtfully at me.\n\n\"Nothing, Mikey,\" mocked Brandi, yawning extravagantly. She was a coffee snob, and all the seminar room had was a Keurig nobody cleaned. \"Just girl talk.\"\n\n\"Yeah.\" Aimee tossed back her long black hair. \"It's not always about you.\" They giggled some more, and when I glanced back toward Reagan he was nodding sagely. His expression was loud: yup. Synchronized.\n\nI sighed. Professor Lim showed up a mere seven minutes late, and I took my feet off the table and got ready to work.\n\n* * *\n\nI lay that night, my cock throbbing inside my boxers, gnawing at my fingernails while the endless low roar of the streets painted my ceiling with passing headlights.\n\nJaqui.\n\nThe text had come in at 11:30; her apologies. She had to study for her licensure test. I believed it; this was her third try, meaning she'd need to take classes if she failed again. But I was getting thoroughly sick of nights by myself; what was the point of having a grad-school girlfriend if the two of you couldn't fuck endlessly?\n\nWithout even thinking about it my fingers were tracing along my belly, through the hair there, prodding with loathing into my boxers. I hadn't needed to do this since I'd started dating Jaqui; fuck. Having a girlfriend is supposed to immunize you against having to whack it. But my girlfriend wasn't here and my hard-on was, so I lay my head back on my pillow and reached down to grab the hot, sweaty rod I'd produced in my boxers.\n\nMasturbation is like riding a bike. You never really forget how to do it.\n\nI shoved my boxers halfway down my thighs, the streetlights glinting through my window; my dick cast a weird sundial shadow across my belly, then the fingers of my left hand were caressing my balls while I ran my right hand along the sides of my trembling cock. Good lord. It felt good, almost Jaqui-good. This would take all of three minutes, I told myself, craning my neck to look down my body.\n\nNah. More like two.\n\nI did a quick crunching sit-up, the saliva already drooling out of my mouth, and landed a big bubbly loogie smack on my head, right alongside my piss-slit. The spit gurgled down to meet my hand as I wrapped it around, fingers and shaft moist now, and then I lay back down and started running my hand up and down with firm, long strokes, my scrotum jiggling in the other hand.\n\nI sent my mind elsewhere, out of the stinking city apartment, out of the narrow Jaqui-less bed, out of my legs fighting the elastic of my boxers; I was desperate to cum, the hand around my cock making sickening wet slithery sounds, my left hand tightening on my balls. I was holding my breath within just a few seconds, knowing it was close, squeezing hard at the base of my head on every upstroke now.\n\nLike the best orgasms, it surprised me when I came; a tingle behind my balls, then the rushing sensation inside my shaft, and then the long gaspy exhale of breath in time with the first warm thick slap of semen along my chest and stomach. The second rope was more powerful, a splatter surprising me by landing on my chin; it hadn't often gotten up that high.\n\nI relaxed slowly, sordidly, my body covered thick with its own cum, and as I drew a quietly shuddering breath I realized I hadn't been thinking about Jacqui when I came. I'd been thinking about Erin Lewes and her big, perfect tits next to the seminar-room window.\n\n* * *\n\nClass the next morning was an elective, four of us from the GSLMS sitting in on an undergrad secondary-ed course on classroom management. I wasn't on the education track, but, well, I needed an elective and there weren't that many. Library schools don't really have an infinite number of dedicated courses. So.\n\nI was way up in the back, where I could gaze absently down at the sea of heads before me, almost all of them female. Forget library school: education courses are an estrogen factory too. Combine the two, and you get what Reagan and I had and what Dave had dealt with in his time: honorary womanhood.\n\nThe hubbub rose as the guy two seats down from me plunked himself down. \"Hey, man,\" he nodded. We didn't know each other's names, but we always sat back here. He looked like a junior, probably.\n\n\"Hi.\" I was liberating my laptop with a screech of Velcro. \"Full class today.\" The undergrads were doing a test review, meaning we grad students would get to leave early. I started to spy my people in the crowd, clustered thickly on the right side by the door; the first-year kids from my program tended to stick together. I'd just barely learned their names (other than the fetching Megan Ringo, that is, who'd made herself known the moment she came into view). The redhead on the aisle was Olivia, then Rebecca next to her with the two friends she carried in her sweater. Then goofy Peyton, with the halfhearted dreads. She was from Alaska or Montana, somewhere like that. On the aisle behind them was Brandi, from my year, making sure everyone could see the logo on the side of her coffee cup. <br ><br >That left Chelsea Whicker, on her fourth or fifth year in a two-year program, to show up chronically late. Her and Jenn, who'd given me the thoughtful glance in the seminar yesterday. I was glancing down to enter my password when she came sliding in with four minutes before the class was due to start.\n\nAs always, the dominant impression was height: Jenn had apparently played volleyball in college, though she only came up to my forehead. She talked, moved, and thought with a haste that always seemed a little breathless, and now I saw her crouch down next to the first-years for a quick little huddle. I noticed her curls toss slightly as she jerked her head. Toward my row.\n\nOf course. They were discussing me.\n\nI nestled back in my seat as my laptop whined its way toward the course documents. Today's lesson was on adolescent psychology. Great. Erikson and his crises. I was just starting to page mindlessly down past the diagrams when, amazingly, I noticed that Jenn had made her way to my row and was currently walking right toward the empty seat next to me.\n\nThe fuck!\n\n\"Hey, Mike.\" She had a nice smile under sharp blue eyes. \"Mind if I slum it back here with you?\"\n\n\"Uh, sure.\" I smiled back, wondering what her game was. The Girls were always very nice to Reagan and me, but they didn't make a habit of sitting with us in class. \"Be careful, though. We spend most of the class back here surfing the web and watching porn.\" A couple seats down in the other direction, the other guy was leaning forward so that he could stare at Jenn's yoga pants with unhidden interest.\n\nShe laughed, but just a little. \"Liar. I'm a library student. I know which sites they block in here.\" She settled into the seat beside mine, then pushed her thick hair back past her ear in frizzed waves. \"This is good. I wanted to talk to you about something,\" she added, a little tentatively.\n\n\"Yeah?\" Jenn was a heavy hitter in our program. Our cohort had elected her to run all our fundraising, which the university demanded as part of some sort of philanthropic requirement. Usually, the library program ran - of course - a book fair. \"Little old me?\" I usually kept to myself within the program.\n\n\"Yup. Little old you,\" she replied slowly, but by then the professor was stalking in followed by our scurrying Chelsea, and that meant whatever she had to tell me would need to wait until the break.\n\nThick, powerful waves. That's what Jenn's hair looked like, stirring in the sough of breeze from the vents behind our seats, and I wondered why I'd never paid much attention to it before. Probably because it had never been this close before, close enough that runaway tendrils and wisps drifted toward me, along with a strong smell of coconut from her shampoo. She had a long, twisty rope of hair falling along the left side of her face, and I had to suppress the urge to hook it out of the way.\n\nAt last, the shuffle of papers and the snapping of laptop lids announced the break, and all around me people stirred to their feet. I arched my back against the seat, then let my head loll sideways toward Jenn. \"So.\"\n\nShe glanced over and nodded slowly. \"So.\" She was toying with the corner of a notebook, almost as if she was trying to avoid speaking. The corner of my eye caught Rebecca and Olivia, several rows down, twisting around to look curiously at us. Jenn cleared her throat. \"We had a new idea for the philanthropic fundraiser this year. Did you want to get involved?\"\n\n\"Sure,\" I shrugged. I hadn't last year, beyond donating a couple of books. \"Cashier? Or I can move shelves around.\"\n\nShe smiled a little, distracted, and started to play with her hair. It wrapped thickly around her finger, almost a living thing. \"That's the thing, though, Mike. We're thinking of not doing a book fair this year.\"\n\n\"No?\" My eyebrows rose.\n\n\"No. Aimee read an article online about some veterinary students in Australia or New Zealand. They do a huge fundraiser every year to help out animal charities.\"\n\n\"No shit.\"\n\n\"Nope.\" She was looking down at where her phone rested dormant on the thigh of her yoga pants. \"They make, like, all kinds of money.\" She licked her lips, and I knew there was something she was working up to tell me. \"Hand over fist, in fact.\"\n\n\"Yeah?\" I pitched my voice lighthearted. \"Bake sales? Car wash?\" I let my eyes go comically huge. \"Bikini car wash?\"\n\nShe giggled, relieved all of a sudden. \"Funny you, uh, mention that.\" Then, she took a deep breath and started in.\n\n* * *\n\nI took Jaqui out for Greek food that night, the two of us going for iced coffee afterward to the accompaniment of onion-scented kisses as we strolled. The city was busy all around, and it was great... except that I knew I'd need to tell her about Jenn's idea. The sooner, probably, the better. Jaqui was probably not going to like it, I realized. \"Oh!\" I began, as though the thought had just then occurred to me. \"Guess what? I got asked to help out with this year's departmental fundraiser.\"\n\n\"Mmm? The book fair?\" She was looking good that night, tight jeans and a sleeveless T, and my cock stirred every time I looked at her. We'd been dating for seven months and I still wanted to tear her little body apart. She snuggled up to me as we walked. \"I like that your school makes you guys raise money for charity.\"\n\n\"Yeah...\" I pursed my lips, then started in. \"Well, we're not going to do the book fair this year.\"\n\n\"No?\"\n\n\"No. You know Jenn Deutsch? Sort of our class leader?\" They'd met, briefly, when she'd come to pick me up one day, but I had no illusions that Jaqui would remember one girl out of the four or five I'd quickly introduced her to that time. She was kind enough to give me a benign nod, though, so I plunged onward. \"She's got a new idea, based on what some veterinary students do down in New Zealand? Australia?\" I shrugged, making a big effort to keep my voice light. \"They make a calendar.\"\n\n\"Mmhmm.\" She snuggled closer, the two of us in step. Our coffee place was just ahead on the left. I took a deep breath.\n\n\"It's a little bit risqu\u00e9,\" I admitted, shrugging because I knew she could feel it. \"Apparently.\" There was no apparently about it, though; I'd been on the internet as soon as Jenn had left me after class. The calendar was most definitely a little bit risqu\u00e9. \"Sells like hotcakes, though,\" I added desperately. She was tensing a little.\n\n\"How much is a 'little bit?'\" she asked quietly. She'd slowed down a tad.\n\n\"Oh,\" I said, slightly too fast and slightly too loud, \"it's nothing naughty. The pictures don't show anything obscene, you know, or they wouldn't be able to sell the calendars.\" Jaqui was quiet. Ominously so. We weren't in step anymore, her body lurching against mine.\n\n\"So.\" She was still quiet. \"Like, what? Themed pictures? Like, December is a nude chick with a bow over her pussy?\" She was making an effort to sound jokey, but she was failing. I indulged her with a laugh, also too loud.\n\n\"Hell no!\" I pulled her tighter and matched my stride back to hers. \"I told you, it's nothing naughty. Just, you know... sort of suggestive? I guess?\" She wasn't convinced. \"The Australians show their asses, is all.\"\n\n\"Nudity.\" She said it flatly, immediately. \"That's why they sell.\" She sighed. \"Are you the only guy involved, Mike?\"\n\nI swallowed. The answer was yes, so far; Jenn had leaned over and whispered, blushing in a coconut-scented cloud, that she was hoping I'd say yes because she thought the girls would be uncomfortable with Reagan. \"There's Jeff Reagan, too. You've heard me talk about him.\" I cleared my throat. \"She says she only needs me for like one picture. March, I think.\"\n\n<br >She steered me into the coffee place. \"Well. How do you feel about doing it?\"\n\nI released her as we got in line, the place crowded. It was all ceiling fans and oak walls, with copper tabletops. \"It's a fundraiser,\" I said defensively. \"The whole department's doing it. So.\"\n\nShe sighed and shrugged, and when she smiled she was making a real effort. I appreciated that. \"I mean, come on Mike. I know how sexy your ass is. I don't mind you showing it off, I guess, if you don't. But it's sort of weird, right?\" We were nearing the barista. \"Like, posing? With your classmates?\"\n\n\"Nah.\" I tossed my head with exaggerated care. \"No biggie. We had that pool party at Aimee's last month; I've seen them in swimsuits.\" It wasn't the same, and I could tell when her smile tightened that she didn't think so either. I spread my hands. \"The vet students down in Australia do it every year. They go back to class the next day. It really shouldn't be any big deal.\"\n\n\"Not to you.\" She was peering up at the menu, her small mouth pursed. \"I mean, it's fine Mike. Not a big deal, like you say.\" She wanted it to be a big deal, though, to me. I could tell easily, and I'm not the brightest guy in the universe. I thought about leaning in to kiss her cheek, but decided it wasn't the time.\n\n\"If you want,\" I added out of the blue, \"you can come to the shoot. Jenn says some of their boyfriends are probably going to come. You know, to show it's not a thing.\"\n\n\"Sure.\" She sounded tired, or at best neutral. It was the kind of tone that told me I should probably quit while I was ahead and shut up. \"I'll see how my studying goes.\"\n\nThe coffee was great, but apparently the studying was too. Because she left me alone again that night to go home and do some.\n\n* * *\n\n\"Yeah.\" Jenn seemed nervous, up there at the whiteboard, but nowhere near as nervous as I was. I'd lodged myself firmly in the back of the seminar room, my feet once more propped on the long table. Nobody was looking at me, but I told myself everyone was thinking about me. \"So, the dean signed off on this because I told him there wouldn't be anything tasteless in our calendar.\" She blushed deeply, smiling, as a wave of laughter surged around the table. She raised her head, then, and looked at me. \"Mike, we've already had discussions about this. Ideas, thoughts, stuff like that.\" She ran a glance across The Girls. \"Like we discussed, Mike's agreed to do March.\"\n\n\"Fuck yes!\" Erin was grinning at me now, and across from her Olivia gave me a broad wink. \"Now we're talking.\"\n\n\"Sales,\" Olivia nodded with a funny grin. I got a sudden sick feeling as I realized the idea for March's picture, whatever it was, had probably started in the minds of these two. They confirmed it when Erin reached across the table for a high five.\n\n\"It's going to be the best pic in the calendar.\" Erin sat back with a sigh, arching her back a tad too much, the tits massive in her hoodie. \"The rest of you? Good luck looking as good as we will.\"\n\n\"It's not a competition.\" Rebecca rolled her eyes. \"This is for charity, remember.\"\n\n\"Everything's a competition,\" Olivia laughed. \"It's fine. You just enjoy your... what, October?\"\n\n\"October.\" Rebecca drew herself up, apparently proud of her idea. \"Jack o' lanterns!\"",
        "\"Or just ask Mikey down there to pose with you,\" Erin leered. \"Maybe it can be more of a trick-or-treat?\"\n\n\"Knock it off,\" Jenn said mildly as Olivia winked at me again. I hadn't noticed her much, beyond her thick red hair. We'd only had the one class together, and she was a first-year. \"Mike's being very nice to agree to this, girls. He doesn't need you to give him a hard time.\"\n\n\"It's fine.\" I spoke up not because I had anything to say, but because I thought I should. \"I'm not offended.\"\n\n\"Get it?\" Erin's eyes were glittering. \"A hard time?\" The table once again burst into a series of snorts, and I saw sexy little Meg Ringo looking at me with a tight-lipped smile. My cock lurched a little in my cargo shorts, and for the first time the reality came home to me: I was about to see all these girls' asses. Their legs. If the pics I'd found of the Australian calendar was any indication, I'd also see a lot of sideboob and, more than likely, a hint of mound.\n\nFuck. I wondered how many months would feature little Meg.\n\n\"Who's taking the pictures, Jenn?\" Aimee never smiled much. She was all business, a perfect public library director. She was on her phone, and when I leaned out to see what she was glancing at I saw search images of nude calendars. \"Some of these are really creative.\"\n\n\"The Art Department has all kinds of people who photograph nudes. I know one of the grad assistants. He said he'd hook me up with someone.\"\n\n\"This is legal, right?\" Brandi didn't seem concerned, just curious.\n\nJenn nodded vigorously. \"Chelsea's sister is a lawyer. We're fine as long as we shoot on private or university property and don't show anything obscene. No, like, nipples. Or vaginas.\" She glanced down the table at me and colored slightly. \"Or, like, Mike's penis.\" Every head suddenly pivoted toward me, and most of the gazes looked like they were thinking. About my dick. I just blinked.\n\n\"Or his balls, it seems,\" Aimee observed thoughtfully, scanning once again through the Australian pics. She frowned. \"There's a group in Scotland that does this, too. Also veterinary students.\"\n\n\"What is it about vets?\" Rebecca fretted. \"Are they, like, always horny?\"\n\n\"No, these shots aren't really sexual.\" Aimee was squinting closely at her screen. She liked to be thorough, I'd always noticed. \"Just... naked.\" She flicked her thumb, taking in the photos rapid-fire. \"Underboob. Side boob. Lots of ass. Plenty of strategically placed props, blocking all the illegal bits.\" She brightened. \"Ooh. A kilt.\"\n\nThe room went silent, everyone thinking about what we'd see. Margaret, a first-year, maybe the boniest person I'd ever met, looked pensively around but said nothing. Beside her, Rebecca tugged self-consciously at her bra through her shirt. \"It'll be fine.\" Jenn consulted her notebook. \"If you're uncomfortable, just sign up for February. It's a lingerie shoot, not nude.\"\n\n\"Can I sign up for all twelve?\" Olivia grinned, and the tension ebbed a little.\n\n\"Uh, sure.\" Jenn shrugged. \"Or none of them. No problem. We also need people to help out, do set dressing, hold onto the bathrobes, stuff like that. Everyone can help out, even if you don't want to show anything.\" She smiled. \"I'm hoping this will be fun, ladies. And it'll sell like a motherfucker,\" she added emphatically, glancing around at everyone. I could only agree. Nobody at this table was ugly. \"And I'll find a female photographer, Margaret. You'd asked about that last meeting?\"\n\n\"Thanks.\" Margaret didn't talk much. She wanted to be an elementary school librarian, which staggered me. I couldn't imagine her around kids, many of them unruly.\n\n\"Whatever you don't feel like showing? No biggie. We'll just use props.\" Jenn scanned her notes, then looked up and smiled a little more broadly. \"Should be great, right? Yeah?\" She made eye contact with everyone until she got the nods she was looking for, and then shrugged. \"Perfect! So Chelsea wanted me to tell you to text her all your sizes, for the February one. Lingerie. She's getting her work to donate the clothes. That'll be our first shoot, to break the ice.\" She nodded at me. \"Mike, you don't need to be there for that.\"\n\n\"Come on!\" Erin was grinning. \"He can show up in boxers.\" She glanced over at me. \"Or briefs? Whatever.\"\n\n\"I don't have anything that could possibly match up to what you guys would wear,\" I smiled, holding my hands up deferentially. Chelsea worked at Secret Whispers. They'd be looking like prostitutes, probably. \"Count me out of that one. When's my shoot?\" I asked Jenn.\n\nShe nodded toward Erin. \"I'll see when the photographer's available, but the March photo is Erin's idea. So she can tell you about it before we break up here. Then, when the day comes?\" She shrugged. \"Just show up and, you know, get nude.\" That got a catcall from Olivia, but everyone else was packing their stuff up. \"I just want to recognize Mike, girls,\" Jenn called. \"He's being a very good sport about this.\" There was a scattering of applause, and I waved back at them as I put my stuff in my backpack. I had my next class at four, and I was hoping to boogie back to my apartment and get a quick nap.\n\n\"Thank me later,\" came a voice from just above me, and when I looked up I saw Erin looking gleefully back down at me. \"I got you involved in this bullshit.\" Erin was a big girl, not especially beautiful, but sexy in that raw and earthy way that some confident girls are sexy.\n\n\"Yeah,\" I shot back. I'd always liked Erin, even though she was nothing like me. \"Thanks for putting my ass out there for the world to see.\" Something else occurred to me. \"This is going to show up on the internet eventually, too. My mom will see it.\"\n\n\"She's seen your ass before,\" she laughed, pulling out the chair next to me. Erin's enthusiasm always made me smile. She was tall, and she liked to wear low-cut shirts that showed off her impressive cleavage. She had just as much ass, and usually framed it in a tight pair of jeans. \"It'll be fine, Mikey. Nothing scandalous.\"\n\n'Yeah.\" Olivia plunked herself down in the next seat, then flung her feet up onto the table in place of mine. \"Totally classy,\" she giggled.\n\nI smiled at her. She had a reputation for going batshit crazy at bars on weekends, though I'd never seen it. \"Except for the boobs.\" Hers were small; I smiled gamely to make sure she wouldn't be offended, but I needn't have bothered.\n\n\"These?\" she asked innocently, arching her back to what had to be a painful degree. \"You don't think these are classy?\"\n\n\"Well,\" I shrugged, \"I'm sure my girlfriend won't think so.\" I joined in her laugh. \"She's probably going to come to the shoot to make sure I don't do anything stupid.\"\n\n\"Like strip your clothes off and pose with us?\" Erin seemed unimpressed. \"It's a charity calendar. We're raising money for library therapy dogs. She'll be fine.\" She glanced over at Olivia. \"So, our idea is a play on that song, the old one. You know, 'anything you can do, I can do better?' You know that song?\"\n\n\"Of course. I'm not a total idiot.\" I nodded. \"Irving Berlin.\"\n\n\"Who?\"\n\nI blinked. \"Uh, the composer.\"\n\n\"Oh.\" Erin fluttered her fingers dismissively. \"Well, our picture is sort of a pun on that. The caption is going to be Spring cleaning in the library, and some people carry more books than others.\"\n\n\"We're going to, like, subvert gender roles,\" Olivia piped in, with the unconsciously exasperating ivory-tower language grad students love. \"We'll all be in a library, moving books. Like, how women always need to ask guys to move books? Right?\"\n\n\"Sure.\" It sounded like a dumb picture, but I wasn't going to say so.\n\n\"Right. Well, the idea is that Erin asks you to help her by schlepping some books, and you do it, but then I come along with, like, a bigger pile of books. And you look all ashamed because I'm showing you up.\" Olivia's smile threatened to crack her cheeks. \"It'll be so fucking cool!\"\n\n\"I see.\" The joke, clearly, was that Olivia Brewer was barely five feet tall. I'm over six. \"So how many books am I carrying?\n\n\"Enough to cover your junk,\" Erin chimed in pleasantly, glancing down at my lap.\n\n\"Ah.\" I swallowed. \"And Olivia?\"\n\n\"Enough to cover mine,\" the redhead winked again. \"Top and bottom, right? So, that many more books.\" I nodded.\n\n\"It'll be up to the photographer to, you know, position everything so that the whole fucking world will know you're naked,\" Erin finished. \"Easy-peasy.\"\n\nI cleared my throat. \"Cool,\" I managed. This all seemed surprisingly simple. \"And, uh, you? Are you in clothes, Erin?\"\n\n\"Mikey,\" Erin explained patiently, \"nobody's in clothes.\" She shrugged. \"Everyone else's ideas seemed sort of lame, honestly,\" she added, much more quietly. The room was emptying slowly. \"Liv and I? We wanted something more dynamic.\"\n\n\"We wanted a guy,\" Olivia snapped.\n\n\"Right, I guess,\" Erin giggled. \"We wanted a guy.\"\n\nI stood up and hitched my backpack over one shoulder. \"Why not Jeff Reagan?\"\n\n\"Oh,\" Erin shrugged, as if the answer was obvious, \"we talked it over. We don't really want to be naked with Jeff.\" She grinned slowly at me, and I know I was bright red. And when I looked over at Olivia, she was just giving me her mischievous little smirk.\n\n* * *\n\n\"Dude.\" Reagan leaned across a couple of seats a few days later in our Cataloguing class. \"I heard something totally weird.\"\n\n\"Mmm?\" I was frowning over my resume. Library science is a tiny little field, but the good jobs aren't exactly growing on trees. Especially for me, an archivist. There weren't many museums hiring, at least not locally.\n\n\"The Girls.\" He was watching me carefully. \"They're doing, like, a calendar? For this year's fundraiser?\"\n\nI kept my eyes on my laptop screen. \"Not a book fair again?\"\n\n\"No, man.\" I'd been wondering about this conversation ever since Jenn had approached me. Obviously, Reagan would find out about the calendar eventually, and just as obviously he'd see that I was in it and he wasn't. \"A calendar.\"\n\n\"They said something to me the other day, about helping out,\" I shrugged. \"I put in twenty bucks, but they weren't very specific.\"\n\n<br >\"Twenty?\" He sounded relieved. \"That's it? Good. Because I don't want to be in, like, a calendar, man.\" I controlled my face very carefully. He obviously had no idea what kind of calendar it was.\n\n\"You're telling me.\" I sat awkwardly, very conscious of the text I'd gotten from Jenn just before coming into the classroom. The one telling me I should show up tomorrow at the Old Campus Library at seven in the morning, ready for my shoot. Get plenty of sleep! she'd ended, on a chipper note with a grinning emoji. I forced a smile for Reagan. \"The Girls are pretty crazy, man.\"\n\n* * *\n\nSeven am came early, especially since I wanted to take a really good shower. I'd been unsure about my grooming, and I'd debated texting Jenn about it, but eventually I'd just asked Erin instead during our Ethics class the day before. She blinked. \"What?\"\n\n\"Like, should I shave or anything?\" I was trying to be quiet, but Erin didn't seem to have \"quiet\" in her vocabulary. She burst out laughing, right there in the back of the room, drawing an irritated glance from the professor.\n\n\"How furry are you?\" she demanded, loudly chewing a stick of gum.\n\n\"You saw me at that pool party, right?\"\n\nShe scowled. \"Dude, I was drunk as shit during that.\" She reached decisively over, right there in class, and dug her hand quickly under my shirt and up my chest, tickling me; I shrank back against the seat, but her hand just stayed there, cool on my body, her smile growing. \"Nah. Feels fine to me, Mikey.\" She pulled her hand out, not without giving my chest hair a light tug. \"I like 'em hairy.\"\n\nI watched out of the corner of my eye as she calmly got her notebook out, wondering whether she could take a joke. \"I can't believe you did that,\" I admitted. \"I feel like I've been objectified. I think I might raise a complaint with the University's sexual-harassment office.\"\n\nShe gave me a withering glance. \"Spare me, Mikey. At seven o'clock tomorrow, you're going to be pulling your package out on camera with me.\" She held her look to make sure she'd gotten her point across, then smirked and fingered the hem of her shirt. \"You can reciprocate, if you wanna. That way, we're even-stevens.\"\n\n\"I never should have gotten myself involved in this,\" I sighed, and I felt the same way as I walked over to Old Campus in the early morning next day, all scrubbed and feeling chipper. I had wrestled my rebellious hair into a careful tousle. I'd been careful not to touch anything on the subway. As I walked I kept an eye out for Jaqui, or at least for a text from her; I'd told her when and where to meet, but seven am was very early for her.\n\nI was half hoping she'd sleep through this.\n\nThe side door was unlocked, the one near the History department, and I slipped in to find Jenn there waiting for me. She smiled brightly when she saw me. \"Hey, Mike!\" She seemed relieved I'd shown up. \"We're still waiting for Olivia, but the photographer is here. Come meet her.\"\n\nShe was in her everpresent yoga pants under a loose concert t-shirt, this one advertising a long-gone summer tour by a band I knew. I nodded down at her chest as we marched along toward the stacks. \"They broke up, didn't they?\"\n\n\"What?\" She blinked, then followed my gaze down to her tits. \"Oh! The Libertines? Kinda-sorta. I think they're back together now, but do you ever really know?\" She glanced shyly at me. \"Are you a fan?\"\n\n\"Kinda-sorta,\" I smiled, and she relaxed a little. \"How'd the lingerie thing go?\"\n\n\"Fuck, Mike! It was so cool! The photographer is amazing.\" She was pointing me past the sorting carts. \"Through there. I'm going to head back and wait for Liv.\"\n\n\"Thanks. Oh! And can you leave a sign or something? My girlfriend is planning on coming by to watch.\"\n\n\"No shit.\" She glanced unreadably over at me. \"My boyfriend doesn't trust me either, even though I'm only posing with The Girls.\" She swiped a loose twist of hair out of her eyes, then nodded at me and headed back to the side door. \"Oh!\" she called back over her shoulder. \"Photographer's name is Stacia. She's in charge.\"\n\n\"Sure thing.\" I smelled coffee first, even before I heard the clack of equipment and a low hum of voices, so I just followed my nose around a corner near the nonfiction section to find a short, angry woman with spiky whitened hair snapping at Rebecca.\n\n\"Look, just go stand in the corner for awhile. You're not helping.\" Erin was off to one side in a pink terrycloth bathrobe, sipping from a travel mug; she gave me a despondent early-morning wave, then leaned over and muttered something to the angry woman. \"What?\" At once I found myself skewered by her eyes, dark and snarly under black eyebrows. \"Oh. The penis has arrived.\"\n\nI cleared my throat. \"Uh, hi. I'm Mike.\"\n\n\"Put your robe on. I want to get the show on the road.\" I blinked, then looked over at Erin. Who grinned back.\n\n\"Where do I get the robes?\" I asked stupidly, starting to feel like a fool.\n\n\"How the fuck should I know? From behind your bathroom door, probably.\" She busied herself with some sort of cable, leaving me to Erin's drawl.\n\n\"Wait,\" she giggled. \"You didn't bring a bathrobe?\"\n\n\"Um.\"\n\nShe threw back her head and laughed, and when I looked back over at the photographer I realized her glare had worsened. \"Get your clothes off,\" she demanded. \"I want to see what I'm working with.\"\n\n\"Uh, I don't have a robe. I'll just undress when it's time to get the pictures.\"\n\n\"Yeah. Okay. Then your skin will have marks from your fucking waistband. Nope. Come on. Sooner you get your clothes off, the sooner I can shoot.\" Erin was grinning openly at me now, and even Rebecca was hiding a smile.\n\nOf course nobody had told me to bring a robe. And of course I hadn't figured out I needed one. And of course I didn't even own a fucking bathrobe. Slowly, I reached for the bottom of my shirt. Stacia was nodding. \"It's not like we're not all going to see you in all your glory, anyway. Come on.\"\n\nI looked once more, and quite helplessly, at Erin, then sighed and started to take my shirt off. I'm not all that self-conscious about my body, but usually when I strip it's because I'm with someone I want to fuck. This? This was more like the doctor's office. With spectators.\n\nVaguely, as I started on my belt buckle, my brain started to wonder irrelevantly whether my cock would come out all stunted and shriveled. I thought about turning my back, or edging behind a bookshelf to get a little privacy, but Stacia was right: I'd be stark naked in front of these people for quite awhile. What was the point?\n\nAnd so, with a convulsive shove at my waist, I sent my jeans and boxers crashing to the floor.\n\nAll three women stared, immediately but briefly, at my dick, then quickly looked away. I gulped and glanced down, relieved to find that I wasn't at all shriveled. In fact, I was in pretty good form down there, my balls hanging extra-low beneath a cock that was its normal self. I drew myself up and was just about to sigh with relief, when Stacia started over to stand in front of me.\n\n\"See this shit? Look down.\" Her finger on my skin nearly made me jump as she swiped a fingernail over the reddened, corrugated marks my boxers had made around my waist. \"This'll fade in about twenty minutes. Just relax until it does.\" She looked frankly down at my penis, then straight into my eyes. \"See? It's not so bad.\" And then she was marching back over to her equipment, barking at Rebecca.\n\nThis time, when I found Erin's face again, she was nodding knowingly. \"Well,\" she said quietly, \"here we are.\" She sucked down some more coffee. \"Now if only fucking Liv would show up...\"\n\nMy phone was vibrating in my jeans pocket, and I squatted down with absolutely no dignity to dig it out. As expected. \"Uh, my girlfriend's on her way,\" I told no one in particular.\n\nI'm not sure what I expected out of the pause that followed, but Erin's voice was very dry. \"Maybe she can get naked, too.\"\n\nI stood up, fighting a strong urge to keep my hand over my dick, and forced a smile. \"Somehow, I doubt it. Public nudity isn't really her thing.\"\n\n\"There's a first time for everything.\" She was making sure to look at my face, I was grateful to find. \"Like, this is probably the first time you've done something like this, huh?\"\n\nI was just opening my mouth to answer when I heard a voice full of laughter from behind me. \"Why, look! It's a guy's butt!\"\n\nOlivia, it seemed, had arrived. Once more I felt an obscure need to cover myself as I turned around. She was in old-school sweatpants, the waistband rolled carelessly down, and a tanktop with no bra. Her nipples stared at me, and I tried not to stare back; not that she would have cared, seemingly, her eyes riveted to my penis. \"Well. Hello, Mike.\" Her grin was crafty. Jenn stood beside her, making a big effort not to stare at me.\n\n\"Hello yourself.\" My voice came out even. I was proud of myself. She was already stepping out of her sandals.\n\n\"Olivia, right?\" Stacia still sounded deeply pissed. \"Don't be late again, okay? Get your clothes off. We're burning daylight.\"\n\n\"You say the sweetest things,\" Olivia purred in reply, but she was already stripping with an easy self-confidence that I envied. Not that she had anything at all to be ashamed of; her body was a tight, compact little bundle, all toned either from days in the gym or just the fact that she was still just twenty-two. I tried hard not to gawk as she revealed her firm little tits, the pale nipples prominent. Her vagina was a perfectly symmetrical slit below a little triangle of bright orange pubic hair, so different from what I was used to seeing on Jacqui. When I returned my gaze to her eyes, she was watching my reaction as she undressed. I felt myself redden when she put on her craftiest grin. \"It's okay. You can look.\"",
        "Jenn was standing there, biting her lip, clearly unsure how all this would go; I remembered that the only other shoot so far, with the lingerie, hadn't been coed. She cleared her throat. \"Well. Uhm, you want your robe Liv?\" She had a bright green silk thing tossed over her arm, and Olivia reached back to take it with an air of efficient grace.\n\nShe took it by the shoulders and unfurled it with a dramatic snap. \"You forget your robe, Mike?\" she giggled. \"You could borrow mine.\" She shrugged into it, and I made myself smile.\n\n\"That thing would be like a shirt on me.\" It barely reached her mid-thigh. \"Thanks for the offer though, Olivia.\"\n\n\"Come on.\" She tied the thing closed, loosely. \"Call me Liv.\"\n\n\"Well.\" Stacia oozed sarcasm. \"This is all a very nice conversation, but let's get started. Okay!\" She clapped her hands loudly. \"You. Uh, Becky, was it?\" She didn't wait for Rebecca's nod. \"Your job is taping. I'll figure out where they're supposed to stand, you mark the floor with tape. We should be all ready by the time Olivia's marks fade.\" She glanced professionally at my waist and nodded to herself, scanning a sheet in her hand. \"Now then. Let's do this.\"\n\nSo there I was, buck naked and toeing a line in front of a long cheap shelf full of books. Stacia placed Olivia off to my left front, while Erin stood in the light of the window acting as our boss, yelling at me for not carrying as many books as Liv was. \"Okay,\" Stacia mused, gazing through her viewfinder, \"just lower your books some more, Penis.\" Apparently, the photographer was fond of unimaginative nicknames. \"Boobs,\" she nodded toward Erin, \"once I get your robe off I'll figure out your legs, but keep your arm crossed over your chest. Okay. No-boobs?\" That was for Olivia, who didn't seem to mind. \"You're supposed to be looking at his books.\"\n\n\"I am,\" Liv replied calmly. She was just a few inches from me, her silk-covered ass next to my hip.\n\n\"With the angle of the camera, though, it doesn't look like it.\" She frowned, thinking, and as she considered I caught sight of Jenn drifting into view... towing Jaqui. I smiled at her, raising my eyebrows in one of those attempts men make to say hey, honey! Isn't this fun? but mostly fail at. Jaqui glanced curiously at Erin and Liv, then she nodded severely at me and started to study my dick.\n\nGod, I hoped I wouldn't get hard. She'd freak out if I did. And, of course, I'd probably never live down the shame among The Girls. Stacia's irritated voice broke my concentration. \"Okay, No-boobs. Just turn your head to your right a little. No, your right.\" Liv's head swiveled slowly until Stacia grunted at her to stop, and I realized with horror that she was staring straight down along her shoulder at my dong. \"Perfect,\" Stacia nodded. \"Mark that shit, Tape-girl.\" Vaguely I felt Rebecca scurrying around at our feet like some sort of acolyte, and the corner of my eye caught a mischievous smirk from Liv.\n\nI tried to focus on keeping myself soft.\n\n\"Who the fuck are you?\" Stacia had noticed my girlfriend, and without waiting for a reply she shooed her back behind the lights, where I could barely see her.\n\nWhere she couldn't see my dick.\n\n\"Great. Okay, bitches!\" Stacia finally seemed happy as Rebecca scuttled back. \"We're good to go. Get naked!\" Liv didn't wait, her body unveiled again in a whisper of silk, and this time I was very conscious of how close she was. \"Tape-girl! Grab the robes and make sure No-boobs has her books all set.\" She nodded to herself again. \"Penis, too. From now on, nobody touches any of those books but Tape-girl, okay?\"\n\nI couldn't stop my eyes from drifting over as Erin shrugged out of her robe, showing a lushly figured body with a cleanly tapering strip of hair over her pussy. Her nipples were dark on her full tits. I took all that in with a single frantic glance before I shifted back to the shadows where Jaqui and Jenn had been exiled, and that's when I saw my girlfriend's eyes flash.\n\nThings went still after that while Rebecca and Stacia fussed with Erin's leg. \"Gotta hide those pissflaps completely,\" the photographer grumbled, and I looked sideways at Liv.\n\n\"Pissflaps!\" Erin laughed richly. \"They're not 'pissflaps.' They're, like... I dunno.\"\n\n\"Glistening folds,\" Liv suggested.\n\n\"Yeah. That.\" Erin rolled her eyes.\n\nStacia nodded curtly. \"No. They're pissflaps.\" She stalked back toward the camera, and I glanced at Liv. Her eyes were riveted to my crotch.\n\n\"Sorry you're not looking at anything exciting,\" I mumbled, taking care not to move my lips.\n\n\"I wouldn't say that,\" she whispered back, and I have no idea why I did what I did next. As Stacia and Rebecca finished messing with Erin's body and Jenn and Jaqui watched, I reminded myself that the books were hiding my dick and I twitched it for Liv.\n\nShe gasped, just slightly, and when I glanced at her face she was looking back at me with wide eyes over a delighted mouth slightly agape. \"Hey!\" Stacia's voice was a whipcrack. \"Get your eyes back down there!\" she commanded; she'd finished with Erin and was now running her eye over the whole shot. \"And Penis? Look at No-boobs' pile of books, not her chest.\" Fuck. I could have done without that, but I obeyed. \"Like there's anything there to look at, anyway,\" Stacia muttered.\n\nMeanwhile, to kill time, I pulsed my dick once more. A soft, mouth-closed chuckle from Liv was my reward, and after all that it ended with anticlimactic speed. \"Okay. Don't move.\" The light on Stacia's little tripod tower flashed, then again, and a third time. I held my pose a moment longer, and then just as Stacia opened her mouth to tell us to relax I gave Liv one more twitch.\n\nHer whisper was almost too soft to hear. \"So fucking naughty.\"\n\n\"What?\" I asked innocently, my brows up; I could feel by the tension in my shaft that I'd let myself get just a little harder, but the unexpected thrill of displaying myself for Liv was just too much.\n\n\"Relax, everyone!\" Stacia seemed pleased, at last. \"Robes, Tape-girl... well, except for Penis. He seems to enjoy showing off.\" Erin snickered. \"You guys can get dressed in a sec, as soon as I make sure I got enough to use.\" I let my muscles go slack, still holding the books in front of my cock, but Liv dropped hers with a loud thumpy crash and just stood there naked as a jaybird, shaking her head at me.\n\n\"And with your girlfriend right there...\" she murmured, low enough so that only I could hear, but she was smiling.\n\n\"Just passing the time.\" I bent to place my books on the ground, knowing everyone was looking at me, but I found I no longer cared. It was over. I'd done it. \"It's awkward to have people staring at my dick, you know?\"\n\n\"Shouldn't bother you.\" She was pulling her kimono up her arms, but didn't bother tying it. She seemed quite comfortable as she was, her nipples only half-hidden by the silk, her auburn pussy on display. \"You volunteered for a nude calendar.\" Stacia told us hoarsely that we could go get dressed, and as she started for the corner where Rebecca had dumped out clothes Liv gave my ass a light slap, ending in a little squeeze. \"Good job, Twitchy.\"\n\nI looked after her, sashaying off, Erin still eyeing me, and then I followed them toward my clothes.\n\n* * *\n\nJaqui was not exactly impressed. She was silent as she drove me back to my apartment. Dead silent, that stony chilly silence that let me know she wasn't pleased at all. \"So, that was interesting,\" I ventured, mostly to fill the void.\n\n\"What was?\" She had that flat, robotic tone she liked to use when she was mocking me. \"You getting hard at the end? Was that interesting?\"\n\n\"Oh, stop.\"\n\n\"No, really.\" She glanced over. \"I could see it. Which one, Mike?\"\n\n\"Which one what?\" I knew the right answer, though.\n\n\"Which of those two bitches,\" she hissed, enunciating every harsh consonant, \"was getting you hard?\"\n\n\"Neither,\" I shrugged. \"Or both. Or I don't know. It was the situation, Jacqui. The whole thing.\" I saw the right answer once it was too late, even though she wouldn't have believed it, and my mouth clamped shut. I led the way into my apartment, meaning to dig some iced tea out of the fridge for her, but Jacqui stayed by the door. When I spun around, she cleared her throat and decided to give me another shot at that right answer. \"What?\"\n\n\"I know what gets you hard.\" She was still using that weird, chopped voice, the one that wasn't interested in any response from me, and her hand was toying with her waistband. \"You tell me, asshole. What gets you hard?\"\n\nI knew that look, her almond eyes nearly closed, her nostrils flared, her chin low, and she knew it too: that look from her was what got me hard, and all at once my boxers grew tight. I swallowed in a dry throat, remembering suddenly that I hadn't remembered to get a new box of condoms, and that that was just too damn bad. Because that look meant I was going to need at least one. \"You,\" I managed, my voice deep in my throat.\n\nAnd she heard what I was thinking. \"You should come over here,\" she challenged, \"and show me what you're talking about.\" She had a thumb hooked into her waist, plucking aside both her pants and the thin band of the thong beneath, showing that black-hole curve where a woman's hip swings inward before it swells back out to become her mound. That curve that made me want to taste it her skin. That drew me in, irresistibly, and she knew it.\n\nI stared at it as I approached her, my own mouth slipping open, her hand still toying with her clothes, and the moment I got within reach my own hand joined hers, my palm flat against her belly and the start of her groin, pushing slowly down past where she'd pulled her pants aside for me. \"This,\" I croaked, my voice deepening in time with my fingers plunging underneath her thong. I felt her pubic hair, lush and solid, spongy under my fingers, then the beckoning heat of her slit surrounding my finger as I pushed it into her. I cleared my throat, our foreheads touching now. \"This makes me hard.\"\n\n\"Fuck yes,\" she snarled. \"This pussy. Not the stretched-out cunt on that little fucking ginger slut from your program.\" She gasped as I hooked sharply upward, almost lifting her whole body by her straining clit. \"This one. Not that fat whore Erin, who's nothing but a pair of tits and a smile.\" Her head hit the door behind her as my mouth swooped down to her neck. \"That bitch. She has nothing on me.\"\n\n\"Fuck.\" I was licking at the sweat behind her collarbone, feeling my fingers soaked with what her libido was pumping into her snatch. She always enjoyed getting herself going, the dirty talk meaning more to her than it did to me. I felt her tongue on my ear.\n\n\"Show me which pussy is yours,\" she spat, and then my other hand was shoving hard on her pants, pushing, her legs coming together so that I could expose her. \"Show me why it makes my man hard.\" She moaned when the thong peeled down off her drooling slit, dragging between her slim thighs. She'd closed her eyes. \"Show me, you dumb fuck. You mindless cock, getting hard for that young bitch in the library.\" That last part came out as a trailed groan, because I was falling to my knees with my lips grazing her mound, on their way to her dark thatch of hair now threaded with thick fluid my hand had dredged from her pussy.\n\nShe stank. She hadn't showered since yesterday morning, and that plus the gummy soup flowing just below my mouth was taking my brain and boosting it into a place where it became predatory, feral. Primitive. I growled, and decided not to wait for her to kick her clothes past her ankle.\n\nI needed to eat her.\n\nJacqui thrust her hips lewdly forward as I got down there, my hands already curling up and around to dig deeply into the rich flesh of her ass. She was intoxicating me, her smell swallowing me, so I dipped my head as low as it would go underneath her crotch and pushed my face into the dripping mess her pussy had already become.\n\n\"Goddamn,\" she bit out, her hand clamping all at once onto the back of my head. \"Get your fuckin' tongue in there, you dumb shit,\" she grated, settling her weight onto my face. \"Show me what you want.\"\n\nI was only faintly listening. Instead, I was focusing on the familiar folds of her swollen pussy, bright pink and wide open against my mouth. I let my head move with the rhythm of her body as she ground down onto my face, turning sideways to drive my tongue deep into her slit.\"Mmm. Lick it.\" She finally kicked her foot clear of her clinging pants, then immediately spread wide to settle more fully against me. \"Just like that.\"\n\nI dug deeper, feeling like I was horny enough to shove my whole head into her slick pussy, my teeth tangling in her pubes when I tried to nip at her clit. Her flavor was deep and wild and musky, her hips swinging back and forth as she fucked my face. \"I taste better than any little ginger slut,\" she gloated, her fingers like an iron trap along the back of my head. \"Never fucking forget that, you piece of shit.\" She threw one wiry thigh up over my shoulder, her body leaning hard back against my door.\n\nOn impulse, I inched one of my hands across her cheek, my pinky sinking into her crack. I was seeking her asshole. I'd never done that before, never wanted to, but suddenly I was enchanted by the lewd greasy nastiness of all this, the sheer animal thrill of showing myself off all morning to a bunch of women. She grunted hard as I felt her anus close dry and hot around my fingernail.\n\nI was in pain, my cock was so fucking hard in my shorts. Vaguely I was aware I ought to rip myself off her steaming vagina, stand up, drop my boxers, and fuck her standing against the door, and be damned about not having a rubber. But no; she tasted too fucking good, and I wanted to make her cum this way. I could tell I was about to, too, my desperate tongue stabbing straight up to curl behind her clit while my teeth grazed the nub, and just as she started gasping in that rhythmic way she had, like she was going into labor, I got the bright idea to shove my pinky the rest of the way up her ass.\n\nShe went taut against me, her entire body mannequin-stiff, and then just as suddenly she puddled loosely over my shoulder, her fingers immediately boneless against my skull. \"Holy motherfuck,\" she bit out, breathless, and I knew that if I bothered detaching myself and glancing up I'd see her eyes rolling back behind fluttery lashes, her face and neck bright red as she came on my tongue.\n\nMy whole lower face was soaked by her, my neck and shirt stained and sticky, and I knew that all I had to do now was to suck hard on her clit, prolonging her pleasure; I knew Jacqui's body well by now, even though she'd been so busy lately.\n\nLike riding a bike, I realized dully as I swallowed her. Like myself, jerking off. I knew exactly how to make this woman cum.\n\nShe slithered down the door when she was done, her naked ass coming to rest in the piled envelopes that had come through the mail slot over the last couple days since I'd cleaned, her eyes wide as she stared at me. \"You nasty motherfucker,\" she marveled, her body still trembling against me; I was kneeling between her achy legs now. \"Jesus Christ.\" She panted hard, her breath strong in my face where her fluids dried on my cheeks. She reached languidly forward and grabbed my hard cock through my clothes.\n\n\"See?\" It was an effort to speak, my lips and tongue numb and tingly. \"You know who makes me hard.\"\n\n\"Yes I do,\" she whispered fiercely, gripping my balls now. She leaned toward me, still breathing hard, and her breath was a hot wind in my ear. \"Get to your bedroom. I'm going to drink your cum.\"\n\nFine by me.\n\n* * *\n\nLiv smiled at me the next day as I strode into the Classroom Management elective. Rebecca and her tits hadn't shown up yet, but Brandi and Peyton were sitting where they always did. And, of course, the whole crew had left a seat for Jenn. \"Hi, Mikey!\" Liv purred. \"You should sit down here with us.\"\n\n\"What, are we married now?\" I laughed easily. I was on top of the world, happy with how the shoot had gone yesterday and even happier with the night I'd spent with Jacqui. Clear and sharp in my mind, as I looked down at Liv's grin, was the memory of the little redhead's fingers tweaking my bare ass yesterday. \"I can't sit with you people. Folks might talk.\"\n\n\"Well. If they knew what this year's fundraiser was, they might have a reason to talk!\" she cackled back, and I felt a sudden lurch in my Jacqui-drained cock. Liv had looked damn good yesterday. \"But, whatever. Suit yourself.\" She winked. \"Twitchy.\"\n\nI could see Peyton wrinkling her cute little nose, her freckles dark on her pale face; she was itching to lean over and ask Liv why she'd called me that, but I just smiled and went on my merry way up the steps to where my nameless undergraduate companion was liberating his laptop. Behind me rose a ripple of laughter from Peyton, and I knew she had her answer about my new nickname. Because, of course, The Girls were discussing me.\n\nThe undergraduate looked curiously at me as I took my seat. \"They keep looking back here,\" he said, nodding down at Liv and her cronies. \"I don't think it's me they're looking for.\"\n\n\"Oh, I dunno.\" My balls felt sore. \"You're all right. And they're just flirty.\"\n\n\"Mmhmm.\" He arched an eyebrow. \"I'm sure that's all it is.\" He smiled, then, glancing past me, and I knew Jenn was coming back up to chat with me.\n\nI wasn't sure how I felt about that.\n\n\"Hi!\" She seemed a lot warmer than she usually was, leaning toward me after she'd sat down. This time, she'd brought all her stuff. It seemed she wanted to sit back here the whole class today. \"This seat taken?\"\n\n\"It is now.\" It was amazing how little awkwardness I felt. I'd expected it to be a little weird, having my classmates see me naked; far from it. Though, I'm sure, it helped my confidence remembering just what I'd been able to make Jacqui do to me before I left for class that morning. I jerked my chin toward where Rebecca had just walked in, preceded by her chest, then stood looking thoughtfully up at me. \"They're discussing me.\"\n\n\"Well, duh.\" She laughed. \"After you left from the shoot yesterday, you were all they wanted to talk about. I thought it went really well.\" Her lower leg brushed against mine as she leaned forward to rummage in her school bag. Automatically, the undergraduate and I both slid our eyes to where we knew her shirt would be rising up her lower back, her pants gaping a little, and I learned two things very quickly: Jenn lacked a back tattoo, and she was wearing bright purple underwear. \"Like, super well.\"\n\n\"Thanks. I thought so too.\" The guy on the other side of me was making a big show of putting his earbuds in. She was clearly planning on saying something else, too, but we both got interrupted by another kid sliding down the row we were in. Like any tall guy, I did the awkward thing where you stand up and sort of half-lean against your seat. Jenn just stayed down and moved her knees aside, tipping her head back and leaving me to stare straight down her shirt.\n\nAh. Purple bra, too. My penis spasmed once more, making me wonder just what the hell had gotten into me.\n\nI cleared my throat. \"Liv seemed happy, too.\"\n\n\"Liv.\" She shook her head with a weird little half-smile. \"Yeah, I'd say 'happy' is a good way to put it. Erin, too. But you know what really shocked me?\"\n\n\"Do tell.\" I was enjoying this, casually discussing photographed nudity in the very public hubbub of the classroom. It was like we were doing something lecherous, something naughty. A secret.\n\n\"Well,\" she went on, leaning toward me, the coconut of her hair wafting along, \"Stacia. The photographer? She said you were amazing.\"\n\n\"No shit.\" That one really did surprise me. \"She acted like she wouldn't even piss on me if I was on fire.\"\n\nShe laughed. \"She's like that with everyone. No,\" she sighed, her fingers tapping her password into her laptop. \"She says she has problems with guys sometimes on nude shots. You know, arousal problems. Or the other way, they're all shy. And I guess she was happy she didn't have those problems with you.\" I glanced at her screen, where she grinned on the wallpaper next to a skinny guy with facial hair. It looked like they were in Montana or someplace like that. She caught me looking.",
        "\"Your boyfriend?\"<br >\n\n\"Yup. Andrew.\" She paused, then decided not to say whatever she'd been thinking of. \"Uh, your girlfriend was really pretty. Have you been dating long?\"\n\n\"A little over six months.\"\n\n\"Wow!\" She blinked. \"And is it, like, serious?\"\n\nI thought about the enthusiasm with which she'd tongued my anus that morning. \"Well, sort of.\"\n\n\"Ah.\" She nodded thoughtfully. \"Was she, like, cool with yesterday? You posing?\"\n\n\"Seemed like it.\" I wondered whether I was blushing. She had certainly not been cool with it, but she'd been very happy with the aftermath.\n\n\"Well, good.\" She licked her lips, her tongue a pale snake darting out. \"Because Erin and Stacia and I were thinking maybe we'd ask if you could do another shoot.\"\n\n\"Huh.\" A sudden start from the guy next to me confirmed what I'd suspected; the earbuds were a prop. And he was starting to figure out what we were talking about, it seemed. Another shoot...\n\nIt's hard for me to describe why I found it thrilling that she'd ask.\n\n\"I don't know, Jenn. I mean,\" I sighed, making a show of reluctance, \"I'm so busy these days.\"\n\nShe just stared. \"Bullshit.\"\n\n\"Well. I mean, if it's for charity and all...\" Her replying grin was a slow, even challenge. \"What's that for?\"\n\n\"What?\" She blinked.\n\n\"That grin. What's that for?\"\n\n\"Well,\" she said, letting out a slow breath, \"I'll be honest. I thought it would be really weird to you, letting it all hang out in front of everyone. But you seemed to sort of like it.\"\n\n\"Like it?\" The professor was down front now, settling her notes on the little podium. \"I dunno. I did like the idea that it's sort of... taboo?\"\n\nShe rolled her eyes. \"It's naked people.\"\n\n\"It's a camera. With strangers. For sale.\" I smiled. \"Nevermind, Jenn. I'll do more shoots. You're right; it wasn't bad at all. And?\" I leaned toward her, the coconut stronger, and after a moment or two she narrowed her eyes and tipped her head my way. \"To tell the truth,\" I whispered, \"you had me at 'Stacia said you were amazing.'\"\n\nShe gave a little yip of laughter, her eyes crinkling. \"Jesus, Mike,\" she said, shaking her head, \"you're taken and she's a dyke. So, no.\" She patted my arm. \"Just no. Besides,\" she went on, making a big show of sliding her eyes sideways down to where Olivia was booting up her laptop, \"I think Liv would get jealous, anyway... Twitchy.\" She laughed again, longer and throatier, when she saw my face.\n\nAnd, again, my dick lurched. Goddamn.\n\n* * *\n\nThe September shoot, a \"back to school\" theme, was going to be a group of wholesome-looking library science women in a school-supplies aisle, inexplicably nude. Folders and rulers would have covered the various nipples and holes, and the caption would have been Back-to-school wardrobe? There are more important things to shop for!\n\nBut then, The Girls had discovered... me.\n\nSo they'd reworked the entire shoot. They'd found a convertible somewhere and parked it in the driveway of some rich family Stacia knew; she'd charged a finder's fee, but the location was perfect. The idea was that I was supposed to be in the car, with The Girls nearby. Folders and rulers would still hide what needed hiding, but they'd be crowding the car with me, bemused, behind the wheel.\n\nA new caption had shown up, too, from the fertile mind of one Peyton Chaquette, who'd also agreed to appear in the shoot. Back to school, the picture would now be titled. Mike's got a whole lot of new friends who need a ride. Who will he pick?\n\nCute. Peyton had a gift, it seemed.\n\nThe shoot took place on a blistering day, the sun rebounding off the asphalt, making me grateful for the shades I had to wear. Stacia kept me in the car for a long time, sweating in the bathrobe I'd picked up at the mall. Erin had laughed as soon as I put it on. \"So fucking stylish,\" she giggled, and I'd just used my middle finger to push my shades up my nose. Stacia had futzed with her shot, using a million different combinations of stance, angle, shadow, and (finally) the position of the shifter knob on the steering wheel.\n\n\"Why am I shifting so much?\" I whined.\n\n\"Because that's what's blocking your dick.\" The photographer had decided to stand right on the hood, pointing down with The Girls leaning in at me. They'd show up from ass to head, while I'd be sitting there with the shift knob covering my other knob in forced perspective, staring blithely at their ranked tits dangling over the top edge of the doors.\n\nQuite a life.\n\nI had four naked classmates that day, and once Stacia was happy with everyone's placement and Rebecca had collected all the bathrobes, they all leaned in at me and grinned. There was Brandi, her breath riddled with coffee, just beside me. Then, grouped along the passenger side, Peyton jostled alongside Erin and Megan Ringo, of the incredibly sexy face and body. Indeed, once I'd heard she was going to be here, I'd begun to worry about my ability to stay soft.\n\n<br >And I'd decided, then and there, not to tell Jacqui I was doing this shoot. She'd find out, of course... in November. When the calendar went on sale. That gave me months to figure out what to tell her.\n\nI felt self-conscious at first. Everyone was in shades, and I knew they were all staring at my cock. I willed it down, but to tell the truth I didn't worry much; the vibe, with Stacia barking at us every five seconds, was not sexual at all. Things got even smoother about three minutes in, while Stacia was bickering with Rebecca about something.\n\n\"Hey Mikey,\" Peyton grinned lazily. She was a skinny free spirit, her dreads cascading into the car. \"Why does Liv call you 'Twitchy?' I've been dying to ask.\" I looked over at her freckled Alaskan boobs staring at me under a smirk.\n\n\"I think everyone's heard why Liv calls me that,\" I sighed. \"She's not exactly quiet.\" I was met with four mocking insistences that, no, they had no idea, and could I please tell the story to pass the time, so at last I smiled gamely. \"Fine,\" I said, shutting them down. \"Watch me.\"\n\n\"Watch you where?\" Brandi taunted. She knew. I risked raising my hand to pull my shades down, despite Stacia's many loud orders to avoid movement. But I did it so Brandi could see me roll my eyes.\n\n\"Watch what you've been watching, Brandi.\" And then, to wild and high-pitched laughter, I showed them why Liv called me Twitchy. I kept showing them, too, until Stacia came to her senses and demanded, loudly, why my glasses weren't where they belonged.\n\nIt became a trademark after that, at every shoot; The Twitch. The November shot, a Veterans Day motif with The Girls in line, their asses aimed at the camera, standing at attention with me up front, on a riser, wearing an army hat and nothing else but Peyton's head centered on my junk. At the end they'd saluted, and I'd replied with The Twitch.\n\nMy next shoot with fetching little Megan Ringo, with Stacia's nickname for her clear the moment she stepped out of her robe: the photographer called her Waxjob. April showers, went the caption, bring May flowers, and Meg wants to see what kind are popping up. She'd been on her knees in a garden bed, her ass in the air with an artful smudge of soil right in the center of her left cheek. I'd been sitting in a rocking chair with an acoustic guitar blocking my cock, laughing down at her. With her face safely away from the camera, she'd spent all her time winking and making exaggerated licking motions with her tongue. I'd given her The Twitch at the end, when I'd put the guitar aside.\n\nAugust, and Aimee had provided her swimming pool when her parents were gone; this one had Aimee and Liv on chaises, their nude bodies visible through the crosshatched lounge back, both of them with books in their laps while they leaned their heads together and watched me wave from the water, my penis hiding just under the surface behind a bright yellow rubber duck. Laughing, they'd let Jenn and Rebecca shove them into the water at the end. And they'd gotten their Twitch there while I watched their boobs float just inches away.\n\nGood times.\n\n* * *\n\n\"Well. That one was fun.\" I kicked my feet up on the little table next to where Stacia had set up her lighting panel during Rebecca's Halloween shoot. I'd just been a stage prop in that one, standing off to the side with Megan and Erin while Rebecca, in her only appearance on this side of the camera, strutted her stuff with two tiny sugar-pumpkins sketchily shielding her nipples. My mind was still buzzing with the sight of her huge tits and, no less, by the memory of nymphlike Megan Ringo's naked hip pressed against mine.\n\nMagic.\n\nBy this time, I wasn't even all that bothered when my bathrobe slipped off my leg to show the edge of my balls. Everyone involved in the project had seen every inch of me, several times, from multiple angles. Now I had my butt planted on one of the library benches with Jenn smiling crookedly down at me. \"Rebecca is... impressive.\"\n\nI chuckled. \"You could say that.\" I laced my fingers behind my head and leaned back. \"This shit's fun.\"\n\nShe sighed. \"You're making the calendar,\" she said simply. \"Every shot you're in is really good. Stacia says so too.\"\n\nI shrugged elaborately. \"What can I say? It's for charity.\" I was still feeling pretty good. \"So. When do I get to pose with you, Jenn?\" I teased; as far as I knew, she'd only done the lingerie shot and one other one, nude, before I got involved. Now she looked levelly down at me and her pretty face took on a subdued expression.\n\n\"Well. Actually, you're not the only one asking.\" She hesitated. \"I was going to do June with Brandi and Peyton, but they told me this afternoon that they thought you and I should do it.\" I raised my eyebrows. \"Yeah, right? Like it matters, I told them. But they seemed pretty sure.\"\n\nI frowned. \"What's the theme?\"\n\n\"June?\" She checked her phone, where she had all the photo captions written down. \"It's pretty innocuous. Summer means it's a great time to curl up with a good book and, maybe, a good friend.\" She stared down at me, her eyes opaque. \"They think you should be the good friend. Instead of them.\"\n\nI thought about what she was saying. \"Curl up.\"\n\nShe looked away, embarrassed. \"It was supposed to be a slumber party theme.\"\n\nI felt my eyebrows rise. \"Ah.\" Slumber party. Bed. Sheets.\n\nFuck.<br >\n\n\"Obviously,\" she went on quickly, \"if you're not comfortable with it, it's really easy to just go back to what we were going to do anyway.\"\n\n\"Of course.\" I was sitting up now. \"I mean, a slumber party...\"\n\n\"We should, maybe, just be curled up on a couch? Like, with everything sort of hidden from the camera?\" She seemed to think it was a foregone conclusion I'd say yes, ultimately. \"I wouldn't want to do anything suggestive. You know, because my boyfriend would probably be pissed if it was in a bed or something.\"\n\n\"No, no.\" I was shaking my head sincerely, my feet on the floor now, leaning my elbows on my knees. \"I get that. Look, I'm happy to do whatever you want.\"\n\nShe was nodding, staring down at me in silence for what seemed like a long time before she finally drew a breath and turned away. \"Your robe is wide open down there, by the way,\" she observed casually.\n\nI didn't budge. \"I'll make sure to do something about that.\"\n\nShe smirked. \"Yeah. Sure you will.\"\n\n* * *\n\nWe stood there a couple days later while Stacia and Peyton bitched at each other about the shot, the sexual tension between them so strong I felt like I could smell it. I wondered, in a weird daydream sequence, who'd be on top: Stacia was obviously a hardass, but Peyton had this wiry strength about her that said she wasn't interested in taking any shit, either.\n\nJenn waited, her butt perched on one arm of the couch, wearing a really nice pink robe that left one tanned leg almost completely exposed. She was tapping rapidly at her phone, her mouth in a thin line as though she didn't like what she saw there. I had to resist a powerful urge to reach over, take that one curling strand of wavy brown hair, and tuck it back behind her ear.\n\n\"Jesus! Fine! Whatever!\" Stacia and Peyton had apparently stopped mindfucking each other, and from the looks of things the Alaskan had won. \"I mean, you're the fucking client, Dreads. Okay! Penis?\" She nodded at me. \"You'll get on the couch. Your back sorta facing toward me, legs up on the couch. Curly?\" This seemed to be Jenn's nickname. Ah. Her hair. \"You're next to him. Stretch your legs out in front of you, then put the spine of your book right on the top of your thighs.\"\n\n\"Wait.\" Jenn was shaking her head. \"You want me stretched out? Like, all sprawled?\"\n\n\"No,\" the photographer snapped. \"I want you with your legs up, like his.\"\n\n\"This'll look better,\" Peyton insisted.\n\n\"The caption says they're supposed to be fucking curled!\" snarled Stacia.\n\n\"Captions can be rewritten. Besides, he is curled. She's the 'maybe, a good friend' part. She's deciding.\" Peyton sighed harshly. \"Whatever. We can shoot it both ways, then decide later?\"\n\n\"Legs out, Curly,\" Stacia ordered, and then Jenn was arranging herself on the couch. Well, more of a loveseat really; I could see already that both of us putting our legs up would have left us all tangled. I wasn't that surprised anymore when my cock spasmed at the thought. \"Just relax. Hey! Tape girl! Get over there and be ready to move the lights.\" Rebecca, long resigned to her assistant role and not even slightly happy about it, stalked over.\n\nJenn settled in. \"Ankles crossed, right?\"\n\n<br >\"Yeah,\" Stacia replied absently, thinking about how low the camera would need to go. \"If you spread them, you'll look like a whore. And it's not quite that kind of shoot.\"\n\n\"No, it isn't,\" Jenn giggled. She glanced over at me self-consciously, her robe sheer across her breasts, and smiled. \"You should stretch out too, Mike.\"\n\n\"No, he shouldn't.\" Stacia aimed her glare at me. \"Okay. Sit down, dumbass.\"\n\n\"That's 'Penis,' actually,\" I insisted, trying for lofty dignity, but when a contemptuous woman is yelling at you and you're in a bathrobe, that's a hard thing to summon.\n\n\"Whatever. Just do it.\" It was going to be impossible, I could already tell, to get my feet up under me enough to avoid contact with Jenn. Usually, we didn't really touch each other in these shots; as a matter of fact, that brief but glorious graze against Megan's thigh had been the only touching I'd done. Stacia saw it the same time I did. \"You're probably going to need to put your foot on her thigh, looks like. Just down from the book.\"\n\n\"Great.\" I did, the warmth of her skin coming through her robe to my arch, and when I glanced at Jenn's face she was looking thoughtfully at my toes.\n\n\"Actually,\" she said softly, \"why don't we let his foot block my pussy?\"\n\n\"Ooh.\" Stacia glared at Rebecca. \"Why didn't you think of that, Tape-girl?\" But she didn't mean it; Rebecca was just a handy target. \"We'll try it that way, too. Just be careful to leave the book a little bit above your legs, so the covers don't leave marks on your skin, hmm? Wait. Actually, we'll do the bookless shots first.\" She nodded to herself, then glanced over at me. \"Penis? You just sit there and look pretty.\"\n\n\"Where should my eyes be?\" I asked. She was usually very particular about that.\n\n\"On hers. Where else?\" She gave a veiled glance at Peyton. \"After all, she's 'maybe, a good friend.'\" She put that bit in angry air quotes. \"So look at her like that.\"\n\n\"Ooh.\" Jenn smiled at me as Stacia stormed off to do something technical. \"I'm maybe a good friend. I wonder what that means.\"\n\n\"Means you two are gonna fuuuuck!\" Rebecca whispered from her spot behind the couch, where she was fiddling with a cable, and we all laughed.\n\n\"Okay!\" Stacia clapped three times. \"Let's get this going. Strip, bitches!\" I stood up, my knot already untied; I no longer gave a shit. All these people had seen everything I had to offer, so I tossed my robe casually to Rebecca and then slipped back onto the loveseat.\n\nBut then I remembered that, in all this time, I had yet to see Jenn Deutsch naked. The robe whispered off her shoulders, leaving long smooth thighs and strong shoulders. Her ass was directly in my face, slightly goosebumped in the cold room, the cheeks completely symmetrical. She turned casually to catch me staring. \"Move your feet, Mikey.\"\n\n\"Sure.\" I put them on the floor so she could sit, suddenly very aware of my dick. I usually wasn't during these shoots. She settled beside me, then scooted down so that she was sprawled across the cushion. She patted her leg.\n\n\"Your foot?\" I was, like always, trying to be a gentleman and not stare at her naughty bits, but of course I had to look at her thighs as I moved my toes up that way. Her pubic hair was a softly brown bush, trimmed modestly at the sides. I swallowed.\n\n\"Tape-girl!\" Stacia rasped. \"Get up there and grab his foot. It goes where I want it to go. Pick up the book there, Curly.\" She studied her camera settings. \"Got to block those tits. Not that it takes much.\"\n\n\"Hey!\" Jenn stuck her tongue out. \"That's uncalled for.\"\n\n\"Relax.\" She had a big hardcover copy of some sort of Jodi Picoult book, and Stacia was sure it would cover both nipples. She snapped her fingers. \"Book, Curly.\"\n\nShe obeyed, and then Stacia was straight back to her viewfinder. \"Now then. Tape-girl. I need his foot just a little more to my right...\"\n\n<br >When all was said and done, I was keenly aware that my toes were about an inch and a half away from Jenn's pussy. Her skin was very warm against mine, and I was taking pains to stare at her face. As directed, she faced her book but had her eyes prominently sideways, looking at me. \"Nice.\" The photographer pursed her lips and nodded. \"Okay. Here goes.\"\n\nThe flash popped.\n\nI saw, in the weird afterimage, Jenn's eyes flicker down, just for an instant, to my dick. Or did I? Or was she just blinking? \"Again!\" and the light flashed once more. This time I was sure.\n\nShe was checking out my package.\n\nIt lay across the inside of my thigh, and from where she was sitting Jenn had a wide-open view between my legs. There was no way the camera could see in there; Rebecca was back in the corner, texting, and I felt like Jenn and I had a bizarre moment of privacy, there under Stacia's glaring lights and clacking lenses. I watched her face with its smallish nose, a diamond stud glittering there, and its long lashes over eyes still in furtive motion along my dick. I wondered idly, glancing at her fine little nipples, whether I was bigger than Andrew.\n\nOh, holy fuck. I was starting to get hard.\n\nI felt it as a warning stiffness back at the root, just above my balls, and I willed myself to stay soft. Jacqui had done nothing for me in a week and a half, and the photo shoots had surrounded me with good-natured pussy, and still this hadn't happened before: I was going to get an erection during a shoot, right here on the couch with Jenn.\n\nHer skin was smooth and warm under my feet, and I felt like my toes could almost feel a twinge of heat from her pussy. I swallowed grimly, feeling the slow, inexorable surging pressure as my cock tensed.\n\n\"Alright!\" Stacia seemed pleased. \"Lets do this the other way. Curly, put the book down on your lap. Right over your slit. Penis, just shift your leg a little. You'll need to raise it.\" Yes. Raise it enough to free my growing dick, so that Jenn would have a front-row seat to watch it extend.\n\nFor her. There was no way to pretend it wasn't.\n\nShe moved the book calmly down to her lap, and now I had the uninterrupted sweep of her body right there before me, from the top of her head to where her softly curling pubes disappeared between her sleek thighs, and it was hopeless. My dick had a momentum all its own, fattening even as I lay there and focused on anything else, and almost at once I realized there was no point in trying to hide it. She'd see it, surely, and she'd know. And I was amazed to realize that I wanted her to know.",
        "Clack. The lights splashed us.\n\n<br >\"Okay, let's try something else. Curly, look over at him. Smile. Be amused that you're here reading a book while he just sits there showing his ass to the camera.\" The tendons in her neck stirred, my hyperawareness catching the play of her muscles as she half-turned toward me, and amazingly she looked at my eyes. Hers were a warm brown, and the wrinkles alongside them told me she wasn't just pasting on a smile. She actually liked this.\n\nI caught her gaze as the camera snapped again. \"Good,\" Stacia was muttering, and carefully I dropped my eyes down my own body, past my furry chest and down to where I had the thickest, stiffest hard-on I'd ever had. Back up to her eyes, then back down, and she got the message; her eyes followed mine to my dick, and I heard a little hitching gasp.\n\n<br >When I looked back up, she was grinning even wider, her eyes shining.\n\n\"Good!\" For the first time ever, Stacia sounded genuinely amped. \"Perfect! You guys are so natural!\" I could tell Jenn wanted to burst out laughing, the pressure of holding it in showing itself in apple-red cheeks and a slight shake to her body, a jiggle of her nipples. \"It's like you're really into this.\"\n\nHer eyes burned into mine, the smile wide and warm, and goddamn if my cock didn't stay just as hard, pointing up along my belly like an inviting finger.\n\n\"A few more...\" And now I began to worry. It wasn't like I could do anything but wait around for my dick to go down. And, obscurely, I had no interest in standing up and facing Stacia and Rebecca like this. I had nothing to be ashamed of, I knew; this was the most impressive my cock had looked in quite awhile, and I was sure Rebecca would spread the word to my benefit with The Girls.\n\nBut I found I didn't want that. This was Jenn's hard-on, and I wanted it to stay with her. Only her.\n\n\"That's a wrap!\" Stacia announced at last, and Jenn immediately snapped her book shut.\n\n\"Let me get your bathrobe for you, Mikey,\" she smiled. \"You've been such a gentleman.\" She stood, then, watching me watch her, and stretched her arms high in the air, her tits shuddering proudly, her legs slightly parted. I saw that her pussy was bright pink and felt my cock lurch once more. \"You just stay put.\"\n\n\"Why, thanks Jenn!\" Fuck, I needed relief. I needed somebody, anybody, to lock their mouth around my balls. I needed a vagina to spread around my head. Heck, I needed a hand, my own if necessary, to let the pressure out. But instead, I got Jenn standing over me with my bathrobe in her hands, smiling down, holding it so that I could get up with my back turned to the others. \"Thanks. Really,\" I said, much more quietly.\n\n\"Come on.\" Her voice was full of giddy laughter, carefully suppressed. \"I'm maybe a good friend, right?\" She stayed close as I slid my arms in, then pulled the front around my body. My cock jutted out thick and straight, and she leaned over me to glance down at it. I smelled coconut. \"My god,\" she managed.\n\n\"Look,\" I explained, my voice low, \"I'm sorry. I don't know what happened.\"\n\n\"I do,\" she said at once. \"And I'm the one who's sorry.\"\n\nI pulled my dick up to the vertical, thinking I could tie the belt right over it. She was still there, flushed now, her own robe only loosely tied. She'd stepped back to give me room. \"What do you have to be sorry about?\"\n\n\"Mikey,\" she shook her head, \"I have a boyfriend. I know what blue-balls are.\"\n\nI laughed, finally getting myself put together. A little. \"If your boyfriend talks to you about blue balls,\" I went on, \"it sounds like it's something he wants you to fix.\"\n\nShe hesitated a moment, then leaned back in so she could whisper into my ear. \"I always fix it,\" she said emphatically. \"Always.\"\n\nI turned at last, holding myself carefully; if I moved the wrong way, I knew I'd flop right back out. It would take a bit for this one to go down. I needn't have worried much, though; Stacia was packing up her stuff, Rebecca frowning into her phone. I smirked ruefully at Jenn. \"Not this time, though.\"\n\nShe didn't look happy.\n\n* * *\n\nClassroom Management elective once more, and this time I was surprised to see that Jenn was already up near my seat at the back, sitting easy with her feet up high on the back of the seat in front of her. She was chewing thoughtfully on a bagel, watching the door for me. The other guy, on my other side, was seated too, and already I could see him glancing sideways at Jenn.<br ><br >This setup was becoming a habit.\n\nI eased past her knees, facing her, and we traded tentative smiles. \"You okay?\" she asked quietly, \"down there?\"\n\n\"What?\" I sat, then laughed when I realized what she was asking. The blue balls. \"Fine, thanks. I, uh, took care of things.\"\n\n\"Whew.\" She really did seem relieved. \"Good. That looked...\" she glanced down into my lap. \"Painful?\"\n\n\"I wouldn't call it that.\" I'd been a little worried about this conversation, honestly; how do you innocently pal around with a friend after she knows you want to fuck her? But so far so good. We were both grown-ups. \"No pain, really, but the relief was... well. It was awfully nice.\"\n\n\"Mine too,\" she giggled, hesitating. \"I was really, really excited.\" She took a breath. \"You know why.\"\n\n\"I think so.\" Goddamn. Those eyes.\n\n\"Andrew didn't,\" she confessed, but she was smiling about it.\n\nI raised my eyebrows. \"Naughty!\"\n\n\"Well.\" Jenn shrugged modestly. \"What he doesn't know won't hurt him. He certainly enjoyed it,\" she gloated, her eyes gleaming like they had on the loveseat. \"Um, did your Jacqui know?\"\n\n\"Know what?\"\n\n\"That you...\" She trailed off, her eyes going wide... and angry. \"Wait. Didn't she fuck you?\"\n\n\"She's studying for her licensing exam. Dental hygienist. It's a lot to learn.\" I cocked my head, confused; she was really, really pissed. \"Wait. Are you angry, Jenn?\"\n\nShe bit her lip and shook her head, as emotional as I'd ever seen her. \"I shouldn't intrude,\" she sighed primly, \"but when your man is in, like, the state you were in? You fuck him!\"\n\n\"Well, uh, sure.\" She was making a real effort to be quiet, but she wasn't doing all that well. Good thing the lecture hall was almost empty. I glanced around to make sure the undergraduate was minding his earbuds, at least nominally.\n\nJenn nodded, her eyes narrow, her pretty lips twisted into a scowl. \"I'm offended, Mike. On your behalf.\"\n\n\"That's really not necessary,\" I began, but she wasn't interested in hearing from me.\n\n\"You always, always take care of your man,\" she grated. \"Always. And if you can't, well, then some other woman should.\"\n\nWait. What the fuck was she saying here? \"Uh, Jenn,\" I began, but she still wasn't interested.\n\n\"That's it. I don't mean to criticize your woman, but to me it's pretty simple.\" She frowned. \"Wait, Mike. That means you, uh, took things into your own hands?\" She shook her head, appalled. \"Disgraceful.\"\n\n\"What?\" I smiled. \"Was I supposed to tell Jacqui she needed to fuck me because some other woman had gotten me all worked up?\"\n\n\"Pshaw.\" She flapped her hand dismissively. \"I did nothing. I just sat there.\"\n\n\"I know.\" I watched as the professor came quickly to the podium. \"That's the weird part.\"\n\n* * *\n\nDecember was going to be one last picture, Stacia working with no assistant because every single person in the department was supposed to be in the shot. Well, other than Jeff Reagan. And Margaret Mayfield, whom I hadn't seen since that very first meeting; she seemed to have skedaddled right after the lingerie shoot.\n\nAll the rest of us would be there, and the concept involved us sitting and lying on bookshelves. It was a good idea, but there were ten of us (Counting Chelsea Whicker, who'd promised to show up) and it was a problem finding enough shelving that would support us. Well, support me. And Erin. And Brandi and, possibly, Jenn; she and I were just too tall to cram into a library shelf. Everyone else weighed about ninety pounds or was five feet tall or both.\n\n\"Hmm.\" This was the kind of puzzle Stacia seemed to enjoy solving, and while she figured it out we moved all the books off the shelves and into piles. This was done, of course, with great care and precision: all of us were library students, so the least we could do was to keep the fucking books in order. Then we trooped off into the corner where our robes were hanging, and with just about no self-consciousness we all got naked together.\n\nAmazing. A month ago, it never would have occurred to me that I'd ever get to see any of these people without clothes. Now, Rebecca Temple was brushing her tits along my arm while she turned to get her robe and neither of us thought anything of it.\n\n\"Okay!\" The photographer thought she'd figured it out. She stood up on a table and rallied us together. \"Gather 'round, kids!\" She glanced around. \"Missing anybody?\"\n\n\"Just Chelsea,\" Jenn shrugged. I had a hard time keeping my eyes off her nipples behind the sheer robe.\n\n\"Chelsea? Who the fuck is Chelsea?\"\n\n\"She works at Secret Whispers. She got us the underwear for the lingerie shoot.\"\n\n\"Oh!\" Stacia nodded. I'd been given to understand that in addition to her fee of $50 per shoot, Stacia had received an excellent bra-and-panty set stolen especially for her. She seemed pleased. \"Okay. I don't like lateness, but it can't be helped. Fine. She'll fit on a shelf, though?\"\n\nJenn hesitated. \"Well. A long shelf.\"\n\n\"Fuck her,\" Stacia snapped. \"She can roll up into a ball. That's hers; third shelf up, on the left. Okay. Some of you fatties aren't going to fit for whatever reason, so you'll all be kneeling on the floor.\"\n\nSilence.\n\n\"Doing what?\" I asked at last.\n\n\"Shelving the fucking books.\" Stacia said it as though it was obvious. \"That's you, Boobs, Earrings, and Curly. You guys will be putting books in next to the shortest girls. That's Waxjob, Asian Chick, and Tape-girl. Then Dreads and No-boobs above them, plus this Chelsea bitch. And if she doesn't show, we'll put some books on that shelf. Sound good?\"\n\nIt did, and when Chelsea came sprinting in, her hair carefully styled, the picture was all set. Stacia eyed her sourly. \"I remember you. From the lingerie shoot.\" She sniffed. \"Third shelf up from the bottom, Thongy. On the right. Get your clothes off and climb on up; we're about to get started.\" Yowling followed; the metal shelves were chilly on naked flesh, but in the end we all did our jobs.\n\nI found myself shelving a book called Hell In A Very Small Place (nonfiction, B. Fall, DS 550.F28) while using the smoothly plucked ass of a giggly Olivia \"No-boobs\" Brewer as my bookend. Stacia had changed her mind and had me stand up, reaching to the top shelf, meaning my cock dangled in the grinning face of Aimee \"Asian Chick\" Choi. The whole thing was surreal, especially when Aimee urged me to give a twitch during the photographer's coffee break.\n\nI obliged, to general cheers, until Stacia finally lowered her camera. \"Ladies and Penis?\" she called, \"that's a wrap.\"\n\n\"I'm having a party tonight,\" Megan announced loudly after we'd all started changing. I was just pulling my shirt down. \"All you fucking perverts are invited, too!\"\n\n\"Ooh!\" Liv squealed. She touched my arm. \"How about it, Twitchy? Wanna party?\"\n\nShe stood there in nothing but her panties, looking gorgeous with her orange hair and her tight little body, but I didn't even hesitate. Never, never, never shit where you eat, I reminded myself. I saw a brief future where I went over to Meg's apartment, got wasted, and ended up in a three-way with her and Liv. And after that? Real awkwardness in the whole department: tension, drama, and all the shit I had no time for. \"Probably not, Liv.\" Besides, I wanted to get laid tonight.\n\n\"Aww.\" She pushed her lip out into a cute pout while sliding her bra up her arms. \"But then who will I dance with?\"\n\nI barely heard this; my phone had just informed me that Jacqui would call me later to figure out whether she was coming over. I frowned.\n\nFuck.\n\n<br >\"Well. Fine. Be a party-pooper.\" And then she slapped my ass again, sighing. \"See you around then, Twitch.\" She leaned in on her tiptoes and planted a surprisingly gentle kiss on my cheek. I was watching her bend over to get her pants when I felt a tap on my shoulder.\n\n\"Party-pooper, hmm?\" It was Jenn, still in her robe after writing Stacia's check. She smiled shyly at me.\n\n\"Jenn.\" I smiled back. \"Great job with this calendar. Thanks for asking me.\"\n\n\"Aww.\" She threw her arms around me, but then she'd been doing that to everyone all afternoon. Jenn was an enthusiastic hugger. This really was a feather in her cap. The calendar would sell like crazy; everyone knew it. My cock, of course, spasmed in my shorts as she pressed her body to mine. And I didn't care if she felt it. \"Thanks, Mikey. That means a lot to me.\" She stepped back, but stayed close; her cleavage was pinking up, and she held my gaze. \"So. Any hot plans tonight?\"\n\nI looked at her, my phone still in my hand. Beside her eye corkscrewed a thick twist of her hair, and once again I suppressed the urge to sweep it aside. Instead, I looked away so I wouldn't be tempted by her nipples. \"Well,\" I drawled at last, \"I was thinking I might just go home. Maybe curl up with a good book.\" Wait for my girlfriend to come over and get thoroughly fucked, I didn't say.\n\nHer face changed, becoming warmer. More intimate. \"And a good friend?\"\n\nI thought about Jacqui's text. \"Hopefully,\" I admitted.\n\n\"Yeah.\" She drew her robe closed slightly. \"I'm not sure I've got one handy, either. But curling up with a book sounds nice.\"\n\nI cleared my throat. \"Come on over?\" I smiled when I said it, making sure she'd know I was joking.\n\nShe laughed gently. \"I really should go to Meg's,\" she sighed, then flickered a glance at me. \"For a bit, at least.\"\n\n\"So should I.\" It was out there on the table. I felt a weird sense of abandon. \"And yet? I'm not.\"\n\n\"No,\" she shook her head. \"But you're not in charge of all this. I am.\"\n\n\"It's over, Jenn.\" I jerked my chin toward Stacia, who had already fired up a blunt. \"She said so.\" I licked my lips, then looked away at where Peyton was buttoning her shirt. No bra. I wondered whether Stacia was invited to Meg's, and how long it would take before she and Peyton got it on in a bathroom. I shouldered my backpack. \"I'd say if you want to curl up with a book, you damn well oughta.\"\n\n\"Yeah,\" she mused, fidgeting with her knot. After a pause, she smiled at me. \"Well. You enjoy curling up.\"\n\n\"Always.\" I was sure she could see my dick poking at the front of my shorts as I turned away. \"Catch ya.\"\n\n* * *\n\nI'd just gotten out of the shower and I was trying to decide what kind of porn to watch when I heard my phone vibrate. Fuck! Thank God. The \"Jacqui\" kind of porn, live and in person, would do nicely. I was already thinking about the kind of fucking I'd lay on her when up came a shimmering text. From a different girl.\n\nCurled up yet? It was Jenn.\n\nSure, I lied. She took her time responding, and when she did, I heard myself gasp.\n\nWhat's your address? I might take you up on your invite.\n\nA dozen reasons told me why I should tell her not to. They crowded my mind immediately, without any prompting, and I poised my thumbs to punch out the message at once. I should have.\n\nBut her knock came on my apartment door not quite fifteen minutes later, because I punched out a different message instead. A street number. Then another one, telling Jacqui I was planning on an early night tonight. Which was why I was all nervous and keyed up as I took a deep breath and reached for my doorknob. The door opened to Jenn, wearing running shorts and a tanktop. She smiled wanly as she held up a battered paperback copy of a Christopher Moore book, the one about Jesus. \"I like that book.\"\n\nHer smile broadened. \"Does that mean I can come in?\"\n\n\"Just a sec.\" I made a show of peering at the binding. \"It's not a library book,\" I said in disgust. Jenn's lips pursed.\n\n\"Gee. I'm sorry.\" She bowed her head in mock contrition. \"I borrowed it from my sister.\"\n\n\"Ah.\" I arched an eyebrow. \"But did she buy it, or get it from the library?\"\n\nShe was nodding seriously. \"An excellent question.\"\n\n\"Because, as budding library professionals, well, I think we should be supporting the institution.\"\n\n\"Yeah.\" She was still nodding. \"You should let me in, Twitchy.\"\n\nI laughed and stepped aside with a slight giddiness in my brain, not to mention a lurch in my groin. She was humming as she came in, the two of us weirdly at ease. \"Nice place,\" she threw out, and we both knew she was lying: this was student housing, a temporary hideout for six decades' worth of grad students who'd come, left their mark, and then abandoned the place to a fresh coat of paint and most of the same furniture.\n\n\"It's got a TV, anyway,\" I shrugged. \"That's more than my dorm had in college. See? I'm moving up in the world.\"\n\nShe threw her hair back with a jerk of her head. \"So, I'm going to curl up. Is this the only sofa?\"\n\n\"Yup.\" It was a faded, patchy mess, but still sound and surprisingly comfortable. I watched as she plopped easily against the arm of the couch on the far side, stepping out of her sandals as she drew up her legs. I was frowning when she glanced up at me, her eyes asking what was wrong. \"You're in my seat, Jenn.\"\n\n\"Tough shit, Mike,\" she giggled. \"I'm your guest. I should get the best spot, right?\" She tossed her head once more, then opened her book. \"Take a seat, Mikey. I don't bite.\"\n\n\"Does this make me a good friend?\" I asked, sprawling sideways on the other end. My bare feet rested lightly against her butt, and she said nothing about it. \"You know, being curled up with you?\" I cursed myself; I'd failed to offer her anything to drink, and now it was probably too late.\n\nShe rolled her eyes. \"You're hardly curled, bud. And besides, that was just for the caption. Different circumstances.\"\n\n\"What? Like, I was only a good friend for the shoot?\" She hadn't stopped smiling since she'd come in, and I was already half-hard.\n\n\"The shoot. The caption,\" she agreed. \"The nudity. The loveseat. That's when we were good friends.\"\n\nI nodded thoughtfully, then took a deep breath. \"I liked being good friends.\"\n\n<br >\"So did I,\" she replied at once, and then her smile grew crafty. \"I could tell you liked it.\"\n\nMy cock surged in my pants. Her face was alive, vibrant, her grin infectious. \"That's right,\" I mused. \"You could.\" I swallowed and made sure to steady my voice, pretty sure now where this was going. \"We should be good friends again. That's what I think.\"\n\n\"O ho!\" She laughed loudly. \"You think so, huh?\" But her eyes were glittering again, and now her cheeks were all flushed. \"No Stacia, though, with her camera.\" She snapped her fingers. \"Darn. I was really looking forward to stripping again.\"\n\nI nodded slowly, then reached behind me to the creaky little table where I kept my remote. And my phone. I swept the phone into my hand, thumbing the camera to life, and pointed it at her with a serious expression. Her eyebrows shot up. \"You know what to do, Curly,\" I muttered.\n\n\"Goddamn,\" she marveled, shaking her head. \"When you curl up to read, bud, you really mean business.\" But she was reaching for the hem of her tanktop, moving it up her body and over her breasts. Her bra was green lace. \"Are you getting good shots, Twitchy?\"\n\nIt hadn't even occurred to me to actually take any pictures, and I was too giddy to think about it on my own. \"Of course not.\" I tossed the camera onto the coffee table. \"I was only trying to get you out of your clothes.\" My other hand reaching for my lap; my cock was hardening the wrong direction, and I made a show of adjusting it.\n\n\"Like you haven't seen it all,\" she mused, slipping out of her bra. \"You could have just asked. As long as I'm not disappointing you.\" She tossed the bra carelessly over the back of the couch, her nipples swinging, and then set her book down on the cushion beside her. A thought seemed to occur to her as she started to push her shorts down, still curled sinuously on my sofa. \"I'd like to see whether I am,\" she added, her voice catching just a bit at the end.",
        "\"Disappointing me? You're not, Jenn. Believe me,\" but her eyebrows were still high and her clothes were coming off, so I hitched my butt up and shoved my own shorts off. The waistband of my boxers snagged on my erection as it passed, then released it to spring straight back up. She giggled.\n\n\"Again?\" She rolled her eyes theatrically, kicking off her shorts, standing in the nude with no shame at all. She watched with a thin-lipped smile as I studied her body. \"Eyes up here.\"\n\n\"Sure thing, Stacia,\" I chuckled, and then my shirt was off and I was as naked as she was; her eyes went wide in mock shock.\n\n\"That's a low blow.\"\n\n\"Well?\" I settled back into my spot, my legs stretched almost all the way across. My cock was ludicrously large, foreshortened like a cannon barrel as I glanced down at it. I raked my hand quickly between my thighs to free my trapped balls, displaying myself for Jenn as I flung my arms behind my head. \"Quit bossing me around, then.\"\n\n\"This isn't bossing,\" she insisted, starting to sit once more. \"Move your feet. They're in my way.\" I lifted them obligingly, and once she'd curled her legs underneath her she set them back onto her thigh. I wiggled my toes. \"So your penis isn't the only thing that twitches,\" she laughed.\n\nI joined her. \"I've got all sorts of talents.\" We looked at each other then, scanning each other's bodies unabashedly. \"It's weird not being told where to look.\"\n\n\"Mm.\" She was stroking my foot with the hand that didn't hold her book. \"Not that it stopped any of us, really.\"\n\n\"A little bit.\"\n\n\"Not that day in the convertible. You? With sunglasses? Surrounded by tits?\" She shook her head. \"I'm amazed we got away with that.\" Her fingers paused on my foot. \"So how many of them did you fuck, Mike?\"\n\n\"Zero,\" I snapped. \"I don't need the drama.\"\n\n\"Not even Megan?\" I could tell this was rhetoric. She knew. She was just mocking me.\n\nI waited until she met my eyes, the contact very strong. Her fingers moved along my foot once more. \"Megan will tell you I never got hard for her,\" I observed slowly. \"Same with the others.\" As I watched, Jenn's face went scarlet. I smirked. \"Except one.\"\n\nShe shuddered visibly, her hypnotic nipples wobbling once more. She was taking deep breaths now. \"It's really, really too bad,\" she said, her voice very low, \"that your girlfriend didn't take care of you that time.\"\n\n\"Right?\" I shrugged. \"Missed opportunity.\" She was looking thoughtfully at my dick now, her head tipped to one side; her book, propped forgotten in her hand, might as well not have been there. \"I'm enjoying the footrub, Jenn,\" I told her, my eyes on her chest.\n\n\"You're not the only one with multiple talents,\" she winked. One side of her mouth quirked up in a smirk as she considered what she'd done to my penis. I wanted her to see it, my back arching just a little. \"I've got others. Um, Mike? Can I ask a weird question?\"\n\n\"Of course,\" I said, studiously lazy. She was really a lovely woman, her ass smooth and perfect under my calves. She was still curled up, facing away from me, just a hint of her pussy lips showing through the underside of her thighs. I was staring greedily.\n\n\"She's not going to be able to take care of you tonight either. Is she.\" It wasn't really a question. I saw her mouth tighten when I shook my head silently, both corners swerving upward now. It was the answer she'd been expecting. Hoping for. And as I took in the curve of her ass, the wink of pussy underneath, the left nipple perky in profile, and the nodding certainty in her eyes and her mouth, it amazed me that I hadn't figured out sooner how badly I wanted this woman.\n\nI could sit up right now. I could kneel on the couch. She'd never need to move, not at all, and I could scoot over to her with my dick casting its shadow over her skin. I could lay one hand on her warm thigh, the other tipping down on my cock, guiding the head to those peeking lips of hers, then the slow lean forward, all the way inside.\n\nI could fuck her. Right now. My penis ached with the realization that she'd do nothing to stop me.\n\n\"So?\" She brought me back. \"What's that mean? Your hand again?\"\n\nI shrugged, a difficult maneuver with my shoulders on a throw pillow and my hands behind my head, but I did it. \"I do what I have to.\"\n\nShe pursed her lips. \"I'd offer to take care of it, you know,\" she said, her voice husking, \"but your girlfriend might object.\"\n\n\"So might your boyfriend,\" I pointed out. \"But they're not here, though.\"\n\n\"Nope.\" She was grinning again, a wicked grin now, and she'd stopped with my foot. \"Too bad, huh?\"\n\n\"Doesn't have to be.\" I watched as she made the decision, nodding, lifting my foot off her leg and wedging it behind her on the couch. The other she pushed unceremoniously to the floor, and just like that she was right between my legs. Her eyes were fixed at her destination, where my thighs met and my scrotum waited, and she started to uncoil.\n\n\"In that case,\" she said quietly, licking her lower lip, \"I guess maybe I will offer.\" She leaned forward, her hands on my thighs just above the knees, and gathered her legs beneath her. Her breasts dangled toward me as she arched her back. I could feel her breath now, rustling my chest hair, and I reached out one hand so that, at long last, I could sweep that heavy rope of hair out of her face. She smiled. \"That is, if you don't object.\"\n\nI waited until she was looking back down at my cock, and then I very deliberately gave her The Twitch. It hurt a bit, as hard as I was, but Jenn got the message. She was laughing loudly as she crawled forward and down, her mind made up, and before I knew it her brown eyes were seeking mine as her lips met the head of my dick, her kiss strong and insistent.\n\nOnce more I moved her hair aside, wanting to spectate; I always love seeing a beautiful woman suck my dick, and it doesn't happen often enough. I let her work, one of her hands delicately jiggling my balls while the other one lifted my shaft to her waiting mouth; I drew a deep, shuddery breath when her lips closed tight around me, just under the head, then pulled off with a hard, eager suck. She lapped at the saliva she left behind.\n\nWe smiled at each other. \"See?\" she murmured, that one hand rhythmic as it ran up and down, up and down, twisting my dick at the top of each stroke; my balls tingled in the other one. \"I like taking care of things like this.\"\n\n\"A woman of many talents,\" I managed, and then her smile closed over my dickhead once more and tightened, the tongue lashing my piss-slit, and I was groaning as my head fell back onto my throw pillow. I couldn't believe this was happening. I'd known it would, from the moment she texted me for my address... no, actually, I think from the moment I showed her my erection and it pleased her. It occurred to me that she'd been thinking, since then, of doing this.\n\nGoddamn. She felt good.\n\nLips on skin, she flicked her tongue over every vein and ridge she found. The warmth, the pressure, blew my mind even as she blew my cock, the sheer wrongness of the situation thrilling both of us even more; vaguely I was aware that my phone on the coffee table was gyrating across the cheap particle board as Jacqui texted me while some other woman was toying with my balls.\n\nMy fingers found her shoulders, sweaty and muscular, and I sent my hands digging underneath to cup her tits. She cooed on my dick when I found those firm nipples of hers and squeezed, and then she was backing off me again. My dick shone once she'd exposed it. \"Hey!\" she whined, her hands clamping hard on my balls. \"Quit it. This is me taking care of you, blue-balls.\n\n\"Aw, come on.\" Her breasts weren't big, but their weight felt good in my palms. \"I'm enjoying this.\" I jiggled her, and she laughed and pulled her feet up beneath her; she'd been on her hands and knees, and now she sat cross-legged before my cock. Her bright pink slit winked open beneath her bush. My hands left whitened prints on her tits when I brought them down to her legs. Her hands had never left my dick, jacking me slowly. She looked down and grinned as my head winked out when her hand went down to the base. I swallowed. \"I'm enjoying this a lot, Jenn.\"\n\n\"You looked really hard, but this? Feeling you?\" She shook her head. \"I can't believe I did this.\"\n\n\"I can.\" I was done waiting. I put my finger beneath her chin and made her raise her head to meet my eyes while I moved my other hand, because I wanted to see her face when my fingers plunged inside her. \"Shh. Hold still,\" I told her softly, waiting until her eyes cleared, and then I glanced down, aimed, and jabbed two fingers straight into that lush pink gash she'd presented to me on a silver platter.\n\nShe stiffened, the tendons in her neck prominent as her jaw flopped open, her eyelids fluttering. \"Jesus.\" It came out as a sighing whisper. Her vagina was a wet, tight furnace around my fingers, both legs jerking. \"Holy shit.\" There'd be a stain on my couch after this, and I couldn't care less; a sudden coolness hit my cock as she let go, her arms rising convulsively, reaching for me to pull me close to her, so when her hands locked around my neck I went to her with my mouth open.\n\nShe tasted like the beer she'd had during her brief appearance at Megan's, but I soon washed that away in a lashing sweep of my tongue on hers. We kissed hard, her body vibrating around my fingers even while my thumb probed around at the top of her slit. \"Mm. God!\" she burst out, her mouth tearing off mine in a burst of spit; I'd found her clit. \"Fuck!\" She started bucking, then her hand was gripping hard at my wrist, and for a blind moment I wasn't sure whether she was trying to pull my hand in deeper or claw it out.\n\nBut it didn't matter a few seconds later as, wild-eyed, Jenn unfolded her legs and began to climb onto my lap. My cock waving like a mast in a high sea, I scooted backward, my elbows seeking traction so that I could find the back of the couch, so she'd have leverage as she rode me. It was like I could read her mind that way; I knew exactly what she was trying to do.\n\nHer legs were strong and demanding alongside my thighs, driving her body high above my lap while her hands scrabbled at my abs, seeking my cock, needing to hold it up so that she could impale herself. I was gripping hard to her ass when she succeeded, hanging her head to stare down at my cock parting the tight lips of her cunt.\n\nHer mouth had been hot. Her pussy was fire.\n\nI gasped as she found my head, sinking an inch down, tight and vital around me; the bunched muscles beneath my fingers shifted as she gained control, pushing herself down onto my dick, taking me inside; both of us raised our heads and stared, mouths wide, so she was watching my eyes as she bottomed out and then rocked, settling, feeling how far up I could reach.\n\nShe had my face in her hands, then, caressing me, her lips gentle on mine; there was an odd look in her eyes, but there was nothing odd about the feel of my body inside hers. We felt perfect, melting together.\n\n\"Mmm.\" She kissed me again, softly, and then her voice was a low murmur in my ear. \"Told you. I always, always take care of my man.\" Her lips found my neck, running down to my collarbone, and with my cock in her cunt and her ass in my hands I was in no shape to remind her I wasn't really hers.\n\nIt didn't matter, anyway, once Jenn started rolling her hips. I thought belatedly of condoms as she began to move with a witchy, intoxicating motion, every swirl and sway designed to make my dick feel like it was in heaven. She knew it, too, her face blissed out not just by what she was feeling, but by what she saw in mine. \"Always,\" she sighed, with a sigh in her voice at the end as her hips swung back to grind her clit against the root of my cock. Then forward, like a belly dancer, while my hands were full of the fluid perfection of her ass.\n\nMy head fell back against the couch like a man in a trance, just letting this woman work me inside herself. The first urge to cum arrived, an eager twinge above my balls, but there was no way I wanted this to end so soon; I put it down harshly, reminding myself I wasn't going to shoot it into her so early, and that first stir subsided even as Jenn rippled her pussy up and down along the sides of my dick.\n\nShe was excellent. An amazing lover. She read it in my eyes, too, hers taking on an exultant pride in her own skill, and then she leaned up with her hands on my shoulders and began to intensify her motions. \"Yeah,\" I grunted, Jenn's thighs flexing, driving herself up and down, and I was suddenly overwhelmed by the need to thrust deeply into her. I tried, my hips rising off the couch, but it wasn't enough. \"Bend over,\" I rasped at her, and she smirked. \"Hands on the back of the couch.\"\n\n\"Who's being bossy now?\" she groaned, her hair a mess in front of her face, but she wanted it just as bad: she swung off me and perched herself on trembling legs against the sofa, watching me out of the corner of her eye as I stood up and crept behind her. \"Stick that dick in me,\" she hissed, glaring back. The tendons strained behind her thighs.\n\n\"Yeah?\" I had it in my hand, sticky with her pussy, my pubes matted with it interspersed with her saliva. The room now held the stench of sex. I wanked myself lewdly, Jenn's eyes blazing.\n\n\"Yeah,\" she grated, the syllable easing into a sigh as I pushed deep into her leaky cunt in one long, smooth stroke. Her head fell down over the dull puddle she'd left on the couch cushion. \"Oh, fuck.\"\n\nI eased out, my mouth dry as I looked at her bright pink labia clutching at my cock, at the beautiful wet symmetry of it all: her cheeks two perfect fleshy halves, her little asshole in between, her waist tapering sharply as it angled away from me, my hands opposite each other as I gripped her hips. Fluid sheened the inside of her thigh.\n\nI slammed back into her, my brain crying out to see her ass shake, and her whole body tensed. Again, and she was gasping, my hips a blur as I drove deep into her sexy body, the two of us united now in a harsh thigh-slapping rhythm. She pushed back, my dick reaching as far into her as it could go, and I focused hard on her twisting spine so that I could keep this going just a few strokes longer. She was turned back toward me, her face a mask of savage lust, and dimly into the back corner of my hopped-up brain it occurred to me to ask the big question.\n\n\"Fuck, Jenn,\" I panted, my body crashing into hers at a punishing pace, \"where do you want it?\"\n\n\"Right in my fucking pussy,\" she spat back, looking at me with dazed eyes, her mind unable to comprehend why I thought I should cum anyplace else. And so I abandoned my caution and sped up, smashing her face against the seedy couch as her arms finally gave way, faintly aware of a distant wail starting deep in her chest as she orgasmed.\n\nI arched my back deeply, my body curved like a compound bow, thrusting into the whining Jenn as far as I could possibly go, then even farther as my hands hauled her back and my dick jumped within her. It felt like her whole body was sucking at me, pulling hot semen out of my balls with a force and pressure that left me shaky, gasping as I leaned forward over her back as though my legs had given out.\n\nI pushed in twice more, more weakly, spewing the last of my cum into a greedy pussy still twitching and contracting around my dick as she finished, laughing weakly but deliriously against the couch cushions. \"Jesus fuck,\" she gasped, trembling.\n\n\"Right?\" I saw my fingermarks, livid on the sweaty skin beneath Jenn's ribcage. She'd bruise there. My dick was still spastic within her pussy, and she giggled as she glanced back. One last Twitch. The most important one. The one deep inside her pussy, up against her cervix.\n\n\"Still twitchy.\" Her eyes fluttered heavily, and she smiled.\n\n* * *\n\nShe hesitated a couple days later when she walked into Classroom Management, but eventually she came and took the seat next to me. The new normal. I cleared my throat. \"Um, hi.\" I hadn't spoken to her since the night I'd cum inside her, then watched her leave because she didn't want her boyfriend to guess what she'd been up to.\n\nAnd that, I'd figured, was that.\n\nShe paused, then rolled her head to look sideways at me. \"You know,\" she began slowly, \"it occurs to me that we missed an opportunity for the calendar.\" I raised an eyebrow, and she shrugged. \"A slumber party would have made a really good theme.\" Her glance after that was unreadable, but after a second or two I thought I got the point\n\n\"Well.\" I took a deep breath. \"I mean, if you're game, I don't mind exploring that. Like, with you.\"\n\n\"Mmhmm.\"\n\n\"Research.\" I nodded thoughtfully. \"For next year.\"\n\nShe shrugged again. \"I mean, who'd object to a little research?\" She smiled then, thinly confident. \"We should start soon.\"\n\n\"Tonight?\"\n\n\"Why the fuck not, Twitchy.\" She was chuckling as she bent forward to burrow in her bag, and when I looked at where her shirt was riding up in back I still saw the fading bruises left by my fingers.\n\n* * *\n\nThanks for reading! I hope you enjoyed it. Please read the other Nude Day entries and vote on your favorites."
    ],
    "authorname": "Voboy",
    "tags": [
        "exhibitionism",
        "grad school",
        "infidelity",
        "masturbation",
        "nude day contest",
        "photo shoots",
        "students"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/calendar-girl-2"
}