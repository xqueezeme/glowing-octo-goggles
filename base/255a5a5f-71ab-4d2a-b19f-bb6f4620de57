{
    "title": "Sting of the Scorpion Ch. 03",
    "pages": [
        "The chronological order of my stories is as follows:\n\nTodd & Melina series, Interludes 1-5, Sperm Wars series, Russian Roulette series, Case of the Murdered Lovers series, Case of the Murdered Chessplayer series, The Swap series, Interludes 6-10, The Murdered Football Player Series, Case of the Black Widow series, Teresa's Christmas Story, The Case of the Black Badge series, A Case of Revenge series, Teresa's Summer Race, The Trilogy series, Dark Side Of The Force series, Caught In The Act series, The Phyllis Files 1-2, Case of the Murdered Bride series, The Credit Card Caper series, The Phyllis Files 3, The Hot Wives Investment Club series, Seriously Inconvenienced series, Case of the Paper Trail series, Christmas Mystery Theater, The Porno Set Mystery series, The Medical Murder Mystery series, The Eightfold Fence series, The Phyllis Files 4, Pale Morning Light series, Silverfish series, Cold As Ice series, Secrets of Apple Grove series.\n\nSting of the Scorpion, Ch. 01-03.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 10 - A Stinging Rebuke, Pt. 1 \n\n\"Welcome back, Commander.\" said Detective Martin Nash as I entered MCD at 6:00am sharp on Friday, May 8th. V.E. Day, for those that remember such things. \"How was Washington?\"\n\n\"Needs a good housecleaning in November, as always.\" I said. \"Unfortunately, I didn't get much time to do any sightseeing. Anything exciting happen while I was away?\"\n\n\"Just a domestic shooting case that's been resolved already.\" Nash said. \"Otherwise, the criminal elements apparently took some time off themselves.\" said Nash, pouring coffee into my mug, then a second cup for himself. \"The University is going into final exams period, which means a quieter time for us and the Campus Police. Sandra was called into the City, which always means our FBI friends are about to go big with something.\"\n\n\"Thanks for that tip.\" I said. \"People wonder how I figure things out, Martin. Just between you and me alone... I hear you say something like that, I hear someone else say something here and there, I put it together like pieces of a jigsaw puzzle. So when I ask what was going on between the Chief and Brownlee, you won't be utterly stunned.\"\n\nNope, didn't get so much as a chuckle out of the guy. \"I guess you heard.\" Nash said. \"Brownlee tried to force Lt. Peterson to give KSTD the Jack Burke files. The Chief squashed that like a bug. Brownlee went to the Union and to the Media. The Chief is pissed. Brownlee is pissed. The Union is pissed. The Media is pissed. I could make a lot of money selling crowbars, sir.\"\n\n\"And don't even go within the Sheriff's sight.\" said a female voice behind us. I turned to see Tanya Perlman bounce into the room as if walking on air. \"Good morning guys! How was your trip, Commander?\"\n\n\"Obviously not as good as your evening with Dr. Wellman last night.\" I said.\n\n\"How--?\" Tanya asked, her face looking shocked before breaking out into a big grin. \"Okay, you got me... and you're right.\"\n\n\"Jigsaw puzzle, Martin.\" I said, seeing Nash's look.\n\n\"Okay, fill us in.\" said Nash.\n\n\"Easy enough.\" I said. \"When Laura and I got home last night, Mrs. Feeley had left earlier that day. Now it didn't have to be the case, but I thought it was possible that she had left a bit early to go home and prepare to babysit her grandson Pete. That would mean that you, Tanya, had plans for the evening. Martin just told me that Sandra is on a mission, which means Jack Muscone is on a mission, so he is eliminated as a suspect. And the way you walked into this room, Tanya... well, even Robert Brownlee could make that deduction, my friend.\"\n\nTanya laughed as Nash absorbed the lesson. He said \"So it looks like you did something magical, but only you were able to know about Mrs. Feeley, and then me telling you about Sandra.\"\n\n\"Yes.\" I said. \"I was in a unique position.\" Where had I said those words before?\n\n\"That reminds me of the Warner-Schelle murders.\" said Nash. \"You were the only one to see both crime scenes, so you saw things we didn't. Ever since then, I've tried to read up on every case that comes in, even to Vice, to see if anything in common comes up.\"\n\n\"And one day you'll be rewarded for doing that.\" I said.\n\nAs Detectives Joanne Cummings and Theo Washington trickled in, I asked \"Where is Torres?\", referring to Detective Diana Torres.\n\n\"On loan to Vice.\" said Tanya. \"She and Lorena Rose went undercover. Some young Hispanics have been seen in the western Tenderloin District, and Teresa wants to know if they're scouts for any gangs that might want to move in here. And Teresa didn't want to send in Lorena by herself.\"\n\n\"Smart.\" I said. \"Okay, Lt. Perlman, you have a DVD to show me. Let's all watch it together before Bettina comes on.\"\n\nTanya did not show any surprise that I knew about the DVD; after this morning's lessons nothing was fazing her. She grabbed the remote and started playing it. I watched Priya interview Brownlee. At one point I said \"Whoa! Stop the tape!\" Tanya did.\n\n\"Go back and play that again.\" I said. \n\nThe tape played: \"Commander Brownlee,\" said Priya, \"as second-in-command of the Police Force, and as Deputy Chief, aren't you in custody of the evidence, and can't you do something to release those files as required by law?\"\n\n\"Yeah, he's not second in command.\" said Cindy Ross, who had come in behind me. She missed her shot; I had not detected her presence, but she didn't take advantage of it.\n\n\"I heard that got to you.\" I said. \"Roll that beautiful bean footage one more time, Tanya.\" Tanya replayed that segment.\n\n\"So guys,\" I said, then uttered the dreaded words: \"teachable moment. Did all of you hear that?\" No one got it.\n\n\"Was I not the only one that heard Priya say 'release those files'?\" I asked.\n\n\"Ohhhh, I see.\" said Tanya.\n\n\"That makes one of us.\" said Martin Nash.\n\n\"Cummings!\" I said, getting my youngest Detective's full attention. \"When you hear about 'tapes', what do you think of?\"\n\n\"Video tapes?\" Joanne guessed.\n\n\"Exactly.\" I said. \"And the Jack Burke tapes were videocassettes. But what most people don't know and should not know is that Myron transferred the data into digital servers in case the physical tapes got damaged.\"\n\n\"Ohhhhh.\" Cindy said. \"Priya used the word 'files'. She knows they're digitally preserved on the servers... as files.\"\n\n\"Does that really tell us anything?\" asked Theo.\n\n\"Maybe not.\" I said. \"But there are some inferences from it. Anyone care to guess?\"\n\n\"Commander,\" said Martin Nash, sitting up straight in his chair, \"I'm not sure what you're getting at, but KSTD probably wants those tapes, or files, so they generate publicity for themselves. The stuff on the tapes are sexual, and involved prominent people in the County, from what I understand.\" The Burke-Arruzio case had been before Martin's time, I realized, but I also had just heard him tell me that he reviewed past cases to learn from them, which was a good thing.\n\nNash continued: \"So they get wind of the tapes, ambush us with the O.R.A. request, try to goad the new Chief into releasing them, then get Brownlee to generate more drama. And on top of that, they get to take free shots at you, Commander, though I don't understand why.\"\n\n\"The Town & County Council members are already being inundated with calls from people about it.\" said Cindy Ross. \"So KSTD has created chaos in the County, and at the same time boosted their ratings over 50%.\"\n\n\"And why is Priya taking the shots at me personally?\" I asked.\n\n\"Sir,\" Joanne Cummings said, \"you are a local celebrity here. Your name is well-known. Mentioning you just gets KSTD more attention, and ultimately more ratings points.\"\n\n\"That's good. Very good.\" I said. \"Okay, I have to go get ready to talk to the Chief. You all did well, but I believe there's more to all this. What I had been driving at about the 'files' and Priya knowing about them... is that this entire story about the tapes has been planned and orchestrated, and not just by the Media. Someone knew about the Burke tapes and that they're in the servers as files, told Priya and KSTD to ask for the files... the computer files. It's all coordinated, and one has to wonder why...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Your people did very well.\" said Chief Bennett after we chit-chatted about Washington and the funeral. \"I had a really good chance to observe them and talk to them without you here. The murders were solved quickly, and were pretty straightforward. This bullshit about the Burke tapes has been more of a problem.\"\n\n\"Yes sir.\" I said. \"I haven't had a chance to review the murder case, though.\"\n\n\"Speaking of that,\" said the Chief, \"Brownlee is pushing for a medal for Sharples. I'd like for you to give me an opinion on that after you review the case. And be open-minded about it; if Sharples did well, then he gets credit for it. By the way, Brownlee also thinks Sharples should be considered for MCD.\"\n\n\"No, sir!\" I said strongly, shaking my head almost violently. \"Not under any circumstances. Do that, and my resignation will appear on your desk and in your email box before you can blink twice.\" I think the Chief was taken aback at my passion in that statement more than the actual threat to resign.\n\n\"Is he that bad?\" he asked.\n\n\"Yes sir.\" I said unflinchingly. \"I'd fire him right now, but the God-damned Union is fighting me every step of the way when I try to. The guy is a dirtbag, he's poison.\"\n\n\"Brownlee thinks that swapping Torres for Sharples would be a great idea. Lt. Croyle agreed when I asked her about it.\"\n\n\"Sir, it's not...\" I caught myself, then straightened up in my chair. \"Sir, may I speak freely?\" Bennett knew what I meant.\n\n\"Yes, please.\" he answered.\n\n\"Sir, it's not that god-damned paper-pusher Brownlee's job or business to be saying who is in Vice, MCD, or Precinct assignments. He is not the Police Commander, I am. And he's full of shit, sir. Sharples is a dirty cop, I'm working to get the goods on him and take his ass down, and until that happens, there is no way on God's green earth that he is coming to MCD. Lt. Croyle wants Sharples out of Vice, so of course she'd love that swap. But I'll bet my new house that Lt. Perlman would go ballistic if you or I did that to her.\"\n\n\"And finally sir, and this is why I had to ask to speak freely... why the hell are you going behind my back to my subordinates about this? That's dirty pool, Chief.\" It was a rebuke and a strong one. I wasn't taking that shit, even from my boss.\n\n\"Ah, yes. Yes, it was wrong to do that. My mistake, please accept my apology. So why is Brownlee so strongly for Sharples?\" Bennett asked.\n\n\"Sir, again speaking freely, Brownlee is a piece of shit also. He relies on the Union to keep his job, just as Sharples does. He hired Sharples, and it's easy to see why: they're peas in a pod. I would suggest giving Sharples to Brownlee in some worthless Admin post, but in actuality I don't want to give Sharples up... I want to find a way to take Sharples down for keeps... without killing him, of course.\"\n\n\"All right, I hear you.\" said Bennett. \"Just one other thing. I've noticed that Captain Ross, while an outstanding officer and deserving of every accolade she's received, has one weakness that is getting in her way: she is too loyal to you, Commander. I know you two are close, but she needs to not just be your follower. She needs to take the reins of leadership of the Detectives as the leader, not just as your proxy.\"\n\nHe has no idea how close we are, I thought to myself, but I answered properly: \"Yes sir. Some of that has been my fault for putting her in places where she is a follower, but I'll make sure she leads as she should. I do think you'll be pleasantly surprised how she will grow into that Captain's chair.\"\n\n\"I do agree, and she did very well while you were gone.\" said Bennett. \"Okay, you go take care of the murder case wrap-up, and I'll see what I can do with this KSTD lawsuit. It's been filed. I still don't understand what the hell this really is about...\"\n\n\"We'll discuss that over a beer at the Cop Bar sometime, Chief.\" I said as I got up to go.\n\n* * * * * * * * * * * * * * * *\n\nI had Captain Cindy Ross, Lt. Tanya Perlman, and Detectives Theo Washington and Martin Nash with me as we entered the condo where Jennifer Morris had been murdered. As I entered, I silently looked around.\n\n\"Commander,\" said Tanya, \"I have the photographs of all the evidence so you can see what it looked like. Also, the murder weapon did have indications that a silencer had been attached to it when it was fired. It wasn't fired at McCombs, so that silencer evidence remained intact. And that explains why the neighbors heard nothing. Last but not least, there were no prints on the gun parts nor the magazine nor the cartridges. Totally clean.\"\n\n\"Which is shocking if it was the husband Morris.\" I said. \"That's good information, though.\" I said as my eyes peered around the room. \"Oh, thank you.\" I said as Tanya handed me a sheaf of photographs, and in color, no less! I rapidly looked through them.\n\n\"So how did the anonymous tipster hear the shots to make that call?\" wondered Theo Washington aloud. No one else answered as they watched me.\n\n\"Good question, Theo... Hmmm, shell casings here...\" I said, looking at where the circles had been drawn on the carpet. I examined the blood stains leading from the bedroom, then went inside the bedroom and stood at the foot of the bed. Of course the body had been removed and the bloodstained sheets taken into evidence, so I looked at the photos.\n\nAs I turned around and was about to say something, Tanya teased me. \"Uh oh, you're about to say it, aren't you?\"\n\n\"What's that?\" I asked.\n\n\"What you say when you're about to test the hell out of us: 'Teachable moment'.\" she replied, grinning.\n\n\"Oh yes.\" I said. \"And this truly is a good 'teachable moment'. Tell me, Theo, what's your conclusion about this?\"\n\n\"There's a lot of problems with the scenario, sir.\" said Theo, who was dressed in a suit and tie, as was Nash. I think they were trying to out-GQ each other. \"I can't think of anything that fits the evidence as we saw it at the time.\"\n\n\"That's exactly right...\" I said. \"... the evidence as you saw it. Think about that. Nash?\"\n\n\"I hate it when you say things like that.\" said Nash. \"By the way, this is my first time seeing it, too.\" I handed him the photos and he looked through them, walking around the rooms as I said \"Perlman?\"\n\n\"Theo's right.\" she said. \"I can't twist a theory to suit these facts, nor the facts to suit any theories in this.\"\n\n\"Before I ask you, Captain Ross,\" I said, \"I want to ask everyone: have you followed up on Mr. Morris's whereabouts in the timeframe of the murder?\"\n\n\"No sir, and that's my bad.\" said Theo. \"But the guy pulled a gun on McCombs and Sharples, and it was the gun used to kill his wife and her lover Konnichi. He has to be the guy, right?\"\n\n\"Yes, it was the gun used to kill them.\" I said. I saw Cindy's eyes light up at at that, and it was time to unleash the power of the Blue Crowbar. \"Okay, Miss Ross.\"\n\n\"Sharples.\" Cindy said simply. \"Sharples is involved. His name is mentioned. Therefore, none of this can be taken for what it seems to be.\"\n\n\"Yes.\" I said. \"Now tell me again guys, what exactly Sharples' role at the crime scene was? Who got here first, by the way?\"\n\n\"Two uniformed officers responded to the anonymous call about gunfire.\" said Theo. \"Patrolmen Phil Goodwright and Jeremy Hatch.\"\n\n\"Jesus H. Christ, who sent Hatch to a report of gunfire in the area?!\" I asked, the explosion in my voice shocking everyone. \"Captain Ross, remind me to find out just who the hell allowed that to happen.\" Hatch was a really inept officer, who should not be going on potentially dangerous calls. \"Okay, Theo, please continue.\"\n\n\"When I got here,\" said Theo, \"the Crime Lab people had just gotten here, and Sharples was here. Christina Cho told me that Sharples got there right after she did. He was looking around, but didn't touch anything, and he was annoying the Crime Lab people by asking about things like the angle of the bullets entering the wall by the window, how many shells were found and where, and such stuff. He'd then say something like 'Okay, he must've fired from here.', and he finally went away right after I got here.\"\n\n\"Sounds consistent.\" I said. \"Nash, one more guess before we bring the crowbar down?\"\n\n\"Captain Ross is right, sir.\" Nash said. \"It's not as it seems to be, but I can't think of the word for it.\"\n\nI said \"How about the word... 'staged'?\" Four pairs of eyes lit up.\n\n\"Of course.\" said Tanya. She whirled and went to the door. \"So instead of Sharples's bogus theory, let's just say the perp comes in the door very quietly. Jennifer is getting banged by Kenny and neither hear him. The perp comes into the bedroom, shoots them both, kills her, but he gets away through the window. Perp runs towards the door to leave, but then sees lover trying to dive out the window, and fires at him but misses.\"\n\n\"Not bad,\" I said, \"but why wouldn't Konnichi run for the door himself? And why wouldn't the perp blast him in the back as he tried to run away?\" Tanya gave up.\n\n\"I'll add this.\" I said. \"According to what I'm seeing, for the husband to have shot at the lover in the window, he would've literally had to be bringing in a silencer-equipped pistol from the outside hall into the doorway, and then find the lovers and all that. Now I don't know about you guys, but a silencer-equipped semi-auto .22 WMR pistol isn't something I carry around, and it's not something one just hides in one's pocket. So the Sharples theory is bullshit from the get-go.\"\n\n\"And finally, as Theo was figuring out,\" I added, \"the anonymous phone call... claims to have heard gunfire no one else hears, and from a silencer-equipped weapon at that. Why the call? To make sure the scene was quickly found.\"\n\n\"All right.\" said Cindy in the thoughtful silence. \"Red Crowbar wins again. You tell us what happened.\"\n\n\"Wildcats rule, as always.\" I said, teasing my partner about our respective School loyalties. \"Seriously... I think the perp did enter the apartment with that silencer-equipped .22 WMR semi-auto pistol... with the intent to kill. He entered the condo while Konnichi was fucking Jennifer Morris, who is a real slut that would fuck anyone with a half-hard cock, from what I understand.\" My Detectives looked surprised at my language and vehemence, but I sailed on:\n\n\"He goes into the bedroom, surprises the lovers. Shoots Kenny, but Kenny staggers out. Perp shoots Jennifer, then goes after Kenny... but Kenny wisely went out the window instead of going for the door. At that point, he had a chance to live.\"\n\nI continued: \"And that's where Fat Boy... yes, I love that nickname, too, Tanya... or maybe a confederate hired on Sharples' behalf, got too cute by half. He fired at the window after Kenny had already left through it. Two bullets into the wall, two through the open window. All for theater, all for show.\"\n\n\"Oh, wow...\" Theo said as my narrative sank in.\n\nI said \"Then he leaves, calls in the anonymous tip, then comes back to assist the Crime Lab in their inquiries. He makes sure to be seen, to have his theories heard, then gets out just before he'd get in trouble for interfering with an MCD investigation.\"",
        "I went on: \"He and McCombs then go to find the husband Morris, who I believe had absolutely no idea what was going on. He sees a cop car pulling him over, stops like a good citizen, is asked to step out of the car, and is murdered in cold blood, shot at point blank range. The murder weapon is then planted on him. Will it hold up?\"\n\n\"Yes. Yes it will.\" said Cindy emphatically.\n\n\"I guess my question is... 'why'?\" asked Nash.\n\n\"Ah, the 'unique position', Detective Nash, the 'unique position'.\" I said. \"I happen to also know that certain disgusting elements are actually trying to get Sharples into MCD.\"\n\n\"Over my dead body!\" yelled Tanya. I excused her breach of decorum.\n\n\"And over mine first.\" I said. \"Don't worry, it's not going to happen. But Sharples staged this to get acclaim. KSTD is already giving him props. So, here's what we need to do: we need to do everything we can to establish an alibi for Mr. Morris. See if he was at the Lions Club, get Myron to download his car's GPS, find out where he went and what he did that evening. Get street camera videos, canvas for eyewitnesses to the Morris pullover as well as anyone who saw Morris that night.\n\nI finished up: \"If we can, and show that he cannot have committed those murders, then we may have enough to bust the Fat Boy. Maybe not for Mrs. Morris and Mr. Konnichi, but enough to bring into serious question his shooting of Mr. Morris. At the least, maybe we can get Fat Boy out of our Police Force.\"\n\n\"So why did he select these particular guys to kill?\" asked Cindy.\n\n\"Ah, now that is the right question to be asking.\" I said. \"Bulldogs rule on that one.\" Cindy was beaming, even as she and everyone considered the question...\n\nPart 11 - A Stinging Rebuke, Pt. 2 \n\nAt 11:00am, the Duty Desk Patrol Officer escorted three people to my office. One was well known to me, the lovely redhead Sandra Speer of the FBI, and Martin Nash's girlfriend (why hasn't he marred this woman yet? I wondered to myself). Next came Chris Griswold and Barry Gagnon, who Sandra introduced as FBI agents from Washington. \"They're investigating that classified file you found.\" said Sandra. \"Jack asked me to work with them while they're here.\"\n\n\"Yes, Commander.\" said Barry Gagnon, taking the lead. \"So if we may get started: we understand that you were given the file by one Mrs. Boddiker?\"\n\n\"That's right.\" I said.\n\n\"And where does Mrs. Boddiker live?\"\n\n\"I have no idea.\" I replied. They looked up at me as if I'd called their mothers something bad. \"She claims to be homeless.\" I said.\n\n\"Is there any way you can help us find her?\" said Gagnon, his voice much less friendly.\n\n\"I can suggest that you ask at the Community Center, where old people hang out.\" I replied. \"She goes there, and then she'll be seen walking in Courthouse Square on some mornings.\"\n\n\"And the other person who found the file, she also came to the Station to turn in the file?\" asked Gagnon.\n\n\"No.\" I replied. \"And before you ask, Mrs. Boddiker only told me about the other woman, who she says is named Mrs. Athena Jones. To my knowledge, I have never met nor even seen Mrs. Jones.\"\n\n\"So this Boddiker woman could just be making this other woman's existence up, then?\" asked Gagnon.\n\n\"Why would she do that?\" I asked. \"Mrs. Boddiker has very accurately helped the Police on a couple of occasions. She really has no reason to make me believe she has some imaginary friend. If she says Mrs. Jones exists, then I believe her. I simply have never met Mrs. Jones before.\"\n\n\"And you've made no effort to find her?\" asked Gagnon.\n\n\"You mean over this classified file?\" I asked. Gagnon nodded, and I continued \"I haven't looked into it at all. I turned the file in, and left it to the FBI to investigate. It's your case, guys. Unless you want and ask me to help. Which I'd be glad to do.\"\n\n\"I don't think you have the clearance for that.\" said Griswold.\n\n\"Uh, will you guys excuse me a moment?\" Sandra asked. \"I'm going to use the ladies room.\" She quickly left, and I took the opportunity to bear in on these guys.\n\n\"Guys,\" I said, \"did my wife suggest that you ask me to help you on this case?\"\n\n\"No sir.\" said Chris Griswold. \"Why would she?\"\n\n\"Because she knows that I can.\" I said, pulling out my FBI consultant I.D. card. \"I've got a TS clearance, too... as I told you at the General's funeral. I could help if you wanted me to, and I'll be glad to help if you want me to. I'll also butt out and leave you to it, if that's your call.\"\n\n\"We know you're a busy man.\" said Gagnon. \"We might as well go, Griswold, and find this Community Center.\"\n\n\"By the way,\" said Griswold as the agents stood up. \"Thanks for going along with us saying we're FBI agents. It just keeps the wrong kind of questions from being asked. The FBI doesn't like us encroaching on what should be their territory, but Langley thinks this one is big and wants it handled internally.\"\n\n\"I understand.\" I said. \"And again, if you need help, just let me know.\"\n\n\"We will... er, is that a Trojan Horse?\" Griswold asked, seeing the matchstick creation on the low bookshelf against the wall by my desk.\n\n\"Uh, yes, yes it is.\" I said. I then did a double take as I observed the Trojan Horse.\n\n\"Ah, student of the Trojan War?\" Griswold asked. Words I'd heard before.\n\n\"Not really.\" I said. \"It was a gift from someone who apparently is, though.\"\n\nThey left, and a moment later Sandra hurriedly snuck in. \"Don, I told them you had a clearance, and they didn't seem to care. It's weird... we''ll talk later.\" Just then, Gagnon came to the door.\n\n\"There you are.\" he said to Sandra. \"Ready to go?\"\n\n\"Sure.\" Sandra said. \"I'll talk to you later, Don.\"\n\n\"Absolutely.\" I replied, watching her cute ass as she walked out the door. Then I turned to the Trojan Horse. It had been moved since I last touched it. And I knew it wasn't the cleaning people that had moved it. So who had?\n\n* * * * * * * * * * * * * * * *\n\nAt 1:00pm, I was in the FBI offices, meeting with Jack Muscone and the Deputy Director.\n\n\"Yeah, they sent a couple of guys from Washington to look into the file.\" said Muscone. \"I don't understand why they didn't just have some of our guys in the City do it.\"\n\n\"Because they're not FBI Agents.\" I said. \"They're CIA. I met them at Laura's ex-husband's funeral.\" Jack looked totally surprised, his boss did not.\n\n\"Not the first time something like that has been done.\" said the DepDirector. \"But how many days has it been since the file was found? And they're just getting around to coming down?\"\n\n\"I don't get that, either, sir.\" said Jack. \"They're pretty damn casual about it. Even Don's wife when I asked about it. She just said they were looking into it, and then she changed the subject. Does she ever do that to you at the dinner table, Don?\" \n\n\"Yeah,\" I said, \"but she usually does it by complaining about the dog.\" Jack laughed. His boss did not.\n\n\"Okay, Don,\" the boss said, \"I want to get your opinion on this file before we go into the Burke situation. What do you really think is going on?\"\n\n\"I don't know, sir.\" I said. \"But I did make these observations: first, this file was found on a bench in a public park area. Who in the world would take a classified file there? And then leave it? I can see leaving a briefcase or computer in a taxi cab, but on a park bench?\"\n\n\"Second,\" I continued, \"there was very little serious information in the file. And third, look at the manpower being expended over it.\" I realized that I had just made a slip, and hoped I'd covered it.\n\n\"So my conclusion is that this is some kind of diversion, something to distract our attention.\" I said. \"It was a message...\" My voice trailed off as I thought about it.\n\n\"Why?\" asked Jack Muscone, cutting into my mini-reverie. \"And more importantly, who? Wargrave? Your Shadow Man?\"\n\n\"You know, I'd prefer to call the Shadow Man the 'Consultant of Crime'.\" I said. \"But it's obviously someone who can get access to that kind of information. And that bespeaks money, which Wargrave certainly has in abundance. Michael Burke isn't nearly as rich as Wargrave, but he might still have the resources and contacts to pull it off. So could Dr. Wellman, president of the University. Not saying any of them did do it, just saying they could.\"\n\n\"Yes, indeed.\" said the Director. \"Jack, would you mind going up to the Communications Room and contacting Washington? I need the latest information on Burke as well as Operation Gravestone. I'll talk to the Commander while you're gone.\"\n\nOh shit, I thought, I did not cover my mistake. This was going to hurt.\n\nOnce Jack was out of the room, the Director wasted no time. \"Commander, you were asked at least twice if you'd read the contents of that file, and you said you had looked at only the first page. Why did you lie?\"\n\n\"No sir, I said that I read the first page, which is true.\" I said. \"I never actually denied reading the other pages.\"\n\n\"Let me make one thing very clear here.\" said the Director, anger on his face. \"I simply do not have the time to waste with word games. I believe a lie of omission is a lie; you believe differently but we're not going to debate it. The bottom line here is that when I ask you something, I expect a full and truthful answer. If you ever fuck with me again like that, I'll twist your hat around so hard and fast you'll be looking at your ass for the rest of your life. Do you understand?\"\n\n\"Yes sir.\" I said. \"I was wrong, and I apologize.\" I had been rebuked, and rightly so. Nothing to do but admit it and hoped we'd move along...\n\n\"All right.\" said the Director. \"Now, did you read the contents of the file?\"\n\n\"Yes sir.\"\n\n\"And what was your impression of it?\"\n\n\"That it was sanitized.\" I said. \"Whoever left it there wanted it to be found, but didn't want any particularly harmful information to come out, which really would have stirred up a hornet's nest within the Agency.\" I was referring to the CIA, and he knew it.\n\n\"I agree.\" said the Director. \"So, why was it left there? Do you know what all this is about? and do you know who or what 'Scorpion' is?\"\n\n\"Yes sir, I do.\" I said. \"I believe the file was left as a distraction, sir, but also as a message... to me. It was expected to be found and brought to the Police Department... and it was.\"\n\n\"As a friendly or hostile warning?\" asked the Director.\n\n\"Hostile.\" I said. \"Most very definitely hostile.\"\n\n\"And distracting you from what?\"\n\n\"I'm not sure.\" I said. \"Michael Burke may have done it to keep me preoccupied while he goes after Ivy Sanders. As to Wargrave, I'm not the one he needs to be distracting, and that's a poor way of distracting me. If it's the Consultant of Crime, then whatever he's up to would be something he'd expect me to see if I wasn't distracted.\"\n\nAfter a moment of tense silence, the Director finally said what was on his mind. \"Commander, I just... I just don't understand this one. I can figure out most people's motives, but I just don't understand why you felt the need to deceive anyone about having read that file.\" Hoo boy, I thought to myself. Okay, time to end the charade.\n\n\"Because, sir,\" I said, \"you don't believe the Consultant of Crime is real. You think he's Wargrave but he's not, and sometimes I think you don't want to acknowledge his existence. I'm not sure why, but that's my observation, and my reason.\"\n\nThe Director nodded, then actually looked around the room, which already had tremendous anti-bugging technology built in. Then he said to me, his voice barely above a whisper. \"But I do know it. I know he's real.\"\n\nIt was my turn to look totally shocked. \n\n\"Yes, I'm just covering, pretending I don't know what I know, the same way you are doing. You were lucky as hell you and your family wasn't killed in that fire, and I realized when I first started looking into it that it would expose not only you but a lot of people to serious danger.. So I've been covering, too, saying it's Wargrave when it's really not.\"\n\n\"Do you know who he is, sir?\" I asked.\n\n\"No.\" said the Deputy Director. \"He's too good, he's layered himself in hoops of levels of contacts that some of my best people couldn't even begin to get through. I do agree he is basing himself in your Town, maybe in some capacity with the University. But that's all I really know about him.\"\n\nWith a final whisper, he said \"Look, Don, my lodestone is Superior Bloodlines. This guy may or may not be part of that, but they're the ones I'm concentrating on. I want to break them apart. To break them apart breaks apart a political cartel of immense power and immense danger to the Constitution and the Nation. I want to destroy them before they destroy the country. Then I can retire peacefully, and someone else can beat back the next threat.\n\n\"But 'Crime Consultant', he's into too many other things, and he's too many steps ahead. As are you. He's yours, Don. Only you can defeat him. And I really can't help you, even though I want to. I'll support you any way I can, but Professor Moriarty belonged to Sherlock Holmes, and this criminal belongs to you.\"\n\nPart 12 - A Sting From The Past \n\nFriday, May 8th, at 3:05pm, I got the phone call.\n\n\"Meet me at County Airport, right away.\" said the voice. It was my wife Laura. \"I've packed our bags, and the Usual Suspects are keeping the kids.\" Before I could even respond, the line went dead.\n\nI went and told the Chief I needed to sneak out early and he said to go ahead. I stopped by Cindy's office, and she told me she knew already as she was going to babysit the kids. She drove me to County Airport in my Police SUV.\n\nThe sleek plane came in for its landing just as Cindy drove away. Sure enough, the tail number identified it as an Air Force aircraft. Laura was waiting inside the tiny terminal building, which actually was the ground floor of the control tower building. Within 10 minutes, we were boarded and the plane was taking off.\n\n\"Ma'am, would you like something to drink?\" asked the stewardess, a drop-dead gorgeous blonde wearing a tight-fitting Air Force uniform. She was extremely deferential to Laura.\n\n\"Sure, whiskey and soda, please.\" Laura said. I ordered Scotch, neat. And as we sipped our drinks, Laura told me what was going on.\n\n\"Michael Burke made some cell phone calls to a cell tower about fifteen miles from Teresa's hometown.\" my wife said. \"Then Henry Wargrave's business cellphone made calls to that same tower. We think the time has come, and we have to move.\"\n\n\"Think we'll be in time?\" I asked, not bothering to ask who Laura meant by 'we'. \n\n\"I think so, but tonight may be the night.\" she said. \"Did you bring your crowbar?\"\n\n\"Does a cat have climbing gear?\" I replied. The red crowbar was in the bin above our heads with my carry-on bag.\n\n\"Good.\" Laura said. \"I'm glad you're coming along. It might take both of us to get this done.\"\n\n\"Yes,\" I said, \"it just might.\" Yes, this mission would take a Deputy Director within the CIA to accomplish, but it was more... it was personal. \"So I'm guessing you have a team in place?\"\n\n\"Yes.\" Laura said. \"They're going to meet us at the airport. They're loyal; if what I think is going to happen actually does, then we'll be breaking a few laws.\" And Laura wondered why I didn't want to be part of the CIA, I mused, but this was unavoidable.\n\n\"Speaking of loyal,\" I said, \"did you check into those Griswold and Gagnon guys?\"\n\n\"Yes.\" Laura said. \"And you were right. One of them may be compromised. I talked with Dr. Casey Walker himself. We're not letting on, and hoping the bastard will lead us to other compromised agents and foreign contacts, and see what we're up against. By the way, how did you know?\"\n\n\"Observation and deduction.\" I said. \"And I got confirmation this morning, by the way.\"\n\n\"Speaking of that,\" Laura said, \"you're just not going to tell me, are you?\"\n\n\"Tell you what?\"\n\n\"How you knew her name.\"\n\n\"Whaa...\" I said, genuinely surprised. \"You haven't figured it out already?\"\n\nLaura looked at me, then turned back to the Psychology magazine she was reading. \"You are about to get your morning blowjobs cut off, mister.\"\n\n\"That's too bad.\" I said, then called her bluff. \"But that's okay; I need to save up my sperm anyway.\"\n\n\"All right, you dirty dog.\" she said. \"You're really going to do it? You're going to knock her up?\"\n\n\"If she 'takes', I sure am.\" I replied.\n\n\"You are a nasty, nasty man.\" my wife replied. \"And I love you for it. Good luck. To both of you.\"\n\n* * * * * * * * * * * * * * * *\n\nIt was late in the afternoon local time when we landed. We did not land at the airstrip nearest Teresa's hometown, but another one further away and to the southwest. There was still some light but it was getting late.\n\nSome men came aboard the aircraft, most in their 20s and 30s, all of them fit and toned. Laura began planning with the leader. \"Okay, as soon as it gets dark, you'll bring black van #2 along this road.\" She pointed at the map. \"We'll walk them across the field and into the van, and you'll get them out of there and back here as fast as you can, stopping for nothing. Meanwhile, we'll get black van #1 into the garage for the extraction. Don, here's where you get to have fun...\"\n\n* * * * * * * * * * * * * * * *\n\nI knocked on the door of the house that had been built over the spot where Teresa's childhood home had stood until her father burned it down. It was just after dark, as we had waited until the sun went down so we wouldn't be seen.\n\nThe door did not open immediately, but I could tell that someone was peering at the window then through the eyehole in the front door. I had taken of my hat to make sure i could be easily identified. Finally, I heard the locks being disengaged and the door finally opened.\n\nA pretty woman about my age, just a bit older, with lustrous black hair falling in gentle waves around her shoulders and a shapely body, opened the door. \"Don? Don Troy? Is that you?\" she said, totally stunned.\n\n\"Hello, Ivy.\" I said. \"May I come in?\"\n\n\"Sure, sure.\" she said. I stepped into the front room. Just as I did, a man holding a toddler came in from the back areas, probably the kitchen.\n\n\"Who are you?\" he asked. He was short, a bit stocky, and had very light brown hair, almost blondish. And I could tell from his eyes that this guy was as dumb as a box of rocks, and that my mission was going to have obstacles.\n\n\"My name is Commander Donald Troy with a Police Department some distance from here. I'm-\"\n\n\"Why are you here? Ivy, who the hell is this guy?\" the guy said. I could see something bordering on fear in his face.\n\n\"Honey,\" Ivy said, \"I knew Don in college.\"\n\n\"So what?\" the guy said, getting more belligerent. \"Why did you come to our home now?\" I could see this wasn't going to go very well.\n\n\"I am here,\" I said, letting my voice take the command authority I needed to get this guy to listen, \"because your wife knows who I am. Ivy, I also believe you know my wife...\"\n\nWith that, I extended my hand back at the door. Laura took her cue, and stepped inside. \"Hello, Ivy.\" she said quietly, standing tall right next to me.\n\n\"Dr. Fredricson!?!?!\" Ivy spluttered. \"Oh my God! How are you?\" She hugged the older woman, and Laura hugged her back. Then Ivy put my words together.\n\n\"Wait...\" Ivy said. \"Your wife? Don, didn't you marry Melina?\"\n\n\"Yes.\" I said. \"Yes I did. And then through some strange twists and turns--\"\n\n\"Ivy!\" called out Mr. Sanders, his voice angry. \"Who in the hell are these people?\"\n\n\"Honey, this is Dr. Fredricson.\" Ivy tried to explain. \"She was the professor I worked with when I was in college. Don was in school there at the same time. But Doctor, what's going on?\"\n\n\"I need to tell you, Ivy,\" said Laura, \"that you and your family's lives are in danger. Great danger. Years ago I told you that something like this might happen... well, tonight's the night. We need to get you and your husband and child out of here.\"",
        "\"What?!\" gasped the husband.\n\n\"Honey,\" said Ivy, trying to placate her increasingly irritated husband, \"I told you when we got married that I once did some work that might come back to haunt me and that we might have to just leave like we're in Witness Protection or something...\"\n\n\"Mr. Sanders,\" Laura cut in, taking control of the situation, \"if you'll come with me to the kitchen, I'll explain everything.\" To back her words up, she showed the man her I.D. and CIA badge, which she very rarely carried with her. \"Don, would you talk with Ivy?\"\n\n\"Sure.\" I said. Mr. Sanders was not as happy about it, but Ivy convinced him to go with Laura... who had the toddler in her arms already. Sneaky controlling move, my wife had just made.\n\nOnce they were gone, I had Ivy sit down in a chair and I sat on the sofa next to it. \"Ivy,\" I said, \"we didn't know what, if anything, your husband knows about that situation with Jack Burke, so we didn't want to say anything in front of him. Laura is telling him that you worked with her in a CIA capacity, which is true of course, and it'll be your decision to tell your husband what I'm about to tell you now.\"\n\nI continued: \"After you accused Jack of rape to force him out of Melina's life, some strange things went on in his life. He became something of a drifter, going from place to place around the country. Two years ago, he ended up in the Town where I now am the Police Commander, and he was caught in bed with a married woman. Her husband killed them both.\"\n\n\"Oh my God.\" Ivy said. \"That's so sad. But that's Jack, he was one hell of a ladies' man. As you know.\"\n\n\"Yes.\" I said, not really caring to discuss that. \"What also happened is that I learned that Jack Burke's parents, Michael and Eleanor Burke, tried to find out what happened to Jack, who only visited them a couple of times in all the years before his death. They found out most of the details of the incident you and Laura created. Eleanor attempted to murder Laura, but her plan was anticipated and the gun she fired was empty.\"\n\n\"Oh... my...\" Ivy said, her eyes wide with shock.\n\n\"That's not all.\" I said. \"Eleanor is in prison now, but Michael Burke, Jack's father, has been obsessed with finding you. He blames you for what happened to his son, and he has been trying to find you and murder you, and he might have your family murdered, as well. I not only am married to Laura now, I work in cooperation with the FBI on some things, and I've been monitoring Michael Burke for some time. We just learned that he has found you, and someone might be coming to kill you as early as tonight.\"\n\n\"Wha... what can we do?\" Ivy said. \"And how... how did he find us? Oh, wait.. there were two women here a few weeks ago, they were driving by...\"\n\n\"No, they're not your problem.\" I said. \"They're actually policewomen that work with me. One of them grew up in the house that was on this very spot before it burned down and this house was built. Her father passed away and she happened to be in town for that, but it's lucky because it helped me find the plot against you in time. Small world, huh?\"\n\n\"Yeah.\" Ivy said. \"So, what happened with you and Melina? Laura had me do all that with Jack just to keep her away from him so she'd marry you...\"\n\n\"And Melina did marry me.\" I said. \"Eight years later, we ended up in Laura's University's town, and Melina and I divorced. I'd met Laura and we ended up getting married, and Melina married a... local politician.\" No point in telling Ivy that Melina was married to the Town & County Sheriff, I decided.\n\nJust then, Laura stuck her head in the door. \"Everything set here?\"\n\n\"Just about.\" I said. \"Ivy, you and your family need to pack what you can. We're going to take you out of here. I have no idea where Laura is taking you.\"\n\n\"Honey, we have to go.\" Ivy said to her husband as she took her child from Laura's arms.\n\n\"I don't know why.\" the man said. \"Why should we run away?\" I saw that Laura had not totally succeeded in placating the dumbass.\n\n\"Mis-ter Sanders!\" I said strongly, almost hovering over the man. \"I am desperately trying to save your family's lives here, and yours as well. The people that are going to come after you are not playing around, they are murderers. You can't handle them, you're not a killer. They'll butcher you and your family before you would even know they were there.\"\n\n\"Bullshit.\" said the airhead Mr. Sanders. \"I can handle myself and protect my family, and I sure as hell don't need you. Now get the hell out of my house and don't ever come back again--\" Fortunately for him, Ivy intercepted him.\n\n\"Honey, he's right.\" she said pleadingly. \"We have to go. We're never coming back here, we're going to start over somewhere else.\"\n\n\"And what then, Ivy?\" the husband asked. \"What if they find us wherever we go? What then, huh?\"\n\n\"Then we keep on going.\" said Ivy.\n\n\"Mr. Sanders,\" I said, \"let me handle the guys coming after you.\"\n\n\"What makes you so fucking special?\" the man asked. Patience, Don, I thought to myself. The guy has rocks in his head. but time is a'wasting. Time to shut his ass up.\n\n\"Mr. Sanders,\" I said, trying to hold on to my temper, \"have you ever killed anyone? Have you ever taken another person's life?\" The room became utterly silent.\n\n\"I hope and pray that you never do have to kill anyone, Mr. Sanders.\" I said quietly. \"But that is what you will have to do, and in cold blood, in order to stop the military-trained mercenaries that are coming here with one mission: to kill you. And if you haven't killed anyone before, now is not the time to begin. You've got to get your wife and son out of here. They are what you need to be thinking about right now. Now go. Laura, would you help them get their things and get them out of here?\"\n\n\"Okay, let's get your bags packed.\" Laura said. Mr. Sanders was still not mollified, but he was in shock from my question, and he realized he was helpless to stop the inevitable. Laura helped them pack large suitcases of clothes, jewelry and some photographs.\n\nFour black-clad agents came into the front room from the garage that was on the left side of the house. \"Ma'am, the van's in the garage.\" said one agent. \"We are not being observed. No thermals in the windows or cars of any of the houses in the area, nor outside in the field areas.\"\n\n\"Good.\" said Laura. \"Okay, Ivy, here's what we're going to do. These men will carry your luggage, and I will escort you out the back door. We're going through the field behind your house and over the railroad tracks to a van that is waiting for you.\"\n\nAs they gathered to leave, Laura came over and kissed me. \"I'll be back soon.\" she said.\n\n\"Good.\" I said. \"Don't forget to knock when you come back in.\" The words were neither idle nor in jest; if someone knocked without using the proper code sequence, either I or the remaining agents in the house might kill the person entering. The knocking code was a child's game, but effective.\n\nI turned out the lights and the group left through the kitchen and patio to the field out back. As I waited for Laura to return, I thought about what Ivy had done to 'save' Melina from Jack Burke on Laura's behalf, but also on mine. And that event was the start of the chain of events that had led to where I am now, with the wife and children I have, the command of a Police Department... and a red crowbar in my hand.\n\nI felt a certain gratitude to Ivy, and hoped that this night would serve as my paying back the favor and that she and her family would be safe. And I knew with certainty that I would never see Ivy again...\n\n* * * * * * * * * * * * * * * *\n\nWhat a lot of people don't know is that I am ambidextrous. I'm right handed, but I can bat left-handed or right-handed, can throw decently left-handed, and actually qualified with my police service weapon both right-handed and left-handed (to counter a possible lawsuit if I ever had to shoot a perp left-handed... one never knows what legal beagles will come up with.).\n\nSo I was in the coat closet with the door opened, and if perps came through the front door I would have to swing the crowbar left-handed. And I expected the perps to try to come in through the front door. After Laura and her agents got back, we turned the patio lights on and left them on. Agents were covering the back door anyway.\n\nEntry through the garage was not possible with the garage door down, and the front porch was shrouded in darkness. Ergo, we expected the entry to be there. Another agent was on the other side of the front room, ready to turn on the lights. Laura was upstairs: if the perps got past us, she was going to blow them away as they came up the stairs.\n\nThe wait was very, very long. I used the time to think about the puzzles I needed to solve. The 'Consultant of Crime', the 'real Moriarty', would know by now of my visit to Apple Grove, and would be wondering how much I had found. I examined my logic of this person's relationship with Henry R. Wargrave, of Wargrave's other relationships with the 'Big Boyz' of the nation and world, and found my logic to be flawless. There were rifts there. Could I exploit them?\n\nThen I thought of something very interesting: who would the Consultant's next \"Number 1\" be, the next 'Colonel Sebastian Moran', the next Sith Lord to accompany the Emperor Palpatine that was the Great Mind opposing me? And somehow the answer came to me: Wargrave was the University's biggest benefactor. Whenever he was gone, alive or dead, someone would become Dr. Sidney Wellman's biggest benefactor, and new best buddy. I could exploit that.\n\nAlways in pairs, I mused. The Batman had Robin. Green Arrow had Speedy. The Green Hornet had Kato. The Lone Ranger had Tonto. Only Superman had no sidekick. Now why was that? (Author's note: that's a trivia question for YOU, dear readers.)\n\nAnd then I saw it. As I peered into the darkness, I thought I saw a teenage girl in the room. She looked like Teresa... no, she wasn't Teresa... was she really there or were my eyes playing tricks on me. \n\nShe just looked right at me and smiled, and then walked out of my line of sight. I peered forward, but did not see anything in the darkness...\n\n*Clack!*\n\nI heard the footstep on the patio outside. I steeled myself.\n\nA key was introduced into the deadbolt lock, turning it back. The door was quietly opened. Used to the dark, I could barely see the shadowy figure coming in. I saw something too rectangular on his face... he was wearing night vision goggles.\n\nYep, left-handed. I swung my red crowbar with all of my might as Babe Ruth would've at a big juicy curveball... right at the rectangle on the perp's face.\n\n***WHAM!!***\n\nI felt the contact, the violent energy that traveled up my arms and down my spine even as the man crumpled to the ground. Hearing the noise, the other CIA agent in the room clicked on the lights. The second man, just coming in the door, was blinded by the bright light overwhelming his night vision goggles. Before he could react, I had pulled him into the house and was closing the door as the other agent used his excellent martial arts skills to subdue the second man to the floor.\n\nLaura and the other agents poured into the room, and Dr. Fredricson immediately injected both of them with a sedative that would keep them out. The man I hit was bleeding in the crown of his nose, the night vision goggles shattered.\n\n\"Get them into the van.\" Laura ordered. Agents swiftly wrapped the men in what looked like very thin carpet and carried the bundles into the garage. All of the lights were turned off. The garage door opened and the van drove out and away up the street, no one the wiser.\n\nMy wife and I remained behind, along with two agents. They went around, locking the doors and turning off the gas. We went out the back door, which Laura locked with the key Ivy had given her. We took off through the field to the railroad tracks. A black van was waiting for us and we climbed in for the trip back to the airport.\n\nAt the airport, there was another plane, a C-130 military transport plane. It had landed just five minutes before. The van with the two captured men drove right up the back and into the plane, though it was a tight fit.\n\n\"Honey,\" Laura said, \"I'm going with this plane. I'll help Ivy and her family get settled into their new location in Washington State, and 'help' with the interrogation of these bastards.\" I knew what that meant; the good Doctor would be administering drugs to enhance the interrogations. I was glad to not be a captured perp...\n\nI got on the sleek aircraft that had brought us here. Moments after the C-130 rumbled off, our plane also took off. As it did, I began singing and paraphrasing that old Army jody \"C-one-thirty rolling down the strip, bad-boy perps on a one-way trip...\"\n\n\"You were Airborne, sir?\" asked one of the agents, hearing me.\n\nI nodded. \"Long time ago, in a galaxy far, far away.\" I said. \"You?\"\n\n\"82d Airborne in Afghanistan, before I was recruited into the Company.\" he said. We reminisced about military things, and then I fell asleep.\n\nQapla'! as the Klingons say. 'Operation Eleanor', as Laura had named it in vengeance for the woman that had tried to kill her, had been a complete success.\n\nPart 13 - Following Up \n\n\"Good morning, Captain Ross.\" I said to Cindy as she came into my office after watching the Bettina broadcast at 7:00am, Monday, May 11th. KXTC had been taking shots at KSTD's sloppy coverage of the Jack Burke tapes, replete with Bettina's interviews of the Chief and myself.\n\n\"Good morning, Commander Troy.\" Cindy said. She was wearing her uniform of light blue shirt with dark blue soft shoulderboards and two sewn-in bars denoting her Captain rank, and dark blue pants with black piping down the sides. \"What's on the agenda today?\"\n\n\"You and I are going to a breakfast with Selena Steele, Chief Operating Officer of the J.P. Goldman Bank here in Town.\" I said. I was wearing a uniform identical to Cindy's, except my rank was silver oak leaf clusters. \"We're meeting her at 8:00am at the Lilibet House.\" The Lilibet House was an 'upscale' place for breakfast and lunch, similar to the soup and sandwich place Laura likes. No 'Country Breakfast Diner' for Selena Steele...\n\n\"Plainclothes or uniforms?\" Cindy asked.\n\n\"Oh, what we have on now.\" I said. \"Selena has a back room reserved for us, though, so that we can talk privately.\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is so much nicer than having to meet at the bank.\" said Selena Steele as we sat down in a back room. Selena was facing the doorway that led to the room out front, I was seated to her left and Cindy to her right. I noticed that a fourth place was set at the table. \"And congratulations on your promotion, Cindy.\"\n\nThe Lilibet House had things like spinach omelettes and cr\u00eapes and fruit at their breakfast bar. I'd have to get something to snack on later, I promised myself. \n\n\"Thank you.\" Cindy said politely. I noticed Cindy observing Selena Steele, who was a beautiful woman with lustrous, long black hair, full lips, a luscious figure and sparkling dark eyes. I myself wondered how Selena could remain single for so long, and wondered who was tapping this... no way a hot woman like Selena went without sex.\n\n\"Thank you for meeting with us.\" I said. \"We're following up on the Ricky Morris case.\"\n\n\"Ohhhhh... yes, that.\" Selena said with asperity, which seemed a bit rehearsed to me. \"I cannot tell you how shocked I am about that. Mr. Goldman was devastated by the news, as well. I know you'll want to talk to our employees about him...\"\n\n\"Not necessarily.\" I said. \"I want to ascertain some things from you, though, if I may. First, Ricky Morris was an employee at your Bank. What did he do, and how was he at his job?\"\n\n\"He was... a loyal employee who came to work on time, did his job, did what was asked of him.\" Selena said, as if citing a memorized lesson. \"His position was with our Accounting Department, making sure books balanced and such stuff.\"\n\n\"How long had he been there?\"\n\n\"Several years.\" Selena said. \"He was a college friend of Bradley... Bradley Hazleton. Bradley recommended Ricky's hiring, and Bradley was beginning to be a star with the Bank, so we hired Ricky.\"\n\n\"I see.\" I said, meaning a lot more than what Selena was saying... but what she was not saying. \"Did Ricky get along with his co-workers?\"\n\n\"Yes.\" Selena said. \"He kept to himself for the most party Quiet, dependable accountant, poster boy for the stereotype. Didn't have any problems with anyone, that I know of.\"\n\n\"Did he hang out with Bradley, his college buddy?\" I asked.\n\nSelena said, choosing her words carefully, \"Bradley was being given more and more good assignments, and Ricky was at his desk balancing books all day. So I don't think they were especially close socially.\"\n\n\"I recall Bradley had a fianc\u00e9e.\" I said. \"Were they social with Ricky and his wife Jennifer?\"\n\n\"I don't know.\" Selena said. \"Bradley broke up with his fianc\u00e9e, as you recall from investigating his murder. I am not sure if Ricky and Jennifer were together until after Bradley's breakup.\"\n\n\"So Ricky was married to his wife Jennifer for... almost two years?\"\n\n\"That's about right.\" Selena said. \"She was... let's just say she was a 'unique' person.\"\n\n\"Did she and Ricky get along? Good marriage?\" I asked.\n\n\"As far as I know.\" Selena said.\n\n\"So were there any indications at all that this tragedy was brewing?\" I asked.\n\n\"Absolutely none.\" Selena said. I think she felt the two pairs of eyes boring into her, maybe even right through her.\n\n\"Let me ask this.\" I said. \"Did you know Mr. Harkins of the Second National Bank?\"\n\n\"The one who disappeared?\" Selena said. \"I'd met him, but didn't know him at all. J.P.-- er, Mr. Goldman, might have known him better.\"\n\nSelena now looked disquieted, and she finally spoke up after I'd poured myself some more coffee. \"Guys,\" she said, dropping her voice, \"is there some way I can talk to you... off the record, so to speak?\"\n\n\"Captain Ross,\" I said, having already anticipated this and knowing what I wanted to do, \"why don't we treat Ms. Steele as a Confidential Informant. Selena, as a C.I., what you say will be kept secret. We might have to use it, but we'll keep you and your name out of it to any extent possible.\"\n\n\"That will work.\" Selena said. \"And it's not anything earth-shattering, but I don't want what could be considered 'gossip' to come out in a public Police report.\"\n\n\"That won't happen.\" I said. \"Go ahead.\"\n\n\"First, about Ricky.\" Selena said. \"He was not a bad employee, but he was not a very bright nor promising one. He did his job, but not with any urgency. Most people here act like they want to go somewhere, to higher posts. Ricky was seemingly content right where he was. His performance evaluations were average at best. Mr. Goldman was hoping for more when he took Bradley's recommendation to hire Ricky. And that was really the only blemish on Bradley's career.\"\n\n\"But Ricky wasn't a bad employee.\" I said.\n\n\"No, not at all. Just very... mundane.\" Selena replied. \"But worse... much worse... was Jennifer. She was one of the most conniving harpies that I've ever had the displeasure to meet. Angela Harlan on her worst day was not as bad as Jennifer... until Angela started killing people, of course.\"\n\n\"We get the idea.\" I said. \"Tell us more about Jennifer.\"\n\n\"Ricky didn't really have friends at the Bank, so he had no social support system.\" Selena said. \"When Jennifer started getting her hooks into him, no one really realized it until it was too late to see and stop what was going on. I sincerely believe she had ulterior motives for conning him into marrying her.\"\n\n\"In addition,\" Selena continued, \"Jennifer was just a... selfish, mean-spirited person. She only attended social functions when us C-Level persons attended; I once surprised everyone by showing up at a more informal event, and only Ricky was there. And she made it clear she didn't think much of any of us, except Mr. Goldman and the Board members and executives, with whom she flirted relentlessly. I wasn't the COO at that time, of course.\"",
        "\"Yes,\" I said, \"and I don't think she'll be trying to frame you for murder, since she herself is now dead. Did you know Ken Konnichi, the man who was killed along with her?\"\n\n\"No.\" Selena said. \"Not at all. Mr. Goldman said he was an executive with a company in the City, so I'm not surprised Jennifer was putting out for him. I guess Kenny walked in on them and went mad and shot them?\"\n\n\"Selena,\" I said, \"just between us... I do not believe the version of events we have been led to believe by the Press. And pursuant to that, let me ask this: what level of access to your Bank's information did Ricky Morris have?\"\n\nOh, geez...\" Selena said, \"just about everything. He'd be given specific tasks, but theoretically he had access to just about anything he would need to determine the figures he was working with... and before you ask, I'll have to clear it with J.P. and the lawyers, and they'll probably ask for a warrant.\"\n\n\"Oh, I have no desire to waste my people's time looking through your Bank's books.\" I said. \"But I would ask if you would investigate... internally... what Ricky Morris was doing the past few months. See what he accessed, stuff like that. I trust you to come to myself or Captain Ross with anything unusual you find out... as our Confidential Informant, of course.\" Cindy flashed a brief smile at that one.\n\nJust then a vision of beauty walked up to us. She was very tall, and she was wearing a satiny, shimmery dress of very light blue, almost white, with a hat and a whitish veil. Her blonde hair was done up in a 'high-falutin' fashion, as my mother would say. Her gorgeous legs were made even more shapely by the matching light blue high heel pumps that she wore.\n\n\"Rita?\" I gasped, totally stunned.\n\n\"Hello, Commander, my darling.\" said the woman. She was indeed Rita, the statuesque blonde that owned and ran the 'Lashes & Lace' underground sex club. \"Selena, so good to see you again. And you must be Captain Ross. I'm Rita... and it's a pleasure to meet you.\"\n\n\"Yes, forgive my lack of manners.\" said Selena as she got up. \"I'm going to have to leave, but Rita wanted to speak with you.\" She gave Rita a hug and a two-cheek kiss, and I noticed both women's eyes smoldering. I now knew where Selena was getting sex... from the well-hung Satyrs at Lashes and Lace... and maybe something from the women there, too.\n\n\"May I join you?\" Rita asked. Not waiting for an answer, Rita sat down at the place to my left and Cindy's right. I noticed Rita's sparkling eyes studying Cindy, then cut to me for a second. With a knowing smile, Rita said \"May I call you Cindy? You are a vision of loveliness. I remember seeing you in those 'Miss Physical America' competitions, and you are even more beautiful in person.\"\n\n\"Thank you.\" Cindy said, blushing but very happy with the praise. She had been observing Rita for her looks, also.\n\n\"And I want to see you and your fianc\u00e9e at my club, and soon.\" said Rita. \"You can take advantage of me and do whatever you like to me.\"\n\n\"Uh, thanks, but I don't think that's my cup of tea.\" Cindy replied.\n\n\"Speaking of that,\" Rita said, half teasing, \"why hasn't this delicious Commander not poured me a cup of coffee yet?\"\n\nAs I poured Rita's coffee, I said \"So, Rita, why did you want to see us?\"\n\n\"My lovely friend Selena... isn't she gorgeous?... knew you'd be asking her about the Morrises and that tragic murder, and she wanted me to share what I know with you, which is considerable. You have some very foul and dirty cops on your Force, Commander.\"\n\n\"Don't I know it.\" I said, noticing Rita's eyes cutting from Cindy to me and back to Cindy. \"What can you tell us?\"\n\n\"Ricky Morris was a very dull and boring man.\" Rita said. \"He was a member of the Club for a while, but all he would do is come in and jack off while watching my Satyrs fuck older women. And as one needs to participate in order to be with my Club, we asked Ricky to find his pleasures... elsewhere.\"\n\n\"Fortunately for him, or unfortunately, really\" Rita continued, \"he met Jennifer Madoff. She was the wife of State Representative Justin Madoff for a long time. I believe you know him and his reputation for honesty, Commander?\"\n\n\"Oh yes.\" I said, enjoying Rita's biting sarcasm. Madoff was a State Rep from the City, and one of the most deeply corrupt politicians in the Legislature.\n\n\"Jennifer and Justin were a bad, bad couple.\" Rita said. \"She would seduce other legislators and get secrets from them, then pass those secrets to Justin, who would then use them against the other legislators. That ended when she tried to seduce Jimmy 'Coffin' Cerone, who is a man not to be fucked with, nor fucked over. Madoff had to divorce Jennifer to save his skin, and Jennifer got out of the City as fast as she could.\"\n\nRita went on: \"She was fucking several men in high places, such as Mr. Konnichi, and selling information to the highest bidder... and of course that would always be your good friend Henry R. Wargrave.\"\n\n\"Ahhhh,\" I said. \"Now we start to paint a picture. So... what can you tell me about Thomas P. Cook in all of this?\"\n\n\"And how would you know to ask about him?\" Rita asked, her eyes dancing.\n\n\"Little game I like to play, called 'connect-the-dots'.\" I said, making sure Rita saw my eyes looking into hers.\n\n\"He's a businessman that likes to trade secrets, also.\" said Rita. \"But I don't know of any connection he has to this.\"\n\n\"May I ask a question?\" Cindy queried.\n\n\"You just did.\" Rita said, leaning over, resting her chin in the palm of her hand, and staring into Cindy's ice blue eyes, losing herself in them. \"I hope the next one is a lot better.\"\n\n\"I'm looking for someone.\" Cindy said, glancing at me then back into Rita's eyes. \"Old woman, known as the 'Widow Athena Jones'. Supposedly hangs out with Old Mrs. Boddiker. Would you happen to know who this woman is?\"\n\n\"Aw, I was hoping you were going to ask me out for dinner and drinks.\" Rita said, then grinned. \"That ADA must be one hell of a woman, Commander. This woman is smitten.\"\n\n\"Can't say I blame her.\" I said.\n\n\"Stoppit.\" Cindy said, giving me a cutting look for that.\n\n\"But to answer your question,\" Rita said, \"I know of Old Mrs. Boddiker, she's a basket case. But I don't know of this Widow Jones. I'll check it out. And if I find her for you, you will owe me a favor... which means coming to my Club... and bringing that wonderful toy Laura made for you.\" Cindy gasped in shock. I began chuckling, which nearly incurred a Blue Crowbar beatdown on the spot.\n\nAs we were leaving, Cindy went to the restroom. Normally women do that together, but this time Rita held back... to say something to me. When her eyes met mine, we both knew what it was.\n\n\"Are you aware...?\" she asked, her eyes boring into me. With her high heel pumps, Rita was eye-level with me.\n\n\"Oh yes, of course.\" I said.\n\n\"I see now why you moved so quickly to make her a Captain in the Police Force.\" Rita whispered. \"When are you going to tell her?\"\n\n\"It'll be soon.\" I said. \"Probably by July 4th. Everything is coming to a head, and she'll know everything by then.\" Rita just smiled and nodded.\n\nPart 14 - Manners and Mannerisms \n\nBack at Headquarters, I went to MCD, where I got the report. It was 'not good'.\n\n\"Sir,\" started Theo Washington, \"I interviewed almost all of the Lions Club members over the weekend. Most of them remember seeing Ricky Morris at the meeting, but none saw him after about 9:20pm. Two members sitting near him said he got a cellphone call, and he hurriedly left.\"\n\n\"Damn.\" I said. \"Wipes out any alibi he might have had. Did you get anyone on Data Team to check out the cellphone call?\"\n\n\"I asked Milton himself, and he looked it up himself.\" Theo said. \"Burner phone, pinging the tower near University Avenue and College Avenue.\" University Avenue was the main north-south road separating the Town from the University Campus. College Avenue went west from the Main Gate of the University (and therefore straight west from The Cabin on the mountain above) into Town, and was the southern border of Courthouse Square.\n\n\"I guess there's no idea where he went?\" I asked.\n\n\"Myron also checked the GPS on Morris's car.\" Theo said. \"And here's the rub... it was wiped out. Totally clean, erased. Someone knew exactly what the hell they were doing. By the way, I got I.A. to give me a behind-the-curtain report: Sharples and McCombs's police car cameras were not operating; they didn't turn them on. So nothing there, either.\"\n\n\"Hoo boy.\" I said. \"Doesn't look like my plan is going to pan out. Okay, good work Theo. Write it up and file it into evidence.\"\n\nI went to my office and called in Cindy and Tanya. After discussing the case and general MCD stuff, I said \"I'm going to the City to interview Ken Konnichi's boss at Ichimoku Industries. Don't give me grief, Cindy, but I'm not taking you on this one. Tanya, I'd like to take Martin Nash with me.\" Like good Crowbar's Angels, they nodded and didn't give me backtalk nor ask questions I didn't want asked.\n\n\"Cindy,\" I said, \"I'd like for you poke your head into the FBI's local offices and ask about that classified file and see if they're making any progress on it. They'll tell you they haven't found a damn thing, and you'll say okay, but the point is that I don't want them to think I've forgotten about it for one minute...\"\n\n* * * * * * * * * * * * * * * *\n\nAs we drove to the City in my Police SUV, I told Nash some things about Japanese protocols, and what to say and how to act during the meeting. I then said \"Don't tell anyone else, but the reason I brought you instead of Ross is because these Japanese execs will never treat a woman with the same respect they would a man. They'd expect Cindy to bow lower than you or I need to, and I don't have to tell you what she'd say about that!\"\n\n\"I'm sure most of the words would have four letters.\" said Nash, exhibiting his 'pawky' sense of humor. \"But if you want her to win the Police Boxing Matches next month, you should tell her.\"\n\n\"Hell no!\" I said. \"I want to win those myself. What about you?\"\n\n\"I'm doing the real boxing competition.\" said Martin Nash. \"I did some Golden Gloves boxing, and I've been training for this event.\" \n\n\"Oh.\" I said. \"Cool beans.\"\n\nArriving at the offices of Ichimoku Industries, which were in the northwest part of the City, I handed the receptionist at the front desk my card, saying that I had an appointment. A few minutes later a young Japanese woman came up to us and bowed.\n\n\"Commander Troy-sama.\" she said. \"Would you please come this way?\" We followed the woman to an elevator which led to the higher floors of the building.\n\n\"Mr. Ichigawa will see you in just a moment, Commander-sama.\" said the male secretary in the office. \n\n\"Arigato.\" I said. The wait was not long, and soon we were admitted to a long office with a full conference table in the middle of the room, and a large desk at the far end.\n\n\"Ah, Commander Troy and Detective Nash.\" said the man rising from the desk and coming forward to meet us. \"I am Hiroku Ichigawa, Chief Information Officer of the City branch of Ichimoku Industries.\"\n\nI bowed with the exact depth that an American would bow, enough to be polite but certainly not being the inferior. I noticed Martin bow to the same depth, which was most very good. Mr. Ichigawa returned our bow with equal exactitude.\n\n\"Please, be seated. May I offer you some tea?\" said Mr. Ichigawa.\n\n\"Thank you Ichigawa-sama.\" I said. \"But please be seated first.\"\n\n\"Ah, you know our customs, Troy-sama.\" said Ichigawa. \"It is no wonder Takaki Masaki-sama spoke so highly of you. Please, be seated.\" I allowed myself to be persuaded as the guest, and sat down. Martin, as my 'second', waited and sat down just after Ichigawa. Most very good.\n\nA woman came up with a tea service. \"May I offer you tea?\" he said. The woman placed the service down and began pouring a Japanese tea cup full of the green beverage. \"Dozo, Commander-san.\"\n\n\"Thank you, but please give it to Hiroku-san.\" I said, knowing that several protocols dictated I use his first name.\n\n\"You are too kind, Donald-san, but please, honor me.\" I allowed myself to be persuaded, expressing my admiration for the quality of the tea caddy and cups, which pleased Ichigawa. Martin was offered tea and asked the cup be given to Mr. Ichigawa, who again insisted his guest take the cup, and Martin was persuaded. The woman poured Ichigawa's tea, then left the room.\n\n\"Yes, Japanese protocols must run in your family, Donald-san.\" said Ichigawa. \"Your nephew Todd-san is well-versed in his manners. He has tremendous maturity and knowledge for a man so young.\"\n\n\"I'm honored to hear you say so, Hiroku-san.\" I said. \"You've met him through his company doing business with yours?\"\n\n\"Of course.\" Ichigawa said. \"He is a tough negotiator, as well. Much more tough than the Chinese, who are weak in their manners.\" I smiled.\n\n\"So, Donald-san, how may I be of service to you today?\" This was the signal that the rituals and protocols were satisfactorily met, and we could get to business.\n\n\"I'm sorry that I have to visit for such a tragic circumstance.\" I said. \"It's about Ken Konnichi-san, who was killed in my County recently.\"\n\n\"Ah, yes.\" said Ichigawa. \"Ken-san was rising fast in our company. We did not know that he was having a... relationship with this woman Morris. We did not expect such a lack of vision by Ken-san in compromising himself. Still, his death was very tragic for all of us.\"\n\n\"My condolences to your company and his family.\" I said. \"May I ask some questions?\"\n\n\"Of course.\" he said. I took out my notebook.\n\n\"Mr. Konnichi worked directly for you, sir?\" I asked. \"In what capacity?\"\n\n\"I am the Chief Information Officer for the City branch of the company. Ken was one of my managers in the Information Technology department.\"\n\n\"He was supervising others?\" I asked. Ichigawa affirmed it.\n\n\"Did he get along with everyone? Did anyone have any problems with him, or vice versa?\"\n\nNo, Donald-san, it was his duty to do his job efficiently.\" said Ichigawa. \"As you know, we Japanese place emphasis on workplace efficiency and competence. Everyone is expected to get along and use good manners in their social contacts with each other. What you call the 'social graces' are not as prevalent in our companies as in American companies... or Police Departments, I am certain. \"\n\nWas that a little shot? I wondered. I went on: \"Thank you, Hiroku-san. I don't expect you to tell me any business secrets, of course, but can you tell me what Konnichi-san's work was? What he was working on, that is? Anything that would cause someone to want to kill him?\"\n\n\"He oversaw several projects, mostly software upgrades of existing programs.\" said Ichigawa.\n\n\"Anything to do with cyber-security? Or financial-related programs?\"\n\n\"No, nothing like that.\"\n\n\"Do you know how Ken-san met Jennifer Morris, the woman who was murdered along with him?\"\n\n\"No, Donald-san.\" Ichigawa said. \"We did not even know of his... affair until we learned of his death.\"\n\n\"Was he married?\" I asked.\n\n\"Yes. his wife is an American citizen, and they seemed devoted to each other. He had no other relationships that we know of.\" said Ichigawa. \"And I will tell you in confidence, gentlemen, that we keep watch upon our employees. Spies are constantly probing us, seeking weak men to exploit. We are examining Ken Konnichi's relationship with this woman. As Takaki Masaki-sama has asked us to assist you, we will let you know of anything we find.\"\n\n\"Arigato.\" I said. \"I am very grateful to you, and to him. I also appreciate your taking a few moments of your valuable time to meet with us.\"\n\n* * * * * * * * * * * * * * * *\n\n\"What did you think of that, Martin?\" I asked as we were getting back into my Police SUV for the drive home.\n\n\"The Japanese are sure touchy about protocols, but I guess when it's done right, as you did it, they become helpful.\" Martin replied. \"I would have been lost.\"\n\n\"They'd understand if you didn't attempt it at all.\" I said. \"In fact, it's preferable to trying and fucking it up, which would cause you to dishonor yourself.\"\n\n\"Did he say your nephew Todd was very good at Japanese ceremonials?\" Martin asked.\n\n\"Yep.\" I replied. \"My nephew has traveled to Japan on behalf of BOW Enterprises, and he's learned a lot. And like the man said, Todd is quite capable in spite of his young age.\"\n\nCapable of a great many things, I thought to myself. And not all of them necessarily for the side of Good...\n\n\"Uh, sir, you missed the turn to get to the highway.\" Nash said.\n\n\"I'm actually going to stop by the Federal Building while we're over here.\" I said. \"I need to talk with Jack Muscone and his boss about something. It has to do with the Nicole Stanton murder...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/sting-of-the-scorpion-ch-03"
}