{
    "title": "Do Not Ejaculate For 24 Hours!",
    "pages": [
        "What is it about something you can't have that makes you want it even more?\n\nWhen we were in college, my future husband donated plasma every week. He did it primarily for the money (like most college kids, we were strapped for cash) but he really had a truly altruistic nature. He donated blood every six weeks, and that didn't pay a thing. When we found out about a sperm donation program in our area, he jumped at the chance. The pay was fantastic (I think it was like $50 a pop... ha, literally) and he liked the idea of helping someone have a child who couldn't. \n\nThe process wasn't as easy as donating plasma, though. He had to go through lots of screening, questionnaires and blood tests before he could even think about going into the back room with the plethora of porn and a little cup. Finally, all the details were taken care of and he was ready to donate. He'd left his instructions from the lab on the kitchen table and I stood there in my bare feet, shorts and a bra (it was hot that summer and we had no air conditioning) eating an apple and reading them.\n\nThey were pretty standard -- where to go, what to expect, etc. But the thing that stood out to me in big, red flashing letters was: DO NOT EJACULATE FOR 24 HOURS BEFORE YOUR APPOINTMENT. It was dinner time (hence the apple -- I was starving and we didn't have much to eat in the house) and his appointment was early the next morning, before his first class. He was in the shower at the time -- he took two showers a day when it was hot. Sometimes three. \n\nWhen he came out, I was masturbating on the bed, my shorts down to my knees and my bra pulled up just over my nipples so every movement made the material brush them and send delicious twinges of sensation down to my aching clit. He stood there for a moment, watching and dripping water onto the carpet. I smiled when I saw the towel wrapped around his waist start to rise in front. I knew how hard it made him to watch me touch myself. \n\nI know, I know... I'm such a bad girl! All I needed to see were the words \"DO NOT\" and I immediately rebelled. Reverse psychology works on me every time! His towel dropped to the floor as he came near the bed, his eyes between my legs as I spread my lips to show him pink. He knelt between my thighs, his cock rising like an exclamation point. I reached for it, squeezing, pulling him toward my pussy.\n\nHe groaned as he looked down at me, spread wide for him. \"You can't make me come.\"\n\n\"Bet me.\" I grinned, stroking him, pulling him closer. \n\n\"No, I mean, for my appointment in the morning.\" He seemed transfixed with the motion of my hands, one up and down his cock, the other rubbing my clit in little circles. \"They said I wasn't allowed to come.\"\n\n\"Not allowed?\" I pouted, rubbing the tip of his cock up and down my slit. I loved the head against my clit. \n\nHis eyes brightened. \"But I can make you come.\"\n\n\"Can you fuck me?\" I teased my hole with the head of him, lifting my hips, getting the tip wet with my juices.\n\nHe groaned and grabbed for my hips. I couldn't tell if it was because he wanted to slide into me or keep me from moving on him. \"As long as I don't come.\"\n\n\"Can I suck you?\" I sat up quickly, grabbing his hips so my mouth was on level with his cock, still wet from me. \n\nHe nodded. \"As long as I don't come.\"\n\nI slid my tongue around the tip, licking the taste of me off him. When I looked up into his eyes, half-closed as he watched me slowly suck the head, I knew he was a goner. \"How long do you think you can hold out?\"\n\n\"Oh fuck...\" His hand went to my hair as I eased him into my mouth, all the way back, so deep I could see water droplets still glistening in his pubic hair and smell the clean scent of his soap. \n\n\"Let's find out...\" I circled the base of him with my hand, squeezing on the uptake, easing the loose skin just to the tip and back down again, my tongue swirling around and around the head. It was a motion I knew he loved, one that made his nipples harden and his ass clench. \n\n\"Baby!\" He was pleading, begging me, but the taste of his precum and the feel of him throbbing against my tongue, coupled with the thought that we shouldn't, we weren't supposed to, made it too hard for me to resist. \n\n\"Just an experiment,\" I whispered over the head as my hand went down to his balls. He loved it when I rubbed them with my thumb, cupping their weight in my hand. \"We'll see how hard I can make you without letting you come.\"\n\n\"Oh fuck!\" He shook his head, trying to say no, but his body wouldn't let him. His cock swelled against my tongue, the peppery taste of his precum filling my mouth.\n\n\"You've got so much precum already!\" I murmured in surprise, rubbing the reddened head against my lips and cheeks and chin. I slapped him against my tongue a few times and then sucked the head, making him shiver, repeating the process until his thighs were trembling.\n\n\"God! Please!\" He really was begging now, and it made my pussy swell and throb with pride. \"Baby, don't... no more... I\u2014\"\n\n\"How long has it been?\" I interrupted his pleas, gently nibbling down the shaft, no hands now, just watching his cock move in time with his steadily increasing pulse.\n\nBreathless, his head thrown back, he murmured, \"They said it would be better... to wait... as long as possible...\"\n\n\"So how long has it been?\" I asked again, my tongue finding its way to his balls, fresh and clean and shaved, they slipped into my mouth like ripe fruit. I sucked gently, first one and then the other, trying to decide which I liked best. \n\n\"Four days.\" His voice was hoarse as he looked down past the thick length of his cock to where my tongue carefully put his balls through the paces, left, right and center. \n\n\"So...\" I bit my lip, nosing his length like a cat or dog seeking attention. \"That means you could pretty much come in a matter of minutes.\"\n\n\"Yeah,\" he admitted, sounding both resigned and hopeful. \n\n\"Just one hard little suck...\" I wrapped my hand around the base and squeezed, all serious intent now as I eased my mouth over the reddened tip of his cock, using my tongue around that sweetly raised ridge, paying close attention to the frenulum, giving him long, hard kitty licks there before sucking him deep into my mouth.\n\n\"Hey!\" His mouth protested, but his body betrayed him. He thrust his hips forward, burying himself in my throat, making me gag -- but not making me stop. Instead. I reached around and grabbed his ass, squeezing and kneading and pulling him in even deeper. He fisted my hair in his hands and used my mouth for a moment, so lost in the pleasure he forgot about me entirely. \n\n\"No!\" He tried to pull me off him, but I was stuck fast, sucking hard. \"God! Stop!\"\n\nPanting, the thick mixture of my saliva and his precum coating my chin, I gasped, \"You really want me to stop?\"\n\n\"You have to...\" His cock rested, a thick, throbbing mass, against my cheek. \"Oh fuck! Please...\"\n\nI rubbed him over my lips, teasing. \"Please what?\"\n\n\"Please...\" Half-closed, his eyes were full of lust as he looked down at me, and his hands found my breasts, thumbing my nipples, a nice distraction. \n\n\"Please stop?\" I asked, taking my hands and mouth away for a moment as he played with my nipples. My pussy was begging for attention and I gave it to her, rubbing fast and hard at my clit, seeing his eyes darken as he watched me finger myself. \"Or... please don't stop?\" I surprised him with my mouth, all mouth now, sucking him in deep and hard as I play with my pussy.\n\nHe lost his words then, the sound in his throat just a faint, frustrated growl, and he twisted my nipples, making me moan as I arched against him, looking for more. He slapped at my breasts, spanking me like the naughty girl I was, and it just drove me to suck him faster, more eager than ever for his cum.\n\n\"Goddamnit!\" He grabbed his cock from my mouth, squeezing the head hard, and I watched in fascinated lust as a thick, slow stream of precum leaked from the tip and slid down over his fingers. Trying to catch his breath, his chest heaving, he pressed me back onto the bed, laying me down. \n\nI knew he was going to try to distract me from my purpose - and while my pussy ached to be tongued, too, I knew what I wanted and I reached for it. Reluctantly, he let me have it, unable to resist the softness of my hands moving over his cock and balls, pulling him up between my legs. \n\n\"Maybe you should reschedule,\" I whispered as I stroked him against my belly.\n\n\"Oh...\" His eyes were closed, his face pained. \"Maybe...\"\n\nI tugged him faster, maneuvering myself so I could slide under him, his cock positioned over my tits now. I rubbed the head over my nipples, hard and cherry-red from his attention. \"It would feel so good to fill my mouth instead of that little plastic cup, wouldn't it?\" I sucked him slow, just the head, to emphasize the point. \n\n\"You are so bad.\" He moved up a little, giving me more of his cock. \n\n\"I know.\" I alternated licking the head and down the shaft, using my hand to keep up a slow, steady, maddening stroke. \"I don't know what's better... the thought of making you come like a naughty girl right now... or fingering myself tomorrow while you're at your appointment and imagining you jerking off...\"\n\n\"You're so fucking irresistible.\" He sighed, shaking his head and running a hand through my hair. \n\n\"You say the sweetest things.\" I tugged gently at his cock, rubbing the wet tip against my cheek. \"Will you be thinking about me when you get yourself off tomorrow?\"\n\n\"Yes.\" His voice was low, his eyes heavy lidded as he watched me stroke him toward my lips. \n\n\"Liar.\" I let my hands go to his hips and aimed him, opening my mouth for the thrust of his cock. I welcomed the length of him, not doing my except opening my throat, his body doing the rest, unable to stop thrusting into the warm, wet cocoon of my mouth. \n\n\"Ohhh fuck... believe me...\" His hands went to my hair, his eyes closing, using my mouth now. It was so hot I couldn't help but slide a hand between my legs, my clit swollen and demanding attention. \"I'll be thinking about this very moment... and how much I wanted to shoot into your little mouth...\"\n\nI moaned around the length of him, unable to do anything now but take his cock and rub myself off. I had no control. He was fucking my mouth, slow and easy, restrained, keeping himself on some impossible edge. Watching it made me tremble with lust. \n\n\"I can't come, baby,\" he whispered, looking down and seeing himself disappear between my lips. I shook my head, murmured, his cock moving against my cheeks with the motion, making him gasp and hiss. \"Oh fuck... your mouth...\" \n\nMy hips were moving now, too, grinding against my hand as I fingered myself, my thumb focused on my clit. His cock felt swollen to gigantic proportions in my mouth, the precum taste in my throat strong, an acrid sting. His balls slapped against my chin as he began to drive in a little deeper, faster, his breath a steady indication of his desire to fill my mouth with the cum he was supposed to keep simmering in his balls all night.\n\n\"I can't...\" He begged, his fingers buried in my hair, his thighs spreading wider as he used my mouth and tongue like a pussy, the fuck growing more intense with every thrust. \"Oh fuck, I can't... I can't... I...\"\n\nI knew what I had to do. My whole body writhed beneath him, my fingers bringing me to the sweet edge of climax. I knew if I sailed over that delicious cliff, I would take him, too. He was trying so hard not to come, his face twisted. His restraint brought my orgasm to the surface, pushing it up and over with a wicked, forceful drive. I moaned and bucked under him as I started to come, my body shuddering with the sensation. \n\n\"Ahhh! No, no, no!\" His voice was pained and he tried, at the last minute, to pull himself out of the sweet clamp of my mouth and tongue, an involuntary squeeze mimicking the spasms of my pussy. It was too late. His cum flooded over my tongue, spraying in hot bursts again my lips and chin as he tried, in vain, to pull back. There was no stopping it now and I sucked him back in, eager to feel his finish. I swallowed the last few waves as he shot them, hot and thick, into my mouth, finally giving in, his hips bucking as he filled my mouth with that precious, saved seed. \n\n\"You...\" he panted, rolling off me and throwing an arm over his eyes. \"... are evil!\" \n\nI grinned, sliding my thigh over his as I turned toward him. \"Guess you'll have to reschedule.\"\n\nHe sighed, but it wasn't an unhappy sigh. \"I guess so.\"\n\nI decided right then and there that I was going to attempt to sabotage his efforts every month. It felt so good to be so bad! As it turned out, though, his sperm, quite lively while hot and fresh, didn't survive the freezing process so well. Unfortunately, donating wasn't going to be an option. I think we were both disappointed. He never got to see the infamous porn room, and me - I never got to tempt him in the same way again.\n\nNot that I didn't try. When he called to reschedule that appointment, I was at a class, and when I asked about it, he refused tell me when he was going in! \n\nHe was afraid to tell me, he said. \n\n\"Why?\" I pouted.\n\nHe shook his head and rolled his eyes. \"Because I know you! You'll jump me the night before!\"\n\nNow I ask you... how can you except a girl to resist such a temptation? \n\nIt's probably a good thing he never went back!"
    ],
    "authorname": "Selena_Kitt",
    "tags": [
        "bdsm",
        "orgasm denial"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/do-not-ejaculate-for-24-hours"
}