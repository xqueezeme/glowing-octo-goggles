{
    "title": "The Sun on my Skin Ch. 03",
    "pages": [
        "This story, as the title suggests, is the third (and final) part of \"The Sun on my Skin\" series, and the sequel to ''. It follows on directly from the events in Chapter 2, but this time, it is the turn of twice-rejected Tina to tell her story. I have tried to ensure that can be read on its own although, inevitably, you'll understand some of the events, and Tina herself, much better if you read Chapters 1 and 2 first. \n\nThis has been a long time in the writing, stopped and re-started, dropped and picked up again over 18 months. It has become, therefore, a long story. As with the previous chapters, this too is a lesbian romance with sex rather than simply a 'wham, bam, thank you mam' sex story. I'm sorry if this disappoints some but, hopefully, others will enjoy the slower pace and emotion.\n\nAs with chapter 2, the title is misleading as there is again very little sun in the story -- not surprising as it's set in wintertime Britain!. The title, while writing, has been 'The Rain on My Skin', (which is much more credible). However, the rules on Literotica mean that stories in a series must share the same title.\n\nI hope you enjoy and please rate the story and comment if you feel moved to do so -- your feedback is, as always, very much appreciated.\n\nCopyright \u00a9 ScattySue 2019\n\n=======================================================\n\n PROLOGUE\n\nBing-ding...\n\nMiriam how are you?\n\n<p align=\"right\"> Mary. I'm okay, a bit tired</p>\n\nYou were working last night?\n\n<p align=\"right\">Yes</p>\n\nBusy night? Must have been cold sitting in your cab waiting for fares\n\n<p align=\"right\">Bloody cold! But it wasn't the driving that was tiring!</p>\n\n??\n\n<p align=\"right\">It was after my shift finished</p>\n\nOkay confess \u2014 what happened?\n\n<p align=\"right\">Can I call you in 10 min?</p>\n\nSure. Sounds intriguing!\n\n<p align=\"right\">Maybe :-)</p>\n\n<center>+ + + + + + + + + + + +</center>\n\n\"Miriam?\"\n\n\"Mary.\"\n\n\"Mim, are you okay? You sound nervous; what's up?\"\n\n\"I, er... Something happened last night.\"\n\n\"Oh, are you okay? What happened? You didn't have an accident when you were driving a passenger, did you?\"\n\n\"No, no, nothing like that. It was, well I picked up a fare at Salisbury Station last night: two women going to Lower Beechcombe.\"\n\n\"Okay. So?\"\n\n\"Well, the way they were together, the older one especially, I did wonder if they were, you know, a lesbian couple. I dropped them at this house on the edge of the village which was all dark and looked empty. Anyway, it all got a bit weird because while the older one, Jan or Jane or something her name was, as she walked up to the house, the younger one, Tina, when she came to pay me, asked if I would drive off and then come back in half an hour to collect her.\"\n\n\"Why was that odd, Mim? Perhaps she was just, you know, escorting her there. Anyway, did you go back for her?\"\n\n\"Yes; I drove away as she wanted and just parked up around the corner since there was no point driving back to town.\"\n\n\"Ha-ha, I suppose you just kept the meter running.\"\n\n\"Too right. Anyway, Mary, twenty-five minutes later I drove back, but this was where it got really odd. When I pulled up outside there was another car parked there, an old green Skoda. After a few minutes of waiting, I beeped the horn and, finally, Tina opened the door and kissed the other woman, Jan \u2014 or she might have been Jane \u2014 anyway, she kissed her goodbye before coming out. She got into the car and just as I was about to pull away, I saw Jan or whatever her name was, with another woman, who had her hand on Jan's shoulder.\"\n\n\"O-kay, so you think it was some kind of, what, lesbian romantic triangle? Did you ask the woman -- what was her name?\"\n\n\"Tina. Her name was Tina.\"\n\n\"Right, Tina. Did you ask Tina what was going on? I know you, Mim: I bet you asked her.\"\n\n\"Ha, I didn't have to! As soon as we were moving she told me, 'I've just arranged for Jan, the woman I was in love with, to spend the weekend with Tanwen, the woman I believe Jan is actually in love with and who loves Jan back, even though neither of them realizes that they're in love. I'm either a saint or a masochistic idiot.' That's what she said.\"\n\n\"Bloody hell, Mim; what did you say?\"\n\n\"What could I say? All I managed was, 'Really?' and she made a noise that was sort of between a laugh and a sob and said, 'Yes, really.' Then she asked if there were any clubs or bars that gays and lesbians went to in Salisbury. She said she, er, she wanted to have a drink, have sex and go dancing, but not necessarily in that order.\"\n\n\"Oh my god! Talk about being direct! And are there any? Gay clubs, I mean.\"\n\n\"Mary, how the bloody hell would I know? I had to say I didn't know of any.\"\n\n\"What did Tina say?\"\n\n\"Not much, just that it was a pity because she really needed some fun. She looked so disappointed and sad so I...er...\"\n\n\"What, Miriam?\"\n\n\"I, um, I... well, I told Tina that if she wanted some company then I was finishing my shift soon, which I was, more or less, and I knew lots of nice pubs.\"\n\n...\n\n\"Mary? Are you still there?\"\n\n\"Yes, I'm here... I'm just thinking about that talk we had at the gym a couple of weeks ago.\"\n\n\"What talk?\"\n\n\"Come on Mim, I can tell from your voice you know what I'm talking about; after you accused me of eying up women just because I said the woman on the running machine had a nice bum.\"\n\n\"Oh yeah; we sort of talked about whether we'd ever thought of sleeping with, um, a woman.\"\n\n\"Yes, and I admitted I might have but you said you couldn't ever imagine wanting to.\"\n\n\"Um... yes, I did.\"\n\n\"Do you want to change your answer? No, never mind that: what actually happened last night?\"\n\n\"She said, okay, if I was up for it.\"\n\n\"Bloody hell, Mim, what did you say?\"\n\n\"I said yes... to the drink but I wasn't sure about the dancing.\"\n\n\"So... it was just the dancing you weren't sure about? Really?\"\n\n\"Think about it, Mary: when was the last time I went to a nightclub? I don't know which ones are any good.\"\n\n\"Miriam! You know damn well what I mean; she said she wanted sex!\"\n\n\"Yes, she did... I... I invited her home with me.\"\n\n\"Oh \u2014 my \u2014 god! Mim, why?\"\n\n\"You should have seen her, Mary: she was gorgeous, and there was just something about her...\"\n\n\"And did you? God, I can't believe I'm asking Miriam Goldman if she had lesbian sex with a woman she picked up in her cab! Well? Did you?\"\n\n...\n\n\"Yes.\"\n\n\"Wow. Is she, I mean Tina \u2014 is she still with you?\"\n\n\"No. She insisted she had to go so I drove her to the station. Mary, being in bed with her... it was amazing.\"\n\n\"So, are you going to see her again?\"\n\n\"I wanted to exchange phone numbers but she wouldn't. She said it was just a one-night thing.\"\n\n...\n\n\"Mim, are you working tonight?\"\n\n\"What? Yes, until nine o'clock. Why?\"\n\n\"Do you want to come over? I really, really want to know what you and this Tina got up to.\"\n\n\"Uh... you mean, everything, don't you? All the details.\"\n\n\"Yes, absolutely. And, Mim...\"\n\n\"What, Mary?\"\n\n\"Um... Peter's away this weekend at his parent's, so it'd be just the two of us... You could stay over.\"\n\n\"You mean, like, overnight?\"\n\n\"Yes, all night... but I, er, I don't mean in the spare room. Understand?\"\n\n\"Yes, I think so... Okay... I mean, yes, Mary, I'd love to...\"\n\n PART I \u2014 Single, Free and... Lonely\n\nMonday 2 November\n\nI sit, apprehensive and nervous, awaiting Jan's arrival. The text that she and Tanwen sent yesterday should have made me feel better, allowing me to be proud that my instincts and self-sacrifice in letting Jan go and orchestrating her and Tanwen's weekend together, had been right. In truth, it hasn't helped.\n\nI suppose I should learn to accept that Jan and I weren't meant to be together, that her desire for a family doomed our relationship from the start, and that I've saved myself some heartache and sadness in the future. It's not easy.\n\nInstead, I feel that Jan is just one more demonstration of my inability to fall for the right women: Angela, just after university, Alex, Jojo and now Jan. Even Anika, the woman Jojo encouraged me to date because she was kind, beautiful, caring and loyal, proves my hopelessness. I decided I wasn't interested and this morning, in my inbox, was an invitation to her engagement party. According to the invitation, she's going to marry a woman named Stephanie. I don't think I'll be going.\n\nPerhaps I should just stick to one-night stands, like Saturday night with that taxi driver, Miriam. Just sex, no worries, no strings. It was her first time with a woman, but I've no anxieties about whether she wants a girlfriend, or has a boyfriend she'll go running back to, or even if she's got some female friend she's had a crush on for years and that sleeping with me suddenly makes her want to act upon. I feel my mouth tighten in a grim smile; that's me: the awakener of hidden, Sapphic desires in 'straight' women so they can find the one they really love... \n\nThere's a rumbling, chesty, smoker's cough. \"Good morning, Tina,\" Malcolm calls as I hear the soft beep and whirr as he turns his PC on. To my surprise, he comes into the tiny, cupboard-sized space that everyone rather laughably calls my office. \n\n\"Morning Malcolm,\" I say, glad for the distraction from my melancholic thoughts, \"are you okay?\" He holds out an envelope. \"What's this?\"\n\n\"It's a copy of the details I've agreed for my retirement. I was hoping to speak with you last Friday, but you left rather early. Janice too,\" he adds pointedly. I decide that I'm not going to dignify his none-too-subtle innuendo with an answer.\n\n\"You could have spoken to me earlier in the day. Anyway, what has been agreed by you and HR?\"\n\nHe looks a little irritated that I'm not reading the letter but answers anyway. \"Well, my official retirement date will be the fifth of February, that's a Friday, but my last day in work will be two weeks before that, the twenty-second of January as I shall be taking the two weeks of annual leave that I will have remaining. Is that alright?\"\n\n\"Hmm? Well, yes, of course, if you've agreed it all with HR.\" I don't want him noticing I'm upset, so I retreat into managerial formality. \"I may need to ask you to help ensure that both Janice and Tanwen are fully conversant with all the procedures, particularly those relating to the end of the tax year, and can you make sure they know who to contact at the StaffPay software company for support, and... well, I'm sure there'll be other things we'll need to pick your brain for before the end of January.\" I look at him and notice that he is unexpectedly nervous. \"Are you okay about retiring? You've been with the company for a long time.\"\n\n\"I can't say that I won't find it hard, and I think the wife is worried that I'll be under her feet all day,\" he smiles, \"but there's the garden and the doc says I should take more exercise... and give up smoking of course.\"\n\n\"Well, perhaps without the stresses of work that'll be easier,\" I reply, trying to be both sympathetic and encouraging, \"after all, you want to be healthy to enjoy your retirement.\"\n\n\"You're right, of course, and that's what her indoors keeps telling me.\"\n\n\"So why not do something?\" I ask, irritated in part by his put-upon demeanour but also by his habit of referring to his wife, whose name I know is Julie, as if she is a household object. \"There are patches and nicotine gum and those e-cigarette things \u2014 lots of help if you want to give up.\" My impatience obviously registers as Malcolm's expression hardens and he stands.\n\n\"I had best get to work,\" he says, \"I just wanted to do the right thing and keep you informed.\"\n\n\"Thank you, Malcolm. You know, people \u2014 Julie and your doctor \u2014 only have your best interests at heart,\" I add, trying not to end out talk on a sour note. He nods and heads to his desk.\n\nI open and read through Malcolm's letter, but it says no more than he told me. I open my email on the PC, and in the team's calendar, add his official retirement date and the preceding two weeks of annual leave. If this has all been agreed with HR, then there's no reason why it needs to be a secret.\n\nThere is a sudden laugh: it's Jan as she approaches the main office door. The counterpoint is the soft, Welsh accent of Tanwen. They had admitted in the text they sent me yesterday that they'd slept together, but I assumed from the comments about the kids finding it a challenge and their need to work at their new relationship, that they would be taking things slowly. The fact that they are arriving together is a little surprising as it suggests that Jan has already moved in with them. Arriving at the same time also means that Jan is a little late and Tanwen early, and I wonder if this is going to be the way it goes from now on.\n\nI stand and take a deep breath to brace myself. Putting on a happy face, I pick up my empty mug and make my way out as if I just happen to be going to make myself a coffee.\n\n\"Hi, Tina,\" Jan says cheerfully as I emerge from my office. She radiates happiness in a way that I've rarely \u2014 if ever \u2014 seen from her. And not just her but from Tanwen too.\n\n\"Oh, morning, Janice, Tanwen,\" I reply and glance at Malcolm. Okay, so they've told me that they are lovers but even without Jan's text, it would be pretty bloody obvious that things have changed. When their eyes meet, there is a new spark of love and affection.\n\n\"You two seem very cheerful this morning,\" Malcolm says, and I wonder what the two of them are going to say in reply.\n\n\"Well, we both had a good weekend, so we did,\" Tanwen replies, \"but Jani needs to get down to work because she's late,\" she adds, smiling. \"I'll make you a tea, Jani. Do you want a drink, Malcolm? Tina?\" It's more evidence of the new closeness between them but the offer of tea seems to distract Malcolm.\n\n\"Oh, yes please; very kind of you, thank you,\" he says.\n\n\"I was just going to make one myself,\" I tell her. Somehow, talking to Tanwen first seems easier; if I speak to Jan right now, I do not trust myself not to cry. It will get easier, I'm sure it will, and tears will only undermine the sacrifice I made when I walked away on Friday night.\n\n\"Thank you for the text,\" I say to Tanwen as she fills the kettle. \"I'm glad you and Jan, you know, sorted things out.\"\n\n\"Tina, cariad, Jani and I can't begin to thank you enough for what you did, so we can't. I know that you and she were... close, so... Well, you are amazing, you are. Thank you.\"\n\nI should say 'You're welcome,' or 'I'm glad I helped,' but just at the moment, it hurts too much. \"So, are you and Jan living together now?\" I ask instead.\n\n\"Oh no. The children, Jake especially, still need to get used to the idea of Jani and me being, you know, a couple. Jani came over to me this morning and we took Tilly to the nursery, so we did. We know we can't do that every day, with Jani being in late.\" I might suggest that Jan could probably adjust her working hours if she really wanted, but I don't.\n\n\"Even Malcolm would notice that,\" I point out. \"Are you going to tell him that you've become lovers?\" It's a deliberately provocative way of putting it and makes Tanwen blush. \n\n\"I'm not sure whether Jani and I are having sex is any of his business,\" she replies quietly, her answer surprising me by its directness. \"I suspect we'll have to tell him that we're more than just friends before too long; Jani says that he was always intrigued by your relationship with the girl who worked here before me.\" I can feel my face fall and the stinging prickle of imminent tears at the reminder of Jojo. Tanwen places a hand on my arm, \"Tina, I'm sorry; I didn't mean to upset you. All I meant was that the possibility of two women being in love evidently seems to interest Malcolm. Even so, Janice and I don't want to be walking on eggshells, always pretending when we're in the office, so even if we don't arrive together, Malcolm is bound to notice sooner or later, so he is.\" I nod. Knowing Tanwen, I doubt she was trying to upset me, but even if she were, I probably deserve it for being provocative.\n\nThe kettle starts to boil and it's a welcome distraction, as I don't know what to say. With the drinks made, I pick up my mug and Malcolm's. \"Well, back to work, I suppose,\" is all I can manage.\n\n Sunday 8 November\n\nIt's Sunday afternoon, which if you are on your own, can be about the most boring and depressing time of the week. I need to do something \u2014 anything! \u2014 rather than just sit here because when I do, I find myself wondering about Jan and Tanwen and what they're doing. Probably something with their kids, I expect, and with Jan loving every second, no doubt.\n\nThat's enough: I'm going for a walk in the park. Maybe the fresh air and exercise will lift my mood. Right, where are my boots? \n\nThey're not on the shoe rack, so where are they? I start rummaging in the cupboard in the hall, but I can only find one boot. Where has the other one got to? I start moving some of the boxes that are stacked at the back. These have been here since I moved in, untouched mostly, except for those rare occasions when I need to get to the electrical fuse box. \"Shit!\" I curse as a box topples from the top of the carelessly stacked pile I've constructed, its contents spilling out. I start to gather up the bit and pieces \u2014 papers, a couple of old school books and a few old pictures: stuff from my childhood and teens, before Mum and then Dad died. \n\nThere is a picture of me with Mum and Dad and my big sister, Philippa. I try to work out when it must have been taken; I'm in school uniform whilst she is in jeans and a sweatshirt, so I guess she was at college. Hmm, that would have been when Pippa was seventeen or so, and I was fourteen. About nine years before Mum's death, ten-and-a-half before Dad died... and then, a month after that, Dad's funeral \u2014 the time when Pippa and I finally stopped fighting by the simple expedient of never talking to each other again. \n\nThere is the usual twinge of guilt that I always get on the rare occasions when I think of Pippa. Should I try to make amends and patch things up? I'd sent a Christmas card a couple of years ago, but she'd ignored it and I heard nothing back. Perhaps she'd moved and never received it... In either case, is there any point in trying again?\n\nPippa had been unhappy when I came out as gay \u2014 not as unhappy as Mum or Dad, true, but she really didn't like it \u2014I thought at the time that she'd accept it, but I was wrong and she hadn't.\n\nMum died thirteen years ago when I was twenty-three, not long out of university and working hard in my first job. I was also in an intense relationship with a woman \u2014 Angela Farrell \u2014 and though I'd had girlfriends and female lovers before, we'd moved in together so this felt like my first real, serious relationship. She was beautiful, exciting and very sexy. She was also demanding and not a little manipulative, although I had yet to realize that and I was infatuated, blown away by love and sapphic passion.\n\nIt was bowel cancer that took Mum \u2014 four short months after the unexpected diagnosis. Dad followed just sixteen months later of, well, of not having Mum anymore, I suppose. He just seemed to waste away. I'd tried to be there for him, despite the demands of work and Angela. However, Pippa had made it clear that she thought I should have given more time to Dad, partly by working less but mostly that I should 'stop playing at being a disgusting dyke and ditch the lesbo girlfriend,' as she'd so subtly put it. Like I said: she wasn't happy about my sexuality.\n\nPerhaps I could have done more \u2014 although Dad was never especially pleased to see me when we met. However, Pippa could and should have done more for him. Okay, she was a single mum with a very young daughter, but she didn't work. She just seemed to drift in and out of relationships, relying on benefits and the largesse of her boyfriend de jour.",
        "I guess that's what pissed me off most: my being a lesbian was considered disgusting, whilst Pippa's merry-go-round of men \u2014 all with, as far as I could tell, dodgy backgrounds, dubious employment and suspect morality \u2014 was, if not okay, at least tolerated. Thank god for Mum's sister, our Aunt Paulette. At least she and her husband Colin had been supportive. Perhaps I should ask Paulette if she's heard from Pippa recently.\n\nWith a sigh, I push the unhappy thoughts and memories away as I stuff the physical manifestations of those memories back into the box. I pull the next two boxes out \u2014 stacking them more carefully this time \u2014 and there, wedged behind the final box, is the elusive walking boot. Only now do I recall throwing the boots into the cupboard in annoyance when I came home after that rugby match in Dulwich in which Tanwen's eldest lad had played. It was the day after Jan and I first slept together, but despite that, Jan had chosen to go back to Tanwen's house and not be with me. She'd said she was worried that Tanwen would somehow know that we'd become lovers... \n\nNo, I'm going down that sad memory lane either. On your feet, Tina, get those boots on and walk off this melancholy mood! Get through the next week and then, on Friday, go and try to meet someone. Yeah, that's a plan.\n\n Thursday 12 November\n\n\"See you on Monday,\" Tanwen says to Malcolm and me as she slips her coat on. \"See you later, Jani,\" she says as she passes her girlfriend. They touch hands, but I can tell they'd like to kiss.\n\n\"Bye, Tanwen,\" Malcolm calls. He seems to have accepted them being a couple. They told him on Tuesday, which surprised me as they talked about taking things slowly. I suspect Jan is spending nights with Tanwen, which is not so surprising given how things are between Jan and her soon-to-be ex-husband. It seems that he's insisting on selling their house as quickly as possible.\n\nTanwen and Jan seem happy together, and I do try to wish them well in my heart, but I can't help wondering what would have happened had I not let Jan go. I give a little snort. Who am I kidding? She'd have kept on babysitting for Tanwen, out on Saturday mornings so Tanwen could watch her son play rugby and so Jan could have a surrogate family. Eventually, that would have pissed me off to the point where I said something, and it's all too easy to imagine our relationship unravelling after that... No, what I did was right: I don't need to be walked out on yet again.\n\nI can go dancing tomorrow night and hopefully there'll be someone there I can hook up with for company and sex and no complicated relationship worries.\n\nRight, let's get this next batch of overtime processed or there'll be some very pissed off employees if they don't get their money until after Christmas.\n\nI'm keying in the figures from the fourth overtime sheet when my mobile phone starts to buzz, vibrating on the desk beside me. The screen announces that it's Aunt Paulette. \n\n\"Hi, Paulette, how are you?\"\n\n\"I'm very well, Tina dear, thank you. How are you?\" she asks. I'm tempted to pour out all my frustrations and disappointments, but Malcolm is sat in the main office and his hearing is, I suspect, a lot sharper than he lets on, so this is not the time or place.\n\n\"I'm okay,\" I tell her, trying to make it sound true. \"How's Colin?\"\n\n\"We're both well. Actually, I was phoning to give you some news.\" The note of excitement in her voice intrigues me. \"You know we've both wanted to go around the world? Well, Colin has booked it! He says it's for our Ruby wedding and my sixtieth birthday next year. We fly to New York for three days and then take the train to Chicago \u2014 you know how Colin's always had a bit of a thing about trains? A couple of days in Chicago and then San Francisco. After that, we Fly to New Zealand. We spend a week, no, ten days there and then to Australia...\" I tune out at the bucket-list-killing litany of places: Melbourne, Sidney, Thailand, Singapore, Hong Kong... \"and then finally, from Dubai, we fly home,\" she concludes. \n\n\"How long will you be away?\" I ask, as my subconscious suddenly and unhelpfully points out that Paulette was married at twenty and lived, evidently very happily, with the same person for forty years, while I, thirty-four... \n\n\"Seven weeks, I think.\" Paulette's reply thankfully interrupts my thoughts.\n\n\"Oh wow, that sounds brilliant,\" I tell her, honestly but not a little enviously. \"When do you go?\"\n\n\"Next week. I would have told you sooner, but Colin only told me last Sunday, and since then it's been a whirlwind of getting ready. I think he was originally planning not to tell me until we were on the way to the airport, the soppy romantic,\" she laughs, \"but then he realised we needed vaccinations and things.\"\n\n\"True; coming down with typhoid or malaria would most definitely spoil the holiday. Well, I hope you both have a wonderful time. You can send me postcards and make me even more insanely jealous.\"\n\n\"Oh, we will, I'm sure, although it might be emails and Facebook instead of postcards: this is the twenty-first century after all!\" she teases. I have made numerous comments in the past about her reluctance to keep her mobile phone turned on when she's not actually making a call.\n\nA sudden thought occurs to me. \"You don't have an address for Pippa do you?\" I ask.\n\n\"Why?\" she asks in reply, obviously intrigued. She is fully aware of our relationship \u2014 or lack of one.\n\n\"Oh, I thought maybe I should send her a Christmas card. I sent one a couple of years ago but never heard anything, so I wondered if she'd moved. The address I have is years old.\"\n\n\"That's a nice idea, Tina, but I don't think I can help. She doesn't seem to want anything to do with me either. It's a shame. I'd hoped that maybe, once the pain of Judy and your Dad dying had eased that she would relent and find a way to accept you and everything.\"\n\n\"Sorry, Paulette, I didn't mean to puncture your happy mood. Go and get yourself packed and injected and everything else. I'll raise a glass to you on Chrismas Day when you're \u2014 where will you be?\"\n\n\"Oh, er, I'm not sure... Singapore, or Hong Kong.\"\n\n\"Well, think of me back here in cold, damp Britain!\"\n\n\"We will, and you have a happy Christmas too, Tina. Is there anyone..?\" she asks tentatively.\n\n\"No, no one at the moment,\" I tell her. I'm again tempted to tell her about Jan, but no. Perhaps I'll call her tonight or maybe on Sunday.\n\n\"Oh... well, I'm sure you'll find someone special: you're a very nice person, after all.\"\n\nI look up to see Jan standing in the doorway. \"Sorry, Paulette, I'd better go. Love to you and Colin.\"\n\n\"Thank you, Tina. Love to you too, and a very happy Christmas. Bye-bye.\" \n\n\"Bye, Paulette.\" I end the call and turn my attention to Jan.\n\n\"Um, Tina, I'm sorry to interrupt.\" She seems nervous, and I wonder what the matter is.\n\n\"Yes?\" \n\n\"I, well, I suppose we, just wanted to ask something,\" she says, keeping her voice low and coming closer, and I guess that the 'we' in this case is her and Tanwen. \"We just wondered if, over Christmas, you know, when the schools are off, it would be okay if Tanwen and I took annual leave on alternate days so that one of us is at home every day?\"\n\n\"That should be okay,\" I tell her, fighting the seemingly inevitable twinge of jealousy. \"Malcolm will still be here so there'll be three of us in the office. It would be good if we can get as much stuff done at the start of December. I guess the schools don't break up until about the...\" I glance at the calendar on the wall, \"... the eighteenth?\"\n\nThe seventeenth, actually; they have an INSET day, you know, a staff training day, on that Friday.\" \n\n\"Okay. Well, you and Tanwen just need to book the holiday on the staff portal in the usual way.\"\n\n\"Thanks, Tina,\" she smiles, and I watch her walk away. No, she and Tanwen are right for each other: I could never have made her as happy and contented as her new family seem to make her.\n\n Friday 13 November\n\n\"Hi Tina, we've not seen you for a few weeks.\" I turn from waiting at the bar and there is Frankie, arm in arm with Michele, her girlfriend. They are regulars here at Quixote's and are sort of more-than-acquaintances-but-not-quite-friends.\n\n\"Hi,\" I reply over the music.\n\n\"Where's Jan hiding?\" Michele asks, and this is, of course, precisely why I have been avoiding Quixote's as it was the place Jan and I came to dance, often meeting and dancing with Frankie and Michele; the place where Jan's dormant lesbianism awoke and where the brief, guttering flame of our love first sparked. Fuck, I need to let that go.\n\n\"She's not here,\" I tell them. \"We're not a couple, actually; she's with someone else.\"\n\n\"Really?\" Michele looks puzzled, \"because I thought...\"\n\n\"Tina, we're sorry,\" Frankie deliberately interrupts. \"Are you okay?\" she asks, putting her hand on my arm.\n\n\"Oh, yes; I'm enjoying being free and single,\" I smile. It's not exactly a lie, but the truth is a lot more complicated. I scan the room, checking out the women. This is the one disadvantage of Quixote's: the mix of straight and gay can cut down on the number of available girls. However, I couldn't face the trek to Mayflower or G-A-Y this evening and, if the opportunity arises, I rather fancy waking up with a lover in my own bed for a change.\n\n\"Got your gaydar running, I see,\" Michele comments, grinning.\n\n\"Well, you never know,\" I reply with a smile. \"I guess it's a bit early yet,\" I add as all the groups seem to have even numbers of women.\n\n\"Come and dance with us then,\" Frankie suggests.\n\nThe dancing is fun, and I try to lose myself in the rhythms and my body's movement. Perhaps it was a mistake coming here because I'm constantly reminded of Jan.\n\nI notice a young woman on her own, towards the edge of the dance floor and half-hidden by one of the pillars. She intrigues me as she appears to be dancing alone, her eyes closed almost as if in a trance. Her dark, straight hair sways as she moves her head, partially covering and uncovering her face. She is wearing a flower print, summery-looking mini dress over a pale, long-sleeved shirt and dark leggings. With her narrow waist and full hips, her body isn't the sort that would normally hold my eye, but there's something about her that I find captivating. I wonder why? Whatever it is, I find myself repeatedly looking at her.\n\n\"Seen someone?\" Michele asks, making me realise that I've been staring. She moves beside me to follow my gaze. \"What, her?\" she asks in surprise. \"She looks like she's stoned!\"\n\n\"No,\" I protest, \"she looks... carefree.\"\n\n\"Yeah, like I said: stoned!\" Michele laughs.\n\n\"Shell, give Tina a break, huh? A bit of sympathy, right?\" Frankie tells her girlfriend, giving her a meaningful stare. \"Sorry, Tina. I love this girl, but Michele was definitely at the back of the queue when sensitivity was being given out!\"\n\n\"Hey, not fair!\" Michele objects.\n\n\"Actually, I think she might have been hiding behind the door,\" I suggest, and Michele sticks her tongue out at me. I try to focus on Frankie and Michele and on the music, but I keep glancing back to the dancing, carefree woman, peering through the increasing number of dancers to see that she is still on her own.\n\nThe music dips as the track changes and Frankie leans in towards me. \"Go on, go over to her.\"\n\nI look across and she's not there! The feeling of disappointment is unexpectedly intense, ridiculously so; she was just some random girl dancing. Just then, as the music builds to a fast, hard beat, she reappears from behind the obscuring column, arms raised and thrusting in time with the music, head tipped back and eyes still closed, stamping one foot as she slowly spins. I nod to Frankie and begin dancing my way towards her. I nod and smile at the people I pass, but almost all of my attention is fixed on her.\n\nThe area here is unexpectedly empty \u2014 the pillar seems to cut it off, and the nearby fire escape doors have evidently prevented the management from filling the area with tables and chairs. There is a couple, a man and a woman, with their arms around each other. Their movement bears no relationship to the music, their attention entirely on the kiss they are sharing.\n\nI move nearer the woman. She exudes a sense of complete absorption in the music and carelessness towards the rest of the world that is enthralling and I cannot help envying her. I shut my eyes and continue to dance; within a moment or two, I find I am much more aware of the music. The song ends and I resist the temptation to open my eyes as the first notes of the next song begin. Violins, I notice, surprising myself, playing quick, piercing notes. It's an old track, probably one that someone has requested, and it takes a moment to recognise it: 'Come on, Eileen' by Dexy's Midnight Runners. It reminds me of dancing at family parties when I was young.\n\nOnce again, I am tempted to open my eyes and look at the woman but I fight the urge, focussing on the nostalgic music. It was a big local parish hall and a party for my grandparents \u2014 a sixtieth birthday or ruby wedding anniversary or some such \u2014 and me and my big sister Pippa and various cousins and other youngsters are dancing in a group amid the grownups. The song builds to a crescendo: Too ra, loo ra, too ra loo rye aye and I am swaying with my arms in the air in time with the beat, just as I did then, twenty or more years ago. \n\nI dance on, reliving memories of a time before disapproval, bereavement and family division. Was it about then that I started to notice girls more than boys? Maybe.\n\nThe track morphs into the next, some anonymous drum and bass track. Without sight, my awareness of my body is heightened, and I start to appreciate the reasons for dancing this way. My movements become larger, freer, as the only feedback comes from balance and muscles and the rub of clothing on skin.\n\nSomething brushes my arm as I twist. Instinctively, I open my eyes as a surprised voice beside me says, \"Oh, hello,\" I turn, and there is the dancing woman, looking at me, intrigued. \"I didn't think I'd get any company in this corner.\"\n\n\"Well, I...\" I hesitate and decide that the simple, open truth is probably the best option. \"I was watching you dancing and you just looked so... carefree, so happy, that I couldn't resist coming over.\"\n\n\"Me, carefree? Not hardly!\" she replies. She is even younger than I first thought, probably no more than twenty at the most. The momentary memory of Jojo is inevitable, I suppose, but this young woman is very different and radiates a calm confidence that Jojo never had.\n\n\"Well, you looked it, dancing with your eyes shut.\"\n\n\"Yeah, that's why I dance alone sometimes, you know? To escape. What about you? You looked like you were miles away, almost as if you were, like, in a trance.\"\n\n\"I suppose I was, in a way,\" I admit. \"I was remembering dancing to one of the songs when I was barely a teenager.\"\n\n\"Music can be fantastically powerful like that.\" She has stopped dancing but still sways and shuffles in time to the beat. \"Closing your eyes makes the music much more intense, don't you think?\"\n\n\"Absolutely.\" I agree and then hesitate before asking, \"So, do you just come here to dance on your own?\"\n\n\"This is my first time here, but yes, sometimes -- when I'm just in a dancing mood. I was on my way home and I saw the sign outside and decided that tonight I wanted to dance. What about you? Are you a regular here?\"\n\n\"Well, I guess I was but I haven't been here for a while,\" I admit \"Um, do you want a drink?\" I ask as she looks at me with dark eyes. Her pretty face takes on a curious expression, weighing me up as if unsure what to make of my offer.\n\n\"Thank you, that's very kind. Dancing makes you thirsty, doesn't it? My name's Andi, by the way.\" She holds out her hand in an unexpectedly formal gesture.\n\n\"Oh, I'm Tina,\" I reply, shaking her hand.\n\nAt the bar, she asks for a bottle of fruit-flavoured cider \u2014 with strawberry and lime, according to the label \u2014 while I stick with my usual white wine. Bottle in hand, the accompanying glass left rejected on the bar, she immediately heads back towards the far corner. I wonder if she is just incredibly rude, but she pauses after a few steps, looking back to see if I'm following. Perhaps she doesn't like being crowded into the scrum by the bar.\n\nAs soon as I start to follow, she continues walking. As the dancers thin, she begins to sway and step in time to the music. She sips from the bottle and turns: her eyes are closed once more and she slips into her dance.\n\nAndi may be able to dance with a bottle in hand, but a glass of wine is more of a problem, and I have only one option if I am to dance and that is to put the glass down. I take a large gulp before placing it on the floor, behind the pillar. I close my eyes and seek the meditative state I had briefly experienced earlier. However, I cannot help thinking about Andi.\n\nI can't decide if she is just shy and awkward beneath a veneer of confidence or is the most idiosyncratic person I've ever met. Or both. Neither offers much of a clue as to whether she'd be interested in having sex with me or would simply tell me to piss off. Of course, if she's determined to just dance and won't talk to me, then the whole question becomes moot and I'm just wasting my time.\n\nI open my eyes and glance across the dance floor. There are a group of three women just entering and, from their hair and clothing \u2014 and the dark mottling of tattoos on one of them \u2014 I'd bet that some or all are gay. Should I take my drink and try and join them?\n\n\"Tina.\" Andi's voice interrupts my speculation. \"I'm boring you, aren't I? Um, thank you for the drink.\"\n\n\"No, I guess it's my fault; you were quite happy dancing here on your own and I interrupted you. You're just here to dance, Andi, and I respect that.\" I bend to retrieve my glass and give her a nod as I turn to leave. Should I seek out the three women I saw? Am I in the mood anymore?\n\n\"What are you here for, Tina?\" Andi asks loudly, projecting her voice over the music and making me hesitate.\n\n\"I wanted to find someone to sleep with tonight,\" I admit.\n\n\"You mean... a woman?\" she asks and I nod. She doesn't appear shocked or disgusted, simply a little surprised as she blinks at me. \"Er...\" I don't know what she's thinking but take a guess.\n\n\"Yes, I did come over to chat you up, though what I said about how you looked was all true.\" \n\n\"Okay,\" she replies in an unexpectedly matter of fact tone. \"Do you want to go somewhere we can talk?\" Now it's my turn to blink in surprise. \n\n\"Uh, yes, that would be good,\" I manage and hastily down the rest of my wine.\n\nWe make our way out, collecting our coats on the way. Andi's is a royal blue duffel coat, complete with a hood and horn toggles; it's vaguely familiar and I wonder if I've seen one of Tanwen's daughters wearing something similar. She asks me to hold her half-empty bottle of cider as she slips it on.\n\nOutside, the air is frost-sharp and the clear sky shows a few faint stars, even with the streetlights. I zip my leather jacket up, wishing it was a little longer and slightly envious of Andi's coat. I watch as she pulls something from the pocket and I am once more given her cider to hold as she pulls a woolly, Peruvian-style hat onto her head. The thought of Peru triggers recognition. \"Paddington Bear!\" I laugh and she smiles. \n\n\"Yes, it is a bit like his coat, isn't it? I don't have a marmalade sandwich under my hat, though.\" She looks at me, expectantly. \n\nDespite her unexpected response in the club, she's clearly waiting for me to take the lead now, but for some reason I'm hesitant. It isn't that I'm nervous of a one-night stand \u2014 I've had a number over the years including that taxi driver the night I left Jan with Tanwen \u2014 and each time I've not hesitated to get into bed with them and calmly walked away the next morning with just a thank you and a goodbye. Seducing self-professed straight women hasn't been an issue either. Perhaps it's Andi's open innocence or maybe that, young as she is, using her gay-curiosity for a single night of sex feels just a little too cold and calculating, even by my past standards.",
        "She gives a slight frown. \"It is cold out here,\" she points out.\n\n\"Sorry, I'm just thinking of where to go. Do you want a drink or something to eat?\" Fuck this; I'm not looking for a date, am I? \"Or... we could go back to my place.\"\n\n\"Okay,\" she replies, returning to the same carefree, matter-of-fact tone that she used earlier. \"Which way, Tina?\"\n\n\"Oh, we'll need to catch a bus. This way...\"\n\nThe bus is surprisingly crowded, at least when we first board it, with several couples and groups sat or stood. We make our way upstairs where it is a little less busy and manage to find an empty seat.\n\nAndi and I don't talk but she seems happy to be pressed up against me as we sit side-by-side. As the bus lurches around a bend, her hand grabs my knee for support and, when her hand stays there, I wonder if I won't be her first female lover. It would certainly explain her easy acceptance of my interest in her.\n\nA few stops further and the bus abruptly empties: we're close to the entertainment complex that finally opened a couple of months ago, with various bars and restaurants, a cinema, a tenpin bowling alley and a nightclub. Andi stands and suggests we move to sit at the back as the now almost empty bus pulls away again. We change seats and now I wonder if she's worried about people seeing her.\n\nThe silence between us resumes and while she seems happy about it, I feel awkward and uncomfortable. \"So, what's Andi short for?\" I ask at last, simply for something to say. \"Andrea?\" I suggest and she looks at me and smiles.\n\n\"It would have been easier at school if it was,\" she replies. \"In fact, it's Andromeda.\"\n\n\"Oh, that's... unusual,\" I manage. My mind pictures her with two very hippy parents, or maybe just a Mum, wearing a caftan with flowers in her hair.\n\n\"I bet you think my parents were some new-age weirdoes?\" she asks and I can tell my face betrays me by the look in her eyes. \"Yeah, everyone always does. I suppose they are, in a way \u2014 weird, I mean \u2014 but not in, like, beards and long hair and flowers and drugs way; Dad's an astronomer and Mum had this thing for classical mythology, so.... Andromeda. It's good I don't have a brother or he'd have probably been named Orion or Perseus.\"\n\n\"I suppose he'd have called himself Percy, though that's not much better,\" I join in her gentle laughter. I wonder about her use of the word 'had' when talking about her Mum \u2014 has her Mum lost interest in Greek mythology or something more significant? \u2014 but now is not the time to ask. \"Andi suits you though,\" I tell her.\n\nWe lapse into silence once more. \"So, what about you? I mean you here, with me...\" I ask eventually, wondering about the motivation for her decision.\n\n\"Um, well, I guess I just want to do things because I want to, you know? To try different things and not just do or not do stuff because it's expected or, god forbid, just because it's normal.\"\n\n\"So... tonight?\" I ask, tentatively. \"I mean, have you slept with other women?\"\n\n\"No, actually. I've had girls, you know, show an interest in me but I've never, like, responded to the invitation before. Tonight, I decided that I wanted to see what it was like. That doesn't sound too, I don't know, weird, does it?\"\n\n\"Well, if it is, I'm not going to complain,\" I tell her with a small chuckle, and lean in to kiss her. I feel her tense in surprise, possibly because we're in public, albeit at the back of an almost empty bus. However, Andi's hesitation is momentary and she responds readily, even reaching up to touch my cheek.\n\nI do not prolong the kiss; we're nearly home and, besides, this was just a first adventure, a foray to see how willing this woman is, and her reaction was everything I could have hoped for. \n\nThe walk home is brisk and I think I can sense her excitement, which turns me on, a lot. As we near home, I slip my arm around her. \"Andi, I ought to tell you that I have a sort of, well, not exactly a house rule but a... a habit, I guess,\" I tell her.\n\n\"What's that?\"\n\n\"I don't wear clothes in the house.\" I watch to see her reaction.\n\n\"Okay,\" she replies as if this is nothing out of the ordinary; perhaps for her, it isn't. \"So, do you, you know, to get undressed outside?\" she asks, sounding a little intrigued.\n\n\"No!\" I laugh. \"Well, I could, but it's a bit cold for that. I normally strip in the hallway. So, you don't mind my being naked?\"\n\n\"No, I don't think so.\"\n\n\"Okay. Do you ever strip off at home or, well, when sunbathing?\" I ask. Given her earlier statement about never doing something because it was expected, I wondered what sort of things she'd tried.\n\n\"I dance naked in my bedroom sometimes,\" she smiles, \"but not like around the house and never in public. Is it just at home or are you an actual nudist, Tina?\"\n\n\"I'm not sure what constitutes an 'actual nudist' but, yes, I have been to a naturist resort, in Spain last year, with...\" I almost say 'Jojo,' \"a friend. It was after that I stopped wearing clothes indoors. So, when you're dancing naked, are you alone?\" I ask and the very attractive vision of her unclad form dancing at she had at Quixote's appears in my imagination.\n\n\"Usually,\" she replies enigmatically as we walk up the short garden path and then climb the steps to my front door.\n\nThe warmth inside is welcome and I immediately remove my coat, shoes and socks before I begin undressing properly. Andi removes her hat and coat, hanging them next to mine, and then copies with her shoes and socks. She hesitates, watching me. \n\nI unbutton a couple of the buttons at the top of my shirt before pulling it, and the t-shirt beneath, over my head. \"You're not just doing this because I'm here, are you?\" she asks as her fingers toy with the hem of her minidress. \n\n\"No, really I'm not. See this chair cluttering up the hallway? It isn't here as an art installation,\" I tell her as I quickly fold the shirts and place them on the seat of the chair. I'm not sure if she believes me. \"Look, Andi, you don't have to strip, it's what I do. I understand that undressing, especially in a strange house with a woman that you've just met, isn't what you expected; I guess it's not what normally happens,\" I say, hoping to encourage her as I unclip my bra, revealing my boobs. She looks at me intently, trying to focus on my face but I see her eyes glance down a couple of times. \n\nShe begins lifting the hem of her dress and I smile encouragingly.\n\n\"O-kay,\" she says slowly and, just for a moment, I wonder if this is where she walks out; after a tiny hesitation, she gives a little shrug and begins pulling the mini-dress up and off. As her head reappears my now naked boobs are in her direct line of sight and I notice her lips press together, thinning momentarily; her first real sign of nervousness. However, I press on, hooking my thumbs into the waistband of my trousers and pushing them down. \n\nShe says nothing but evidently decides to hurry her undressing, though whether it is sudden desire, embarrassment at undressing in front of me or a determination to get it over with before her courage fails I cannot tell. Perhaps it's all of them.\n\nAs I place my panties down on the chair, I notice the way her clothes are draped haphazardly is a definite contrast to the tidy folding of mine on the seat. I look at Andi and there's a little pang as I remember Jojo on that first morning at the naturist resort, Aldea Naturista, when I surprised her in the bedroom as she was about to put on a pair of bikini briefs. Andi has that same air of determination as she fights the urge to cover boobs and pussy. Damn, am I going to spend my life forever being ambushed by memories of girlfriends and relationships past?\n\n\"So, what happens now?\" Andi asks, breaking my reverie, \"Do we go to bed and, you know..?\"\n\n\"Would you prefer a drink first?\" I ask with a smile. This young woman still intrigues me \u2014 the way she seems to want to follow her own path, living in the moment and up for whatever life throws her way \u2014 and I find myself attracted to her because of that.\n\n\"Uh, yeah, sure,\" she replies uncertainly. I suspect that she might feel less awkward going straight to bed. I'm trying to tell myself that I'm trying to make her first night with another woman special but the truth is that it's me: I find myself wanting this to be more than a 'wham, bam, thank you, Ma'am,' one-night stand. However, that also means being sensitive to her situation. I step closer to her and brush her hair from her face, my fingers lightly stroking her cheek as I do so. I lean in to kiss her lips softly and I can feel the warmth of her body radiating against me.\n\n\"Or we could go to bed...\" I let the suggestion hang there. With a slight hesitation, her arm reaches around me, drawing us closer and she kisses me back.\n\n\"Yeah, I think that would be cool,\" she tells me as our lips part.\n\nTaking her hand, I lead the way, pushing open the door to the bedroom, glad that I'd left it tidy, though the duvet is still turned down where I left it this morning. I hadn't been sure I'd bring someone back tonight but I had hoped that maybe...\n\nAs Andi enters the room, I turn to take both her hands so I'm walking backwards, towards the bed. I sense nervousness and curiosity and, from the slight colouring of her cheeks, some excitement too. Good. I'll need to take the lead, of course, and seducing a woman to her first experience of lesbian lovemaking is wonderfully arousing, but I'd never want to make someone do something they really didn't want to do.\n\nThe backs of my legs touch the bed and suddenly, with a little laugh, Andi pulls her hands from mine and gives me a shove, making me topple back to bounce on the mattress. I laugh and pull myself further onto the bed. However, before I can reach out to invite her to join me, Andi surprises me again, clambering onto the bed and straddling me across my hips. Her fingers slide into my hair either side of my head and she is kissing me \u2014 not soft, tentative first kisses but ones full of lust and desire as her tongue thrusts into my mouth.\n\nShe kisses me hard as I respond happily and eagerly. Her right hand leaves my hair to grasp my boob, kneading and squeezing excitedly. This is very different from the nervous curiosity I expected from her but different in a very good way.\n\nI respond by reaching around her hips to grasp her bum, my fingers pressing into the taught, rounded flesh and I pull her even tighter against me as I push my hips up to feel the heat of her excited womanhood on my skin. She squirms, smearing warm dampness on me. I bring my right hand between us, reaching down to find her opening. Andi gasps as my fingers play over the swollen edges of her labia. \"Okay?\" I check as our mouths part momentarily.\n\n\"Uh, yes; I want you to stick your lezzie fingers up my cunt!\" she exclaims, making me grin; how can I refuse such a demand? \n\nTwo fingers slide easily into her hot and very wet interior. She is oozing girl cream to the point of dripping, as I feel it trickling between my fingers. \"Do you always leak this much?\" I ask, teasingly.\n\n\"Yeah, mostly... when I get, like, really horny.\" I feel her press down, forcing my fingers deeper as if to prove how aroused she is.\n\n\"Andi, I want to eat you out, eat that dripping cunt of yours!\" I tell her, filled with a sudden desire to feel my mouth flooded with her copious juices.\n\n\"For real? Yeah, I'd like that.\" Without hesitation, she knee-walks up my body to plant her pussy over my face. I admire the way her pussy gapes slightly to reveal a deeper red, with glistening, slightly milky droplets on the surrounding lips. I wriggle a little to bring my mouth into position and I can feel my own aroused excitement at the anticipation of tasting the succulent flesh above me. Andi, however, is in no mood for further delay as she presses her cunt against my mouth, smearing my nose, lips and cheeks.\n\nI thrust my tongue out, pushing it into her sex, twisting and probing. I tip my head back, opening my mouth to thrust as deep as I can. It also frees my nose so I can breathe and the smell and taste are suddenly intense and glorious. I clasp her thighs as I burrow my mouth into her, slurping and gulping every trickle and droplet that finds its way past my lips. \n\nI move my head so my mouth and tongue can explore her cunt fully, its length and depth and the hard stud of her clitoris at the top. All the time her juices ooze, and she squirms and grinds whenever I do something she particularly likes.\n\n\"Ahhhh-uuhhhhh-ahhhh-ummmm.\" Andi starts to mewl and moan and begins rhythmically rocking her hips to rub her sopping pussy against my mouth; she must be getting close and I do my best to match the rhythm she is setting. However, this doesn't stop my face from becoming increasingly slathered in her creaminess.\n\nI feel her thigh muscles tense and she gives a strangled cry as she begins to shudder and her vaginal muscles clamp tight, pushing my tongue out. I lick at the outer lips as her orgasm claims her. Then, as she starts to relax, I am treated to a little, unexpected bonus: a little spurt of her sticky juice flows over my lips, which I open hastily so as not to miss out on this treat. I am still licking my lips and swallowing as Andi topples to the right with a satisfied sigh.\n\nI turn my head to look at her as she lies with her eyes closed, a contented look on her face. I guess she enjoyed my efforts but I want more than just a guess: I want to know. \"Good?\" I ask.\n\n\"Mmmm, fuck yeah, your tongue is really good!\" She smiles and opens her eyes. I lean in to kiss her. \"Your face is all wet,\" she laughs.\n\n\"I know; I wonder whose fault that is?\"\n\n\"Yeah, sorry. I do get, like, a bit drippy down there.\"\n\n\"I'm absolutely not complaining, Andi; I loved it.\" I move closer until our lips are almost touching; I plant a brief, soft, Andi-flavoured kiss on her lips. Her tongue darts out, tasting. As I move closer again, she responds and we kiss fully and deeply this time. I am still very aroused and unsatisfied so the feel of her hand on my boob once again is very welcome. \n\nShe abruptly pulls away and sits up, and I open my eyes, worried that she's suddenly regretting this and intends to leave. However, her move is so she can reach between my legs to run her fingers over the smooth skin of my mound. I open my legs in encouragement; not, I suspect, that she really needs any as her fingers slide down and two digits slip into me without hesitation, plunging to their full length. She is clearly not going for any slow build-up here.\n\nI splay my legs wide, giving her full access. If she's not one for slow and sustained then the quick might as well be as intense as possible. Her next two thrusts make soft shlup sounds as her hand squelches into my now gaping pussy. I can feel her fingers deep inside me.\n\nThe rhythm of her pumping is suddenly broken and her fingers withdraw completely. They do not re-enter but instead slide along the length of my swollen, sensitive labia and on down, across my perineum to stroke my bum hole. The unexpected touch makes me tingle and I give a shiver of pleasure. This evidently encourages her, as she draws her hand back up, running her fingers in the groove of my pussy; then down again, repeating the first movement. This time, however, she surprises me by pressing on my now greased rear opening and I feel a subtle penetration that makes me gasp.\n\n\"You like?\" she asks.\n\n\"Uh, yes... I think so.\" She nods with an approving, slightly mischievous, smile, and presses a bit harder, nudging her finger a fraction deeper, before running her fingers back up, going deeper into my pussy this time. As her hand descends again I know what's coming and so I'm not surprised when her finger presses into my arsehole. I feel the ring of muscles reflexively tighten and try to will them to relax. \n\nAfter a moment or two, it works but her hand is already travelling back up again. When her hand descends the next time, I'm ready as, sure enough, her finger enters my arse again, more easily this time and certainly more pleasurably. I'm not sure but it feels like she's got the length of her short fingernail inside me. I've had girlfriends caress my bum hole before, but never this... fingering. I wonder if this is something Andi likes having done to her? It feels unexpectedly good, so I guess I've been missing out.\n\nHer routine continues. After her previous haste and impulsiveness, she is unexpectedly, and thankfully, patient. Nevertheless, it isn't long before the touch of her hand against my bum tells me that she has the full length of her finger inside me. This time, however, there is no withdrawal. Instead, she gently wriggles her finger and it feels like... well, like nothing I've ever felt before but amazing nonetheless. A moment later, I feel my pussy being penetrated as two fingers of her other hand slide in. She begins pumping, slowly and steadily.\n\n\"Oh, fuck; that feels incredible!\" I gasp. \"Fuck me, Andi; make me cum!\"\n\nAndi gives a little laugh, continuing as I raise my knees, spreading myself wide open to help and encourage her. Already, the first trembling spasm of my orgasm is beginning. Andi continues and, a minute later, my climax crashes through me, making me cry out. I feel her finger slip from my arse, but whether this is her withdrawing or my convulsing muscles forcing her out, I do not know.\n\nI savour the intensity and release of the orgasm because, while masturbation is nice, it's not the same as being with a lover. I am still breathing heavily, the final tingling waves of my climax ebbing away, as I feel Andi move to lie alongside me as she pulls the duvet over us both. \n\n\"Thank you,\" I tell her as we cuddle together and I feel drowsy and content. Yeah, this is the other good bit of being with a lover...\n\n PART II \u2014 An ending and a beginning\n\nSaturday 14 November\n\nI surface slowly from my deep sleep to the pleasant feeling of warmth beside me and the soft sound of breathing in the quiet darkness. Andi is lying on her side, facing away from me and still fast asleep. As consciousness returns, I feel the stirrings of anxiety. How will Andi react when she wakes? Will she regret sleeping with me? Was this a one-off experiment for her? Will she, could she, become my girlfriend? Will she...\n\nStop it! Have I learned nothing from my experiences with Jojo and Jan? I know almost nothing about her and here I am about to create a fantasy future with her. Better if this stays just a one-night thing and we say goodbye in the morning. Still, there is something about her, something intriguing and attractive, a sensuality that draws me and excites me. What if she is open to a gay relationship?\n\nWith a sigh I turn onto my side, my back to Andi, as I try to still my thoughts and quell the butterflies of excited infatuation in my stomach that will make sleep difficult if not impossible. The glowing figures of my alarm clock tell me that's it's just past five-thirty in the morning and I don't know if the day will be here too quickly or if it cannot come soon enough...\n\nI must have dozed off again because when I open my eyes there is faint daylight glimmering around the curtains. Andi has sat up beside me, cute and sleep-tousled. \"Morning,\" I say, trying to keep the spike of nervousness from my voice. I need to get a grip, find the straightforward, uncomplicated attitude to sex I've had with other one-night stands: it was fun, thank you and goodbye... \n\n\"Hi, Tina,\" she smiles and, unexpectedly, bends and kisses me. \"I ought to get going. Can I, like, use your bathroom?\"\n\n\"Uh, sure. It's on the left, across the hall.\" I gesture vaguely, disappointed that she's so keen to leave. \"Can I get you a drink? Tea, coffee, some toast maybe...\"\n\n\"Thanks, black tea would be good. Yeah, and some toast; I'm starving!\"",
        "I watch for a moment as she climbs from the bed and walks naked from the room. She has a very attractive bum but it doesn't look like she's interested in making love this morning so I had better make the promised tea.\n\nI'm standing by the kettle, my mind who knows where, when there are soft caresses on my hips that startle me. \"Sorry, I didn't mean to make you jump,\" Andi apologizes, smiling.\n\n\"No, I was just miles away.\" The kettle's noise increases as it begins to boil. As it clicks off, I lift it to slosh water into the two mugs, the tea bags instantly staining the water golden-brown as they spin slowly. \"Andi, are you okay? I mean, with, you know, last night?\"\n\n\"Yeah, sure. It was nice... very different, you know?\"\n\n\"So, would you... again? Sleep with a woman, I mean.\" No, what I actually mean is would she consider sleeping with me again, but I cannot say that. \n\n\"Yeah, I reckon so. I mean I not looking for a relationship, you know, but maybe some sort of occasional girlfriend would be cool, yeah?\"\n\nI'm not sure what all that means so I busy myself with the tea to allow some time to think. It sounds like she'll see me again but isn't ready to commit to a relationship. Okay, fair enough: this is all new to her and I need to give her time \u2014 she may have just ended another relationship or be scared of what being in a lesbian relationship might mean, nervous of how friends and family might react. I add the milk to my tea. \"Um, you don't want milk. Sugar?\" I ask.\n\n\"No thanks.\"\n\n\"Okay. Now, toast. I've only wholemeal bread, I'm afraid.\"\n\n\"That's fine, thanks.\"\n\n\"We didn't do much talking last night, did we?\" I observe as I drop two slices of bread into the toaster. \"What do you do with yourself when not dancing by yourself in random nightclubs?\"\n\n\"Or being picked up by lesbians!\" she laughs and I smile too. \"In fact, I'm taking a gap year. I've got a place at university but I'm not ready to go just yet; I'm working, just as an office assistant, but I want to travel too, maybe South America or the Far East, I haven't decided yet. What about you?\"\n\nI tell her of my job, trying to make it sound moderately exciting but failing miserably. Then she asks if I've always been a lesbian. \"Well, I've never had a boyfriend,\" I smile. \"I guess I must have been about fourteen or fifteen when I started to understand that it was only girls I was attracted to.\"\n\n\"Ever been with a guy?\"\n\n\"No, not even as far as kissing. I went to an all-girl Catholic school, which I guess was a mixed blessing,\" I tell her, with a slightly grim smile at the memories. \"On one hand, there were always girls around, which I liked, and we were always being warned by the nuns about the sinfulness of sex outside marriage and the risks of pregnancy, so lots of girls didn't start having boyfriends until they were in Year 10 or 11, by which time I knew I didn't want one. The downside was the homophobia: being called a 'lezzer' or a dyke was one of the worst insults there was,\" I sigh.\n\n\"What happened?\" Andi asks, intrigued. I notice she seems very at ease, standing here naked in my little kitchen.\n\n\"I'd like to say that I stood up to them all and declared my right to love whomever I chose but, no: I kept my head down, told everyone I wanted to do well in my exams and a boyfriend would be a distraction; being called a swot and a boffin was the safer option than making myself a lightning rod for the homophobia in that place.\"\n\n\"What about your parents?\" she asks. I cannot help but wonder if she's thinking about perhaps having to come out to her parents one day and there's a temptation to pretend it was easy. However, that wouldn't be fair on her. The toast pops up, momentarily distracting me.\n\n\"Butter?\" I offer and she nods. \"I was nineteen when I came out at home,\" I tell her as I spread the butter, \"and, well, Mum and Dad found it hard. They didn't call me disgusting or reject me, not exactly, but they simply wouldn't talk about it and acted as if it was just something I'd grow out of. They made it clear that they didn't approve, that they were... disappointed in me. I found that hard; they had always seemed so proud of me before but after I told them it was as if my being gay was somehow a failure, that I wasn't good enough anymore...\" \n\n\"Do they still feel that way?\" she asks.\n\n\"They're both dead now,\" I say, and cannot keep the hard flatness from my voice.\n\n\"Oh, I'm sorry. Um, were they your only family?\"\n\n\"I have a sister who... well, let's just say we don't talk anymore. I also have an aunt, Paulette; she and her husband were brilliant, they still are. She tried to talk to Mum but it didn't really help. Paulette thought that they both felt guilty, that they must have done something wrong to make me a lesbian.\"\n\n\"That's not how it works, is it? Thanks,\" she adds as I hand her the plate of toast.\n\n\"No!\" I smile momentarily while I add more bread into the toaster for myself. \"My parents aren't a good example and other parents are available!\" I smile, trying to lighten the mood. \"Yours, I suspect, are much more open-minded.\"\n\n\"Maybe,\" she concedes. There is silence for a while, as Andi eats and I prepare toast for myself. \n\n\"So, got much planned for your weekend?\" I ask, trying to end the awkward silence.\n\n\"Uh, a few things,\" she says. \"I'm thinking of getting my hair dyed, and I might go shopping, you know. What about you?\"\n\n\"Well, not much. Maybe I'll go swimming again.\"\n\n\"Again?\"\n\n\"Yes; I go a couple of mornings a week and do fifty or sixty lengths,\" I explain. I guess I'm showing off a little as I add, \"I could do a bit more today, seventy or eighty, maybe.\"\n\n\"Wow, you must be a really good swimmer,\" she tells me, evidently impressed, and I give a modest shrug.\n\n\"What about you? Do you swim?\"\n\n\"Me?\" she asks with a derisive snort. \"Just about, I guess. We were supposed to have lessons at school but they were a bit crap, you know? I wish I could swim properly 'cause I'd love to try scuba diving, yeah?\"\n\n\"One of your gap year plans?\" I ask.\n\n\"Kinda. I guess it's more something I'd love to do, you know, somewhere with loads of fish and stuff.\"\n\n\"Well, you know, Andi, if you ever wanted to try to improve your swimming, then I'd be happy to help.\" I try to make the offer sound casual but it would mean I'd see her again. And the thought of her in a swimsuit... \"I'm not a swimming teacher or anything but I reckon I know enough to help someone improve.\"\n\n\"You reckon? Yeah, that'd be good.\" She pops the last of her toast in her mouth. \"I guess I ought t get going.\"\n\n\"Do you want a shower to freshen up?\" I suggest.\n\n\"Hmm, yeah, good idea.\" \n\nI lead the way to the bathroom, where there is no bath, just the large, walk-in shower. \"There you go. There's shampoo and shower gel on the shelf on the side,\" I point out. \n\n\"That looks like a suspiciously big shower for a small flat,\" Andi observes wryly. \"Ever had company in there? Ha, you're busted!\" she laughs at my expression.\n\n\"Okay, maybe a few times. Why, do you need help washing your back?\"\n\n\"Sounds like fun,\" she replies, which is all the encouragement I need. I take her hand and draw her into the cubicle where I turn the water on, angling the showerhead down for a minute until the water runs warm. Turning, I place my hands on her hips and gently pull her towards me, under the spray of water. I am a little nervous as I want this to be not about just sex; I want this to be intimate and affectionate, an expression of more than just carnality.\n\nOur bodies meet, the warm water flowing over and between us, and the feel of her slippery flesh against mine is exquisite. I wrap her in an embrace and she responds in the same way so that the meeting of our mouths in a deeply passionate kiss is wonderful and mutual. \n\n\"So, what about that back-washing?\" Andi asks when our lips finally part.\n\n\"Of course,\" I reply, slipping around her to reach the shower gel. I flip the cap and squeeze some over her shoulders and back.\n\n\"That's cold!\" she complains with a giggle.\n\n\"Hmm, I'd better warm you up then.\" I run my hands over her back, spreading the pale, viscous liquid over her skin. I slide my arms around her to cup her boobs, lathering them and feeling the bone-hard buttons of her nipples. My hands run down, over her tummy and back across her hips to her bum. As my fingers caress the firm, rounded flesh she gives a soft sigh and she bends forward slightly, pushing her arse back, parting her cheeks a little and allowing my fingers to trace that soft, intimate valley.\n\nShe gives another sigh, deeper this time and I recall her fingering my bum last night. I press firmly as my hand slips down and my fingers glide slickly across her puckered opening, down and then up. \"Mmmm, yes!\" she gasps, and I feel her anus flex, not tightening as mine had but swelling and opening slightly.\n\n\"Your bum really wants my finger inside it, doesn't it?\" I whisper, \"but I don't want to hurt you.\"\n\n\"You won't, Tina; my arse is a complete slut and will love it,\" she laughs.\n\nI make sure my finger is slick with shower gel before returning to her still-pouting opening. The fingertip fits into the crater-like ring, but I hesitate. Andi, it seems, is having none of that and pushes back again in impatient encouragement. I press and my finger slides smoothly into her hot, tight interior. \"Oh, fuck, I love it,\" she says happily. I feel her hand touching my legs, groping blindly behind her, searching for my pussy. I guide her hand, edging it closer until her fingers find the top of my slit. I reach around her with my left hand and down to find her cunt and the hard nubbin nestling within.\n\n\"Oh, yes, more...\" she gasps. My finger is buried full-length in her arse, pumping softly and I am rubbing her clit at an increasing rate as she squirms against me. Her fingers are clumsy, nudging into me just enough to brush my clit from time to time; it's far from unpleasant and the whole situation is wildly sexy. However, I doubt I'll be getting to orgasm, certainly not before Andi does. Never mind, this is for her and the hope that there might be other times...\n\nHer anal muscles clamp my finger tightly enough to make it tingle. Her whole body goes rigid and she gives a strangled scream. I continue to play her clit for another half minute before she pulls away, my fingers slipping from her as she sinks to her knees, gasping.\n\n\"You okay?\" I ask and she laughs breathlessly.\n\n\"Shit, yes. My legs stopped working though!\" I squat down beside her to give her a kiss, soft and affectionate.\n\n\"It was good then?\"\n\n\"Mmm very. Thanks, Tina.\" She rests her head on my shoulder for a moment but the floor of the shower isn't the most comfortable of places and I'm soon helping her up. She reaches for the bottle of shower gel. \"Let me do your back,\"\n\nIt's pleasantly intimate but I try not to be disappointed when it quickly becomes clear that she's happy to stick at just washing me. She had said she needed to get on, I remind myself, and this is her first lesbian experience, so I shouldn't press her to go further. Still, it's bloody frustrating.\n\nDried and dressed, she shows even less inclination to recommencing anything sexual, and though she accepts my lips on hers in a parting kiss, there isn't the spark of passion there. \"Here, let me give you my phone number,\" I offer, writing it hastily on a small piece of paper with my name, \"in case you were serious about swimming lessons or... you know, if you want to go dancing again...\" I'm annoyed that I sound so desperate and even more irritated at her neutral reaction.\n\n\"Uh, yeah, sure. I mean, I've kinda got a lot on, yeah?\"\n\n\"Yes, I understand, absolutely,\" I tell her, my heart sinking as the scrap of paper disappears into her pocket.\n\nThere's a parting hug, then a final, almost formal kiss but then I'm closing the door behind her with an empty, sinking feeling. Bollocks, I genuinely thought she might be interested. Tina Roberts, you are a dozy bitch: why can't you learn that falling for bi-curious and newbie-gay-girls is a recipe for pain and disappointment?\n\n Wednesday 18 November\n\nMy phone, set to silent, of course, buzzes softly where it vibrates against the desk. The sudden skip in my heart at the sound is becoming irritating and I find myself getting annoyed: annoyed that she hasn't called me and annoyed that I keep thinking she will. I should just ignore it but, equally annoying, I cannot help but flip it over to see the screen.\n\n<blockquote>Ms Roberts, your monthly credit card statement is now available. To view it online...</blockquote>\n\nSee, I was right: it wasn't her. I put the mobile down and turn back to my PC. It's never going to be her, so I should just get the fuck over it and get on with my life. She... I look up at the soft tap at the office door to see Jan standing there, a strange on her face. \"Hello, Tina.\"\n\n\"Hi Jan,\" I say, keeping my voice calm and hurriedly changing my expression to that of a composed, professional woman, or so I hope. \"What's up?\" I ask\n\n\"Um, well...\" she bites her lip and I wonder what's making her so nervous. \"I, I mean we, Tanwen and I that is... well, I know it's a way off yet but we wondered what you were doing for Christmas, we were.\"\n\nI can't help smiling at the way Jan seems to be picking up some of Tanwen's idiom already. \"I'm not sure,\" I reply. \"Why, are the two of you planning more time off?\"\n\n\"Oh no, it not that. I meant what are you doing on Christmas Day?\"\n\n\"Oh, well...\" I reply, looking out the window and thinking hard. The truth is, I don't know. In the absence of any significant other in my life, it would most likely have been with Paulette and Colin, but they have already left on their epic circumnavigation and won't be back until the new year. I turn back to Jan. \"Not much, probably,\" I admit. \"Why?\"\n\n\"Well, Tan and I were wondering if you'd like to join us... for Christmas dinner, I mean?\"\n\n\"But, this will be your first Christmas together; surely you'll just want it to be the two of you?\"\n\n\"It'd never be just the two of course; there are Jake, Eryn and Tilly too,\" she smiles.\n\n\"Yes, but you know what I mean, and I doubt the kids will want me there,\" I point out, remembering the suspicious looks I'd received when the three of them had arrived at the house near Salisbury with Tanwen. I'd invited Tanwen, so she was surprised to find Jan there, whereas the children were quite happy with Jan's presence but decidedly unsure about me.\n\n\"Tina, I know children aren't your thing but.... Well, the offer is there.\"\n\nOf course, there's the elephant in the room here: my feelings for Jan. I know that letting her go and helping her and Tanwen find each other was kind and good; Paulette had certainly thought so when I'd spoken to her on Sunday. However, while my head tells me that Jan's deep need to be a parent would have gnawed away at our relationship over time, my heart isn't so logical \u2014 even though I slept with Jan just twice and our love affair lasted barely a week. On the whole, they've remained remarkably and surprisingly reserved with each other whilst here in the office, but am I ready to encounter them being all loving and affectionate in the way I'm sure they are at home?\n\n\"Please, think about it, Tina. Tan and I owe you such a lot...\" Jan has a pleading note in her voice and a nervous smile. It occurs to me that she may feel a little guilty about choosing Tanwen over me and the happiness they have together. No, this really could be too much\n\n\"Thank you, Jan, I...\" I hesitate, \"...I will come, if you and Tanwen are sure that I won't ruin your day,\" I find myself replying, to my amazement. Why did I say that?\n\n\"Oh, good,\" Jan says, and she seems genuinely happy. \"Tanwen will be pleased, too, she will.\"\n\n\"And the kids?\" I ask. \n\n\"Well, I'm sure they'll be fine, once they get to know you. You can be Auntie Tina.\"\n\n\"Oh, please, no: not Auntie!\" I tell her firmly.\n\n\"Okay, just Tina then. I'll go and make the tea.\" She leans over to grab the mug from my desk and hurries off. I watch her as she walks away, the dark, snug-fitting trousers showing the curved form of her bum... Why did I accept her invitation? Am I mad? It seems like madness, and yet... I don't know. I certainly wasn't looking forward to Christmas alone but I'm not sure three kids will be much better. Oh well, I'm committed now. \n\n Monday 23 November\n\n\"I'm just going out for an hour,\" I tell the office in general as I turn and head out of the door. I know that I've been, to put it bluntly, a miserable cow this morning and this is not just down to the normal Monday blues. It was a horrible weekend and it's all Andi's fault. Okay, it's not really Andi's fault but my own stupid obsession, and the recurring hope that she'll phone. Obviously, she hasn't.\n\nOn Friday I went to Quixote's, but she wasn't there, and neither were Michele or Frankie nor any of the others I know well enough to socialize with. I tried dancing in the corner beyond the pillar where I'd met her as if, somehow, that would summon her to me but it didn't work and I couldn't relax into the music either. After about half an hour I gave up and went home. \n\nThe rest of the weekend wasn't any better and even my sleeping was unsettled and restless.\n\nI had planned to go swimming first thing this morning but overslept, having finally fallen deeply asleep well after midnight and my alarm being too easily silenced. Therefore, I am going to spend my lunchtime swimming in the hope that exercise will: a) lift my mood \u2014 something that will no doubt please my colleagues \u2014 and b) help me to sleep better tonight.\n\nI turn right into Market Street, the gusting wind blowing cold rain into my face, making my cheeks tingle. I'm heading to the Leisure Centre and its swimming pool. Hopefully, it won't be too busy.\n\nI bow my head against the rain and hitch the little rucksack \u2014 containing my swimming costume, towel, shampoo and deodorant \u2014 a little higher on my shoulder. Every dozen steps or so I raise my head and I look around. The street is busy, and I notice quite a few of the shop windows declaring BLACK FRIDAY SALE in various wordings and typefaces. Whether Black Friday was last Friday or next, the shops are clearly milking it for all it's worth.\n\nI also notice, rather depressingly, that the shops and the lampposts already have Christmas decorations, the lights twinkling dimly in daylight. A flash of blue catches my eye, my head swinging sharply back in a double-take, although at first, I don't know why. It's only as the dash of colour resolves into a royal blue duffel coat with long, dark hair spilling over the shoulders and thrown-back hood that I understand. \"Andi!\" I gasp, quietly. She's walking on the opposite side of the road and without thinking, I hurry towards the pedestrian crossing and start to cross rapidly, as soon as the lights halt the traffic. By the time the green man gives me permission to leave the pavement, I'm already stepping onto the opposite kerb.\n\nI try to act casually as hurry along the pavement towards Andi. She passes Top Shop and just beyond, so suddenly that I almost miss it, she enters Starbucks. I approach, nonchalantly glancing into Top Shop's window as if something has caught my eye. I take a deep breath. Am I going to do this? Am I going to 'accidentally' bump into Andi? She never bothered to call me, so she can't have wanted to see me again, can she? Am I really some sad, thirty-something lesbian stalker? Despite the arguments of logic, good sense and dignity, there is an inevitability in my stepping through the coffee shop door a few moments later.\n\nShe is queued at the counter, looking up at the list of drinks on the wall behind it. I cannot help noticing that her hair has not been dyed, despite her declared plans for that Saturday a week-and-a-half ago. \"Andi?\" I say as if suddenly realizing that it's her.",
        "She turns her head sharply and an apprehensive look appears on her face. \" Er, Tina, hi...\" \n\n\"How are you?\" I ask, trying to keep my tone light and without any hint of the unspoken, 'you never called me,' accusation that part of me desperately wants to blurt out.\n\n\"Oh, er, good, I guess... Um, you okay?\" She looks back up at the menu, clearly uncomfortable and the complete antithesis to the poised and confident young woman I'd met ten days ago.\n\n\"Reasonably well, all things considered. Been dancing recently?\" The question slips out before I can stop it and I curse myself. However, before she responds, the man behind her speaks.\n\n\"Wha's up, Ali? Who's this?\" The guy is tall with dark, tangled hair, stubble-covered chin and deep brown eyes, his large frame draped in a dark, grey-blue woollen trench coat. He gives me an inquisitive, slightly wary look.\n\n\"This is, er, a woman I met her at a nightclub once. I was dancing on my own and she was on her own too so we, er, we talked a bit, is all.\" She gives me a meaningful look before turning her head to the man. \"She's not, like, really a friend or anything.\"\n\nThe guy laughs. \"Another of your random, weirdo acquaintances, eh Andi?\"\n\n\"Yeah, that's right: just a random acquaintance,\" she confirms.\n\nI should make an excuse \u2014 feign a remembered appointment or something \u2014 and just walk away. I know that my infatuation with this girl was stupid, but I am tired of being used and rejected. I feel hot anger bubbling up inside me.\n\n\"Let's be honest here, Andi,\" I snarl as I force myself to keep my voice quiet, \"I wasn't just an acquaintance, not unless you stick your finger into all your acquaintance's arses as you finger their cunts!\" I can see from his face that the guy heard me. He looks perplexed for a moment and then works out what I meant; his perplexed look is quickly replaced by one of upset. Good.\n\n\"You bitch!\" she hisses back, but I am already turning away.\n\nI walk, fast and hard out of the coffee shop and along the road, breathing quickly as I steer towards the swimming pool. There's no sobbing, but I'm not sure if the dampness on my cheeks is just the rain.\n\n<center>+ + + + + + + + + + + +</center>\n\nI try to focus on the page in front of me but I keep remembering Andi's face as I turned away: I'd certainly caused her problems, and though I probably shouldn't be, I'm a little bit proud of my spiteful comment about a finger up my arse whilst finger-fucking me: how's she going to explain that to the guy I'm pretty sure is \u2014 or was \u2014 her boyfriend?\n\nIt was, of course, a hollow victory and I'm just as on my own as I was before this lunchtime's brief encounter. However, whether it was the swimming or the fact that I need no longer wonder if Andi will call me again \u2014 ever! \u2014 I do feel better than I did this morning.\n\nMy stomach gives a small rumble and I reach out to grab the packet of cheese and onion sandwiches that hurriedly bought on my way back from the pool. I'd spent forty-five minutes swimming, which meant, given the time spent getting changed and the journey to and from the pool, that I was very late back to the office. Ripping open the packet, I can see that they're never going to come anywhere in a 'Best cheese-based sandwich' competition but I was in too much of a hurry by then to pick and choose.\n\nI take a bite, and despite being rather bland and a bit dry, it tastes surprisingly good. I guess it proves one of Aunt Paulette's favourite sayings: hunger makes a good sauce.\n\nThe phone on my desk rings. \"Hello, Tina Roberts speaking.\"\n\n\"Ah, Tina, it's Amita.\"\n\n\"Yes?\"\n\n\"Could you come down to reception, there are some people to see you.\" Oddly, Amita sounds a little nervous.\n\n\"I'm not expecting anyone,\" I reply, desperately thinking back to be sure that I haven't forgotten something. \"Who is it?\"\n\n\"Um, it is some policewomen.\"\n\n\"Oh... What do they want?\" What could they want with me? Oh, crap, this isn't something to do with Andi, is it? No, it can't be.\n\n\"They will not say, they just want you to come down so they can talk to you.\" I hear a muffled voice in the background \"She said to tell you that you're not in trouble or anything.\" Well, they would say that, wouldn't they?\n\n\"Okay, I'll be down in a minute,\" I hang up and walk into the main office. \"There's someone at Reception to see me, apparently,\" I tell Jan and Malcolm. Malcolm grunts an acknowledgement and Jan just says okay. \n\nOn the way down, I'm torn between an urge to run and find out what this is all about and a desire to walk at a snail's pace, for fear that I've inadvertently done something terrible. As promised, at the Reception desk are two women in police uniform. They don't instantly seize me and slap me in handcuffs, but my stomach remains a tight, anxious knot because I can tell it's something serious. \n\n\"Ms Roberts. I'm Constable Williams and this is Constable O'Connell,\" the pale, taller and slightly older of the two policewomen tells me. I glance at Constable O'Connell, whose dark skin seemed at odds with an Irish surname, and she gives me a half-smile and slight shrug as if she can read my thoughts. \"Is there somewhere private we can talk?\" Constable Williams asks.\n\n\"Er, is the little meeting room free?\" I ask Amita, who looks down at her computer.\n\n\"Yes, it is not booked at all this afternoon.\" I nod in thanks and lead the way.\n\nIn the meeting room, after the door is closed, there's a moment of silence before Constable Williams speaks; \"Can you just confirm your name and address please?\"\n\n\"Uh, Tina Elizabeth Roberts, thirty-four, Orchard Road, Ashington. Look, what is this?\"\n\n\"Would you like to sit down, Ms Roberts? I'm afraid we have some bad news,\" PC O'Connell tells me, pulling out one of the chairs.\n\n\"No, I'm fine standing,\" I reply, \"Just tell me whatever it is, please.\"\n\n\"It's your sister, Philippa. I'm afraid she died this morning. We need you to come to the police station.\" \n\nI stared dumbly for a moment, unable to take in what she said. \"Died? Pippa?\" I manage. \"No... how?\"\n\n\"We're not certain yet but... well, she left a note, so it was probably suicide,\" It is the other policewoman speaking now, her tone soft, sympathetic and a little sad. \"The note was addressed to you, but we had to examine it. You understand?\"\n\nI nod. \"Can I... can I see the note?\"\n\n\"It's at the station \u2014 to be honest, it's a piece of evidence at the moment,\" Constable Williams says. \"We hope you will be able to confirm that it's her handwriting.\"\n\n\"I'm sure we can give you a copy of it, though,\" Constable O'Connell adds. \"Will you come?\" I nod again \u2014 it's all I can manage. I feel... numb. Perhaps this is what they call shock.\n\n\"I, um, I just need to go back up to get my coat and bag...\" I gesture vaguely out of the door.\n\n\"No problem, Madam. We'll wait here for you.\"\n\n<center>+ + + + + + + + + + + +</center>\n\nI stare out of the small, rain-streaked interview room window at a tall, muddy-grey building opposite and a darkening, leaden-grey sky. The colouring seems entirely appropriate to my mood. Even the twinkle of the stupidly premature Christmas lights in one distant window does nothing to lift my mood.\n\nI still can't quite believe Pippa is dead. I knew, through Paulette, that she'd had problems in the past with depression, bad relationships and alcohol and, I suspect, other drugs too. I try to comfort myself with the fact that at least I'd made the occasional effort to get back in touch with her since Dad's death, but I know I could have -should have \u2014 tried harder. Too late now.\n\nAfter Dad's funeral, Pippa and I had spoken a few times; briefly and frostily on each occasion. As her dislike of me, of who I was \u2014 or rather, what I was \u2014 never relented, it was easier not to talk to her.\n\nAnd now this: her sudden, unexpected death and the equally unexpected \u2014 incredible, in fact \u2014 letter to me. I could have done more as a daughter and as a sister. And as an aunt, too, I guess. Well, all those failings seem to be coming back to haunt me. \n\nPippa... dead. Suicide, the police believe, by an overdose of something \u2014 antidepressants, painkillers or something illegal; a post-mortem will be needed to confirm. A neighbour found her, apparently, after seeing the door to her flat was open. Perhaps she'd done that deliberately to make sure she was found before her daughter returned home from college.\n\nI look down at the copy of the letter that Detective Constable Webber had reluctantly provided after interviewing me. He'd been a florid, somewhat overweight man dressed in a crumpled suit, with his tie loose around the slightly grubby open collar of his shirt. It had felt like I was an unwelcome but necessary formality for someone who already had ten things to do and only time for four of them. Well, being here wasn't exactly something I'd chosen either.\n\nMy eyes fall on the piece of paper, and I can't help re-reading Pippa's final message to me, her suicide note...\n\n<blockquote>Dear Tina,</blockquote>\n\n<blockquote>I don't know what you'll be thinking or feeling when you read this \u2014 angry, sad or simply pissed off that your big sister has fucked up \u2014 again \u2014 and let everyone down \u2014 again. Whatever you're feeling, I'm sorry.</blockquote>\n\n<blockquote>I'm sorry that I was angry with you about Dad's passing. I know you did as much as you could for him, even though he and Mum weren't always kind to you. I think, in truth, he was always proud of you \u2014 as much as he was disappointed in me. I'm sorry but I was jealous. I wanted them to be as proud of me as they were of you, so when you told them about you and Rowan, I thought that was my chance to be the favourite daughter.</blockquote>\n\n<blockquote>But then Mum died and then Dad, and with them gone it was easier to be angry at you than at them -- especially him for just giving up on life. I needed him, I wanted to make him proud of me too and he took that chance away from me. I'd have been a better person if he'd been there, I know I would. A better mum, too.</blockquote>\n\n<blockquote>I guess I now understand how he felt: life is just too hard and I've screwed up on everything and everyone, especially Alice. I wish I could go back \u2014 back to when we were girls, when we played together, when the biggest tragedy was wishing I'd chosen chocolate ice cream instead of strawberry and when you looked up to your big sister. I'd make better choices a second time around, I know I would.</blockquote>\n\n<blockquote>I've always loved you, always, deep down, always been proud of you and envied you in equal measure. You're the better person and that's why I must pass on to you the one good thing I've done in my life \u2014 Alice. I should probably have done this so sooner, given her a chance to have you as a role model, a life of stability and not wondering what state her mother will be in when she gets home, or wake up in the morning to discover what scumbag her mother has spent the night with.</blockquote>\n\n<blockquote>And this is where I must ask you for something that, if you don't hate me already, you really will now. I haven't been a good mother and Alice has lost out because of that. I know she's always resented that we're poor, that she can't have the things her friends have and that I've spent money on drink and even drugs sometimes, just to numb the pain. I have neglected her and been unfair and unkind. More than that, I know she isn't safe with me, not with the men I know, not with men who tempt me with drugs or money but look at her with cold lust in their eyes. And last night. No, I cannot think about what might have happened to Alice if I hadn't woken up. That's why I want you to take her, to adopt her and become the mother to her that I should have been.</blockquote>\n\n<blockquote>I know this is so much to ask. You have your career, just as when Dad was ill but Dad had already given up on life, but Ali hasn't given up, not yet, and she has so much potential, so much to live for, given the chance. Yes, she can be angry and unreasonable, yes, she's getting into trouble at college \u2014 she's a teenager and her mother's daughter after all \u2014 but she's not yet out screwing men and doing drugs and you can keep her from that and inspire her to achieve her all she can be. Don't let her make the same stupid mistakes I have.</blockquote>\n\n<blockquote>Goodbye Tina. Tell Alice that I love her and try to make her understand that I'm doing this for her. Perhaps, in time, you will both forgive me.</blockquote>\n\n<blockquote>Love, Pippa xx</blockquote><br>\n\nI blink and take a shuddering breath. My emotions tumble \u2014 sadness, anger, guilt, fear and confusion. I don't know if I should scream, cry, shout or run away and hide. How dare she put this on me? How could I have been so selfish? How can I possibly become a mother to a girl I don't know and have met only a handful of times and all before she'd even started school? How can I not at least try?\n\nI glance up as the door opens and a woman enters. She's dressed in dark trousers and appears to be a fan of layering, with a coat over a jacket, over an open shirt over a tee shirt. She holds out a hand. \"Hi, Tina Roberts? I'm Bernadette Riordan. I expect you've been told why I'm here?\" She has a soft Irish burr and I shake her hand uncertainly. \"I'm from Social Services... regarding Alice Roberts....\" I nod. \"I'm very sorry for your loss, Tina \u2014 may I call you Tina? \u2014 Please call me Bernie. We need...\"\n\nI hold up my hand to stop the rapid flow of words and, thankfully, she pauses. \"Look, Bernie, I... I don't know about any of this. It's all been such a shock and, well, I don't know the first thing about being a parent.\" I finish plaintively. She looks at Pippa letter and nods in understanding, suggesting that, like the police, she's read it.\n\n\"What parent does, when they start out?\" She takes a moment to move a chair and sit next to me. \"Listen, Tina, we do understand, but there are several considerations here. First, you are a blood relation and your sister expressed her desire that Alice be with you. A family connection can be important and the fact that she knows you...\"\n\n\"But she doesn't!\" I interrupt. \"She cannot have been more than four or five when I last saw her. She doesn't know me and I don't know her!\"\n\n\"Hmm... well, that's not so good. Tina, let me be honest here: Alice's needs are paramount \u2014 we want the best outcome for her. It seems that her home life was, how can I put this, a little chaotic. In an ideal world, she would have come to our attention sooner. What she needs is some safety and stability right now and a relative \u2014 her closest relative, I believe? \u2014 maybe the best. That said, you need to be happy with that, and we need to be sure that you are suitable.\"\n\nI swallow uncomfortably, my mouth suddenly dry: I hadn't thought that I would be being assessed and judged. Wait, what am I thinking? I've never wanted children \u2014 that was why I let Jan go... Oh, fuck.\n\n\"And, um, if I'm not suitable?  What happens to Alice then?\" I ask, trying to squash the idea that if this had happened two months ago, Jan would have wanted me, not Tanwen.\n\n\"We'd look to find foster carers but,\" she gives a small sigh, \"for the time being, it would have to be a children's home. Listen, Tina, this isn't simply a case of you saying yes and me agreeing that you're suitable: Alice also gets a choice so why don't we go and meet her? She should be here by now.\"\n\n\"She's coming here? Now?\" I ask in surprise. \"I mean, yes. I'd like to see her but at a police station?\" I do want to see her but didn't expect it to be right here and now; I'm suddenly as nervous as hell.\n\n\"It's not ideal, I know, but it was practical. Given some of the things in Philippa's note, the police had to ensure that Alice was safe,\" Bernie tells me. She touches my arm in reassurance. \"I know this isn't easy but remember that whatever happens today isn't final. If Alice stays with you, we'll meet with you and her regularly to be sure it's working. If she goes to a children's home, well, she might change her mind and decide that she'd like to try living with you. I know that might be hard, but...\"\n\n\"It's about her and her needs, I get that,\" I interrupt, my anxiety making me impatient.\n\n\"No, that's not true: it's about you too but, sure, there's a price to being an adult, isn't there? Come on, let's meet your niece.\"\n\nBernie leads me upstairs to another room. I'm unsure what this room is normally used for \u2014 it's not much bigger than the interview room downstairs but it has a small sofa, two armchairs and a coffee table, making the room crowded: maybe it's a staff room or perhaps for situations like this.\n\nThere's another woman \u2014 a colleague of Bernie's, I assume from the way they greet each other by name \u2014 and there, on the sofa, a sullen-looking girl. She is wearing black, ripped jeans \u2014 the ripping is probably a fashion thing as, although the jeans aren't new, they don't look to have seen that much hard wear \u2014 and a dark green, heavy-knit jumper with the sleeves pulled down over her hands. Her dark hair dark is highlighted orange at the ends and hangs down over the right side of her pale face. From this angle, I can't see much of her face, though the profile reminds me uncomfortably of Pippa when we were young. I catch the glint of a ring in the side of her nose and two piercings in her ear.\n\nBernie calls her name and she looks up, her eyes meeting mine but her expression unreadable. \"This is your Aunt Tina,\" Bernie tells her, and I cringed inwardly at the title.\n\n\"I, er, I don't think you need to bother with the 'Aunt' bit, Alice,\" I say, trying to keep my voice calm and friendly.\n\n\"Hi,\" she replies curtly, then looks down again.\n\nThe second woman \u2014 Shalu, Bernie had called her \u2014 turns to Bernie and me. \"I have explained the situation,\" she says quietly, the faintest trace of an Indian accent detectable, \"but she wants to stay with her friend. From what she told me, I do not think that would be... appropriate. I told her that we do not think that would be suitable, but...\" She gives a little wag of her head that I interpret as a comment on the intractability of teenagers.\n\nBernie nods and looks thoughtful. \"Perhaps... perhaps if Tina and Alice had time to chat?\" she turns to me, making it clear that I have a choice.\n\n\"Um yes. Can it be just the two of us? I think that might be easier.\" Disappointingly, Bernie seems hesitant but I notice Shalu's glance up and to the right. I follow her gaze, and there is a discreet CCTV camera, nestling in the corner. Clearly, this room is for interviews, at least sometimes. Bernie gives a quick nod of approval and the two of them make their exits.\n\nI'm left standing, looking down at an unhappy girl. It's obviously time to step up, be an adult and do this for Pippa. For me and my guilt too, if I'm honest. Tentatively, I sit on the sofa beside her. \"Hello, Alice.\"\n\nShe turns her head to look at me for a second time. \"So you're Aunt Tina,\" she says, flatly.\n\n\"Just Tina is fine... not 'Teen' though.\"\n\n\"Is that what Mum called you?\" \n\n\"Sometimes. She'd call me 'Pest' if I annoyed her or if I was winning an argument,\" I feel my mouth twitch towards a smile at the long-forgotten nickname. \"Or 'you bitch' if I borrowed her stuff.\" There's a faint flicker in her expression, but whether it was surprise or amusement, I can't tell.\n\n\"Did you fight a lot?\"\n\n\"No, not back then. Well, no more than sisters normally do, I suppose.\"\n\n\"But, like, most kids know their aunts and uncles. I guess I sort of knew you existed, but I've never seen you before and Mum never, like, talked about you.\"\n\n\"No, I don't suppose she would have. We fell out and then first Mum and then Dad \u2014 your Grandmother and Grandfather \u2014 died. It was not a good time, for either of us, especially Dad dying, and... we sort of blamed each other.\"",
        "\"For Grandad dying?\" she asks, furrows of confusion and concern appearing between her eyes.\n\n\"Not exactly, not for him dying. It's hard to explain, but we both thought that the other could have done more to help him.\"\n\n\"I think I sort of remember him,\" she says, thoughtfully. This certainly isn't the way I had expected this conversation to go.\n\n\"You might: you'd have been about four years old when he died.\" I take a deep breath. \"Listen, Alice, I know your Mum and I weren't close, not for years, but I'm truly sad she's gone and I wish I'd made much more effort to patch things up between us. What she said made me realize that I could have done more for Dad, and for her too, but now it's too late to...\"\n\n\"What do you mean, 'What she said'? When did you talk to her?\" Oh shit. Whatever else, it's obvious Alice isn't stupid \u2014 she is clearly very astute. What should I say? Can I pretend that it was a mistake, a slip of the tongue? No: I don't know what relationship if any, this girl \u2014 this intelligent young woman \u2014 and I might have in the future, but I cannot start it with lies. I'm going to have to be honest.\n\n\"She left a note \u2014 a letter, really \u2014 for me.\"\n\n\"A... a... like, a... suicide note? To you?\" I can see sadness on her face, naturally, but there's a note of betrayal in her voice too.\n\n\"Yes, but I want you to read it \u2014 if you want to, that is,\" I tell her, reaching into my bag.\n\n\"Have they read it?\" she asks, her eyes flicking towards the door.\n\n\"I think so. The police certainly have \u2014 this is a copy because they told me that they need the original as evidence, for now, anyway.\" I'm suddenly apprehensive about showing it to her. I've read it several times and I try to recall exactly what Pippa said. How will Alice react if she finds out I'm gay? I don't think the letter explicitly calls me a lesbian, but after Mum and Dad and Pippa, I'm not expecting her to be very accepting. Crap. Oh well, too late now. Thinking about it, perhaps I should be less concerned about myself and more about what she might think of Pippa after reading her words. \"Um, Alice,\" I say slowly, not letting go of the folded paper for a moment, \"I just wanted to say that Pippa, I mean your Mum, was obviously very depressed when she wrote this, so she was being unduly hard on herself, you understand?\"\n\nI'm not sure she does understand, but she gives an impatient nod and I let the letter go. Oh well, she has a right to see it. I glance at the door, half expecting Bernie or the other woman to come bursting in to intervene, but the door remains shut.\n\nI look back to Alice, watching her read. She gives a little sniff and rubs her eyes with the heel of her hand, leaving the skin around them glistening with the dampness of her smeared tears. I feel my own eyes prickling as I recall Pippa's despairing words; at the same time, I have the sudden, unexpected urge to put my arms around this poor, sad girl to comfort her. I hesitate: should I?\n\nShe makes another noise: a sob this time, not a sniff. Beyond the simple empathy of knowing what reading Pippa's letter had been like for me, there is the fact that Pippa asks me to become not just Alice's stepmother, but to be the good mother that she felt she'd failed to be. It suddenly hits me that if I can't or won't comfort her here and now, well, I might as well walk out the door and tell Bernie to call the children's home.\n\nApprehensively but carefully, I reach my arm around Alice's shoulders. I feel her tense at my touch but she doesn't pull away, and a moment later she relaxes as she continues reading.\n\nShe lowers the paper, and I feel her press into me, sobbing. I hold her, not knowing what to say. Perhaps there are never words for a moment like this.\n\nFinally, she begins to calm, her crying gradually easing. I notice she has lifted the letter again, re-reading it as I did. I experience a brief moment of satisfaction that she is still okay with me holding her before she moves, leaning away with a slight shrug of her shoulders to free herself. I let my arm drop.\n\n\"Are you okay?\" I ask. \"No, stupid question: of course you're not okay. Nothing about this is okay, um...\"\n\n\"Mum wants you to adopt me,\" she says in a way that may or may not be a question.\n\n\"Seemingly.\"\n\n\"So, is that's what's going to happen?\"\n\n\"Well, I, er, I could say no, and Bernie and the people from Social Services can say no \u2014 mostly if they don't like me, I think \u2014 but above all, from what Bernie told me, it's your decision... although,\" I add hastily, remembering what Shalu had said, \"I don't think you get to do whatever you want.\"\n\n\"Yeah, that's what that bitch said when I said I wanted to stay with Nessa and her Mum,\" she complains bitterly. \n\n\"Perhaps she just meant that couldn't happen immediately,\" I reply, trying to be sympathetic, but she shoots me a hard, angry stare.\n\n\"So you don't want me then?\"\n\n\"What?\" I say, surprised at the sudden, unfair accusation. \"I didn't say that! What I meant was... Look, let's be honest: neither of us knows the other, but,\" I hold up my hand to forestall any claims of this as further evidence of my not wanting her, \"I wish that were different, really I do. As I said, I wish I'd made up with your Mum. Maybe I might have made a difference to what happened, maybe not \u2014 we'll never know \u2014 but I would know something more about you, and perhaps choosing between me and a children's home wouldn't be so difficult.\" I look at her and sense the anger has eased a little bit. \"And maybe I'd feel more confident about being able to do what your Mum has asked.\"\n\n\"Do you want to do it?\" she asks quietly and I nod. \"Why? Is it just 'cos you feel guilty about Mum?\"\n\nI'm not at all sure I know the answer to that, not the whole answer. Try to be honest with her, I remind myself \u2014 as honest as you can, anyway. I take a breath. \"Yes, I feel guilty \u2014 about your Mum and falling out, and about Dad \u2014 but... but that's not all. I understand a bit of what you feel: Pippa wasn't my Mum but she was my big sister and I do know what losing a parent feels like. I want to do this \u2014 or at least try \u2014 for her sake, because I owe it to her and to you too, because maybe...\" a sudden idea appears that's weirdly reassuring and disconcerting at the same time. \"...maybe this is where I discover that what I thought about myself was wrong. Maybe my job isn't as important as I thought it was, maybe...\" I almost say that maybe family matters more than I thought it did, but I don't know if that's true, and even if it is, it's certainly not something she wants to hear right now. \"...maybe my being here for you is a chance to do something genuinely valuable with my life.\" Did I really just say that? Do I actually believe that?\n\nSilence settles between us as I try to work out whether, in the spirit of honesty, I need to take back or qualify what I just said. It's not that I think that what I do has no value, it's just that raising a child, raising Pippa's child \u2014 okay, her young person \u2014 seems more important than managing Jan, Malcolm and Tanwen, and certainly more significant than December's payroll.\n\n\"Look, I wouldn't...\" / \"There's something...\" We both speak at once and then immediately reflexively apologise to each other.\n\n\"Go on,\" I encourage.\n\n\"No, you first,\" she insists and I can see she means it.\n\n\"Okay, well all I was going to say was that if you were, you know, if you were to stay with me then I wouldn't stop working \u2014 I mean, I still need to earn money, right? \u2014 but I would make sure that I was there for you, yes?. And... well... whatever you choose today, you can still change your mind later.\"\n\n\"So could you,\" she points out.\n\n\"True,\" I concede. \"This has to be something that works for both of us, and I know it won't all be plain sailing, but I'm not going to give up the first time we fall out or have a disagreement, I promise. I hope you'll do the same.\" She nods. \"So, what were you going to say?\"\n\n\"Nah, it doesn't matter...\" She looks down for a moment. \"Um, would I be staying with you tonight, if I said yes?\"\n\n\"I guess the Social Services twins would have to agree that... do you want to ask them?\"\n\n\"Um... maybe, er, yes, I guess...\" she replies awkwardly.\n\nWe're both uncomfortable as we talk to Bernie and Shalu, who then insist on speaking to us individually. I suspect they want to be sure that neither of us is being pressurised or guilt-tripped into a decision. I'm reminded, several times, that this isn't necessarily permanent, and that either of us can change our mind if this doesn't work out. It is supposed to be reassuring, and perhaps for Alice, it is, but it makes me feel that I'm going to be assessed and judged constantly. How guilty will I feel if, in the end, she ends up in a children's home and I can't fulfil Pippa's request?\n\nEventually, it is agreed, and then there are forms for me to sign in which I accept my new responsibilities and places the two of us under the supervision and monitoring of Social Services.\n\n\"I hope it all goes well, for both of you,\" Bernie tells me as she gathers the papers into a pale green folder labelled ROBERTS, Alice - 06/08/1999. So her birthday is on the sixth of August \u2014 I must remember that. \n\nThere are final handshakes, good luck wishes and brief farewells and suddenly we're done; it is just Alice and me left in the room along with two suitcases \u2014 all of Alice's worldly possessions. They wouldn't fill the boot of a car.\n\n\"They said I should take everything that I was sure I wanted,\" Alice says, \"coz someone might rob the place.\" I reach out and give her shoulder a little squeeze.\n\n\"There are some shitty people in this world,\" I concede. \"Okay, let me call a taxi and we can go home.\"\n\n<center>+ + + + + + + + + + + +</center>\n\nAlice has had the tour of the flat and her bed is made up in the spare room \u2014 a bed rarely ever used, even though I bought it when I moved in six years ago. I've left her there unpacking her clothes and things. I have promised we can redecorate and get some more furniture if she'd like.\n\nI don't know about Alice, but I feel wrung out by the day, whilst at the same time I'm too keyed up to settle. The awkward silences don't help, but I'm trying to resist the urge to fill them with inane chatter because Alice may want some quiet and space to think. I hear the spare room door \u2014 her bedroom door, I correct myself \u2014 open and close; a few moments later she enters, walking over and dropping onto the sofa. I could really do with a drink \u2014 a large, cold glass of white wine would be perfect \u2014 but I don't think that would be wise. Pippa had problems with drink and I don't want Alice thinking I do too. Besides, I don't want to say anything stupid.\n\nI look at her: she's now playing with the TV, flicking through the plethora of cable channels. She doesn't look any more settled than I do. \"Alice, do you want some food?\" I ask as my empty stomach gives a rumbling complaint. \"I could order pizza.\"\n\n\"Um, yeah, I mean, yes, please. But...\" she looks at me, \"could you call me Ali, not Alice?\"\n\n\"Of course, if that's what you'd prefer.\"\n\n\"Yeah... It's just that Mum only calls... um, called me Alice when I was in trouble and you sort of sound kinda like her, so...\"\n\n\"I understand. Ali suits you,\" I add, honestly. \"So, what sort of pizza do you like? I think there are some takeaway menus...\" I open the drawer of the desk in the corner, knowing full well that they're there but bashful about admitting how often I've resorted to them recently, too lazy or too tired to cook. In truth, I doubt there's enough in the kitchen at the moment to make much of a meal. I guess regular shopping and more home cooking is another change that's going to have to happen. \"Um, Ali, I need to be honest here: I'm not much of a cook, not with just me here, so... you're not a master chef in the making, are you?\" I ask, half hopefully.\n\nShe gives a small smile, \"Nah... I mean I can cook some stuff; like we did some Food Tech at school, you know, some pasta and sauce, chopping stuff. We did bake bread once.\"\n\n\"Perhaps we can learn together, and share responsibility for burnt bolognese and, I don't know, undercooked potatoes... hmm?\" My cooking isn't generally that bad but this seems to be an opportunity for us to work together.\n\n\"Yeah, maybe.\"\n\n\"But not tonight. Come on, what's your favourite pizza?\"\n\n\"Um, I like Hawaiian, with the ham and pineapple... you don't though. We can get something else.\"\n\nDamn, I couldn't hide my revulsion. \"Sorry, but I think pineapple on pizza is the invention of Satan,\" I smile, \"but that doesn't mean you can't have it. We can get two small pizzas or half-and-half on a bigger one.\"\n\n\"Cool,\" she nods.\n\nI phone through an order \u2014 a medium pizza, Hawaiian on one side and a vegetarian with chillies on the other \u2014 and take a seat on the armchair facing her \n\n\"Ali, I do want this to work so we're both going to have to adapt as we get to know each other.\"\n\n\"Are you saying that the pizza is some kind of symbol?\" she asks but I can't tell if she's serious or taking the piss.\n\n\"It could be: we can be honest with each other and both admit what we actually want, then maybe find out if we agree or can find a compromise. Is that... does that sound reasonable?\"\n\n\"Yeah, I guess so.\" She looks unexpectedly nervous.\n\n\"Are you okay?\" I ask.\n\n\"Um, Tina... I gotta kinda tell you something... about me...\" Oh god, what is she going to say? \n\n\"Okay...\" I reply, trying to sound reassuring.\n\n\"It's something I said to Mum: I told her she was a shit mother!\" she wails and tears begin to fall. \"It's all my fault!\"\n\n\"No, Ali, it's not your fault.\" I move quickly to be beside her but sense that hugging her would be the wrong thing right now. \"Pippa chose to do what she did but she knew you loved her and she loved you.\"\n\n\"She and me... we, like, we didn't really get on. I guess we used to fight a lot. She always seemed to either ignore me or call me a loser or, like, be totally on my case \u2014 do this, do that, get outta my way, you know? But a couple of weeks ago I told her that her boyfriends were creeps, always eyeing me up I didn't think she believed me, so I called her a shit mother!\" she is crying. \"But in her letter, she said she knew the guys were perving over me so it's my fault...\"\n\nI take a breath, trying to think of what to say. Her precis of her Mum's words may be colourful but it sums up what Pippa said: that she was afraid that she couldn't or wouldn't be able to protect Ali. \"Ali, listen. What she said in the letter... I think she already knew what some of the men were like. Maybe what you said made her more concerned about what was happening \u2014 or what might happen \u2014 but none of that was your fault. Do you remember what I said when you read the letter? Your Mum was in a bad, dark place but she chose to do what she did. I don't think she was well, mentally, and It all just suddenly became too much for her.\"\n\nI have a sudden recollection of a line from the letter and stand abruptly; I hurry to the desk and the folder with the copies of the paperwork Bernie gave me, into which I'd tucked Pippa's letter. I scan it hastily as I walk back to sit beside Ali again.\n\n\"Um... here, look: 'And last night. No, I cannot think about what might have happened to Alice if I hadn't woken up.' See, it wasn't anything you said: it was...\"\n\n\"Lucas,\" she interrupts with a shudder. \"He was a creepy fucking perv, but I think he used to get drugs for Mum. I bet he's already robbed the flat for any stuff he could sell.\"\n\nI reach out and place my hand over her clenched fist. \"After our Mum died we saw Dad just give up: he wouldn't go out, he missed meals, he just didn't seem to care about anything, not even about living, and nothing your Mum or I did seemed to make a difference. Perhaps your Mum felt the same after seeing Lucas.\"\n\n\"Yeah, but it was only because of what I said to her she saw him for what he was,\" Ali replies but there is less despair in her voice.\n\n\"You told her how you felt, you were honest with her, yes?\" Ali nods. \"You had the right to tell her, even if she couldn't cope with what she saw afterwards. Listen, Pippa was always jealous of me: I did better at school, I was in the swimming team whilst she struggled academically and with discipline. Should I feel guilty that maybe that was why she gave up trying and started drinking? Should I have not tried my best because she couldn't do as well as me?\"\n\n\"No, I guess not...\"\n\n\"That doesn't stop me feeling guilty though. What your Mum did was tragic and sad but we'll never know if what we did or didn't do would have made a difference. I can't go back and get a couple of grades lower or tried harder to get in contact with her last year or whenever, and even if I could, whether it would mean we weren't sat here now. All I can do is to do the best I can for you and for Pippa's memory. Maybe...\" I stop short but she turns her head to me.\n\n\"Maybe that's what I should do too?\" I can't tell if the idea upsets or comforts her, but I nod anyway. \"Work hard, try my best at college, stay out of trouble, that sort of thing?\" She looks down at the letter, back to where my finger still rests. \"'That's why I want you to take her, to adopt her and become the mother to her that I should have been.'\" She reads aloud the words of the next sentence. \"Are you going to?\" she asks.\n\n\"Your Mum did say she didn't want you making the same mistakes she had,\" I suggest gently. \"Look, I have zero experience of parenthood. Jan, a colleague at work, was so desperate to be a mum that it wrecked her marriage; Tanwen has three kids that I know she'd do anything for, but I've never thought that I wanted a family but... now...\"\n\n\"You suddenly want one?\" she asks but I can't tell if she's hoping I do or expressing an understandable cynicism that I might have suddenly and miraculously changed my mind on the matter.\n\n\"No...\" I admit, \"it's just... I do want to help you, look after you... if I can.\"\n\n\"Because of your guilt about Mum.\"\n\n\"Partly, but also because I feel I owe it to her as my sister... and because, stupid as it sounds, I can't help caring about you and what happens to you now. Your Mum said that if she could go back and do things differently, do things better, she would. But she couldn't go back, so instead, she wants \u2014 wanted \u2014 me to look after you. Ali, I can't not feel responsible for you, and I certainly don't want to be another person who fails you. I'm sure this isn't going to be easy but I want to try because, well, you deserve whatever help I can give you.\" There's a knock at the door. \"That'll be the pizza, hopefully,\" I say as I stand.\n\n\"Tina,\" Ali calls as I head for the door. \"Um.... Thank you.\" I smile back, hoping I can live up to the promise I've just made.\n\n Thursday 26 November\n\nI hurry through the gates of the Sixth Form College, checking my phone: good, still four minutes to go. \n\nWhen I'd phoned the College two days ago to explain the situation, I'd been put through to their Pastoral Director. Social Services had already contacted the College, and the Director \u2014 one Frances Seaward \u2014 had suggested that I come in to meet her ahead of the Consultation Evening. \"You are coming to the Consultation Evening, aren't you? Has Ali told you about it?\" she asked.\n\n\"No, she hasn't but, you know, yesterday was a hell of a day for her so I doubt it was much on her mind. Anyway, what is a 'Consultation Evening'? Is it like a Parents' Evening?\"\n\n\"We prefer not to call them 'Parents' Evenings, partly because of situations like those that Ali is in, but mostly because it's really about the teachers discussing progress with the students, although we do encourage carers, guardians and parents to attend too.\" \n\nThat was the first of several incidents that have shown how things have changed since my days in education, and how much I have to learn. My current harried and breathless state as I hurry towards the College visitors' reception is another lesson, and I have a new respect for Tanwen and Jan as I begin to understand for the first time just how much pressure being responsible for a young person brings. I had been off work on Tuesday and Wednesday to be with Ali, to look after her, help her settle and buy a few clothes and some things for the flat. Two days of starting to get to know Ali a little, of tears and reassurances, of another meeting with Bernie from Social Services and of the depressing practicalities of dealing with a death. At least Bernie seemed entirely satisfied with Ali's situation and how I'm doing so far.",
        "This morning, Ali said she wanted to go into college \u2014 to see her friends as much as anything, I suspect \u2014 so I'd gone into work. Needless to say, back at my desk I found a backlog of work and a mountain of emails, so leaving at three o'clock had been stressful, making me feel guilty for leaving early, apprehensive about the work piling up and scared of getting to the College late. How do Tanwen and Jan cope?\n\nThe Pastoral Director \u2014 who seems determined to keep calling me 'Ms Roberts' whilst at the same time insists that I call her Frances \u2014 is nice enough if a little scarily self-assured and efficient. She goes through various policies and processes regarding absences and attendance, how the College can offer Ali counselling to assist with bereavement and any other challenges she may face in the coming months, and that I can contact her or Ali's tutor if I have any questions or concerns. There are contact details to provide and an agreement that I will support the College in helping Ali to complete work and generally do her best.\n\n\"I won't pretend that Ali hasn't presented some challenges: her attendance needs to improve significantly, and while her teachers say she's an intelligent young woman, her work \u2014 particularly her homework \u2014 has frequently been incomplete or of a poor standard. I tried to engage with your sister about Ali's attendance and performance but...\" she gives a small shrug, turning her open palms up.\n\n\"I... I think Pippa was struggling with... lots of things and don't think that her own experiences at school would have helped either. But I believe she was worried about Ali and wanted her to succeed \u2014 she just felt she couldn't help her and,\" I take a breath, \"and she wanted me to help Ali. Um... Ali knows that too,\" I add.\n\n\"Good. Well, we're here to help Ali as much as we can, so feel free to contact us at any time, Ms Roberts. Right, well that's all for the time being. Have you arranged to meet Ali somewhere?\"\n\n\"She mentioned waiting outside the main dining hall, wherever that is.\"\n\n\"I can show you. I believe Ali's first appointment is at four-forty-five with Kerry Daniels, her English teacher.\"\n\nFrances leads the way along several clean and modern-looking corridors and out into a wide thoroughfare between buildings. I spot Ali standing and chatting with a shorter, dark-skinned girl. I don't know if it's my approach or that of Frances that scares Ali's friend away, but as soon as she notices us she gives Ali a quick handclasp before hurrying off.\n\n\"Hello, Ali,\" Frances says, \"Your Aunt didn't know where to go to find you, so I thought I'd bring her to you.\" I cringe inwardly at the word 'Aunt'.\n\n\"Um, thank you, Frances,\" Ali replies uncomfortably. I expect Frances to object to Ali's over-familiarity in using her first name, but Frances says nothing. Perhaps Ali is being given some dispensation in the current circumstances.\n\n\"Okay, well, you'd best hurry so you're not late for your appointment,\" Frances tells Ali. The tone is kindly, but underneath there is firmness that expects to be obeyed. Somehow, I doubt many kids try to mess this woman around.\n\n\"Okay, Ali, you'd better lead the way,\" I suggest. \"I've no idea where we're going.\"\n\n\"Kerry will be up in the English Department corridor. C'mon.\" Ali sets off and I follow.\n\n\"Ali, won't you get into trouble if you keep calling your teachers by their first names?\" She gives me a slight frown.\n\n\"No, we always call them by their names. We're not, like, schoolkids now.\"\n\n\"No, I guess not. Still, back in my days, we always had to call them Mister or Miss whatever. Of course, I had to wear school uniform too, even in the Sixth Form. I guess this is better though: I always call colleagues by their first name.\"\n\n\"I hated school uniform,\" Ali grumbles. \"All that crap about the right colour socks and wearing a blazer and stuff.\"\n\n\"Well, you're out of that now,\" I reassure her. She doesn't reply, so I decide not to push it. Maybe in time, we'll find an easier relationship.\n\n\"It's in here,\" she says as we arrive at a classroom, although the displays featuring authors and poets along the corridor had already suggested we'd entered the English Department's domain. \n\nI glance into the room and there are three teachers there: a man and two women. One of the women has no parents or student with her and I look at Ali questioningly. She shakes her head and indicates the other woman with a quick flick of her hand. So we must wait, as Kerry speaks to the student -- a floppy-haired young man with mother and father sat either side, all nodding at what the teacher is saying. I watch, feeling unexpectedly nervous about what is to come. Others arrive to wait their turn.\n\nFinally, the family trio stand and there are smiles and handshakes. As we pass, the floppy-haired youth gives Ali a nod and a slight smile that could be relief or empathy.\n\n\"Hello Ali,\" Kerry says, half standing and inviting us to sit with a gesture. \"You must be Ali's au....\"\n\n\"I'm Tina Roberts, yes,\" I say hastily, although I don't know why being called an aunt grates so much. \"Just Tina is fine,\" I add, offering my hand in greeting.\n\n\"Okay, Tina,\" she replies and then looks down. On the desk in front of her is an open book with a grid, a list of names down the left-hand side. I'm pretty good at reading upside down and easily find Ali's name. The numbers and letters \u2014 Cs and Ds and mid-range percentages, suggest that Ali is not doing brilliantly. \"So, just for your benefit, Tina, the syllabus is: one Shakespeare play - The Taming of the Shrew - two novels \u2014 Ian McEwan's Atonement and also Wuthering Heights \u2014 and the poetry anthology, all pre-1900 poems. This term, we're looking at Shakespeare, the first of the novels, Atonement, and one or two of the poems. Okay....\" She looks back down at her mark sheet and I sense Ali shrinking down a little: she clearly anticipates what's coming. \"So, Ali, how do you think you're doing?\" What a horrible question; pretty much whatever Ali says will put her in the wrong.\n\n\"Um...\" Ali says, presumably sensing the trap before her.\n\n\"Er, Kerry,\" I interrupt, \"while I understand that Ali's motivation and effort are important, perhaps it would be better if you gave your assessment of Ali's performance first; then we can discuss it, yes?\"\n\nKerry gives me a slightly disapproving look, but I've managed people from stroppy teenage work experience kids to truculent sixty-year-olds, so I hold her gaze until, finally, she nods. \"Very well. So Ali, so far your work puts you on a borderline grade C or D. You didn't complete the last worksheet on Atonement, and some of your other work has been rather lacking in effort and thought. However...\" she pauses dramatically, \"there were parts of your essay on The Shrew that were excellent, showing some careful thought and perspective and you explained them well. The misogyny in the play certainly caught your attention.\" Kerry gives a little smile. \n\n\"Yeah, well, women don't need taming,\" Ali mutters.\n\n\"Ali, I'm not going to disagree,\" Kerry assure her. \"However, you need to take the insight and enthusiasm for your ideas and apply that more widely. You know the theme behind all the texts is 'Love through the ages,' so use how we think of love today and how it's presented in the novels and poems as a contrast. You have a good brain in that head and good ideas; you just need to make the effort and remember to play the game.\"\n\n\"Game?\" Ali asks.\n\n\"The exam game. It's all about giving the examiners what they want so that they'll give you what you want: a good grade. One that you're capable of getting if you'll only just apply yourself.\" There is a hint of frustration in Kerry's voice. I glance at Ali, expecting some negative reaction but there are just silence and an uncomfortable look on her face.\n\n\"Thank you, Kerry,\" I say. \"Are there any things in particular that Ali should concentrate on, to begin with?\"\n\n\"Well, Ali, you need to not miss lessons, er, I mean once things get more settled,\" she adds hastily, evidently recalling Ali's current situation. \"Read the texts, obviously. Please don't just watch a film or television adaptations. They can help with the basic plot but you can't be sure how much has been edited out or changed. Oh, and if you could try and improve your handwriting: I cannot mark what I cannot read!\"\n\n\"I find the writing hard,\" she complains. \"If I write neat it takes, like, forever.\"\n\n\"Well, you can always type in on a computer,\" Kerry suggests.\n\n\"Yeah, maybe,\" Ali concedes. I've known Ali for only three days \u2014 albeit quite intense days \u2014 but I can tell there's a lot she might have said just then about life with her Mum.\n\n\"Okay, well, is there anything else you want to say, Ali?\" Kerry asks but Ali just shakes her head.\n\n\"Well, thank you, Kerry,\" I say, starting to stand. We'd better get to our next appointment and I can see others are waiting to see you.\"\n\nKerry shakes my hand again. \"Nice to meet you, Tina. See you tomorrow, Ali.\"\n\nBack out in the corridor, Ali is still out of sorts. \"So is it... History next?\" I hazard?\n\n\"Yeah. This way.\"\n\n\"Ali... What Kerry said about your handwriting...\" I hesitate; I don't want her to feel criticised by me. \"Well, would it help if we got a computer and a printer at home, for you to do your work on?\"\n\n\"Uh, maybe, a bit,\" she replies with a slight note of surprise.\n\n\"We could get a laptop, so, you know, you could take it with you; bring it into college if you needed to work on an essay, say.\"\n\n\"Like, for real? That'd be cool,\" she replies, definitely a little happier.\n\n\"I've wondered about getting one before but I've never really needed it, not in the way you need one. I might need to use it occasionally, though,\" I warn, just to get that rule established from the outset.\n\n\"Yeah, no problem,\" she agrees, possibly a little too readily.\n\nHistory \u2014 with Justin (Mc something Scottish) and Greg, a trainee teacher who says nothing \u2014 is much the same as English. Aside from the slightly disconcerting discovery that the Modern European History module goes up to the fall of the Berlin Wall \u2014 an event I lived through, for fuck's sake! \u2014 there is the same complaint that Ali has the ability but hasn't done enough to develop her potential. When the same objections to her handwriting are also repeated, Ali immediately asks if it would be okay to use a computer.\n\n\"Of course,\" Justin assures her, \"though not its exams, obviously.\"\n\n\"Why not?\" Ali asks, annoyed.\n\nI place my hand on her arm to calm her. \"Perhaps we can find out whether that's always the case,\" I suggest, diplomatically, thinking that Justin probably knows what he's talking about.\n\nAfter History, there's a twenty-five-minute gap before the final subject, Psychology. I ask her if perhaps there's somewhere we can get a drink.\n\n\"I dunno... the canteen, maybe but... can we just go over to Psychology?\"\n\n\"Okay,\" I agree, a little reluctantly. I wonder why she's so keen. Maybe this going to be terrible, and she just wants to get it over with. \"So, anything you want to say about Psychology before we talk to your teacher?\"\n\nShe gives a little shrug. \"It's hard, I mean, like, complicated.\"\n\n\"Interesting?\"\n\nShe gives a half-short, half-squeak sort of sound that I've learned means more-or-less the same as 'dunno'. \"Some bits, I guess. It's not as much fun as Nessa thought it would be,\" she adds, obviously sensing my frustration with her first reply. The name Nessa rings a bell.\n\n\"Ah... I assume this is your best friend Nessa?\" I ask, deliberately not adding, 'the one you wanted to live with instead of me'.\n\n\"Yeah. We wanted to do, like, at least one subject together, you know?\"\n\n\"So was Psychology her idea or yours?\" I ask. \"I'm not criticising; I get that you wanted to be in a class with a friend when you come to a new place... I just want to understand.\"\n\n\"I guess it was kinda hers more than mine. She's doing Biology and Chemistry so... I guess it, like, fits for her.\"\n\n\"But not so good for you?\" I suggest.\n\n\"No, I mean... there's stuff in English, you know: why characters do stuff, their motivations and how they make us feel... And now with what's happened with Mum...\"\n\n\"You think it might help you to understand her, perhaps?\"\n\n\"Maybe.\"\n\n\"It can't hurt, and understanding people is always good. Perhaps I should have done some psychology, then maybe I would have made some better choices.\"\n\n\"With Mum?\" she asks.\n\n\"Possibly, though I was thinking more about some of the other relationships that I've had.\" She half turns and gives me an intrigued look. \n\n\"Like with Rowan, that Mum mentioned? The guy you were with that upset your parents?\" she asks, fully justifying her teachers' comments about her intelligence and disconcerting the hell out of me. The only relief is that she's assumed Rowan was a man.\n\n\"Um, yes, possibly... among others... but I'm not about to give you all the gory details,\" I manage a smile, \"certainly not right now!\" She half-smiles back, and I wonder if there'll be a day when we feel close enough to share the whole truth.\n\nThere are seats in the corridor outside the classroom where Ali's Psychology teacher awaits. The people sat there, already waiting, means that we won't get to see the teacher early.\n\n\"Ali!\" A young woman sat on one of the chairs exclaims with a big, happy smile as she jumps to her feet. It looks like the girl I saw talking to Ali earlier.\n\n\"Hi, Nessa,\" Ali replies and the two of them hug. Ah, So this is Nessa, Ali's BFF. I bet she is the reason why Ali was so keen to get here early.\n\nI'm not sure what I'd expected. Obviously, I'd not seen a photo of Nessa and Ali hadn't described her, but I must have had some subconscious picture, or I wouldn't be so surprised by the short, cute, dark-caramel-skinned girl who's hugging Ali. Her long black, slightly frizzy hair is dyed blue at the ends in a way that echoes Ali's, and I wonder who is copying whom. She looks over Ali's shoulder at me, then glances back at Ali. There's something in the way she smiles that makes me feel that I'm the butt of some joke shared between the two of them. \"Hi, er...\" she says to me.\n\nSlightly unsure of what to do and not wanting to mess this up, I offer my hand..\"Please, call me Tina. Hello, Nessa, nice to meet you.\" She hesitantly shakes my hand. I notice a woman staring intently at us.\n\n\"Uh, this is Nessa's Mum, Heather,\" Ali says, and the woman stands in response to the introduction. The woman is a fraction shorter than me, slim and a little older perhaps, dressed in a long, dark skirt and white blouse beneath her jacket. Her pale skin indicates her partner or husband must be black \u2014 unless Nessa is adopted, of course. Heather's eyes are a light hazel colour, and her honey-blonde hair, tied back in an efficient ponytail, looks natural.\n\n\"Hello,\" I say. She gives me an appraising look. Does she think I'm Pippa and that I look too young to have a daughter of Ali's age? Whatever the reason, her studying of me is a bit unsettling.\n\n\"Hi,\" she says eventually, \"I guess you must be Ali's aunt, yes?\" She has a soft but noticeable accent.\n\n\"Um, yes... Tina, Tina Roberts. So you're an A...\"\n\n\"Yes, Heather's Canadian,\" Ali interrupts, loudly, \"but she's been here for, like, years.\" Ali is giving me a hard stare and a frown. \"Not American,\" she mouths in silent addition.\n\n\"Um, yes, a Canadian, of course. Please to meet you, Heather.\" I can only assume Heather dislikes being mistaken for an American as much as I dislike being called 'Aunt Tina'. \n\n\"And you too. I'm sorry for your loss,\" she says. There is a slightly cold wariness in her tone that makes her words sound like a mere formality. I wonder \u2014 given that her daughter and Ali have been friends for some years \u2014 if she ever met Pippa. \n\n\"Thank you,\" I reply and then hesitate awkwardly. It feels rude not to say anything more, but what do parents say in this sort of situation?. \"Has the evening gone well for Nessa?\" I ask and then curse myself: that question should have gone to Nessa, not her Mum, so now I'll have annoyed Nessa, and by extension, Ali.\n\n\"Yes, very good so far. There are times when Vanessa needs to focus a little more and avoid distractions, but otherwise, she's doing very well.\" I wonder if this is a subtle dig at Ali. \"And you?\"\n\n\"Oh, well... there are some things to work on and areas where Ali needs some support but isn't that true for all of us? Otherwise, yes, she's doing okay.\" Just then, people emerge from the classroom: a student and his parents.\n\n\"Mum...\" Nessa says.\n\n\"Finally,\" Heather sighs. \"We'll need to be quick, Vanessa, or I'll be late for choir practice.\" I receive a brief nod as she hurries away.\n\n\"Are you okay, Ali? I ask, hoping I haven't upset her.\n\n\"Yeah.\"\n\n\"Nessa seems very nice.\"\n\n\"Yeah, she's cool. Heather's okay too but she thinks, you know, that I kinda distract Nessa from working.\"\n\n\"Do you?\" I ask gently. If that's the case then maybe it's as well Ali didn't have to find out if Heather would take her in.\n\n\"Well, maybe a bit, I guess... sometimes. But some of the stuff's boring... and hard!\" she complains.\n\n\"Yes, A-Levels are a lot of work. In some ways, a degree can be a bit easier because mostly you only get exams for a single year at a time, sometimes just for one module.\" I watch to gauge her reaction, not knowing if going to university is something she wants to do, or if she's even considered it before. She glances at me but doesn't say anything. \"So, apart from maybe looking for a laptop, do you want to look at getting some other bits for your bedroom at the weekend? We could go to Ikea and have a look.\"\n\n\"Um, maybe,\" she replies, but I can tell there's more interest in the prospect than she wants to show. Her room has only a bed and an old chest of drawers, so it needs some furniture and I want her to feel the room is hers.\n\nWe wait in silence until Nessa and Heather reappear. I can see Nessa wants to talk to Ali but Heather is in a hurry: clearly, her choir practice is calling her. I wonder momentarily what church it is and if she's as homophobic as some of the other Christians I've encountered. \n\nNessa's thumbs-up to Ali suggests the meeting with the teacher went well but the two of them have to settle for a quick touching of hands and 'See you tomorrow' rather than the chat they'd so obviously prefer.\n\n\"Bye, Nessa, goodbye Heather. Come on, Ali, we'd best not keep your teacher waiting,\" I suggest as more people approach along the corridor. Ali gives a reluctant nod.\n\nThere are two teachers in the classroom, a man and a woman, and Ali heads towards the woman, who looks up at our approach. She's probably about my age with close-cropped dark hair and a heart-shaped face with wide, dark eyes. She is attractive \u2014 very attractive. I've never really believed in the whole 'gaydar' thing, but that's not stopping a tiny corner of my brain from screaming, 'She's a lesbian, she's a lesbian!'\n\n\"Tina?\" Ali's voice interrupts my thoughts, and I'm suddenly very self-conscious. Have I been staring?\n\n\"Uh, sorry, Ali. I just thought about something at work that, er, that I need to do tomorrow. Sorry,\" I say to the teacher. \"Tina,\" I say, offering my hand.\n\n\"Sally Marcheson,\" she replies, returning my handshake firmly. \"It's always unnerving when you remember something you should have done, isn't it?\" she adds with a smile and gestures for us to sit. \"So, Ali, how are you finding the course? Honestly.\"\n\n\"Um, well, it's hard,\" she admits. \"Like, I think I understand what we've done, most of it, but there's, like, so many names and facts and stuff to remember!\"\n\n\"Yes, I'm afraid that's the way it is; most students don't expect it, which is why so many drop out after a few weeks.\" She smiles at Ali. \"I'm glad you don't seem to be considering doing so.\"",
        "She opens the book in front of her, flicking through a few pages to find one with Ali's name printed neatly at the top and several short lines of notes below. \"Now...\" she scans the notes. \"...yes, I think your difficulty is reflected in your work: you certainly understand the various theories and concepts but struggle with the nomenclature and terminology. You're taking History too, aren't you? How do you find learning names and dates and places?\"\n\n\"Okay, I guess. It's, like, the stuff in History is, like... ordinary sounding.\"\n\n\"Even things like the Potsdam Conference and leibensraum?\" she asks. \"I know that sections such as the one on research methods aren't thrilling but you seem to get the ideas in the learning and development module. There are two things that would help you. The first is to learn the names: you knew the answer the other day in terms of the theory, but saying the study was by 'some French bloke' isn't going to cut it in the exam, yes? The second is not to think of each section as separate: ideas crossover and this is especially true of the research methods topics that apply in most areas.\" She gives Ali a questioning look.\n\n\"Okay, Sally. I, er, I will try.\"\n\n\"Good. Oh and if you could try a bit with your hand...\"\n\n\"I'm gonna type stuff, okay?\" Ali replies, a little curtly.\n\nSally's lips purse slightly, wondering if Ali's being rude, but her tone had been one more of frustration than of defiance. I, on the other hand, am wondering what kissing Sally would be like. \"Well, that would certainly help,\" she concedes as I give myself a mental slap -- such thoughts are absolutely not appropriate. Having Ali in my life has imposed celibacy for the time being, and I just need to accept that.\n\nI tune back into the meeting as Sally passes Ali a sheet of paper with typed bullet points. It must be some kind of crib sheet because Sally is rattling off names and technical terms that Ali needs to learn. Then there are pointers for the major piece of coursework coming up. I force myself to pay attention rather than let my thoughts wander in unsuitable ways.\n\nI manage to keep my focus on Sally's words rather than on Sally, although the mention of a module on 'Sexuality and Gender' doesn't help. We say goodbye, and something is unsettling in the way Sally looks at me... no, she'll have definitely been told about Ali's situation and can probably sense how much I'm not a parent. She probably feels sorry for Ali, that's all. She wouldn't be thinking that if it were an instinctive parent like Jan was sitting here, rather than me...\n\nAli and I walk away in silence, as I try to push away thoughts of Jan and Sally and of having someone to simply cuddle me. As we exit the building, it is Ali that breaks the silence. \"Tina, can you just give me the bollocking now so I don't have to, like, spend the whole journey home waiting for it?\"\n\n\"What? Ali, why should I boll... er, tell you off?\" Did I miss something?\n\n\"Coz I'm not doing as well as I can, coz I miss work and stuff...\" she replies. \"Nessa says her Mum totally has a go if her teachers say stuff like that about her.\"\n\n\"Do you want to be shouted at?\" I ask.\n\n\"Uh, no, but...\"\n\nI stop and put my hand on her shoulder, making her stop and turn towards me. \"Ali, I'm not going to shout at you: I wouldn't shout at a member of my staff if they underperformed, so why should I show you less respect than I show them? However, that doesn't mean I don't care, because I do. I want you to do well, not just because of your Mum or for my sake but for yours.\" The gusty wind has a raw edge, there's the tang of frost in the air and the gibbous moon is pin-sharp in the clear, dark sky. I feel Ali shiver under my hand. \"Come on, let's get home and we can talk there. How about sausages and mash for dinner?\"\n\n\"Onion gravy?\" she asks, hopefully.\n\n\"Okay \u2014 but only if you slice the onions, okay?\"\n\n Monday 7 December\n\n\"Tina, are you okay?\" Jan asks, coming into my tiny office and pushing the door closed behind her. I guess she's come to talk about something to do with Tanwen and her, although it's nice that's she's concerned about me. The question is, do I want to talk to her?\n\n\"Yeah, I'm okay, I suppose.\"\n\n\"Is it your niece, er... Ali?\" Jan asks, gently. \"Is she being difficult?\"\n\n\"No, not really, not given what's happened and the funeral last week and everything. Ali's been through a lot, I know she has...\" There is the grating sound of Graham's cough and the bump of his chair as he stands. I hear him tell Tanwen that he's going to lunch.\n\nJan leans over and checks my mug, which is empty. \"Right, Graham will be gone for the next forty minutes; I'm going to make you a coffee and then we \u2014 you, me and Tanwen \u2014 can sit and talk.\" She doesn't wait for my reply but marches off to the kitchen. I stare after her: this suddenly assertive Jan is not the woman I'm used to. Is this what parenthood does to you?\n\nFive minutes later the two of them are sat opposite me, mugs of tea or coffee for each of us, and from somewhere, a small plate of biscuits, \"In case it's low blood sugar that's getting you down,\" Tanwen tells me. I don't think it is but I pick up a chocolate digestive anyway.\n\n\"So, how are you and Ali getting on?\" Jan asks.\n\n\"Okay, I guess. It's hard work though and... god, when do you get to take a break? We get calls or visits from Social Service, 'just checking you're both coping' and asking all kinds of questions; I want to help her to work hard and do well as Pippa wanted; I feel I've got to be there for her, you know, be there if she's down, or stressed or finding College hard or has fallen out with someone... When do I get to be me?\" I find I'm fighting back tears. \"There's so much, but how do I know that I'm not getting it all wrong?\"\n\nAlmost simultaneously, Jan and Tanwen reach out, one to take a hand the other to squeeze my arm. \"You don't, Tina, bach, not for sure. All you can do is to do what you think is right at the time,\" Tanwen says kindly. \"Has something in particular happened?\"\n\n\"No... not really, it's just... Listen, I probably need to explain some things, stuff I haven't told you, about my sister and what happened...\" I take a large gulp of coffee and a deep breath, and for the first time, tell them exactly what happened, all about my parents and about Pippa and her letter. They sit quietly, not interrupting as I talk about trying to get to know Ali, trying to help her with her college work and encouraging her to study, trying to build a relationship, friendship even, but all the time feeling that I'm not getting anywhere. \"I'm trying to get her to think about the future, about what she wants to do, maybe go to university \u2014 she's smart enough, if only she'd work \u2014 but she just shuts down and won't discuss it. I... I think I'm letting Pippa down,\" I sigh.\n\nThey are silent for a while. \"Tina,\" Jan says slowly, \"I've known Jake, Eryn and Tilly for, what, three months? Three months where I've had Tanwen there to guide me, help me to understand them and reassure them that I care about the three of them as much as she does. Even so, I know that Tanwen is the one they turn to first; she's the one who can get them to do the things they really don't want to \u2014 no, Tan darling, it's true. Maybe, in time that will change but for now... \n\n\"However, Tina, you are on your own with Ali. You've been thrown together, but as far as I can see, you're doing well -- very well: you're getting on pretty much okay; she isn't throwing tantrums; she's still going to college, maybe even working a bit more steadily, hmm?\" she suggests. \"Trust me, with a teenager these are no mean achievements.\"\n\n\"She's right, Tina bach: I love Jake and Eryn to bits, but they can both be moody, stroppy buggers in their own ways, so they can,\" Tanwen smiles, briefly, \"and they've not had to deal with what Ali has gone through.\"\n\n\"So you're saying I'm expecting too much, too soon, yes?\" I ask and they both nod.\n\n\"Just hang on in there,\" Tanwen says. There is a quick glance between them, and I feel again that pang of jealousy at their closeness and connection.\n\n\"Tina, that offer we made \u2014 about you coming over to us on Christmas day... that still stands, for you and Ali,\" Jan offers.\n\n\"Thank you, both of you, that's very kind,\" I tell them. \"I don't know, though: I'm not sure that a day with a load of people she doesn't know is something that Ali would want. Sorry.\" I don't mention my other concern: that Ali might have picked up some of Pippa's homophobic attitudes.\n\n\"We understand,\" Tanwen reassures me, \"but the invitation is still there, so it is.\"\n\nThere's a moment's silence. I feel the emotions still swirling inside me, the tears welling and threatening to fall. I try to push them away with a half-laugh, \"Ha!\" I look up, into Tanwen's and Jan's intrigued expressions. \"It's bonkers but... but I want Ali and me to be happy, to be like, well, a family...\" I can't help looking at Jan. \"I almost wish that Ali was younger -- maybe as young as Eryn or even Tilly -- so that I could get to know her, see her grow. How mad is that?\" I feel Jan take my hand.\n\n\"You may never be 'Mum' to Ali \u2014 I won't be to Jake and probably not really to Eryn \u2014 but that doesn't mean you and Ali won't be close, that you won't be the person she turns to when things get tough. You care about her, more than you thought you could and, er...\" she seems unsure of what to say next.\n\n\"And that's wonderful,\" Tanwen interjects, \"but it's also bloody terrifying, so it is. It's always scary to care for someone else. Ask any parent who's looked at their sleeping child and wondered what will happen to them in the future.\" Jan nods in agreement, but I wonder if she understood what else I was trying to say.\n\nI pull my hands away to rub brusquely at my eyes, drying them. \"Thank you, both of you. Now, go on and get your lunch. I don't want to be in an office of rumbling stomachs all afternoon!\" I manage a smile, more or less, and they both stand, Tanwen leading the way. Jan hesitates and turns back to me.\n\n\"Tina, I know I've said it before but thank you... for Tan and me and what you did.\" She smiles. \"There is someone out there for you, you know, someone to love you. I'm sorry it couldn't be me.\"\n\n\"Thanks, Jan. I know you and Tanwen are right for each other and the children. They need you and I think \u2014 I hope, anyway \u2014 that Ali needs me.\"\n\nJan gives me an encouraging smile before walking away to join Tanwen. \n\nI do hope that Ali needs me because part of me needs to care for her and help her, and it's an urge that seems to come from something deeper than the guilt I felt over Pippa.\n\nI guess I'm going to have to get used to celibacy for a while longer yet.\n\n Tuesday 8 December\n\nAli picks at her half-finished dinner. It's a chicken casserole and the first attempt at using the new slow-cooker that I bought. It meant that I didn't have to come home and spend an hour or more cooking. Instead, I'd spent half an hour chopping and preparing this morning, which made it a rush to get to work on time. However, it did just leave the rice to cook this evening, so that was a plus. Unfortunately, the casserole is a bit dry, so I suspect that the recipe needs to be adjusted next time.\n\nI look at Ali, who seems preoccupied. Maybe there's something more than the casserole's shortcomings. \"What's up, Ali? Is something the matter?\"\n\n\"Nah, nothing,\" she replies, pushing a lump of chicken across the plate and leaving a clean, white track in its wake.\n\n\"Sure?\" I probe gently. \"I might be able to help, you know.\"\n\nShe remains silent, biting her lip. \"Can Nessa come for a sleepover?\" she asks in a rush.\n\n\"Uh... well, yes, of course,\" I reply, wondering if this was what she was worried about.\n\n\"Really?\"\n\n\"Yes, Ali, really. This is your home, so you can certainly invite a friend over. What do you do at a sleepover? Do I need to do anything to help?\"\n\n\"Um, I guess we just hang out, you know?\" \n\n\"Okay, but I expect you and Nessa will want to eat, right? And we'll need to sort out somewhere for her to sleep \u2014 or at least somewhere for her to lie down while you stay up half the night chatting, I expect.\" Unexpectedly, Ali's face falls.\n\n\"Crap, I hadn't thought of stuff like that.\"\n\n\"Well, where did you think she would sleep?\"\n\n\"I dunno. I, um, I've never had anyone come to stay before. When I was with Mum I never knew who might be with her so, you know, I couldn't...\" Ali looks down, and I recall her telling me about some of the creeps \u2014 some boyfriends, some not \u2014 that Pippa allowed into their home.\n\n\"Ali, Nessa coming over is not a problem. I'm sure I can get an inflatable mattress. Can she bring a sleeping bag?\"\n\n\"Uh, I dunno. I'd have to ask her, I guess.\"\n\n\"Okay. There's a spare duvet but it's a summer one, so not very thick. We could double it over, I suppose... Sorry, am I being boringly practical about this?\" I ask.\n\n\"Uh, maybe a bit,\" Ali smiles. \"So, Tina, can she come over on Friday night?\" Her eyes are alight with hope, but I'm a little taken aback by how soon she wants this to happen. However, I can't really say no now.\n\n\"Okay, but... Ali, what about the Psychology assessment you've got to do for next week? You need time over the weekend to get that done, yes?\"\n\n\"Um, yeah,\" she says slowly but then smiles, \"but Nessa can, like, totally help me with that. We could do some work together on Saturday, yeah?\" She has a pleading look in her eyes. Maybe I've pushed enough on this.\n\n\"Okay, Friday it is. But you need to help sort stuff out, like what to cook and making sure that your room is tidy \u2014 properly tidy, not just things pushed under the bed out of sight, yes? And hoovered.\"\n\n\"O-kay! I get it,\" she grumbles but there's no real annoyance: she's too happy that I've agreed.\n\n Friday 11 December\n\nI've made sure that I'm home before Ali \u2014 another day cut short, more work to catch up on, come Monday. I told myself and Jan and Tanwen that I needed to pick up a few bits and just straighten up the house but I'm not fooling anyone because the truth is that I couldn't not be here.\n\nI hear the rattle of keys from the front door. Here we go...\n\nThere is a thump. The chair that used to receive my clothes when I stripped every evening has become the favoured dumping place for Ali's college bag as she comes in and, by the sound of it, for Nessa's too tonight.\n\nA moment later and the two of them burst, laughing, into the room and I stand up to say hello, hoping that their laughter isn't some joke shared at my expense. Nessa is wearing dark blue cargo pants and a grey sweatshirt with 'I ain't your Babe' printed on it. Her skin seems darker than my memory pictured it, but maybe it's the lighting. \"Hi,\" she says.\n\n\"Hello,\" I reply, \"have you both had a good day?\"\n\n\"Yeah, I guess,\" Ali replies.\n\n\"Apart from Miriam and the Bitches,\" Nessa adds, earning a nudge from Ali. This is clearly something Ali has kept from me, but now is most definitely not the time to follow it up. \"But at least it's Friiiiidayy!\" she adds.\n\n\"At frickin' last! C'mon Ness, let's go to my room.\"\n\nNessa gives me a slightly uncomfortable look.\n\n\"I need to go and cook. Nice to meet you again, Nessa.\"\n\n\"Thanks, er, Tina. Um, see you,\" she says before following Ali. \n\nI stare after them, alone once more and feeling a little disappointed. What was I expecting \u2014 an evening with the three of us sitting around, chatting? That was never really going to happen. I never had friends over for a sleepover, but if I had, I wouldn't have wanted Mum sitting in on our evening. Not that I'm her Mum and... okay, yes: I'm disappointed not to be thought cool and interesting enough for her to want Nessa to talk to me. Oh well, at least Nessa seems nice enough.\n\nWith a sigh, I make my way to the kitchen, glad that I'd not offered takeaway as an option: even Ali will accept sitting at the table for a meal that I've cooked. Nessa is, apparently, 'a bit of a veggie,' which is something of a challenge since Ali seemed unable to clarify what 'a bit' actually meant. I've therefore opted to go full-on vegetarian and make vegetable fajitas and nachos -- the recipes for both seemed relatively straightforward and appealing. I hope Nessa isn't vegan or the cheese and the sour cream could be a problem. It'll be Ali's fault if it is.\n\nPart-way through chopping the sweet peppers, I hear laughter from Ali's room and it makes me smile. She hasn't laughed very much over the past weeks, so I'm glad she's happy this evening. \n\nI wonder if sleepovers are a big deal these days? They seemed to exist mainly in American TV shows and films when I was growing up. I heard of a few girls \u2014 the cool clique, mostly \u2014 having sleepovers, but I was never going to be invited to one of those. The most my small group of friends ever did was tea at each other's houses and a couple of hours doing homework together. My first 'sleepover' with a girl \u2014 if you could call it that \u2014 was at University and involved a lot more than just chatting and laughing.\n\nThe food doesn't take long, and I put everything on the table: sour cream; salsa; sliced jalapenos; grated cheese; a stack of warmed, soft tortillas on a plate; the nachos covered in melted cheese, salsa and guacamole, and finally, the hot frying pan with the fajita filling. That was the other thing about the recipe: I thought everything being shared and everyone helping themselves would be nice.\n\nStepping back from the table, I call the girls \u2014 three times in fact before they finally come ambling into the kitchen. \"Here were are,\" I tell them. \"Ali said you are a vegetarian, Nessa, is that right?\"\n\n\"Yeah, kinda,\" she says, and for some reason, this makes them both laugh.\n\n\"That's what Ali said, too,\" I reply, a little perplexed. \"Anyway, there's water or diet Coke or lemonade to drink; I'm going to have a glass of wine.\" I've had a month without sex and without alcohol, so one of them has to give.\n\n\"Is wine an option for us too, then?\" Ali asks, not entirely unexpectedly.\n\n\"That depends on whether Nessa's parents will go ballistic if she finds out that I've allowed her to drink.\" We both look at Nessa. \"So, on the assumption that, inevitably, your parents will find out, what's the answer?\"\n\n\"Nessa's Mum would be cool with it,\" Ali interjects.\n\n\"Nessa?\" I ask.\n\n\"Yeah, Mum lets me have alcohol sometimes,\" she says. It sounds like her mum is the sole arbiter in the matter. Unless Nessa's father isn't around for some reason, in which case mentioning 'parents' wasn't a good idea. Perhaps having just a single parent is one of the things that brought the two of them together.\n\n\"Okay, wine it is then,\" I reply. \"Go on, sit down.\"\n\nThe meal goes well \u2014 perhaps helped by the two small glasses of wine and the slightly larger one for me. Having Nessa there helps the conversation and this, in turn, reveals things about what college is like for Ali.\n\n\"So who are 'Miriam and the Bitches'?\" I ask. \"I assume they're not some new, all-female punk band.\" \n\n\"Nah, 'though it'd be a pretty cool name,\" Nessa smiles. \"They're just this clique of stuck-up bitches who think that just 'cause their parents have got money, that makes them better than everyone else.\"\n\n\"I hate them,\" Ali adds, with feeling.\n\n\"Yeah, that's 'cause they're always on your case. All that shit about your new laptop...\"\n\n\"What shit?\" I ask, concerned.\n\n\"It was nothing, Tina,\" Ali says, with a hard stare of disapproval at Nessa. \"They were just pissed off that I'd got something decent, but if it hadn't been that it would have been something else. It made a change that it was about me having something instead of not having it.\"\n\n\"What did they say, Ali?\" I ask, \n\n\"Like I said, it was nothing,\" Ali insists.\n\nI take a guess. \"It was about the laptop so, what? Did she suggest you'd stolen it or something?\"",
        "\"Kinda, but Tina, I'm serious, I don't want to talk to anyone about it, okay?\"\n\n\"Ali, I'm not about to go storming into College as if you're a little kid who's being bullied, even if that's exactly what seems to be happening \u2014 the bullying, not the little kid bit,\" I add, just to avoid any misunderstanding. \"I also get that you might not want to talk to the College \u2014 at the moment,\" I emphasise, \"but if you need to then I'm on your side, right? I'm sure the College would be too.\"\n\n\"I don't want them involved. I can look after myself.\"\n\n\"I don't doubt it... but sometimes, you know, it's nice not to have to do it all on your own. I'm sure Nessa would agree.\"\n\n\"Uh?\" She seems a little startled at the mention of her name. \"Uh, yeah, definitely. Ali knows I'll be right beside her.\"\n\nSilence descends and I'm not sure how to get the conversation going again. Fortunately, if unexpectedly, it is Nessa that speaks: \"Um, Tina, Alia says you like swimming and that you, like, swim miles.\"\n\n\"I don't know about miles,\" I reply, but yes, I do like it. I used to swim for my school team and later for the team at University. I've not been going as often recently.\" \n\n\"I'm not stopping you,\" Ali protests, offended. Shit! I wish I hadn't said that. She's right, it sounded like I was blaming her. \n\n\"I wasn't blaming you, Ali. Work's been busy but, okay, I just need to make more effort to go, I suppose,\" \n\n\"It's the weekend now, so you've got time,\" Nessa points out.\n\n\"Very true,\" I concede. \"And what about your weekend? Have you both got College work to do?\"\n\n\"Oh, god, can you not?\" Ali groans. \"That bloody Psychology assessment essay!\"\n\n\"Mum's not coming to get me until, like, midday; we could help each other tomorrow, yeah?\"\n\n\"Yeah? That'd be cool.\"\n\n\"Just don't get accused of copying each other,\" I advise, \"I'm speaking from experience here.\"\n\n\"We'll be careful, won't we Ali?\"\n\n\"Yeah, but can we stop talking about College stuff now?\"\n\n\"Okay,\" I agree. \"Right, anyone wants more nachos?\"\n\n Saturday 12 December\n\nI wake feeling more rested and relaxed than I have for weeks. I wonder why? Perhaps having Nessa here allowed me to relax. Who knows?\n\nThe meal had been a success, I think, particularly after the discussions about College ended. I asked Nessa about what she wanted to do in the future \u2014 forensic psychology is what she's considering \u2014 and Nessa asked about what I did for work and what I'd done at University. I don't know, but maybe it helped Ali too, hearing about my past beyond what had happened with Pippa.\n\nI also learned that they'd been friends since secondary school, where Nessa joined in Year 9. With Nessa not knowing anyone and Ali being a bit of an outsider, they had ended up sitting together and the friendship had formed. My guess had been right: Nessa's Mum is indeed on her own and that had helped bind their friendship.\n\nThe girls had gone back to Ali's room after dinner, although not until Nessa, bless her, had insisted they help with the washing up. She's a sweet girl and I hope her good example rubs off on Ali. Still, their disappearance had allowed me a second glass of wine. Maybe that was why I'd slept so well.\n\nI stretch and run my hands over my warm, skin, brushing my nipples and they tingle deliciously in response. Mmm... my right hand strays lower, towards the soft glow of arousal between my legs. God, I want to cum and a shiver of anticipation runs through me... no, I daren't. It would be bad enough if Ali overheard me, but Nessa too? I can't. \n\nI also need is to pee, and once I'm aware of the sensation, it's hard to ignore, just lying here. I open my eyes in frustration to see bright light edging the curtains and wonder what the morning is like. Forcing myself from the warmth of the bed, I move the edge of the curtain to look out \u2014 into the dazzling glare of the sun just clearing the horizon. I blink, purple spots dancing in my vision, and look down to the small rectangle of scrubby grass that is, technically, my garden. The blades are frosted white while above, beyond the dark tracery of the bare trees, the sky is a clear blue: a perfect winter's morning.\n\nI quietly cross the room and open the door: silence. I know Ali and Nessa were talking until late -- indistinct murmuring and occasional laughter still audible as I went to bed. I guess they finally wore themselves out and probably won't be awake for quite a while.\n\nSod it, if frigging myself into a blissful stupor isn't an option then I might as well enjoy a walk in the crisp morning and go swimming. I'll probably be back before they even wake up, though I ought to leave a note for them in case they wake and wonder where I am. Maybe I can pick up some fresh croissants or something for breakfast on my way home. Right now, I'm going to take advantage of their sleeping in another way and not bother to dress before going to the bathroom. I've missed being naked at home.\n\n<center>+ + + + + + + + + + + +</center>\n\nI turn into Market Street, and I cannot help recalling the chance encounter with Andi, the cow. However, at eight-thirty on a cold winter's morning, the Street is almost empty and the chance of a repeat is, I think, highly unlikely. I'd walk straight past her anyway.\n\nWhen I enter the leisure centre it feels... different. There is a handwritten sign pinned to one of those A-frame display boards: \n\n<blockquote>POOL CLOSED</blockquote>\n\nI approach the reception counter and the bored-looking young female staff member that I vaguely recognise. \"Hi,\" I say, my membership card clamped in my hand. \"So... the pool's not available?\"\n\n\"No, sorry: the boiler's broken down so the water's too cold.\"\n\n\"I'm sure the water can't be that cold, surely?\" I object. \"And I'd warm up whilst swimming.\". It's so bloody frustrating to have finally managed to get here only to be thwarted by the water being 'too cold'.\n\n\"Sorry, but the water's too cold for most people,\" she insists. Another staff member is walking past and overhears our conversation.\n\n\"It d'n't matter anyway,\" he tells me. \"William has made us pull the covers over both pools to try and stop 'em getting colder. Says it's to save money, an' so they won't take so long to heat up once the boiler's fixed,\" he concludes, before continuing on his way.\n\n\"William's the manager,\" the young woman adds as if this finally ends the discussion. I guess it does, really.\n\n\"Damn,\" I curse softly, shrugging my rucksack a little higher on my shoulder. \"Thanks,\" I add as I turn away, though the word is uttered out of habit since the girl's not exactly done anything to help me.\n\nI leave the building and begin the walk home. On the way, I remember my idea of croissants, so I take a little detour to the bakery on the High Street and buy four croissants and, on impulse because they're on display beside them, four pains au chocolat. Ali is partial to chocolate, and Nessa quite happily tucked into the cheesecake I bought for dessert. (No, I didn't even consider making one \u2014 there are limits.)\n\nAs I arrive home I notice that the sun is melting the frost on the grass, leaving icy frost-shadows in the shade. I take care while climbing the steps to the front door as they are still rimed with ice. I turn the key in the lock and push the door open.\n\n\"Uuuh, oh, yes... Ahhh, yes, right there!\" That sounded like Nessa's voice, her words distinct, even through the closed door of her room.\n\n\"Stop talking and keep licking, Ness,\" That was definitely Ali. \"Mmm, yeah!\" she exclaims. Oh. My. God. Ali and her best friend are fucking! Lots of things \u2014 Ali's excitement at seeing Nessa at the Parents' Evening, Nessa's comment about always being there for her, their closeness, not to mention how keen she's been to go and live with Nessa, maybe even their laughter at Nessa being a 'sort of' vegetarian \u2014 it all suddenly make sense. In hindsight, I wonder why I hadn't suspected.\n\nQuietly closing the front door, I tip-toe to the kitchen and place the bag of croissants on the table. I'm sure the note I left for them has been moved. I wonder if this was why they were so keen for me to go swimming when I mentioned it last night? \n\nI cannot help the smile on my face: this is a turn up for the books! Ali had asked me, on our way here that first day, if I had a boyfriend. She'd seemed relieved when I said no, but I'd assumed that her reaction was due to her experience with Pippa's men. \n\nNaturally enough, I asked her the same and I remember the sense of relief I felt when she'd said no too. Relief that for a while at least, I wouldn't have to deal with some spotty lowlife messing her around; relief that maybe she hadn't adopted Pippa's desperate need to always have a boyfriend as if that somehow validated her; relief that there wouldn't immediately be questions on being with a boy, what she should or shouldn't do and, above all else, about my experience with boyfriends \u2014 which is precisely zero.\n\nI can still hear muted gasps and cries, and there is, although I try to suppress it, a slight twinge of jealousy. I also, and very determinedly, do not think about exactly what they might be doing together. Instead, I turn the oven on to a low heat, and as quietly as I can, so as not to disturb them, I fill the kettle and set it to boil. \n\nNot thinking about Ali and Nessa is like trying to not think about an elephant, and I pick up one of the teen fiction books Ali seems to enjoy reading and has left on one of the worktops. <ii>Afterworlds this one's called, so something about death, vampires or zombies, I suspect. She seems less enthusiastic about reading the books she has set for English, but I haven't had the courage to say too much about that, not yet. \n\nI sit at the table, open the book and am shocked to almost immediately be plunged into a mass shooting at an airport in which the book's protagonist \u2014 a teenage girl, naturally \u2014 is caught. The airport scene then turns out to be from a book \u2014 written by another teenage girl \u2014 within this book. It's surprisingly engaging... Events of Ali's room reach new heights as first Nessa and then Ali give (somewhat muffled) cries.\n\nI force my attention back to the unexpectedly interesting book as silence returns, and I'm just starting the third of the fairly short chapters when the sound of a door opening snatches my attention back to reality. I half-stand, leaning forward to peer out into the hall, and see Ali emerging virtually naked from her room, pulling one of the long tee shirts she uses as a nightdress over her head. I hear Nessa call out, \"Hurry up! I want some more time with that sexy bod of yours!\"\n\nAli looks up as her head pops out of the shirt's neck hole, her smile melting to become a startled, horrified expression as her eyes meet mine. Then, without a word and trying to pull the shirt down to cover herself, she bolts back into her room, the door slamming shut behind her. \n\nOh... shit. What do I do? I push the chair back and walk slowly from the kitchen. Perhaps if I'd just stayed sitting, allowed her to walk in and find me... No, it probably wouldn't have made any difference.\n\nAs I approach her room, I hear Ali's voice, \"If you hadn't shouted out about my...\"\n\nI tap on her bedroom door. \"Ali?\" I think I hear hissed whispering and movement. \"Ali?\" I repeat with another tap the door. \"Look, I'm not upset, really I'm not.\" It occurs to me that Mum would say something like that, and she wouldn't be, not at first: she'd just not say anything. No, the upset would come five or ten minutes later, when the silence became unbearable and you tried to say something, anything. Even an apology couldn't stop the angry denunciation. \"Ali, I've croissants for breakfast and I can make you and Nessa some hot chocolate. Can we talk?\"\n\nIs that more whispered discussion? It might be, but I walk away with a sigh because I don't want to force this and make it worse. Instead, I put the croissants and pains au chocolat on a baking sheet and slide them into the oven. Then I boil the kettle and make the tea I'd planned twenty minutes ago. I take out the jar of instant hot chocolate and two mugs. \n\nI've taken a few sips of tea when I hear Ali's bedroom door open once again. I may be projecting but it sounds nervous, hesitant, so I resist the urge to call out. \"Hi,\" I say when she finally appears in the doorway, her tee-shirt in place and socks on her feet. \"Are you okay?\"\n\n\"We thought you were out,\" she says, flatly. \"That's what your note said.\" A hint of accusation has crept into her tone.\n\n\"The pool was shut \u2014 they said that the boiler was broken down. I, er, I'd been home for about, um... fifteen minutes when you came out. I didn't mean to startle you. Is Nessa there?\" She glances back and then nods. \"Do you both want hot chocolate?\" Another nod and I gesture to the chairs as I stand and go to the kettle. \n\nI hear movement \u2014 soft footsteps and the scrape of chairs \u2014 but I don't turn around. \"What..?\" Nessa's whispered question is cut short.\n\nI turn back and place the mugs of chocolate on the table at which they now both sit. \"Look, can we just get to the bollocking, Tina?\" Ali says, \"And the bit where you tell me that I gotta promise not to, er, you know, with Nessa again or else I can't live here anymore. Coz I'm not going to promise...\"\n\n\"Firstly, at your age, you have the right to chose to sleep with someone \u2014 male or female \u2014 so there's no question of me telling you off for breaking the law or anything. As for my objecting to you making love to a girl, well, that would make me a complete hypocrite,\" I tell her before turning away to take the pastries from the oven.\n\nAs I place the dish on the table and pull the oven gloves from my hands, it is Nessa who finds her voice. \"You'd be a hypocrite... so, you're...\"\n\n\"I'm gay, yes.\" There is a momentary silence before Ali speaks.\n\n\"Why didn't you tell me?\" she demands \n\n\"Well, unless your feelings for Nessa are something new in the past couple of weeks, then probably for precisely the same reason you didn't tell me about the two of you \u2014 I didn't know how you'd react. My parent's never accepted my being a lesbian and neither did Pippa \u2014 that was a big part of why we never spoke \u2014 and I was afraid that you would share her views.\" Ali's angry expression softens. \"Rowan \u2014 the one Pippa mentioned in the letter, the one Mum and Dad didn't like \u2014 was a girl, Rowan Connelly. I'd just turned nineteen when I came out to Mum, Dad and Pippa, and in my first term at university. I was home for the weekend and I told them that I was attracted to girls, that I was a lesbian, and Rowan was my girlfriend.\" I take a sip of tea and Ali sits in thoughtful silence.\n\n\"I...\" she begins. \"Um... Mum used to make comments, you know? If there was, like, a lesbian on TV \u2014 a character in a film or something or someone on the news, like when gay marriage was allowed... she'd make some comment like... like they were weird or that the TV shouldn't make out like being a lesbian was normal,\" she sighs, and very sweetly, Nessa reaches out and takes her hand. Ali leans into her until their shoulders and heads touch.\n\n\"So, we were both worried that the other shared Pippa's attitudes,\" I tell her and Ali nods. \"You won't be surprised if I tell you that Pippa was completely wrong and there's nothing abnormal about being a lesbian and don't let anyone make you think otherwise.\"\n\n\"It's all them straight girls who are missing out!\" Nessa chuckles.\n\n\"Absolutely,\" I smile, gesturing to the food. \"Come on, let's eat, before it gets cold.\" They tuck in and I start to eat too. I almost make a comment about them working up an appetite, but common sense kicks in to save me. There are some things a parent \u2014 or a guardian \u2014 probably shouldn't say \u2014 ever.\n\n\"So, have you two been girlfriends for long?\" I ask.\n\n\"Since last summer, I guess,\" Nessa replies, smiling at Ali.\n\n\"Yeah, since that afternoon in the park when you dared me to kiss you,\" Ali returns the grin. \n\n\"You were the one talking about how Lara Croft would be even better as a feminist icon if she was a lesbian.\"\n\n\"Yeah, but you'd been flirting with me, like, outrageously for weeks!\"\n\n\"Okay, maybe, but, like I didn't think you'd even noticed!\" Nessa protests. Ali leans in and kisses her on the mouth.\n\n\"Trust, me, Ness, I noticed. All of me noticed!\" With only thin shirts and no bras, it's pretty obvious that they're both noticing each other again right now\n\n\"So, do others know about your relationship?\" I ask quickly. \n\n\"We're kinda out at College,\" Ali admits with a slightly brittle edge. \"We, like, told a few people and it seems to have got round .\"\n\n\"Yeah... Miriam and the Bitches fucking loved finding out about us,\" Nessa complains, bitterly.\n\n\"Is that what they were they were going at you with yesterday?\" I ask, remembering Ali's slight ambiguous answer when I'd asked if they were bullying her because of the laptop.\n\n\"They... they kinda always use it but yesterday it was the laptop they were pissed off about.\" \n\n\"Yeah, but asking if you'd got it to search for dyke porn was well out of order,\" Nessa protests.\n\n\"I know... but Tina,\" Ali looks at me seriously, \"I did mean it when I said I didn't want you to do anything.\"\n\n\"Yes, okay... I'll stand by my promise,\" I assure her, \"though if they ever do it when I'm present, then you can be damn sure that they'll wish they hadn't!\"\n\n\"I reckon you could be well scary, Tina!\" Nessa laughs.\n\n\"Hmm, perhaps. So, does your Mum know, Nessa?\"\n\n\"Mum? Nooo... telling her is, like...\"\n\n\"Well scary?\" I suggest.\n\n\"Way too scary.\"\n\n\"I understand, but you should, you know, think about telling her,\" I say gently.\n\n\"Tina, how can you say that?\" Ali asks angrily. \"I mean, after what you said happened when you told your parents. You don't want that happening to Nessa, do you?\"\n\n\"Of course not,\" I protest, \"but not everyone is like my Mum and Dad... or like Pippa.\" I suddenly recall Nessa's Mum \u2014 Heather, wasn't it? \u2014 rushing from the Parents' Evening for her church choir practice; a lot of churchy people hold homophobic views, even if the Bible, from what I've been told, hasn't a single mention of lesbians or lesbianism. \"It's your choice, of course Nessa, but things like this have a nasty habit of coming out when you don't expect, so it might be better to tell your Mum when you see an opportunity, that's all.\"\n\nNessa gives a thoughtful nod, and when she goes on to ask about me \u2014 when had I realised I was gay and what had happened with my parents \u2014 I feel I have to be honest, even if (as Ali points out) it isn't an encouraging tale. There is also the inevitable question of whether I have a girlfriend, which is uncomfortable. In the end, I go with, \"I had one, but she left me for somebody else,\" which is true \u2014 four times true in fact, I realize with an ache: Angela, Alex, Jojo and Jan. At least with Rowan, we had both agreed it was over between us, and Andi absolutely does not count.\n\nNevertheless, as we finish breakfast there is a new closeness between Ali and me as if we've weathered a storm together and survived. I feel happier and more content than I have in weeks, although I still feel the weight of Pippa's expectations.\n\n\"So, you two were going to do some work this morning; some Psychology, I recall?\" I say and two pairs of shoulders sag, Ali's especially.\n\n\"I guess,\" she says with theatrical heaviness. Nessa leans in and at first, I think they're going to kiss but Nessa whispers something to Ali, prompting a little smile. \"Uh, yeah. I guess we better get dressed then,\" she says with suspicious enthusiasm.\n\nBefore she reaches the door, Ali hesitates. \"Tina, do we... do we have to tell Social Services about me and Nessa?\"\n\nI pause for a moment to think. Do we? Is this something they need to know? \"I think... No, I don't see why we should. I doubt any guardian or step-parent would feel they have to report their daughter having a boyfriend, so no. I guess if they ask directly, then we'd have to tell the truth but you being a lesbian is no more significant than the fact that I am,\" I finish firmly."
    ],
    "authorname": "ScattySue",
    "tags": [
        "first time",
        "jealousy",
        "one-night stand",
        "oral sex",
        "orgasm",
        "romance",
        "seduction"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-sun-on-my-skin-ch-03"
}