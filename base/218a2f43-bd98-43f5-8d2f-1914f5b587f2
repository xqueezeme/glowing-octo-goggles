{
    "title": "Dazed But Not Confused",
    "pages": [
        "Well tonight I had gotten home from visiting a few friend's from down the way, it was still cold out but with no snow. You know that cold wet and dreary weather, just cold enough to make me feel miserable as I had made the mistake of wearing my spring leather coat. An hour ago I had ran out of smokes and well was fairly glad to be back in my nice and warm apartment, I got myself a glass of mead wine and sat at my computer opening up a fresh pack of cigarettes. \n\nBy the time I opened them and lit one up I found myself searching on Lit erotica, as I sat and read a few stories smoked a few cigarettes and sipped my glass of mead, I started thinking about writing another story. And well I have quite a few in my head that I could just throw down here and submit, but I like to be satisfied with what I submit and it has to personally turn me on as well. Well the more I read the more wet I was starting to become, quite frankly I am not sure weather it was my loneliness or the mead, perhaps the fact I was reading story's from here!\n\nI was reading a story about a married couple, who had an open relationship and in this story they were having a threesome with another male. The other male had a rather large cock, much bigger than her husbands, around ten inches long and a bit thicker than average. As I read on and the story heated up, it turned me on how her husband was so hot watching his wife fuck this well endowed man while he watched.\n\nAt this time my left hand had started it's way under the waistband of my jeans and easily slid into my silk panties, when my middle finger parted my smooth labia it made me gasp sharply as my overheated snatch twitched at the touch of my finger. I was very hot and slippery as I moved the finger over my hot hole and dipped it inside me, by now I had stopped reading the story that was on my monitor and was now moaning softly as I moved my finger in and out of my slippery hole.\n\nIt wasn't long before I closed my eyes completely and brought myself off, having a nice come right there in my leather office chair. It was nice but I immediately found my uncontrollable urge building in me wanting more, so much more that it would drive me crazy until I had come to terms with it.\n\nSo I decided to make my way into my spare bedroom to my toy box as I'll call it, sucking and licking my own tangy juices off of my fingers as I did. Tonight I had a very strong longing to feel very filled and stretched to my limits, and well the first thing that caught my eye as I opened my toy box was the still unused eleven inch Caucasian Dido I had bought with my now beloved mulatto one that was a fat ten inches.\n\nIt felt heavy in my little hand as I picked it up and looking at it sent a nice little shiver down my spine, it wasn't near as thick as the massive mulatto cock I had used before but was an inch longer. I had bought this one just for the fact that it wasn't very fat, and that it might be good for nights where I was craving a bit more for my ass other than the five inch butt plug I had bought months ago at the same shop.\n\nIt was then as I stroked and stared at this substantial piece of phallus that I had determined to use it on my ass, tonight I was going to see just how much of this eleven inch cock I could manage to bury in my tight little ass. In minutes I had my clothes off and was in the bathroom getting my ass ready for what lay ahead, as I returned to my spare room I grabbed the large tube of KY and stuck that great cock to my little table. \n\nKneeling down as I started rubbing a good amount of the slippery lube onto it I felt one then two warm droplets drop onto my calf, I was actually dripping with anticipation to feel that big thing open me up and go so deep. At this point I didn't see a need to use my butt plug to loosen me up for the big guy since it was just a bit bigger around than the plug, after lubing it up I started on my ass squeezing out a dime sized drop.\n\nMy anus contracted to the cold feel of the thick lube as I spread it around, I added another dime sized drop and started to work it into my ass pushing my right index deep inside a few times to make sure I had a decent amount inside. After this I felt as ready as I ever would be, I got up and straddled my skinny table to mount that near foot of realistic latex cock.\n\nI lined up the head and started to push down gently at first, just jabbing it against the entrance to help loosen up the tight muscle that would very soon give way. After relaxing a bit I steadied myself and pushed downward, a moan escaped my lips as three inches slipped inside of me and I held myself right there not moving. It felt bigger than my butt plug and different as this had a contoured head, it hurt a little and as I started to again relax and the pain started to subside I pushed and a little more slid in.\n\nWith another little moan I now had five inches inside my now tingling ass, now the pain had stopped all together and my ass had started to heat up to take more. But for a moment I stayed there letting myself relax and conform to the Dido in my ass, I raised up and it came out with a loud pop. I grabbed my KY and with two fingers slipped in a quarter sized drop of it inside my ass, and put a little more on the head and along the shaft of this cock.\n\nI straddled my table again and this time the five inches I had taken before went in easily and without any pain at all, I now decided to really start on what I had planned and begin the process of taking more and more inside me. My next downward push brought me three inches farther down, witch was beyond the halfway point. I had my first orgasm right there, moaning and whimpering my legs trembling as it rolled through me.\n\nThat was also when I met a bit of resistance, but I had heard that an ass can open up to admit more but I wasn't sure, at this point I decided to see if that were true. Still a bit light headed I started to slowly bring my ass up the length to about three inches from the top and sink back down on it, I started fucking the eight inches that I could and soon was rapidly shimmying my ass up and down that now hot and slippery pole.\n\nAnd again it wasn't long until I was racked with another strong orgasm, at this point it my ass was loosened up and it was feeling really damn good. It was then an idea struck me, I gave it a few more thrusts and withdrew it from me coming out again with a gooey popping sound. I grabbed my little table and stood it on it's side legs against the wall, I adjusted the toy's height to the perfect level for entry and got onto my hands and knees pushed back and immediately filled the void in my backside.\n\n\"Oh god I love this damn thing\"\n\nI said out loud to myself as I started stroking it in and out of myself beginning to meet the resistance deep within, fucking it as deeply as I could another orgasm started to well up inside of me and I couldn't help as I started to come to fuck the damn thing harder. As I was coming I vaguely started to feel it making way inside of me, and with out warning it started feeling really fucking good. With my hardest thrusts back wards I could start to feel the fake balls on this massive dildo on my lust swollen cunt lips, I could hear myself yelling incoherently as I skewered my ass along what felt almost like the entire length of that huge rubber cock as I came hard multiple times.\n\n\"Ahhhh...oh FUCK...oh ohhh FUCK!\"\n\nMy mind was buzzing and my ass felt numb but I could still feel that long pole sliding in deeply and pulling nearly all the way out, god could I feel the delicious way that huge dildo was making me feel withdrawing and then spreading my anal canal wide splitting it so damn deep into my asshole. I felt like I was in a daze as I leisurely fucked myself on it, I was partially satisfied though. I still felt the need to get off now, if not more strongly that ever.\n\nI pulled myself off of that great dildo and took my table and stood it back up where it was, I was a bit uneasy standing as my legs were like jello but I managed still. I washed that eleven inches off and got back into my toy box and grabbed a thick eight inch rubber cock from the collection and my best vibrator, I lubed up that thicker cock stuck it to my table and surprisingly I managed to bury the whole thing in my ass fairly easily.\n\nI road that while using my pink glitter vibrator for a good ten minutes, bringing myself off to a great come. Without taking that great feeling chunk of cock out of me I reached over and grabbed that eleven inch bad boy, I put my vibrator down and started to rub it along my slit. It felt like my pussy was going to burn up, I pushed that dildo in me and I let out a groan that just exemplified how damn good what I was doing felt.\n\nAfter a few strokes into my broiling pussy I hit bottom with three inches to spare, I managed to start rhythmically pumping them both in and out of me at a good pace. Soon though my pace had changed to frantic as sweat started to bead in the freckled valley between my cream colored breasts, and along my ribcage and trickling downward across my hips as I moaned loudly and cussed the ceiling.\n\nMoments later I came so hard I lost my grip on the cock in my pussy and it slid out and fell to the floor, I kept slamming myself down onto the cock in my ass making my table shake and creak as I road through that humongous orgasm yelling and carrying on as what felt like every muscle in my body tensing so hard it was almost painful. I sat my ass firmly on the table as that intense pleasure washed over me, as my senses returned I felt the cool air on my sweat coated skin and the intense throbbing in my ass around that thick dildo that was still firmly lodged in it still.\n\nAs I started to stand pulling it from my ass I couldn't help but groan as it came free, the lube I had put in my ass earlier had liquefied and now trickled from my gaping anus like it was a come shot. When I stood I could barely walk without the help from a wall or two, I felt so drained and limp I decided to clean myself and everything else up later and staggered to my warm bed. I had slept only five hours I awoke to smoke a cigarette, then decided to clean up myself and my mess.\n\nAfter cleaning up well and putting everything back into it's rightful place, I had decided to write down everything I could about that little event as it was so hot for me at the time. At that time I was hoping that you the readers will like this one as well as the last, I know I enjoyed doing it that is for sure!"
    ],
    "authorname": "FallonPiper",
    "tags": [
        "frantic",
        "fuck",
        "ass",
        "freckled",
        "backside",
        "slippery",
        "overheated",
        "snatch",
        "deep"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/dazed-but-not-confused"
}