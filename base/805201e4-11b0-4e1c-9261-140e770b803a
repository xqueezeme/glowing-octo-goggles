{
    "title": "Rag Doll Ch. 07 - Ricky's Family 01",
    "pages": [
        "This segment of the story has no overt sexual activity, it's purely context, scene-setting, and dialogue, but is in this story-genre because it forms an essential part of the 'Rag Doll' sequence, and I hope you, the readers, will understand why this part has been included here. The next part is where all that takes place, so please be patient and follow the storyline, that's all I ask.\n\nAs always, I caution the reader that this is not the real world, it's an imaginary universe where things happen the way they do because that's how I need them to happen, but honestly, it's not that different from the real world.\n\nThere is no sexual activity, but all characters are over the age of 18, and if you liked this chapter, please do let me know, or why you didn't, all comments are addressed, and if you want to email me with comments, questions, or suggestions, please don't forget to add a return email address so I can come back to you.\n\nPlease read, and, hopefully, enjoy, I had a lot of fun and enjoyment getting this out there, I hope you have as much reading it. The next part follows very shortly.\n\nBB1958\n\nNicky yawned and stretched luxuriously, groaning pleasurably as his joints popped. Lying here, sprawled in front of the TV, late at night when the house was silent, was a rare privilege these days, one he could only enjoy once all the kids were put to bed; it was fun being 'Uncle Nicky; climbing frame, entertainment centre, and occasional wrestling opponent', but with all his nephews and nieces, and daughters, and little sisters to entertain, more than a little tiring. He looked around thoughtfully at his childhood home, comparing his memories of how it had been to how it was now.\n\nIt was still a strange, sometimes unsettling experience to come back to this house where he had grown up, where so many bad memories and old hurts had once dwelt, but the cold, cavernous barn with the frigid atmosphere of hostility and throttled anger he remembered living in, tempered only by the warm, loving presence of his 'mother', his Barbara, was gone forever, courtesy of Bobby, Shari, Rick, and Yaz. Thanks to their efforts it was a home now, a proper family home at last, filled with warmth, love, and laughter, and the sound of children playing and storing-up happy memories of growing up here surrounded by love.\n\nNicky smiled to himself as memories of his beloved Barbara here, with him, intruded on his reverie; how she would have loved the light and laughter, and the sound of children laughing and playing filling the house now, and the fact her prison had finally become the place of love and treasured memory she had longed for.\n\nWith the thought of Barbara and children returned the reason for his treasured solitude; in the morning he'd be ferrying all the children, all seven of them, to the local Golden Arches, and he was already regretting volunteering to take them; now that he thought about it, he was almost certain Bobby, Ricky, Leon, all four girls, and even his stepfather, David, had taken one step back when his mother had asked for someone to do it, leaving him alone in her direct line of sight, so now he was stuck with it.\n\nHe'd promised he'd take them in a moment of weakness, but he wasn't sure he had the strength to ram-rod his two raucous, golden-eyed little speed-demons, Barbara and Judy, Ricky's two boys, David aka Richie Jr. and little Leon, Bobby's little girl, Ayesha and her younger brother, Nick, and his own little sister, Rachel. Leon was supposed to be helping him, but only because Judy had 'volunteered' him, and he hadn't exactly been straining at the leash for the privilege of rounding up a gaggle of kids; he'd said at the time he'd rather herd cats, earning him a baleful glare from Judy and a pained look from Ashley, and so it was decided; either help-out or live indefinitely in Judy's painfully inventive dog-house, so he'd taken the path of least resistance.\n\nAs he savoured the last of the peace he so rarely got, light footsteps intruded on his solitude, before his wife, Ashley, his younger half-sister, a fact he usually forgot, dropped lightly into his lap. Every time Nicky looked at her he found himself being astonished all over again that he'd captured such a beautiful girl, or that she'd want anything to do with someone like him; tall, slender, with a mane of gold-shot bronze-auburn hair, clear grey-green hazel eyes, sometimes grey, sometimes almost bottle-green, depending on her mood, but always huge, and beautiful, her pale skin and clear complexion highlighted by the most adorable spray of faint freckles adorning her upper cheeks and the bridge of her snub nose. \n\nWith Nicky ten years now, and in her late twenties, married for nearly eight years, and the mother of two children, she nevertheless still looked like the nineteen year-old high-school girl who'd captivated him all those years ago.\n\n\"Penny for your thoughts, English-Boy,\" she murmured as she wriggled herself into a more comfortable position on his lap. \"You looked like you were having some deep thoughts there, care to share?\"\n\nNicky nuzzled his beautiful wife as he wrapped his arm around her waist.\n\n\"Nothing really, sweetheart; I was just contemplating the great trek tomorrow morning; I know I wasn't that enthusiastic about it, but really, they're just a bunch of toddlers and little kids; how bad can it get, I mean, really?\"\n\nAshley twisted around in his lap to look into his eyes. As always, Nicky instantly became lost in her eyes, caught by her frank gaze; it happened every time he looked into those beautiful, expressive wells, truly the windows of her soul; her eyes fascinated, compelled, held him fast, and drew him in.\n\n\"They really saw you coming, didn't they, you poor, trusting simpleton? You're taking Ayesha, Barbara, and David out in public, together, in the same place, at the same time, without tranquiliser darts, nets, and a lasso, and you ask 'how bad can it get'? Those three alone are bad enough; add in all the other kids, and they'll all get on like a house on fire. Have you ever seen a house on fire? Explosions, flames leaping, roofs collapsing, broken glass everywhere, people screaming and running for cover; Babs all on her own, with no prompting whatsoever, would hit the big red 'Armageddon' button just to hear the bang, and you know that, so tell just me; who are you, and what have you done with my husband?\"\n\nNicky nodded glumly.\n\n\"You're right, who am I kidding, this is going to be a disaster, like World War 3, but with fries and extra ketchup...\"\n\nAshley nestled her head in the hollow of her neck and pulled him closer.\n\n\"At least we have now, Nicky-baby; savour the silence, hot-stuff; psycho-loony chimpanzee time is still several hours away! Look on the bright side, though; after this is all over, I promise to visit you in the asylum every other Friday!\"\n\n\"Yeah, ha-ha- very funny...\" grumbled Nicky, but cuddled her closer anyway, \"and what are you going to be doing the Friday's you're not visiting me, then?\" he grinned.\n\nAshley smiled impishly.\n\n\"That's easy; I'll be spending them with my new husband, the one smart enough to not be so easily conned by mom. She really saw you coming, Hot-Shot!\"\n\nNick grinned and pulled her close for a quick, but satisfying kiss, before settling her more comfortably in his lap. They sat in silence for a while, each content with their own thoughts, Ashley savouring her quiet-time with her husband, until Nicky began picking up that perhaps his wife wanted to talk about something; if it was important, Ashley would have brought it up right away, so it was something she wanted to talk about, but not important enough to disturb him. Of course, when it came to Ashley, Nicky never let anything lie; part of his charm, as far as she was concerned, was that he was always interested in what was going on with her, so, after they'd sat silently for a while, he squeezed her bottom companionably and tipped her face up so he could look into her eyes.\n\n\"What's up, Ash? You've got something on your mind, I can tell; come on, former Miss Lowry, spill it.\"\n\nAshley grinned at his using her maiden name, something he only ever did in private.\n\n\"Actually, it's not so much a problem as something that's been nagging at me for a while now, but in an 'I'm curious' way, not an 'I'm worried' kind of way...\"\n\nNicky cocked an eyebrow at her, a quirk of his she'd always found absurdly attractive.\n\n\"Go on, please; you've piqued my curiosity, don't leave me hanging here.\"\n\nAshley looked thoughtful for a moment, then smiled.\n\n\"So, what it is, I was looking back over the last few years, from pretty much the day you first came to us, going over it all, getting things straight in my mind and I realised there was one side of the story we've never heard...\"\n\nNicky nodded. \"Go on...\"\n\n\"Baby, I knew most of your story, and, from talking with Ricky, I managed to fill in the odd gap here and there, from back then, and of course Bobby's been very forthcoming about where he was with you, the place he was in, and how Shari came into his life, but the one big blank spot is...I don't know anything about Ricky, apart from what you remember when he was young, and how he's so very different now, plus a few bits and pieces Bobby let slip. From the time he left home until the time he showed up back here with Shari and Yaz in tow, there's a two year blank space. What was he doing? Don't get me wrong, I don't think he's got anything to hide, but even Bobby's mentioned it a few times in passing; when Ricky came home he was so radically different that it was like having a whole different person walking around and being Ricky; he was nothing like the Ricky who'd left a couple years earlier.\"\n\nNicky kissed her cheek as she paused to collect her thoughts.\n\n\"So what are you asking, Ash?\"\n\nAshley looked into his eyes, struck, as always, at how much like their mother's eyes they were, a warm, golden-tawny, something she'd never seen before, except in Nicky, her mother, and of course, their two little girls, who also had those startling golden eyes, and Nicky's dark-golden hair . She smiled distractedly as she picked at the collar of his polo shirt.\n\n\"I'm curious, is all; what happened to him, what made such a drastic change in him that even Bobby found it hard to believe it was him when he returned? How and where did he join up with the girls, how did he find them at all, and what led him there? Something must have tipped him off, what was it, and what happened when he found them? Yaz and Shari don't seem at all inclined to talk about it, at least not to me, but perhaps they'll open up to you; you have a special connection with them, they searched for you, they travelled half-way around the world looking for you, so they obviously felt that connection pretty strongly; perhaps they'll tell you things they don't think they can share with me. I'm only their big sister by a long, weird, and winding way, but you're their straight-up big brother; they love and are obviously in love with the boys, there's no doubt in my mind about that, but they absolutely adore you too, that's got to count for something... \"\n\nAshley paused, obviously feeling her way along what she wanted to say.\n\n\"I'd like you to talk to Ricky, babe; him, and Shari, and Yaz. Something happened to Ricky while he was gone, something profound, and it's all wrapped-up around Yaz and Shari and their mom. I think there's a story there they all need to tell; Shari's mom was so badly abused by your psycho father, yet she took Ricky in, his son, she took him and loved him like her own son; why? How did that even happen?\"\n\nNicky looked quizzically at his beautiful sister.\n\n\"This is really bugging you, isn't it, babe? Before you say anything, I know how much you care about him, he's kinda-sorta your kid brother too, but even that doesn't give you, me, anyone in this family the right to go rooting around inside him and maybe pulling strings best left untouched; don't you think he needs to keep some things between himself and his maker? Every man and woman on the planet has things stirring around inside him he doesn't want to look at too closely, things hidden in dark corners they don't ever want to think about, why can't Ricky have those too? Hmm?\"\n\nAshley nodded soberly.\n\n\"He should, I'd be the first to agree with you, but maybe he needs to let some of that stuff out, too, maybe share it with us, the people who love him most in the world? The story of our family will never be complete as long as this piece of the puzzle is missing, and it's one of the most important pieces. When Ricky came home, he brought the girls with him, and now the family's all together, there's all the kids, mom and dad now have, to all intents and purposes, eight kids, we're all interconnected and joined together, then there's that business with the charm bracelet too, so we know Barbara is still with us. We're a clan now, as Judy likes to point out, and she's right, but we're only a clan because Ricky found the girls and came home to Bobby, they looked for us and found us, and that's how this whole family-clan was born. How do we join the dots here? How did that come about?\"\n\nShe tapped the tip of his nose with a pink fingertip.\n\n\"it's important we know, baby, even Mom thinks so. There's pain there that Ricky needs to get off his chest, deep pain, and loss, she sees it in his eyes when he sidesteps any hints about what happened. Mom can feel him hurting, it shows in so many little ways, especially whenever Yaz or Shari mention their mom, and it worries her that he's still holding back and pushing all that pain way back down so he doesn't have to think about it. In every way that counts, Ricky is mom's son too, and she feels his hurt acutely. Talk to him if he'll talk to you, Nick; help him get this out, then we can finally set the record straight. We're only here a few more days; I really, really want to fill in the last blank spaces before we have to go home. Get Leon to help you; Rick trusts him, they're really close, and maybe he'll share if Leon asks him... \"\n\nNicky rubbed his forehead gently against hers.\n\n\"OK, you've asked me, I'll see what I can do tomorrow, after the great food fight, but no promises; if Ricky's hurting like you say he is, then it's for a reason, maybe a reason he doesn't feel like sharing, so I'll ask, but if he blanks me, then that's that, got it? When we get back, you and the girls take the kids to the park or something, run them around until they drop, and see if you can get mum to go along too. I know where dad's going to be; there's an exhibition of medieval junk at the museum, he was saying he wanted to go take a look, and I know for certain Bobby will go with him; they're pretty much joined at the hip. I'll see if I can collar Rick and get him to open up, but just think about this.\"\n\nNicky stroked her cheek lightly, emphasising his point.\n\n\"Shari's mother was also Ricky's mum, the first real mother he ever had. She took him in, and she loved him unconditionally, and he loved her desperately; it shows in all sorts of ways whenever her name comes up, and losing her hit him hard, I'm guessing the way losing Barbara hit me, maybe even harder. He'd only just learned how to love her, how much she loved him, she was all he had, and then it was torn away from him; that must have left some deep scars and even deeper wounds. I know it did for me, and Ricky's a lot like me, even I know that. However it was for him, he's bottling it up and keeping it down inside for reasons of his own, so I'm not going to push it, not even for you, babe. People have the right to keep their private pain private, and no-one has the right to go digging for it, not you, not me, and not even Leon, not that he will, got it? Being his family still doesn't give us any right to know what's buried in his heart, we have no right to go dragging whatever it is he wants to keep private out into the open; that's his to keep or share as he sees fit, you understand?\"\n\nAshley stared at him, her eyes searching his face, then slowly nodded.\n\n\"I know, you're right, babe; Ricky's your kid brother, so he's my kid brother too, and I don't want him hurt any more than you do; if he wants to tell, let him, but don't go scraping any raw nerves. It's just that the five of you have such a lot of loss and hurt between you, more than any one family should have to bear, because of what your father did to all of you, and me, too, but I've gotten past that. Maybe it's time you all faced your past, but yeah, you're right; if Ricky pulls back, just leave it be, don't go tearing off any scabs.\"\n\nNicky grinned and jiggled her on his lap.\n\n\"And with that delightful image, I think we should get some sleep; I have a tough and toilsome morning ahead, and don't think I didn't notice you lot all looking the other way and whistling and sticking your fingers in your ears and going 'la-la-la, I can't hear you...' at the tops of your voices when mum asked for volunteers; remember, revenge is a dish best served cold, and I will have my revenge, in this world or the next, mwahahahah!\"\n\nAshley slid off his lap and held out her hand.\n\n\"C'mon, let's go Nicky, I need to rub your back; how's the Betamethasone cream helping? I saw a lot of the redness seems to be fading, does it still hurt much now?\"\n\nNicky shrugged at the sudden twinge of pain as he thought about his injuries, about the mass of scar-tissue that was his back, raw scars inflicted by his psychopath father so many years earlier; his back had never really healed properly, never really stopped hurting, and it never would, but the pain had become so much a part of him now he barely noticed it.\n\n\"Back's fine, babe, and yeah, the itching along some of the major scars has died down; that was a good idea dad had, I think I'll stick with the cream, I think it's working.\"\n\nHand in hand, Nicky and Ashley, once upon a time brother and sister, now, husband and wife, parents, and part of a strong, solid, and deeply connected family, switched off the lights and TV, checked the windows and doors, and went to their bedroom, pausing only to look in on their two little girls, tuck them in and kiss them goodnight one more time.\n\n*\n\nLeon slumped down on the couch and glared at Nicky, while he tried to block out the sounds of mayhem as seven excited kids shrilled, gabbled, shrieked, and argued at the tops of their voices in the next room. Nicky grinned at him and saluted him semi-mockingly.\n\n\"Welcome to the wonderful world of childcare, Leon; how convinced are you about kids now?\"\n\nLeon grimaced at the thought, thinking of what Judy had to say, in-depth and at length, on the subject.\n\n\"Look, Nick, I know they're technically my nieces and nephews; one of them's even my sister-in-law, and I love them all like crazy, I love being 'Unka Leon', I love being Rachel's big brother too, truly, and I know how crazy Judy is about all of them, but I have to be honest; today they nearly drove me batshit; it was like trying to reason with a busload of lunatics; loud, angry, attention-deficit, sugar-rushed lunatics; if Ashley and Judy are planning to get me into 'Father-Mode', this was not the way to do it...!\"\n\nNicky turned his head to hide his grin; he'd figured out during their excursion with the wild-bunch exactly what Judy was doing, aided and abetted by Ashley, so he decided to help it along a little.\n\n\"And yet you're still alive... Be honest, Lee, I don't think we did too badly, no broken bones, we arrived home with the right number of kids, all ours, too, no innocent bystanders killed in the cross-fire, I'd call that a win! Now, if we could manage seven wild things, how hard could it be to manage just one?\"\n\nLeon cocked a suspicious eye at him.\n\n\"Have you been talking to Judy again?\" he demanded, \"because I'm not ready for all...this...this...lunacy, not yet; I already put my foot down with Judy...!\"",
        "Nicky looked pityingly at him, trying to hide his grin.\n\n\"You. Put. Your. Foot. Down. With Judy, and yet you're still here, still alive, with all your bits still attached...you're either the bravest man alive or the biggest fool in Christendom...\"\n\nLeon backpedalled hastily.\n\n\"OK, what I meant was, I thought about putting my foot down, in fact, I very nearly did, but...\"\n\nNicky grinned.\n\n\"Yeah, I thought so. Look, there are going to be times when you're wrong, and Jude's right; what you should have worked out by now is that's approximately one hundred percent of the time. Always remember one thing, and keep it top-of-mind; this is JUDY we're talking about here, your hyper-intelligent, adorable, smart-mouthed, darling wife, who is also my not too scrupulous little sister, a girl not exactly overburdened with old-fashioned ideas about right and wrong and how rewards and punishment work, and our family's very own vengeful Practitioner of The Dark Arts, with a brain like Einstein's evil twin and absolutely no compunction about using pain as an educational tool. Leave us not forget, YOU asked her to marry you, she spends her life surrounded by kids, it's what she wants; once she's finished her clinical internship, and she's nearly there, she can make life-choices about either pursuing a residency or starting family, with you, and only you, you idiot, why is that a problem? Money's not an issue, so what's really the problem? Don't you love her?\"\n\nLeon opened his mouth to protest that of course he loved his wife, but just then Ashley poked her head around the door, her eye rolling and quick head gestures reminding Nicky that she wanted him to get Rick alone and talk to him. Leon watched the by-play with an amused grin. Ashley disappeared again, and Leon made as if to leave too.\n\n\"I see Ashley's been at you too about Rick,\" he observed. \"Judy gave me the scoop yesterday; it seems she and Ash have been doing a little plotting, so good luck with that...\"\n\nNicky pointed at him, staying him in his seat.\n\n\"I know where they're going with this; they both have some sort of need to fill-in some of the blanks, and they think Ricky needs to tell his story. I'm not convinced; if he's shutting down about it, he's probably got good reasons that have nothing to do with me and are none of my business. This is where you come in. I'm Ricky's big brother, true, but you're his oldest and closest friend, and Ashley and Judy obviously feel that counts for something; maybe he'll tell you stuff he can't or won't share with me?\"\n\nLeon grimaced, shaking his head.\n\n\"You're right, Nick; Ricky is my friend, he's one of the best people I know, and that's exactly why I'm having no part of this. There are some things families share, there are some things friends share, and there are some things that should never be shared; some things should remain private, and this is one of those things. if Ricky hasn't shared this with any of us, it's because he doesn't want to, and I respect that. You're his big brother so you do it. Just leave me out of it.\"\n\nNicky grinned and bumped fists with him.\n\n\"Bingo, that's exactly what I told Ashley you'd say; now, perhaps, those two will let this whole thing drop. Ricky doesn't need us rummaging around inside his head, he's had enough to deal with.\"\n\nSomething made Leon look up, to see Ricky standing in the doorway, his eyebrow quirked in that exact same way Nicky did. As always, Leon was struck by how much Rick looked like Nicky; aside from the different hair and eye colours, they could almost do duty as doubles for each other, even though there was a more than four-year age gap; they had the same mannerisms, the same way of speaking, even the same taste in clothes and weird English foods. To cap it all, there was even a third, Bobby, who was like another dark-haired, grey-eyed carbon-copy of Nicky.\n\nNicky spun around, seeing Rick, and his expression.\n\n\"Rick, I'm sorry, it was just that...\" he began, but Ricky waved him to silence.\n\n\"Guys, it's OK, really; I overheard Jude talking with Ashley, and just now... so, what do you want to know? I mean, there's nothing sinister in my past, if that's what you're worried about, no secret life as a contract-killer or Yakuza enforcer or anything like that, just me, so ask away; I know I never told you anything before, and it's funny, Yaz and I were talking just the other day about what we were going to tell the kids when they get a little older, about who we are and how we met, that whole 'Mummy, where did you meet Daddy?' thing, so perhaps now is as good a time as any.\"\n\nHe grinned, looking even more like Nicky.\n\n\"You better go get Ash and Judy, I know they're bursting to hear this, might as well let them in from the beginning, it's probably about time we all talked about this.\"\n\n*\n\nRicky's Tale\n\nMy name is Richard (aka Ritchie or Ricky) Davies, the original teenage loudmouth loser. When I was seventeen, my whole world fell apart; for reasons I couldn't really comprehend at the time, my father was arrested, put on trial, and after two years of legal back-and-forth, extradited, and chucked in an American prison for what amounted to the rest of his life. Not content with doing that, the 'authorities' then decided that everything we owned was bought with the 'proceeds of criminal enterprise', that was the phrase they used, and came and took it all away to be auctioned-off, and the money they obtained from selling all our stuff went to compensate dad's 'victims', hah, and the Ministry of Justice for the time and expense involved in jailing my dad forever. The only reason we even kept the house was because dad had put it in a trust for us the day he'd inherited it from his father or grandfather or uncle or something, so it couldn't be proved to be in that catch-all definition they'd used to take everything else.\n\nIf I sound a little bitter, it's because I was; they'd decided my dad was guilty of preposterous 'crimes against the United States' so they got to take him and incarcerate him in a federal prison somewhere thousands of miles from us, so we'd never see him again, and left us, my older brother Robert and I, in a shell of a home, with no money, no benefits, no state-aid, and no prospects, no hope, and no-one to turn to.\n\nI did have an older brother, Nicky; he was getting on for five years older than me, but he doesn't really come into this; he sneaked away one night, where he went no-one knew or cared, and his pointless mother, Barbara, committed suicide in the house the next day; dad was furious, we had the cops traipsing in and out for days, muddying the carpets and asking stupid questions, like we cared. She'd killed herself, so what, why was it our problem? It wasn't like she was MY mother, after all, so why should I give a shit what she did to herself?\n\nThat was how I thought back then, that's the kind of person I was, and that's why I think I would have won the 'World's Biggest Asshole' accolade hands down; I really was that loathsome, repulsive, uncaring, and disconnected; I have a lot to be punished for, a punishment I really managed to earn in a solid, heartfelt way, by virtue of who I was, what I was like, and how I thought, behaved, and believed. Bobby wants to have that crown for himself, he really believes he earned it, but all I'll concede on the point is that between us, as later events conspired to show both of us, if there had been an Oscar for 'Most Repulsive Little Shit of the Year', we'd have been fighting on stage over it.\n\nI started with all this to tell you what I think of myself back then, because my life changed in one day, in the most amazing and soul-shattering way, and what came out of it is the life I have today, the people I have around me, and the family we all discovered, Bobby, Nicky, but most of all, me; Richard Brian Davies, former dickhead and spoiled, entitled, arrogant little brat, now and forever part of something so much bigger and better than anything I ever dreamed of.\n\nSo where to begin? I suppose Nicky would say \"Begin at the beginning\" but even now, all these years later, now that I have some perspective on things, I still don't really know where that is, so I'll just tell you how things went, and you make up your mind if I've got it all in.\n\n*\n\nAfter Nicky left, sneaking away in the middle of the night, as dad had claimed, and Barbara, Nicky's mother, had gone and hanged herself in the old Butler's Pantry, everything rapidly went downhill; a few weeks after Nicky did a runner, the sky fell in; people showed up with warrants and Court Orders and Repossession Orders and removed all kinds of things from the house, everything of value, even the furniture, rugs, and dinnerware; big serious men in serious suits backed-up by square-faced coppers with blank, impassive faces showed up and took dad away for questioning again and again, and all of dad's businesses were confiscated or suspended while he tried to fight the preposterous charges being levelled at him.\n\nThrough all of this, he did nothing but blame it on Nicky; I suppose if I had been a little older, or a little more considerate, or even inclined to think at all, I might have wondered how it could possibly be his fault; after all, dad gave Nicky nothing, did nothing for him, pretty much ignored him when he wasn't smacking him around, and treated him like the bastard at a family wedding ninety percent of the time; Nicky had nothing, and he certainly didn't have the kind of power and resources dad had, so how could he have brought all this about?\n\nBut I never once thought that; instead, I joined in wholeheartedly with dad and Bobby in hating Nicky for destroying our family, taking away everything we had, and subjecting us to the kind of scrutiny only reserved for criminals. The worst part, and the guilt and sin I will always bear in my heart, was that we rejoiced in Barbara's death. It actually made dad grin every time he told us how he'd found her hanging from the old pulley-hook in the butler's pantry, and we'd grin along with him, my father's two servile, fawning little sidekicks, prepared to believe unquestioningly anything bad about Nicky and his worthless mother, and rejoice in the fact they were out of our lives forever.\n\nI don't know if there's a God, but if there is, one day I will have to stand before him and explain myself, and I can't. Nothing excuses what I did, all I can do is hope desperately that I will have done enough with my life to atone for the hurt and the harm my mean, gleefully spiteful, unthinking malice has caused, and that I've maybe earned the right to at least ask for the mercy I don't know that I'll ever deserve. \n\nI know Bobby feels the same way. Perhaps one day our mother will forgive us for being what we were and take us to herself way she did her beloved Nicky, who wasn't even her son, but who loved her more than life itself.\n\n*\n\nAfter two long years of endless court hearings, dismissals, re-filings, and court appearance after court appearance, the Court of Appeal finally made the jaw-dropping decision that my dad had committed crimes against The United States of America, and could be handed over to the Federal authorities. We watched in helpless shock as they led my dad out of the court and straight to a prisoner transport to take him directly to Heathrow Airport, so he could be handed over and punished for his so-called crimes by a country notorious for ridiculously heavy-handed sentences. Watching him being led away in handcuffs was the hardest thing I'd ever had to endure, because I knew, I just knew, we were never going to see him again. He seemed to know it, too, because he never even looked-up to see us one last time as they led him away.\n\nAnd now the hard slog began; Bobby and I had very little money, just two savings accounts dad had set-up for us that were haemorrhaging cash we desperately needed to stay alive. With no income, Bobby and I were sunk; if we wanted to eat, we were going to have to dig-in and start looking for work. We trudged miles following-up ads in local papers, in the Jobcentre, information boards in shop-windows and supermarkets, anything we could think of, but always there was nothing for teenage boys without any kind of qualifications. Dad had had us home-schooled, but had never sent us for any public examinations, because he thought they were for losers; we were going to inherit his businesses and he didn't think we needed a piece of paper to take over from him, he'd decide how qualified we were.\n\nPredictably enough, the job-market for teenage boys with no formal schooling was pretty limited. Bobby got lucky and landed a dogsbody, zero-hours contract job with the local council, meaning he only worked when they called him in, and only paid him minimum wage for the hours he did work, cutting grass verges and road-sweeping, a pointless, grinding, minimum-wage job with no prospects. I wasn't quite nineteen by then, and I couldn't find anything, so Bobby slogged away at his thankless job while I hung around the house wearing most of my clothes to keep warm, saving heat and hot water for when we really needed it, and just killed time until Bobby got home so I could light a fire to warm up a little and have someone to talk to.\n\nEventually, out of sheer boredom, I started rummaging through the house just to keep myself occupied, and make myself tired enough to sleep (and, in the winter, keep warm; we couldn't afford to keep the heating on, we could barely afford basic utilities like gas and electricity). The house was a huge, echoing barn of a place, built in the days when labour was cheap and everyone who could afford it wanted a mansion to overawe the neighbours with. There were six bedroom suites, each comprising of a large master bedroom, dressing-room/maid's room, and a bathroom, which used to have a high-backed cast-iron enamel bathtub and polished copper pipes everywhere. Those antique bathtubs were taken away, of course when the courts stripped the house for valuables for auction; they would command a high price from the interior designer, retro, and vintage stores.\n\nI worked my way through the rooms, scavenging anything we could use, although there was precious little of that; anything too ramshackle or damaged was left behind, while all the good stuff was carted away. It was during one of these scavenging tours that I decided to go through the piles of boxes and crates of dad's papers in one of the attics, stuff that had been returned as being 'of no evidential value' according to the Crown Prosecution Service labels slapped on them. I had nothing better to do, so eventually, sheer boredom drove me to rifle through them to see if there was anything interesting or valuable in there. At first it was just tedious and dull; store receipts for clothing, supermarket till receipts, Bobby's and my old exercise books, incomplete tax returns, letters and documents from his business associates full of wordy paragraphs about dull things, the kind of stuff that ends up in landfill.\n\nOne of those boxes turned up a few surprises, through; I kept coming across mention of an Ayesha Shahida, and increasingly, documents with her name and signature, and, finally, fragments of paperwork from a hospital in East London that hinted at the possibility that this Ayesha person had given birth around the time Bobby was born. That set me back on my heels; was this woman the mysterious 'mother' dad had always refused to discuss with us, or even allowed to be mentioned? Was she in fact Bobby and my mother? Barbara obviously wasn't our mother, she was Nicky's mother, but Nicky was older than us, so why did his mother live with us, while there was no sign of mine? Was it possible this Ayesha person was more than just a name on a few pieces of paper?\n\nThe more I dug and waded through those boxes and boxes of paper, the more I became convinced Ayesha Shahida was somehow connected to Bobby and me. All I had was hints, and scraps of paper that individually didn't really say anything much, but put together they began to paint a picture of someone who had a long-standing, possibly even family connection, to dad, and Bobby and me.\n\nI tried to involve Bobby in what I thought I'd found, but he wasn't interested; his life was taken up with being the breadwinner, and he was too busy being sunk in depression and nursing his anger to take any notice of anything I had to say.\n\nEventually, after wading through piles and piles of meaningless papers, I struck gold; a torn-up envelope addressed to 'Ayesha Shahida', in dad's handwriting, stamped but never used, for an address in Dalston, North-East London, in the London borough of Hackney. Finally, I had something, and once again I tried to involve Bobby; perhaps it would lead to this mysterious mother of ours who was never mentioned, or at least to someone who had a connection of some kind with my dad. Bobby didn't care, he was too sunk in anger and depresion to give a fig, so I made an executive decision, took (let's be honest: I stole) the emergency fund Bobby had stashed under his bed, \u00a3200 in all (which I do feel guilty about even today, when so much has happened; it was all he had socked away for a rainy day) and headed out on my quest to find out who we really were.\n\n*\n\nLondon was a long, long journey from Carlisle, travelling on the cheaper (but still crushingly expensive) stopping services as I was to conserve the meagre funds I had; endless stops at every rural train station, multiple train changes at obscure, out of the way railway stations and halts, a long and wearying journey zig-zagging down the length and breadth of England, but I kept going because I felt sure I was on the verge of something that would change our lives, hopefully for the better, because let's face it; it couldn't get any worse...\n\nArriving in London was a confusing, scary experience; the place is vast, with a capital 'V'; just looking out through the row of glass doors at Euston Train Terminus to the Euston Road was intimidating; I'd never seen so much traffic, so many people, such huge buses in my entire life, and I sat for what seemed like hours trying to work out how to find this place, 'Dalston'. As luck would have it, I spotted a newsagent, and in the window, a map book titled 'London A-Z'. Bingo, there was my map.\n\nUsing my London street-map, I was able to locate the road I was looking for, and, after a few wrong turns, and a little guesswork, I found the address I was looking for, an imposing three-storey Victorian terraced house with a front garden, black iron railings, and high, impressive bow windows. And that's when my nerve failed; supposing this Ayesha Shahida person didn't live here anymore? Supposing she wanted nothing to do with me? Maybe she wasn't our mother, or maybe she was, and wanted nothing to do with either of us? At this point I had no other option; most of the money I'd lifted from poor Bobby was gone, I was alone in London hundreds of miles from anywhere I knew, so I might as well take a shot, and play it by ear from there.\n\nI'll be honest with you; knocking on that door was one of the hardest things I'd ever done; supposing this Ayesha person only vaguely knew of dad, supposing the elaborate scenario I'd concocted in my head was nothing but wish-fulfilment, and she was nothing but one of dad's shadowy business contacts? But I knocked, and waited, then waited some more, but nothing. \n\nJust as I'd decided this was not going to happen, that it was just a red herring, and I'd wasted my time and money, I heard the lock being turned, and the door was opened by a handsome Indian woman with thick, wavy, dark mahogany hair, golden olive skin, and bright, light green-hazel eyes that looked like they were lit from behind.\n\n\"Can I help you...?\" she began, but her voice trailed off as she stared at me, with something like veiled hostility, although I could have been wrong; reading other people was not one of my strong suits back then.",
        "\"What do you want...?\" she whispered, making no effort to open the door, ask me to come in, nothing; it looked for all the world like she was keeping the door between us, ready to slam in my face if I made a move, and that unsettled me; she obviously knew me, if the look on her face, a mixture of recognition, dread, anger, and something else, was anything to go by, and something about me had scared her.\n\n\"Why are you here, haven't you people done enough already? Go away!\" she grated, an edge of real anger in her voice. \"Leave, now, or I'm calling the police!\"\n\nI was dumbfounded; this was not the reaction I was hoping for, and just what had we done enough of already? I had to find out what she was talking about.\n\n\"I'm sorry, I'm sorry, I didn't mean to upset you; please, do you know me? What have I done, who are you, and do you know my father? I found your address in his things, I thought maybe you could help me...\"\n\nShe glared angrily at me.\n\n\"You father is Robert Davies, and don't bother denying it, you're the spitting image of that bastard! What the hell do you mean by coming here now? After what that...that son of a whore did, why, why should I waste my time on you, on any of you? You're all the same, worthless users and takers! Only your brother Nicky meant anything, and that bastard got rid of him, and now one of his bastard brood shows up at my door! I'm glad that bastard's locked away forever; I hope he spends his days in prison being beaten and raped, it's what he deserves. Now go away, or I'm calling the police!\"\n\nI was rocked back by the gust of hatred coming from her; what the hell had Dad done to provoke such an extreme reaction? And she knew about Nicky? I had to try once more, she had answers, I knew that now, all I had to do was somehow get some from her.\n\n\"Please, I don't know what you're talking about, what did my dad do, what did he do to Nicky, how do you even know about Nicky? Please, just tell me who you are, and why you hate dad so much; are you my... mother? If you'll please just tell me what's going on I'll leave and never trouble you again, but I have to know, please!\"\n\nShe looked at me strangely, and shook her head slowly.\n\n\"No, I'm not your mother! How could I be? Your poor mother's dead, why don't you ask that whoreson father of yours what happened to her?\"\n\nMy heart sank at that statement, but now there was another mystery; why had she reacted so negatively and how did she know my mother was dead? Did she know who my mother was? And more importantly, just what had we done to her that she could spit bile and anger like that at me? I had to try one more time, there was something bad here, something very bad, I could feel the edges of it, as if this person, this Ayesha's accusations weren't bad enough.\n\n\"Please, I don't mean you any harm, I don't want anything from you, I honestly don't know what you're talking about, at least please tell me what you mean. What did my father do, and why?\"\n\nAyesha looked closely, searchingly at me, and her eyes narrowed.\n\n\"You really don't know, do you? That bastard never told you anything about me, about us, and what he did to me and my family?\"\n\nI shook my head dumbly, completely at sea in the churning maelstrom of rage and hostility I could feel swirling around her.\n\nShe stepped to one side and pulled the door open.\n\n\"You'd better come in; if you really want to know the truth, then sit down, and keep your trap shut and your hands where I can see them; you try any funny business and I'll bash your skull in, you hear me?\"\n\nI saw for the first time that she was leaning on a heavy black walking stick with an iron ferrule and a large, ornate silver finial in the shape of a bird's beak, and something told me she'd have no hesitation in bashing me with it if she thought I was threatening her, so I nodded; I wasn't here for a confrontation of any kind, all I was looking were some answers. Her set expression told me she wasn't joking, either, so I resolved to not antagonise her.\n\nAyesha looked closely at me for the longest few seconds of my life, then nodded and stepped to one side.\n\n\"Go on through and take a seat, I'll be right behind you, and remember: I'm watching you.\"\n\nThe corridor was wide, and well decorated, floored with beautiful Victorian Minton ox-blood, russet, and cream tiles in a pleasing geometric pattern, almost exactly the same as the hallway back home, spotless white skirting-boards, and a pair of white painted doors open wide enough for me to see a sunshine-bright sitting room, with more large, imposing doors in the corridor, opening into yet more rooms, I guessed. I went through the open doors into a fairly large sitting-room, again very tastefully decorated in muted shades, with a comfortable-looking three-seat couch and two matching armchairs, with a soft carpet underfoot.\n\n\"Sit, sit...\" she muttered, waving vaguely at the couch, \"I'm not going to hurt you...unless you try something...\"\n\nShe sat in one of the armchairs, and studied my features thoughtfully, her elbow on the arm of the chair, and her chin cupped in her hand.\n\n\"So much like that father of yours, but...there's something different about you; is your brother like you, or did he take after that bastard? Is there another Robert Davies running around out there and poisoning the world?\"\n\nWow, she really hates us, was my immediate thought, followed by wonder that someone could hate another person so much (and then my own attitude toward Nicky and Barbara, that 'fuck-off and die' knee-jerk hatred dad had given me came back to bite me, hard. I was just like her, I'd spent years spewing hate and anger, now suddenly I knew what it was like to be on the receiving end of such blind, unreasoning, bitter hatred. It was a sobering feeling.)\n\nAyesha stared thoughtfully at me, sizing me up, I could tell.\n\n\"Well, I'm waiting; is your brother another one of that Davies creature's clones, or is he different too?\"\n\nI shook my head;\n\n\"Bobby's not like me, at least I don't think so; he's angry, and he's always tired, he works hard and doesn't get paid much, and it...kind of comes out now and then, but I don't think he's like dad; he's not as angry as dad, I know that...\"\n\nAyesha nodded slowly, never taking her eyes off me, but she didn't seem inclined to say anything more, just that unnerving, penetrating stare. After a while, the silence got to be really uncomfortable, and I shifted uneasily, wondering what happened next, and if she was actually going to tell me anything at all. Just as I thought we'd gone as far as we were going to, she suddenly spoke.\n\n\"Your father, Robert Davies, took everything I had, he took me from my family, he took away all my money, my property, everything I'd worked so hard for, and worst of all, my self-respect, and my right to say 'no'; he robbed me, he abused and brutalised me, he hurt and terrorised my children, and he thought it was funny. I'm glad he's in jail, I'm glad he's going to rot there; as far as I'm concerned, they didn't do enough just jailing him; they should have publicly flogged him, flayed the bastard alive, just like he did to... \"\n\nShe caught herself, but she'd said enough to make me wonder who he'd flayed alive, and why. She caught my expression, and her expression softened just a little.\n\n\"You really don't know what I'm talking about, do you? You've never heard any of this before, or who I am, have you?\"\n\nI shook my head, shocked at what she'd been saying, casting around in my mind for a way to disbelieve her, but I could see it in her eyes: she was speaking the God's honest truth, and it made my stomach roil to accept that my dad had done these things to her (although a small voice deep inside insisted I knew just exactly what kind of man he was, I'd just never let myself put it all together. It wasn't happening to me, so it didn't matter, and I know beyond a shadow of a doubt that that was the voice that will damn me one day... )\n\n\"You must be Richard, the younger one, is that what they call you?\"\n\nThe sudden change in direction threw me, and all I do was nod.\n\n\"My... oldest brother always called me 'Ritchie', but dad and Bobby call me Ricky; I don't know anyone else...\"\n\nShe cocked her eyebrow at me and nodded.\n\n\"Nicky, your oldest brother; the boy who left...\"\n\nI gawped at her. How did she know that? She saw my startled expression and smiled grimly.\n\n\"Oh yes, I know all about Nicky, about who he really was, and what your father did to him; it's a wonder the poor boy lived through what Robert did to him. Do you want to know what that man did to that poor, defenceless boy, do you really want to know?\"\n\nFor a second her eyes glinted with malice, and I felt a chill; something bad was coming, something dad had done, and now my mind circled back to her comment about how dad should have been flayed alive. Suddenly I didn't want to hear this, but she was inexorable, the intensity of her gaze compelling and magnetic, and I couldn't look away.\n\n\"Your father beat Nicky so badly he nearly didn't live through it; he used his special belt on him, the one with an edge he honed on the buckle himself, and he whipped that poor boy until he literally took the skin off his back; he left him barely alive, and do you know what that man boasted to me when he did it? He said THAT was a father's true legacy; every time your brother saw his back, he was going to remember who his father was, and what he'd done to him. He was gloating, actually beaming with pride when he told me. There's no place in Hell deep enough for that demon to squat in; to do that to your own child... \"\n\nI was shocked and appalled; this couldn't be true; I knew dad had a mean temper on him, but this? No there was no way he'd do that, not even to that sneaky little mummy's boy Nicky, and then I pulled myself up short as I remembered the stuff we'd ignored, the times he'd punched-out Nicky, sometimes in front of us, but usually when there were no witnesses, just the evidence of his black eyes and bruises and his split lips, and the screams and cries and entreaties when he beat Barbara. I remembered the meaty sounds of flesh hitting flesh, her sobbing as she begged him to stop, please, to not hit her anymore, and yes, then I understood; he was that kind of man, and he'd tried to make us in his image.\n\nAyesha looked long and steadily at me, her expression unreadable, but something told me she was softening towards me.\n\n\"Let me show you something, Richard, then maybe you'll believe me.\"\n\nWith that, she stood, a little unsteadily, and rested her cane against the arm of the chair as she unbuttoned her blouse. I suddenly wondered what she was doing, and what the hell she was going to show me, but then she turned and slipped her blouse down to her elbows, exposing her shoulders and bare back. I stared in fascinated horror at the network of criss-crossed red welts and white scars lacing her upper back, shockingly vivid against her honey-gold skin.\n\n\"Did my father...?\" I began weakly, shocked and disgusted by what had been done to this woman, and Ayesha pulled her blouse back up, and, still with her back to me, buttoned herself up again.\n\n\"Your father put those on me, Richard, he did it to me, he did it to Nicky, much worse that what he did to me, and he did it to your mother, and he enjoyed it; that man is a sadistic demon, no Hell is too much for him to suffer!\"\n\nI sat in silence while my head spun; I didn't want to believe these things, I tried not to believe them, but I'd seen what I'd seen, and I felt sick that dad had done that. As I sat in stunned silence I heard the front door open, and two girls' voices chattering and giggling. I looked at Ayesha and she pointed an admonishing finger at me as she murmured \"my daughters; behave yourself, I mean it!\" emphasising with her heavy cane what she would do if I stepped out of line.\n\nThe door swung open, and two girls came into the room, the smiles on their faces dying away when they saw me. They were both tall, slim, each with a mass of wavy, bright, mahogany-bronze hair tumbled over their shoulders, and the younger one, who looked to be a little younger than me, had green-hazel eyes like her mother's, while the other, who I thought was maybe the same age as Bobby, had large, expressive grey eyes. They both had delicate, heart-shaped faces and clear, fine, porcelain-doll features, and olive complexions, with just a tinge of their mother's golden skin tone, both of them exotic-looking and, to me, at least, quite the most beautiful girls I'd ever seen.\n\n\"Mummy... who's this?\" asked the older girl, her eyes narrowing and her tone sharp and suspicious. The younger girl moved closer to her, putting her arm through her sister's as she too stared distrustfully at me.\n\n\"Richard, these are my daughters, Yasmin and Shereen... your sisters, God help them... \"\n\nThe two girls gasped, as did I, at Ayesha's blunt statement.\n\nThe older one, Shereen, was the first to recover.\n\n\"What are you saying, mummy, do you mean he's that... fucking piece of shit's son? Is that why he looks like him? NO! This piece of filth is NOT my brother, I am NOT his sister, take it back, mummy, say it's not true!\"\n\nAyesha slowly shook her head, tears glinting in her eyes.\n\n\"No baby, I can't; he's Robert's son, he came looking for us; he's your younger brother. I'm sorry, I'm so sorry.\"\n\nShereen's face twisted in rage, and in a blink of an eye she'd grabbed Ayesha's heavy walking stick and raised it over her head, obviously ready to crack my skull open with the thick metal finial; in my mind's eye I clearly saw that bird-beak splitting open my skull as she hit me with it, and I stayed motionless, not wanting to provoke her further.\n\n\"No, don't, stop it Shari!\" shouted Ayesha. Shereen looked at her mother and shook her head.\n\n\"I thought we were free of that stinking piece of shit, now his dogshit son shows up here, in my clean house, and it's going to start all over again! We'll never be free until that dog-fucker and all his dog-fucker family are dead, and it starts here!\"\n\n\"No, Shari, don't, please, don't!\" begged Ayesha, but Shereen shook her head vehemently, her eyes glittering with hate.\n\n\"I don't care. That whole family deserves to die in fucking agony, I don't care if I go to jail just as long as I get to see this piece of shit dead on my floor! Fuck him, he dies, now!\"\n\nThe other girl, (Yasmin?) stepped in front of me, her hands up, shielding me from Shereen's fury.\n\n\"Get out of the way, Yaz, can't you see who that is? That whole family are filth, nothing but pieces of shit, get out of my way, after what they did to us he owes us this, and I swear to fucking God... \"\n\n\"Shari, no! Enough! He didn't do anything, leave him alone!\" she barked, making Shereen blink in shock.\n\n\"But... but... look at him! Don't you know who he is? LOOK AT HIM!\" she yelled.\n\nYasmin shook her head.\n\n\"Enough, Shari, leave him be! He's just a kid! Just let him say his piece, then, if you still want to, have at it, I won't get in your way; just let him talk first!\"\n\nShari stared at her for a long moment, her chest heaving and her nostrils flaring, while the angry flush in her face slowly faded. She glared at me and pointed at me with the lethal-looking metal head of Ayesha's walking stick.\n\n\"Five minutes, that's all, then you better run back to whatever shit-hole you escaped from, because when your time's up I'm coming after you! Start, damn you, say your piece then fuck off out of my home!\"\n\nI was appalled at the hatred this beautiful girl had for me, for my family; Ayesha had already intimated how much she hated us. What the Hell had we done, what had dad done to her, to all of them, to create this much poisonous hatred for someone she'd never met before?\n\n\"Talk, you fucker, talk, then get out!\" screamed Shereen, jarring me out of my astonishment. I hurriedly explained why I was there, I only had five minutes and she still had the lethal-looking walking stick raised, ready to crush my skull.\n\n\"My name's Richard, I found your mother's name and address in a box of my dad's papers, so I came here to find out who she is, I didn't know what my father did, I still don't, all I know is I came here looking for my mother, I hoped that I'd found her, all I wanted was some answers, please, that's all I want! I didn't know what we did to your family, all I wanted was some answers, then I can go home and you can forget me. Please don't hate me for what my father did, I didn't know, I never even suspected what he was doing, neither of us did, just tell me what he did and I'll leave and never trouble you again, I promise!\"\n\nShereen stared at me mistrustfully, still tense and angry and ready to hit me, but then the other girl, Yasmin, stepped in front of her, her expression unreadable, but definitely not as hostile as Shereen's.\n\nWe stood like that, a silent tableau, all four of us frozen for long, endless seconds as Yasmin's eyes locked with mine, before she turned to Shereen and put her hand on the walking stick, pushing it down.\n\n\"I believe him, Shari; look in his eyes, he's telling the truth, he really has no idea what we're talking about, or who we are. He's not here to hurt us, Shari. Let him talk.\"\n\nShereen lowered the cane and pointed at me, her expression still mistrustful, but some of that furious hate had gone from her eyes.\n\n\"You want to talk? Then talk, now!\" was her terse instruction, so I did, telling her all about me, my life, Bobby, dad, Barbara (I choked a little over that, but right now I had nothing to lose, so I told her everything, every mean, nasty little thought, every spiteful, malicious little trick we'd pulled on Nicky, how he'd disappeared, about Barbara, Nicky's mother, and how my father would beat her and Bobby and I would grin heartlessly and ignore the sounds of her mistreatment.\n\nWhen I finally ground to a halt, Shereen just stared at me contemptuously.\n\n\"Your whole family is rotten to the core; you just told me how worthless and disgusting you are; the only one of you who was maybe ever worth anything was driven out to die from his injuries somewhere far away and all alone, and that's down to you, too; you let it happen, you shoved him away and left him to die, so know this; if you died by the roadside tomorrow I'd step over your carcass and keep walking, be sure of that.\"\n\nShe drew a shuddering breath as her eyes flamed with anger and revulsion. \n\n\"After what your father did to us, to my mother, I would gladly watch Robert Davies twist on a spit with you two roasting with him; that you and I share a father means nothing. I want him dead, I want to see hm dead, I want to watch rabid dogs feed on his rotting carcass, and if you and that brother of yours were rotting there with him, then well and good; the world doesn't need the likes of you. The harm your family has done mine will never be washed away, with blood, with tears, with all the remorse in the world, do you get that, now, Richard-fucking-Davies?\"\n\nI sat open-mouthed at this tirade, shocked at the depth of her hatred for us; just what had dad done to make her hate with such passion? And then I pulled up short; what had Nicky ever done to me that I should hate him just as passionately? I was no better than her in my unreasoning hate, and now I started to realise how Nicky must have felt every day of his life. I had to find out, I had to know what we'd done, and if we had somehow done to her family what we'd done to Nicky and his poor mother? How?\n\n\"Shereen, I... \" I began, but she shut me up with a raised hand.\n\n\"Save it; I don't care. I'm going for a walk, the air in this room is rancid with your family stench, I thought we'd cleaned it out and now it's back. When I get back, you be gone, or else, understand?\"\n\nWith that she stood, handed the cane to Yasmin with a curt \"watch him, and get him out of here!\" and left the room, followed a few seconds later by the slamming of the front door.",
        "Yasmin stared at me, fingering the cane absently, before handing it back to her mother.\n\n\"If you were going to hurt us you would have by now, so I guess we can trust you...\" she murmured, her lips quirking in a fleeting smile. \"Sit, Shari can be a bit full-on when she gets wound-up, but no-one's going to hurt you. Have you eaten anything today?\"\n\nI shook my head; other than a railway station buffet doughnut at Carlisle station when I first set out, all I could afford, I hadn't eaten anything in two days, and now that she'd reminded me, I realised just how hungry I was. I couldn't stay and eat their food, though; Shereen would be back soon, and she'd told me to be gone before then.\n\n\"It's OK, I'll find something to eat on the way home.\" I told her, although I had no idea how I was going to get there; I just had to hope something would turn up.\n\n\"I don't recognise your accent, where are you from?\" she asked me, so I told her we lived in Carlisle, up in Cumbria. She nodded. \"Yeah, the Borders, I couldn't place you at all. How are you going to get back there?\"\n\nI shrugged my shoulders.\n\n\"I don't know, I'll probably hitchhike, or just walk back... something will come up... \" I mumbled, causing her to flash a glance at her mother and pull out her phone. After tapping it a few times, she looked quizzically at me.\n\n\"It's over three hundred miles away; you're going to walk back there? How? That could take weeks. Have you got any money?\"\n\nWhen I shook my head her eyes widened.\n\n\"So how are you going to eat? What are you going to live on? You can't just head-off into the wilds and hope food will fall in your lap! Sit there, I want to talk to mummy.\"\n\nYasmin and Ayesha huddled together, I couldn't hear everything they were saying, but I caught snippets; \"...not his fault...at least some food...he's still my brother, we can't just...\" and so on.\n\nJust then the door opened and Shereen came back in, her expression hardening when she saw me still there.\n\n\"I thought I told you...!\" she began, but Yasmin cut her off.\n\n\"That's it, Shar, enough! He didn't do anything, he didn't even know, that's why he came here, he was looking for answers! Now belt-up, mummy wants to talk, just shut your trap and listen for thirty seconds!\"\n\nWe both stared at her, Shereen with a shocked expression at her sister taking my side, although I wasn't sure why. Shereen stared at me for long, endless seconds in silence, her eyes like bullets, grey and merciless as steel shot and just as hard and deadly, and then she nodded just once.\n\n\"OK, sit, stay, listen, and just shut up, no-one here wants to hear your pathetic excuses, you got that?\"\n\nI nodded dumbly, but couldn't help but see the fleeting smile flit across Yasmin's face before she schooled her features into an impassive mask. Her bright, green-hazel eyes, however, didn't have that steely hardness that Shereen's had. If I hadn't known better, I would have worn she was trying not to smile, or burst out laughing. Ayesha cocked an eye at her younger daughter, obviously seeing what I'd just seen, and the look she gave me was thoughtful, not hostile, and definitely not angry.\n\n\"Richard... Ritchie,\" she sighed, shaking her head sadly at the mess I'd caused by showing up, \"You came here into the middle of all this, you didn't know what had been going on, but if I threw you out for things that were not your fault I'd be no better than your father, so I apologise for the welcome I gave you, I see now that none of this was your fault, you had nothing to do with it, and you're just as much a victim as anyone in this room, so please... sit, I'm sorry. No... \" she murmured as Shereen stirred angrily, \"let me finish, sweetheart, we all need to calm down a little.\"\n\nShe turned her attention back to me.\n\n\"You tried to find your mother, you came here from all the way up North with nothing but the clothes on your back, looking for family, for answers, for someone, anyone, who could tell you who you are, and you were ready to go back there any way you could because of the way we responded to you. You didn't come here to threaten, or beg, or blackmail or force your way in, you just wanted to know who you are. There's nothing wrong with that, and you've done nothing to me or your sisters. Your father has much to answer for, he's done things to this family that beggar belief, this is why Shereen is so angry, but you, you're just a kid, fallout from your father's actions, just another victim, and I would never forgive myself if I turned you away and something happened to you: you haven't done anything wrong at all.\"\n\nShe grinned lopsidedly.\n\n\"You and I, we still have things to say, some hard things to hear, but we'll do that later. There are things you don't know, things that still make me sick and very angry to even think about, and there will be anger and hurt, oh yes, and probably hatred, too, but if I get angry just remember, it's not at you. You're a victim too, and you're just a youngster, you shouldn't have to deal with this, but these things need to be said, and then perhaps you'll know and understand why Shereen is so very angry.\"\n\nShe leaned her chin on her hand on the arm of her chair and fixed her gaze on me, keen and sharp for long seconds, before speaking again, her tone softer, more considered than earlier.\n\n\"For now, just think about this; you came here looking for answers and found your family, Ritchie, strange as that may sound. Your brother Robert and my two girls are all you have, Yasmin is your little sister, Shereen is your big sister, I don't think they have any excuse to abandon you and blame you for something you couldn't possibly have known about. Shereen, would you ever abandon your little sister?\"\n\nShereen's eyes kindled.\n\n\"NEVER! How could you even ask...\" she almost shouted, and Ayesha nodded.\n\n\"Yet you'd abandon your younger brother, who hasn't done anything to you, who just came here hoping to find some answers?\" murmured Ayesha. Shereen looked stricken as Ayesha's logic drilled into her.\n\n\"Please, baby girl, what have I always told you about guests, and who they might be? This boy is our guest, and he needs our help; are you really going to turn him away to starve in an alley somewhere for something that's not his fault? He didn't pick his father, and he isn't his father, he's someone who doesn't know who he is, or who we are, or why he's here. Is that a sin, or a crime?\"\n\nShereen's shoulders slumped.\n\n\"No...\" she murmured, defeated by her mother's relentless logic.\n\nAyesha smiled gently at her.\n\n\"Then let him tell his story, sweetheart.\"\n\nShereen looked at me and nodded.\n\n\"Go ahead then, tell us, tell us the whole thing.\"\n\nSo I did, starting with Nicky, what Bobby and I had thought of him, about Barbara, how we'd ignored and marginalised her, the beatings we'd heard and closed our ears to, the way our father had treated Nicky, and the stories he'd told us, stories I was now coming to realise were lies, how he'd made sure we were completely isolated from the outside world, how we'd never had friends, or met anyone, or really spoken to anyone our entire lives.\n\nShereen's face remained expressionless through this whole thing, how I'd found clues, isolated fragments that had led to them, and finally my astonishment at the fact I had two sisters, an older and a younger one, the last thing I'd been expecting.\n\nWhen I'd finished my story, Shereen stared at me for the longest time, but searchingly, and that bullet-hardness was gone from her eyes. Finally, she sighed.\n\n\"OK, so what do we do with you? By your own admission you not the kind of person we should allow into our lives. You're selfish, spoiled, indifferent, arrogant, you didn't have a thought for anyone except yourself, am I right so far?\"\n\nI had to nod; she was right on the button on her assessment of my character. I was not what she wanted around her family, and the thought inexplicably saddened me.\n\n\"However,\" she continued, \"you spilled your guts completely about who and what you are and what you were like, you didn't try and lie or sugar-coat or justify any of it, you told it like it is. Truth is hard to find, mummy always says that sometimes you have to dig deep to find it all, but you were truthful with me off the bat, even if you didn't like what you were telling me, and I get that. Mummy was right, I may not like the idea, but the truth is, you're my little brother, and you came here to find answers, not lie to us, or steal from us, or hurt us, and because you're my little brother, I'm not going to turn my back on you. You need us, and maybe we'll find out we need you. So what, exactly, are we going to do with you, Richard Davies?\"\n\nMy spirits surged at that; at least she wasn't threatening my life anymore, that had to be a good sign!\n\n\"When's the last time you ate something, Richard?\" enquired Ayesha. I mumbled something about \"not long ago\" which got me a narrow-eyed stare.\n\n\"I'm not going to ask you again: when's the last time you ate something?\"\n\nWhen I told her it had probably been two days earlier she stared at me like I was mad.\n\n\"How much longer were you planning on waiting before telling me you're hungry, eh?\" she gritted, and I quailed at her tone.\n\n\"I wasn't going to, I'm not hungry, honest, I just wanted some answers, then I'll get out of your hair and go home.\" I replied, too scared to stay there any longer than necessary. She grinned at me and pointed at Yasmin.\n\n\"You really don't know how to lie properly, do you? Yaz, take your brother and show him where he can wash-up, Shari, go make your brother a sandwich, he hasn't eaten in two days, and get him a glass of milk too, he must be starving...\"\n\n*\n\nYasmin waited for me, watching me closely while I washed my hands and face, and grinned when she handed me a towel.\n\n\"So where's the rest of your stuff, Richard?\" she smiled, and frowned when I told her I didn't have anything except what I was wearing.\n\n\"So let me get this straight,\" she mused, \"you found some sort of clue that told you to come here, so you just jumped on a train, headed off into the wide blue yonder, and hoped for the best?\"\n\n\"Pretty much,\" I admitted, and she shook her head sadly.\n\n\"And then...?\" she prodded, and I looked around, at the bathroom, at her, at myself in the mirror.\n\n\"And then whatever happened next, I suppose; find out who we really are, why all this has happened, find a way to get home, go back to my life. What else is there?\"\n\nYasmin smiled playfully.\n\n\"So you just up and headed out and trusted to luck? I've got to say, while I question your thinking, I can't fault your sense of adventure! You're bonkers, you do know that, right?\"\n\nI didn't answer, she didn't seem to need one; instead, she stood next to me and stared at our reflections side by side in the mirror.\n\n\"Nothing, absolutely nothing at all...\" she marvelled, \"you're my older brother and we look nothing alike, not even a little bit; isn't that just a little bit weird? You'd think...\"\n\nI nodded, agreeing with her; we had not a trace of resemblance, nothing to give a clue we were siblings, or at least, half-siblings. I grinned, seeing her grin in reply, and her beautiful bright, light green-hazel eyes lit up like her mother's as she smiled.\n\n\"I know, but your mother says you're my sisters, she seems to know what she's talking about, so she's probably right, but still...\"\n\n\"OK, you done?\" she asked, I nodded, and I followed her back to the sitting room, where a ham salad sandwich and a glass of milk awaited me. My stomach tightened painfully at the thought of food.\n\n\"Eat, don't just look at it...\" grinned Ayesha, so I set to with a will, while Ayesha and the girls watched me like some kind of circus exhibit. It was delicious, like nothing I'd ever eaten before. The urge to just cram it in my mouth was almost overpowering, but I forced myself to go slow, to chew every mouthful, to not make a spectacle of myself; these people already had a pretty low opinion of me, no need to give them even more ammunition...\n\nWhen I'd finished, even Shereen grinned at me.\n\n\"Guess you really were hungry after all!\" she murmured. I was stuffed, I'd never eaten anything so delicious, not even when dad was still around. Since he'd been taken away it had gotten pretty dire. Bobby and I had pretty much subsisted on the bare minimum that kept us alive, and that simple sandwich was the richest food I'd eaten in almost two years. Too rich, in fact, especially after so long with no food at all. Shereen saw the sweat burst out on my face, and my eyes roll up, and she grabbed me and hustled me into the cloakroom just in time, as it all came back up again, in what seemed like endless waves of retching, while my stomach clenched and convulsed painfully.\n\nFinally it was over, and I just knelt there, bent over with my head spinning, feeling like I'd been kicked repeatedly in the belly; all I wanted to do was die. I'd never felt such pain, I couldn't even stand up it hurt so bad. It took a while for me to realise both girls were crouched next to me, rubbing my back and holding my face in their cool hands.\n\n\"Why didn't you slow down, you stupid arse? It wasn't going anywhere!\" grumbled Shereen, her voice low and brisk but her gentle hands saying something else entirely. \"C'mon, let's get you out of here, I think you need to lie down.\"\n\nBoth girls helped me to my feet, and I felt the blessed cool as Yasmin wiped my burning face with a damp washcloth. That done, we slowly made our way back to the sitting room, slowly because I hurt all over, but mostly my midsection, and I still couldn't straighten up, it just hurt too much.\n\n\"Lie down, boy, just take it easy...\" crooned Ayesha, as the girls helped me to the sofa, and I did, it helped, but I had to stay in a foetal crouch, it still hurt to try and straighten up.\n\n\"What happened there, Richard?\" asked Ayesha, \"you just folded, why?\"\n\n\"The food... sorry... not used to it... it hurts... \" I managed to gasp out, because even talking hurt, and Shereen looked horrified.\n\n\"It was just a sandwich and a glass of milk... \" she murmured, staring in confusion at me, but her mother nodded grimly.\n\n\"This boy hasn't had a proper meal in God knows how long. God, how has he been living like this? I think we need to try again, he needs food, something simple, maybe light soup; there's some in the pantry, baby girl, chicken soup, minestrone, something light, and maybe some crusty bread, and get some pillows and a quilt, he needs to rest.\"\n\nIt all got a little confused and slightly surreal after that, but a cool hand on my forehead woke me, and a mug of something that smelled delicious was held in front of me. I tried to hold it, but for some reason my hands wouldn't stop shaking, and the next thing I knew, Yasmin was grinning at me as she spoon-fed me hot clear soup.\n\n\"Eat it all up now, nom-nom-nom!\" she grinned, and I had to laugh even though my stomach ached, it was funny, and no-one was angry with me, and it felt wonderful. I finished the soup, and she wiped my mouth.\n\n\"That's all for now, rest a little and you can have some more, let's just wait and see if this comes up too.\"\n\nAt last it was all gone, there was a warm, comfortable glow in my stomach; for the first time in what felt like the longest time I'd had a hot, satisfying meal, and I was warmed through for the first time in a very long time.\n\n*\n\nI woke with a start, confused and disoriented for a second, unable to place where I was, then the world spun for a second and memory flowed back into place; I was in London, I was in Ayesha Shahida's house, and I had two sisters...\n\n\"Hello, sleepyhead!\" murmured a soft voice, and I spun around, then spun back as I realised I had no clothes on and the quilt had nearly slipped off me and onto the floor.\n\nClutching the only covering I had, I peered at the figure only vaguely visible in the gloom, just a shadow in the armchair, but I recognised the voice; it was Yasmin.\n\n\"My clothes...\" I stammered, and she giggled happily at my blushes.\n\n\"Don't worry, mummy undressed you, not me or Shari, and we even turned our backs, so there!\"\n\n\"Where...?\" I asked helplessly, and she laughed again.\n\n\"Mummy put your clothes through the washer, you need clean clothes, and when you're ready, you can have a shower, because, I have to be honest, you kind of need one! In the meantime, how are you feeling?\"\n\nI was brought up short; how did I feel?\n\n\"Tired, weak, confused, embarrassed, hungry, I could go on... \"\n\nYasmin flicked on the lamp and looked me over.\n\n\"You should feel hungry; you've been out like a light for, let me see, almost sixteen hours, you must have been exhausted...\"\n\nI was stunned; I'd slept sixteen hours? It didn't seem possible, but then the darkness, the ache in my limbs from lying in one position for hours on end, and the hunger, of course.\n\n\"It's almost five in the morning, mummy, Shari and I have been taking turns watching you; you had mummy really worried, you know! Oh, and she's sorry for the way she went off at you. She probably won't say anything, but she's really feeling guilty about the whole thing, you weren't to know. Shari too, she kind of feels rough about going berserk at you like that, all those death-threats, she's not really like that at all, so let her apologise when she gets to it, she didn't know either. We all owe you an apology; you didn't deserve any of that, so they'll probably be a bit nicer to you; try and enjoy it! One thing, though, Richard; we all saw how thin you are; don't you ever eat anything?\"\n\nI felt my face burning as I flushed; the fact is, Bobby and I never had enough to eat; with only him working, on an ad-hoc contract on minimum wage, there were some weeks where our one meal of the day was a can of soup between us and a couple of slices of bread, it was barely enough to keep body and soul together, but what could we do? I was beginning to understand that Dad had done this to us; he'd left us in this mess, and we had no way out.\n\nYasmin looked closely at me.\n\n\"You don't, do you? You poor guy, no wonder you got so sick, you must be really just scraping by if a sandwich was too much to handle. I'm sorry, Richard, I didn't realise. Would you like some more soup? I can get it in a jiffy, you just wait there, oh yeah, you're bare-arsed naked, aren't you, you've got to!\"\n\nShe giggled as she left the room, leaving me there naked, wrapped in a quilt, wondering what I was going to do next. Hopefully I'd feel better soon, I'd get my clothes back, and I could comb myself out of these people's hair and find a way to get back home again. Kind as they were being, given what had gone before, which I still didn't properly understand, I didn't belong here, and I realised I couldn't impose on their good graces very much longer. Yasmin said they weren't mad at me any longer, I wondered how long that would last if I continued to hang around...\n\nThe door opened and Yasmin came back carrying a tray with a bowl of soup, some bread, a banana, and a bowl of what looked like fruit chunks in syrup. Everything smelled wonderful, the soup, the warm, crusty bread, the sweet smell of the fruit, and Yasmin grinned as she put it on my lap.\n\n\"Eat up; don't let it get cold again!\"\n\nI set to with a will; the soup was as delicious as before, dipping the bread in it was delectable, and before I knew it I'd polished the bowl clean. Yasmin took the empty bowl away and nudged the bowl of fruit at me.\n\n\"Try it, Richard, it's good for you, you'll like it...\" and I did; I'd never eaten anything like it; even the banana was something I only had vague memories of eating when I was much younger. When dad was still with us we'd never been given anything like any of these things before; when I thought about it, I realised that even with all his money, dad had drastically cut corners and pinched pennies anyway; I'm sure he could have afforded simple, tasty food and even simpler treats like this, he'd just never done it, because he was a grasping cheapskate; it had taken strangers to show me what I'd been missing all along, simple things that other people probably just took for granted.",
        "I slumped back, stomach full and body fully relaxed for the first time in I don't know how long. Tension I wasn't even aware of, that had been a part of me for so long it had become normal, had finally been sponged away. Yasmin patted my knee and took the tray away.\n\n\"Get some rest, Richard, mummy will want to talk to you in the morning, it's late...or really, really early; either way, you're tired, we'll all talk in the morning. Goodnight...big brother!\"\n\n\"...Ricky... \" I murmured, and she stopped and looked back at me. \"What say...?\" she grinned, and I repeated myself, a little louder.\n\n\"Ricky, please, call me Ricky... \" and she nodded. \"Ricky it is, gotcha; don't go 'way now!\"\n\n*\n\nDaylight in my eyes woke me, a moment spent wondering where I was, then memory and realisation put me straight. I stretched luxuriously, feeling marvellously rested and at peace, considering the day was going to get worse, because hadn't Ayesha warned me? So I luxuriated in my one moment of complete peace, letting the apprehension wait until I was ready to deal with it.\n\n\"Good morning, how are you feeling?\" said a soft voice, and I looked around to see Ayesha smiling at me. \n\n\"How old are you, Richard? Because when you're sleeping, you look so young, but you have to be, what, nearly twenty, am I right?\"\n\n\"Almost nineteen,\" I replied, \"and Bobby's nearly twenty; there's only a year between us. And please, call me Rick, or Ricky, or Ritchie; no-one ever called me Richard.\"\n\nAyesha came to her feet, leaning on her cane, and indicated a bathrobe and towels and my clothes folded neatly on the other armchair.\n\n\"Go and get a shower, you know where the bathroom is, there are some disposable razors and toothbrushes in the cabinet, then come down and we'll have some breakfast together, just like family... \" She grinned when she said it, to defuse any sting I might have felt at her words.\n\n\"Yasmin's not here, she had to go to school and finish up a few odds and ends after her finals, and Shari's down at the office, taking care of some things for me, so it's just you and me this morning, so we'll have that talk when you're done. Go on now; I'll be here when you come back down.\"\n\n*\n\nAfter the best, hottest, most luxurious shower I'd ever had, properly shaved, brushed, and combed, and dressed in my freshly laundered and pressed, clean-smelling clothes, I made my way back down to the sitting room.\n\n\"In here, Ricky,\" I heard her call, and I followed her voice into the dining room, where something smelled delicious. Ayesha was busy laying the table and she stopped dead, dropping the napkin she was holding as she stared at me.\n\n\"My God, you look just like, just like your... just like... \" she stammered, while I stared at her in puzzlement; what had I done now, and what the hell was she talking about?\n\n\"I'm sorry...?\" I began, and she flushed, her face reddening.\n\n\"It's nothing, I'm sorry, Rich... sorry, Ricky, for one second there you looked just like... never mind, breakfast is ready, please, sit, eat, don't let it get cold.\"\n\nHot food, hot, tasty food, food like I'd never had before was a dazzling experience; from my perspective now, when I look back on how my life turned, it was simple food, the kind of breakfast millions of people probably have every day of their lives, but for me, it was a revelation; grilled bacon, fried eggs, sausage, grilled tomatoes, hot toast with butter running through it, nothing special or gourmet, but to me, compared to how I'd been living, it was a magical feast, the best, most wonderful things I'd ever eaten.\n\n\"Eat as much as you want, Ricky, then we'll talk, while Yasmin and Shereen are away; right now, I don't need Shari's interruptions, and I don't want Yasmin hearing what I have to say. Eat up and we'll get this over with, then you can decide what you want to do next, OK?\"\n\nI didn't need telling twice, and I pitched in with a will, and no matter how much I ate, there was always more. When I finally pushed my plate away I was stuffed full, happy and satisfied in a way I'd never been before; there's a world of difference between getting-by on mediocre grub you eat just to keep yourself alive, and filling up with simple, tasty food that satisfies like nothing ever did before, and I felt strong, together, fit, and ready to fight lions, which something told me I was about to do.\n\n*\n\nBreakfast over and cleared away, Ayesha told me to go wait for her in the sitting room. When she joined me, her mood had changed; during breakfast she'd been friendly, helpful, polite, chatty, even, and had gone to great pains to put me at my ease. Now she looked stern, grim, almost.\n\n\"Ricky,\" she began, \"I want you to understand that none of this reflects on you, do you understand? Your family and mine have a lot of history together, none of it good, and I still feel anger, so much anger, but you must remember, none of this is your fault; if you didn't need to know this I wouldn't tell you, but you need to know the truth, and that... creature, your father, will never be able to tell you, or even admit to any of it. I want you to know that I won't enjoy any of this, do you understand? I hardly know you, but what I've seen makes me hope that things will change, that maybe you will make the difference; remember, that Richard Davies, remember that and hold on to it!\"\n\nMy throat was dry; suddenly I didn't want to be here, but I knew I had to be; too many secrets and lies had surrounded me for too long, I needed to clear it all away so I could be normal, perhaps with my new family to be there for me. I nodded at her, telling her I was ready to do this.\n\n\"Do you remember yesterday, when I showed you my back? That I told you your father did that to me?\" I nodded, and she kept going.\n\n\"He did that to me because he could; he did it to your brother, he did it to Nicky's mother, and he did it to Barbara, your poor mother. Robert Davis stole everything I had, he took every last thing I owned, he beat me, he raped me countless times, and he destroyed everything I had, my place in my family, my business everything. And why? Because he wanted what I had, that was the only reason he needed. Your father was a sadistic criminal, a true psychopath, why should he work when he could just take, so he took, and he took, and he took!\"\n\nHer eyes were hard and bitter, glistening rocks that stared into my soul, and I couldn't look away.\n\n\"If all he wanted were just things, well and good; but that wasn't enough; he wanted to own me, for me to know I was his slave, his little chilli-cracker plaything to use and mistreat whenever he pleased, and that's all I was to him. When he found out I was pregnant with Shereen he beat me so badly he nearly killed me; children with me wasn't part of his plan, I was just there to be used while he took my business, stole my money, gambled and lost my property, everything I'd worked and saved for. He bankrupted my parents and made them disown me, he destroyed my name in our community and any chance for marriage and a family of my own. He took all that away.\"\n\nSomething she'd just said struck a chord and I went back, looked at it, and shook my head; that couldn't be right!\n\n\"I...I'm sorry, could you back up a second, please? You just called Barbara my mother, you're wrong, she was Nicky's mother, not mine...\"\n\nAyesha shook her head.\n\n\"No, Richard, Barbara wasn't Nicky's mother, she was yours, you and Robert; your father abducted Nicky from his mother, his first wife, when he was a toddler; Barbara brought him up, but she was your mother, not his... \"\n\nMy jaw dropped in shock; now it all made sense, why Nicky's \"mother\" was still hanging around our family; it was because she was my mother; we'd had our mother with us all along! That fucking bastard! As the thought rang through me, everything else clanged along with it; how we'd ignored and disrespected her, how we'd followed our father's lead and treated her like a servant, the way we'd grin when we heard dad abusing her, our smirks and snide comments listening to her begging dad to stop hurting her, the grossly disrespectful way we'd behaved at her funeral, it all came back home to roost, and then I felt the sick horror that came with knowing I'd been a willing part of all that, that I'd been a part of what he'd done, everything he'd done... to my own mother!\n\nAyesha looked at me levelly and murmured \"You didn't know... \" but we did; we knew decent people didn't behave like we did, we knew that was not how you treated people, and we didn't care, because we were better than her, so we did it anyway.\n\nAyesha handed me a glass of water and I drank mechanically, blankly, horrified almost beyond bearing at what I'd heard, knowing there was yet worse to come... \n\n\"Please... finish it... \" I murmured, bracing myself to hear the rest. Ayesha stared at me for a few seconds, and nodded.\n\n\"Robert Davies was a monster, a racist pig who loved hurting people, me, anyone, it was what he got off on, he... took me, he beat me, he hurt me so many times, and why? Because he could, that's why; whenever he came to London he'd show up here, drag me into his bed, knock me around, and leave me bruised and bloody, and I had no-one to help me, and because I had no-one to help me, he kept coming back. When he was finished with me he'd slap me around, call me names like 'Paki whore' and 'chilli-cracker' and 'wog', he did it in front of his daughters, and tell me he was going to sell them too, because no white man was going to want a chilli-cracker, but he knew plenty of men who wanted to one to play with, and when the girls were old enough, and pretty enough, he was going to sell them, because they were little whores too; he had real children already, white children, what did he need half-breed chilli-crackers for?\"\n\nMy stomach was heaving with disgust as the story unfolded; I couldn't believe my dad would do things like that, but a small voice inside me kept shouting that yes, of course he could, because I'd always known what he was really like.\n\n\"How...\" I murmured, and she bit her lip, tears starting in her eyes.\n\n\"When I left university, I graduated with a first-class degree in business administration, with an honour in economics; I borrowed money from my father and began a property renovation and leasing business, buying up derelict residential and small industrial premises and remodelling them, renting and leasing them back out again, it was small-scale at first, but this is London, people need places to live, places to work, to do business, and my business grew. Your father and his cronies heard about me, they saw a woman alone turning a small business into a financial success and they wanted it, so they took it from me, they moved in on me, they grabbed everything I'd worked and planned so hard for, and your father was the worst of them; he was the ringleader, it was all his plan, his get-rich-quick scheme; why work a business when you can just hijack one?\"\n\nTears were running down her cheeks, but she bored on relentlessly.\n\n\"He took everything, he emptied my bank accounts, he made me take out loans against the business and sign over all my properties to him, everything I'd worked for, and, when I tried to object, to fight back, he'd just hurt someone I loved; his friends beat my father so badly he's never recovered, and my family found out, because he told them, just to make sure they disowned me, to make sure they'd never lift a finger to help me, and when he got his hands on everything I owned he sold it all for whatever he could get for it because he didn't care, he hadn't paid anything for it, whatever he got for it, it was all profit for him. And then it was all gone; I had nothing left, and when I had nothing left, he started using me, because I had nothing else to for him to take, and he said rag-head whores were only good for one thing, so he and his friends used me until he decided I was his personal whore, and that's what I became, over and over again.\"\n\nShe paused to sip from her water glass, her hand trembling slightly as she looked past me at something I couldn't see, before taking a deep breath and putting her glass down and squaring her shoulders as she continued her story.\n\n\"When I fell pregnant with Shari he was so angry, he beat me so badly I was in hospital for three weeks, when I came home he told me I could keep the baby, as far as he was concerned it wasn't his, and he did the same thing with Yasmin; he paid nothing for them, not a penny, I had to scrape around finding whatever work I could just to feed my children, because he wouldn't, he had you and Robert; my children were nothing to him, my family wanted nothing to do with me and my half-caste, bastard children; we were alone, and I had no-one to help me, to keep that man away from me, to stop him doing whatever he wanted to me.\"\n\nI sat in shock; I knew my father had a mean, vicious side, but this? This was monstrous, that a man could do things like that to a defenceless woman? It horrified and sickened me, because this was my father, part of me was part of him, and the thought of that disgusted me beyond all reason; all I could do was sit in silence while this horror rolled over me; my father was a demon, and I was his son...\n\nAyesha bowed her head, I could see the tears dripping from her chin as she cried silently, and I cursed myself for coming here and stirring all this up again inside her; I wanted to reach out to her but I didn't know how.\n\n\"Barbara...you said Barbara was...my mother?\" I began, \"how was that even possible, she lived with us, why didn't...?\"\n\nAyesha cut me off.\n\n\"Because he was an evil, psychotic, rat-shit bastard, that's why!\" she screamed, and I cowered down in my seat, suddenly afraid of this woman who'd suffered so much at the hands of my father.\n\n\"He took that poor woman away from wherever he found her, he gave her children to keep for himself, he terrorised and abused her, and he killed her, that fucking piece of shit killed her because she tried to help your brother! That fucker sat right where you're sitting, drunk as a skunk and told me all about it, how he killed her because she went through his papers, how he made it look like suicide, and he gloated about it, he was proud of what he did, everything, what he did to her, what he did to your brother, what he did to me, he thought he was the fucking King Shit of the Western World, like he was some kind of superstar...!\"\n\nShe abruptly cut her tirade short and laid her head in her hands and cried, huge, gasping sobs as she let it all out, and me, I sat there like a moron, too shocked and disgusted to move, too ignorant to know what to say, just numbed and paralysed by the horror of what had happened to this woman and her life because of my father. One fact that kept clanging inside me, however, and would not be quieted; he'd killed Barbara. He'd killed her and boasted about it, she hadn't committed suicide, it was him, he'd killed her. She was my mother, Bobby's and mine, and that hadn't stopped him, it hadn't even slowed him down, he'd still tied that rope around her neck and watched her choke her life out and did nothing. He was a murderer, he murdered my mother...\n\nI found myself stroking her shoulder, her back, trying uselessly to comfort her, unable to do anything else, because I didn't know how. I didn't know how to reach out and comfort a fellow human being. I didn't know how because he'd done that to me, he'd made me less than a human, just a shell with no understanding of how to be a real person, one with proper feelings, and empathy, and compassion. I truly didn't know how to express compassion or sorrow, because he didn't have those, so he'd never taught us. \n\nIn a sudden, stinging epiphany I realised I was even less human than the stray dogs I'd seen rooting in the dumpsters and squabbling in the streets. I had none of the gentler emotions, the only inheritance I had from that man was a lack of basic human emotions and connections so profound it passed all understanding. I was a golem, a walking shell, a vacuum, I knew nothing about anything, not even how to try and take someone's pain away, and that realisation stunned and horrified me.\n\nAyesha's hand squeezing mine woke me from my heartsick woolgathering. Her face was grey, but her features composed, tear tracks staining her cheeks but she was calm again, she'd said what she needed me to hear, and the crisis point had been passed. She took both my hands, looking into my eyes, concern and compassion in her eyes, and I realised she was concerned for me, for what she'd made me see.\n\n\"Richard, I'm... I don't know what to say to you, I thought you needed to know this stuff, but I'm sorry you had to hear it, if that makes sense. I know it's not your fault, or your brother's, I showed you my anger and it wasn't your fault, none of it was. Please forgive me, I hated you for what your father did, and I was wrong. It's gone now, it's all over, but now you know, and maybe we can, I don't know, move on together. Will you forgive me?\"\n\nI nodded, not knowing what else to say, and she cupped my face gently with her warm hands, a faint smile on her lips.\n\n\"So much like him, yet nothing like him at all... \" she murmured, \"maybe there's hope for you, so now we have to ask, \"what are we going to do with you, Richard Davies?\" Come, sit with me, we'll talk, and when your sisters come home, we'll talk like a family should, yes?\"\n\nI let her lead me back to the sitting room, going slowly because she needed to lean on her walking cane, into the less confrontational and homely atmosphere, but my mind was still churning with all I'd learned, the things I now knew about where I was from, and what I was. I think Ayesha divined some of what I was thinking, because she sat on the sofa next to me and took my hand while she gazed silently at me.\n\n\"Yasmin trusts you,\" she said out of nowhere, startling me out of my thoughts of Barbara, Nicky, what had been done to them. \"What..? I blurted out and she smiled that faint, enigmatic smile of hers.\n\n\"Yasmin. She likes you. What's more, she trusts you; she thinks you're OK.\"\n\nI must have looked puzzled, I certainly didn't understand her, but her hand on my arm was gentle, and she didn't seem mad at me anymore.\n\n\"Let me tell you something about my girls, Richard, about your sisters,\" she began. \"They're scared; Yasmin is scared all the time, she's jumpy and nervy, and Shereen tries not to show it, but she's just as scared. They've been scared all their lives, but it's a funny thing; since you've been here, and they've been helping look after you, a lot of that has gone; it's like it's clicked down a couple of notches. Not all of it has gone, that's going to take time, but enough that it makes me wonder what they're seeing. Everything that happened, what they saw, what happened to them, Yasmin is finally getting past it all, and I know you don't understand this, neither do I, but I think it has a lot to do with you being here.\"\n\nShe sighed as she leaned back, her eyes looking off into the distance, seeing things I never could.\n\n\"Your father left some deep scars in her, and Shereen, well, you saw for yourself; they know he's been locked up forever, but they're both still very frightened. What he said and did left strong and lasting memories. Yesterday and last night, for the first time, I saw Yasmin starting to let that all go. She needs a positive male influence in her life, and I think that could be you, if that's what you want. \n\nShe grinned at me.\n\n\"I don't want to pressure you, but just you being here has made an incredible difference in her, because now she knows that not all the men in her family are like that man, and she likes you, she even trusts you. This morning, before she even thought of herself, she just had to look in on you and make sure you were alright, that you were still here, that her big brother was still here and hadn't slipped away during the night.\"",
        "She grinned as she squeezed my hand gently.\n\n\"She's happy now, she knows she's got a big brother now, if you'll be that for her, and she's feeling truly safe for the first time ever. If for nothing else, then thank you for that, Richard, you've made a big difference in her, and I'm happy.\"\n\nShe paused to brush my hair back off my forehead with her fingers, a gentle, intimate gesture.\n\n\"Even Shereen's coming around, now she's gotten past the memories a little and accepted that you are indeed her little brother, that you're not like that man, and that in your own way you're just as injured and traumatised as she was. Remember one thing; Shereen's always had to be the strong one, the protective big sister, but she needs you too, I can see that, and if you let her, she'll probably care as much for you as she does Yasmin. Both your sisters need you. You may be a complete stranger to her, but there's something about you, and no matter how hard she pushes back against it, Shereen knows you're part of this too, part of her and us. \n\nShe shook her head wonderingly.\n\n\"She can be so hard-headed at times, and she probably can't even admit it to herself right now, but it's clear to me you being here makes her feel safe too.\"\n\nShe gave me that enigmatic smile again and once more flicked my hair out of my eyes.\n\n\"Remember, and keep it top of mind, Richard, she won't let go of the 'big sister' thing easily; she's been the big sister to Yasmin all her life, and now she's going to be your big sister too, and she'll push it. That's just the way she is, so try and not push back too hard; don't let her walk all over you, but give her space to be your big sister, and she'll include you and make sure you know you're part of this family.\"\n\nThis constant harping about the girls always being scared had struck a chord inside me; if my father, the man they'd been afraid of (with good cause, I had to admit, if half what I'd been told was true) was in jail and wasn't ever getting out, what did they have to be scared of? Something she'd said earlier had registered but I couldn't winkle it out, but it gave me a feeling of vague, unformed dread; there was something else here, more evil still waiting to be revealed.\n\n\"Why is Yasmin so scared?\" I asked, unwilling to ask the question but unable to let it go and Ayesha stared at me, her forehead knitted, before nodding slowly, like she'd had to make a hard decision.\n\n\"I told you, Robert Davies, your... her father, threatened to... sell her to his friends, whatever they were, and she doesn't know I know, but once, he nearly... he nearly...\" \n\nShe paused to clear her throat, her eyes bright and scared. \n\n\"She got away, Shereen and her, they got away from him before he could... do anything, but only because he was so drunk... they think I don't know what happened, don't tell them; let them tell you when they're ready. \n\nShe drew a deep, ragged breath.\n\n\"That's why Yasmin feels so drawn to you, that's why you make her feel safe, because she already trusts you; she sees something in you that makes her believe you won't let anything happen to her. I hope to God she's right... \"\n\nThe sound of the front door opening put an end to our conversation, along with a warning glare from Ayesha. The sitting room door opened and Yasmin poked her head around the door, her eyes lighting up as she grinned cheekily at me.\n\n\"You stayed, good, I hoped you would!\" she chirped, \"Mummy, is Ricky going to stay for a while?\"\n\nAyesha smiled at me. \"I don't know; is Ricky going to stay for a while?\"\n\nI stared at her, nonplussed, and Yasmin raised her eyebrow and nodded, so I nodded back.\n\n\"Yes, I'd like that very much... if it's not too much trouble...?\"\n\nYasmin stepped fully into the room and I got my very first proper look at her, uncoloured by any state of apprehension or puzzlement, and I have to say I was awestruck; my little sister was gorgeous! Her long, thick hair, flowing in tumbled curls almost to the small of her back was a rich mahogany-red, not Titian, nor auburn, but a lustrous, red-bronze somewhere between the two. Her eyes were like her mother's, a vivid green-hazel, and so bright that, like Ayesha's, they appeared to be lit from behind. Her skin was a pale olive with a faint golden blush, pale and sleek, giving her a lush, exotic look, and she was tall and slender, with a tiny waist and small breasts (and I blushed guiltily as I realised I was thinking about my kid sister's boobs!), her long, slender legs encased in skin-tight jeans that showed off the curve of her hips and long thighs, and her round, firm little bottom. \n\nI realised with a sudden burst of insight just how hot my kid sister was, the thought followed closely by wondering if she had a boyfriend, and a quickly suppressed snap of jealousy at the thought, which made no sense to me; she was my sister, I should protect her, yes, not feel jealous of boys who might be dating her!\n\n\"Ricky Davies, you're my big brother, you only just got here, and you look like you need a good feed and a good sleep, so no, it's not too much trouble, we'd be glad to have you here, isn't that right, mum?\" she grinned, her grin widening into a big smile when Ayesha grinned back at her.\n\n\"You're welcome to stay, Richard, you seem like a nice boy, your sisters and I would be glad of the company. Stay as long as you like.\"\n\n\"Shereen...what does Shereen think, she doesn't like me much...\" I mumbled, and Yasmin beamed at me.\n\n\"All sorted, Ricky, we discussed this last night while you were out cold, whatever that... that man did, it wasn't you, you're not the enemy here, so she's fine with you staying here, don't worry about her, just let her boss you around a bit and you'll be fine.\"\n\n\"Anything else I should know...?\" I asked, and again Yasmin grinned at me.\n\n\"Just take it easy around her; she'll let you in, just give her time, OK? You're her kid brother, remember? She's just raring to push you around, just go with the flow.\"\n\nAs if on cue, I heard the front door open, and Shereen call out \"Mum, I'm home!\"\n\nThe sitting room door swung open and Shereen stepped into the room, giving me a quick once over, then, in a classic 'double-take' her eyes locked on my face and her eyes widened.\n\n\"Jesus, you look like that... wow, wow, just look at you, it's scary... \" she stammered, her face flushing.\n\nYasmin leaned over and poked my arm, grinning at her sister.\n\n\"Ricky Davies, meet your big sister, Shereen Shahida, and Shari, meet your kid brother and my big brother, Ricky Davies; please try not to kill him, I haven't finished with him yet!\"\n\n*\n\nAyesha kept me occupied for the next hour or so talking about Nicky, Bobby, our family life, why I thought dad had made such a big secret out of not letting Barbara tell us she was our mother, but it was gentle, none of the hurt, pain-filled, angry inquisition of earlier. I found her easy to talk to, warm and motherly, and that confused me; heretofore, gentleness and simple human warmth hadn't played a big part in my life, although, on reflection, that was what Barbara had always had for Nicky. \n\nIt was a sobering thought that I could have had that too, for want of just a little compassion on my side. The jarring realisation just how easily I'd let what could have been the best thing in my life just slip away hit me hard, and for the first time in my life I cried, mostly tears of guilt, but a with huge sense of loss, too as Ayesha held me close. I did glance up once to see Shereen staring at me, her expression unreadable, but that hard edge was gone, and her eyes were soft and reasonable.\n\nAfter a time that felt like seconds, but could have been a lifetime, I felt her ruffle my hair gently, and when I looked up, startled, she grinned at me.\n\n\"You have nice hair for a little brother, Ricky,\" she grinned, \"later, I'll trim it for you if you like, but it's kind of nice just like this...\"\n\nI remembered Yasmin telling me that at some point Shereen was going to make it clear she was my big sister, so I guess that was her way of marking my card. It didn't trouble me, I could get used to having a bossy big sister, especially one as lovely as Shereen!\n\nYasmin stuck her head around the door and grinned at me, and looked over at Shereen with a quizzical eyebrow raised; Shereen glanced at me and nodded slowly back at her; obviously some kind of conversation about me had been going on, and agreement had been reached, but about what? I soon found out. Yasmin came into the room and tugged my sleeve.\n\n\"Come with me, Ricky, I'll show you to your room, we'll get you settled in, then we all need to talk, OK?\"\n\nYasmin (\"call me Yaz, Ricky, everyone does...\") led me down a flight of stairs into what must have been a basement once, but was now a comfortable-looking lounge area/rec room, with several big, softly upholstered chairs and a large, overstuffed couch, and a big-screen TV and DVD entertainment system, and on one side a small but comfortable guest bedroom with a compact en-suite bathroom.\n\n\"We thought you'd be comfortable down here, Shari and I use it to laze around, and mummy had an intercom installed from here to the kitchen so she could call us, so if you need anything just push the big button and whoever's there will answer.\"\n\nShe grinned cheekily and rubbed the material of my shirt between her fingers.\n\n\"There are closets in the bedroom, but you don't have any proper clothes, and you can't keep wandering around in these grungy old things, so we're going shopping later, you, me, and Shari; you need some basics and a good haircut, you look like something out of Buttville, the place where style went to die in its sleep, so if you're ready, we'll have some lunch, and then we're heading out to Westfield, let's see about getting you togged-up; you're with us now, strange new brother, gotta look the part!\"\n\nI tried to demur, saying I'd work out something but Yaz just looked right through me.\n\n\"Shut up Ricky. Shari's decided, and when she decides, it stays decided, so just let her do this; it's part of her saying sorry for going off at you, and she wants to dress you up a little. You're her project now, so just bite your tongue and say 'yes, Shari, no, Shari, three bags full, Shari' like a good little brother. Can you do that and not piss her off?\"\n\nI could feel my face flushing, but I nodded.\n\n\"I'll try...\" and Yaz grinned happily, hugging me closely with her head against my chest. I was kind of puzzled at her sudden affection for me, but it felt really nice, so I shut up and 'went with the flow'.\n\n\"Good, now let's get some lunch, we need to talk to Shari and mummy, then we'll head out, and don't look so worried, it'll be fun!\"\n\n*\n\nShopping with my sisters was a next-level experience, in more ways than one; we seemed to run through a dizzying number of stores, names I'd never heard of, crammed with clothes I'd never dreamed of, but wherever we went heads turned and ogled the two beautiful bronze-haired goddesses tugging me from store to store, and I have to admit to more than a twinge of jealousy at the thought of other men looking at my new-found sisters that way; how bizarre is that?\n\nShari grinned knowingly whenever she glanced at me, like she knew what was going through my head, and even Yaz seemed to be aware, judging from the cheeky grin and tug on my arm whenever I looked at a man looking at her.\n\n\"Calm down, hun, it's just guys being guys, nothing wrong with that!\" she'd smile, but I noticed she kept her arm through mine. I found that especially endearing, that and the way both girls would suddenly grab my hand and lead me to something they wanted me to look at, or try on, or just hold up against me. This intrigued me. Growing up, I'd hardly ever had fashionable clothes; strictly functional was the most my father would stretch to, and the concept of wearing clothes just to look good was kind of a new idea and hard to get my head around; cheap jeans and plain cotton shirts was all I ever wore, all I everhad, and strictly utilitarian.\n\nHowever I felt, though, both girls had me trudging in and out of the men's fitting rooms while they eyed me up and down and nodded or shook their heads and sent me to go and try something else, fitting me into a particular image of me they had in mind.\n\nWhile I was trying on some jeans, I stepped out to see what they had to say, and Yaz was alone, obviously Shari had gone off somewhere, and there was a youth, maybe late teens or early twenties, talking, or trying to talk to her, and she was trying to ignore him. He didn't see me coming up behind him, but the look on Yaz's face told me she didn't want him talking to her, and when he put his hand on her arm is when I stepped in. Yaz looked up at me and grinned.\n\n\"Hi babe, you like the jeans?\" she chirped, and the guy spun around to look up at me, then up some more, because I was at least a head taller than him. Yaz's expression was unreadable, but I could tell she was unhappy about him touching her, so I improvised.\n\n\"So, who's this midget?\" I frowned, and the lad gulped, flushing guiltily. Yaz frowned.\n\n\"He wouldn't leave me alone, get rid of him, babe!\" she scowled so I looked down at him even more unhappily.\n\n\"Who said you could talk to my girl? Get lost, pal...\" I huffed, and he blanched and stuttered something and literally ran away, while Yaz laughed delightedly.\n\n\"See, I knew having a big brother, even a big, skinny one, was a good idea!\" she giggled, slipping her arm around my waist while her firm little boobs pressed disconcertingly against me. Shari chose that moment to show up, and laughed along with us when Yaz told her what I'd done. That was the point where I felt I'd finally broken the ice with my sisters.\n\n*\n\nThe girls bought me armloads of clothes, mainly jeans and t-shirts, dress shirts, ties, sweaters, and packs of underwear and socks, a nice pair of dress shoes, sneakers, and some warm slippers, and one last thing, in a place called Moss Bros; a slim-cut modern black suit, the first time I'd ever seen a fashionable suit up close, let alone tried one on. When I came out of the fitting room Shari applauded.\n\n\"At last, now we know what you look like properly dressed! It looks great, and there's a room for you to fill out a little. You're getting that suit, Ricky, you're going to need it, so don't argue.\"\n\nWhen we got back to the house, Yaz spent half the evening hanging, folding, and pressing my new clothes, filling the empty closets and drawers in my new room, and chattering non-stop. When she'd finally arranged everything to her satisfaction, she grinned and hugged me once again, something she'd begun doing on a regular basis, not that I was complaining, you understand!\n\n\"There, now you have a wardrobe, please get rid of these horrible old things you're wearing, we didn't get you all this stuff for it to just lie there; it's yours, start wearing it, and that's an order!\"\n\nShari called us for dinner just then, so we headed upstairs. Before we even got to the stairs, though, Yaz stopped me and turned me to face her, taking both my hands.\n\n\"Don't ever leave us, Ricky, don't leave me, please? she whispered fiercely, \"You're my big brother and belong here with us, with me, and we all need you! Shari needs you, mummy needs you, and... and I need you too. Don't leave me, Ricky, not now you found me; this is your home now, with us, just remember that!\"\n\nI followed her upstairs, wondering at what she'd said, about her needing me, what that meant.\n\n*\n\nAyesha and Shari had cooked an amazing Indian feast, dishes I'd never heard of, but it was hot, spicy, filling, smelled wonderful, and it was delicious. Sitting around the table with her and the girls, eating together, talking and laughing, and passing delicacies around, it struck me that this was how a family was supposed to be. This was how families showed their love and maintained connections, they ate together and spent time together as a family, because this was how families worked, not the dysfunctional parody of a family I'd grown up in, but even with that my mind was still only half on the wonderful meal, and the warm and loving people surrounding me.\n\nI had much to think about, but that conversation with Yasmin echoed and resonated inside me; what was she saying, and how could I have made any kind of difference to her in such a short time? I didn't know; I just didn't understand what was happening here. I knew I still had such a lot to learn, but maybe the fact I knew there was so much I didn't know was a good start, and something told me I had some good teachers right here.\n\nPart 2 Will tell of Ricky's relationship with Yaz, his adoption by Ayesha, and her passing"
    ],
    "authorname": "beachbum1958",
    "tags": [
        "prelude to incest",
        "yaz",
        "family issues",
        "ricky",
        "shari"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/rag-doll-ch-07-rickys-family-01"
}