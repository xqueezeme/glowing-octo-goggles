{
    "title": "When Irish Eyes Are Smiling Ch. 07",
    "pages": [
        "Note to readers: We're just going to take a second here and thank Stella_Omega for her invaluable assistance in clearing the trees of undergrowth so that we could see the right path through the forest of possibilities. She truly is a valuable friend to have on your side. We'd also like to thank adetaildiva for her assistance in getting these last four chapters edited and posted. Her decision to be honest and shit on the changes that we'd made to this final chapter was what sent us off on a quest for the path we were clearly missing. We'd also like to thank all the people who proofread for us, blackhaus7 and slick_willie. I hope I spelled those right. *grin*\n\nOK, enough kudos for now, y'all get to reading and see what becomes of our faithful heros. *wink* \n\n<p align=\"center\">When Irish Eye Are Smiling\n\nBy Tom Collins and 3113</p>\n\n*Joel*\n\nSomehow, I made it the ninety-thousand blocks back to my building and got into the elevator without having to deal with anyone. I'd never felt so bad in my life, like I was on the verge of spontaneously combusting right here in this slow fucking elevator. Hammering at the button for my floor didn't make it move any faster, it didn't even make me feel better, but after an eternity it finally pulled up to a stop. It chimed as merrily as ever to announce our arrival at my destination and I wanted to rip out the little bell and stomp it. The doors thumped open and I practically ran to my apartment, trying to get in before that nosy bitch across from me decided to see what I was up to. \n\nI dropped my keys a couple of times, but finally managed to fumble the right one into the lock. I heard her door opening just as I got over the threshold of mine and slammed it behind me. I slid to the floor, while setting the deadbolt, my knees not able to hold me.\n\nI knew what was coming; it felt like it was tearing at my throat to get out. I didn't want it to happen, but there was no holding it back this time. Falling onto my side, I curled up trying desperately to hold the sobs back as I'd done when Eric walked out, but I couldn't. It hurt so much worse this time, and I didn't understand why. It didn't make sense that I could love Devlin more than I had Eric when I'd only known him for a month. Not even a full month, a mere twenty-eight perfect, blissful days with the most incredible man I'd ever met and I'd blown it. \n\nI'd screwed up big time not telling him about the messages and I knew it. I'd been so stupid to think I could ignore the ghosts of the past and pretend they weren't coming back to haunt me. I'd driven the most thoughtful and considerate person I could ever find right out of my arms. He'd made what I'd already known perfectly clear; I didn't deserve him. How could I when I was lying here on the floor, weeping like a little girl. He'd also made it clear that he could replace me with someone better, someone more to his liking, without even trying, just like Eric.\n\nI pulled myself up and stumbled over to my liquor cabinet, frantic to get something that would numb the pain. Jerking the door open, I reached for the bottle of Glenlevit, but my hand veered to the side, grabbing the Smirnoff instead. Smirnoff with lemon, I thought, his favorite. Clutching it to my chest as if it were Devlin, I dissolved into tears again, letting my rubbery legs lower me back to the floor. I don't know how long I knelt there, hunched around his bottle with me forehead on the carpet. It must have been hours.\n\nI finally rolled onto my side to ease the aching in my knees and noticed the room was dark. Sitting up, I looked at the bottle in the quiet, orange of streetlights filtering through my blinds. It was half-full. Twisting the cap, I listened to the metal grinding against the glass and felt my throat tighten again. Putting the bottle to my lips, I tipped my head back and forced myself to swallow until my lungs demanded that I breathe. Pulling it away, I looked at it again. It had only a finger's worth left in the bottom. The harsh lemon flavor filled my head as the strong liquor made my empty gut clench and try to rebel. I held it down though, determined to anesthetize myself into oblivion. \n\nSnuffling through my clogged nose, I recapped the bottle and I pulled out my phone. Hitting the speed dial for Gabe, I carried the remnants of my lost Dev's vodka with me as I stumbled toward my bedroom so I could lie down. The floor in the hall tilted alarmingly, the booze hitting me fast and hard. Gabe answered as I tripped through the doorway and fell to my knees.\n\n\"Hey, little-man, I was just thinking about you. Was fixing to give you a call and let you know that Mum's wanting to invite you and your guy over for dinner tomorrow. Don't worry it'll just be&mdash;\" \n\nThe sight of my bed, still hopelessly rumpled from Sunday night, forced a moan of anguish from my burning throat and opened the floodgates on another round of bawling. \n\n\"Hey&hellip;hey, hey, c'mon, what's the matter? What's happened?\"\n\n\"It's over!\" I wailed into the phone.\n\n\"What do you mean, 'it's over'?\"\n\nI tried to explain, to tell him what happened, but I couldn't make myself understood. When my voice reached a pitch that only dogs can hear, Gabe interrupted me.\n\n\"Wait. Just hang on, little bro. I'm coming over and we'll get you calmed down 'cause I can't understand a damned thing you're saying. Give me fifteen,\" he said, and hung up.\n\nI managed to get back to my feet, pulling myself up on the bed. Grabbing Devlin's pillow, I clutched both it and the vodka like treasures to my chest as I stumbled back into the living room and flopped onto the couch. I curled up around the bottle once more, the pillow under my head, my face pressed into it so I could inhale his scent. His clean, masculine fragrance still lingered, acting like a lifeline now, letting me push reality away and pretend for a few minutes that he was still with me. Lying there, cradling his vodka and breathing into his pillow were the most pathetic things I'd ever done, but I couldn't help myself.\n\nI stayed that way until Gabe arrived, unlocking the door with his key. \"Joel,\" he called, as he shut and locked the door behind him. I waved the bottle up high so he'd see me and just kept inhaling Dev from his pillow.\n\n\"Jesus fuck,\" he said when he came around the side of the couch. \"You're a right mess, ain'cha?\" He sat next to my feet and hauled me into his arms. I brought the pillow and bottle with me, unwilling to let go of them for even a second. \"What'n hell'd he do to you to make you cry like this? You never cried over Eric, least wise, not that I ever saw.\"\n\n\"I don't know why,\" I said weakly, feeling emotionally exhausted and too drunk to think straight.\n\n\"Don't know what? Why you're crying now or why you didn't cry then?\"\n\n\"Both,\" I hiccoughed. \n\n\"Christ on a cracker. I had no idea you were such an idiot. I always thought I was the dumb ass in the family. You're crying because you're in love with him and, for some reason as yet undisclosed, you think you've lost him.\"\n\n\"I was in love with Eric, too,\" God, my own whining was making me sick, \"and I was with him a lot longer.\"\n\n\"Bullshit. You might be able to pull the wool over your own eyes, but you never fooled me, baby brother.\"\n\n\"I did so love him!\" I said defensively.\n\n\"Yeah, you loved him, but you weren't in love with him. You never were. What you were in love with was the idea of being in love. You were in love with that image in your head of the two-car garage and the little, white picket fence lined with rose bushes, and the three point two cats you dreamed of raising with him. You were in love with that shining suburban life that you thought would make your happiness complete. When Eric took a powder, he killed that dream. That's why you didn't cry, because that dream never had any substance. Deep down you knew it. It's also why you're so broken up now. You fell in love with a person instead of a dream. That's why it hurts so bad.\n\n\"Now, what happened? Maybe it's not so awful as you think?\"\n\nSo, I told him. I spilled my guts about the whole, stupid thing, from the first text message all the way through to walking out of the bar. It took a while between the water leaking from my eyes and the repeated nose blowing, but I finally got it all out and he didn't interrupt a single time. \n\n\"I've got to tell you,\" he said with no little chagrin, \"I'm surprised you didn't get back with Eric. I kinda thought if he ever showed up again&mdash;\"\n\n\"That I'd forget the hell he'd put me though? You're right, I would have. Six months ago&hellip;two months ago even, I'd've swallowed all his repentant-prodigal-bullshit and welcomed him home. What's more, I'd likely've killed a fatted calf in celebration. Not now though. Not after Dev.\" I was more wiped out now than when Gabe had arrived. I leaned away from him, trying to lie down, but he pulled me up.\n\n\"C'mon, let's get you into bed.\" He stood, but I drew him back down.\n\n\"No, please, don't make me go in there. I can't sleep in that bed, Gabe, please. Just let me lay down here on the couch and I'll be fine in a little bit. I promise.\"\n\n\"Ok, you get some rest and I'll be back in a while.\"\n\n\"No! Please&hellip;\" I seized his hand, hanging on as if my life depended on him being there. \"Please, don't leave me alone. I can't be alone right now.\"\n\n\"Alright, baby brother. I promise I won't go anywhere,\" he said soothingly, sitting on the floor next to the couch and holding my hand.\n\n\"You know I love you&hellip;right?\" I said, \"You've always been there for me.\"\n\n\"Not always,\" he said regretfully, \"but I'm here for you now.\" He smoothed my hair back, kissing my forehead. Holding my hand and my head, his cheek against my forehead I heard him say, \"And from now on I will be,\" as the room rocked me to sleep.\n\n*Devlin*\n\n\"I'm going to have to find someplace new to live.\" \n\nI sat at Brian and Deb's breakfast table, sucking down coffee and trying to nibble at toast. Their breakfast nook had three windows, all with sunshine relentlessly pouring in. The table itself was unmercifully cheery, down to the personal coffee press Brian had set before me, and the vase of daisies. \n\n\"Come again?\" Brian said, breaking the yolks of his eggs with his toast. Thanks to that gallon of water Deb had poured down me, my headache was minimal, but my body hadn't quite forgiven me for poisoning it the night before. The sight of those runny yellow eggs upset my stomach and hurt my eyes. \n\n\"That's crazy,\" was Deb's opinion. She was enjoying a bowl of fruit and yogurt.\n\nI took another nibble of crust. Having showered and shaved, I now felt semi-human and able to think more clearly. What had happened yesterday confused me. The phone calls Joel kept getting, the mysterious meeting he'd gone to on Wednesday and the kiss, all suggested that he and Eric had reconnected. Yet seeing me dancing at the bar had upset him badly. \n\nIn my vodka-hazed brain, I thought he'd come to explain that it was all over and to say good-bye, and that still made some sense. Now, however, I was wondering if this whole month had been some kind of test drive. He hadn't been able to keep his eye off the latest sports car there in the dealership window. Given the chance, he'd taken it for a spin, put it through its paces to see if it could really compete with that vintage auto he'd once known and loved.\n\nThen that vintage auto had unexpectedly come back into his life. Yeah, Eric had been a shit and treated him badly. I didn't even know the guy and I wanted to strangle him for what he'd done to Joel. That didn't change the fact that the two of them had a shared history and all I'd had so far with Joel was a fling.\n\nSo how many times this month had I fallen short of Joel's expectations? I doubted he'd gotten as good as he'd given in the sex department and that was several points against me. Had Eric's kiss reminded him of what he was missing? I'd been stupid at the barbeque and failed to hold my own with his family. Seeing me dancing with a strange woman, feeling her up, might have been the last straw. Test drive over.\n\n\"I can't stay in that apartment building and risk running into him,\" I explained now to Deb and Brian, \"forcing myself on him.\" Hell, I thought, getting maudlin, I'd have to stay out of Espresso Yourself. Their coffee was one of Joel's few, unadulterated pleasures and I couldn't ruin it for him. Not even if my first inclination was to sit at a corner table and pine for him.\n\n\"I'll have to move,\" I concluded aloud, \"which is fucked up. I'd just gotten to know the doorman and the guy in the garage, and I love the gym. Maybe that new high rise on fifth&mdash;\"\n\nDeb slammed a hand down on the table, causing both me and Brian to jump. \"Stop it!\" She glowered in a way that told me I had well and truly pissed her off. \"You do this all the time. Lease a car rather than buy it and the minute something goes wrong you lease a new one. Rent an apartment instead of owning a home, and when the faucet leaks, you're out of there. Well you can't rent people! They will have problems and, if you turn away from them when there's a problem, they will dump you.\"\n\n\"Joel's already dumped me.\"\n\n\"You don't know that.\" She reached across, jerked the toast out of my hand and threw it on the plate. \"Why are you still here? Why did you get drunk last night and come here?\"\n\n\"Um&hellip;because I felt like shit?\"\n\n\"God!\" She threw her spoon down. \"What 'big men' you and Joel are! You see something that shakes your confidence and you run. If Cathy had seen another woman kissing her man, she would have gone right in there and found out what's what. If I had seen Brian dancing with another woman, I would've marched up and had it out with him. But you two big, macho men turn tail and flee for your lives. Oh! Oh! Oh!\" She flapped her hands in mock distress, \"The faucet's leaking, I've gotta move!\" \n\nShe shoved back her chair, took up her coffee and eyed me with disgust. \"If you and Joel had been lesbians, this would have never happened!\"\n\nShe strode out. In the silence that followed, Brian forked egg on his remaining toast and munched away.\n\n\"Well,\" I said, \"she sure told me.\"\n\n\"She sure did,\" Brian agreed, wiping at his lips with a napkin. \"She is right though. You can't keep hiding from the truth, wallowing in vodka and your friends' sympathy. If you're not willing to fight for Joel, you don't deserve him. So come on,\" he shoved aside his plate, \"I'll drive ya home.\"\n\nI wish I knew how I deserved such good friends. \n\n*Joel*\n\nI woke feeling wretched. My head wasn't bothering me much, but my stomach roiled in acidic nausea. This was why I never drank vodka, it always made me feel so sick the next morning, no matter how much or little I drank. I sat up, hoping gravity would stop the bile from shooting up my throat, but it didn't. Levering myself up from the couch, I went into the kitchen to see what I could find to soak of the crap leftover from last night's binge.\n\nCalling out to Gabe as I looked through the cabinets and getting no answer, I pulled down Devlin's box of cereal. My preference was Frosted Mini-Wheats, but Dev was a confirmed Wheaties man. I picked his cereal because it had less sugar than mine, but mostly because it was his. I'd probably wind up saving a little in the bottom of this, too, which was just the opposite of what I'd done with Eric's things, what he'd left behind that is. \n\nShit, he'd even taken Captain Jack, our cat. So named because he was the scruffiest, most disreputable looking kitten either of us had ever seen. Part of his right ear had been ripped, or bitten, off and he had a gimp leg that the vet couldn't do anything about. Pirates of the Caribbean had come out a couple months before that, so he'd been dubbed Captain Jack.\n\nEric had found him in a box in an ally on his way home one evening so, naturally, he'd considered Captain Jack his, even though the kitten had favored me. I hadn't thought of Captain Jack in more than a year, hadn't let myself think of him because it hurt too much. It was probably for the best he hadn't come to mind until now, otherwise I'd've probably killed Eric yesterday&mdash;or at least blacked his eye for him. I wouldn't want that to happen in public, with witnesses traipsing past every few seconds. \n\nI sat on the couch cuddling Dev's pillow and eating his cereal right out of the box. Even considering what happened yesterday, I couldn't see Devlin being so heartless as to take someone's pet. I wondered if it wasn't time to get a new cat.\n\nI was half-way through the box, mind blank aside from meandering thoughts of Captain Jack, when I had an epiphany. Like lightning out of a blue sky, I saw Devlin running away from the coffee shop and remembered being angry with him. He hadn't come in to find out what was going on, he'd simply assumed the worst of all possible explanations. I'd been hurt, not solely because he'd thought the worst of me, but because he hadn't even tried to fight for me. He'd walked away rather than trying to win me, because he couldn't stand the possibility of rejection. \n\nI'd known this last night, while I was dealing with Eric, but what hit me between the eyes was the fact that I'd turned around and done the exact same thing to him. If I loved him so damned much that I felt like I was dying when I thought I'd lost him, why was I sitting around my apartment, drinking myself sick, shoveling dry cereal down my throat and cuddling his pillow and wishing it was him? Why wasn't I out there looking for him to tell him I wasn't going to let him get away that easily? Why wasn't I fighting to hang onto the best thing that'd happened to me in years&mdash;maybe in my whole life? I was as big a dumb ass as Gabe had accused me of being, no doubt about it.\n\nI was on the verge of standing up so I could go out and try to find him when I heard the knob turn. \"Gabe? Where'd you&mdash;\" \n\nIt wasn't Gabe. It was Devlin. \n\n*Devlin*\n\nBrian stopped in front of my building, squeezing my shoulder and reminding me to call and keep them informed. I thanked him and headed for the elevators, my coat over my shoulder, Joel's picture, rewrapped in its paper under my arm. \n\nApartment dwellers poured out of the elevators into the lobby, ready for a casual, summer Saturday. I couldn't understand why Joel and I weren't among them; how had our whole relationship been derailed so quickly? Maybe&mdash;maybe it was because we'd rushed it&mdash;or I'd rushed it? \n\nThe elevator crawled, finally dinging open. Gazing down at my feet, I made my way down the hall. I was just short of my door when I noticed a pair of worn, white sneakers. Up to a pair of jeans. Up to a gray t-shirt. Powerful arms covered in coppery red hair. \n\nA blink up to a very, very angry face and burning green eyes. Brother Gabe was waiting for me.\n\nHe didn't have to say a word. Obviously, Joel had called him. I'd no idea what Joel had said, but whatever it was, Big Brother had decided that I was going to pay for it. \n\nHe straightened up. Carefully, I set down the picture and my jacket then deliberately pushed past him, reaching for my keys. I felt rather than saw him move, his hand going for my neck. Likely, he meant to grab me and force-march me back to the elevators. That was the way the O' Shaughnessys dealt with wayward children, I'd seen it at the party&mdash;and I was having none of it.\n\nHis fingers clamped on my neck and I elbowed him in the gut. His abs were hard as rocks, but he wasn't expecting it and I put a lot of pent-up anger behind the blow. \n\nI heard a surprised, \"Oof!\" \n\nLashing an arm up, I broke his grip and spun around. \n\n\"You want to drag me to Joel's?\" I snapped, putting my back to the door and my fists up. \"You can fucking wait a minute while I put some shit away&hellip;or we can have it out here in the hallway!\" ",
        "Gabe rubbed at his bruised abs, one auburn brow up and speculating. If he came at me, it would be over quick and we both knew it, but I held my ground. His lips twitched in amusement, and I thought I saw those peridot eyes reassessing me. Finally, he lifted his hands in mock surrender. \n\nI tried not to show my relief as I unlocked the door, half-furious, half-shaking with nerves. \n\nShit, piss, fuck!\n\nI scooped up the picture and jacket and went into my place far enough to deposit them on a table. I wanted to change, but it looked like Gabe wasn't going to give me time to do that. He politely waved down the hall, letting me lock up and walk under my own steam to the elevators. \n\nAs the doors closed on us, I wondered what I'd say to Joel. Why the fuck were you kissing that old swish! \n\nBesides, I was the one who'd screwed up, I just didn't know precisely how. It might take me months before I saw it, as with Cathy, but I knew it had to be my fault. Because Joel was&hellip;Joel was good. And I wasn't. It was simple as that, and even my most selfish wish to pin this all on him couldn't get around that. \n\nI could feel Gabe beside me, tense and brooding. We were almost at Joel's floor when he suddenly hit the neon red \"hold\" button, stopping the elevator dead. Ah, crap, what now? I wondered, resignedly facing him. \n\nThose green eyes were fastened on me again. \"What's Joel told you about me?\" he demanded.\n\nI shrugged. \"A few stories of all the crazy things you two did as kids. Said you were the greatest brother a guy could ever have.\"\n\nHis gaze shifted away at that. \"That's him alright,\" he sighed, shaking his head ruefully. \"What he left out, and would never tell you, is how I reacted when he came out. It was at a family dinner, and I can't begin to imagine the balls it took to tell us all at once like that, but he did. Know what I did? I stormed out. My little brother smiling and telling me he's a fuckin' homo? No fuckin' way, man! I couldn't deal with it, so I just turned my back on him and walked away. He came after me and tried to explain, but I couldn't hear it, couldn't listen to him. I said some things that&hellip;\" Gabe paused, sucking in a breath, \"well, I won't ever forgive myself for saying them. It was rolling right off his back though, and he wouldn't stop talking, explaining, so I blacked his eye to shut him up.\"\n\nMy hands fisted and I bit my tongue. This might have happened years ago, but my temper flared with outrage. Son-of-fucking-bitch!\n\n\"Four months, man,\" he went on, \"four mother-fuckin' months went by before I'd talk to him. Four months of me refusing to be there for him when he was trying to come to grips with himself and needed me more than ever. Four months and all I could think about was me. Oh, poor Gabriel's got a fag for a brother! Boo-fuckin'-hoo! I made him feel like shit about it. Mam finally ripped me a new asshole and pulled my head out of it. Joel&hellip;forgave me.\" \n\nHe punched the button and the sluggish elevator lurched to life. \"He forgives too easily. That's what he does. He always has,\" he finished off.\n\nI didn't know what to make of that. Why had he confessed all this to me? To give me hope of Joel's forgiveness for my lapse last night? Or to prepare me for Joel's bombshell that he'd forgiven Eric and was going back to him? Maybe Gabe was simply urging me to think of Joel's happiness before my own.\n\nMy gut dropped as the elevator doors rang open. God help me, I didn't want to lose Joel. I don't think I'd ever felt this way about anyone, not even Cathy, and I'd almost asked her to marry me. The very idea of losing Joel was driving me crazy and here was Gabe asking me, I assumed, to consider what was best for Joel even if that meant letting him go.\n\nWe traveled down the hall to Joel's apartment. The door was unlocked. I gulped and stepped in, Gabe followed. The place was warm and a little stuffy. The maple blinds were shut and the sheer curtains pulled so that only a thin dotted line of sunlight marked the tan carpeting. \n\nThe place smelled of Joel, his cologne, his sweat. For a moment, I shut my eyes and just inhaled.\n\n\"Gabe?\" Joel murmured from the overstuffed sofa. I hadn't expected to see him there and so hadn't noticed him until he stirred. \"Where'd you&mdash;\"\n\nHe stilled as he saw me, setting aside a box of cereal and licking at his lips. He looked terrible. Unshaven, hair a mess, eyes bloodshot. He looked&mdash;\n\nLike he'd been crying. Ah, fuck. I wanted to sit down beside him and gather him in my arms, run my hands up and down his long back until he relaxed. I wanted to promise to make it right. Kiss his neck and mouth. Most of all, I wanted to beat the shit out of whoever had done this to him. Problem was that \"whoever\" was likely me. \n\nHe didn't say my name, didn't say a thing. He just gazed at me, his eyes wary. Those wonderful eyes weren't admiring or desiring me anymore. They were looking at me as if I was going to hurt him, badly. \n\n\"It was just a dance.\" That was the first thing that spilled out of my mouth, the first sin that came to mind. \"It was stupid and thoughtless and it was two fucking minutes of nothing. I swear to you, it meant nothing.\"\n\n\"It did mean something,\" he said quietly. His calmness unnerved me more than if he'd started yelling at me. He sounded so&mdash;distant. Once again, I wondered if I'd failed some secret test. \n\n\"It meant you were hurting,\" he went on, \"from what you saw at the coffeehouse: Eric, kissing me.\"\n\nHell. His knowing I'd caught them kissing hadn't been part of the equation. My mind scrambled to fit this into my theories of what had gone wrong. \n\n\"I saw you run off,\" he sighed, \"I think&hellip;if I'd seen the same, I might've ended up in a bar dancing with a stranger. What I need you to understand is that I didn't expect to run into Eric. It was a complete surprise&mdash;\"\n\n\"Oh, shit.\" \n\nHe stopped, frowning, and Gabe shifted. My expression must have been telling as the brothers exchanged looks. \n\n\"What?\" Joel demanded.\n\n\"It was a surprise because I erased your messages,\" I confessed, and heard Gabe gasp. \"The ones Eric sent you arranging the meeting.\"\n\n\"You&hellip;erased&hellip;my messages?\" Joel rose to his feet. Had he always been that tall?\n\n\"Two of them,\" I admitted. Shit, shit, oh shit! What had I done?\n\nJoel's face went white with rage and his pupils dilated. Ah, hell. So here was the real difference between a relationship with a guy as compared to a girl. When I'd fucked up with lady-like females, they'd screamed at me or walked out. I'd gotten kicked in the shin, and on one memorable occasion, kneed in the balls. I was pretty sure, however, that Joel was about to punch me in the face. Gabe, of all people, looked ready to jump in and protect me.\n\n\"I can't believe you did that!\"\n\n\"It was wrong,\" I wanted to back away; I forced myself to stay put. \"It was wrong in&hellip;a lot of ways. But before you beat the shit out of me for it, I just want to tell you&mdash;I just want you to know&hellip;I'm flexible.\"\n\n\"What? What the fuck does that mean?\"\n\n\"It means that you don't have to choose between your ex and me. It means our relationship was never set in stone; we can change the rules to however you like. You can go back to Eric and still see me on the side. I don't need anything exclusive.\"\n\nIt made sense; at least it did as I was blurting it out. This way, I wouldn't lose him altogether. He could have the vintage auto, but give the sports car a second chance to prove itself. \n\nI looked at him expectantly, hoping that he'd be pleased or at least thoughtful. He looked&mdash;aghast&mdash;sick to his stomach.\n\nAh, hell. Wrong again.\n\n*Joel*\n\nI heard the knob turn. \"Gabe? Where'd you&mdash;\" I began, looking up and froze.\n\nDevlin stood in the doorway. Gabriel was at his back as if he thought he might need to block an escape attempt. Which of us he thought more likely to bolt, I didn't know, and he probably didn't either, but his expression made it clear that he intended to see this situation resolved one way or another.\n\nI was so taken by surprise that I drew a blank. I couldn't think of a single thing to say. I hadn't had time to come up with anything, or rehearse my arguments for why it was me he should be with and not anyone else.\n\nHe broke the silence by trying to assure me that the bimbo hadn't meant anything to him, but I'd already figured that out. I told him so, and started explaining what he'd seen at the coffee shop, that it had been an ambush rather than a tryst. \n\n\"Oh, shit,\" he cursed and started trying to avoid eye contact, looking at my shoulder instead of my face.\n\nGabe gave me a look that said, \"This ought to be good,\" and I said, \"What?\"\n\n\"It was a surprise because I erased your messages,\" he nearly mumbled and Gabe sucked air in through his teeth. \"The ones Eric sent you arranging the meeting.\" \n\nIt felt like everything in my head dropped right into my gut. I wanted to grab him and shake him until his head snapped back and forth like a bobble-head doll and scream at him, \"Why the fuck did you do something so fucking stupid? If I'd've known Eric was planning to meet me there, I'd've never gone. I'd've gone to your apartment and made some coffee there or, fuck&hellip;broken into Mrs. Busybody's place across the way&hellip;anything but gone there!\" but I couldn't because there it was&mdash;the expression that Deb warned me about. The look a puppy gives you when it knows it's in trouble for piddling on the carpet. I couldn't bring myself to give him the verbal thrashing he deserved while his Caribbean blue eyes were pleading with me to understand and forgive him. I was still trying to contain my anger when he dropped a second bomb on me.\n\n\"It was wrong. It was wrong in&hellip;a lot of ways,\" he said quickly, \"but before you beat the shit out of me for it, I just want to tell you&mdash;I just want you to know&hellip;I'm flexible.\"\n\n\"What? What the fuck does that mean?\"\n\n\"It means that you don't have to choose between your ex and me. It means our relationship was never set in stone; we can change the rules to however you like. You can go back to Eric and still see me on the side. I don't need anything exclusive.\"\n\nThe blood drained from my head again, but for a different reason. My stomach, which had settled thanks to the cereal, began roiling again. I felt like I was going to pass out, or puke, or maybe both at the same time. Steadying myself on the couch, I eased myself down onto the over-stuffed arm so my traitorous legs wouldn't betray me. I hunched over, clutching my middle and breathing deeply in hopes of calming my stomach. I took a minute, massaging my temples with my other hand, trying to ease the pounding headache that had appeared with his words, while I gathered my thoughts.\n\n\"You don't need it, or don't want it?\" I asked, my hand still covering my eyes, terrified I'd get the answer I least wanted to hear. \"Is this your way of telling me that you want to see other people?\" I looked up and he was still giving me that guilty puppy look. \"By, what, magnanimously allowing me to take back up with someone I don't want anything to do with, while keeping you on the side for afternoon trysts and weekend get-a-ways?\" I demanded hotly, my body language hitting heights heretofore unseen from me. I pushed up and began pacing, warming to the building tirade. \n\n\"That isn't what I said&mdash;\" \n\n\"Well, news flash, Dev! I told you right from the beginning that I'm not a fuck-buddy. I stopped dating altogether in college because that's all anybody was looking for. It wasn't enough for me then, and it sure as hell isn't enough now!\" \n\nStopping suddenly in front of him, I grabbed the front of his shirt and finally did what I'd longed to do. I shook the shit out him. The shock on his face made me feel better, so I shook him some more while I continued my rant, \"Are you wanting to see other people? Because if you are then go&hellip;enjoy!\" I made a sweeping gesture at the door, \"Just don't expect me to answer the phone when you make a booty-call. Is that what you want? You come clean with me right here and right now, Devlin!\" \n\nHe grabbed my wrists, startling me into silence. His eyes had gone cold and angry. \"Like you came clean with me?\" \n\n*Devlin*\n\nThe man was strong and he was shaking me fit to break my neck, shouting at me. I tried to explain, but he wouldn't listen. Finally, I cracked. I grabbed his wrists and snapped at him.\n\n\"Like you came clean with me?\"\n\nI won't say I didn't mean it, but I regretted the words the instant they passed my lips. I'd gotten his attention, all right. He went still and a stricken look replaced the fire in his eyes. His hands, sweaty and knotted in my shirt, slackened and released me.\n\nI learned something in that moment: I preferred having him angry with me. Christ, he could have hit me and I'd have preferred it to the way he seemed to vanish into himself. I felt the pulse in his wrists, its racing beat slowing under my fingers, and let go.\n\n\"I d-didn't&mdash;\" I began. I shouldn't have laid hands on him like that. How could I have done that? He had every right to shake the crap out of me. \"Joel, listen, please, you've got it backwards. I know you won't be my fuck-buddy and I don't want that. I wanted it when we met, I was honest about that, but I know you now. I'd never ask that of you. Never. But that doesn't mean&mdash;\" \n\nI fumbled. Continuing that way was a dead end; I switched directions. \"I knew about the phone calls, and I didn't ask. I was the one who dropped off the coffees on Wednesday. Your secretary told me you'd left for some secret meeting. I didn't ask. I saw you kissing Eric, and I&mdash;I wouldn't have asked. If you hadn't seen me running away, if we'd met that night, like all the other nights&hellip;I wouldn't have asked. I won't ever ask and you don't ever need to tell me. That's what I meant.\"\n\nI could hear his breathing and I could feel Gabe, still there, watching us from the corner. I wondered what he was making of all this drama. I wished to God that I could make sense of it. It was funny. Uncertainty in the real estate market excited me; uncertainty in who would win in a wrestling match challenged me. Uncertainty as to whether I'd end up fucking the sexy guy or girl got me hot. \n\nUncertainty in a relationship, however, terrified me, and not knowing how to please someone I deeply cared about&mdash;that was Hell. \n\nJoel seemed distant again, his face expressionless. I didn't know what else to say or do. Sinking down into an overstuffed chair, I stared down at my shoes. \n\n\"Please, don't yell at me anymore,\" I asked, \"I hate this. I can't figure out what you want from me and all I want from you is to know that we can still be together. I don't care how. Honestly, Joel, I don't. I know I've put up this front about not being able to change, but it's all bullshit. Tell me how you need me to be to make you happy and I'll do my best. Or tell me to fuck off and I'll do that.\" I took in a shaky breath, \"Just&hellip;I know you're hurting and it's my fault and I can't stand it. Tell me how to put it right.\"\n\nHe settled down onto the arm of the couch, quiet now. He was near enough for me to see a hint of chest hair peeking over the open buttons of his shirt, for me to smell his musk. My gaze went down over him, down to the zipper of his jeans and damned if I didn't start having fantasy flashes of ripping open his fly and sucking him until he gave me his cream, of letting him fuck me until I turned to jelly. \n\nGabe would have been scandalized, I'm sure. \n\nI didn't express any of this, much as I wanted to. I sat and waited. Finally, very quietly and calmly, he said exactly what I'd expected he'd say.\n\n*Joel*\n\n\"You can't put it right,\" I said, taking in a deep breath, while scrubbing my face with my palms. Releasing the air in a slow hiss, I combed my hair off my forehead with my fingers and stood. \n\nHe'd bared himself more completely for me than anyone before. I wouldn't have credited it, but in a matter of seconds, he managed to make me love him even more. The least he deserved from me was everything that was within my power to give him. Devlin was thinking the worst again; I could see it in his posture. He looked like he was melting into the armchair. It almost unmanned me to see the devastation in his eyes.\n\nStepping over to him, I settled on the arm of his chair and pulled his head against my side saying, \"You can't put right what isn't wrong. I mean, the only problem here is that we're both a couple of fucktards.\" \n\nHe wrapped his arms around my lower back, pressing his face into my stomach. He held me so tight it verged on painful and I could feel him shaking. The sensation of moisture sticking my shirt to my belly made my breathing hitch alarmingly. I tried valiantly not to morph back into the weeping puss-baby I'd become last night.\n\n\"If either of us had just said something, none of this would have happened,\" I added. Gabe caught my eye, indicating that he was going to leave. I nodded and motioned for him to lock the door. \"You should've asked about those calls, but even more, I should have told you. Also, I'd like the record to reflect the fact that what you saw at the coffee shop was Eric kissing me. I did not kiss him, and if I'd known he'd grab me the way he did, I wouldn't have allowed it. His assumption that all he had to do was show up and I'd be his for the taking disgusted me.\" \n\nI heard the door shut behind Gabe and I slid into Devlin's lap. He clung to me, but I pushed him back into the cushions so I could see his face. Tears made his darkly golden lashes spiky and he gnawed at his full lower lip. He dropped his eyes, refusing to look at me and swallowed hard several times. \n\n\"We need to be open and above board with one another,\" I told him, cupping his face in both my palms and using the pads of my thumbs to dry the damp circles under his eyes. \"That's how friends and lovers should be.\"\n\n\"That's what Deb said,\" he laughed weakly. \n\nLeaning in, I kissed the salty wetness from his left eye. A puff of his breath whooshed across my cheek as I breathed, \"A st&oacute;r.\" Repeating the gesture on the right eye I exhaled, \"A ghr&aacute;.\" I was ashamed of how irresistible I was finding his vulnerability. \n\nMy cock, wide-awake now, insisted I ravish him immediately, while he was defenseless and susceptible to my wiles. Firmly telling Junior that no one had given him permission to do the thinking right now, I did my best to ignore the dogged pounding behind my zipper. It was pointless to resist though. I knew I'd already lost the battle when the peck on the lips I'd intended turned into a minute long, achingly slow waltz of tongues.\n\n\"You might be perfectly fine with sharing me,\" I said, sliding to my knees on the floor, \"but I'm not.\" I opened his suit pants, \"I'm even less OK with sharing you,\" I pulled them down, \"and I won't do it, Devlin.\" Looking up at him while I yanked off his shoes, socks and trousers, I repeated myself firmly, \"I won't.\" \n\nDiscarding my shirt as I stood, I pulled him to his feet for another searing kiss. I walked him backward while his fingers ran through my hair, sending shivers down my spine. Hooking my foot behind his ankle, I pulled while shoving his shoulders. He fell, landing on the end of the brick-red chaise with a surprised grunt and a little bounce. Half a step and a leaning reach allowed me to snag the KY off the sandstone coffee table. I hoped the little left in it would be enough as I gave a flick and a jerk to the fly of my jeans. \n\n*Devlin*\n\nJesus Christ. The man had no mercy. He came at me when all my defenses were down and I was lost in his smell and heat, hormones raging. His kiss, the rasp of his unshaven jaw, had sent blood right to my cock, making it weep pre-cum as our tongues met and tangled. He informed me he was not okay with sharing me, emphasized it with the removal of shoes and pants, and with such lust in his eyes that there was no doubting him. My heart was pounding loudly in my ears as he stripped off his shirt and drew me to my feet. ",
        "He kissed me again, even as he walked me back. I was desperate for him now, running my fingers through his hair, trying, almost to swallow his tongue. I wanted to drop to my knees and show him that I was his, to apologize for erasing his messages and hurting him. Before I could do that, he caught me again, tripping me with a wrestling move so that I fell back onto the chaise. \n\nThere I was, in shirt and underwear, feeling that I must look ridiculous. I saw Joel snatch up the KY from where we'd left it a week ago. Ah, man. My heart pounded louder in my ears and I started to sweat. If that's what Joel wanted from me than that's what he'd have, but it wasn't my best event. Couldn't we start with something I was good at? \n\nHe tossed the bottle so that it landed near my head, flicked open the fly of his jeans, and climbed on. \n\n\"Scoot up!\" he growled straddling my chest. I scooted, but grabbed hold of his ass as I did so, sitting up to bury my nose in the opening. I nuzzled in, past the teeth on the zipper, finding his soft balls, his thick, hard cock straining at the fabric of his shorts. Putting my mouth to his nuts, I sucked and licked at them through the cotton.\n\n\"I want to get you off,\" I murmured, as his hips moved invitingly. \"Let me get you off.\" I delved into the window of the shorts, inhaling his odor, finding and shifting his hairy balls with my probing tongue. I gave a lick up the velvet skin of his hard shaft, over the vein throbbing there, and felt his cock twitch with pleasure. \n\nI got a taste of one delicious drop of pre-cum, and then I was shoved back. Joel, his face flushed with desire, yanked my shirt open, sending buttons sailing across the room. Hey! I almost cried out. I liked that shirt. Joel caught my wrists, holding hard enough to hurt as he brought them up over my head and captured them with one hand. His knees came under my ass, levering my hips.\n\n\"Don't move,\" he commanded, and from his pocket, he brought out his pocketknife. Using his teeth, he opened it up. A bit of sunlight seeping in through the blind flashed from it. \n\nI went very still. Before this month, I wouldn't have believed that I had any desire to be this out of control, and I suppose that if it had been anyone else, I would have hated it. But it was Joel. Joel with his strong shoulders, sweat beginning to glisten under his arms; Joel, his green eyes hot with desire, Joel flashing that knife, wanting to expose me&mdash;that excited me. \n\nI felt cold steel creeping under the waistband of my boxer-briefs. My breath went shallow. My cock, already stiff and tenting my shorts, got harder. \n\n\"Be very still,\" he almost sang, as the elastic snapped apart. He cut the other side, closed and tossed aside the knife, then ripped the fabric down the side seams. The shorts fell away, revealing my hard on. Having him gazing down at me, drinking in my nudity like that, thrilled me. \n\nHe took a moment to roll my balls and jack my cock. I groaned at his touch and bucked, my hips begging for more. He scooped up the remnants of my briefs and leaned over me. I licked and bit at his nipples as he tied my crossed wrists with the stretchy rags. His hands stroked down the length of my body, brushing aside the flaps of my shirt, as he came up on his knees, there between my spread legs.\n\nHis eyes never left me as he jerked down jeans and underwear. His heavy, pale cock rose up at a stiff angle from his pubic hair and fold of foreskin. The head was red and shiny with excitement. A pearl of pre-cum was there at the slit, making my mouth water. But Joel didn't offer it to me. Instead, he squeezed out the KY and stroked himself. \n\nAn evil smile came to his face. He grabbed a pillow, and slipped it under my ass. \n\n*Joel*\n\nHis gasp when I tore his shirt open made my cock jump and dribble; seeing him instinctively try to cover himself with his hands excited me even more, as did the shuddering groan that issued from him when I cut and ripped his shorts off with my pocketknife. His hips rolled wildly for a second, his rampant cock sliding back and forth on his pre-cum slicked abs. \n\nSeeing him lying under me, helpless because he wanted to be, because he was letting me take the power, made my heart pound like a jackhammer in excitement. Knowing he trusted that I wouldn't hurt him, that he believed he was safe with me even when I start waving a knife around, made me feel more loved than I'd ever dreamed possible.\n\nMy shaft, as hard as fossilized wood, fairly dripped when I'd finished coating it. Looking up, I saw him watching what I was doing, and gave him a calculatedly devilish smile. Snatching a pillow from beside his head, I stuffed it under his hips to keep them at the angle I wanted. I reveled in the smell of sweaty rut that already surrounded him as I braced myself on my forearm next to his shoulder and positioned myself at his opening. I captured his gaze at the same instant that I began applying pressure to his entrance. He remembered what to do and must have bore down hard. The speed with which he enveloped me took my breath away, so I took my time in settling myself in comfortably.\n\nHe sheathed me like silk, feeling so unbelievable I was barely able to check myself. \n\n\"I'm going to tell you how I want it to be,\" I said, leaning in, pumping slowly, \"sothere won't be any confusion, and no need for you to wonder&hellip;I'm for you. No one gets to muss my hair but you, or nuzzle into it, like this.\" I buried my nose in his hair behind his ear, inhaling deeply and groaning from the erotic surge his smell gave me. \n\n\"Hear me, Dev,\" I whispered into his ear, and tugged at his lobe with my teeth, \"Only you get to nibble on my ear.\"\n\n\"Ah, fuck!\" he moaned back, squirming as my cock delved into his tight, heated tunnel and relentlessly massaged his prostate. His cock, bobbing over his stomach, dripped a river of pre-cum onto his abs. His bound hands twisted and strained.   \n\nGod, he feels good! I bit my lip for a second, gliding in and out slower still, the better to relish the caress of inner velvet over my sensitive glans. \n\n\"My mouth is yours only; anytime, anywhere.\" I savored his unique flavor with a quick, demanding buss then moved down his chin to his throat. \"My neck is yours bite.\" I trailed wet kisses over sweaty flesh. He groaned something unintelligible, gyrating madly in counter point to my controlled motions.\n\n\"My chest hair is yours to play with; only you get to lick and suck on my nipples.\" Pushing aside his sweat-dampened Armani suit shirt, I swabbed each areola, sucking at the hard nubs before licking into his underarm, tugging at the hair with my teeth. \n\n\"And no one gets to straddle my hips but you.\" I intoned, gripping his hips and tilting them up further so I could hammer his sweet spot. \"No one but you gets to taste me, gets to fuck me. My dick is for your pleasure.\"\n\n\"Joel, man&hellip;\" he moaned, his powerful legs jack-knifing into my ass. \"C'mon&mdash;\" \n\nHis twitching cock, the head almost purple, was desperate for friction. I found myself speeding up. Bursts of pleasure shot through my stomach as his hot, pulsing interior caressed my cock. My sack tightened, rising with desire, striking his ass. I bit down on the inside of my cheek hard, hoping the pain would block it some. I wanted to draw this out. \n\nDev had other ideas. Using his teeth, he freed his hands and grabbed me, desperately pulling me down. My sweat-soaked stomach grazed over his length. \n\nNot yet, I thought frantically, I'm not done.\n\n\"I need to be yours, Devlin Christianson&mdash;oh, fuck&mdash;\" I huffed, losing my breath. His inner muscles were working around my shaft, scattering my concentration. \"And I need you to be mine&hellip;all mine!\" His hands, one on my ass, the other clutching my back, pulled me into full contact with his starved cock. The feel of it there between us, slick and hungry-hard, excited me even more.\n\nWiping the streams of blinding sweat from my eyes, I took a heartbeat to savor the sight of him, my golden man, tangled in his soaked shirt, eyes shut, his face angelic with ecstasy.\n\nChrist, how I loved him! Tell him, my mind whispered; stop hiding it&hellip;stop hiding from it! \n\nI was shaking now, even as I lengthened my strokes, pulling clear back to his entrance before sinking back into his steamy depths, making him cry out. Every one of his exhalations became a loud barking and I shuddered to hear them. No one had ever made such sounds for me. His thick nails bit into my skin, gouging my back and flank. I wanted to race to the finish, but I fought the urge and managed to go still.\n\nMy heart sounded like a kettledrum in my ears as his eyes fluttered open to gaze up at me.\n\n\"I wouldn't want to live if you didn't love me,\" I confessed into an eternal pause.\n\n*Devlin*\n\n\"No one gets to muss my hair but you, or nuzzle into it, like this,\" Joel informed me, even as he buried his nose into my hair while relentlessly taking my ass. \n\nThere'd been a burn when he entered, like the first time, but the second he'd settled into place, I'd experienced that heavenly, gone-to-jelly pleasure. Now he was giving me concentrated strokes that were driving me up a wall. I squirmed under him, my cock bouncing, getting only enough of a brush from his abs to make me buck for more. I was already fighting to get free of the damn underwear binding my wrists. \n\nI might have ignored what he was saying entirely, crazed as I was with pleasure and desire, except his words were the hottest thing I'd ever heard.\n\n\"Hear me, Dev.\" He'd gotten a hold of my ear and was doing delicious things to it with his teeth and tongue. \"Only you get to nibble on my ear,\" his hot breath whispered.\n\n\"Oh, fuck!\" I groaned. \n\n\"My mouth is yours only; anytime, anywhere,\" he added, giving me a too-quick taste of his lips before heading down my neck, pressing at the pulse racing there. \"My neck is yours bite.\"\n\nOh, fucking hell! It was unbelievable. He was giving himself to me, surrendering utterly and completely even as he pinned and claimed me. His stiff cock never stopped pumping into me, gliding in and out, bumping his balls at my ass, even as mine were jostled against his pelvis.\n\n\"My chest hair is yours to play with,\" he promised me, and I shivered. \"Only you get to lick and suck my nipples.\" I felt my ruined shirt pushed aside and groaned with anticipation; his warm, rough tongue tormented my nipples, then tickled and toyed with my underarm. Shit, piss, fuck! \n\n\"And no one gets to straddle my hips but you,\" he added, his lips and teeth leaving my flushed skin, his hands gripping and jerking me into a position that, incredibly, his cock head struck that gland of pleasure even harder. Stars appeared against my eyelids and I writhed beneath him, my aching dick desperate for a stroke. My torn shirt was clinging to my sweat soaked skin, and I could barely catch enough breath to go on.\n\n\"Joel man, c'mon&mdash;\"\n\n\"No one but you gets to taste me,\" he panted, \"gets to fuck me.\" He was dripping sweat, still going, giving it to me. Unlike last week, however, I got it. This time I understood: Joel wasn't trying to have a good time with an inexperienced lover; he was, with every gasping breath and gleam of sweat, trying to prove his devotion to me. It drove me beyond lust and need. Frantically, I squeezed my heels into his ass cheeks. He gave into my desire and sped up, his hot, sweaty belly grazing my cock, making me cry out. \n\n\"My dick is for your pleasure.\"\n\nI never imagined that anyone's words could matter to me during sex, could hit me in the gonads and make me want to come, but miracle of miracles, Joel's words did. No one, and I mean no one, had ever said anything so fucking hot to me. I got free of the stretchy material about my wrists and grabbed him. \n\n\"I need to be yours, Devlin Christianson&mdash;oh, fuck&mdash;\" I heard him huffing, as I pulled him down. The perspiration running off him made him slippery and I dug my fingernails into him for purchase, scratching his lower back. Clenching my inner muscles, I worked to give back some small portion of what I was being given. \n\n\"And I need you to be mine&hellip;all mine!\" he insisted, as that thick, hot cock of his, dragging its flared head back and forth, made me shout out sounds I'd never made before, felt things I'd never imagined a body could feel. \n\nThen, quite suddenly, Joel trembled and went still. I felt his heart hammering against my chest and blinked open my eyes. He was gazing down at me as if I was all that existed in the universe. \n\n\"I wouldn't want to live if you didn't love me.\" I don't know how I heard him say it, I was so gone and dizzy with sensations, but I did. I also saw, through the sweat, Joel's green eyes, everything he felt for me in them. \n\nI almost laughed, I almost screamed. Completely horned and charged up, ready to go and he wants to discuss something important! I can't say I didn't want to hear those words, though, just that they made for one hell of shotgun wedding. \n\nSometime in the future, there might be a proposal, likely mine on bended knee. There might be a ceremony with friends and family witnessing and some kind of holy man overseeing a public promise. This, however, was the real exchange of vows. Joel had just promised himself to me, every part of himself, utterly and completely in every way he knew how. Now he was asking for some token in return and for once, I felt not a single flicker of ambivalence. Any man who'd compete that hard to win me could fucking have me, forever and ever. \n\nDamn straight.\n\n\"I don't want to live without you either,\" I somehow managed to breathe. \"Everything you said back at'cha, sexy. You're mine, and I'm all yours.\"\n\n*Joel\n\nDev trembled like a newborn colt beneath me, his body screaming for release, his blue-green eyes gazing up at me. I hung there, heart pounding, waiting for some response.\n\n\"I don't want to live without you either,\" he panted faintly. There was an almost hysterical laugh to his breathless voice, \"Everything you said back at'cha, sexy. You're mine, and I'm all yours.\" \n\nThey were the most wonderful words I'd ever heard.\n\nThat was it. I lost my breath and my control. My hips thrust jerkily, my cock taking short, hard jabs at his sensitive trigger. A siren-like sound built in my chest and crawled up my throat with the impending orgasm. Resting my forehead on Dev's, I reached between us. Taking his shaft in a firm grip, I jacked him quickly.\n\nI felt the first blast from his pulsing cock burst through my fingers. His body clenched around me, milking my hammering cock. The painful ball of tension in my gut snapped, shattering my senses and hurtled me into an abyss of brightly colored, swirling lights.\n\nWhen I came back to myself, I could barely move. The most I could manage was to yank the pillow out from under Devlin so we lay flat on the chaise and straighten out my legs to ease the pain in my knees. Having expended my last reserves, I relaxed on top of him and nestled my lips into the crook of his slick neck.\n\n*Devlin*\n\nI was a trembling, sweat-soaked wreck: still recovering from an orgasm so intense I'd thought I'd go blind. My ass was humming with pleasure, slick with lube and Joel's hot come, and I was all tangled up in my ruined shirt. For a while I worked on regaining my breath and to stop shaking, to straightent out my cramped legs. The moment my muscles and nerves began to quiet, however, all the stormy feelings I'd been holding back since walking through that door started leaking out. To my intense embarrassment, tears began to roll down my face even as I laughed with shock.\n\n\"Dev?\" Joel touched my face, concerned. I wrapped my arms about him and pressed my wet face into his sweaty shoulder. I was wildly, madly grateful to have him in my arms again.\n\n\"I thought&mdash;\" I started to say. I couldn't get any further. I thought I'd fucked us all up. \n\nI swallowed and tried to fight the tears. He held me close, murmuring into my sweaty hair. \"It's all right. It's all right.\" He repeated it several times, holding me tight. Eventually, his words melded into soft humming in a soothing, pulsing beat. He began singing in Gaelic, \"A store, a store, a gragh,\" it sounded like.\n\n\"What the fuck are you singing and why does it sound so familiar?\" I asked sniffing mightily. \n\nHe obligingly switched to English, \"My treasure, my treasure, my love,\" he sang, stroking my head and rocking me. \"It sounds familiar because I say bits of it to you all the time. There's even some of it on the card with the gift I had for you. Please, tell me you didn't leave that at the bar.\" \n\n\"God no,\" I wiped at my eyes. \"I love the picture, but you confused the hell out of me with that card. You and your damn Gaelic. I spent half the night terrified that it was a farewell note. I'm going to start speaking and writing Danish phrases at random and see how you like it.\" \n\nHe chuckled, \"The card said, 'A halainn st&oacute;r, t&aacute; gr&aacute; agam duit,' which means, 'My beautiful treasure, I love you.' That's what the 'mystery meeting' on Wednesday was about, by the way. Iset up a photo session with Katie so we could take that picture. It's your four week anniversary gift.\"\n\n\"Oh,\" I said in a small voice. Now I felt really stupid. \"Happy anniversary.\"\n\nHis arms tightened, \"Are you okay? I didn't hurt you, did I?\"\n\nI shook my head. \"You&mdash;you ripped the buttons off my best dress shirt.\" \n\nHe pulled back, gazing at me nonplussed. \"Um&hellip;I just enacted a prison rape scene, with you as the bitch, and you're worried about your buttons?\"\n\nI laughed and hugged him tight enough to crack his bones. Under my fingers, I could feel the scratches my nails had made in his skin. I brushed them lightly, apologetically. No one, I found myself thinking once again, no one had ever fought so hard for me. Fought all my fears and all my stubborn, cowardly excuses, in order to keep me. \n\n\"I'm glad you're not going back to Eric,\" I said, releasing him at last. \"He wasn't worthy of you.\" \n\nHe gave me a sly smile. \"And you are?\" \n\n\"Hell no. I don't know what in the world you even see in me, except for the fact that I'm a living Adonis.\"\n\nHe chuckled and punched me in the arm. \"You're generous, caring and the most amazing person&mdash;\"\n\n\"Joel,\" I cut him off. I was actually blushing, which was new for me, humility not being one of my strong points. \"I don't know who you're talking about, but it's not me. I'm vain and egotistical, selfish, thoughtless&mdash;\" \n\n\"Kind, considerate, giving&hellip;\" he interrupted, gazing at me as if I were all he ever wanted to look at for the rest of his life. \n\n\"The more I like someone the stupider I get,\" I insisted.\n\n\"No one's ever been as good to me as you've been. No one's ever brought me care packages when I was buried under mountains of work. No one's ever planned an entire day to cater to my tastes. I did the planning for things like that concert in the park, or it didn't happen, and if it didn't happen I was in the shit.\"\n\nNow I really did want to kill Eric. The asshole! I may have expected the same of Cathy, but I'd never, ever given her shit about making or not making plans.\n\n\"I erased your text messages for fuck's sake,\" I pointed out in exasperation. \"Did it without a second thought, because I didn't want you meeting up with your ex.\" \n\n\"It's why you did it that matters most to me.\"\n\n\"Joel&mdash;\"\n\n\"&mdash;And you more than made up for it,\" he said giving my exhausted cock a stroke. Still overly sensitive, I sucked in a breath at his touch. \n\n\"Yeah, well, I'd promise you I won't do anything like that again&hellip;but my track record says I probably will. My advice, you should stop going for pretty, blond, egotistical studs and find a loving, selfless guy who can give you the happiness you deserve.\"",
        "He raised skeptical brows. \"You don't really want me to follow that advice, do you?\"\n\n\"Fuck no. I want you to tell me to keep my nose out of your love life, and that you find my idiocy sexy and endearing.\" I forced a smile. \"There is, however, one thing I'd need you to believe. I know I started off this relationship all hesitant and noncommittal, and you've no good reason to take my word for it&hellip;but I really am for you, Joel O' Shaughnessy. Crazy in love with you. So even if you can't count on me for anything else, you can trust that I won't be another Eric. Long as you can stand to look at me, you'll have me.\"\n\n\"On days when I can't stand looking at you I'll take you from behind,\" he teased, nuzzling his lips against my ear and, flicking the lobe with his tongue tip, making me shiver. \n\nIt was further than I'd ever gone with anyone. I was swearing not to do what I almost did today: turn tail and run when things got uncertain and rocky. I was promising, as well, to put his needs and happiness first and, if I could, to prove myself to his family, as they were a part of his life. Most of all, I was agreeing to change. It was the scariest thing I'd ever done, but there was no being any less or giving any less with Joel. \n\nI wouldn't have had it any other way.\n\n*Joel*\n\nI sat at my desk gazing at Dev's picture, the one of him in his suspenders with my fedora tipped back on his head and his hands stuffed in his trouser pockets, thinking about the last three months. \n\nLess than a month after our reconciliation, Devlin broke the lease on his apartment and moved in with me. We both agreed it was a stupid waste of money to keep both places when we never spent the night apart if we could help it. I'd tried to get him to do it the other way, thinking he'd be more comfortable sharing his space with me, but he insisted that he preferred it this way because my place was on the south side of the building, while his faced north. Apparently, mine got better light.\n\nWe merged our furniture, keeping my couch and chaise; he said there was no way we'd ever get rid of the chaise. We traded my armchairs for his and his stereo found a home in the living room along with his wonderful collection of music. \n\nA month later, he started bringing home flyers from work for houses that were on the market. Ones that had caught his eye. Deb and Brian were stunned to hear his talk of settling down. A couple weeks later, I came along on an early morning showing because we were heading straight from that to the lake. His birthday was a few days away and we'd both taken the week off so we could go camping. I looked around while he showed the house to the interested couple, liking what I saw. It was the first one I liked the feel of and we weren't even looking at it for us. \n\nIt had a sunken great-room and a den large enough for us to share for working at home. The kitchen would be perfect for entertaining, having all the amenities a body could ask for, including a built-in deep freeze and a huge range. The back yard was amazingly generous, with its flagstone patio, brick grill and a couple of huge trees. It even had rose bushes planted along all the fences. I could see myself out there creating beds of all sorts in front of the line of roses, sweating in the summer sun, Devlin bringing me a cold glass of iced tea. I didn't know much about flowers, but I wanted to learn. \n\nHearing mewling, I went around the side of the house and through a gate in the privacy fence that led into the front yard. It didn't have a white, picket fence around it, but it did have a whitewashed, double rung pole fence with a little white gate. The sound of numerous kittens drew me next door, where I found a girl, maybe twelve, setting up a large cardboard sign advertising free kittens. \n\n\"Hey, Mister, you like cats?\"\n\n\"I sure do,\" I said, kneeling next to the box full of active little bodies. They acted as if they were used to a lot of handling when I started examining them, not giving me any trouble. We chatted while I played with the kittens, sitting on my rump on her front lawn with her. After a couple minutes, her mother came out and we started talking about her flowerbeds and the ones next door.\n\n\"Are you buying the house next door?\" the girl asked.\n\n\"I don't know. I admit I like it,\" I replied, looking up at the sound of Dev's voice calling my name from the back yard. \"Over here, babe,\" I called, while I teased a particularly feisty, little calico with brilliant white socks and belly. He came over, joining us under the tree and glancing at the sign. The look he was giving me was forbidding. \n\nHe opened his mouth, but I spoke first, \"How'd it go?\"\n\n\"They loved it, but don't think they can afford it. They're going to keep looking. We can't get a cat right now, Joel,\" he hurried to say. \"We're about to leave town for a week. We can't take that tiny thing camping with us.\"\n\n\"Amy,\" I said, indicating the woman, \"said that they'd be happy to hang onto her until we got back.\" He sighed. \"Aw, c'mon, Dev. She's great, watch.\"\n\nI set her on her tiny feet, facing me, and made my hand into a spider. Sending it skittering toward her suddenly, she arched, puffed up to twice her size and started sidling away. Her ears lay back against a skull half the size of my fist and cut loose with the most violent hiss imaginable. It was tiny, somewhat squeaky and completely adorable. I saw Devlin's lips twitch as he tried not to smile. \n\nShe hopped away, turned tail and ran behind Devlin's ankle. He actually leaned over to pick her up, but she crept out, crouched next to his arch, her miniature haunches working, and her ears forward in eagerness. Just before his hand made contact, she flew forward, a multi-colored streak, and pounced on the \"threat.\" A ferocious little beast, she mock-mauled my hand, snarling like a miniature lioness on a gazelle. Devlin was grinning now and even gave a little chuckle.\n\n\"Doesn't that hurt?\" he asked.\n\n\"Naw, she's a smart girl. She knows how to play without hurting, and if she does get too enthusiastic you just go, 'sssssss, ow',\" I dramatically mocked pain and she stopped chewing on my fingers to look up at me, \"and she eases up.\"\n\nPicking her up, I stood and held her in front of Dev's face. \"How can you say 'no' to a face like that?\" I asked. She stretched toward him, her head weaving back and forth while her miniscule, bubblegum nose twitched like mad. Enormous blue eyes that seemed to encompass half her face gazed at him with intense curiosity, but it wasn't until she put a paw smaller than my thumb on each side of his nose and gave him a squeaky mew that he melted. He took her from my hands and I'd never seen him handle anything so gently before.\n\nThe girl, Becka, sighed in relief. \"That was close. I was really starting to think he wasn't going to let you have her, and that would have been sad since you've already named her and everything.\"\n\n\"You already named her?\" Dev demanded with mock exasperation.\n\n\"Yeah,\" I confessed, \"Pixel. Look at her. She looks like what you see when you zoom in on a JPEG super close.\"\n\nHe laughed, but quickly sobered, \"Still, I'm not sure it's a good idea to get a pet right now. Now while we're still house hunting.\"\n\n\"So. We'll stop hunting and buy a house.\"\n\n\"You've hated every house we've looked at.\"\n\n\"I don't hate that house,\" I pointed at the one he'd just finished showing. \"That's a great house. This is a great neighborhood with great kids and great families and great lawns and&hellip;\" I leaned close, lowering my voice, \"a great Jacuzzi in the master bath&hellip;\"\n\nWe picked Pixel up the following Saturday and Devlin insisted on going straight to PetSmart. We bought two hundred and fifty dollars worth of stuff for a cat that fit in his polo shirt pocket. Monday he started the ball rolling on buying the house. \n\nScroll ahead to today. We were closing escrow and meeting our friends and my family for a little celebration. \n\n\"Joel,\" my intercom came to life, startling me out of my revere, \"you're S.O. is here.\"\n\nTearing my eyes from Devlin's picture, I set it back in its place. Grabbing my trench coat and fedora from the rack, I stepped into the outer office. I caught Devlin watching one of the clerks' butt wiggle under her tweed skirt as she walked past. I couldn't help but chuckle. I didn't mind him looking; it would've been too restrictive and unfair of me to try to keep him from admiring beauty. Hell, I did it myself, so I understood how impossible it was to avoid. Besides, he never looked at them as if he were hungry for more. He was a sated man feasting his eyes on a well-done fruit basket. \n\nHe turned at the sound of my chuckle and smiled with his whole face, his entire body lighting up when he saw me. He hugged me, lifting me off my feet a little and nearly cracking my ribs. \n\nStealing a peck I said, \"Damn, you smell good, Muffinman. You've got coffee breath.\" \n\n\"The new cologne for men, 'Coffee Breath' by Calvin Kline,\" he quipped. \n\n\"I'd buy it for you for Christmas,\" I grinned. \n\nA short drive across town and we walked, my arm across Devlin's shoulders and his around my waist to the coffee shop. It felt incredible. It was fall, but we were having an Indian summer. Everything was fiery and golden, from the leaves on the trees to the sunlight flashing off the neighboring windows like coins in a treasure chest. \n\nMam and Pop were already at Espresso Yourself, along with Deb and Brian, Gabe, and Katie who was rocking her new infant daughter in her arms. The rest of the family and some other friends would be meeting up with us later at Bono for dinner.\n\n\"There's the new home owners!\" Mam cheered and came up to hug and kiss us.\n\n\"Escrow went through without a hitch,\" Dev assured my father, shaking hands, then heading to the counter to get our coffees.\n\n\"We've been talking it over,\" Katie said, as I joined her at the window seat, \"and we've decided that we're going to use your house for the holidays.\"\n\n\"A Halloween party for the kids,\" Gabe put in.\n\n\"An' Thanksgiving dinner for the family,\" Mam added.\n\n\"Christmas and New Years parties,\" Deb said.\n\n\"Boxing day,\" Pop finished off.\n\n\"It's the grill out back, isn't it?\" I asked. Everyone laughed. \"I'll have you know that our house will be guarded by a vicious attack cat. She pounces on anyone who enters. You'll all have to sign release forms absolving me of any responsibility. You party there at your own risk.\"\n\nMore laughter and more talk about future events at the new house as they all sipped lattes and mochas. I kept my gaze on Devlin. \n\nEasy on the eyes, I thought as he took our coffees over to the condiment counter. The sight of him still made my stomach flutter and my palms clammy. It was hard to believe that my spring infatuation had turned into a summer romance and, finally, into the birth of a new life just as the leaves started turning gold. \n\nWe'd even had our trial by fire. Dev thought of it as our comedy of errors, finding it embarrassing. \"Stupid mistakes with a lot of angst,\" is how he described that fateful weekend. I liked to remind him that Eric had made a mistake just as small and stupid, and broken with me out of fear. If either of us had given up, rather than sticking it out, we'd have gone the same way. \n\nDevlin always shrugged his shoulders at that and blamed it all on me because, he said, I'd refused to let go of him, but I knew our still being together was his doing. He'd had the confidence to ask me out, the courage to proposition me, and the willingness to put everything he was on the line in order to keep me. As I'd told him months ago, all I did was gaze at him in admiration, \"bird watching.\"\n\nMy guy brought over our drinks, handing me a perfect coffee. Everyone else was happily chattering, and didn't notice when he lifted his cup, privately toasting the two of us. \n\n\"Walls for the winds, Biker Boy,\" he said, his voice pitched so only I could hear, \"A roof for the rain, tea beside the fire, laughter to cheer and those we love near.\"\n\nThe dream I'd almost given up was coming true, only it wasn't quite the same dream anymore. It was a flesh and blood man who gazed at me, instead of past me. Looking at him I saw nothing but love, and my own smiling, Irish eyes reflected back at me.\n\n\"&mdash;And all your heart might desire,\" I wished in return. \n\n\"Go maire sibh bhur saol nua,\" we said in unison, and enjoyed our coffee.\n\n<p align=\"center\">~Fini~</p> "
    ],
    "authorname": "TomNJus",
    "tags": [
        "gay drama",
        "gay novel",
        "gay series"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/when-irish-eyes-are-smiling-ch-07"
}