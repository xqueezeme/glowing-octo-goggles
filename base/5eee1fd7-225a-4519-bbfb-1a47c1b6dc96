{
    "title": "Sierra Lives Pt. 13",
    "pages": [
        "*Dear readers, my sincere apology for the long delay; life is strange. I have also decided as much as I enjoy the idea of this story ending with the auspicious number 13, this story has a mind of its own. Please accept this offering of story progression rather than the promised conclusion. Sierra Lives on it seems.*\n\n*****\n\nSierra's hand snaked down to touch her sex while her other arm was flung across her head. She moaned into the cool night air. The soft sheets seemed to lightly caress her curves. His voice, cool and commanding thrummed silkily through her as he urged her to cum for him. \n\nShe could almost feel his mouth nipping and kissing along her aroused, restless body - hands prying and his long fingers circling her neck in erotic threat. Her own slim fingers dove into her wet, sticky pussy then rubbed slickly around her tingling, heated clit. \n\nHer soft mouth opened but no sound came out. She thought of his beautiful cock. She could feel him shuddering with desire as her lust projected into his mind. She imagined she could taste the salty cum that spurted from his fingers as he pumped himself to climax.\n\nSierra gasped awake, her body bathed in sweat and every fiber of her agitated with arousal. Distressed with the wanton state of her body, she shakily grabbed the glass of water from her nightstand and gulped the cool liquid down. \n\nThese passionate dreams filled with Lord V and her masturbating in her sleep, were becoming more and more frequent. \n\nSierra stretched then slid out of bed. She surveyed herself in the standing mirror. She looked like she'd had sex, her honey brown hair wild and her cheeks flushed, her nipples puckered into brown, rosy nubs.\n\nHer pussy still ached for attention but she frowned away the itch and instead surveyed appreciatively the lean muscles she was gaining back with her dance classes and long walks. Her plump breasts no longer seemed foreign to her and though genetic modification and plastic surgery were now easy and common place, she had decided to keep the generous mounds as they were. There had been so many changes to her world already. \n\nHer frame was thinning a bit. It was like food, one of her great pleasures, was becoming less appealing. She felt an ache, a craving for something she couldn't quite put her finger on. Her therapist told her that with what she'd been through, it would take time and to be patient with herself. But, it had been three months since she'd left the vicious, alien Lord V's control and she was anxious to find some sense of normalcy. Instead of forgetting him, his icy, erotic presence seemed to be looming larger over her life as time went on. Her therapist said it was PTSD, but could PTSD make her so agonizingly horny? \n\n~\n\nLord V lounged in the steaming bath as Elanna expertly lathered and washed his long-limbed, lean, muscular body. The beautiful, pale Ingentian girl tried to catch his eye, but Lord V frowned into space almost unaware of her ministrations. She reached gently between his thighs but he grasped her delicate wrist before she could fondle his heavy, warm cock beneath the surface of the water. \n\n\"Master,\" the girl gasped then offered in meek, yet seductive tones, \"you need relief. This slave would serve you.\" \n\nLord V's chiseled face turned to the pristine, pretty features of his pale slave and he smiled wanly, \"Not right now slave. You are dismissed.\"\n\nHis slender concubine pouted slightly, but dutifully rose up and waded smoothly out of the pool. Lord V didn't turn or acknowledge her exit. His intense, light gray eyes still stared into nothing before he sighed and extricated himself from the blissfully, heated water. \n\nAs he stood in the drying chamber, Lord V shook his head with its thick, shimmering, silver-white hair and smiled a small smile. Sierra would be feeling the loss of him by now, craving his blood, his cock, his cum. She had drunk his blood. There would be no escape. He was surprised at his own level of distraction as the days ticked by without her near him. \n\nLord V wasn't sure if she came to him in dreams or if he pulled her to him, but their mutual masturbation was now becoming nearly a nightly occurrence. He enjoyed the diversion, but what he really wanted was to have his curvy, little human slut back where she belonged. \n\nHis daydreams of taming her, of owning her and molesting her, came unbidden during the whirl of his daily political and business dealings. To his subordinates, he appeared irritable and distracted, but he didn't think his behavior had garnered any attention from the councils or from anyone that mattered. One did not become Lord Protectorate of Ingentos Sector without the ability to carry on with both decorum and cunning despite setbacks.\n\nAfter he was fully dry, Lord V returned to his bedroom and dressed in his customary black robes. Before leaving the room, he accessed a control panel on the bedroom wall and a viewscreen blipped into existence. \n\nHe smiled his tight little smile as he saw the het of Ketto was less than an Ingentian moon cycle away. Soon her hunger for him and what he could give her would be reaching a desperate point, and he would offer to slake her thirst. \n\nI am coming for you szeretett, he thought. I am coming for you soon.\n\n~\n\nTonya, a kind woman in her 50s, was actually Sierra's grand niece. Of all the blood relatives Sierra had been able to track down since being awoken from cryosleep 100 years in the future, Tonya seemed the most interested in their connection and the most sympathetic. They had struck up a familial friendship of sorts. \n\nTonya patted Sierra's leg as they sat backstage. \"Now, now, how many of these interviews have you given already?\"\n\nSierra tried to stop bouncing her leg, gulped and looked into the sparkling green eyes of her friend before looking down at her fidgeting hands, \"I get nervous every time.\" \n\nTonya nodded. \"It would be nerve-wracking,\" Tonya admitted, \"but just remember they are interested in you. You are doing them a favor. You don't have to share anything you don't want to.\"\n\nSierra smiled and nodded, \"Yes, good advice. Thanks. I just want the money for a new dance floor for the studio.\"\n\n\"Miss Lavery, they are ready for you,\" a short man with bushy gray eyebrows said as he peaked around the greenroom door. He stood waiting expectantly while tapping the comm at his wrist. \n\nSierra took a deep breath and went to follow after the man. \"Knock em dead, honey. It'll be over soon,\" Tonya chimed encouragingly after her.\n\n~\n\n\"Miss Lavery?\" the glib male interviewer's voice actually seemed to sound genuinely concerned.\n\nSierra blinked and cleared her throat then turned back to look at the slick, raven-haired tv personality, \"I'm sorry?\" Sierra said with an apologetic smile.\n\nThe interviewer let out a relieved sigh, \"You seemed to leave us for a moment there. Glad to have you back.\" \n\nSierra frowned slightly. The interviewer continued, \"I had just asked you whether you intended to see the mysterious Lord V when he comes to Earth next week to meet with Consortium Officials?\"\n\nSierra locked her jaw and had to mentally remind herself to unclench her hands, \"I am not involved with our government's negotiations or with the Consortium. I am a simple dance teacher. I . . . I can't imagine . . .\" Sierra trailed off into silence that lasted several beats to the exasperation of the interviewer.\n\n\"Yes, you can't imagine what?\" asked the interviewer. \n\nWhen Sierra didn't answer, he babbled on, \"You're hardly, 'just a dance teacher.' Not only do you look fabulous for being over 100 years old, haha, but it's said that one of the most inscrutable leaders of the most secretive and blood thirsty alien races still pines for you, our own antique jewel, Miss Lavery. What is the mysterious Lord V really like? It's said he's deadly attractive.\"\n\nSierra finally came into herself and pierced the talkshow host with a withering stare. She then turned and looked directly into the camera, \"Lord V of Ingentia,\" Sierra spat out, \"is a joke, a cowardly, manipulative asshole who tortures creatures that can't fight back for fun.\" \n\nSierra turned back to the gape-mouthed interviewer, \"maybe that's what you find attractive, but I for one, do not.\" And with that pronouncement, Sierra smiled winningly at the crowd and then gracefully rose and calmly walked off stage.\n\nSierra stood shaking and trembling in the wings. Tonya came up and linked arms with her and wordlessly scowled down the short man with the bushy eyebrows until he waved over an intern to show them out. \n\n\"Honey, are you okay?\" Tonya asked when they got outside. Sierra gulped in air and squinting into the sunshine, regained some composure. \n\nSierra smiled and answered, \"Yes, thanks. Thanks for coming with me. I knew I was on edge, but I didn't know . . . I didn't know he . . .\" Sierra sighed, \"I just want to go home,\" she managed. \n\nOnce Sierra had said her goodbyes to Tonya and offered what seemed a hundred assurances that she would be fine, Sierra closed the door to her apartment and leaned back against door. Her brows knit and her pretty mouth grimaced as her stormy green eyes pricked with tears. I can't, she thought. He can't . . . Sierra shook her head then heaved back a sob. What is wrong with me? \n\n~\n\nLord V drunk in the sight of Sierra in a modest, dark blue dress being interviewed by the obnoxious, dark-haired human male. She looked a bit sickly in comparison to the plump, tanned slave girl he remembered, but Shevu, how he still wanted her. Just hearing the sound of her voice in real time again stirred something inside him. His cold, gray eyes glittered and he smiled as Sierra seemed utterly undone by the news that he would be on Earth soon. Evidently, this was the first time she was hearing of it. Delightful.\n\nAs the interview continued, Lord V's jaw tightened and his eyes narrowed at her scandalously public epithets. However, when his girl whirled off the talk show stage, Lord V's began to smile thoughtfully to himself. After his expression had widened into a menacing grin, for the first time in a long time, the tall, pale, exquisite man threw back his head and laughed.\n\n~\n\nJarok had kept himself busy trying to distance himself both physically and mentally from all things human and Ingentian after Sierra returned to Earth to \"regain herself.\" He winced remembering her sweet smile as she had taken his hand gently when saying good bye. \n\nHe could understand Sierra's need for time to recover from all that had happened. Shevu, his whole life was running from his own shitty past. Yet, though Jarok blamed himself for all the horrors Sierra had experienced since he sold her, he couldn't help but wish things had worked out differently. \n\nJarok raked his hand through his tousled mess of wavy, brown hair and changed course to avoid a few troublesome asteroids. Gerra nudged him in the arm with a hot cup of kerpe. He took the cup gratefully, but his amber brown eyes still listlessly surveyed the dark viewscreen, the eerie glow making the stubble on his strong jaw look ashy gray.\n\nThe sexy, spike-haired, Keplarian woman, took a slurp from her own mug of the bitter beverage then chided Jarok with affectionate scorn, \"Oh, my fucking Shevu, you're still so mopey. You'd think 33,000 kronos of profit might put a dent in your teenage angst over Earth popsicle girl.\n\nJarok dragged his eyes from the blackness and winking stars to see his friend's eyes sparkling with mischief and concern. He sighed. \"You liked her too,\" he challenged.\n\nGerra sputtered then retorted, \"Sure, but I'm allowed to visit her whenever I choose. I didn't make things all complicated.\"\n\nJarok blanched and Gerra considered feeling bad for the dig, but instead decided her kerpe needed a little help and she opened the flask she kept in her boot and liberally poured Shivean brandy into her steaming cup.\n\nJarok scowled up at Gerra, but accepted a splash from the flask into his own mug. \"What would you have me do?\" Jarok challenged.\n\nGerra shrugged, \"As I said, *I'm* allowed to visit. Maybe you should take me to see our old friend, Sierra.\"\n\nThe two Keplarians shared a meaningful gaze and Jarok nodded his weary, handsome face. \n\n\"Setting a course for Earth,\" he said.\n\n~ \n\nAfter the usual pomp and political charade for the galactic media, Lord V was escorted, with his extensive Ingentian security entourage, to a gala at the human premier's massive estate. \n\nThough Lord V was thankful to be out of the irritating Earth sunlight, he swallowed a scowl as he noted General Lilith Conroy among the dignitaries gathered. The general was stunning in a shimmering gold gown and oozed authoritative sensuality as she sauntered up to the black robed, Ingentian Lord. It was to his advantage that in height he towered over her. Lord V turned to the blond general with a coldly amused expression.\n\n\"Why General Lilith, how pleasant and fitting to see you in your own Consortium space. You do remind me of the golden sun that sustains this planet in that gown,\" Lord V sipped his Ingentian wine gracefully as he looked imperiously down at the sharp, blue-eyed general.\n\n\"Ah, thank you Lord V. I heard a rumor that our sun wasn't good for your kind,\" General Conroy replied dryly with a controlled, red-lipped smile, \"but I'm glad you can appreciate the light and clarity it brings.\" The general raised an eyebrow as she sipped her champagne and looked meaningfully around at the various political figures mulling around the ballroom.\n\nLord V smirked his eyes glittering, \"Indeed, clarity and beauty,\" he said looking pointedly at the human general's modest show of cleavage.\n\nGeneral Conroy's lips twitched in annoyance as she sensed the leer, but she continued evenly, \"You have never graced Earth with your imperial presence before Lord V Titus Veer, why now?\" Suspicion and accusation dripped through her carefully dignified tone.\n\nLord V smiled a chilling smile, \"I've come to bargain, general.\" General Conroy looked up at him sharply and drew closer to his intimidating figure. \n\n\"We would never hand over that girl to you,\" she whispered in a hiss. \n\nLord V's eyes widened in feigned innocence, \"I don't know what you're talking about, my dear. It's not with you I've come to bargain.\" Lord V pretended to straighten his robes as Lilith glared up at him. \"Now, dear General, please excuse me, I see the premier is ready to make the toast. Feel free to visit Ingentia with, ehem, the proper clearances any time. I would love to offer you my . . . hospitality.\"\n\nGeneral Conroy grimaced then peered after the dark figure of Lord V as people parted easily to let the imposing alien through.\n\n~\n\nGerra had to admit that when she saw Sierra approaching the apartment complex, a little thrill of affection and happiness buzzed through what she liked to think as her cold, Keplarian heart.\n\n\"Hey kiddo!\" Gerra called out excitedly. Sierra turned and nearly dropped her groceries.\n\n\"Gerra?\" Sierra looked shocked and then her face lit with a glowing smile. \"Gerra!\" Sierra squealed and set down her bags to pounce on Gerra with a friendly embrace.\n\n\"Alright, alright, contain yourself human,\" Gerra protested with mock affront, but she hugged the taller woman back just as fiercely.\n\nAfter releasing Gerra, Sierra's stormy green eyes looked around nervously, \"Is Jarok here too?\"\n\nGerra's dimpled smile became a little less sure, \"we thought it best if I came first and then you could see how you feel.\"\n\nSierra nodded slowly. It was difficult to tell if the girl was disappointed or relieved. In any case, the cloud passed over the human's gorgeous face quickly to be replaced with warmth and delight. \n\n\"Come, I'll make you dinner,\" Sierra proposed as she grabbed her bags and led Gerra up the steps.\n\n~\n\n\"So Lord Fuckface is here?\" Gerra gasped while stirring her 'string beans.' Green is an unnatural color for any food, Gerra thought. But, speaking of unnatural . . . \n\n\"Yes, I would've thought you guys would've heard about it on your scanners. It's been all over the news,\" Sierra grumbled and stabbed at her own vegetables with spiteful vigor. \n\nGerra knew Sierra's ire wasn't directed at her, but the normally brash space pirate felt a bit sheepish. \"Maybe I shouldn't have come. You are already having to deal with bad reminders,\" Gerra suggested with concern.\n\n\"No! I needed a friend. I've been. Well, I . . . I can't get him out of my head,\" Sierra drifted off miserably.\n\nGerra grimaced. \"He was definitely a mind fucker that one,\" Gerra offered. \"Hmm, you could come away with us, if you want. Just while that creepy scumbag is here or for as long as you wanted.\"\n\nSierra cocked her head to the side and chewed thoughtfully and swallowed before replying, \"I think I actually may be safer here. If I go missing here, there would be a record of it. I know General Conroy keeps tabs. I . . . thanks though. It's not like he's in the next neighborhood. The Premier's capital is on another continent. Earth's a big place. Lord eh, fuckface has likely moved on to some other . . . interest,\" Sierra shivered, \"I feel paranoid even worrying.\"\n\nGerra nodded though she didn't agree with Sierra's faith that distance between landforms would mean much to a creature who lived several weeks worth of space travel from Earth in the first place. \n\n\"I'd like to see Jarok, before you guys go away again, if he's close. If he wants to see me,\" Sierra said softly.\n\n\"That, I think I can arrange,\" Gerra smiled.\n\n~\n\nLord V watched the solitary moon in the semi dark of an Earth night and reveled in the feel of being this close to his beautiful prey. Though still thousands of kilometers away, it would take mere hours to be where his little bird fluttered nervously in her invisible cage. He closed his eyes and savored her desperation and panic for the millionth time as it sang out to him. There was also warmth threading through the bond they shared and was that happiness? Lord V's eyes snapped open and narrowed. What or who was distracting her from her agony of desire?\n\nLord V mused grimly that he couldn't entirely expect that Sierra would've stayed untouched during their time apart, but the thought of her in the arms of some human weakling set his teeth grinding. True, he couldn't help but admire the lusty forms of the humans of various genders he'd encountered on his visit. The power of his presence eliciting na\u00efve scents of their fear and arousal from some who merely stood in the same room with him, but there would be time for diversions once he had achieved his goals on this Shevu-forsaken planet.\n\nSoon his Sierra would come to him in the flesh begging for release, but for now, he looked forward to the torment of their shared dreams.\n\n~\n\nAfter Gerra left with promises to return with Jarok in the morning, Sierra felt the gnawing ache in her gut return. She had felt happiness at seeing Gerra for the sake of the woman herself, but it was also so good to be with someone who understood so much of what Sierra had been through. \n\nSierra paced her small, but finely furnished apartment. It was at night that things became the most unmanageable. She didn't know if merely hearing Lord V was coming to Earth had intensified the cascade of unwanted longing she was already experiencing or if she was simply going mad. The first time a newscast showed the tall figure of her previous master standing elegantly on the familiar sight of the capital steps, Sierra had nearly doubled over with panic, lust and nausea. She wasn't sure she'd have been able to tear her eyes away if a passerby hadn't accidently knocked into her, diverting her gaze.\n\nSierra sighed and poured herself a shot of pale green apple vodka and kicked it back then covered her mouth with a wincing gasp. An insistent knock on her apartment door startled her back into the present.",
        "When she looked at the viewscreen showing the hallway, there was no one in sight, but a package had been left at her door. Sierra warily opened the door and dragged the heavy package inside. There was a small silver card attached. Sierra took in a sharp intake of breath as she recognized the spidery hand, \"Until we dream tonight, my pet.\" Sierra dropped the card as if it had burned her and backed away from the large white box, her chest beginning to heave with nervous breaths.\n\nShe should kick the thing out the door and forget about it or maybe call General Conroy, but Sierra's damnable curiosity soon had her untying the silky, wide black ribbon surrounding the box while she held her breath. \n\nAs she opened the package, the heavy flowery fragrance hit her senses first. Piles of the most gorgeous red roses lay in intricate heaps. Sierra lifted a lush flower to examine its beauty and cursed as she felt pain pricking through her fingers from the thorns still lining the graceful stem. What florist still sold thorny roses? she thought in an angry flash. Her cheeks flushed, Sierra ruefully deposited the fat, red rose back in the box and brought her thumb up to her soft lips. Her blood seemed darker than she remembered somehow, but she sucked the wound gently and something inside her stirred to life."
    ],
    "authorname": "Abashed",
    "tags": [
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/sierra-lives-pt-13"
}