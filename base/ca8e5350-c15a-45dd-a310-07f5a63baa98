{
    "title": "Writing Research",
    "pages": [
        "Writing Research\n\n \n\nI've always been a writer. From the time I could first pick up a pencil and understand words, I was always creating stories of some kind. When I finally got my first computer, I took to typing like others take up the piano. It just became a natural flow. My parents and teachers all encouraged me, all of them thinking I had real talent. I always excelled in English and Literary classes and did well enough in my other subjects that it was no hard effort for me to get into Colombia on a scholarship.\n\nWhile I was there, I had very little trouble acing all my literary classes and all my professors believed that I had really ability as a writer. It was during the summer after my freshman year that I started writing my first novel. It was kind of a teenager, coming of age piece. While now, I recognize that it wasn't my best work; it was still good enough for one of my advisors to help me get it published. It sold pretty well and even landed me a place on the New York Times bestseller list. My parents framed the paper when the book peaked on the list.\n\nAfter that, I developed a habit of writing short stories during the school year and writing a novel during the summer breaks. The short stories I sold as compilations and the novels I sold to my publisher. I really didn't stick to any particular genre or thought, just writing what came to mind and what sounded interesting. As I got more schooling and started branching out in my writing, the reviews got better, and I found myself getting higher and higher on the best seller list. By my senior year, the literary faculty started seeing me more as a colleague then a student.\n\nI graduated with Latin honors and was offered a junior professorship as a form of supplemental income for my writing. I considered it, but then I received an offer to write weekly columns for a New York magazine; any subject I wanted. I thought this was a more interesting challenge and if I ever needed to, I could always go back to teaching as a backup. I'd write out columns weeks in advance and then spend the rest of my time on books. By now, my name was known in literary circles and I started making serious money.\n\nAt the time of the following events, I'm 6 years out of college, 28 years old, and have security that few have at my age. I just purchased my first apartment in Manhattan and felt content. Maybe too content. I'd written everything from historical fiction, science fiction, even a mystery novel. The mystery novel got me very close to the top of the bestseller list. I started feeling the need to get more creative and started trying to write out of my comfort zone.\n\nI had lunch with my agent Laurie to discuss it. She had been my agent since college, and we had great rapport and trust with each other. She was in her 40's but could've easily passed for 10 years younger. Having two kids seemed to have done nothing to harm her slim figure. We went through the things I'd already written and to her credit she'd never tried to get me to repeat myself if I didn't want to.\n\n\"Well Jim, you've already checked a lot of boxes with your other works. Other than romance, I'm not sure what's left.\"\n\nThat was it! It had never even crossed my mind to do a romance or erotic novel. Pure eureka moment!\n\n\"Are you sure about this, Jim?\" she said in almost a matronly tone. \"You aren't exactly the biggest dater.\"\n\nIt was true. I didn't date much. Oh, I had girlfriends over the years, but most of them were vapid and non-intellectual types and didn't last too long. I told her that I needed some time to think on the project.\n\nEvery Friday night, a group of writers got together for drinks and conversations at a literary club in Greenwich Village. Some were people I'd met in college or on book tours and others were just other writers from the area. We all used it as a sounding board for new ideas and projects, but also to just talk with like-minded individuals. I figured it would be a good place to gather thoughts and ideas.\n\nI got there and procured my traditional old fashioned and went over to our usual area. Some of the group was already there and I settled in. During discussions about e-books, publishing fees, and if New York was still a literary capital, I threw out my idea. This was a co-ed group so there were plenty of women writers there as well. They seemed intrigued by it, while some of the male writers were less enthusiastic.\n\n\"I don't know, man,\" my friend Devon opined. \"Most of what you've written has either been mostly for men or unisex. Romance is almost strictly a female audience.\" The women in the group jumped on Devon saying that I could absolutely pull this off. Now that the subject was on Romance, they started probing me out about it.\n\n\"What are you thinking topic-wise, Jim,\" Breanna asked. Breanna was one of the \"elders\" of our group in her late 50's and was one of the most awarded.\n\n\"I really don't know yet,\" I admitted. \"I just had the idea a few days ago. Right now I'm just searching for a hook.\"\n\n\"Are you thinking straight romance,\" Alicia asked, \"or more a \"Fifty Shades\" thing?\" Alicia was always an instigator. Close to me in age, she was a curvy girl, but by no means fat. I'd thought of asking her out a few times but thought that it might hurt the group dynamic. I just rolled my eyes at her.\n\n\"I don't know that S&amp;M is really my style,\" I said glibly, taking a sip from my drink.\n\n\"Well, isn't that the point? To get out of your comfort zone?\"\n\nI shrugged a bit at her, acknowledging her point.\n\n\"True, but I still don't think whips and chains are really my thing,\" I said with a chuckle. Alicia just shrugged and smiled.\n\n\"Well, like anything in life,\" Breanna said in her normal stoic manner, \"observe the first rule of writing. Write what you know.\"\n\nI pondered that as I leaned back into my drink.\n\nI spent the next few days really thinking it over. I did what I normally did, started with a few basic ideas for writing and see how far they develop. After a week, nothing was taking root. I tried pirate stories, meet-cutes, war romances; but nothing worked. I wouldn't call it writers block, but I just wasn't getting the ideas to fully reach cohesion. I was stuck.\n\nI was sitting at my desk, trying to think of anything that made more sense to me. I'm smart enough to not have blank paper or blank documents open around me, that's the last thing that a writer needs to see, instead opting for the crossword puzzle. I was about to give up for the day when my phone rang.\n\nAlicia.\n\n\"Hey, how are you?\" I said answering the call.\n\n\"Ok, my editor is up my ass as per usual.\" Alicia was mostly a sportswriter, a columnist at a New York paper, but she also wrote books on sports and biographies as well. Her last book didn't sell as well as her other's and her editors were pushing for new material.\n\n\"That sucks,\" I said trying to be compassionate about it. My book sales were almost always steady, and my column editor hardly ever got on me about anything.\n\n\"Whatever,\" she said in a way that made me think she was rolling her eyes. \"So, how's the Romance business going?\"\n\nI took a deep, exasperated breath when she asked that so as to clearly indicate its current direction.\n\n\"It isn't really. Haven't gotten anything to come together yet.\"\n\n\"Did you try the whips and chains?\" she said half-jokingly.\n\n\"Almost, and it didn't really work either.\" It involved a dungeon and kidnapping.\n\n\"Well, I had an idea for you and wanted to float it. Wanna meet for lunch tomorrow?\"\n\nI agreed and set a time and place. The next day, I was still no closer to any real inspiration then I had been. We met at a local place that I'd been to before. I got there first and got an outside table since it was a nice day. Alicia came soon after. I noticed that she was wearing a sundress that showed off her curves more than the usual sweater and jeans I was used to seeing her in. She certainly was showing more of her cleavage than usual. I did my best to look at her face as we greeted each other. We ordered drinks and she leaned forward.\n\n\"So, still stuck?\" She was always quick to the point.\n\n\"Yep,\" I admitted freely, twisting my water glass. \"Maybe I bit off more than I can chew with this one.\" Quite frankly, I'd never encountered this before. I was always able to overcome stuff like this in the past, but this was a real puzzle.\n\n\"Don't give up yet,\" she said with encouragement as our order arrived, \"I may have a new angle for you.\"\n\n\"I'm all ears,\" I said hoping for a little inspiration.\n\n\"What are your thoughts on orgy clubs?\"\n\nI damn near spit out my drink hearing this. She giggled at me as I got my act together.\n\n\"Ok, weird segue, but seriously, thoughts?\" she asked again\n\nI was racing through my mind trying to think of an answer and none was coming.\n\n\"I really don't have any thoughts on them,\" I said honestly. \"I always thought that stuff was mostly a myth or something you see in porn.\"\n\n\"Oh, they exist,\" she said with a certainty that raised an eyebrow. \"Your magazine did a thing on one a year ago.\"\n\nI shrugged since I really didn't read magazines, not even the one I worked for. I started to try and think about it then and found it hard to wrap my head around.\n\n\"I mean,\" trying to regain some semblance of composure, \"I really know nothing about that world. What kind of hook are you thinking?\"\n\n\"Boy meets girl at a \"club\" and live happily ever after deal.\"\n\nMy mind was still reeling, but it also was thinking. It was definitely a fresh approach. Could lead somewhere, but I really wasn't sure.\n\n\"It's interesting, but I'd need to talk to some people in that world to get any kind of sense of it. How would I even do that?\" She then leaned forward and pushed her cleavage forward a bit.\n\n\"What do you want to know?\" she said with a wink. I choked on my drink and started coughing. The waitress brought over some water for me to recover. Alicia was just smiling and giggling the whole time finding the situation hilarious. I got my wits back and looked at her.\n\n\"You...you,\" I struggled to get out, \"you belong...?\"\n\n\"Uh huh,\" she said simply like she was just telling me that she walked her dog this morning. She then put a finger to her lips, as to indicate 'hush hush'.\n\n\"Jesus,\" I said with my head spinning. I got a handle on myself as much as I could. I really didn't know which was the most surprising part of this, that she belonged to an orgy club or that she was so blas\u00e9 about it.\n\n\"Surprised you, huh?\" she said still chuckling a bit.\n\n\"I'd have to say that is a gross understatement.\" She just shrugged her shoulders and settled back down in her chair. I really didn't know how to approach this or her.\n\n\"Relax, Jim,\" she said in an assuring way, \"I wouldn't've told you if I wasn't ok with you knowing and I knew you'd be discreet about it.\"\n\nI used my hands to indicate that she had nothing to fear about that. At least now I knew why she wanted to meet privately and didn't talk about this in the group. She just smiled as I gathered myself still.\n\n\"Ok.... ok\" I said trying to get my bearings. \"So you want me to write about your experiences?\" I asked trying to fish all this out.\n\n\"No,\" she said, \"I just thought it might be a good angle for you. I can certainly help you with the background you'd need.\" I was getting my composure as I was trying to reset my mind as much as possible.\n\n\"Ok,\" I said again like I was a character on The West Wing, \"so how long...?\"\n\n\"A few years,\" she said flippantly. \"I've been so busy and sometimes I just need to get boned.\" I didn't choke this time, but it was close.\n\n\"So,\" I started like I was really doing research, \"how did you get into this?\"\n\n\"A friend of mine nominated me for the club after I talked to her for a bit,\" she explained. \"I was curious, and they eventually approved me after I sent in health screenings and a questionnaire. Then they invited me to my first party. The rest is history.\"\n\n\"So you just go and have sex with random guys,\" I asked in as low a voice as possible.\n\n\"Well they were random at the beginning, but by now; I know pretty much everybody there.\"\n\n\"How many people are in the club?\"\n\n\"About 200 now,\" she said guessing off the top of her head. \"About 60/40 split with women and men.\"\n\n\"Why is that?\" I asked figuring the numbers would be 50/50.\n\n\"Cause girls have more holes are more down for shit than dudes normally.\" Once she said it, it made sense.\n\n\"How important is anonymity?\" I asked, now seriously considering her hook. The food arrived at this point and she waited for the waitress to leave.\n\n\"It's up there in the rules,\" she explained having a bite of her salad. \"Along with consent for anything that goes on there and respect for everyone's preferences and comfort level.\"\n\nWithout even thinking, I'd gotten out my notebook and was scribbling down thoughts and ideas I was now getting. But then I paused.\n\n\"Well, wait,\" I asked confused, \"if anonymity is so important, why are you telling me?\" She just smiled.\n\n\"Funny you should mention,\" she said as she got something out of her bag and put it on the table, \"I nominated you.\"\n\n\"You what?!\" I said louder then I should've, and a few people looked around at me. Alicia just smiled.\n\n\"Yeah,\" she said matter of factly, \"it'll help with your research and quite frankly, it couldn't hurt for you to get laid. I mean honestly, when was the last time you put your thing down?\"\n\nI honestly had to admit it'd been a while, but I'd never considered something like this.\n\n\"Shouldn't you have asked me first?\"\n\n\"You still have to do the questionnaire and the checkup. You can always turn it down. I just thought I'd put the option on the table for you. Your approval is preliminary until you do that.\" She pushed the papers from her purse in front of me clearly indicating that's what they were. \"There's a party next week,\" she explained. \"If you get this stuff back to me soon, you're in.\"\n\nMy head was really spinning now, and she was damn well aware of it.\n\n\"Look, Jim,\" she said taking my hand in hers, \"I know I threw a lot at you all at once. Think about it, give me back the questionnaire if you want, and call the number for the appointment. It's up to you.\"\n\nWe talked more after that, but I can't remember what about. I sat with what she said and thought about it. Thought a lot. Should I do this just for the book? Am I that desperate? Is there something else driving this? I really had no idea. But I came to the conclusion that I wouldn't find the answers sitting idle. I called the number on the physician sheet and filled out Alicia's questionnaire, figuring that at least would keep my options open.\n\nIt was a pretty standard document really. History, employment, interests, hobbies, etc. It also asked about sexual history, fantasies, intimacy issues, porn habits. I rolled my eyes more than a couple of times but tried to answer as honestly as I could.\n\nI called for the medical appointment and sent Alicia the papers, with no explanation attached. She didn't respond either. I received a full check-up at which I was told I was in good shape. I tried to put it out of my mind while I started to formulate new stories. A few days later, I had my answer.\n\n\"You're approved!!!\" Alicia texted me. \"The party is Saturday at 9!! Meet me at my place and we'll go together!\" I really didn't know how to feel. While I was grateful for guide, I was in very unsure territory. But I had to say, my writing was back on track. I was using the ideas surrounding the club to get a start at least.\n\nThe meeting with the rest of our friends that Friday, I stayed silent. Some asked me about the new project, but I kept quiet and just exchanged glances with Alicia. She just winked at me while I soldiered through the awkwardness.\n\nThat Saturday, I was nervous as hell. I barely ate and didn't sleep that well, even though Alicia told me to do both. I kept trying to steel myself and say that I was just a writer and I was just doing research. Gay Talese style. I dressed nice as directed and went over to Alicia's, not exactly hustling to get there.\n\nWhen I arrived at her place, she met me outside her building, and I was surprised. I expected her to be dressed slutty and trashy, but she was dressed conservatively and smart. Alicia looked me up and down and approved of my attire. She took me by the hand as we went over to the secret party location.\n\n\"Don't worry,\" she said reassuringly, \"I'll be with you the whole time, all night.\" She squeezed my arm in support as we went down the street. To anyone else, we just seemed like 2 normal people moving down the busy Manhattan street, but in my mind, I swore that all eyes were on us and were judging us. We got to what looked like abandoned loft space and she stopped.\n\n\"Ok, we're here,\" she said trying to gird me up, \"just remember, you have nothing to prove to anyone and I'm with you through all of it. Ok?\"\n\nI can't tell you how reassuring it was to hear, but I nodded as she knocked on the door. I felt a feeling that I didn't think I would with all of this, that it was going to be ok.\n\n\"Yes?\" I heard from the other side of the door. Alicia flashed a card at the camera near the door.\n\n\"And him?\" came the voice from the door.\n\n\"Love,\" was all Alicia said. The door then immediately opened, and I saw a middle-aged man standing in front of me.\n\n\"Jim?\" he asked looking at me. I nodded. He asked to see ID and I gave him my driver's license, Alicia telling me to bring it beforehand. He looked it and me over like he was a bouncer outside a bar. He then smiled.\n\n\"Thank you,\" he said giving me the card back and ushering us both inside. \"I'm Phillip,\" he said extending his hand to me. I took it and he gave Alicia a peck on the cheek. \"Welcome to Haven!\" Alicia leaned over and whispered in my ear, \"name of the club.\" I nodded in understanding.\n\n\"Al, I'm guessing as his patron you'll be his guide tonight?\" Alicia nodded her head. \"Jim, Al will guide you through everything if you have any questions about anything. For now, why don't you head over to the bar and have a cocktail?\" He extended his hand again which I shook, and Alicia escorted me away.\n\n\"Phillip is security to make sure nothing gets out of control and no unknowns get in.\"\n\n\"Love?\" I asked inquisitively about the front door.\n\n\"Tennis term for 0,\" she said as I looked at her with a 'really?' vibe. \"Code for a newbie. It means it's your first party.\"\n\nI nodded as we made our way to the bar. I saw various people strewn about greeting Alicia as we proceeded, but also eyeing me it seemed. The people were all dressed elegantly, virtually every age &amp; ethnic background seemingly accounted for. We got to the bar and the tender, dressed in lingerie, came right over. I was about to order my usual Scotch when Alicia ordered me a Scotch and Water instead. I looked at her curiously.\n\n\"You want to have some watered-down drinks as this goes on,\" she explained. \"You might tense up later and need more booze. They frown on people stumbling around drunk. Leads to too many problems.\" I've always been pretty good at holding my liquor, but I deferred to her knowledge and experience. We toasted our drinks lightly as I took a healthy sip.\n\n\"You must be the love,\" a woman said coming over to me. She was drop dead gorgeous in her mid-30's with a tight, athletic body and sparkling eyes.\n\n\"I guess so,\" I said in an unsure manner, extending my hand. She instead gave me a kiss on the lips. Her tongue darted into my mouth like an arrow. She released me and greeted Alicia with a wave.\n\n\"I'm Laurie,\" she said in further greeting. I introduced myself as she started asking me some questions.\n\n\"Excited for your first time?\" she asked.\n\n\"Anxious I think would be more accurate,\" I freely admitted. She just smiled &amp; nodded in return.",
        "\"Don't sweat it,\" she said somewhat dismissively, \"we've all been there. Even Alicia was shaking like a leaf her first time.\" I looked over at Alicia and she subtly acknowledged the statement's truth. But she wasn't going to take this lying down.\n\n\"I heard you damn near pissed your pants you're first night,\" Alicia countered, \"if you'd been wearing any,\" she added with a smile and a wink. Laurie went a little red, but also gave a sly smile to her.\n\n\"Well, Jim,\" she said toasting her drink, \"I hope you enjoy yourself tonight. It's only your first time once,\" she added with a wink before she left. She almost had a hungry look to her as I turned back to my drink.\n\n\"She's fun,\" Alicia added, \"you'll find a lot of people want to test the loves, see what their about and what their vibe is. My guess is you'll get quite a few offers just on that alone.\" I took another hard sip. How much commitment does one need to give to their writing? She saw I was tensing up again.\n\n\"Don't worry, everything is up to you,\" she said trying to reassure me. \"You can say no; how and to whom you choose and if anyone starts harassing you, get one of the security people to step in. It's one of our golden rules here, no means no.\"\n\nAt that point a couple came up to us. I recognized them instantly as a celebrity couple whose names I will not repeat here. They were very friendly and greeted both of us warmly. Apparently, they were good friends of Alicia's and had heard about me previously. The wife even told me she was a big fan of my books. We chatted for a bit and they left, with the wife saying they'd seek me out later.\n\n\"They're very nice and a lot of fun,\" Alicia said, \"they're both really good fucks too.\"\n\nI nearly spit out my drink again as Alicia just smiled. \"Didn't know my door swung both ways, did ya?\" I think that my reaction was proof enough of that. \"Girls are fun,\" she freely admitted, \"I just go with the flow.\"\n\nThis led to another question of a more research nature. Was their much gay activity here in either direction. \"Girl-girl, plenty,\" she admitted, \"boy-boy less so, but still some. I imagine you'll get propositioned by a few of the guys tonight who want to see if the new guy is game.\"\n\nI kept asking questions regarding etiquette and really just what to expect. I wanted the ground rules so as not to offend anyone or show bad form. Alicia, as always, was more than willing to help out with information.\n\n\"So they'll be a toast and an introduction because there is a love here,\" she said to indicate me. \"Then they'll announce if there is a theme for tonight. Unless there is a holiday nearby, they're generally isn't if there is a love. Then the men and women will separate and if there is a theme, they will get into costumes provided in the changing rooms. If there is no theme, everyone just comes out nude. You leave all your stuff in the locker and only return to it when you are leaving. Typically, the females engage the males, but you can ask a woman too. It's considered bad manners to intrude on a couple that is going at it, unless they invite you over which happens plenty.\"\n\nI was sitting taking all this down in my head, hoping I would remember it later.\n\n\"The bar is open at all times, but they can cut you off if they think you've had too much. The bar is also a good general area if you're looking to just engage in conversation or looking for another hookup. Watching a couple is always ok. Kind of the whole point of the place after all. Just keep a respectable distance unless you're encouraged to come closer or participate. Remember, what happens here stays here. We don't discuss with outsiders and only amongst ourselves when we know everyone around is also a member.\"\n\nI was still trying to take all the information in and remember all of the salient points. We got another drink. I was gonna have a water or club soda, but Alicia said that at this point, another drink would have calming effect for what was to follow.\n\nA few more men and women approached us both and greeted us. I could sense that they were all trying to make me feel welcome and get a feel for me all at the same time. I was the outsider here and acutely aware of it. There was soft music playing and I tried listening to it in order to get myself calmed down. The effect was debatable.\n\nEventually a couple emerged onto a platform and asked for attention, tapping their glasses. \"The heads of the club,\" Alicia whispered to me. I learned that the club always had a man and woman as the co-heads and that they were usually a couple of some kind. Everyone quieted down and gave them their attention. The woman then started to speak.\n\n\"Welcome everyone!\" she said with a broad smile. \"It's good to see everyone and I happy to announce that we have a 95% attendance for tonight!\" There was a round of applause and Alicia explained to me that most nights, it was in the 80's somewhere. Apparently if someone missed 3 parties in a row, they were kicked out, unless they had good reasons. I looked around the room and there must've been more than 150 people. The man now spoke up.\n\n\"Now there is no theme for tonight, but we we're sure gonna have a lot of fun, because as I'm sure some of you know, we have a love tonight!\" Cheers went up all around, including from Alicia with a light poke to the ribs. I went red and took another sip of my drink.\n\n\"Let's get him up here! Jim?\" he said looking right at me and extending his hand. He clearly knew who I was. Alicia pushed me forward and I joined the couple on stage, giving meek waves as I went. He firmly shook my hand and she gave me a kiss on the cheek, taking my arm as we stood there.\n\n\"Now Jim was nominated by one of our favorite members; Al, give us a wave!\" She did and also a little gave a shimmy which had the men and women both hooting. \"He's an award-winning author and columnist as I'm sure most of you know. We're very excited to have him here!\" Another round of applause emerged as the man clapped me on the back. \"Now Jim,\" he asked me directly, but still speaking to the crowd, \"are you ready for your first party?!\" I saw that the attention was now on me, and being a writer, I was to say something witty.\n\n\"If I'm not, I hope it goes unnoticed.\" Not my best work, but it got a good reaction from the crowd with many raising their glasses. The man clapped me on the back and the woman squeezed my arm a bit. She then spoke up.\n\n\"Alright everybody, let's get to the fun! Break!\" And with that people got up and started walking away, some sharing kisses as they departed. The man on the stage tapped me on the arm.\n\n\"Follow me, Jim,\" he said escorting me. Alicia came up to me in the midst of all this.\n\n\"Time to go to the change rooms,\" she said as the men and women broke out. \"I'll meet you right over there,\" pointing to a place in the room where doors were starting to open. I nodded and followed the man and all the other man through a door.\n\nWhat we entered looked like a country club locker room, with individual lockers with names on them. The man indicated for me to follow and showed me a locker with a heart.\n\n\"Here's yours,\" he said indicating to it. \"We add you're name once we know you're going to stick around,\" he explained. \"I'm Arthur by the way,\" he said extending his hand. I reciprocated the greeting. The men around me began disrobing while they were chatting and talking about everything from sports to politics to who they were looking for tonight. Arthur near me started to disrobe as well.\n\nI followed suit, just telling myself that it was like a high school gym or a golf club. Arthur just smiled looking at me thinking all this.\n\n\"Nervous?\" he asked with a smirk.\n\n\"Can you blame me?\" speaking honestly. The other man just nodded.\n\n\"Perfectly natural,\" he said in a warming and almost paternal way. \"I'm sure Al gave you a full rundown on rules and everything.\" I nodded that she did and started unbuttoning my shirt. Apparently, I was slow as some around me were already naked. Arthur just smiled.\n\n\"Taking your time, huh?\" I just shrugged. \"Don't worry,\" he said, \"its tradition for the love to come out last anyway.\" Arthur seemed friendly enough, so I decided at conversation.\n\n\"So how long have you been a member?\" I asked from both a writing standpoint and just bare curiosity.\n\n\"Almost 10 years,\" he said, seeming to take no offense to the question, \"my wife and I were swingers beforehand and one of the couples we swapped with nominated us both.\" I nodded as I started working on my pants. \"We usually bring in couples of some kind or another,\" he explained in his underwear, \"it's a special treat to get a single love in. Alicia really pitched you hard.\"\n\n\"She's a good friend,\" I said almost offhandedly. The now naked man put his hand on my shoulder.\n\n\"Good friend, huh? Piece of advice,\" he said with a degree of seriousness, \"if she nominated you to join the club, my guess is she's interested in more then friendship,\" he said with a wink.\n\nI was maybe more stunned by that then by anything else I'd yet encountered. I did like her and thought she was attractive, but it never crossed my mind that she thought that about me. I removed my socks so that only my underwear remained. Most of the other men had already left the locker room to join the party and really only me and Arthur remained. I took a deep breath and removed my underwear, exposing my half-hard dick to the air. As per Alicia's recommendation earlier in the week, it was devoid of all hair.\n\n\"Nice!\" Arthur said checking me out a bit, \"most guys have to be coaxed to going all the way the first time,\" he said nodding. \"A very good sign!\" he said with a warm smile.\n\nI gave a half grin in return as we secured our lockers, all having a thumbprint analyzer to personalize the lockers to ensure security. Now completely naked with another man, he escorted me out toward the mayhem.\n\nThe bar was still there, but now the doors had been opened to show an array of couches and beds strewn about the place. It was definitely darker in there, but not as dark as I would've thought. You could still see people, objects, and distinguish between them fairly well. Some men and women were just hanging around at the bar enjoying the show while others were in the early stages of sex, mostly kissing and foreplay. I didn't hear the moans and groans as loudly as I expected.\n\nThat being said, except for the bartenders and security, everyone was completely naked. Some were just getting themselves warmed up, looking over the crowd with some stroking and caressing. Arthur slapped my back and looked down at my growing situation.\n\n\"Happens every time,\" he said with a grin. I was embarrassed by both the hard-on and that another naked man was touching me while I was not only naked, but erect. \"Well, enjoy yourself Jim,\" he said with a handshake, \"I've got an important date over there.\" I looked over and saw the woman who had been with him before, along with 2 other men. They all went over to a raised mat and \"began\".\n\n\"Those two love a good gangbang,\" I heard Alicia say over my shoulder. I turned around and saw her. All of her. Her body was incredible. Large breasts that had almost no sag despite their heft. She didn't have a flat stomach, but no one would say she wasn't fit. It all flared out to what used to be called \"child-bearing hips\" and a completely bald pussy. I was in a state of shock. She started giggling a bit.\n\n\"I was wondering if you'd like my fat ass,\" she said in her typical wry, sarcastic way while turning to show it to me, \"I guess that's my answer,\" indicating my rock-hard equipment between my legs.\n\n\"You look amazing,\" I said honestly, \"who would ever call you a fat ass?\"\n\n\"Mostly me,\" she said shrugging, \"I know that I'm really just curvy, but sometimes I have doubts. One of the reasons I joined was to boost my confidence. Though clearly,\" pointing out the room of people getting ready to get down, \"clearly not my biggest kink.\"\n\nI couldn't help but laugh, as the obvious admission made me relax a bit. I figured laughter was going to be critical in getting me through this. She was just smiling at me the whole time.\n\n\"Clearly, you like how I look,\" she said indicating the raging boner I had going while deepening her smile. I blushed a bit at that.\n\n\"Kinda hard to blame me,\" clearly indicating everything going on, but also her. She smiled as she moved closer to me.\n\n\"Don't worry,\" she said reassuringly again, \"I promise I'll be with you the whole time.\" That had two things going through my mind. One, that she would be my guide through all of this, which was comforting; two, that maybe Arthur was right.\n\nShe took me over to the bar and we both got drinks. She recommended mine be fairly weak so as not to give me \"whisky dick\". I agreed and took a light sip. She did as well, as I noticed that she never took her eyes off me; even with everything going on. Some part of my brain just rationalized, \"this is nothing new to her.\"\n\n\"Wanna go look around a bit?\" she asked with a smile.\n\n\"I suppose I should for research, if nothing else,\" I told her.\n\nWith that, she led me away from the bar as we headed toward the main rooms. There were people standing around the various surfaces watching the couplings going on. Most were feeling and groping both themselves and surrounding people. Some of the people on the various surfaces were now starting to get down to business as I could see penises entering mouths &amp; vaginas all over.\n\nSome of the mats were just 2 people engaging in activity. Others were threesomes, 2 couples going at it and reaching out to involve other couples, and some were just a mess of people where it seemed impossible to tell who was where, who was doing what, or who was in whom.\n\nAlicia led me to a mat with a lesbian daisy chain happening. All the girls were licking away, with a variety of fingers in various holes as well as some light spanking. I'd always heard things like this happened at party colleges and such, but it was quite another thing to see it up close and in person. Alicia squeezed my hand to get my attention.\n\n\"Pretty hot, right?\" she said with a smile. For being a writer, the words were difficult coming to me.\n\n\"Understatement of the day,\" I replied as she smiled and led me to the other areas. One was a room with \"XXX\" above the door. Alicia stopped right in front of it.\n\n\"This is the S&amp;M room,\" she explained, \"it can get a little intense in there,\" she warned. \"Think you're ready?\"\n\n\"Probably not,\" I admitted with a deep breath, \"but let's take a look anyway.\"\n\n\"That's the spirit! Remember, no one will do anything you're uncomfortable with,\" she said as she led me in.\n\nIt sounds like a parody, but I could actually hear whips and chains as I entered. I saw a trio of women bound in chains with a man standing over them cracking a whip. On the other side I saw the exact opposite. 5 men bound with their genitals sticking out and a mistress in all leather getting her whip out and smacking it on their royal jewels. If nothing else, it deflated my hard on a bit.\n\nThere were various women and men on racks either getting flayed or penetrated. They all seemed to be enjoying it, in their own way. One of the dominatrix women beckoned me over and she smiled as I approached.\n\n\"Wanna get one in, love?\" she said with a smile handing me the whip. I looked and saw her target was a young man who looked barely old enough to drink. The mistress made the intention clear.\n\n\"The love is going to punish you now and you will beg for it!!!\"\n\n\"Yes, mistress!\" was all he got out. Encouraged by both women, I got comfortable with the whip that flinged it at him, Indiana Jones style. I'd never handled a whip before, but it snapped just like in the movies and hit the \"slave\" squarely on the back.\n\n\"Nice technique!\" the Dominatrix said approvingly. \"You've got real potential as a dom!\"\n\n\"Offering an internship?\" I said in a flirty, funny way, feeling slightly emboldened. She smiled and I could've sworn even blushed at that.\n\n\"Maybe later,\" she said with a wink. Alicia and I left them to continue their \"game\". We stepped to a quieter part of a room, where it seemed like there was someone locked up in a cage. Another person came along and shouted \"QUIET!\" and hit the top. Who/whatever was in there promptly obeyed the instruction. Alicia looked at me.\n\n\"Doing ok so far?\" she asked.\n\n\"I think so,\" I told her, \"this room may be a little much though.\"\n\n\"I figured,\" she admitted, \"I rarely come in here except to watch, or if I've been very naughty,\" she said with a wink. She led me back out of the room and into another.\n\n\"Ahh, the bukkake room,\" she indicated. I saw various men and women kneeling or laying down in what looked like shallow, emptied out spas with drains. Men surrounded them jacking off with no regard for anything.\n\n\"This can be a fun room,\" she said. \"You need a serious shower after though.\" I whipped around quickly at her and she winked. She led me back out into one of the main rooms.\n\nThe noises were definitely louder out here then they had been previously. Full on sex was happening everywhere, not just those on the mats and couches, but the surrounding spectators. One woman was getting Eiffel Towered while another mat saw 3 couples swap and fuck. It was bit of overload. I think Alicia sensed it as well.\n\n\"Let's go to the bar for a minute,\" she suggested, \"get readjusted.\"\n\nI followed her sheepishly as we went to the bar. There were a few other people there and we greeted them cordially. I had another weakened drink as Alicia looked at me and leaned against the bar.\n\n\"Overwhelmed?\" she asked out of concern and also being a bit coy. She was always a master at doing that, even during the group meetings.\n\n\"I don't know,\" I said very unsure of my answer, \"but this takes some getting used to.\"\n\n\"I know,\" she admitted, \"but you'd be amazed how soon it is that this all seems normal.\" She said this while patting my arm. My dick had started to deflate a bit, until someone else came and joined us.\n\n\"Hey guys!\" Laurie said coming up to us. \"Having fun, Jim?\" she asked getting very close to me.\n\n\"Just trying to get a bead on things right now,\" I told her while having a drink.\n\n\"Perfectly normal,\" she admitted, \"and also practical. Too many of the single dudes we bring in just go straight for the sex and don't appreciate what's going on around. Nice to see Al is showing you around right.\" Alicia raised her drink at Laurie as they all had a sip.\n\n\"So Al...\" she said while still looking directly at me. \"Has Jim been fully 'initiated' yet?\" Alicia was quick to answer.\n\n\"Not yet,\" she admitted with a sideward glance, \"like he said, he wanted to get a feel of the general vibe first.\"\n\n\"Smart, smart,\" she said still looking right at me while nodding. \"But we need to get his dick wet at some point, don't you think?\" She said this while still moving ever closer to me. I couldn't see what Alicia's reaction was, but evidently it was enough to make Laurie stop moving toward me suddenly.\n\n\"Al, did you want to do the honors?\" she asked in a respectful tone. I turned and looked at Alicia who had a sly smile to her.\n\n\"Well,\" she said coming up behind me and patting my ass, \"it is kinda tradition,\" while still fondling me. \"But if you don't want to,\" she said addressing me, \"I'll understand.\" She sounded almost nervous saying this. Maybe Arthur was right. Better to start with someone I know, I thought.\n\n\"Well, I suppose I should uphold tradition,\" I said turning around to see her. Desire was written all over her face and now there was a big smile as well.\n\n\"Mind if I watch?\" was all that Laurie said. Alicia simply shrugged as she took me by the hand and led me to a playroom. All around, there were people fucking, grunting, cumming, scissoring, fingering, and a few other things I had no idea what they were. Alicia led me to what was as quiet a part of the room as there was. She indicated me to lay down on a free mat. I did as she asked, and she was suddenly on top of me. I could feel her massive breasts squished against my chest. I looked right into her eyes, her face right in front of me.",
        "\"Just so you know,\" she said very softly so Laurie couldn't hear, \"I've been wanting to do this for a very, very long time.\"\n\nBefore I could even answer, she took me in for a deep kiss; her tongue exploring mine. It was easily one of the more passionate I'd ever experienced. She broke the kiss and started kissing her way down my body. She sucked and licked on my nipples and even stuck her tongue in my belly button. This was going to be an evening of firsts I figured and that was just yet another one.\n\nShe was soon kissing all around my dick, nibbling at my thighs and using her tongue on anything she could find. Her mouth found one of my testicles and she took it immediately into her mouth. She immediately started humming as it was bouncing on her tongue. As if my dick really needed to be harder. She moved on to the other one, and then she really surprised me by taking both my balls into her mouth at the same time.\n\nI'd never experienced anything like this before. She seemed to relish it and had a huge smile on her as she finally released them. She then moved up to my cock. She licked all around the sides of it, like she was trying to get the drippings off of an Ice Cream Cone. She eventually got to the head and stuck her tongue as deep into my pee hole as humanly possible.\n\nThe whole time she was caressing and lubricating my cock. It was almost as if she was trying to take ownership of it. Her eyes glaring at me and her dedication to my dick made it seem like she wanted to let me know that this was hers. I certainly wasn't in any position to object. Her eyes were the most telling part. They were always on me, being sure that no matter what she was doing in regard to the blowjob I was receiving; that her focus was solely on me.\n\nI saw some movement to the side and could see Laurie playing with herself. She was enthralled by the show. Normally, the idea of someone watching me get a blowjob would've made me extraordinarily self-conscious, but my dick stayed hard and true somehow. Alicia was giving me the best and sloppiest blowjob I'd ever had, and I was in heaven.\n\nIt was around then that my Catholic guilt kicked in and I subtly indicated to her that I'd like her to come up to me. She moved up my body so I could talk to her.\n\n\"Shouldn't I be polite and reciprocate?\" I said somewhat slyly. She smiled wide and promptly shifted to put her pussy directly in front of my face. I inhaled deeply and could immediately recognize the scent of desire emanating from her. She sunk down next to my mouth and I began my oral assault. She continued her work on my cock as we settled into a comfortable 69. I flicked her clit with my tongue as she started to deep throat and face fuck my dick.\n\nOut of the corner of my eye, I could see Laurie groping herself and shoving a few fingers in her pussy. Apparently, we made for quite a show. My tongue was diving in and out of Alicia, lapping up all the juices that were flowing out. Alicia then started cradling my balls before taking both in her mouth at once, all the while her hand was still stroking my dick. I could feel her tongue swirling around them and the added effect of her starting to hum.\n\nI then decided to get a bit bolder and started rimming around her asshole. I had only done it a few times in the past to mostly mixed reviews from my partners, but Alicia immediately started moaning and pushing herself further onto my tongue. She released my balls from her mouth and moved back to my dick, trying with all her might to make it as wet and slick as possible. Once she was satisfied with the job she'd done, she sat up and looked at me.\n\n\"Ready?\" she asked as if my hard dick wasn't enough of an indicator. I slowly nodded my assent. She swung her leg around and straddled me, allowing me a full view of her body. She kept her hands on my dick as she raised herself up and put herself right over it.\n\nWhile most women might've gingerly taken their time to sample a new lover, clearly Alicia was not one of those people. She impaled herself all at once onto my dick, slamming down onto my pelvis. She sat there and got used to the feel of it. I was also getting used to her. For a woman who belongs to a sex club, her pussy was quite tight. Alicia leaned in toward me, her breasts flattening against my chest as she whispered in my ear.\n\n\"Definitely worth the wait...\"\n\n\"Likewise,\" was the only answer I could come up with. She smiled and sat back up and started rocking slowly on me. I could tell that for all the haste to get my dick in her, she intended to take it slow now. Using my chest for leverage, she began to slowly slide up and down my dick seeming to love the sensations she was getting. I know for my part, that I wasn't complaining. Laurie was enjoying the scene still, going faster and faster on herself.\n\nI grabbed for Alicia's DDD's and began massaging them as she rode me, her eraser tip nipples brushing against my palms. Her moans indicated to me that she really liked it and I certainly enjoyed my handfuls of her magnificent orbs. Her riding became more acute as her heavy breasts started moving faster in my hands. She soon leaned down and offered each one to me to sample. I took one in my mouth and flicked my tongue around the nipple.\n\n\"Fuck yes, that feels so good!\" was what I heard from Alicia. She eventually took over and had me all but motorboat them. I thought for a second, I might suffocate! My hands grabbed her large, firm ass as she continued riding my cock like an expert.\n\n\"Mmmm,\" she said low enough so only I would hear her, \"give it a good spank.\"\n\nAt this point, I really shouldn't've been surprised by any of her requests, but I delivered a couple of good smacks to her and she really started riding.\n\n\"Oh yeah!! That's it! Just like that!\" as she started riding me harder. Soon I could feel her pussy tighten and clamp down on my cock. \"OH FUCK!!\" she screamed out as an orgasm wracked her body and was heard throughout the room. Laurie was plunging her fingers in and out of herself even faster at all of Alicia's sounds. Alicia invited Laurie down to kiss her deeply as she continued riding me. Once she broke the kiss, Alicia whispered something into Laurie's ear. Laurie just smiled and nodded and suddenly she was squatting over my face.\n\nWhile normally I would've like to have been asked first, she seemed very wet and I didn't want to seem impolite. She soon had her pussy right over my mouth. I started licking and she immediately started moaning. Just like that, I was having my first threesome.\n\nAlicia and Laurie were making out on top of me and groping each other as I continued to try and please both women. Apparently, I wasn't doing too bad as Alicia was soon howling in orgasm.\n\n\"FUCK! GOD! YES!!!!!\" as I could feel her grip my cock and start pulsing. From what I could tell, Laurie was assisting by sucking and biting Alicia's inviting nipples.\n\n\"That looked good!\" Laurie said to no one in particular, \"think I could have a try?\"\n\nAgain without asking me, Laurie slid off my face and Alicia off my cock. Laurie positioned herself reverse cowgirl on me and started riding away.\n\n\"Ooh,\" she said on the first downstroke, \"he does feel good, doesn't he?\"\n\n\"Fuck yeah!\" Alicia said as her face came close up to mine. She started kissing me and sucking on my tongue, clearly trying to inject some intimacy into what was going on. I certainly didn't mind as she was an amazing kisser.\n\n\"Does she feel better than me?\" she whispered into my ear so Laurie couldn't hear. I shook my head no and she smiled. \"Good answer.\"\n\nLaurie was now bopping pretty hard on me as her noises became more noticeable.\n\n\"Smack her ass,\" Alicia suggested. I turned and looked at her incredulously. \"Trust me,\" she said with a smile. After a few seconds, I delivered a medium smack to Laurie's tight ass.\n\n\"Mmmmm,\" Laurie said with appreciation, \"that's it. Smack that ass, baby!\" I gave her a few more smacks that only made her ride me harder. Alicia was doing a mix of both making out with me and paying attention to her ride.\n\n\"Watch this,\" she said quietly to me and she started putting spit on her on one of her fingers, trying to make sure it was slippery. She then pushed Laurie forward slightly and started wiggling her finger inside her ass.\n\n\"OH FUCK!\" she said at the new intrusion, \"that's what I like!\" Alicia was gently finger fucking Laurie's asshole while Laurie still continued to ride me. I could even feel Alicia's finger from inside Laurie's hole.\n\nAlicia kept making out with me and then she started rocking in a bucking fashion. I looked behind her to see that someone had started taking her from behind. Not really any passion or emotion behind it, more just an empty hole that could be plugged. Under normal circumstances, I would've thought my jealousy or possessive instincts would kick in. But to my surprise, I really felt ambivalent about it. It certainly did nothing to stop the ardor or passion with which she was making out with me.\n\nA few seconds later, Laurie erupted in orgasm. She got herself off my cock and seemed to let out a stream of girl cum out toward the room. She then got back on and kept riding; her pulses still being felt by me.\n\nI'd like to think I have a good amount of control over my releases, but I was at my limit. I tried to talk, but Alicia still had her tongue down my throat. Apparently, what I was trying to indicate was cogent enough for her to understand.\n\n\"Laurie, get off!\" she instructed. \"I wanna taste his cum!\"\n\nLaurie hopped off and she started sucking me while Alicia was using her hand. The combination of the two was enough to send jets of my seed flying into the air. Alicia moved off the guy's dick to better lick off the cum from my body and my dick with Laurie assisting in the clean-up effort. It was an amazing feeling that made my dick continue to pulse in pleasure.\n\n\"He tastes great, doesn't he?\" Laurie opined.\n\n\"Yes, indeed,\" Alicia said in her sultry tone as she finished up. She grabbed a water that was nearby and took some swigs to clear her mouth, offering me some after. I needed the hydration and took some serious gulps. I also noticed that the guy that had been fucking her had gone off in search of another willing participant. Alicia then gave me another kiss.\n\n\"Thanks for the ride!\" Laurie said kissing the head of my cock as she walked away. Alicia just played with my chest hair as I began to sit up.\n\n\"So what did you think of your first orgy experience?\"\n\n\"I may need a couple of days on that one,\" I admitted. I was making mental notes left and right to adapt for the book but wasn't quite sure of my own feelings yet. I certainly enjoyed the sexual act, but really wasn't sure about how this was all affecting me yet. Alicia saw me inside my own head and decided to get me out of it.\n\n\"Come on,\" she said indicating that I should get back up. \"Let's towel you off, get another drink, and get you recharged,\" she said after again giving me a kiss. \"You still have a long night ahead of you...\"\n\nShe led me through the group of sucking and fucking individuals and back over to the bar. There were a few people in the area, spread out. Some were making out, some were just relaxing, some were gently playing with each other, and others were just enjoying the view from the other rooms. Alicia ordered drinks for the both of us and smiled as I tried to relax. She pushed herself against me, placed an arm around my waist, and smiled up at me.\n\n\"How are you doing so far?\" she said with both humor and a bit of real concern. I took a deep breath while looking around at the amount of nudity and coupling all around me.\n\n\"Maybe I should be asking you that,\" I replied candidly. She put another arm around me.\n\n\"I think you're doing pretty well, especially for a love,\" she opined. \"Loves sometimes only stay to themselves the first time, or just watch for a while to get comfortable. You jumped right in and got a foursome in quickly.\"\n\n\"Foursome?\" I said raising an eyebrow. She nodded at me.\n\n\"Remember the guy plowing me?\" she said teasingly. I nodded understanding her math and was gonna drop it. She apparently didn't have the same idea. \"Can I ask how you felt seeing another guy fuck me?\"\n\n\"Well, it was definitely strange at first,\" I admitted, \"but in the end, it just seemed like you were an empty hole that he wanted to fill.\"\n\nShe kinda shrugged her shoulders at that. \"It is a bit like that sometimes,\" she admitted. \"You do need to make sure you have permission before you do something like that thought. You probably didn't see, but he tapped me on the shoulder and gestured basically that he wanted to fuck me. I gave him my consent and then he drilled in. You can get thrown out real quick if you do something that someone else doesn't want.\"\n\n\"Good tip,\" I said sucking on my drink.\n\n\"Ehh, he was ok,\" she said talking about her unknown lover, then she squeezed me a bit harder, \"but you were great!\"\n\n\"Thanks,\" I said almost dismissively.\n\n\"No really,\" she said emphasizing her comment. \"I'd seen the outline of your cock before in some of your tighter pants,\" she admitted. \"You most definitely did not disappoint.\"\n\n\"Thanks, coach,\" I said to add some levity to the situation. She laughed and slyly played with my dick.\n\n\"I'm more than happy to help with your training sessions,\" Alicia said still circling around and touching my dick. I let my hand drift down to her meaty ass. She took a hand and placed it on top of mine that was resting there. \"That's the spirit!\"\n\n\"So how long does all this last?\" clearly talking about the party in general.\n\n\"Typically till the morning,\" Alicia answered. \"Obviously, not everyone stays the whole time and some leave early, but it normally peters out around morning. Sometimes those that are left to the end all go to breakfast together or something.\"\n\n\"Just another group from an all-nighter, huh?\" I quipped.\n\n\"Exactly,\" she said with a smile. \"Come on,\" she said turning from the bar. \"Let's go into one of the rooms and just enjoy the view for a bit. You'd be surprised how quickly it helps get you recharged.\"\n\nShe led me into yet another room which seemed similar to the other one we were in earlier. There seemed to be more couples in various couplings in this one as well as some on benches around the place just watching or kissing or subtly playing. Alicia led us to one of the benches. I sat down and Alicia decided that she wanted to sit on my lap like I was Santa Claus. I didn't really mind as she threw her arms around my neck and looked with me out into the crowd.\n\nThere were all sorts of things going on and it was impossible to really focus on any one thing. If a person here had ADHD, they would lose their minds. On one mat, there were two couples that all seemed to be enjoying each other's touch as their genitals were exploring each other. Even the men seemed to be roaming their hands over each other's bodies. Another set of couples had two men double penetrating a woman with her eating out another woman. I also saw 2 gay couples in a daisy chain on one mat where each guy had a dick down their throat, and some had fingers probing assholes.\n\n\"Weird to see for the first time, huh?\" Alicia said prodding me.\n\n\"A bit, but it's not the turn off I thought it would be.\" Alicia smiled at me as I shared it.\n\n\"This place does that,\" she explained. \"You get desensitized a bit and you discover things about yourself and your sexuality. I'd never been with a woman before the club and now I drown myself in cunt!\"\n\n\"Oh,\" I said with some surprise, \"I guess you're bi then.\"\n\n\"Yeah, most of the girls here are to some degree. I have to admit, I really do love playing with girls. But...\" she said wrapping her arms around me tighter, \"there is just something about a man...\"\n\nShe leaned in and gave me a kiss. Deep and full of passion.\n\n\"Oh, Jim,\" she said softly as we continued making out. Our hands and tongues exploring our bodies as we ceased to have anything to do with the rest of the room. Until we were spotted.\n\n\"Hey, guys!\" is what got our attention. It was the celebrity couple we'd talked to earlier. Except now, they were totally naked. I looked at the wife and was almost drooling. I still won't tell you who it was, but it was someone who didn't do nude scenes and it was a dream come true to see.\n\n\"Hey!\" Alicia said in greeting, but not getting up from my lap.\n\n\"Jim, you having fun yet?\" the wife asked.\n\n\"So far,\" I said mutely.\n\n\"Me and Laurie already broke him in,\" Alicia said, planting a kiss on my cheek.\n\n\"That's great!\" the husband said, \"Laurie's fun!\"\n\n\"We wanted to see if you two were up for a little more fun,\" the wife asked. \"It's not every day I encounter my favorite author. No offense, Al.\"\n\nI looked at Alicia who nodded in agreement and got off my lap. The wife took us both by the hand and led us to a mat in a slightly more secluded corner of the place. The husband lightly pushed Alicia onto the mat to start working on her pussy. The wife got on her knees and started kissing my cock.\n\n\"We like to please,\" she said speaking about herself and her husband. She soon had my mushroom head in her mouth, and I could feel her tongue playing with my pee hole. She knew how to please and tease all at the same time, while seeming to keep perfect suction on me at all times.\n\nI could hear Alicia moaning from the husband's attentions as he seemed to be damn near drowning in her cunt. Alicia's eyes however weren't on the husband, however. They were squarely on me, even as she erupted in orgasm all over the husband's face. As soon as the haze of the orgasm passed, the husband put his cock against her hole and pushed in. He was a bit longer than me, but thinner. She seemed to enjoy it though.\n\nThe wife then finished her blowjob and I started moving to perform a similar service for her. She stopped me.\n\n\"I actually don't like oral that much,\" the wife informed me, \"just fuck me.\"\n\nShe laid down next to Alicia and opened her legs wide. Her shaved pussy was glistening, proving she really didn't need anything extra to get revved up. I lined up and sunk my cock into a famous actress. Her eyes seemed to come open a bit more once I was bottomed out. I saw the rhythm that the husband was doing on Alicia and I decided to match it on the wife.\n\n\"Oooh, that's good,\" the wife said approvingly, \"he knows how to fuck, baby!\"\n\n\"Sweet!\" the husband reacted holding his hand up for a high five. I gave it to him, albeit awkwardly. \"Al's pussy is as great as usual.\"\n\nA few minutes later, the wife was howling in orgasm and squirted all over my cock. She shot me right out and left my cock dripping.\n\n\"Hey,\" Alicia said now being taken doggie style by the husband, \"let me have a taste.\" I moved over to her and suddenly the husband and I were performing an Eiffel Tower on Alicia. I could feel his thrusts as Alicia seemed to get me deeper and deeper in her throat. She soon came from the combined attention of us both. The wife had been playing with herself, watching the three of us.\n\n\"That was so fuckin' hot, guys!\" she said approvingly. \"Babe, I'm kinda in a DP mood. Lay down, huh?\" The husband smiled and immediately laid flat on the mat. She got on top of him and sunk her pussy down on his cock, riding him slowly. I began to move toward her front, when Alicia stopped me.\n\n\"She wants it in the ass,\" she said as she lathered up my cock with lube. Alicia then rimmed the wife's asshole, which made her moan.\n\n\"Al, your tongue always feels so good!\" the wife said loving the feeling of Alicia's tongue.\n\n\"Come on, Jim!\" the husband said encouragingly while spreading open his wife's ass cheeks. I stepped up and slowly eased myself into her ass, making sure to go slow and gently. She groaned as she felt me invade her backdoor.\n\n\"Mmmmm!\" she said briefly breaking the kiss she was sharing with her husband. \"That feels awesome, keep going!\"",
        "I started slowly thrusting until I was fully in. I could feel the husband's cock in her pussy and after a minute or two, we worked out a rhythm where if one was withdrawing, the other was entering. The wife moaning and cursing constantly as apparently, she loved being double impaled. Alicia moved over to her front and sat on the husband's face while kissing the wife and fondle her tits.\n\nIt wasn't long before the wife shuddered in orgasm with her pussy and ass clamping down on both cocks.\n\n\"FUCK YES!!!!\" as I could feel the girl cum hit mine and her husband's leg. He just kept going so I did as well, keeping my hands on her perfectly, formed ass while I fucked. Alicia came again on the husband's face and you could tell by his panting that he was close. I really wasn't far behind him and the wife could tell.\n\n\"Cum in my holes, boys!\" she was ordering both of us. \"Make me a cum bucket!\"\n\n\"Jim,\" the husband said, \"count of three.\" He wanted synchronization. \"One, oh fuck! Two... THREE!!\"\n\nSomehow, I exploded right on cue, emptying my balls into her bowels. I could feel the husband coming too, the vibrations in both holes reverberating against each other sending her into another orgasm.\n\n\"FUCK!!!\" was all she could say as our orgasms all seemed to ring out together. I eased myself out of the wife and Alicia started sucking my cock quickly. Apparently, she had no problem with ass to mouth as my cock was soon glistening and clean. The wife and husband were still on the mat making out from their experience as they then turned and looked at us.\n\n\"That was great, you guys!\" the husband said looking at us.\n\n\"Fuck yeah!\" the wife concurred, \"Jim, you're really good!\"\n\n\"Isn't he though?\" Alicia said rubbing my chest a bit and kissing my cheek. They insisted on exchanging contact information with me, apparently already having Alicia's as they said they were gonna cool down.\n\n\"That's a big deal,\" Alicia said looking at me. \"They never associate with anyone outside of here, with really only me as an exception. They must really like you.\"\n\n\"I guess you're kind of a big deal,\" I said slyly. Alicia smiled.\n\n\"Not like you,\" she said seductively, playing with my dick.\n\nWe headed back over to the bar for another drink. I grabbed one of the waters that was around to get some hydration going. We ordered and sipped our drinks, with Alicia looking at me intently.\n\n\"Lots of people looking at us and talking,\" Alicia observed. \"Seems word is getting out about you.\" She leaned in closer and rubbed my chest.\n\n\"What word?\"\n\n\"That you're a good fuck,\" Alicia said softly as she kissed my cheek. \"I knew you would be.\"\n\n\"How's that?\" She shrugged her shoulders.\n\n\"Intuition,\" she said assuredly. \"And maybe a little wishful thinking,\" she added with a wink. Before I could ask any further, Arthur and the woman he was with earlier came up to us.\n\n\"Well, Al,\" he said warmly, \"how's Jim here fairing so far?\"\n\n\"Doing great!\" she said enthusiastically.\n\n\"Good!\" Arthur said in a friendly manner. \"Oh, Jim, I don't think I properly introduced you to my wife Gloria earlier,\" indicating toward the woman I had seen in the gangbang earlier.\n\n\"Nice to meet you,\" I said shaking her hand, she moved up and kissed my cheek.\n\n\"You as well,\" she said, \"I would've said hi earlier, but I was a little busy as I'm sure you noticed.\"\n\n\"Gloria, who wouldn't notice?\" Alicia said teasingly with Gloria smiling.\n\n\"It was a good one too,\" Arthur said proudly, \"she must've had 6 cocks in action at one point.\" Gloria just shrugged and smiled.\n\n\"Nice Gloria!\" Alicia said glowingly.\n\n\"Yeah, my personal best is still 12,\" she admitted. \"Double vag and double anal, but I was so sore after. I don't think we fucked for a week after that.\"\n\nMy cock was stirring again just listening to this.\n\n\"Yeah, you really need to stretch and prepare for something like that,\" Arthur mentioned.\n\n\"Has Jim gotten in on a gangbang yet?\" Gloria asked Alicia and clearly not me.\n\n\"Not yet,\" she admitted. \"Threesomes and foursomes and a couple swap so far.\"\n\n\"Not bad for a love!\" Arthur said admiringly. \"A lot of guys are too overwhelmed to do anything but watch and be with their partners at their first party.\"\n\n\"Indeed,\" Gloria affirmed. \"Not to worry, the night is still young...\" she said looking at me with desire. She then turned to Alicia.\n\n\"Al, wanna 69 for a bit and get the boys ready for another round?\"\n\n\"Ooh, that sounds good!\" Alicia answered as Gloria took her by the hand into one of the rooms.\n\n\"Come on, Jim,\" Arthur said to me, \"this should be a good show.\"\n\nI followed Arthur into the room where there was still a flurry of sucking and fucking all around. Arthur quickly found where Alicia and Gloria and wound up and walked over to them. By the time we got there, Alicia was laying on her back, munching on Gloria's pussy while Gloria was going to town on Alicia while on top of her. For an older woman, Gloria's body was still amazingly fit, probably a byproduct of all the 'working out' she did.\n\n\"Nice, ladies!\" Arthur said approvingly while slowly stroking his cock. \"Aren't they a lovely sight?\"\n\n\"Very,\" was all I could get out watching the show in front of me. Alicia was chewing on Gloria's clit while Gloria had a finger up Alicia's ass. I was tempted to start stroking myself but refrained since it seemed a little urbane. I looked over at Arthur briefly and his hand was wrapped around his short, thick dick, pumping away at the action. Arthur looked over at me.\n\n\"Gotta get ready for them, Jim,\" he said, encouraging me to follow suit. I slowly made my way down and lightly touched myself.\n\nGloria and Alicia seemed oblivious to our actions as they were all consumed in themselves. Alicia had 3 fingers inside Gloria while Gloria had 2 fingers in Alicia's pussy and another 2 in her ass. They were clearly enthralled with each other.\n\n\"FUCK!!!!\" as Gloria gave way to Alicia's intentions and came on her fingers. Alicia wasn't far behind.\n\n\"Shit! Shit! SHIT!!!!\" as the double penetration was too much as she started bucking hard against Gloria's fingers in orgasm. They broke from each other and smiled at their individual achievements. Gloria then noticed us.\n\n\"Ready for us, boys?\" she asked seductively. Alicia just pointed at me and crooked her finger toward me. Arthur and I both moved to our respective partners.\n\nAlicia started blowing me fast and hard, seeming to want to taste every inch of my cock. Arthur and Gloria took no such time as he quickly sunk into his wife, missionary style. They were soon entwined in each other's arms, almost like they were first time lovers, exploring each other. Alicia kept up the attention on my dick, while also fingering her pussy.\n\nA few minutes of hearing Arthur &amp; Gloria moaning, and Alicia's expert attentions and I was fully ready. Alicia sunk down and splayed her legs out. I moved to enter her while kneeling, but Alicia pulled me on top of her. She kissed me deeply while her hand found my cock and guided it inside her.\n\nIt was clear to me immediately that unlike before with Alicia, this was not fucking. This was pure love making. We seemed to melt into each other as I gently thrusted into her, Alicia trying to moan as our tongues battled each other. It was intimate and beautiful, and I could tell quickly that Alicia was really enjoying this. Her and Gloria both seemed to cum at the same time. While Gloria was loud, Alicia was gentle. Gentle, but reactive enough to let me know that she had cum.\n\n\"You two look beautiful,\" Gloria observed coming off of her orgasm high.\n\n\"Indeed,\" Arthur said. \"Shall we switch?\"\n\nI looked at Alicia who gently nodded. I pulled out of her and Gloria immediately had my cock in her mouth, seeming to want to savor the juices left on it from Alicia. Arthur was getting a similar treatment from Alicia, her quickly deep throating his cock and gagging herself.\n\nGloria turned around and bent over with Alicia doing the same facing Gloria. Arthur jabbed his cock into Alicia's pussy, and I followed suit with Gloria. I was amazed at how tight the older woman was. She must've done kugels every day. The women kissed each other as us men plowed into them.\n\n\"How's he feel, honey?\" Arthur asked.\n\n\"Oooh!\" she said as I apparently hit a good spot, \"really good! How are you doing over there?\"\n\n\"Alicia is amazing as always,\" he said gleefully. Alicia just winked at me and blew a kiss.\n\nWe continued like this for about 10 minutes, the girls playing and exploring each other while we men kept plowing into them. Arthur had hold of Alicia's hips and was really hammering away. I was more gentle at first, but started to pick up the pace as Gloria's moans increased.\n\n\"Fuck! Fuck! Keep fucking me just like that!\" she said as I could feel her tighten. I speed up and 20 seconds later, she gushed all over my cock.\n\n\"SHIT! Oh, fuck that was amazing!\" she said as she slid forward.\n\n\"Fuck I'm gonna cum!\" Arthur declared.\n\n\"Cum in my mouth, babe,\" Gloria insisted, \"I wanna taste it.\" Arthur removed himself from Alicia and shoved his cock into Gloria's waiting mouth. 5 seconds later, he grunted, and Gloria's cheeks convulsed to keep all of his cum in her mouth.\n\n\"Mmmm,\" she remarked, \"you always taste so good.\"\n\n\"Only the best for you!\" Arthur declared.\n\nI was so busy watching them that I didn't notice that Alicia had joined me at my side.\n\n\"He didn't get me off,\" she whispered. Then she held up a bottle of lube. \"Wanna?\"\n\nI was stupefied and she took that as a yes. She greased up my cock as much as she felt it needed and did the same to her asshole. She then laid down and arched up enough that her ass was able to be penetrated. I came forward and slowly inched myself into her rectum.\n\nIt was tight as hell and she moaned as my head popped into her. I went slowly, trying not to hurry or hurt her, but her comments weren't helping.\n\n\"OH GOD! You feel so good in my ass, Jim!\"\n\nIt was about a minute until I was bottomed out inside her. I rocked slowly at first, wanting her to get used to me, but she was soon begging for more.\n\n\"Fuck my ass, Jim! Pound that asshole and make me cum!\"\n\nI increased my pace as her moans kept getting louder. I saw off to the side that Arthur and Gloria were just sitting there looking at us, cuddled up with each other and enjoying the show. I also noticed that they weren't alone, as a few people were gathered and watching us.\n\nI had sweat pouring out of me as I assaulted her asshole. It wasn't long before she got what she wanted.\n\n\"FUCK!! I'M CUMMING!! YOUR COCK IN MY ASS IS MAKING ME CUM!!\"\n\nHer pussy spasmed as she hit her peak, soon coming back down to earth. I kept my pace going and knew I was about done.\n\n\"Alicia...\" I struggled to say. \"I'm...\"\n\n\"CUM IN MY ASS!\" she demanded. \"I WANT YOUR CUM IN MY SLUTTY ASS!!\"\n\nThat did it. I unleashed a more powerful load then I would've thought deep into her asshole which made her spasm yet again. She dazed out for a few moments, before looking around at people applauding us, before seeing me. She smiled, seeing that I was still buried in her. I eased myself out of her ass and Gloria soon was down at her hole, licking up any cum she could.\n\n\"Great job, kids!\" Arthur said encouragingly.\n\n\"Fuckin' hot!\" Gloria concurred.\n\nAlicia and I looked at each other and we were now drenched in sweat.\n\n\"Let's hit the shower room,\" she suggested. We waved goodbye to Arthur and Gloria, making our way to the shower room. It was unisex of course with couples washing and fucking all over. She led me to a more private corner of the room and turned the water on.\n\nWe washed each other carefully, letting our hands roam all over each other. She made sure to apply soap on places that desperately needed attention. I made sure her breasts, ass, and pussy were all thoroughly cleaned and cleansed. She cleaned my genitals and ass, using her mouth to ensure thoroughness at certain points. Then she wrapped me up in a bear hug from behind, pushing her large breasts against me.\n\nI turned and looked at her and we fell into each other's arms and kissed deeply. I don't know if it was the environment or what, but we just meshed together. It was passionate and slippery. When she pressed into me, I damn near slipped. She giggled me as I got stabilized and we toweled off.\n\n\"There's a hot tub room just off of here if you wanna relax for a little while,\" she suggested. I thought that sounded perfect and she led me to another room.\n\nThere were about 8 hot tubs all arranged in the room. Some people were just sitting in them talking with others or themselves and others were fucking hard, letting the water splash everywhere. Alicia found an empty one and stepped in. I hesitated a bit.\n\n\"They clean them, Jim,\" obviously knowing what my concern was. I got in and eased down into the jets, soothing my muscles and allowing me to unwind a bit. Alicia snuggled up next to me and a nude waitress took our order, Alicia ordering champagne for us. It arrived quickly and we toasted and relaxed, letting the water do its magic.\n\n\"Still doing ok?\" Alicia asked.\n\n\"Well, it's certainly an experience,\" I told her.\n\n\"One that you'd repeat?\" she asked with a smirk.\n\n\"I don't know yet,\" I replied honestly. \"I'll probably need a couple of days to sort through all this.\"\n\n\"Perfectly understandable,\" she said taking my hand. \"I threw a lot at you today and you've handled it amazingly well. Part of me thought you would've run for the hills by now.\"\n\n\"Mind if we join you?\" we heard from the side. An African American couple was standing there.\n\n\"Please!\" Alicia said. Both got into the tub.\n\nThey looked similar to us in age, her being slender with an amazingly tight ass. The gentleman had some muscle to him and even not erect, a very large penis.\n\n\"I'm Sandra,\" the woman said in introduction, \"and this is my husband, Andre.\"\n\n\"I'm Alicia and this is Jim.\"\n\n\"Oh, the love,\" Andre said, realizing. \"How's your first night going?\"\n\n\"Ok,\" I told him. \"Just a lot to digest.\"\n\n\"For sure,\" Sandra said understandingly. \"Our first night was wild. We spent half the night watching all the others and really only were with each other. It took a few parties for us to get fully emersed.\"\n\n\"Yeah,\" Andre said in reminiscing. \"The first time Sandra had a woman go down on her, she looked like a scared rabbit. Now it's her favorite thing!\"\n\nMy research hat decided to come out about now.\n\n\"If you don't mind me asking, what made you decide to join?\" I asked. The couple looked at each other.\n\n\"Well,\" Sandra started. \"We'd been married a few years and were starting to think we were boring. We'd never been that adventurous when it came to sex and it seemed like anything we tried was awkward for us.\"\n\n\"I'd heard about this club from a friend who knew what we were going through and he suggested we try it,\" Andre continued. \"Sandra was really unsure at first.\"\n\n\"Unsure? I was a nervous wreck!\" she said giggling. \"But after we talked, we decided to try it one night and see what it was like. Once we got used to it and tried to open up, everything changed. It was like our marriage was reborn. We've never communicated better and never been more intimate.\"\n\n\"That's so sweet!\" Alicia said.\n\n\"Yeah, our love life is so much better,\" Andre said. \"We're not as judgmental or shy with each other's wants or needs and trust each other so much more.\"\n\n\"Sounds really beautiful,\" I offered.\n\n\"Thanks,\" Sandra said. \"I'm sure it's not for everyone, or if we'll do this forever,\" she said snuggling up to Andre. \"But it's been the best thing for our relationship so far.\" Andre looked deep into Sandra's eyes, both filled with love.\n\nI pondered at the love the two obviously had for each other.\n\n\"No jealousy issues?\" I asked.\n\n\"In the beginning a bit,\" Andre admitted. \"The first time we did a full swap, I was really unsure. I thought this could be the end of us, potentially. But when the guy was fucking her and I was fucking his wife, I looked over at Sandra and saw her looking at me. I felt genuinely happy that she was receiving pleasure.\"\n\n\"Same,\" Sandra said. \"I thought I'd get jealous over it, but really we felt more connected after. We were both having a good time and we were still together. After we the swap, we hugged and felt so close to each other.\"\n\nI asked them a few more questions and they graciously answered. They seemed unashamed of anything they'd done. They even told us about Sandra's turn in the bukkake room.\n\n\"So you guys wanna play a little?\" Sandra asked seductively.\n\n\"Maybe later,\" Alicia said quickly. \"I think we need to just relax for a little bit. Jim's had a hell of a workout!\"\n\nThey both laughed pretty hard at that and left to go find another couple.\n\n\"They seem pretty happy,\" I had to admit.\n\n\"Yeah,\" Alicia said wistfully. \"This place has probably saved more marriages than counseling. Some just come for a few months to get it out of their system and others get hooked. Takes all kinds.\"\n\n\"I guess,\" I said, sipping on the champagne.\n\nWe stayed there for at least an hour, talking about everything we'd seen, and Alicia even opened up about some of her experiences here solo. A gangbang here, trip to the bukkake room, even the S&amp;M room on occasion.\n\n\"I'll try anything once,\" she said with a shrug.\n\nBy the time we got out of the hot tub and toweled off, everyone was seeming to peter out. About half the attendees had already gone home and others were headed to the locker room.\n\n\"How about we change and grab some breakfast?\" Alicia asked me.]\n\n\"Sure, but I'll buy.\" She kissed my cheek and headed to her locker room. When I got to my locker, Arthur was there too, dressing.\n\n\"Well, Jim,\" he asked. \"How was your first night?\"\n\n\"Certainly educational,\" I answered. Arthur laughed.\n\n\"Think you'll come to the next one?\"\n\n\"Not sure yet,\" I told him honestly. \"I think I'll need to think it all over.\"\n\n\"Well, I hope you do,\" he said as he got up to leave. \"I think you won't regret it.\"\n\nI finished dressing and saw Alicia standing there, exactly as she'd been when I first got out the first time, just dressed this time. We settled on a diner not far away and walked over, her holding my hand the whole way. We settled into a booth and ordered some coffee.\n\n\"Feeling ok?\" she asked looking at me.\n\n\"Yeah,\" I told her rubbing my face, \"a bit tired.\"\n\n\"I'd think,\" she said. \"I normally take a good nap after a party.\"\n\n\"I bet,\" I added as our food arrived.\n\n\"I think I'll go home and lay in bed for a good part of the day.\"\n\n\"Sounds like a good idea,\" I offered, eating a piece of bacon.\n\n\"Wanna join me?\" she asked. I quickly looked up at her. \"I have to be honest, Jim. Your book research wasn't the only reason I wanted to bring you there.\"\n\nI swallowed hard listening to her.\n\n\"I've had a thing for you for a long time,\" she admitted. \"I kinda used this as an excuse to get closer to you.\"\n\n\"You could've just asked me out,\" I offered.\n\n\"Maybe,\" she shrugged, \"but I think this was more fun,\" she said with a giggle. Then she took my hand and held it in hers on the table. \"I really do like you, Jim. I know that an orgy isn't the best place to show that, but I wanted you to know everything about me. I'd really like to try with you.\"\n\nWhat could I say? I had the same feelings, and she knew it.\n\n\"I think that'd be nice,\" I said with a smile. Alicia threw down some money and paid, despite me saying I would pay.\n\n\"Come with me,\" she said.\n\nIn what seemed like no time, we were in her apartment and she was kissing me while peeling off my clothes. I did the same until she led me into her bedroom completely nude again. I noticed that the bed had flower petals and there was soft music playing. I looked at her dumbfounded.\n\n\"Let's just say I had a hunch you'd say yes.\"\n\nWe got on the bed and continued making out, our tongues exploring each other as our hands did the same. My hands eventually found their way to her ass as I gave it a healthy squeeze.",
        "\"Ooh,\" Alicia said. \"You do know what I like.\"\n\nA few more minutes of kissing and we were soon 69'ing, trying to give our motors a good start. She seemed obsessed with my cock, wanting to taste every single part of it. I dove into her pussy, fluid gushing it from it more then it had at any point during the evening.\n\nEventually, she pulled herself up and sat on my dick, taking my hands and placing them on her large breasts.\n\n\"Make love to me, Jim,\" she moaned as she rode. \"Make me feel like I'm yours.\" I thrusted up into her slowly, passionately as I kneaded her tits. She was talking filthy and sweet all at the same time. She wanted to be mine and at the same time, also my filthy slut. This wound up getting her turned on more as she started bouncing harder and harder on the bed.\n\n\"Yes Jim! Oh GOD!!\" she screamed out while her tits were moving in every possible direction it seemed. \"FUCK ME!!!\" as she quickly erupted in orgasm.\n\nHer body was visibly shaking, telling me that whatever she just went through was powerful. Her eyes had a vacant stare to them as she looked straight ahead, like she was seeing into another dimension almost. She snapped out of it after about 30 seconds and looked down at me, bewildered. She then mauled my face, seeming to need to try and suck out my eternal soul through my mouth. She broke the kiss and looked at me with pure lust.\n\n<br > \"Fuck my ass, Jim,\" she said quietly and clearly. She then got off me and bent over, spreading her ass, inviting me in. I got behind her, my cock more than slick enough to penetrate her backdoor with ease and placed my mushroom head at her rosebud. \"DO IT!!\" she demanded, her voice and timbre filled with desire and lust. I pushed my hips forward and entered her rectum.\n\n\"YES! FUCK!!\" she moaned as I slowly sunk deeper and deeper into her. It took a full minute before I was all the way in. Once she felt my balls rest against her vaginal lips, she started thrusting herself back into me, clearly letting me know the pace she wanted me to go.\n\nIt was more gentle then the pace she'd been riding me previous, but not by much. She grunted and moaned, letting me know how much she enjoyed the invasion.\n\n\"Oh my God, Jim! YES! Fuck my ass! Spank that slutty ass while you fuck it!!\"\n\nI gave her a few good swats which spurred her on all the more. She had girl cum gushing from her pussy as took her ass as hard as she wanted.\n\n\"God, I love it! I love it so much, Jim!\" she moaned out. \"Cum in me!\" she demanded. \"Claim my ass!!!\"\n\nA few more thrusts and I did just that, erupting inside her bowels with more force than I would've thought possible after the night we'd had. She moaned loud and came again.\n\n\"YES!!!\" she screamed out before collapsing on the bed, me right beside her. I snuggled up behind her, spooning her and feeling my load oozing out of her ass.\n\n\"Perfect, Jim,\" she said softly. \"Just perfect.\"\n\nWe soon were off dozing in each other's arms.\n\nEpilogue\n\nObviously, Alicia &amp; I became a couple from that night on. Our friends greatly encouraged this with Breanna declaring that it was about time. It wasn't long before we were living together and planning for our life.\n\nI did write a new book that incorporated some of the club into it and it became an instant hit, easily my most successful book I'd had. Arthur &amp; Gloria heartily approved of the book and was grateful that I didn't breach any confidences. I became even more popular in the club after it was published.\n\nWe continued to be members of the club, long after Alicia and I were married. The celebrity couple we hooked up with the first night quickly became 2 of our best friends, both being in our wedding party. We've swapped with them more times than anyone can count.\n\nAndre and Sandra also became friends and regular partners. They left the club not long after we got married, moving to the Midwest. We miss them.\n\nAlicia and I were eventually elected the heads of the club when Arthur and Gloria retired, a massive orgy being held in our honor. We kept going, but eventually we decided to move out of the city, start a family, and the club faded away from us.\n\nWe still fuck like rabbits and look back on our younger days with affection and excitement. We keep things interesting with swaps and threesomes here and there, but the kids always come first. I'm looking at my beautiful, naked wife as I type this and she's crooking her finger to get me to come over there.\n\nIt's good to be a writer.\n\nTHE END\n\n \n"
    ],
    "authorname": "rumpleminty",
    "tags": [
        "voyeur",
        "group",
        "orgy",
        "first time"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/writing-research"
}