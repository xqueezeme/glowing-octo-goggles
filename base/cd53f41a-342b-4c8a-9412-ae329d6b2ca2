{
    "title": "The Diary of Mistress X",
    "pages": [
        "This is a work of fiction. Names, characters, businesses, places, merchandise, companies, events and incidents are either the products of the author's imagination or used in a fictitious manner. Any resemblance to actual persons, living or dead, or actual events is purely coincidental. All characters in sexual situations are 18 years or older. \n\nMy life could be encapsulated in two words - frustrated journalist. \n\nAs long as I could remember I'd always wanted to be a newspaper reporter. Writing feature stories for the New York Times, Sunday edition. The Holy Grail. I pictured myself with thousands of followers on social media and maybe an occasional appearance on a national news show, to be questioned by a high-profile anchor. I often looked in the mirror, putting on my glasses for a more scholarly look (I usually wear contacts), and took my beyond shoulder length dirty blonde hair and put it up in a French twist, pretending to be interviewed about my latest investigative piece. It was as close as I'd gotten to the real thing. \n\nI was editor-in-chief of my high school newspaper in Green Bay, Wisconsin, and then with good grades and a glowing recommendation from my journalism teacher, I attended Northwestern University and secured my ticket to fame - a B.A. in journalism. Everybody warned me that there might not be a job waiting for me when I graduated, so I followed my father's advice (the only time I can recall doing so) and minored in accounting. \n\nI hated accounting. It was everything journalism was not. It was all numbers. It was dry. It was boring. It was impersonal. It literally sucked the creative gene right out of me. Unfortunately, it also paid the bills. And I was good at it. I ended up in New Orleans (following my now ex-girlfriend, who grew up in New Orleans - our relationship and break-up is yet another story) and found permanent employment with a regional accounting firm. I'd been there about five years, long enough to know what needed to be done to do the heavy lifting on an audit, but not long enough to earn the big bucks. It was long hours during the busy season and abject boredom the remainder of the time. \n\nMy work life pretty much ruled out a real life, so after I broke up with my girlfriend, I didn't have much of a social life, and aside from an occasional date (usually set up by one of my friends), my downtime consisted of binge watching a series on Netflix or trying to make a new recipe from the latest copy of Cooks Illustrated. \n\nDon't get me wrong. I haven't surrendered my dream, just sort of put it on life support. \n\nThere's an \"alternative\" newspaper in New Orleans, The New Orleans Intelligencer, that became my second career. The grandeur of the name of the newspaper belied its modest credentials. It was a free newspaper that had a weekly circulation of about 20,000, and was based on the second floor of a warehouse located in an industrial park on the outskirts of the city. It was one step up from my high school newspaper and about four steps down from the New York Times. \n\nAbout a year ago, I approached the editor, Benjamin Broussard, with an idea for a feature story. At that time I'd been relegated to editing other people's work, and was anxious to get an opportunity to write my own piece. As part of my accounting firm's local outreach program, I prepared tax returns free of charge for persons who couldn't afford a retail accountant. I met a number of people that lived in a homeless encampment under a freeway overpass that was not far from the newspaper's offices. I told Ben that I wanted to spend a few days in the homeless encampment to understand how they came to be homeless and what their issues were living in the encampment. I would also interview nearby local business owners. \n\nBen thought it a bit dangerous for me, being a woman on her own, so I recruited one of my roommates, Craig, to stay with me in my father's old hunting tent. Mind you, Craig was not my favorite person. He was available and willing, something none of my other male friends were. He was actually the roommate of someone else that we invited to live in our house (the house has six bedrooms) and he was brought in to take an empty bedroom, so I really didn't know him until he moved in. \n\nCraig was a slob. He routinely left his dirty dishes, smelly clothes, and sophomoric comic books strewn around the house. He told me that he did something computer related (he told me, but my eyes glazed over after about fifteen seconds of his bullshit) and generally stayed in his room with the door shut. My guess is that he was either playing Call of Duty or watching internet porn with his dick in his hand. He wore clothes that looked like they came out of the Goodwill bin. \n\nI'm a bit of a neat freak, so spending time in a tent under a freeway was not one of my top choices for a vacation, especially with Craig. But I reminded myself it was my idea, and set off with Craig, backpacks filled with food and a couple changes of clothes. At least it occurred me to buy one of those granny carts, the ones that are made with a thin wire metal frame and had a canvas bottom and sides. I loaded it with water, two books I'd been meaning to read, my sleeping bag and foam pad, a flashlight, and a bag of toiletries. Craig and I drove in my ten year old Honda Civic to the encampment, parking about a block away. \n\nWell-scrubbed and freshly bathed, I rolled my shiny new cart to the overpass for the main highway out of town. I shaded my eyes from the bright afternoon sunlight and peered into the relative darkness of the underpass. The first thing that hit me was the smell - the noxious odors of alcohol and piss that made my eyes tear and my nose crinkle. The second thing that assaulted my senses was the noise - vehicles travelling overhead at high speeds, with the ground shaking each time a big rig drove over the concrete structure. I held my breath and ventured into, literally, a pit of despair. \n\nShadowy figures with sallow complexions and sunken eyes followed my every movement as I tried to find a clear patch on which to pitch our tent. Craig followed close behind me as I walked around tents arranged helter-skelter, overflowing shopping carts, and many small mounds of rotting garbage. I found only one suitable spot, and had to spend ten minutes hauling away the trash and the weeds to clear enough space for the footprint of the tent. Craig watch in amusement (he said he'd keep me company but that was after I told him that he wouldn't have to lift a finger) as I got down on my hands and knees, dirtying my jeans on the rock strewn patch of uneven ground. I was thoroughly dirty and dusty by the time I got the tent up and ready for habitation. I crawled in first and staked out the least rocky part for my foam pad and sleeping bag. Craig grumbled as he rolled out his foam pad on the rockier side of the tent. I'm sure he was questioning why he agreed to accompany me. \n\nLike a na\u00efve doofus (that I still am), I got out of the tent with a pad of paper, a pen, and a small stack of business cards. Homeless men and women, and even children, flocked around me. They must have sensed a rube when they saw me, a relatively well-dressed white woman (though a bit dirty), brimming with enthusiasm and likely carrying a fat wallet. Arriving first was a homeless man with two small boys. Soon, two teenage girls and an older man were standing next to me. Within a few minutes there must have been twenty people crowded around me. They mostly asked for money, which I gave it to them, and some asked for my help. I must not have been the first reporter to try this stunt. I ended up giving away most of my money and all of the business cards I had brought. The experience was a blur, and I didn't have the presence of mind to take notes or to remember a name or a face. Craig pulled his nose out of his comic book when I staggered back into the tent, frazzled, and about $200 poorer. \n\n\"How come you didn't tell me you were going to leave the tent?\" he asked me, as if he were my father, which of course he isn't. That didn't sit well with me. \n\n\"I didn't want to disturb you. You were reading your comic book.\" I jabbed him where it hurt. \n\n\"Adult comic book,\" he said, making sure to emphasize the first word. He showed me the cover. It looked like it depicted a three-headed monster eating a person, you know, a real adult topic. \n\n\"Whatever,\" I responded, to try to put him back in his place. I doubt my indifference mattered to him when he was sitting on rocky ground with the smell of piss filling the air. \n\n\"Look,\" he said, feeling my attitude and sensing an opportunity, \"I didn't have to come with you, you know. I was supposed to go to a gaming convention tomorrow.\" \n\nSo Call of Duty it was. I doubted his dick was big enough to jack off. \n\nI'm impulsive at times. I admit it. Sometimes Craig got on my nerves with his slovenly appearance in the house (look, I really don't want to see your butt crack), so being in close quarters in a tense situation put me on edge. \"Well then fucking go if you want to. It wasn't my idea for you to come anyway.\" \n\nPermission granted, he quickly grabbed his stuff and bolted out of the tent without even saying goodbye. Needless to say, Craig and I have not stayed close since then. \n\nI don't know if it was good fortune, but not more than five minutes after Craig left a woman stuck her head in the tent. In the relative darkness of the underpass she appeared to be an attractive blonde, a thirty something housewife who got lost and stumbled into this encampment by mistake. \n\n\"Can I come in?\" she asked, her voice surprisingly raspy. \n\nI nodded my head, my eyes transfixed on this woman, as she opened the flaps of the tent, wearing only a bathrobe trimmed in fake fur and platform heels. She crawled into my tent. Her overpowering perfume masked all of the unpleasant odors in the tent. She had lipstick on, but it was poorly applied. She was clearly a beauty at one time but the crush of years as a homeless person had creased her perfect complexion, chipped a few of her front teeth, and created a permanent hollow in her cheeks from her poor nutrition. I didn't mean to pry, but a robe can only cover so much, and I could see her breasts, full and real, hanging forward as she leaned over to kiss me on the cheek. \n\n\"I'm Francine.\" I could tell where her gravelly voice came from. A lifetime of drinking cheap booze. That's what my dad did. And his voice sounded just like hers. \"What's your name, fish bait?\" \n\n\"Cassandra ... Cassandra Nicholson. My friends call me Cassie.\" \n\nI was sitting on my sleeping bag and didn't move when she crawled in. The center of the tent was about four feet tall. Francine knelt on the floor of the tent. I'm sure she needed a drink. She probably always needed a drink. \n\n\"I'm sorry. I've already given away most of my money,\" I told her, trying to foreclose her inevitable question. But my ill-thought out remark simply told her that I still had some money. \n\n\"You like girls?\" The raspy voice became sultry. \n\nI'd only had a few girlfriends. Not a tattoo or piercing among all of them. Mostly nerds like me. No one had ever come on to me like this. Her tits were practically swinging out of her robe. Suddenly the air inside the tent felt hot. I had a thick wool sweater on and was starting to sweat. I leaned back on my hands. She was reading my face. \n\n\"So you do,\" she observed correctly. \"I like girls too.\" She leaned forward and used her bright red polished nails to scratch along the top of my thigh. My legs closed involuntarily. She laughed at my reaction. \n\n\"But Mommy doesn't know that her baby is a lesbian, does she?\" \n\nMaybe she was guessing but she was right. My mother didn't know I was a lesbian. I had been meaning to tell her, but the time never seemed to be right. I broke eye contact and looked down. \n\n\"So I'm right,\" she declared. \"A little closeted lesbian. Give me $20 and I'll lick your pussy like no one else has.\" Her fingernail scraped against the crotch of my jeans. I think I let out a little squeal when she touched me there. \n\n\"You want some?\" Her face got closer. I could smell the alcohol on her breath. Her imperfections were now more pronounced at close range. I pulled back, the setting not exactly conducive to intimate relations. In fact, it was the furthest thing from my mind. But for Francine, this is where she plied her trade. \n\n\"No ... no ...\" I protested. \"I'm a journalist. I only want a story, not sex.\" But then the thought occurred to me that she might be useful. \"Maybe you could help me with the story.\" \n\nHer watery eyes cleared for a moment as she assessed this opportunity. \"Is there money in it for me?\" \n\n\"I'll give you a $100 if I get a story I can write about.\" I wanted to get her off of me, and I didn't care that I was shading professional ethics by offering her money. I rationalized to myself that it was just helping her out. God knows she needed it. \n\n\"I thought you said you were almost out of money. Show me.\" \n\n\"I don't have it now. But I'll go to an ATM once I have the story.\" \n\n\"Give me something now.\" \n\nI went through my wallet and gave her my last twenty dollar bill. She snatched it out of my hand and put it in the pocket of her robe. \n\n\"I'll have something for you tonight. Something you won't forget.\" She left as quickly as she came, leaving me wondering what I had gotten myself into ... again. \n\n* * * \n\nI spent the day talking with my neighbors and listening to their tales of woe. It was heartbreaking hearing all the different paths that led to this final dead end. One person was sexually abused as a child. Another had a mother who was a crack addict. Two were runaways from a foster home. Each person deserved their own story. Then there was Francine. She found me in the early evening and brought an old pillow with her to sit on in my tent. This time she was dressed a bit better, pink hot pants and a white tube top. She had a full bag from a nearby fast food restaurant and gave a burger and drink to me. I'm not a big fan of junk food, but I was thirsty and hungry, and wolfed down the burger and washed it down with the jumbo drink. \n\nWhile we were eating Francine told me more about herself. She was raised in a wealthy suburb of Atlanta and was played in multiple sports in high school, including cross country and field hockey. She suffered a catastrophic injury playing field hockey, blowing out her right knee. She became addicted to the pain killers she was given after the surgery and eventually dropped out of school and ended up on the streets after becoming an addict. She soon discovered that heroin was a cheaper and better high, and spent the next ten years as a prostitute and junkie. One of her pimps had taken her to New Orleans to work. She ran away from him, and had been living in this encampment to hide from him. She had a few regular customers, and used that money, along with whatever she could raise from petty larceny and panhandling to support her various habits. \n\nI felt sorry for her, but had to remind myself to keep up my guard because she probably saw me as nothing more than a mark. Apropos of that last thought, she asked me, \"So, have you got the rest of my money?\" \n\nI needed to draw a line in the sand, otherwise she'd fleece me of my money before I got what I wanted. \"Francine, I promised you the rest of the money when I had a story. I haven't gotten it yet.\" \n\nShe backed off. \"Yeah ... yeah ... that's right. I've got a date tonight. You can come with me and watch. You'll have your story.\" \n\nI was pretty sure my twenty dollars was gone and that I'd have to look elsewhere for my story. I wasn't really that interested in Franny's \"date\" or in going out at night. I sighed and told her OK, not having any expectations. She left and closed the flap on my tent. \n\nI decided to make the best of the time I had left and went across the street to a small commercial area. I spotted a convenience store, and couldn't help but notice the steel bars protecting the door and windows. I ended up interviewing the owner, an elderly man of Pakistani descent, who had owned the store for over twenty years. He told me that the neighborhood had had its ups and downs, and that it was mostly down now. The crime had gotten worse, and with the homeless encampment across the street, most of his regulars went elsewhere for their business. He complained that the smell of the encampment often drifted his direction, and that when he opened his store he'd find people passed out on the sidewalk, or in his entranceway. He said that he would occasionally find a used syringe in front of his store. I bought a burrito for later and thanked him. On the way out I noticed he had an ATM in his store, so I withdrew $100 in the faint hope that Francine would actually come through on her promise. \n\nThe sun was setting, and the lengthening shadows gave the encampment an even more eerie feeling. I said hello to a few people I recognized and crawled into my tent. I couldn't believe I was still hungry after the burger and peeled back the aluminum foil on the burrito (which was piping hot) and was happily munching on it when Franny stuck her head in. \n\n\"Ready to go?\" She was still wearing the white tube top (that was at least a size too small), and had changed into a purple miniskirt and matching candy sandals with four inch heels. All she was missing was a neon sign. \n\n\"Sure,\" I replied, replacing the wrapper around my dinner and leaving it on top of my sleeping bag. I was now wearing an old baggy sweatshirt, jeans, and canvas tennis shoes. We were quite the unmatched pair. \n\nWe went out to the street and waited. \n\n\"She picks me up here,\" Francine said confidently. \n\nThe late afternoon rush hour was in full swing, and the traffic was heavy. I watched the people walking by, and when that became boring I started watching the cars driving by. I checked my phone. It had already been fifteen minutes, and it was starting to get cold. I couldn't believe that Franny wasn't shivering. \n\n\"Is she coming?\" I'm sure there was impatience in my voice. I'm not very good at waiting. \n\n\"Yes, yes, she'll be here. She's never missed a date.\" \n\nAfter five more minutes I was just about to leave when a sleek black, late model German sedan pulled up the curb. The passenger side window rolled down. I could see a smartly dressed woman, probably in her forties, leaning over towards the window. She had short, lustrous white hair, immaculately coiffed, and what looked like professionally applied make-up. \n\n\"Who's she?\" the woman asked, suspicion in her voice. \n\nFranny leaned on the frame of the open car window. \"A friend,\" Franny responded. \"She just wants to watch.\" \n\nThe woman looked at me. I felt like her steel blue eyes were cutting through me to see who I really was. My eyes dipped down to the pavement. \"Are you sure she doesn't want to join us?\" \n\nFranny looked at me. I shook my head. \"No, I think she just wants to watch.\" \n\nThe woman paused for a moment. \"OK, get in the back.\" \n\nFranny opened the back door and slid all the way across the black leather bench seat. The smell of new car leather sure beat the odors that still clung to me from the underpass. I got in and closed the door. I felt like I was instantly transported to a much nicer place. I slipped off one of my shoes and sunk my toes into the deep pile carpeting. It did seem a bit strange, sitting next to a woman who was dressed liked a hooker being chauffeured by an elegant woman who was clearly out of both of our leagues. \n\nWe drove for about twenty minutes, in silence, before we entered an upscale neighborhood. By that time it was dark and the streetlights were on. We pulled into a driveway of a brick, Tudor style house, with ivy covered walls. The woman parked the car in the garage, out of the sight of prying neighbors. I anxiously at Franny. I certainly wasn't expecting to be taken to a ritzy neighborhood. Somehow the underpass was less threatening. She put her hand on top of mine. \"It'll be fine,\" she whispered. ",
        "We followed the woman out of the garage and to the back door. She ushered us into a kitchen that boasted a working fireplace and wood fired grill. I felt thoroughly self-conscious, dressed as I was. I offered to take off my dusty shoes. She waved off my question, telling me that her house cleaner would be there the next day. \n\nI got a much better look at her under the bright lights of the kitchen. Maybe late thirties or early forties, silky smooth white hair, flawless make-up, and clothes that came from stores that I can't afford to shop at. She was slender, but not too thin, and cut a nice figure in her expensive clothes. \n\nWe exited the kitchen, and then with my mouth agape, went through an exquisitely furnished formal dining room and then across the front entranceway to the wing containing the bedrooms. \n\nWe entered the master bedroom. There were pictures on the dresser of the woman with a distinguished looking man and what appeared to be their two adult children. That made me place her as late forties or early fifties, married with two children. I gathered the children didn't live at home and her husband was away, maybe on business. The woman made eye contact with me. I started to open my mouth. She interrupted me before I could get a word out. \n\n\"You will not speak to me unless I address you.\" She pointed to an upholstered chair in the corner of the room. \"You'll sit there. You won't get up without my permission. Is that understood?\" \n\nI'd never been spoken to that way. So direct. So certain. So in control. The muscles in my body froze. I was excited and I didn't know why. \n\n\"I'm asking you for an answer.\" \n\n\"Yes,\" I finally squeaked. She was beautiful. Her clothes, her face, her slender figure, and her commanding presence. \n\n\"My name is Arlene, but you have the choice of calling me either ma'am or Mistress.\" \n\nThe woman didn't wait for a response from me and addressed Franny. \"Slut, you know what to do.\" \n\n\"Yes, Mistress.\" \n\nI had no idea what was going on. Even though Franny was here on her own volition, it took me aback when she was addressed as \"slut.\" And I was confused by Franny's answer. Mistress? What did she mean? \n\nFranny sat on the bed, kicked off her sandals and took off her skimpy clothes. When she was finished, she assumed a prone position in front of the woman, her face resting on the carpet and her hands extended as far forward as they would go. Arlene made no move to undress, but instead leaned over and slapped Franny on the butt with her open palm. The sound of the impact startled me. Franny's body lurched forward, but not a sound came out of her mouth. The woman reached down and under Franny, and ran her finger across Franny's pussy. Franny's body shuddered at the intimate contact. The woman held her finger up in the air, the digit glistening with Franny's excitement. My own excitement level went through the roof and my pussy was no doubt as wet as Franny's. \n\n\"You're wet, slut. You've been thinking about it, haven't you?\" \n\nFranny's voice, muffled by the carpeting, reflected her growing anticipation. \"Yes, Mistress. I've been thinking about it a lot.\" \n\n\"So what will it be, the whip or the crop? Last time you chose the whip.\" \n\nThe woman said it so casually, as if Franny was choosing which dessert she wanted. Neither of these choices sounded as good as dessert. My skin was crackling with electricity. I could hear Franny's rapid breathing. \n\n\"The crop, please, Mistress.\" \n\n\"Excellent choice, slut.\" \n\nArlene, wearing an expensive pair of heels, went into her walk-in closet and emerged with a riding crop. I rode horses as a teenager and could recognize a riding crop when I saw one. She also had a length of rope and what looked like a small diameter metal tube, about three feet in length, with padded cuffs on each end. \n\n\"Assume the position.\" She certainly didn't mince words. Her words made my heart quiver and my pussy even wetter. \n\nFranny got up and went to the four-poster bed and gripped one of the posts with her hands. She moved her feet back so she had most of her weight on her wrists. She spread her legs about the width of the bar. I could only see her back, but she looked amazing. She was a bit thin, but there was no mistaking that she once possessed a killer body. Her legs were long and narrowed just right to her shapely calves. I could feel my heart pounding in my chest. The woman watched Franny with interest, but didn't seem to be in a hurry. Franny's legs started to shake. \n\nThe woman took the length of rope and securely tied Franny's wrists to the post. The way she manipulated the rope told me she had done this many times before. She then attached the cuffs to each ankle, the bar making sure that Franny kept her legs spread wide apart. The woman ran her hand along the length of Franny's body, avoiding touching her intimate areas. Franny's shaking increased in intensity. I was now starting to wonder what it would be like if that was me tied to the post, awaiting the punishment of a riding crop. I tried to stop thinking about it, telling myself that I was a good girl, but it was the sexiest thing I had ever seen. I wanted desperately to touch myself. \n\nThe woman interrupted what she was doing and suddenly turned her head and looked at me. \n\n\"Don't touch yourself without my permission.\" \n\nI was shocked. How did she know what I was thinking? Her prohibition only made matters worse. I was now squirming in my seat, feeling a prickly heat that made me want to take off my clothes and touch myself. My body was clearly talking to me, though my mind still wanted to resist being drawn into the dark recesses of my soul. \n\n\"Punish me Mistress,\" Franny blurted out. \n\n\"I should punish you for speaking out of turn.\" \n\nThe woman unexpectedly turned to me again. I was surprised I was more than just a voyeur. \"Should I punish her?\" she asked me, as if my opinion mattered. \n\nI was like a deer in the headlights. What? Punish Franny? Why? But seeing Franny there, begging to be punished and as sexually turned on as I was, the answer was obvious. \"Yes,\" I replied firmly. \n\n\"Yes, what?\" \n\nHuh? What did she want? Then the answer occurred to me. \"Yes, Mistress.\" \n\n\"That's better.\" \n\nA rush of satisfaction went through me. The feeling was short lived. \n\n\"Pull up your sweatshirt.\" Her request was a command, not a request. I really didn't feel as if I had a choice, and wanted to please her. I lifted up my sweatshirt so she could see my bra covered breasts. I should have been embarrassed, but I wasn't. Instead, I was proud to show them to her. They were ripe, full, and begging to be touched. \n\n\"Lovely. You have a nice body. No need to hide it with those baggy clothes.\" \n\n\"Thank you, Mistress.\" \n\n\"Come closer, my pet. I want you to see this slut submit to me.\" \n\nI got out of the chair and sat on the bed next to Franny. I could hear her short, shallow breaths. The woman picked up the riding crop. Her wrist cocked, and then unloaded, sending the leather tab of the riding crop screaming towards Franny's defenseless bottom. It hit, making a snapping sound as the leather met flesh. The sound made me jump. I'm sure my eyes were the size of saucers. \n\n\"One,\" gasped the bound woman, a bright red mark appearing where the crop made contact. \n\n\"That's good slut. Did you want another?\" \n\nFranny answered without hesitation. \"Yes ... please ... Mistress.\" \n\nThe woman delivered successive blows, alternating cheeks, until there was a checkerboard of red on Franny's ass. There was a thin rivulet of her secretions running down the inside of her thighs. I looked down and could see a dark spot on the crotch of my jeans, my sopping wet panties soaking through the faded denim. Franny's forehead was covered in sweat. \n\n\"What do you want slut?\" \n\n\"You know, Mistress.\" \n\n\"Tell me.\" \n\n\"I want to cum.\" \n\n\"Of course you do. That's why you're a slut. Isn't that right?\" \n\n\"Yes Mistress. I'm a slut.\" \n\nI was mesmerized by the interchange. I was a voyeur who was about to become a participant. \n\n\"You ... my pet ... you can touch yourself now while you watch me make this slut cum.\" \n\nIt didn't register immediately that she was talking to me. I didn't react quickly enough for her. \n\nArlene pushed the tab of the riding crop hard against my cheek, causing my head to turn. \n\n\"I'm talking to you ...\" \n\nI unzipped my jeans and pulled my jeans and panties down to my ankles. She could see how aroused I was. \n\n\"Are you sure you don't want to join the fun?\" she asked, the invitation so enticing. \n\nI shook my head. It was too fast, too soon, for me. \"No Mistress. I'd like to watch.\" \n\n\"Very well.\" Arlene flattened the palm of her hand and ran it ever so slowly across Franny's sodden cunt. \n\n\"Ohhhhhhhh ...\" moaned Franny, long and deep. It was the cry of a woman in heat. Her legs started to wobble. \n\n\"Please ... \" the bottle blonde said hoarsely, barely able to choke out the word. The sensations of pain and pleasure must have overwhelmed her senses. My fingers wandered down to the swampy mess between my legs. I pinched my clit, wanting to feel the cocktail of pain and pleasure for myself. Franny's moans and whimpers accentuated my own sense of nirvana as I threw my head back and unabashedly masturbated in front of two virtual strangers, and not caring. \n\nMistress Arlene picked up the crop and laced Franny's reddened bottom with yet another stroke, eliciting a yelp from her submissive, and then followed with her hand rubbing the sub's weeping cunt. \n\n\"Yesssss ...\" Franny cried to the heavens as each successive lash redoubled her pleasure. I fought to stave off my own orgasm, wanting to see how much higher I could go as Franny's pain and pleasure became mine. \n\n\"Now!\" barked the Mistress, willing her sub to cum. \n\n\"Ahh ... ahhh ... ahhhhhhh,\" Franny wailed as Mistress Arlene plunged two fingers all the way into her sub's sex. Franny collapsed to her knees, her legs splayed by the spreader bar. My own orgasm crested, the blood pounding in my temples as I came over and over until I fell backward on the bed, physically and emotionally exhausted. \n\nThe rest of the night was a blur. I believe Mistress and Arlene had one more session, but the intensity of Franny's cropping and my orgasms that followed left me bereft of any energy, so all I could do was to attempt to lift my head off the bed before it dropped down again, with me falling into a deep slumber. \n\n* * * \n\nI woke up the next morning in my sleeping bag, my phone telling me it was past ten. The sound of the freeway that I had blocked out to sleep was going full throttle. I hadn't gotten used to the smell, and that helped wake me up as well. There were plenty of folks milling about my tent, so I had to get dressed with little privacy. I was sore and sticky, and then I remembered why. \n\nShit. What happened last night? \n\nI was still a bit woozy but I forced myself to remember last night in order. I met up with Franny. We got picked up by a hot woman in an impressive sedan and taken to her mansion. Am I getting this right? Was I really there? I touched myself and felt the sticky residue of last night. Yeah, I was there. \n\nI pulled out my daily diary. I wanted to get down my memory of last night as soon as possible. And in case of last night, remembering everything was imperative. Here's my diary page of that day. I wrote it in the tent: \n\nNovember 11, 2019 \n\nDear Diary, \n\nI always fantasized about the sex I had with JoLynn. I loved her big, soft breasts, and how we'd rub against each other while we were eating each other out, trying to make the other person cum first. I loved her meaty nipples, licking, sucking and nibbling on them. We would do it all night on the weekends. It was what I thought was hot sex. \n\nBut last night changed everything for me, watching Franny and (Mistress) Arlene. That experience was a bolt of lightening out of the blue. Comparing JoLynn to Arlene is like comparing a brightness of a flashlight to the brilliance of the sun. It was an adrenaline-fueled ride on a roller coaster generated by the intense, emotional interplay between two adult woman. I came away with a life altering experience. \n\nThe raw emotion last night made my skin tingle and my body shiver. I was soaked down there the entire time. I wanted to be Franny. I wanted to be the slut. I wanted Arlene to punish me as the bad girl. To punish me and then to make love to me. Even writing this down now, the memory of watching Franny submit makes me wet down there and shiver once again. \n\nI can remember each strike of the crop on Franny's ass. The loud pop as the leather marked her ass. The whimpering. And then sobbing. But all the time begging for more until Mistress Arlene decided that she had had enough. \n\nMistress Arlene. Her voice cut with the sharpness of a razor blade honed to a fine edge. And when she cut, she cut deep. I'd never seen a woman who acted with the precision and purpose of a fine-tuned instrument on a willing and compliant recipient. \n\nFranny was a smart girl. She knew how to play the game. She may have enjoyed it. In fact, I'm sure she did. But to see Mistress Arlene manipulate Franny's emotions, to take her down, all the way down, and then up, and then all the way up. It was masterful. I doubt there was much left in the emotional tank for any of us at the end of the night. \n\nThe emotion, or should I say emotional electricity, crackled all night. The commands, the begging, the submission. It was so real and so powerful. To combine that mind play with sex, that's where there was explosive power. I wanted to scream to the stars when I let go last night. \n\n* * * \n\nJust when I put the final flourish on my diary entry, Franny came into my tent clad in her white tube top and electric pink hot pants and plopped herself down on her dirty pillow. I could see bright red marks on the inside of her thighs, reminding me again that last night was not a dream. Making my diary entry reminded me of every detail. I looked at the red marks and started to get excited. I was still barely awake. I wondered what the fuck was going on with me. Before I could get too much more excited, Franny interrupted my mood. \n\n\"You owe me a hundred bucks,\" she declared, dispensing with the early morning formalities. Back to reality. She was trying to chisel me when I was half asleep. I was awake enough to say, \"I gave you twenty yesterday, so I owe you eighty.\" \n\n\"That went to expenses. You still owe me a hundred,\" she snapped back. She anticipated my response and had a ready answer. This woman just took me to heaven but she was still working me. \n\nReflecting on the previous night's activities, I got more than a hundred dollars' worth, so I dug into my wallet and put three crisp twenties in her hand. \n\n\"Wait, you're forty short.\" She was no dummy, but neither was I. \n\n\"I still don't have the full story. I want to talk to you about last night.\" \n\n\"Oh ... wait five minutes and I'll be back. Now after we talk, I'll get that last forty, right?\" Trusting as ever, that Franny. \n\n\"Yeah, yeah, you'll get your money.\" Her money grubbing was wearing on me. \n\nI found the burrito I had stashed from the night before and, throwing caution to the wind, ate it. It wasn't half bad. Franny came back when I was just crumbling the aluminum foil. \n\n\"You mind?\" asked Franny, holding up a well-used crack pipe. \"I need this.\" \n\nI reluctantly nodded my head. \n\nI'd never seen anyone smoke crack, except in a movie. That bitch has taken a twenty and converted it to rock candy in a bat of an eyelash. She put the small rock in her pipe and used a lighter to melt it. I looked at the heavily stained pipe as the glass bowl bubbled and the vapors filled the globe like a maelstrom, and then unleashed that maelstrom inside her. Franny had no doubt been using for years. She inhaled deeply, taking one hit, exhaling, and then took another. Her eyes became glassy and her body relaxed. There was a temporary inner peace. The edge was gone. The fight was gone. \n\n\"Franny?\" \n\nShe blinked repeatedly, fighting to stay with me. Her eyes, now dreamy, she smiled at me. \"You're nice.\" Her head bobbed back and forth, eyes watching me in amusement. \n\n\"Thank you.\" \n\n\"Not too many people are nice to me.\" She was speaking from her heart. It broke mine. \n\n\"You deserve better, Franny.\" I meant it. It was a fucking shame that she didn't get the help she needed to fight her addiction. \n\n\"No I don't,\" she answered more lucidly. She meant it. And that broke my heart as well. Her loss of self-esteem. No one deserved that. \n\n\"Why?\" I asked. I wanted to understand. Not just for the article. I liked her. I wanted to help her if I could. I knew she was untrustworthy, but people with this kind of issue needed help. \n\n\"I've done some bad things in my life.\" This was a real confession. I wanted to know. And I didn't want to know. \n\n\"Tell me.\" It was the journalist in me that said that. A journalist should be able to handle Franny's story. \n\n\"It's going to cost you a lot more than $100 to tell you.\" \n\nAhhh. She wasn't ready to talk to me about it. She was brave enough to tell me that it was there. I'm sure she hadn't shared any of these \"bad things\" with anyone else, but I would be there for her when she was ready to tell her full story. So I shifted gears. \n\n\"Then tell me about Mistress Arlene. How did you meet her?\" \n\nShe was eager to open us, as long as it wasn't about her. \"I met her at a client's house ... yeah ... it was about a year ago.\" \n\nIt was then that the conversation was getting really interesting. I started pushing into the heart of the subject. \"Have you ever been in a scene like that before you met her?\" \n\n\"Yeah ... hey you got my forty bucks?\" Franny. At least she was predictable. \n\n\"Yes I do Franny. Can we finish this conversation?\" She got it not to ask me again. She shifted back into storyteller mode. She was nodding as she spoke. \n\n\"Uh, yeah, I've done this before, but not like this. She's the best I've had. I wasn't acting there. She knows how to take you right to the edge. It's the best high I've ever had. I'd do it for free with her. I could see you were enjoying yourself. Hey, you want a hit off this pipe?\" \n\n\"No thank you Franny. Yes I did enjoy myself. Probably too much.\" That was an understatement. She could see for herself. In fact I'm sure it was her that got me back here safely in bed. Even though she could be a pain in the ass, she really cared about me and found a way to get me back without an expectation of a payday. I checked my wallet when I woke up and found that my hundred dollars that I pulled out of the ATM was still in there. There was more to Franny than met the eye. Especially the way she dressed. \n\nFranny started rubbing her legs, like they hurt. Then she started a cackling laugh, followed by a fit of coughing. \"You're no crack whore. You passed out halfway through our session. Arlene and I had to practically carry you to the car. I put you in your sleeping bag. Didn't take your money. It's all there. All one hundred dollars.\" She made the last statement with pride. \n\n\"Thank you for that.\" I'm sure she was tempted. And I'm sure she counted it. But she didn't take it, and that was big of her given her cravings. \n\n\"Hey, I gotta go. You know, business.\" She pulled on her tube top to make her tits bounce. They were nice tits, and had a good bounce to them. She was hot, but in a very slutty way. Her little show gave me a cheap thrill, but I played it casual. \n\n\"Yeah, I get it ... business.\" I pulled two more twenties out of my wallet and gave them to her. I told you I was a softy. Her eyes lit up through the drug induced haze. \n\n\"Thanks! See you around.\" The flaps of my tents fluttered behind her and her hot pink pants. ",
        "That's the last time I saw Franny. \n\n* * * \n\n\"This is a great piece of work.\" Ben pushed back on his desk chair and threw my draft on his leather topped desk. It slid all the way back to me. I stopped it with my hand. \"This Franny character is quite the piece of work. What happened to her?\"  \n\nHe had read it. He had bit. He had bit hard. He wanted to know what happened to Franny. \n\nIt was a good piece of work. I recounted her story as best as I could. I left out a lot (OK, almost everything) regarding Mistress Arlene. But you got the sense from the article of how she felt. Her history. Her addiction. Her pain. Telling the story turned my stomach into knots. It apparently struck Ben the same way. I couldn't believe I scored a direct hit on my first feature article. I told Ben what I knew. \n\n\"I don't know where she is. After I finished my first draft I went to find her to see if I'd captured everything correctly. No one in the camp knew where she had gone. She disappeared shortly after I left. I visited a couple of the shelters nearby and even went to the police station to see if she was picked up for something. I asked the store owners and the fast food restaurant she used to frequent. Nada.\" \n\nI'm sure he could tell I was bummed that I couldn't find her. I hoped that someone would call us after the article was published and help us find her. No such luck there as well. I was also hoping maybe he'd give me some money to hire an investigator to help me. To date, no such luck on that front either. \n\nBen continued. \"And what about this Arlene person? Do you know where she is?\" \n\nThere was enough of a tease in the article that Ben wanted to know about Arlene. I hinted at the sex. That got Ben's attention. I decided I probably wouldn't share everything with Ben. Arlene was a separate story and it was my story. I wasn't going to give Ben everything and have him assign it to another reporter. (Of course, in the back of my mind, I was wondering if I could be her sub. That was a deep, dark thought that hadn't surfaced before. It bothered me that I was really thinking about doing this, approaching Arlene, not for an article but to be with her). \n\nI put my wicked thoughts aside and decided not to tell him that I drove most of the wealthy neighborhoods around New Orleans and narrowed it down to a couple square miles. It was on my list to keep looking when I got some free time. Since my meeting with Ben I still haven't found her but I'm still thinking I drove past her house and didn't recognize it because it was dark when I saw it. Anyway, after all of those mental machinations I gave him the abridged version. \n\n\"I wish I did. She drove, and I was so distracted that I didn't remember exactly where we went. And I never got her last name. And maybe she lied to me about her first name. I guess I'll never know.\" \n\nI thought that Ben believed me. I thought I sounded convincing. Then I thought that Ben would be wondering how a reporter, someone who is paid to observe, couldn't remember where she was and who she was with. Even if Ben thought I was lying, there wasn't much in the article to let him find her by himself. \n\nI waited for his verdict on the article. I knew it was going to be good. \n\n\"Well, I'm inclined to run this as our feature article in our next edition. Good work Cass.\" \n\nI beamed. It was worth it. Craig. The noise. The smell. The shitty food. About three hundred bucks of my own money. But it was all worth it. One step closer to the New York Times. \n\n* * * \n\nThe article was successful beyond my imagination. I was bombarded with responses. I was even interviewed by a local television station. Some anonymous donors gave enough money to fund a shelter that could house some of the people in that camp. I was asked to speak to a few local organizations and a high school on the issue of homelessness. I helped raise money for a relief fund. One wire service carried my story (a shorter version) and it got a bit of play nationally. \n\nMy name meant something. People would recognize me after I told them my name. \"Yeah, you're the woman that wrote that article on homelessness.\" Yes, I was milking it. I deserved a bit of a pat on the back after spending the time and taking the risks to write a good article on a topical issue. But I realized I was basking in a job well done, and reminded myself not to let the success get to my head. I didn't want to be remembered as a one trick pony. \n\nI also had to grapple with something much more profound. Someone personal to me. Something that was nagging me every second. Why was I so aroused watching Franny get cropped and cry out as she was punished, and then screamed with pleasure? Why did I have the most explosive orgasm of my life ... with my own hand? \n\nI went to the internet for the answers. There was a ton of material about BDSM that I had to sift through. Some was amateurish, which I ignored, and some was thoughtful and clearly authored by people with first hand experience. There was a common vocabulary that became familiar to me and common themes that emerged, such as the power exchange, limits, and orgasm denial, much of which I saw at Mistress Arlene's house. The articles described all manners of practices and devices. Many of the articles had pictures and drawings that illustrated their points. \n\nI saw a lot of Mistress Arlene in those articles. She was a classic Domme. It was a privilege to watch her practice her art. After I did enough reading to saturate my mind, I went to videos to see the real thing. I started watching BDSM scenes, especially ones involving a dominatrix and a submissive. It scratched an itch I never knew I had. \n\nI watched Dommes in all manner of apparel, many that didn't do anything for me. What made my pussy wet were Dommes who were well dressed and fully clothed. Literally belonging in the boardroom and the bedroom. Women in their thirties or forties with a commanding presence. Confidence. Nice bodies. Slender. Fit. The color of hair didn't matter as much. It was the stage presence. The more stage presence, the more I was interested. \n\nThe subs? I wanted them to be like me. In their thirties. Youthful looking. Well-endowed. Blonde hair, but more dishwater. Not the fake platinum blonde. The girl next door kind of blonde. Real breasts with big nipples, not fake. I like JoLynn's nipples. Long, meaty, maybe pierced. Maybe a little chunky but definitely not skinny. I didn't deal in perfection in the eyes of the fashion world. I wanted a woman who had some substance. \n\nBut it was Mistress Arlene who became the focal point of all of my masturbation fantasies. When I watched a video, I pictured her as the dominant and me as the submissive, and it always resulted in an explosive orgasm. She was my gold standard, a sample of one. But even today, after so much more involvement in this world, I know I stumbled upon somebody special. I do hope I find her again someday. \n\nI also reordered my thinking about BDSM. It wasn't some perceived deviant sexual behavior. Sex was only a part of it, and not the most important. At its center, it was the voluntary surrender of control to another based on mutual trust. Then it became crystal clear to me. I decided my next article would be on BDSM - to demystify it. It wasn't just dungeons and opulent bondage rooms a la Christian Grey. It was more a state of mind. The ropes, whips, cuffs and the like were simply instruments to carry out the mental domination and submission and to dispense the pain and pleasure. \n\nI made the pitch to Ben. He loved the idea. I would write a feature article on BDSM, and would try to find someone like Arlene as the central character in the story. He asked me when I could have it for him. I told him a couple weeks, maybe three. He told me sooner if possible. I was stoked. I was now a feature writer and Ben was pushing me to work faster. He even gave me a modest travel budget. \n\nMy job at the accounting firm no longer was boring to me. It gave me the financial freedom to spend my spare time researching and chasing down leads on this new story idea. I told my manager that I was using my accrued PTO (I had a ton of it). We were pretty busy at the time and he complained but I didn't give a shit and took the next week off. I even splurged on myself as a reward. Arlene's compliment resonated with me. I upgraded my wardrobe, discarding my baggy clothes in favor of ones that were more stylish and form fitting to accentuate my curves, not hide them. I didn't want to hide in the background any more. \n\nI was becoming well read on the subject of bondage and discipline, but had no real world experience with it other than my one night encounter with Mistress Arlene. I was still trying to remember where she lived, and hadn't given up but had already driven several wealthy neighborhoods of New Orleans that seemed vaguely familiar to me but without success. My local research did disclose a few bars that catered to a more sexually permissive crowd and I decided to frequent them to see if I could get a lead on people that actually practiced this art. \n\nAfter numerous false starts I finally starting meeting people that seemed to enjoy some form of bondage and discipline when I happened upon a married couple that were quite open about their intimate relationship. I learned that they were single when they met at a membership only club, the woman the dominant and the man the submissive, and that over time their relationship morphed into a romantic one. They confirmed to me that the club they belonged to, and the others they were familiar with, wouldn't let in outsiders like me, but that there were probably many in the community who might be willing to share some aspects of their sexual practices. That was enough for me. I didn't need to see it. I saw plenty on the internet. I wanted to hear it from people. In their words. After all, words were all I had to work with. \n\nThose interviews led me to this mysterious Mistress X. A number of people that I spoke with that were in their forties and fifties recalled a Domme who used to frequent the clubs, and then established her own little enclave in a post-Civil War mansion in the Garden District of New Orleans. No one knew her name - she jealousy protected her privacy - but her calling card was a single red rose. She was reputed to be very wealthy, her fortune self-made. A number of women would be in residence with her at any given time, and there were some that would show up, unannounced, at her house, hoping to gain entrance. Some mentioned a diary, a meticulous hand-written diary, that Mistress X kept close to her. It was a leather bound book. She kept the key on a gold chain that always hung around her neck. \n\nIt was good stuff. The stuff of local legend. I was captivated by the stories I heard about her, and decided I would make her the focal point of my story. Unfortunately, I was told that she had moved away from New Orleans a number of years ago, and no one could tell me where she went, other than to say it was somewhere in the South. \n\nEven though she had long ago retired to an undisclosed location somewhere in the South, I was undaunted by the challenge. Living under an overpass with a prostitute/crack addict will give you that kind of confidence. When I'd made up my mind to find her, I remembered I had met someone who might know of this Mistress X. I met Edwina at a party during Mardi Gras a few years back. The party was a grand one, held in the ballroom of a large hotel in the French Quarter, with everyone wearing costumes harkening back two hundred years, with the women wearing festive dresses featuring large hooped skirts and plunging necklines, and men wearing ruffled shirts unbuttoned to reveal their chests. I was a guest of my then lover, Hannah, who had garnered the invitation from her boss, a local celebrity who hosted an afternoon television talk show. I'm sure my tits were practically hanging out that night, especially when I was drunk. I tended to get that way at that kind of party. And by that I mean a party that has a great dance band and serves premium alcohol for free. Edwina was one of the co-hosts, and for some reason took an interest in me. She was older than me, but clearly was from money. She had on a gorgeous gown, and there was no doubt she still had a great rack. Her breasts were pushed tight together by the gown, and they were a beautiful and succulent as JoLynn's. \n\nWhen we met, Edwina and I were already three sheets to the wind, and even though she was probably twenty years my senior we hooked up that night, in her hotel room. I didn't remember much about the sex, but I did remember that she had several lengths of rope in her luggage, and begged me to tie her to the bedposts while we were having sex. I didn't know what I was doing, but she did, and she tells me we both enjoyed it even though I was in a drunken haze. I didn't think much about it at the time, but after talking to several acquaintances that know Edwina better than I do, I was told she frequented several local BDSM clubs. \n\nFortunately I had saved her contact information, and over chicory coffee and beignets at Caf\u00e9 du Monde, Edwina told me that she was indeed familiar with Mistress X, and that she had heard that Mistress X was probably now in her early 70's, and in failing health. She relayed rumors that Mistress X was somewhere on the west coast of Florida; perhaps in the Sarasota area. She also repeated the rumor that Mistress X was resident in the Garden District of New Orleans, occupying a mansion surrounded by a world class rose garden. There was a full retinue living with her, to manage the property and her business affairs by day, and to explore the outer boundaries of dominance and submission by night. \n\nEdwina gave me the contact information for a close friend of hers who retired to the Sarasota area, and encouraged me to contact her, as she was likely to have better information on Mistress X's location. I called that woman, and she gave me an address on Longboat Key. She told me her information was third hand, and that she had no idea if the information was accurate. \n\nAs you could no doubt gather from my impulsive nature, third hand information was enough to get me to take a week off of work and drive to the Sarasota area to search for this elusive Mistress X. \n\nIt was a long grind driving from New Orleans to Sarasota. I thought I could handle the long drive, but I hadn't driven more than a couple hundred miles in any of my prior road trips. Once I got to the fourth hour of my drive, it was already pitch black outside, and the white lines on the road started to blur. I decided to grab a cup of coffee, and took the next exit to search for a cup of coffee. I found the blazing white lights of a Dunkin Donuts and parked in the near empty parking lot. The counter person, who couldn't have been more than a day over eighteen, was a skinny guy with spikey hair and tattoos adorning both arms. He turned out to be quite nice, and gave me a freshly made jelly filled donut and a hot cup of coffee. \n\nThe donut was a guilty pleasure of mine, accentuated by the hot joe. As I stared at the clean white surface of my table, my mind went over (again, maybe for the hundredth time) what I would say to Mistress X when I met her. Of course I would tell her I was a real journalist, and that I was writing a story about BDSM that would feature an interview with her. I would tell her about my article on homelessness, and the awards it received. Maybe I'd give her a copy. I was pretty certain I had replayed it enough in my mind that I wouldn't be caught flatfooted. If anything, I would be prepared. \n\nRefreshed I kept driving until I hit the outskirts of Tampa. I found a cheap motel and rented a ground floor room that I could park in front of. It was clean, but the amenities, such as the bouncy bed and the see-thought towels, left a lot to be desired. I took a long, hot shower that helped clear my head. I used my damp bath towel to clean the steam off the bathroom mirror, leaving streaks of moisture across its surface. Peering into the mirror, I saw a thirty-something woman with dishwater blonde hair, soft blue eyes, and a \"girl next door\" face. Would this be someone that Mistress X would trust, would bare her soul to? \n\nI sat on the bed, cursing my bargain budget motel, and laid back exhausted but wired. My confidence was wavering. I had no real idea of what I was getting into. My sum store of knowledge was a lot of reading on the internet, watching all manner of BDSM videos, and my experience with Francine. Once my mind locked in on Francine, I couldn't get her out of my mind. That night at Mistress Arlene's house was without a doubt the most exciting night of my life. Even though it was my own fingers that brought about my release, the intensity of the orgasm was something I had never been able to replicate. \n\nI must admit there was more than one night with my laptop and my vibrator, watching a woman submit to another. Of course those thoughts got me excited, and the sudden dampening between my legs beckoned my fingers, which ran over my hardened clit and then parted the swollen lips of my pussy. I imagined it was me, not Francine, under the control of a seasoned Mistress, exploring the dark recesses of my soul. My fingers knew exactly what to do, rubbing my clit and then pressing deep inside me, probing for that soft G-spot, and feeling the inevitable spiral of pleasure that would lead me to my release. Heedless of the paper-thin walls, I cried out when a satisfying orgasm washed over me, leading me to a long, uninterrupted sleep. \n\nWell-rested, I set out with new found enthusiasm and was soon within the city limits of Sarasota. I had never been there before, but could see the attraction of this Gulf-side resort/retirement community. My excitement heightened as my destination was now within a few miles. I wondered again what she would look like. Would she be outfitted in a sexy bustier? Black leather boots with stiletto heels? How old would she be? I'd heard everything from forty to eighty. I'd never seen a picture of her and there was no consensus on her physical appearance. \n\nI followed the directions on my GPS, which took me across a bridge and onto Longboat Key, a long spit of land that faced the Gulf of Mexico. Going down the main drag, aptly named Gulf of Mexico Drive, I saw high end restaurants and resorts lining both sides of the long boulevard. I turned off onto a side street, passing a series of gated ocean-side residences until I came to a long wall that was at least eight feet high, wholly obscuring the magnificent house that must have been behind it. The wall ended at a sculptural metal gate, featuring graceful curves and arches made of Corten steel that had a light patina of rust. The wide apron of the driveway in front of it consisted of cobblestones made out of hand chipped white marble blocks, the kind that I saw lining the older streets of Paris. The GPS told me that I had arrived at my destination. \n\nI rolled to a stop parallel to the gate and immediately questioned whether I was at the right place. I compared the address on the plaque mounted on the stone columns guarding the entrance against the address entered into my GPS. The addresses matched. I was suddenly unsure of my passion for discovery, and whether going inside these gates would be a revelation of something inside me, something that I'd kept hidden away, never to be revealed to a soul, that she might see in me. \n\nI had heard the rumors of her powers over women, and I initially laughed them off as unbelievable. A person couldn't have that kind of power over another ... could she? I had given this matter some thought already and concluded that in the end, I did have complete control over my actions. And that I was accountable for the consequences. I would push the silver button on the call box. I would do it. I willed myself to advance the car forward to the call box. ",
        "As I was going through my mental gymnastics, I was startled by a sharp rap on the passenger side window. I looked up for a moment in that direction and unknowingly eased the pressure on the brake. My car started rolling forward and the bumper cleared the low wall protecting the base of the call box, dislodging the call box from its base. Needless to say I was horrified. I slammed on the brakes and the car came to a sudden stop, jolting me forward. Apparently I hit the base of the call box under the speed that would have deployed the air bag. And being the doofus I was, I had unhitched my seatbelt in anticipation of reaching out my window when I approached the call box, and when the car hit the hard rock curbing, my forehead, turned slightly to the right, hit the edge of the steering wheel, which knocked me temporarily senseless. I felt a bare forearm push me back and then move towards the steering wheel, slamming the car into park. \n\nMy heretofore trusty car rocked back and then forward and the arm was pinned against the steering wheel by my breasts. I'm generously endowed in that department (I've been told soft, pillowy, rounded, heavy ... you get the idea). And as the forearm moved sideways against the bottom of my breasts, and as the car lurched forward the arm pressed my breasts upwards, almost touching my chin. I could swear that her hand, as it moved sideways, copped a major feel, squeezing the edge of my breast in a way that a bolt of pleasure penetrated the adrenaline rush of the moment. Strangely, I also remembering smelling fresh cut roses. \n\nI looked to the front door, noticing that it had been opened, and that an impeccably dressed woman stood before me, resplendent in a pair of heels that must have cost at least a thousand dollars. Her hair was immaculately coiffed, and her skirt and blouse looked as if they would have cost me a month's rent. Her feet were spread slightly apart and she had a stern look on her face. Behind the make-up I discerned a woman in her 40's or 50's, but still with a beauty that radiated from her. \n\nShe lowered her large rounded sunglasses and looked down at me. Piercing. Emerald green. I felt them cut through me like a hot knife through butter. Probing. Penetrating. I knew I had a goofy expression on my face. I was still stunned by my head butt with the steering wheel. Is it possible to know someone in a moment? \n\n\"Hello,\" she said, drawing out the word. It was said with precise diction. I think I stuttered something. \n\n\"May I help you?\" she said to my drooling face. I was still a bit woozy and trying to comprehend why this lady was talking to me. I'd never met anybody like her. So put together. Moving with measured purpose. Her voice had the inflection of authority. \n\nI noticed a burly, heavily tattooed woman, standing next to my savior. She was wearing jeans, cuffed at the bottom, and a plaid shirt with the sleeves rolled up to show off her artwork. She was outright glaring at me. I looked beyond them and saw a gleaming black Bentley, the car idling, or purring if you like, with both the driver's and passenger side doors opened. I thought I'd seen this type of car in spy movies, but never in real life. The magnificent gate was wide open. \n\nI then saw a patrol car roll up to the edge of the driveway. It flashed its overhead lights for a moment to get everyone's attention. A policeman in the passenger seat started talking to the well-dressed woman. The ease of the conversation suggested that the two of them knew each other. After a brief, animated discussion, the cruiser rolled away. \n\nI suddenly realized what happened. While I was trying to psychoanalyze myself for the millionth time, the Bentley had pulled out of the gate behind me, my car parked almost sideways in the driveway. The driver must have come to my car to ask me what I wanted. And being the terrible driver that I am, I panicked. The driver was apparently the heavy set woman who looked like she wanted to kill me, and the well-dressed woman was the passenger. \n\nI tried to rearrange my tousled hair. A couple of the hairs had caught in the steering wheel and when I pulled up to straighten myself those hairs pulled out and I winced in pain. Suddenly the well-dressed woman's face showed concern. \n\n\"I'm sorry. Did you hit your head?\" Her voice had none of the charge that it did a moment ago. It conveyed compassion. Compassion without conditions. \n\nMy head was throbbing. I rubbed the sore spot and then pulled my hand away. It was wet. My hand was covered in blood. I screamed. I think I fainted. \n\n* * * \n\nIt smelled good. I could swear it was freshly baked chocolate chip cookies. The original recipe. The Toll House recipe. I'd eaten enough chocolate chip cookies to know the genuine article. I opened my eyes. I was sitting on a plush chair in a kitchen that looked like something out of Architectural Digest. It was acres of gleaming white marble and stainless steel. The finest copper pots and pans, freshly polished and hanging in neat rows from racks suspended from the ceiling. And on the counter - two trays of cooling Toll House cookies, bursting with melted chocolate chips. I saw my entire childhood flash in front of me. \n\nThe well-dressed woman was now wearing something else. She had shed her designer clothes for something more practical. She was wearing a fine white linen shirt, open enough to show a pair of impressive breasts, though smaller than mine. Her cleavage casually displayed but in that was erotic to me. I tingled when I looked at her. She allowed herself a wry smile when she saw my reaction. It was a knowing smile. A smile that had been made a hundred times before. \n\nI was so mesmerized by her breasts that I didn't see the plate of chocolate chip cookies she was carrying in her hand. \n\n\"Like what you see?\" she said, her eyes seeing mine locked in on her breasts. I again sputtered incoherent babble. I was struggling to form a cogent response to her seemingly simple question. \n\n\"Uhhh ... yes,\" I felt compelled to answer truthfully. I thought it was better to tell the truth to a woman of this force and ... yes power. She was not to be trifled with, and not certainly by a woman in my position who had just destroyed the call box to her considerable estate. I was still staring at her breasts and could not take my eyes away, despite her question. \n\nIt was enough that I was being rude, but even more surprising that I was ignoring the one food I would crave the most on a desert island - a freshly baked Toll House cookie. It was one of many memories from my childhood in Green Bay, Wisconsin, yes, that Green Bay. The land of NFL football. When I was living at home I could debate the merits of a 4-3 defense or a 3-4 defense until the late hours of the night. I could name the members of the offensive line and their back-ups at each position. I had three older brothers and we were all as football crazy as our parents. I had everybody wear Packer green to my sixteenth birthday party. \n\nBut I digress. The one thing just under Packer football was the freshly baked chocolate chip cookie. This woman's stunning appearance in clothes that might look ordinary to someone else had completely disarmed me. Chocolate chip cookies could not compete with this woman's air of authority. I wanted to swim in it. I wanted to wallow in it. What other magical thing could she say to me? \n\n\"I mean the cookies.\" She said this in a nonjudgmental way (she must have been used to people staring at her perfect breasts), thrusting the plate of cookies in front of me so I had to unglue my eyes and look at the tempting baked confections, offered to me on an expensive piece of china. A napkin was underneath the plate. I gathered my wits enough to take the napkin from her hand first. As my fingers brushed against her long, slender fingers, another bolt, this one more powerful than the first, shocked me as I felt her skin, like the finest piece of material, silky smooth, and again with the subtle (and persistent) scent of freshly cut roses. \n\nMy nostrils flared to inhale her scent as she held the plate in front of me. My hand clumsily reached for the stack of cookies, knocking one skittering on the floor. She quickly drew the plate away before I spoiled the whole pile. I picked up the cookie that fell on the floor and put it on my napkin to eat (we had a five second rule in our house when I was growing up - if it was on the floor less than five seconds it was fine to eat). \n\n\"How about we sit on the stools over there? We can have our cookies there.\" She looked at my head, noticing the knot on it. \"My, you must have had a scare.\" Her voice had not a tinge of hostility. It showed only concern for my well-being. I instantly relaxed. I felt the bump on my head that had now swollen to the size of half a golf ball. But there was no blood. The wound had been cleaned and the bleeding stopped. My hair had been washed. I was wearing different clothes. \n\nI could feel that I was wearing the same bra and panties, but my best blouse was replaced by something far more elegant than anything I had even owned, or even tried on. It was silk. Chiffon colored. It had a tiny spot near the right breast. A dot of black. My designer jeans were replaced with another pair of designer jeans. These jeans were from a designer that was far outside my price range. I lusted after them but had never tried them on, knowing that if I did I would have sold my ten year old Honda Civic for two pairs of them. The jeans hugged, no caressed, my skin as my curves looked even better. There were two almost imperceptible specks of black near the left pocket. Otherwise the jeans looked like they were just off the hanger at a high end department store. \n\nI may have emitted a purr of satisfaction as I felt the stone washed material rub against my skin as I followed her to a broad expanse of Carrera marble. The counter area had four stools with the seats made out of a hand tooled leather that were formed to hug your bottom. I sat in one, and the combination of the jeans and the perfect fit of the chair elevated me to another plane of contentment. She was sitting next to me, with perfect posture, watching me. \n\nOf course. I was to try a cookie. I now focused on the cookie that was sitting on my napkin. I took a bite. A healthy one. The melting chocolate drizzled across my lip and started running down to my chin. Before I could use my napkin her finger darted forward and took the chocolate off my lip like a squeegee. Another ripple of pleasure went through me as I felt her finger tickle my lip. She looked at me so our eyes were locked together. She stuck her chocolate coated finger in her mouth and drew it out slowly, her finger now gleaming with her saliva. Her eyes sparkled as she savored the chocolate, tinged with the taste of my lips. Even eating a chocolate chip cookie was charged with sexual energy. \n\n\"Do you like chocolate?\" Again, the voice melodious. Her voice flowed. I felt it wash over me. \n\n\"Yes ... yes,\" I stammered. Jesus. It was like asking a fish if it liked water. My life depended on chocolate. She had undoubtedly seen the half eaten bag of M&amp;M's sitting on the passenger seat of the car. I couldn't answer the simplest fucking question with the grace of an adult. The smile again. The knowing smile. \n\n\"Well good, because I do too.\" She picked up a cookie off the plate and took a tiny bite out of it. So elegant. I doubt she dropped any crumbs when she ate a cookie. None were dropped with this bite. A smile of satisfaction flashed and then she turned her head to look at me. \n\n\"We have that in common, don't we?\" Her voice was so disarming. Our course we do! I breathed in the smell of chocolate and her scent of roses. Ambrosia. I decided to say something coherent. Something adult. \n\n\"I love the smell of your perfume. What is it?\" I hadn't smelled this scent before, but I found it captivating. I was going to make a mental note to buy it for myself. \n\n\"I'm not wearing any perfume.\" She said it so matter of factly, like she had said it a million times before. That thought was confirmed when she asked me her next question. \n\n\"What do you smell?\" \n\n\"Roses.\" \n\nI could see she stopped herself from giving me that knowing smile. I think she was trying to break that habit. Instead her face turned inquisitive. \n\n\"What color\" she asked. I felt as it she had asked this question before as well. \n\n\"Red.\" I answered. \"Bright red. Like the lipstick I'm wearing.\" \n\n\"Ahhh,\" she mused. \"Like a color you loved in your youth.\" \n\n\"Yes,\" I answered. She had unearthed one of my most cherished memories. Seeing an early Judy Garland movie. Was it \"Meet Me in St. Louis?\" Her beautiful lips, the color of the roses I pictured I was smelling when she was next to me. And her voice, as perfect in pitch as Judy Garland's voice. The memory warmed me. As I was basking in that warmth I saw her take another nibble from her cookie, savoring the taste as she would a fine aged Bordeaux. \n\n\"Judy ...\" Her voice trailed off for me to complete my thought. \n\n\"Yes, Judy Garland,\" I blurted, almost shouting. She said it as if she were reading my mind and disgorging the contents of my thought process. Who was this woman? \n\n\"Her lips were the color of those roses, weren't they?\" she asked in a manner that told me she already knew the answer. I was getting spooked. A shiver went up my spine. \n\n\"Yes,\" I said, my voice now almost a whisper, humbled by her presence. I had surrendered already. She had an uncanny knowledge of me. That look when I was sitting dazed in the car. That look that shined a flashlight on my soul. The woman sitting next to me was proving my premonition. She knew everything about me. Everything that was important. \n\n\"You were looking for me,\" she said, not saying it as a question but as a fact. Of course she knew. \n\n\"Yes,\" I said in a resigned tone. She was pounding in the fact that she could read me. I wondered what she would say or ask me that would shred whatever defenses I had left. I had to know how she knew, or if she could even explain herself. \"So how did you know that?\" \n\n\"My address was written on the pad of paper sitting on the passenger seat of your car.\" \n\nOf course. Now I really looked like an idiot. Maybe she couldn't read my mind. Perhaps everything could be explained, but that Judy Garland thing got me. Any shred of perceived privacy I had was vaporized by that observation. \n\nHer comment did hurt me, even though her answer was truthful and innocent. It hurt because I looked stupid. She stroked my hand with hers. The sting was replaced by a feeling of warmth and gratitude. She was consoling me. The emotional sting was followed by physical pleasure. I wanted more. I didn't know why I wanted more. But whatever it was, I wanted it. I wanted that feeling again. \n\nShe must have known that. She stroked my hand again, but this time rested it on top of mine. Her hand, with fresh red nail polish on them, covered my hand. I relaxed. My eyes got a bit hazy. I then noticed that the color of her nails was the shade of red that I had pictured in my mind only moments earlier. I started to wobble in my seat. I wanted to lie down. I started to lean into her. She caught me before I could fall off my stool. I was unnerved by her. How did she know when she had her nails done that the color she selected was the one I was going to picture in my mind? I was falling, physically and emotionally. \n\n\"The color ... it was the one in my mind,\" I confessed. I was sure that she knew already. \n\n\"It's my favorite shade of red,\" she told me. And then to disprove my theory, she added, \"I've been wearing this color for thirty years.\" \n\n\"I guess we do have something in common,\" I said, this time right on target. \n\n\"Yes,\" she said, curling her fingers on her left hand so she could inspect the polish. \n\n\"Oh no,\" she said, but without a great deal of concern. \"I think my nail polish is chipped.\" \n\nI leaned forward to see the fingers on her left hand. The small fleck of polish on the index finger had chipped off. \n\n\"I'm sorry,\" I said, as soon as I realized that when she caught me from falling off my stool my diamond stud earring had hit her finger and chipped off a bit of nail polish. \"Now I owe you a new call box and a trip to the nail salon.\" \n\nShe smiled. It was a genuine smile. Then the smile morphed into something that was a bit more ominous. \"I'm sure you'll find some way to pay me back,\" she quipped. It sounded like it was in jest but it wasn't. What the fuck had I gotten myself into? But did I really want to get out? My head wanted to run. My heart wanted to stay. \n\n\"You'll of course join us for lunch ... that is unless there's someplace else you need to be.\" OK. She was back to the mind reading. Of course I had nowhere else to be. And she hadn't even asked me why I was looking for her. \n\n\"Why ... I'd love to ... but I don't want to put you out.\" I added the last part so I wouldn't sound desperate. Truth be told, the house would have had to have been on fire for me to leave at that moment. My heart had not only decided to stay, but was thinking about moving in. I wanted to spend every waking moment listening to this woman talk to me. \n\nShe threw her head back and let out a hearty laugh. \"Oh no. You won't be putting us out at all. In fact, it will be you that will be putting out to pay.\" \n\nMy eyes raised at her last remark. \"Excuse me?\" I said, my indignation suddenly rising. \n\nShe looked startled at my reaction. \"I said we'd like to put you up for the night if you want to stay.\" \n\nMy mind reeled. as my mind playing tricks on me? She was looking at me, expecting an answer. \n\n\"That would be lovely.\" \n\nShe leaned forward in her seat and wrapped her arms around me and hugged me. \n\n\"I'm glad.\" Her eyes sparkled again. I smelled roses. \n\n* * * \n\nI found myself seated in an atrium, between the woman/bodyguard I saw earlier on my left, and another woman, Asian in appearance, sitting on my right. The woman on my left was still wearing the same jeans but had changed into a cut-off t-shirt. The tattoos on her arms were green serpents circling her arms, as if they were crushing it. Her hair was bleach blonde, sticking up in spikes. She no longer was glaring at me, but rather sitting ready to enjoy a fabulous lunch. In front of each of us was a butter lettuce salad garnished with poached shrimp and grapefruit. I could smell the champagne vinaigrette that created a sheen on the lettuce leaves. \n\nThe woman sat on the other side of the table. One against three. The Asian woman made no move to introduce herself to me, but seemed to be lost in her thoughts. Her appearance was alluring, long straight black hair and porcelain skin, almost translucent. She was wearing a form fitting formal Chinese dress that flattered her figure. The elaborate gold embroidery was set against a background of green. I could swear it was Packer cheese gold and bay green, but I was not trusting my senses, including my sight. \n\n\"Cassie, meet Soo.\" She knew my name. She could have read it off my driver's license. \n\nSoo looked at me, her head tilting slightly to the side as she appraised me, wearing someone else's clothes. \"I like you,\" she said in the finest Queen's English. Her conclusion had the ring of finality. I thought it only fitting to reciprocate. \n\n\"I like you too Sue,\" I said with my Midwestern twang when pronouncing \"Sue.\" \n\n\"Soo,\" she corrected me with a different inflection, one that I didn't recognize. \n\n\"Soo,\" I said, butchering the pronunciation again. \n\nShe smiled at my feeble attempt. \"Soo,\" she said again for me benefit. \n\n\"Soo,\" this time the inflection improved. \n\n\"I knew I liked you.\" She looked at the woman and the woman gave a slight nod, acknowledging Soo's approval. \n\n\"So ... you were looking for me?\" This time it was a question demanding an answer. I sat upright, trying to show my best posture. ",
        "\"Why, yes. I'm a journalist.\" I said it as if being a journalist would answer all of her questions. \n\nHer response should have been expected. \"And ...?\" \n\n\"I was looking for Mistress X. Is that you?\" \n\nSoo, the burly woman (whose name I didn't know), and the woman all laughed as if I had just told the funniest inside joke, except I wasn't on the inside. I'm sure I looked befuddled. \n\n\"So you're not Mistress X?\" Now I felt like the biggest dumbass of all time. \n\n\"Of course not. I've been called a number of things, but not Mistress X. My name is Guinevere ... Guinevere Bouchaine. My friends call me Gwen. And I'm sorry, I didn't introduce Rita to you. Rita, Cassie. \n\nThe burly woman's face broke into a broad smile. \"I'm pleased to meet you Cassie.\" \n\n\"Likewise Rita.\" Her bark was definitely worse than her bite. Her tough fa\u00e7ade seemed to be just that, a fa\u00e7ade. Her smile betrayed her inner self. \n\nGwen pushed her salad to the side and rested her elbows on the table and placed her chin in the cup of her hands. \"Now tell me about this Mistress X, who you think I am.\" \n\nRita and Soo also gave me their undivided attention. I was going to have to spill my guts. I had nothing to lose at this point. Gwen probably already knew everything I was going to say. \n\n\"I started to research BDSM for an underground newspaper in New Orleans. Don't ask me how I ended up there. A journalism major from the University of Wisconsin. Anyway I have a friend who seems to travel in those circles ...\" \n\n\"What circles?\" Gwen interrupted my stream of consciousness, but it was clear that she was absorbing each word coming out of my mouth. \n\n\"You know ... the BDSM circles.\" I was displaying my ignorance for all to see. \n\n\"The BDSM circles,\" she repeated slowly, as if she had just heard that phrase for the first time. \"So you personally, you're not in that 'circle'?\" She was watching me dig myself deeper and was enjoying the show. I think Soo and Rita were amused as well. \n\n\"Well, no,\" I said in an attempt to create distance between me and my lack of knowledge about what I was talking about. \"But I'm a lesbian,\" I announced. I wanted to show them I was different. \n\n\"I like women too,\" Gwen announced, as if it were news to everyone at the table. The words again gained that crisp diction that announced her command. Of course she liked women. I wanted her. The scent of roses swirled around my head. \n\nI shifted gears in an attempt to get some traction before I completely lost control of the conversation. \"Did you live in New Orleans?\" \n\nShe thought about her answer. She was a cipher to me, and was deciding how much information she was going to mete out to me. \"I did. I lived there for many years before I retired here. Why do you ask?\" \n\n\"I'm from New Orleans.\" \n\n\"I think we've established that.\" \n\n\"So was Mistress X.\" \n\n\"I see.\" She was unimpressed by the coincidence. \n\nShe was going to make me work for every inch. I decided to take a shot in the dark. \"Did you know an Arlene?\" \n\nI could swear her face flashed a moment of recognition, but it passed. \"Arlene? Does she have a last name?\" \n\n\"No. I never got it. She was a Domme. And she seemed to have learned her craft from someone like a Mistress X.\" \n\nGwen put her forefinger to her chin. \"No ... no ... that name doesn't seem to ring a bell with me.\" \n\nShe seemed to want to change the subject. \"Tell me more about who you think I am.\" \n\n\"Well, everyone I talked to that knew a Mistress X said that she was older, much older than you. I think Mistress X's reputation crested about twenty years ago, so my guess is that she would be in her sixties, or maybe older.\" I knew I was treading on thin ice. After her age, why didn't I just ask her religion, and then maybe her weight? \n\n\"How old do you think I am?\" She asked the ultimate loaded question from which there is no escape. But somehow I felt the truth was in order. It was not possible for me to lie to her. \n\n\"Late forties?\" I ventured. I prayed she would not tell me she was in her thirties. \n\nShe looked at Soo instead of me. \"I think I like her too.\" \n\nRita leaned toward me and held her hand next to my ear so her whisper would only be heard by me. \"She's sixty-three next month.\" \n\nMy jaw dropped. I was thirty-two, and she looked better than me. I did not detect any surgical help. She was in the age range of my fictional Mistress X. But she was nothing like what I pictured. Before me was a casually dressed woman with blonde hair streaked with white. She had a face of a middle aged movie star who could still command an occasional leading role. She exuded elegance and refinement. I pictured someone who had dark hair, or grey hair, shorter, and lacking some of the social graces that came naturally to Gwen. \n\nI looked down. I remembered seeing the smooth line of my borrowed jeans, hugging my legs, and then the thought occurred to me that I might appear to be ungrateful. \n\n\"The clothes. I'm wearing someone else's clothes.\" \n\nGwen appraised me one more time, this time allowing her gaze to drop lower, to see my breasts straining against the fine silk garment, the buttons threatening to burst. \n\n\"They're mine,\" she said. \"After you fainted we had to carry you here. Scalp wounds bleed a lot, even superficial ones. I'm afraid there was blood all over your jeans and your blouse so we had to wash them for you. We didn't want to go through your luggage.\" I heard the clatter of the dryer running someplace. She pointed behind me. \"They're drying right now and should be ready to put back on shortly. I apologize for the fit. You're more ... uh ... well-endowed than me.\" \n\nI felt myself blushing. I was embarrassed. Now every word she was uttering had an effect on me, and the back handed compliment was pushing me off-balance once again. My hands moved involuntarily to cover the considerable cleavage I was displaying but I caught myself halfway through the futile gesture. Of course she would have already seen all of me when they were undressing me to change my clothes. I looked to her to say more. \n\n\"And don't worry about the clothes. You shouldn't be embarrassed. I'm the one that should be embarrassed. I had to grab something quick and I found the pants and blouse you were wearing in a bag of clothes I was going to donate to the local women's shelter.\" \n\nI looked at her wondering why she would give away such beautiful clothes. She read my bewildered look. \n\n\"Oil painting is a hobby of mine. I was working on a painting and a tube of dark blue paint splattered my clothes. Those are the clothes you're wearing.\" \n\nI was going to say something that was going to betray my social standing, if my well-loved Honda Civic that hadn't been vacuumed in six months didn't already give it away. \"I love the clothes.\" \n\n\"You're welcome to keep them.\" \n\nI know I smiled. She was giving something of herself to me. With her watching me, all knowing, I moved my shoulder slightly and smelled the sleeve of my slightly used silk blouse. A faint smell of roses. Naturally. It was if she was already leaving her mark on me, and I didn't know it at the time. \n\n\"So what exactly happened after I fainted?\" I wanted to hear the full story. \n\n\"Well, I caught you before you hit the ground, hence the wardrobe change.\" \n\nI realized I must have gotten blood on her clothes as well. Another instant apology started to bubble up as she was talking, but she was one step ahead of me. \"Now don't worry about my clothes. I'm sure my dry cleaner can get out the blood stains.\" \n\n\"I want to . . . \" I started to utter my offer to also pay for the damage to her clothes. \n\n\"Nonsense. You'll do nothing of the sort,\" she said curtly, neatly sealing my lips. \"Now as I was saying.\" \n\nShe looked at me to tell me that she brooked no further interruption to her answer to the question I asked. \"I caught you and put you in the back seat of the Bentley. I wrapped your head with a roll of gauze we keep in the first aid kit in the trunk of the car. I drove you back to the house. Rita drove your car. She helped me carry you to the mud room off the kitchen, and that's where we changed your clothes and cleaned your wound. By the way, Soo is a physician, so she took care of you. The wound clotted on its own.\" \n\nI looked at Soo. She was sitting there quietly as Gwen was talking. She turned her head slightly towards me. \"You'll be fine Cassie,\" she said assuredly. Growing up in the U.S., it amused me to hear a woman of Chinese descent speaking with a British accent. \n\n\"Soo trained in Hong Kong,\" Gwen added, solving the short mystery of Soo's accent and also reinforcing my belief in her mind reading skills. \n\nA loud beeping noise sounded as the dryer came to a stop. It was suddenly quiet in the kitchen, but for the sound of cicadas cutting through the moist heat of the summer. \n\n\"Ah, your clothes are dry. Would you like to take a moment to change back into your clothes?\" Gwen started to rise in her chair. \n\nMy mouth moved before I could stop it. \"No, I think I'll wear these.\" \n\nGwen looked pleased. She sat back down. \"Well, you look lovely in them. Much better than me.\" \n\nAnother blush. This one much more intense. I could feel my face burning. She was controlling my emotions without exerting any effort. It came naturally to her. She was studying my reaction. \n\n\"Doesn't anyone ever tell you that you're beautiful?\" she asked as if she was incredulous. \n\nI paused. The all telling pause. \"Well ... not that often.\" In truth, I couldn't remember the last time I was told that. Certainly not my last girlfriend. I'm not exactly sure why I hooked up with her. \n\n\"You are,\" she said emphatically, as if it were an established fact. \"And don't let anyone tell you otherwise.\" \n\nMy eyes started to drop to the floor. She was soothing my own insecurities about my appearance, perhaps irrational but who knows. \n\n\"I'd love to have breasts like yours.\" \n\nI couldn't lift my head, but I knew her eyes were on me, my nipples swelling and pressing almost painfully against the cups of my bra. I could see that the outline of my nipples were clearly visible through the sheer silk. The idea of her witnessing my arousal triggered a growing dampness between my legs. I pressed my knees together as if that would stop my body from telling her how much I wanted her. \n\nRita was politely eating her salad. She was using her knife to cut the last shrimp. Soo had taken a few bites. Neither Gwen nor I had touched our plates. \n\n\"You're not hungry, dear?\" her noticing I hadn't touched anything. \n\nI realized I wasn't hungry. I was always hungry and it was a constant battle for me to control my weight. I adored shrimp (I did live in New Orleans) and the salad looked enticing. But not now. My body craved something else. \n\n\"Uh ... no. Maybe it's the bump on my head. I'm not that hungry.\" \n\n\"I understand,\" she said, pushing her own untouched salad forward towards the middle of the table. \"How about I show you the house, and maybe continue our conversation?\" \n\n\"I'd like that.\" \n\nRita was finishing her salad and eyeing the one in the middle of the table. Soo was still pushing her food around her plate. \"And ladies,\" said Gwen as she rose up, \"please excuse us. And Rita, you're welcome to my salad. It would be a shame for it to go to waste.\" \n\nShe came around to my side of the table. I stood up. She offered her hand and mine melted into hers as she led me out of the kitchen. We were walking through a large sitting area with comfortable leather sofas and club chairs positioned near a dormant fireplace when she started talking again. \n\n\"You're probably wondering about Rita and Soo. Rita has been with me for thirty years. She rarely leaves my side. I helped her when she had a minor scrape with the law back she was in her 20's and she's been with me ever since. We have a ... complicated relationship. Soo and I have a less complicated relationship. She's my sub.\" She let it roll off her tongue as if she were telling me that Soo was her doctor. \"You know what that means don't you?\" \n\nI recalled what I had read online. \"You mean your submissive?\" \n\n\"That's right. Soo has been living here for two years.\" \n\nWe reached a wide, winding staircase. She gestured for me to go first. I walked up the carpeted portion in the middle and arrived at a landing and made a ninety degree turn to another flight of stairs. The hand railing was sculptural metal, a burnished grey metal, that felt cool to the touch as I gripped it. I felt an ocean breeze hit my hair as I reached the top. I was looking at the Gulf of Mexico, the stacking doors across the vestibule wide open, and the smell of the sea and the warm salty air greeting me. She took my hand again and led me across the vestibule so we could stand at the wide opening, to enjoy an unobstructed view of the white sand beach and the whitecaps as far as you could see. Dark clouds loomed far in the distance, announcing the arrival of a late afternoon shower. \n\n\"It's stunning.\" I looked to the right and then to the left, seeing the beachfront homes far in the distance on each side, and then downward to see her large rectangular pool and the large expanse of Bermuda grass surrounding it. Colorful beach umbrellas were opened, protecting poolside lounge chairs. Several varieties of roses adorned the adjoining garden. \n\n\"It's what I've always wanted.\" Her voice turned melodious again. I now knew she was in her element, probing with her questions and watching me. \"What do you want Cassie? Why are you looking for Mistress X?\" We leaned on the railing in front of us and stared out into the distance while she awaited my answer. \n\n\"I'm not sure.\" I truly wasn't sure. \"It started as a story for a newspaper that I'd been freelancing for. I'm an accountant by trade, but my true love is journalism. I wrote an article on the homeless encampment on the edge of the city. I spent a weekend there, in my tent, getting to know the people there. The editor liked my article and it was published. He asked me to write another one.\" \n\nI was struggling with whether I should tell her about my night with Franny and Mistress Arlene. I thought maybe now wasn't the time. \n\n\"I heard about BDSM and read up on it on the internet and sketched out notes for a feature length article. My editor liked my pitch, and encouraged me to write it. I started talking with friends and friends of friends and went from there. A recurring theme was this Mistress X. Apparently women came to New Orleans to seek her out. To be with her. She was reputed to be a dominatrix, one who could see you for what you were. Am I getting that right? Dominatrix?\" \n\n\"That's right.\" \n\n\"Well anyway, the more I heard about Mistress X the more it made sense to make her the focal point of the story. I asked around and was ultimately given this address from someone in Sarasota that claimed to know her.\" \n\n\"And who would that be?\" \n\nThis wasn't an investigation. I didn't need to protect my sources. I told her. \"Diana. I think Diana Larson.\" \n\n\"Ah, Diana.\" Gwen said it with a voice of recognition. \"Diana would think that.\" \n\n\"What do you mean?\" \n\n\"She probably heard about Soo and the nature of my relationship with her. She must have assumed I was this mysterious Mistress X.\" \n\n\"Another thing that intrigued me. It was rumored that Mistress X kept a meticulous handwritten diary. I can imagine the pages of that diary would have stories that would reveal the true nature of a relationship between and dominant and a submissive. Those kinds of stories are the centerpiece of an in-depth article.\" \n\n\"I see.\" \n\n\"And she seemed to hold some power over women. I was skeptical when I heard it. I don't think anyone can take away one's volition. I wanted to meet her and to understand why people have said that about her.\" \n\n\"Did you want to experience that?\" \n\nWhy was she asking me that? Was that an offer of some kind? \n\n\"What do you mean?\" \n\n\"The transfer of power. What it feels to surrender to another. To give yourself freely and completely.\" \n\n\"For my article?\" \n\n\"For yourself.\" \n\nThose piercing green eyes. Just like Mistress Arlene's. There was no place to hide. \n\nI could see the fine lines on her face, none detracting from her timeless beauty, as her eyes read me without me speaking. I sensed an inflection point in my life that hinged on my answer. The vast sea of blue in front of me brought about an unusual calm as I mulled over the answer to her question. \n\nI sensed she was going to reveal something about myself that I couldn't bring myself to admit. The articles, the interviews, the viewing of countless hours of BDSM themed videos, and of course Mistress Arlene, had drawn me to this moment. Was I simply titillated by the scandalous nature of the acts between consenting adults, acts of pain and humiliation that I had never experienced, or did it speak to my core? She knew I wanted this. She was forcing me to say it out loud. \n\n\"I want this ... for myself.\" I could feel my world expanding, like the magnificent vista I was witnessing. Submission was freedom for me. I chose to be free. \n\n\"Do you need to be anywhere soon?\" \n\n\"No. I took the week off to pursue this story.\" I wasn't planning on driving back to New Orleans until Sunday. \"But I do have to be back to work on Monday.\" \n\n\"Which is where?\" \n\n\"Bingham and Morrison. It's a regional accounting firm headquartered in New Orleans.\" \n\n\"I see.\" I'm sure she didn't. \n\nShe let go of the hand railing and turned her back on the view. \"Let me show you the rest of the house.\" \n\nWe left the vestibule and entered a long, wide corridor. There were two doors on my right that were closed. We walked by them, and Gwen never looked at them as we passed. At the end of the hallway, double doors were open to a master suite. In the middle was a large canopied bed with ornately carved wooden posts supporting a canopy of what looked like white Irish linen. The bed was oriented so the person in bed could enjoy the view of the water out of the set of French doors. \n\nWe walked past the bed and I couldn't help skimming my hand across the smooth ironed surface of the white cotton duvet cover. The hardwood of the bedroom gave way to the limestone tile of the bathroom, which was the size of the living room in my apartment. On my left was a bidet and double sinks contained within a countertop suspended from the wall. The countertop was a solid piece of wood, probably mahogany, with a marine grade varnish on it that glistened from the afternoon sun that was streaming through the bathroom windows. On my right was a free standing elongated oval tub that looked both beautiful and functional. Straight ahead of me was an oversized shower with double nozzles to accommodate two people. \n\n\"This is my special place. The place where I can spend hours, either soaking in my tub and reading a trashy novel or taking a long, hot shower.\" She said it with reverence, as if she were describing a private chapel. \n\nI would have killed for a bathroom like this. I had a one piece molded plastic shower stall in my bathroom. The bathroom door barely cleared the toilet when you opened it. \n\n\"Would you like to try it?\" \n\n\"Excuse me?\" Were my ears playing tricks on me again? \n\n\"I mean the tub. Did you want to sit in it?\" \n\nI did. I always wanted a soaking tub. I nodded and slipped off my canvas tennis shoes and stepped into the tub in my socks. I laid against the porcelain surface, the angle of recline perfect for a long, luxurious bath. \n\n\"Umm. This is heaven. I can imagine sitting in hot water up to my shoulders.\" I looked to my right out the windows and towards the open sea. The dark clouds were moving closer, and I could see faint jagged lines of light as lightening was hitting the water many miles out. \n\n\"Take one with me. Now.\" \n\n\"Now?\" I asked, startled at her invitation. ",
        "\"Did you want to learn more about yourself?\" \n\nThis was more than a house tour. I thought she might be interested in me. Her invitation confirmed it. But my reservations outside her gate came to the fore. Did I really want to know more about myself? The dark side? It was too tempting. Mistress Arlene gave me a glimpse. \n\n\"I do.\" I said it firmly and clearly with as much dignity as I could muster sitting fully clothed in her bath tub. \n\n\"Then ...?\" \n\nShe was staring down at me, laying in her tub, wearing her clothes. I used my hands on each side of the tub to push myself up so I could get out of the tub. She helped me get out. \n\nI started unbuttoning my blouse. The first button flew open and most of my bra was already exposed. Before I could continue her hand covered mine. \n\n\"Let me help you with that. But first wait.\" She went around me and plugged the drain and started running the water. The water was gushing into the tub as she circled back in front of me. I thought about what she would look like nude. The thought excited me. I would see all of her soon. I was afraid the damp spot in my panties was growing. I squeezed my knees together, willing my pussy to stop leaking. \n\nShe reached forward and unbuttoned one of the remaining buttons, and then the last one, deftly pulling the silk blouse open and then off as I helped her by turning my shoulders. She paused for a moment to look at me, my nipples threatening to break through the lacey material of my bra. She then reached behind me, unclasping my bra. I shrugged my shoulders to allow her to slip off the straps and my bra fell forward, her holding it in one hand. She regarded my breasts, and then ran the back of her right hand against the side of my left breast, pressing against it so my breasts were touching each other. I let out a contented sigh. \n\nShe helped me shimmy out of my/her form fitting jeans so I was standing there only in my socks and sopping wet panties. There was an obvious dark patch on my white bikini briefs. She hooked her fingers inside the waistband and slid them down my legs. I stepped out of them. She knelt and removed my socks and then picked up my panties. I was nude, and she still had all her clothes on. She wadded up the soiled panties into in fist and held her hand in front of her nose. \n\n\"You're wet,\" she said, stating the obvious. She smelled the panties. Again the knowing smile. \n\n\"You seem to have that effect on women,\" I observed. \n\n\"I guess I do. You smell nice.\" She extended her hand until it was under my nose. The familiar musky smell wafted from her hand. I was surprised that I didn't blush at her latest compliment, but instead felt a dribble of liquid meander down the inside of my thigh. She watched until the droplet travelled no more and then scooped it up and ran her wet finger across the top of her tongue. \n\n\"You taste good too,\" she noted, making a show of cleaning her finger with her mouth. \"Why don't you turn off the water and get into the tub? I'll join you.\" \n\nI turned off the separate hot and cold spigots and dipped my finger into the tub to test the temperature. Perfect. No longer self-conscious of my nudity, I lifted my leg over the porcelain rim and climbed in. I sank down into the steaming water until it covered my shoulders. It was as good as I had imagined. My heart started racing as I saw Gwen unbuttoning her blouse. She disrobed quickly, with her clothes in a heap on the floor next to mine. I hoped that my body would look as good when I got older. Her breasts were still firm, although now with a bit of sag to them, and some of her skin hung loosely from her long, slender arms, but aside from those minor imperfections she was still a looker, and I looked. The blonde to white hair in her pubic patch was neatly trimmed, and her legs were still perfectly proportioned. She climbed in the opposite side of the tub, the water rising to my chin. Her legs slid over mine, and my feet were next to her bottom. \n\n\"Isn't this cozy?\" she asked rhetorically. She moved her foot so was positioned between my legs. Her big toe went for my clitoris like a heat seeking missile. When she touched it, I almost leapt out of the tub. \n\n\"Jumpy, are we?\" She wiggled her big toe again, which caused me to suck in my breath. I was already on the edge and she knew it. Now I began to see how her game was played. Tease, touch, repeat, until my body wanted to explode. I slid on the bottom of the tub towards her, increasing the pressure of her toe against my clit. I wanted the blessed relief of an orgasm. She pulled back her leg just enough to deny me. She then leaned forward in the tub and cupped the underside of my breast with her right hand, hefting it to feel its weight. \n\n\"I really love your breasts. Are your nipples as sensitive as they appear to be?\" She grasped my left nipple between her thumb and forefinger and squeezed the rock hard nub while at the same time increasing the pressure of her big toe on my clit. My eyeballs rolled up and back as the sudden burst of pleasure threatened to overtake me. \n\nShe leaned forward. Her hair shone with reflected sunlight and suddenly the smell of fragrant red roses swirled around my head. I felt as if I were going to swoon. Her glossy lips touched mine, and the sensual touch of her wet skin made my own part to allow a slow dance to evolve between our tongues as my desire for her became all-consuming. Then, as if she sensed me tipping over the edge, her manicured fingernail traced its way along the inside of my thigh, us both knowing the destination, as the kiss became more fervent. \n\nAs her fingernail grazed my clit, the touch released a flood of pent up emotions, my mouth now hungrily pursuing hers. \n\n\"You want me,\" her voice low pitched, almost a growl. \n\n\"Ummm,\" was the only answer I could muster as her command over me became inevitable. \n\n\"Tell me ...\" she said, stopping her finger and causing me to thrust my pelvis forward. \n\nI had to fight through the fog of lust to gasp, \"Yes.\" \n\n\"You want to give yourself to me ... your Mistress.\" She used her thumb to grind it slowly against my clit, the mixture of my honey and the steaming hot water allowing it to manipulate my hardened nub like a joystick. I unabashedly moaned while I kissed her. \n\n\"Yes,\" I pledged to her. The emotional boulder I was carrying started rolling down the hill. \n\n\"All of you,\" she demanded. \n\n\"Yes ... all of me.\" I acquiesced. It was my free will, but no other answer formed on my lips. \n\nShe pinched my clit between her thumb and forefinger while using two fingers from her other hand to enter inside me, my labia eagerly parting to allow her to thrust them effortlessly inside me. My head fell back and I heard staccato breaths escape my mouth as I quickly ascended to a magnificent orgasm, \n\n* * * \n\nWas domination and submission just about sex? I found that it wasn't. In fact, the opposite. The next morning I found myself curled up on the end of the bed. Gwen was sitting up, on top of the covers, reading the morning news on her iPad, dressed in a sheer nightgown (and no panties). Her feet were next to my hands so I started rubbing them. \n\n\"Ummm ...\" she purred, as I traced my fingers across her arch, making her toes curl. \"Don't stop.\" \n\nI gave her my best version of a foot massage, kneading her foot as she continued reading. This was as pleasurable as the night before, laying on top of a thick down comforter, massaging my Mistress's feet, and staring out her bedroom window to see the whitecaps of the waves as they washed towards the shore. \n\nGwen snapped shut the cover on her iPad and raised her reading glasses so they were resting on top of her head. \"I'm getting hungry Cassie, are you?\" \n\nI drew my eyes away from the panoramic view of the Gulf. \"I've been told I make a pretty mean French toast. I saw that you had a loaf of egg bread sitting on the counter.\" \n\nHer eyes lit up. \"Perfect! I love French toast. I'll make a fruit salad to go with it. By the way, I took the liberty of having Rita retrieve your overnight bag. I've set you up in the guest bedroom at the top of the stairs.\" \n\nIt was so easy with Gwen. Infectious enthusiasm. No drama. I could see how her relationships with Rita and Soo were based on friendship and mutual trust, the building blocks of any long term relationship. I went to my room and took a long and thoroughly satisfying shower and then rifled through my overnight bag, finding my bikini and a sheer cover-up. When in Rome ... \n\nI went down the grand staircase barefoot, feeling glamourous wearing revealing swim wear and my sheer cover-up and nothing else. All I was missing was the sunglasses. \n\nGwen was already in the kitchen, working with Soo on the fruit salad. She stopped midway through peeling an orange. \n\n\"Wow, you look good enough to eat. Let's forget about breakfast,\" Gwen joked when she saw me in my revealing outfit. I let her eyes take their fill of me before I started on the French toast. My outfit was an unmistakable signal that I wanted her. Soo couldn't help but stare as well. \n\nI lightened the mood. \"Not until you try my French toast. You might decide it tastes better.\" \n\nGwen didn't want the mood lightened quite yet. She wanted to make it clear that if I stayed I was hers. She stood in front of me and used her finger to tip up my chin so I was staring directly at her. \n\n\"I doubt that.\" The voice of control and certainty. \n\nShe pulled the drawstring on my cover-up, allowing it to fall open. She slid her hand inside the cup of my skimpy bikini top, immediately re-igniting my desire. I shuddered. How could she do this? I thought. How could she dial up the intensity at will? To make me want her with just a few simple gestures and words? \n\nIn my mind, I must not have given myself fully to her, as I pulled together the sides of my cover-up. \n\n\"Uh, uh, no playing until after you try my French toast.\" I thought being playful would signal my interest without offending her. I knew instantly that I wasn't quite on the mark, as she gave me a stern look. \n\n\"After my French toast I may have punish you.\" She lightly slapped the hand that was holding the sides of the cover-up together. I let go, and my cover-up fluttered open again. \n\n\"Maybe after you try my French toast I may deserve it,\" I said lightheartedly, but inside I was wondering what kind of punishment that would be. My knees started get weak. This was turning into a high stakes breakfast. \n\nTrying to focus on cooking, I used the recipe my mom taught me. The one I used for hungry Packer fans on football Sunday. I was told it was legendary. Thick pieces of egg bread soaked in a mixture of eggs and a bit of nutmeg and cinnamon and my secret ingredient (rum), fried golden brown and covered with a dusting of powered sugar and doused with real maple syrup. \n\nI thought I died and gone to heaven in Gwen's kitchen. Every high end appliance and every piece of cookware imaginable. I chose a copper clad skillet for even browning and set about dipping the bread in a pie plate and then frying it until I had a stack for the four of us. Soo had made a pot of coffee and Gwen and Rita finished the fruit salad. \n\nThe table looked perfect. There were fresh cut flowers in the center, flanked by a stack of steaming hot French toast on one side and the colorful fruit salad, with strawberries, blueberries, sectioned oranges and sliced kiwi. We sat down and I watched expectantly as the three others started eating. Smiles of satisfaction were all around as the first round of French toast was gone in no time flat. \n\n\"Cassie, this is without a doubt the best French toast I've ever had,\" declared Gwen, with the others shaking their heads in agreement. \"Compliments to the chef.\" She bowed, extending her arm forward. \n\n\"Thank you ... Mistress,\" I said, paying her proper homage. \"Does that mean I won't be punished?\" \n\nSoo and Rita smiled. They seemed to know that once Mistress made her mind up to mete out punishment that there was no right of appeal. \n\n\"No, it means I won't be hungry when I punish you.\" Gwen stuck her fork into the new stack of French toast I put on the table. \"And thank you again for making this wonderful breakfast.\" \n\nWe talked and ate for another hour. I learned more about Soo and Rita, and even Gwen offered a few more tidbits about her personal life (no, she had never been married before, and yes, she, like Meg Ryan, was madly in love with Deborah Kerr in the movie \"An Affair to Remember\"). But what I saw was the comradery between the three woman and the love and respect they had for one other. I was already starting to fall into their lifestyle without being conscious of anything I was doing. \n\nWe washed all the dishes together and when I had dried and put away the last dish Soo and Rita discretely excused themselves. I imagine they knew they weren't needed for what was coming. \n\n\"Come here,\" said Gwen, but it was more in the Mistress Gwen tone of voice. She crooked her finger at me. \n\nI wiped my hands on a dish towel and stood in front of her, close enough to get a whiff of red roses. I knew my punishment might be coming sooner than I expected. She gripped my cover-up in her fists and pulled me tight against her. \n\n\"So my little slut wants to play with me?\" she said, her hot breath sending shivers up and down my spine. \n\n\"No Mistress.\" I tried not to babble but her standing so close to me, her scent was making me dizzy. \n\n\"You think bondage and discipline is practiced in dungeons and leather padded rooms, don't you slut?\" Every word she uttered pressed down on me, pushing me more and more under her control. She was filling every hollow crevice in me, completing me. \n\nJust the tone of her voice made me whimper, \"I ... I don't know ... Mistress.\" \n\n\"I can make you submit here, in the kitchen. Is that what you want?\" \n\nI wanted anything she wanted. And I wanted to submit to her. \"Yes,\" I said, too softly for her liking. \n\nShe pulled me even tighter against her. My breasts were pressing against her blouse, my nipples rubbing against her breasts. My knees felt weak again as even this slightest pressure on my nipples caused me to close me eyes to savor the pleasure. \n\n\"Tell me like you mean it.\" Gwen wanted me to acknowledge to myself that this is what I wanted. A clear head. No reservations. \n\n\"Yes, Mistress\" I repeated, this time loud enough for Soo and Rita to hear, if they were in the next room. \n\nGwen let go of my cover-up and put her arms around me, kissing me deeply. Our French toast was followed by an even better French kiss, our tongues in an erotic dance with one another. Our breathing became heavier, and before our passions got the best of us, Gwen used her hands to create a bit of space between us. \n\n\"Hold the towel bar.\" \n\nI felt that whatever control I may have had was gone. She held all the cards now, and I complied without question. There was a brass towel bar, counter height, in front of me. Gwen used two dish towels and bound my wrists to the towel bar and slid my bikini bottom off. I spread my legs, planting my bare feet about three feet apart. Gwen had retrieved a rubber spatula that I had used to mix the egg mixture (now washed and dried of course). She gave me a firm smack to my butt. The snap reverberated off the walls. \n\n\"Owww ...\" I winced as the rubber blade stung my right butt cheek. \n\n\"Another use for your spatula ... I rather like the weight.\" I could hear Mistress lightly tapping the red spatula against her palm. \"But it doesn't swing quite like a wooden paddle.\" \n\nI heard her swish the spatula in the air and then it connected with my left cheek, jarring me forward. \n\n\"OWWWW ... \" I cried. She had corrected whatever flaw she thought she had in her swing. She gave me two more smacks on each cheek, the intensity now making beads of sweat dot my forehead. The pain had flooded my mind. I couldn't focus on anything but the sound of her voice. \n\n\"You can have more ... if you ask nice.\" \n\nShe was kidding right? But as I was forming my answer a warm glow started lighting me from the inside. A new sensation. I felt wet ... real wet. I wanted to say no more, but, surprisingly I was overruled ... by myself. To my surprise, I heard myself say, \"Yes ... please Mistress.\" \n\n\"That's a good slut.\" \n\nShe laid on four more strokes, this time my rump now ablaze. I thought about Franny. How I wished I was her. And now I knew why. It was the insatiable need ... the gnawing want ... freed by the pain and only relieved by pleasure. I wanted to feel this, and finally I was. Stripped bare of all pretenses. There was no shame in admitting it to her. \n\n\"Please ... Mistress.\" I knew it was now that she wanted me to plea for my release. I thought I knew. But I was wrong. \n\nShe registered mock surprise. \"Why, my dear ... we've just started.\" \n\nShe said it as if she was surprised. But I was the one that was surprised. I was terrified. But then I remembered that Mistress was Gwen, and that she wouldn't do anything to harm me, but would only do something that in the long run I'd enjoy. My trembling stopped. This was part of the journey. \n\nI heard her rummaging through a drawer. There was a clatter of tools, and I heard the drawer slam shut. \n\n\"Good, I thought I left a pair of these down here ... you know ... for electrical purposes.\" She seemed to be muttering to herself but it was clearly for my benefit as well. The last part definitely. \n\nShe took another large dish towel and folded it lengthwise, using it as a crude blindfold. She tied it around my head so I couldn't see. Now there was little more that I could offer her. I was bound and blindfolded. My cunt was practically dripping onto the floor. What she said invoked fear in me, despite the words of comfort I said to myself. \n\nI could feel my cover-up being ripped and pulled off me, each tug twisting and turning me as the sheer fabric was rendered to tatters. Tender fingers untied the top to my bikini. I heard the snip of scissors, as each strap of the bikini top was cut off me. My terror increased in intensity to a point I wanted to scream. The residual pain and the anticipation had brought me to this point. I opened my mouth ... but nothing came out. \n\nThen I felt something wonderful. She had taken a nipple on one of my hanging tits and pulled it deep in her mouth, the moist heat of her breath and the warmth of her dimpled tongue plunging me into a pool of pleasure, my heart swimming in it. Her tongue swam around my nipple and the rim of my tit as it widened with each swirl, making my head slump as the muscles in my neck relaxed. This was sin. Her tongue. It danced on my tit. She nibbled on it. I wanted more. She gave me more. The pain emanating from my butt now pushed my pleasure higher with each lash of her tongue. God, no one had ever sucked my tit like she did. \n\nThen heaven again as she moved to my other nipple, this one hard and needy. She was worshipping me. But why? \n\nThe answer was not what I expected. It was the bite of a serpent on the base of my just pleasured nipple, still wet from her tongue. It bit hard and its bite was unrelenting. Now the pain overwhelmed all other thoughts in my head. It was the bite of an alligator clip on my nipple, a ferocious pain that I had not yet had the pleasure to meet. \n\nBut then, of course, to complete the act, my bare breast hanging heavy and my clipped nipple just starting to soften when the bite of another clip on my untended nipple became a pulsing laser of searing heat that pushed me body to writhe as the pain attacked in waves. \n\nPlease, Mistress, why? I said over and over to myself to stop me from crying out as the pain made me shake the towel bar and test the strength of the ties that were binding me. \n\nThe pain throbbed as I cried, full-throated, as the clips let their insidious teeth bite me where my flesh was the most succulent, and the most tender. I was shaking and screaming to the point I was certain I was going to pull the towel bar from its moorings when the clips were removed and pain in left breast, and then the right, gave way to pleasure that was too intense, like the volume at 13 when the scale stopped at 10. The blood surged into my tortured nipples, agitating my whole body as my nipples came alive in a white fiery heat. I could do nothing to control my body to withstand the crescendo of feeling. ",
        "The pain faded to a dull roar and gave way to pleasure as my nipples regained feeling. My honey was hanging in droplets from my trimmed bush as Mistress took what was hers to take. She rammed two of her fingers into my sodden cunt, plundering me with her wiggling digits. She willed me to cum and pushed me over the cliff with each thrust of her fingertips, exploring every crevice, until I begged her to stop. I was cumming over and over and she had wrung every ounce of strength from me. It was pleasure without end, limited by my capacity to receive it. She knew my limit and I did not. She stopped when she wanted to. \n\nI hung there limp, my wrists reddened by the taut material binding them. My breasts were breathing the fire of the alligators that had bitten them. And down below, she had taken me with her fingers, cumming at her command until it was her will that I stop. What could I think of this experience? There was nothing I could compare it to. I had no energy. I knew that. But I knew that if Mistress asked me to get up I would summon the energy to do it. I was hers. I was hers to command. \n\n\"I'll be back sweetheart,\" she said tenderly. I heard her leave the room and then two sets of footsteps coming towards me. \n\nRita untied my wrists and the blindfold and then helped me so I was sitting on my sore rump. I was naked but I didn't care. Mistress had stripped me of my inhibitions. I was with my sisters. They were welcome to see all of me. I sat there, maybe for five minutes. My wrists felt much better, thanks to the salve that Soo rubbed into them with her gentle hands. Soo seemed to take pleasure in working the salve into my sore nipples, taming the fire that still burned within. Rita brought me a glass of ice water to revive me. Mistress was nowhere to be seen. \n\nI caught my breath. It was the greatest experience of my life. She knew me. She knew how to play me. To make me sing for her. I cried an aria for her as she brought me down and then up and then down even further and then up even higher. I was an instrument played by a master. \n\nThen Gwen walked in, now dressed in a fashionable suit, looking every bit the executive of a large corporation. But she shifted roles to the interviewer, and I was the interviewee. \n\n\"So how was it?\" \n\nThat was about as open ended a question as I could get after the ride of my life. I remember my saying \"It was awesome.\" At least that's what I was told I said. I was not exactly lucid at that time. I had barely a flicker of energy. But she asked me a question and I summoned the energy to utter a few words. \n\n\"You were awesome,\" she fired back. \n\n\"I was?\" There was surprise in my voice because I was. \n\n\"I've never been with anyone who could instinctively move with me, to allow me to push you to the edge of the limits I thought you could bear. People I've been with have endured more pain than you did, but the pain lit something inside you. I've never been able to adduce a reaction like I got from you. It was beautiful to watch.\" \n\nI was sitting Indian style on the floor. She was sitting across from me, her legs folded underneath her. She pressed herself up to a standing position and reached for a small book on the counter. It was a leather bound book. The book had a leather strap that had a keyhole on the front, the strap keeping the book locked shut. She sat back down and placed the book in my lap. I looked down. The leather cover looked aged, the surface gaining a patina from being handled so many times. She reached around her neck and unclasped a fine gold chain that was hanging around it. Hanging on the chain, but tucked inside her blouse, was a small brass key. She laid the key on top of the book. She waited for me to open it. \n\nMy hands were shaking as I tried to fit the tiny key into the keyhole. I used my other hand to steady it, and unlocked it. I opened it up and the cover bore the illustration of a single red rose and the year, 1999. There was a yellow sticky marking a page near the end of the volume. I opened the book to that page and starting reading the entry. \n\nOctober 21, 1999 \n\nDear Diary, \n\nI met the most delicious woman today who I'm sure will be my sub. She's beautiful and fresh, and eager to learn the secrets that I possess. It'll be a beautiful journey for us both. She happened upon me in a chance meeting with a mutual acquaintance, and soon we were sharing our most closely guarded secrets. I told her that my dark secret was to dominate another. To accept the willing surrender of a woman to me. And her wish was a mirror of mine. To be controlled by another. To bend to her will. To gain strength from it. To experience unimaginable pleasure. \n\nHer name is Arlene. \n\nLast night we took a bath together . . . \n\n* * * \n\nSo it was true. It was her after all. \n\nWe were both reliving her diary entry from twenty years ago. \n\nI looked into her eyes, probing for the answer. Could she learn to love me as an equal and dominate me as her lover or was she just using me as a pawn for her amusement? \n\nThat was for me to discover."
    ],
    "authorname": "soppingwetpanties",
    "tags": [
        "bondage",
        "domination",
        "female",
        "femdom",
        "lesbian",
        "punishent",
        "spanking",
        "submission",
        "submissive"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-diary-of-mistress-x"
}