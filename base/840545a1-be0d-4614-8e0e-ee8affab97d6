{
    "title": "Any Chance We Could Ch. 33",
    "pages": [
        "This chapter is not meant to stand alone. Please begin at the first chapter to appreciate this tale.\n\nFriday, October 26\n\nAt 2:00am CDT the earth shifted on its axis.\n\nScott was inside Carol for the third time this evening and was coming in her womb as she shuddered, sighed, and said \"I Love You, Scott, I Love You,\" and came.\n\nMary Claire and Erin, who was on the bottom, were mutually masturbating each other to an orgasm, the last of many this evening as Erin loudly came just as Mary Claire pulled her fingers out of Erin's pussy she too came albeit less loudly than her lover. Katrina and Ashley had their heads buried between each other's thighs in a 69 position pleasuring each other. With two fingers vigorously moving in and out of Ashley as her lover had three fingers in her, through the membrane that separated her dearest's bowels from her womb Katrina could feel the plug in Ashley's ass. Energetically thrusting her hips upward Ashley's orgasm preceded Katrina's by a few seconds. Katrina and Mary Claire used the last of their energy to turn around, embrace and kiss their lover. All four sated women lay exhausted, content to hold each other silently as their breathing returned to normal and the sweat cooled on their bodies.\n\nThrough the partially opened door the sounds of lovemaking in the girls' room floated into the master bedroom as Scott held Carol's head and shoulders against his chest with his fingers entangled in her mane. When the sounds from the other room died off Carol raised her head and with a mischievous grin whispered, \"It sounds like they all had a glorious time. Have you ever wondered after you've had sex what your lovers and friends might be doing along the same lines?\" Scott shook his head, but now that the idea had been planted in his mind he couldn't help wonder.\n\nEight and a quarter miles away in her Des Peres townhouse Cheryl Babcock was alone in her bed with two fingers pinching and rubbing her clit while her vibrator inside her pussy brought her to an orgasm. She barely succeeded keeping from moaning aloud. While momentarily somewhat satisfying her physical need, she cuddled against a king sized pillow and wished that there was a half-attractive man in her bed to satisfy her deeper need for human intimacy. John's frequent and long business trips had always been tough on her. She had a few opportunities over the years to be unfaithful, yet always remained faithful to him, which is more than she could say for him she ruefully reminded herself.\n\nLittle did she know that on the other side of the closet wall her son Max was stroking his dick inside a discarded stocking of his mother's he'd found draped over the wastebasket in her bedroom. His favorite image filled his imagination as he came into the stocking and hand. Not long after, a less horny young man fell asleep thinking of his sister, Beth. Also unbeknownst to Cheryl her spirited daughter Beth was rubbing her own clit with her hand inside a stocking with images of her brother filling her mind as she too climaxed quietly. Less than forty-five minutes earlier she'd seen Max's erection as he had gotten out of the shower not expecting her to be sitting on the toilet peeing.\n\nJohn Babcock was in a Boston hotel room with his paramour and her teen-aged daughter. John was pounding into the teenager while her mother knelt beside them stroking her fingers in and out of her own cunt. As John came inside her nineteen year old daughter she groaned and whimpered through her own orgasm. Seeing John fuck her daughter was more arousing than she'd anticipated. As she pulled her fingers from her dripping vagina she hoped that bringing her daughter Meredith to their bed would have the desired results. She was madly in love with John and was hoping that he'd divorce his wife and marry her. Her own mother had told her repeatedly when she was a young woman that for a man she deeply loved a woman should do anything to demonstrate that love and her commitment.\n\nIn his Arnold home Karen Godwin's father was quickly stroking his cock in an out of Karen's wet opening while she was bent over the back of her parent's living room couch. With three cameras capturing their activities Karen and her father came almost at the same moment. Her mother who was sitting on the couch masturbating with a vibrating dildo and kissing Karen spread her legs wider for the camera to capture the moment she released a small squirt. They next day Karen would start to edit the digital recordings not only for their personal enjoyment but also for an adult home movie series she produced for distribution.\n\nWhile his partner was making love to Carol, Emerson had been between Hazel's legs eagerly lapping at her pussy. He was more than pleased that over these last days his wife had become more adventurous. As one hand ran across her nylon-clad ankle he couldn't help dream that maybe, just maybe, if the love of his life continued to evolve that he may realize his deepest desire, to put an anklet on her to signify that he had a wonderfully hot wife. But he reminded himself, Keep your dreams realistic Emerson. That one will always remain a fantasy.\n\nAs she approached her second climax, Hazel tugged on his hair and cried out for him to fuck her. She had never used that word until these last days but he loved hearing it roll from her tongue, particularly when in the heat of passion it was filled with lust and desire. He did her bidding and entered her weeping pussy forcefully. She groaned with satisfaction as he repeatedly thrust into her about every second. He looked into her flaming eyes as the love of his life drove her hips upward to meet his downward strokes. In a matter of moments she was coming, and two thrusts after she started to climax he too came spilling his semen into her. When they finished they lay on their sides holding each other, looking into each other's smiling and contented face.\n\nAs her fianc\u00e9 drifted off to sleep in St Louis Veronica was licking and sucking Felicity's pussy while Felicity was slowly stroking her well lubricated middle finger in and out of Veronica's asshole and nibbling Veronica's clit. Until just now she'd allowed no one to play with her asshole in that way but Felicity had caught her off-guard. Carried along by the moment and despite initial wariness, Veronica allowed her to continue and was pleased that she'd done so. As Veronica shuddered and came along with Felicity she decided to see what it would be like for Scott to take her in the ass.\n\nAngie and Joceline, the limousine driver and the concierge, were in the classic 69 position next to them on the bed, simultaneously groaning and vocalizing their previously unprofessed desire and love for one another. As Veronica watched the two lovers come together for the first time she couldn't have guessed that she'd been instrumental in bringing together what would become a lifelong couple.\n\nAcross the hall in Edith's suite, Grace, impaled on Edith's strap-on was happily enjoying sex with her first woman. As she was coming so too was Edith who had an egg buried inside her pussy. As their climaxes continued, to drive the intensity even higher, Edith slid up the vibrator controller on both the egg and the strap-on attachment to the highest level. Grace's eyes widened at the sudden and intense vibration. She moaned her delight as a powerful climax rolled on and on for nearly forty-five seconds. As her eyes closed in sleep Grace knew that she would be ready and willing to have more experiences with women.\n\nLess than a mile from Scott and Veronica's home Angela and Georgina parted from each other's lips as they came for the fourth time that evening. Earlier Georgina confessed her bi-sexual desires, and of wanting to make love to the one young woman who was the focal point of many of her bedtime fantasies.\n\nFrom the blush on her mother's face and her mother's averted eyes Angela rightly suspected that she was that young woman. In response to her mother's confession, Angela made a confession of her own which then led each to verbalize to the other how much they wanted to make love to the other. Afterwards neither regretted what had occurred. The only regret not voiced by Georgina was that one day her daughter would fall in love with a young man and leave home. Before curling against her mother, Angela attached her lips to her Mother's swollen left nipple causing Georgina draw in a sharp breath. A moment later the new lovers kissed and cuddled in each other's arms as sleep overtook them.\n\nIn the meantime a quick twelve minute drive from the country club following a quiet evening watching a rented movie, Kim was coming in Gwen's mouth as she was returning the favor by pleasuring her partner with her mouth and fingers. They had spent nearly half an hour enjoying each other's mild and sweet delicacies.\n\nOn an extra large king sized bed Keith was coming into his vivacious mother-in-law's sodden pussy. Beside him his wife, Joy and her younger sister, were in a sixty-nine position eagerly and loudly pushing the other to come. Joy vigorously worked her palm from side to side across her younger sister's clit, sending waves of pleasure through her sister who Joy knew was too far gone to stand gentleness. It wasn't long before Joy ceased pleasuring her sister as her own body quaked and her breath became rapid and shallow as she approached her orgasm. Dave, his father-in-law was having his cock lustily sucked by his mother-in-law who seconds after Keith pulled out of her was happily swallowing a mouthful of her husband's semen.\n\nGazing lustfully into her dresser mirror that she'd angled downward Cathleen Morris looked at her soaking pussy as she masturbated herself to a gentle orgasm while wearing a black garter belt, black stockings and red four inch strappy high heels. With her other hand she caressed her own legs alternating between the bare thigh and the stocking welt. Though she'd been wearing stockings to parties for years, only in the last three had she taken to wearing them as she played with herself. She was thinking about throwing herself at Veronica and Scott hoping that either or both would have her. As she pushed herself over the edge of a stronger climax she closed her eyes as she tried to picture the scene and the look on Scott's face as she had her face between Veronica's thighs and him fucking her from behind. Ten minutes later, turning off the lights and pulling up the queen-sized covers Cathleen promised herself that if she would again find a man to love and he to love her that she wouldn't take him for granted and treat their relationship so carelessly. Though loneliness was a cold harsh teacher, she had learned her lesson well. Once again tears dripped from her face onto her pillow as she cried herself to sleep dreaming of her loves lost and hoping for a future love found.\n\n##\n\nAs I awakened to the shower running I realized it wasn't Carol, she was right next to me with her hand wrapped around my cock. \"Love me?\" she asked.\n\n\"Of course,\" I replied caressing the nearest breast.\n\n\"I meant 'love me', stick this beautiful thing in me again,\" she said as she raised up on her knees and straddled me.\n\n\"Same answer,\" I replied as she settled down on my erection. \"Mmm, you feel good this morning sweetheart,\" I continued as she began to move her hips gently yet pleasurably. We finally came together after about five minutes. As she bent to lie on top of me I took my hands off her breasts and wrapped them around her the middle of her back.\n\nI softened and fell out of her very wet pussy about three minutes later. As I did so she said, \"I have to pee, come with me.\"\n\nShe walked into the bathroom, sat and relieved herself. She put her hands on my hips and pulled me to her asking \"You too?\"\n\nAs I moved closer to her she scooted back on the long oval toilet seat, spread her legs, and said, \"Let's see how good your aim is.\"\n\n\"You want me to pee between your legs?\" I asked.\n\n\"Yeah, I wanna watch and ... .\"\n\n\"And what?\" I asked.\n\nI was doing a good job of getting between her legs into the bowl when she took me in her hand and said, \"Let me try.\"\n\nI was a better aim than she was because she wound up hitting the insides of both thighs and then aimed up between her breasts.\n\n\"Umm been awhile since I've been peed on,\" Carol was remarking as Erin was stepping out of the shower.\n\n\"What do you mean, did he pee on you?\" asked Erin reaching around me for a towel.\n\n\"Yeah, I'll tell you more about it some time. Come on, Scott let's shower,\" as she stood and ground her wet chest and stomach into my cock and chest while kissing me.\n\nI was processing what had just happened as I was soaping a washcloth to bathe her when she said, \"It's been a long time. Our wife and I played water sports when we lived together, I'll tell you about it some time, or you can ask her. I got the urge to try a golden shower with you as I got out of bed. Did I offend you?\" asked Carol.\n\n\"Offended, no. Surprised. Pleasantly surprised, yes. I've long had a desire to experience a fetish of that sort.\"\n\n\"Well, maybe we, the three of us can explore that sometime,\" she smiled as she was washing my groin.\n\n\"Did you say 'our wife'?\" I asked.\n\n\"Ooops, I think I did,\" grinned Carol.\n\n\"Forgot the 'y' did you?\"\n\n\"Perhaps not,\" she replied. I wasn't sure how to reply. Was she teasing me or was she telling me something about her relationship with Veronica?\n\nAfter I shampooed and rinsed her hair we stepped out of the shower and began toweling each other off as a nude Mary Claire came into the bathroom. She squeezed by us into the shower laughing, \"You need more showers or bigger showers if you're going to entertain as many ladies as you did last night.\"\n\nI left the bathroom and put on a pair of boxers then leaned against the door jamb to watch Carol dry her hair. What a way to start a day, I thought watching her ass jiggle and her breasts move as she worked on her hair. I wonder what she meant last night and her 'our' just now, Veronica and I'll have to talk about that. Before both she and Mary Claire were finished I left to fix coffee.\n\nCarol and Mary Claire had a short conversation before leaving the bathroom. Mary Claire told Carol, \"I want to remain with Scott and Veronica as their live-in maid and sex toy.\" Carol sensed that Mary Claire has a subservient side and after they walked into the bedroom Carol took a card from her purse and gave it to Mary Claire. It was a plain parchment card with only a phone number. Carol said, \"Call this lady, she'll help you clarify your desires and how to refine your skills. Address her as 'Mistress' and tell her that I gave you the card.\"\n\nShortly after eating some toast and drinking a few cups of coffee Carol and Erin left in their office attire. Mary Claire wearing low heeled slides and a long tee shirt stood next to me as I drank my coffee. She put her lips to my ear and said, \"Dad, I need you to love me. Right now!\"\n\n\"Right here?\"\n\n\"Yes,\" she hissed. She swiftly pulled off her shirt, bent over and held onto a kitchen stool. I lowered my pants and boxers and after rubbing the tip of my cock in her drenched slit, I entered her in a series of short probes. After feeling her cheeks against my pubes, I slowly began fucking her. Katrina and Ashley came into the kitchen to say goodbye. They paused to watch for a moment. Then Katrina lightly caressed Mary Claire's ass as she kissed me. Ashley groped Mary Claire's swinging breasts and kissed her lightly on the lips.\n\nAs they were walking toward the door, Ashley quietly said, \"Mary Claire's got a nice ass, don'cha think? Three more weeks sis and we can fuck Dad every morning too.\"\n\nAfter they closed the door Mary Claire and I mutually came. When I softened and slipped out of her pussy, she turned, put her arms around me and passionately kissed me. \"You don't care if I call you Dad, do you?\"\n\n\"No, not at all,\" I replied. Veronica and I have a lot more to talk about. Now a third young lady calling me 'Dad' and one gorgeous redhead calling Veronica 'our' wife. God, my life is good!\n\nI stepped out of my pants and as I turned to go upstairs Mary Claire pulled her tee shirt back on. She followed me into the bedroom and sat on the bed while I changed. \"I surely do like to look at you. You're a very handsome man. By the way, I had a good meeting yesterday at Washington University.\"\n\n\"Thanks for the compliment and I wondered when you were going to tell me about your visit. Though I guess we didn't really have time yesterday to talk, did we?\" I replied.\n\n\"No. The Dean Emeritus and both the Deans of the Art and Architecture Schools were impressed with my work, enough that they had me take a Mensa exam and I guess I scored well on it. They told me I should have been taking Advance Placement and Honors classes in high school. I got a whole packet of stuff from the admissions office and I need to take either the SAT or the ACT test. All three of the gentlemen said they would write support letters for me. Oh, I also met a nursing student from SLU who's mom teaches at Wash U. I'm worried about the tuition, though,\" she concluded.\n\n\"Get accepted, and don't give another thought to the cost. It'll all come together,\" I smiled. If necessary I'll write a check, I thought.\n\nShe stood and I kissed her goodbye while enjoying a bare ass cheek in either hand. \"I feel your semen running down my legs and I love it,\" Mary Claire grinned.\n\nTwenty minutes after I left for the office Mary Claire fetched the card Carol had given her. Picking up her cell she dialed the number. When a woman answered, nervously Mary Claire said, \"Mistress? Carol said I should call to set up an appointment to talk with you.\"\n\nThe woman had apparently been altered that Mary Claire might call her. In a matter of minutes Mary Claire had an appointment for Monday morning at 10. She carefully noted what she was to wear that morning. A very short skirt, panties she was to remove before meeting her, thigh high stockings, a tight top but not a blouse and shoes with at least two and a half inch heels. She also noted the convenience store from where she would again call the number at 9:50 to learn the woman's address. With a racing heart Mary Claire put down her cell phone wondering if she had the courage to go through with the meeting.\n\n##\n\nCheryl was standing at Grace's desk and warmly greeted me. \"Coffee's in your office and Emerson wants to you to come see him as soon as.\"\n\n\"Let me guess, reception told you I was in the building. Very thoughtful of you Cheryl. Are we still on for lunch?\" I asked.\n\n\"Yes,\" she smiled.\n\nI poured a cup from the carafe and headed down to Emerson's office. He motioned me to his couch as he was ending a phone call. He walked around to a guest chair and sat. \"Your future wife has given me more happiness than I ever imagined I'd enjoy.\"\n\n\"You slept with her last night? I thought she was in San Francisco?\" I replied with a straight face.\n\n\"No, no , you smart ass. She recommended that Hazel talk to the minister who's marrying you and when we got home from dinner we fucked in the front seat of the car for starters. And after we got to the bedroom she wanted me to move our dresser around so we could watch ourselves in the mirror. I even ate her, now that's never happened until now.\"\n\n\"I had a feeling that Hazel had opened up last night. First the dress she wore, second the constant contact you two had with each other, and the kiss she gave me when we were leaving. I'm glad that Veronica was the catalyst. Hazel has always been a beautiful sexy woman to me for as long as I've known her. We, the four of us, need to have dinner and an evening together sometime. Tonight at the club doesn't count, my three girls'll be there,\" I explained.",
        "\"So will Kim and Gwen,\" interjected Emerson.\n\n\"Really, does Hazel know that?\" I asked.\n\n\"She's inviting them this morning,\" Emerson smiled. \"Can I ask you something?\"\n\n\"You've never held back in the past, why ask now?\" I responded.\n\n\"Well, its personal. Did you sleep with those two women, Carol and Erin, last night?\"\n\n\"Carol yes. She spent the night in my bed. Erin spent the night with Mary Claire, Ashley and Katrina. I've slept with Erin, just not last night. In fact I fucked Carol again before our shower this morning and Mary Claire at her request in the kitchen before I came here and I assume you're using 'sleep' for 'fuck'?\" I laughed.\n\nA somewhat sheepish Emerson replied, \"Ah, yes, sorry I was trying to be circumspect. My real question is how do you manage to keep that 'harem' I see every time I'm at your house, satisfied?\"\n\n\"You mean physically or psychologically. Physically, I take a daily Cialis. Psychologically, I love them all. I really really love women and treat everyone of them with the utmost respect and reverence. When I make love to them it's all about them. When I compliment them it's about them, when I touch them it's about them. My reward is to be accepted by them. If we have a disagreement, we don't part until it's been resolved. There's no jealousy in my household. Evidently all the women are bi-sexual and have no problem sharing their women with me, nor would I with them or making love to each other if I'm with someone.\"\n\n\"Wait, Veronica and your daughter too?\" interrupted an astonished Emerson.\n\n\"Veronica, Katrina, Ashley, Mary Claire, Cindy, Carol, Erin. Yes.\" I replied. Mary Claire's mother and Kim too I thought to myself.\n\n\"Hmmm, that's almost too much information. One last question, you don't have to answer but it's a comment that Veronica made that evening I had dinner at your house. Have you made love to Katrina?\"\n\n\"Without penetration yes, same for Ashley. I suspect that full intercourse is in our future though.\"\n\n\"God, that's arousing.\" Emerson shook his head.\n\n\"So ... you've thought about Kim, then?\" I asked.\n\n\"Kind of,\" back to another sheepish look.\n\n\"Have you asked her.? Have you given her any hints that you'd like too? Has she given you any indication? Have you talked to Hazel about it?\" I asked.\n\n\"No, dammit I haven't.\" he responded. \"Even with her new playful spirit there's no way I could even tell Hazel such a fantasy. I'd be sleeping on the couch for a month or more. I also doubt that Kim has ever had such an idea pop into her head.\"\n\n\"Tonight make sure you dance with her, you'll know if she's thought about it,\" I suggested. I knew damn well she had and the night she'd spent in our bed was wonderful.\n\nCheryl interrupted on the intercom reminding Emerson that he had a appointment waiting for him downstairs. \"If we don't talk before tonight, congratulations on being a 'newlywed '. Certainly clears out a lot of brain fog doesn't it?\" I smiled as I stood and patted him on the shoulder on my way back to my office.\n\n\"Veronica's on your private line,\" smiled Cheryl as I walked into my office.\n\n\"Thanks,\" I replied. I looked at my desk clock and noticed it was ten-thirty which would make it eight-thirty for the love of my life.\n\n\"Hi, lover, how was your night with three new women?\" I asked.\n\n\"Satisfying, exhausting, erotic, wonderful. But I missed your cock. I've offered to drop Felicity and Edith in Jeff City since their departing flight is running about eight hours later than ours. We're going to try to leave a bit earlier so I'll be in your arms about fourish. I'll call you as we leave Jeff. And your date last night?\"\n\n\"Carol's a fantastic lover, but she said a couple of things last night and this morning that I need to talk to you about.\" I said.\n\n\"Like how much she loves you. How she wants to be a part of our marriage, how she wants to be my wife. That sort of thing,\" laughed Veronica.\n\n\"Why are you laughing, she's dead serious,\" I replied to her laughter.\n\n\"I know she is, handsome. Don't you think you could handle having two wives? It's been a running conversation between the two of us since she met you. Are you sure you aren't seeing her without me knowing about it?\" still laughing.\n\n\"No, you know who I see.\" I defensively replied.\n\n\"We'll talk about it when I get home. You do love her though don't you?\" she chided me.\n\n\"You know I do, but I don't know how to respond to her when she says something like that to me. Especially if you're not with me,\" I explained.\n\n\"It's alright handsome, Carol 's just being Carol. We can discuss a solution I've been thinking about this evening, or tomorrow or the next time the three of us are together, okay?\" she softly replied.\n\n\"I'm having lunch shortly with Cheryl Babcock. She's the woman who answered the phone. Her husband is being an unfaithful ass. Her daughter and Katrina have known each other since pre-school. Do you mind if I invite her and her daughter, Beth, over tomorrow afternoon to visit and for dinner? It's supposed to continue to be unseasonably warm.\" I asked\n\n\"I don't mind a bit, I look forward to meeting more of your past. I'd best run and get in the shower, I smell like pussy juice. Not that I mind, ... but. I love you and I'm glad that we'll be back together this evening . Bye, handsome.\" She said with a lilt in her voice.\n\n\"I love you too,\" I told her as I hung up. So she knows all about Carol apparently being in love with both of us. What could be a better dream than to be married to a blonde and a redhead at the same time? I asked myself. But seriously, that would never happen. Beside there's another woman with whom I could readily fall in love with if I don't watch myself.\n\nI moved some papers around on my desk, signed several letters and documents and solved a few problems. About fifteen minutes before noon I went to Grace's desk and asked Cheryl if she was ready to leave.\n\nAs we left the building it was warm and breezy. Cheryl was wearing a print wrap skirt and a light tan blouse with camel colored high heels and tan hose. As we walked the breeze would occasionally blow her skirt apart a bit. I suggested that we get some subs and eat in the nearby park. We chatted on the way to the sub shop and took our sandwiches, drinks and salads to a picnic table. Cheryl sat on the bench and I straddled it facing her. We talked about her marital problems and how Beth was doing at college. I asked if she and Beth would like to come to our house tomorrow, to visit and meet the rest of my family and importantly Veronica. Just as she was saying 'yes' an errant gust of wind blew under the table and blew the top front of her skirt all the way open.\n\n\"Goodness, I hope you got a good look,\" she remarked as she pulled it back over.\n\n\"Cheryl, I've always admired your legs, have since I first met you at a pre-school picnic.\" I smiled.\n\nI was telling her about the pending sale and assured her that her job was probably 98% safe. We were talking about her staffing when another breeze lifted her skirt again. Since we were in a setting with bushes on two sides, she asked with a demure look, \"If you like, I'll leave it where it is unless someone comes.\". She then turned toward me and put the side of one bent leg on the bench and left the other foot on the ground . \"I'm glad you like to look, it's been a long time since anyone's been interested,\" she sighed.\n\n\"I do like garter stockings. Seems like all the women in my house do too. You do know I can see your panties?\" I asked with a big grin.\n\n\"I hope so and I'm glad you're looking. This is fun,\" Cheryl giggled. \"But do look at my eyes from time to time to keep up appearances.\"\n\nWe chatted for another thirty minutes or so talking about Katrina and Beth and briefly about Marty. I told her that since meeting Veronica that Katrina lived full time with us and that Marty had just suffered a breakup with a man she was engaged to. Cheryl told me that she saw Marty occasionally around town as she was shopping, but never socially. \"We need to get back. It's been enjoyable talking to you Scott and I'm looking forward to tomorrow,\" she said as she pulled both sides of her skirt together and lifted her other leg over the bench to stand.\n\n\"Do you always do that so slowly,?\" I asked smiling.\n\n\"Only if I know someone's enjoying it,\" she grinned.\n\nShe put her hand though my arm after we disposed of our trash and walked back to the office. There were four messages in reception that Cheryl picked up as we went up to my office together. Cheryl looked through the messages, gave one to me and said, \"I'll take care of these.\"\n\nI walked into Emerson's office in response to his message. \"We're back on track, 85/15 split, we'll pay the bonuses pre-closing , 265 mil buy out, close on the 31<sup>st</sup>, funds transferred on Tuesday if we get them a signed contract this afternoon.\"\n\n\"Let's do it. I have checking account numbers for Katrina and myself, I'll get Marty's and I assume you'll handle Kim's. Do you want me to call Isador's widow, Clairise, is it?\n\n\"I have some of the information too but I'll have Cheryl verify what we have and get what's missing,\" Emerson smiled.\n\n\"I guess we'll want to open new brokerage accounts, why not Edward Jones? There's a noffice just down the street. I'll send Cheryl down to get applications and transfer forms and we can have the shares wired there on Wednesday morning. For almost 40 mil in new business, hell, I'll have Cheryl call and have the broker bring the forms to us.\"\n\n\"Do you know off the top of your head who owns what,\" Emerson asked.\n\n\"Well starting with the initial 50.5% for you and 49.5% for me, less the 5.5% we each gave Isador for his 10 million in 1993. I've given 6% to Katrina, and Marty still holds 3.25%. I assume you've given 6% each to Kim and Hazel?\"\n\n\"Yeah, that sounds right,\" he replied opening an Excel sheet on his computer. \"So, starting with 265 mil times 85% that's 225 mil in cash and 40 mil in stock. The kids and Hazel will get 13 mil in cash and 2 mil in their brokerage accounts. Marty will get 7 mil. You'll get 92 mil total and I'll get 87 mil. Not bad for 20 plus years of work, eh, partner?\"\n\n\"Not bad at all, cheers to us and the staff we've built. I'm looking forward to becoming a full-time husband and father to my brood,\" I said.\n\n\"You mean your rapidly growing harem, don't you? Every time I come to your house there's somebody new, ... beautiful and new, you're fucking,\" grinned Emerson.\n\n\"Aww, I told you this morning there aren't that many. My daughters, plus Mary Claire who seems to be there most of the time and Cindy who works double shifts and has an apartment, that's only four,\" I smiled.\n\n\"What about the woman and the young lady we had dinner with last night?\" asked Emerson\n\n\"Carol is Veronica's oldest friend and Erin is her niece, they don't live with us,\" although I sense Carol would like to, \"so don't count them. Or Kim either, I thought.\n\n\"Well, that's not as many as I thought, but you seem to have an active sex life, if you don't mind me saying,\" he replied. \"And it's still a harem.\"\n\n\"I owe it all to Veronica, she loves young pussy, actually any pussy, and she shares with me,\" I said matter-of-factly.\n\n\"Wow, she lets you fuck whomever you want?\" asked Emerson wide-eyed.\n\n\"Pretty much, as long as she participates or approves,\" I replied. \"I assume that Hazel isn't so free with you.\"\n\n\"She did mention during the heat of passion last night that she wouldn't mind you and Veronica watching us make love. I suspect it was more a fantasy and bedroom talk than her expressing what she would like to do for real. Maybe someday in the future it could happen and maybe some day she wouldn't mind watching me fuck someone else. As I mentioned a few months ago when we were at the convention in Indianapolis I would really love to see someone else fuck her,\" he said.\n\n\"Whoa, if any of that happened it would be a sea-change would it not? It sounds like there's already been a big change,\" I observed.\n\n\"Apparently between Veronica and this Reverend Evie, her sexuality has been awakened and she's inclined to be a bit less stuffy.\"\n\n\"More than a bit, I'd say. Hopefully it'll continue. Maybe the statement about being watched is something she'd really like to do.\"\n\n\"Maybe someday when your 'brood' is enjoying themselves we could 'drop by' and she could see what sexually freedom is,\" remarked Emerson.\n\n\"Keep your cell nearby and I'll let you know, and you could 'accidentally' arrive for a show\" I winked.\n\n\"Back to the sale, want to have the shareholder's meeting at the club on the 31<sup>st</sup>?\"\n\n\"Sure.\" Emerson replied.\n\n\"I'll get Cheryl working on it. Will we see all of you tonight?\" I asked walking out the door.\n\n\"Hazel 's told me she called Kim ... and Gwen, and they've said they'll be there,\" he broadly smiled.\n\nAs I stood to leave his office Emerson mentioned that we should immediately sell the short positions we'd taken on various stocks. Across the five different firms we'd already made a nice profit and while we expected it to increase, with the sale of the firm it would be best for us to sell all our leveraged positions. As I thought about it walking towards Cheryl I knew that each of us was taking a high seven figure profit, and that wasn't hard to swallow.\n\n\"Cheryl, come in please, bring a notepad, I'll need you to set up a meeting,\" I said as I approached her desk.\n\nI sat in a guest chair and she sat in the other one facing me. She very slowly and with a great deal of exaggeration crossed one leg over the other, held the pad in her lap and said \"Shoot.\"\n\n\"You really do have nice, ... very nice legs Cheryl, but as much as I enjoy looking I need you to do several things . First, book a private dining room at the Meadowlake club for Wednesday at ten and tell them we'll be serving open menu lunch at about 11:30 We'll need seating at a horseshoe table arrangement for 16. Second, look for Marty's checking account number in the contacts book in Grace's drawer. It should still be in there from when I used to wire her money. Then call Clairise Hoffman and get the same thing. If Clairise needs a ride Wednesday can you pick her up? You're more than welcome to stay for the meeting and lunch. Tell them Clairise that an Edward Jones broker, get a name, will be coming around on Monday to get information to open a brokerage account. Then call Marty and tell her the same thing. You can tell them that the company has been sold and will close Wednesday morning.\n\nThen, call the Edward Jones office down the street and tell them that we'll need them to open seven brokerage accounts worth about 40 million total. I'm sure that someone will want to come up here as soon as the market closes today to get the list of names and addresses. Oh, and confirm my club reservation for this evening. Do you always cross your legs that often?\"\n\n\"Only when I know it'll be enjoyed,\" winked Cheryl.\n\n\"Too bad there isn't a breeze in here,\" I replied.\n\n\"There is,\" she said as she flipped both sides of the skirt open and spread her legs. Since she was sitting with her back to the door she didn't seem to be in any hurry to put her knees together and cover her legs.\n\n\"Thanks for that Cheryl, much enjoyed and appreciated,\" I smiled as I stood. She also stood and the skirt fell back into place and I watched her nice ass move as she walked out of the office. I hope she and Veronica hit it off tomorrow, for a bunch of reasons, I sighed.\n\nMy cell rang as I was contemplating Cheryl's backside, it was Veronica. \"Hi handsome, we're about to take off from Jefferson City so we'll be there real soon. We had a nice tailwind so we're running early.\"\n\n\"Yes you are, I'll leave right now, pick up the girls and have my arms around you as soon as you get off the plane, I love you.\"\n\nAs I hurried out the door I asked Cheryl to call my house and tell my daughters that I was on my way. I told her to call me if they weren't there so I could go directly to Spirit.\n\nShortly after getting in my car, I'd thought to bring Veronica's today, my cell rang, it was Cheryl, \"No one's at home, I called Katrina's cell and she, Ashley and Mary Claire are shopping because they didn't expect Veronica until five or later. She said they'd meet both of you at home and not to stop for them.\"\n\n\"Thanks for doing that Cheryl,\" I said ending the call.\n\nI parked at the terminal. Just as I got to the desk to ask about their arrival, I saw a Citation taxi up and stop. The airdoor lowered as the ground crew chocked the wheels and rolled out a red carpet. Veronica was the first off, with Grace right behind her. As they walked in Veronica flew into my arms and we passionately kissed. As she dropped her arms, Grace embraced me next and we lightly kissed.\n\n\"Where are the girls?\" Veronica asked.\n\n\"You're a whole lot earlier than we thought you'd be, they're shopping and'll see you at home. You look beautiful and I've missed you terribly, and it was only two days. Are those your bags they're bringing?\" I asked.\n\nThe dolly held two suitcases, two soft-sided bags, two long hanging bags, and more than a dozen smaller hanging bags, boxes and shopping bags.\n\n\"Yeah, we did a 'little' shopping. The pilot started kidding us that we were going to be overweight with two additional passengers and all the shopping bags. It didn't all fit in the luggage compartment, so some of it rode with us in the empty seats. I know you'll like everything I bought,\" she excitedly said.\n\nThe woman at the desk asked where I parked and then directed one of the linemen to push the dolly around the terminal and into the lot. We met him in front and directed him to the car. After loading everything it was lucky that the girls hadn't come, we'd have probably needed to tie one to the top to make it home in one trip.\n\n\"The sale is going through, we'll close and have a stockholders meeting on the 31<sup>st</sup>,\" I told them as I was loading bags.\n\n\"When did you find out,\" asked Veronica.\n\n\"At about two o'clock,\" I replied.\n\nThey chatted about the trip as Veronica wedged herself against me wrapping one arm across my chest. God, it felt good and so natural to have her against me.\n\n\"Missed me, huh,\" she asked as she dropped her hand to my rampant erection and gently squeezed.\n\n\"Yeah, what a surprise,\" I replied with a grin as she returned her arm to my chest.\n\n\"Can we make love as soon as we get home?\" she purred.\n\n\"Oh, I thought you might want to wait until tonight after we got home from the club,\" I grinned.\n\n\"Yeah, I'll bet you thought that,\" as she leaned away from me and lightly punched my arm.\n\n\"Getting you between her legs is all she's talked about since we got up this morning,\" laughed Grace.\n\n\"Yeah, well you and Edith certainly seemed to be hitting it off on the way home, I'm surprised you heard anything I said since you joined us this morning,\" Veronica retorted.\n\n\"Scott, despite Felicity's attentions, she did only talk about you. Disgusting,\" laughed Grace.\n\nThe back and forth between the two continued and I got to hear a little about the 'sting' that my fianc\u00e9e and Felicity had put together with the promise of the hallway video on a DVD coming next week.\n\nAll three of the girl's cars were parked in the driveway as I pulled up to the front door.\n\n\"Will you come in for a drink Grace?\" asked Veronica.\n\n\"Thanks, but I'm exhausted. I need to get home and get to bed early if I'm to be of much use to those kids tomorrow. We're supposed to start at eight o'clock and it's a half hour drive to get to the high school,\" sighed Grace.\n\nThe girls came rushing out to welcome them home and with Veronica's direction got the bags and luggage sorted out and got Grace's stuff into her car and the rest into our foyer.",
        "\"Thanks for going with Veronica,\" I told Grace. \"Sorry things didn't work out as planned.\"\n\n\"Oh, Plan B, was terrific, and you're welcome,\" responded Grace as we kissed a little more deeply than we had at the terminal.\n\nVeronica and Grace embraced before Grace turned her car around and left.\n\n\"I've got something for each of you, but first Scott and I have something to do,\" said Veronica.\n\n\"You're gonna make love aren't you,\" smiled Ashley.\n\n\"Yep,\" I said. \"Now everyone grab something and bring it upstairs.\"\n\n\"Leave the long bag here, please,\" instructed Veronica. \"Can one of you press the skirt of the dress, I think it's a bit wrinkled and I want to wear it tonight.\"\n\n\"I'll do it,\" immediately said Mary Claire, \"as soon as I come back down.\"\n\n\"Thanks sweetheart. You're coming tonight aren't you?\" asked Veronica as we began to move toward the stairs. \"Come on handsome, I want you to get in my pants.\"\n\n\"Yes. Ashley and Katrina took me shopping to get something 'suitable' and I think we did,\" responded Mary Claire.\n\nThe minute we got into the bedroom, Veronica unbuttoned her blouse and unzipped her skirt. As she was unfastening her bra I discarded my shirt and pants. As Katrina and Ashley were leaving the room Katrina pushed the button to turn on the cameras. We met in an embrace and Veronica began pushing my briefs down and I her v-string. We broke to take a deep breath, Veronica in three inch heels, stockings and garter belt and me still in socks. I pushed them down and pulled them off as my dearest aggressively pulled the comforter and sheets to the foot of the bed. We embraced again and fell across the bed.\n\n\"I'm on top, handsome, fuck me, fill me up.\"\n\nI rolled onto my back in the middle of the bed and extended my arms to her, she knee-walked to me straddled my hips impaling her very wet vagina on me. \"Ohh, God, that feels so good,\" she moaned as she began raising and lowering herself a bit more each time.\n\n\"Two nights. Two nights without you in me, God, I missed you handsome,\"\n\n\"And I you,\" I breathed deeply meeting her with hip thrusts trying to get deeper each time. I reached up and began to pinch a nipple while I put my thumb on her engorged clit.\n\n\"Oh, yes, oh, yes, just like that,\" as she began to shudder. \"Jesus, a cock beats a finger any day, especially yours.\"\n\nI could feel the tip of my cock touching her cervix and she began gasping and coming. She bent down brushing her nipples across my chest kissing me as I continued to stroke inside her. I soon came, and as she felt my semen, she came again. Her vaginal wall gripping and caressing me as she did.\n\nAfter recovering for a few minutes our nude daughters appeared bedside, Katrina knelt at the foot of the bed as Ashley crawled to me from the other side, Veronica rolled onto her back next to me as Katrina pushed her legs apart and began licking our combined juices from her pussy. \"My, you do that so well, darling,\" purred Veronica.\n\n\"Had good teachers,\" said Katrina between licks.\n\nAshley wrapped her hand around my cock, kissed me and then moved her head southward to begin taking me deeply into her mouth. As she was doing that I patted her ass. She crawled around and straddled my face, lowering her wet and aromatic pussy onto my waiting mouth. After a few minutes Veronica and Ashley came almost simultaneously.\n\nAs Ashley climbed off me, I heard Mary Claire clearing her throat and I saw her standing in the doorway with several bottles of water.\n\n\"Join us,\" said Veronica extending her arms. Putting the water on a nightstand Mary Claire took off her tank top, bra, skirt and g-string. With her heels still on crawled toward Veronica. Veronica wrapped an arm around Mary Claire who immediately went for one of Veronica's nipples.\n\nVeronica then extended her other arm put her hand between Mary Claire's legs and entered her pussy with two fingers. As she caressed her g-spot Mary Claire came, gasping with Veronica's nipple in her mouth.\n\nKatrina crawled up next to me, lay on her side and deeply kissed me. I reached down to her pussy and entered her with one, then four slow strokes later added a second finger. After curling my fingers to find her g-spot her vagina tightly grasped my fingers. She came after I rubbed her g-spot for a few minutes while our tongues dueled. God I love making love to my daughter.\n\nI glanced over at the clock and saw that it was five already and with five of us to bathe and a whole evening ahead of us, I sat up. \"Shower with me Veronica.\"\n\nVeronica was first in the bathroom and as I walked in she was seated on the toilet. \"I'll be done in a minute, do you have to go?\"\n\n\"I do,\" I said, \"but I can wait.\"\n\nAs she turned on the water and I was peeing, I mentioned, \"A peculiar thing happened this morning with Carol.\"\n\n\"Something she said?\" asked Veronica stepping into the shower and lathering up a washcloth.\n\n\"And did,\" I replied. \"She was on the toilet just as you were but when I came in she scooted back and spread her legs a bit more and pulled me toward her and told me to pee between her legs. I was doing a good job when she took my cock and she changed where it was aimed. I wound up peeing on her thighs, her stomach and her breasts. She remarked that it had been a long time since she'd been peed on and mentioned that you and she had indulged in water sports sometime in the past. What was that about?\"\n\n\"Let me gather my thoughts and I'll tell you. ... Carol has always been pretty much a free spirit and I often wonder why we love each other so much. Before I met you I was considered reserved and rather conservative in my outlook. Obviously I've changed and I wouldn't go back for the world,\" continued Veronica as she was thoroughly washing my balls and cock. \"You do know what water sports is?\"\n\n\"It has to do with pee, doesn't it?\" I replied.\n\n\"Yes and someday I'll give you details but right now, how about putting that squeaky clean cock back in me,\" she panted as she turned around, bent over and put her hands on the wall. I entered her in three or four gentle strokes and she moaned \"Harder, handsome, pound into me!\"\n\nShe came in about two minutes, pulled off me and wrapped her arms around me and began kissing me. \"I love you Scott, with all my heart and soul. We have something beautiful and I've never been happier. I've never missed someone as much as I missed you for the last two days.\"\n\nI returned her affection and said, \"You are my life now Veronica, I love you more than I'll ever be able to express to you.\" As she broke our kiss and embrace I told her to turn around and let me wash her hair. If you've never shampooed your lover's hair in a shared shower you've missed something quite erotic. Unfortunately before we finished the water began cooling. I made another mental note to ensure that our hot water tankage was substantially increased.\n\nAs we were toweling off a nude Mary Claire came in and began to shower. She squealed that the water was cool. She quickly finished and got out. For the second time today I watched a beautiful nude woman brush and dry her hair. \"Handsome, I did something last night that I've never done before because I thought I wouldn't like it,\" she said looking at me in the mirror.\n\n\"And what could that have been?\" I asked.\n\n\"Felicity seems to have an anal fixation and I mentioned to her that my ass was virgin. Later in our love making she used a lot of lube and entered my asshole with her middle finger. Despite some initial reservations I relaxed and it felt good. Very good. Would you play with my ass tonight, just a finger for now. I know you've wanted to and I've heard Ashley moan when you finger hers. Will you?\" she smiled.\n\n\"Of course, I'm glad you asked tonight? I'd love to,\" I smiled in reply.\n\nI noticed that Veronica's pressed dress was hanging on the door to our closet. By 6:15 my women were all in stockings, v-strings and heels. Veronica was wearing her lavender lace top garter stockings with a matching garter belt. Katrina was asking Veronica for a pair of dark taupe seamed stockings, Mary Claire was in black lace topped and seamed garter stockings attached to a black garter belt and wearing black patent pumps with three inch heels. Ashley was wearing a light taupe pair of seamed garter stockings with a green garter belt and the pair of strappy green four inch heeled sandals that were Katrina's. Katrina had left with the stockings in hand and returned in a few minutes with them on and wearing a pair of red patent peep toe heels with black four inch heels.\n\n\"I have a thought,\" I said. \"Why don't all of you involved in our wedding ceremony wear seamed stockings. I can almost guarantee it'll get a rise out of those attending.\"\n\n\"Is sex on your mind most of the time?\" asked Katrina.\n\n\"Of course,\" I replied pulling her to me and deeply kissing her while caressing her ass with one hand and gently squeezing a breast with the other.\n\nI was pulling up my tux trousers and Veronica was finishing her hair and makeup when the doorbell rang. \"Expecting anyone?\" I asked anyone in range of my voice. Getting no response I shrugged my shirt on and headed down to the front door. I opened the door to a stunning brunette who was easily as tall as I. She was in a white tux shirt and bow tie, a very short black skirt with satin stripes down each side. She had on opaque black stockings and black patent pumps.\n\nShe looked me up and down as I was doing the same to her and as my eyes made the second transit of her shapely bosom I saw a gold colored name tag that said 'Lauren F., Best Limousines'. \"Am I early and are you Scott Appleton?\"\n\n\"No I guess you're right on time and yes I'm Scott, but I didn't order a limo,\" I replied.\n\nShe looked at a card in her hand and said \"This was ordered by Cheryl at Midwest Capital. I'm to take you to your country club, then wait and then take you wherever you and your party wish to go tonight. Are there five of you?\"\n\n\"Yes, my wife and three of my daughters. We should be ready to go in the next half hour, would you like to wait inside?\" I smiled taking another look at her long, long legs.\n\n\"No thank you, I have to wait at the car,\" she replied. Then laughing, \"You may want to zip up when you tuck your shirt in, but not on my account.\"\n\nShe turned and swung her nicely rounded ass as she returned to the car. She certainly had shapely muscular calves and thighs attached to the ass, I though as I watched her.\n\nI went back to our bedroom and Veronica asked who was at the door. \"Lauren,\" I replied.\n\n\"Who?\" she asked.\n\n\"Lauren, our driver for tonight. Apparently Cheryl or Emerson through Cheryl got us a limo to take us to the club, wait, and bring us back home.\"\n\n\"Is she pretty, this Lauren?\"\n\n\"Yes she is. She's quite tall, as tall as me in her heels, nice shape, an attention getting ass, pretty light brown hair, and a nice smile,\" I elaborated.\n\n\"What color are her eyes,\" asked Veronica with a raised eyebrow.\n\n\"Ahh, she fills out her tux shirt and they are a very light, bright blue,\" I smiled. \"Thought you got me, huh?\"\n\n\"Did you unzip while you were talking to her? Or did you forget to zip?\" Veronica laughed.\n\n\"I forgot, and she recommended that I do that when I tuck my shirt in,\" I wryly said.\n\nMary Clair came into our bedroom dressed in a royal blue creation that stopped mid-thigh, nicely fitted to her ass and with ample cleavage showing above the deeply scooped neckline. She was on her cell and ended the conversation with \"Yes, thank you, I'll see you next Thursday, and thank you for thinking of me.\"\n\n\"That was Gloria Graham, the SLU nursing student I met yesterday. She and her sister have tickets for a concert next week and her sister is now not able to go. Soo, ... she asked me. I'm looking forward to it. She seems like a person I'd like to know better. Like my dress?\" Twirling as she closed her phone.\n\nVeronica asked, \"Will your tits fall out of that? It's quite becoming, the color is good for you. I have some shoes that might match that color, if they fit, you're welcome to wear them.\"\n\n\"I have on a half bra and it's quite possible, if Emerson's there tonight I'll have to bend over a few times and see what happens,\" she giggled.\"Need help with your dress, Mom?\"\n\nVeronica replied, \"Thanks, you're an angel to press it for me.\"\n\nAs Veronica put it on Mary Claire zipped the miniscule zipper and fastened the clasp in the front which took her a few tries because she was openly caressing Veronica's breasts. \"Think you might have time for me in here tonight,\" she asked.\n\n\"Of course and will you look for my shoes in one of those suitcases over there, I'll get the blue shoes for you.\"\n\nBoth pair were located and the sling back royal blue four inch heel pumps fit Mary Claire perfectly.\n\nKatrina and Ashley walked in hand in hand. Ashley was wearing a short red sheath that seemed to be painted on her ass. It stopped mid-thigh, as short as Mary Claire's. \"Gonna see some stocking tops tonight,\" I smirked.\n\n\"Well, if you want to see mine, you'll have to raise this skirt, which I don't think you'd hesitate doing,\" grinned Katrina. The scooped neckline of her black dress revealed most of the tops of her wonderful breasts, but the skirt was just above knee length. As she twirled around the seamed stockings visually led me up under her skirt where good things awaited.\n\nKatrina tied my tie and we were ready. Veronica led the way down and when I reached the door I told my daughters that the driver's name was Lauren. Lauren was leaning with her butt against the front fender her long legs crossed at the ankles studying her cell phone and looked to be entering a text message. As we approached she set the phone on the hood of the car and walked toward us. \"My God, all these beautiful women belong to the two of you?\" she smiled broadly looking each woman up and down.\n\n\"Yep, they do. It's a tough job, but someone has to take care of them,\" I grinned. \"Lauren, this is my wife Veronica, and our daughters: Mary Claire in blue, Katrina in black, and Ashley in red.\"\n\nAfter nodding at each and repeating their names as I named them she turned and walked ahead of us, her ass swaying and it had the undivided attention of each of us. She opened the door and seemed to enjoy the leg show as much as I did. As she was preparing to close the door and her eyes swept the seated women, she asked me, \"How can I turn around or do I need to back out?\"\n\n\"Pull onto the grass as much as you need too, there's a construction project starting soon and the yard will be replaced when it's done. It's been dry for awhile so mud shouldn't be a problem. I made another mental note to myself to make sure that the drive redesign had adequate space for a limousine to turn around.\n\nShe walked up the side of the car, retrieved her cell phone from the hood and as she got in the driver's seat she lowered the glass partition turned and said, \"When this is closed, talk to me on that phone. You may also raise the privacy panel if you wish. The climate controls are next to the phone and there's chilled chardonnay in the cooler as well as several bottles of red in the wine rack. I believe the chardonnay is your wife's favorite. Again my name is Lauren.\" As she finished speaking the glass window went up and she turned back to the steering wheel.\n\nVeronica and I were in the back seat and the other three were in the side seat. As we were riding Veronica told us about the limo ride in San Francisco and what a sexy person Felicity was. She also mentioned that their driver had been similarly attired for the evening trip to the gala and that she'd invited her to their room afterwards. \"After the gala I had a good sexy time with Felicity, Angie our driver, and Joceline the concierge.\"\n\nAfter she pulled under the portico at the club Lauran came around and opened the door, each of the girls scooted forward and for Ashley and Mary Claire the scooting revealed their stocking tops. Lauren was extending her hand to help them out when she saw the garter clasps and said \"Wow, garter stockings. I love 'em! I wear 'em every day under trousers, but the boss won't let me wear 'em with this skirt. Do you wear them often?\"\n\nAs Ashley was standing outside the car and brushing down her skirt she smilingly replied, \"Very often. Dad likes them and so do we.\" Then she turned and over her shoulder asked Lauren, \"Are my seams straight?\"\n\nWith a broad smile, Lauren replied, \"The part that I can see looks straight.\"\n\nKatrina, ever the aggressor with another woman, said to Lauren as she touched her arm, \"Let's get together sometime and check the seams without skirts covering part of them.\"\n\n\"I'd love to do that,\" replied Lauren giving Katrina and me one of her cards. \"Call me at this number when you're ready to leave.\" Then looking back at Katrina, \"That number is my personal cell, please feel free to call me.\"\n\nAs the five of us began walking into the lobby, Veronica remarked to Katrina, \"Good hunting, she'll be welcome at our home. Oh, Hi, Kim. Hi Gwen, nice to see you both again.\"\n\n\"And I'd like to see all of you naked again, Gwen would like to watch and maybe she could be enticed to join in,\" replied Kim sotto voice to Veronica. \"Are my parent's here yet,\" she asked rhetorically and in a normal voice.\n\n\"I haven't seen them. I need to thank your Father for the limo tonight,\" I said.\n\nI put my arm around Veronica's waist and pulled her close while I said into her ear. \"Your hair smells wonderful , you look wonderful. Why don't we go for a ride after we leave here and drink some of the wine that was so thoughtfully provided?\"\n\n\"All of us?\" she asked.\n\n\"Yes, and feel free to invite Kim and Gwen,\" I smiled.\n\nJust as the maitre 'd approached us, Emerson and Hazel arrived. Hazel looked thoroughly fuckable, dressed in a very short dress with a very low neckline, wearing dark patterned hose, three inch strappy heels and a huge smile as she hugged and kissed Veronica. Kim looked at her Mother saying, \"I like the new you. You're quite sexy. That's something I never thought I'd say to my own Mother.\" Hazel hugged and kissed both Kim and Gwen, albeit lightly on the lips, much to the surprise of each.\n\n\"Mr. Appleton, Ms Bryce, Mr. Jacobson, Mrs. Jacobson, Kim, Gwen, Katrina, Ashley and this attractive young lady is?\"\n\nMary Claire stuck out her hand and said \"Mary Claire Peters, the long lost daughter,\" laughing. We were led to our table, the usual banquette in the back. Emerson got in first with Hazel and Veronica between us, then Kim next to Emerson, Ashley, Gwen, Katrina and Mary Claire.\n\nA broadly grinning waiter approached us and took drink orders, I noticed that as they were ordering, both Mary Claire and Katrina managed to lean forward. I also noticed that the low necklines didn't go unappreciated by Emerson, nor did Hazel's by either Veronica or me. Outside of a bathing suit I had never seen her with such a revealing dress.\n\nAfter the drinks arrived, I asked Emerson if the limo was his idea. He didn't know anything about it and asked why. I told him that the order said Cheryl. He said she must have taken care of it on her own initiative. I'll have to thank her, I thought.\n\nVeronica began to tell us about the gala and particularly the 'sting' on the two couples at her table. As we were laughing she said that if Joceline was able to get copies of the security tapes, she'd show them at our next gathering. As the four of us talked I noticed that both of Emerson's hands were below the table, his right high on Hazel's thigh and following Ashley's gaze as she talked to Kim, I figured his other hand was on Kim's leg. I was only half right as Ashley explained to me later as we were dancing. Emerson's hand had pushed Kim's skirt past her stocking tops and he was touching her bare thigh. Ashley noticed that Kim had raised her butt a bit and scooted the dress higher. Ashley then put her hand on Kim's other thigh and got close enough to her pussy to feel the warmth radiating from it. How Kim managed her dead-pan expression, I'll never know.",
        "I was curious if Hazel knew what her husband was doing with their daughter. If she did know then she'd changed more that I thought and I wondered where it would lead.\n\nGwen had turned toward Katrina and put her arm on the seat behind Katrina and Mary Claire had turned similarly. As the various conversations ensued, two waiters appeared in front of the table and began taking orders from each end. Neither one was writing anything down, just asking and clarifying what each was ordering.\n\nAfter finishing another outstanding meal, the three of us got out so Emerson could make the music arrangements. I noticed that he took several hundreds from his money clip as he approached the band leader. As he was taking to her, I got back in, sliding around to be next to Kim, Hazel was on my other side, then Veronica beside her. When Emerson returned he sat next to Veronica.\n\nI looked down at Kim's lap and her skirt was still up and Ashley's hand seemed to be pushed against her pussy. \"May I?\" I whispered quietly into her ear. Taking her silence and grin as approval and put my hand on her bare thigh with my fingers across from Ashley's. She spread her legs slightly and now both Ashley and I were against her pussy.\n\nAfter a few moments and as the musicians were warming up, Katrina invited all the young ladies to take a tour of the ladies lounge. As they got up and slid out, Hazel nudged me and said, \"Like the way she felt?\"\n\n\"Yes, I did,\" I replied simply. Evidently if she knew what I was doing with Kim she likely knew about her husband too. This is getting interesting.\n\n\"I think Emerson liked it too,\" she replied looking me in the eye. \"I guess I'll need to encourage him a bit.\" Whoa, I thought.\n\nEmerson began talking to Veronica but seemed to be distracted by the plunging front of her dress and he finally said quietly, \"I think I can see your breast.\"\n\nVeronica replied, moving her shoulders a bit to make it easier for him to look. \"Is it perky, smallish areola, darker nipple that looks like you'd like to take it between your lips and suck a bit?\"\n\nA little taken aback, Emerson quietly stuttered saying, \"Y... Y ... Yes.\"\n\n\"Than that's what you're seeing,\" laughed Veronica as she shifted a bit more for more exposure.\n\nHazel smiled at the interchange and put her hand on my thigh and squeezed. Wow, changes were really afoot at the Jacobsen household.\n\nAfter Emerson confirmed what he was seeing he looked up and said, \"Let's do something special to celebrate the sale.\"\n\n\"What do you have in mind?\" asked Veronica.\n\n\"How about an RV trip. Say a couple of weeks long. We could leave after your honeymoon and get back in time for Christmas. We could head south, tour a bit of Florida then come up the coast to D.C. then head home.\"\n\n\"With the girls?\" asked Veronica.\n\n\"No, just the four of us, could be a lot of fun and a great way to relax after beating our heads against the wall for the last twenty years,\" Emerson smiled.\n\n\"You two deserve to relax and have some fun,\" Hazel smiled. Evidently she knew the suggestion was coming.\n\n\"I think it's an outstanding idea, don't you sweetheart? Educate me on the various RV's on Monday, if you will,\" I responded.\n\nHazel then said, \"Emerson and I took a 10 day trip a couple of years ago and it's really a delightful way to travel. Don't need to plan where to eat, it's right with you. All you need is a spot in an RV park and you're set for the night. We towed a small car so we didn't need to drive the big RV into town. It was fun, too bad I was rather inhibited at the time.\"\n\nBoth Veronica and I let that last remark hang and Emerson slid out and extended his hand to Veronica and asked, \"Dance.\"\n\nHazel turned to me, slid her hand up my leg against my erection, briefly stroked it with her nails and said, \"Lets.\"\n\nAs Emerson and Veronica were dancing she cooed in his ear, \"You'd like to touch them wouldn't you? Your dick against my hip says you would.\" A few steps later she added, \"Your hand on my bare back feels good. I'd like for you to caress them, I'll think of how we can make that happen.\"\n\n\"Tonight?\" Emerson croaked.\n\n\"Yes,\" said Veronica taking a nibble of his earlobe.\n\nHazel and I were dancing and her hand was in mine against my chest. Her magnificent breasts felt very firm yet soft. She seemed to move around a bit so the back of my hand was always against her bare cleavage. \"Hazel, what's gotten into you, besides your husband?\"\n\n\"Things have changed sexually for the better, thanks to Veronica and Evie, your minister. I'm ready to explore and experience a lot of things. I told Emerson that today when he got home early from the office. He's happy, I'm happy, thank you for your part.\"\n\n\"My part?\" I asked as the back of my hand pushed a bit more firmly against her breast. Her comment made me look forward to meeting this minister. Veronica was clearly impressed with her, but to have this effect on Hazel really caught my attention.\n\n\"Turn your hand and put the palm against my tit. You liked Kim's thigh and I'm sure you'll love my boob. Did you just twitch that awesome dick of yours?\" she smiled.\n\n\"Guilty, but enjoying,\" I replied. \"Again, my part?\"\n\n\"Yeah, yours. You found Veronica, you asked her out, you both fell deeply in love and I think the symbiosis between the two of you and your daughters has awakened the sensuality in all four of you.\"\n\n\"Oh,\" I said as the music stopped.\n\nEmerson and I traded partners. I noticed Kim was dancing with Ashley, and Gwen with Katrina. Mary Claire was patiently waiting her turn.\n\n\"Are you going to mind if I let Emerson touch my bare breasts sometime this evening?\" she asked.\n\n\"Of course not, you know I won't. Go for it. Why don't you both kind of go to the restroom at the same time and duck into one of the empty private dining rooms?\" I smiled and kissed her ear. \"I love you.\"\n\n\"And I love you handsome. I wonder if Hazel would return the favor?\" she responded.\n\n\"I'm not sure if she's ready to take that step,\" I replied. \"I'd rather that it be in smaller steps than risk her drawing back because she went beyond what she's prepared to do.\"\n\n\"I agree,\" she nodded toward Hazel who was dancing snugly against her husband. \"She's opened up quite a bit, but we need to take our cues from her.\"\n\nWe danced two numbers together then Mary Claire who had been watching from nearby pressed herself against me. Hazel and Veronica headed down the hall to the lounge.\n\nHazel and Veronica entered the lounge and as Hazel washed her hands and touched up her lipstick Veronica noticed how Hazel was studying her in the mirror. Veronica moved directly behind her and snaked her hands under Hazel's arms and covered her breasts. As she did that, Hazel said as she turned her head, \"Unzip me a bit and get inside the dress.\"\n\nVeronica smiled to herself as she lowered the zipper a few inches and palmed down the front exposing her friend's hard nipples and most of her luscious creamy breasts. \"Umm,\" purred Hazel. \"Let's do this more often.\"\n\nThey heard the outer door open and before the new arrival got to the sinks and mirrors Hazel had been zipped and tucked back in.\n\nKim and Ashley greeted both women then bestowed light kisses as they left. As they walked up the hallway Hazel said, \"I really, really liked your touch and I meant it when I said 'more often'.\"\n\n\"Of course,\" replied Veronica taking and quickly squeezing Hazel's hand. \"I've offered to let your husband touch my breasts tonight and I'm willing to encourage him because I'd like him to. Is that going to be a problem?\"\n\n\"Not for me, I hope he doesn't come in his pants. Probably shouldn't. We fucked while we were getting dressed, and had to take another shower.\" With a smile she continued, \"I let him eat me, that's a wonderful feeling, I've yet to blow him but I'm working up to it.\"\n\n\"If you want to practice give me a call, I've a house full of women willing to demonstrate and Scott's yet to complain about any of us,\" grinned Veronica.\n\n\"Think Scott'd like to touch my bare tits?\"\n\n\"Dear, fucking you has been long time fantasy of his, does that answer your question?\" laughed Veronica.\n\n\"Ohhh my,\" she smiled. He's been one of mine too.\"\n\nThey returned just as a number was ending and Gwen rather shyly approached me and asked me if I'd dance with her. She was wearing a cream color sweater dress that fit her perfectly and ended mid-thigh. She was a bit stand-offish at first but quickly warmed and pressed against me. \"Kim says you're a good lover. Would you want to show me sometime ... soon? I've never been with a man so I may disappoint you but I'd like to make love to you.\"\n\n\"When we leave here tonight we have a limo and a nicely stocked wine supply. Would you and Kim like to go with us for a ride and drinks?\" I asked\n\n\"All of your women going? What about Kim's parents?\" she asked into my ear.\n\n\"The girls are, her parents aren't. I'd like for you to come with us.\"\n\nLater when I was dancing with Kim she said they'd go, but asked about Gwen's car. I told her that the driver would bring her back here to pick it up. \"Was your Dad caressing your bare thigh earlier?\"\n\n\"Yeah, I kinda encouraged it. He put his hand on my leg and I used his hand to push up my skirt. I think at one point the side of his hand was against my pussy. Yours was too but he was closer,\" she quietly said. \"It was exciting.\"\n\n\"Did you talk to him about it when you were dancing?' I asked.\n\n\"Yes and no. I got a strange response that he'd like to watch Gwen and I make love, but not that he'd like to fuck me,\" she replied with a bit of a frown.\n\n\"Would you like him to? Last time we talked you seemed inclined,\" I said.\n\n\"I think I would, can we talk about it in the limo?\"\n\n\"Of course, sweetheart.\"\n\nMary Claire, how else to describe Mary Claire, busty, tasty, beautiful, soft, firm, sexy. She pressed against me and said several times how fortunate she was to have met Veronica and me. She snuggled into my neck and kept the back of my hand against her overflowing breasts. I glanced around the floor and noticed that Hazel was drinking a cup of coffee at our table, smiling, and that Emerson and Veronica were missing. \"Emerson seemed to like my tits,\" she said. \"Especially when I pressed them into the back of his hand.\"\n\n\"Is that supposed to surprise me?\"\n\n\"No. It just felt nice to feel his woody.\"\n\n\"Mine isn't good enough,\" I feigned a pout.\n\n\"You know damned good and well it is, I liked it from behind this morning didn't I? You certainly didn't mind me fucking you before you went to work, did you? His just felt different. Nice, but different and it makes me feel good to do that to another man.\"\n\n\"So ... are you interested in doing him?\"\n\n\"I'll do him only if you approve. I'm yours and Veronica's and will only have sex with those ... with those shall we say, ... you approve of and direct me to enjoy them.\" I was trying to think of what to say when she whispered, \"You could say that you two own my pussy.\" I almost choked and fortunately the number was just ending.\n\nAs the next number began Ashley ground into me and kissed me lightly. \"Are you having fun, lots of almost bare tits around here tonight.\"\n\nA little earlier Veronica headed down the hall after Emerson and gently pushed open a little a few of the private dining room doors to make sure they were empty. She was standing in front of a partially open one as Emerson was returning from the restroom. Veronica stepped back into the room and whispered 'Emerson' and motioned him into the room.\n\nVeronica set her clutch on a nearby chair and switched on a light at the far end of the room. As she was turning back to Emerson she unfastened the clasp that held the front sides together. She pulled the fabric aside baring both breasts to Emerson. She smiled, \"By the way your wife gave her blessing for you to \"look, touch, caress, lick, suck, enjoy.\"\n\nEmerson groaned and gently grasped both breasts and while kneading them kissed Veronica. After breaking the kiss he lowered his head and kissed each nipple then took the hardened nipple into his mouth and lightly nipped them and sucked on them. As he was doing this Veronica reached for his cock and rubbed it through his trousers. He finally broke contact with her breasts and said, \"I'm going to come if we don't stop now.\"\n\n\"Were they as nice as you expected?\" asked Veronica as she was wiping his saliva off her breasts with a tissue. \"You seemed to enjoy them. Perhaps we can do an encore sometime.\" Veronica said under her eyebrows as she refastened her dress.\n\n\"You're beautiful, Scott's so fortunate to have you and to be willing to let you have me enjoy a bit of you,\" he croaked. \"You really mean there'll be a next time?\"\n\n\"Count on it and more than just a touch of the boobs if your wife will allow it,\" as she kissed him and turned off the light, \"I'll see you in the dining room.\"\n\nVeronica redid her lipstick in the lounge and headed back to the dining room.\n\nAshley and I were finishing our second dance when a broadly smiling Veronica walked behind me kissed me on the neck and whispered \"Mission accomplished.\" As Ashley backed away from me I turned to her and said, \"remind me to tell you what Hazel said to me.\"\n\nKatrina replaced Ashley in my arms and asked me why I was so hard. I told her it was all of them and that her mother had just let Emerson enjoy her bare breasts. \"He can enjoy mine whenever he wants,\" she smiled and snuggled more deeply into my neck. \"You want to play with my titties, don't you?\"\n\n\"And your pussy and your ass and your legs, and your mouth. Of course,\" I quietly said into her ear through her hair. \"We're going for a ride and enjoy the limo when we leave here. We'll drink a bit of wine, play a bit, but ... this is a big but. I can't touch you, Ashley or Mary Claire outside of the back seat because Lauren knows you as our daughters. Please tell Ashley and Mary Claire not to be disappointed. Kim and Gwen are coming as well.\"\n\n\"How could I, we, be disappointed. We're going home to be in your bed tonight and have body parts wrapped around your wonderful cock and Mom's sweet pussy. Don't be silly. Disappointed, never. You're right about being with Lauren. Maybe someday she'd like to come and play, I'm certainly going to invite her to visit. I'd love to have you watch me seduce her.\"\n\nI drew my head back and looked into her twinkling eyes. My daughter smiled, \"What can I say? I like the idea of seducing women. Blame Veronica for stirring the animal in me&gt;\"\n\n\"Am I complaining? You're just surprising me, that's all\" I laughed.\n\nVeronica and I danced the last two dances and she summarized what happened in the lounge earlier. Then she remarked that the RV trip sounded like the perfect opportunity to fulfill my fantasy of fucking Hazel. \"You won't mind?\" I asked.\n\n\"Give me a break, I want to fuck her as much as you do. Emerson too,\" grinned Veronica pulling back a bit and looking into my eyes. \"I know it's strange but watching your cock going in and out of another woman is very erotic and arousing.\"\n\nAs we were preparing to leave, Kim approached me and said \"Hang back a bit, I'm not comfortable with Dad seeing me leaving with you, not yet at least.\"\n\n\"I understand,\" I smiled back at her looking into her eyes. \"Why don't two or three of you take Gwen and spend a few long moments in the lounge. I'll see them off and call you.\"\n\nVeronica and I were waiting in the lobby as were Emerson and Hazel. I put my arm around Hazel's waist and turned her slightly to kiss her. She returned the kiss with an open mouth and as we broke the kiss and hugged she whispered in my ear, \"You've got a free pass to my tits and I expect you to use it soon.\" Then she lightly kissed me again and said goodnight. Veronica was giving Emerson a hot kiss and as they broke she said in a low voice, \"Another time, an encore, soon, I hope.\"\n\nAs they walked out to their now waiting car I said to my lover, \"Well there goes a hot pussy and a rigid dick. I wonder if they'll make it home. They almost didn't last night, they fucked in the front seat in the garage.\"\n\n\"Yeah, that's what Hazel said,\" she replied.\n\nI called Kim and told her the coast was clear and then called Lauren to pick us up. As she pulled into the portico she exited the limo , waved the valet off, opened the door and greeted each of us by name except Kim and Gwen to whom she introduced herself. \"Where to, Mr Appleton?\"\n\n\"It's Scott, just drive around kind of heading for Forest Park, but don't take I44 or I64, use Clayton Road or some other surface streets, we're in no rush. We'll drink some wine, and ... .\"\n\n\"Ahh, I understand,\" she broadly smiled. \"Raise the privacy shield, if you wish or not, the switch is clearly marked.\"\n\nGwen was seated between Veronica and I and Kim was on the long side seat with the other three.\n\n\"So, Kim, tell me about your Dad's hand next to your pussy,\" said Ashley as I opened a bottle of red and a bottle of Chardonnay. Mary Claire put the open bottles in the shelf cutout after pouring glass for each.\n\n\"I think I kinda surprised him. He put his hand on top of my skirt, but I picked it up and used it to push my skirt all the way up. I left it on the welt of my hose, he moved it higher. Felt nice, so did yours Scott,\" she replied with s big smile.\n\n\"I think Emerson was teased a lot tonight. I caught him looking at my boobs and asked if he wanted to touch them. Who wouldn't, they're perfect,\" laughed Veronica. Anyway he wound up with a hand on each and licked, sucked and nipped both nipples. Felt pretty good, but I thought he'd come in his pants, especially when I told him I wanted an encore ... soon.\"\n\n\"Where'd you do that,\" asked Mary Claire.\n\n\"When we went to the restroom at about the same time I pulled him into one of the empty dining rooms. It worked pretty well.\"\n\n\"Well, shit, all I had to do was this?\" smirked Mary Claire as she pulled down the top of her dress exposing her luscious nipples. \"Hey what if the three of us had gotten him into the same situation, pull your tops down Ashley, Katrina, and asked him to choose one for a taste.\"\n\n\"That would have been cruel,\" I replied, \"you could at least offer two.\"\n\nKim pulled her skirt up and said \"I should have taken my g-string off and looked for another opportunity.\"\n\n\"You want to fuck your father?\" asked Ashley in a faux alarmed tone.\n\n\"Yeah, I think I do. Mom's gonna have to be okay with it.,\" replied Kim.\n\n\"Have you talked to her about it?\" I asked.\n\n\"Yeah right, as if she'd be open to me sauntering up and saying 'hey Mom, I want to fuck Dad. When can I do it?'\"\n\n\"Gwen what do think about Kim doing that with her father?\" Veronica asked.\n\n\"I'd be okay with it I know I'm not going to lose her to her father. I didn't lose her to you Scott. And she won't lose me if I fuck either or both of you,\" said Gwen.\n\n\"Okay Dad, here's six luscious tits choose four,\" said Mary Claire. I moved over to them and gently sucked one of Mary Clair's nipples, both of Ashley's and one of Katrina's. As I moved back, Mary Claire said , \"Opps, I should have said two pair, not four.\"\n\n\"Scott would you like to fuck me right now?' asked Gwen.\n\n\"Yes, but not in the back of a car, as much as I'd like to and I know all of you'd like to watch. I want us to be in a proper bed. Your first experience with a man should be something you remember for a long time as something beautiful that happened. It shouldn't be a quick fuck in the back seat,\" I explained. \"You deserve more than a back seat.\"\n\n\"God, you really are a wonderful man, Scott. Is that 'proper bed' invitation open ended?\"\n\n\"Yes, it is. You haven't been loved until my handsome man loves you,\" smiled Veronica.\n\n\"Well, we've fucked before, so how about now?\" said Mary Claire, lifting her skirt and pulling off her g-string.\n",
        "Veronica reached over Gwen and undid my belt, unzipped my fly and pushed my boxers and trousers to my ankles. Lying across Gwen's lap she took me in her mouth while Gwen's hands went into the front of her dress. A little later she lifted her head, \"He's ready Mary Claire, climb on.\"\n\nMary Claire came across the car and squatted on my knees, then pulled herself up a bit as Gwen held my cock so she could impale herself. \"Ummm, God, that's good, so good.\"\n\nI took a breast in each hand and bent my head to suck the nipples. As I came up for air I noticed that Veronica had unfastened the clasp on her dress and Gwen was feasting on her nipples.\n\nKim moved over beside Katrina and both she and Ashley began pleasing her breasts.\n\nAfter ten minutes of sliding in and out of Mary Claire, she came and then wrapped her arms around my neck, \"Oh Dad, I love you so much,\" she cooed.\n\nAshley released Katrina's tit and asked me, \"Did you come?\"\n\n\"No, want me in your mouth?\"\n\n\"You don't have to ask twice. As soon as Mary Claire composes herself I'll be there.,\" Ashley grinned.\n\nAs Mary Claire got up off my still hard cock, Kim slid her hand under Katrina's skirt and Katrina jumped a bit as Kim obviously entered her with a finger.\n\nMary Claire moved back to her seat and took a big sip of red wine. Ashley knelt on the carpet in front of me and took me deeply into her mouth. After five minutes of sucking and jacking me I unloaded into her mouth while she looked into my eyes. \"Feel better, Dad? No muss, no fuss, no come stains to explain,\" grinned Ashley.\n\nVeronica's hand was under Gwen's skirt who came while still attached to Veronica's nipple.\n\nLauren came over the intercom saying, \"We're just entering in Forest Park.\"\n\nKim disengaged from Katrina's mouth and asked, \"What do you want me to tell her?\"\n\n\"Art Museum, the Grand Basin overlook in front,\" I managed to gasp out.\n\nKatrina came a few minutes before we stopped. I pulled up my boxers and pants and refastened my belt. Gwen brushed her skirt back down as did Katrina. All three restored their breasts into their tops, Veronica refastened her clasp and as the limo slowed to a stop, Lauren asked, \"Do you want to get out?\"\n\n\"Tell her 'yes' in a few minutes,\" I said.\n\nAfter we were all somewhat composed and had a drink of wine, I told Kim, \"Tell her we're ready.\"\n\nLauren walked around the limo and opened the door. The five young ladies exited with each teasing Lauren with a stocking top and panty show. Veronica and I got out last. Lauren leaned against the rear fender of the car with her arms on the fender making her chest even more delightful as she watched the girls make their way down the steps to the lower level of the Grand Basin overlook. The air was pleasantly cool, the moon about three quarters full so they were easily seen.\n\n\"I see your fly is up to old tricks,\" smirked Lauren.\" If I find panties in the car when I return it tonight should I mail them to you? Or will they belong to Mary Claire. That was quite a flash I got a moment ago.\"\n\nI sheepishly grinned as I pulled my zipper up and put my arm around Veronica's waist. As I looked at our brood Lauren asked, \"Are you associated with Midwest Capital? I called my dad because I thought the name sounded familiar. He reminded me that he was a data analysis manager for them.\n\n\"What's your last name Lauren?\" I asked.\n\n\"Franklin,\" she replied.\n\n\"Sure, Brad Franklin's worked for us for at least fifteen years,\" I smiled. \"I thought Brad's kids were younger.\"\n\n\"They are. They're my step brother and sisters. I'm thirty and dad remarried when I was seventeen. I went to college shortly after their divorce and then lived with mom after graduation.\"\n\n\"What'd you study in college, driving?\" I grinned.\n\n\"No, I graduated from Truman State with a Master's in accounting and an undergraduate minor in PhysEd. I sat for the CPA exam and passed it the first time but have never worked full time for a CPA firm. I'm licensed like Dad, but never practiced.\"\n\n\"So what's a CPA doing driving a limo,\" asked Veronica.\n\n\"It's one of many things I do. I work for CPAs at tax time, I've been a personal trainer and I umpire or referee women's softball, basketball, lacrosse and volleyball at both the high school and college levels. I've done some modeling, both fully clothed and not. I have several portfolios on an adult website. If I'm free, I drive just to meet people,\" she smiled.\n\n\"Isn't it dangerous at night?\" I asked.\n\n\"It could be, I think my height is intimidating, I keep a licensed PPK in my purse and I have black belts in three martial arts disciplines and can do a mean sprint in these heels. Have you ever seen the EasySpirit shoe commercial. You know the one where the women are playing basketball in three inch heels? I'm in that, in fact most of the legs shots are me. That was a kick to do.\"\n\n\"You aren't married?\" asked Veronica.\n\n\"Never have been. Never found the right man ... or woman ... who could relate to me. Also been too busy enjoying life. Haven't wanted to get tied down. I lived with mom for awhile until her husband got too 'touchy-feely' with one of my breasts one afternoon when she wasn't there. Cold-cocked the bastard and broke his wrist in the process. I moved out that evening. Now I live alone and with my cell phone and computer I keep in touch with the world,\" she smiled.\n\nA St. Louis police cruiser was passing , stopped and backed in next to us. The handsome black officer lowered his window and asked, \"Are those young ladies on the lower level yours Lauren?\"\n\n\"Hi, Garrett. Yes, they belong to this couple. How's Melody?\" she smiled leaning down to talk to the officer .\n\n\"She's fine, takin' care of the kids, we've got three now,\" he replied with a bright smile.\n\n\"I knew about two, when was the third one born?\"\n\n\"June second, Carla Marie,\" he replied with a big smile.\n\n\"Is she going to be back to work next spring for tax season?\" asked Lauren.\n\n\"She's wantin' too, but I guess we'll see. I'll tell her I saw you. Give us a call sometime, we need to catch up. When she nodded he added, \"Have a good evening folks,\" then he raised the window and pulled out.\n\n\"Melody and I were roommates in college and she was on the same track as me, her minor was psychology. After she passed the exam she went to work for a big CPA firm and has been successful. I sometimes work for her firm,\" she explained. \"Goodness, I've rattled on about me,\" she remarked.\n\n\"That's how Scott is Lauren, it's about you not him. That's why we all love him so much,\" smiled Veronica.\n\n\"Lauren, I, we, are entering a new phase in our lives and I'd like to talk to you more about some of your skills. Can either Veronica or I call you sometime in the next week and get together for lunch or dinner?\" I asked.\n\n\"Sure, I'm always open for new things to try. By the way your daughters are beautiful, hard to believe you have three that're so close in age,\" she observed.\n\n\"Well, Ashley, in red, is my daughter and Katrina who's in black is Scott's, Mary Claire, in blue, is a friend of both of them whose parents travel a lot and she's taken to living with us. I think she's adopted us. Kim and her partner Gwen are a couple. Kim is Scott's business partner's daughter.\" We think of the three as our daughters and when we get married in three weeks Ashley and Katrina will really belong to both of us,\" Veronica explained.\n\nAs we were talking the gaggle of beautiful women approached us, laughing and enjoying each other's company. \"Where to next?\" asked Lauren.\n\n\"Let's go to the Landing then we can head back to Meadowlake,\" Veronica said.\n\nWhen we climbed back in I asked Mary Claire to look for her g-string. \"Oops and I flashed our driver,\" she laughed.\n\n\"It didn't go unnoticed,\" I smirked.\n\nWe had just gotten started out of the park when Kim sat next to me and asked, \"Please make me come.\"\n\n\"I'd love to,\" I smiled as I put one arm around her and began sliding my other hand up the front of her calf and onward to her nyloned thigh.\n\nAs I passed the welt of her hose she sharply gasped and said, \"Sorry, that tickled a bit.\" I was nibbling her ear as I put my fingertips under the edge of her g-string. \"Oooh, ummm, closer please.\" I pushed the fabric aside and very lightly traced her lips all the way to her asshole and back up to her clit without touching it. She began to push her hips toward my fingers, but I drew back and teased her a bit more by putting pressure on her asshole with my finger. \"In my cunt, in my cunt, now please,\" she gasped.\n\nI entered her with one finger and touched her clit with my thumb. \"That's it, two fingers, two.\" As she demanded I put the second finger in as deeply as possible while still moving them in and out. After a minute or two she began shivering and gasping. \"Good, Good, Aah, Good.\" and she came with an explosive gasp. \"Stay in, don't touch my clit, too sensitive, too sensitive.\"\n\nAs she calmed I pulled my fingers out. Gwen asked, \"May I?\"\n\nI didn't know what she meant until she took my dripping fingers and carefully sucked and licked her lover's juices from them.\n\nWe each finished the glasses of wine and I opened another bottle of red and Mary Claire filled the glasses again.\n\nWe toured the Landing while admiring the nipples of Veronica, Mary Claire, Katrina, Ashley and Kim. Though Gwen didn't want to take her dress off to share hers she was willing to lean her back against me while I caressed them through her dress and thin bra. Her nipples hardened considerable as I touched her. \"Next time I go out with you I'll make sure to wear something a bit more suitable for exposing my tits,\" grinned Gwen.\n\nI noticed that Kim and Gwen weren't functioning at a level where I thought they should drive so I had Katrina tell Lauren where they lived and we headed there. Kim was surprised when we pulled up in front of their condo. When she asked about Gwen's car I told her that she and Gwen could pick it up in the morning.\n\nI preceded them out of the car, walked them into the building and put them in their unit. They both deeply kissed me and Gwen offered her bed to me. I thanked her and told her, \"soon.\" I made sure the door would lock when I closed it and headed back to our limo. Lauren was standing by the door and while she opened it she said, \"That was sweet. It really was about them, wasn't it?\"\n\n\"Yes,\" I said. \"I respect all women, they're all special to me.\"\n\n\"That's a wonderful philosophy, I wish more men shared it,\" as she bent over and closed the door.\n\n\"Shared what\"\" asked Veronica.\n\n\"My philosophy that all women are special,\" I replied.\n\n##\n\nHazel and Emerson lingered in their living room consuming two glasses of wine. Hazel had pulled up her skirt and sat with her legs across his lap. Emerson was eagerly caressing them as they talked. He told her about the sale and what it financially meant to them as well as Kim. They also talked about what he intended to do and he replied that they should travel, do some community volunteering, and get reacquainted with each other and with Kim as well. Emerson's fingers got closer to Hazel's pussy and she said, \"Let's go to bed and fuck. I want you to undress me and kiss each new part you uncover.\"\n\n\"Gladly,\" he panted setting down his empty glass.\n\n\"She turned at the foot of the bed and said, \"Unzip please.\" As he eased it off her shoulders he lifted up her hair and kissed and lightly licked the back of her neck. As the dress fell past her hips to the floor he put his arms around her and firmly caressed her breasts and exposed nipples. He moved his hands back and unfastened her bra and kissed her neck again.\n\n\"Veronica played with my nipples a bit this evening, did she tell you?\"\n\n\"No,\" he replied as her turned her around and took each nipple into his mouth. \"Did you like it?\"\n\n\"Ooh, yeah,\" she shivered at the recollection.\n\nHe knelt in front of her kissing down her chest and stomach as he did. He pulled her g-string down and held it while she stepped out of it. Then as she slightly spread her legs he accepted the invitation and slowly licked her slit gently parting it with his thumbs. She groaned, and said, \"God, why did I wait all these years before letting you do that to me.\" Then she said, \"Stand, my turn.\"\n\nShe unbuttoned his shirt, pushed it off his shoulders, and lifted his undershirt over his head. She kissed him as she unfastened his belt and lowered his zipper. He stepped out of his shoes as she broke the kiss saying, \"My, my I really taste good don't I? I wonder if Veronica tastes that good, or Kim?\"\n\nEmerson thought his cock would explode at those comments. She pushed his briefs down his legs, knelt to get them off his feet and with his cock in her hand looked at it then into his eyes and said, \"It's really a beautiful friendly weapon. Get in bed with me now.\"\n\nWithout releasing him from her grip they climbed on the bed and as he lay on his back she straddled him and with his cock between her pussy and his stomach she leaned down and grazed his chest with her hard nipples and kissed him with a passion that he'd not felt before from her. She then sat back and raised herself enough to guide his cock in her hot pussy.\n\nAs he fully entered her she began to move her hips in a circular motion he reached up to caress her tits. \"Umm, Tell me what Veronica's tits felt like, looked liked. Tell me,\" gently demanded Hazel.\n\n\"They're a bit smaller. Umm, Her nipples were as hard as yours are now, God you feel good. Your nipples are straight out, hers point up, perky she said, You're both firm yet soft, hers have more of a teardrop shape than yours. Oh shit, move forward and back. You really need to see them to see the difference. I'd like to see them again next to yours,\" he gasped. \"She said she wanted me to see and touch them again, is that okay.\"\n\n\"It's more than okay, God your cock has me filled up, do it as often as she wants, just tell me when you do. Jesus, I'm going to come, oooh right there, right there,\" she repeated as she started to come. As she bent over Emerson came and pumped her vagina full of his sperm. Hazel sat back up and asked, \"Okay if I stay here a minute with you in me?\"\n\nEmerson began caressing her legs from her knees past the stocking welt then up her stomach to her breasts. \"You are a magnificently beautiful woman Hazel. I think Veronica and Scott would agree with me.\"\n\n\"I think you're right, Veronica told me that Scott has a fantasy about fucking me, and I'm ashamed to admit it but I like that. I don't think Veronica would turn down a chance to fuck you. Tell me about your hand on Kim's leg tonight.\"\n\n\"Well, it was kind of accidental, I put my hand on her leg and she lifted it and pushed her skirt up with it then placed it on the welt of her stocking. I kinda let it drift higher.\"\n\n\"She felt good, didn't she. Do you think she'd like to fuck you? Would you like to fuck her? Would you two fuck each other while I watch? Your cock just got harder and twitched so I think I know the answer. Have you two talked about it? Would you like me to talk to her about it? Damn, you twitched again. \"\n\nEmerson groaned, \"I hope you're serious, I would. I'd also like to fuck Veronica or Mary Claire or any of the rest of Scott's harem. I'd like to watch him fuck you. I want you to watch me fuck another woman.\"\n\n\"I'll tell you what, you wonderful man. If you and Kim fuck, maybe I'll learn to blow you. I'm not ready to let another man inside me, but I wouldn't mind Scott playing with my tits or eating me. Would you like to see that?\"\n\n\"Oh God, Hazel, you can be a real tease,\" He groaned thrusting up into her.\n\n\"I'm not teasing, I mean it, you can watch Scott play with me if I can watch you play with Veronica or any of his women, same rules, you can't fuck. You can fuck Kim to your heart's content, but only with me there when you do.\"\n\n\"Ohh, Christ,\" he gasped as he came again triggering her orgasm.\n\nTwenty minutes later Hazel rolled onto her side next to Emerson saying, \"I feel your semen leaking out of me, I like that. I'll bet our daughter would like it too. I'll call her tomorrow.\" Those were the last words he heard as he fell asleep with Hazel's leg across his thigh and her garter clasp against his erection.\n\n##\n\nLauren delivered us to our front door about fifteen minutes after leaving Kim and Gwen. Mary Claire was unsuccessful in finding her g-string so Lauren got a second flash for the evening. I tipped Lauren $200 and thanked her for taking care up us tonight. I also told her, \"Expect a call from us sometime this week.\"\n\n\"Thank you Scott, it's been an interesting evening, never been flashed or treated to as many up skirt views in one evening.,\" laughed Lauren.\n\n\"Want to spend the night with me, I'm afraid of the dark,\" said Katrina with almost a straight face.\n\n\"Sorry, I've got to get this car back, but call me,\" she replied. She turned the limo around on the grass again and was on her way, back to the limo barn.\n\n\"Hmmm, I wonder how long Cindy's been here,\" I remarked to Veronica.\n\n\"It's late, probably awhile,\" smiled Veronica.\n\nVeronica, Mary Claire and I were in our room when Ashley and Katrina came in and closed the door. \"She's dead to the world, I tried to awaken her, but she just mumbled . So gosh-a-rooty I guess we'll just 'sleep' in here so she gets a good night's sleep,\" laughed Ashley.\n\n\"Be our guests, hang your dresses in my closet. Sleeping attire tonight is nude, no exceptions,\" I laughed. \"Do you know the only thing that makes a naked woman sexier, in my humble opinion?\"\n\n\"Other than fucking you, you mean?\" asked Mary Claire.\n\n\"Well, there's that, but wearing high heels,\" commented Veronica. \"I find that a turn-on as well, so I guess your Dad and I agree there.\"\n\n\"What don't we agree on?\" I asked with a wrinkled forehead.\n\n\"I can't think of a thing, but there must be something else, we just haven't come across it yet. Nobody's perfect,\" she laughed.\n\n\"Well, right there is something we disagree on, the four of you are perfect, so there,\" I smirked.\n\nI climbed to the center of the bed after grabbing a tube of lube out of a nightstand drawer. \"Ooh, gonna put something in my ass tonight Dad?\"\n\n\"Noo, it's for me. Felicity had her finger in my ass last night and handsome going to put his there tonight. I'm sure Mary Claire or your sister can satisfy you,\" smiled Veronica.\n\n\"On your knees harlot,\" I said laughing and lightly smacked her ass as she did so.\n\n\"Wait\" said Mary Claire, \"lets give her something to do with her awesome mouth,\" crawling in front of Veronica and leaning against the headboard with her legs spread on either side of Veronica's head.\n\n\"Ready, lover?\" I asked. Don't be surprised if I try something a little extra.\"\n\n\"God, you smell just fucked, Mary Claire, let's see if you taste that way too,\" said Veronica as she ran her tongue up Mary Claire's slit.\n\nI squeezed a large dollop of KY onto two of my fingers and spread it over Veronica's asshole. \"Ooh, that's cold,\" she shivered.\n\nI then laved KY on my middle finger and applied pressure to her asshole, finding resistance I told her to relax. When she did I inserted my finger to the first knuckle to an \"umm, nice\" from her. I pulled it back out and applied another generous portion and inserted my finger to the second knuckle to another \"umm.\" I pulled my finger back and began slowly fucking her ass with it. After three or four insertions I added some more lube and pushed my finger all the way in. \"You okay lover?\" I asked.\n\n\"Yeah, it feels nice and full. Pull it out a bit and push it back in slowly. Just like that. God that feels different, nice, different.\" Ashley was watching me with an expression of 'what's the big deal' when I motioned her to my side. \"Help me out here, I'm gonna stick my thumb in and you're gonna guide my cock into her pussy, okay,\" I said in a low voice. Veronica had obviously gotten comfortable with my finger in her because she'd gone back to lapping Mary Claire's slit. Ashley took the tube and laved my thumb with the KY. I then slowly pulled my finger out to a 'noo, don't stop'.",
        "I inserted my thumb slowly and Ashley rubbed the head of my cock in Veronica's very wet slit. I slowly pushed my thumb all the way in and then my cock. Veronica's reaction was immediate, \"What are you doing, I feel completely filled. Shit that feels really good.\"\n\n\"He's double penetrating you Mom, and it looks awesome,\" said Ashley. I set up a rhythm in both her asshole and her pussy pulling my thumb back as I pulled my cock back. I could feel my cock with the back of my thumb.\n\n\"Oh, my God, I'm GONNA COME\" as she took her mouth off Mary Claire and raised up on her arms a bit. Her orgasm was like an earthquake, it shook the bed. \"Don't pull out, don't, somebody touch my clit. Katrina reached under Veronica and did as asked. Veronica shook again and moaned, \"What an experience, can you come in me?\" Katrina moved her other hand to my balls and perineum, then felt a finger slide into my asshole. That did it, I began spurting, what was left, into Veronica's womb as she moaned and panted.\n\nFive minutes later \"Done Dad?\", asked Ashley. I shook my head yes and she gently pulled her finger out. After pulling my rapidly softening cock out I sat back on my heels against Ashley. I then gently pulled my thumb out and Veronica rolled onto her side and quietly lay there trying to get her breathing under control. Katrina kissed both Ashley and I then moved up next to Mary Claire and put her head in her lap. I very slowly knee walked to the side of the bed, sat and swung my legs off and Ashley joined my in the bathroom to wash our hands. I took a warm wet washcloth back to the bed and cleaned Veronica's ass cleft and puckered asshole. She sighed, \"That feels nice handsome, what a lover you are, what a loving family our children make. I love all of you,\" she said as she fell asleep with her head resting on a pillow.\n\nMary Claire extricated herself and slid to a prone position pulling Katrina alongside her. Ashley was sitting on the edge of the bed and as I snuggled next to my soul mate, she pulled the sheet and blanket over all of us and spooned me, nuzzling the back of my neck and softy kissing me, she sighed and said, \"Awesome, I love you.\"\n\nMary Claire and Katrina were quickly asleep in the darkened room and I heard Ashley's slow, measured breathing as I feel asleep, thinking I wouldn't trade this for anything.\n\n*\n\nDear readers, I hope you're continuing to enjoy this tale of a family and their lovers. I've a long way to go before I finish but future chapters may be published sooner in the months ahead. I'll put the submission date on my bio page and they'll usually be published three days after that date. I'd appreciate comments and if you have some ideas you'd like me to incorporate, please tell me and I'll consider them. I try to respond to all emails unless they're cranky. I'd still like to especially hear from any female readers. Any thoughts on how to publish character pictures would also be appreciated."
    ],
    "authorname": "Reindeer58",
    "tags": [
        "stockings",
        "incest",
        "high heels"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/any-chance-we-could-ch-33"
}