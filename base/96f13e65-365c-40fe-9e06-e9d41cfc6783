{
    "title": "Private Lessons",
    "pages": [
        "Author's note: Welcome to my latest story and my entry in the Summer Lovin contest. For this one I decided to delve into the classic-and one of my own personal favorites- fantasy of a teacher giving a lucky student a very adult education. Enjoy. LC68\n\nAt moments like this, lying by a beautiful pool and basking in the warm glow of the sun, it was easy to forget about life's troubles. In fact, as I stretched my arms out over my head and arched my back, I felt as happy and satisfied as a cat and reminded myself life was good. \n\nLife was always good on Tuesdays and Fridays, the two days a week I tutored for Max, a sophomore at PC whose father was a wolf of Wall Street and owned the gorgeous twelve room house that went along with the amazing Olympic size pool. \n\nI'd been tutoring Max since High school and as part of my payment for saving him from failing English in his senior year I was told I could use the pool on the days of Max's lessons. So my routine was to be here a couple of hours before Max came home from his summer job, go for a swim and lay out in the sun. \n\nWhile I was here it was easy to forget about the rest of the week and life itself. Easy to forget I'd caught Jeff, my boyfriend of the last three years, cheating on me with Sarah, my-now former-best friend. \n\nIt was easy to forget that after I threw Jeff out, money was tight and I was sweating the payment on the condo this month. It was easy to forget I was an English teacher who was considering taking a waitressing job, at least for the summer, to make ends meet. \n\nLast summer I'd had a half dozen other high school and college students I gave private lessons to; spending the summer giving them a jump on their upcoming college semesters, but only three this year which didn't help my financial situation. \n\nBut for right now? It was Friday afternoon and I was in a French cut two piece pink bikini I'd bought as a treat to myself and feeling sexy laying here by the pool in a well to do neighborhood and knowing the guy next door was watching me.\n\nThe yard was fenced in, but somehow the neighbor, I think his name was Rob, always seemed to be out on his second floor patio that overlooked the pool whenever I went swimming. I turned my head and sure enough there he was, 'watering' his plants.\n\nI stretched again, making a show of arching my back and pushing my breasts out. I was pretty ample on top; probably too large to be wearing this skimpy top, but I technically wasn't out in public and my breasts felt as if they were ready to fall out of the tiny cups. \n\nPart of me thought about making that happen, give him a little nip slip, but Max was due home any time and it was bad enough I was going to let him see me in the bikini. I sat up in the chair, and enjoying my audience more than usual today, decided to add to the show.\n\nI stood up and after lifting my arms to run my hands through my long, wet auburn hair and lifting my tits up to a saucier angle as I did so, I bent over and fixed the towel I'd been laying on.\n\nThe bottom of the bikini wasn't much more than a thong and I made sure to wiggle my well rounded ass while pretending to fix the towel. I thought of him watching me and felt warm from something other than the heat.\n\nNot that I had any interest in him, he was married and older, and older men did nothing for me, but it was nice to be looked at. I'd wasted too much time with Jeff and his games. I'd let him take me for granted and put up with his couple of nights a week of wham bam sex rather than finding someone who would appreciate me and treat me like a woman.\n\nOne thing was for sure, it'd been a few months since I'd even had his limited attention and it was high time I went out and found someone to remind me I was an attractive woman and let me show them how much I'd appreciate their appreciation.\n\nI lay back on the chair and feeling mischievous, looked directly at my admirer and blew him a kiss. He jumped as if he'd been shot and then gave me an awkward wave before running back into the house.\n\nI stretched again and sighed as the material between my legs rubbed against my pussy. I placed my hand briefly over it and moaned as my fingers eased over my excited clit. I quickly moved my hand before I ended up sitting here playing with myself in public. Yes, it was time to throw on a short dress, some high heels and go find some fun.\n\nI heard a car in the driveway announcing Max's arrival and thought maybe that was the type of fun I should look for, a nice good looking young cub. Not Max, of course. Max had just turned twenty and I wasn't sure I wanted that young, plus he was a good kid. He was a cutie, damn fine actually, but sweet and nervous, a nice kid and everything that Jeff wasn't. \n\nMost decent guys my age were taken and the rest either jerks like Jeff, married and on the make or unfortunately single for a reason with a ton of baggage and looking for a mom as much as a girlfriend. There were a few good guys out there, but at this point I didn't want serious so that left me with few options.\n\nA couple of my friends went out as cougars on the prowl from time to time and raved about sex with young men, not just the young hard bodies and stamina, but they were eager to please and acted like it was about the woman, not them. \n\nI was getting warmer between my legs and pushed my feet against the bottom of the chair, working my thighs back and forth as I curled my toes and kneaded the chair like a cat. Damn, I was getting horny. \n\nThe fact Max was going to show up any minute added to that feeling. I would never go 'Mrs. Robinson' on him, after all, if nothing else he was a student and his father didn't pay me a hundred dollars an hour to cock tease him, but I did enjoy doing just that because Max loved to look and I loved him doing it.\n\nThis was yet another reason to love Fridays. \n\nI heard the gate open behind me and closing my eyes, pretended to be asleep. He had to pass me to go up on the deck and into the house and I figured I would let him get a nice long peek. I heard Max's footsteps approach on the walkway and then stop.\n\nBehind my eyelids I sensed the sun dimming and knew he was standing over me. My breathing became heavier and not just to show off my tits, but because I could feel him staring at me. \n\nI imagined his eyes roaming over my body, from my purple painted toe nails, up my long legs and across my flat stomach that I had recently adorned with a silver barbell piercing to celebrate being newly single. \n\nI thought of his eyes lingering on my breasts, especially my now erect nipples poking through the thin material. I released a long sigh that ended in a soft moan while still keeping my eyes closed and pictured his young cock swelling as he stared down at me. \n\nI should be ashamed of myself, but damn it was hot knowing this young kid was ogling me. I gave it another second then without opening my eyes said, \"Hey, Max, how was work?\"\n\nI opened my eyes to see him already blushing.\n\n\"Oh, it...um, it was...um, good.\" He was nodding so quickly he looked like a bobble head and I had to struggle not to laugh. \"H...how are you, Miss Phillips?\"\n\n\"Max.\" I sat up and he stepped back so quickly he almost tripped, God he was precious! \"I've told you before, call me Laura. This is your house, not a classroom.\"\n\n\"Okay, Laura.\" He bobbed his head again and this time I laughed.\n\n\"What's so funny?\" \n\n\"You are, Max.\" I reached out and put my hand on his arm, \"You're adorable.\"\n\n\"Thanks.\" His blush deepened and when he looked away awkwardly, I took a good look at him and thought adorable might not be the right term....delicious however, could work.\n\nMax's father didn't want him lounging around all summer like his lazy, spoiled friends and wanting him to know what hard work was had gotten him a job at a friend's construction company. \n\nMax had no real skill so what he did all day was run around with a wheelbarrow picking up debris and throwing it in a dumpster. He'd been working there for six weeks and it was already showing. \n\nMax was wearing a sleeveless white t-shirt that accentuated the deep tan he'd gotten as well as showing off a damn sexy set of arms. He didn't have a large build, but his shoulders were wide and tapered down to his slender waist. His legs, protruding from a pair of jeans he'd cut into shorts, were well muscled from running and all in all Max had himself a nice tight young body.\n\nHe was the spitting image of his father, with a shock of thick curly dark hair and a pair of piercing blue eyes I could just imagine the girls his age getting lost in. Max was currently sweating and as I watched a drop of moisture slid down his neck to his chest I thought of following it with my tongue.\n\nMax gave me a thrill, unintentional I'm sure, when he pulled his shirt up to wipe his face showing off his flat, hard and sweaty stomach. This time it was a drop heading for the edge of his shorts I wouldn't mind following with my mouth. Jeez, Laura, settle down. Kid was only twenty, but hell, that was a man, just a young one.\n\n\"So you study this week or am I going to have to tear you a new one again?\" I asked. Damned if I didn't want to tear something right now.\n\nHe gave me the quick easy smile that was one of his best features. It was a sweet 'aw shucks' smile that always touched those gorgeous eyes and made you want to kiss him. He had to be killing it with the girls although I had never seen him with one. \n\n\"I studied.\" He sighed, \"Not like I have much else to do.\"\n\n\"Oh, come on, good looking kid like you has to have a special girl,\" I winked, \"Or two.\"\n\n\"No.\" he shook his head. \"No girlfriend, so I just been working and studying the last couple of weeks.\"\n\n\"No girl? You're letting all this go to waste?\" \n\nMax blushed again and when I stood his eyes locked onto my breasts and the blush deepened. When he didn't look away and kept staring, I cleared my throat. \"My eyes are up here, hon.\"\n\n\"Oh! I...I'm sorry, I was just um...I like your bikini.\"\n\n\"Thank you!\" Unable to resist, I lifted my arms over my head and did a quick turn for him, showing off my ass. \"You like?\"\n\n\"Oh my god.\" He whispered, then his eyes widened as if he couldn't believe he's said that. \"I mean...I...jeez I'm sorry, Miss...Laura.\"\n\n\"Don't be.\" I put my hand on his arm, admitting my long purple nails on his bicep. \"A woman my age getting a compliment from a hot young guy like you made my day!\"\n\n\"Yeah, but I shouldn't have said that.\"\n\n\"Why not? Nothing wrong with telling a woman she's attractive.\" I squeezed his arm thinking, goddamn, but to him I smiled and asked, \"You're not very good with girls are you, Max?\"\n\n\"I get nervous.\"\n\n\"No reason to. Max, you're a good looking guy and a sweet one and that's just as important, you need be confident and go for it, trust me, I can't think of a young lady that would say no to you.\"\n\n\"Really?\" he grinned, \"You think I'd do okay?\"\n\n\"You'd do just fine with me.\" I winked and had to bite my lip not to laugh at the look on his face, \"Maybe you should think older; we ladies appreciate a fine young gentlemen.\"\n\n\"You...you're messing with me.\" He laughed nervously. \n\nNo, but I'd like to be. I shrugged knowing it made my tits bounce and seeing his eyes follow them made that warm feeling return between my legs. \n\n\"Just being honest, don't waste your best years Max, find yourself a young lady\" Or maybe a horny cougar... \"Anyway, we're on your dad's dime now, so let me grab my stuff and I'll change and meet you in the kitchen okay?\"\n\n\"Sure.\" He said.\n\nI quickly turned around and bent over for him as I grabbed the short beach robe I'd brought with me. I pretended to look for something in my bag, before zipping it and made sure to let my ass sway back and forth as I did. I looked to the side at the glass doors leading into the house and in their reflection saw Max standing there gawking at my ass.\n\nI opened my legs a little wider and pictured him staring at the strip of material between my legs. Thought of him dropping to his knees and moving it to the side and shoving his face into my wet pussy. I so needed to get laid this weekend.\n\nI stood up and turning around said, \"Oh, you're still here.\"\n\n\"Um, yeah...I was just...\"\n\n\"Just?\" I raised my eyebrow and looked him in the eye. My eyes were a deep green and Max had once told me he thought they were 'pretty'. He tried to hold my gaze, but didn't last more than a few seconds before he mumbled something and started to walk away.\n\nHe stopped when a voice called out, \"Hey, is today's lesson by the pool?\"\n\nWe both looked to see Max's father, Richard, leaning against the gate. Oh fuck, what the hell was he doing home and how long had he been watching?\"\n\n\"Sorry, dad.\" Max spoke up, \"I just got here and Laura was telling me to get inside so we could start.\"\n\n\"No, my fault.\" I quickly slipped my robe on, \"I was talking to Max about work and wasn't watching the time.\"\n\n\"Well I'm assuming you'll stay the extra few minutes to make up for it?\"\n\n\"Of course.\" I nodded, \"I always give my students their money's worth.\"\n\n\"Maybe more than that in this case.\" Richard said as he strolled over to us.\n\nUh-oh, I didn't like the tone of that remark and the following one did little to set my mind at ease.\n\n\"Laura, could we speak for a few minutes before Max's lesson? Do you have time?\"\n\n\"Of course.\" I told him feeling my stomach tighten. He'd been watching us and seen me flaunting myself at his son. Christ, I couldn't lose this job!\n\n\"Good.\" He looked at Max, \"How about you take a shower. Miss Phillips doesn't need you sweating on her textbooks. She'll be ready by the time you come down.\"\n\n\"Sure, thing.\" Max hurried up the stairs of the deck and into the house.\n\n\"Sorry, Mister Thompson.\" I began, \"I lost track of...\"\n\n\"Richard, please.\" He waved his hand, \"I've told you before we don't have to be formal, right Laura?\"\n\n\"Of course not.\" I smiled, hoping I didn't look nervous.\n\n\"Good because we need to have a conversation and it may not be very professional.\" He gestured towards the small table next to the pool with a large umbrella over it, \"Let's get into some shade at least.\"\n\nHe remained where he was and I walked past him to go sit down.\n\n\"Have to say that's quite the bikini, Laura.\" He said as he walked over and sat across from me, \"I had no idea you were so well endowed.\"\n\n\"Well you said I could use the pool.\" I didn't remark on his comment wondering if he were being sarcastic. \n\nI had no illusion he was flirting with me; Richard Thompson was not a rich playboy, he was always a gentlemen and since his wife had passed a few years ago had dated several women, but always respectable ones and he was good to them, he was far from a dog.\n\n\"I did, but I would think seeing I have a twenty year old son you might have used some discretion with your attire.\" He grinned, \"Let's face it, young men get excited over seeing a woman period and that bikini is let's say, minimal.\"\n\n\"You're right. I'm sorry.\" I nodded, \"I won't wear it again, I wasn't thinking.\"\n\n\"Really?\" He leaned back in his chair and put his hands behind his head, \"You're an intelligent woman, Laura, I would hazard to think you did think it through and were enjoying the reaction you knew that outfit would cause.\"\n\n\"What are you trying to say?\" I asked, trying to sound put off.\n\n\"Laura, may I ask you a question?\"\n\n\"Yes, anything.\"\n\nHe leaned over the table and gestured for me to do the same. The table was small and when our faces were only about a foot apart he smirked, \"Do you like cock teasing my son?\"\n\n*****\n\n\"What did you say?\" Once again I went for indignant, trying to cover up the fact I felt as if he had kicked me in the stomach.\n\n\"You heard me.\" He rolled his eyes, \"Come on, Laura, we're adults here. I got home right behind Max and I was watching. You were showing off and he looked like he was ready to pop and you...\" He grinned, \"Something tells me you were pretty close yourself.\"\n\n\"Richard, that's hardly appropriate.\" I kept up the act.\n\n\"Neither is that bikini or shoving your ass at my son and shaking it around.\" He sighed, \"But all I want is for you to answer the question, and answer it honestly, do you like teasing him?\"\n\n\"Maybe you should find another tutor.\" I made as if to get up. I couldn't lose this gig, but I couldn't admit I was teasing or it could be the end of my side job, hell my real job if Richard wanted to push things.\n\n\"Laura, please sit.\" Richard spread his hands out, \"Do I look upset? I'm simply asking a question and want a real answer.\"\n\nWhen I remained seated, but didn't answer, he nodded.\n\n\"Okay, this is my bad as the kids say, I should have started this differently, but I wanted to have some fun with you.\" He tapped the table, \"Laura, what if I told you I am hoping the answer would be yes?\"\n\n\"I would ask what game you're playing.\" For real, what was he getting at?\"\n\n\"Right, I get it. You could get in trouble. Okay we'll try again. I'm hoping you were teasing him on purpose and if you were I can assure you, you're in no trouble at all.\"\n\nI narrowed my eyes, \"Have you been drinking Richard?\"\n\n\"Laura, I need help with something, something that involves Max, so one last time, were you teasing?\" Before I could respond he added, \"There could be something in this for you.\"\n\n\"In it for me?\" I shrugged, \"I'm getting curious and I'm taking you at your word.\" I sighed, \"Yes I get a kick out of your son looking at me.\"\n\n\"Good.\" He laughed, \"Not so hard, huh? Well I bet he was in fact I know he was, know how I know?\"\n\n\"I don't think I want to know that.\" I shook my head.\n\n\"Laura, remember last week I popped in right as you were finishing your lesson?\"\n\n\"Yes.\"\n\n\"You left, Max went in his room and I had forgotten to ask him something so I walked in and caught him...well you know.\"\n\n\"You can call me a cock tease, but can't say jerking off?\" I raised my eyebrows.\n\n\"Ha, good one.\" He laughed, \"Guess it was a little awkward especially when I saw what he was jerking off to. It was a porn video.\"\n\n\"Nothing weird about that.\" I pointed out.\n\n\"The video was a teacher student thing. I stood behind him for a minute and couldn't help but notice the woman had red hair.\"\n\n\"Oh.\" I said simply.\n\n\"So the little shows you're putting on are getting results it seems.\"\n\n\"I am sorry; it was totally irresponsible of me and...\"\n\n\"Here's the thing.\" He paused, \"Laura, I'm going to trust you with this. You've been tutoring Max since he was seventeen and I feel we know each other fairly well so I'm going to take a chance.\"\n\n\"With what?\"\n\n\"I could care less Max is whacking off to porn with older women and teachers. If he's got a little crush on you? Fine, perfectly normal, you're a hot cougar to him.\"\n\n\"Thanks, I think.\"\n\n\"But the problem is all he does is jerk off...\" He lowered his voice as if he thought someone were listening. \"Max is a virgin.\"\n\n\"Really? But he's such a great kid! Not just looks either, he's nice.\" I grunted, \"If nothing else you have money. I would think the girls would be on him just for that.\"\n\n\"Well in that case, I have no issue with him not falling for a gold digger, but he's just shy. Girls make him nervous and I can't get him going. I've set him up with friend's daughters, dragged him over to girls at parties to talk to them.\"\n\nHe slumped back in his chair, \"He's interested, he'll talk to them, he'll go on a date, but never a second one and when I talk about it he gets all flustered, says he's not ready. Christ he's twenty years old, a college sophomore! I don't want him getting married, but he should have some fun and it's not the girls, they run right up to them.\"\n\n\"I was talking with him about that, I asked if he had a girlfriend.\"\n\n\"I wonder if it's because his mom's gone and I never talked much about girls and sex. You know my mom died and I had no clue what I was doing either because my old man was too busy working to pay any attention to me.\"",
        "\"So what are you asking? For me to talk to him, tell him to go get laid?\" I laughed, \"He'd probably be too embarrassed to talk.\"\n\n\"Um, not exactly.\" Richard resumed tapping the table nervously, \"Know how I said I was like Max?\"\n\n\"Yes.\"\n\n\"I was an attractive kid, a nice kid and girls flirted with me, but I was like him...just shy and scared and could never pull the trigger. I had chances, but I'd run with my tail between my legs.\"\n\n\"So what worked for you?\"\n\n\"I'm getting to that. See my old man found out and he was outraged his son couldn't 'score' as he put it. So he did what he always did. He bought the solution.\"\n\n\"I'm not following.\" I said, confused.\n\n\"He picks me up from school, brings me to a hotel and leaves me with a hooker.\"\n\n\"What?\" I exclaimed.\n\n\"Yeah, she wasn't a young college age type, but much older, early forties, probably about your age.\"\n\n\"Watch it.\" I pointed at him.\n\n\"But looking much younger of course.\" He grinned, \"But yeah, pops bought me an escort to show me how to be a man. I was a nervous wreck, but she was nice. We chatted, she went nice and slow, eased me into it. I'd see her once a week for a couple of months.\"\n\n\"All paid?\"\n\n\"Yup, my old man wanted me to know how to take care of a woman and that was the thing about it. He didn't want her to just take care of me, he wanted her to show me how to please a woman, to be a good lover, know how to make a girl happy. So she gave me some private lessons.\"\n\n\"I guess so.\"\n\n\"And it worked. Next time I saw a girl that caught my eye I had no trouble asking her out then letting nature take its course.\"\n\n\"Well that was still kind of crappy.\" I told him.\n\n\"It was, but he had no clue what to do and I had no mother to help with the emotional side of things so that's what I got.\"\n\n\"So what does that have to do with now?\" I asked.\n\n\"Max is in the same exact spot and he needs to learn to be with a woman.\" He looked away, took a deep breath then asked, \"Laura would you be willing to teach him?\"\n\nI stared at him, was he serious? He was avoiding making eye contact with me which told me this probably wasn't a joke, if it was he would be watching for my reaction, not looking everywhere else. He then sealed it when he said softly, \"I'll pay you.\"\n\n\"Are you fucking kidding?\" I blurted out, \"What do you think I am; a whore?\"\n\n\"No, no!\" He put his hands out in a calming gesture, \"I'm sorry, I know how it sounds, but I don't really mean it that way.\"\n\n\"You just offered to pay me to have sex with your son.\" I threw my hands up, \"Who's barely a man.\"\n\n\"Eighteen is barely a man. He's twenty and let's face it; you didn't mind flaunting your tits to him, now did you? I know I just asked something out of the ordinary of you, but don't get so puffed up, you were cock teasing him and loving it.\" He pointed, \"So am I really that far off in asking?\"\n\n\"Ouch.\" I nodded, \"Okay, you got me, but teasing and doing are different and I'm his tutor, been doing that for almost three years, I know him.\"\n\n\"That's the point.\" He said quietly, \"You know him, he likes you, and he's comfortable with you. It wouldn't be like my old man dumping me off with a stranger. Max would trust you.\"\n\n\"And I'd be earning that trust.\" I rolled my eyes.\n\n\"Remember, I was watching Laura and it wasn't just Max that looked like he was ready to lose it, the look on your face was straight out of one of those porns he watches. You looked like you wanted to eat him alive.\"\n\n\"I know sex isn't everything. I've never been a player or womanizer and I don't want him to be one either, but he lost out on a lot of fun in High school and he's going into his second year of colleges and still a virgin!\" \"Come on, you remember college, think of the fun he's missing! These are the best years of his life and he's pissing them away because he's nervous.\" He laughed, \"Come on, help the kid out!\"\n\n\"I admit I've thought about younger guys in general lately, but Max is different.\"\n\n\"Only because you're afraid to lose the job.\" Richard smiled, \"And that will not happen, trust me.\"\n\n\"So say I did this. I seduce him; show him what he's missing. Then we just go back to talking about English composition? I'll be done as his teacher, I would have to be.\"\n\n\"Only if you want to.\" He said, \"And what if I told you I have two people on the hook that need a tutor; I can get you more work. So if you wanted to quit here you'd be fine.\"\n\n\"You really think I'd do this? That I would take money to fuck a student? What if he says something? He's a kid, he'll brag.\"\n\n\"He won't because you'll tell him real men don't kiss and tell. That's one of his lessons; if you have sex with a girl you have a better chance of more if you don't run your mouth.\" He shrugged, \"If nothing else, deny it and I'll refuse to believe him and stick up for you.\"\n\n\"You still assume I'd do it for money.\"\n\n\"Laura.\" He grinned, \"I know people, I make money knowing people. You broke up with Jeff awhile back and that's when you started really teasing Max. You just said you've been thinking about young guys.\"\n\nHe grinned as I frowned, and continued, \"You commented you haven't had much of a life lately. All that adds up to you being frustrated and looking to ease that frustration. I'm offering you a chance to do that and help out Max at the same time.\"\n\n\"How magnanimous of you.\" I muttered.\n\n\"Oh, and there's your current financial woes as well.\" Reaching into his shirt pocket he removed a wad of hundred dollar bills and held them up to me. \"One thousand dollars...\" He paused and looking me in the eye added, \"Per lesson.\"\n\n\"I...\" I swallowed, a grand? A grand per lesson? Two or three thousand would really ease my worries for the next couple of months and he'd mentioned....\n\n\"And the names of two possible students? That will pay my rate?\" I asked.\n\n\"Right here.\" With a smile he turned the money over and I saw a business card clipped to it with names written on it. \"I have highly recommended you; they're waiting for your call.\"\n\n\"But I only get the names if I seduce Max?\"\n\n\"Of course, business is business.\" He put the money down between us. \"Come on Laura, this is win win for you! Money, more clients and you get to play out the graduate with a good looking boy who's already getting off to you.\n\n\"You said he was watching milf videos and one happened to be a teacher, doesn't mean it's me.\" I said lamely knowing damn well I'd done everything I could lately to make him think of me.\n\n\"Oh, it was you.\" He laughed, \"I know because I talked to him and asked him if he thought of you like that.\"\n\n\"You did what?\"\n\n\"Hey, it was guy talk.\" He shrugged, \"I told him you were pretty damn hot and he agreed and I asked if he thought of you and he admitted he's had some dreams about you.\"\n\n\"You didn't tell him about this did you?\"\n\n\"Of course not!\" He exclaimed, \"I don't want to be like my father, I want him to think you're just coming on to him, that you're into him and want him. Come on, admit it. If you go home and think about this you're going to get hot and bothered, you know you want to.\"\n\n\"Is that so?\" I said, but even I could hear my insincerity. Paid to fulfill a fantasy and get some much needed relief.\n\n\"You're going to teach him, Laura, not just let him fuck you. You're going to show him how to please a woman; you're going to show him on your body, you're going to enjoy this as much as he is. Hell, the kid will worship you! Isn't that the point with young guys? They appreciate it?\"\n\n\"I...\" I stared down at the money. \"How many lessons do you think he'll need?\"\n\n\"I'll pay you for three.\" He was all business now. \"If you choose to continue to fool around with him past that, it's because you're having a good time and want to.\" He smirked, \"Something tells me you the way you act around him, you might want to.\"\n\n\"So you'll think he's learning from a slut then.\" \n\n\"I'll think he's learning from a woman smart enough to make some money doing what she's playing with herself thinking of anyway.\"\n\n\"That's pretty crude.\" I informed him.\n\n\"But true. We're adults here, Laura.\" He tapped the money, \"What's it going to be?\"\n\n\"I can't think about it?\"\n\n\"No.\" He said simply. \"I have to get back to the office for a late conference call and I want today to be the first lesson. So choose right now.\"\n\nI leaned back in the chair and thought about it. I could so use the money and the clients could be worth a lot more than that long term and Richard was right, I'd been sitting there thinking about making Max putty in my hands. But could I really go through with it?\"\n\n\"Once, going twice.\" Richard sighed and reached for the money.\n\n\"I'll do it.\" I said and watched him remove his hand from the money. \"But I might not go all the way today, I want to go slow.\"\n\n\"It's your curriculum,\" He smirked, \"I'll trust in your expertise.\"\n\n*****\n\nI stood in the huge bathroom and carefully applied my lipstick and wondered if I could really do this. Seeing the money and the card were in my purse, I pretty much had to or risk Richard firing me and calling the new clients and telling them not to hire me. \n\nI pursed my lips, taking in the deep slut red I'd painted them and fluffed my hair out. Normally I wore it pulled back or pinned up when I taught, but for this lesson I would leave it down. I normally changed into a pair of slacks and a blouse or occasionally jeans and a t-shirt, but right now I was still wearing the short beach robe.\n\nI had removed the top to the bikini so when I leaned over the table Max was going to get one hell of view. Despite my misgivings just thinking of Max seeing my breasts and what it would do to him had my nipples stiff.\n\nI had to face facts; Richard had hit on everything he said. I was lonely, horny, frustrated and could use the money to do something I was fantasizing about anyway. I adjusted my robe so it wasn't tied so loosely it was obvious and slipped on the heeled sandals I'd brought with me to make my legs look sexier and add to my 'look'\n\nI quickly grabbed the text book from my bag and zipping it up, left the bathroom before I lost my nerve. I dropped my bag that contained the clothing I should be wearing near the door and walked into the dining room.\n\nMax was there dressed in another sleeveless t-shirt that looked damn good on his tanned skin and immediately eased some of my inhibitions, and a pair of loose shorts. He had his lap top open and his book and note book next to it. Little did he know, he wouldn't need those today.\n\n\"Sorry, I kept you waiting.\" I announced as I entered.\n\n\"That's okay I had to...\" He trailed off when he looked up at me.\n\nHe gave me a quick up and down and then turned his eyes towards the table and said, \"You can take time to change if you want, I'll wait.\"\n\n\"Silly me, forgot my damn pants.\" I laughed, \"So it was either the robe or I could sit here in my underwear.\"\n\n\"Oh.\" He was already blushing as he mentally created the image I'd given him. \"R...right, wouldn't want that.\"\n\n\"Not that the thong would show more than my bikini anyway.\" I sighed, \"You know, Max I'm sorry about that.\"\n\n\"About what?\".\n\n\"Wearing that suit, it was pretty revealing.\"\n\n\"Oh, I didn't mind.\" He stopped and his blush deepened, \"I mean you know, you can wear whatever you want.\"\n\n\"You didn't mind?\" I smiled as I sat across from him. \"Did you like it, it's new?\"\n\n\"It was, um...pretty.\"\n\n\"Think I'm pretty?\"\n\n\"Uh...shouldn't we get to work?\" He tapped his book. \"We left off on...\"\n\n\"Oh, you're dodging the question.\" I pushed my lips into a pout, \"Guess you don't think I'm pretty.\"\n\n\"I do. I mean, well...\" He frowned, \"Pretty is kind of a young girl thing, you're...\"\n\n\"I'm?\" I prodded.\n\n\"Beautiful?\" \n\n\"I like that.\" I gave him a huge smile.\n\n\"So, what did my dad want?\"\n\n\"He found me a couple of leads for new students.\"\n\n\"Oh, good.\" He nodded.\n\n\"Why, what did you think?\"\n\n\"I...I thought maybe he saw us and...thought I was looking at you.\"\n\n\"Were you?\" Nice segue this was.\n\n\"No!\" He shook his head, \"Not like that I mean.\"\n\n\"Damn, must be losing my touch.\" I sighed, \"I used to be able to turn heads in a bikini.\"\n\n\"Chapter twenty?\" He suggested, opening the book.\n\n\"Is that where we were? Let me see.\" \n\nInstead of opening my own book I stood up and leaned over the table to look at his. I felt the robe open and my breasts fall forward. Max looked up and his eyes looked as if they were going to fall out of his head. His mouth opened and remained that way as he stared down my robe. I figured he could see everything right down to my pink nipples and a wave of heat flowed through me. Goddamn Richard had been right on, that was for sure. \n\n\"Max?\"\n\n\"Um, Miss....I mean Laura?\"\n\nI grinned and unleashed a classic, \"The books here, honey.\" I tapped it.\n\n\"Yes!\" He nodded, \"Right.\" He looked down at it. \n\n\"You take notes over the week?\"\n\n\"Sure,\" He started to slide the notebook over to me, but I walked around the table and sat next to him.\n\nI pulled my chair over so close my bare leg was resting against his and leaned to the side to look at the book. That put my hair in his face I could feel his breath on my ear as I turned my head. \n\n\"Sorry.\" I moved my hair away from his face which left him looking at my neck. I imagined him kissing me there and wanted to squirm in my seat. \"Wow, these are good notes.\"\n\n\"Thank you.\"\n\n\"You're good at a lot of things, aren't you Max?\"\n\nI sat up and turned in my seat to face him. I opened my legs, and saw his gaze drop down to my exposed thighs. My eyes were focused on his crotch and I had to force myself not to lick my lips at the sight of the bulge there. \n\n\"I don't know.\"\n\n\"Bet you are.\" I smiled, \"So that's why I wonder, why no girlfriend?\"\n\n\"I guess I haven't met anyone yet.\" He put his hand on the notebook, \"Shouldn't we talk about...\"\n\n\"I'm sure you have met plenty of girls and honey? I'm a woman and I know damn well you're getting attention from the girls, you are far too hot not to.\"\n\n\"You think I'm...hot?\" His eyes were still on my thighs as if he were to mesmerized to care if I were looking and I spread them further open, but put my hand on the robe between them so he would only be able to see more of my thigh.\n\n\"You're a sexy young man, too sexy to be alone.\" I leaned over and whispered in his ear, \"Max, are you shy?\"\n\n\"No...well....a little.\"\n\n\"Why, what are you afraid of?\"\n\n\"I don't know.\" He shrugged, \"Can we...\"\n\n\"Max, have you ever had sex?\"\n\n\"That's a little personal!\" He declared, finally pulling his gaze from my lap and looking at me.\n\n\"That's my answer then,\" I laughed and put my hand on his arm, \"That's okay though, just makes you even cuter.\"\n\n\"Don't make fun of me.\" He sulked, his lip out, God he was adorable! I wanted to kiss him right on the spot.\n\n\"I think it's sweet.\" I lowered my voice to a sultry whisper and leaning closer spoke in his ear, \"Sweet drives women crazy, especially older women.\"\n\n\"Really?\" He asked and I noted he made no attempt to move.\n\n\"Really.\" I sighed, allowing my hot breath to blow on his neck, \"God, a woman my age? We could just eat sweet alive.\" At this point my lips were almost touching his ear, \"Sweet makes us not want to be sweet all.\"\n\n\"Hey, want a soda?\" He blurted out and pulled away from me, almost falling off his chair.\n\n\"Am I making you nervous, Max?\"\n\n\"No, uh...yes.\" He nodded, \"You're getting kind of close.\"\n\n\"Is that a bad thing?\" I gave him an innocent smile, \"A beautiful woman getting close to you?\"\n\n\"How about that coke?\" He stood up and for a moment the now larger bulge in his shorts was right in my face and my eyes widened.\n\n\"Guess it's not so bad at all is it?\" I grinned, \"Because you look awfully happy.\"\n\nMax blushed so deeply he looked sunburned and stuttering something about a drink turned his back and practically ran into the kitchen. When he was out of sight I leaned back in my chair and put my hand between my thighs, Christ, I was soaking through the bikini. Who the hell had I been kidding? I was so ready for this.\n\nBut now what? Just blatantly put a move on him? I stared at his lap top and recalled Richard saying he caught him watching porn. I looked over my shoulder to make sure Max wasn't already on his way back. I figured he would take his time and try to calm himself down and that was fine with me. \n\nI went into his history and scanned through the sites he visited. My eyes lit up on \"My First Sex Teacher\" and I clicked it.\n\n\"Oh, you naughty boy.\" I whispered as I saw it was an entire site dedicated to teacher student fantasies, Richard hadn't been kidding.\n\nI looked at the rows of small pictures of the videos and spotting a red head on her knees for her 'student' I clicked it. \n\nThe video was only a clip and started out in the middle of the action with the teacher already kneeling and sucking on her pupil's huge cock. \n\n\"Damn.\" I sighed as I watched her slowly suck while staring up at him. I licked my lips and thought about being in her position very shortly, but then again I wanted to go slow and ease him into it and I was getting paid per lesson.\n\nI heard Max pop open a can in the kitchen and knew I only had a minute or two to figure out what I wanted to do. On the screen the woman was now teasing, sitting back and stroking his glistening cock, jerking him and asking him what he wanted.\n\nHe moaned and pumped his hips, begging her for more, but she giggled and kept stroking him while waggling her tongue over the tip of his cock. Inspiration hit me and at the sound of footsteps in the kitchen, I closed the lap top and took it off the table along with his note book and went into the living room.\n\nI placed it on the coffee table and sat on the edge of the couch to wait for him. Max came from the kitchen and looked at the table then out into the next room.\n\n\"Why are you in there?\"\n\n\"Its cooler in here and honestly, this couch is so soft!\" I laughed, \"I'm not wearing pants so it feels real nice.\" I winked at him and his eyes went down to my legs again.\n\n\"Well come on,\" I tapped the couch, \"I don't bite, I just nibble from time to time.\"\n\nMax walked over looking like a dear in headlights \"Here you go.\" He handed me the glass and I heard the ice clicking, the poor kids hand was shaking! Priceless.\n\n\"Thank you.\" I took a couple of long swallows, making sure to press my lower lip to the glass. \n\nI then took the cool glass and rubbed it along my upper chest.\n\n\"That feels good, the sun was warm today.\" I told him as I slid the glass up my neck leaving a wet trail from the condensation. \"Oh, damn.\"\n\n\"What is it?\" He asked, placing his can on the table.\n\n\"I got lipstick on the glass,\" I sighed, \"Lipstick gets all over everything I put in my mouth.\"\n\n\"Right.\" He agreed and gestured at the lap top, \"Laura, can we get started?\"\n\n\"Of course.\" I tapped the couch next to me \"Sit down and go to the PC site, I want to look at your class schedule again, see who you have, I know some of the teachers there, we can figure out what to focus on.\"\n\n\"Great!\" His relief was comical as he sat on the middle cushion and leaning over opened his lap top. \n\nThe screen came up and the red haired teacher was right there stroking her moaning student.\n\n\"What the fuck?\" Max exclaimed.\n\n\"Oh, look at that!\" I laughed, \"You bad boy, Max.\"\n\nHe went to close the lap top, but I reached out and caught his arm.\n\n\"Let it play.\"\n\n\"What? I...\"\n\nJust then the woman spoke, \"Hmm, you're being such a good student for me, you're working so hard; you think maybe your slutty teacher should reward you?\"\n\n\"Well now.\" I looked at him, \"That's a different lesson isn't it?\"\n\n\"L...Laura, I don't know how that got there.\" He tried to move his arm, but I pulled on it once more, stopping him, but using my other hand used the mouse to pause the video.\n",
        "\"No? You accidently found a site like that and somehow your computer kept watching it by itself?\"\n\n\"Well, um...\"\n\n\"It's okay, Max, porn is fun. I like it. I do know people tend to watch what they really desire and...\" I pointed at the screen, \"Lot of sexy teachers on your computer.\"\n\n\"It's not what you think.\"\n\n\"Really?\" I pouted \"That would be too bad because I'd really like it to be.\"\n\n\"I...what?\" He looked at me and I placed my hand gently against his cheek.\n\n\"I was hoping it's what you wanted, hoping you thought of me like this.\" I licked my lips and his eyes looked like they were going to explode from his head. \"I saw this and really hoped you wanted some....private lessons.\"\n\nI put my hand on his crotch and we both gasped; him from surprise and me from...goddamn was he fucking hard!\n\n\"Laura! We...my dad!\"\n\n\"Is paying me to teach you things.\" I smiled, \"Who says it has to be boring?\"\n\n\"We...you're screwing with me.\" He whispered, but made no move to remove my hand from his crotch.\n\n\"Max if I was screwing with you would I be playing with this...hmm,\" I leaned over and purred in his ear, \"Nice big cock?\"\n\n\"That...Oh, shit.\" He moaned when I gave it a squeeze. \"Laura, please we...\"\n\n\"You don't have to beg, honey.\" I flicked my tongue across his ear and felt a shiver go through him. \"I'm a sure thing.\"\n\n\"You are?\"\n\n\"Eventually.\" I said in his ear as I rubbed the length of his cock thinking I wanted it now, but I would go slow today. \"But it's like your regular lessons, we start at the beginning and we go slowly and you let me show you, okay?\"\n\n\"Okay.\" He swallowed hard, \"You...you're really not teasing me?\"\n\nI turned his head to face me and kissed him. He tried to pull back in surprise, but I slid my hand behind his head and pressed my lips softly to his. He released an adorable whimper in his throat that caused my pussy to gush and I forced myself to only make it a quick kiss.\n\n\"Now...that's the first thing, Max, women like to be kissed and you always kiss before playing, right?\"\n\n\"R...right.\"\n\n\"Have you kissed a girl?\"\n\n\"A couple of times, but um, not much.\"\n\n\"Well, how about you kiss me?\" I leaned back and parted my lips. When he didn't respond right away, I opened my eyes to see him looking at me nervously.\n\n\"Come on, Max. I told you to follow my lead, but women like a man who doesn't need to be told.\" I gave his cock another squeeze causing him to moan again. \"You like that? Like me playing with your nice, big dick?\"\n\n\"Yes.\" He breathed as I rubbed it through his shorts.\n\n\"Well if you want me to keep doing it, you'll give me a nice kiss. In fact.\" I grabbed the snap of his shorts and pulled it open, \"You do a good job, I'll reach right in and grab it, and wouldn't that feel better?\"\n\n\"Yes.\"\n\n\"Then, how about you give your naughty teacher a kiss?\" I closed my eyes and parted my lips once more and my heart pounded in anticipation as I awaited his kiss.\n\nAfter a moment of nothing, I stopped moving my hand and lifted it from his crotch. Immediately his lips pressed quickly to mine and with a soft moan, I grabbed his cock and stroked it once more.\n\nMax kissed me quickly, several rapid fire little pecks and telling myself to be patient, I worked my fingers through his hair and keeping his head still caught his lips with mine and slowed him down. \n\n\"Relax, it's not a race, baby.\" I whispered against him, \"Women like men who take their time, not grabby boys. Take your time, enjoy me; experience me.\"\n\nI kissed him again, my lips sliding teasingly along his and after remaining still for a moment he followed my lead and moved his lips against mine. I moaned loudly for him and pulled his hair. More inspiring to him I'm sure was me pulling his zipper down and teasing my fingers along his cock now just through his underwear.\n\nLetting his hair, go I grabbed his wrist and pulled his arm around my waist. I continued to kiss him and he didn't need to be told to put his other arm around me. He pulled me into him and I breathed, \"There you go,\" then pushed my tongue into his mouth.\n\nMax gasped when my tongue darted across his, then moaned when my fingers worked their way into his boxers. I touched his bare cock and he whimpered, causing my pussy to become even wetter. He pushed his tongue against mine and his kiss grew bolder, his lips pressing harder to mine and even taking the lead.\n\nI let him control the kiss as my hand made it inside his boxers and I wrapped my fingers around his thick shaft.\n\n\"Oh, honey!\" I moaned and not for his benefit, but the fact...wow, he had a nice cock!\n\nMax broke the kiss and moaned when I pumped his cock. I reached the head and squeezed it and felt some of his precum squirt onto my hand. I moaned at the sensation and rubbing it along his sensitive head then pumped him faster, getting his cock slick with his juices.\n\n\"My neck.\" I whispered, and lifted my head, \"Kiss my neck, my chest; keep your lips on me, Max. Women love their necks kissed, we love everything kissed.\"\n\nMax obediently fastened his lips to my neck and I sighed as he kissed me and I continued to play with his hard, and pretty damn big, young cock. Max surprised me by taking his time, working his lips along one side of my neck then down the other.\n\nAs a reward, I stroked him faster. It was a reward for me as well, because his cock felt damn good in my hand. I squeezed him tighter and felt him pulsing against my palm. My clit was throbbing at the idea of what that hard flesh would feel like in my mouth and stuffing my recently neglected pussy. \n\nAt this point I had to tell myself to go slow as much as I had to convince him to. It wasn't going to be easy as Max followed my instructions to the letter and slid his lips down to the top of my chest. \n\nI grabbed his arm and pulled on it. Max let me guide his arm to me and taking his hand I put it on my left breast through the robe. He groaned as he kissed my chest and my breath hissed between my teeth as his fingers caressed my nipple. \n\n\"Go ahead,\" I said softly, \"Reach in, touch me.\"\n\nMax didn't hesitate this time; his hand slipped into my robe and cupped my breast. I moaned as his fingers slid over my bare nipple and squirmed on the couch as he fondled my breast. \n\n\"You want to see them?\" I asked.\n\n\"Please?\" He looked up from my chest, his blue eyes bright with excitement.\n\n\"Before you do, how does that look?\" I pointed down to his lap as I tugged his cock from his underwear,\n\n\"Oh, fuck.\" He whispered as we both watched my hand slide up and down his long thick shaft.\n\n\"Honey, this is a big fucking cock.\" I said and putting my other hand on it, jerked it with both.\n\n\"Oh...oh, Laura.\" He moaned, slumping back against the couch as I jerked him off.\n\n\"Hmm, I like that, that's nice, Max. Always let your lady know she's pleasing you. Don't buy that bullshit men don't moan or make noise. We love to hear it just like you do.\"\n\nI wanted to do more than hear it, I wanted to taste it. Fuck, I wanted to swing my leg over his lap and ride this beautiful dick. Richard was right, this kid had wasted too much time, Christ, the fun he could have had!\n\nBut not yet, I wouldn't be doing what Richard wanted if I just took him for a ride on the spot. Not only that, but as slow as I was pumping him, his legs were shaking and he was moaning louder, poor kid was ready to pop. \n\nMax was leaning back against the couch breathing heavily and staring at my hands on his cock. He was so into it his hands had left my body and he was simply watching.\n\n\"Hey, baby, don't forget about me.\" I told him and released his cock, \"Never forget about your lady.\"\n\n\"S...sorry, that felt so good.\" He looked down at his cock, \"You're not going to stop are you?\"\n\n\"Well, that depends.\" I was starting to enjoy myself now. \"On what you do for me.\"\n\nI leaned back into the corner of the couch and held up the ties to my robe, \"I asked if you wanted to see my tits and all you did was sit there and let me play with you, what about me?\"\n\n\"I, well I thought you were going to...you know?\"\n\n\"I know what?\" I wagged my finger at him, \"Be a man, Max, don't be a boy, even girls your age don't like nervous boys, tell me what you thought I was going to do.\"\n\nMax paused and I sighed, \"Well I guess you can turn that movie back on and finish yourself off then. I won't waste time with a boy.\"\n\n\"I thought you were going to make me cum.\" He gave me a nervous smile, \"Please?\"\n\n\"Please is nice, but a little out of place.\" I pushed the ties of the robe out to them. \"Don't you want to see them?\"\n\n\"Yes, pl...Yes.\" He caught himself, \"Laura, I'd love to see your tits.\"\n\n\"Better.\" I shook the ties, \"Un-wrap me.\"\n\nMax leaned over and I had to make an effort to keep my eyes off his still fully hard cock and focus on him. When he took the ties, I kept my hands on them and spoke softly.\n\n\"Sometimes the girl may undress for you, it depends on her mood, if she feels like showing off and being playful, but a lot of times we like to be undressed and don't be nervous, don't be rough or pushy, but be confident and make the move.\"\n\nMax nodded and when I let the ties go he pulled on them. My robe opened and fell to the side revealing my breasts and my pussy grew even wetter at the fact I was now exposed to him.\n\n\"Damn.\" He licked his lips, \"They're...perfect.\"\n\n\"Nice,\" I cooed, \"Compliments are good, baby, real good.\"\n\nI cupped my breasts, noting how warm they were, and hefting them, pushed them out to him.\n\n\"Like them?\"\n\n\"Yes.\"\n\nI stroked my nipples with my thumbs and couldn't stifle a moan. Part of me couldn't believe I was sitting here with my robe open, just the skimpy bikini bottom covering my dripping pussy, but the other part of me was reveling in it! The way Max was staring hungrily at my body, not just my tits, but his eyes were roaming my stomach and thighs and between my legs. \n\n\"Like how my nails look on them?\"\n\n\"I really do.\" He slid a little closer and I smiled,\n\n\"What would look better on them?\"\n\n\"My hands.\"\n\n\"Nice answer.\" I sat up and faced him, \"Go ahead.\"\n\nI released my breasts and Max eagerly cupped them and squeezed them gently. His fingers were trembling and again his nervousness sent a thrill through me. His thumbs caressed my nipples and I groaned, damn they were sensitive right now.\n\nMax was staring at my breasts with a look of absolute lust on his face that caused me to lose character, grabbing the back of his head I pushed his face down into my right breast.\n\n\"Come on, baby, you know what you really want to do!\"\n\nMax didn't disappoint me and I released a low moan as he sucked my swollen pink nipple into his mouth. He moaned as his tongue swirled around it and his thumb continued to work my other nipple.\n\n\"That's nice, Max, just like that.\" I sighed and running my fingers through his thick hair, turned to the side, pushing my other breast at him, \"Other one's jealous.\"\n\nMax laughed and as he sucked my other aching nipple I took hold of his cock again. He whimpered as I pumped it and it caused me to arch my back, shoving my tit deeper into his mouth. The control I had over him was driving me wild. \n\n\"Hmm, someone needs to cum, don't they?\" I gave his cock several hard pumps that caused him to moan around my nipple and thrust his hips.\n\n\"Yes,\" He spoke around my breast, \"I need to cum so bad!\"\n\n\"And I want to make you come, baby, but...\" I eased his head from my tit so he was facing me. \"There's a very important lesson here.\"\n\n\"What's that?\" He asked nervously.\n\n\"Once you're with a woman for awhile it's different because you're both comfortable, but at first? You want to make a good impression and make her come back for more? The lady always comes first, honey.\"\n\n\"Okay.\" He nodded, \"You want me to...?\"\n\n\"You're going to make me come for you.\" I smiled, \"Never made a girl come before have you?\"\n\n\"You know I haven't, don't make fun, I...oh.\" He groaned when I pumped his cock.\n\n\"I'm not making fun and the good news? In a few minutes you'll be able to answer yes.\" I tapped the back of the couch. \"Sit back.\"\n\nI released his cock and Max sat back against the couch. Leaning over him, I put my hands on his shoulders and slowly turned side to side, teasing my breasts across his face. He flicked his tongue out catching each nipple and I giggled, \"You're doing just fine, honey.\"\n\nI grabbed the edges of his shirt and tugged upwards. Taking the hint he lifted his arms and I stripped his shirt from him and tossed it on the floor.\n\n\"Take your shorts off.\" I said, \"I want to see all of that nice hard body.\"\n\nMax pushed his shorts down and kicked them off along with his shoes. I looked down at him and my heart pounded at the sight of his young well muscled form and that huge fucking cock standing at attention for me. \n\nMy robe was hanging off my shoulders and stepping between his legs; I put my back to him and slowly slid it off. As it fell to the floor I looked over my shoulder and smiled at the look on his face as she stared at my ass.\n\nI was now only in the minimal bikini bottom and heels and I felt both sexy and slutty as this boy less than half my age stared at me, naked desire on his face. I should be ashamed of myself, he was a kid to me, let alone I'd agreed to get paid for this, but all that added to the heat between my legs. Not sure if that made me a bad person or not, but one thing was for sure, I was a happy one at the moment.\n\nI sat on the edge of the couch between his legs and leaned back slightly. I felt his cock pressing into the small of my back and again fought the urge to hop on. Instead I moved my hair over my shoulder and said, \"Know what's sweet and sexy? Kissing a woman's back.\"\n\nMax put his hands on my shoulders and I purred as his lips found the back of my neck.\n\n\"So nice.\" I whispered as planted a series of soft kisses down my neck to between my shoulders, then worked his way back and forth. \n\nTaking his hands, I brought them around to my breasts, \"Hands and lips, honey, keep everything moving, and use everything you have.\" I ground back into his cock, \"Even this, rub against me, and let that girl feel how bad you want her.\"\n\nCupping my tits and stroking my nipples, Max worked his hips, sliding his cock along my back and I could feel his pre cum dripping down my skin. My hips moved back into him and my clit was throbbing to the point I was ready to whimper the way he had. \n\n\"Now lean back for me.\"\n\nMax did as I asked, but to my delight kept his hands on my breasts. When he was back against the couch, I slid my shoes off and pushing up rested my ass on his lower stomach and put my feet on his thighs.\n\nThis left his long thick cock sticking out between my legs and taking him in my hand I pressed it against my crotch and pumped my hips. We both moaned at the contact and I asked, \n\n\"Can you feel how hot and wet I am even through the bikini?\"\n\n\"God, yeah.\" He groaned thrusting his hips.\n\n\"Imagine this cock sliding through my wet pussy, through my soft wet lips, sliding...inside me.\"\n\n\"I...I'm imagining it.\" He breathed in my ear.\n\n\"Going to keep having to for now, baby. Can't go to fast too soon, but I will let you play with me, how's that?\"\n\n\"Anything you want.\" He moaned as I ran my fingernails lightly along his shaft.\n\n\"That's a good answer, Max, stick with that, you'll have no worries.\"\n\nI took his right wrist and removing it from my breast placed his hand on my stomach and guided it downward. I stopped just over the bikini and said, \"Tell me what you want.\"\n\n\"I want to touch you.\" I sighed in disgust and he quickly spoke up, \"Laura, I want to play with your pussy.\"\n\n\"You're learning.\"\n\nMy own fingers trembling at this point I pulled the bikini to the side exposing my pink slit, taking his hand I pushed his fingers through the damp patch of fiery hair over it, \"See that baby? I'm a real red head.\"\n\n\"That's...wow.\" He whispered as he peered down over my shoulder.\n\nI pushed his hand lower and moaned as his fingers slid through my wet lips. Max gasped, but made no attempt to move as I worked his hand back and forth stroking my hot little box with his fingers. I let him go and groaned as he continued to move, stroking me. \n\nHis cock was resting against my thigh and I was dying to rub it through my pussy, but if I did I wouldn't be able to resist shoving it inside me. I kept my bikini pulled to the side and returned my other hand to my right nipple. \n\n\"Play with my tit too, Max, never let one of your hands be empty.\" \n\nHe slid his arm around me and rolled my nipple between his fingers as he continued to fondle my pussy. I was breathing heavy and it dawned on me he wasn't the only one ready to pop. \n\n\"Just like that, but not inside, you can't feel inside until next time.\" I was telling myself at this point as much as I was telling him. \"Next time you can put your fingers inside and if you keep being such a good student, maybe your tongue.\"\n\nMax's cock twitched against my leg and I thought my tongue was definitely going to be in play next time around, God I wanted to taste it.\n\n\"Now slide your fingers up and find that clit and...Oh!\" I gasped when his two fingers rubbed my aching button and groaned, \"Yes, right there.\"\n\nMax rubbed gently up and down and a shudder went through me. \n\n\"In circles,\" I whispered, \"Nice and easy and in circles.\"\n\nMax followed my instructions and my hips jerked as he traced my clit with his strong fingers.\n\n\"That feel good?\" He asked.\n\n\"It does, honey, but never ask that, it sounds like you're not sure or you want a compliment, be confident, know it feels good. Feel my body move, listen to me moan, you can tell it feels good.\"\n\nI followed that up with a long soft moan because damn it did feel good! I pushed my back against his chest and let my head fall back on his shoulder. \n\nMax lowered his head and surprised me by kissing my neck.\n\n\"Very nice.\" I cooed.\n\n\"Use it all, right?\"\n\n\"Right, oh, Max you are doing just fine.\" I sighed.\n\nI lay back against him thinking this had to be a wet dream, I couldn't really be sitting here all but naked on Max's lap. He couldn't be rubbing my clit and teasing my nipple and kissing me; I couldn't really be this close to cumming at the hands of a student, but...it felt pretty real. \n\nMy hips were rocking back and forth and my thighs were shaking. His massive cock pulsing against my leg was driving me wild and I squeezed my right nipple harder. I released a sharp yelp and my hips jerked; God I was close!\n\n\"Faster,\" I moaned, \"Rub faster and harder, don't be afraid, Max, push on it, just....Oh, yes.\"\n\nI groaned as his fingers rubbed harder and my hips responded, grinding into his touch. My heart was pounding and I arched my back against him.\n\n\"Just like that,\" I whimpered, \"Just like that, Max, oh, honey, just a little more, a little....oh...oh, fuck yeah!\"\n\nI cried out loudly then released a long loud squeal as my body exploded into orgasm. Max's hand slowed and letting my tit go I grabbed it and held it between my legs, \"Don't stop!\" I moaned, \"Oh, baby I'm cumming for you I....\"\n\nMy words turned into a series of high pitched squeals and Max moved his fingers even faster and my body responded. It had been months since I'd come from anything other than a toy and my body was showing me what I'd been missing.\n\nMy hips bucked wildly and lifting my feet from his legs, I clamped my legs shut, trapping his hand between my thighs as I ground my pussy into him. He was squeezing my nipple harder in his excitement and it added to my pleasure. \n\nReveling in my powerful orgasm I let loose with a sound that could best be described as a howl and worked my hips as fast as I could into his hand. His cock was also pinned between my legs now and even as I came I thought of what it was going to be like to explode like this on that long, thick and...young cock.",
        "My body slumped against his and I emitted a long shuddering moan as the last of that amazing orgasm flowed through me. I relaxed into him and sat there trying to convince myself I could move after that.\n\nI turned my head to see Max staring down between my legs, a slight smile on his face. I opened them and grabbing his wrist, I raised his hand in front of us and with a wink I put his fingers in my mouth and sucked on them.\n\n\"Hmm.\" I purred as I sucked my juices from him. Releasing them, I smiled, \"A real woman loves to taste herself, and I can't wait to taste me from that big dick of yours.\"\n\n\"J...Jesus.\" He shook his head.\n\n\"Max, can I ask you a question?\"\n\n\"Anything.\"\n\n\"Have you ever made a woman come before?\" \n\nMax gave me a huge smile and nodded, \"Yes, why yes I have!\"\n\n\"Has a woman ever made you come before?\"\n\n\"No, but...ask me again in a few minutes.\" He grinned.\n\n\"There you go, have fun with it, it's not serious, Max, and it's about fun so...how about I show you some fun?\"\n\n\"I'm up for fun.\"\n\n\"You're up for your teacher, that's for sure.\" I agreed, grabbing his swollen cock. \n\nI pressed it against my bare pussy for a brief moment and shivered at the feeling of his hot hard flesh against my hot little box, then quickly slipped the bikini back in place before I lost control and hopped on. \n\nI pumped his cock slowly and using my other hand cupped his heavy balls.\n\n\"Hmm, Max you feel like you have a lot of cum in there.\" I gently squeezed them causing him to moan in my ear, \"Is it all for me? Instead of an apple you have a nice big load for your teacher?\"\n\n\"My naughty teacher.\"\n\n\"That I am, in fact I'd say slutty teacher.\" I sighed as I stroked his cock, \"Just like in that movie.\" That gave me an idea and lifting my leg I stretched it out to the coffee table and was able to click the mouse on the lap top and with my toe, taking the video off pause. The movie resumed with the teacher on her knees, pumping her student's cock and I jerked his faster.\n\n\"Look at her, Max, look at that dirty whore playing with her student's cock. Did you watch this and think of me? You think of me being a dirty girl, playing with your cock, sucking it, fucking it?\"\n\n\"Yes,\" He moaned over my shoulder.\n\n\"I thought of it too, Max. I lay there by the pool with my nipples hard and my pussy dripping thinking of doing just what I'm doing, playing with my hot student's big cock.\"\n\n\"Oh, goddamn.\" He whimpered as he pumped his hips, sliding his cock through my hand.\n\nI rubbed his sensitive head causing him to gasp and smearing his pre cum on my hand used it to lube up his cock. My hand glided faster over his slick flesh and I continued to rub his balls as he looked over my shoulder.\n\nThe look on his face was priceless as he stared past my tits to watch me work him with both hands. On the screen the teacher was now sucking his cock and I whispered.\n\n\"Look at that, Max, look at her sucking him, you want me to suck it don't you?\"\n\n\"I do.\"\n\n\"And I will, if you keep being a good student, but not today. Today I'm going to jerk this big dick off all over myself, but next time, if you're good? I'll be right where she is, on my knees with your cock between my lips.\"\n\n\"Oh, I'd like that.\" He groaned.\n\n\"Bet you would, bet you'd love to pull my hair and shove your cock in my mouth. Watch your nasty teacher blow you and suck on you until you cum in my mouth.\"\n\n\"On your face.\" He whispered.\n\n\"Ohh, bad boy!\" I moaned, \"You want to see it on my face? You want me to jerk it off all over my face so it's on my lips and my cheeks, dripping down my chin?\"\n\n\"Yes.\"\n\n\"That's because it's dirty and you want your teacher to be your dirty little slut, isn't that right?\"\n\n\"God, yeah.\" He was breathing heavier and his legs were trembling beneath my feet.\n\nThe woman in the video was now bent over her desk and the student had her by the hips fucking her fast and hard.\n\n\"Then there's that, look at him fucking her! Look at that young stud making that nasty cougar moan for him, slamming her. You want to fuck me, don't you Max? Just like that, my ass in the air, begging for you to keep doing it, telling you how good your big dick feels.\"\n\n\"I...oh...\" He moaned, \"That feels so good, please keep going.\"\n\n\"You going to come, baby? You going to blow a nice hot load all over me?\"\n\n\"Y...yes.\" He gasped and his hips moved faster.\n\nI would have loved to tease him, slow down, keep talking dirty, make him squirm, but his cock was twitching in my hand and his balls had tightened. He was damn close and at this point I wanted him to come almost as much as he did.\n\n\"I'm going to let you, Max.\" I pumped faster causing him to emit another of those adorable whimpers, \"Know why? Because you made me come so hard, you were so good to me and what did I tell you?\"\n\n\"That...that....\" He trailed off into a moan, \"The woman should come first.\"\n\n\"Right, you get what you give, Max, it's that simple. Oh!\" I exclaimed as on the screen the student whipped his cock out and the teacher dropped to her knees, mouth wide open. \"Look at that Max!\"\n\nShe moaned as he sprayed his come into her open mouth and then pushed it out with her tongue letting it drip down her chin and onto her tits as she held them up. \n\n\"That what you want to do to me, baby?\" I pumped his cock hard and fast causing him to cry out, \"Picture her as me, think of me on my knees begging for that hot cum in my face!\"\n\nI was jerking him hard enough I could hear my hand squishing against his slick cock and behind me he was moaning continuously.\n\n\"Oh, please.\" I moaned, \"Please come for me, Max, please come in my slutty face, please....\" \n\n\"Oh fuck!\" Max cried out as his cock exploded in my hand.\n\n\"Oh, honey!\" I moaned as his first spurt shot up and splattered against my right breast.\n\nI pumped his cock furiously and cooed in pleasure as each long thick spurt struck my body. Max came like a damn porn star, long thick streams striking my breasts and my chest between them. I moaned as it dripped down my nipples and stomach and kept rubbing his balls as I jerked him.\n\n'That's it, baby, give it to me! Give me all that nice hot cum; show me how much you wanted me!\"\n\nMax moaned softly as his come turned into a trickle that dripped down over my hand and wrist. When there was no more I gave his cock a hard squeeze causing him to gasp, but milking a couple of more drops from his slit. \n\n'Every drop, Max, a good girl works for every drop because you made her want to.\"\n\nI turned my head to face him and wanted to laugh at the huge smile on his face. Instead I brought my cum covered hand to my face and said, \"Hey, Max, watch.\"\n\nI ran my tongue along my fingers and sighed at the taste of his thick salty cum. \n\n\"Holy shit.\" He whispered as I slowly licked my hand clean moaning softly as I devoured his sticky mess.\n\nThat had me wanting to come again, but I'd suffer and do it myself later. In fact something told me I'd be coming to this all weekend. \n\n\"Very nice, but it will even better when you come in my mouth and face.\"\n\nI eased myself up and to the side, sitting on the couch next to him.\n\n\"Enjoy your lesson, Max?\"\n\n\"Best lesson ever.\" He laughed.\n\n\"You'll be saying that again Tuesday.\" I grinned. \"Then Friday, especially Friday, know why?\"\n\n\"Why?\" He asked, his eyes glued to my cum glazed tits and stomach.\n\n\"Because if you do well on Tuesday then next Friday\" You're going to fuck me, Max.\"\n\n\"Oh my God.\" He shook his head, \"I can't believe this.\"\n\n\"Believe it, honey.\" I smiled, \"Now one more thing.\"\n\n\"What's that?\"\n\nGesturing at the mess on my chest, I said, \"Go get me a towel, Max. A gentlemen always helps clean up.\"\n\n*****\n\nWhere the hell was he? I glanced over to the cable box under the huge flat screen TV and saw it was four o'clock. Max got out of work at three and was normally home by three thirty. Figures today would be the day he was late.\n\nI shifted my position in the recliner and just that slight movement caused me to moan as my black lace thong rubbed against my aching clit. I'd been sitting here since a little after three waiting for him.\n\nNormally I lived for that glorious routine of getting here early and going for a swim then sunbathing, but today was different, today would be far more fun than getting a tan and enjoying the neighbor perving on me. \n\nToday was lesson number two and I'd been masturbating like a horny teenager since Friday night to the thought of Max getting down on his knees and licking my pussy, then eagerly returning the favor and taking that beautiful cock into my mouth.\n\nAfter Friday's fun on the couch I could not even pretend to have any inhibitions of going further. My god his cock was magnificent and it was all mine, at least for two more 'lessons' The only misgiving I'd had was when I received a phone call Friday night and saw it was from Richard. \n\nWhen I'd answered, he didn't even bother with hello, but instead exclaimed, \"Damn Laura, you must be a hell of a teacher!\" I'd frowned and asked if he had asked Max about it, for some reason the idea of Richard telling Max he knew would bring me back to questioning how good of an idea this was. \n\n\"Tell me you didn't ask.\" I'd replied nervously.\n\nBut his response was simply, \"Of course not, but the kid hasn't been this happy in months! He's floating around the house with a goofy smile on his face like he's stoned!\" \n\nTo my relief he hadn't pressed for details and even though my thoughts were still conflicted about whether or not this was right from a moral standpoint-I was beyond denying the physical desire-I was already planning my next lesson and asked if he could leave a key under the mat for me so I could be waiting for Max on Tuesday.\n\nRichard agreed and on the subject of leaving me something asked if I preferred cash or could he leave a separate check with my usual one in an envelope on the table. I'd said a check was fine and quickly ended the conversation before it became even more awkward. \n\nWhen I'd hung up I'd spent a few minutes feeling like...pretty much a cheap whore. A check in an envelope and Richard discussing what we were doing, but by the time I'd filled the tub and sank into the warm soapy water lust took back over and I'd started what would be a weekend long masturbation session revolving around a certain adorable little cub eager to please his cougar teacher. \n\nNow said cougar was getting to the point if he didn't get there soon, I might start without him. I narrowed my eyes and envisioned Max walking in the house to me stroking my pussy and thought about it. \n\nI was sitting in the recliner in a black mini skirt I'd bought over the weekend that I'd eventually wear to a club, but right now was strictly for my sexy student, and a plain short sleeve black blouse. I'd chosen the blouse because it was a button up and had a plan for that.\n\nI'd slipped my shoes off and was sitting at an angle, one leg over the arm of the chair, exposing my thighs and the black thong. I put my hand between my legs and moaned at the fact the thong was already soaked through. I stroked my clit through the thin fabric and rolled my eyes back, damn I was worked up. \n\nMy fingers worked their way inside and I sighed at the sensation of running them through my soft wet lips. I jumped at the sound of a car in the driveway and keeping my fingers between my legs lightly teased my clit beneath the thong.\n\nI heard the kitchen door open and Max's footsteps coming through the kitchen.\n\n\"Laura, you here?\" He called out.\n\n\"Living room, Max.\"\n\n\"Hey, Laura!\" He began as he entered the room then stopped dead in his tracks. \"Oh, goddamn.\"\n\n\"See something you like?\" With a wicked smile, I pulled the thong to the side and flashed him my pink slit.\n\n\"Yes ma'am.\" He nodded and slowly approached the chair.\n\n\"Show me how much you like it.\"\n\nMax stopped and looked uncertain and I helped him out. \"Let's see how much you like what you see.\" He hesitated and I sighed, \"What did I tell you about being shy, Max? Can't have much fun with it in your jeans can you?\"\n\nMax unsnapped his jeans and I cleared my throat, \"Shirt first, honey, tease me first.\"\n\nHe gave me that sweet shy smile that I hoped he would never lose even after this and quickly stripped his t-shirt off.\n\n\"Very nice.\" I murmured, taking in his tanned well muscled form.\n\nMax kicked his shoes off and pushed his jeans down. As he slid them off, my eyes lingered on the huge bulge between his legs and growing wet spot where the head of his cock was.\n\n\"Leave those on.\" I told him, \"I want to have a little something to take off you.\" I beckoned him with my finger, \"Now come on over here.\"\n\nMax came over and stood in front of me his eyes locked onto my pussy. Still holding the thong to the side, I reached down and ran my fingers through my soft labia.\n\n'Think about this, Max? You spend the last few days thinking about how you played with me, how hard you made me cum?\"\n\n\"A lot.\" He whispered, still watching.\n\n\"Think about doing more than touching it? You think about fingering me and licking me?\" I smiled, \"You think about eating your teacher's pussy, baby?\"\n\n\"Hell yeah.\" He grinned.\n\n\"And me returning the favor I'll bet.\"\n\n\"Just a little.\" His smile widened.\n\n\"Well, what did you learn last time?\"\n\nGet what you give.\" He nodded and began to sink to his knees between my legs.\n\n\"Hey!\" I stopped him by putting my foot on his stomach. \"I told you to take your time and go slow and pay attention to everything.\"\n\n\"Right.\" He frowned.\n\n\"Start with a kiss, honey. Always start with a kiss.\" I giggled, \"Kiss these lips before you kiss the others.\"\n\nMax put his hands on the arms of the chair and leaning forward kissed me. To my delight it was a good firm kiss and after only a moment of his lips sliding across mine, his tongue darted into my mouth. I moaned my approval and ran my hands up and down his chest and flat hard stomach as he continued to kiss me.\n\nGrabbing his wrists I brought his hands to the top of my blouse and placed them there. \n\n\"Go ahead,\" I told him, breaking the kiss, \"Undress me, Max, let your lips work their way down my body. Take your time, appreciate me, and tease me. Make it so by the time you get down there my pussy is nice and ready for you.\"\n\nMax undid the top button of my blouse and I purred as his lips found the soft skin of my neck. \n\n\"Hmm, that's nice, honey.\" I encouraged him as he continued to unbutton my top while his lips worked along my neck.\n\nI wasn't wearing a bra and as soon as Max opened my blouse his hands were on my breasts, fondling them and teasing my nipples with his fingers. I moaned and putting my hand on the back of his head not so subtly guided his mouth towards my chest.\n\nMax impressed me by not going right to my tits, but spending some time kissing and licking the top of my chest. He sank to his knees between my legs and pressed his face between my breasts, kissing me there. \n\nHe then kissed the top of each of my tits then ran his tongue across my soft flesh just over my nipple.\n\n\"Hmm, you're teasing.\" I sighed, \"I like it, and you're already on your way to earning reward, honey.\"\n\nI put my hands on his shoulders, and rubbed his arms, enjoying the feeling of his muscles beneath his skin and the way my long red nails looked on him.\n\nMax teased a slow wet circle around my right nipple, and then induced a moan from me when he sucked it into his mouth. He was playing with my other nipple and I whispered, \"Put that hand lower, Max, get me nice and ready for that talented tongue of yours.\n\nMax out his hand on my inner thigh and again his fingers were trembling. I pulled my thong to the side for him and encouraged him. \"Go ahead and play with her, you've already met.\" I added with a giggle.\n\nMax caused my hips to jerk when he slid his fingers through my lips and found my yearning clit. He worked his fingers up and down the length of my pussy, lingering on my clit long enough to rub it in circles before sliding back down. He was taking turns licking and sucking my nipples and I thought this was the life, this was even better than the pool!\n\n\"Inside, honey, slip your fingers inside.\"\n\nHe hesitated and I lifted my hips so her fingers were at the entrance and pushed against him. He gasped as his fingertips slipped inside me and I groaned at how good they felt. I hadn't had anything inside me other than a vibrator for the last few months.\n\n\"Deeper.\" I told him, \"Don't be nervous, \"Push them all the way in.\"\n\nMax did as he had been doing, exactly as he was told, and eased his fingers in. I moaned as my pussy stretched around them and egged him on, \"In and out, Max, pump my pussy.\"\n\nHe moved his fingers slowly and I rocked my hips matching his rhythm and driving his fingers deeper. He was still sucking my nipples and selfishly wanting to enjoy as much sensation as I could I delayed him going down on me.\n\n\"Put your thumb on my clit; rub it while you finger fuck me.\"\n\nMax gasped and I laughed, \"Like that? Real women talk dirty, Max. Girls your age might not at first, but you take good care of them and show them how good you are they'll do it for you. Honey, I'll make it so they do everything for you!\"\n\nMax rubbed his thumb in hard circles around my aching clit and worked my hips faster; goddamn he was doing a good job! I was pretty damned worked up and wanted him to make me come with his tongue, not his fingers again. \n\n\"Work your way down there, honey. Take your time, it's not a race.\" I laughed, \"I'm a sure thing!\"\n\nMax trailed his tongue down my stomach as his other hand fondled my thigh while he played with me. I was breathing hard as I watched Max trace a teasing circle around my naval, playfully flicking my piercing around with his tongue.\n\nHe reached the edge of my skirt and I lifted my hips higher for him.\n\n\"Take the thong off, but leave the skirt.\" I told him, \"You don't get me totally naked until Friday.\" I winked, \"You'll get everything Friday providing you keep doing a good job today.\"\n\nMax was sitting back on his knees and I moaned when he removed his fingers from my pussy in order to pull my thong off. I reached under my skirt and hooking the sides of the thong eased them over my hips and held them out to him.\n\nWith a grin, Max took them and pulled the thong down my legs.\n\n\"Slowly.\" I told him, \"Take your time, sweetie, make it sexy, see?\"\n\nI put my legs together and raised them straight up. Max eased the thong up my legs, standing as he worked it past my knees then over my ankles. When he slipped it from my feet he pressed it to his face and inhaled deeply.\n\n\"Why settle for that?\" I asked, \"Real thing is right here, honey.\"\n\nI let my legs fall open and lowering them draped them over the arms of the chair so I was sitting there with my legs spread wide open, my pussy totally exposed to him. \n\n\"Look at that.\" He said softly and dropped to his knees so quickly he grunted in pain. \n\nHis pain seemed quickly forgotten as he placed his hands on my thighs and leaning over placed a kiss my small patch of red hair. I heard him breathe then sigh as he took in the scent of my pussy.\n\n\"There you go, baby, now give me a kiss, you know the spot.\" I reached down and spreading my pussy open with on hand, tapped my clit, \"Right here, honey.\"\n\nMax placed his lips against my clit as I asked and kissed it. He then flicked his tongue across it causing me to gasp. That sound turned into a low moan as he swirled his tongue gently around it.\n\n\"There you go, just like my nipple, nice and slow.\"\n\nI leaned back in the chair and purred as he alternately sucked and licked my clit. I felt incredibly sexy sitting here with my legs spread and my tits out, but still wearing the shirt and my skirt shoved over my hips. \n\nMax had his eyes closed and there was a look of bliss on his face as his tongue worked my throbbing button. ",
        "\"Open your eyes, honey, let me see those pretty blue eyes looking up at me.\" I winked, \"You want to see me looking up at you right?\"\n\nHe stared at me and moved his tongue even slower, showing off for me and causing my hips to move into his teasing licks.\n\n\"That's the spot, but feel free to explore.\" \n\nMax worked his way down through my wet lips, his tongue flicking side to side and I had to admit he was doing just fine for himself. God bless porn, I thought. \n\n\"Oh yes!\" I cried out when he surprised me by plunging his tongue deep inside my sopping slit.\n\nHe moaned and I cried out again when I felt him place his lips to my hole and suck. I felt my juices squirt into his mouth and his eyes rolled back as he tasted them. He pushed his tongue in and out and removing my hand from my pussy I placed it on his head, running my fingers through his thick hair.\n\n\"Bad boy, tongue fucking me!\" I moaned as he moved his rigid tongue faster within me. \"Maybe Friday I'll let you put that tongue in my other hole. Nothing like a good rim job.\"\n\nMax's eyes widened and I laughed, \"You think about tonguing my ass? I'll let you next time, but don't count on girls your age being too into it.\"\n\n\"If I'm good to them they'll let me.\" He said as he eased his tongue from inside me.\n\n\"Good attitude.\" I told him, \"But honey right now you're between my legs and talking isn't what you should be doing, now is it?\"\n\n\"No ma'am!\" He laughed then plunged his tongue back inside me. \n\nHe again surprised me by placing his thumb on my clit as he tongue fucked me and I knew at that moment, Max would be just fine when it came time to be with a girl his age, he was already better than a few men my age I'd been with unfortunately.\n\nMax probed my pussy with his tongue as he teased my clit and as good as it felt I needed more than his tongue in there right now.\n\n\"Shove your fingers back inside and suck that clit, baby.\" I moaned, \"I know I said take your time, but you're doing such a good job this girl needs to cum!\"\n\nMax slipped his tongue out and with a lot more confidence than before shoved his fingers inside me. I cried out as he took my clit into his mouth and sucked it in time with his thrusting fingers.\n\n\"Oh,\" I moaned, \"You've been watching some videos haven't you?\" \n\nMax looked up at me and grinned, \"I read a how to lick pussy article on a porn site.\"\n\n\"Homework is good.\" I nodded as he returned to my clit.\n\nMax's shyness was long gone at this point and he was sucking my clit with lip smacking gusto. I played with my nipples and moaned loudly as he switched from sucking to swirling his tongue around my clit. \n\nHis long thick fingers were filling my pussy and I was already thinking of Friday when it would be his much larger cock in my tight little box. Damn I couldn't wait to get fucked!\n\nBut right now his fingers and tongue were doing a hell of a job and I worked my hips in tight circles, grinding my pussy in his face. Max looked up and seeing me playing with my tits, reached up with his free hand to take over on my left breast.\n\n\"That's okay, honey.\" I told him, already knowing I had a plan for that fee hand. \"It's the right move, but I want to put on a nice show for you. How do I look playing with them?\"\n\n\"Damn hot,\" He whispered into my hot flesh, \"Everything about you is so fucking hot.\"\n\n\"You too, honey. I can't wait to suck that big cock! And I will as soon as I come!\"\n\nMax went back to sucking my clit so quickly I would have laughed if I could have managed it past the moan his lips caused. He moved his fingers faster and my hips responded. My thighs were trembling and I arched my back, shoving my pussy into his face as my body responded to his efforts.\n\n\"Right there, honey, lick don't suck, just keep licking that clit.\" I whimpered and worked my hips as his rapidly moving tongue brought me right to the edge. \n\nSmiling down at him, I said, \"How about you take a finger and slip it into my ass?\"\n\n\"What?\" He stopped licking.\n\n\"You heard me, baby, slide a finger right down there and shove it into my tight little ass.\" \n\nMax tentatively placed his finger at my ass, but didn't push.\n\n\"Don't be shy.\" I moaned, \"I'm so close and I want to feel your finger in there.\" My hips jerked and I whimpered, \"Please, Max, please make me come!\"\n\nMax resumed his licking and pushed his finger into my ass. I threw my head back and cried out as his finger entering my ass set me off like a rocket. My ass and pussy contracted around his fingers and I squealed as waves of pleasure crashed through my body.\n\nMax gasped when I clamped my legs around his head, pinning him to my convulsing pussy as my hips bucked wildly. His tongue continued to move as well as his fingers and I squirmed and writhed on the chair as I came even harder for him than I had last week.\n\nI could feel his fingers rubbing each other through the thin skin between my ass and pussy and worked my hips driving his fingers deeper into my holes, just like I was going to drive his cock into my other hole very shortly. I tugged on my nipples, squeezing and pinching then and keeping the orgasm flowing.\n\nMy back arched and my body seemed to pause, then with a loud cry my pussy convulsed and I felt a warm wave of fluid gush from my pussy. I heard Max cry out between my legs, but he kept that sweet tongue moving on my clit. \n\nI released a loud sigh and slumping back into the chair gasped for breath. I let my legs slide down his shoulders and smiled down into his surprised, glistening face.\n\n\"I...came really hard!\" I told him, \"Max, you are a hell of a quick learner. You make one of those pretty little coeds come like that, she'll be putty in your hand!\"\n\n\"You think?\" He smiled as he wiped his hand across is glistening face, then licked his fingers.\n\n\"I know and what have I told you is the number one lesson?\"\n\n\"You get what you give.\" His smile turned into an expectant one. \n\nI forced myself to move and standing up stepped to the side and pointed to the chair.\n\n\"Have a seat, baby, one good turn deserves another, doesn't it?\"\n\nMax jumped to his feet and that big smile still on his face sat down in the recliner. I stepped between his legs and slipped the blouse off, tossing it to the side so I was now in just the skirt. Leaning over, I kissed him, shoving my tongue hard in his mouth and moaning as I tasted myself from his mouth.\n\nI leaned over further and shook my tits in his face, letting him briefly tongue each of my nipples before I kissed the top of his chest. I trailed my tongue along his chest and he moaned when I sucked on his nipple while grabbing his cock.\n\nI wanted nothing more than to drop to my knees, pull that cock out and devour it, but I was teaching patience and made myself lead by example. I pressed my tits against him and slowly eased down to my knees, my hard nipples sliding down his chest. \n\nI kissed and licked his stomach, my tongue tracing the waistband of his boxers. I placed my hand on his huge bulge and with a smile then placed my mouth over. Max groaned as I slid my mouth along the length of his erection and I was moaning right along with him, as I teased the both of us, by working my mouth up and down his still covered cock.\n\nI wrapped my lips around the tip, and grabbing the sides of his boxers tugged. Max lifted his hips and I pulled his boxers down. His rock hard cock sprang free and taking it in my hand I squeezed it causing his pre cum to squirt from the purple tip.\n\nLeaning over I pressed my tongue into his oozing slit and pulled my head back, taking a sticky trail with it.\n\n\"Damn.\" Max whispered.\n\nI slurped my way back to his cock and after giving it a kiss, turned my head and rubbed his dripping tip across my cheek.\n\n\"How's your big dick look in my face, Max?\"\n\n\"Incredible.\" He sighed, \"I've dreamed of this.\"\n\n\"Me too.\" I turned my head and pressed his cock against my face. \n\nMy cheeks were now slick with his pre cum and lowering my head I pressed my tongue to the base of his shaft and slowly worked my way along his hard flesh. Max moaned and when I reached the tip, I ran my tongue around the sensitive underside of his swollen head before working my tongue back down to the base.\n\nHis cock was throbbing in my hand and no longer able to wait, I ran my tongue back up to the top, opened wide and took him deep into my mouth.\n\n\"Oh my God.\" He moaned as I opened wider and worked his cock further into my mouth.\n\nDespite his size I was able to keep going until my lips were wrapped around the base of his shaft. I made a wet gagging sound exaggerated for his benefit and swirled my tongue back and forth. I had my eyes locked on his and the look mixed look of surprise and lust on his face sent a thrill though me.\n\nI shook my head back and forth causing him to groan, then slowly worked my way back to the tip of his cock. I released it and sticking my tongue out slapped his cock against. \n\n\"God, you're fucking hot.\" Max breathed.\n\nI winked then taking him back into my mouth bobbed my head in a slow rhythm. Max moaned and dug his fingers into the arms of the chair as he watched his nasty tutor blow him. Still sucking, I took his wrists and brought his hands down between us. He fondled my tits and I sighed as I continued to suck him.\n\nHis pre cum was dripping down my throat and his cock pulsing against my tongue was driving me wild. Max was moaning and moving his hips and staring at me with that 'I can't believe this' look on his face.\n\nI cupped his balls in my hand and stroked him with the other, my hand following my lips. His hips moved faster and his legs were shaking. Poor kid was already getting close. Wanting him to really enjoy it, I released his cock with a loud wet sucking sound and worked my tongue down his shaft once more.\n\nThis time I continued and he gasped when I sucked his balls into my mouth. Max's hands tightened on my breasts and taking his right, I put it in my hair.\n\n\"Go ahead and hold my hair on my head, honey, make sure you can see the show.\"\n\nMax slid my hair from my face and wrapping his hand in it put it behind my head. I went back to sucking his balls one at a time then swirled my tongue around his sac, slowly jerking him as I bathed his balls with my soft wet tongue. \n\nI ran my tongue back to the tip of his cock and opening wide let a long trail of spit mixed with his precum ooze down his cock. I then noisily slurped it up before spitting on his cock then sucking him into my mouth and gurgling as I sucked it off of him.\n\n\"Fuck, that's...dirty.\" He moaned.\n\n\"I'm a dirty girl.\" I told him, flicking my tongue across his cock for emphasis, \"Only a slut would fuck their student, isn't that right, honey?\"\n\n\"You...you're not a slut.\" He said looking serious. \"I wouldn't say that.\"\n\n\"And you're a smart boy.\" I kissed his cock, \"But see if a woman refers to herself as one, it means she likes dirty talk and you can call her that, but if they don't start talking like that, don't you do it.\"\n\nI let another strand of spit drip down his cock and onto his balls. \n\n\"But me? I'm in a slutty mood. I like being on my knees sucking this nice hard young cock and being a little pig for you. Just like those teachers in your favorite movies.\"\n\n\"You're my favorite movie now.\" He grinned.\n\n\"Well then watch the show honey.\" I winked then ducking my head proceeded to lick the sloppy spit from his balls. \n\nI ran my tongue quickly back to the tip and opening wide took him all the way down to his balls. Max groaned as I shook my head vigorously then bobbed my head more rapidly than before. His hand tightened in my hair and his fingers stopped moving on my nipple. I didn't care, this was about him right now and I had to admit I wanted to impress him, show him how a real woman sucked cock.\n\nI grabbed his idle hand and put it on my head with the other. I then stopped moving and remained still with his cock in my mouth. When Max simply stared down at me, I moved my head up and down then stopped again.\n\nWhen he still looked confused I put my hands on his and pushed down. His blue eyes widened, then with an evil little grin he pushed my head down further on his cock. I moaned and he began guiding my head along his long thick cock. \n\nI released him long enough to say, \"Go ahead, fuck my mouth, you deserve it.\" Then taking him between my lips let him push my head down again.\n\nMax moved his hips, slowly at first, but when I locked my eyes on his and moaned loudly he moved faster. I relaxed letting him push my mouth down into his thrusting hips and let him face fuck me. Face fuck; Laura, you are a slut today. \n\nMax pumped faster pushing himself deeper into my throat and I knelt there with my pussy dripping thinking that Friday he would be shoving this glorious cock deep inside my other lips. I looked at his broad shoulders and strong chest and envisioned him behind me fucking me as hard as his powerful form would allow, Christ he was going so hard!\n\nI moaned and took control back, bobbing my head faster and making gagging sounds as I took him down to his balls each time. I had my mouth open wide enough to let the drool continue to ooze down his cock then suck it back up. The sloppy wet sounds I was making were making me even hotter and I cursed not getting him off first so I could cum afterwards. \n\nMax was moaning and his hips were moving uncontrollably. I cupped his balls again and felt them tighten in my hand. I resumed jerking him off as well, my hand following the slimy trail my mouth was leaving, the spit making my hand feel even better.\n\n\"Oh, Laura.\" He moaned, \"I...don't stop, don't stop...I...Oh God!\"\n\nMax cried out and I squealed as his cock twitched and a long thick jet of his hot cum sprayed the back of my throat. I wanted nothing more than to swallow it, but remembering what he said he wanted last lesson I pulled his cock from my mouth.\n\nI opened wide and pushed his cum out with my tongue letting it drool down my chin and onto my tits. I pumped his cock and his second spurt landed in my mouth and I pushed it out for him. I jerked him off harder and turning my head back and forth let him spray my face. \n\nI kept my eyes on his as I stroked him, watching the look of lust on his face as he painted his slutty teachers face. His cum splashed my cheeks and oozed down my face and neck. I pumped him even harder and when the next squirt was little more than a dribble I took the tip of his cock into my mouth and jerked him off into it.\n\n\"Oh....oh....oh!\" He kept gasping as I sucked as hard as I could and swirled my tongue around his sensitive head. \n\nHe moaned and even when I could get no more I kept sucking, now taking him deep and letting his cock push his cum around in my mouth. \n\n\"S...stop!\" He gasped, \"Please.\"\n\nI stopped sucking and opening wide showed him the puddle of cum on my tongue then closing it, swallowed and then showed him my empty mouth.\n\n\"Oh....I...wow.\" he groaned as he slumped back in the chair. \"Laura that was...just like the movies.\" He laughed.\n\n\"Better I hope.\" I smiled then cupping my tits, lifted them up and keeping eye contact proceeded to lick his cum from my tits, slurping up as much as I could.\n\nI sat back on my knees and stared at his cock. He was still hard, God I wanted to hop on, but I'd decided how I wanted him to take me on Friday and it would be much more fun then. \n\n\"All girls are different, honey.\" I told him, \"Some like giving head more than others so never be pushy, okay?\"\n\n\"Okay.\" He nodded staring down at me as I grabbed the towel I had next to the chair and wiped the cum from my neck and chest. \n\n\"But like I said the more you take care of them the more they will want to please you so just be patient.\"\n\n\"I...I will and...Oh!\"\n\nHe jumped when I wrapped the towel around his cock and stroked him with it, cleaning it off for him. \n\n\"You're still so hard!\" I marveled, \"Honey if you can come and stay hard like this, your next lesson might be a nice long one!\"\n\n\"So Friday we.....\" He trailed off. \"You know.\"\n\n\"No 'you knows'.\" I reminded him as still on my knees I picked up my blouse and put it on. \"Be a man.\"\n\n\"We're going to have sex?\"\n\n\"You're going to fuck me, Max. You're going to fuck your nasty little teacher nice and hard and in any position you want.\"\n\n\"Can we...\"\n\n\"If.\" I cut him off as I buttoned the shirt. \"You show me you can take me.\"\n\n\"Take you?\"\n\n\"Yes, Max. Friday is your final exam. I am not going to prod you or give you any hints. You are going to come to my house Friday night and...\"\n\n\"Your place?\"\n\n\"Yes Max, my place. Just like an adult, you are going to come to my house and you are going to show me what you learned and convince me to want you.\"\n\nI stood up and after locating my thong hiked my skirt up and slipped it on as he watched, his eyes fixed hungrily on my red haired pussy. \n\n\"I won't help you so if you get nervous and lose confidence you might not get anything. You're going to be a man taking his woman, I don't mean rough, but I mean you are taking the lead I'm just there to be persuaded.\"\n\n\"Okay.\" He looked nervous.\n\n\"You do a good job I'm all yours. Upset me and...well today is as far as you get.\"\n\n\"No pressure.\" He gave a small laugh.\n\n\"Honey if you get nervous, just think of how hard you made me come tonight and how much I liked sucking that nice cock. If you weren't doing a good job, would you have gotten that reward?\"\n\n\"No.\" He said more confidently.\n\n\"So, Friday at Seven, I'll text you my address.\"\n\n\"Should I...bring anything?\"\n\n\"No hints, Max.\"\n\n\"Okay,\" \n\n\"But I have one question for you, what's your favorite color on a woman?\"\n\n\"Red.\"\n\n\"Red it is honey,\" I leaned over and gave him a quick kiss, \"Oh and one other thing.\"\n\n'What's that?\"\n\n\"Don't be tardy, Max, you never keep a woman waiting, especially your teacher.\"\n\n*****\n\nI moved about my bedroom lighting the candles I'd placed on my night stands and for what had to be the hundredth time looked at the time on my cell. It was quarter to seven. \n\nMax was supposed to be here for seven and at this point I wasn't just looking at the phone for the time, but checking to see if I had somehow missed a text that he was going to back down. I'd had no contact with him since Tuesday, but had spent the last three days thinking and dreaming of nothing but contact with him. \n\nAs I finished with the candles, I looked into my mirror yet again. I had chosen a plain red sundress to wear. The dress was simple, but sexy. Short enough to be considered a mini and not just tight on top, but low cut.\n\nAt one point I'd considered meeting him in a short robe with some sexy lingerie beneath, but I wanted it to seem more natural and like less of a sure thing. After all Max was going to have to make the moves tonight and if he got into this situation with a pretty little coed she wouldn't be as aggressive. \n\nThe dress was sleeveless and tied behind my neck and I'd spent the last couple of hours envisioning him untying it and letting it fall to the floor. I'd bought a sexy new red lace bra and thong for the occasion and once again the thong was already moist before Max was around. \n\nI had my hair down and decided to go barefoot to complete the simple look I was going for. Walking away from the mirror I left the bedroom and went into the living room to wait for him. I wanted to peer out the window, but didn't in case he had just pulled up. I didn't want to look as eager as I felt. Max was supposed to be the one acting like a kid in a candy store, not me.\n\nFact was however, I was willing to bet I was as excited as he was. For Max it would be his first time and for me the first time in months and first time with someone who would be out to please me in three years. I was greatly looking forward to showing Max the fun he was going to spend the rest of his life having and reminding myself how fun sex could be. ",
        "I jumped at the sound of a car door near the front of my condo and risked a quick peek out through the blinds. I smiled as I saw Max standing next to his car and glancing this way. I stepped back from the window and dimming the lights in the room waited for him to reach the door.\n\nWhen the doorbell rang I was surprised to feel a nervous twinge in my stomach and I realized this meant way too much me. After this my ass needed to get out and meet someone. But of course said someone didn't necessarily have to be my age....\n\nI opened the door, and smiled at Max who was dressed sharply in a short sleeve black polo shirt and grey Dockers with a pair of real shoes. His hair was gelled and he had that aw shucks smile on his face.\n\n\"Hi Laura, you look nice tonight.\" He said, his eyes wandering up and down my body, \"You make red look even better.\"\n\n\"Aw, thank you.\" I found I was a little too giddy at his compliment. \"Come on in.\"\n\nI stepped to the side for him to enter and bringing his hand around from behind him he presented me with a bouquet of colorful flowers. \n\n\"For you.\"\n\n\"Wow!\" I exclaimed, taking the flowers and closing the door behind him, \"Look at you being smooth.\"\n\n\"This is my final exam,\" He winked.\n\n\"You're starting off just fine.\" I told him as I gestured to the couch, \"Have a seat while I put these in a vase.\" I headed for the kitchen and called over my shoulder, \"You want a drink?\"\n\n\"No, I'm fine.\" He said, sitting down.\n\nDamn straight he was fine. I hurriedly found a vase in the cupboard over the sink and filling it didn't even bother to take the flowers out of the wrapper, I'd do that later tonight, or tomorrow morning or....whenever I was done taking Max on his first full tour of a woman's body.\n\nI walked back into the room to see him watching for me and as I approached the couch his eyes never left my body. My eyes found his crotch and even in the loose fitting pants I could see he was hard for me.\n\nWhen I reached the couch, he moved over to the side for me to sit next to him, but I shook my head.\n\n\"Did you come here to talk Max?\"\n\n\"Um...no.\" He shook his head\n\n\"What did you come here for, then?\"\n\n\"I came here because I want you.\" His eyes met mine and he didn't look nervous at all. His confidence sent thrill through me.\n\n\"And why do you want me?\" I teased.\n\n\"Because you're sexiest woman I've ever seen and I've dreamed about fucking you for months and...\" He hesitated, but only briefly, \"And I'm tired of just thinking about it, tonight I want the real thing.\"\n\n\"Hmm, that's very flattering, Max. It doesn't bother you I'm so much older than you, or I'm your teacher?\" At this point I was trying to trip him up, but his eyes never strayed from my face and his voice sounded as calm as he looked. \n\n\"What do you think makes you so sexy?\" He smiled and it was no longer a sweet, shy one. \"A milf teacher, could it get any better?\" To my surprise he winked, \"And a horny one who loved teasing me and knew damn well I wanted you. You're a bad girl, Laura!\" He laughed.\n\n\"I...\" I trailed off and put my hand out to him. \"My bedroom is at the end of that hallway.\"\n\nFor a second he lost character and his eyes widened and grinned, but then quickly switched to looking serious. Standing, he took my hand and when I didn't move he stepped close to me, slipped his hand up through my hair and kissed me. \n\nI was surprised by the force of the kiss and even more so by the way he put his other arm around my waist and pulled me against him. His tongue pushed against my lips and I parted them, moaning softly as his warm wet tongue invaded my mouth.\n\nI put my arms around his neck and moved back and forth against him, sliding my breasts across him and moaning as my nipples rubbed the material of my bra. Max lowered his hand from my hair and rubbed my back as he continued his confident, unhurried kiss. \n\nI was heating up and as much as I wanted to let him take the reins I couldn't hold back from pushing my tongue into his mouth and pressing my lips more firmly to his. Max backed off, allowing me to take control of the kiss, but his hands were now sliding down my back and over my ass.\n\nI gasped when he gave it a hard squeeze then groaned as they worked lower and grabbing the hem of my dress, pulled it up. His hands returned to my ass, fondling my bare cheeks as his fingers teased along the thin black material between them. \n\nI released a low moan into his mouth as his finger eased into the thong, slid down my ass and dipped into my sopping pussy. He removed his lips from mine and I moaned louder as his lips fastened to my neck.\n\nHe was running the tip of his finger through my soft wet slit, but not going inside and I caught myself moving my hips, trying to urge him to do so. Max kissed the top of my chest, then with a sly smile pulled away from me. \n\n\"Shall we?\" He gestured towards the hall.\n\n\"Lead the way.\" I winked.\n\n\"How about you go first so I can watch what I'm going to be unwrapping?\" He suggested.\n\n\"You're the boss.\" I told him, \"At least for now.\" I added with a wink.\n\nI walked ahead of him, pulling him along behind me. I walked slowly and put some extra swing in my hips. I could feel his eyes on my ass and recalled how good his hand shad just felt there. As I reached the door and opened it, I felt a thrill of excitement; in a very short time I was going to be Max's first lover!\n\nI released his hand and walked over to stand in front of my bed. I'd pulled the covers down to expose the red sheets I put on there for him. Max looked around the room, taking in the candles then lingering on the bed. \n\nWhen his gaze reached me I saw he was getting nervous and beckoning him with my finger, I asked, \"Now where were we?\"\n\nMax walked up to me and I give him a long slow kiss. He placed his hands on my hips, but left them there and as we continued to kiss I wondered if I would have to be the aggressor after all. Not that I would mind, but the point here was for him to become confident with women. \n\nI suppose I would be more intimidating than a girl his age, but that was the very reason I wanted him taking control. If he could take charge with me, he'd be able to with anyone. I grabbed the bottom of his shirt and tugged upward. \n\nMax raised his arms and as I pulled his shirt off and tossed it to the side, I broke the kiss and lowered my head to his chest. I pressed my open mouth around his nipple and after swirling my tongue around it, lifted my head.\n\n\"How's that look?\" I asked, referring to the perfectly shaped pair of lips around his nipple.\n\n\"Not as good as you do.\" He replied and putting his hands on my shoulders kissed my neck.\n\nI let my head fall to the side and purred as his slips worked my neck. I unsnapped his pants his breathing picked up on my neck when I tugged his zipper down. I was reaching into his boxers for the cock I'd dreamt of feeling inside me all week, when Max whispered, \"Not yet.\"\n\nPutting his arms on my shoulders he flicked his tongue across my ear, \"Turn around for me.\"\n\nHe accompanied his words by pushing on my shoulders, guiding me to turn for him. The fact he had not asked, but told me to do something caused my already excited clit to throb as I allowed him to turn me. \n\nWhen my back was to him, Max gathered my long hair and pushing it over my left shoulder kissed the back of my neck. A shiver went through me as his arms slid around my waist and he kissed his way across my bare shoulders and my upper back.\n\n\"Hmm, that's sweet.\" I cooed as his lips caressed my skin.\n\nThe dress was open in the back down to my bra and Max trailed his soft kisses to then along the edge of it. He then worked his way back up to my neck and I moaned as his hands slid down my stomach and tugging my dress up, fondled my inner thighs.\n\nAs he had done from behind, Max worked the fingers of his right hand into my thong and slid them through my pussy. I worked my hips, grinding my ass back into him and again trying to get his fingers to enter me. \n\nI felt his tongue on my neck and thought he was licking me, then the tie around my neck pulled against my throat and I realized he was untying it with his teeth! I smiled as the knot loosened then groaned when the strings fell across my back and he brought his hands up to dug it down over my breasts. \n\n\"This time you wear a bra.\" He sighed in my ear causing me to giggle.\n\n\"Told you, you had to work for this one, honey.\"\n\n\"Then I guess I'm hard at work.\" He whispered in my ear and pushed his cock into my ass, emphasizing how hard.\n\n\"Nice,\" I replied working my ass into that fantastic cock, \"Have fun with it.\"\n\n\"I plan on it.\" His fingers fumbled with the clasp of my bra, but once he'd popped the first hook he got the other two quickly.\n\nMax slid his fingers through the straps of my bra and pushed them down my shoulders. I bent my arms at the elbows, letting him slip the bra off and moaned as his hands instantly covered my bare breasts.\n\nHis fingers captured my nipples and I worked my ass harder against his swollen crotch. Max was breathing heavy in my ear as the soft skin just beneath it. As he teased my nipples I grabbed the dress and pushed it down over my hips, letting it pool at my feet. \n\nMax kissed the back of my neck and trailed his lips down my back as he had before, but this time he kept going lower. When I felt his lips on the small of my back, I looked to my right and watched in the mirror over my bureau.\n\n\"Damn, look at us.\" I told him, my breath picking up at the sight of him kneeling shirtless behind me while I stood there in just my thong, his hands on my breasts.\n\nMax turned his head, smiled then turning his attention back to me, placed a loud wet kiss on my right ass cheek. I giggled, and then moaned when he sucked on my ass, before switching to the other side. \n\nAs he had with everything else so far, Max took his time worshipping my ass, kissing and licking each cheek as I them playfully in his face. Max slipped his tongue into the thin string of red between my cheeks and I shivered when he ran his tongue through the crack of my ass.\n\nHis hands left my breasts and my groan of protest turned into a startled yelp when he put his hands on my back and shoved me. I was standing right in front of the bed and fell forward so I was now bent over it.\n\nMax worked his fingers into my thong and pulled it over my hips and down my thighs. I moaned at the feeling of the thong peeling away from my sticky pussy and his tongue and lips still busy on my ass. \n\nThe thong joined my dress at my feet and Max ran his fingers gently up my legs, teasing the sensitive skin behind my knees and traveling up my soft thighs. He made me laugh when he sucked hard on my ass, probably hard enough to leave a hickey.\n\n\"Look at you, kissing your teacher's ass.\"\n\n\"I do need a good grade, Miss Phillips\" He whispered.\n\nHis hands reached my ass and after giving my cheeks a hard squeeze he spread them wide open and I squealed when he plunged his tongue into my ass.\n\n\"Bad boy!\" I exclaimed then moaned when he pushed his rigid tongue deeper into my little pink hole.\n\n\"You said I could last time.\" He said from between my cheeks, then proceeded to tease the tip of his tongue around my ass before pushing it inside again.\n\nI moaned softly and worked my ass back into his face. My nipples were pressed onto the sheet and just that contact was causing them to ache with desire. I spread my legs further apart and whimpered as he continued enthusiastically giving me a rim job. \n\nHard to believe a week ago I'd sat there in righteous indignation telling Richard I would never do this. At this point, bent over the bed with a hot young studs tongue in my ass, I had to admit the money had nothing to do with why I was doing this. \n\nThis was exactly what I needed! A great time with a good looking man, albeit a young one, who was all about enjoying every bit of me.\n\nAs if reading my mind, Max lowered his tongue and shoved it into my pussy.\n\n\"Yes!\" I cried out, pushing my ass back into his face to work his tongue deeper. \"That's it, baby, eat that pussy!\"\n\nMax had my cheeks spread wide and his face buried in them as his tongue probed my dripping slit. He sucked hard on my pussy causing me to gasp and he moaned when his efforts were rewarded with a mouthful of his slutty tutor's sticky juices. Even as he tongue fucked me, I knew I would be tasting those juices from his cock some point soon.\n\nThe other thing I knew was he wasn't just going to fuck me once. I had no idea what would happen after tonight so there was no way in hell Max was leaving after he took me for the first time. Tonight I planned on finding out just how many times a boy his age could get it up and I was damn confident in my mouth's abilities to keep him interested all night long.\n\n\"Oh, my clit, honey.\" I moaned as thinking of the night still ahead had my hips wiggling and my pussy throbbing. \"Suck on my clit!\"\n\nMax slipped his tongue from inside me, but teased me by swirling it around between my labia exploring the moist pink folds of my pussy as he took his time working his way to my clit. I groaned and pushed up on my toes, trying to get his tongue to my aching button, but he moved with me and laughed.\n\n\"Oh, funny now, are we? Just wait until I make you wait to shove your...Oh!\" \n\nI moaned as he fastened his lips to my clit and sucked hard enough to make his lips smack. Max swirled his tongue around my swollen button and caused me to gasp when he pushed two fingers inside me. I contracted my pussy around his fingers and when he moaned I asked,\n\n\"Imagine what that will feel like around your cock.\" I sighed, \"Think about me coming on it, how good that will feel, I...oh, damn.\"\n\nI trailed off as Max worked my clit gently with just his lips, kissing it softly then sliding it between them. His fingers pumped slowly into me and moving my hips in time with them I took them deeper. \n\nI turned my head to look into the mirror. Max was kneeling, his face buried between my thighs and his well muscled back just visible from that angle. His large, strong hand looked good on my ass and his arm worked back and forth as he finger fucked me.\n\nSomewhere I knew I should feel bad about this, paid to seduce this sweet kid, but where that somewhere was...it wasn't around right now!\n\nAs I remained bent over the bed, I imagined his huge cock, hard and dripping, straining to be released from his pants and eager to sample his first pussy. I pushed up on my toes and slipping my arms underneath I found my nipples and rolled them between my fingers.\n\nI moaned and worked my hips harder into his fingers. I had wanted him to go slow and prove he could be patient and enjoy me before we had sex, but right now there was nothing I wanted more than that young cock between my legs. \n\n\"Harder,\" I told him, \"Come on, baby, work that pussy!\" Giving in to my desires I gave him an incentive. \"As soon as I come you're going to fuck me, Max!\"\n\nI cried out as he shoved his fingers hard into my pussy and sucked my clit into his mouth. \n\n\"That's right, honey, as soon as you make me purr, you're going to be inside it! You're going to shove that nice young dick into your dirty teacher's hot little pussy!\"\n\nMax was smacking his lips on my clit and roughly slamming his fingers into my pussy. I had no complaints, in fact his no longer being cautious was a turn on. I twisted my nipples harder and groaned.\n\n\"Oh, lick it!\" I groaned, Max obeyed and my legs tightened and I lifted my ass in the air as my body trembled. \"Faster!\" I whimpered as his tongue bathed my throbbing button. I was so close!\n\n\"A little more! Oh, just a little more!\" I implored him, \"Come on, baby make me....Oh fuck!\"\n\nI squealed as Max used his other hand and with no warning plunged his finger into my ass. That squeal was followed by a long loud wail as my body exploded into orgasm. My pussy and ass contracted around his fingers and as I ground my ass into his flickering tongue I released a series of loud high pitched yelps.\n\nMax kept his fingers moving, thrusting them into my convulsing holes while still eagerly devouring my pussy. I gave my nipples a pinch and this time screamed in pleasure as I writhed and squirmed shoving my wet slit into his face. \n\n\"Oh God that was so fucking amazing.\" I sighed as the last of the orgasm flowed through me.\n\nMy body relaxed and I was glad I was bent over the bed because my knees felt so weak I didn't think I could stand at the moment. Behind me, Max eased his fingers from my holes and in the mirror I saw him stand up behind me.\n\nHe kicked his shoes off and pushed his jeans down to the floor. When he stood, his long thick cock was standing at full attention and grabbing it he slapped it against my ass.\n\n\"You looking for something, honey?\"\n\n\"Yes.\" He said softly and I moaned as he slid the head of his cock through the crack of my ass. \n\nI gasped when it slid through my lips and Max moaned as he shook it back and forth, rubbing it against my clit.\n\n\"C...can I?\" \n\n\"Don't ask, honey.\" I told him, pushing myself up on my elbows and looking over my shoulder at him. \"Max, if a woman lets you do that to her, she is not going to stop you from fucking her.\"\n\n\"O...okay.\" He nodded then slid his cock back through my lips. \n\nI moaned when I felt the head of his cock at the entrance to my pussy and wanted nothing more than to push backwards and drive him inside me, but I had a better idea, at least for the moment because damn straight I was going to take that cock doggy style at some point.\n\n\"Stop.\" I said and stood up in front of him.\n\n\"Did I do something wrong? I'm sorry, I...\"\n\n\"Shhh.\" I turned to face him and put my finger to his lips. \"Not at all, but for your first time.\" I winked, \"Our first time tonight, I want to watch you.\"\n\nI sat on the bed and laying back lifted my legs and spread them wide.\n\n\"Come on in, baby.\" I whispered, \"The water's just fine.\"\n\nMax stared down at my pussy and stepped up to the bed. His magnificent cock was over my pussy and putting my feet on his shoulders I lifted my hips, sliding his head through my lips. He moaned and stared at the sight of his cock sliding through my pussy. I pumped my hips, teasing him, then stopped and smiled up at him.\n\n\"Come on, baby, take what you've been waiting for.\"\n\nMax eased his cock down and I moaned as he pushed his head against me and I felt him begin to enter me.\n\n\"Shit!\" He stopped.\n\n\"What?\" I asked, trying not to sound frustrated.\n\n\"I have to...you know get something.\" He reached down to his jeans and fumbled in his pocket before producing a condom.\n\n\"Honey, put that down, you don't need it.\"\n\n\"I don't? But...\"\n\n\"With other girls yes.\" I told him remaining patient. \"But I haven't been with anyone in months and you've never been with anyone and I'm taking something so no worries\" I smiled, \"I want you to really feel your first time. You can have me bareback.\"\n\n\"Bareback.\" He dropped the condom. \"Goddamn, you're so fucking hot.\"\n\n\"You have no idea, but it's time to find out.\" I winked, \"Now where were we?\"\n\nAs Max slid his cock though my pussy I realized I was being selfish again, because there was no way I wasn't going to feel every bit of his cock. He pressed against me once more and began to ease himself in. \n\nHe groaned as his head entered me and I moaned impatiently as he hesitated. Bracing my feet against him, I thrust my hips and buried him inside me. We both cried out as my pussy spread around his long thick cock and with a moan of pure pleasure, Max pulled himself back out to the tip then thrust forward.\n\n\"Oh fuck, you've got a big dick!\" I groaned and wasn't kidding, it had been a long time and my pussy was stretching around his shaft as he slowly pumped me.\n\n\"You feel so good!\" Max exclaimed as he moved his hips, fucking me with long slow strokes that caused my eyes to roll back.",
        "\"Then keep feeling me, baby!\" I moaned, \"Because you feel just as good!\"\n\nGood was an understatement! Max moved a little faster and I moaned each time he thrust himself forward stuffing my long neglected pussy with his thick cock. I propped myself on my elbows so I could watch his cock slide in and out and I noticed his eyes were locked onto it as well.\n\nI was sopping wet and Max's amazing cock was glistening with my juices. He put his hands on my thighs and pumped me faster. He moaned with each stroke and I noticed a slight smile playing about his lips.\n\n\"How's it feel, Max? How's it feel to fuck a woman?\"\n\n\"Even better than I thought.\" He grinned, \"And I thought about it a lot!\"\n\n\"I hope you keep thinking about it!\" I thrust my hips meeting his plunging cock and driving him deeper. \"I hope you think about this pussy and how good it feels because you can have all the pussy you want, Max!\"\n\n\"All those cute girls who flirt with you? You can have them like this, you know how now and...\" I moaned as my words spurred him on and he fucked me harder, \"God, they are going to love this cock!\"\n\nMax groaned and fucked me faster. I stopped talking and focused on how damn good his dick felt inside me. He was fucking me pretty good right now and cupping my tits I played with my nipples for him. \n\nMax noticed and stared at my fingers as he fucked me. The sight seemed to really get to him as he switched from long slow strokes to faster short ones. I didn't care how he fucked me as long as he kept fucking me because he felt amazing.\n\n\"Yes, that's it honey, fuck that pussy! You earned that pussy, Max, you worked hard for it didn't you?\"\n\nMax grunted an answer as he squeezed my thighs and drove into me even harder.\n\n\"All night, Max, you're going to fuck me all night! Every position, as many times as you want to! I'm all yours tonight Max!\"\n\nHe whimpered and fucked me even faster. I moaned enjoying the effect my words had on him I continued.\n\n\"And we don't have to just stay in here, honey. You're going to fuck me where ever you want. We can fuck on my couch; you can fuck me over the kitchen table. \" I moaned as he was now slamming me so hard his balls were slapping against my ass, \"And you will fuck me in the shower tonight!\"\n\nMax whimpered and I moved my hips in time with his, taking him as deep as I could. He moaned louder then slowed down. \n\n\"Don't tease!\" I groaned, \"Fuck me, baby! This is what you wanted!\"\n\n\"I...I'm already close.\"\n\n\"We'll fuck again, Max, just go ahead and take the edge off and...\"\n\n\"But it's so quick!\" He was now barely moving and teasing the shit out of me. \"I wanted it to...\"\n\n\"Stop.\" I pushed him back with my feet. \"Lay on the bed on your back.\"\n\n\"Are you...?\" He stopped when I sat up and patted the bed next to me. \"Lie down and trust me.\"\n\nMax didn't move right away and grabbing his cock I gave it a squeeze. \"Go on, baby, teacher knows best.\"\n\nMax moaned as I gave his cock a couple of quick pumps and sitting on the bed pushed himself up on it and lay down on his back. I quickly crawled up on the bed, knelt between his legs and took him into my mouth.\n\nMax gasped as I easily took him down to the base of his shaft and after pausing for a moment to savor the taste of my pussy from his hard flesh, I bobbed my head rapidly. He cried out as unlike the blow job I gave him on Tuesday I was not holding back and teasing, but sucking him as fast as I could.\n\nHe whimpered and his cock twitched in my mouth as I sucked him as if I were in a competition. I repeatedly took him as deep as I could while sucking that quickly and cupping his swollen balls caressed them as I blew him.\n\nMax moaned and his legs were already trembling from my efforts. I opened my mouth wider and let a mixture of pre cum and spit drool down his cock and nosily slurped it up, I kept my eyes on his and saw him struggling to hold back.\n\n\"Laura, please...please stop! I...I'm going to come and I don't want to like this! Please...I oh!\"\n\nHis begging and whimpering drove me wild and I sucked him even faster, Max released a pathetic sound that caused my pussy to gush and with a loud cry his balls tightened, his cock twitched and he exploded in my mouth.\n\nTuesday I'd given him what he wanted and let him paint my face with his come, this time I continued to suck and moaned as his hot sticky cum hit the back of my mouth and oozed down my throat. \n\nI sucked harder, my cheeks hollowing as I worked for every drop. Max was squirming and moaning as his balls emptied into my mouth and when I couldn't coax anymore from him I released his cock, smacked my lips and swallowed the last of his impressive load.\n\nAs he lay there breathing hard I crawled up the bed and swung my legs over his hips so I was straddling him. Placing my hands on his chest I worked my hips, sliding his still hard cock through my wet pussy. \n\nReaching between my legs I grabbed him by the base and holding his cock, guided him to my pussy and sat down on it. We both cried out as I impaled myself on his glorious cock. He was still just as hard as he had been in my mouth and between that and the fact I could still taste both his cum and my pussy, I was overwhelmed by lust.\n\nMax gasped as I rode him like he was a prize bull in a rodeo and throwing my head back I cried out in ecstasy as I pounded my pussy onto his big dick. This is what I had needed for months, what I'd dreamed about, hell what I and every woman deserved; a good hard fucking!\n\nI pushed down harder on his chest and with a loud cry drove my hips up and down as hard as I could. Beneath me Max was staring at me wide eyed, his mouth open as all he could manage was a series of moans and gasps as I fucked him like a damn wild cat.\n\nI leaned forward so I could lift my hips higher and pushed down on his chest each time I slammed down on him. I established a perfect rhythm between my hands and hips and the bed protested as Max was now bouncing on the mattress then back into my driving hips.\n\n\"Fuck yeah!\" I cried out, \"You like this Max? You like seeing how a real woman fucks? No cute little girl is going to fuck you like this, baby. Your slutty teacher is going to make your first ride your best ride!\"\n\nMax put his hands on my hips and pushed in an effort to slow me down and I relented and switched to sliding my hips back and forth instead of up and down. Max moaned softly as I switched up to riding him more slowly and sensually.\n\nI raised my hands over my head, taking my long hair up with them and posed for him as I worked my hips even slower.\n\n\"How do I like, honey? How's Miss Phillips look riding your cock?\"\n\n\"Incredible.\" He whispered as his hands left my hips and cupped my tits.\n\n\"That's it.\" I purred as he played with my nipples, \"Play with those tits, they're your tits tonight, hell they're yours anytime you want them!\"\n\nMax looked surprised and even in my lust addled brain I realized that comment was a mistake, but I was so caught up in the moment I didn't care, there would be time to talk this out later, right now it was....show time.\n\nI swung my leg over him and easing his cock from inside me, knelt next to him. Max went to sit up, but I shoved him back down on the bed.\n\n\"Not yet.\" I smiled down at him, \"I want to show you something fun.\"\n\nI spun myself around so my back was to him and swinging my leg back over him so my ass was pointing at him worked my puss along his cock. \n\n\"Put it in.\" I breathed, \"Shove that big dick in your teacher's hot cunt!\"\n\n\"Hot...wow!\" He looked shocked.\n\n\"I wouldn't say that to a girl your age if I were you, but I'm in a slutty fucking mood, not give me that fucking cock!\"\n\nI was surprising myself, but all that mattered was he was pushing the head of his cock back where it belonged, inside my over heated...cunt. The word I was raised to never say sent thrill through me telling me I was officially out of control, but seeing I was already fucking an eighteen year old student, and bareback at that, a dirty word was the least of my transgressions.\n\nI plunged back down on his cock and worked my hips slowly.\n\n\"Oh, goddamn.\" Max moaned as I rode him backwards. \n\nI sat up for him, pushing his cock deeper and worked my hips in a teasing circular motion. He put his hands on my hips and moved with me, guiding my movements along his cock.\n\n\"How's the view from behind?\" I asked, looking at him over my shoulder.\n\n\"There's no bad view.\" He laughed, then moaned when I bounced up and down on him.\n\nI moved faster and yelped each time I drove him up into me. Leaning over I grabbed his ankles and began driving my hips as hard as I had before. I turned my head watched as I my hips worked up and down sliding his cock in and out of me and slamming down on him as hard as I could manage. \n\nMax put his hands on my ass and squeezed it while pushing and pulling, helping me ride him. I threw my head back, flipping my long hair up and across my back and admired the sight of fucking Max reverse cowgirl, a position I hadn't tried in years. \n\nMax moved his hand across my ass and I cried out in surprise when he shoved his finger in my ass.\n\n\"Yes!\" I yelped, \"Leave it right there!\"\n\nMax did as I asked and I moaned as I worked my hips now sliding his finger in and out of my tight ass. I was overwhelmed by an image of being on my knees and letting Max fuck me in the ass. I hadn't let anyone do that since I'd been in my wild twenties and didn't think I would let him tonight, but maybe...\n\nI blinked that thought away and focused on the act at hand which was pretty fucking enjoyable. I continued to work my hips plunging his thick cock deep inside my grateful pussy. \n\n\"Not going to come quick now are you, baby?\" I asked.\n\n\"Hell no.\" He breathed and placing his hand on the small of my back, pushed down, stopping me from moving,\n\nHe then thrust his hips into me and I groaned as he took over fucking me. I let my cheek rest on his leg and squealed as he fucked me with long hard strokes. Max was moaning and whimpering as he could only fuck me so hard in this position and on that note, I pulled away from his cock and rolled over onto my back.\n\nLifting my legs, I grabbed the backs of my knees and pulled them back so my feet were over my head.\n\n\"Get on your knees and fuck me, Max; I need you to really fuck me.\"\n\nMax sat up, knelt between my legs and placing his hands on the backs of my thighs drove his beautiful cock balls deep into my pussy.\n\n\"Oh my fucking God!\" I cried as just as I'd told him to Max fucked me fast and hard.\n\nHe was using long hard strokes that had me yelping each time he buried himself in me. \n\n\"Yes, fuck me!\" I gasped, \"Fuck me as hard as you want to! Take me Max, take your teacher's pussy! Claim it! Make it yours!\"\n\nMax moaned and leaning forward pushed my legs back even further. My ass lifted from the bed and I was just about bent in two with his cock slamming straight down into me. I howled in pleasure as he hammered away at me and letting my legs go grabbed my tits and tugged on my nipples.\n\nI watched Max's long cock repeatedly piston in and out of my sopping pussy and tried to move my hips, but could do nothing in this position but lay here and take it. That certainly wasn't a bad thing as he was fucking me goddamn silly at this point.\n\nI looked up at Max and moaned at the sight of him. He was sweating profusely, his hair hanging over his eyes and those gorgeous blue eyes were wide, bright and glazed with lust. His entire body was glistening with sweat and it made the bulging muscles of his chest and arms look even better. \n\nI needed to cum again and reaching between my legs found my swollen clit and rubbed it. I moaned at the contact, then yelped in surprise when Max grabbed my wrist and pulled my hand away. My surprise was replaced by delight when he placed his thumb on my clit and whispered, \n\n\"That's my job, Laura.\"\n\n\"Y...you're doing a hell of a job.\" I breathed as he rubbed my clit in hard fast circles while still pounding my pussy.\n\n\"Get what you give.\" He grinned down at me.\n\n\"Honey....you are giving it to me pretty fucking good right now.\" I moaned, \"And I'm getting it, oh fuck I'm getting it!\"\n\nMax's thumb pressed harder on my clit and I tugged hard on my nipples as my body trembled in anticipation of coming on that huge cock. Max stopped rubbing my clit and catching it between his strong fingers twisted it back and the same way I was playing with my nipples.\n\n\"Oh...oh fuck!\" I moaned, \"That...oh just like that!\"\n\nI arched my back trying to take him deeper and desperately tried to work my hips into him as I was right on the edge. \n\n\"Harder, squeeze my clit harder! Please I...\"\n\nMy words turned into what could only be described as a scream when Max pinched my clit and sent me over the edge. I came like an animal, head back, mouth wide open and screaming like a banshee. My pussy contracted and Max groaned in pleasure as my pussy convulsed around his thrusting cock.\n\nMax continued his assault on my quivering slit as his fingers twisted my clit back and forth. I was beyond words at this point and lay there squealing and moaning as I came harder than I had in years, even harder than a little awhile ago, Christ I couldn't remember last time I'd gone off like this.\n\nMy body writhed and squirmed and Max had an ear to ear smile on his face as he watched his teacher turn into trembling hot wet mess beneath him. I released one more long loud squeal then went limp, my arms falling to my sides and my legs resting against him.\n\n\"Oh...my...God.\" I moaned. \"Max, you....holy shit the room is spinning.\"\n\nMax withdrew his cock from me and grabbing me by my hips wrenched his powerful shoulders to the side and flipped me over onto my stomach. The second I was on my stomach, Max grabbed my hips again and roughly pulled me up so I was on my knees.\n\n\"Fuck yeah!\" I groaned, my pussy gushing at his sudden forcefulness, \"That's it, take...\"\n\nMax drove into me from behind so hard the sentence finished with another animal like howl as he squeezed my hips and tore into me like he was trying to break me. I was so overwhelmed from my orgasm I couldn't even push myself up on my hands and lay there with my cheek pressed to the sweat dampened sheet and let him have me.\n\nIn the mirror Max looked incredible, his lean hard body dripping with sweat and his large hands gripping me as that incredible cock hammered away at me pussy. I was so wet I could hear him entering me and saw his thighs dripping with my juices. \n\n\"Fuck! Fuck! Fuck!\" I exclaimed each time he hammered into me. \n\nI couldn't even move my hips into him. I was completely drained and all his right now. Max slid his hand around my thigh and I gasped when he found my clit and rubbed it as he pounded me doggy style.\n\n\"I...oh....its okay.\" I moaned, \"Just fuck me, just...ohhh.\"\n\nHe pressed his thumb harder into me and moved it in fast hard circles as he had before. I didn't think I could come again, but damn it felt so good and that cock! Youth and enthusiasm I thought as he was fucking me like a damn machine while trying to coax another orgasm out of me.\n\nMax was moaning with each thrust and his hand was trembling on my hips.\n\n\"Go ahead,\" I moaned, \"Come for me, baby, don't worry about me I already....Oh fuck!\"\n\nMax plunged his finger hard into my ass again and pinched my clit hard. My body caught me off guard by exploding into a sudden orgasm and lifting my head I screamed long and loud as I came for the second time in minutes and once again around that wonderful cock.\n\nI was moaning continuously and my hips were moving of their own accord, driving back into his relentless cock. But even his cock had limits and he was now whimpering behind me as my pussy contracted around him.\n\n\"Give it to me!\" I cried, \"Come for me, let me have it, baby!\"\n\nMax cried out and I released a long deep moan as his cock jumped inside me and a long stream of come squirted deep inside me. \n\n\"Oh, that's nice.\" I cooed as he continued to thrust into me, each pump ending in another spurt of his hot cum. \n\nI whimpered in pleasure as Max kept fucking me and painting the walls of his teacher's pussy with another huge load. He buried himself inside me and moaned as he gave me that last of it. I contracted my pussy around him and he gave an adorable little whimper as I managed to milk a few more drops from him.\n\nI felt him softening inside me and squeezed him once more with my pussy before he eased his cock from inside me. I had thought as soon as we finished I'd already be wondering how long before he could go another round, but I'd never dreamed I would come three times first time around.\n\nI was feeling beyond satisfied right now, in fact as I stretched my legs out and remained lying there on my stomach what I felt was hung over as if I were sex drunk which most likely I was. I'd have to go back years to find the last time I'd gotten fucked this good. \n\n\"I can't believe we did it.\" Max said from behind me.\n\n\"Oh, I can.\" I replied, \"I have a very wet, very satisfied pussy to prove it.\"\n\n\"You really enjoyed it?\"\n\n\"Max, what did I tell you about asking?\" I asked with my eyes closed and no desire to move at all. \"I came three damn times.\"\n\n\"Right, sorry, I just really wanted you to like it.\"\n\n\"I did.\" I giggled \"Three times.\"\n\n\"So...uh...what do we...\"\n\n\"Just lie down and relax, Max.\" I patted the bed next to me. \"You've just had your first time, enjoy the moment.\"\n\nMax stretched out on his back next to me and gave me a tired smile, \"Laura, you felt so good.\"\n\n\"So did you.\" I gave him a tired smile, \"And don't worry, we'll do it again before you leave, I promised you the night if you earned it and damn did you ever.\"\n\nMax laughed then turned serious, \"Laura, can I talk to you?\"\n\n\"Honey, when you make a woman come three times you can do anything you want.\"\n\n\"Seriously.\"\n\nUh-oh, I thought as forced myself to roll onto my side. Propping myself up on my elbow I asked,\n\n\"What's the matter, Max? You should be beside yourself right now.\" I laughed, \"The only thing you should be thinking about is more.\"\n\n\"Oh, I am.\" He smiled and I returned it as it was his usual shy aw sucks smile. \"Kind of what I want to talk about, but um, first...I don't think you're going to be my tutor anymore, are you?\"\n\n\"I don't think it would be a good idea Max.\" I told him, \"After this you're never going to see me and think about anything, but...\" I cupped my right breast, \"This.\"\n\n\"I guess you're right.\"\n\n\"I know other teachers who give private lessons; we'll find you a good tutor.\"\n\n\"I know dad will find someone, he can buy anything.\" Max said, and then staring into my eyes said. \"Even this\"\n\n\"What do you mean?\" I asked even as my stomach twisted into a knot.\n\n\"Laura last week when dad came home and saw us by the pool then told me to leave I snuck around to the other side of the house to listen because I thought he was going to fire you.\"\n\nHe shrugged, \"I heard everything. He paid you to have sex with me because he was upset his son wasn't a stud.\" He grunted, \"Just like he said grandpa was with him.\"\n\n\"Max, look, um...\" I wasn't sure what to say, so asked the obvious, \"If you knew, why did you go through with it?\"\n\n\"Why? Because it was still being with you.\" He sat up and grabbing the sheet pulled it over his lap,\n\n\"I was so pissed at first, felt so pathetic, but when I came out and you were still in you robe I knew you were starting right there and I...I couldn't resist. I wanted to, I felt bad knowing why you were doing it, but you're so... Laura you're so beautiful.\"\n\n\"Thank you.\" I sat up as well, but made no move to cover up. \"Honey, you're not pathetic, just shy and...if anyone is pathetic it's me. I took money to have sex with you.\" I frowned, \"I'm a whore.\"\n\n\"No!\" He snapped, surprising me, \"You had reasons and...and well you really seemed to like it.\" He sighed, \"Unless you're just a good actor.\"",
        "\"I was never acting, honey.\" I reached out and took his hand. \"I enjoyed it, I really did which in a way makes it worse because money wasn't the only reason I should feel bad, you're a kid to me and a student and it was wrong.\"\n\n\"But you liked it?\"\n\n\"Max if you heard that conversation you heard me admit I liked you looking and I did. It turned me on to have a good looking young man want me. You heard your father say that too, that I would be getting paid for what I wanted anyway. The money was an excuse for me to push myself to do what I shouldn't.\"\n\n\"Did you want me for real or not I guess is what I want to know.\" He said.\n\n\"I did.\" I squeezed his hand, \"Honey, I so needed this. I was with an asshole for three years and it was so good to be with someone who desired me and wanted to make me happy.\" I paused, \n\n\"Tell you what Max; I am going to give your dad the money back. I haven't touched any of it. I'll give him his cash and rip up the checks.\"\n\n\"Don't be crazy.\" Max rolled his eyes, \"He's got plenty and you could use it.\" He smiled, \"But you offering makes me feel better.\"\n\n\"I'm sorry, Max.\" I leaned over and kissed his cheek. \"I'm sorry you knew and felt cheap, you're a sweet kid and I would never want to hurt you and for what it's worth? Honey you were so amazing!\"\n\n\"Yeah?\"\n\n\"I can honestly tell you I haven't been fucked like that in...too long to admit.\"\n\n\"Laura, you...earlier when we were fooling around you said you were mine whenever I wanted you.\"\n\nOh, fucking great, he'd been paying attention.\n\n\"That was um, sort of pillow talk, Max. You know heat of the moment I was excited it felt so good.\"\n\n\"But if it felt so good why not do it again, I mean past tonight?\"\n\n\"Max you're...\"\n\n\"Not your student anymore.\"\n\n\"You're...\"\n\n\"Laura, do you really think I'm attractive?\"\n\n\"You're very good looking.\"\n\n\"And you said I'm sweet and you like that and you said you needed someone to be good to you, I was just good to you.\"\n\n\"Max.\" I saw where this was going and had to admit it was more flattering than it should be and the thought of this on a regular basis? But I'd already done enough immoral things here. \"You're twenty. I'm forty two years old.\"\n\n\"Age is a number.\" He countered, \"You're beautiful for your age Laura, for any age. And,\" he gestured to my still naked body, \"You're so fucking hot.\"\n\n\"Max we had fantastic sex, we really did, but you need to be with a girl your age.\"\n\n\"Why?\" He asked a serious look on his face. \"There's a lot of couples that have big age differences, why do I have to be with someone my age?\"\n\n\"Because...Max what we had was great sex.\" I winked, trying to keep it light, \"Really fucking great sex, but you need more than that. You need a girlfriend, a partner someone you really care about.\"\n\n\"I care about you.\" He said softly, \"Laura I've been crushing on you for three years.\"\n\n\"Honey.\" To my surprised I felt myself blushing, \"That is so sweet, but crush is a good word. I'm a woman you find attractive and now the only one you've slept with, you're a little blinded right now.\"\n\n\"No.\" He shook his head, \"Laura I'm going to tell you something.\" He took a deep breath. \"You're the reason I wasn't with other girls.\"\n\n\"What?\"\n\n\"As soon s I met you I thought of you, you're like the perfect woman. You're pretty, sexy, smart., and funny. We're not just a tutor and student, you joke with me ask me about my life, you care about me.\"\n\n\"Not in that way, though.\" I explained, \"Max...I mean you're...a kid to me.\"\n\n\"Not your kid.\" He pointed out, \"And when girls my age were interested all I could think of was you.\"\n\n\"But I was a fantasy, they could have been real.\"\n\n\"You felt pretty real just now.\" He said, \"I knew we couldn't before, I...was a kid, not even a legal adult. You know my dad isn't as bad as he seems, he said a first time should be with someone who means something.\" \n\nHe laughed, \"But I guess when he saw I wasn't finding anyone he just assumed I had issues. He didn't know I was waiting for someone.\"\n\n\"Oh, come on.\" I laughed nervously. \"You could not have seen this coming; if your father didn't offer how long would you have waited?\"\n\nMax grinned at me.\n\n\"What's so funny?\"\n\n\"I guess its not funny, but...Laura you were saying you were sorry to me, but I owe you a sorry too.\"\n\n\"Why?\" I asked, confused.\n\n\"I let my dad catch me with those movies. I knew he would ask about them, make the connection to you and when he did I told him how much I thought about you and how hot you were.\" He grinned, \"I knew the grandpa story, about how he paid someone to be with my dad, I heard it from my uncle when he took me fishing and he got drunk. I...I was hoping he would do what he did.\"\n\n\"You...you conniving little bastard!\" I exclaimed, and then laughed, \"And I thought you were so sweet.\"\n\n\"I am, I want to be.\" He put his hand over mine. \"With you.\"\n\n\"Honey, we...we can't. It would be wrong.\"\n\n\"According to you all of this was, but you did it.\" He leaned closer, \"I get it, I am a kid to you, but I could be more!\"\n\n\"Max you can't think you could be my...boyfriend?\"\n\nHe looked away, \"I think we could try.\"\n\n\"Max that...that wouldn't be fair to you. Look for me, a hot sweet young guy at my beck and call? That's a lot of women's fantasy. But for you, I'm a lot older and maybe now that would be okay, but you'd be thirty and I'd be on my way to sixty.\"\n\nMax was silent and I continued, \"I was the first woman you had interest in and you just said you wouldn't let yourself go with another girl because you liked me. How do you know you can't meet a girl your age to enjoy in every way?\"\n\n\"I...\" He sighed. \"Maybe I could, but why should I?\"\n\n\"Because I would just feel like I took advantage of you even more.\"\n\n\"Okay, I have an idea.\" He nodded, \"All of this was supposed to be so I would be confident with girls my age, right? So like my dad says I wouldn't waste all the fun I could have in college?\"\n\n\"Pretty much.\"\n\n\"Well first off, being with a hot cougar is pretty damn fun.\" He grinned, \"But for the rest, well my next semester doesn't start for almost two months, right?\"\n\n\"Right.\"\n\n\"So how about,\" He gave me the sweet smile, that right now I was thinking he knew I was a sucker for. \"We spend the summer having fun and when school rolls around you see if you still want me to find someone else or maybe I'll decide I'm wrong and I should meet someone.\"\n\n\"Hmm.\" Say no, Laura, say no, end this now.\n\n\"Think about it, if nothing else we have some serious fun, right? And just think how ready I'll be for the girls then.\" He laughed.\n\nI looked at him and thought about what he'd said. I wanted someone to appreciate me, to be good to me, sweet to me, give a shit about me and...act like they knew I was in the bedroom with them. Max would fit all those things, but his age! I was old enough to be his mother! \n\nSex was one thing; that we could have on the sly, but how the hell could I date him? Could I take this twenty year old kid out to dinner with me? Go dancing? The looks I would get would be...oh, who was I kidding from some women I knew the look would be 'good for her', but that was only about sex.\n\nThen again I could do what he just said, enjoy the sex for a few weeks and see if anything else came out of it. If feelings developed we could take it from there, if not then I was at least in for the best sex of my life.\n\nBut was I just using him at that point? He was adorable and every time I thought that my mind brought up his age as if it were a self defense mechanism. Maybe Max was right, who cares about numbers, if he could make me happy, why not?\n\n\"So while you think about it.\" He cut into my thoughts, \"You did promise me tonight right?\"\n\n\"Yes.\" I nodded.\n\n\"Well, um while you were thinking,\" He placed his hand on my breast, \"I was thinking too.\" He whipped the covers off to show his cock was once again at full attention. \"How about you show me where the bathroom is and I get the shower ready.\" He gave me that irresistible smile, \"I'll soap you up, wash your hair, we'll...\"\n\nHis words trailed off as I leaned in and kissed him. He was caught off guard at first, but quickly recovered and I moaned as his lips caressed mine. I put my arms around him and kissed him deeply, my tongue sliding into his mouth. \n\nHe wrapped his arms around me and as we shared a long kiss I pushed his age out of my mind and just thought of how good he felt. His soft lips, his strong arms and the passion of his kiss. He wasn't a kid, but a man, albeit a young one and one that had made me pretty damn happy. I'd had more fun this week than I'd had in years.\n\nI wasn't just the sex either, but the anticipation. Spending the days in between his private lessons thinking of him and looking forward to how much fun we would have, thinking of all the things I would do to him. I had felt like a young girl, giddy with excitement and crazy with desire.\n\nWhy turn that down over a number? Why worry about what others would think? I'd never had Max as a student and very few people even knew I had tutored him, why couldn't we try this?\"\n\nI dropped my hand down into his lap and squeezing his huge cock sealed the deal; why not have some fun? Maybe a kid was just what I needed; maybe it was time to stop worrying and being so fucking serious about everything.\n\nMax moaned as I pumped his cock and pulling his lips from mine whispered, \"How about that shower?\"\n\n\"No.\" I shook my head and lying back on the bed, put my arms out to him, \"How about you come down here instead?\"\n\nMax looked surprised, but after a quick glance at my body he rolled over between my legs. He had his hands next to my shoulders and putting my arm around his neck, I pulled him down into a kiss. I moved my hips, working my pussy along the head of his cock and he moaned into my mouth when I reached between us and guided him inside me.\n\nMax entered me with one smooth confident thrust and as he began to fuck me, I whispered into his mouth, \"Slow this time, slow and easy, like this.\"\n\nI worked my hips slowly up and down, and with a soft moan Max matched my rhythm and letting my head fall back on the pillow I sighed contentedly as he moved within me. I wrapped my long legs around his waist drawing him deeper and putting both my arms around him, pulled him into my embrace.\n\nMy hard nipples pressed into his chest and he was breathing heavy in my ear as we moved slowly and sensually. I'd never been much for slow and easy and maybe it was because of how wild we'd already gone at it, but this felt damn good.\n\nMax added to that by nuzzling his face into my neck and kissing me. I ran my hands along his back, caressing him with my fingers and admiring the muscles beneath his sweaty skin. \n\n\"Laura, this feels so good, I...\"\n\n\"Don't talk.\" I said softly, \"Just enjoy.\" I turned my head and caught his lips and as we kissed I felt him relax down into me.\n\nMax let his arms go and sliding them beneath me hugged me tightly as we continued to...what was I doing? I knew damn well, but was hesitant to admit it. We were taking our time, yes, that's what we were doing. \n\nI lost track of time as I lay there with my eyes closed enjoying not just his impressive cock, but the way his body felt close to mine. Max began moaning with each slow pump and I groaned as he lost control and began thrusting harder into me. I felt his body tense as he neared his climax and moved my hips faster into him urging him on.\n\n\"There you go, honey.\" I purred in his ear, \"Let it go, let me have it.\"\n\nMax gave me a few more delicious long hard strokes then groaned in my ear as he came inside me. Even after coming twice he still filled my pussy with several spurts of his hot come. I moaned and contracted my pussy around him, milking him as I had before for every drop he had.\n\nMax moaned and as his body relaxed into mine I could feel his heart pounding against me.\n\n\"There you go, honey, stay right here, just relax.\" \n\nHe nuzzled his face into my neck and sighed when I teased my nails along his back and ran my fingers through his hair. \n\nWe remained there for several minutes holding each other in silence and I sighed contentedly as Max softened inside me. Damn he felt good. Echoing my thoughts Max whispered, \"Laura that felt so good, I'd never thought of having sex like that.\"\n\n\"That wasn't sex Max.\" I said in his ear as I continued to play with his hair. \"That was called making love.\"\n\n\"I liked it. They never show that in the dirty movies.\"\n\n\"They show sex in dirty movies Max and any two people can have sex and it will be fun, but not everyone can make love.\" I paused then hoping I wouldn't live to regret them I pushed the next words out before I could change my mind. \"Only people who care about each other can make love.\"\n\nMax pushed himself up over me and I groaned softly as he removed himself from inside me. Looking down at me he gave me that sweet smile.\n\n\"Does that mean you're going to give me a chance?\"\n\nI returned the smiled, \"Let's put it this way, Max, you just passed your final exam with flying colors.\" I laughed, then pulled him back down into my embrace, \"How's an internship sound?\"\n\nAuthor's Note: Hope you enjoyed the story. This is a contest entry so your vote would be appreciated. As always, thank you for reading. Lovecraft68\n\nThe End"
    ],
    "authorname": "lovecraft68",
    "tags": [
        "student teacher fantasy",
        "older woman younger man",
        "teacher seduction",
        "first time",
        "virgin sex",
        "blow job",
        "hand job",
        "milf",
        "cougar",
        "cougar cub"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/private-lessons-8"
}