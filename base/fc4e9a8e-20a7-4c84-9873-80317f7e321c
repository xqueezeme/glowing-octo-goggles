{
    "title": "I Will Love You Forever Pt. 2 Ch. 12",
    "pages": [
        "Peter kept a close eye on Andrew trying to figure out what he would do. If there weren't any other people around, he would just confront him and get it over with. As it stood, if Andrew pulled the gun and just started shooting; he would kill or maim more than just his original target.\n\nThe more he thought about it, the more he realized that the best course of action was to get Kenji and Joel out of the room. He glanced back at Trevor and winked. It was the signal to be ready to move. Peter wasn't worried about Trevor not understanding. They had worked together before and understood each other.\n\nPeter looked at Kenji and Joel. Without a doubt he thought them two of the bravest men he had ever met. He had high regards for Kenji before he met him. When he heard his and Patricia's story, he had been nothing short of blown away.\n\nThat he would defy custom and the sentiments of the times made Kenji a much stronger man than he was. He didn't think that he could do it, but then he hadn't met anyone that he thought worth fighting for. He admired Patricia as well. For her to have married a Japanese man when they had been labeled the enemy was nothing short of amazing.\n\nWhen he went to meet them, he could feel the love that they had for each other and their family. This eclectic family that was made up of whites, blacks, Japanese and Jews was closer than his family. He wondered what his family's reaction would be if he brought home a woman who was other than white. They talked the talk; but would they walk the walk?\n\nThe sound of someone clearing their throat brought him out of his thoughts. He looked over at Andrew who was studiously taking notes. He glanced back at Trevor and was pleased to see that the small, but wiry agent had moved several seats over and two rows down. By the end of class, he would be much closer.\n\nThe minutes ticked slowly by. The closer the end of class got, the tenser Peter became.\n\n********\n\nKenji still couldn't fathom the intense hatred that Andrew had for him. In the beginning, he understood, but now the hatred that Andrew had was all consuming. He knew that Andrew had something in his bag by the way he moved his hand. He was equally as sure that it was a knife or a gun.\n\n\"A gun.\" He murmured under his breath.\n\nHe looked over at Joel hoping that he would look back at him. Finally, Joel looked at him.\n\n\"You must leave.\" Kenji whispered.\n\n\"No.\" Joel replied.\n\nHe had already decided that he wasn't leaving under any circumstances.\n\n\"Joel!\" Kenji whispered urgently.\n\nJoel ignored him and continued taking notes.\n\n********\n\nAndrew stole glances at Kenji. If Peter had been a just a minute later, there would have been one less Jap in the world. As he thought about it, he realized that Peter had probably saved his life. Once again, he had almost acted impulsively. Had he managed to kill Kenji, he himself would be either dead or in prison on death row.\n\nHe made a mental note to thank Peter when they had a moment alone. Even as he realized that he had been impulsive, Andrew's anger grew and he itched to take the gun out, aim it at Kenji's dark head and fire.\n\nHe took a deep calming breath and realized that he didn't have to do it alone. He would ask Peter, his new second in command to help him. It would be a test that Andrew knew no one else in his group would pass.\n\nConsiderably calmer, he turned his attention back to the lecture. The material would be included on the next exam that he had to pass as well as every exam afterwards. He looked at Kenji again and smiled before going back to taking notes.\n\n********\n\nErnie sat in the back trying to make sense of the lecture. Parts of it just weren't making sense to him. He looked around the classroom trying to figure out who he knew well enough to ask for help. The student sitting next to him wasn't an option. He was already swearing as were several other people.\n\nHe kept looking around until his eyes rested on the forms of Kenji and Joel. Kenji was at the top of the class and Joel wasn't too far behind. He noticed the calm way in which they listened and took notes. They were his best chance of passing this class, but would they help him?\n\nHe had a choice to make. He could take a chance on try to pass the class on his own or he could increase his chances of passing by asking Kenji and Joel for help. It shouldn't have been a hard decision; but it was. There was Andrew to consider.\n\nErnie had no problem with admitting that he was afraid of Andrew. His conviction that Andrew murdered Milt Vaughn and could kill someone else remained strong. He gave up on listening to the lecture and made up his mind to ask Kenji and Joel for help.\n\n********\n\nIsadora laid her essay on the podium and took her seat. She heard Maeve's voice coming from the back of the room and wondered if she would acknowledge her. To her surprise and delight, Maeve sat next to her.\n\n\"Good morning!\" she greeted Isadora cheerfully.\n\n\"Good morning.\" Isadora replied with a smile happy that Maeve was sitting with her.\n\n\"Did you get last week's work done? \"Maeve asked as she got ready for class.\n\n\"Yes thanks to you.\" Isadora replied. \"I even got the reading done.\"\n\n\"Are you serious?\" Maeve asked. \"It didn't put you to sleep?\"\n\n\"I'll admit that it wasn't the most interesting thing that I've ever read, but it wasn't that bad.\" Isadora replied.\n\n\"So you say.\" Maeve remarked with a grin. \"Are you free for lunch? We can go over our notes. I heard through the grapevine that Professor Bell likes to give pop quizzes. I don't know about you, but I study better with other people.\"\n\n\"I would like that.\" Isadora replied. She had always studied alone and was interested to see what it was like to study with someone.\n\nTheir conversation ended when Professor Bell walked in. Isadora saw his surprise when he saw her essay lying on the podium. She also saw his nod of approval as he sat the notebook aside.\n\nIsadora settled in her seat mentally counting the day a success.\n\n*******\n\nPatricia and Penny tried to keep busy by helping Dai clean the house. Every time the phone rang, they both jumped and then breathed a sigh of relief when it wasn't Nick or the school. Later they would wish that it was Nick calling to tell them that the nightmare featuring Andrew Kelly was over.\n\nPenny stole looks as Patricia still unable to fathom how she had managed to keep it together when Kenji was in the camp. This was only the second day that Kenji and Joel had been at school and she was already a basket case.\n\nPatricia, realizing that Penny was looking at her looked back at her and smiled. \"I'm scared too.\" She whispered. \"But Peter and his partner are there and they won't let anything happen to them.\"\n\nPenny nodded, started to scrub the baseboard and stopped.\n\n\"Tell me how you survived all those months not knowing if you'd ever see Kenji again.\"\n\n\"Let's go check on the kids and get something to drink.\" Patricia said as she stood up and stretched.\n\n********\n\nSaul held his small bag of belongings in his lap and tried to sleep. At first he was excited that he was on his first trip outside of the state of South Carolina, but the further away from home he got; the more he missed it.\n\nHis stomach rumbled, but he resisted eating the food that his mother sent with him; he wanted to save it for as long as he could. He opened his eyes when he felt the train slow and wondered what was happening. He had his answer a few minutes later.\n\n\"There's a bunch of negroes getting on if you want to move up front.\" The conductor said as he passed by.\n\nSaul gave serious thought to moving, but he was in the last row and had a corner seat. If he had to, he could put his bag between him and the side of the train. He thanked the conductor and stayed where he was.\n\nOn his way back through, the conductor gave Saul a curious look, but didn't say anything. Thirty minutes later, a black family was sitting in the back of the car with Saul. They eyed each other warily as the man got his family settled and then sat across from Saul. A boy sat with the man and stared at Saul with dark eyes that were filled with intelligence, mischief and curiosity.\n\n\"Why you sittin' back here with us?\" he asked.\n\n\"Shush now!\" The man said and then turned to Saul. \"I beg your pardon sir, he means no disrespect.\"\n\n\"It's alright.\" Saul replied with a small smile.\n\nHe kept his eyes open for as long as he could. When he woke up it was early morning. Everyone was asleep except for the black man.\n\n\"Here.\" He said holding out a small parcel wrapped in paper toward Saul. \"My wife said to give this to you when you woke up. Go on, take it.\" He urged when he saw Saul's hesitation.\n\n\"I can't take food from your family.\" Saul replied. \"But I thank you for your kindness.\"\n\nThe man shrugged and put the sandwich away. It made no difference to him whether Saul was hungry or not. His wife however, had different ideas.\n\n\"Phillip Bishop! Did you feed that boy?\" she demanded when she woke up.\n\n\"He said he didn't want it.\" Phillip replied wishing that he had pushed the issue.\n\n\"Ma'am, I told him that I didn't want to take from your family.\" Saul said in defense of Phillip.\n\n\"When you last ate?\" she demanded.\n\n\"Naomi leave....\"\n\n\"Yesterday, but I have food.\" Saul said weakly.\n\n\"Then why ain't cha ate?\" Naomi asked.\n\n\"I....\"\n\n\"Phillip, give that boy the sandwich.\" Naomi said overriding Saul.\n\nNot knowing what else to do, Saul accepted the sandwich with a polite thank you. As he slowly ate the dry sandwich, it occurred to him that each time he needed help; it had come from Negros. Even when his family had been near starvation, none of the whites had stepped in to help them. Ironically, one of the poorest black families had. It explained his mother's slightly softened attitude toward blacks in general.\n\nThe family got off at the next stop without asking him what his name was or anything about him. The woman however, insisted on him taking the rest of their food.\n\n\"We home now, so take it.\"\n\nSaul knew better than to argue with her and tucked the food in with his belongings. After they were gone, he tried to sleep but his mind wouldn't slow down. What had he been thinking going to a place where he knew no one and had no way to support himself?\n\nA feeling of panic and homesickness over took him. He was seriously thinking about getting off at the next stop and hitchhiking back home. It was almost an hour before he was calm enough to think rationally. Although his father had been an abusive bastard, he did teach him one thing.\n\n\"If you give a man your word, then you damned well better honor it.\" His father told him time after time.\n\n\"I gave my word.\" Saul murmured. The only problem was; he didn't know exactly what he had given his word for.\n\nEventually, the sound of the train's engines lulled him into an uneasy sleep.\n\n******\n\nTy sat on his cot thinking about his future. It they found Ellen's body, it was over. He would be on the first train back to South Carolina no questions asked. Going to back to prison didn't scare him, but being back with Lawrence's followers did. He remembered what happened to Carl Tucker the undercover agent who had been Lawrence's right hand man.\n\nWord had it that he was in a wheelchair and that he would never walk again and that was luck. If someone hadn't come along looking for him, Carl Tucker would be dead. Ty knew this because he had been there and an active participant in the beating.\n\nHe hadn't thought about that day in a long time. It wasn't because of any sense of guilt that he was thinking about it now. He was thinking about it because if they found Ellen's body and sent him back to the state prison, he wouldn't be as lucky as Carl Tucker. If it got out that he talked, he would be dead within days.\n\nIt wouldn't matter that he told the agents was information that they already had. It would only matter that he talked.\n\nTy stood up and paced. He didn't want to die like that. He stopped pacing when he realized that even if they found Ellen's remains, they couldn't prove that it was her or that it was him that killed her. He looked over at the breakfast tray that sat untouched.\n\nSuddenly, his appetite was back.\n\nAs he ate the now cold breakfast, he thought about Becca and wondered how close she was to having the baby. In a rare moment of sentiment, Ty wished that he could at least know if he had a son. He knew that there would be no point in asking someone to find out for him. One, no one would do him that favor and two; Becca wouldn't give the information out.\n\nTy finished his breakfast and lay down on the cot. With nothing else to do, he dozed off.\n\n********\n\nNick alternately paced and sat down in his office. Will sat in the chair watching him but not saying anything. While he admired Kenji and Joel and considered them friends, he didn't have the same emotional attachment to them that Nick did.\n\nSeveral times he tried to get Nick to go home, but Nick had refused.\n\n\"The office is closer to the school.\" He said. \"And Abby and Hattie are with Hana.\" He added almost absently.\n\nHe didn't want to believe that Andrew would be so reckless as to pull a gun at school, but Peter's concern had convinced him.\n\n\"I'm telling you.\" Peter told him. \"Andrew Kelly is a loose cannon and if I can stop him at school I'll do it. To delay only increases the risk factor not only to Kenji and Joel, but anyone that he sees as an enemy.\"\n\nNick didn't want to admit it, but Peter was right. Now they were playing the waiting game.\n\n********\n\nThe class was coming to an end and Kenji had been trying to get Joel to leave.\n\n\"Joel!\" he whispered urgently.\n\nBut Joel ignored him.\n\nWith ten minutes of class left, Kenji prepared himself for a possible showdown. He had already decided that he would have to kill Andrew. There was no other way around it. He would feel guilty about it and he didn't know how he would explain it to his children. But that was for later, he had to get through today.\n\nThe issue he was having was that he didn't know what kind of weapon Andrew had. If it was a gun, the chances of him being killed rose exponentially. If it was a knife then his odds of being killed decreased. After thinking about what he knew about Andrew, Kenji was sure that the weapon was a gun. Andrew was too much of a coward to have chosen any other weapon.\n\nAs soon as the professor dismissed the class, Kenji stood and faced Andrew.\n\n*********\n\nThe anger was back.\n\nAndrew had gotten lost halfway through the class. His notes no longer made any sense. He looked over at Kenji and Joel and scowled. Neither man looked stressed and seemed to understand the lecture. The longer he looked at them, the more he saw his chances for getting into a good intern/residency program diminish.\n\nWhen the class dismissed for the day, Andrew reached for his bag. He really didn't know what he was planning to do when he reached for it. What startled him was when he looked up; Kenji was standing and facing him.\n\nAndrew stared back at him not sure of what to expect, but knowing what he wanted. He wanted Kenjiro Takeda to be afraid of him. He wanted Kenji to beg for his life. It was an unrealistic want and he knew it. Kenji had never shown any fear where he was concerned, why should he start now?\n\nWhat Andrew saw was the same cool demeanor that had always enraged him, but he saw something else; sadness and regret. For some reason that he couldn't understand, it increased his rage.\n\n\"You yellow bastard.\" Andrew thought, \"Soon you won't be going home to your black whore.\"\n\nAndrew wasn't surprised by his feelings toward Kenji, he had never liked him; but he was surprised by his anger toward Patricia. She had never been a major part of his vendetta toward Kenji, but a means of breaking through that calm demeanor that he hated.\n\nThis was the first time in which he had thought about her in a truly derogatory manner. He shook his head to clear it and turned his attention back to Kenji who was still looking at him.\n\n*********\n\nPeter sat waiting. At the moment, nothing was happening. Andrew's hand wasn't near his bag and if he made a move for it, he was poised to intervene. He could tell by the middle of class that Andrew was angry and frustrated. The frustration and anger grew as the class went on.\n\n\"Shit.\" Peter muttered as he watched the two men staring at each other. He tensed, ready to jump in if a fight broke out. To his relief, Andrew backed down.\n\nBefore Andrew could change his mind, Peter moved between Kenji and Andrew.\n\n\"What time is dinner?\" he asked cheerfully. \"I can't wait for that meatloaf!\"\n\nHe stayed between Kenji and Andrew while Andrew gathered his things and kept talking. He didn't dare look behind him to see what Kenji and Joel were doing, but glanced over at Trevor who gave him the slightest of nods.\n\nFinally, he heard Kenji and Joel gather their things and move toward the exit. He kept talking until he knew that they had left the room.\n\n**********\n\n\"Go home.\" Trevor said as soon as he, Kenji and Joel were out of the room. \"We'll call later.\"\n\nHe didn't give them a chance to respond to the order. He was already halfway back to the classroom leaving Joel and Kenji staring after him.\n\nThey stood looking toward the classroom for several seconds before they walked away. They were as far as the library when they heard their names being called.\n\n*********\n\nBy the end of class, Ernie was hopelessly lost. He could afford to not do well on one test, but the following ones would only be more difficult. He looked over at Kenji and Joel and saw that they were two of the few who didn't have the deer in the headlight look.\n\nSwallowing his nerves, he decided to ask them for help. He pushed his fear of Andrew out of his mind and prepared to leave the room. He stopped when he saw Kenji and Andrew staring at each other. He could see Andrew's anger from where he stood.\n\nErnie stood transfixed as another student appeared to place himself between Kenji and Andrew and seemed to be distracting Andrew. He found himself holding his breath not releasing it until he saw Kenji and Joel leave the room followed by another student.\n\nHe hurried to the exit in the hopes of catching them before they left the building.\n\n\"Kenji!\" he called just as they got to the library.\n\nHe wasn't sure that they heard him so he called out again. This time they stopped and turned toward him.\n\nErnie hurried over to them narrowly avoiding knocking the books out of the arms of a couple of female students. He mumbled his apologies and kept moving not stopping until he reached the library.\n\nHe hesitated for a minute then began to talk.\n\n\"Ummm I know that we're not friends or anything like that and that I don't have the right to ask for help, but this class is going to kill me. It looked like you two understood what was going on and I was hoping that you would see your way clear to help me.\"\n\n\"Kenji,\" Joel said. \"We need to go.\"\n\n\"Look, I understand that you don't like or trust me.\" Ernie said. \"But please... I'll meet you anywhere or anytime. I can't fail this class.\"\n\n\"Kenji, let's go!\" Joel said urgently as he looked behind him.\n\nErnie waited hoping that Kenji wouldn't turn him away. After a long silence, Kenji spoke.\n\n\"Meet us for lunch after class tomorrow.\"\n\n\"Thank you!\" Ernie said his relief evident.\n\nKenji looked at Ernie for a moment later before he and Joel walked away.\n\nErnie turned around and headed back toward the class room.\n\n\"I'm going to pass this class.\" He murmured. \"I'm going to....\"\n\n\"Friends with the Jap now?\" Andrew asked.\n\nErnie stopped short not knowing how to respond. He looked at Andrew and the student with him and said nothing.\n\n\"Don't you understand English anymore?\" Andrew taunted.\n\n\"I...I'm not friends with them.\" Ernie replied.",
        "\"Why were you talking to them then?\" Andrew demanded.\n\nErnie had just learned something else about Andrew. There were only two sides, his and theirs and there were no areas of gray. He was angry that he was afraid of Andrew. So what if he was friends with Kenji and Joel?\n\n\"I'm not friends with them... but I would like to be.\" Ernie said. \"I don't know if you noticed, but they're two of the few that seemed to understand what was going on in class and I asked them for help.\"\n\nErnie blanched at the look of total disgust and anger that Andrew gave him. Part of him wished that he hadn't said anything, but the other part of him was glad that he did.\n\n\"You might want to be careful of who your friends are.\" Andrew said with a cool smile.\n\nErnie's pulse sped up at the barely concealed threat.\n\nHe hurried away not looking back. He could feel Andrew staring after him and knew that Andrew wouldn't hesitate to kill him.\n\n********\n\nPeter hoped that Kenji and Joel did as Trevor told them and went home. It had been a close call. Had he been a couple of minutes later, someone would have been either hurt or dead. He wasn't sure that he would have been able to prevent a second confrontation.\n\nHe was shocked and then worried when Kenji and Joel were still in the building. He recognized the student that they were talking to as someone from class and wondered what he wanted. According to both Kenji and Joel, no one in class spoke to them out of fear of Andrew.\n\nAs they approached the trio, Peter willed Kenji and Joel to leave and stole a look around for Trevor. He saw him just inside the doorway of another room and breathed a sigh of relief. To his further relief, Kenji and Joel left before he and Andrew could reach them.\n\nPeter braced himself for another possible confrontation, but relaxed when he saw that Andrew only wanted to intimidate the student. However, he didn't miss the threat. He could see that the student hadn't missed it either.\n\nIt had become even more imperative that Andrew be stopped. He wasn't going to stop with Kenji and Joel. Peter cursed under his breath.\n\n\"What was that?\" Andrew asked.\n\n\"Nothing, I was just complaining.\" Peter replied. \"Let's get to class.\"\n\n*******\n\nThe drive home was quiet. Each man was lost in his own thoughts. Kenji was thinking about the pure hatred and evil that he saw in Andrew. It had unnerved him more than he let on. The only other person that he ever saw with that much hatred in his eyes was his father. Like Andrew, his father had been driven to kill. Just thinking about what his father and Joben wanted to do to Patricia was enough to make his stomach churn.\n\nSuddenly, all he wanted to do was go home to Patricia and the children and hug and kiss them. At that moment, he could have cared less about school and their future plans. He pressed down on the accelerator of the car and then immediately slowed down.\n\nKenji took several deep, calming breaths. The urgency to get home was still there, but the desire to finish school and provide for his family had returned. He looked over at Joel who was looking at him.\n\n\"Are you alright?\" Joel asked.\n\n\"I'm fine.\" Kenji replied. \"I was just thinking about my father. He was the last person that I saw with such hatred in him.\"\n\nJoel was silent for several seconds.\n\n\"I don't know if I could have forgiven him.\" Joel said softly. \"He was in on the plan to kill Patricia and then got your mother arrested as a spy.\"\n\n\"It wasn't easy.\" Kenji conceded. \"Patricia forgave him long before I did. Today just reminded me of how all-consuming hatred could be. I had harbored some hope that I would be able to reason with Andrew, but it has gone too far for that.\"\n\n\"Will you kill him?\" Joel asked.\n\n\"If I must.\" Kenji replied. \"What are you thinking?\"\n\n\"Definitely not about forgiveness.\" Joel replied. \"I wish that someone would find him dead in his bed or something. And before you say it, I know; hate is a wasted emotion. But damn Kenji, our lives have been disrupted enough by that jerk.\"\n\nKenji didn't reply because there were times that he wished that Andrew would just disappear. Not on a permanent basis, but that he were just anywhere else but here.\n\n\"I understand.\" Kenji said but didn't elaborate.\n\nSeeing that Kenji was going to say no more on the subject, Joel brought up a new one.\n\n\"Are we really going to help that guy?\"\n\n\"Yes.\" Kenji said quietly. \"He took a risk in coming to us.\"\n\n\"But he could be helping Andrew!\" Joel protested.\n\n\"I don't believe that to be true.\" Kenji replied.\n\n\"Why not?\" Joel retorted. \"That bastard was one of the ones who broke my hand and laughed while they did it.\"\n\n\"You don't have to help him.\" Kenji replied.\n\n\"You still haven't told me why you think he's not helping Andrew.\" Joel said.\n\n\"He had two things in his eyes that Andrew Kelly doesn't have.\" Kenji said. \"Humanity and the same fear that you had when we first met.\"\n\n\"But that doesn't mean anything.\" Joel argued. \"He could still be working with Andrew.\"\n\n\"You are right.\" Kenji conceded. \"There is that possibility. I suspect that one of the agents will investigate. Both of them saw us talking to him.\"\n\n\"Alright then, I'll make a deal with you.\" Joel said. \"We don't go near him until they clear him.\"\n\nKenji hesitated and then nodded. He sincerely hoped that everything would be over by tomorrow.\n\n******\n\n\"Are they alright?\" Nick asked Trevor.\n\n\"They're fine, I sent them home.\" He replied.\n\n\"Do you really think that Kelly is stupid enough to carry a gun to school?\" Nick asked.\n\n\"I believe that he is.\" Trevor replied. \"I agree with Peter, this kid is nuts. I have a question, what do you know about his group?\"\n\n\"Only that it consists of men from his class and that it's a relatively small group. The kid that was killed was a part of that group. Why?\"\n\n\"Kenji and Joel were talking to a student from the class.\" Trevor said. \"But according to Peter, the other students stayed away from them because of Kelly.\"\n\n\"Do you know his name?\" Nick asked.\n\n\"Ernie something. I tried to intercept him, but I was more concerned about Peter and Kelly. The kid wasn't carrying and he was as scared as hell, but I want to be sure.\"\n\n\"Do you have another class with him?\" Nick asked.\n\n\"Yes, I'll buddy up to him and keep you posted.\" Trevor said as he stood up. \"Do you know when Charles is getting back?\"\n\n\"He said sometime this afternoon. I'll fill him in.\"\n\nNick stopped Trevor when he got to the door.\n\n\"You guys watch your backs. This kid is dangerous and for god's sake, don't go to any meetings with him and his bunch. For all we know, he's armed them too.\"\n\n\"Understood.\" Trevor said as he closed the door behind him.\n\nNick looked at the closed door for several minutes. He paged his secretary, informed her that he was going to be out for the rest of the day and then headed to Charles' office. It occurred to him that he was there almost more than he was his own office and wondered what that meant.\n\n*******\n\n\"Papa's home!\" Ralph squealed and ran toward the garage.\n\n\"It's too early.\" Patricia replied. She hadn't been watching and listening to the passing vehicles as closely as Ralph had.\n\n\"He's home!\" Ralph yelled again.\n\nNow Patricia heard the familiar sound of the car as it pulled into the driveway and into the garage. Her first reaction was relief, the second was anxiety. Something must have happened that they were home early.\n\n\"Penny!\" she called up the stairs. \"They're home!\"\n\nShe could hear Penny as she ran across the room and down the stairs.\n\nAs much as Patricia wanted to run to Kenji to greet him, she waited. She was aware of just how worried and frightened Ralph was. He needed reassurance more than she did. She heard the sound of books being dropped on the kitchen table and Joel rushing through the kitchen.\n\nPenny met him halfway across the large living room and threw herself in his arms crying with relief. Patricia moved to the doorway of the kitchen and watched Ralph and Kenji talk.\n\nKenji was hugging Ralph so tightly that the little boy squirmed, but he was hugging Kenji as hard as he could. Kenji looked up and saw Patricia watching them and smiled at her.\n\n\"Where is pretty one?\" he asked.\n\n\"She's taking a nap.\" Patricia replied.\n\nShe wanted to know why they were home early, but didn't ask. She wasn't sure that she wanted to know.\n\n\"Ralph, go pick out a book and I will read with you, I'll join you in a few minutes.\"\n\nAs soon as they were alone, Kenji hugged Patricia so tight that it bordered on pain.\n\n\"Kenji what happened?\" Patricia asked hugging him back.\n\nKenji didn't reply but kissed her.\n\n\"I am just happy to be home.\" He told her. \"We'll talk later.\"\n\nHe kissed her again and went to find Ralph.\n\n********\n\nRalph picked out his favorite book 'The little engine that could' and waited for Kenji to find him. The book was below his reading level, but it was the first story that he remembered Kenji reading to him. As he waited, his little mind tried to understand why anyone would want to hurt his father.\n\nHe frowned as a thought formed in his brain. If they hated his papa because he was Japanese, and they hated his mama because she was black; then they would hate him and Marie too. A tear ran down his cheek as he tried to understand the concept of hate.\n\n\"Ralph?\" Kenji called softly. \"Why are you crying?\"\n\n\"Papa, I don't understand.\"\n\nKenji sat on the floor beside Ralph and pulled him into his lap.\n\n\"What is it that you don't understand?\" he asked.\n\n\"Why do people hate?\"\n\n\"People hate for many reasons.\" Kenji replied. \"Sometimes they are just afraid. Sometimes they are taught to hate by their family, but sometimes; they don't know themselves.\"\n\n\"Does the man who hates you know why?\" Ralph asked.\n\n\"He thinks he does.\" Kenji replied. \"His father fought in the war against Japan. During the fight, he was hurt and lost one of his legs. His son, the man who hates me; feels that this is my fault even though I wasn't there. I represent all Japanese to him. He feels that if he hurts me, then he hurts the Japanese that hurt his father.\"\n\nRalph gave Kenji a thoughtful look.\n\n\"Grandpa Hiroshi hated mama didn't he?\"\n\nThe question surprised Kenji. Ralph had always been a little reticent around his grandfather, but it had gotten much better as Hiroshi's feelings toward Patricia changed.\n\n\"At one time that was true.\" Kenji replied. \"But he has changed. Someday when you are much older, I will tell you that story.\"\n\n\"Can the man who hates you change?\" Ralph asked.\n\n\"That is a hard question to answer.\" Kenji said. \"Only he can answer that.\"\n\n\"Papa? Do people hate me and Marie too?\"\n\n\"Niko.\" Kenji said unconsciously switching to the shortened version of his Japanese name. \"There will always be people who hate. They are a part of life, but there will also always be people who love to balance those who hate.\n\nYou must always remember those who love you. Your mother, me, Marie, Grandpa Nick, all of us but it is also important that we do not spread the hatred. Do you understand?\"\n\n\"Do you hate the man who wants to hurt you?\"\n\n\"No, I don't hate him, but I will do what I must to keep all of you safe.\"\n\nKenji waited for Ralph to respond. When none was forthcoming, he began to read to him.\n\n*******\n\nAndrew relished the fear that he saw in Ernie's eyes. He knew exactly why Ernie was talking to Kenji. He wanted help with the class.\n\n\"Hey Pete, did you understand that crap from class?\"\n\n\"Sure... I can help you if you want.\" Peter replied.\n\n\"That would be great, can you stay after dinner?\"\n\n\"Sure, I have no place to be.\" Peter said.\n\nThey made it to the next class early. Andrew looked around clearly looking for Kenji and Joel. He saw Ernie sitting on the other side of the room trying not to look at him.\n\n\"Chickenshit.\" Andrew grumbled even as he smiled at Ernie.\n\nPeter watched Andrew out of the corner of his eye noting the location of the bag.\n\n\"Damn\" he muttered when he saw it on the desk. He had been hoping that Andrew would put it under his seat.\n\nHe saw Trevor sitting a few seats to the right and behind him. He had a good view of Andrew and his bag from that vantage point. They needed to talk before the day was over; the issue was doing it without raising suspicion.\n\n\"Oh, hey; here's my address.\" Andrew said suddenly. \"I wrote it down for you.\"\n\n\"I was going to ask about that.\" Peter replied looking at the address.\n\n\"Nice area.\" He commented.\n\n\"It's alright.\" Andrew said. \"But have you seen some of the houses that the Japs live in? They come over here, bomb us and they're living better than people who belong here.\"\n\n\"It isn't right.\" Peter commiserated.\n\nHe breathed a sigh of relief when class started. He wasn't sure of how much more of Andrew's racist rhetoric he could take.\n\nUnder the guise of taking notes, Peter wrote Andrew's address on a piece of paper. Pretending to be frustrated, he ripped the paper out of the notebook and stuffed it in his pocket. When they left class, he would drop it on the floor next to Trevor's row.\n\nHe turned around to glance behind him and caught Trevor's eye. When he turned around, Andrew was looking at him.\n\n*******\n\n\"Are you going to let Ty know when you have the baby?\" Susan asked Becca while they were having lunch.\n\nThat was the question that Becca had been asking herself ever since Ty had been arrested. Part of her wanted to do the fair thing and tell him, but part of her wanted to shield her baby from the ugliness that was his or her father.\n\n\"I don't know yet.\" Becca replied. \"What would you do?\"\n\nSusan shrugged.\n\n\"I would probably not tell him, but that's me.\"\n\n\"All Ty talked about was having a son, another little soldier for the cause.\" Becca said. \"I don't want my baby to be a soldier in a cause like that. Susan, I was so stupid... some of the things I've said and done to people who did nothing to me. Everything that's happened to me is my fault. I knew Andrew was wrong but I supported him only because I thought I loved him.\"\n\n\"The important thing is that you know that you were wrong.\" Susan replied patting Becca's arm.\n\n\"You're right... hey, was your grandmother really going to shoot Ty?\"\n\n\"Oh yes and she wouldn't have missed.\" Susan replied.\n\n\"Becca, have you decided what you're going to do? You were half done with school when you went south.\"\n\n\"For now I'll concentrate on the baby and my parents will help me with that. Any grand plans that I had are on hold until the baby is old enough to go to school.\"\n\n\"Why couldn't you take a class a semester or something? I'm sure that your parents would help you with the baby. I could even help. What do you think?\"\n\n\"I think,\" Becca said stretching, \"that I need to have the baby first and then we'll see.\"\n\nThe truth was, Becca hadn't really thought beyond having the baby. She was thankful that her parents hadn't kicked her out when she told them the rest of what she had done. She wasn't about to ask them to help her with the baby so that she could go back to school. She knew that if she asked, they would help her, but it was time for her to start thinking like an adult. She was responsible for her baby and it was up to her to figure things out. Her parents had already helped her more than she deserved.\n\n\"Well, think about it.\" Susan said. \"What are you going to do with the house?\"\n\n\"Mom and dad want me to stay here so I guess I'll rent it out for a while. \"\n\nBecca hesitated for a moment.\n\n\"Thank you for being a better friend to me than I ever was to you.\"\n\n\"You're welcome, now; what names are you thinking about?\"\n\n********\n\nHarlan's stomach growled noisily. The scent of the apple pie made his mouth water, but Eleanor had been firm in that he couldn't have a piece until dessert. To compound the gnawing in his stomach, the odor of meatloaf mixed in with the smell of the pie and baked corn...\n\nHe tried to distract himself by reading the paper. There was an update or lack of an update on the murder of Milton Vaughn. There were no suspects and no one had been arrested as of yet. The article made Harlan think about Andrew.\n\nHis response to the death of someone that he knew was... off. He acted surprised, but he didn't really seem to be. There had been no real concern or grieving.\n\nA bad feeling replaced the hunger in Harlan's stomach. His one and only child was .....\n\nHe couldn't complete the thought. Andrew wouldn't... why would he? He knew the boy. Still Harlan couldn't shake the feeling that there was something wrong with Andrew.\n\nHis father, Andrew's grandfather; used to tell him that one could tell what a man was like by looking into his eyes. Harlan had looked into many eyes, especially during the war. Some of the eyes had death in them, some fear, some hatred and some of them... some of them had nothing.\n\nThe owners of the empty eyes laughed, talked and joked like everyone else; but the laughter never reached their eyes.\n\nLike Andrew.\n\nSuddenly, he had a need to see the gun that he had given Andrew when he came back from the war.\n\nHarlan sat frozen in his chair undecided about what he should do. If he went into Andrew's room and went through his things, it would be a breach of privacy. The best thing to do, he decided was to ask to see the gun.\n\nHe didn't know what he would do if Andrew didn't have it, but why wouldn't he? Harlan turned his attention back to the newspaper trying to convince himself that he was wrong about his son.\n\n********\n\nAfter class was over, Peter stood up and picked up his books. This was the last class of the day and the last chance that he would have to communicate with Trevor. He had already decided that he was going to stick to Andrew like glue. He reached into his pocket and felt for the crumbled piece of paper and changed plans.\n\nHe took out a piece of gum and lazily chewed it. After a minute or two, he took the crumpled paper out of his pocket and spit the piece of gum into it.\n\n\"That didn't last long.\" Andrew said.\n\n\"I just like to chew the sugar out.\" Peter replied with a smile. \"You ready to go?\"\n\nAs they walked out, Peter threw the paper toward the trash can without looking to see if it had gone in or not.\n\n\"We've got some time if you want to study for that class.\" Peter said.\n\n\"Oh... I have some place to be.\" Andrew said. \"I'll see you at the house.\"\n\n\"Suit yourself.\" Peter replied nonchalantly, \"but I heard that Dr. Wallis likes pop quizzes and that they're as bad as his exams.\"\n\nThat stopped Andrew in his tracks. Indecision flitted across his mind. He was hoping to get a little target practice in before dinner.\n\n\"Let's go.\" He said after several seconds. He could always go before class in the morning.\n\nPeter whispered silent thanks and followed Andrew to the library.\n\n********\n\nTrevor waited until the room emptied to retrieve the piece of paper that lay outside of the trashcan. He quickly stuck in his pocket and hurried after Ernie.\n\n\"Hey wait up!\" he called.\n\nIt took three calls before Ernie realized that someone was trying to get his attention. He stopped, turned around and waited for Trevor to catch up with him.\n\n\"Hey, you were in the first class with me.\" Trevor said.\n\n\"Yes and?\" Ernie asked.\n\n\"I don't know about you, but that shit made absolutely no sense to me. I looked around the room and it looked like everyone else was confused as I was. I was thinking about finding a study partner.\"\n\nErnie laughed.\n\n\"I'm probably more lost than you are. But not everyone in the class is lost. Do you know who Kenji Takeda is?\" Ernie asked.\n\n\"The tall Jap?\" Trevor asked testing the waters.\n\n\"Japanese.\" Ernie corrected, \"But yes, him.\"\n\n\"What about him?\" Trevor asked.\n\n\"He's at the top of the class and his friend Joel isn't far behind. But anyway, if you need help; those are the guys to go to. I asked them for help myself. We're meeting tomorrow during lunch if you want to come. You can ask them if you can join in.\"",
        "\"You sound like you admire him.\" Trevor commented.\n\n\"I do.\" Ernie admitted. \"I wish that I had a quarter of his intelligence and composure.\"\n\n\"Well, thanks for the info; you just might see me tomorrow.\" Trevor replied.\n\nTrevor watched Ernie away and realized that he hadn't asked his name.\n\n\"Hey! What's your name?\" he called out.\n\n\"Ernie Johnson, yours?\"\n\n\"Trevor Edison.\"\n\nTrevor walked away satisfied that Ernie wasn't a threat. If anything, he was in danger. He hadn't missed the look that Andrew had given him in class. He went to the nearest restroom and took the note out of his pocket.\n\n\"This is one crazy assed son of a bitch.\"\n\nAnd then the address and time.\n\nTrevor looked at his watch and decided to get something to eat and swing by the office to see if Charles had gotten back yet.\n\n*********\n\nNow that Ralph was calmed down and Kenji spent time with Marie, he and Patricia had a chance to talk. Dai and Hiroshi took care of the children to allow them time to talk in private.\n\n\"Do not rush.\" Dai told them. \"We will tend to the children.\"\n\nThey spoke briefly to the children and went to their room. Kenji closed and then locked the door behind him. He stood watching as Patricia slowly undressed. His breath caught when her dress slipped over her shoulders, down and over her wide hips and finally to the floor. He didn't move when she removed her bra and finally her panties. He just wanted to look at her before he touched her, before he tasted her; before he lost himself in her.\n\nPatricia stayed where she was. She had seen him like this before. He needed and wanted to talk, but he needed her first. Even as he approached her with the front of his slacks bulging out, she didn't move although she wanted to. She wanted nothing more than to meet him halfway and throw her arms around him and hold him. But she waited.\n\nKenji's light brown eyes shone with desire as he approached her. His clothes seemed to be too snug, especially his slacks. He ignored the discomfort and kept his eyes on Patricia's face. He stopped in front of her, looked down and lightly ran a finger down the scar that Vernon Monroe caused when he threw a rock at her.\n\nHe bent down and placed his lips where his finger had been. He closed his eyes and inhaled the scent of the flowery soap that she showered with. He loved that scent and hoped that she never changed it. His lips followed the path of the scar and ended at her lips. For several seconds neither of them moved sharing the oxygen between them.\n\nFinally, Kenji touched her lips with his tongue before slipping it into Patricia's mouth. Patricia moaned and stepped closer wrapping her arms around his waist. Her nipples hardened as they rubbed against the soft fabric of his shirt. A soft involuntary moan escaped her lips as she began to pull Kenji's shirt out of his trousers.\n\nPatricia smiled when she felt his breath hitch as she ran her hands up and down his back and kneaded the tight muscles. She didn't know what it was about that simple touch, but he always immediately relaxed; this time was no different.\n\nKenji let out a long sigh as he crushed Patricia against him. It was like the worries of the day left him with that sigh. He began backing her backwards toward the bed not stopping until she was sitting on it. He stepped back and undressed while Patricia watched him. As always, when he undressed, he laid hers and then his clothes over the back of a chair.\n\nBy the time he was back at the bed, Patricia had already inserted the diaphragm and was lying back on the bed with her legs open in invitation. Kenji's cock jerked in response, but instead of sliding into her, he knelt between her legs and kissed her mound.\n\nHe took his time in kissing and licking her relishing every sigh and moan that passed through her lips. After several minutes, Kenji took Patricia's hardened nub into his mouth and suckled on it. He slid two long fingers inside of her, checked the placement of the diaphragm and began to slide them in and out at a slow, leisurely pace.\n\nPatricia cried out, her hands clutching at the blankets on the bed. This was one of the rare times that they exchanged no words while making love. Kenji sucked and nipped at her clit until she came with a sob into a pillow. Wasting no time, Kenji slid into her before her orgasm was over. He ground his pubis against her every time he slid into her moaning when his full sacs rubbed against her ass cheeks.\n\nPatricia reached up and pulled Kenji down to her. She planted kisses on his chest before finally taking a nipple into her mouth and flicking the tip of her tongue over it.\n\n\"Oh Kirei.\" Kenji moaned speaking for the first time since they began making love.\n\nPatricia knew that he was close by the way he began to pump faster. He wasn't pulling most of the way out, but was staying deep inside of her, his cock growing in girth and twitching. She began to tighten her muscles around his pulsing cock and sucked hard on his nipple.\n\nA moment later, she heard him murmur something in Japanese. She cried out when she felt the first splash of his seed against her vaginal walls. Kenji ground hard against her taking her with him as he came.\n\nAfterwards, they lay on the bed together, arms wrapped tightly around each other.\n\n\"Kenji, what happened today?\" Patricia asked softly.\n\nShe listened as Kenji told her about the class.\n\n\"I haven't seen such hatred since my father... Kirei, there will be no reasoning with Andrew Kelly. His hatred runs deep and his emotional state complicates things. \"\n\n\"He had a weapon at school?\" Patricia asked anxiously.\n\n\"Yes Kirei. That is why we came home early.\"\n\n\"He could have killed you! You can't go back to school until they catch him.\"\n\n\"I know that Kirei.\" Kenji replied. \"There is too great a risk that he will hurt someone else. Let us hope that this ends tonight.\"\n\n\"I hope so too.\" Patricia replied. \"I want you and Joel safe.\"\n\n\"This has been difficult for you.\" Kenji said. \"I am sorry for that.\"\n\n\"It'll be over soon.\" Patricia replied. \"We can go back home and Penny and I can go back to school.\"\n\n\"I forgot to mention that Ernie Johnson asked for help in one of our classes.\" Kenji said as he lazily stroked her arm.\n\n\"What did you say?\" Patricia asked.\n\n\"I told him that we would meet him at lunch time.\" Kenji replied. \"Joel is of the opinion that we shouldn't help him.\"\n\nKenji then explained Joel's rationale.\n\n\"I can see his point.\" Patricia said. \"How do you know that he isn't working with Andrew? And he could lie to Trevor and Peter.\"\n\n\"I don't believe that to be true.\" Kenji said. \"But as I told Joel, both agents saw Ernie talking to us. I am quite sure that one of them will investigate him.\"\n\nThey lay on the bed for another hour before cleaning up and getting dressed. Kenji stopped Patricia at the door and kissed her.\n\n\"Thank you Kirei.\"\n\n********\n\n\"What time is dinner?\" Charles asked after Trevor gave him and Nick the latest updates.\n\n\"Six.\" Trevor replied. \"I plan to sit in a car across the street from the house. Also, I talked to that kid Ernie. He's not a problem, but he could be in danger. Pete is right on about Kelly, he's nuts.\"\n\n\"Just watch your backs.\" Charles said. \"As a matter of fact, I think I'll come with you.\"\n\n\"Call me with updates.\" Nick said.\n\n\"Trevor, meet me at the car; I need to talk with Nick for a minute.\"\n\nWhen Trevor was gone, Charles turned to Nick.\n\n\"If we don't find a gun, we're fucked.\"\n\n\"I know.\" Nick replied. \"We'll have to come up with something else to catch this kid and Kenji staying away from school isn't the solution.\"\n\n\"You also know that I can't keep two agents on him indefinitely. I can leave Peter because he's a med student in real life, but Trevor...\"\n\n\"Then let's hope that we find a gun.\" Nick replied. \"Better yet, the gun that killed Milt Vaughn.\"\n\n\"Nick... have you ever thought about coming back to the agency?\" Charles asked. \"I could be wrong, but the only time I see a sparkle in your eyes is when you're talking about your family or you're working a case with us. We could use someone like you in this office.\"\n\n\"I'll talk to you later.\" Nick said as he gathered his suit coat and hat.\n\n\"Just think about it.\" Charles said as he picked up the phone.\n\n\"Who are you calling?\" Nick asked.\n\n\"Briscoe. I want back-up in case this thing goes bad and I want to let him arrest Kelly. The murder is a local police issue, the group is ours.\"\n\n********\n\n\"It's time to get going.\" Andrew said looking at the clock.\n\n\"Good, because I'm starving.\" Peter replied. \"Does the information make more sense now?\" he asked.\n\n\"It does... thanks.\" Andrew replied. \"One favor... when we get to the house, don't bring up the subject of guns. Dad hates them.\"\n\n\"Fuck!\" Peter thought as he plastered a smile on his face. \"No problem.\"\n\n\"Thanks.\" Andrew said. \"You want to follow me over?\"\n\nA few minutes later, Peter was following Andrew home. He wracked his brain trying to think of a way to innocently bring up the subject of guns. It wasn't long before they pulled up in front of a small but well-kept house. The Takeda home with its large yard and expertly pruned trees looked like a mansion compared to the Kelly home.\n\n\"Nice house.\" Peter commented when he walked over to Andrew's car.\n\n\"It'll do.\" Andrew replied as he thought about the house where Kenji and Patricia lived.\n\n\"Dinner smells good.\" Peter said distracting Andrew.\n\n\"It sure does.\" Andrew replied.\n\nOnce inside the house, Andrew became a different person. His voice and demeanor softened as he introduced Peter to his parents.\n\n\"It's nice to meet you.\" Peter said. \"I've already sampled your meatloaf at the diner and I told Andrew that it's better than my mom's.\"\n\n\"That's nice of you to say.\" Eleanor replied. \"Come on, dinner is ready.\"\n\nPeter had meant it when he said that Eleanor Kelly's meatloaf was better than his mother's. He devoured three large slices of it and everything else that she served. Conversation was centered on school and future plans.\n\n\"What area of medicine are you going to go into?\" Harlan asked.\n\n\"I'm thinking about going into neurology or cardiology.\" Peter replied.\n\n\"Andrew is thinking about being a family doctor aren't you dear?\" Eleanor asked.\n\nPeter cringed when he heard the pride in her voice. He couldn't imagine what Andrew's parents were going to say and feel if he was right about him. His stomach full, he decided that it was time to go to work.\n\n\"Andrew, did you know that student that got killed a few weeks back?\"\n\n\"I knew who he was.\" Andrew replied. \"Nice guy, we had some classes together.\"\n\n\"Lie.\" Peter thought to himself.\n\n\"That was a damned shame.\" Peter replied watching Andrew's reaction carefully. \"And they still don't know who did it.\"\n\nWhat alarmed Peter was not only the lie, but Andrew's lack of reaction. He said the right words, but there was no emotion behind them. Peter noticed something else. Harlan Kelly was nervous and he wondered why.\n\n\"I apologize; I shouldn't have brought up such an unpleasant subject.\" Peter said and noticed the relief in Harlan's face.\n\n\"Andrew tells me that you were in the Air Force.\" Harlan said glad for the change in subject.\n\n\"Yes sir, I was.\" Andrew replied. \"The war ended before I got to kill any Japs though.\"\n\n\"Son,\" Harlan said. \"Let me tell you what I told Andrew. It was war and it's over. They had a job to do just like I had a job to do. It wasn't personal and I don't bear any ill will toward anybody.\"\n\nPeter was surprised at the sentiment and felt the truth in it, so where did Andrew get his beliefs from?\n\n\"But you lost your leg.\" Peter replied.\n\n\"I would be lying if I told you that for a time, I hated anything Japanese.\" Harlan said. \"But I took limbs and lives too. We were each fighting for what we believed in. As I said, it was war and it's over.\"\n\n\"How about dessert?\" Eleanor asked. She was clearly uncomfortable with the conversation.\n\nPeter rose to help clear the table but was told to sit down.\n\n\"You're company.\" Andrew said as he stood up to help his mother.\n\nHarlan and Peter were left alone for a few minutes. Taking a quick glance toward the kitchen, Andrew asked Harlan about weapons.\n\n\"Andrew told me that you don't like guns, but did you bring back any other souvenirs?\"\n\n\"I brought back a knife or two.\" Harlan replied. \"I also brought back a Japanese pistol. I gave it to Andrew as a souvenir. Would you like to see it?\"\n\n\"See what?\" Andrew asked as he entered the dining room.\n\n\"That pistol I brought back for you.\" Harlan replied. \"Why did you tell Peter that I don't like guns?\"\n\nFor the first time since he met Andrew, Peter saw doubt and panic.\"\n\n*********\n\n\"How do you think it's going in there?\" Trevor asked Charles.\n\n\"Peter is smart and won't do anything stupid.\" Charles said looking at the house. \"Let's just hope that he finds something even if it isn't a gun.\"\n\nHe looked in the rear view mirror and saw Briscoe's car. There was a squad car in the back just in case. He wanted to take no chances that Andrew would escape. If that happened, they might never find him.\n\n********\n\nAndrew heard only the last part of the conversation, but it was enough to tell him that he was in deep shit. He cursed himself for not getting rid of the gun and wondered if he could still get rid of it somehow.\n\nThe only thing that he could do was stall. He also realized that it had been unreasonable for him to think that the discussion of weapons wouldn't come up. Peter and his father were both military men, why wouldn't it come up? He now had to deal with the lie about his father hating guns.\n\n\"I guess I just assumed that you wouldn't because of what happened.\" Andrew said smoothly.\n\n\"I like guns just fine.\" Harlan replied. \"Why don't you go get that pistol I brought back? Peter would like to see it.\"\n\nAndrew scrambled for a way out of showing Peter the gun. What he didn't know was that all Peter needed to hear was that there was a gun in the house.\n\n\"I'll show it to him after dessert.\" Andrew replied.\n\n\"I would like to see it too.\" Harlan said. \"I took that gun from a Japanese officer.\" He added.\n\nPeter didn't say anything but watched the interaction between father and son. He wondered if Harlan saw the same thing he did.\n\n\"Sure... let me go get it.\" Andrew said.\n\n*********\n\nAndrew ran up to his room, locked the door and took the box containing the pistol from under his bed. His anxiety increased tenfold when he remembered that the clip was missing. There was no way to explain that and if he was going to frame someone, that time was long past.\n\nAndrew also realized something else; the Jew who had taken the clip would remember him. So would Hathaway's wife.\n\n\"Andrew? What's keeping you?\" his mother called up the stairs.\n\n\"Coming!\" he called back.\n\nNot knowing what else to do, he put the gun back into the box and carried the box downstairs. He sat the box on the floor by the sofa and went to the dining room.\n\n\"Sorry, it was in the bottom of my closet.\" He said apologetically.\n\nHis mother cut the apple pie and put a scoop of ice cream on each slice. To Andrew, it seemed as though she was moving much too quickly eating up precious time that he needed to think.\n\n\"So Andrew.\" Peter asked, \"Have you ever fired a weapon?\"\n\n\"Never.\" Andrew lied. \"I don't like guns.\"\n\nSuddenly, dessert was over and Andrew was still scrambling for a reason not to show his father and Peter the gun. He jumped up to help his mother clean up.\n\n\"You go visit.\" Eleanor said. \"It won't take me long to clean up.\"\n\n********\n\nPatricia and Penny couldn't eat. They were both too anxious about what was happening at Andrew's house. If Kenji was anxious, he didn't show it. Joel, on the other hand was as nervous as the women were and tried to hide it.\n\n\"Do you think that they will be successful?\" Hiroshi asked.\n\n\"I think that they will be successful even if it isn't tonight.\" Kenji replied.\n\n\"Maybe we should call Nick.\" Patricia said.\n\n\"Kirei, he knows no more than we do. He will call us if he hears anything. Peter or Trevor will call us as well.\"\n\n\"I know. I'm just anxious.\" Patricia replied as she glanced at the clock. It was barely six. Dinner at the Kelly's would be just beginning. She was glad that Kenji agreed not to go back to school and thankful that they had a friend like Paul Mynt who smoothed things out at the school for them.\n\nWhat they needed was something to distract them.\n\n\"Dai and Hiroshi, would you mind if I invited everyone over for dinner? I know that it's a lot to ask...\"\n\n\"We would enjoy that.\" Dai replied softly. \"We have not had a... picnic here before. When would you like to have the picnic?\"\n\n\"Is Saturday alright?\" Patricia asked.\n\nSuddenly, the mood of the table lightened at the thought of doing something fun. Ralph stopped picking at his food and actually smiled. The dimples that he inherited from his father deepened when he heard the word cookies. He had also inherited his father's love of sweets.\n\n\"Can we make sugar cookies?\" he asked his voice filled with hope.\n\n\"I have a suggestion.\" Kenji said smiling at him. \"Why don't we make them together? Uncle Joel can help if he likes.\"\n\nHiroshi watched the way that Kenji interacted with his son and realized that he could learn from him. He himself had been a stern father. Crying was considered a sign of weakness and feelings weren't validated. He looked at his grandson who was encouraged to ask questions and express his feelings and didn't see an ounce of weakness.\n\nHe looked at Kenji who had never really followed convention and felt a renewed pride. This man, his son was going to bake cookies with his child.\n\n\"May I help?\" Hiroshi asked to the shock of everyone at the table.\n\nWhile he participated in the care of his son, he never helped in the kitchen deeming it to be women's work. He realized that he wanted his youngest son to look at him with the same love and respect that he saw in Ralph's eyes when he looked at Kenji.\n\n\"Of course you may.\" Kenji replied both surprised and pleased.\n\nRalph gave Hiroshi a guarded look and then smiled at him as if he had come to some kind of decision.\n\nFor just a little while, Andrew Kelly was forgotten.\n\n**********\n\nSaul scrunched down in his seat. As far as he was concerned, Los Angeles couldn't arrive in Los Angeles soon enough. His ass was sore from sitting, but he was afraid to go for a walk in fear that his seat would be gone. He only left it long enough to use the bathroom and then went right back.\n\nThe sandwiches that the black family had given him were gone and he had begun to eat the food that his mother sent. He had just gone through it to see how much he had left and it wouldn't be enough to get him all the way to California.\n\nThe closer he got to his destination, the more he worried about what he was going to do once he got there. He had memorized the address that Lawrence gave him along with Nick's phone number and office address.\n\nOn a whim, he asked the conductor about available jobs.\n\n\"Check in at the station when we get there.\" He replied in a curt tone. \"If there's anything, it'll be helping folk with their luggage.\"\n\nSaul didn't care what the job was as long as it paid. He had mouths to feed at home. There was a question that still burned in the back of his mind- what he was supposed to do in order to keep his promise to Jacob.\n\nTears burned his eyes as he remembered seeing Jacob hanging without the benefit of a real trial. He had done nothing in Saul's eyes. Jacob had only punished the men who hurt his family the way that the law should have.\n\n\"It just ain't right!\" he hissed under his breath.\n\nEven that knowledge gave him no clue as to how he could keep his word to Jacob Lincoln.\n\n\"What am I supposed to do?\" he asked himself out loud.",
        "\"You alright?\" The soft female voice of an older woman asked.\n\nSaul jumped. He had been so deep in thought that he hadn't heard the woman approach and sit down.\n\n\"Y...yes ma'am.\" He replied sitting up in his seat.\n\n\"Ma'am?\" the woman asked shocked. \"Ain't no white man ever called me ma'am. Where you from?\"\n\n\"South Carolina ma'am.\" Saul replied\n\n\"You a long way from home.\" The woman said. \"You always talk to yourself?\"\n\n\"Only when I got things on my mind.\" Saul replied with a small smile.\n\nLike the family the day before, the woman shared her food with him. This time, Saul didn't argue as he gratefully accepted a piece of bread with an apple.\n\n\"It ain't much but it'll keep the hunger away.\" She said with a smile.\n\n\"I appreciate your kindness.\" Saul said.\n\n\"Tain't nothin'\" The woman replied. \"We all God's children ain't we? And all Gods' children got to eat.\"\n\nThe woman got off three stops later leaving Saul alone but not hungry.\n\nThe sound of the train's engine lulled Saul back to sleep. When he woke up, he was being glared at by a very disgruntled black man.\n\n*******\n\n\"How is school going?\" Jonah asked Isadora as he helped himself to another piece of bread.\n\n\"So far so good.\" Isadora replied.\n\n\"Are you being well treated?\" he asked.\n\n\"Yes sir. I even made a friend.\" Isadora replied.\n\n\"I'm glad to hear that.\" Jonah replied. \"But I want you to remember what your primary objective is.\"\n\n\"I know exactly why I'm here.\" Isadora replied. \"In three years, I intend to be accepted at UCLA's school of law. After that, I intend to take and pass the BAR and will begin putting those...\"\n\nShe stopped when she realized that she was raising her voice. The children were staring at her, but Jonah, Lenny and Bella were smiling at her.\n\n\"I'm sorry.\" She said. Her face was burning with embarrassment.\n\n\"I think you're right Bella.\" Jonah said still smiling.\n\nHe turned to Isadora.\n\n\"Make sure that you keep your fire and focus and I'll help you meet your goals.\"\n\nOnce again, Isadora wondered about Jonah. Where he came from, where the money came from that he was able to educate so many people and where had he gotten that limp? One day, she was going to find out about the mysterious Jonah Jackson.\n\n******\n\nErnie sat at his desk trying to make sense of his notes by reading the text book. He knew beyond a shadow of a doubt that he had done the right thing in going to Kenji for help. He knew that Joel didn't want to help him and he understood. He along with Andrew and a few others had tormented the quiet med student for no other reason than because they could.\n\nAnd now he wanted their help.\n\nHe stared at the textbook not really seeing the words as he thought about Andrew's thinly veiled threat. He kicked himself for allowing himself to get involved with Andrew. He tried to think of anything that he could take to the police, but came up blank.\n\nThe question then became was he willing to draw more attention to himself by being seen with Kenji and Joel. If he failed the class... but if he met with Kenji...\n\nHis mind reeled with indecision. No matter which choice he made, his future was shot to hell; one choice could end his future permanently.\n\nErnie slammed the book shut in frustration. By the time he had eaten dinner and got ready for bed, he had decided. It was the pride on the faces of his parents' that made the decision for him. They had worked hard to pay for his education and he couldn't disappoint them. He knew if he told them about Andrew's threat, they would make him stay home, but it was time for him to grow up.\n\nHe went to bed, but couldn't sleep for thinking of Andrew's threat.\n\n*******\n\n\"Let's see that gun.\" Peter said.\n\n\"It's nothing special.\" Andrew replied.\n\n\"Come on son, show the man the gun.\" Harlan said.\n\nHe was becoming curious about Andrew's reticence. The sick feeling in his stomach that he had before dinner was back.\n\nAndrew picked the box up, looked at it and took the lid off. Slowly he took the gun out not noticing that Peter was ready to move.\n\nPeter looked at the gun and frowned.\n\n\"Where's the clip?\"\n\n\"It didn't have one.\" Harlan said before Andrew could answer.\n\nAndrew's eyes snapped over to his father.\n\n\"I just wanted to bring Andrew a souvenir. It didn't matter whether it had the clip or not.\"\n\nHarlan was lying and Peter knew it. He had been surprised by the missing clip. Peter saw it in the way his eyebrows went up. He was about to ask where the clip was and he stopped himself. Andrew was surprised too. He hadn't expected his father to lie for him.\n\n\"May I look at it?\" Peter asked.\n\n\"Sure!\" Andrew said his confidence back. He handed the gun to Peter in a way that told him that Andrew had lied about firing a gun.\n\n\"You sure you never handled a gun before?\" Peter asked as he took the gun.\n\n\"Dad taught me.\" Andrew replied looking at Harlan.\n\nPeter turned the gun over in his hands looking for signs that it had been fired. If there were any signs, they were gone. The gun was immaculate. He wondered why Andrew had kept the gun. It would have been fairly easy to dispose of.\n\nBut where was the clip?\n\n\"Nice weapon, do you mind if I go out for a smoke?\" Peter asked.\n\n\"Sure, but you don't have to go outside.\" Harlan said. \"I smoke in the house all the time.\"\n\n\"Thank you, but my mother never allowed anyone to smoke in her home. Old habits die hard.\" Peter replied. \"Give me a minute or two and we can study a bit more if you want.\" He said to Andrew.\n\n\"Sure... I'll be right here.\" Andrew replied.\n\nAs soon as Peter was gone, Harlan turned to Andrew.\n\n\"Where's the clip?\" he asked.\n\nAndrew looked at Harlan with chilly blue eyes.\n\n\"It's like you said, there was no clip.\"\n\n\"Andy, what did you do?\" Harlan whispered.\n\n*******\n\nPeter opened the front door, closed it and crept to the entrance of the living room. He couldn't believe his luck when he heard Harlan ask Andrew where the clip was and then \"Andy, what did you do?\"\n\nHe had all that he needed. He slipped out the front door, stood on the porch and lit a cigarette. He took three quick puffs and put it out. They had the son of a bitch.\"\n\n******\n\nTrevor sat up when he saw Peter walk out and light the cigarette.\n\n\"He's got something.\" He said to Charles.\n\n\"Give him a minute and then we'll go in.\" Charles replied. \"We'll call Briscoe when we get Kelly downtown.\"\n\n*******\n\nPeter unclipped his ankle revolver and walked back into the house. Remarkably, Andrew was sitting exactly where he was when Peter went out to smoke. He looked around for Andrew's bag and saw that it was where he'd left it.\n\nSomething was wrong, he could feel it; but nothing looked amiss.\n\nSomething...\n\nSomething...\n\nBy the time he realized what it was, he felt a sharp pain in his left shoulder. Peter dropped and rolled before Andrew could get another shot off. He took his ankle revolver out using his uninjured side as he peeked around the couch. Harlan was gone and he could hear Eleanor screaming in the kitchen, but there was no sign of Andrew.\n\n*********\n\nCharles and Trevor were on their way to the house when they heard the gunshot. They took off at a dead run only stopping when they got to the door.\n\n\"Pete!\" Trevor called in.\n\n\"I'm hit! I don't know where Andrew is.\" He called back.\n\nTrevor went in first, gun pulled.\n\n\"Where are his folks?\"\n\n\"In the kitchen.\" Peter replied. \"His bag is over on the other side of the room. Check it for a weapon. If it's empty, then he's armed. I think he went out the back but I can't be sure.\"\n\n\"I'll check upstairs.\" Charles said. \"Trevor, you check the kitchen.\"\n\n\"Help me up.\" Peter said. \"I'm not hurt that bad.\"\n\n\"Stay put.\" Charles said. \"There's a squad car out back. If he went that way, they'll catch him.\n\nIn the background they could hear Andrew's mother crying and demanding to know what was happening. Peter felt bad for them; they were nice people with a murderer for a son. He would do what he could for Harlan. He did what any parent for do; he lied for his child.\n\n*********\n\nAndrew hid in the small storage area just off the kitchen his heart hammering. He clutched the gun from his bag against his chest and tried to figure out what to do. If caught, he was going to prison for killing Milt and he just shot someone else although he hadn't meant to. If Peter was dead, he would probably get the death sentence. That and the knowledge that he had hurt his parents were the only things that affected him.\n\nAs he sat in the cramped area, Andrew realized that on some level that his father knew that he killed Milt. His mother, he wasn't so sure about, but his father had known and hadn't asked questions. When he finally asked, it was too late.\n\nBelatedly Andrew realized his mistake. He shouldn't have invited Peter to the house. It was an impulsive move and one that would cost him. He wondered if the police had arrived yet. Surely someone would have reported the gunshot.\n\nHis father told him to hide but to leave the gun.\n\n\"Peter don't know who pulled the trigger, I'll say it was me; that it was an accident. We'll figure the rest out later.\"\n\nBut Andrew had refused to leave the gun. Now he realized that his father had been right. He should have left the gun behind. There was one thing he could do he realized. He could take a gamble and turn himself in. His father wouldn't say anything about Milt and would stick to his story about the missing clip. The new gun could be explained away by saying what he told the previous owner, it was a gift for his father.\n\nHe would also stick to his story about not liking guns and that he didn't know that it was loaded. He might have to go to the police station, but he'd be home by morning.\n\nAndrew took a deep breath, put the safety on the gun and removed the ammunition. Slowly he opened the door of the storage closet and called out just in case the police were there.\n\n\"I'm coming out! Please don't shoot me!\"\n\nHe could hear his mother's panicked voice and then Peter's voice. The voices immediately silenced as he called out.\n\n******\n\n\"Where is your son?\" Charles asked.\n\n\"What do you want?\" Eleanor asked. \"Why are you here?\"\n\n\"Ma'am.\" Trevor said politely, \"We're federal agents, now where did your son go?\"\n\nEleanor looked at Harlan who looked away.\n\n\"Harlan.\" Peter said. \"You aren't helping him. \"\n\nBy this time several more squad cars had arrived and the police were searching the house and the surrounding neighborhood.\n\nEverything stopped when they heard Andrew call out. He came into the kitchen with a tear streaked face. His hands shook as he handed the gun to Trevor.\n\nThen he froze...\n\n\"What are you doing here?\" he asked.\n\n\"I work for the federal government.\" Trevor replied.\n\nUnderstanding dawned on Andrew. He turned to Peter, the look of one betrayed was in his eyes as he spoke.\n\n\"You too?\" he asked.\n\n\"I'm agent Peter Frain. We were placed in the class to protect Kenjiro Takeda.\"\n\n\"You'd protect a Jap?\" Andrew asked incredulous.\n\n\"Son be quiet.\" Harlan advised. \"Don't say anything.\"\n\nAndrew looked at his father and closed his mouth.\n\nBriscoe walked into the kitchen to tell Charles that they hadn't found Andrew. He stopped short when he saw Andrew in the kitchen with them.\n\n\"Where'd you find him?\" He asked.\n\n\"He came to us and he's all yours.\" Charles replied.\n\n\"You'll find a gun with a missing clip in the living room...\" Peter started to say.\n\n\"I told you that it didn't have a clip!\" Andrew shouted.\n\n\"You lied and so did your father.\" Peter replied. \"I heard him ask you where the clip was and what you did.\"\n\n\"Turn around and put your hands behind your back.\" Briscoe said. \"You're under arrest for the murder of Milton Vaughn.\"\n\n\"Andrew? What are they talking about?\" his mother asked frantically.\n\nAndrew didn't answer as he complied with Briscoe's command.\n\nHe was led away with the sound of his mother's sobs ringing in his ears.\n\n********\n\nThe lightened atmosphere from planning the party was wearing off. It was almost eight pm and no one knew what was happening.\n\n\"You aren't going to school tomorrow... are you?\" Patricia asked.\n\n\"No Kirei.\" Kenji replied. \"I gave you my word and as I said, there is too great a chance that someone else will get hurt.\"\n\n\"What if they weren't able to find anything?\" she asked.\n\n\"We will deal with it.\" Kenji replied.\n\nIn an attempt to make her relax, Kenji suggested that she take a bath.\n\n\"I will care for the children while you try to relax. If Nick calls, I'll come for you.\"\n\nReluctantly, Patricia agreed.\n\nAs she prepared for her bath, she prayed that it would be over. She missed her house and she missed going to class. She was ready for their lives to go back to some semblance of normalcy.\n\nShe got into the tub and slid down so that the hot water covered her shoulders. The hot water relaxed her tense muscles and before she knew it, she had fallen asleep.\n\n**********\n\nKenji was listening to Ralph read to Marie when the phone rang.\n\n\"Kenjiro! Come! It's Nick!\" Hiroshi called out excitedly.\n\nPenny and Joel rushed to the kitchen where Kenji was putting the phone to his ear. They held hands as they listened to Kenji's end of the conversation.\n\n\"Yes Nick... I understand... Peter is alright? Yes...I will tell them. Thank you.\"\n\nKenji hung up and turned to face three anxious faces.\n\n\"It is over. Andrew Kelly is in custody.\"\n\n\"What about Peter?\" Penny asked.\n\n\"He received a bullet wound to the shoulder, but he will be fine. If you will excuse me, I must tell Patricia. Father, could you watch the children for a few moments?\"\n\n\"Is it really over?\" Joel asked.\n\n\"They still have to prove that Andrew killed Milton, but for now; it is over.\"\n\n\"Then the picnic on Saturday becomes a celebration.\" Hiroshi said smiling.\n\n\"Yes, that is true.\" Kenji agreed.\n\nWhen Kenji left to go to Patricia and Penny and Joel went to talk, Hiroshi looked at his grandchildren.\n\nHe looked at Ralph as he sat with his arm around his sister and read to her. Hiroshi knew that Ralph would grow up to be an extraordinary man. He reminded him of Kenji at that age, so curious and such a gentle spirit.\n\nIn fact, Hiroshi had worried for him. The world was a harsh place for those so gentle. He saw that his worry had been for naught. Kenji was a strong man as would his son be when he grew up. He looked at Marie. She was a beautiful little girl who would grow up to be a beautiful woman. Hiroshi watched as she smiled when Ralph changed his voice to give the characters in the story life.\n\nShe would be an extraordinary woman, but not before she was a source of pain and heartbreak for her parents. Hiroshi knew this just as he had known that it was time to leave Japan in 1933. He knew this just as he knew that Adolf Hitler was trouble; he just knew.\n\nAs if she knew that she was being thought about, Marie looked up at her grandfather and smiled.\n\n*******\n\n\"Kirei.\" Kenji called softly. \"Wake up.\"\n\nPatricia slowly opened her eyes to see Kenji sitting on the side of the tub. She sat up and began to fire questions at him.\n\n\"What's wrong? Did they get him? Is Peter alright?\"\n\n\"Yes Kirei, it is over.\" Kenji replied. \"Andrew Kelly is in custody. Peter has a gunshot wound to his shoulder but he will recover.\"\n\nPatricia stared at him wondering if she was dreaming.\n\n\"Are you sure?\" she asked.\n\n\"I spoke with Nick.\" Kenji replied. \"Kirei, it's over. We can go home.\"\n\nPatricia allowed the news to sink in and when it did, she reached for Kenji and pulled him into the tub with her sending water splashing everywhere. Tears of relief and happiness ran down her face as she clung to him.\n\nIt was finally over.\n\n********\n\nAndrew paced the cell at the police station thinking about his future. He had none. Medical school was over even if it couldn't be proven that he killed Milt. But they would. It was only a matter of time.\n\nRage built over Peter's betrayal even as he realized that in the end it was his fault. He had allowed himself to be taken in by Peter's military background and his apparent dislike of the Japanese. One by one, his errors in judgment came back to him.\n\nThe first major error was not killing Kenji while the anti-Japanese sentiment was still high. The second was killing Milt without really planning it out and the third thing was keeping the gun. In retrospect, he could have gotten rid of the gun and no one would have known about it. He had invited trouble by bringing Peter home and expecting the subject of weapons not to come up.\n\nThis was his fault he finally admitted to himself. He had been too impulsive and too trusting. That admission did nothing to diminish his anger and hatred at Kenji. In his mind, that was where the problem began. What he didn't admit was that, if it weren't Kenji; it would have been someone else.\n\nAndrew weighed his options. He had already heard the term death sentence mentioned in relationship to him. He had to decide if he wanted to live or die. If he chose life, it would be a life in prison, but maybe he would eventually get out. Death was final.\n\n*********\n\nHarlan Kelly kissed his wife goodbye and told her not to worry.\n\n\"Where are you going?\" she asked still in shock over the events of the evening.\n\n\"I'm going to help Andrew.\" He replied as he hugged her.\n\nA few minutes later, he was waiting for a cab to take him to the police station. This was his fault. He had known ever since he came back that there was something wrong with Andrew and he had done nothing.\n\nIn his mind, had he said something, his son wouldn't be sitting in prison facing a murder charge. If he hadn't used all of those derogatory terms... if he hadn't.... if he had only said or done this. In his mind, the ultimate guilt belonged to him and him alone.\n\nThe cab pulled up to the station and asked Harlan if he wanted him to wait.\n\n\"No, I won't be coming out.\" He said softly as he paid the fare.\n\nThe cabbie gave him a curious look, shrugged and took the money.\n\n\"Sure you don't want me to wait?\" The cabbie asked. It was a slow night and he wanted the fare.\n\n\"No thanks.\" Harlan replied and hobbled away on his crutches.\n\nHe went to the desk and waited for the officer to notice him.\n\n\"Help you?\" The officer asked gruffly.\n\n\"Yes... I would like to confess to the murder of Milton Vaughn.\"\n\n**************\n\nBy March of 1948, Warner Brothers shows the first color newsreel; the Tournament of Roses and the Rose Bowl. Mahatma Gandhi begins his fast-unto-death- he is assassinated on January 30, 1948. The Winter Olympics open in St. Moritz, Switzerland.\n\nThe Soviet Union begins to jam the Voice of America broadcasts. NASCAR is founded by Bill France Sr. and William France, Sr.\n\nThe Supreme Court rules that religious instruction in public school is a violation of the U.S. Constitution.\n\n*****************\n\nCivil Rights\n\nPresident Harry Truman submits a civil rights plan to Congress.\n\nMartin Luther king receives a BA in sociology from Morehouse College and enters Crozer Theological Seminary and is ordained to the Baptist ministry; he is nineteen years old at the time.\n\n********************\n\nThank --you all for continuing to follow the lives of Kenji and Patricia! Also my thanks to my beta reader Donalde for all of his help."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "racism",
        "japanese",
        "black woman",
        "post wwii",
        "drama",
        "asian man",
        "japanese man"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-12"
}