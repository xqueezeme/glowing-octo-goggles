{
    "title": "One Tequila, Two Tequila, More....",
    "pages": [
        "Again, this story is based in my bar in the U.K. and as such has British slang and phrases. Thanks for the editorial advice to Kenji Sato and Des67, who have both been extremely helpful and supportive.\n\nYou don't have to read part one, but this story follows on from an initial interaction between the characters.\n\n*\n\nIt was Thursday again, and the bar was busy with groups of students and the usual older lonely guys, in to stop them from staring at the same four walls all night, and, of course, enjoy the view as Nicki, Terri and Becky worked tirelessly to keep the drinks flowing and the tills ringing. The girls all excelled at putting a smile on the guys' faces, flirty, chatty, and attentive enough while not leading them on too far. Their tip jars were bulging with earnings, and they were far from the only items bulging all around the bar.\n\nI, myself, was already totally wound up, as Terri had taken it upon herself to flash me several times throughout the evening, pulling up the back of her skirt to present me with a knickerless ass sporting a bejeweled butt plug above her perfectly smooth cunt lips.\n\nAs last orders finished, I buzzed about encouraging the students to drink up quickly, clearing tables, chasing the unenthusiastic barflies to drain their beers, and head on out to the fresh air. Terri laughed all the time, exclaiming it was the most work I'd done in months, Nicki looked on quietly and poor Becky didn't have a clue what was going on.\n\nSoon we had a round of beers on the go and four stools at the bar. Becky appeared to want to chat more than usual, she normally left pretty quickly, going home to her man and two young kids, so I listened half-heartedly as she regaled some shitty story about something from the kids' school.\n\nShe was a cute girl, Becky, and my thoughts turned to whether I could get her involved in our fun and games. She was short, less than five foot, and curvy, not in the same way as Nicki, but definitely all Boobs and Bum, and had an air of filth about her occasionally. You might see a pattern arising in my choice of the staff here, but then that's why the bar was so popular after all.\n\nAs she babbled on, Terri and Nicki headed outside for some air and a smoke, and I sat there thinking about whether she'd let me titfuck her, then spunk all over her face - what can I say, I was in a state of arousal, horny as fuck, that's what happens in men's heads.\n\nShe finished her beer though and gathered her stuff, saying a cheerful goodbye to the other girls as they passed each other as she left and they came back in.\n\nTerri went behind the bar and set up a bottle of Patron with three glasses and a plate of lime wedges. Then she went under the bar and planted a big bottle of lube right alongside them.\n\n\"Right then guys,\" she said, \"how about we get this party started properly?\"\n\n\"Jesus, Terri,\" laughed Nicki \"you are totally unbelievable, and a complete tramp, give us a chance to relax a little.\"\n\n\"You won't be complaining when I make you cum with these!\" Terri said, ducking behind the bar again, to emerge with a big black rabbit style vibrator and a black butt plug, \"it's a vibrating one,\" she said turning it on so the plug bounced and buzzed around on the bar top.\n\n\"I'm not really into the bum stuff,\" Nicki said \"although, it did look hot as fuck when you were doing it last week, but I've tried a little before and never really enjoyed it,\" she continued.\n\n\"Not with me, or this guy.\" Terri cut her off \"I'll make sure you're absolutely ready for it and Andy was very professional last week!\" she laughed., \"A real anal pro, I think.\"\n\nNicki took a slug of Tequila \"Well, we'll see,\" she said, \"but right now I want to get a good look and taste of that big dick again, I've been thinking about sucking you all week Andy.\"\n\nI pulled Nicki towards me and kissed her passionately, squashing her massive tits against my chest and holding her tightly, I grabbed her big ass cheeks roughly, kneading them as I pushed my tongue into her mouth, really enjoying her responsiveness and her scent.\n\nNicki reached for my belt and loosened my shorts pushing them down over my knees and around my feet, my cock was straining against my briefs waiting for release, and Nicki grabbed both sides pulling them down as she slid down my body.\n\nMy cock sprang to attention as Nicki's face got to its level and she reached to stroke it and licked the bottom of my shaft from my balls to my swollen mushroom head.\n\nI groaned as she took my glans into her mouth, sucking hard on my head and rubbing her tongue against my urethra her tongue piercing really sending shivers throughout my body.\n\nShe worked the shaft, slowly pumping it while engulfing my head, and was really getting me going, also working my balls with her left hand. I looked over to see Terri naked from the waist down using the rabbit against her cunt while watching us intently, and slowly working its tip between her wet lips leaving the ears to buzz against her clit. I knew I wasn't going to last long after all the sexual tension that had been building all night.\n\nNicki continued to administer a glorious blowjob, now trying to work more of my cock into her mouth, forcing it in till I could feel her throat flexing around my head delightfully squeezing my glans and coating me with her saliva.\n\nI could feel my balls begin to tighten and warned her \"You're going to make me come Nicki!\" which just made her increase her attention.\n\nI looked over again to see Terri furiously thrusting the big toy into her cunt, holding the clit stimulator against herself as her own orgasm spasmed through her. Squealing she pulled the toy from her and slapped at her clitoris as she squirted a little shower of droplets all over the bar top she was on.\n\nMy orgasm came hard, buckling my knees as I spurted rope after rope of hot spunk into Nicki's welcoming mouth, she tried her best to swallow the whole load, but there was just too much. Her little coughed gag delightfully drew the last of my load as her mouth contracted tightly around my head.\n\nAs my body and mind came back into focus, I pulled Nicki up to kiss her again, getting a slight taste of my fluids from her lips, and hugged her tightly, \"That was THE best head I have ever had,\" I said \"Now let's see if Terri and I can return the favour to you, and I just have to get you out of those clothes so we can enjoy your full glory\"\n\nI pulled her shirt hem upwards over her stomach as she raised her arms above her head allowing me to remove it and revealing a very sexy, lacy one-piece number with built-in support for her glorious tits, pushing them up just a little to present them beautifully. I then reached to remove her pants, finding the zipper at her side I turned her around as I pulled them down to reveal her fabulous ass cheeks separated by just the tiniest strip of her lacy body running between them.\n\nI bent her over as I worked her pants over her calves, kneeling behind her to help her step out of her shoes and taking one leg out of her pants, then the other before giving in to my lust and burying my head between her ass cheeks inhaling her scent.\n\nI rubbed the rough fabric of her body against her cunt using my chin and mouth to exert pressure on her lips, but really it was so I could press my nostrils right up against her rosebud and inhale through them, savoring that musky glorious hole. My cock was twitching already as above her hole I saw the two pop fasteners that held the body in place, I moved up and popped them with my teeth releasing the pressure and the body sprung away from her body both sides revealing her cunt and ass.\n\nI licked between her cunt lips, savouring her sweet tasting juices, and ran the tip of my tongue all over her clit, flicking at it gently and causing her to moan out loud, all the time enjoying the position of my nose so close to her anus without actually being apparent to her.\n\nI gave her a few more laps and strokes of my tongue before raising myself, one last lash of my tongue \"innocently\" slipping up and across her asshole as I moved back and away from her.\n\nI lifted her from the table and turned her around so I could remove her sexy lace body from her, finally releasing those massive tits with their big brown areolas, and those cigar stub nipples standing proud and aroused already.\n\nI bent my head to take her right nipple into my mouth sucking on it hard and massaging her large breast with my hand. As her nipple hardened further, and she moaned, I moved to give the same attention to her other breast enjoying her response and the feel of her bumpy areola on my lips as my tongue wrapped around her nipple and I sucked on her.\n\nShe held my head against her, insisting I continue to suckle her as I wrapped my arms around her holding her tight as my hands grasped at her beautiful bubble ass cheeks, kneading and mauling them, pulling them apart and letting them slap back together. I moved my hand to slide my fingers to her wet cunt, feeling her dampness and pushing two fingers into her to work her g-spot, my thumb rubbing against her swollen clit, she shuddered and ground herself against my fingers holding me tight against her breast insisting I continue to pay it my full attention.\n\nAn almost forgotten Terri had stripped naked and moved behind Nicki to caress and fondle her and watch our action. She nibbled at the nape of Nicki's neck and was playing with her free breast from behind, and I felt her finger enter Nicki's cunt alongside mine as I finger-fucked her. Her slim finger worked on the back wall of Nicki as my own worked on the front of her soaking pussy and Nicki's hand moved to her clit to add more pressure than I could with my thumb.\n\nAs Nicki's moans and gyrations got stronger and her orgasm was obviously starting to build, and I felt Terri's finger slip from its position as Nicki really started to come only to feel it again, but this time through the wall of her vagina as Terri probed Nicki's sweet asshole as she came. Thrusting hard against my fingers, her head thrown back in ecstasy, her eyes rolling back in her head Nicki shuddered and groaned, tensed and slumped, and soaked my hand still pumping her cunt as Terri stretched her tightest little spot.\n\nI finally let her nipple slip from my mouth and held her close as the waves of her orgasm subsided, removing my fingers from her sodden cunt as Terri slipped her finger out of her bum, winking at me, before popping it in her mouth to suck on sexily.\n\n\"That was so fucking hot,\" Terri said, \"and I think it's time for me to feel that cock inside me again, come and get me, big boy!\"\n\nShe sat back on a table spreading her legs wide and rubbing her slick cunt lips wide with her fingers, the jewelled butt plug sparkling below them against the wooden surface.\n\nI moved to her and reached for the plug beginning to tug on it to take it out, \"No,\" Terri shook her head, \"leave it there, and force that big dick right up my fucking pussy,\n\n\"I want to be totally stuffed full.\" She was fingering herself as she spoke, opening her cunt for my cock.\n\nDespite my own recent orgasm, this sexy scene had me standing at full attention and I leaned to her positioning the thick bell of my prick at her hole, rubbing it up and down her slit, before pushing forward to enter her.\n\nHer cunt felt impossibly tight as I pushed the head in, feeling the hard metal bulb of the plug bulging inside her ass, and she grunted as I added more pressure to enter further. As my cockhead pushed past the length of the plug stretching her pussy more the pressure around it lessened though remained pressing hard on the underside of my shaft, the feeling was delectable as I slowly humped into her.\n\n\"Fuck yes,\" she grunted, \"stretch me out you big-cocked fucker, my pussy hasn't felt so good for ages, fucking give me more you bastard.\"\n\nI pushed the last couple of inches of my shaft into her feeling the resistance of her pussy, until my crotch was pressed against hers and my balls were touching the stopper of her butt plug.\n\nI ground my hips against her, generating a horny hiss and \"Oomph\" from her as I bottomed out in her cunt.\n\n\"Jesus, that's good,\" she moaned, \"give me a second to get used to it, it's right in there\"\n\nNicki was beside us, watching as she recovered and having a slug of a beer, before she leant in to hornily kiss Terri, reaching to pinch at her pink nipples and twisting at them.\n\nI began to fuck Terri slowly, standing above her, watching the girls play, as I pushed my cock into her again and again, the plug pushing its angle to produce maximum contact with her g-spot and upper vaginal wall. She was groaning, gasping, and panting with each thrust as her left hand gently rubbed at her clit above my shaft.\n\n\"Nicki, you dirty bitch, I want you to sit on my face, rub that pussy on my face and mouth, while I take this prick. Smother me with your cunt, I want to be in it as he fucks me.\" Terri insisted, her head just off the opposite edge of the table to me.\n\nNicki was tentative at first, facing away from us she lowered her pussy and ass, gently placing her cunt down as Terri tongued at her noisily, lifting herself so Terri had to stretch a little to reach her.\n\n\"No, no.\" Terri groaned \"Fucking sit on me, smother me, I'll smack your ass if I really need out. I want to be starved of breath while I fucking take this dick!\"\n\nWhat an amazing view this was, I couldn't believe the luck I was having with these two sexy sirens.\n\nMy cock banging a perfect pink-shaven pussy, its lips sucking around my shaft as its owner strummed her clit above it, the butt plug in her ass making her cunt super tight around me. Her beautiful tits rocking up and down with the speed of my thrusts, while her face was buried in the pussy of a curvy brunette goddess whose tight brown taint was almost winking at me as she ground that cunt into the dirty blonde's mouth. I could see Terri's tongue probing into Nicki's cunt, lashing around its lips and clit, as her neck and chest reddened as she ran out of air.\n\nShe smacked on Nicki's ass cheek with her free hand and Nicki lifted off her leaving her gasping for air and shaking.\n\n\"Again,\" she said, \"quickly, I'm about to explode!\" And Nicki sat right back down on her, moaning at the attention her cunt was getting.\n\nI started to really pump harder into Terri, as her hand worked furiously now on her own clit, I could feel her cunt walls even tighter around my cock as she began to convulse, her crotch pumping up and freezing against me my full length inside of her. I could hear her muffled screams as Nicki continued to rub her own cunt all over Terri's face as Terri reached and pulled her thighs tight to her, suffocating herself with her thick cunt.\n\nI was ready to come myself, but I knew what I really wanted tonight, and I still had hopes that Nicki's brown taint would end the evening wrapped around my cock, so I tried to withdraw from Terri's sumptuous cunt carefully.\n\nUnfortunately, as I pulled my head past the bulge of the plug the intensity of what we were doing just overcame me and as my head exited Terri I couldn't hold back and began to spunk ridiculous amounts of come over her belly and tits, I fisted my cock quickly and sprayed it over her 'til my climax was finished.\n\n\"Fuck me,\" I sighed \"that definitely wasn't what I had in mind girls, I am so sorry.\"\n\nNicki had let Terri out for breath, and she giggled as she bent down to lick a blob of my come from Terri's right tit. \"Well let's not waste it anyway,\" she laughed.\n\nTerri agreed, reaching down to scoop a blob from her belly to lick from her fingers. \"Hmmm, so nice and salty!\" she murmured.\n\nWe all were a bit dazed and weary from our exertions, so we took a few seconds to really come to terms with what had just happened.\n\n\"You going to need a little time, Stud?\" Nicki asked, seeing my heavy breathing, and overexertion obvious in my slumped posture.\n\n\"Maybe, but I'm not finished yet, gorgeous.\" I replied, \"I have got more in the tank for you girls.\"\n\nTerri was up and behind the bar, replacing our spent beers, but this time with bottled waters\n\n\"No more alcohol, time to hydrate, and rebuild our stamina,\" she laughed, taking a long slug of her neck stretched upwards, then deliberately spilling some of the ice-cold liquid over her chin to run across her lightly tanned chest and tits.\n\nWe drank the refreshments, and Nicki looked at me smiling, then the black butt plug on the bar, and finally, Terri, whose own plug was still snugly trapped within her ass.\n\n\"How does it feel?\" She asked. \"Doesn't it hurt? And what does it do when he's fucking you?\"\n\n\"It takes a little getting used to at first, babes,\" Terri replied, \"but you get a wonderful feeling of fullness, once you are comfortable, and the intensity of the extra pressure on the walls of your cunt when that monster thrusts into you is, well, it's indescribable.....\"\n\n\"Why don't we have a little play together, nice and slow and gentle, while Andy recovers? Just us girls enjoying each other.\" she continued.\n\nNicki nodded silently and Terri went to her, opening her arms for a hug, I watched as the two beauties caressed and kissed each other, enjoying each other's curves and bodies. Terri was less intense in her actions than she usually was, far more tender, as she learned to suck on Nicki's big brown nipple, gently squeezing her other breast and pinching its bud. Her hands continued to stroke around Nicki, over her arms, her stomach, and then her thighs, as Terri dropped to her knees to inhale the musk of Nicki's cunt and place a few fleeting licks on her labia and clit.\n\nAs Nicki moaned her approval, Terri asked \"Why don't you turn around there honey, and just bend over the barstool so I can reach your peachy cunt from behind?\"\n\nNicki did as requested, as Terri quickly gathered what she needed from the bar top to place on the floor beside her as she knelt on her knees behind Nicki.\n\nThat glorious tanned bubble butt looked perfect spread over the stool, Nicki's engorged pussy lips perfectly presented between her thick thighs as Terri took the bottle of lube and poured some on her hands, rubbing them to warm it up before coating Nicki's cheeks with lots of it, massaging them and rubbing around without any movement towards her eventual prize. She spent minutes continually caressing Nicki and stretching her bum, giving us both tantalizing glimpses of Nicki's wrinkled brown rosebud, before squeezing her cheeks back together, lifting and kneading them as Nicki moaned her enjoyment.\n\nThen while continuing her massage, she pushed her face into the equation by placing her mouth on Nicki's pussy lips and sucking on them, then slathering her tongue between them, and up to work on the engorged clit prominent above them. All the time staying away from the little asshole, so perfect and desirable.\n\nTaking a second break from her efforts Terri turned to me and said \"Andy, my hands are kind of full, could you help me out hun? My pussy is aching and could do with a little attention of its own, if you don't mind?\"\n\nAlways ready to be a knight in shining armour, I happily sat on the floor at Terri's side and gently began to toy with her puffy cunt lips stroking them and occasionally probing her hole, as she went back to eating Nicki's pussy.\n\nShe continued to massage Nicki's butt as she had before, but now as she did, every so often she slid a thumb briefly across its rosebud or just to circle its rim a little before moving on, drawing a little extra moan from the horny brunette.\n\nI watched on intently, stroking Terri, and I brushed against the metal plug still in her own ass. Gripping it, I began to tug, drawing a yelp from her, as it stretched her asshole unexpectedly, I pulled until the point I felt it would release, but then quickly pushed it back into her butt roughly, making Terri gasp loudly.",
        "\"Oh, you dirty bastard, that's so fucking naughty, keeping doing that exactly!\"\n\nAs I continued, Terri gave her attention back to her own actions with Nicki, she got more lube and rubbed it all over Nicki's ass and pussy, making them shiny and slippery and brought the rabbit up to rub against Nicki's clit.\n\n\"Hun, can you help me out now please, and just hold your cheeks apart a little for me,\" she asked, and Nicki obliged.\n\nAs the vibrator stimulated Nicki's pussy lips and clit, Terri took a long lap at her asshole, sliding her tongue all over and around it, occasionally with her tongue wide, then more pointedly focusing the tip on and around the rosebud, soliciting a dirty, deep moan from Nicki.\n\nTerri worked the rabbit into the tightness of Nicki's cunt, continuing her flicking, licking, and probing work with her tongue at her butt, and began to use it in earnest, gently fucking Nicki while its ears worked around her clit.\n\nNicki's body responded with tremors of pleasure, as the sensations took her towards her climax, and I could feel Terri's own cunt tighten to clench around my fingers as I slowly pumped them and worked her g-spot.\n\n\"Fuck, fuck, fuck!\" Terri moaned as I again tugged at her plug \"Nicki, baby hold the vibro in yourself, baby, time for your real treat.\"\n\nAs Nicki took hold of the rabbit herself and continued pumping her cunt slowly, Terri grabbed the black butt plug she had ready and slathered it in lube turning the vibration on and pressing its tip at the tight, glistening centre of Nicki's delectable asshole.\n\nShe took back control of the rabbit vibrator as well, and Nicki once again reached back to pull her bum cheeks wider, giving me an even better view of the show, as well as opening herself more for Terri.\n\nRhythmically, Terri worked with both the toys together probing at Nicki's holes as her legs began to visibly tremor vigorously, Nicki's moans became louder and louder as the butt plug stretched her ass getting closer and closer to entering her fully, and then she began to explode. Terri pulled the rabbit hard from her cunt while forcing the plug deep into her sphincter.\n\nNicki's spasming cunt squirted her juices all over the bar floor as Terri strummed her clit frantically, the vibrating butt plug now wedged in Nicki's ass. Wave after wave of strong orgasms rocked through Nicki as Terri stuck her face in the brunette's pussy, licking and sucking on her, as I finger-fucked Terri's pussy and played with the toy in her own ass.\n\nAnd as I tugged on it stretching Terri's asshole, she came herself, screaming her delight as I pumped her pussy and pulled the plug out of her altogether leaving her ass to slowly close upon itself, she gripped Nicki's thighs to hold herself up as her orgasm struck through her like lightning.\n\nMy cock had regained his vigour during this filthy display and was once more stood to attention and ready for action, and I was intent on getting him into Nicki. I lifted myself up from the floor, as Terri moved out of my way, sensing exactly what I was up to, and moved in behind Nicki still bent over the bar, her huge tits pressed against its surface, and aimed my cock at the entrance to her glorious pussy.\n\nLining myself up I attempted to enter her feeling the vibrations of the butt plug throbbing through her, she gasped and held me off as I began.\n\n\"Too much, Too much,\" she said, \"I can't take all that, there's no room for that down there!\"\n\nI eased back and reached down to her cunt, pushing a couple of fingers into her soaking hole. It was indeed an extremely tight fit with the plug buzzing away in her ass, but I slid them in and out of her loosening her up a little more. I caressed her back and nuzzled the nape of her neck, as I stretched her a little further with one more finger, before removing them and repositioning my swollen glans at her entrance, and slowly pushing into her.\n\nNicki let out a deep guttural moan as my length entered her, the sensations strong for both of us as the heavy vibrations of the plug stimulated her vaginal and anal walls, and all along the top of my cock as it penetrated further.\n\nI steadied myself and reached to wrap my arms around her and to fondle her magnificent breasts, pulling on her swollen, puffy nipples as I got the majority of my cock inside her.\n\nShe stretched her head back and we engaged in a passionate kiss, as I began to slowly fuck her, feeling every inch of her cunt wrapped tight around me.\n\n\"Oh my god, Andy, I've never felt anything like it,\" she groaned \"I fucking love your cock, I fucking love this, I've never felt so many sensations, just fuck me slow and hard baby, let me feel all that big cock in me.\"\n\nI was in heaven, this beautiful goddess of a woman impaled on my cock, holding her fabulous breasts in my hands, her begging me for more, and as I enjoyed her carnally, I knew there was something more about this girl for me, but that would have to wait though. Now I had to satisfy our sexual needs once more.\n\nI slid one hand down to her clit bending her back over and lengthened my strokes into her, the vibrations almost numbing the feelings I was having, it was time for it to come out.\n\n\"Terri, I need your help, come and gently take this thing out of Nicki's ass while I fuck her,\" I asked, \"I just can't stop this her cunt feels too good.\"\n\nI had to move back a little so I could only grab Nicki by her hips to give Terri room to work, but Terri knew what was needed and used one hand to stroke the brunette's swollen clit as she took hold of the base of the plug. She slowly started to pull on it gently, moving it backward and forwards, slightly stretching Nicki's sphincter as it pulled against it from the inside.\n\n\"Shit, oh God, oh Fuck!\" Nicki gasped, as the toy tugged at her ass \"Ow, gentle, gentle please,\" she hissed, \"careful, it's so tight!\"\n\nTerri left the plug inside her and grabbed the lube squirting more all over Nicki's ass and my cock below as it slid into that beautiful, tight pussy once more, and then took hold again as I pulled back a little.\n\nShe continued to stimulate Nicki's clit and as I pushed into her, she pushed on the plug and as I pulled out, she did the same.\n\nThe sensations were incredible on my cock, and Nicki's groans were building and her breathing getting quicker once more. I knew now her ass would have to wait for another day, I was absolutely set on coming in her fantastic cunt once more, and I could feel the beginnings in my balls, as I gave a little more each time and a little quicker.\n\nTerri was working the toy at the same pace, and it was a marvellous sight to see, as Nicki's sphincter was pulled a little wider each time around it as we withdrew. The tight muscle was swollen and stretched, and then gripping the toy again as we pushed back into her. And then it happened, Nicki's orgasm hit hard as we pulled back from her and Terri pulled, the plug popping from Nicki's ass, and for a fraction of a second I had the view of her hole open and gaped, but closing up again quickly.\n\nI couldn't stop myself, I hammered in and out of Nicki harder than ever, as she screamed her delight and I ejaculated deep into her cunt, my balls aching at the release of the third load in such a short time, but the climax was mind-blowing, my vision darkened as I rode out Nicki's waves my glans feeling like it was on fire, and as she calmed, I had to withdraw myself quickly it was just so intense.\n\n\"Fuck, that was ridiculous,\" Terri said, \"so hot, Jesus, I've never seen anything like it. Fuck guys and your come is leaking out of her look!\"\n\nAnd with that, she knelt and took a long slurp of Nicki's cunt, 'til Nicki pushed her away laughing, \"Too sensitive you filthy bitch, haven't you had enough?\"\n\n\"Not sure I'll ever have enough,\" Terri said, \"but I guess that can be the end of tonight's festivities, ha ha, now who wants a beer before we straighten up?\"\n\nWe sat in a kind of stunned silence for quite a while, chugging a cold beer, and I looked again at Nicki in all her glory and knew I had a lot to think about. Ever since she'd arrived at the bar, I'd been distracted from my normal home life, and my affection for her had grown. I wondered if there was a future for us beyond the amazing group sex with the insatiable Terri, but that was for another time.\n\nWe cleared up the evidence of our debauchery as best we could, although the stench of our sex and our orgasms hung heavy in the air, and I suspected the cleaners would be suspicious when they arrived early in the morning. And I again wiped the last three hours from the security camera system.\n\nAgain I drove the girls home, making sure I headed to Terri's house first. She kissed us both and jumped out of the car saying \"Can't wait for next week, see you tomorrow at work Andy.\"\n\nWe drove in silence for a couple of minutes, but then I pulled into a quiet street and turned to Nicki, \"This is amazing Nic,\" I said, \"I'd never dreamed of the things we've done together in the last couple of weeks, and I love Terri and her filthy behaviour, but I think I want something more between you and me, something more intimate, what do you think?\"\n\nNicki sighed, \"You have a wife Andy, I'm not sure I can do that to another woman.\"\n\n\"I understand Nicki, listen, let's take a little time to think about it, but I want to meet you alone, just the two of us away from work.\n\nWe will take a day off Monday, and head out of town for the day together and let's just have a chat about what we both want.\"\n\nWith that I dropped her to her door, kissing her passionately as she left the car, I sat and watched her walking up to her pathway, marvelling at her beauty and that fantastic big booty as my cock stirred once more in my pants.\n\nTo be continued as \"Tequila sunshine lunch - Nicki\"\n\nThanks for reading."
    ],
    "authorname": "GypsyGirlsDom",
    "tags": [
        "anal",
        "threesome",
        "toys",
        "lesbian",
        "big tits",
        "big ass",
        "oral",
        "rimming",
        "mff",
        "consensual"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/one-tequila-two-tequila-more"
}