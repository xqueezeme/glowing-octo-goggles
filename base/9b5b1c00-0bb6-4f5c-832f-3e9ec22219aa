{
    "title": "Domestication",
    "pages": [
        "Thanks, as always, to my awesome team. My editors are PapaKilo14, Hale1, Olddave1951, Pixel the Cat and GeorgeAnderson. Harddaysknight is my mentor and gives me critical review. SBrooks103x also gives me a pre-post read. Thank you, gentlemen. Love you all.\n\nThis is an older story, not posted on Literotica. If you have read it, thank you, and you need not read, comment or vote. If not, I hope you enjoy.\n\n*****\n\nI knew I was going to have fun when I saw him. He was big, had quite a serious case of muscle trying to burst out of the polo shirt he was wearing and he had this explosion of curly brown hair going on. I don't think he was expecting me. Most people don't. I don't look like a security contractor, I suppose. I probably look more like someone that works at your local gym or school or office. Most people don't expect a security contractor to be female, for one thing, or attractive, for another.\n\nI'm tall and very strong for a woman. If you're a guy, and you don't work out very seriously, you're going to be surprised. That's the way I was raised. I've spent two hours a day with weights and cardio at least four days a week since I was fourteen. My father was a contractor when he adopted me. He gave that up to give us some stability and a home life but he kept in touch with his buddies from the bad old days. There were always strange men from exotic places with stories to tell, if you could get them to talk, dropping by our house for a week or a few days.\n\nThey were cold, stern men with strange eyes but when a little brown girl climbed up on their laps and wanted to hear a story, they melted like ice on the Fourth of July. I had a string of \"Uncles\" as long as my arm when I was little and they became \"big brothers\" as I grew up. They all kept in touch with Dad and, by extension, me, too.\n\nWhen I was fifteen, Dad took me to my first survival camp as a participant. I was the only girl there. It was tough and my two \"Uncles\" that were running the camp didn't give me a single break because I was their little \"niece.\" I did get to sleep by myself instead of in a dorm and they ate supper with me every night. I went from \"slow and weak\" to \"princess\" with my shower in the evening. I've attended at least three intensive training exercises a year since that first one. There are no weapons I don't know like the back of my hand and I'm very good at hand to hand, too.\n\nI went to high school at the same place Dad taught. I was just starting my senior year when he passed from a sudden massive heart attack. There were probably 200 men at his funeral who I had known since I was three or four. There was someone with me every minute I was awake for a month, and then I was in foster care. I'll tell you more about that later. When I graduated from college, John Davis nearly kidnapped me to go to work for him.\n\n\"Sully,\" he said, (My name is Sullivan Adams, and yes, I've heard all the comments about my name) you're the best operative I know. I know you don't need to work, but you don't want to be idle. You're smart and cute and no one will ever see you coming. I know you don't need to work, but Aaron (my father) wouldn't want you to just vegetate.\"\n\n\"I have no intention of vegetating,\" I told him. \"I plan to become professionally decadent. I'm going to jet around, dance, gamble, and seduce handsome men.\"\n\n\"Well, why don't you start with me?\" he grinned. \"Seriously though, Sully, I need you. I know you'd be good at seducing handsome men, but you'd get bored with the other in a week.\"\n\nWe had a few ground rules to go over. I wouldn't work for the government, the military or the police agencies. If he had private businesses that needed our services, I would do that. There are too many complications working for \"official\" agencies and they tend to target people that are guilty of doing nothing other than pissing them off. I went to work for him, and in three years, I was running my own operations all over the world. Like I said, this one was going to be fun. I walked up to Julian Blake and extended my hand. \"I'm Sullivan Adams,\" I said.\n\nHe looked shocked, but he made a quick recovery. \"I expected you to be... taller and ... more masculine.\" He grinned and his hand swallowed mine.\n\nI laughed. \"Well, yeah, most clients do. Fortunately, most of the bad guys do, too. Do you have a problem with me not being 'more masculine'?\"\n\n\"Maybe,\" he said. \"It has nothing to do with you being a woman, it has to do with whether you can do the job your company is being paid for.\"\n\n\"Well, I guess you'll find out, won't you,\" I said. \"But then, if the shit hits the fan and I can't handle it, one or both of us is likely to be dead, aren't we?\"\n\n\"I plan to live forever,\" he said.\n\n\"Yeah, that's my plan, too,\" I said. \"So far, it's been working out. I'll tell you what, Blake: you look like a big, strong guy. You want to go out to the parking lot and take a shot at me?\"\n\nHe looked me over. It was a little embarrassing. \"I think you could take me on the dance floor or in a foot race, or maybe climbing,\" he said. \"But yeah, I'll take that shot in the parking lot.\"\n\nI hadn't expected that and I was pleasantly surprised. Most men, the decent ones anyway, wouldn't dream of hitting a woman. That's a mistake. If a woman is attacking you, she's given up any consideration for gentleness. My advice is to put her down if you can.\n\nWe grabbed his three bags and made our way out to my car. I don't suppose he expected that either. I didn't tell him which one was mine; I just took him over to a corner that wasn't covered by the security cameras.\n\nI dropped his bag. \"Give it your best shot,\" I said.\n\nHe grinned and dropped the bags. \"Don't whine now,\" he said, \"this was your idea.\"\n\n\"Bring it,\" I gestured.\n\nHe started forward and I pointed at the ground at his feet. He glanced down and never saw me draw the .40 ACP from the thigh holster under my blue dress. When he looked up, he was dead. He stopped in his tracks. \"Well, that's certainly a game changer,\" he said.\n\n\"Yeah, I thought you'd see it that way.\" I holstered the weapon. \"Julian, trust me; you don't want to do this. I'm very good at my job.\"\n\nHe was too busy looking at my thigh as I put the gun up to answer for a minute. I liked him looking. When I dropped the hem line down he cleared his throat. \"I'm sorry I doubted you,\" he said. \"Plainly there's more to you than meets the eye. I kind of liked what met the eye, though,\" there was a stupid looking grin on his face. \"I think you're right about being good at your job. I apologize. I won't do it again.\" He stuck out his hand.\n\nI took it and damned if he didn't try to reel me in! My hand was on his throat before he could move and I squeezed enough to make him gag before releasing him. He laughed and wiped his eyes. We picked up the bags and I unlocked the doors. When he heard the trunk pop open, he got a huge smile on his face. \"Somehow, it fits,\" he said.\n\n\"It,\" is my 2007 Dodge Charger Super Bee. It's the Detonator Yellow and Flat Black. I've modified it extensively. I'm a hot rod girl. Dad loved the muscle cars and I kind of inherited that love. I swapped the engine out for a 6.4-liter hemi the year after I got it. It was making over 500 horsepower out of the crate. It's over 700 now. I put a supercharger on it last year. The supercharger is a 145 cubic inch twin-screw IHI unit with integrated charge coolers, and makes 11.6 psi of boost. I love pulling up next to the Mustang owners and just erasing them at the stoplights.\n\nBy way of comparison, the Shelby GT500 is a supercharged 5.4-liter engine making 500 horsepower. Don't let people fool you, that legendary Shelby GT1000 is a fake. It never made more than 800 horsepower; it isn't street legal and never was. It also cost over $150,000 to build. I'm into my Super Bee for just a little over $60,000. The Camaros are in the same class as the Mustangs and neither is on the same planet as the Super Bee.\n\nIt has a nice big trunk and Julian's bags fit in just fine. We started for his hotel and he outlined the plan he had in mind. A competing firm had a design his company wanted. They knew it was derivative from some things they had patents on and wanted the design so they could prove patent infringements. They had hired Adams Security to get that design. John had paid one of the key employees to smuggle it out and he'd fallen off the map. He wasn't answering phone calls and they wanted the design or the money back. They preferred the design and our contract with Julian's company demanded that. I got him checked in and figured out the details. It took me three days. I put it together and it was time to move.\n\n****\n\nThe hallway was very dimly lit and there were children's toys scattered around along with various kinds of trash. In my three-inch heels, it was very difficult to navigate. My target didn't seem to be as nervous as he should have been. He was a little naive for a guy in his position. Of course, he didn't realize his position. It was perilous in the extreme, but I was trying not to give off any vibes.\n\nI had picked him up at the nightclub he frequented without much trouble. Unless a guy is really a racist or gay, I usually don't have any trouble with that. My boobs are just big enough to show some nice cleavage when I want them to without getting in my way, and if I wiggle my ass at a guy, he usually starts drooling. Even the racists don't seem to mind getting a shot at a black girl like me. Maybe they just want to humiliate me, but that's okay, too, for my purposes. My biggest asset is my face. The body and the hair make the total package. People tell me I'm beautiful. I don't see myself like that; I'm just me. I've always looked the same. I was a little more buff than when I was in school, but I hadn't changed much. I have this huge mop of unruly curls that I can just towel dry and fluff up, and people want to touch it.\n\nThe black dress I had on was sleeveless and had big armholes so that you could see flashes of my breasts when I moved. Timothy Jenkins had been seeing that all night. It inspired him enough to ask me if we could go back to my place after he bought me enough drinks to float a battleship. I'm a big girl and I'm nearly immune to alcohol. Still, the plant behind the booth got a lethal dose if it was real. In my heels, I was at least four inches taller than he was. He was losing a little hair and had a bit of a paunch, not the best condition for what was going to happen to him. I don't judge people on their physical appearance, unless they're trying to pick me up. Of course, he had something altogether different in mind than I did. Not the best condition for that, either.\n\nI unlocked the door and pulled him inside. No one saw us, and no one would say anything even if they did. I pushed him up against the wall and lit him up with my hottest kiss. He groaned as I rubbed against him, then every bit of breath he had blew out in an explosive grunt as my right knee crushed his balls. I let him crumple to the floor and went to get my equipment. He was making a high-pitched keening sound for a couple of minutes. At least he didn't puke. I dragged him over to the chair I had selected and fastened him in with plastic zip ties and duct tape. He was beginning to recover and he knew what was happening now. The mouth on the man was very amusing. Every third word was \"nigger bitch,\" and it made me laugh. I put a couple of pieces of duct tape over that hole and shut him up. If he only knew how many times I'd heard that down through the years, he'd realize how little it bothered me.\n\nI knelt in front of him and slapped him a couple of times to get his attention. \"You owe some people,\" I said. \"I'm the collector.\" I got out my piercing needles. When I opened his shirt, his eyes were bugging out like they were on stalks. After I pierced his nipple, he screamed into the tape but he was still a little defiant, even after I put in the ring. This might be a little hard to explain to his wife. Yeah, he was married and I hate a cheater. The defiance went away after I did his belly button and put the chain in, joining the two rings. When I opened his pants, he squirmed like a worm on a hot sidewalk and screamed into his tape. It seemed like he wanted to say something.\n\nI took off the tape and he forgot my skin color and relationship to female dogs. \"Please,\" he begged. \"I'll give them their money back.\"\n\nI took hold of his new chain and he gave a little shriek when I tugged on it. \"The people I work for don't want the money, they want the design you promised them,\" I said.\n\n\"I couldn't get it,\" he whined. \"I haven't been able to get it out.\"\n\n\"So you're telling me you won't be able to deliver what you promised?\" I asked.\n\n\"No, I just need more time,\" he pleaded.\n\n\"You haven't been returning my associates' phone calls,\" I mentioned.\n\n\"I'm sorry, I was afraid because I didn't have anything,\" he sobbed.\n\n\"Okay, I'll give you two days,\" I told him. \"If you don't deliver by eight o'clock PM on Friday, I'll be back. I won't be back to play nice like this time, Mr. Jenkins. I'll make you wish you were dead and you'll never see me coming; do you understand? Do you think you're going to deliver what you promised?\"\n\n\"Yes, yes, I'll find a way,\" he said. \"I'll call as soon as I have it.\"\n\n\"Are you sure you don't want a chain connecting your dick to your belly button?\" I asked. \"I have a really nice one and a good dick ring.\"\n\n\"No! Please don't hurt me anymore,\" he begged.\n\n\"Okay, I'm going to let you go now,\" I told him. \"You aren't going to get stupid on me, are you?\"\n\n\"No, please. I'll get the design,\" he said.\n\nI cut one hand loose and handed him the cutters. I drew my .40 ACP out of my thigh holster and backed away ten feet while he cut himself loose. He looked at me and I motioned to the door with the .40. He practically ran out the door. It was a shame; I really did have a nice chain.\n\nIt was just after midnight so I went back to the club. I talked to a couple of bartenders so that they would remember me being there all night. I had talked to them earlier and I gave them nice tips. I went to the door and handed the valet my card. I could hear him coming before I saw my car. I called Julian and he asked me how it went.\n\n\"Did you get the design or the money?\" he asked.\n\n\"No, I wanted him to give it to you,\" I said.\n\n\"Do you think he will?\" he asked.\n\n\"He seemed to consider it carefully,\" I said. \"He acquired some new jewelry.\" I had told him my plan.\n\nHe laughed. \"I like the way you work, Sullivan. Why don't you just go to work for us?\"\n\nI laughed. \"You can't afford me, dude. If you have another contract, give John a call. Now it's just a matter of sitting on you for a few days.\"\n\n\"Sitting on me?\" he asked. \"Really? That sounds like fun.\"\n\n\"Making sure nothing happens to you that you might not survive,\" I said.\n\nI got him set up in the house of a friend that was away on vacation, and we spent the next 18 hours waiting. I didn't really think he was in any danger, but he seemed on edge. Twice he asked me if I wanted to get something to eat, but we just got delivery.\n\n\"This is a professional situation, not a date,\" I told him.\n\n\"When the professional situation is over will you go on a date with me?\" he asked.\n\nI laughed. \"I don't know, Julian. We'll see what happens. When we're clear, make me an offer I can't refuse.\"\n\nMr. Jenkins called at four PM, hours short of his deadline. I set up a meet at a cheap hotel and took Julian over to check the situation out. I had him in the room waiting when Jenkins showed up. He knocked on the door and I opened it. He had a briefcase with him and I checked it out. It had designs and a couple of DVDs in it. I patted him down and took him through the connecting door into the next room where Julian was waiting.\n\nHe checked out the documents and went through the DVDs while Jenkins sat in a chair.\n\n\"This is it,\" Julian closed his laptop. \"We're done.\"\n\n\"Not quite,\" I said. I turned to Jenkins. \"Open your shirt,\" I told him.\n\n\"What? Why?\" he gobbled.\n\n\"You made me chase you,\" I said. \"Now open your shirt!\"\n\nHe reluctantly opened the buttons and, wouldn't you know it, his chain was missing. His rings were still there and it looked like he hadn't found a way to open them. I got him a new chain out of my purse. This was a nice stainless steel one that he was going to have trouble getting rid of. I attached it and gave it a little tug. He winced. I guess he was a little sore.\n\n\"I'll be checking back,\" I told him. \"If the chain is gone, we're going to do that little dick to belly button thing.\"\n\nHe seemed to be in a hurry, so I let him go. I had no intention of ever seeing him again, but he shouldn't have played hard to get. Julian seemed to enjoy our little interaction and he closed the briefcase.\n\n\"What now?\" he asked.\n\n\"Now we shake hands and you go back to wherever you came from,\" I said.\n\n\"I'm going on a vacation,\" he said. \"When was the last time you had one?\"\n\n\"It's been a while,\" I laughed. \"Are you inviting me to go on vacation with you?\"\n\n\"Sure,\" he said. \"I have to warn you that my son will be with us.\"\n\nThat did surprise me. I hadn't known he had a son. \"Okay, if you let me pick the place, we'll have some fun.\"\n\nI made some phone calls and gave him the arrangements. I drove him to the airport and watched until he boarded.\n\nI went home and got a good night's sleep. That little bit of work gave me a fat bank balance. Well, fatter anyway; I was doing okay before. I decided I deserved a little vacation. A little fun on the beach sounded nice so I hopped on the flight I had booked for St Vincent and the Grenadines. I had a little villa booked on Palm Island and it was everything I hoped it would be.\n\nIt was about two in the afternoon when I got settled in, and I decided to go down and relax in the sun. I took my book, sunscreen, and a couple of towels in my bag, some beer and water in a small cooler and walked about 200 yards down to the water. I was one of three people in sight. There were a man and a little boy playing down the beach a ways. It was Julian, and what must have been his son. I left them alone but I noticed that the boy was really little and really cute.\n\nI relaxed for a minute with my eyes closed and then I got my book out and started to read. I heard the sand crunching and a shadow moved over me. It was the little boy. I looked up at him through my Ray-Bans and he was even cuter than I thought. He had honey-blonde hair, golden skin and huge blue eyes. There were a few freckles sprinkled across his little nose and he was absolutely adorable. He looked like he was about four or five.\n\n\"Whacha readen',\" he asked. Even his little husky voice was adorable.\n\n\"Money, Bank Credit, and Economic Cycles, by Jes\u00fas Huerta de Soto,\" I told him.\n\n\"Is it good?\" he asked. \"What's it about?\"\n\n\"It's about money, sweetheart,\" I said. \"What's your name?\"\n\n\"Merlin,\" he said. \"What's yours?\"\n\n\"It's Sullivan,\" I told him.\n\n\"Are you going swimming? Wanna go with me and Daddy?\" he asked.\n\n\"Merle,\" I heard his father call. He walked down to where we were. \"I see you've met Merlin,\" he told me. \"Merlin, did you introduce yourself?\"\n\n\"She's going swimming with us!\" Merlin told him.\n\nHe raised one eyebrow at me in question. I laughed. \"We just decided that,\" I told him.\n\n\"Merlin, did she really say that?\" he asked.\n\n\"Well, no, but I could tell she wanted to,\" he said. \"Her name is Sullivan. Isn't she beautiful, Daddy?\"\n\nHe blushed. The man was a giant as I looked up at him. I had forgotten how big he was. He was at least six four and he had huge arms and a huge chest. His mop of curly brown hair nearly matched mine. He had a dark olive complexion and I remembered I had thought he was very good looking. \"Yes, she is, but maybe she doesn't want us to bother her,\" he said. \"I'm sorry, you don't have to go swimming. Let's let Sullivan read her book and not bother her.\"",
        "\"He's not bothering me,\" I told him. \"We were talking about economics.\"\n\nHe glanced at the cover of my book. \"Are you an Austrian Economist?\" he looked at me with surprise.\n\n\"No, I'm just a working girl,\" I laughed. \"I'm interested in those ideas, though. When I grow up, I want to teach economics at a University somewhere. We were going swimming though. Let me put on some sunblock and we'll go.\"\n\n\"You need sunblock?\" Merlin asked.\n\nI laughed again. \"You mean on account of I'm black?\" I asked. \"Yes, honey, black people burn and tan, too. I'd be so black you couldn't see anything but my smile at night if I didn't use sunblock.\"\n\nHe nodded and I stood up and took off my wrap. I heard his father draw in his breath. I grinned up at him. \"So, let's go swimming.\"\n\nHe tore his eyes away from my boobs. \"Sorry, um, okay,\" he said. \"You don't have to go swimming with us, Sullivan.\"\n\n\"No, you seem like good company,\" I said. \"Is your wife here?\"\n\n\"Mommy didn't come,\" Merlin said. \"She did something bad and we haven't seen her for a long time.\"\n\nI looked at Julian. \"It's a long boring painful story,\" he said.\n\n\"Well, I don't know you well enough to listen to long boring painful stories. Let's go swimming.\"\n\nThe water was warm and gorgeous, blue and beautiful and we had a blast. Julian was a great big, happy teddy bear and Merlin was charming. They were obviously in love with each other and he rode Julian, and me, around like horses. We found pretty shells and Julian found Merlin a hermit crab that he wanted to keep. I had heard of keeping them for pets, but I didn't know if this was the right kind. They moved their stuff over by mine and Merlin shared some chocolate he had in their cooler with me. The sun was beginning to set and I was getting hungry when we parted. Merlin hugged me like I was his best friend. I gave Julian a hug, too, and started up the path. I heard a little boy shout and Merlin was running up the path after me. He threw himself on me and told me he loved me. He wanted to know if I would be at the beach the next day.\n\nI told him that I had planned to go shopping and he looked sad. On the spur of the moment, I asked him if he would like to go with me. His face lit up like the sun and he jumped up and down and celebrated.\n\n\"Really, Sullivan? I could really go?\"\n\n\"Yeah, honey, it'd be fun,\" I said.\n\n\"Let me go ask Daddy,\" he said. He ran off down the path and came back with Julian.\n\n\"Sullivan, don't let him bug you into doing things you don't want to do,\" he said. \"He thinks all he has to do is smile and people will do anything he wants them to do. I guess he has some reason since he has me wrapped around his finger like that.\" He grinned ruefully. \"Do you really want him to go with you?\"\n\n\"Sure, why not?\" I asked. \"You can go, too, if you want to, Julian.\"\n\nHe was ambivalent, I could tell. I suppose he must have been worried about Merlin going off with me. We hadn't known each other very long and I'm sure I wouldn't have let him go off with me. I would take very good care of him, but he couldn't know that. He probably didn't enjoy shopping; he was a man, after all. The Daddy part of him won and he agreed to meet me at a coffee shop I had noticed at ten the next morning. Merlin pulled my face down for a kiss and scampered away. Julian thanked me and followed at a more sedate pace. His size didn't lend itself to scampering.\n\nI was sitting in the coffee shop drinking a triple espresso when Julian and Merlin arrived. He got a cup of regular coffee and bought Merlin a hot cocoa. We all had a muffin and the shopping expedition began. We walked and window-shopped, going in when we saw something interesting. The local women made these really cool white cotton dresses with intricate embroidery on them. I bought four of them and a cool t-shirt for Merlin that matched one of the dresses. When I got it for him, he said we'd be twins. Julian didn't want me to buy it, but I insisted. We nibbled on street food to keep the hunger pains away and when we were through shopping, Julian asked me if I would like to go clean up and come back for dinner. I wanted to very badly. I was in love with Merlin and Julian was having quite an effect on me, too. Did I mention that the man was huge? He was carefree and happy and just a ton of fun to be around. I'm not usually attracted to white men, and I suspect he wasn't very attracted to a lot of black women.\n\nI hate to indict my own culture but a lot of black women have an attitude. They're notorious cheaters and there's very little shame in that for them. They aren't looked down on for that. If you have a fat ass and one guy dumps you for cheating, there's always the guy down the street who's happy to get a piece of that. It's a scourge in our culture. There was some shadow in Julian's past that I suspected had something to do with Merlin's mother. That would make him very wary of me and I couldn't blame him. I'm not like that, but he couldn't know that. I actually like nice guys. Bunches of my girlfriends down through the years have told me, \"I'd never date him, he's too nice.\"\n\nThat's just so much bullshit. I want a guy who's going to treat me like shit? Not this girl! Julian was certainly one of those nice guys. He was so in love with his son and that just made him nearly irresistible to me, plus, he was very good looking, and huge! I felt tiny beside him. I'm nearly six feet tall, almost 140 pounds and he made me feel petite. I decided I liked that feeling. I needed to find out what that story was about Merlin's mother. He wasn't wearing a wedding band, but I could see the deformation of his finger that showed he had in the recent past.\n\nI wore one of my new dresses and sandals to dinner. To my delight, Merlin had his shirt on, too, with shorts and a cute pair of orange flip-flops. He tucked his little hand in mine and we were twins. That's what he said and I accepted that we were, not identical, but definitely twins. Julian looked very nice, too, with khaki shorts and a black polo. I was naked under that thin cotton and he couldn't keep his eyes off me. You could see the dark impression of my nipples under that thin material and they were so hard they ached when I saw him looking. I hadn't been with a man in a while and he was all man. That thing with Merlin's mother still bothered me though, and I wasn't about to get involved with a married man. I needed to know what was going on.\n\nThe restaurant was a fresh seafood place and the food was delicious. We tried a lot of different appetizers and it was all awesome. Julian and I drank beer and I felt very relaxed, just a little mellow. I could tell he was, too, and I thought I'd probe a little.\n\nI asked Merlin if he went to school. He said he was going to kindergarten starting that fall and that Julian was going to be his teacher. I was surprised.\n\n\"You're a kindergarten teacher?\" I asked him.\n\nHe laughed. \"No, just for Merlin. I'm actually a football coach, American football. We live in Mexico City right now and there isn't much call for American football coaches. I'm working as a private contractor for the company that hired you.\"\n\n\"Why is an American football coach living in Mexico City?\" I asked.\n\nA shadow passed across his face. \"Are you sure you want to hear this?\" he asked.\n\n\"If you don't mind telling me,\" I said.\n\n\"I don't mind,\" he said. \"I really like you, Sullivan. I've never met anyone quite like you before.\"\n\n\"Me, too,\" Merlin piped up. \"I love Sullivan, Daddy.\"\n\n\"Thank you, baby, I love you, too,\" I hugged him.\n\n\"Do you want to come back to our place?\" Julian asked. \"This is kind of a long story and personal. I'd just as soon not tell it here. Merlin is going to get tired pretty soon and I could just put him to bed when he does.\"\n\nThat sounded like a good plan and we walked back to their villa. It was on the same plan as mine. Merlin put on his pajamas and we sat on the sofa, Merlin between us with his head in my lap and his feet in Julian's. We each had a beer and he started telling me about Merlin's mother.\n\n\"I met Staci in college at a party,\" he said. \"We were both pretty high and she wound up going home with me. She passed out in the car on the way back to my place and nothing really happened. She slept on the couch and she was still there when I left for class in the morning. When I got out of class between ten and one she was in the shower. I made lunch and she ate with me. I don't know if it was love at first sight or not but for me it was certainly lust.\"\n\nMerlin was asleep and I just petted him, marveling at the beauty of this little elf with his head in my lap. Julian smiled down at him. \"He's gorgeous,\" I said.\n\n\"I know, right? He looks just like his Mom. We dated for about six months and she told me she was pregnant. We both partied a lot and that was a big change for both of us. I knew I had to settle down and I got a job after school. Staci kept going to school, too, and we got married two months before Merle was born. I fell in love with him the minute I saw him. Staci started acting strange about Merlin a couple of months after he was born. She started leaving him with sitters when I wasn't home and I found out she was partying again. She was doing drugs and drinking. She was breastfeeding our son and doing that, Sullivan.\"\n\n\"Jesus Christ,\" I exclaimed. \"What did you do?\"\n\n\"I had a fit,\" he said. \"She denied everything, of course, and it took me a month to get the evidence it was true. She was sleeping around with different guys and partying hard. When I confronted her with pictures and video, she just became this evil bitch. She told me I didn't own her and she wasn't going to \"miss out on life\" because of a stupid brat. That stupid brat was a beautiful, three-month-old baby, Sullivan. I told her to leave and stay the hell away from Merlin and me. She left but she tried to snatch Merlin about a week later. She showed up one evening and just took him from the sitter. It was lucky I just happened to pull up in the driveway as she was coming out of the house.\"\n\n\"What did she say?\" I asked.\n\n\"Well, she said I was a jealous prick and that she was Merlin's mother. She was filing for divorce and she was going to get custody of Merlin. I went to see a lawyer and showed him my evidence. By that time, I was out of school and working as the defensive line coach of the football team where I had been playing. We had a big, long court battle and I got custody because of her drug use. Staci had two supervised visits a month and after two years, they would revisit the case. For some reason, Staci hated my guts after that. She and her boyfriend of the moment did stupid things like break windows in my car; flatten my tires, just junk like that. They even poured a bag of concrete in my hot tub once.\"\n\n\"She sounds like a maniac,\" I said. \"How did you not see this before?\"\n\n\"I have no idea,\" he said. \"Anyway, after the two years were up we went back to court. Staci and her attorney had all this line about how she'd cleaned up, she was ready to be a responsible mother and she had been in treatment to get her drug problem fixed. This was a different judge and she bought it, hook, line and sinker. She said she was going to give us joint custody with Staci as the primary care giver. I would get to visit twice a week, I would get two weekends a month and alternate holidays. You should have seen the smirk on Staci's face. I pretty much saw it coming and I was ready. I went home, cashed out everything I had, called my athletic director to resign and got on a plane with Merlin for Mexico City. We've never been back. When I met you there it was the first time I'd been in the states since we left. It made me as nervous as hell.\"\n\n\"That's quite a story, Julian,\" I said. \"Are you going to hide out in Mexico the rest of your life?\"\n\n\"I don't know what else to do,\" he said. \"I'm sure as hell not going to let Staci get her evil claws on Merlin. What would you do?\"\n\n\"I'd eliminate her as a threat,\" I said.\n\n\"Does that mean, 'kill' her?\" he asked.\n\n\"Do you want her dead?\" I asked.\n\n\"No! I don't think I want that. I just want her to go away. I want to get back to coaching football, living a normal life like everyone else without looking over my shoulder all the time.\"\n\n\"Well, there are other ways,\" I told him. \"You could get evidence that she's still an unfit mother, you could get some dirt on the judge, you could set your ex up so that she goes to jail; there are dozens of things you could do.\"\n\nHe looked at me and I could tell he was kind of shocked. \"I don't know how to do any of that,\" he said. \"I don't even know how to start. It sounds expensive, too. I barely scraped enough money together to bring Merle here for this vacation. I'd have to hire investigators or something.\"\n\n\"Julian, you don't know me very well,\" I said. \"I know you have no reason to trust me, but I can help you if you want me to.\"\n\n\"How?\" he asked. \"Jesus, Sullivan, you're a beautiful young woman and I can tell you're really smart, but you're a security contractor. You're not James Bond. You're a college student, too, right?\"\n\n\"Yes, I am taking classes,\" I told him. \"I'm working on my PhD in economics. I don't think I want to tell you very much about this, Julian, but James Bond was a pussy. You're a big, strong guy. We've danced this dance before. You want to go a couple of rounds with me?\"\n\n\"You mean like, fight?\" he asked. He laughed. \"No, I don't think I want to fight with you, Sullivan. Maybe dance, but not fight.\"\n\n\"Are you afraid?\" I asked.\n\nHe chuckled. \"Yes, I'm afraid I'd hurt you.\"\n\nI looked up at him. \"Call me Livie,\" I said.\n\n\"Livie?\" he asked.\n\nI shot my right hand out and chopped him in the throat before sinking my fingers in on each side of his laryngeal prominence. He choked and gagged and his hand shot to my wrist, trying to pull my hand away. I hung on and he quickly realized he would have to injure himself or hurt me to get my grip loose. He looked over at me in a little panic and his eyes were leaking.\n\n\"Never call me Livie,\" I said, releasing his throat. That was the second time he'd felt that hold.\n\nHe coughed around for a few seconds, trying not to disturb Merlin. \"Jesus Christ,\" he finally managed to gasp out. \"What the hell is wrong with you, Sullivan? What was that?\"\n\n\"I could have killed you, Julian. If you got your hands on me or got me on the ground, you could probably beat me. You probably have me by over a hundred pounds and I think you're much stronger than I am. I couldn't let that happen so you would never get your hands on me. Put Merlin in bed, I want to show you something.\"\n\n\"You do it,\" he said.\n\n\"Why me?\" I asked.\n\n\"Are you afraid?\" He grinned at me.\n\nI guess I was, a little bit. This was new territory for me. I had never really been around children that much. I slipped my left arm under his neck and my right one under him around his knees. He was as light as a feather. I felt something stir in my heart as I held that precious baby. I carried him in and tucked him in bed. Julian followed and watched, lounging against the doorway. I tucked a wisp of honey-blonde hair behind his ear and kissed that little angel face.\n\nWhen I turned, my eyes were moist and Julian had the most interesting look on his face. It was a little wistful and kind of hungry. It scared me. He turned and walked back into the living room. I gave one more long look at Merlin, and then followed him.\n\nHe was standing in the middle of the room. \"What did you want to show me?\" he asked.\n\nI was barefooted and I stood in front of him. I pulled the hem of my dress up around my thighs and slowly raised my right foot, extending it up without touching him. I pivoted on my left anchor until my right foot was high enough to rest on top of his shoulder next to his left cheek. \"I can kick higher than that,\" I said.\n\nHe reached up with both hands and his fingers met around my calf. He slowly slid them downward until his fingers were caressing the skin of my thigh. I shivered and my pussy flooded.\n\n\"God, you're beautiful, Sullivan,\" he said quietly. \"So flexible, so silky, so smart and gentle, but so dangerous and deadly; where did you come from?\"\n\nI took his hands away from my thigh and slowly brought my foot back to the floor, letting my dress relax. \"It's a long boring painful story,\" I told him. \"Are you sure you want to hear it?\"\n\n\"I think I have time,\" he smiled at me and I melted some more. He took a step forward and picked me up just like I had Merlin. I could feel the power of those huge muscles and I shivered a little. Like I said, I'm a big girl, but he handled me like a baby. He carried me back to the sofa and held me on his lap, one thick arm cradling me. He handed me my beer and took a swig of his.\n\n\"My father adopted me when I was about Merlin's age,\" I began. \"He was a security contractor working for a huge company that contracted to the UN and the US Military. He quit and started teaching school after he got me. Someday I'll tell you about that, but I was raised around the guys that worked with him. I kind of became a mascot. They all looked out for me and I was like their daughter, too. When I started growing up I became more like a little sister. I started going to training camps when I was little. They let me train with them when they weren't doing dangerous things. I started doing more and more as I got older. By the time I was eighteen I was as good as the best of them. I'm not as strong as you are, but I'm stronger than most men that don't weight train religiously. I'm lighter boned and not quite as fast as elite men, but I would suspect that I'm faster than you are. You might surprise me. You probably have a quick first move from playing football. I'm a private contractor. I do investigative work, debt collection, troubleshooting, that sort of thing. I won't work for governments, but I do private stuff. Say the word and I'll make your problems go away.\"\n\n\"I don't want you to hurt anyone,\" he said.\n\n\"Why not?\" I asked. \"Do you think the only kind of pain is physical? How much pain has that little boy in there had because his mother didn't want to 'miss out on life?' How much pain are you in, Julian? That little boy doesn't deserve to be a fugitive, hiding out in Mexico City. He's going to be a star if he wants to be. You need to resolve it.\"\n\n\"Why don't you like to be called Livie?\" he asked.\n\nThat question kind of threw me. It was a total change of direction and I was to discover he did that a lot. He seemed to have multiple trains of thought going on in his head at the same time. I had thought only women did that. \"My father passed away when I was seventeen,\" I said. \"I spent six months in foster care. My foster father called me Livie. Then he got in the shower with me one day and tried to rape me. I fucked him up bad and ran away. I went to one of the security company guys. He and his wife kept me until I turned eighteen. Then we went after the rapist and he disappeared. The assault charges against me went away. I've never liked that name since.\"\n\n\"I won't use it,\" he said. \"Why would you help me, Sullivan?\"\n\n\"Merlin loves me,\" I grinned. \"I think I love him, too. I kind of like you, too, Julian. Do you like me?\"\n\n\"How can you ask?\" he said. \"Am I nuts? I have the most beautiful woman I've ever seen sitting on my lap. She's dark and mysterious, and I'm not talking about your skin. She loves my son, and I think she's absolutely fascinating. What's not to like? Will you spend the night?\"\n\nThat shook me again. I hadn't expected him to go there. \"No, Julian,\" I told him. \"I'd love to, but you're a fugitive with baggage. Do something about that and we'll see. I won't be with you unless you can be with me in a serious relationship. I won't live like a fugitive in some other country. I'm not promiscuous. I don't just sleep around. I'm very attracted to you but I'm not ruled by my hormones. Do something about your problem and let's get to know one another. Then we'll see. I'm going home now. See you tomorrow?\"",
        "\"We'll be down at the beach.\" He pulled my face down, kissed me, and nearly made a liar out of me. I finally pushed him away and rose on unsteady legs to make my way back down the beach. I jumped in the shower and the thought of those huge arms around me just made me hotter and hornier. My hand slid down to my pussy and I was leaking. It had nothing to do with the shower. I dried off and without conscious thought, I was playing with my clit and pinching my nipple with the other hand. It took about three minutes for me to cum like a bomb. I went to sleep with visions of dark brown eyes and that mop of curly hair running through my mind. \"You silly thing,\" I told myself. \"You're acting like a high school sophomore. Get a grip, girl!\"\n\nI got up and took a walk on the beach as the sun rose, then went to brunch at a place that had a buffet. I mostly ate fruit. They had a huge variety and it was all delicious. I read my book until about one and then took it and my bag down to the beach.\n\nAbout an hour and a half later, Julian and Merlin showed up. Merlin ran across the sand, screaming my name until he threw himself on my back, hugging me and wiggling all over in his obvious excitement. I rolled over and hugged him, loving him and showing it for a good while. I think that little boy needed some female attention and I was happy to give it to him.\n\nWe spent four idyllic days in paradise and I knew I had it bad. That little boy stole my heart the first day and Julian was growing on me like a middle school crush. I've known and been around thousands of super-masculine men all my life. I was a little crazy my freshman year of college. I became a party girl. I love sex; I mean I really, really love sex. It took me a while to figure out that slutty was neither something I liked, nor a lifestyle that was healthy. I had to figure that out on my own. Had Dad been around, I would have had someone to lean on for wisdom. As it was, I had to figure things out for myself. I can learn and the party girl went away. I've been with one man and one woman since then, both in long term relationships. I don't think I'd ever felt like I was beginning to feel with Julian. The relationship he had with Merlin was something that I'd seen once before and that was my relationship with my father. Half of the way I was feeling about him was built on that. A man that can love his child like that is someone I can respect. Besides, I thought he was just hot as hell.\n\nBy the time our vacation was over, I knew I wanted more. The problem was there were all these loose ends and baggage hanging around. I seriously doubted that Julian was going to be able to handle this on his own and I was equally certain that he wasn't willing to risk losing Merlin by going back to handle it himself. I decided that if I wanted to go any farther with this relationship I was going to have to get involved.\n\nI called the company and spoke to John. I told him I needed a few weeks to take care of some personal business. He was good with me taking as much time as I wanted and he even volunteered to help in any way I needed. I asked him if I could borrow Jorge Sanchez and he agreed. Sanchez was on the next plane to Charlotte where he was going to check into Staci Blake. By the time I got there two days later, he knew enough to get us started.\n\nIt turned out that her big cleanup was a fa\u00e7ade. As far as I could tell, she was clean and not doing drugs herself, but she sure was involved with the trade. She was hooked up with some heavyweight players and they were as dangerous and ruthless as anyone alive. It took Jorge and me, working with two different PIs, nearly three months to get where we needed to be. Had we been restricted to legal means, it would have taken years. I kept in touch with Julian and I did a video call with Merlin every week.\n\nWe now knew shipment dates, storage sites and who was doing what. When I had all the information, I called Julian and asked him what he wanted me to do. He didn't have any idea so I gave him options. I'm not a big fan of the police or the court system, but I told him we could use the DEA and the FBI to take them down and put them in jail or we could simply wipe the whole local group out. It would just look like another drug war. I actually preferred the second method. These people were just human scum. Anyone who sells drugs to kids, uses pregnant women to transport drugs through extortion and intimidation like these people did, deserved anything we wanted to do as far as I was concerned. Julian disagreed so I went to the DEA.\n\nThe police don't like other people who do their jobs better than they do. They were very reluctant to move on the information I gave them, but a couple of calls from John to the federal prosecutor got them hopping. There were nearly two hundred arrests made and one of them was Staci Blake. She went down for racketeering and drug possession. She got ten years and I figured it was time for Julian and Merlin to come home. My attorney had filed to get the custody hearing reopened and we got a sensible judge this time. He was pissed off about Julian skipping the country but after seeing the drug conviction, he admitted that the previous judge had screwed the whole thing up.\n\n\"Mr. Blake,\" he said, \"you are under this court's jurisdiction and obliged to obey its orders. You don't have the right to take the law into your own hands and disregard court orders.\"\n\n\"Your honor,\" I prodded our lawyer and he spoke. \"We're not disputing your jurisdiction or orders, but if my client had followed this court's orders, his son would have been in the custody of a drug trafficker, a human trafficker, and a felon for the last two years. Is the court in the business of turning three-year-old-children over to the custody of such persons?\"\n\n\"No it isn't, and you're pushing, counselor,\" the judge said. \"It's obvious that the prior judge made a huge mistake. That is what is keeping your client out of jail now. We're fixing that mistake today.\"\n\nStaci was there in her orange jumpsuit and I've never seen anyone as full of venom as that woman was. She screamed and cursed and had to be restrained when she lost all parental rights to Merlin. Julian and I were sitting together and she lit into him the moment the ruling came down. She tried to come over the railing, shackled and all. If it hadn't been for the bailiffs, she may have gotten to us. That would have been very bad for her, but she didn't know that. She looked at me and if looks could do bodily harm, I'd have been in the hospital. I just flipped her off and we left.\n\nJulian was riding with me and we went to a place he knew and got a very good burger. \"Well, that's the end of that,\" I said. \"What are your plans now?\"\n\n\"Well, I'm going back to Mexico to get Merle first,\" he said. \"After that, I'm sending out resumes to the universities on my list to see if they need a coach.\"\n\n\"How likely do you believe it is that you'll be hired?\" I asked.\n\n\"Very likely,\" he said. \"I'm a good coach and I was a good player. I teach communications, too, so that gives me an extra edge. I just have to figure out where we're going to land.\"\n\n\"Where do you want to land?\" I asked.\n\n\"Where do you live?\" he asked.\n\n\"What does that have to do with anything?\" I asked.\n\n\"Well, I'm pretty sure that if Merlin has anything to say about it we'll land somewhere he can see a lot of you,\" he laughed.\n\n\"What about his dad?\" I asked.\n\nHe blushed. \"He wants to see a lot of you, too,\" he said. \"Wait, that didn't come out right. Well, maybe it did, but I meant... I meant... hell, Sullivan, I'm crazy about you. I want to be where I can ask you out on a date, hang out with you, whatever you'll allow me to do.\"\n\n\"I live in Tucson,\" I told him. \"1368 Flowing Wells Boulevard, would you like my phone number?\"\n\n\"I have it from when we were working together,\" he said.\n\n\"No, that was a work number and it won't work again,\" I said. \"I'll give you my personal cell number. I'll be waiting for that date.\"\n\nAs it turned out, I had to wait a while. Julian must have been as hot a commodity as a coach as he claimed because he was hired at U of A almost immediately. The defensive coordinator was moving on the next year and they promised him the job. He was coaching tight ends and doing strength and conditioning within a month. I got to spend one evening with him and Merlin before I went out of town on a job.\n\nI took them out to the Desert Museum on a Saturday afternoon and we spent the rest of the day together. I swear to God I've never felt so loved in my life. Merlin held my hand and hugged me constantly and Julian wasn't much different. We went out to eat and then back to my place to watch a movie we rented. It was an animated thing and I expected to be bored to tears but it turned out to be really entertaining. Merlin didn't want to leave and I asked Julian if he could spend the night. I could tell that he was reluctant but he finally gave in to Merlin's begging and we camped out in the backyard.\n\nI put up a tent to keep the nasty crawlies out and we made s'mores and watched funny videos on my tablet. He showed me these cat vs cucumber videos that were just hilarious. We giggled and snuggled until he fell asleep with me holding him, his curly blonde hair tickling my cheek. I lay awake a while, taking stock of my life and wondering where this was going. Could I imagine myself as this little boy's mother, having a long-term relationship or even being married to Julian? I felt pretty good about it. I wasn't sure I was ready for that sort of permanence, but I was ready to give it a chance. It was really scary because this was a serious thing. There was a child involved, not just me and Julian or me and someone else. Now there were three people that could get hurt and one of them would be totally innocent. If it didn't work, how do you explain to a five year old that you love them but you aren't going to see them anymore?\n\nI was playing for keeps now and I knew there were going to have to be some changes in my life. I finally fell asleep and it seemed like I had hardly closed my eyes before the sun was up and someone was calling my name. \"Sullivan, Sully, wake up, I need to pee.\"\n\nI sat up, blinking like an owl in the sun. \"Okay, hold on a minute, baby,\" I croaked. \"Let Sully get her wits about her.\" We went inside and I made coffee and tried to become human while Merlin did his thing in the bathroom. I was still feeling woozy and frumpy when Julian came to pick him up. He didn't seem to mind looking at me in pajamas and a robe and we talked a few minutes before they left. Merlin hugged me for a long time and Julian kissed me briefly.\n\nJohn Adams called me that evening and told me he needed me for a job. I had been playing hooky for three months but I wasn't ready to go back. John told me that this meant something to him personally. \"Just come in and talk to me about it and let me give you the details. If you won't do it, you won't do it,\" he said. \"I've never insisted you take a job you don't want. I know you have scruples about working for the government and I've never pressured you. This job is working with one of the military contractors. You're the only woman I've got with the experience to do this and I need a woman. Those guys respect you and they'll work with you. Please, Sully, help me out here.\"\n\nI agreed to listen and I went in Sunday afternoon after church. John had two people with him in the office. They were an older couple, maybe in their middle seventies, still obviously fit and active. They seemed very upset about something.\n\n\"Sal, Vicky, this is Sullivan Adams,\" John introduced me. \"She's my operative I was telling you about. Sullivan, Sal Robbins is the VP of operations for Halcyon Oil Explorations division. They have their own security division, but they asked us to oversee this operation. I'll let Sal tell you what's going on.\"\n\nI shook their hands and took a seat. Sal explained that a vital employee, his wife and two-year-old daughter were working in Venezuela on a huge oil field. Two weeks ago, they were reported missing and Halcyon had received a ransom demand. The people claiming to hold the family wanted 20 million dollars. They were perfectly willing to pay, but they were asking for signs that the three kidnapped family members were still alive. They wanted the three of them out alive and the kidnappers destroyed as soon as they were safe. They wanted to use their own security people, but they weren't really a military type unit. We were, and knew we could get the job done. Hostage rescue is always sketchy at best. You seldom even know if they're alive when you go in. You always ask for signs of life but you never know if the kidnappers killed them just after they provided the signs or there's still someone to be rescued. You go in knowing everyone may die, but also knowing that if you do nothing, they will likely die anyway.\n\nThe cops don't want anyone to pay ransoms, but it's my idea that you do whatever it takes to ensure the safety of the people you care about. Get them back, then go back and fuck up the kidnappers. That's where law enforcement always screws the pooch. They think every problem should be solved using a sledgehammer. They go in and do their clumsy shit and people die. The kidnappers get away, the money disappears and everyone gets a black eye. Thankfully, Halcyon knew this as well as I did and they brought in the experts.\n\nThe problem was, they weren't getting any signs of life. They had a date stamped picture of the little girl from a day earlier but the only stuff from the parents couldn't be verified. Robbins thought they were probably already dead and he wanted movement in the next two days. He was willing to pay the ransom, but he wanted it back and a message sent. If the bad guys thought they could get away with messing with Halcyon, things around the world would get ugly quick. They did have the reputation of being a bad bunch to fuck with, but if some Venezuelan small timers could get away with ripping them off for 20 million, the vultures would gather.\n\nI called Julian and told him that an emergency had come up. I was going to be out of the country for a while. I could tell right away by the sound of his voice that he was disappointed. \"What are you going to do?\" he asked. \"Is it dangerous?\"\n\n\"I'm helping to rescue a kidnapping victim,\" I said. \"Yes, it's dangerous, but then driving your car is dangerous. Eating a piece of steak is dangerous. You're dangerous in a way and I'm probably the most dangerous thing you will ever meet, Julian. That's what I do. Do you not like that?\"\n\n\"No, I think it's cool as hell that you can do stuff like that,\" he said. \"I just worry that something will happen to you. I worry that you'll get hurt or killed. I just wish you were a little more... domesticated, Sullivan.\"\n\nI laughed. \"Okay, Julian, when I get back I'll cook dinner for you and clean your house.\"\n\nHe laughed, too. \"That's not quite what I meant. It's just that having you for a girlfriend is like having this tiger holding your hand. I feel like I may be eaten at any moment.\"\n\n\"You do look delicious,\" I told him. \"So far, I haven't even scratched you. Am I your girlfriend, Julian?\"\n\n\"No, but you've choked me twice,\" he accused. \"I want you to be my girlfriend, will you?\"\n\n\"Maybe. It was just a little choke,\" I said. \"I had to make you aware that I'm not domesticated. You didn't respect me and I had to make you.\"\n\n\"I'm not sure there's such a thing as a little choke,\" he laughed. \"I'm going to miss you. Merlin wants to talk to you.\"\n\nI talked to Merlin for about twenty minutes. I tried to say goodbye several times but he just kept me talking. He had ten thousand things to tell me and I really wanted to hear them all; I just kept feeling worse and worse about leaving. \"Sullivan, please don't leave us,\" Merlin finally just blurted it out.\n\n\"I'm not leaving you, honey,\" I told him. \"I'm coming back. It's just for a little while. There's a little girl that needs me.\"\n\n\"I need you,\" he said.\n\nThat brought tears to my eyes. \"She's in terrible danger,\" I told him. \"Bad people might hurt her if I don't help her.\"\n\nHe sniffed a couple of times and I could tell he was thinking about that. \"I still need you,\" he finally said. \"I think she needs you worse than me. Go help her, Sully, but make sure you come straight home after you help her.\"\n\n\"I need you, too,\" I told him. \"I promise that I'll be back as soon as I can.\"\n\n\"Can I send you a picture of me for your phone?\" he asked.\n\n\"I'd love to have a picture of you for my phone,\" I told him. \"I've got to go now, sweetheart.\"\n\n\"Bye, Sullivan, I love you,\" the call ended. After about ten minutes, my phone vibrated and he had sent me a picture of himself with a replica of my car I had given him. I set it as my wallpaper and started packing.\n\nIt was a long flight to Venezuela. I went over plans and maps on the way down and slept for a good part of the trip. When you're going into a situation like this it's best to sleep when you can. You never know when you'll get another chance.\n\nWhen I got on the ground, a car was waiting for me. The driver introduced himself. He was a Halcyon employee and he would be my liaison with the security team. They were quasi-military and I worried about having Rambo types. They all seemed tough and disciplined. They seemed to know about me and only one gave me any trouble. He kept making off color comments, talking about taking orders from a woman and just sneering at me.\n\nI knew their team leader a little and he started to say something to the guy. I shut him down and sauntered up. I rubbed on him a little and he smirked and grabbed my ass. I did a leg sweep and he was on the ground with my knife against his throat and his balls in my hand. He froze and I put my face in his.\n\n\"Listen, cunt,\" I told him. \"You can be a team player and do what I tell you and shut the fuck up, or, I can cut your throat, squeeze your balls to jelly and let you bleed out. What's it going to be?\"\n\nHe grinned up at me. \"I think option A,\" he said.\n\nI flipped the knife around. \"Good,\" I gave his dick a squeeze. \"You feel like you could be useful.\"\n\nThe crew all laughed and I helped him up. \"Sorry, Ms. Sully,\" he said. \"I heard you were a hard ass. I just had to go and step in it. I'll do my job.\"\n\nI punched his shoulder and we were all buds. They had a video tape. It was pretty ugly. They had the young wife all drugged up to the point she didn't know her own name. They took turns on her and she was fucked up enough not to know it wasn't love. Anyone that says a woman can enjoy being raped should be hung up and castrated. This was nothing but animal stimulation and it was the most sickening thing I'd ever seen. They'd just turned her into an animal and the drugs kept her from knowing what was happening. I seriously doubted she'd be alive or have any will to live even if she was. The husband was tied up and forced to watch his wife's reaction to the gang rape. He wasn't going to be much good either. I made a vow. These bastards were going to pay and it was going to be long and painful.\n\nWe had a location and we went in just before sunup. Mom and Dad were dead. I hated it that three of the kidnappers fought back and we had to kill them. We had twelve of them and I told the crew to get creative. They found an acetylene welding torch and the rapists were in for a long day. I found the little girl in a cage in the office.\n\nIt was dark when I opened the door and I could hear her crying. \"Mama?\" she called out when I opened the door.\n\n\"No honey, I'm a friend of Mama's. She sent me to come and get you,\" I told her.\n\nThe cage had a cheap padlock on it and I was going to have to break it. \"What's your name, honey?\" I asked her. She whimpered a little.\n\n\"Landry,\" she finally got out. \"What's you name?\"",
        "\"My name is Sullivan,\" I told her. \"Everything is going to be okay, baby. I'm going to get you out of there. Turn your face away so nothing hits you when I break this lock.\"\n\nI saw movement and the back of a little head as she turned away. I hit the lock twice with the butt of my rifle and the lock broke. \"Come on out, honey,\" I knelt by the door. \"It's okay now.\"\n\nShe came crawling out and she stood up and threw her arms around me. I held her close and she smelled awful. They hadn't let her use the bathroom and she smelled like a toilet. I didn't care. This little thing had been through hell and I was going to see to it that hell didn't exist for her any more. I took her outside into the daylight and looked her over. She was blinking and squinting in the morning sun. Her little face was bruised and swollen and she had a tooth missing. There were bruises all over her and she just broke my heart. I got a team member to drive us back to the hotel and I held her the whole way. She was shaking and sobbing and I was crying, too. We just held each other like we were the last port in a storm.\n\nI carried her up to my room and took her into the bathroom. She had on what had been a little white dress and I pulled it gingerly off over her head. She was a mess, beaten and filthy; I stood her in the tub and rinsed her off with warm water. After the last of the filth was gone I ran the tub full of water, dumping one of those little bottles of shampoo in for bubbles. I made it hot and she complained when I was easing her in.\n\n\"I know it's hot, but you'll get used to it,\" I told her. \"It's going to feel really good on your bruises.\" She reluctantly sank down until she was lying in the tub, everything but her face immersed in the hot water.\n\n\"You just relax there for a minute and I'll get us something to eat,\" I told her. \"Are you hungry?\"\n\n\"Yes, thusty, too,\" she said.\n\n\"I'll be right back,\" I told her. \"You wait for me, okay?\"\n\nShe smiled and nodded and I went down to the lobby. They had fruit and cereal with milk and I bought some cartons of yogurt with fruit in it and several bottles of water. I got two cartons of juice and some cookies and took them back to the room. I saw a maid and asked her if she had any lotion on her cart. She did and I took five tubes. When I got back to the room I got in my medical kit and cut a Percodan into four pieces. I took one of the pieces and a carton of juice into the bathroom. Landry was still in the tub and I got her to take the medicine. She drank the whole carton of juice.\n\n\"We have mo juice?\" she asked hopefully. \n\n\"Yes, baby,\" I told her. \"Let me wash you and then we'll go and get it and eat some things, too, okay?\"\n\n\"'Kay,\" she agreed. I washed her carefully, making sure she was squeaky clean, and I shampooed her hair, cautious not to get any shampoo in her eyes. She had the longest, most beautiful silky blonde hair I'd ever seen on a girl her age. We wrapped her up in a towel, put another around her hair and I carried her in to the bed. We sat, cross-legged, facing each other, and she ate a bowl of Frosted Flakes. We shared the yogurt and fruit and she ate two cookies and drank the other carton of juice. I could tell the Percodan was kicking in when she started yawning.\n\nI took the towels away and brushed her hair out. When I had all the tangles out, I made her lie down and put lotion all over her little body. It was horrific what those bastards had done to this little girl. She hadn't been sexually molested that I could tell, but she was bruised and abraded all over her little form. She winced as I worked the lotion in and I could tell it was hurting her. When she was shiny and slick I pulled the covers up over her and kissed her forehead.\n\n\"Take a little nap, Landry,\" I told her. \"Sully is going to take a shower. I'll be right back and we'll take a nap together, okay?\"\n\nShe nodded and closed her eyes. I held her hand until I felt her breathing change and I went in and took a shower. I put on my nightshirt and crawled in bed with her. She stirred and moaned, snuggling up against me and I wrapped her tiny little body up in my arms. I drifted off and it was dark when I awakened. Someone was touching my face. I opened my eyes and big green ones were looking into mine.\n\n\"Sully, I need to pee,\" Landry whispered. \"You holding me.\"\n\n\"Sorry,\" I whispered back. \"You need help, honey?\"\n\n\"No, I big,\" she giggled, slipping out of bed. She limped off to the bathroom. I heard the toilet flush and she came back and got in bed.\n\n\"Are you hurting?\" I asked her.\n\n\"Yes, my mouth huuts,\" she said.\n\nI got up and got her another piece of the Percodan. She took it and drank the whole bottle of water. God knows what or when those bastards had allowed her to drink. She whimpered a little and I held her.\n\n\"Where Mama?\" she asked.\n\n\"Mama had to go someplace else,\" I told her. \"I'm going to take care of you for her.\"\n\nShe seemed to accept that and in a few minutes, the drugs kicked in and we slept again. When I woke, it was morning and my phone was vibrating. The team had cleaned up and notified Halcyon. John was flying in that afternoon and wanted to meet me. I set it up and went down to the lobby to get us breakfast. I got waffles and fruit, eggs and sausage and a lot of milk. They had several kinds of juice and I got all that I could carry and took it back to the room.\n\nLandry was stirring uncomfortably when I walked in. I hated to keep giving her drugs but she'd had enough pain to last a lifetime. I woke her up and gave her the third piece of the pill. We ate breakfast sitting in the bed and she chattered at me the whole time. I got a good look at her and she was a gorgeous little girl. I could tell she was going to break hearts someday. I called down to the front desk and the manager came up after a bit. I let him get a look at her wrapped in a towel, and sent him shopping. He came back after a couple of hours with bags of things for her to wear. There was also a fluffy stuffed dog and she loved it. I dressed her in pajamas and she slept again, holding her dog.\n\nJohn got in and we talked. He wanted to know what I was going to do about Landry. I asked him to find out if she had any family that wanted her. He made some phone calls and in a few hours he told me we had a problem. Landry really didn't have anyone. She was going to have to go into foster care. I told him there was no way I was going to allow that to happen. He knew what had happened to me in that system and he didn't give me any grief. I told him Landry and I were going to stay in that hotel for a week. He was going to go back home and call in every favor he had to get me custody of this little girl. I threatened him if he didn't get it done and he held up his hands.\n\n\"You know I love you, Sully,\" he said. \"I'll make it happen. I just hope you know what you're doing. This isn't some stray dog you're adopting, she's a child.\"\n\n\"I know that, you idiot,\" I told him. \"What, you don't think I can take care of her?\"\n\n\"I know you can take care of her,\" he said. \"This just isn't you, Sullivan. You're a predator. You're a hunter, not a mother. What's going to happen in a year when you get itchy feet and need your adrenaline fix? What's going to happen to Landry? I just don't see you at soccer games and taking cookies to home room parties.\"\n\n\"You don't know shit,\" I told him. \"I'm not just tits and muscles, John. I'm a woman. Maybe I've just been waiting for the opportunity to drive a minivan and go to parties.\"\n\nHe laughed. \"Okay, Sullivan, I'll play. You just let me know how it's going. If you want to work, we'll figure something out. I trust you.\"\n\nI hugged him. \"Thank you, John. I really, really want this. Help me and I'll owe you.\"\n\nHe looked at me. \"Your daddy would be proud of you,\" he said.\n\nHe left and Landry and I spent the day talking. It amazed me that a three-year-old had so much to say and that I would like to talk to her so much. She asked for Mama several times that first day. She did that for about a month and then it got less and less frequent until she started calling me Mama. We watched TV and went to dinner together. We slept together and by the fourth day, her bruises started to fade and she wasn't so sore anymore. She worried about her tooth until I told her it was a baby tooth and she would have lost it anyway. It was off to the side and it didn't show unless you looked in her mouth.\n\nI fell hopelessly in love with her and she made it plain she felt the same way about me. I texted Julian and Merlin every day and I sent them a picture of Landry. It seemed like they didn't know quite what to make of her, but I knew that once they met her they'd love her as much as I did.\n\nWe caught a charter flight home as soon as John got me temporary custody of Landry. Halcyon was very concerned about her and they made an offer to set up a trust fund for her with me as the administrator. Their insurance was going to make her a very rich little girl, but I knew she didn't care about that now. I'm sure she would have traded it all away for one day with her parents. She was very excited about the flight home and really looking forward to seeing where we were going to live.\n\nI have a pretty nice place. It has a wall around the back yard and a pool. I have four bedrooms and five baths. The patio out back is my favorite place to hang out. I have a nice grilling area with a refrigerator and a bar. When Landry saw it out the patio door, she wanted to go out there right away.\n\nThe previous owner had a dog and there was a doghouse in the corner I'd never bothered to get rid of.\n\n\"Do we have a dog?\" Landry asked.\n\n\"No, baby, do you like dogs?\" I asked her.\n\n\"Yes,\" she said. \"Can we get a puppy?\"\n\n\"What kind of puppy would you like?\" I asked her.\n\n\"A big puppy,\" she said. \"I don't like little dogs. Them baak all the time.\"\n\nI laughed. \"Yes, I've noticed that. We don't want a barking dog to aggravate the neighbors.\"\n\n\"No,\" she agreed. \"When can we get a puppy?\"\n\nI could tell she wasn't going to forget about this. \"We can look for one tomorrow. I have some people I want you to meet, Landry.\"\n\n\"Nice people?\" she asked.\n\n\"Very nice,\" I told her. \"There's a man named Julian and a little boy just older than you. His name is Merlin.\"\n\n\"Okay,\" she said. \"Do you love them, Sully?\"\n\n\"Yes, I love them very much,\" I said. \"I hope you love them, too.\"\n\n\"I love you,\" she said.\n\n\"I love you, too, honey, but we can love lots of people, right?\"\n\n\"Will you still love me if you love them?\" she wondered.\n\n\"Of course I will,\" I said. My eyes were tearing up. \"I'll always love you, Landry, no matter what happens.\"\n\nShe tucked her little hand in mine and we went inside. I showed her where her bedroom was and where all the bathrooms were. We took a tour of all the rooms and wound up in my bedroom.\n\n\"I want to sleep with you, Mama,\" she said. It was the first time she had called me that and it made me cry like a baby. I knelt down in the floor and hugged her until she giggled and told me not to hug her so tight, she needed to pee. I let her go and she ran off to the bathroom. She came back and I caught her and hugged her some more. The doorbell rang and we went to answer it. It was Julian and Merlin. Merlin ran and threw himself on me right away.\n\n\"Sully, you're home!\" he shouted. \"We've missed you so much! Are you going to stay home? Can I spend the night again? How long can we stay?\"\n\nI hugged him, realizing how much I'd missed him. Landry was standing shyly behind me and I pulled her around and introduced them. Merlin acted like they were old friends and dragged her off to watch a movie he had brought. I stood up and Julian was watching me with a twinkle in his eye.\n\n\"What?\" I asked.\n\n\"Nothing,\" he said. \"I'd forgotten how hot you are.\"\n\nI walked over and pressed myself against him and tried to give him the hottest kiss of my life. He seemed to enjoy it. His knees sagged a little and his eyes were glassy when I let him go.\n\n\"Did you bring an appetite?\" I asked.\n\n\"Well, I certainly found one if I didn't,\" he grinned.\n\n\"I'm cooking,\" I told him. \"You take the kids swimming. By the way, we're getting a dog.\"\n\nHe looked a little puzzled. \"Landry likes puppies,\" I said. \"Big ones, so it will be a big dog.\"\n\nHe laughed. \"I see. Sullivan, are you keeping Landry?\"\n\n\"Yes, I am,\" I told him. \"She called me Mama today.\"\n\nHe came over and squeezed the air out of me. \"My tiger is sheathing her claws.\"\n\n\"You have no idea,\" I told him. \"Merlin is spending the night. I'm going to put him and Landry in the twin beds in the sunroom. When they get to sleep, are you going home?\"\n\n\"Really? God no, Sullivan. I'm hoping to never go home again.\"\n\n\"Well, then behave yourself and take them swimming and wear them out,\" I told him.\n\nI grilled pork chops and we had salad, baked potatoes and broccoli for dinner. The kids complained about the broccoli, but we made them eat three bites.\n\nWe got on the internet and looked at puppies after dinner. I had dogs when Dad was alive. He loved Bull Mastiffs. We always had one and I remembered how much I loved them. I didn't like the look of any of the puppies we saw. Landry was sitting on my lap holding my laptop and Julian and Merlin were using the desktop. Landry pointed at a picture. \"Click on that one, Mama,\" she said. I saw Julian look over at me when he heard that. He winked and we clicked on the picture.\n\nIt was a Dogue de Bordeaux puppy and he was adorable. \"Can we get that one, Mama?\" she asked. \"I want that one.\"\n\nI checked it out. Damn, it was expensive! They wanted $2,500 for the little thing! I looked at the parents and they were absolutely perfect. I heard Merlin tell his father he liked the black one. Landry and I went over to take a look. They had found a Neapolitan Mastiff puppy. Merlin and Landry argued for a while over which one to get. Finally they appealed to higher authority. They asked Julian.\n\n\"It's Landry's puppy,\" he said. \"She should get to choose.\" That had the result of making a very sad little boy. I picked him up and hugged him.\n\n\"Julian, why can't Merlin have a puppy, too?\" I asked him.\n\nHe looked startled for a minute. \"I never thought about it. A puppy is a lot of trouble,\" he said.\n\nLandry climbed up in his lap. \"Please, Julian,\" she said. \"Merwin weally want a puppy.\"\n\nHe laughed. \"How can I say no to that? Okay, but there are some rules.\"\n\n\"What rules?\" Merlin asked.\n\n\"You two have to take care of them,\" he said. \"You have to feed them, water them, take them for walks and clean up after them. If they need to go out in the middle of the night, you have to take them. The main thing, you have to pick up their poo.\"\n\nThey both looked disgusted. \"Don't like poo,\" Landry said. \"Nasty, won't touch it.\"\n\nWe laughed. \"You won't have to touch it,\" I said. \"You can use a little shovel or a plastic bag. We can't have poo all over the yard to step in. Will you two follow the rules?\"\n\nThey both agreed and we went puppy shopping the next day. Of course, they were fifty miles apart but once we saw those little guys we fell totally in love with them. They were like little chubby bears. They had huge feet and heads and they were wrinkly and cute as hell. I dropped $5,500 on them. Julian told me he would pay me back, but I insisted they were gifts. Besides, I made more money than he did. We took them to the pet store for food, beds, food and water dishes and leashes. I made an appointment for them to see the vet and we played with them all day.\n\nIt was quite a day. I was walking on clouds all day. The previous night had been something out of this world. We read the kids a story. Julian read to Landry and I read to Merlin. Landry fell asleep while they were reading and it didn't take Merlin long to follow. When I got to the living room, Julian had wine poured and he was sitting on the sofa. He patted the cushion next to him and I went and sat down. I took a few sips of my wine and we talked comfortably for a while. I folded my legs up under me and snuggled up against him. He was warm and squishy and he wrapped one of those massive arms around me. I felt like a little girl.\n\nWhen he sat his glass down and took mine I knew what was coming. He took my chin in one of those huge hands and tilted my head up, looking into my eyes.\n\n\"Sullivan, I'm totally and hopelessly in love with you,\" he said. \"The day I met you and you pulled a gun on me, I knew I was lost. Everything you've done since that day just pulled me in deeper. You're the most gorgeous, sexiest, hottest, wildest and most exciting woman on the planet. I'm going to kiss you now.\"\n\nThat kiss set me on fire. I hadn't been with a man in more than three years. Sarah had been my last lover and for a girl that likes sex as much as I do, it had been a long dry spell. I ran my fingers through his hair, tangling them in that mop of curls and crushing my lips with his. I crawled over onto his lap, straddling his legs. That pushed the soft cotton dress I was wearing up over my thighs and he ran his hands over the bare skin, making me shiver.\n\nI unbuttoned his shirt and pulled it out of his pants, kissing his chest, licking his nipples and I slid downward. He didn't have any body hair. I found that very erotic, just smooth olive skin over bulging muscle. I unbuttoned his pants and tugged on them. He lifted his hips and I slid them down and off over his shoes. They were slip on and I took them off. He was wearing boxers and the front was tented. I knelt on the rug at his feet and opened the single button on his fly. The most beautiful cock I'd ever seen sprang out and hit me in the chin. He wasn't cut but the head had emerged and I gave it a swipe with my tongue. He leaned back and moaned.\n\n\"Sullivan, if you do that I'm going to cum in seconds,\" he said. \"It's been a long time and never with anyone as hot as you.\"\n\nI went to work. He was very big, just like everything about him. I was a little worried. It had been a long time for me too. He wasn't huge, like porn star huge, but it was very big. I'd tried huge once and I remembered the experience vividly. It had been the most painful and uncomfortable thing I'd ever done and I'd vowed never to repeat it. The asshole had just pounded away on me and I finally had to hurt him to make him stop. I never saw him again. I discovered I'd never be a size queen that night. Julian's cock wasn't that big, but it was big enough to worry me. I felt like he'd be gentle and that gave me some confidence. I was going to get him off and then some of that urgency would be gone and he'd last longer.\n\nI sucked about four inches inside and worked on it like a lollipop. He groaned and watched me. I looked up into his eyes and gradually took more and more. I felt him hit the back of my throat and stifled the impulse to gag. I swallowed a couple of times and got him in my throat. When I felt my lower lip touch his balls, I swallowed again and sucked as hard as I could, breathing through my nose and milking his balls with my fingers. I felt him stiffen and the first jet of cum hit the back of my throat. I backed off until just the head was in my mouth, filling it up with thick ropes of cum. I milked the shaft with my hands, feeling the big tube on the bottom pulsing as I tried to keep up with the flow. I got choked a little and my mouth overflowed, trails of semen running out the corners of my mouth. I got my groove back and worked on him until he pulled me up and away. I sat back on my heels and looked at him, searching for approval on his face.\n\nHe gave me the biggest smile I had ever seen, reaching out and catching the cum running down my chin with one finger. He cleaned me off and held up his finger, wondering what to do with it. I took his hand and sucked his finger inside my mouth, opening it to show him the cum on my tongue before swallowing it down. He grabbed me and pulled me chest to chest with him, kissing me deeply and then all over my face. I had never been with a man who would do that. I knew he had to be tasting himself, but it didn't seem to bother him and I sure wasn't going to complain.",
        "\"You goddess!\" he said when he got his breath back. \"Christ, I've got my own dusky goddess! God, you're incredible, Sullivan!\"\n\nHe picked me up in his arms. Once again, I felt like a little girl as he carried me into my bedroom. He sat me down at the foot of the bed and lifted my dress over my head, leaving me in only my panties. \"Turn around for me,\" he said, his voice hoarse and rough.\n\nI did a slow little turn. I had on a thong and he stopped me with my back to him. When he wrapped his arms around me I could feel all that skin and it melted me. His hands came under my arms to cup my breasts and he rolled my nipples between his thumbs and forefingers. A moan forced its way out of my throat and he sunk his fingers into my breasts, testing their resilience, before sliding down to squeeze my ass. I flexed my cheeks and he chuckled. \"You have the most amazing ass I've ever imagined,\" he whispered in my ear. \"Do you work out?\"\n\nI giggled and he pushed me forward into a crawling position on the bed. I went to my elbows, pushing my ass up at him and he eased the thong down to my knees. I raised them and he pulled it off. I felt him moving and glanced back. He had gone to his knees and his face was inches from my pussy. I could feel his breath, hot and humid. He kissed both cheeks and I started when his tongue touched my pussy for the first time. He worked on me like a pro and I turned into a quivering bowl of jelly. It felt so erotic and so exquisitely torturous as he licked at me from behind. I'd never had that done to me before. His tongue touched my rosebud, making me shiver, and returned to caressing my lips, gathering up the flood of juices I was making. He let me know he wanted to flip me over and he was between my thighs, pushing me wide and bending to tongue my clit. It felt engorged, like it was a miniature cock, and I could feel his lips moving over it as his tongue flipped the tip up and down and from side to side. This was more incredible foreplay than I had ever imagined. I felt a fat finger penetrate and it moved around inside, caressing my inner walls before curling up inside me and setting me on fire. I felt like my whole body was exploding! I could hear a woman crying out her ecstasy and I was startled to realize it was me. I came for what seemed like minutes. Just as my contractions were beginning to recede, I felt another fat finger pushing its way inside my ass. That incredible sensation set me off again and I thought I was going to pass out.\n\n\"Stop, Julian,\" I pleaded. \"I can't stand anymore!\"\n\n\"Cum for me again,\" he whispered, jamming those fingers deeply inside me and attacking my clit with his tongue again.\n\n\"No, I can't!\" I began to squirm to get away. Second fingers joined the first and stretched me, sending flames through my body again and I discovered that I could. The orgasm just kept building in intensity until I heard a roaring in my ears and my vision shrank to a tiny point and went dark. I must have passed out because the next thing I remembered he was lying over me, kissing my lips briefly before dropping down to torment my nipples. Aftershocks of orgasm were still shaking me and his lips and tongue on my nipples set me off again. It wasn't soul destroying like the previous two but its slow burn just made me a quivering wreck. My emotions overwhelmed me and for some reason I began to cry.\n\nHe moved back up and kissed all over my face before claiming my lips. I could taste my juices and it was incredibly arousing.\n\n\"You okay?\" he asked.\n\nI nodded. \"Jesus, Julian, I never came like that before in my life!\"\n\n\"There's more,\" he said and I felt his cock, hard as steel against my dripping pussy lips. I felt them part and the head of his cock pushed inside. \"Do I need a condom?\" he asked.\n\n\"No,\" I shook my head. \"Just fuck me, Julian.\"\n\n\"No,\" he said. \"We're going to make love. We're going to make love for a long time, then we'll fuck.\"\n\nI giggled and he pushed farther inside. The pain I had feared never materialized. I guess I was so wet and so ready, stretched by his fingers and so wide open that I only felt stuffed. I was as full as I wanted to be, maybe a little more, but there was no pain, only the feeling of being completely and comfortably stuffed with a big, fat cock. The friction was delicious and we began a long, slow, sweet ride. It felt like he was touching my soul and I came for the first time in about three minutes. The orgasms were continuous after that and I knew I would never be the same after this. I was an addict and he was my drug. I could never let this man out of my life, my bed, my pussy. I was going to do whatever it took to have him. I was totally and completely lost and only he could ever satisfy me.\n\nHe made that slow, sweet, agonizing love to me for probably twenty minutes and I came a million times. He withdrew and flipped me over, straddling me and mounting me from behind, that delicious cock so deep in me, I could feel it bumping against the back of my pussy. It was driving me wild.\n\n\"God, Julian, you're going to make me cum some more,\" I groaned. \"Oh my God, oh my God, oh fuck, Julian!\"\n\nHe pushed in to the hilt, holding the head of his cock embedded, and I groaned out the beautiful torment. He held there for a minute and began to thrust again. I tried to form words but my brain was scrambled. My emotions whirled and I sobbed out my ecstasy as I came again and again, thrusting my ass back against him. I thought I was going to die! One last sprint of rapid thrusts sent me over the edge again and I felt him thrust deep and the pulsing of his ejaculation, deep inside me, his semen boiling against my walls and making me nearly hysterical with joy and pleasure. His groans joined mine and he slowed to a stop, his cock embedded in my soul, and we rested for a minute.\n\nHe was very heavy on me and soon he rolled to his back, pulling me half over him with my cheek resting on his pectoral muscle. I was very nearly destroyed and I shook and sobbed into his chest. \"God, Julian, you... I... I'm lost! I'm so in love with you and so afraid. Please tell me this is something you want.\"\n\n\"I've never wanted anything so much in all my life,\" he said. \"I love you, Sullivan. I'm going to love you for the rest of my life.\" He petted my hair and cupped my ass in one hand. The other soothed me, stroking my hair and up and down my back until I was calm. We got up after a bit and took a shower together, slipping back into bed naked and cuddling together like school kids. I fell asleep in his arms with the knowledge that I never wanted to be anywhere else.\n\nI woke up in the same place and just luxuriated in being in the arms of the man I loved. He moved and I knew he was awake. He stroked me and gave me a squeeze. \"I love you,\" he said. I felt his lips press against the top of my head. \"We better get dressed before two munchkins come in,\" he said. I didn't ever want to move, but when he got up and pulled on his boxers I put on some pajamas. I found him a t-shirt that was too big for me but too small for him and we got back in bed. Sure enough, about ten minutes later I heard the patter of little feet. Landry peeked in and came running when she saw we were awake. She climbed in between us and we hugged that precious little form, making a Landry sandwich. She loved it and giggled like a hyena.\n\n\"Mama, we going to get a puppy today,\" she said. I sighed. She hadn't forgotten. It wasn't long before Merlin joined us and we had an impromptu wrestling match on the bed. I tickled Landry into submission and then we worked on Merlin until he was shrieking and begging.\n\nWe ate breakfast and went to get the puppies. The boys wound up spending five days with us. The days were filled with the sound of children's delight and puppy love and the nights with a different kind of love. I'd never made love so many times in so short a period in my life. I was sore as hell after that first day but I wanted more, and once we got going I forgot about that and we fucked like bunnies.\n\nThe kids named their puppies right away. The Bordeaux was Ripley, or \"Wipley,\" as Landry called him and the Neapolitan was Seth. They grew like weeds and they got along like brothers. Seth was lazier than Ripley was but they both stayed active. By the time they were a year old they were both over 140 pounds. Ripley topped out around there but Seth went on to about 160. He was taller but not as wide. They both drooled incessantly and kept the kids busy cleaning up after them. They didn't mind, they loved those dogs and they were jealously guarded by two huge beasts. They both lived with Landry and me. The boys didn't have a fenced yard.\n\nThat wasn't a problem for long. They moved in with us six months after we got the puppies and Julian proposed to me a year later. We got married on a beautiful June day and my life became a fairy tale. Julian insisted that I stay out of the security business. I had my PhD by that time and I had no trouble getting a job at the U of A teaching economics. I started writing a book on the subject after I had been there a year, and it was a modest success. Being a published author got me moved up the food chain and I got the department chair when the woman who held it moved to George Mason.\n\nWe wanted another baby and when Landry was five, I stopped taking birth control. I don't think it took two weeks before I was puking my guts up one morning. I thought I had a bug and went to the doctor. I nearly peed my pants when he told me I was pregnant. I was a little panicked, but Julian and the kids were so excited that I couldn't help catching their enthusiasm. When Lauren was born, she was the most beautiful little thing you could ever imagine. She looked like me quite a bit. Her skin was lighter and she had green eyes. The combination was just stunning and by the time she was five, she had gotten several offers to do modeling work.\n\nJulian wanted her to do it and I let her do a few shoots. Once she had her foot in the door, I kept the shoots down to twice a year. We hired a nanny/housekeeper and I went back to teaching after Lauren was a year old. Julian got that defensive coordinator position and we figured it was just a matter of the head coach moving on before they offered him that job.\n\nI had done two security jobs since we had been married. Neither one involved me being in the field but I still got that same rush out of running the show behind the scenes. I still kept my hand in and I attended two training camps a year.\n\nI hadn't really thought about a job for more than a year. I was on my way home from school one afternoon. Julian was gone to LA for a game. I thought I'd take the kids out to eat and maybe to a movie. My Bluetooth on the car told me I had a call. I punched the hands free button. It was Julian.\n\n\"Sullivan, where are you?\" he asked.\n\n\"I'm about two minutes from home, baby,\" I said. \"Why?\"\n\n\"Something's going on at home.\" He sounded worried. \"Maria called me and said she couldn't get hold of you.\"\n\n\"I was outside the car getting gas,\" I told him. \"What do you mean something's going on at home?\"\n\n\"Maria said there's been a van parked outside our house all day and that two men just jumped over the back wall. Get there, Sully! Are you still my tiger?\"\n\n\"If my babies are in danger I'm going to fuck somebody up,\" I told him. \"I'm hanging up, Julian. I'll call you as soon as I can.\"\n\nI put the accelerator to the floor and the supercharger on my Charger Hellcat howled. 707 horsepower threatened to break loose from the pavement. I was pulling up across the street in less than a minute. There was an unmarked white van with the doors open and the engine running sitting there. I checked it and it was empty.\n\nI popped the trunk of my car and pulled the matched set of .40s out of their hidden compartment. I stuffed two clips in the front of my bra and started across the street. I heard someone scream inside and there were two shots. I was praying that I wasn't too late. I could hear the dogs barking and it sounded like they were fighting something. There was another shot and one of the dogs yelped. They were killing my dogs! The door was locked so I shot the lock out and rolled inside. There were three men and two women inside. One of the men was holding Maria in between himself and Seth while the other guys were trying to get a bead on him.\n\nRipley was lying on the floor in a pool of blood and there was a guy down there too with his face half torn off. I saw Ripley move and he sank his teeth into the calf of the man holding Maria. There was no sign of the kids. The man holding Maria screamed at Ripley, tearing at his calf and Maria got away. Seth was on him before anyone could move and I saw those huge jaws crunch down on the guy's face. I was rolling and shooting. I got both the other guys that were still standing center mass and they went down. The woman was behind a table and I couldn't line up on her torso so I shot her in the leg. She screamed and went down. There was a horrible bubbling moan coming from the guy the dogs were ripping up.\n\nI called them and Seth came and sat beside me. Ripley's back legs weren't working and he tried to drag himself over. I ran over to him and held his head in my lap. \"Good boy,\" I told him. \"You're a good, good boy.\" He whined and licked my hand.\n\nMaria was screaming hysterically and I yelled at her. \"Maria, shut up! Where are the kids?\"\n\nShe looked around wildly. \"I locked them in the laundry room,\" she sobbed.\n\n\"Go get them and call 911,\" I told her. \"Get them in here now!\"\n\nI heard her knocking on the door and telling the kids that it was okay and that I was home. \"Sully wants you,\" she said.\n\nThey came running in. They took one look at Ripley and the girls burst into tears. Merlin ran over and knelt by me and the girls followed him. \"Mom, he's going to be okay, right?\" there were tears in his eyes.\n\n\"Please say he's going to be okay!\" Landry knelt and petted him.\n\n\"I don't know,\" I told them \"He's hurt badly. He may have saved our lives. Hold his head and talk to him.\"\n\nI slid out and she took my place. Lauren petted him and Seth came over and licked his face. I stood up and walked over, checking the four men. They were all in a better place. The woman was trying to drag herself toward the patio door. When I got a look at her face, I saw who it was. It was Staci, Merlin's mother. I guess she had some kind of twisted mother or revenge thing going on.\n\nEvidently, she'd served her time and decided to make a call on her ex and her son. It was going to be her last call. I didn't want to take a chance on her coming back again. I got a pillow off the chair and double tapped her in the face.\n\nMerlin and Lauren jumped up when they heard the shots. \"It's okay,\" I told them. \"They hurt Ripley and they would have hurt you too. She died in the fight. Do you understand?\"\n\nThey both nodded their heads. \"Say it!\" I told them.\n\n\"She died in the fight,\" they said.\n\n\"Mama, we've got to help Ripley!\" Landry called.\n\nI went back and knelt by them. I could hear sirens screaming in the distance. Maria had called. Ripley rolled those big amber eyes up at me. \"Good boy,\" I told him. I put my hand down and he licked it. He rolled his eyes up at me again and they went glassy. He was gone.\n\nI tried to pull Landry up but she fought me. \"No! No, Mama, he's going to be okay! Please Mama, do something!\"\n\nI'd never felt so helpless in my life. I knelt and held my baby tightly. \"He's gone, sweetheart,\" I could feel the tears trickling down my cheeks. \"He's gone. He was a good boy. Even hurt as badly as he was, he attacked a man that was going to shoot me. He saved my life, baby. He was a good boy. We'll always love him, but he's gone.\"\n\nShe threw her arms around me and wept bitter tears. Seth became very agitated and he nuzzled her face, licking her with that big pink tongue. She giggled through her tears and hugged his huge head. \"What are we going to do, Seth?\" she wept. \"Your brother is gone. I won't let you be lonely.\"\n\nThe police arrived, a day late and a dollar short, as usual. They actually pointed their guns at us and made us lie on the floor in our own house! We finally got things straightened out when a Detective with a discernible IQ arrived. I took Maria, the kids and Seth and we checked into a hotel. Julian flew in a few hours later and he joined us.\n\nIt took six months for the whole situation to go away. Staci had been released from prison and hooked up with some of her old running mates. We never did find out exactly what she had planned. None of them were talking. The dogs had killed two of them and I got the rest. I guess they hadn't counted on three hundred pounds of fiercely loyal war dogs to be waiting for them in the house.\n\nThe day they closed the case Julian and I took Landry out of school. We took her out to a ranch in the hills and there was a box waiting for us at the gate. I told her to get out and open it. She gave a cry and looked back at us when she took the top off. She reached down inside and pulled out a beautiful black Cane Corso puppy with a red bow around his neck.\n\nShe came running back to the car with him. \"Dad, Mama,\" her face was beaming. \"Is he really mine? Isn't he beautiful? What is he? What's his name?\"\n\nJulian pulled her in and hugged her. \"Yes, honey, he's yours. He's a Cane Corso, a kind of Italian Mastiff. He is beautiful, but he's waiting for you to name him. I know you'll never forget Ripley and we don't want you to, but he's a new friend. I think you'll come to love him just like you did Ripley.\"\n\n\"I love him already,\" she was so excited. \"I want Merlin and Lauren to help us name him.\"\n\nWe drove back home and the other kids were just as excited as Landry had been. They named him Goku after their favorite cartoon character. We had dinner and I was washing the dishes when Julian came into the kitchen. He leaned against the doorjamb and watched me.\n\n\"What?\" I shot him a look.\n\n\"Nothing,\" he said. \"I just forget how hot you are.\"\n\n\"Yeah, right,\" I said. \"I'm hot with my hands in dishwater and an apron on.\"\n\n\"I'm thinking about taking it and everything else you've got on off and bending you over the counter there,\" he said. \"I think I've domesticated my tiger, but I just want to check and see.\"\n\nHe came over and slid his hands up under my shirt, cupping my breasts and pinching my nipples gently. I knew he was going to be fun the first time I saw him."
    ],
    "authorname": "blackrandl1958",
    "tags": [
        "violence",
        "action",
        "adventure",
        "romance",
        "true loving wife",
        "cheating wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/domestication-2"
}