{
    "title": "Paranormal Research Club Ch. 08",
    "pages": [
        "This chapter is largely devoted to the protagonist having sex with multiple female demons. Please remember that this chapter is Erotic Horror, and not intended for the squeamish or faint-of-heart. While there isn't actual incest occurring in this chapter, don't be shocked if you see references to it. There is some graphic violence towards the end, and there is a demon that threatens to violently assault a woman. You have been duly warned. All sexually active characters are 18 years of age or older. All rights reserved, and thank you for reading my work. You, dear reader, are the reason why I write. \n\n*\n\nI walked out to the barn, carefully clutching the heavy glass perfume bottle in both hands. I was grateful that it hadn't broken inside the house near the ladies, and I didn't want to risk allowing it to break before I was ready to properly deal with the succubi that it contained. I ducked beneath the flapping strand of plastic yellow police tape and pushed the rotting wooden barn door open. The hinges were rusted and stiff, and they groaned ominously as the door slowly creaked open. I had the odd feeling that the sad old barn itself wished to deny me entry and be left alone with its tragic memories. \n\nI entered into the large, dimly-lit space within the barn. There should have been plenty of ventilation blowing through the gaps in the decaying walls, but the air felt heavy, musty, and unwholesome. Everything about this decrepit old barn made me feel unwelcome. I peered into the dark corners where the light faded to reveal nothing but shadows and vague, indistinct shapes. A chill ran down my spine as I carefully scanned my surroundings.\n\nI didn't sense Enyo's presence, which was good. I looked forward to getting to know the daughter that I had been forced to father the previous night, but her companionship here at this moment would serve to do nothing but complicate an already very dangerous situation. If I already had to single-handedly deal with four succubi in order to revive Dionysus, then it wouldn't be difficult at all for a goddess who wished to thwart my plans to do any number of things that could cause me trouble. And if Enyo did not know what my plans were, then I didn't want her getting involved and getting hurt. I chalked the absence of Enyo's presence to some enchantment or scheme on the part of Ishtar, and hoped that I could deal with the demons before Enyo found me and figured out what was occurring.\n\nI moved a pile of rusted antique tools from a section of a stained, splintered workbench, and began removing my clothes. I folded them neatly into a pile on the battered antique wood, ensuring that my pants were on top in case I needed to access anything in the pockets. I felt increasingly vulnerable as I removed layer after layer of my clothing. I stood naked in the center of the room and began stretching my muscles out of old habit, as though expecting an exercise session or a martial-arts match.\n\nI looked down at the bottle in my hand. The polished glass reflected the dusty beams of light that filtered through the cracks in the rotten walls. Beneath the glass, the dark contents writhed and swirled angrily. Something flesh-colored pressed against the glass from within. The succubi wanted out. I took a deep breath, and wondered if it was appropriate for me to pray for my safety. I remembered what Skagematuck had told me about the prayers of Erin, Rachelle, and Cherise, and I hoped that they were remembering me now. I decided that a brief prayer wouldn't hurt, and dedicated a moment to the task. If nothing else, it would help to clear and focus my mind on the task at hand.\n\nI hefted the bottle, still surprised at how heavy it was. I tossed it into the air, and caught it. I smiled, watching the seething inky vapors swirl furiously against the glass. The demons didn't appear to enjoy having the bottle that contained them tossed about. Considering what they had done to the family that lived at this house, it was difficult for me to feel too sorry for them. I raised the bottle over my head, and then slammed it down hard against the dirt floor.\n\nThe bottle did not simply break. It literally exploded with a sound like a firecracker, releasing a churning cloud of noxious-looking black smoke that quickly filled the large barn with an impenetrable, swirling darkness. The vapors resembled the smoke from a pile of burning tires in appearance, but the smell was something different entirely. My cock was rock-hard even before I consciously recognized the delightful smell of sex that filled the air. I breathed in deeply, inhaling the scent of glorious, enticing, fertile feminine sexuality as the dark clouds rubbed against my nude body in an increasingly physical manner. The air was slowly clearing as I felt lips against my chest and hot breath against my penis. My hand brushed soft feminine buttocks. \n\nThe air was now clear enough for me to see around myself, and my breath caught in my chest as I saw the four impossibly beautiful figures that surrounded me. I knew that demons have no bodies in a truly physical sense of the term, and that what seemed to be physical bodies could only be a mockery of matter and mass. Even so, what manifested in front of me seemed every bit as real as anything that I had ever beheld in my life. \n\nThe succubi looked like obscene primeval archetypes of ancient, powerful, and unrestrained raw female sexuality that was frightening in its intensity, but which irresistibly attracted me to them. I now understood why the Aztecs had mistaken one of these creatures for a goddess. The bodies of the succubi appeared to have been perfectly designed for the purposes of seduction and the raw, carnal act of sex. Their shapely legs led up to broad hips and glorious asses, flat tummies and large breasts with prominent nipples. Every curve of their bodies was constructed perfectly for the purpose of luring and ensnaring their prey, driving any man insane with uncontrollable lust.\n\nMy eyes traveled their bodies, which were disturbing in their sheer perfection. Any normal, live woman will have some sort of imperfection in her body, and it's part of what makes her human. Somewhere, she will have a pimple, a mole, or a birthmark, a scar, or some cellulite. These women -or hellish mockeries of women, I reminded myself- did not even have a single wrinkle or goosebump on their flesh between the four of them. It was as though I were beholding living images that some demonic artist had airbrushed for the cover of a magazine. Their legs were exquisitely long and shapely, their eyes and breasts too sublimely shaped and flawless to be credible. I have heard that demons frequently display some sort of physical deformity to reflect their spiritual depravity. In these women, their impossibly exaggerated beauty could almost have qualified.\n\nTwo women were standing on either side of me, their soft hands holding me in place with the gentleness of a predator that has no fear that her prey will resist or flee. One of the two women was a sublimely curvaceous beauty with dusky skin, luxurious black hair, and beautiful dark eyes that spoke of Latin American ancestry. To her side was an adorable, petite, fresh-faced young blonde girl in her teens. She was short, slender, and athletic-looking. Her flawless skin and youthful green eyes made her look deceptively pure and innocent in spite of what I knew her to be. Although it was less visible on the Hispanic woman to my left, both of the girls had skin that was hot and slightly pinkish, as though they had just finished a very long, extremely hot bath. I deduced that these two women were the mortals that had been enslaved by Tlazlteotl and Queen Eisheth.\n\nBefore me stood a regal model of female perfection that could only have been Eisheth Zenunim, one of the beautiful and terrible Queens of Hell. Her ethereal grace and comeliness were breathtaking, and her image will forever be burned into my mind to fill my fantasies with wicked, sinful lust. She embodied the very concept of the sexy older woman, whose experienced and maternal body's raw sexuality and deceptively soft curves could overwhelm the common sense of any man. \n\n\"Relax, mortal,\" spoke Queen Eisheth Zenunim with a lewd smile, her voice hypnotic and soothing. Her dazzling, crystalline blue eyes fixed upon mine, drawing me into them. I felt as though I were staring into an immeasurably deep pool of cold, sapphire-blue water. \"I won't do anything to you that you don't want me to do. I promise.\" \n\nI doubted that Queen Eisheth had ever encountered any man who had not willingly given her anything that she had asked of him. Her long, glistening, platinum-colored hair flowed from beneath a gleaming golden diadem set with brilliantly sparkling fire-opals. Her face was splendidly ageless, neither young nor old, but endowed with a cold beauty that drew me helplessly to her like a moth to a flame. Her long, amber-colored robe was so sheer that it did nothing to hide her flawlessly voluptuous body as it flowed down over the fleshy mounds of her elegant breasts with their clearly visible nipples, and downward over her wide hips and round ass. She smiled sweetly, her wicked eyes gleaming with delight and anticipation. She stepped towards me and paused, looking into my eyes. A chill ran down my spine. \n\n\"Tlazlteotl?\" Queen Eisheth said in a quizzical tone to a figure that was standing behind me.\n\n\"I can't read his mind either, your highness,\" the Aztec goddess of sexual sin replied. \n\nI glanced over my shoulder at the Aztec goddess. Tlazlteotl had the beautiful dusky skin and long, glossy black hair of her warm homeland, dark eyes that glittered with seductive malevolence, and a wickedly alluring smile. She was nude aside from gleaming, intricately wrought golden ornaments, some of which pierced her dark nipples and her engorged clitoris. Her wide, womanly hips and the swells of her gorgeous ass swayed as she walked over to stand close to me, just within my personal space.\n\n\"Interesting,\" mused the platinum-haired succubus. \"My name is Eisheth Zenunim, Queen of Whoredom, eldest and mightiest of the succubi, and one of the four glorious Queens of Hell. I must confess that I haven't met a mortal whose mind I couldn't read since the days when King Solomon himself was my plaything. He was one of the very few mortals that have ever indulged in the pleasures of my body and lived to tell the tale. Night after night I drank of his great soul until I was satisfied. He was a man with seven-hundred royal wives and three hundred concubines- a thousand women standing ready to pleasure him in any way he wished at any moment of the day or night! Still, he neglected them all as night after night he welcomed me back to his royal bedchamber, his body burning with dreadful need even as he grew more feeble by the day. He forced his greatest craftsmen to create golden idols in my honor, works of perfect craftsmanship such as the world had never seen previously or since. I remember the horror of the old priests when Solomon commanded his subjects to burn incense before my idols and hold glorious royal orgies in my name.\" Queen Eisheth chucked softly and smiled at her fond memories of corrupting the long-dead monarch.\n\n\"Like King Solomon, your mind is very much a closed book to me and I can sense a great deal of spiritual energy within you, but can tell very little about it. I cannot even say for certain whether I am sensing four souls within you, or perhaps five and maybe even vestiges of a sixth! I could almost swear that I can detect traces of at least one deity's essence flowing in your blood. You brought holy water and a blessed rosary with you, but you aren't ready to use them, and you are most certainly not a priest of the Abrahamic God. Trust me, I would be able to tell. The fact that you have removed your clothing before we arrived tells me that you know who we are, and have already agreed to give us what we want. That's actually a bit of a pity; seducing my prey is my favorite part of the hunt. I love watching faithful husbands struggle to be true to their beloved wives and their wedding vows, and holy priests begging their God for the strength to resist me. It makes the inevitable moment when they surrender to their lust and give themselves to me for eternity all the sweeter.\" \n\nThe succubus looked at me, smiling and tilting her head with a proud gesture that displayed the graceful curves of her slender neck. \"Would you mind telling me who you are?\" Her voice was friendly, natural, and conversational. But her sparkling blue eyes were as cold as distant stars. She smiled as she walked towards me, her shapely legs carrying her lovely body closer. \"I won't take anything from you that you don't give me freely. But by the time we are done with you, you will be ready to give me anything I ask. You will beg me for the privilege of forever being my slave. I can promise you that.\" She smiled arrogantly, but there was a fearful frankness to her words, and I knew with terrible certainty that she was basing them upon many centuries of experience.\n\n\"My name is John,\" I answered, accepting the goddess' friendly handshake. Eisheth's hand felt warm and soft as it pressed against my own, and it was difficult to believe that this was not real flesh. It was a mockery of flesh, an illusion. I was feeling an illusion of skin, stretched over counterfeit flesh that was nothing but the deceptive projection of a soulless, incorporeal abomination that lacked any true physical form. Even knowing what I did about the succubus, I fought a strong urge to tell her more about myself as her cold blue eyes met mine. I smiled and closed my lips, hoping that I was giving nothing away in my eyes. She stared at me for a long moment. Her efforts to read my mind and her frustration at not being able to do so were clearly evident. Ishtar had done her job well.\n\nEisheth smiled at me. \"Thank you, John. I have always felt that there is great power in a name. The ladies beside you are Kaitlyn, who was a mortal such as yourself up until two decades ago, and Maria, who has been Tlazlteotl's servant for about a century. Thank you for freeing us from the bottle. A meddling goddess put us there as a childish prank intended to interfere with a fun little project that these ladies and I were working on. As a result, there are two priests that missed out on the most amazing sexual experience they would have ever gotten to enjoy. Well, young man, the priests' loss is your gain. I would like to thank you for your help in the way that I know best.\" \n\nThe lovely succubus reached for her throat, where a beautiful, intricately crafted golden pin set with a brilliant fire-opal cabochon held her sheer amber-colored robe in place. I watched, spellbound, as she unclasped the golden pin. With a sultry smile, Eisheth opened her robe and let it slide softly to the dusty barn floor. The sheer silken fabric made a whispering noise as it slid gracefully from her body to pool at her feet, and my heart pounded in my chest as I saw her ample breasts revealed, and then the folds of her exquisite vulva. Her creamy breasts were magnificent, with proud, perfectly sized nipples. Her flawless stomach that was flat enough to be attractive, and yet soft enough to look feminine and sensual. Her hips were wide, leading down to long, flawlessly shaped legs. Between Eisheth's beautiful thighs, her vulva was adorned with tasteful, neatly-trimmed wisps of soft, platinum-colored pubic hair that did nothing to hide the alluring charms of her womanly cleft. Queen Eisheth was not merely desirable. She was irresistible.\n\nThe demon-queen smiled at my obvious appreciation of her body as she bent over, perhaps as much to show off her unspeakably perfect ass as to adjust the robe on the floor. \"Begin your work, servants,\" she casually ordered the other three, \"but remember that I shall feed first.\" I watched her perfect butt as she turned to walk a few steps away. She surprised me by turning and looking over her shoulder. \"Do you like my ass?\" she asked. \"If you're good and don't try to resist us, I can let you have me in whatever orifices you want. It's all the same to me. Every part of my body was designed with but one purpose in mind. And that one purpose is something that you will, no doubt, enjoy immensely.\"\n\nTlazlteotl and the two young succubi moved gracefully towards me. Both of the pretty young slaves regarded me with hunger, but also eyes that reflected pity and remorse. They believed that they were about to participate in an act that would doom me forever, even as it had doomed countless men before me. They had no way of knowing how differently things would go from the way that the elder demonesses had planned, and that sympathy in their eyes told me with absolute certainty that not only had they both once been human, but at least some of their humanity remained within them. \n\nTlazlteotl's dark eyes locked onto mine, and she moved her beautiful face close to my own. \"Eisheth is going to let us get you prepared for her,\" Tlazlteotl whispered in my ear. She gently trailed a knife-like point of a fingernail down my neck and across my chest. With a cold smile that revealed rows of perfect, white teeth, she wordlessly gestured to two other succubi that were holding me.\n\nThe two girls to my side stared at me with wide, frightened eyes, as though silently pleading with me to run. The look of despair in pretty young Kaitlyn's face quickly disappeared beneath a stern glare from Eisheth. Maria's fear for my safety and perhaps even horror at her own existence were clearly written on her features, and Tlazlteotl gloated over her as though she delighted in her slave's fear and loathing over what she had become. Glistening moisture was already appearing at the juncture of Tlazlteotl's thighs in anticipation of the wicked act that was to come. \n\n\"Prepare him, but don't you dare to feed before we do,\" the wicked Aztec demon-goddess said to the two younger succubi. Her voice was sweet, resonant, and mesmerizing. \"You two can do the work of getting him properly aroused, and then wait to see if Eisheth and I feel like sharing him with you later.\"\n\nTlazlteotl's beautiful young slave regarded me with dark, soulful eyes as though wordlessly begging my forgiveness for what she was about to do. Maria pressed her soft lips gently against my neck, her tongue tracing delicately against my skin. Her beautiful brown eyes silently pleaded with me to run and save myself. She didn't want to be part of killing and condemning me, no matter how pleasurable I might find the experience. She didn't know what I knew about my magical armband.\n\n\"It will be fine,\" I whispered as I cupped her dainty chin in my hand and kissed her softly on the lips. It had been years since I had regularly practiced my Spanish with anyone, and I hoped that I made sense when I whispered, \"Todo va a estar bien,\" in the most soothing tone that I could muster. I hoped that hearing words spoken in her own tongue would bring her some semblance of peace. As my saliva met and mingled with hers, an almost electrical jolt of raw lust pulsed through my veins. Something within her saliva was drowning out my ability to reason and think rationally, overwhelming my higher brain with the sheer force of some impossibly potent magical aphrodisiac.\n\nAs I kissed the beautiful young woman, she pressed me backwards into a dusty old chair that had apparently been gathering cobwebs in the barn for many years. Maria slid in front of me and moved to sit in my lap, facing away from me but looking back over her shoulder. Her long, glossy, black hair felt soft as it caressed my pectoral muscles and stomach. She reached downward and beneath herself until her delicate hand gently circled my cock, stroking my already rigid member into impossible hardness as she lowered her pelvis towards my lap. She stoked my cock with her hand, while rubbing my glans against her dripping-wet pussy. I could almost enter her, but she didn't let me. She had superhuman control over her body, moving rhythmically and smoothly as she ground her pussy and ass against my manhood.",
        "The beautiful, dusky-skinned succubus smiled over her shoulder at my arousal. Her smoky eyes melted my heart with their beauty, drawing me into them and filling me with the irresistible need to give myself to her. She was watching me, enjoying my reaction as she ground the delicious folds of her vulva and the warm, smooth mounds of her gorgeous ass against my cock. It felt amazing. She raised her hips to rub the length of her warm, moist slit against my penis, driving me wild with desire. Her fluids began to seep from her perfect body, coating my cock with wetness. As the enchanted aphrodisiac of the succubus' fluids began to soak into the taut skin of my engorged manhood, I felt a burning lust flood through my veins so powerfully that I feared it would drive me mad if I did not find relief soon. \n\nMaria smiled mockingly at me, her own lust overcoming her regret in being part of the act that she was certain would cause my death and eternal damnation. She teased me, placing the head of my cock against the pliable, dripping-wet flesh of her pussy. I was right against the opening into her depths. I had little difficulty understanding how a man could give himself to one of these demons, even knowing that he would be forced to pay for the act forever.\n\nTlazlteotl and Eisheth stared with lust-filled approval at the slave and I as the beautiful young woman skillfully used the head of my cock to masturbate herself while denying me entry into her warm tunnel. The air was thick with the sweet aroma of aroused feminine sex. I suspected that the succubi were enjoying my sexual frustration immensely. I amused myself with the thought that they might have considered this to be their equivalent to dinner and a show.\n\n\"Your highness,\" Tlazlteotl breathed huskily to Eisheth, \"May the slaves and I feed, and then give you the rest of him?\"\n\nEisheth considered the subordinate demon's request for a long moment, and then smiled. \"It is written, 'Gird thyself and serve me, till I have eaten and drunken, and afterward thou shalt eat and drink.'\" I recognized her words as a perversely out-of-context quote from Luke 17:8. It was at once blasphemous, obscene, and erotic to see the demonic queen's full lips moving as she quoted an English translation of words that had once been uttered by Jesus Christ himself.\n\n\"But your highness,\" the Aztec goddess pleaded, \"there is never anything left of a mortal when you are done feeding.\"\n\n\"It is written, 'Servants, obey your masters in all things according to the flesh, not with eyeservice, as menpleasers, but in singleness of heart,'\" Eisheth said with sadistic pleasure to her subordinate. I noticed that her quote of Colossians 3:22 left out any reference to God. The demon queen smiled coldly at Tlazlteotl before offering a reassuring, \"I have a feeling that this one will be very different than most. I haven't met a mortal in thousands of years whose mind I could not read, but I can tell that there is sufficient spiritual energy within him for all of us to feast, and perhaps even have some left over for later. But I still want to feed first. I love the look on a mortal's face when his cock is first bathed within the depths of a Queen of Hell, and they feel all the pleasure that I have to offer them even while damning their souls for eternity. Few mortals have ever experienced anything to prepare them for such pleasure as I have to offer, and it is even more exquisite if he or she has had not already fully experienced lesser succubi.\"\n\nThe Demon Queen Eisheth turned her attention away from the other succubi and smiled cruelly at me. \"Are you enjoying what the slave is doing to you, or is the frustration too much? Don't worry, you will have me soon,\" she said with mock-compassion. She moved closer to me as the exotic, dusky-skinned young woman in my lap moaned with sexual need, rubbing my cock-head frantically across her delicate pink clitoris.\n\nMy eyes wandered over Eisheth's breasts with their luscious, full nipples, and wandered down her abdomen. For a few moments, I almost laughed as I wondered why a demon would have a belly-button. But then my gaze traveled downward to the juncture of her smooth thighs, and my heart caught in my throat as I realized that I would soon get to be inside of that unspeakably beautiful pussy. She gave me a cruel grin. \"We will do nothing to you that you don't want. I've always fancied that a mortal's life force tastes better if he or she offers themselves willingly. At least, I enjoy it more,\" she whispered.\n\nTlazlteotl moved towards us, lifting her slave from my lap and then lowering her mouth to my cock. Being careful not to allow my penis to penetrate her mouth, the cruel Aztec goddess of sexual sin ran her moist pink tongue around the tip of my manhood and along the sides of it, letting her warm lips caress my length. I groaned with pleasure.\n\n\"I can taste you on him,\" Tlazlteotl said to the dusky young woman beside her. \"A few more seconds, and you would have taken him inside of your pussy, wouldn't you? Even knowing what it would have cost you, you would have fucked him. I can taste your desire smeared along his cock. You will be punished later,\" she said to her slave. \n\nTlazlteotl extended a hand to me and helped me out of the chair before leading me to her master's robe, which lay spread upon the floor. She pulled me close to her, kissing me gently along the neck as her arms enveloped me with their warmth and softness. With an effortless ease that hinted at a terrible strength within the demon-goddess' arms, she lifted me from my feet and gently lay me down upon the shimmering cloth of the robe. She pressed me into the soft, silken robe as she climbed on top of me. The gold ornaments that pierced her nipples and clitoris brushed against me as she kissed me hotly on the mouth. As my senses were flooded with the potent sexual energy of the succubus' kiss, I could hear Tlazlteotl's voice like an echo within my own mind.\n\n\"Don't give yourself completely to Eisheth. Take care to ensure that you save some of yourself to spend inside of me! Give me your cum, and ownership of your soul, and I will give you an eternity of sexual pleasure too wicked and depraved for your mortal mind to comprehend it! The girl you were kissing? She is only one of many beautiful slaves that I will share with you for the rest of eternity, and I will let you use them all in ways that your mind could not currently imagine! Join them, and join me!\" The telepathic whisper at once attracted and sickened me, and I was horrified that there was part of me that could find her offer attractive. Tlazlteotl was awakening parts of myself that I did not even know that I possessed, and it frightened and repulsed me.\n\n\"What are you doing?\" asked Eisheth's cold voice.\n\n\"Preparing him for you, your highness,\" came Tlazlteotl's uncharacteristically mild reply.\n\n\"Lies,\" hissed Eisheth. I did not know whether Eisheth could somehow sense Tlazlteotl's telepathic communication to me, or if she merely guessed that it was occurring. \"Move away from him. My own slave would not dare betray me. Kaitlyn! Finish preparing him for me. Drive him mad with lust! I want this one to be special. Tlazlteotl and Maria, I want you to watch. Play with yourselves, but know that you will only be satisfied if he survives both me and my slave.\" The succubus-queen smiled sadistically at her underlings as her pretty blonde slave moved towards me.\n\nThe delicate, innocent-looking blonde teenager moved hesitantly towards me. Her sparkling green eyes drew me in and mesmerized me with irresistible allure, her petite, fair young body all sweetness and innocent beauty. Slowly and languidly, she lay her beautiful young body down beside me, her hand lazily stroking my member as she moved to kiss me. Her tongue brushed my lips, and the pink nipples of her pale, soft breasts pressed warmly against me. She reached between her legs, her hand caressing her delicate slit as she gasped sweetly in pleasure. She slowly inserted two fingers into herself, pulling them out slick with her juices. She spread her fingers, and I looked longingly at the clear tendril of her glorious vaginal lubrication that spread between her fingers. I lowered my mouth to her fingers, and she smiled as I tasted her ambrosial juices. The taste of her pussy was like a jolt of pure lust to my brain.\n\nShe kissed me sweetly as she returned her hand between her legs, moistening her fingers with her natural lubrication as she slowly masturbated, so close that I could feel the movements of her slender arm and hand against me. She sighed and kissed me gently as she pulled her moist hand from between her soft thighs. I gasped in pleasure as I felt her circle her warm, soft hand, which was now moist with the sweet juices from her pussy, wrap around my manhood. Her lubricated hand stroked my thick cock with remarkable skill, bringing me close to cumming. She knew how to arouse me with barely even a touch, bringing me higher and higher, and the knowledge that the pussy juices of this beautiful creature were mingling with my own pre-cum somehow brought me even more pleasure. She smiled, knowing that she was doing her job well as she threw a light, slender leg across my hips. \n\nShe moved lower, letting the opening of her pussy delicately kiss the tip of my cock, but refusing me entry. I was almost inside of her, and even this merest of contact flooded my senses with electrical bliss that radiated throughout my entire body. Her lithe, soft young body seemed to weigh nothing, and her skin felt incredible against me. She pushed my cock against my abdomen, and then began deliberately sliding her slippery pussy up and down against the underside of my member. I could see the delicate pink petals of her labia parting smoothly and wetly to kiss the sides of my cock, her warm vulva massaging the length of my manhood and pausing to almost catch the tip of my cock inside of her. Each time she almost, but never quite, granted me the penetration I needed. Even so, I was practically fucking the beautiful teenager. Her slippery fluids seeped out to coat my manhood, but she wouldn't let me cum. She could instinctively tell when I was getting close, and she would stop moving until the blissful release of orgasm slipped from my grasp. Each time that I approached the peak of ecstasy, she brought me closer.\n\n\"Do you like how my sweet little pussy feels up against you?\" she asked in a hot, husky whisper. The question was purely rhetorical. Her sweet, melodious voice filled my mind with wanton thoughts as her soft breath brushed my ear. \"I can't tell you how badly I want to let you fuck me right now. I want you to take me, pound yourself into me, and make me yours even while you give yourself to me entirely. I want you to be rough with me. I want to suck your dick and swallow your cum. I want to let you pound into my pussy, claiming me over and over again and filling me with your seed. I want you to take my tender little asshole. Hard.\" Her dazzling green eyes met mine, and a wanton smile crossed her lips as she rubbed her sodden pussy against my cock, massaging her clitoris with my glans. \"I want you to fuck my ass hard and make me scream. I want you to pound into me, make me yours and fill my guts with your cum. I want you to take me in every way that a man could possibly take a woman.\" Her green eyes gleamed mischievously as she spoke, her innocent young face making her words seem even more obscene. She was offering herself to me, but it was mutually understood that I would ultimately be the one that would be claimed by her should I take her up on her lewd offer. I smiled back at her, knowing something that she didn't.\n\nThe angelic young succubus took my face between her delicate hands, and planted a chaste kiss on my lips before smiling at me sadly. \"But if you want me, you're going to have to wait until my master is done with you, and that means that you're going to have to survive something that few men can endure,\" she breathed, her large green eyes meeting my own as she rubbed her warm, slick pussy along the length of my manhood, almost catching the tip of my penis inside of herself, but not quite. She rubbed the delicate, slippery pink lips of her sweet pussy up along the length of my cock until I could hardly stand it, pausing to catch the tip of my penis directly against her tight, moist opening. Her sweet green eyes sparkled mischievously. \"I would hate to miss the chance to fuck you. You know, I could slide you inside of myself right now...\" she breathed. I was so close to her opening that, if the tip of my cock wasn't actually inside of her pussy, then it was only through the merest of technicalities. It felt as though the head of my penis was encased in heat and moisture. She giggled as she moved her hips, so that she popped my painfully hard penis out against her slit. \"Or not,\" she said brightly as I trembled and groaned in frustration. \n\nEisheth moved towards her young servant, peering down into my eyes. \"I don't have to be able to read your mind to know what you're thinking, and I believe that I'm going to enjoy this,\" she said with obvious relish. She patted Kaitlyn gently on the shoulder. \n\nThey young blonde kissed me lightly on the lips as she slid her soft, slender body from off of me, ensuring that I felt all of the best parts as she climbed off of me. \"Later,\" she whispered seductively.\n\nI looked up at Eisheth. The demon queen stood above me, her legs slightly parted, proud and confident in her beauty to the point of arrogance as she looked down at me. Her cold blue eyes were fixed upon my own. I looked between her legs, my eyes seeking out the luxurious, enticing folds of her comely pussy. She lowered herself above me, kissing me on the lips. As her moist tongue caressed my lips, I was overwhelmed by the aphrodisiac qualities of her kiss as her arms enveloped me. I kissed her in a frenzy of lust, my hands traveling her smooth back and the soft mounds of the ass that I was certain that I would be fucking soon. I thrust my hips upward, and was rewarded as my cock brushed her soft pubic hair.\n\n\"Not yet,\" she whispered with a bewitching smile. She kissed my neck in a manner that I had never been kissed before, her lips moving with slow seduction as her magical kiss boiled my blood within my veins with lust and desperate need. She kissed lower, teasing me wickedly as she sucked and nipped at my nipples, her hand reaching downward and stroking my hardness. I could have cum immediately, but I suffered painfully as I fought to contain my orgasm. I had to cum inside of her. She knew precisely how strong my willpower was, and she smiled sadistically as she kissed further down my body, the fleshy mounds of her large, round breasts stroking my cock between them. I groaned with pleasure as she squeezed her breasts together to encase my manhood within their warmth and softness. I was so close to cumming that I thought that I could get no closer to the edge of that cliff without plummeting into an abyss of pleasure. I was wrong.\n\nShe smiled seductively, her clear blue eyes locked on my own as her tongue swirled around my painfully erect penis. I was taken entirely by surprise when, without warning, she slid her mouth down over my manhood, effortlessly taking my full length deep into her throat in a manner that no mortal woman had ever done for me before or since. Frankly, one of the drawbacks of having a larger than average penis is the fact that it is difficult for the average woman to provide a satisfactory blowjob, but the succubus-queen was certainly not the average woman. I felt certain that I would find release within the warm depths of her throat as she licked and sucked my length, moaning as she slid her moist tongue over the head of my cock to taste my pre-cum before impaling her face upon my manhood again and again. I climbed higher and higher towards the ecstatic point of no return as the demon-queen deep throated me, sucking my cock with pulsing wet undulations of her tongue and throat that were entirely beyond the capacity of any human being to replicate.\n\nJust before I was certain to erupt deep within her throat, she abruptly stopped, sliding my member out of her mouth. I almost came anyway, and delaying my release required effort that strained at my sanity. I needed to cum. \"Please,\" I whispered, \"Quit teasing me and let me fuck you!\"\n\nShe smiled triumphantly as she moved above me and kissed my lips. \"I can't read your mind, mortal, but I can taste your dick. You've been deflowering virgins with that cock. And I can taste incest on you, too. You have been fucking your own family, and not even using a condom, you filthy young man. And, you've been getting someone- no, more than one woman, pregnant just within the last few hours! You're going to fit in just fine with my servants, a real prize for me to add to my collection! I'm going to have fun with you, mortal. I actually don't think that you'll mind spending an eternity with me, even if it is in Hell.\" Her eyes sparkled with something approaching wicked, lewd joy as her vaginal lips kissed the tip of my cock. She lowered her pelvis just enough to envelop the tip of my manhood in warm, moist bliss inside of her.\n\nEisheth's cold blue eyes gazed hungrily into my own. \"So you agree to fuck me, of your own free will? No matter what the consequences might be of what we are about to do, we both agree to them?\" Her triumphant tone revealed that she had little doubt of what my answer would be.\n\n\"Yes!\" I said emphatically. I couldn't take much more of this, but it amused me that she had agreed to whatever consequences might come of our coupling. She certainly wasn't counting on having her spiritual energy stolen to revive Acratophorus, but as far as I was concerned she had just agreed to it. \n\nI reached up to grab Eisheth's ample hips, even as she impaled herself upon me in a single movement. She was very tight, but extremely wet. Everything about her was designed for this very act. My mind went blank, the electrical pleasure that radiated from my groin overriding any capacity for conscious thought as my cock was sheathed in impossibly blissful heat and moisture.\n\nEisheth rode me, her body smoothly rocking and undulating above mine like a belly-dancer's as her large breasts swayed enticingly. She kissed me wickedly as her pelvis gyrated and ground against me. Inside of her, she was moving muscles within her vaginal canal that rippled and pulsed along my manhood, the slick walls of her muscular tunnel stroking and caressing me as though her vagina were a living thing with a mind of its own. My hands reached up, caressing the soft orbs of her breasts and the stroking sweet flesh of her abdomen and chest. I grinned at her as I reached for her clitoris. I gently squeezed the flesh of her vulva over her clitoral hood, indirectly stimulating her glistening nub as she rode me. She moaned sweetly as she looked possessively down at me, her wide feminine hips moving faster as we approached a glorious climax.\n\nWith a shriek of rapturous ecstasy, Eisheth allowed her orgasm to wrack her beautiful body in an implosive series of shuddering, convulsive contractions of every muscle she possessed. Deep inside of her, I could feel her sweet reproductive fluids drenching my manhood in a glorious liquid celebration of raw, wicked, bestial carnal bliss as she thrashed passionately above me.\n\nIt was more than I could take. My ass cheeks clenched tightly and I cried out in glorious release, my eyes rolling back in my head. My overstimulated penis erupted deep within Eisheth, spending my seed deep within her moist, receptive womb. Her insides pulsed around my manhood, sucking and milking me of every drop of my seed even as she thrashed above me. For long minutes I spent my semen deep inside of her. Maybe it was one orgasm, perhaps it was several orgasms so close together that I could no longer tell them apart.",
        "Eisheth collapsed on top of me, aftershocks of her own potent orgasm still caressing my manhood as she fell on top of my chest. Her soft breasts were pressed into me, and her shining platinum hair caressed my face softly. For the first time, I noticed small, shiny white horns that had been hidden beneath her luxurious hair. The demon-queen was breathing heavily, and glistening drops of sweat beaded her forehead. When she spoke, she sounded almost vulnerable. \"What are you doing to me?\" she whispered.\n\nI looked into the deep blue pools of Eisheth's eyes, and it took every ounce of my self control to not tell her everything, confess to her about the armband and about my plan to drain her of her spiritual energy to revive Acratophorus. Instead, I kissed her. \"Were you serious that you would let me fuck you in the ass?\" I asked.\n\nEisheth had been weakened until she was scarcely stronger than I was, and the other three succubi looked on with amazement as I rolled Eisheth over. She grinned weakly as I positioned my cock behind her. It was still slippery from her pussy as I spread the perfect mounds of Eisheth's butt with my hands, and pressed the tip of my cock against the puckered starburst that marked her anus.\n\n\"Do it!\" she snarled lustily over her shoulder, her lovely blue eyes again sparkling with desire. \"Yessss! I can't believe that you're still alive, let alone still hard! If you can please me again, then you have earned the right to fuck my servants and I as many times as you would like for eternity! Go ahead, if you can mortal. Tear my asshole apart, fill my intestines with your cum! Your new master commands you!\"\n\nI pressed forward, my slippery cock crowning into her puckered hole as she gasped. Her ass was tight, even as I felt her relaxing her anal sphincter so as to grant me entrance into her filthy and forbidden hole. I pressed hard, feeling the ring of her anal sphincters clenching and stretching around my girth as I speared my manhood deeply into her guts. I could feel her heartbeat from within her, her pulse caressing my cock as I bottomed out with the entire length of my shaft buried between her glorious butt-cheeks.\n\nI grabbed her hips, thrusting my cock hard into her rectum as she grunted and squealed while meeting my thrusts with her own as her glorious butt cheeks slapped backwards into me. I pounded into her, the slapping sound of my abdomen against her ass filling the room. I reached forward with my right hand, grabbing one of her stubby horns and a handful of the demon-queen's beautiful platinum hair near her scalp as I thrust my cock deep within the depths of her bowels.\n\nWith one hand I pulled her hair. With the other hand, I reached down across her soft abdomen, my hand finding the soft flesh of her vulva as I fucked her ass. She was already dripping wet from the combined fluids of our previous coupling as I began caressing the clitoral area of her womanly opening.\n\nDeep within her depths, I could feel the softness of her rectum wrapped hot and tight around my cock, providing delicious friction as I pounded into her from behind. With each thrust, I watched her perfect, pale ass cheeks jiggle from the impact even as she ground herself back into me. I knew that she was getting close as I thrust within her while reaching around and skillfully massaging her clitoris, and I was at a place where I could cum whenever I wanted. I chose to hold off, enjoying anal sex with the succubus-queen. After all, such rare opportunities deserve to be savored.\n\nWith a wild, animalistic cry, Eisheth arched her back and let out an unearthly shriek as her butt cheeks clenched hard around my manhood. She was cumming, and her earth-shattering orgasm was overwhelming in its sheer intensity.\n\nI continued pounding into her as she came, her ass gripping and clenching my cock as I continued driving her into the floor in a prone position. She lay on the ground, gasping and moaning as I plundered her delicate ass while it pulsed and spasmed around my cock. I couldn't hold back any longer. I thrust deeply into her rectum and cried out with overwhelming pleasure as I unleashed my load into the depths of her guts. The demon queen moaned softly as she felt my cock buck and spurt within the deepest parts of her beautiful ass, my hot cum splashing into her bowels.\n\nI collapsed on top of her, my chest across her back and my dick still lodged deep inside of her anus. She felt warm, soft, and peaceful against me. She turned her head to look at me, her elegant blue eyes satisfied and happy. I was surprised to see that she was translucent. She raised her ethereal, beautiful face to kiss me. I pressed my lips against hers as she grew transparent and I could literally feel myself beginning to sink through her body. It felt strange to actually be inside of her with more than my penis. As we kissed, her body disappeared entirely. I collapsed on top of Eisheth's robe as her diadem fell heavily to the dirt floor with a dull metallic thud. \n\nIt was a very dangerous point in the plan. Surely the succubi would realize something was terribly wrong when their queen suddenly disappeared, leaving her robe and diadem behind. I collapsed, feigning weakness and great exhaustion as though Eisheth had sapped much of my vitality. Meanwhile, I focused all of my effort on the armband. Acratophorus had told me once that I would typically be able to control it voluntarily, and I needed to do so now. I focused on wanting to fuck the succubi, wanting them to fuck me. I channeled every ounce of my energy into filling them with lust, until the armband burned like hot iron on my arm. I ignored the pain, pouring my energy into driving the succubi mad with sexual need, pushing the magical artifact on my arm to the maximum extent of its powers. It did not take long at all before my efforts were rewarded.\n\nTlazlteotl flipped me over physically, moaning with desire as she sucked my cock deep into her hot, wet mouth. Only seconds earlier, that penis had been buried in the ass of one of her kin. She didn't seem to mind as she greedily and noisily slurped and sucked along the length of my stiffening shaft. She was incredibly good at providing oral sex, and I groaned with pleasure even as the other two succubi pressed in hard against my sides, their warm breasts hot against my skin, their moist lips kissing me with a need that made me wonder if perhaps I had put too much effort into making them desire me.\n\nThe beautiful Aztec goddess pulled her mouth from my cock and looked at me with dark, smoldering eyes. \"My pussy or ass. Choose now,\" she said in a desperate whisper. Maria tried to throw her leg over the top of my hips to mount me, but was shoved away by Tlazlteotl. Before I could answer, Kaitlyn had straddled my face in hopes of getting some form of release, and was grinding her beautiful slit against my mouth. As my tongue brushed the teenager's beautiful, delicate pussy, my body was inflamed with wild, primal lust that burned and boiled in my veins like a madness. I reached up, cupping Kaitlyn's beautiful ass in my hands as I pulled her succulent mound closer to my mouth, licking and sucking at her tender slit as I greedily lapped up her delicious, slippery fluids.\n\nTlazlteotl was clearly not in the mood to delay the satisfaction of her needs while awaiting an answer from me. I felt her take my cock firmly in her hand, and then my entire universe became slick wet heat as she impaled her cunt upon my rigid manhood. There was no tenderness in the act as she fucked me, her motions uninhibited and unrestrained as her slippery tunnel wetly stroked and caressed the length of my manhood, her slick cervix grinding hard against the tip of my cock. Deliciously wet slurping noises came from our coupling as she rode me, bucking madly on top of my pelvis. She used me with wild abandon, crying out in savage, unrestrained joy as she approached her climax.\n\nKaitlyn was whimpering sweetly, uttering angelic exclamations of pleasure as I tongued her fresh young slit. Her long, shapely legs trembled as she held herself above me, and I greedily licked and sucked at her pussy. I felt Maria delicately kissing my thighs, her face mere inches from Tlazlteotl's ass as the Aztec goddess rode me.\n\nTlazlteotl uttered a roar of wild triumph, her pussy clamping down forcefully and spasmodically upon my cock as her tremendous orgasm ripped through her beautiful body. My hands clenched upon Kaitlyn's delicate ass cheeks, and I nearly smothered myself in the teenager's pussy as my own orgasm exploded deep within the Aztec goddess' reproductive tract. Over and over again, my body sent powerful jets of potent sperm deep into Tlazlteotl's ready womb. I felt her becoming lighter, her body becoming more incorporeal as my seed spurted within her depths.\n\nMy orgasm continued as Tlazlteotl slowly faded from my own reality. She was not even completely gone when I felt Maria's lips and tongue begin caressing my manhood. For a long moment, I could actually feel Tlazlteotl's pussy and Maria's mouth at the same time. The combined sensation of moist vaginal walls grinding wetly against my member while Maria's succulent mouth engulfed me was better than I could ever hope to express in words. I wondered what was happening to the sperm that I was apparently spurting into two bodies at once. The ancient Aztec goddess flickered like the flame of a candle, and with a last haunting, ghostly cry of sexual rapture, she vanished completely from my world.\n\nAs Tlazlteotl disappeared, Maria's blowjob intensified, her mouth and throat engulfing my manhood. Kaitlyn cried out like a wounded songbird, her pretty, delicate young body trembling and shuddering as she collapsed on top of me. As I continued licking her sensitive pink clitoris, I could feel her nether regions rhythmically pulse and shudder as her insides clenched in her own powerful climax.\n\nMaria's head bobbed on my cock, the exquisite ringlets of her glossy black hair bobbing and swaying with the motions of her head. Behind them, I could see the twin mounds of her perfect butt thrust proudly into the air. Her tongue swirled around my manhood as she looked up at me with a predatory smile and eyes that sparkled wickedly. She looked at Kaitlyn. \"I want to cum again before we finish with this guy. Scissor with me, with his cock between us. We can rub our clits against his cock until we both cum.\"\n\nMaria positioned the glorious cushions of her ass on my thighs, her soft pussy brushing against my manhood, and she pulled Kaitlyn closer to her until Kaitlyn's thighs crossed over Maria's. Their contrasting light and dark skin was exceptionally beautiful as the two succubi began rubbing their engorged vulvae against my throbbing penis. Their muscular control was superhuman, and I will never know how they managed to keep their combined actions so well coordinated. Sometimes, they rubbed themselves in slow, languid movements, and at other times they furiously ground themselves against each other and my cock. My penis felt as though it were completely encased within their flesh as the two beautiful succubi sandwiched my cock between their pussies. Kaitlyn's delicate young ass rocked and swayed enticingly against my abdomen, and I reached out to stroke the pale, tender flesh. She responded with a quiet gasp, and she pulled Maria into a passionate kiss as the two began bouncing in unison, my cock being caressed between their heavenly pussies. I was almost ready to ejaculate when the two suddenly stopped.\n\nMaria broke the kiss and guided Kaitlyn off of me with her hands. \"Let me show you how this is done,\" Maria condescended to her young peer. Maria raised her hips as she lowered her upper body over me, her mouth devouring my own as her soaking pussy gently kissed the tip of my cock.\n\n\"You know that I'm a succubus. I am a sex-demon,\" Maria whispered into my ear. Her hot, pink tongue caressed my neck. She moved her pussy to encase the tip of my penis. I was amazed by the heat, moisture, and pleasure radiating from the mere inch or so of my cock that she slowly began fucking even as she denied me full penetration. \n\n\"Everything about me is a beautiful lie. My body is an evil trap, created for the sole purpose of ensnaring and devouring you, body and soul. If you ask me to leave, I will kiss you good bye and leave now. That is the only way that you can save yourself from destruction. You have already beaten the odds by copulating with Queen Eisheth and Tlazlteotl and surviving. No man could endure sex with four succubi in a single day and live.\" \n\nMaria looked at me, her soulful brown eyes tinged with a hint of sadness even as her beautiful pussy sank a tiny bit lower. She rocked her hips, and again I was amazed by her muscular control. I couldn't believe how wonderful it felt to have even a tiny bit of my penis inside of this beautiful woman.\n\nI looked into her eyes. A wicked smile played upon her lips, and I couldn't tell whether she was sincerely trying to warn me away, or simply amusing herself by offering me a chance at safety that no man would be able to accept. In my own case, it didn't matter. I reached forward and grabbed her hips, pulling her downward. Her eyes were locked on mine, searching within my eyes as I pulled her downward. \n\nAs I bottomed out within her, encased within her heat and moisture, her eyes closed and her graceful neck arched back as she looked upward. Her body was beautiful, almost angelic, as she began slowly undulating her hips back and forth, grinding her cervix against the head of my cock.\n\n\"So this is your choice. We fuck now, and live with the consequences,\" she sighed.\n\nI smiled at the demon. \"Damned straight.\"\n\nShe began riding me faster, her breasts swaying and bouncing on her chest as she rode me, fucking me with wild abandon as her dark hair swung about her face and shoulders. She looked at me with a wicked grin. \"I know little about you, mortal, but I can assure you that you do not yet know the meaning of the word 'damned'.\" She clenched her pussy around my cock, and I gasped as waves of pleasure washed over me. Her eyes were locked on mine. \"Soon enough, I feel certain that you will know more about being damned than you ever could have wished.\"\n\nI sat up, embracing Maria as she rode in my lap. She wrapped her arms around me and kissed me, her tongue caressing my own. \"I doubt that,\" I whispered in her ear as I pushed her back onto the robe. \"I intend to very literally fuck the Hell out of you.\"\n\nShe smiled as I lay her back onto the robe, clearly amused by my confidence. The beautiful woman lay beneath me, her legs spread wide as I hammered into her pussy. With each thrust, her outstretched legs rocked gently and she let out a gentle cry of pleasure. I looked down at the beautiful juncture of her smooth thighs, seeing the pink flesh of her glistening labia parted around my cock as my manhood sawed in and out of her beautiful cunt. She closed her eyes, wrapping her shapely legs around my hips and pulling me deeper as I fucked her.\n\nI kissed her again, reaching down to caress her clitoris as we fucked. Her legs tightened around me, and the armband felt hot on my arm. \"Oh, God! What are you doing to me?\" the succubus moaned. Her voice sounded different, less artificially beautiful and resonant. I doubted that she had spoken about God, even in a profane context such as this one, in close to a century. \n\nMaria clenched her arms and legs around me tightly as her insides began trembling and gripping my cock. Her voice rose into a high-pitched cry of pleasure and joy as she arched her back and her body shuddered beneath me. Still I pounded into her. She became tighter and wetter by the second as her body gripped me within her pussy. I thrust into her hot, slick depths to where my cock was resting at the entrance to her womb. There, her slippery cervix provided the stimulation that sent me tumbling over the edge and into an abyss of pure pleasure.\n\nThrough the energy that pulsed between us, I knew that it was not a demon that received my seed when my orgasm erupted deep within her. The succubus had become mortal again. Maria gasped as my semen splashed inside of her womb, her insides greedily drinking the life that I poured into her. She raised her arms to pull my face to hers, and she planted a scalding hot kiss on my lips as she opened her receptive depths to receive my gushing jets of potent sperm. Her breasts rose and fell passionately as we kissed, our shared orgasm washing over us in waves of sweet pleasure.\n\nMaria closed her eyes peacefully, breathing slowly and deeply as I lay on top of her. Our bodies still pulsed in shared orgasm, my own continuing to trickle semen into her even as her own body lazily drank my offering into her sweet depths. I kissed her on her lips again. It felt almost painful as I pulled my spent, slippery cock from her beautiful body. She looked as though she had fallen asleep.\n\n\"It's about fucking time you finished with her!\" Kaitlyn exclaimed before I had even had time to roll off of Maria. The pretty young teen pounced on me and shoved me back into the floor, kissing me full on the lips. Maria glanced over at us, her eyes half-closed, and her face looking vaguely hung-over. It could have been my imagination, but she looked almost translucent.\n\n\"You're going to fuck me now!\" Kaitlyn declared bluntly and enthusiastically as she climbed on top of me, her beautiful green eyes sparkling with delight as she kissed me. \"Forgive me if we skip the foreplay; I need this and I'm not waiting any longer.\" She kissed me deeply, her sweet young body pressing hard against mine as she ground her sodden pussy against my abdomen. She was shorter than I was, and her pussy wouldn't quite reach my cock in this position.\n\nKaitlyn moaned softly as I reached down to caress her delicate mound. She was sopping wet. \"My mouth, my pussy, or my ass? It's all the same to me, but choose quickly. I just need your cock inside of me. Now!\"\n\nI didn't answer verbally. The pretty blonde teen squealed playfully as I rolled her off of me, and she crouched on all fours facing away from me on the dusty dirt floor. She looked over her shoulder expectantly, and seductively jiggled her butt cheeks as I moved behind her. \n\nI looked down at her pussy and asshole, and was amazed at how beautiful she was. I kissed her butt cheek, licking it gently and feeling the smooth, soft skin of her ass with the side of my face. The feeling was exquisite, but it wasn't what either she or I needed. I straightened myself and positioned myself behind her, rubbing my cock-head against the opening into the teenager's sweet young pussy. She uttered a sweet, high-pitched moan of unadulterated pleasure and relief as my cock began parting her vaginal lips and pressing into the heat and moisture behind them. Wiggling her pretty little butt, she pressed herself back into me. Her pussy was unbelievably tight.\n\nMost women seem to move relatively little when having sex in the doggy position, preferring for their partners to take a more active role. This makes sense, as it can be difficult for both partners to get their timing correct and keep the man from slipping out. Most women, however, are not succubi. Like Eisheth, Kaitlyn seemed to sense my movements instinctively, and there were no such problems as she met me thrust for thrust, her pale young butt-cheeks slapping noisily against my pelvis and lower abdomen as I thrust into her. \"Fuck me! Oh, fuck me harder!\" she pleaded as I speared deep into her sweltering vagina with powerful thrusts.\n\nShe turned her head to look back at me, her blonde hair swinging softly over her shoulders. Her lovely, dazzling green eyes drove me wild with desire as I fucked her. I playfully swatted her magnificent ass with the palm of my hand, and was rewarded with a smile.\n",
        "\"If you're going to spank me, spank me like you mean it!\" the petite little teenager said with an effervescent grin. \"Be rough with me! Pull my hair and slap my ass like you're not afraid of breaking it!\"\n\nI smiled back at her, slapping her on the ass hard enough that the palm of my hand was stinging as I reached forward to grab a handful of her hair. I grabbed close to the scalp, ensuring that I had enough hair in my hand that it wouldn't actually hurt her or pull her hair out, but enough to give me a firm grip.\n\n\"Hell yeah!\" the deceptively innocent-looking little teenager exclaimed with delight as I smacked her ass again, leaving a red mark. She looked at me as my cock pistoned in and out of her gorgeous cunt. Something between a smile and a snarl was on the adorable teenaged girl's face. \"That's what I'm talking about! Now fuck me like you mean it!\"\n\nKaitlyn's pussy was so amazingly tight that there was tremendous friction around my cock, despite her copious natural lubrication, as I pounded my cock into her wonderful young pussy. I speared deeply into her reproductive tract, savoring the feeling of the soft, slick walls of her vagina squeezing and stretching to accommodate my thick cock. I was battering against the back of her pussy with such vigor that I was beginning to wonder if it would be possible for me to actually penetrate her cervix. \n\nKaitlyn's petite young body rocked in time to my pounding. She was breathing hard, excitedly shouting encouragement as I fucked her. Her eyes were wild and excited, she was clearly enjoying herself every bit as much as I was.\n\n\"Can I fuck you in your ass?\" I asked. Call me old-fashioned, but I believe that a gentleman always asks about such things. Even when bedding a succubus.\n\n\"You don't have to be so damned nice. Just fucking take whatever you want from me. Tear me up and spit me out; use me as hard as you want and make me scream!\" she growled with sex-crazed enthusiasm.\n\nI didn't need to be told twice. She moaned as I slapped her ass again, and I spread her glorious butt-cheeks apart. I was already so lubricated from her pussy that there was no need to spit on her butt, and I doubt that she would have wanted lube anyway.\n\nI have never met a woman that wouldn't prefer for her lover to be reasonably gentle during anal sex, but I doubted that the pretty young succubus was like any woman that I had ever known before. Even as slippery as my cock was, it wasn't a quick or easy process to penetrate the small teenager's delicate, impenetrably tight anus. She sucked in her breath through her teeth and her eyes squinted shut as the tip of my cock began to wedge into the tight entrance to her dainty young ass. Her sphincters would barely stretch to accommodate me. I needed more lube.\n\nI reached around and put my hand under her mouth. I could feel her trying to relax to allow me into her as I pressed forward. \"Spit in my hand,\" I asked. She rewarded me with a warm glob of spit in my palm.\n\nI pulled my cock away from her butt, and smeared her spit onto my swollen purple glans. I pressed again, and she gasped then whimpered softly as she pressed back into me. She let out a sharp squeal of surprise as her butthole opened up to admit my manhood. I watched, mesmerized, as the length of my shaft gradually disappeared into the tightly-stretched opening between the pale orbs of the teenager's butt.\n\n\"God, yes!\" she grunted through strained teeth. \"Now fuck me hard! Fuck me like you're trying to split me in half!\"\n\nI slapped her ass hard, and she cried out in pleasure as I began rasping my cock back and forth deep inside of her asshole. Her sphincters were tight, and I had no difficulty feeling her rapid, rabbit-like pulse hammering through her arteries as I invaded one of her most private and intimate of orifices. I grabbed the bony ridges of her hips, thrusting as though attempting to tear the delicate young teenager's slender body apart with my manhood. With each thrust I seemed to penetrate deeper into her, and with each jarring motion I saw her hair shake around her head as she uttered a sweet, plaintive cry of pleasure.\n\nI pounded into her forcefully as I felt delicate fingers caressing my testicles. I looked down to see that she was playing with herself, masturbating while I tore into her butt. Her whimpering was increasing in pitch and frequency and her breath was coming in ragged gasps. Her upper body collapsed onto the floor until she was almost prone beneath me, her ass kept only slightly elevated by her knees and the hand with which she was masturbating as I ravaged her delicate pink anus. \n\nI continued to fuck the beautiful teen, relentlessly pummeling her butt as she began to squeal in delight, and I felt her already tight ass beginning to clench around me as the muscles of her pelvic floor began rhythmically contracting.\n\nHer squeal rose to a shriek as I wrapped my fingers around the bony protuberances of her pelvis and slammed my cock deep into her bowels, and I felt her insides grip my cock as though struggling to gain possession of it forever. \n\nIt felt too amazing for me to hold back any longer. With a groan, I thrust deeply into her guts, my cock buried in her sweet ass up to the roots as my semen gushed deeply into her intestines. Our cries mixed together in a harmony that would have brought pleasure to any professional musician as I poured myself into the sweet young girl. For long minutes, I could feel myself pulsing deep inside of her as she collapsed onto the floor, and her insides fluttered against my manhood.\n\nI collapsed on top of her, my cock still buried deeply in her now sperm-filled ass. I had done my job. Both of the two young succubi were given a second chance at humanity, and Acratophorus had been given more than enough spiritual energy to revive him. And I had gotten a whole bunch of amazing sex thrown into the bargain.\n\nIt was amazing how much stamina the armband had given me. It was also amazing how it had changed my attitude towards sex. Until a few days ago, I had honestly never had sex outside of the context of a committed relationship.\n\nKaitlyn's body was trembling beneath me. I climbed off of her. \n\n\"Are you OK?\" I asked. She was crying. I looked at her face. She was still pretty, but certainly not the succubus that had seduced me earlier. She was clearly human. She looked young, vulnerable, and frightened. My heart sank, and I put an arm around her.\n\n\"What did you do to me, you bastard?\" she asked as she wrapped her arms around me and sobbed into my shoulder. It was as though years of restrained emotions flooded from her eyes at once.\n\n\"You're human again. You've got another chance to not spend eternity suffering or causing suffering for others.\"\n\nHer small fist struck me on the arm, but it didn't hurt. \"I tried being alive once, and it fucking sucked; you have no idea what I went through! How the fuck can I be human again? I died twenty years ago! I sold myself to Eisheth years ago, and she's going to come for me. I fucking know it. You can't protect me from her! She's more powerful than you could possibly imagine. I shudder to think of what she'll do to you for this, and I don't want to think of what she'll do to me for escaping from her, even for a moment and even though it wasn't my fault!\"\n\nI tried to calm her, wrapping my arms around her. She had grown transparent, and I strongly suspected that the only reason that I could see her now was due to my own unusual circumstances. Whatever approximation of a physical body she had possessed as a succubus no longer existed. She was purely human now, but a ghost without a body.\n\n\"Eisheth can't hurt you. She won't be able to return here for a century or more. I drained her of her power.\"\n\n\"Well, there sure are plenty of other demons that can do lots of to hurt both of us, and after some of the things I did while I was alive there's no way in Hell that I'm ever going to get into Heaven. What the fuck have you done to me? At least as a succubus, I could have had a chance at a reasonable existence in Hell! God, I just know that I'm going to end up burning in some pit of brimstone!\"\n\nA slender, transparent figure approached us from where Maria had been resting. I barely recognized her. She was skinny with sagging breasts, and her dark hair was streaked with grey and hung in tangles from a face that was still pretty, but certainly starting to age. Her stomach bore stretch-marks that identified her as a mother. She was still reasonably attractive, but most definitely not the vision of perfection that had seduced me moments earlier. She said something to me in rapid Spanish. I couldn't understand her, but she didn't sound happy.\n\nI wished that Acratophorus would hurry up and show himself. I had tried to do a good deed, and, as Ishtar had warned, it had not turned out well. Kaitlyn had a good point. These girls couldn't go back to Hell, and they would be hunted relentlessly by demons if they tried to stay on Earth. If Heaven wouldn't take them, then I probably hadn't done them much of a favor. I was beginning to wish that I had listened to Ishtar.\n\nA deep, gravely, heavily-accented voice crept from the shadows of the barn. \"Eternity is a long time to spend as a monster, my child. He did you a favor,\" Skagematuck said as he stepped from the shadows. I wished that he would quit calling people his child.\n\nHe stepped towards us, his wizened old face looking at her with kind, dark eyes. \"I was a monster bound to a demon for many thousands of years, and the demon who was once my own master is even now searching for me. He will exact terrible vengeance if he captures me. But it is better to walk the clear and well-lit path of a good life than it is to stumble in darkness, and I would rather die as a free man than live as a slave to a demon.\"\n\n\"I don't know who the fuck you are, but I wish you would shut the hell up. I don't give a fuck about living a good life. But I would rather have some standing in Hell than be roasted in a pit of brimstone while hideous monsters take turns pleasuring themselves with me, which is probably what's going to end up happening now.\" Kaitlyn sobbed. \n\nSkagematuck regarded her sadly, and she returned his glance with defiant ferocity.\n\nA dust-devil swirled on the dry floor, emitting a dull, barely-visible blue light. Azure sparks began to swirl in the cloud, and the dust consolidated into a human-shaped mass that was glowing a bright blue. I dove for my pants, snatching the knife out of the pocket.\n\n\"Hey, Daddy. Did I come at a bad time?\" asked the radiantly beautiful figure that materialized from the sparkling dust. She was addressing me.\n\n\"Enyo?\" I asked.\n\nShe was strikingly beautiful, even for a goddess, and clad in a flowing blue dress of some scintillating, iridescent, silk-like material. My daughter was an image of perfection that far surpassed even her mother in the breathtaking exquisiteness of her form. Her hair was long and black like her mother's, but her skin had a healthy tone in contrast to her mother's snowy complexion. Her eyes were blue and sparkled with life, and she fixed me with a warm smile as she walked towards me.\n\nI felt horribly embarrassed, and fumbled to quickly throw my pants on. I slipped my knife back into the pocket.\n\n\"No need to be embarrassed,\" Enyo said with a smile. \"I've seen it all, anyway. My mother tasked me with watching you, but I had no idea that my job would be so entertaining! And I even got to feel everything in the room when you conceived my half-brother about an hour ago inside the house. In other words, I have not only seen you naked, I know what it feels like to be fucked by you, and it feels amazing. So how is that for an awkward way to meet your daughter?\" She laughed musically, and the tension seemed to drain from the air.\n\n\"It's great to meet you, too, Enyo. So, if you knew what I was doing, why didn't you stop me? Your mother couldn't have wanted Acratophorus to be revived so soon.\"\n\n\"Mom isn't worried about Uncle Dionysus anymore. One of my uncles has decided to help Mom out with her plan. Personally, I just think Uncle Ares likes blowing things up and is happy to have someone in the family that's nice to him for a change. And neither Mom nor I are really interested in having an adversarial relationship with you, or Uncle Dionysus for that matter. Your world is going to end no matter what you do at this point, and both Mom and I would rather be friends,\" Enyo said pleasantly. \"You know, Mom really does like you.\"\n\nEnyo was interrupted as, again, wind blew through the barn, swirling up dust. Despite the gaps in the walls, the wind seemed unnatural and out of place. A dust-devil kicked up debris and began to consolidate in the center of the room. Something fearful and nauseating seemed to emanate from the swirling dust. Light was distorted around it in unnatural ways, twisting and consolidating into a large rectangular shape. I didn't know what was coming, but I didn't like it at all.\n\n\"John, I don't know what that is, but something about it feels very evil and very powerful,\" Skagematuck warned gravely. \"Trust me, I have spent far too much time in the darkness.\" He could clearly feel the same thing I could. A moment later, I realized that I had instinctively put myself between the dust-devil and Enyo, despite the fact that the goddess would be better able to protect herself than I would. Remembering the holy water and rosary that Cardinal Imamu had given me, I fumbled for them in my cargo pocket.\n\nThe air around the dust-devil grew dark, as though daylight were unwilling to touch whatever it was that was appearing before us. Waves of shimmering dark energy seemed to reach out from the swirling dust as an ornately carved doorway of some glossy black material appeared in the center of the barn. The air around the doorway shimmered as though from immense heat, and light and even space itself seemed to twist and curve around the doorway, as though the mere existence of this object was an affront to the very concept of reality. The ostentatiously decorated door swung smoothly open. Behind it was nothing but a black, empty void. I could not even see a floor or walls behind the doorway, but only a measureless expanse of impenetrable darkness. Waves of arid heat radiated from the open doorway as though a blast furnace were operating just out of sight, and a nauseating stench of sulfur and burnt, decomposing flesh filled the air.\n\nA handsome, clean-shaven man with glossy black hair emerged from the doorway. He was wearing an expensive, custom-tailored business suit and smiling affably. \"Good afternoon, ladies and gentlemen,\" he said in a polite, cultured voice.\n\n\"Asmodaeus!\" hissed Maria in terror as she cowered behind me. In other circumstances, her response to an inoffensive-looking man in a business suit would have been either cause for amusement, or cause for concern about her sanity. I never would have expected a demon to look so normal, and that surprise is part of the reason that I instinctively suspected that her fear was justified. Evil at it's most effective seldom looks the part.\n\nI was amazed by Skagematuck's speed. He uttered something in his own indecipherable tongue, and with a blur of motion sent his flint-tipped spear hurtling towards the demon. Despite the fact that he looked anything but athletic, Asmodaeus responded to the threat with superhuman speed and agility. His hand caught the spear, stopping it instantly before the primitive stone spear-point had gotten within a foot of damaging the demon's expensive suit. Asmodaeus gave the shaman a disapproving glance before snapping the shaft of the spear like a twig between his fingers.\n\n\"I'm not here to fight,\" he said smoothly. His voice sounded as though he could have made a very comfortable living by coaching politicians, lawyers, and televangelists in the art of persuasive speaking. \"I'm here to discuss business.\"\n\nI have done enough reading on classical Judeo-Christian demonology to know that Asmodaeus was typically regarded as one of the Kings of Hell. Certainly he is a powerful spirit by all accounts. Traditionally he is associated with twisting and perverting lust, but most of that is likely conjecture on the part of 16th and 17th century demonologists who seemed determined to assign one specific Deadly Sin to each of the seven Kings of Hell. The more ancient tales speak of Asmodaeus' terrible thirst for horrific bloodshed, showing that his repertoire is not limited to any one sin in particular. The Zoroastrian name for him is \"Aeshma of the Bloody Mace\", a reference to the sickening violence that the demon enjoys inspiring among mortals. Gods and demons, like rivers and mountains, live long enough to have many names.\n\nThe ancient devil looked at me directly. His dark, intelligent eyes were disturbingly likable. Remembering Erin's success in staving off unholy influences with holy water, I uncapped the bottle that Cardinal Imamu had given me and sprinkled a bit on myself. I wasn't overly concerned about how silly I might look. I tried to be subtle as I allowed a bit to drip onto the knife that was clipped inside my pocket.\n\nAsmodaeus backed away with a foul look on his face until I re-capped the bottle. He looked as though it were a flask of excrement instead of water that I was pouring upon myself. I chuckled as I remembered the microbiological study of holy water that had been conducted by Vienna University. Perhaps the demon was justified by his response.\n\nHe gave me a glance as though he could stare into the hidden recesses of my very soul for a long moment before he snickered condescendingly. \"Not to be impolite, but as much sex as you have been having since your last shower, I would highly recommend that you use more water than that to cleanse yourself.\" He looked past me at my daughter and smiled. \"Ah, Enyo! I'm pleased to see that you are very bit as lovely of a young goddess as I had hoped you would be. I feel quite certain that I will get to know you quite well in the near future.\" His words sounded pleasant, but there was a lecherous undertone to them that repulsed and disgusted me.\n\nHe turned towards me, his face charming. \"Ah, John. It's a great pleasure to meet you, but please forgive me if I skip many of the usual pleasantries. I'm on a bit of a tight schedule, and there is need for us to conduct our business here quickly. As you know, a mentally ill goddess named Eris has determined to destroy your world and every living creature on it. While I confess that there have been some misunderstandings between humanity and the dark realms before, we don't wish for the destruction of your species any more than you would. As such, we are more than happy to help you stop Eris' plans to destroy your world, and even to forgive your unprovoked theft of energy from Queen Eisheth and her companions, all in return for but a very minor favor that you will be able to do quickly and easily right here. All we want to do is to keep Eris from destroying your world, and I would like your cooperation and assistance in that matter.\"\n\nI knew that demons have been manipulating lesser beings for countless aeons, and I could easily see how. I instinctively wanted Asmodaeus to like me, and I wanted to give him whatever he might ask for. He sounded reasonable, likable and persuasive. No matter what he said, any person's first instinct would have been to simply agree with him. I was grateful for the holy water and blessed rosary to help keep me grounded. \n\nI stared into his dark eyes, feeling as though I were being drawn into the irresistible black hole of the demon's terrible will. It took tremendous effort to pull away from the demon's power and think for myself. \"I'm already actively involved in preventing Eris from destroying the world. What sort of 'cooperation and assistance' are you hoping to get from me?\" I asked.",
        "He began to walk around me, towards where Enyo, Maria, and Kaitlyn were standing. I stepped in front of him and he reacted with mild surprise, as though not expecting my action. Enyo faced Asmodaeus defiantly. Maria and Kaitlyn cowered, frozen in horror.\n\n\"I'm certain that what you are already doing is of the utmost importance, but are you really sure that you're doing all that you can for your world? To protect your family? Lots of irresponsible sex might be fun, but please don't try to pretend that it's heroic. All we need in order to resolve this entire situation quickly, effectively, and peacefully is for you to provide us with something to trade to Eris for the Apple. Just tell your daughter to come with me peacefully. She trusts you, but I'm certain that she has had her poor little head filled full of all manner of stories told by her insane mother. Tell your daughter to trust me. She will listen to you.\" He stopped and smiled, raising his eyebrows pleadingly as he steepled his fingers before himself.\n\nSomething didn't feel right, and it wasn't just that I didn't like the way that he was talking about Eris. Certainly she wasn't the most stable goddess, but I didn't like his dismissive statements regarding her sanity. I didn't trust Asmodaeus, and I remembered hearing about what the world had been like when the legions of Hell had controlled the Apple of Eris in the past. These days, Hercules wasn't around to go rescue the Apple from the infernal pits, and the world world would be in big trouble if demons got their hands on the Apple.\n\nAsmodaeus looked at me pleadingly, encouraged by my lack of an immediate refusal. \"We're only asking to borrow her for a few days. Now, don't worry. We will return her to her mother soon in exchange for the golden Apple, and once Eris no longer has the Apple your world will be safe from total obliteration by universal warfare. Everyone wins. All I need you to do is avoid doing anything stupid and helping me out for the good of your entire world.\" His voice sounded calm, but pleading and persuasive.\n\nWhere the hell was Acratophorus? Or Ishtar? I certainly hoped that Erin, Rachelle, and Cherise were praying for me. My heart was pounding in my chest. While Asmodaeus did not look particularly intimidating, there was something about him that terrified me. It was as though there were some sixth sense warning me of the demon's awesome, terrible, hidden power.\n\nAsmodaeus apparently grew tired of waiting for me to respond, and so he stepped forward, effortlessly pushing me out of his way. I stumbled and landed on the dusty dirt floor, and my head bumped hard against a rotten wooden wall. I cursed as I staggered to my feet in time to be knocked back by the concussive blast of a deafening explosion. By the time I was back on my feet and able to see clearly through the dust, Maria and Kaitlyn were gone from sight. \n\nThe businessman or politician that had stood before me moments ago had disappeared, and in his place was a hideous, obese aberration so horrible that the memory of the sight would haunt me for the rest of my life. Asmodaeus had transformed into a blasphemous horror whose hideous, blob-like body seemed to be composed entirely of a writhing mass of slimy, eel-like tentacles covered with vile-looking hooks and wickedly barbed spines that pierced through his rubbery, mucus-smeared skin like the teeth of a saw. From a hundred sightless faces that terminated the tentacles, circular lamprey-like mouths lined with multiple rows of jagged shark-like teeth slithered and grasped blindly around them.\n\nWrapped in the filthy embrace of a dozen of the slimy tentacles that crushed and squeezed about her, Enyo seemed to be fighting for her very life. With wild, horrified eyes she raised her fist and brought it down hard as another massive blast shook the frail walls of the barn, and a half-dozen of the squirming tentacles were reduced to mutilated stumps. From the severed ends of the tentacles, a mass of slithering blood-red worms were dropping to the floor and crawling sightlessly in all directions. But Asmodaeus had many tentacles at his disposal, and soon Enyo was struggling helplessly against literally dozens of impossibly strong appendages that seized her from all directions. The beautiful young goddess cried out in pain and horror as the vile barbs ripped through her dress and cut deep into her tender flesh.\n\nI heard the hideous beast taunting his captive. \"Your mother will give us anything we ask of her when she hears your terrified and pain-filled screams echoing up from the bowels of Hell! Perhaps I will wait a few days to tell her that you're with me, until I have satisfied my lust and, in the process, torn and ruined your body so grotesquely that the ragged flesh of your shredded orifices is incapable of pleasuring me. When I am finished, the filthiest of our demons will enjoy taking turns ravaging whatever is left of your tattered and mutilated cunt day and night while your cry out for mercy. All the while, the infernal flames of Hell will burn your pretty skin but be unable to kill you no matter how much you might wish to die. Sometimes, it just doesn't pay to be a goddess that lives forever!\" \n\nHis words sickened me, but not half as badly as his voice did. Human language was never intended to describe how sickeningly, impossibly horrible the sound of the demon's voice was. Human beings have no business knowing that such blasphemous, nauseating horror can exist in the form of mere sound. If the mass-graves of the most horrifying of genocides could open their mouths and speak, their voice would have resembled that of Asmodaeus. If a million bloated corpses were disemboweled at once, and that sound ripped from their rotting guts were given the power to speak words, then it would perhaps resemble what fell upon my ears at that moment. Such sounds as the demon's voice should not be allowed to exist in this world, and there are good reasons that they are usually confined to the darkest pits of Hell. I had previously only imagined that I knew what true horror was. Now, I truly knew that there were things in the universe that were too horrible for any human being to face, and I prayed to whatever benevolent deities might listen for the strength to survive this ordeal.\n\nMy daughter struggled bravely against the hideous beast, but was outmatched and overwhelmed. Asmodaeus was dragging her slowly and inexorably towards the gaping portal that led to his lair in Hell. \n\nIt was pure instinct and years of hard training, combined with a healthy dose of good fortune, that allowed me to save her. I had trained with a throwing knife for many years, as the scarred wooden targets in my yard can attest. Judging the distance to the beast happened naturally and automatically without any conscious thought being necessary. The trusty old knife that had been my faithful companion for so many years seemed to flash open almost of its own accord, spinning in my hand as I deftly caught it harmlessly by the blade. I felt the wet holy water that had trickled down the enchanted blade from the locking mechanism where it had been dripped. \n\nMy hand choked up close to the handle, to slow the rotation of the knife after it was thrown and to ensure that, at this particular range, the blade would be certain to strike point first. My arm snapped downward towards the beast in a powerful overhand throw. \n\nDistracted by his squirming prey, Asmodaeus did not see the whistling blade until it was far too late for him to save himself. He moved his massive bulk impossibly fast for his size, but it was too little, too late. The razored edge of the enchanted, holy-water covered blade ripped a terrific gash through what might have passed for the monster's abdomen. A steaming pile of tangled entrails made a sloppy sound as they slipped wetly and through the wound, making a grisly pile upon the floor as the demon uttered a horrific shriek of agony and rage.\n\nEnyo's eyes were wide with terror as she struggled from the slithering appendages that had grasped her, crawling desperately away from the wounded beast towards safety.\n\nAsmodaeus growled, a hideous gurgling noise as he pulled his corpulent, mutilated bulk along the floor towards me, snarling as his hideous barbed tentacles grasped for my face. I uncorked the holy water again, throwing the entire bottle at him. In his wounded state, he could not move quickly enough to dodge it, and it hissed and sizzled against his flesh like acid, dripping into his empty abdominal cavity and dissolving him alive from the inside out. Evil white vapors rose from the blistering, corrupted flesh as the holy water ate deep into the demon's skin. Still, the beast moved towards me as I backed away, holding the blessed rosary in front of myself like a shield as I circled towards the pile of tools, on the workbench. As I snatched a rusted ball-peen hammer from the table, a tentacle lined with wicked fang-like barbs snatched me from my feet. I struck the appendage a powerful blow with the hammer, even as many others moved to join it. Asmodaeus' tentacles were crushing my chest, driving wickedly long thorn-like spines deep into my flesh. I fought ineffectually against them, but was pleased to see them blistering and sizzling where they contacted the holy water that I had poured upon myself. A deep ache flowed from my leg where the lamprey-like mouth of a tentacle was feasting upon the muscles of my calf. Perhaps soon, the rest of me would be similarly devoured. I snarled and struck the tentacles again with the hammer, determined not to let the beast hear me scream before I died. \n\nWith a primal battle cry, Skagematuck lunged from behind the vile creature, clutching a rawhide pouch. \"Set this on fire!\" he yelled at Enyo.\n\nThe dazed goddess gave him a confused look before she gestured towards the pouch, and it immediately exploded into a ball of vigorous flame. The shaman cursed as he momentarily dropped the burning pouch before catching it in mid-air. He hurriedly extinguished the fire, allowing a thick, dark, aromatic smoke to drift from the smoldering contents of rawhide pouch and fill the air.\n\nThe tentacles immediately recoiled from the smoke as Skagematuck advanced bravely towards the creature, the pouch of burning material in one hand, the distal end of his shattered spear in the other. His hawk-like eyes were brave, fierce, and relentless. The ancient shaman was chanting strange words in a low voice, his voice rhythmic and enchanting in its own right. The air in the barn was filled with a woody, natural scent that streamed from the leather pouch, and the scent of his aromatic smoke sent my mind back to happy memories of cooking outside while camping on a clear, beautiful sunny day.\n\nAsmodaeus tried to slither towards the enchanted doorway from which he had entered, but he was badly wounded and moving slowly. Skagematuck struck like a rattlesnake, impaling the beast with the broken spear. The demon was going nowhere. \n\nAsmodaeus uttered a despairing wail as Enyo advanced, raising her hands high over her head. Blue light flickered like ball-lightning between Enyo's outstretched fingers, and the look on the goddess' face spoke of fearful wrath and terrible vengeance.\n\n\"You were going to take me down to Hell against my will, rape me, mutilate me and torture me until my mother traded the Apple to get me back?\" She uttered the words slowly and with great menace, her voice trembling with fear and rage. \"My mother would never have given you the Apple to save me.\" The words were a cold accusation through clenched teeth.\n\nAsmodaeus knew what was coming. He shrank back, cowering before the enraged goddess and begging for mercy as Enyo's hands slammed downward. A torrent of purifying blue fire streamed from Enyo's outstretched hands and fell upon the beast like judgment from heaven. The fire fell from Enyo's hands, streaming outward towards the beast as she sobbed from fear, pain, and exhaustion until the flames licked nothing but a bare spot on the floor. One of the Kings of Hell had been utterly destroyed, an act that had perhaps never happened before in the history of the universe. With an angry gesture of pure contempt, she shattered the portal through which the demon had entered with a massive blue fireball.\n\nDrained of the rage that had supported and sustained her, Enyo collapsed sobbing onto the floor, still crying. Her shimmering blue robe had been shredded by the claws and teeth on Asomdaeus' tentacles, and the flesh beneath them bled from numerous deep lacerations. I began walking towards her, but my leg felt funny. I looked down at the ragged, blood-soaked meat that had recently been my left leg, and was amazed that I could stand at all. I was loosing a lot of blood, but I felt as though I had to get to Enyo.\n\n\"Lie down,\" said Skagematuck as he guided me towards Eisheth's rumpled and discarded robe. \"Enyo will be fine. She's a goddess, and there should be plenty of spiritual energy around here for her to absorb after killing Asmodaeus.\"\n\n\"She needs me,\" I responded. \"Even if she's fine physically.\"\n\n\"Yes, and she needs you alive. You are losing far too much blood very quickly. Lie down,\" the ancient shaman ordered.\n\n\"You saved my life, Skagematuck, and if it weren't for you, that demon would be raping my daughter in Hell right now,\" I said. \"Thanks.\"\n\n\"You saved me once, too,\" the old shaman said, as though the words tasted bad in his mouth. This conversation was perhaps getting too emotional for the grumpy old man's taste. \"Now relax. You're losing a lot of blood. I would put a tourniquet on your leg for you, but I am weakened from manifesting to destroy Asmodaeus.\"\n\nI hated the idea of using a tourniquet on my leg, but Skagematuck was right. I was already feeling faint, and I would be going into shock soon if I didn't get the blood loss under control. It really was a miracle that I wasn't already unconscious.\n\nI reached into my hip pocket to retrieve my handkerchief. Using my ruined pants for padding beneath the tourniquet, I folded and knotted the handkerchief about two inches above the worst of the injury, ignoring some smaller lacerations. I felt queasy as I saw the toothmarks that had scarred deeply into my tibia, exposing glistening white bone and even some deep red marrow. I suddenly understood why the injury hurt so badly, especially when I jarred it. The muscle around the injury looked like bloody rags made of hamburger meat, and blood was flowing freely like water running from a faucet. I still had the ball-peen hammer in my hand. I grimaced as I inserted the splintered old wooden handle under the handkerchief, and prepared to begin twisting when strong hands took me by the shoulders.\n\n\"That's not necessary, John. You did great, and revived me just in time to calm people down and prevent your country from launching the nuclear missiles that would have doomed the world,\" came Acratophorus' deep voice.\n\nI turned to see that Acratophorus and Ishtar had appeared without my noting it. I was fortunate that they weren't demons; I would have been dead even before I had known to defend myself. A third figure was there as well, a tall, beautiful woman in gleaming bronze armor. If she was Athena then I was surprised at how accurately classical sculptors had depicted her.\n\nThe god of wine and revelry gently untied my handkerchief and looked at my mangled leg, before blowing soothingly on the injury. Power like static electricity seemed to crackle in the air as my leg was bathed by the kindly god's sacred breath of life. I watched in amazement as the bone re-formed, clean and gleaming white. Torn and shredded muscle painlessly knit itself together before my astonished eyes, and severed tendons, veins, and arteries were mended while a cool, refreshing feeling flowed through my entire body. Skin and hair replaced what Asmodaeus had destroyed. My pants were still reduced to blood-stained rags, but my leg was as good as it ever had been without even a new scar to show for my trouble.\n\n\"There's an incredible amount of spiritual energy here.\" Acratophorus said. \"Athena is over there teaching Enyo how to heal herself using that energy as we speak. Your daughter is going to be a powerful goddess one day, but she still has an awful lot to learn. I only hope that she lives long enough to learn what she will need to know in order to survive. Word is already spreading that you, Skagematuck, and Enyo killed one of the seven great Kings of Hell. I'm glad that you saved Enyo from what they would have done to her, but I really wish that you hadn't killed Asmodaeus. That's sure to cause a great deal of trouble for us very soon, my young friend. And we already had far more than our share of trouble to handle. Not even the mighty Abrahamic God chose to kill such creatures, even when they were openly making war against the great throne of Heaven! Tread lightly, my young friend. I fear for you.\"\n\nAcratophorus glanced at the ghostly human outline that stood nearby. \"Skagematuck, you've more than repaid John for what he did to help you. Demons were already hunting you to punish you for escaping their control even before today. Now that you've helped to kill Asmodaeus, it is probably best if you go on to your afterlife immediately. Even the gods don't dare to do what you have just done. If I were you, I would go somewhere safe, and stay there forever.\"\n\n\"I am not going to my rest until the world is safe again. I will not enter the afterlife until I have earned an honorable seat among my ancestors,\" replied the shaman.\n\n\"You've already earned it,\" came Ishtar's voice from nearby. She looked concerned for the old man. \"Go somewhere safe now, before the demons come for vengeance!\"\n\n\"I am a great warrior, and my fathers were great warriors before me. But I will not enter the presence of my ancestors until I am a great hero as well. My tribe cannot hate me for failing to protect them from destruction if I have saved the whole world,\" Skagematuck retorted in a tone that did not invite further conversation.\n\n\"Your ancestors don't blame you for what happened, and your loved ones have been missing you for thousands of years. You have no idea how happy it would make your family if you simply went home to them,\" Acratophorus said gently. Skagematuck looked away, his eyes sad and distant. \"They would certainly view you as a hero for what you have done today. By the way, how did you manage to repel a demon as powerful as Asmodaeus long enough to kill him?\" the god asked conversationally. Perhaps he already knew and simply wanted to give Skagematuck a chance to talk about something more pleasant, but the question certainly sounded genuine.\n\nSkagematuck smiled, and I was impressed at Acratophorus' skill at cheering up the old man. \"Tobacco, sweet grass, cedar leaves, sage, and the dried and powdered heart and liver of a river catfish. I have done much praying over this mixture for many years, and it is very good for warding off evil spirits.\"\n\n\"Impressive,\" said Acratophorus. \"It sounds like the gods haven't abandoned you after all if they blessed your incense with the power to repel a mighty demon like Asmodaeus. Welcome back to your status as a holy man! And the addition of the catfish liver and heart to your sacred incense was a nice touch. Most people wouldn't have thought of that.\"\n\n\"Then they need to read the Apocryphal book of Tobit,\" I quipped with a smile. I stood up, still feeling a bit faint. My restored leg was as good as new beneath the shredded and blood-soaked pants, and it easily supported my weight. Maybe it was my imagination or the power of adrenaline, but an ache in my knees that had been my constant companion for many years seemed to have disappeared. \n\nI went looking for my knife near the blackened earth where the demon king had been killed.",
        "\"Is this what you're looking for?\" Ishtar offered, holding up the smoldering nub of my knife's handle. My heart sank. I had really liked that knife even before Acratophorus had enchanted it, but now it was destroyed. Ishtar smiled at me. \"I took the spell off of you, so we can read your mind again. The combination of the demon's blood and your daughter's fire was probably enough to destroy your knife.\"\n\nEnyo approached me, her beautiful face radiant. \"Thanks for saving me, Daddy,\" she said as she pulled me into a warm, sweet embrace. I hugged her back, feeling happy and protective of my new daughter. She gave me a gentle kiss on the cheek. I returned it, and she smiled at me. \"If I have to have a mortal as a father, I'm glad that it's you.\"\n\n\"Thanks, I think.\" I replied with a smile. \"Be careful, Sweetheart. Things are likely to be dangerous for a while.\"\n\nShe returned my smile and embraced me again. \"I'll go home to Mother for now. I think I'll be safe there.\" She placed a gentle kiss on my cheek before she disappeared in a delicate cloud of shimmering blue sparks and iridescent indigo smoke.\n\nFor the fist time, Athena addressed me. Her voice was resonant and melodic, but her words sounded regal and commanding. \"We need to get going. Have your lady friends inside the house give you a ride to Father David's parsonage. Ares is siding with Eris in this affair, and doing his part to stir up even more old hatreds and ancient rivalries in an attempt to spark universal warfare. Eris was doing fine with bringing about a war capable of destroying your world even without his help. Ishtar, Dionysus and I will go and attempt to get Ares under control. And the legions of Hell are absolutely certain to use the fact that you killed one of the Kings of Hell to their advantage. I don't know what they're going to be doing, but it won't be good. The Abrahamic God is very protective of his people against demons and other deities, and it's good that you have several very holy people on your side. He is one of the few deities that has the sort of power you will need to protect you in the near future. I'll talk to my father and see if I can get his advice. Now that one of the seven Kings of Hell has been killed, I don't know if even Zeus will be able to remain neutral.\"\n\nAthena gestured at the relics that Eisheth had left behind her. \"Take Eisheth's robe and diadem to Father David and Cardinal Imamu; their Orders are used to dealing with items like that. We're fortunate that there were not similar objects left by Asmodaeus after his death. Things that have been owned by demons are typically not the sort of thing that it's wise to leave lying about. The robe might have some magical properties, but the diadem of one of the four Queens of Hell is certain to be filled with all manner of unwholesome sorcery.\"\n\nAcratophorus pointed at Skagematuck, and I watched the ghostly shaman's outline become clearer and more distinct. \"Here's some of the demon's residual spiritual energy so that you'll be a bit stronger, if you're still determined to stay here with John.\"\n\n\"I am determined to behave honorably towards you and towards my friend,\" replied Skagematuck. It felt good to hear the old man refer to me as his friend.\n\n\"Where are Maria and Kaitlyn?\" I asked.\n\n\"They're going to serve Ishtar in the afterlife. In other words, they live rent-free in Ishtar's heavenly palace for as long as they would like. I think they'll like that far better than being slaves to demons, once they get used to the idea,\" Acratophorus replied with a smile. \"They'll probably come around and realize how much of a service you've done them soon. Neither one of them is really a bad person, although they both did some pretty rough things when they were alive, and some absolutely horrendous ones after becoming demons. Hang onto the silver rosary that Cardinal Imamu gave you, and be careful. I'll talk to Hephaestus about getting you something to replace your pocket-knife.\"\n\nAcratophorus looked at me sadly, as one might regard a friend that had just been diagnosed with terminal cancer. He was obviously concerned for my safety. \"I wish that I could stay here with you, but if I don't leave to attend to my half-brother Ares, then there will soon be nowhere safe remaining in your world.\" The god clapped me on the arm with a tired smile, and then vanished.\n\n\"Thanks again,\" I said to the empty spot where Skagematuck had been standing. It felt odd to suddenly be alone in the barn. But now that the man who had hung himself here had been properly avenged, the atmosphere in the place didn't seem nearly as dreary as it once had. I walked over to the workbench and slipped on my shirt, socks and shoes before making my way back towards the house. I wondered what I would tell the ladies if they asked how my pants had become so badly torn. "
    ],
    "authorname": "GPLockwood",
    "tags": [
        "caution",
        "spanking",
        "teasing",
        "succubus",
        "rough sex",
        "group sex",
        "ffm",
        "magic",
        "ghost",
        "adventure"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/paranormal-research-club-ch-08"
}