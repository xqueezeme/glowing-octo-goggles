{
    "title": "Bandit",
    "pages": [
        "Author's Note:\n\nIf you are looking for a fast read, with a lot of sex; move along, there is nothing for you to see here. If not, as always, I hope you enjoy it.\n\nYDW\n\n*****\n\n\"Come on Bandit, time to go to work.\" I said to my service dog Bandit as I took his vest out of the closet and headed to the living room. I had spent most of that entire early December morning chopping firewood and filling up the water containers inside the house getting ready for the onslaught of a massive winter storm that was sweeping down from Canada. Now it was time to go to town and buy the stuff I would need to last a week or more by myself in my cabin.\n\nBandit sat beside the fireplace, alert with his ears and eyes signaling that he was more than ready. His tail thumped excitedly on the floor of the living room and he was almost giddy with excitement at the prospect of having something to do today. When I am here at home, I feel safe and secure enough that I don't really need him, but when I go out in public, Bandit becomes my furry, four-legged, sidekick and companion.\n\nI retired as an Infantryman from the Army after twenty-three years about five years ago with the rank of Master Sergeant. When I retired, at the relatively young age of forty I was a wreck, both physically and mentally. Three tours in Iraq and two in Afghanistan had taken their toll on my body and my mind. I didn't do anything sleek and sexy. I was never a Ranger or a Green Beret, I was just a grunt who walked the soles off more pairs of combat boots than I cared to think about. I sound like a bowl of Rice Crispies when I wake up in the morning, and I finally, with the help of the VA and a small support group of other veterans, am coming to grips with the effects of what living with Combat Related PTSD is going to be like. \n\nThe later had taken a toll on my marriage and my daughter and son. My ex needed stability and a stay at home husband; or at least one who stayed home more than half the time. My five tours had taken place over a ten-year period and that was too much stress and strain for her. Combine that stress with the fact that I was a twitching wreck by the start of my fifth tour and the marriage dissolved. My daughter was sixteen now and my son was twenty and I had been estranged from them for over six years because my ex had me declared a danger to them all during our divorce in 2011, shortly after I got home from my final tour. Even though I had already dropped my retirement packet, the damage was done. Honestly, that was probably the truth because back then, I was a danger to myself and everyone around me. \n\nThat is the biggest reason that I had Bandit. He would let me know when I was starting to have an anxiety attack before I knew I was having one. He was four now and had been with me for two years. It could be anxiety, depression or anger; it didn't matter because he could figure it out long before I could and when I saw him alert I knew to take a step back and figure out what was wrong. I had finally started slowly moving forward with my life because of him.\n\nToday was one of the days where I had to go out and be around people and I really hated being around huge crowds, but the storm would be pushing through soon and hitting us hard for the next twenty-four to thirty-six hours. I really had to pick up a few essentials at Wally World to make sure I could get through the 8-10 inches of ice, snow and single digit temperatures that were in the forecast. The essentials in this case meant, bread, milk, toilet paper, a few cases of bottled water, maybe, maybe a twelve pack of beer and a lot of propane and kerosene, in case the power went out. \n\nI live in a very rural area in the mountains of western Virginia. By rural I mean my nearest neighbor lives a mile and a half away and there are so many trees on my two hundred acers of property that for me to see the sun rise I would have to drive for two minutes to get a clear view of it. 'Town' is fifteen miles away over some very mountainous roads and has a population of just under six thousand. When it does snow up here the highway department doesn't scrape the roads, they just let it melt naturally so making sure you have what you need to get through a big storm is a necessary evil. If the power goes out, you can be living on propane for heating and cooking and kerosene lamps and candles for lighting for a week or more. \n\nAs we walked toward my old Jeep CJ7, I mutter a silent prayer that the store wouldn't be too crowded, and I could get in and out without any drama. Bandit and I were regulars there and most of the staff knew not to approach Bandit while he was wearing his vest; the other customers, not so much. Their reactions ranged from fear to amusement seeing a twenty-six inch tall, eighty-pound German Shepard on a leash in Wal-Mart. Even with a yellow vest that said, \"SERVICE ANIMAL DO NOT APPROACH\", people were constantly walking up and asking to pet him and some, if not most, would get miffed when I said, \"Please don't.\" \n\nAs we pulled into the parking lot I realized that my worst fear had come true. The place was jam packed with last minute shoppers who were trying to beat the ice and snow. I sighed, grabbed shopping cart and headed in to the chaos that was Wal-Mart, on a Saturday afternoon. This was not going to be fun.\n\nWalking by the entrance to the store I noticed what appeared to be a young woman standing near the door. She wasn't asking people for money or even remotely harassing the steady stream of customers going in and coming out in a rush. She was simply standing there with her jammed deep into the pockets of her jeans. She was wearing a light blue jacket, well-worn jeans and sneakers and what she had what appeared to be short blonde hair, peeking out of a pink beanie cap that was pulled down over her ears. She also appeared to be shivering somewhat, which wasn't surprising, because the temperature had already begun to drop, and I estimated that it was in the lower forties by now. Bandit cocked his head looking at her as we walked by; oddly, he even turned his head to look at her once as we walked passed. Trudging past the Salvation Army bell ringer, we stepped into retail Hell; and he became all business. \n\nAs we exited the store forty minutes later with our groceries and other stuff in the cart, she was still standing there. I walked past her and looking at her I noticed that she still wasn't making eye contact with anyone, she was just standing there shivering. I got a few feet past her and noticed that Bandit had turned his head back to look at her; only this time he whimpered. That's when I decided to stop and see what was going on. \n\n\"Hey.\" I said softly, not wanting to spook her.\n\nShe didn't answer and continued to look down at the ground. \n\n\"Look I know this sounds awkward,\" I said approaching her slowly, \"but, if you are in some kind of trouble, maybe I can help. Seriously, If I can't, I know plenty of people in town that can.\"\n\nShe glanced up at me and when I saw her eyes. They were a vivid shade of blue, but I couldn't help but notice that they looked far more tired than mine did on my worse day. They were almost dead; she looked up at me like a puppy that had been abused its entire life. It was sad considering that she had a very pretty face and only looked to be, maybe, twenty-five at the most. \n\n\"I'm okay.\"\n\n\"Uh huh. Let me guess, you stand here until you can't take the cold anymore and then you duck inside for a few minutes to warm up.\"\n\n\"What's it to you if I do?\" she said defiantly, her eyes flashing angrily at me.\n\n\"Well, if you haven't heard there is a hell of a storm on the way and that jacket isn't going to protect you much when the temperature drops to single digits tomorrow afternoon. But, I know of a church just up the road that operates a woman's shelter and they might have room for you for a few days. I can call and ask them if, you'd like.\"\n\nI could tell she had some sort of retort on her lips when Bandit raised his right paw and then sat it back down on the ground whining. That was an alert for anxiety but given my current surroundings I didn't know if it was the young lady in front of me or if I was the one who was beginning to have problems. She glanced down at him, almost smiling so, I paused for a moment and then grinned at her. \n\n\"This is Bandit, be careful, he's a real ladies man. My name is Sam, Sam Williams. So, do you want me to call the shelter and see if they have room?\"\n\nBefore she could answer I heard a voice behind me say, \"Sir? Is she bothering you?\" I turned to see a kid not much older than she was standing there with his arms folded across his chest. He was wearing a nametag that said 'Mike' and below that 'Loss Prevention'. \n\n\"No, I've got it.\" I said looking at him as the girl shrunk back and tried to get small.\n\n\"Okay but if,\" \n\n\"I said I've got it son. Don't make me say it again.\" I responded a lot more firmly than I should have. \n\nWal-Mart's version of Paul Blart looked at my face for a few seconds and then trying to put as much distance as he could between the two of us, he almost sprinted across the parking lot. \n\nI looked back to the girl and still couldn't read her emotions. I couldn't tell if she was angry or relieved that the LP guy had left us standing there alone. Just then, Mother Nature decided the issue for her and it started to mist a light, but very cold rain. Bandit sat there looking back and forth between us and then he leaned against my leg. Again, it was another alert that someone's anxiety level was on the rise. \n\n\"So. Stand here, cold, wet and miserable or go someplace warm and safe and dry? It's your call.\"\n\n\"Why?\"\n\n\"Huh?\"\n\n\"Why do you give a shit about me? Nobody else seems to.\" she mumbled, looking down at the ground with a finality in her voice that said, \"I gave up a long time ago.\"\n\n\"Because four years ago, when I was at my lowest and thinking about jumping off a bridge in Richmond, an off-duty cop that didn't have to, reached out his hand and said, \"Let me help.\" Maybe, just maybe it's time I paid him back.\"\n\nShe shivered in the cold rain that was falling and after a long while, softly whispered \"Call them.\"\n\n\"Thank you.\" I said smiling and reaching for my phone. \n\n\"Sam, I am so sorry, but with the storm rolling in we are already over capacity. I have been on the phone with every shelter in town all day long. We are all scrambling to find spaces and there aren't any. I wish I could help you but,\" the minister said leaving it hanging.\n\n\"How about if I bought her a cot, pillow and sleeping bag? Could you take her in then?\"\n\n\"I'm sorry Sam.\" he said gently as the call disconnected.\n\nI had the call on speaker, so she could listen in to and see that I wasn't trying to bullshit her. I thought I had made a huge mistake when I saw her shoulders slump as the minister said there wasn't any room in the inn, so to speak. She looked at me and with tears in her eyes said, \"Thank you Sam, at least you tried. That is more help than I have had in over two years.\"\n\n\"I'm not done yet, umm, sorry I haven't asked before but, what is your name?\"\n\n\"Misti,\" she said, \"Misti with an I. Misti Smothers\"\n\n\"Well, Misti with an I, I have, what is known as 'Plan B' up my sleeve.\" I said smirking at her smugly. \n\n\"What's Plan B?\" she said, looking up at me. \n\n\"We get arrested and go to jail. It's warm and they will feed us there.\"\n\n\"I hope to Hell that there is a 'Plan C', up another sleeve.\" she said half laughing. \n\n\"Well, that depends on how daring you are.\"\n\n\"I'm standing in a Wal-Mart parking lot, six hundred miles from where I was born, in the cold and rain, talking to a total stranger. I've got two dollars and thirty-seven cents to my name. The clothes on my back are all that I own and my only possessions in the world are a dead cell phone, a half a bar of soap, some hotel toothpaste and my toothbrush. Does that qualify daring or do I need more?\"\n\n\"Plan C. You wait here in my Jeep. Bandit and I will go back inside, grab you a change of clothes or two and you can hang out at my place; at least until the storm blows past.\"\n\nShe stared at me briefly and then said sadly, \"No Sam, I can't let you do that. It is sweet, but it is way too much to ask. I'll figure something out, I always do.\"\n\n\"You didn't ask, I offered, now say thank you and help me load the groceries. I won't be twenty minutes. I promise. I'm not a serial killer or a rapist and you'll be a lot safer and warmer at my place than you would be here in town tonight.\" I said walking to the Jeep. \n\nShe paused for just a second before she started following us. \n\n\"You are nuts!\" she exclaimed. \"And if you were a serial killer or a rapist would you tell me?\"\n\n\"Would you?\" I asked smiling at her.\n\n\"Probably not.\" She said laughing. \n\n\"Can you cook?\" \n\n\"Yes.\"\n\n\"Good! I can't, at least not well. That is how you are going to earn your keep.\"\n\n\"If you say so but I still think you're nuts.\" She said smiling and shaking her head as she grabbed a bag to put in the back of the Jeep.\n\n\"What sizes do you wear?\"\n\n\"Extra small shirts and,\" she began before I cut her off. \n\n\"Maybe you need to come in there with me instead.\" I suggested, remembering what it was like to try to shop for a woman, \"There might be a few more things you need that I wouldn't think of on my own.\"\n\n\"That might be a good idea.\" She added after pausing for a minute to think things through.\n\nWe were in and out in twenty-five minutes. We did get some strange looks inside the store, but I cut them off with the best 'Go fuck yourself.' glare I could give them. Even my new friend Mike decided that discretion was the better part of valor and retreated a few dozen yards away. All in all, I spent just over three hundred dollars on a coat, gloves, shirts, jeans, a pair of pajamas, a flannel nightgown, a robe, underwear, two new bras (32C), hiking boots and some other things that I would have never thought about like; deodorant, tampons, pads, toothpaste, Emory Boards, a hair brush, a new toothbrush, a toiletry bag and a medium sized back pack. \n\n\"I have no idea how I'm going to pay you back for all of this.\" She said quietly as held the Jeep's door open for her and waited for her to climb up. \n\n\"Don't worry about it and before you even think that I would suggest it, sex is off the table. So that is one thing you don't have to worry about.\"\n\n\"Thank you.\" she said, blushing and looking down at the floorboard.\n\n\"Load up Bandit!\" I said, opening the back door. \n\nHe looked at me as if to say \"Dude! Really? Who is THAT tiny human and why is IT sitting in MY seat?\"\n\n\"Load up!\" I repeated pointing at the backseat. \n\nHe jumped in the backseat and lay down with his head on his paws, trying to figure out why he was being punished. I took his vest off and tossed it in the back with the food and other items and then got in behind the wheel. Once the vest came off, he became a different dog. He immediately sat up and then wedged his way between Misti and me in the front seats. His tongue was lolling out of the side of his mouth and he was bouncing around excitedly. He had gone from Work Mode to Pet Mode that quickly.\n\n\"Can I pet him?\" Misti asked in what sounded like a hopeful tone as I backed out of the spot. \n\n\"Sure, just be careful because he may try,\" I was too late. Bandit leaned into her and ran his tongue up the entire length of her face in one fell swoop, \"to lick you.\" \n\n\"You tried to warn me.\" Misti said squealing with laughter, sitting back in her seat and pushing Bandit's head away from her face. When she started scratching his ears, he was toast, he kept his head between us the entire trip and every time she stopped he would gently nudge her hand until she started again.\n\n\"Typical male; he steals one kiss and if you scratch his head and neck afterwards he will follow you anywhere, huh Bandit?\" she said laughing as she softly scuffed his neck. \n\nBandit didn't say anything, but the \"Neener, neener.\" look I was getting from him spoke volumes. \n\nThe sky had gotten dark with clouds by the time I backed into the garage. We were unloading the groceries into the kitchen as the first snow flurries started to fall. On my last trip I locked the hubs on the front wheels and shifted the transfer case into Four Low, just in case we did need to try and leave over the next few days. I didn't want to be screwing with it when the temps were going to be in the single digit to negative range for highs.\n\nI showed Misti the guest room and the bathroom and shut the bedroom door, so she could shower and change clothes. Then I went to the kitchen and started making plans for dinner wondering if I was doing the right thing by letting a total stranger into my house. What if she was the one who was the serial-killer and rapist? Seriously, a woman can kill you just as dead as a man can. That was painful lesson that I learned in Afghanistan years ago. I gave up on the dinner plans instead deciding to let her make the decision and went to light a fire in the fireplace instead. \n\nI had just gotten the fire going when she re-appeared, freshly showered, wearing jeans and a flannel shirt with socks on her feet. She was holding the clothes she had worn, shoes and jeans and beanie in one hand and her shirt and underwear balled up in the other. I thought she looked a little dirty standing in the parking lot but the transformation to what I saw now and what she was then was amazing. \n\nShe was tiny! She might, maybe, be five two and looked she looked like she weighed about one hundred pounds at the most. The jeans she wore now were form fitting instead of baggy and loose and they fit her form perfectly. Her shirt was certainly filled out more than the shirt and jacket from earlier suggested it would be. Her hair wasn't hanging down in her eyes anymore either; instead it was pulled back into a ponytail that pulled it away from a small delicate face with an ivory complexion and some seriously high cheekbones; it wasn't as short as I had thought either. It was moderately long; she must have had it tucked under the beanie and jacket collar earlier. It was her eyes that grabbed my attention though, her eyes were still tired and dull, but I could tell now that she might be in her very early twenties at most. \n\n\"Washing machine and garbage can?\" she asked.\n\n\"One is under the sink and the other is behind the big paneled doors in the kitchen, I'll let you figure out which is which.\" I said grinning up at her.\n\n\"Smartass.\" she said grinning and her smile was beautiful.\n\n\"Right in one.\" I replied laughing.\n\n\"Be right back.\" \n\nI heard the washing machine kick on a moment or two later but then, five minutes passed, and she hadn't returned. I got up from the couch to see what was taking her so long and when I walked into the kitchen she was staring at the pantry with a blank look on her face. Bandit had plodded along beside me and was standing there silently looking back and forth between the two of us. \n\n\"Something wrong?\"\n\n\"Um, no, not really, I was trying to decide what to make you for dinner and I got a little overwhelmed, that's all. I haven't seen this much food in one place in ages.\" she said softly. \n\n\"When is the last time you ate a full meal?\"\n\n\"Do you mean real food?\"\n\n\"Yes.\"\n\n\"I had a Cheeseburger Happy Meal from McDonalds on Thursday afternoon.\"\n\nI stood there stunned for a moment realizing that she had just told me that she hadn't eaten in over forty-eight hours. \n\n\"Go in the living room and sit down, I'll handle dinner.\" I said firmly.\n\n\"You said you couldn't cook.\"\n\n\"I said I couldn't cook well. I can handle a salad, baked trout and some steak fries. Go in there and sit down, I got it. You can do the dishes later.\" \n\n\"Okay.\" she whispered and walked past me with her eyes downcast again. ",
        "I walked back into the living room after I put the trout in the oven and saw her standing by the window looking out at the snow falling on the yard. It had only started an hour ago but there was already an inch or more on the ground. Bandit was leaning against her leg as he sat on the floor at her side. She was absently mindedly scratching his ears as she stared off into space.\n\n\"Penny for your thoughts.\" I said softly.\n\n\"Do you know how incredibly lucky you are?\" she said after a moment still looking out the window.\n\n\"Yes.\"\n\n\"Really?\"\n\n\"Yes.\" \n\n\"God Almighty, I hope so.\" she said turning to look at me with tears streaming down both cheeks.\n\n\"Wanna talk while we wait for dinner?\" I asked sincerely then added, \"We've got a few minutes.\"\n\n\"Will it do any good?\" she responded almost bitterly.\n\n\"Beats the hell outta me, but it's better than standing here watching you drip tears on my dog.\"\n\nShe sniffed, wiped her eyes and then said, \"Sam, three hours ago I was in a Wal-Mart parking lot, thinking that tonight might be my last night on Earth because I was going to freeze to death. That shelter you called, I already knew what they were going to say because I had just walked from there when you two showed up and walked past me like I didn't exist. I was doing exactly what you said I was doing, I would warm up and then leave before an employee threw me out.\" \n\nShe paused for a moment as if to steel herself for what she was going to say next, then went on, \"I was honestly considering propositioning you or some other single guy, so I would at least have a place to stay tonight. If worse came to worse, I would have had to give a strange man a blow-job for a place to sleep for the night. I was hoping someone would just call the cops though, so I would get arrested for trespassing and have a place to go for a few days. Then you and Bandit walked into my life like avenging angles of God and here I am. I'm wearing clean clothes and for the first time in over two weeks, I've had a hot shower. I'm in a warm house, I have a real bed to sleep in tonight and I'm about to sit down at a table and eat a hot meal. So yes Sam, I honest to God hope you realize how lucky you really are.\"\n\nI decided right then that if I ever found the asshole who had broken her, I was going to instantly fall back on the training of my former profession and remove them from the face of the planet with extreme prejudice by using superior tactics and overwhelming firepower. Failing that, I would simply go full-on Negan and hammer them into the ground with a barbed wire wrapped baseball bat. As luck would have it, Karma had the same plans. \n\n\"Some days are better than others.\" I said.\n\n\"No shit!\" she said and then added sniffling, \"By the way, I think I broke your dog.\"\n\n\"Why do you say that?\" I asked confused.\n\n\"Because he won't stop leaning against me.\"\n\n\"Oh! He's letting you know that he senses an anxiety attack coming and he wants you to do something about it. So, find something you can touch, like him for example. Then find something you can see and then find something you can smell and concentrate on those three things until the anxiety eases up. Once it does he will know, and he will back off a little.\"\n\n\"You mean like him, the smell of dinner cooking and the snow falling?\"\n\n\"Exactly.\"\n\nThat's what I was doing when you came in here.\"\n\n\"Oh. Sorry.\" I said turning to leave the room.\n\n\"No Sam, please, I didn't mean to make you uncomfortable, especially in your own home, and I want you to know that I do appreciate everything you've done today. You are the first decent human being I've met in close to three years. I'm really afraid that I'm freezing to death on a park bench out there and this is just my last dream. At least it is a nice one.\" She said softly stroking Bandit's head.\n\n\"You're not freezing to death out there. Now I have a question.\"\n\n\"Sure.\"\n\n\"How old are you?\"\n\n\"Ancient.\"\n\n\"Seriously.\"\n\n\"Nineteen.\"\n\n\"Seriously.\"\n\n\"Eighteen, nineteen in four months.\"\n\n\"How long have you been on the streets?\"\n\n\"Two years, it will be three on New Year's Day; exactly.\"\n\n\"I'm not going to ask, but someday, when you feel comfortable enough discussing it, we can talk about why.\"\n\n\"You don't want to know. But now it's my turn. How old are you?\"\n\n\"Forty-six.\"\n\nShe whistled a low whistle and then smiling said \"You must have been a great swimmer back in the day?\"\n\n\"Why do you say that?\"\n\n\"How else could you have made it onto the Ark?\" she replied laughing.\n\n\"Smartass.\" I responded smiling at her. \n\n\"No, seriously, what was Moses really like?\" she said grinning at me. \n\n\"Go wash the stinky dog smell off your hands, dinner is almost ready.\"\n\nShe smiled at that and walked to the bathroom to wash her hands. \n\nI could tell she was holding back as she ate dinner and I understood why. When you are hungry, really hungry, and you eat too fast, it just comes right back up, so I let her set the pace and told her that I had ice cream for dessert if she wanted any. As soon as we were finished eating she jumped up and started clearing the table. I started to help, and she slapped at my hand telling me, \"Go find a football game or something else on TV, the kitchen is mine for the next few days.\"\n\nHolding my hand to my chest by the wrist and feigning injury, I began to limp into the living room with her shaking her head at me and laughing. It made me feel good that I could make her laugh because God only knows when the last time she had a reason to was. \n\nI had just started watching the original How the Grinch Stole Christmas when she came in and sat down beside me. She laughed and said \"Wow, I haven't seen this in ages! I watched it every year as a kid.\"\n\n\"All of us did, even old guys like me.\" I replied.\n\n\"You're not that old.\"\n\n\"Misti, my son is two years older than you and my daughter is two years younger.\"\n\n\"See, you have a kid that is younger than me, so you can't be that old. You've probably got a few more miles left in your tank.\"\n\n\"Thanks for trying to make an old guy feel good.\" I said looking at her and smiling. \n\n\"Your welcome.\" \n\n\"So.\" she began and then paused.\n\n\"So?\"\n\n\"So, almost three years ago I was living the life of a semi-well-adjusted teenager in Jacksonville, Florida. Until the night that my mother and her boyfriend Carl came back to the apartment after a New Year's Eve party. Mom passed out drunk and Carl decided that he wanted a piece of ass that wasn't comatose under him for the night. He came into my bedroom and started to rape me. I kneed the douchebag in the balls and ran screaming my head off into the hallway.\"\n\n\"You have got to be shitting me!\" I said in complete shock. \n\n\"Oh, it gets worse, much worse. When the cops showed up, my mother told them, slurring every word mind you, that I was nothing but a two-bit tramp who had given her trouble for years and that she had been making out with her boyfriend when I caught them and went ballistic running into the hallway screaming \"Rape!\". My own mother lied to protect the man who had just tried to rape me.\" \n\nShe paused for a moment to catch her breath and regain her composure, then added,\n\n\"The truth of the matter is that I had, until then anyway, 3.97 GPA and I had never missed a day of high school. Since I had no physical evidence to back up my side of the story, they handed me back to my mother and made the jackass leave. I walked inside waited for her drunk ass to pass out again then I got dressed, grabbed her purse and car keys and I bolted. I got as much money as I could out of her savings account and then drained my bank account over the next two days.\" She paused and then gulped for air. \n\n\"I got as far as Columbia, South Carolina and ditched the car. She was blowing my phone up with text messages and voicemails telling me how sorry she was and begging me to come back home. When I didn't respond to any of them she started getting ugly with me. I started posting screenshots of some of the text messages to my Facebook page so everyone we knew could see what I was going through. The last one I posted was her calling me a lying slut and telling me to stay the fuck away from her boyfriend. I guess she saw my Facebook page because right after that she shut my phone off.\"\n\nShe waited for a moment and then softly added, \"Since then, I've been on my own on the streets. I still have the phone if you want to see the messages.\" she said, nodding toward her bedroom. \n\nI sat there in stunned silence not knowing what to say or how to react. I had decided that the Negan thing was my best bet with the boyfriend, but I had no idea how to deal with her mom. Maybe a barrel of battery acid? I mean Sweet Holy Mary, Mother of God, I had spent six years dreaming and praying that I could spend a single afternoon with my daughter. What that bitch had done to hers was un-fucking-conceivable; I could not begin to comprehend the depths of betrayal that Misti must have felt or must still feel. \n\n\"Just, wow! Wow!\"\n\n\"Yeah so Sam, that is what you have holed up with you for a few days during a mini-blizzard. If you want me to leave now, I understand.\" she said quickly.\n\nI paused for a minute and said \"Nope. You're staying right where you are.\" Patting her on the knee I added, 'Worse-case scenario is that you kill me in my sleep tonight; best case scenario is that we both get a good night's sleep and you eventually start trusting me enough to let me find you some help to handle all of this.\"\n\n\"I don't think I can trust anyone anymore.\" She said with tears in her eyes.\n\nI paused for a moment considering what I was about to say to her. If I went through with this, then she would be the first person I had ever confided in this deeply. Once I realized that she probably needed to see it far more than I needed to keep it hidden anymore, I said, \"Let me show you something and then you can decide.\" Then I added quietly, \"Come with me.\" \n\nWith Misti following, I walked down the hallway to the third bedroom. I reached up and pulled the key off the top of the doorframe and then unlocked it. I kept that door locked for good reason and when I unlocked it a flood of memories came rushing back to me; some good, some bad and some so horrific that I closed my eyes and paused before I stepped into the room. I called it \"The War Room\" and I usually kept it locked because I never wanted to see some of the items that were displayed in there ever again. \n\nEvery certificate and award that I had ever received from the Army from Basic Training until my retirement ceremony was hanging on the walls. Every medal and ribbon were displayed in a shadow box, from the Meritorious Service Medal I received when I retired, the Bronze Star and Purple Heart I won simultaneously in Iraq on my first tour, down to the UN Medal I had earned in Egypt on a peace keeping tour prior to 9/11; all eighteen of them. \n\nMy Brown Round from my days as a Drill Sergeant at Fort Jackson, that damned Black Beret that the Rangers should still rightfully be wearing, and my hat for my Dress Blues were sitting side by side on a credenza along the back wall. All of it; every award, every commendation, every rank insignia, every nightmare, every anguished scream, every time I heard another soldier cry out for his mother just before he died, I tried to keep it all locked away in here. Some days it worked; most nights, it didn't.\n\nMisti walked in and slowly turned around taking it all in. She walked up to a couple of the certificates and paused to read them, taking the longest time at the Bronze Star citation. Then she turned and never having uttered a word, walked back into the hallway. I closed and locked the door again, replaced the key above the door frame and started to walk back to the living room when she reached out and grabbed my hand to stop me.\n\n\"I knew you were in the military at some point. I mean, I grew up in Jacksonville, Florida, it's a Navy town so I know the walk and the demeanor that you guys have. But that?\" she said softly pointing back toward the room, \"Jesus, Sam you're,\" \n\nI cut her off.\n\n\"Don't say hero. I'm not a hero; I'm a survivor, just like you. I did what I had to do in order to survive in some very bad situations. The difference is, someone in the government said, \"Thank you.\" and gave me a bunch of baubles, bells and whistles to wear around town and impress the local lovelies with. All of that in there and three bucks will get me a cup of coffee at Starbucks.\" I paused and then added, \"You're safe here Misti. I swear to you, on my life, you're safe here.\" I said it looking directly into her eyes and meaning every word of it. \n\nShe stood there silently as tears started streaming down her cheeks. She looked back down at the floor and shaking her head mumbled something that I couldn't quite make out. \n\n\"Huh?\"\n\nShe looked up at me with a half-smile on her face and said, \"I said, I was right, you are nuts.\"\n\n\"And I've got a medicine cabinet full of prescription grade medication from the VA to back you up on that theory. That is who you are holed up with in a mini-blizzard for the next few days. Want to start running now?\"\n\n\"Nah, it's way too cold out there. Besides, you wouldn't let me take Bandit.\"\n\nAt the mention of his name, Bandit nuzzled her hand and then turned back and looked at me as if to say, \"Don't blame me Dude, YOU let HER sit in MY seat. Neener, neener.\" \n\nIf you don't believe a dog can say \"Neener, neener.\" with a single glance; you've never owned a German Shepard Dog.\n\nWe sat back down on the couch and watched TV for a while longer. At ten or so I told her that I was going to bed but before I could move from the couch Misti said \"Sam?\" \n\n\"What?\"\n\n\"Please don't read anything into this.\" Leaning over she softly kissed my cheek and quietly said, \"Thank you.\"\n\n\"For what?\" I asked, still feeling the warmth of her lips on my skin.\n\n\"For all of it. For everything you've done for me today and for everything you did in that room back there. This local lovely is impressed, so thank you.\"\n\n\"You're welcome, but maybe you need to start thinking that you are worth the effort.\" \n\nShe gasped when I said that and then teared up again. \n\n\"Good night Misti.\"\n\nBandit was sitting on the couch beside her and I looked down at him and said \"Bedtime!\" \n\nNormally \"Bedtime!\" would illicit frantic a circle around the living room and a headlong dash to the bedroom, complete with a doggy bouncing competition on the mattress before he settled down and went to sleep. Tonight, was different though. Tonight, he simply lifted his head, cocked it at me and then settled in beside her again. \n\n\"That's okay Boy. I understand.\" then to Misti I added, \"Hey, there is a laptop on the desk if you want to check your email or surf the web for a while.\"\n\nThen I turned and walked to my room. I wasn't worried about Bandit's reaction to all of this. He was a smart enough dog to figure out who needed him more. Who was I to argue?\n\n\"Thank you, Sam. I'll see you in the morning.\" she said softly as I turned to go. \n\nAt midnight I woke up and lay there disoriented for a moment wondering where Bandit was, then I remembered. Walking to the door I opened it softly and peered down the hallway. The light was still on in the living room and I could hear the muffled sound of the TV. Before I could close the door, I heard a soft \"ruff\" sound and Bandit appeared, looking around the corner of the hallway at me; then he turned and disappeared from my view. \n\nAround five or so I woke up again and when I opened the door he was lying beside it curled up. He looked up at me and then slowly got to his feet and tail wagging, walked to the bed. He paused for a moment then returned to look down the hallway before he went back and jumped up. He immediately curled up and dozed back off. \n\n\"Yeah, I know Boy. It's been a long night for both of us.\" The thump of his tail on the mattress told me that he had heard me. I crawled in beside him and drifted off to sleep, staying that way until eight that morning. \n\nI walked into the kitchen to grab a cup of coffee and paused for a minute. It had been six years since I had a woman in the house when I woke up. I swore to myself after my divorce that I wasn't going to put any woman through that kind of strain ever again. The view I had made me begin to think I might have made a grave tactical error with that line of thought. It wasn't erotic, and it wasn't sexy; there wasn't a tee-shirt or button down that covers most guys kitchen fantasies at all. It was, simply put, nice to look at. \n\nMisti was standing by the stove and I could tell from the smell that she was frying bacon. She was wearing the gown and robe that I had bought her yesterday. Her hair was down and loose and she was wearing a pair of socks on her feet. Had I been twenty years younger, the promise of sex being off the table might have been stretched to the breaking point. But I was probably older than that bitch who had given birth to her and there was no way I was going to betray what little trust she had in me on a whim. So, I walked to the coffee pot and poured a cup of coffee. \n\n\"Good morning boys!\" she said smiling sweetly over her shoulder when she heard Bandit's nails clicking on the hardwood flooring. \n\n\"Uh huh, yeah morning.\" \n\nShe laughed and then said, \"Not a fan of mornings, are we?\"\n\n\"I would be if they started at noon.\" I replied honestly. \n\n\"Aww. Well, you go watch the news or something, I'll have breakfast on the table in ten minutes or so, I just put the biscuits in, how do you want your eggs?\"\n\n\"On a plate and warm, I was in the Army remember? I'm not exactly a picky eater.\" I said grinning and thinking to myself, \"News.\" That gave me an idea.\n\nI sat down at my laptop and used Google to look up Misti Smothers, Jacksonville, Florida. The hit came back instantly with numerous TV stations and a Jacksonville newspaper covering the story.\n\nThere was her picture, or at least a picture of her in her former life. She looked like she was the second sweetest kid that had walked the planet next to my own daughter. She had been listed as a runaway, three months shy of her sixteenth birthday. There had been an altercation between her and her mother's boyfriend and the responding officers could not verify her accusations, so they returned her to her mother's custody. She had then stolen her mother's car and ATM card and a credit card and then drained her mother's savings account of over a thousand dollars. The car was found abandoned in Columbia, South Carolina three days later. Her name was removed from the national runaway data base when she turned eighteen, but the auto theft charge and the theft of the money from the ATM card and credit cards still had active warrants on them and that the FBI was involved because it involved interstate flight to avoid prosecution. \n\nGreat. I was harboring a fugitive. Albeit one who was only guilty of saving her own ass, literally, from a derelict mother and her pedophile boyfriend; but still, she was a fugitive. I put the computer on stand-by and then went to the kitchen table. \n\nSitting down I looked across at her and said \"So, I was doing some early morning reading and guess what I found?\"\n\n\"What?\" she responded pausing her fork halfway to her mouth.\n\n\"Several stories from about three years ago out of Jacksonville, Florida that validate everything you told me about yourself last night. How does it feel to have someone finally believe you after all this time?\"\n\nShe dropped her head for a split second and then looked back at me smiling and crying at the same time. \"Pretty damn sweet.\"\n\n\"Good, pass the salt please.\"\n\nSunday was fun, the snow was only six or so inches deep, but it was still falling, and another four to six inches was expected by morning. It was getting late in the afternoon when I asked if she wanted to finally see the place in the daylight and she said yes; so, we went for a stroll around the property. Not all of it, just enough to check and makes sure that everything was okay. She continually marveled at the beauty of the Blue Ridge Mountains covered in snow when we came to a spot that you could see for a distance. ",
        "\"You should see it in the fall when the leaves are turning. It is truly amazing.\" I said thinking back on the number of times a short walk like this had cleared my head, even if it was only eight degrees outside. \n\n\"It is beautiful, but can we go back inside? I'm so cold that I can't feel my own boobs!\" \n\nI laughed way louder than I should have at that and we made our way back to the house. \n\n\"There is nothing like a loyal and faithful dog beside you, a roaring fireplace and a cup of hot chocolate to warm a girl up and remind her where her boobs are.\" I said as I smiling as I handed her the mug I had made for her. \n\n\"There's also a lot to be said for a hot shower and not going out in it in the first place!\" she countered laughing. \"Damn that was cold! Breathtakingly beautiful but cold!\"\n\n\"It ain't the beach, that's for sure.\" I said laughing.\n\n\"Nope. Floridians would just die where they were standing if it got this cold down there.\"\n\n\"So,\" I asked after she had finished the hot chocolate, \"do you have any long terms plans or do you just plan on having no plan and staying on the road for the rest of your life?\"\n\n\"I wish I could stop somewhere long enough to get my act together. That would be a dream come true, but this is the first time I have stayed for two nights in the same place since last year.\"\n\n\"Really?\"\n\n\"Yes Sam, I'm smart enough to know that she will not let up until she finds me. My mother can be a ruthless and vindictive bitch when she wants to be, and she wants to be when it comes to me.\"\n\n\"Why?\"\n\n\"Because I embarrassed her. She married that douchebag a year ago; I saw it on Facebook.\" \n\n\"Do what?\" I asked, shocked to the core when I heard it. \n\n\"May God strike me blind if I am lying.\"\n\nAnd the power went out.\n\n\"What the Hell!\" Misti cried out with Bandit barking at her outburst in surprise.\n\n\"Power is out.\" I said laughing at her. Honestly, I was surprised it had stayed on this long. \n\n\"But what about the lights when it gets dark? Will we have heat?\" she asked seriously concerned. \n\n\"Come with me Beach Bunny and I'll show you how we roll in the hills and hollers.\"\n\nI walked to the hall closet and pulled out the propane heaters and a couple of bottles then told her to grab the stove and a couple of bottles and I walked into the kitchen. I opened the cabinets under the sink and then took the stove from her and sat it on the countertop near the range. I took the remaining two heaters into the bathrooms and opened the cabinets under the sinks. \n\nGoing back to the closet, I grabbed two kerosene lamps from the top and took them into the living room and sat them on the hearth. Then we went, first to her room and then to mine and removed the mattresses and drug them to the living room; we sat them on the floor in front of the fireplace. Then I went to the side pantry and pulled all eight five-gallon jugs of water out and sat them on the counter near the sink. I took the food out of the freezer and sat it in a cooler on the back porch and I took the milk and other perishables out of the fridge and sat them on the floor of my bedroom and closed the door. My final move was to hang a blanket over the hallway entrance, and the kitchen so the heat wouldn't escape down the hallway. \n\n\"Wow!\" she said, \"I'm kind of impressed. So, what do we do for entertainment tonight? Play shadow puppets on the wall with the firelight?\"\n\n\"Nah, I've got a deck of cards and a lot of change, we can play penny ante poker or cribbage for a penny a point. Oh, and I have a battery powered DVD player and radio too.\" I added grinning at her.\n\n\"Been through this before huh?\" she quipped.\n\n\"Yep. Couple of times.\"\n\n\"Did you say poker?\"\n\n\"Yes.\" \n\n\"I haven't played poker in years.\"\n\n\"Don't worry, I'll take it easy on you.\"\n\n\"You do that country boy. You do just that.\" she said with an evil grin on her face. \n\nBy the time the sun had fully set I had lost everything in front of me. I was getting really frustrated when she looked up with a straight face and said \"Well, we could switch it up and play strip poker.\"\n\n\"Wait! What?\" I sputtered. \n\n\"I'm not afraid of you Sam, you'll be wrapped in a blanket and turning blue, long before I would.\" she said laughing at my shocked expression.\n\n\"Let's just lie and say we did okay? That way everyone gets to keep their dignity intact and you don't have to embarrass an old guy.\" \n\n\"Spoilsport.\" She said with a pout on her face. \"You're probably right though, I'd lose the first two hands on purpose and then take off my shirt and bra and clean house while you were distracted.\"\n\n\"That would probably work.\" I thought grudgingly to myself. \n\nThen she added, \"Guys. Show them boobs, scratch their ears and pet their heads and they will follow you like a lost puppy. Isn't that right Bandit?\" He lifted his head, snorted and then dropped it back to his paws. I would hazard to guess that you could hear her laughing a quarter of a mile from the living room. \n\nThe best part about the evening was when Bandit strolled over and laid down beside me. Since Misti's arrival he hadn't left her side except for when nature called or when he was eating. If he was drifting back to me that meant that her anxiety levels were dropping and that was a good thing. Even Misti noticed it saying to Bandit, \"Fine! Be that way, see if you get any bacon tomorrow for breakfast.\" \n\nHis ears perked up when she said bacon, but he dropped them back down and turned back to the fireplace. \n\n\"What movie are we watching?\" she asked a few seconds later.\n\n\"You pick one out, I'm going to make some Jiffy-Pop and grab a beer.\"\n\n\"Do you have any wine in there?\"\n\n\"Yes.\"\n\n\"Can I have a glass? A small one?\"\n\nI paused for a moment and then thought out loud, \"Sure, why not?\"\n\n\"Thank you.\"\n\nI walked back into the living room shivering because it was freezing in the kitchen even with the heater going. I saw Bandit curled up beside Misti on her mattress. At first, I got concerned but then I noticed his tail thumping up and down and I realized that she had somehow managed to steal my dog from me right from under my nose. Loving and faithful companion my dying ass! \n\nHanding her the wine and popcorn I sat down on my mattress and said, \"Misti, I need to say something and then we can watch the movie.\"\n\n\"Sure. What is it?\" she asked, shoving a handful of popcorn in her mouth. \n\n\"What you said earlier about showing a guy your boobs, promise me that you won't ever do that. Please? You are far too pretty and intelligent to use your body like. Believe me, every man in the room notices when you walk in. You are a beautiful young woman and any guy would be lucky to take you to bed. But sex should be a reward for him treating you like you deserve to be treated, instead of enticing someone you barely know to do something for you.\"\n\nHer blue eyes stared at me for about five seconds before they started to tear up. \"Sam, you really have to stop treating me this way. I'm not use to it and you will end up giving me some very serious Daddy issues that I may never be able to work through.\" \n\n\"I'll get you the best therapist money can buy if that happens Misti, just promise me this one thing and we will call it even. All of this.\"\n\n\"Deal. I promise.\"\n\nRemembering something my daughter use to do when she was little, I held up my pinky. \"Pinky promise?\"\n\nShe smiled and then tossing her head back laughing said, \"Pinky promise.\", locking hers with mine and kissing the knuckles. \n\nThen we settled in to watch Draft Day, because it had Sam Elliot in it and he is \"a completely doable stud with a nice ass, even if he is older than baseball\". I just shook my head at that announcement and hit the Play button. \n\nI didn't make it through the entire movie and right as I was drifting off; I could have sworn I felt a set of warm, soft lips touch mine and a voice whisper \"Bandit isn't the only ladies' man around here.\" \n\nThe power was still out when we woke up, and we spent most of Monday morning talking about enrolling her in continuing education courses getting her a GED and a job somewhere in the area. I realized that I had given her the first sense of hope and glance at normalcy that she had felt or seen in a very long time. Since I had done that, I believed that I had a moral obligation to continue to help her out. That is also when I realized why most counselors tend to remain aloof and distant from their clients on a personal level.\n\nWhile we were eating lunch, I turned on the radio to listen to the local news at noon. The lead story was the local female newscaster breathlessly warning the listening audience about a fugitive and former runaway from Florida who might be in the local area. She was wanted by the FBI and local Florida authorities relating to auto theft and credit card fraud from three years ago. The entire time we sat there stunned as they said the accused's name was Misti Anne Smothers. \n\n\"How in the world do they know where I am?\" Misti muttered after she removed her hands from her mouth.\n\n\"Did you check your email Saturday night?\"\n\n\"Yes, that and I went on Facebook for a minute to see if I still had an account.\"\n\n\"They pinged the server that my internet provider used to make the connection when you logged on. It got them in the ballpark, but they still can't find their seat. I didn't know about the warrants then or I would have said something to you.\" \n\n\"I have to go! She will find out where I am!\" she cried out in a panic leaping to her feet.\n\n\"Relax, she already knows and is probably on her way here with a couple of Jacksonville's finest to have you extradited back to Florida. What we, not you, we are going to sit right here and wait for them. As a matter of fact, I am going to call the Sheriff and offer up an invitation for him to come over and meet you. Then we are going to plan, what is known in the Infantry as, a good old-fashioned ass whipping. Go charge your cell phone up, there are a couple of battery packs by my mattress.\" \n\nThen I smiled. It felt good to smile that smile. I hadn't smiled like that since my second tour in Iraq. I was back in my element. \n\n\"Nine-one-one, what is your emergency?\"\n\n\"Yeah, that fugitive from Florida? I know where she is.\" I said immediately. \n\n\"Where is she Sir?\" The dispatcher responded quickly.\n\n\"She is sitting in my living room with my dog's head in her lap and she wants to talk to the Sheriff.\" I said looking at Misti with Bandit curled up beside her on the couch. \n\n\"Are you safe Sir?\" the dispatcher asked in a concerned tone.\n\n\"Absolutely.\"\n\n\"Has she threatened you in any way?\" she asked, again sounding concerned. \n\n\"No, but she kicked my ass at poker last night.\" I said smiling across the couch at her. \n\n\"Is this a prank call?\"\n\nI handed the phone to Misti, instructing her to, \"Give them your name and your old address and tell them you want to speak to the sheriff.\", after she did she handed me the phone back.\n\nI gave the dispatcher my name and address and then added \"Do me a favor and tell Sheriff Donnellson that Sam Williams said to climb his ass up out of his big comfy chair and do some real police work for a change.\" \n\nThen with Misti's eyes as big around as saucers, I hung up.\n\n\"Did you just really say that?\"\n\n\"Relax. Bobby and I go way back together. We went to high-school and Basic Training together on the Buddy Plan and served together for my first three years. He got out, came back home and joined the Sheriff's Department; I stayed in and retired. He's a good guy and as honest and level headed as they come.\"\n\n\"So, what does that mean?\" she asked nervously.\n\n\"It means that I'm going to use every resource at my disposal to keep you safe in Virginia and out of jail in Florida.\"\n\n\"Thank you.\"\n\n\"It also means that I am never, ever going to speak to another strange woman in a Wal-Mart parking lot for as long as I live!\"\n\n\"Ass!\" she cried out and then laughing she hurled a pillow at me.\n\nI figured it would take them at least two hours to get to my home, even in one of the four-wheel drive Suburbans that the department owned. I was wrong. Thirty minutes later Bandit barked, and I heard the crunch of tires on the snow in my driveway. Looking out I saw not one but three Sheriff's vehicles sitting there with their blues and reds flashing. \n\nSix deputies got out with long rifles and side arms held at low-ready and fanned out across my lawn. Bobby stepped out of the lead truck and walked toward my front door like he owned it. I opened the door in time to hear him say, \"So help me God if one of you discharges a round, I will skin you myself.\" \n\nYou gotta love southern sheriffs.\n\n\"Sam.\" He said nodding to me as I stepped on the porch.\n\n\"Bobby.\" I said calmly as three AR-15s and three Glock 10s were being pointed at me. \n\n\"Why am I standing in your front yard freezing my ass off?\"\n\n\"Because your men are pointing their weapons at me?\" I offered. \n\n\"Down!\" he barked, and they immediately complied. \n\n\"Now it's because you don't have the sense to come inside where it is warm.\" I said grinning.\n\n\"Is she really here?\" he asked, looking at me with a perplexed look on his face. \"Here, here?\"\n\n\"Yes. Long story and you need to hear it but yes, she is sitting on the couch.\"\n\n\"Is she armed?\" he asked, stepping onto the porch and shaking my hand.\n\n\"Hell no! Do you think I would lead my oldest friend into an ambush? What the fuck kind of question is that?\"\n\n\"It's good to see you too Asshole!\" he said grinning.\n\n\"How did you get here so fast?\"\n\n\"I'm the Sheriff, remember? I made a phone call to the Highway Department and POOF, a great big road grader appeared in front of my truck. I can do that because I'm sort of a big deal in these parts.\" he replied laughing loudly as he stepped across the threshold and walked into the cabin. \n\nMisti was sitting on the couch on the verge of tears and Bandit was curled up beside her, looking at me and Bobby. His tail was lightly swatting the cushion and I knew that he was being hyper vigilant and very protective of Misti right now. \n\n\"Misti Anne Smothers?\" Bobby asked her, removing his hat and sitting down in my recliner. \n\n\"Yes.\" she said softly.\n\n\"You're not under arrest, but you are being detained for questioning. Do you understand that?\"\n\n\"Yes.\"\n\n\"So, young lady, why don't you explain to me how you went from Jacksonville, Florida and ended up sitting the living room of one of my oldest friends? But please hurry, because I got a phone call from the Richmond FBI field office a little while ago. They are on the way here with two Jacksonville police officers and your mother and step-father. I figure you have an hour at most.\" \n\nShe told him. Slowly, painfully and very tearfully she told him everything that happened that night in Jacksonville. She showed him the text messages that her mother had sent, she logged onto her Facebook account and showed him the timeline of the posts she had made. Twenty minutes later, she was done. Misti was wrecked, emotionally and mentally spent; she was exhausted and curled up on the couch, stroking Bandit's head, sobbing like her world had come to an end. \n\n\"Well, I think I've heard and seen enough. Honestly Sam, I don't know how you managed to get involved with this but I'm glad you did. If it had been anyone else, I don't think I would do what I am about to do.\"\n\n\"Which is?\" I asked.\n\n\"Sorry buddy, but if I tell you, I'll have to kill you later. I'm gonna bring my boys inside to warm up by the fire and then we are going to wait on the Feds and the Jacksonville PD to show up. Call it a hunch but I don't think the young lady is going anywhere today.\"\n\nMisti's shoulders heaved as she started sobbing in earnest. Sitting down beside her I wrapped my arms around her and said, \"Hey, you need to stop that. Don't give those two the satisfaction of seeing you crying. I promised that you would be safe here and I meant it. Now go to the bathroom, blow your nose, dry those big blue eyes of yours and wash your face. We will stand them down together, you're not alone anymore and you're done running Beautiful.\" \n\n\"I am so sorry that I drug you into this Sam.\"\n\n\"I'm not, now go get ready.\" I said, gently pushing her up off the couch. \n\nBy then, the deputies were slowly filing into the cabin to warm up and they looked really confused to see Bandit and Misti standing between me and Bobby. Bandit had immediately jumped down and was standing beside her, suspiciously eyeing the deputies one by one as they entered. Misti paused for a moment and then smiling she leaned down and softly kissed me. Turning to Bobby, she said \"Sheriff, I'm don't know what you have planned but I want to say thank you. You are an absolute Angel.\" Then she rose up on her toes and kissed him on the cheek.\n\nBobby blushed like a school boy and then looking around a roomful of his smiling and smirking deputies said \"Not a word, not a single peep out of any of you. Do you understand?\"\n\n\"Sure thing Angel.\" the oldest one said as the rest burst out laughing. \n\n\"I'm sorry Sheriff.\" she said smiling as she headed for the bathroom.\n\nWe could hear the siren's echo for two minutes before they pulled into the driveway. They pulled around the sheriff's units in two sedans and the front four doors flew open simultaneously as two Feds and two Jacksonville PD detectives climbed out. They were greeted by Bobby and his deputies, with me Misti and Bandit standing in the middle of the line on the front porch. \n\n\"Sheriff.\" the older of the two FBI agents said nodding as they walked toward the porch.\n\n\"Who told you that you could go Code Three in my jurisdiction?\"\n\n\"Excuse me?\"\n\n\"I said, who told you to go Code Three in my jurisdiction?\"\n\nI'm a Federal Agent.\" He stammered.\n\n\"Mister, I don't give a damn if your name is J. Edgar Hoover! You don't turn on the blinky lights and make noise in my county unless you are in a called pursuit. Do you understand me?\" Bobby said angrily. \n\n\"Yes Sir.\" The agent replied and then pausing asked, \"Is that her?\" \n\n\"Yeah that's her.\" Bobby responded.\n\n\"Misti Anne Smothers, I am placing you under arrest for,\" one of the Jacksonville detectives began to say.\n\n\"Slow down Detective, obviously you weren't listening to me when I spoke to the Feds so let me break it down for you as well. I don't know how they do it down in Florida; but here in Virginia, nobody arrests anybody in my county unless I say they can. Do you understand me?\" \n\n\"Sheriff, what the Hell is going on here?\" the lead FBI agent asked, looking really confused. \n\nI glanced up to see the back door of the last cruiser pop open and an older version of Misti got out and stood by the car glaring at us. Then the door on the other side opened and a guy about my age and size climbed out of the car. Carl stormed across the yard through the snow, screaming \"What the fuck are you waiting for? Arrest that little bitch! Arrest her now damn it!\"\n\nMisti gripped my hand tighter and shrank back as he closed quickly on the porch whispering \"Oh God.\" Bandit stood up and fangs bared, he began to growl from deep in his chest. I hadn't put him on a leash because I never expected a physical confrontation, not with Bobby and his crew here. Pushing past the four cops standing in the yard, he got to within three feet of the porch, still screaming obscenities at Misti when Bandit launched. \n\nEighty pounds of flying muscle, fur and fangs took the bastard straight to the snow-covered ground. Bandit had him by the right forearm and was jerking him around like he was a chew toy; he was screaming like a little girl, begging for someone to make the bad dog go away. I jumped off the porch and grabbing Bandit by the collar pulled him off. The big bad douchebag wasn't so big or bad anymore as he scampered back across the blood splattered snow like a crab, wincing in pain.",
        "I had no sooner gotten them separated when Bobby folded his arms across his chest and said calmly, \"Gentlemen, what you are going to do is stand aside while my deputies place him and her\" he motioned to Misti's mother, \"in handcuffs and put them in the backseat of your nice warm cars. Then, while we are waiting for the ambulance to show up, you are all going to come inside and look at some new evidence that has come to light since your initial investigation.\" \n\nTurning to one of his deputies he added \"Don't let that bastard bleed out. Put him in one of their car and her in the other until the medics show up.\" \n\n\"Sure thing Sheriff.\" he said smiling then adding, \"Ya know Boss, somedays it is really fulfilling coming to work.\"\n\n\"Yep.\" Bobby said grinning from ear to ear. \n\nMisti was smiling broadly as she watched her would be rapist get rolled over onto his stomach in the freezing snow and placed in handcuffs. Then with me and Bandit at her side, we walked across the yard toward her mother and Misti stood silently, watching as the woman who had thrown her to the wolves break down in tears when the cuffs were placed on her wrists. Taking her hand in mine we turned together and walked into the house to talk to the men who were here to take her back to Florida. \n\nIt ended up a lot better than I ever dreamt it would. Once the JPD detectives and the FBI agents looked at the text message exchange between Misti and her mom, they both agreed that her mother had left some facts out of her statements to their agencies. Like knowing that she had told Misti it was okay to have the car for a day or so, telling her that she could pay the money back over time if she spent any of it. Asking her to forgive her boyfriend for trying to rape her, that he was drunk and that she loved him and didn't want to see him go to jail. \n\nIt all added up to, attempted rape of a minor age 16 or younger, falsifying a police report, impeding an investigation and lying under oath for him; felony child endangerment, falsifying a police report, impeding an investigation and lying under oath for her. Those were the minimum charges that the JPD detectives promised to bring. Then one of the FBI agents said smiling, \"I won't even have to look hard to find something that will put them in Federal prison once they get done with the state time.\" \n\nAs they were leaving with their two new suspects in custody and an old cell phone as evidence, Bobby turned to me smiling and said, \"Is there anything else you need Asshole?\"\n\n\"Yeah, call the power company and see if you are a big enough deal around these parts to get my power back on. We are freezing up here.\"\n\nThen he whispered \"So, I gotta ask, is there anything going on between you two?\"\n\n\"Nope. She is too messed up for me to try anything like that. Seriously, she needs a lot of help.\" I said honestly.\n\n\"I'll see what I can do about the power.\" Then looking at Misti and Bandit standing side by side on the front porch, he added, \"One of these days, I'm going to get a dog like that for the department, he was something else today Sam.\"\n\n\"He is something else every day Bobby.\" I said proudly.\n\nMisti started shaking violently as the adrenaline rush wore off. I sat beside her on the couch with my arms around her, just holding her and telling her that everything would be alright now. It took the better part of an hour and her rushing to the bathroom once to throw-up, before she had finally settled down enough to stop shaking. I remembered what it felt like after my first real fire-fight. There is nothing that can prepare you for how your body will react after that much stress has been experienced. So, I tried to do for her what nobody had done for me, I just held her close and let her know that she was still alive and safe. \n\nSitting beside her in the growing darkness I couldn't help but wonder what other traumas she had experienced since she left Florida. It would probably take years of therapy before she could even think about leading a normal life again; that much I did know. She would have bouts of frustration, anger, depression and other emotions that can't be described. I just needed to let her know that she didn't have to go through it alone, so I whispered to her that if she wanted to stay, she had a stable place to call home, food to eat and a soft bed to sleep in for as long as she wanted. \n\nThen the lights came back on and with it, the heat. I slowly unwrapped myself from her and got up to begin shutting down the heaters in the other rooms. I had finished the bathrooms and was in the kitchen when I felt her arms slip around my waist and her head nestle into my back. \n\n\"Why?\" she asked quietly.\n\nTurning around and looking down at her I said, \"Why what?\"\n\n\"You risked everything you had for me today. Why?\"\n\n\"I told you, you need to start believing that you are worth it. That sacred woman I met in the parking lot on Saturday? She's gone. The one standing in front of me today, she is worth the effort. You tried to call me a hero Saturday night. Hell, Misti, I had help doing what I did and surviving it; you've done this by yourself for almost three years with no support. That is a hero.\" Then I leaned down to kiss the top of her head, or at least that was my intention. \n\nAs I leaned down, she turned her face up toward mine and our lips met. I started to pull away, but she pressed her body against mine, gripping me tighter with her arms. By the time I finally did pull away, several seconds later, we were both gasping for air. \n\n\"Where did that come from?\" I asked her, looking into her eyes.\n\n\"The heart.\" she said simply. \"Bandit isn't the only Ladies' Man around here. You do a pretty good job yourself you know?\"\n\n\"I'm not trying to seduce you.\" I said honestly.\n\n\"I know,\" she said smiling up at me, \"and it makes it that much sexier that you're able, without trying to.\" Then she turned around and walked confidently out of the kitchen. \n\nBandit had been standing by the table watching this unfold. As Misti walked out of the room he trotted over to me sat down beside me and pressed his body against my leg. I couldn't help but shake my head and smile. \"No shit Boy,\" I said as I stood there feeling the coolness of the marble counter top, smelling her scent in the air and looking out the window at the mountain. \"No shit.\" \n\nIt took a few minutes, but I finally calmed down enough to get the kitchen squared away. We would have to start thinking about dinner soon and I still needed to move the mattresses back to the bedrooms. I was going to pop a couple of steaks in the microwave to thaw out and then thought to myself, \"Nope! This is still her domain.\", then I walked into the living room and said, \"What's for dinner Chef?\"\n\nShe was smiling up at me from the couch and said, \"A salad, steaks and a baked potato sound okay?\"\n\n\"You just read my mind!\" Then she helped me move the mattresses back to the bedrooms. \n\nMy medium rare steak ended up a little more medium than rare but other than that dinner was good. We sat on the couch smiling as we watched the local news broadcast where they announced, \"A shocking new twist in the case involving a runaway from Florida who had been wanted for questioning by the FBI and the Jacksonville Police Department.\" Her mom didn't look at all happy in the mug-shot that had her name and \"Federal Bureau of Investigation\" on the nameboard beneath it, as she peered down at us in hi-definition. I couldn't help but smile as I thought to myself \"Karma truly is a bitch.\" Then I laughed out loud when Misti muttered \"Karma is a bitch, ain't she Bitch?\"\n\nI had just dozed off when I felt my covers of my bed being lifted and then I felt the warmth of Misti's body as she slid under them and next to me. I rolled over onto my side and as calmly as I could and asked her what she was doing. She just lay there beside me silently looking into my eyes and then, she smiled at me. \n\n\"Going to sleep. Eventually.\"\n\n\"Misti, you don't want to do this, you may think you do but seriously, I am broken beyond repair. You don't need my troubles in your life right now. Honey, the age difference alone will end this sooner rather than later.\"\n\n\"We'll cross that bridge when we come to it.\"\n\n\"No Misti, I can't allow this to happen. I can't. I told you when you got in the Jeep on Saturday that sex was off the table.\"\n\n\"No, you said that sex was off the table as far as me paying you back. That debt was cleared when I promised you that I wouldn't use it to entice a man to give me something that I wanted.\" she whispered, then she held up her pinky finger and smiling at me said, \"Remember?\"\n\nShe reached out slowly and brushed her fingertips across my cheek and then tried to continue, \"Sam,\"\n\nSitting up and turning on a bedside lamp I said, \"Misti, no. I'm sorry but, no. This is something that I'm not even going to consider. It can't happen. I'm not going to ruin what little trust you have in me by sleeping with you. I can't.\"\n\nHer shoulders slumped and then she silently climbed out of bed, reaching to the ground she grabbed her nightgown and throwing it on over her head, she walked out of the room. Bandit tried to follow but she firmly told him \"No.\" and then walked down the hallway. I waited a for a full minute trying to pull my thoughts together and then tossing the covers back, I followed her. \n\nI knocked on her door and waited for an answer, after five or so seconds I knocked again. When I didn't get a response, I gently eased it open. She was lying face down on the bed with her face buried in the pillows and I could see her shoulders heaving as she sobbed. Bandit immediately pushed past me and went to her bedside whimpering and trying to climb up beside her. \n\n\"Misti?\" I whispered from the doorway.\n\nI heard a muffled sound that resembled \"way\" come from the pillows.\n\n\"Misti?\"\n\nShe rolled on to her side and I could see that her eyes were red from crying. She stared at me as though she saw me, but she was looking past me. I know that look, it had been on my face for over ten years before I finally admitted that I needed help. \n\n\"I'm going back to bed, but you need to know a few things before I do. I've been where you are in the recovery stage. Today was a roller-coaster of emotions and what you gone through these past few years should never happen to anyone, let alone someone as young as you are. Honey, you need help, lots of it and I am here to help you and if you let me; I always will be. I promised you that on Saturday, on Sunday and today; and I'll promise it to you every day that you will stand there and listen to me; if you let me. I'm leaving Bandit with you tonight. Please don't do anything stupid like try to run off in the middle of the night. It is too dark, cold and far too dangerous out there right now. If you want, I will take you to the bus station and buy you a ticket to anywhere in the United States tomorrow morning, but you have got to promise me now that you won't try and run tonight. Will you at least do that?\"\n\nShe hesitated for a moment but eventually she nodded and softly said \"Yes.\"\n\n\"Thank you.\" Then I smiled and added, \"Besides, you'd never make it out of the county. In case you didn't notice today; I know the Sheriff.\"\n\nShe almost grinned.\n\n\"Seriously, we can finish this discussion in the morning after we've both had some sleep.\"\n\n\"Okay.\"\n\n\"Really?\"\n\n\"Yes Sam.\" She said as Bandit had finally managed to climb onto the bed with her. \n\n\"Good night Misti.\"\n\n\"Good night Sam.\"\n\nI started to ease the door shut. \n\n\"Sam?\"\n\n\"Yes.\" I answered.\n\nHugging Bandit for all she was worth she said, \"Do you remember me saying that you were the only decent person that I have met in two years?\"\n\n\"Yes.\"\n\n\"I meant it.\"\n\n\"Good night Sweetie.\"\n\nTuesday morning was, to say the least, awkward. I walked into the kitchen to grab my morning coffee and found Misti standing at the stove cooking breakfast. For some reason that surprised me, and I stood in the doorway for a minute asking myself why she was doing it. \n\n\"Good morning Sam.\" she said with a half-turned glance over her shoulder.\n\n\"How did you know I was here?\" I asked confused.\n\n\"Him.\" She said, motioning toward Bandit who was lying beside her with his tail thumping on the floor.\n\n\"Oh.\"\n\n\"I kept my promise; I'm still here. How would you like your eggs?\"\n\nWalking toward the coffee pot I said, \"Whatever is easiest on you.\"\n\n\"Raw it is.\"\n\n\"How about we go with Medium Scrambled instead?\" I said freezing in my tracks.\n\n\"Okay.\" She replied with no emotion in her voice. \n\nAfter breakfast we started talking, or I started talking and Misti sat there patiently while I did, listening to me explain why I had done what I did last night. About three minutes into it she said \"Just stop! Seriously, shut up!\"\n\n\"Huh?\"\n\n\"Look Sam, I've been on the streets for almost three years. I'm not nineteen years old yet and you have no idea of the number of men and women I have had to fight off me just to try and survive. You were the first one with the integrity to tell me 'No.', so I took it kind of hard. I don't care why you did it; you did it and after I calmed down I realized that I had found the one man on the planet that didn't want me around for my body, you wanted me around because I was just me.\"\n\n\"Okay, please, go on.\" I said, hoping this would lead somewhere that I could handle without freaking out.\n\n\"Yesterday I told you that it was sexy that you could seduce me without trying. Do you remember that?\"\n\nI nodded vigorously.\n\n\"Well, it is. But last night I also realized that you really were more concerned about me than you are about getting laid. So, for the time being, I'm going to accept that you are willing to help me get back to a normal life; or at least as normal as my life will ever be. Is that acceptable?\"\n\n\"Yes, it is.\" I said, relieved beyond measure.\n\n\"Cool. With that said, I haven't had a Christmas morning or a Christmas tree in two years. We need to go shopping. I want a live one. I want a great big, fill up the entire front window, Chevy Chase-Christmas Vacation, it's gonna scrape the ceiling, live one. Where can we find one?\"\n\n\"I have no clue, but we just started looking.\" I said, determined to find a tree that would give a Christmas Elf a stroke. \n\n\"Cool!\" \n\nIt took three lots and sixty dollars, but we finally pulled back into the driveway with a ten-foot-tall Douglas Fir strapped to the top of the Jeep. Getting it into the house was quiet the adventure and getting it set up another. It took up a quarter of the living room and required me, Misti and Bandit to go to Wally World to buy about two-hundred dollars' worth of lights, garlands and ornaments to decorate it. I figured what the Hell, it's only money and I hadn't had a Christmas tree in six years myself. Honestly, I was a giddy as a schoolboy who had just gotten kissed on the playground.\n\nLater that evening we sat on the couch together with the lights blinking while we watched George C. Scott's A Christmas Carol. I had changed into a pair of sweats and Misti into her pajamas. I poured Misti a glass of wine and I had grabbed a beer before the movie started. I knew she was underage, but after all she had been through, I reasoned with myself that she was far more mature than the average twenty-one-year-old could ever could be. With the fireplace roaring and Bandit curled up on the couch with us we started watching the movie. \n\nI couldn't help but think back of the times that I had been deployed and wished that I had been sitting at home with my wife and children in a similar scene. I sighed, perhaps a little too loudly, and Misti picked up on it immediately. \n\n\"Reminiscing on the Ghosts of Christmas Past Ebenezer?\"\n\n\"Well, what do you know? Belle has read Dickens!\" I said, and then immediately regretted saying it that way.\n\n\"She has!\" she said, looking at me with a smile on her face. \"It was required reading in my sophomore year of high-school. You know, three years ago, well after you turned so ancient and decrepit.\"\n\n\"OUCH!\"\n\n\"Still want to play?\" she asked laughing softly.\n\n\"Nope.\"\n\n\"That's too bad; I was sitting here thinking of what the Ghost of Christmas Future might bring.\"\n\n\"And that would be?\"\n\nShe hesitated for a moment, almost like she was thinking of how she should answer it; then she stretched out on the couch and placed her head in my lap. There was nothing sexual about it, she just stretched out and placed her head there. Settling in she said, \"I am hoping He brings, Love, Hope, Joy and Peace; but most of all, Peace.\"\n\n\"That would be nice Belle.\"\n\n\"Wouldn't it Ebenezer?\" she said laughing gently.\n\n\"I'm not a Scrooge\"\n\n\"Uh huh.\" she said giggling as I began to absentmindedly run my fingers through her hair. \n\nThe entire time the movie was playing Bandit was curled up on the other end of the couch asleep. Not one time had he moved or reacted. He was basically nothing more than an eighty-pound couch potato. I should have seen that. I should have recognized that the service dog that I owned, the dog who had been my constant companion for the past two years, the dog who was trained to the core of his soul to recognize my stress, anxiety and anger, hadn't flinched in the past ten hours; but I didn't. \n\nTen minutes later I felt her body relax and her breathing soften and just after that, she began to gently snore. As Tiny Tim was saying \"A Merry Christmas to us all; God Bless us, everyone.\" I eased her head from my lap then stood up, reached down, picked her up and carried her to her bed. Her breathing never changed even when I turned down the covers and lay her down on the bed. She snuggled in and sighed as I covered her up and the Bandit and I turned to go to my room. As I was closing her door I heard her softly whisper \"Good night boys.\"\n\n\"Good night Misti.\" I said as I closed the door. \n\nBy the time Christmas rolled around we had pretty much settled into a routine. The mornings were spent with me tutoring her for her GED classes and at least two hours a day in the afternoon was spent studying for her driver's license. On Tuesday and Thursday afternoons she spent an hour talking to a mental health counselor that I had found in town.\n\nI could tell that her getting a GED wasn't going to be a problem because we had gone to a local community college to do a math and English assessment test and she had tested out as a college level Senior in English and up to Trig in math. Basically, she just had to complete her GED and she could enroll there for classes in the spring. She was thrilled that she could go back to school and I was happy that she would finally be around kids her own age in a normal situation during the day. \n\nChristmas morning arrived bright and early and Bandit and I strolled leisurely down the hallway to grab some coffee. Instead of finding Misti in the kitchen I found her sitting beside the Christmas tree holding the smallest of the three gifts I had gotten her. She had tears in her eyes when she looked up and sniffing she said, \"No fair Sam. I couldn't get you anything.\"\n\n\"Yes, you can.\"\n\n\"What?\" she said looking down at the floor.\n\n\"I get to watch a beautiful young woman open her Christmas presents sitting in front of my Christmas tree.\"\n\n\"And on Tuesday she will be talking to her therapist about some prescription strength Daddy issues.\" she said looking back up at me and laughing. \n\n\"We all have to make some sacrifices Lady.\" Still smiling I added, \"Go ahead and open them, but open the smallest one last.\"\n\nShe squealed with delight as she opened her iPad and again as she opened her iPhone 6S. I figured that she would need the iPad for school and the iPhone was an afterthought. I mean she was an eighteen-year-old girl and she would eventually have friends that she would want to talk to; about whatever eighteen-year-old girls talk about. ",
        "Then she opened the smallest of the three gifts and gasped. I had raised an eyebrow or two when I asked a buddy of mine from my support group, who happens to be a jeweler, to do a custom piece for me. I had him make a necklace out of platinum with a platinum pendent of her name on it. The script letters were encrusted with diamond dust and the \"I\" was dotted with a single 1/8th carat sapphire. \n\n\"Sam! This is too much!\"\n\n\"Do you like it.\"\n\n\"Like it? I love it! But this is just too much! How much did you spend on this?\"\n\n\"Ten dollars and seventy-five cents. I got it out of a gumball machine last week.\"\n\n\"Liar!\"\n\n\"It's not polite to ask that question young lady, now come here and let me put it on you.\"\n\n\"Yes Sir,\" she said smiling, and then added, \"Thank you.\"\n\nWith a huge grin on her face, she walked to me, handed me the necklace and spun around she lifted her hair so I could put it around her neck. I had no sooner closed the clasp when she flew out of the room to the bathroom to look at it in the mirror. When I looked in, she was standing in front of the mirror with tears streaming down her face. \n\n\"Is everything okay.\" I asked, silently pleased with what I had managed to pull off. \n\nShe sniffled and nodded and then she looked at me for a moment and without saying a word she walked over and wrapped her arms around me. Placing her head against my chest she just stood there holding me and softly crying. We stood like that for several moments before she backed off and looked up at me and then without saying a word she walked into the kitchen and started breakfast. \n\nAll day long, whenever I glanced over at her, Misti had one finger on the pendant of the necklace and that was when I knew that I had done a good job with it. We decided to make a trip into town the next day to catch some after-Christmas sales and get her some more clothes. She needed far more than what she had, and I was kicking myself for not having thought of it earlier. It was a decision that would shape our lives forever. \n\nAfter a trip to Wal-Mart and then lunch we hit a couple of the small Mom and Pop stores in town. We were walking out of the second store when the first slug dug into the door frame missing my head by a couple of inches. The second shot caused Bandit to yelp loudly and then he dropped to the sidewalk whimpering and thrashing around with blood pouring out of a hole in his right shoulder. My blood ran ice-cold as I looked up to see Misti being wheeled around in her step-father's grasp with a revolver held to her right temple.\n\n\"You motherfucker!\" Carl screamed at me from three feet away, \"If I have to go to prison because of this cunt, I am going to make it worth my,\" He never finished the sentence. \n\nTo this day, I cannot tell you when I had drawn my weapon, it was just there. My first round hit him an inch above his right eyebrow and the second one hit him on the bridge of his nose. He crumpled to the ground in a lifeless heap and lay there twitching as the blood began to stream out of the gaping hole in the back of his head and pooling on to the sidewalk. \n\nMisti stood there in shock for a moment and then somehow, she teleported to Bandit's side. It was utter and complete chaos around us as the shoppers ran screaming for cover, hiding behind anything they could find. Years of training kicked in and the first thing I did was scan for other threats and not finding any, I re-holster my weapon and stopped for a second to get my breathing back under control. Then I yelled back into the store for someone to call 911 and to make sure they sent an ambulance. \n\nThen I turned my attention to Bandit and Misti. She was kneeling on the ground beside him with her tears falling on Bandit's body. There was a huge amount of his blood collecting on the sidewalk and she was stroking the fur on the top of his head. \n\n\"He's still breathing.\" She whispered calmly to me. I could hear a multitude of sirens approaching. I handed Misti my wallet and after I removed my concealed carry permit from it and told her to keep it in her purse. Then I said Seven. Three. Eight. Two. Can you remember that? Seven. Three. Eight. Two. Say it back to me.\" \n\nShe repeated it back to me twice. \n\n\"That is the PIN for my ATM card. Remember that. I don't know how long I will be here with this, but we need to get him to a vet as soon as possible. Use that card or the VISA in my wallet for the vet bill, I will be there as soon as I can.\"\n\nShe never took her eyes off Bandit. She sat there on the sidewalk beside him, petting his head and speaking softly to him, telling him that it would be alright and saying, \"I am so sorry Bandit, I am so sorry.\"\n\nThe first cop on the scene came at me with his weapon drawn, looking down at the douche-bag and then at Bandit he asked, \"What happened?\"\n\n\"Officer, my dog needs to get to a vet now.\"\n\n\"What happened?\" he repeated. \n\nThree more officers came running up as a firetruck and ambulance parked down the block from us. \n\n\"That dude took a shot at him, then shot his dog and grabbed her and put a gun to her head.\" one of the witnesses said, \"Then he,\" pointing at me, \"shot the dude.\"\n\n\"Show me your hands! Now!\" he said as he raised his weapon toward me sending the shoppers who had poked their heads out scurrying back for cover. \n\nI placed my hands behind my head and put my feet shoulder width apart as another officer approached me. \"Shoulder holster, left side, it's a Glock 10. There is a round in the chamber so be careful with it. My carry permit is in my right back pocket. Now please get my dog to a vet.\"\n\n\"You sure seem awful calm about this.\" The youngest cop said as he put handcuffs on me and pulled my weapon out of the holster. \n\n\"He has every reason to Son. He has probably killed more men that you've had birthdays.\" a familiar voice said as Bobby stepped on to the sidewalk. Walking up to Misti he knelt down and scooped Bandit up in his arms. \"Come on Boy, let's you to a vet. See you in bit Sam.\" Then he turned and started walking to his Suburban. \"Misti?\" he asked over his shoulder.\n\n\"Sheriff, she can't leave, she's a witness.\" one of the officers said.\n\n\"She is coming with me. You can tell Chief Watson that if he has a problem with that he can talk to me about it later.\" Bobby growled, as he pushed his way past the crowd, the town cops and then walked to his Suburban with Misti following him. Gently placing Bandit in the backseat with Misti he jumped in the front and with lights flashing and siren blaring he headed off to find a veterinarian's office.\n\nIt had been Bobby that had convinced me to get the carry permit even though I rarely carried a weapon. As the county sheriff, he was the one to sign off on it. His exact words were \"Shit Sam, even with PTSD, I would trust you with a concealed carry permit before I would trust half of the Yahoos that work for me. You have more experience in a gunfight than 99% of the people in this county.\" So, I had applied for it and now, I was thanking God that I had. \n\nI don't know why but after the incident on my front yard with Misti and her mother and step-father I had begun to carry anytime we left the house. Hell, they were in jail almost six-hundred miles away, locked up on state and Federal charges, what were the chances of them getting out? Looking around at the bloody carnage surrounding me, I decided that they were apparently a lot better than I had expected. \n\nAs luck would have it, two of the six eye-witnesses to the entire incident, were a Deputy District Attorney and her husband who, like Misti and me, had been out shopping the sales in town. After the cops recognized her and after a very frazzled Chief of Police showed up on scene, I was turned lose with a promise to come to the station to fill out a statement as soon as possible tomorrow morning; the Chief was the one who took me to the vet's office. \n\nI walked into the waiting room just in time to hear a very angry Bobby say into his phone \"Look Asshole, I don't give a fuck about his rights or if you are a Federal judge or not. You released that dirt bag out on bond and he just tried to kill two innocent people in my county. By tomorrow morning I am going to make sure that every TV station in the state of Virginia knows your fucking name, date of birth, law school and underwear size. You can take your threats about US Marshalls arresting me for threating a judge and go fuck yourself with them!\" Then he hung up muttering something about flaming liberal, inbred, cousin humping assholes. \n\n\"Where is Bandit?\" I asked Misti.\n\n\"In surgery.\" Misti said looking up at me with red eyes. \"I am so sorry Sam. I am so very sorry. If I hadn't been here this would have never happened.\"\n\nI sat down beside her and then wrapped my arm around her and pulled her in close. She nestled her head against my shoulder and then asked, \"How are you so calm?\"\n\n\"I'm not calm. I'm angrier than I have been in over a decade but if I lose my cool it won't help anything, and it certainly won't help me or you.\"\n\n\"I am so sorry Sam.\"\n\n\"Stop apologizing. You did nothing wrong as a matter of fact, you were pretty damned amazing back there.\" \n\n\"Really?\"\n\n\"Really.\" I said as I kissed the top of her head. \"It takes a hell of a person to stay calm under that kind of pressure. Right Bobby?\"\n\n\"Absolutely.\" Booby replied looking at me and grinning. \"Seriously, it takes a hell of a person to be able to put up with your ass for as long as she has.\"\n\n\"No, it doesn't, you just have to understand that he is a big gruff teddy bear, once you figure that out the rest is a breeze.\" Misti said solemnly. \n\nBobby laughed and then shook his head.\n\n\"You should come over and play poker with us some night Bobby; you don't have to worry about bringing a lot of money either, you'll be playing with his soon enough.\" She said laughing.\n\n\"I see somethings never change.\" He responded laughing way too damn loud to be able to call himself my friend. \n\nWe all stood up an hour later as the doctor walked into the waiting room and over to us. She paused for a moment and then she smiled and said, \"I've got good news and better news. The good news is that the bullet didn't strike any bones or major organs. The better news is that there is a lot of muscle tissue damage to his triceps and pectorals, but as far as I can tell, it didn't do a lot of nerve damage. He did lose a lot of blood though; it will be a long recovery and he might never be as fast a runner as he was this morning, but he is going to pull through. He's going to have to stay here for a few days and while he is here, I promise, I will treat him like he is my own. You can come by to visit him as often as you would like.\"\n\nI had to sit down as the relief washed over me and the tears began to flow. Once Bobby knew that Bandit was out of danger, he left with a promise to call me as soon as he found out where Misti's mother was. As he was leaving he said \"Well, at least you saved the taxpayers a shitload of money on a trial. Now if you will excuse me, I have to go sign a coroner's report that says the bastard died from a severe case of lead poisoning. I've got a deputy at your cabin to make sure everything there is kosher until you get back home. I'll call and tell him that you're about an hour or two away from getting there.\" \n\n\"Thank you again Bobby, you really are an Angel.\" Misti said.\n\nTipping his hat and winking at her, he replied in his best cowboy drawl, \"Aww shucks Miss Smothers, ma'am. T'wernt nuttin'.\" \n\n\"Get out of here.\" She said laughing at him after she had given him a kiss on the cheek. \n\nWe had to wait another hour or so until Bandit was alert enough to go in and see him. A huge patch of his shoulder had been shaved bare and his bandages were wrapped in a gauze material. He was also wearing the cone of shame and he didn't like it one little bit. \"I've been here Buddy, it sucks, I know, but we will have you back home in no time.\"\n\nHe lay there panting, just looking up at me with those big brown eyes. Misti walked over to him after a moment and he tried to scoot across the bed to her. She dropped down on her knees and wrapped her arms around his neck, kissing the top of his head and saying, \"Hurry home Buddy, we need you there soon.\" His tail gently thumped the bed at the sound of her voice. \n\n\"Me? Nothing. You? He scoots and wags his tail. You broke my dog.\"\n\n\"I did not! I improved him.\" She said smiling across the bed at me. \"He just needed a woman's touch to make his life complete.\"\n\n\"Uh huh.\"\n\n\"All males do, you are all just too stupid to realize it. The species is irrelevant.\" she added with an innocent looking smile.\n\n\"Amen.\" The doctor replied smiling at her. \n\n\"We are going home Doc. Thank you for everything. Call me if there is a change please?\" I said as we headed out of the room.\n\n\"I will.\" She promised as Bandit starting whining when I moved toward the door. \n\n\"We will be back soon Buddy, I promise.\" I said, closing the door and walking to the Jeep.\n\nWe turned into the driveway about twenty minutes later and one of Bobby's deputies was sitting there. He was in his early twenties and he was all but gawking at Misti as we walked toward the truck he was sitting in. Aside from that I was immediately impressed by his demeanor and professionalism. He asked for the door key and then disappeared inside the cabin for three minutes or so. When he came out, we were standing on the front porch and he handed me the keys back say \"It's clear. I kind of figured it would be but I wanted to check it out anyway. The Sheriff told me to let you guys know that her mother is still in custody, so she won't be a problem.\"\n\n\"Thank you, Deputy.\" I said shaking his hand.\n\nTipping his hat to Misti and saying \"Ma'am.\" He walked off the porch and headed to his truck. \n\nWe walked in and all but collapsed on the couch both of us silent and staring into nothing; lost in our own thoughts. A half an hour of silence was broken when Misti finally spoke.\n\n\"Sam, are you going to be okay?\"\n\n\"Yeah, I'll be fine. You?\"\n\n\"I'm still terrified. I'm sorry but I am still afraid. My mother is out there and when she finds out that Carl is gone she is going to flip the hell out. Locked up or not, eventually she will get out and that terrifies me.\"\n\n\"I'll keep you safe.\"\n\n\"You shouldn't have to.\"\n\n\"Okay, then I'll teach you how to take care of yourself.\"\n\n\"I've never even held a gun before. I wouldn't know where to begin.\"\n\n\"Good, there will be fewer bad habit to break, now let's see about dinner. I'm starving.\"\n\n\"One last question Sam and then I will drop it for now. What Bobby said about you killing people, is that true? Have you? Other than today I mean?\"\n\n\"Yes.\" I said, hoping to let it drop. \n\nShe stared silently at me for a moment then she got up and walked into the kitchen leaving me alone on the couch; lost in the past. Carl was number nine and he was the only one where I had known his name. That itself, really didn't make a difference to me but each of them had lives, evil though they were, and I had taken them. Regardless of the reason, that takes a toll on your psyche. When I retired and moved back home I had hoped that I was done with that, I guess Fate had made other plans. \n\nMisti had made spaghetti and garlic toast for dinner and as we ate she kept looking across the table at me. Finally pushing her plate away, she said \"Some days are better than others.\"\n\n\"Huh?\" I asked her, confused about what she meant.\n\n\"Some days are better than others, that is what you said to me on my first night here. I was pouring out my heart about how I thought I was going to die that day and you said, \"Some days are better than others.\" Do you remember?\"\n\n\"In the living room.\"\n\n\"Yes, now take your own words to heart Sweetie. We are both here and Bandit is still alive because you did what you had to do to survive and keep us all safe. If it hadn't been for you, all three of us would most likely be dead now.\" she said firmly. \n\n\"Thank you.\" I mumbled sincerely. \n\nGetting up she walked around the table and taking my head in her hands she lifted it up and kissed me, once on the forehead and then softly on the lips. \"No Sam, thank you. This local lovely is still very impressed by her hero.\"\n\n\"Misti,\" I said, becoming concerned about where this might be leading.\n\n\"Relax Sam, it's just a few lingering Daddy issues, I'll work through them with Diana tomorrow afternoon.\" she said laughing at my apparent discomfort. \n\nSitting on the couch after dinner I couldn't help but think about the missing part of my life that was in a veterinarian hospital downtown. I could tell that Misti was felling the same way, so I said, \"He will be home before the New Year, it is only a few days.\"\n\nScooting across the couch she lifted my arm and then snuggled against me, laying her head on my chest she said, \"I never dreamed that I could become so attached to a dog in such a short period of time.\"\n\n\"I warned you that he was a lady's man.\" I said laughing.\n\n\"You did, didn't you?\"\n\n\"Yep.\"\n\nWe sat there talking about nothing for another two hours. The one time she did get up she went into her bedroom and then came out wearing her nightgown and robe and then snuggled right back under my arm. It felt surreal sitting here with her discussing nothing and everything at the same time. I felt my eyelids drooping and finally said, \"As nice as this has been, I need to get to sleep, tomorrow is going to be a long day.\"\n\n\"I know, just give me five more minutes.\" She replied with a sleepy voice. \n\n\"Okay.\"\n\nI woke up at one in the morning with her still beside me, sound asleep. When I moved she woke up and sleepily said \"Sorry.\"\n\n\"That's okay. Bedtime.\"\n\n\"I think bedtime was three hours ago.\" She mumbled yawning.\n\n\"Okay, Second Bedtime.\"\n\n\"That works.\" she said as she half stumbled into her room.\n\nBy noon Misti and I had given the police investigator our statements on the shooting and had visited the animal hospital to check on Bandit. He was looking much better now, and they had started giving him small amounts of food. The vet told us that barring any complications we should be able to take him home on the afternoon of New Year's Eve. That was the best news I had gotten in a very long time. \n\nNew Year's Eve found Misti prowling through the cabin like a jungle cat. If she wasn't pacing, she was fidgeting and if she wasn't fidgeting she was pacing. I almost had to force her to calm down enough to eat lunch and at two, when my phone rang she jumped up and said, \"Is it the hospital?\"\n\nI nodded and answering the phone I smiled at her. Saying \"Thank you.\" to the doctor I said, \"Let's go get him.\" She almost flew to the Jeep. \n\nThere was another snow storm forecast for tonight, so we stopped at a grocery store to pick stuff up instead of Wal-Mart because the crowd would be smaller, and I didn't and wouldn't have Bandit with me in public for some time. Grabbing the essentials, we piled back in the Jeep and drove to the hospital. \n\nAfter receiving his care instructions, we looked up to see a limping German Shepard coming slowly towards us. Tail wagging, he hobbled up to me and leaned against my leg. Misti and I both dropped to our knees and hugged him gently around the neck. It was Misti who stood up first and said, \"Let's get you home and into bed Boy.\"\n\n\"Sounds like a plan doesn't it Bandit?\"\n\nShe led him outside and I spoke to the doctor for a minute about the bill. \n\n\"What bill?\"\n\n\"The bill for all of this.\" I said.\n\n\"There isn't one.\"\n\n\"Huh?\"\n\n\"You don't know?\" she said smiling at me.\n\n\"Know what?\"\n\n\"Bandit has a page on a funding site. The bill is covered with a lot left over. We are going to help start a local pet rescue with the money that is left over. We are thinking about calling it Bandit's Bandits. Is that alright with you?\"",
        "\"Absolutely,\" I said smiling from ear to ear. \"but change the name.\"\n\n\"To what?\"\n\n\"Misti's Misfits. Misti with an I.\"\n\n\"Your daughter?\" she said nodding her head toward the door.\n\n\"Yes and no. Yes, that is Misti and no, she's not my daughter. She is just a very special young lady. Thanks Doc.\" I said as I turned to leave. \n\nThe look on her face was priceless.\n\nMisti was standing by the Jeep with Bandit when I walked outside still smiling. \n\n\"You look happy!\" she said.\n\nPicking Bandit up and placing him in the backseat I said \"Very happy. As a matter of fact, I couldn't be happier if I wanted to be. Let's go home.\" I said as I opened her door. \n\nAfter dinner I told her about the funding site and pet rescue idea that the vet's office had come up with. When I told her the name I had suggested, tears welled up in her eyes as she sat there, petting Bandit's head under the cone. True to form he had come back home and had tried his best to follow her around the house. It took the better part of an hour before we both realized that no amount of coaxing or commands was going to keep him in his bed if he could help it. The instructions said light exercise was ok, so I guessed that if he didn't do any running it would be fine.\n\nThat night as I was brushing my teeth and getting ready for bed it dawned on me why she had been so agitated all day long. So, after I finished up, I threw on a pair of sweats and with Bandit limping along beside me I walked down the hallway to her room. I knocked on the door and when she opened the door I could tell that she had been crying. \n\n\"I'm sorry. I should have remembered.\"\n\n\"It's okay?\"\n\n\"Do you want to talk about it?\n\n\"No, not really.\"\n\nTaking her by the hand I led her back out to the couch and sat down, then I patted the seat beside me and said \"Sit.\" We both laughed because as she turned to sit, Bandit complied with the command.\n\n\"Sam, three years ago, my old life came to an end. I really don't want to focus on it anymore. I want to move forward with the one I have now. I'm just so afraid right now. I'm still afraid that I am freezing to death on a park bench and this is all a dream.\"\n\nWrapping my arm around her I said, \"It's not.\"\n\n\"Yes, it is. It is a dream, it's just not that dream.\"\n\n\"Okay, so this is one of the better days then?\"\n\n\"Exactly.\" She whispered. \n\n\"Then run with it.\"\n\n\"Sam?\"\n\n\"Yes?\"\n\n\"Do you realize what you have done to me and for me?\"\n\n\"I can see the changes in you over the past month. You are a hell of a lot more confident now and you aren't afraid or ashamed to look anyone in the eyes like you use to be.\"\n\n\"Exactly. You did that. You made me realize that I was intelligent and that I was pretty and that I was someone that any man would be lucky to have or to take to bed. I wasn't a two-bit tramp or a worthless cunt like my mother and Carl tried to tell me I was. The girl that believed that? She is the one that froze to death on a park bench a few weeks ago. The one you have your arm around right now? She can do anything that she wants to do, and you are the one who made that happen. Well, you and that furry guy over there with the cone around his neck.\"\n\n\"Thank you.\" I said chuckling and meaning every word.\n\n\"Sam?\"\n\n\"Yes?\"\n\nShe stood up and straddled my legs and then sat down on my thighs facing me. Grabbing the front of my shirt she leaned forward and kissed me. I was too shocked to move and by the time I fully realized what she had done she had broken away from me and was looking me fully in the eyes. \n\n\"I'm not sleeping alone tonight. I'm through sleeping alone. Learn to deal with it.\"\n\n\"Mist\" She grabbed the front of my shirt again and kissed me harder. This time I felt her tongue probing my lips and I couldn't stop myself. I returned the kiss with just as much passion as she was giving me. When we stopped she stood up and dropped her robe, then she unbuttoned her pajama top and slid it off her shoulders, letting it fall to the floor. Taking my hand, she turned and walked toward my bedroom. \n\nWhen we got to the side of my bed she turned and started pulling my shirt over my head, when I took over, she dropped her hands to my waist and started pulling my pants lower. When my dick popped out of the waistband it was semi erect and she paused for a second before she wrapped her hand around it and then ran her tongue over the head. Within seconds she was in her knees in front of me with her head bobbing up and down as her mouth engulfed it. \n\nA couple of minutes later I said, \"Misti! You need to stop!\"\n\nStopping what she was doing she looked up at me and shook her head with her hand still holding me.\n\n\"No!\" she said firmly, \"I'm not stopping.\"\n\n\"I didn't mean it that way. I was about to cum. You had maybe two seconds left.\"\n\n\"Good!\" and she went back to work on me.\n\n\"Oh God! Misti!\" Grabbing the back of her head, I held her to me as I cried out while I came in her mouth. I could feel her mouth still milking me as she was swallowing my load and then she stood up, pulled her pajama bottoms off and lay down on my bed. \n\n\"Get in bed Sam.\"\n\n\"Misti.\"\n\n\"Get in our bed Sam.\"\n\n\"This is so,\" I began.\n\n\"DON'T YOU DARE SAY WRONG!\" she said so loudly that I jumped. \"Damn you Sam, you started this, now get your ass in our bed and finish it.\"\n\nI sat down beside her and tried to pull my sweats back up, but she reached out and grabbed my hands. I stopped looked at her for a moment then I reached out and touched her cheek with my fingertips. Her eyes closed, and she moaned as I slid my hand down her neck and then across the tops of her breasts and her nipples. Pausing there I gently pinched the left one and I heard her groan in anticipation. I replaced my fingers with my tongue and she gasped, pulling my head in tighter by wrapping her arms around my neck.\n\nStopping I looked up at her, then climbing in the bed and lying down beside her, I said, \"Is this really what you want? An old man with a broken body?\"\n\n\"More than anything.\" She replied.\n\n\"Are you sure?\"\n\nLaying back against the head board she propped herself up and pulled the covers over our bodies, then she said, \"I'm not offering you myself to get anything from you. I'm doing what you said I should do, I'm giving myself to a man who has respected me and has treated me like I deserve to be treated. You. The past month, for the most part, been absolute bliss for me. For the first time in years, I have felt cared for and safe.\" \n\nShe rolled to her side facing me and propped herself up on her elbow. When she did the covers slid off her and I was again treated to the sight of her beautiful firm breasts. Then she said, \"This might come as a blow to your ego Old Man, but I don't need you in my life to survive. I want you in my life because you make me feel like I am the most perfect woman on the planet.\"\n\n\"Misti, I've got kids,\" I started to argue.\n\n\"Yeah, I know, I know, you have kids my age. Blah, blah, blah. Know what? I don't give a damn about that. I really don't and I'm not using you to fulfill some twisted Daddy fantasy either. I'm here because I want to be here; with you.\"\n\n\"You haven't taken anything from me Sam, you have given. You have given me back my dignity, self-esteem and self-worth.\"\n\nI lay there shocked beyond believe at the words coming out of her. Then she continued,\n\n\"Let me rephrase that. Do you remember that scared little girl you met in a parking lot a month ago? You turned her into the woman that wants to be in your bed with you tonight. And you will make love to me tonight Sam, because forty-six or not, I'm betting there is a part of you that thinks it's still twenty and will be ready to go again in about ten minutes. I just have to figure out how to pass the time.\" \n\nShe pulled her right hand from under the blankets and held it up to show me how wet her fingers were. Pressing them to my lips she whispered, \"That's how wet I am Sam. Do you like the way it tastes? Imagine what it is going to feel like when you slide into it. Ten minutes from now, when you're inside me for the first time, you won't care if I'm eighteen or eighty.\"\n\nI couldn't help myself, I groaned loudly. \n\nThen she rolled on top of me and slid her hand down my stomach. She gripped my cock and slowly started moving her hand up and down. Looking me in the eyes she whispered, \"See? Still twenty. This is the next thing you're giving me Sam and I am going to take every inch of it and then beg you for more.\"\n\n\"Misti,\"\n\n\"Sam, just shut up and kiss me.\"\n\nI did, and she was right. Ten minutes later, as I finally slid inside her for the first time I didn't give a damn what anyone thought. I had made love to her as slowly as I could, teasing her body with my mouth and hands to the point that her back was arched into a permanent bow. She had the enthusiasm of youth and I had the experience that age brought. All in all, it was a perfect match. \n\nWhen I finally slipped my cock past the lips of her pussy she moaned and whispered \"Slowly. Please Sam? Slowly, I want to savor every moment of this.\"\n\nI slid in as slowly as I could watching her face contort with pleasure. Then I felt resistance and paused for a second until I realized what was going on.\n\n\"Are you,\" I started to ask, but she thrust her hips up toward me quickly and winced in pain.\n\n\"I was, until just now.\" She gasped wrapping her arms around my neck and holding me tightly. \"Please finish this Sam; please? Just go slowly, I want to remember every second of it.\"\n\n\"Misti.\" I began \"I promise you that you will remember tonight for the rest of your life.\" and then I slowly started pumping in and out of her, keeping a steady pace until the reactions of her body and me realizing that she had been a virgin caused me to cum deep inside her. \n\nAs she lay in my arms recovering, I ran my fingers through her hair and slowly kissed the top of her head until she looked up and said, \"Dear God if more women had a first experience like this there wouldn't be any virgins left on the planet.\" \n\n\"Your welcome.\" I said, running my fingertips down her spine listening to the steady thump, thump, thump of Bandit's tail on the floor. \n\n\"Sam?\"\n\n\"Yes.\" I replied.\n\n\"You promised me a bed to sleep in, from now on, it's this one; ours.\"\n\n\"Okay.\" \n\n\"What? No lecture on why we have to stop?\"\n\n\"Nope.\" \n\n\"Seriously?\"\n\n\"Misti I just came to the realization that I haven't really had a say in this since I offered to let you come here.\"\n\n\"Well, you got that one right anyway.\" she said chuckling and then she added, \"Sam?\"\n\n\"Yes?\"\n\n\"There is one thing I am going to change tomorrow morning.\"\n\n\"What?\"\n\n\"That room of yours just went away. Most of that is going on the walls in the living room; the rest can go into boxes in the attic. I'm sleeping with a hero and I'll be damned if the people who walk into this home won't see that. What you did for those medals? That made you the man that reached out to me when I needed it. I just have to make sure that none of the local lovelies who show up are lovelier than me.\"\n\n\"That won't ever happen Baby Girl.\" I said as I rolled over on top of her and began kissing her until I heard her start moaning. \n\n\"Are you trying to start something Old Man?\" she asked smiling up at me and spreading her legs.\n\n\"Yeah. You.\"\n\n\"Mission accomplished soldier. Happy New Year Love.\" She whispered.\n\n*****\n\nAuthor's Note:\n\nSo, why did I write a story that centered around a PTSD Service Dog? There are a lot of reasons, but the main one is that those incredible animals have an 88% success rate in helping veterans cope with the anxiety, turmoil and strain of dealing with Combat Related Post Traumatic Stress Disorder. Their success rates with victims of other forms of trauma are just as high, if not higher. \n\nBandit, Sam and Misti are fictional characters, but the struggles they faced in this story affect millions of people, not just Americans, daily. PTSD isn't strictly a sad side-effect of military service; it is the human minds natural response to a traumatic event that is so overwhelming and heinous that the victim is incapable of dealing with it on normal cognitive or emotional level. Anyone can develop it.\n\nI am asking one thing and one thing only of anyone who has gotten this far with the story. If you think you need help with PTSD, you do. Please get it as soon as possible, this was a fictitious story; don't think for a moment that you can deal with that beast on your own. \n\nWith that said, I hope you've enjoyed it. \n\nYDW"
    ],
    "authorname": "YouDidWhut",
    "tags": [
        "mature",
        "older male",
        "younger female",
        "homeless",
        "romance",
        "divorce",
        "ptsd",
        "military",
        "blizzard"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/bandit"
}