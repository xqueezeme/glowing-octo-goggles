{
    "title": "Forever Again Ch. 04",
    "pages": [
        "Author's Note: This story depicts graphic lesbian sex and mind control. If these topics do not interest you or are prohibited in your area please back out now.\n\nThis is the fourth installment of a long story. Those that have read my other stories will know that I tend to have some story behind the sex so if you're looking for a quickie this story may not be to you liking. \n\nFor those of you that haven't backed out, I hope you enjoy my words.\n\n~CD\n\n*****\n\nVala Strauss drifted aimlessly amid a hazy, bleak landscape of sodden misery. The iron grey clouds of earlier that morning had slowly descended to cover the entire forest in a cold, dreary mist. \n\nSitting on the soggy ground, shivering with the combined wretchedness of the cold damp air and her heavy, wet clothes, Vala felt miserable and utterly alone. Another tear rolled down her cheek as she remembered Inga's last cry. Vala, I love you! But it was not to be. Vala knew she would never see Inga again. Vala now felt sure she was doomed to be alone, forever. After a time she drifted asleep.\n\nYou're never alone, Valamera.\n\nThe words rippled through Vala's mind and her breath hitched in her throat. \"Mistress?\" she whispered.\n\nYes my Love, I am here for you, just as always.\n\n\"Mistress, where are you?\" Vala asked, looking around the cold, empty woods. The heavy mist floated around her limiting her sight to only a few dozen paces in any direction. \"Are you here? I can't see you.\"\n\n\"I am always with you, Valamera.\" Said a smooth, melodious voice. \"Even if you can't see me, I'm still there.\" It took Vala a moment to realize the voice wasn't in her head this time but behind her. She whipped her head around and there, striding towards her was a tall, beautiful woman with pale skin, light grey, almost silver eyes and thick black hair. \n\nVala noted with some surprise that rather than her usual long black dress, she was wearing something more like what Vala thought of as woodland clothing. Although Vala guessed it was certainly more like the woodland garb of a Lady out for a day of riding rather than that of a common hunter or trapper. \n\nShe was dressed in a finely tooled black leather vest worn over a white blouse and tight grey leggings tucked into knee high black leather boots. A wide, dark brown leather belt at her waist matched a pair of fine leather gloves on her hands. A heavy grey fur cloak covering her shoulders completed the outfit. The cloak is from a grey wolf. Vala found herself thinking and then wondered why that thought had occurred to her. \n\n\"You've never come to me before like this. You've only come to me in my dreams.\" Vala said quietly. \n\n\"Who is to say you're not dreaming now, my Love?\" Her eyes twinkled with mirth and she seemed to be laughing quietly to herself. \n\nVala touched her face tentatively with her fingertips as if to confirm she was actually awake. Her skin felt the same as it always did, smooth and soft, now slightly cool and damp with the mist. \"Am I dreaming?\" She whispered. \n\n\"Does it matter? I'm here for you and you're no longer alone. Isn't that enough?\" \n\nA familiar warmth blossomed in Vala's core and she smiled. \"Yes Mistress. I...\" she hesitated then continued, \"I've missed you.\" \n\nThe woman took a step closer, closing the last distance between them. Placing a hand on Vala's cheek she said softly, \"I have missed you as well, my Love. More than you could ever imagine.\"\n\nVala placed her hand over the one on her cheek and held it there. The skin was smooth and soft but surprisingly cool to the touch. \"I don't know what is happening to me.\" She whispered, tears of both joy and pain welling up in her eyes. \"Can you tell me?\" \n\nHer Mistress pulled her slowly, gently into a protective embrace. Wrapping her arms around Vala and holding Vala's head to her breast. \"It will all be made clear in time, my Love. All things come with time.\" \n\n\"Why must we wait? Why must I wait?\" \n\n\"Sometimes things must progress at their own pace, my Love.\" She lifted Vala's chin and looked deep into her eyes. Vala felt herself sliding into the shimmering depths of those liquid silver eyes. A hand slid into her hair and pulled their lips together.  \n\nPassion ignited in Vala's body the instant their lips met. She moaned into her Mistress as their kiss deepened and their tongues danced. Hands wandered slowly down her body to cup her bottom, squeezing it before pulling their hips together. Emboldened by her flaring passions, Vala tentatively ran her own hands over her Mistress, mirroring her moves. She shivered at how wonderful the mysterious woman felt in her arms. \n\nHer Mistress gently broke the kiss and pulled her face back a little, looking at Vala as if studying her for several long moments. \"So beautiful.\" She whispered, then leaned back in to continue the kiss. \n\nTheir tender embrace continued for a time but Vala couldn't guess how long. All sense of time slipped away whenever Vala was in the arms of her Mistress They could have kissed for seconds or days, Vala couldn't tell. In this woman's arms, time became meaningless. \n\nAlmost without her noticing, Vala found herself laying on the ground with her Mistress beside her. The soft grey fur cloak spread out under them. Vala felt the hands of her Mistress drifting over her body, caressing her in all the right places, setting her body afire with need. As if by magic, her clothes seemed to fall away from her body at the merest touch of the woman's hands and in almost no time, Vala was lying completely nude and vulnerable before her Mistress. \n\nFingers slid over her nipples making her gasp with bliss. Her back arched, offering her full breasts for this woman to do with as she would. \"Yesss...\" she hissed with delight. \n\n\"So eager, my Love?\" Her Mistress teased her. \"Very well, if that is what you truly desire, who am I to deny one so lovely.\" \n\nLips wrapped around one of her nipples and sucked the sensitive bud in, sending ripples of pleasure through her body. Vala's hand came up and she worked her fingers into the wonderfully thick mane of black hair, pulling the lips harder to her breast. She rolled her head back and released a series of uninhibited, full throated moans as her Mistress slowly, almost leisurely caressed Vala's breasts. \n\nAfter a time, her Mistress shifted her attention downward and fingers began to dance over her sex, turning Vala's moans into cries of rapture. \n\nLips pressed in close to Vala's ear and words, thick and sweet slipped into her mind. Her Mistress was controlling her again, changing her just as she before. Just as Vala had done to Inga and Else. Vala knew what was happening but was powerless to stop what her Mistress was doing to her. \n\n\"Don't resist who you are, my Love. Don't resist who you will become. You are meant for so much more than you can imagine. You are far greater than you know, my Valamera.\" The words slid into her thoughts just as before and Vala groaned. She imagined she could actually feel the words entering her mind, like delicate fingers dancing across the surface of her thoughts and dreams, pausing when they found the spots they were searching for to slip new ideas and emotions directly into her soul. \n\n\"Mistress...\" Vala slurred dazedly. \n\n\"Don't resist the pleasure your body can give you. Give in to the pleasure, revel in it, savor it...\" A kiss on the ear the sent a shuddering gaps through her body, \"...and share it.\" \n\n\"Yess...\" Vala hissed. \n\n\"Now my love, I must go soon, but first,\" There was a pause and even without looking, Vala could sense the almost predatory smile that spread on the luscious red lips of her Mistress, \"I need to taste you before I go.\" Vala groaned and she felt her core constructing in eager anticipation of her impending release. \n\nHer Mistress seemed to understand what was about to happen and chided gently, \"No, no my Love, you may not peak until I give you permission.\" She hissed in Vala's ear once more, her controlling words thick and sweet, enchanted and utterly irresistible. \"You will not climax until I release you.\" She teased one of Vala's nipples making her moan with need. \"You will not peak until my tongue touches your bud. Only when I have had my first taste of you may you allow yourself release.\" \n\nVala whimpered but knew she couldn't resist a command from her Mistress. She felt her sex quivering with pent up energy that was desperate for release but was now held in check by the force of another woman's will. Without her even thinking, her legs spread wide and her hips pushed up, offering herself to the woman who controlled her. The coolness of the air on her soaking wet sex only drove her passion higher and she cried out desperately, \"Mistress, please!\" \n\nUnhurried, her Mistress moved between Vala's legs and smiling wickedly, kissed Vala's mount tenderly. Just the slight contact pushed Vala even higher and she whimpered with need. She panted in ragged gasps as her hands clutched at her own breasts, twisting her own nipples savagely. The tight, tingling pain mixed with pleasure in her in her breasts didn't release her but instead only served to fan the fire raging in her core. \n\nTime passed as Vala balanced on a knife edge between rapture and madness while her Mistress sat serenely between her legs, slowly, torturously caressing Vala's aching sex with her fingers, seemingly intent on watching Vala's mind shatter. \"Please...\" Vala begged. \n\n\"In such a hurry for it to end, my Love?\" The Mistress teased, \"Speaking for myself, I'm enjoying this show immensely. You're lovely when you're on the edge of rapture.\" \n\nGroaning incoherently, Vala couldn't manage any kind of real reply. \n\nWith talented fingers, her Mistress continued to tease her desperate sex for what seemed like lifetimes to Vala. Her every move searing Vala's soul with exquisite jolts of the most delicious agony Vala had ever felt. Over and over, she moaned with rapture when she felt the fingers slide into her, filling her sex then groaned with need when they slid out, leaving her feeling hollow. \n\nAfter a time that could have been mere minutes or decades, her Mistress finally leaned in close and whispered, seemingly into Val's sex. \"Are you ready my Love?\" \n\n\"Yes!\" Vala cried desperately.\n\nVala felt the touch of her Mistress's tongue on her sex and instantly her release came. \n\nA shriek of rapture was ripped from Vala's throat as a searing wall of fire burned through her body, consuming everything before it. Her entire core contracted in a stunning paroxysm that locked her breath in her lungs and threated to tear her apart from the inside. Her hips trust up, driving into her Mistress as if her sex was trying to swallow the tongue that was ravishing her. \n\nObligingly, her Mistress pushed her tongue deep into Vala's sex, driving Vala's bliss even higher. \n\nWave after wave flooded through her young body battering her mind into complete submission. Screams of rapture filled the forest around them and Vala only distantly realized that they were actually coming from her. She felt wetness flood from her sex, soaking the soft fur under her with its strong, lustful scent. \n\nFinally it all became too much and the world started to slip away from her. Everything around her slowly melted into a grey fog of unending ecstasy that was overwhelming her mind and was surely driving her mad. As her mind slipped lose the last tether to reality and she drifted away she felt herself whisper raggedly, \"I love you Mistress.\"\n\n* * *\n\nWake up my Love. Wake up... The words echoed distantly in Vala's mind, prodding her back to consciousness. \n\nSlowly she came back to reality and she looked around in confusion. She was alone in the forest, exactly where she had collapsed earlier after her run from the river. There was no sign of her mistress anywhere. She was alone and still dressed in her wet clothes. \n\nAnother dream, Vala groaned to herself. Just a dream. \n\nBut what a dream it had been. She could still feel the wonderfully warm pulse of her orgasms flowing through her veins and knew that the wetness between her thighs had nothing to do with her earlier swim in the river. She fell back with a groan and allowed herself a few minutes more to savor the afterglow. \n\nHer thoughts tried to go back over the dream but much of it seemed to flit away from her like leaves before an autumn wind. Tantalizingly close but always slipping just beyond her reach. Her Mistress had said something important to her she thought. Whispered something into her mind just has Vala had done to her other lovers but try as she might she couldn't recall exactly what the Mistress had said. \n\nYou will never be alone, my Love. The words of her Mistress whispered in her mind. \n\nVala felt a warm flush at the sound of her Mistress and the promise those words held. \"Thank you Mistress.\" She whispered. \n\nFeeling a little better and still enjoying the heat seeping through her bones, she drifted off. \n\n Get up Valamera, now! The voice awoke her again, more forceful this time. \n\nVala now became aware for a frightening new sound, the low, mournful howl of a wolf. It was followed by another, then another... and they were close.\n\nGetting quickly to her feet she started to run away from the direction she though the howls were coming from. After a minute she heard another howl, closer this time, much closer. Her feet pounded on the soft, damp leaves of the forest floor and her arms pumped as she ran with all her strength. She looked for a tree to climb but there were none large enough with branches low enough for her to reach. She tripped and rolled, her dress caught something and it tore as she got up. Two more howls came, very close this time. She glanced over her shoulder and thought she saw movement. She ran on desperately. \n\nSuddenly the forest floor dropped away from beneath her. In her flight she had not seen the small gully and she had run right off the crest. She rolled down the slope in a jumble of damp leaves, sticks and dislodged gravel. She landed at the bottom with a thud that knocked the air from her lungs. For a moment she lay there, flat on her back staring up at the trees overhead trying to fill her lungs.\n\nFrom close beside her a deep voice boomed, \"Woah Lass... where did you come from?\"\n\nVala started and looked in a near panic to see who had spoken. A few feet away was a big man holding an axe. Beside him was another man, taller but more slender. Both were dressed in workman's clothes and had squat, narrow brimmed leather caps on their heads.\n\nBefore Vala could say anything she heard a loud growl from somewhere very close. She turned to see three wolves standing at the crest of the small hill she had just tumbled down.\n\n\"Go on now... git, the lot of you!\" Yelled the big man, taking a step up the hill.\n\nThe taller man followed suit, \"Yeah, there ain't no free meals here today.\" He picked up a fist sized stone and threw it at the wolves, \"Go on now!\"\n\nApparently not willing to take on the big men, the wolves gave another low growl then turned and melted back into the woods.\n\nThe bigger man turned back to Vala, \"Well, I guess that would explain what you were runnin' from. I heard them wolves a howlin' but never suspected it was some young lass they was huntin'.\" He reached down and helped Vala to her feet. He seemed to look her over quickly, \"Here now, you look like you had a bit of a rough day. You'd best come back to our camp and we'll get you patched right up.\"\n\n\"Your... your camp?\" Vala asked a bit nervously seeing the rough, unwashed condition of the big men. The idea of being surrounded by an entire camp of men like these made her uneasy.\n\n\"Aye, our camp.\" Said the taller man. \"It's only a short walk away and once we're there my wife can get you cleaned up and I'm sure she'll fix yer dress for ya.\" He pointed down with his axe handle. Vala looked down and suddenly realized that her dress was torn wide open along one thigh and a rather generous portion of her still wet undergarments was showing. She felt her face flush with embarrassment.\n\nThe men must have seen her reaction because the bigger man barked out a laugh before he said, \"Here now lass, don't be worrying about that. Horace and I here have seen plenty of women. Ain't nothing you got in there we've never seen before.\" He winked at her and chuckled.\n\nFor some reason Vala felt oddly comforted by the men's crude language and even found herself smiling if just a little as they all started walking with the big man in the lead.\n\n\"How did you ever come to be way out here in the woods?\" Asked the tall man, Horrace, his friend had said.\n\nFor an instant Vala felt the stirring of panic as she wondered what she would tell these men. Surely she couldn't tell them the truth that she was forced to flee her home because she was possessed with an unnatural hunger for other women. She thought furiously then said slowly, \"I... I was a passenger on a barge. I was heading downriver towards the town of Ulm. I... I think I must have fallen overboard. I woke up on the river bank this morning and was alone.\" As she spoke, the fabricated story came more easily to her. \"I started walking along the road but then those wolves appeared and chased me into the woods. I... I climbed a tree to get away from them. They barked and howled at the tree for a while but couldn't get me. Eventually they left and I came down but I found I was lost. I wandered for a few hours, totally lost then I heard the wolves again so I ran. They were getting close when I fell down that hill and you found me.\"\n\n\"The river?\" Whistled the big man. \"You've wandered quite a distance then. It's a goodly way from here.\" He pointed vaguely off to their left.\n\nAfter fifteen minutes of walking, Vala could smell wood smoke and cooking meat. A few minutes later she could see signs of building through the trees. They emerged into a clearing surrounded by over a dozen small cottages. Off to one side were several large wagons and huge piles of cut logs. At the far end of the clearing Vala could see a long, low open sided building on the shore of a small pond and she could hear the sound of rushing water.\n\n\"A lumber camp?\" Vala asked.\n\n\"Of course.\" Said Horace. \"That's the sawmill over there. We cut the trees up in the hills and float them down the stream to the millpond. There they get cut up and loaded onto the wagons for the trip down to the big river where they get loaded onto barges and shipped off to town.\"\n\n\"I was on a lumber barge.\" Vala said.\n\nHorace nodded, \"Most of the barges up this far on the big river are hauling lumber going downstream. Coming back it's either iron, grain or sometimes salt. There are lots of other camps further up river, your barge probably works those upper camps.\"\n\nThe men guided Vala to a cabin at the far end of the clearing then led her inside. As the door opened Horace called, \"Griselda! We have company.\"\n\nA woman wearing a kerchief tied around her hair poked her head out of a back room. \"Company? Who in the devils...\" Her eyes fell on Vala and she stopped. \"Good gracious, how ever did a pretty young thing like you end up way out here?\" She came out of the back room rubbing her hands on her apron. \"And look at you, you're a mess, and bleeding.\" She fussed about in a cabinet for a moment before coming over with a piece of cloth. She turned to her husband, \"Go on outside and get me some water so I can clean this poor girl up. Go on now, don't stand there like a tree!\" She pointed at the door when he apparently didn't move fast enough to suit her.\n\nShe sat Vala down on a small three legged stool then knelt in front of her and started inspecting the cut on her cheek. As she looked she talked, \"He's a good man, but sometimes he doesn't have the common sense the Good Lord gave a frog.\" A moment later her husband walked back in with a wooden bucket and placed it on the floor. \"She'll be ok here with me. Why don't you go on and get back to work. All them trees won't be felling themselves, now will they.\"",
        "Horace mumbled something, excused himself awkwardly and left, leaving Vala alone with his wife. Griselda worked with steady confident movements that seemed to indicate that she had done this before. Vala could imagine that living in a lumber camp, she had probably patched up any number of cuts from saws and axes and who knew what else over the years. Vala figured the woman was probably about ten years older than her but her features had a worn, weathered look that made her look even older at first glance.\n\n\"Now what in the name of the heavens were you doing so far out here in the woods child?\" asked the woman.\n\nVala recounted the fabricated story she had already told the woman's husband. At the end of the tale Griselda shook her head. \"Someone must be worried sick about you.\"\n\nVala thought for a moment before answering. She didn't really want anyone asking the reasons why she was making this trip. She certainly couldn't tell them that everyone she knew now thought she was... was a witch. In truth she wasn't really even sure what she was anymore. But she did know that she didn't want anyone asking.\n\n\"No one will be looking for me. I don't have anyone. I was traveling to the town of Ulm to see if one of my uncles still lived there. But he didn't know I was coming.\"\n\nGriselda looked sympathetic. She probably assumed that Vala's parents or husband had just recently died from disease or a fire or something. Death was an all too common part of life in these times and a young widow wasn't very unusual. After a few moments she gave a huff, \"Well, let's get you some hot water to clean up. While you're scrubbing yourself, I'll get you something hot to fill your belly. I'll wager it's been a while since you had a good meal. While you eat, I'll get to work on that dress of yours.\"\n\n* * *\n\nFive days later, Vala was standing by the dam collecting a bucket of water for cooking. Griselda had been gracious enough to allow her to stay in her house for a few days to, \"Git yourself back to rights\" as she put it. All the men of the camp, save the ones who drove the wagons or worked the sawmill, seemed to spend most of their time on the hillsides and only came back every few days to rest and resupply.\n\n\"I heard an interesting rumor today from one of the barge men.\" Said a deep, feminine voice behind her.\n\nVala jumped and dropped the bucket, sloshing water over her shoes. She bit back a curse and turned her head to see a young woman standing a few paces behind her. \"You startled me Rae.\"\n\nRae Kiesl stood there with her customary rye, half smirk. She was a bit taller than Vala and a bit heavier but she carried the extra pounds well. She had long, curly dark blond hair that framed a pretty face with piercing blue eyes, a small round nose, high cheeks and full lips. Rae was the daughter of the wagon master, the man who hauled all of the freight up from the dock on the river and who hauled all the cut lumber back down. Rae spent most of her time working with her father hauling freight or tending their horses. \n\n\"My humble apologies.\" Rae said aloud but the smirk implied she didn't really mean it. She stepped up to the stream bank next to Vala and picked up the bucket for her.\n\nVala had met Rae on her second day at the camp and took an immediate liking to her. Bold and vivacious, tough and outspoken, Rae didn't take grief from anyone, man or woman. She was smart and funny in a deeply sarcastic, almost obnoxious way that reminded Vala a little of her younger sister Adeline. She went about her work at the camp with an air of steady confidence that came from years of experience bolstered by brute intelligence. More than once already Vala had seen the young woman bossing around workmen who were easily old enough to be her father, perhaps even her grandfather. The fact that the men obeyed her without question spoke volumes about her competence and strength of character. \n\nAs Rae bent down to refill the bucket Vala's eyes caught for an instant on the rather generous view her low cut blouse afforded of her more than generous bosom. Vala forced her eyes away and tired hard to ignore the tingling rush she felt on her skin along with the bloom of heat in her core.\n\n\"Here.\" She refilled the bucket and handed it back to Vala before she continued. \"It seems that some barge owner's daughter was seduced by a witch of some kind.\" She glanced over at Vala, \"A beautiful, blond haired witch with dark, evil eyes.\"\n\nVala quickly looked away. The flush of heat she had felt a moment before was instantly washed away in a flood of ice cold panic that surged into her heart. She had to force her words. \"Oh, really?\"\n\n\"Just a few hours walk upstream from here... maybe a bit more.\" Rae paused, picked up a couple small stones and proceeded to toss them casually into the mill pond. \"According to the barge owner, the witch jumped over the side and swam away just like a fish when they confronted her.\" She turned to Vala. \"Imagine that. A real witch, right in our area. And one that seduces young women to boot.\"\n\nVala stood silently, looking resolutely out across the pond at nothing. Rae continued, \"I wonder just what it's like to be seduced by a witch. From what I heard, the young woman cried for days when the witch left her. Broken hearted they say. She loved her...\"\n\nAt those words, Vala's control started to slip. The muscles in her jaw were tight as steel wire as she clenched her mouth shut, trying to contain the little cry that wanted to escape her at the news of Inga's misery. As much as she tried to hide her emotions she couldn't hold back a single tear at the memory of Inga's cry as she dove over the side. She knew she had given herself away but she resolutely refused to meet Rae's gaze. Out of the corner of her eye she saw Rae nod knowingly.\n\n\"It was you.\" She said softly, a little smile of triumph playing on her full lips. \"I knew it.\"\n\n\"I have to go.\" Vala managed to whisper. \"Please, just let me leave... don't tell anyone. I'll just leave.\"\n\nSeeing the pleading in Vala's eyes, Rae's smile faded. \"I won't tell. But you do need to go. It won't take long for even the louts around here to put it all together and peg you as the witch. What are you going to do?\"\n\nVala opened her mouth to reply but stopped. What would she do? Where was she to go now? She had nothing, no money, no supplies, nothing other than the clothes on her back... she didn't even really know where she was. \"I'll just have to head downriver I guess.\"\n\nShaking her head Rae said, \"No. No, that won't do at all. All the rivermen have already heard about the witch. They'll be on the lookout for you. Heavens know what will happen if they find you. You have to go some other way.\" She paused, \"Where were you headed anyway?\"\n\n\"To Ulm. I have family there... or at least I did. I haven't ever been there myself. But my father thinks his brother still lives there. At least he thought so.\"\n\n\"And what if he's not?\" Rae asked with a raised eyebrow.\n\n\"I... I'll just have to think of something.\"\n\nRae seemed to consider that for a moment before saying slowly, \"No, that won't do at all. Rumors breed like rats on the river. Talk of the river witch will have reached Ulm long before you make it there. Within a day of your arrival someone will point an accusing finger at you. You can't go there.\"\n\n\"But I have nowhere else to go. I have to go there.\" Vala said, almost pleading. \n\nFor several long moments Rae looked at her then seemed to make a decision. \"Go get your things and meet me behind the sawmill. I'll get you out of here.\" \n\n\"I don't have any things.\"\n\nRae nodded, \"Then go tell Griselda you're leaving. It wouldn't be right to just disappear after how she helped you.\"\n\nVala nodded in agreement. \"Ok, but where are we going? What do I tell her?\"\n\nWalking towards the sawmill and the horse paddock beyond, Rae said over her shoulder, \"Tell her Rae is taking you to someone that can help you.\"\n\n* * *\n\nThe horse rocked under Vala as she followed along behind Rae. The surefooted, small black mare she rode was apparently accustomed to following the larger dappled mare that Rae was riding because it went along with little to no direction at all. They had been traveling for about two hours now in relative silence. Rae was seemingly not in a talkative mood and Vala was wrapped in a cloak of her own thoughts. Vala had suspected that once they were away from the camp Rae would ask her if she was really a witch or at least ask what had really happened on the river but so far she hadn't spoken beyond a few comments. \n\nThe road they were following was narrow and winding but appeared to be used frequently because it was well cleared. It seemed to be heading more or less east and had been climbing slowly but steadily for the last hour or so. Through occasional breaks in the trees Vala thought she caught glimpses of a large clearing somewhere off in the distance to their left but the trees were thick in this area and most of the time she couldn't see more than a few dozen paces in any direction. She could see why they were lumber camps here. The trees in this area were huge. Tall ancient and grand, they towered over them making the road into a great, green tunnel. Vala guessed that for the trees out here to be so ancient they must be quite far from the nearest town. The trees closer to every town Vala had ever seen were almost always much smaller, the surrounding area having been cleared for farms and firewood for countless generations. \n\nAfter a few more miles the trees began to become smaller and thin out until finally they broke out into the open and Vala gasped. They were partway up the hillside at the edge of a rocky prominence that dropped off dramatically only a few paces to their left. The area around them was almost devoid of all trees, only a few scattered shrubs clung tenaciously to the rocky ground. The entire valley was laid out before them in the fading sunlight. Vala could see the river far below and a few leagues off winding its way along through the forest. Farther still and she could see the sunlight reflecting off of what must be a lake. The sparkle dazzled her and she looked up ahead to see the road they were on narrowed even more and hugged the edge of the dropoff as it continued on to the east, skirting along the side of the hill.\n\n\"It's beautiful.\" Vala gasped.\n\n\"Yes, this is one of my favorite spots.\" Rae agreed. \"I don't come this way often enough but when I do I like to make camp up here in the clear. At least when the weather is good. It can get quite frightful out here in the open during a storm.\n\n\"So where is it that you're taking me?\" Vala asked Rae's back as they rode on.\n\n\"To someone that may be able to help you.\" Rae said.\n\n\"And who is that?\" Vala asked.\n\n\"The Baroness.\"\n\n\"A Baroness?\" Vala whispered in shock. \"Why would a great lady help me?\"\n\n\"Because her manor is always looking for good workers and I doubt many people at her keep would put much stock in witch rumors. They probably won't even hear them way up here. She may take you on as a kitchen maid or something.\" Rae stopped and turned in her saddle. \"I know it's not perfect but it's the only thing I can think of to help you. At the least it will get you through the winter.\" When Vala hesitated Rae continued, \"I make my way to the Baroness's keep many times each year hauling lumber. When the roads clear in the spring and I make my first run if you still want to go on to Ulm I'll take you. But until then, you need someplace to go.\"\n\nFinally with a tight smile, Vala nodded. \"All right. Thank you Rae.\"\n\nRae's lips twisted into her usual, wry smile, \"Don't thank me yet, she may just tell us both to go sod off.\"\n\n* * *\n\n\"Are you sure it's safe to camp here for the night?\" Vala asked eyeing the surrounding landscape which was quite barren and open. Only moss, a few stunted trees and some small bushes hunkered down among the boulders they were camped in. After the day's slow but steady climb Vala suspected they were fairly high up in the hills but certainly nowhere near high enough to be above tree line. She assumed the lack of any trees was primarily due to the rocky landscape. \n\n\"Yes, I camp here almost every time I come this way. I've never had any trouble.\" Rae said, putting another log onto the small fire she had started. There had already been a small stone fire pit setup and a convenient pile of wood under a protective rock overhang. Rae had explained that she left it there on previous trips just in case.\n\nUnconvinced Vala continued to survey their surroundings. \"What about wolves? Won't they find us here?\" Vala asked recalling her flight from the creatures only a few days pervious.\n\n\"They rarely come up here. There's not much for them to hunt I suppose. It's so rocky in this area that nothing much grows as you can see. Anyway they don't like the campfire much and they like burning torches even less.\" Rae said pulling flaming stick from the fire and waving it about dramatically before putting it back into the circle of stones. \"So don't you worry about anything. I said I'm taking you to the keep and I darn well intend to.\" She reached into a bag that had hung on her saddle all day. \"Now come have a seat here by me and have something to eat.\"\n\nVala pulled her worried attention from the surrounding boulders and back to Rae. She hesitated when she saw that Rae was indicating a spot on the boulder next to her... right next to her. Vala finally moved to sit on another rock not quite a so close to Rae. She settled down and caught Rae eyeing her curiously for a moment before handing over half of a small loaf of bread. Next Rae pulled out a cloth wrapped package that turned out to be a large block of hard cheese. She cut off two generous pieces and handed the larger piece to Vala.\n\nAfter taking a few bites Rae asked, \"So what really happened that made you leave your home?\"\n\nA knot formed in Vala's throat as she thought about her family. \"It's... it's a long story.\"\n\nRae gestured at the darkening sky. \"We appear to have time.\"\n\nLooking up to the cloudless heavens Vala considered for a moment. What would it really hurt to tell Rae her story? Surely she couldn't tell her everything, but maybe some of it? She would have to leave off some parts of course, but she could tell the part about losing her first betrothed, then her second as well.\n\nHer mind made up, Vala started talking. She left out the part about her day at the pond with Else and about Inga she said only that they traveled together. She figured Rae had already heard about that part from the river men anyway.\n\nWhen Vala finished Rae only sat and shook her head. \"It's terrible what people will do when they're frightened.\" Rae muttered quietly as she got up and started putting away the remainder of the cheese and her knife. She pulled out a rolled up blanket and came back over to the rock. \"I only have one, you take it.\"\n\nHolding up a hand Vala said, \"No, you take it, I'll be fine.\"\n\nRae dropped it into Vala's lap anyway and went back to sit down on her rock. Grinning she said, \"You keep it. I have more padding to keep me warm.\" She cupped her full bosom and bounced it slightly with a laugh. Becoming a little more serious she said, \"Really, I'm used to the cold, I'll be fine, you take it. And anyway, I have my cloak I can use if it gets chilly.\"\n\nWith a faint smile, Vala said, \"Thank you, for everything.\"\n\n\"It's nothing, really.\" She yawned dramatically. \"Now I suppose we should be getting off to sleep.\" She placed a few more pieces of wood on the fire and then lay down beside it. She shuffled around for a minute apparently trying to get comfortable then settled down. After a few minutes more her breathing became slow and even.\n\nVala settled herself in on a reasonably flat section of ground and tried to relax but her mind refused to stop churning. The events of the last weeks continued to roll through her mind in a slow procession. Bits and pieces of her time with Else and Inga came back to her along with images from her dreams. Recognizing the tightening in her chest and in her sex she desperately tried to force her mind onto something, anything else.\n\nShe looked to the sky overhead and studied the vast carpet of stars that spread out over her. Picking a spot near the North Star, she started counting. Working in slow circles around the bright point of light she counted slowly and deliberately, striving not to lose count. After some time she finally drifted off into her dreams.\n\n\"Valamera...\"\n\n\"Mistress.\" Vala breathed. In her mind, a single musical chord rang, seeming to come from everywhere and nowhere. It's sound, beautiful and true, echoed through her soul. \n\n\"Yes my dear, I am here for you again.\" A voice whispered in her ear.\n\nVala shivered with desire at the feel of the warn breath on her ear. She whirled around but saw nothing, only the close darkness. \"Mistress?\"\n\n\"Here.\" The voice again puffed in her ear.\n\nAgain Vala turned but still saw nothing. The closeness of her Mistress was fanning the flames of her desire. With a building need she asked, \"Mistress, where are you? Won't you come to me?\" \n\n\"No my dear, it is you who will come to me. Then we will be together forever, as it was always to be.\" Like the music, the voice seemed to come from everywhere and nowhere in the darkness. \"But the time is not yet here. Soon my pet, very soon.\" The voice was fading and with it the darkness seemed to fade as well.\n\n\"Mistress!\" Vala cried, \"Don't go yet, I need you!\" The ringing chord in her soul faded with the words of her Mistress. \n\n\"Soon...\" Then voice faded and was gone.\n\nWith a start Vala's eyes snapped open. It took her a moment to clear the tears from her eyes and focus. Finally looking around she saw it was still night and that the fire still burned, albeit lower than she remembered. Studying the fire she didn't think that more than an hour or perhaps two had passed since she drifted off. \n\nWith a shudder she released the pent up tension in her center and tried to cool her inner fire. The dream had ignited her passions as they always did but this time had not led her to a peak, instead only left her in desperate need of release.\n\nVala struggled with herself for several minutes as she tried to reign in her passions but in trying to control them she only seemed to drive them higher. Finally with something between chagrin and relief she let her hand work its way under her dress towards her aching sex. She groaned to herself when her fingers brushed the tender flesh of her outer sex which was already wet with anticipation. Another groan, this time louder and more wanton as her fingertip brushed her swollen center.\n\nThe noise of her own groaning seemed to shock her brain back into some realization and with a nervous start she looked over to Rae only a couple feet away to make sure that the woman hadn't awoken. To her relief she saw that the buxom woman was lying quietly and breathing deeply. Breathing very deeply...\n\nVala strained her eyes in the darkness and studied the woman lying a few feet away. She caught the slight movement under her cloak which Rae had spread out over herself as a blanket. A small movement at Rae's hips, a slow, steady moving of the cloak as of a hand slowly stroking. Vala sucked in a startled gasp when realized what Rae was doing. She sat up a bit to try and get a better view. After a moment she saw Rae's lips part and the woman gave a small, quiet sigh. As time passed Vala could see that the motions under the cloak were becoming more pronounced and with it, the sounds escaping Rae were becoming louder and more frequent.\n\nBeginning to pant with her own excitement Vala was unable to control herself and started openly stroking her own tender sex as she watched. Fire burned through her veins as she imagined what it would be like to kiss Rae at that moment, to pull the beautiful blonds' dress down and bury her face in that heavy bosom, to suckle her nipples...",
        "Vala bit her lip to contain the moan that welled up in the back of her throat as she imagined what Rae's fabulous breasts must look like. She imagined the full rounded mounds on the woman's chest, pictured the small... no, she corrected herself, the large pink nipples standing out in the cool air. The feel of the skin as she wrapped her lips around them. The taste of the woman's skin... the taste... \n\nVala moaned aloud unable to contain herself. She imagined getting down between Rae's legs, kissing the tender flesh on the inside of her thighs. Feeling the short curly hairs of her mount tickling her nose. The imagined smell of Rae's womanhood filled her nostrils and she shuddered with need. She would lean in, kiss the mount then kiss down further, kiss more deeply, a little lick followed by another. Then more deeply and finally pushing her tongue inside Rae, tasting her, drinking her in... \n\nVala's thoughts were interrupted as a long moan escaped Rae's lips and her head rolled to the side. Vala could see the look of bliss on the face, even though she was still asleep. She wondered what kind of dream the young woman must be having to make her act so wanton even in sleep.\n\nWith anticipation and dread Vala felt that strange feeling of her Mistress's influence creeping up her spine again and she shuddered. It was like a thousand cold fingers all trailing up her naked body and slipping easily under her skin, into her very being. When the feeling reached her head she shivered and made a soft sigh. Now. Vala thought. Now she will take control of me and make me seduce this woman, make me take her with my power, just like Else and Inga. Vala waited breathless, her heart throbbing I her chest. \n\nNothing happened. \n\nConfused, Vala looked at the dreaming woman and wondered what was happening. Why wasn't she being controlled as in the past? Why wasn't she being pushed into having sex with Rae just like she had before with the others? What was her Mistress waiting for?  \n\nShe's waiting for you to decide. Vala's own voice whispered quietly in the back of her mind. She wants to see if you'll decide to use your power on your own this time. To see if you'll allow yourself the pleasure of that woman's delightful body without having to be pushed into it. She wants to see if you're ready to become the person she believes you are destined to be. \n\n\"It's like she's weaning me.\" Vala whispered quietly to herself. A big push the first time with Else. A smaller push with Inga and now with Rae, her Mistress was just sitting there watching, seeing if she would take the young woman on her own.\n\nDecide. The word echoed through her head. \n\nDid she dare?\n\nVala eased back the blanket and moved closer to the still dreaming woman. Stealing up beside her she gently eased the cloak down past the woman's knees, exposing what her hands were doing for all to see, had there been anyone else there besides them. Vala bit her lower lip in anticipation of what she could do with the beautiful blond as she watched with an almost childlike fascination. Rae had pulled her dress up past her waist and her undergarments were pushed down just enough to give a clear view of her sex. As she watched the woman's finger slip easily in and out of her needy sex, Vala savored the heady, strong sent of Rae's arousal along with the small wet noises that accompanied the motions of her fingers.\n\nVala noted distantly that her Mistress's was still faintly with her, she hadn't slipped away completely. Vala was now almost certain that her initial suspicion was correct. The Mistress was watching her, reading her thoughts and seeing what she would do. Or perhaps she just enjoys the show. Vala thought wickedly, a small smirk pulling at the corners of her lips. Almost immediately the implications of that thought registered in her mind and a hot flush of embarrassment surged through her at the very idea of all her wanton acts being watched by someone else. Was she being watched all the time now? \n\nA moan from Rae brought her attention back and with an effort she pushed the distracting and confusing thought from her mind as best she could, at least for the time being. \n\nThe small sighs and moans from Rae were becoming more insistent and Vala felt her own pleasure increasing just by watching her. To Vala, it seemed to her that she could actually feel the fingers invading her own sex as she watched them moving inside Rae. With something approaching reckless abandon, she decided to risk it all and gently untied the bow at the top of Rae's low cut blouse. She eased the material down, exposing the pale smooth flesh with an agonizing slowness. After what seemed like a blissful eternity, Vala had the blouse pulled all the way down exposing the voluptuous mounds of Rae's breasts. Ever so slowly she eased her head down and with the tip of her tongue, traced a wet circle around one of Rae's pale pink nipples. In the light of the dying fire Vala could see large smooth areole shining slightly around the small bump in the middle.\n\nLooking over the beautiful woman lying in bliss before her, Vala hesitated for a moment. Whatever happened from this moment on, was all up to her. She could choose to end this now, go back to her bedroll and go to sleep, leaving Rae to her dreams. Or she could pursue it further and complete the seduction. The choice was now hers alone. \n\nIn her mind she knew that if she truly wanted Rae, the woman couldn't resist her. Whatever power her voice held was still there. She still didn't know what it was but she now knew full well how to use it. All she had to do was whisper in Rae's ear just as she had with Else and Inga. Rae couldn't resist her power, whatever it truly was.\n\nDecide.\n\nIn her mind Vala though back to when the dreams had started. They had frightened her and repulsed her at first, hadn't they? Thinking back on them now she wasn't so sure about it. To be sure she had been frightened, at least at first. The power of those dreams had been incredible. She had no way of knowing how many times she had been driven to ecstasy in her dreams. No idea how many times she had awoken in her bed with the warm pulse of the afterglow still pulsing through her veins. It had all been very frightening to a young woman with almost no sexual experience and certainly no experience with another woman. The power and hunger that had been awoken in her body was not something she had any experience with and it had initially frightened her deeply. Eventually she became accustomed to the intensity of her growing needs and desires and the fear had slipped away, mostly. \n\nBut now looking back, had she really been repulsed by the acts she committed, first in her dreams and later in her waking hours as well? She didn't know. She thought somehow that she should have been repulsed because what she was doing was somehow wrong, at least by the standards of what she had always been taught. But was it wrong? Did she really think that? Did she really feel that? She thought back to all her experiences with her dreams, Else and Inga. Had any of that felt wrong? She didn't think it did. In fact it had felt so completely right, so perfect, as if it was the way it had always been, the way she had always been, or at least the way she should have been. \n\nLying before her, Rae let out a soft cry of pleasure and Vala reveled in her feeling of mastery over the still sleeping woman. She could feel a familiar tension building inside and knew that even without touching herself, her own release was building. Gazing down at the look of rapture on Rae's beautiful face, the face of another woman, all Vala's lingering doubts slipped away. This was what she wanted, this was who Vala Strauss was. \n\nShe decided. \n\nA thrill of euphoria flowed through her with the acceptance of who she really was. Reveling in the sudden feeling of freedom she bent down and wrapped her lips around the small nub, pulling it into her mouth. At the same time she slid her hand down Rae's belly and between her legs. She placed her hand directly over Rae's and slid her own finger into her sex as well.\n\nThe sound of Rae moaning in her sleep was so deeply erotic that Vala was unable to suppress her own moans. Releasing the nipple, Vala moved to whisper in Rae's ear. As before her thick, mesmerizing words flowed, hot and sweet into her new lover's ear, \"You love this Rae. It feels so good, so right.\" Even though Rae was still asleep, Vala somehow knew that her words would still have the same effect. \"This is what you want Rae, what you have always wanted. It's so right, so good.\"\n\nA moment of doubt rippled through Vala as she spoke into Rae's ear. Perhaps she had made peace with herself, but what about what she was doing to the other women she was with? Was it right to be whispering suggestions into their minds? And just how much of what they did with her was because of her whispered suggestions and how much was on their own?\n\nShe thought back to Inga and Else. They certainly didn't seem to mind what she had done to them, in fact they begged her for more. Inga hadn't been able to keep her hands off Vala once she had seduced her that first time. Was that because of what Vala said, or was it just that Vala had opened their minds to something new? She pictured the way Inga had looked into her eyes while they were in the middle of their passions. That intense look of complete acceptance and connection that they had shared. No, Vala thought, that kind of connection couldn't be just from her whispered words, it had to be something deeper. Like whatever had been guiding her along, it merely set her in motion and broke down her reservations so that she could let herself open up to the new experience. \n\nShe wasn't really changing who they were, she was just allowing them to see who they could become. \n\nBeneath her, Rae's head rolled to the side she moaned, \"Yesss...so good...\"\n\nWith a wicked smile, Vala cast her doubts aside and moved her lips back to Rae's nipple. As she suckled she slid a second finger into Rae's soaking wet sex.\n\nThe extra finger in her was apparently enough for Rae and her eyes finally fluttered open in dazed confusion. \"What...?!\" She gasped as she came awake. Immediately the full impact of what her body was experiencing hit her and she let out a long moan of pure bliss. \"Ooohhh... Vala, please... noooo...\"\n\nVala made no answer but pushed Rae's own hand harder and deeper into her sex. The excitement of knowing Rae was now aware of what was happening drove Vala's own excitement wild. Despite the fact that she was hardly even touching her own sex, Vala knew her climax was only moments away. With an effort she pushed her passions down a degree, Rae wasn't quite ready yet and she was determined to make they share this first climax. She pulled hard on the nipple with her tongue and relished the moaning response.\n\n\"Oh, I'm... it... no I can't... I... no... nooo... aaah!\" Her incoherent objections were cut off as her body jerked convulsively in a spasm of ecstasy. \n\n\"Yes you can Rae, you love this.\" Vala whispered thickly in her ear. \"This is what you want. I'm what you want.\" \n\nHer head rolled from side to side as Rae moaned. \"Yesss...you...\" Her entire body went taught as her back arched off the ground. After a moment a long, thin wail escaped her lips. The wail became a cry that cut off suddenly with another sharp spasm of bliss, and another.\n\nWatching hungrily, Vala could resist her need no longer and let herself go over the edge as well. A torrent of rapture erupted inside her and she groaned loudly. With a desperate primal need she again plunged both their fingers deep into Rae's torrid sex, delighting in the shriek of pleasure it drove from the buxom blond. She felt another climax building inside herself and moaned in anticipation.\n\n\"Vala...!\" Rae cried, \"Please... no more! I can't...!\" She panted.\n\n\"Yes, you can.\" Vala said in a voice thick with passion. \"For me... do it!\" She pushed inward again and then bit down on Rae's nipple as pleasure exploded through both of them.\n\nThe last things she remembered as the night took her was the look of rapture reflected in Rae's eyes, the hot, musky smell of their sex and Rae screaming out her name.\n\n* * *\n\n\"Can I ask you something?\" Rae asked.\n\nVala looked over to the young woman who was riding along next to her. She admired again the way the curvaceous young woman sat so easily astride her horse, rolling with the motions it made. Her eyes caught again on the low cut blouse, pulled even lower than usual and she blushed before turning away.\n\nVala had awoken earlier that morning from a sweltering dream of Else's succulent body. Else had just driven her to the very edge of climax when Vala had finally been jolted awake. Her eyes snapped open to find the morning sun gleaming over the distant horizon. The sight that greeted her as she looked down made her gasp in surprise. She was lying back on the blanket with Rae snuggled up next to her. Both of them were completely nude. The first few confused moment that she felt upon her waking were quickly brushed away and the sensations she had been feeling in her dream came crashing back into her. She could feel Rae's strong fingers deep inside her, the firm pull of Rae's lips and tongue around her nipple and the tickle of Rae's long blond hair as it spilled over her naked chest. She groaned at the firm squeeze around her as Rae ground herself into the firm muscles of Vala's thigh. Overwhelmed by the flood of images and sensations, Vala cried out with a sudden, intense release. The sharpness of the unexpected climax surprised her and she let out a shriek of delight. She felt Rae's body constrict as well and the sound of her peak only added to the experience.\n\nThey had spent all of the morning together writhing naked by the embers of the fire, their passions providing more than enough heat to fend off the chill of the morning.\n\nThe sound of a stick snapping under the hoof of one of the horses brought Vala's attention back from her memories of a few hours previous. She nodded and said, \"You may ask.\"\n\n\"Is that what you did with that riverman's daughter?\" Rae asked as she shifted in her saddle a little.\n\nWith a furious blush Vala looked away and only nodded.\n\n\"But how did you do that to me?\" Rae asked, almost to herself. \"That was,\" she paused as if searching for words, \"Amazing. I've never even thought of doing such a thing before and yet you managed to bring me to it so easily. I can't help but think that if you had suggested something like that to me yesterday I would have thought you a heathen or perhaps a mad woman. But once you touched me,\" she paused again. When she continued it was in an almost dreamy way, \"It all just seemed so right, so natural to do.\" She looked Vala square in the eye, \"What power is it that you have over other women? Over...\" she paused and looked away before adding quietly, \"...over me?\"\n\nVala thought she could detect just the faintest hint of fear in the young woman's voice. \"I... I don't know. It just... came upon me somehow. It's... it's like some kind of curse.\"\n\nRae laughed at that, \"Ha! If only I could be cursed like that! That was the most wonderful night I've ever experienced. And you've done that before, yes?\" She looked to Vala expectantly, a strange light glinting in the clear blue depths of her eyes.\n\nVala blushed and looked away. \"Yes.\" \n\n\"Amazing.\" Rae said wistfully. She sighed heavily and a dreamy smile played over her lips. After several moments she looked to Vala and her smile faded. When she spoke this time it was quieter, almost sympathetic. \"But I suppose it's not all like that.\"\n\nVala shook her head, \"I just don't know what it is.\" She looked out over the surrounding countryside before continuing. \"I've finally to come to grips with what I am in a way. I'm... I suppose I just... prefer women. I'm beginning to think that perhaps I always have. Maybe I was just afraid to admit it, even to myself.\" She looked over at Rae, \"But as for the other part, how I...\" she paused, looking for the right word, \"seduced you so easily, I just don't know. It's strange, I just seem to be able to make women want me. To give themselves to me just like you did.\" \n\nRae laughed again at that. \"Well, I for one am glad you made me want you like you did. It was...\" she sighed, \"bliss.\" \n\n\"I just wish I knew what this, this... power that is in me was.\" She looked at Rae, \"It frightens me.\" \n\n\"Perhaps the Baroness will know.\" Rae suggested. \"She is a great Lady, or so I've been told.\" She shrugged and her mouth quirked into mischievous grin, \"Although I suppose that it's not something that you would really talk to just anyone about.\" She became serious again, \"And anyway, I don't really know much about her besides rumors. I've never met her myself of course.\"\n\nVala looked over at her. \"But I thought you delivered lumber to her?\"\n\nRae laughed. \"To her keep yes. But I only met her servants. A great woman like her would never deal with something so mundane as wood or someone so ordinary like me. I deal mostly with the head of the house staff.\"\n\nVala thought about that for a moment before saying, \"Then how do you know she will help me?\"\n\nRae shrugged, \"As I said yesterday, I don't. I only said perhaps.\"\n\nThey rode on through the day but due to their late start, didn't make it to the keep by sundown as Rae had said they should. Or perhaps she had been deliberately slow on purpose. As soon as they made camp that night and the fire was burning well, Rae brazenly embraced Vala. Not even taking time for dinner they were soon nude and writhing in each other's arms, their moans of pleasure filling the still air deep into the night.\n\n* * *\n\n\"My darling Rae, it is so good to see you again.\" Said the plump faced older woman as they were shown into the keeps vast kitchen.\n\nVala gaped around at the chaotic room. The huge cook stoves lining the walls. Massive iron cauldrons hanging over fire pits filled with roaring flames. Crowded countertops that spanned the room from end to end, and around all of it a dozen cooks and their helpers moving about frantically each working at their own seeming separate but somehow connected tasks.\n\nIt was just one more wonder to ad to a morning of wonders for Vala.\n\nA few hours earlier, just after dawn they had finally caught sight of the keep in the distance and Vala had felt her breath catch in her throat. It was a massive and intimidating yet beautiful structure built onto the edge of a low peak. Its spires and towers reached gracefully up to the sky as the morning sun glinting off a thousand separate windows. \n\nThe narrow mountain road they were on joined a much larger road paved with stones that lead up to the keep off to the east. Looking west back down the main road Vala saw a town spread out along the banks of the river in the near distance. Thin smoke rose from hundreds of chimneys, slowly drifting in the still morning air. It was easily the largest town Vala had ever seen. \n\nFollowing behind Rae, Vala surveyed the land as they rode. Getting closer, Vala could now see the main road passed right in front of the keep. With growing amazement, Vala realized that it was even larger than she had thought. The front gate was easily wide enough for three wagons to pass through side by side. Vala expected them to turn and enter through the grand gateway but Rae kept moving past. Answering Vala's unspoken question she said, \"The servant's entrance is around the east side.\" \n\nThe servant's entrance was a much smaller gateway just wide enough for a single wagon to get through. The guards at the gate apparently all knew Rae because they smiled and greeted her by name. One of them, and older man with a neatly trimmed grey beard came up and looked Vala and her over for a moment before tipping his head questioningly as he planted the butt of his pike on the ground. \"Good to see you Rae, but I wasn't expecting you for another few weeks or so. You just made a delivery, what... last week? What brings you again so soon?\" He paused, \"And where is your wagon?\"",
        "Rae smiled, \"No delivery today Peter. I'm actually here for another reason. My pretty young friend here is in need of work and a place to live for a while. I thought that perhaps there might be something available for her here.\"\n\nVala blushed a little at Rae's description of her but even more so at the looks she was getting from a couple of the guards. One of them leaned over and whispered something to his companion and they both chuckled while looking at Vala and Rae. Vala raised her chin and tried her best to ignore the men. \n\n\"Ah. Well if it's work you be wanting you'd best see Miss Bernadette. I expect that she's in the kitchen.\" He gestured vaguely off to the left with the long pike.\n\n\"Yes, that's what I figured. Thank you, Peter.\" She looked to Vala, \"Come on.\"\n\nA hiss of something being dropped into hot oil brought Vala's attention back to the present and she looked to the older woman again, Miss Bernadette, as the guard had called her.\n\nRae said, \"It's good to see you as well Bernadette. I don't make it up here nearly enough.\"\n\n\"No, you don't my child.\" She cocked her head slightly, \"But we weren't expecting you for weeks.\" Bernadette said, letting the implied question hang.\n\n\"My friend here is in need of work and a place to live till springtime, maybe longer. The lumber camp is too rough a place for such a beautiful young woman so I thought you may be able to help her.\" Rae pulled Vala closer. \"Vala, this is Miss Bernadette, she is the head of the servant staff here at the keep.\"\n\n\"A pleasure to meet you Miss Bernadette.\" Vala said with a small, clumsy curtsey.\n\nBernadette seemed to give Vala a brief but clearly expert visual appraisal before saying, \"Yes, I'm sure we could find a spot for such a fine young woman. If Rae felt strongly enough about you to bring you all the way up here then I'm sure you'll do fine.\"\n\nThat afternoon Rae had finally departed for the lumber camp, leaving Vala alone in her new home. They had managed to find a few moments alone out of sight of all to share a long, deeply passionate kiss. \"I'll be back in a month or so with one of my usual deliveries.\" She had said as they parted. \"Don't forget about me.\"\n\nVala was surprised to see tears welling in the corners of Rae's eyes. With a forced a smile she said softly, \"I won't. And... thank you, for everything.\"\n\n* * *\n\nThe next few days flew past as Vala spent the majority of her time with Miss Bernadette learning all about the people, layout and running of the vast manor. The sheer size and complexity of the place astounded Vala at first. She was also surprised at the amount of people that were required to maintain everything. By the end of the first day she figured that there could easily be three or four dozen people living and working in the vast keep. By the second day she adjusted that number significantly upwards. There may have been close to a hundred of people living and working in the huge, sprawling complex, maybe even more.\n\nAt the end of the second day Miss Bernadette seemed to be very pleased with how quickly Vala was coming along. \"My but you are a quick study. I dare say that you already know more about the workings of this place than most of these louts who have lived here their whole lives.\" She paused to think for a moment then said, \"I should think a young woman with your obvious talents would be wasted cleaning floors and stirring soup pots all day. Come with me, I think there is a place that you will do quite well.\"\n\nThey set off though the vast stone corridors and up several of the back staircases that were for the servants to use. By her knowledge of the castle that she had gained over the last few days Vala realized that they were nearing the noble chambers on the upper levels. They exited into a corridor lined with rich tapestries and deep, luxurious carpets. Exquisite brass lamps hung on the walls and gave off a warm glow without the thick smoke that the torches of the lower levels produced. Bernadette set off down the corridor and came to a stop before a set of high, narrow doors that were held together with elaborate iron bands. She knocked on the door and waited.\n\nAfter a minute the door opened silently and a young girl dressed in the uniform of a chambermaid peered out. \"Yes? Oh, Miss Bernadette. You wish to see the Steward?\"\n\n\"Yes, I need to speak with her if she is available.\"\n\nThe girl nodded. \"I'll check. One moment.\" She retreated into the chamber closing the door behind her. After several minutes the door reopened and the girl said, \"The Steward will see you now.\" She pulled the door back all the way and motioned them inside.\n\nVala tried to keep her eyes from wandering but the room she walked into took her breath away. The vast high ceiling chamber was opulently furnished with exotic tapestries and thick, luxurious carpets underfoot all done in beautiful deep blue and gold. Dozens of candles burned in elaborate candelabras giving the room a comfortable, warm glow. One wall was almost entirely taken up with a vast fireplace that was made of huge white stones and decorated in gold.\n\nMiss Bernadette walked straight in through the room and into another smaller room that was dominated by a huge wooden desk. Behind the desk sat a woman with her head down as if she were reading one of the papers on before her. In her hand was a writing quill which she tapped rhythmically on the paper before her as if lost in thought.\n\nBernadette stopped before the desk and waited silently for the woman, Vala assumed it was the Steward, to acknowledge them. After several long moments the Steward scribbled something down onto the paper, placed the quill into an ink bottle, looked up and smiled.\n\n\"Bernadette, how nice to see you. You don't come up here nearly enough anymore.\" The Steward said in a voice that was rich and throaty. Vala thought the woman to probably be about fifty years old. She was beautiful with long, curly, chestnut colored hair, pale skin and hazel eyes. She wore an expensive looking, sapphire blue gown that came up high on her slender neck. \n\n\"I'm afraid my household duties keep me far too busy for social visits milady. Making sure that the Baroness's house is all in order takes every second of my day and then some.\" Bernadette said with a small curtsy.\n\nThe Steward smiled wanly, \"Oh believe me I know. I spend most of my days here signing papers and such. If anyone ever thought about how much work was actually required to keep an estate like this going I'm convinced they would never build another.\" She chuckled then said, \"So is this the girl you mentioned to me?\"\n\n\"Yes milady.\" She motioned for Vala to come forward. \"My Lady, this is Vala Strauss, a young girl who has just come to work for us and if I'm any judge of character, a very uncommon girl. She's smart as whip, a very quick study and a hard worker if I'm any judge.\"\n\n\"I happen to know you're a fine judge of character if there ever was one Bernadette.\" She eyed Vala for a moment. \"Can you read child?\" She finally asked.\n\n\"A little my Lady.\"\n\n\"And your numbers?\"\n\nVala nodded, \"Yes, I know my numbers.\" She paused then added, \"Well, some.\"\n\nThe Steward looked at her for a long time. So long that Vala began to get uncomfortable and stole a sidelong glance at Bernadette but the older woman only waited patiently.\n\n\"I'll trust your judgment on this Bernadette, yes, I believe she'll do nicely.\" The Steward finally said with a firm nod. \"Bernadette, you can find her some suitable new quarters around here I suppose. Ones that will reflect her new station.\" She again looked Vala up and down and wrinkled her nose a little in apparent distaste. She looked back to Bernadette with a raised eyebrow, \"And some new clothes.\" She looked back to Vala and with a smile she said, \"First thing tomorrow, I'll expect to see you here to begin your duties.\"\n\nVala looked at her for a moment before having to ask, \"Um, what duties would that be my Lady?\"\n\nThe Steward glanced at Bernadette. \"You didn't tell her?\"\n\nBernadette shrugged a little self consciously, \"I did not wish to get her hopes up in case you rejected her.\"\n\n\"Ah, yes, probably wise.\" She turned back to Vala. \"You shall to be my new assistant, my dear.\"\n\n* * *"
    ],
    "authorname": "china-doll",
    "tags": [
        "lesbian",
        "mind control",
        "all girl",
        "vampire"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/forever-again-ch-04"
}