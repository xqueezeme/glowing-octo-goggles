{
    "title": "Older Women",
    "pages": [
        "All involved in portrayed sexual activity are 18 or over. The old country western song, \"older women make beautiful lovers\" comes to life in the following tale.\n\n*\n\nThis week began like any other week, I would leave the warehouse at four thirty in the morning and begin deliveries to grocery stores and restaurants throughout the area. By the time I reached Grove City, around seven thirty, it was time for breakfast. From time to time I would have to cover someone else's route and not stop at Cheryl's Diner, but not very often. In the two plus years I'd been stopping I was generally waited on by Francine or Michelle, not today, an older lady was asking if I wanted coffee before ordering.\n\n\"Where are Francine and Michelle? They have the day off?\"\n\n\"Well sir, neither work here any longer, Friday was their last day, Francine is moving to Daytona Beach to be closer to her kids and Michelle landed a job in Cuba City at a large distribution warehouse. I usually work from three until seven evenings, now I'm covering early mornings. So ... coffee, or would you like to look at the menu?\"\n\n\"Nope, won't need a menu. I'll have the haystack without onions and a glass of milk with the meal, honey wheat toast.\"\n\n\"Sounds like you've eaten here before.\"<br >\n\n\"Nearly every Monday through Friday for over two years. I noticed there's no strawberry jam, can you remedy that?\"\n\nShe offered a soft smile along with, \"Certainly, anything I can do to help.\"\n\nHaving lived in the south the past several years I was used to the normal hon, shug, babe, baby or sweetie from southern waitresses, this lady was southern, but she was different. I smiled and tipped my hat as I watched her walk away. She was good looking for an older broad, quite conservative in her dress but attractive in her own right, most of the waitresses would be in jeans and a somewhat revealing top. Apparently cleavage increases the size of the tip.\n\nHer nametag said Elma, and unlike the other gals she was dressed like waitresses used to, a light blue cotton dress with white piping around the sleeves and neckline, a neckline that was open but not enough to look inside. The one unusual thing I did notice was that the hem of her dress was probably three inches above her knees and that she wore stockings. I estimated she must be in her late fifties, maybe sixty. She had a slender figure, sort of average I guess, a cute hinder that twitched a little as she walked away, or did she do that for my benefit. Her chest wasn't big but then it wasn't small either, what I'm trying to say is she was put together nicely.\n\nUnlike so many older ladies it was apparent she had let her hair color naturally, it was mostly a silverish grey with a smattering of brown every so often. It was long by most standards, well over her shoulders and while not as thick as a young woman's hair it was still full. I was surprised she wasn't wearing glasses, most older people do, maybe she used contacts.\n\nWaiting for my food I momentarily drifted back to how I'd come to live in the south. I had ended up moving after my long-time life companion decided she was leaving me for a much younger model. Though we'd been together thirteen years Sherry and I had never married, I had proposed more than once, each time she said no but wanted to stay together. In my eyes we were married whether we had a certificate or not. Not so in hers I guess. For my thirty third birthday she took me out for a lavish steak dinner and introduced me to her new lover wondering if wanted to be part of a polyamorous relationship.\n\nWhen I got out of jail forty-five days later I decided to move. Not across town, across country. Since I'd done no permanent harm to her new lover the DA showed mercy and charged me with a misdemeanor instead of a felony, which meant I could keep my CDL. I happily left the ice and snow of North Dakota, trading it for the heat and humidity of Northwest Georgia. Once I got past the culture shock and learned how to decipher Southern ese, (my God these people talk fast) I felt good about the move. Yes, it was hot and sticky four to five months a year, but compared to ice, snow, and temps at or below freezing five to six months a year, I figured I had the better deal.\n\nI'd been driving big rigs all my adult life with a perfect driving record, finding work wasn't an issue, I had lined up the position I presently occupied prior to ever moving. I was tired of the long hauls and decided running a steady daily route would be more in line with what I wanted life to be. I lived in an apartment complex complete with a pool, laundry facility, a fitness/workout room, a hot tub, and more lonely housewives than you can shake a stick at. Then there were the divorcee's, the lonely heart singles, the downright homely, and last, but not least, the \"I hate all men\" club.\n\nAt thirty-four I must have been considered prime material because I had an abundance of women, married and otherwise, who let it be known they were ready to be wooed and screwed by yours truly. I have to admit I did avail myself of said provisions more than once, okay, okay, sometimes more than once a week. I stayed away from the married one's as much as possible, the key words there being \"as much as possible\". In the two years and seven months I'd been living there I'd only bedded three housewives. Two of which had abusive husbands and a third whose husband never grew up, he spent most of his free time with his high school buddies, all in their late twenties.\n\nI'd met all three at the laundry facility, the first two were obvious, I showed them some kindness, they in turn wanted to be wanted without being abused. The second one of those nearly landed my ass back in jail, thankfully her soon to be ex was too drunk to remember who'd kicked the shit out of him. Within a week of his ass whooping she had vanished, her girlfriend said she'd gone back to Iowa and was filing for divorce. Smart girl, no one should have to put up with that shit.\n\nThe third was lonely, plain and simple, feeling neglected, unwanted, undesirable, and had basically accepted she was destined for a shitty life with an idiot husband. It started out quite innocent, we talked, she shared dreams and aspirations, we learned of one another's past, it got to be a regular thing every Thursday night. That was the slowest night of the week at the laundry for some reason, it was usually Emily and me along with one or two others.\n\nTo keep my horns trimmed I'd been banging two divorcees across the complex on occasion, I didn't hide it, but it wasn't common knowledge either. Emily and I were near being done with our laundry one Thursday, folding clothes and putting them in a basket. She was generally very careful when she folded her underwear and put away her bras, she usually had her back turned to me. This evening was different, as she folded several pair of small lacy panties facing me I was without the will power to look away.\n\n\"Do you like those Paul?\"\n\nFeeling like a kid caught with his hand in the cookie jar I quickly looked down in embarrassment.\n\n\"It's okay Paul, it really is. I bought them thinking he might stay home and be with me instead of running with his high school friends. It didn't work, I even bought a slinky see through nightie. You know what the idiot said when I walked down the hall wearing nothing under it as he watched TV? Get some clothes on, you'll be cold in that get up.\"\n\nI couldn't wrap my head around such stupidity, had she done that in my home I'd have jumped her bones and rode her hard all night. My mouth must have been hanging open, smiling she put her finger under my chin and lifted it.\n\n\"What would you do with a woman like me Paul? Be honest.\"\n\nI thought, what the hell, I might get my face slapped, but I was going to tell her exactly what I was thinking.\n\n\"I would have jumped off that couch, put you over my shoulder and slapped your ass a few times as I carried you to the bedroom, I would have tossed her your sexy ass onto the bed and stripped, my face would have been between your legs so fast it would take your breath away. After you came on my face a few times I would have slid up your body and driven my cock inside so deep you'd choke, while I pumped you I'd be sucking your tits until you screamed as I filled your little kitty with sperm. Is that clear enough?\"\n\nHer face was red as a fire hydrant, good thing there were no dogs around. Her breathing was shallow and staggered, almost as if she were hyperventilating. Putting her hand to her chest she looked in my face.\n\n\"Really? You would do all that? Oh my, I've been missing out. Listen, I'm not a slut, but would you do that to me? Please? He'll be gone fishing all weekend.\"\n\nI agreed telling her to come in the patio door to the back so as not to give the gossips anymore ammunition than they already possessed. I asked if she'd like to go out somewhere, she blushed a little.\n\n\"No, I want you to do with me what you said. Should I bring my see-through nightie along? Paul ... I don't shave. Will that be an issue?\"\n\n\"It won't be for me, I like a woman who looks like a woman. And yes, absolutely bring that nightie and some of those sexy panties, we won't be naked the entire weekend.\"\n\nShe had a surprised look on her face, \"Wait, you want me to stay the weekend? Are you sure?\"\n\n\"I am if you are Em, I'd love to ravish your body all weekend. That way the smell of sex can be in my apartment and not something you have to explain when your worthless husband gets home. We'll quit early enough so you can get home to shower, douche and change.\"\n\nAnother surprised look, \"Douche? I haven't done that in ages. Why?\"\n\n\"Because a man knows if his wife's pussy is full of cum, and if he hasn't been with her he knows it's somebody else's cum, if he happens to get home horny you'll be safe.\"\n\nMore blushing, \"Pussy, he never calls it my pussy, it's always a vagina. I like pussy better, it's not so clinical sounding. What time Friday?\"\n\n\"I'm home by three at the latest, any time after that. I'll cook supper, you bring the ice cream.\"\n\nWe were the only ones present during our rather revealing conversation, she stood, grabbed her basket, leaned down to kiss me and whispered. \"Tomorrow at four, leave the patio doors unlocked. I'm all tingly inside, I can hardly wait.\"\n\nI drove Friday's route from habit, my mind was anywhere but on the job, I couldn't get her out of my head. How the hell could any guy ignore a beautiful young thing like that? She never dressed provocatively but it was quite apparent she was well endowed in all aspects of her sexuality. I intended to let that sexuality loose over the weekend, she'd find out what it was like to have her body worshipped and adored. I knew from earlier conversations that she was on the pill, I'd recently had myself tested not always knowing where I was dipping my wick, I was clean as a whistle. It would be a weekend of bareback, making love and knock down dragged out fucking if she could handle it.\n\nShe strode through my patio door at exactly four, carting an overnight bag and a smaller bag with what looked like clothes. In a few hours I would find out it was lingerie she'd purchased that he never liked and she was going to wear it for me. I'd made cobb salads with grilled chicken breast and a cheesecake for dessert. As I was cleaning the kitchen she asked if I wanted her to shower.\n\n\"No, I want to smell the sex oozing from your body when we lay down, don't wash that away.\"\n\nSmiling she excused herself heading toward the bedroom. As I was starting the dishwasher I looked to see her standing in the doorway wearing nothing but the sheer nightie, no panties, no bra, nothing but her birthday suit beneath it. I could do nothing but stare, her breasts were great, allow me to recant that statement, her breasts were wonderful. They stood straight and proud the way a young woman's tend to do, perfectly cone shaped with tight nipples pushing against the fabric. Looking down I saw a thick V shaped patch of dark brown curls matching the hair color on her head.\n\nBy now the only head I was thinking with was the one on the end of my cock, I did what I told her I would do. I walked to her, reached around grabbing her ass while pulling her into me as we kissed, I picked her up by her butt cheeks and threw her over my shoulder. Walking down the hall I smacked her ass not hard enough to hurt but hard enough to make her squeal.\n\n\"You're a naughty girl Emily, you don't have panties on, I might have to punish you with my rod of correction.\"\n\nHer response completely caught me off guard, \"Please don't hurt me daddy. I'll do anything you want daddy, you can have my pussy.\"\n\nAh, she wanted to role play, I can do that. I smacked her a second time as we walked through the door, lifting her off my shoulder I tossed her onto the bed. I was stripping as she was giggling and scooting to the middle. I grabbed an ankle and pulled her back to me, with her legs hanging over the edge at her knees I opened her legs, pushed them alongside her body and dove in face first. Her smell was erotic and seductive, not offensive, but strong, her pussy was coated with juices before my lips ever touched her pouting thick labia.\n\nHer hands were behind her knees holding herself open, as I felt her body begin to tense she let go of her legs and wove her fingers into my hair. Over and over she whispered \"yes\" until I felt her body tremble, she wasn't loud or throwing herself around, pushing her pussy up into my face and breathing heavy was the whole of it. I licked until the second one hit, that must have stirred a primal feeling inside, she uttered out loud, \"Oh fuck, oh fuck, oh fuck\" this time her body convulsed as she pushed upward off the bed. I didn't slow down until her butt dropped back to the bed and she pushed me away.\n\nShe lay there silent for what seemed an eternity, it was well over three minutes before she stirred, and then only to straighten her body. Reaching her arms to me I moved up the bed and lay with her. We didn't speak, she wanted to kiss, as we broke she licked my lips.\n\n\"I've never tasted a pussy before, am I how all pussies taste? Paul how do you know to do all those things, Jeff has eaten me and I've cum, but never like this. I came so hard I couldn't tell if I was in a dream or having an out of body experience. You have a nice big cock, I can only imagine how it's going to make me feel. I want you to teach me everything you can this weekend.\"\n\n\"Not all pussies are as sweet as yours Em, you have a perfect blend of honey like nectar and arousal, it made my dick so hard I hurt.\"\n\n\"I'm not very good at it but I can give you a blow job.\"\n\nI laughed, \"Honey, the only place my cum is destined this weekend is in your delicious little pussy. You're on the pill and we're both clean, I intend to fill you so full of cum you slosh when you walk.\"\n\nI sensed she was near tears, \"I wish I was with you and not Jeff, I want a baby so bad, but not if he's going to be like he is. If I wasn't married to him you could put a baby in me. I would love that.\"\n\nI had a finger inside the tiny opening to her vagina, moving it in and out slowly, the juices building rapidly, it was time to put a load inside her sweet cunny.\n\n\"It's time we get down to business, are you ready? We'll start missionary but I doubt we'll finish that way.\"\n\nAs I moved on the bed her answer was to spread her legs and bend them at the knee, a perfect saddle for me to lie in, the thin trail of hair along the labia were like guiding lights drawing my dick to her opening. As the tip of my cock touched her sopping wet pussy she put her hands on my ass and pulled me in, I'm not a huge man by any means, but the six and a half I do possess has never let me down. As I entered she commented.\n\n\"Oooo, you're cut. Jerry isn't, I think I like this better, it certainly opens me wider.\"\n\nAbout halfway to bottoming out she stopped pulling me in. In not much more than a whisper she talked to me.\n\n\"You're bigger than Jerry, I need a minute to relax and get used to how thick you are. I feel like you're gonna split me in two, but I like it and I know it'll feel good once I can take all of it.\"\n\nWhen she raised her hips slightly and wiggled to accept more of me I finished the process of burying my meat deep inside her cunt, three strokes later when my balls hit her as she moaned and whispered \"more\".\n\nIt was slow and gentle, all my plans for not cumming in her missionary went out the window when she started to go off begging me to cum inside her. My balls erupted and my cock launched volley after volley of thick white seed deep within her. I could feel it hit the cervix, she could as well, I heard her say again and again, \"I can feel it\".\n\nWhen I had softened to the point that I was dropping out she whined, \"No, not yet I want more.\"\n\nAn hour and twenty minutes later I had her on her tummy with a thick rolled cushion type pillow under her abdomen, her ass was pointed up and her pussy was protruding beyond her thighs as though it was begging to be fucked. Hovering over her I swiped my dick up and down over her labia then positioned the head at her opening and pushed forward, her back arched as she pushed back and let out a long soft moan when my pelvis touched her ass.\n\n\"This is so good Paul, it's deep, my pussy is tingling all over. I've never had it like this before, put your cum deep inside me.\"\n\nI never could hold out very long in that position, there was just too much stimulation, I surprised myself by holding out over fifteen minutes before I arched my back and slammed into her hungry little cunt one last time. It felt like the end of my dick was going to explode, I was cumming so hard it made my nuts hurt, she in turn was pushing back and squealing as her ass shook and her hips humped. She kept yelling.\n\n\"Ohh, ohh, ohh. My god it's so deep, I can feel you Paul, I can feel you.\"\n\nAt four something the next morning she was on hands and knees as I plowed into her from behind, my hands grasping her hips, our skin making slapping noises as we collided, her knees were spread, her back was arched, she wanted every fraction of an inch I could provide. I thought I would last longer than the twenty minutes I did having cum only hours before, but that tight cunt was sucking the life out of me, there would be no holding back, I let loose with a loud bellow.\n\nSaturday we woke mid-morning, I made us breakfast, afterward we lounged about until early afternoon when she excused herself headed to the bedroom. Ten minutes later she stood at the end of the hall in a white lacy shelf bra, nipples exposed above the half cups, and a pair of white bikini panties with the words \"fuck me\" in bold red letters across the front. My cock was instantly hard, we'd been in just underwear so there was no hiding it. I uttered half under my breath.\n\n\"Holy shit girl, you look fantastic.\"\n\n\"Jerry didn't like it, he said I looked slutty.\"\n\nI chuckled, \"He's a fool. Get your slutty little ass over here girl, I'm gonna dine at the wye again.\"\n\nStanding in front of me she put her hands on mine to keep me from pulling the panties down.\n\n\"Paul, I want to try something I've never done. My closest friend at work says she sits on her husband's face and he eats her. Have you ever done that?\"\n\n\"Let me slide those panties down and I'll show you. No, don't take the bra off, leave them just as they are.\"\n\nI pulled her panties off and lay back on the couch, she squatted over my face and lowered until her pussy met my mouth. About seven minutes later she was screaming and begging to be fucked, I had taken off the bra and had ahold of her tits as she exploded, the nipples were hard and distended, I had to have them in my mouth. Laying with a nipple in my mouth she said softly.\n\n\"I need you again, I need you inside me.\"\n",
        "\"Then slide down my body and stick my cock in your pussy.\"\n\n\"I've never done it like that before. What should I do after you're in me?\"\n\nI laughed softly, \"Oh, you'll know once you're impaled on my cock.\"\n\nAnd boy howdy did she ever, she stroked up and down, back and forth, she ground her clit against my pubic bone and when the time came for a climax to flood our bodies she was slamming her body up and down with great fervor. My nether region was flooded with girl cream mixed with my own, we were both a sloppy mess, after a quick shower we were under the cover for a nap. I called for Chinese delivery just after six, by seven she had excused herself once more, this time appearing in a body stocking with her breasts hanging out and a large opening for her cunt or ass to be fucked.\n\nFor whatever reason there was a lot of foreplay before we made love, it was an hour later that we tripped the light fandango one more time. As we lay awake before sleep overtook us she asked me a very poignant question.\n\n\"Have you ever done anal Paul?\"\n\nWhich way to answer this, do I lie and tell her no, or do I fess up and let her know I've been buried balls deep in more than one asshole. It wasn't going to happen between us, not with only a matter of hours before our sex-fest was over.\n\n\"As a matter of fact, I have. Why do you ask?\"\n\n\"I don't know, you hear about things but never do them. I just wondered, does it hurt?\"\n\n\"It does if it isn't done right. It takes a lot of preparation the first time Em, it usually isn't something that just happens unless the guy is small and it slips in. Are you wanting to try?\"\n\nShe sighed, \"I don't think so, I just wondered. I need to sleep, can we do it again in the morning before I have to leave?\"\n\n\"Yes baby, we can. Have you ever done it with your ankles on his shoulders?\" She shook her head. \"Then that's what we'll do in the morning, think about that for a minute, nothing to get in the way of fucking you senseless. Your pussy will be wide open.\"\n\nShe repeated, \"Wide open, that sounds good.\"\n\nShe was savvy enough to give me a good fuck, but her naivety was also a turn on. When she went home she would never settle for average again, I felt badly for dipshit, he won't know what hit him. When we woke she didn't want breakfast, she wanted me to do her ankles on shoulder. I once again managed to go longer than I thought I would, I looked at the clock when we began and eighteen minutes later I deposited my last load of the weekend inside her very appreciative young body. Her body didn't slosh when she walked, but she was definitely full of cum.\n\nIt was two weeks later I saw her in the laundry, she had a new awareness about her, one of seductive confidence. As we were folding clothes she looked at me and smiled.\n\n\"Leave the patio doors open, I'm coming over as soon as I drop off the basket. I want you one last time.\"\n\nI was confused, \"One last time, what does that mean?\"\n\n\"I'm going back to Santa Fe, Jerry will be served tomorrow as I'm pulling out of town. He called me a slut for wanting to try the things you taught me, so ... fuck him. Or should I say I'm gonna fuck you? This will be our last time Paul, thank you for opening my eyes.\"\n\nI thought it might be a lovey dovey make out session, silly me, she wanted to fuck and fuck hard. We finished with me behind pounding for all I was worth. It was a kiss at the door and, \"I'll never forget you, thanks Paul\".\n\nAs the haystack was placed before me I was brought back to the present. When Elma asked if I needed anything else I shook my head and proceeded to have breakfast. It became a common occurrence for Elma to wait on me. When they had moved her to mornings they'd also hired a young thing to work alongside her, she was nineteen at the most, liked to swish her ass around, jiggle her oversized tits and flirt.\n\nThe morning she served me and asked what sort of tip I had for her while looking at my crotch I knew exactly where she stood, knowing instinctively it wasn't where I wanted to be. I like pussy, but not what she was offering. As I finished Elma began to bus the table, she looked at me and spoke softly.\n\n\"She's awfully brassy, she'll find herself in trouble if she isn't careful.\"\n\nI asked, \"trouble\"?\n\nShe said, \"You know\" as she made a bubble type movement over her tummy, ah, knocked up, now I got it.\n\nOver the next few months we got to know one another fairly well, if it were slow she would sit and have a coffee while I ate. She had a slight accent, when I inquired she told me it was Swiss, she had been working on an Army base in Germany, met and married a young GI returning to the states with him in the early 80's. What she thought was a dream romance quickly fell apart when she discovered he had three children with other girls from before, she was six months pregnant when he announced he was going to divorce and marry one of the others.\n\nConsidering she had worked for the government prior she was able to land a job with the state, one she had retired from fifteen months ago and worked part time at the diner because she was bored. She raised her son all alone, he was now a major in the Air Force flying helicopters, beyond that she didn't know much more of what he did. He was presently stationed in Guam, she had plans to visit him in another six months.\n\nI noticed as time went on that we'd become very comfortable with one another, It probably bordered on flirting at times, something we either missed or chose to overlook purposely. She would laugh and touch my hand, or giggle schoolgirl like and blush, other times I would make comments about something or another to flatter her or remark about something new. When she changed her hairstyle slightly I commented that I liked it, she just smiled and her face flushed with redness, oh my gosh, she was blushing.\n\nChatting with her over breakfast one morning I began to think about the situation. I was weeks away from thirty-six and found myself being attracted to an older woman, and I don't mean a few years, probably close to double my age. I was thinking about her a lot, not in a sexual horny way, although she still had what it takes to turn a head or two. I initially thought of something more along the lines of someone fun to be around, someone to have a meaningful conversation with.\n\nI was entertaining thoughts of asking her to dinner but would always override those with the thought of her laughing at me and telling me to find someone my own age. As I pulled into the parking lot Friday morning I decided I would dig deep and find the courage to ask her out to dinner Saturday night. She was only seventeen miles from where I lived, which in my world was no more than a hop, skip, and jump. I changed my order to French toast which made her stop and smile.\n\n\"What's this all about Paul? I can't recall the last time you didn't order the haystack.\"\n\n\"I don't know, feeling adventurous I suppose. Speaking of adventurous, how would you like to have dinner with me tomorrow night? We could go to the supper club on highway 13.\"\n\nShe laughed, \"You don't want to be hanging around with an old woman like me, but thanks. I'm flattered, be right back with your order.\"\n\nI was finishing up when she brought the check, sitting across from me she had a serious look on her face.\n\n\"You were serious weren't you.\" I nodded. \"Surly there are women more your age for a dinner date. That's what you were implying wasn't it, a dinner date?\"\n\n\"That's exactly what I was implying Elma, and don't call me Shirley.\" She was laughing. \"Is there a reason beyond me being younger that you can't or won't go?\"\n\nHer fingers strummed the table as she looked around the room, finally turning to me she spoke.\n\n\"None at all. I have to say I'm flattered, truly flattered. If you have no compunctions about going out to dinner with an old broad like me, I have none about being seen with a young handsome man. What time?\"\n\nAfter getting her address and phone number I told her I'd pick her up at six, and that I was going to dress in more than jeans and a shirt. I wore casual dress slacks, a dress shirt without a tie and a light sport coat, she had on a lovely floral print dress along with a shoulder wrap. It was obvious she'd spent extra time doing her hair and makeup which she seldom wore at the diner. I commented on how lovely she looked, she simply took my extended elbow and said softly, \"Thank you.\"\n\nI've always been a door opening kind of guy when it came to ladies, it was something my dad had done and it's something I always do. She commented on my chivalry and good manners once we were on our way. Dinner was excellent along with the conversation that followed, it had been an hour since we sat down, noticing there were others waiting to be seated we decided to go. She asked if I had long term plans, I told her I was quite satisfied doing what I was doing, the pay was decent, I had good benefits and it was basically a no stress job.\n\nShe turned to me, \"Think you'll ever marry, or did the longtime girlfriend leaving destroy that forever?\"\n\nI had to think a moment, \"I think if I met the right woman I'd marry, but who wants to get attached to a guy in his thirties? A lot of women think that's too old to start a family.\"\n\n\"Oh, pish posh, whoever said that is as ignorant as the day is long. Lots of time to be a daddy at your age. I'll tell you this Paul, if I was thirty years younger I wouldn't mind having your shoes under my bed. But, that boat sailed a long while ago.\"\n\nI looked at her with a quizzical look on my face, \"Why would you say that? You're attractive and well put together, I think you sell yourself short Elma. Do you mind if I ask how old you are?\"\n\nShe laughed a little looking out the window into the darkness, then turned to me, \"How old do you think I am Paul?\"\n\n\"I'm going out on a limb here so don't be upset with me, fifty-nine, maybe sixty.\"\n\nShe belly laughed and then put her hand on mine, \"Oh you sweet, sweet man. I'll turn sixty-four in three weeks, thank you for seeing me as younger, you sure know how to sweet talk a gal.\"\n\nWhen she leaned to put her hand on mine I noticed her dress had ridden up slightly, the far side was high enough I could see the clip from the strap on what I thought was her garter belt. As she turned back to look out the windshield she quickly adjusted her dress pulling it down while looking at me, I'd managed to look away before she caught me, from the corner of my eye I saw her smile and mumble something to herself. She invited me in for a coffee and piece of cake before leaving for home, I'd grown up sitting around the kitchen table, sitting in the kitchen with her seemed the most natural thing.\n\nAs I was walking to the door she reached for my hand and stopped me, \"Thank you for a wonderful evening, I haven't been on a date for two decades or more. You've been a real gentle man, thank you.\"\n\nI told her I'd see her Monday morning and went my way. My mind didn't wander to the perverse, I had respect for her and we'd had fun, but I wasn't fantasizing about having her in bed. I didn't even know if she did such things anymore, some people stop at an early age. Considering she hadn't been with a man in twenty years I wouldn't be surprised if she were no longer interested in such activity. I had to cover another guy's route on Wednesday and Thursday so didn't have time to stop for breakfast, Friday morning Elma smiled as I walked in.\n\n\"Hey stranger, where you been?\"\n\nI explained my situation, told her I'd have the usual and made my way to relieve the pressure on my bladder. A cup of black coffee was waiting for me as I sat down, a few minutes later Elma sat a plate in front of me, it was busy enough that she didn't have time to sit until a few minutes before I was due to leave. Handing me the check I motioned for her to sit, which she did.\n\nI grinned, \"So, where are we going tomorrow night?\"\n\nShe smiled, \"Going? I wasn't aware we were going anywhere. Did you have something in mind?\"\n\n\"There's a new restaurant in Overland, I've been delivering to them for more than a month, from what I'm delivering they must do a pretty good business. I talked with one of the owners this morning, he said Saturday is impossible without a reservation, so I booked one for two at seven tomorrow evening. Wanna go?\"\n\nShe chuckled, \"Of course I want to go you goof ball. What girl could turn down an invite like that?\"\n\nAs I handed her a twenty and told her no change she leaned close to my face. \"I bought a new dress this week along with some accessories.\" Looking around she whispered. \"Some new undies.\"\n\nLike a shot she was gone and I was headed to the truck. Telling me she bought some new underwear seemed a bit unusual for her, then again, we'd been talking for months and were fairly comfortable with one another. Maybe it wasn't so strange, maybe she was simply sharing something with me. At any rate I wasn't going to give it anymore thought, I'd pick her up at six the next night and that was what was on my mind. I told her I would be wearing a coat and tie, she said she'd dress up as well.\n\nConsidering it was going to be the second time I took her out I stopped by the florist and grabbed a mixed bouquet on the way back to the warehouse. I stuck them in a small bucket of water overnight so they'd stay fresh, when I gave them to her I thought her heart was going to stop. Clasping her hand to her chest she began to cry softly.\n\n\"Oh my. Oh my, this is too much. No one has given me flowers since my son did when he graduated from the Air Force Academy. They're lovely Paul, simply lovely. I'll put them in some water so we can go, I'll arrange them after dinner. Save room for dessert, I baked a cheesecake today and I have some cherry topping to go with it.\"\n\nThe restaurant was on Cooley Lake and was called The Cabin. Along with the regular fanfare found at most high-end eating establishments they also offered certain wild game in season. We both ordered the pheasant and were not disappointed in the least, it had been a tossup between the pheasant and a bison steak. The ambiance was pleasant, the lighting was low in a romantic sort of way, it was after we ate and were talking I took in her beauty.\n\nShe'd worn a black pencil dress, no, not skin-tight showing off every curve, but still flattering to her figure. Along with that she wore a light white sweater, matching pearl necklace and earrings, and what I figured were three-inch black heels. What had caught my attention when I first saw her was that the dress ended three to four inches above her knees, I then realized she had the legs to pull off something like that at sixty-three. The sheer black seamed stockings made her look all the more appealing. Ever notice how seamed stockings will catch your eye in an instant, one can't help but look at her legs.\n\nWe sat and talked following the meal, nothing serious or earth shattering, it was slow so we didn't feel pressured to leave. As I opened the car door for her she made sure she was as close as possible without touching my body with hers, holding her hand as she sat I couldn't help but notice her legs again. I started the car and was strapping myself in when I looked at her. <br >\n\n\"I love that perfume. What is it.?\"\n\n\"It's called Cherry Blossom Spring, it's an oil, I have to order it. I used to order over the phone, now I can do it online and they send it right to my door. Much easier than running to the city where I used to pick it up. I'm glad you like it.\"\n\nAt the house I made each of us a cup of coffee on the Keurig, by the time I'd finished that and put two dessert plates on the table along with a fork for each, she had the flowers arranged and had taken the cheesecake from the fridge. I love cheesecake and like a pig I ate two pieces, she seemed to like the fact that I had an appetite. Walking to the door as I was getting ready to leave she once again took my hand and stopped me.\n\n\"I had a wonderful time Paul, I really enjoy being with you. You're fun and easy to talk with.\"\n\nI sensed she was waiting for me to do or say something, a half-smile on her face, the look of wonder in her dark brown eyes. Taking a chance I leaned forward to kiss her, it was soft and tender, her lips seemed to be inviting me to continue, then she pulled back. I thought it was goodnight, what she did next threw me for a curve, in a flash her lips were back on mine, soft, warm, it felt like my lips melted into hers. We kissed with a sense of passion another thirty seconds or so until she pushed back, red faced, looking flustered, her lipstick was smeared, laughing softly she tried wiping it off my lips.\n\n\"Oh my, please accept my apology, I'm being a bit fresh aren't I? In my day a girl would never kiss a boy like that on a second date. I feel a little like a floozy, sorry.\"\n\nI laughed, \"A floozy? Elma there is no way you could be a floozy as you call it. I assume that means being a bit loose and fancy free.\"\n\nStill smiling with a hand on my chest and the other on my shoulder she sort of half giggled like a schoolgirl, \"It was a rather nice kiss wasn't it? I'm simply not used to this sort of attention. You're a fine young man, are you sure you want to be taking me out to dinner and such?\"\n\n\"As sure as my name is Paul. I enjoy being with you and to be frank, I wasn't sure I'd ever meet someone as nice as you after what Sherry did to me. As far as I was concerned loyalty and being faithful were dead.\"\n\nStepping back she slowly opened the door, I felt like she wanted me to stay, at the same time she looked embarrassed and conflicted. As I turned she took hold of my sleeve and stopped me, she kissed me softly one more time and whispered, \"Those things aren't dead Paul, you just need the right woman. Goodnight, I had a wonderful time.\"\n\nI drove home thinking about what a joy it was to be with someone mature enough to carry on a conversation and still find a way to be intimate without having to be horny and ready to screw. If she wanted to turn our dates into something more I wouldn't resist, at the same time I wasn't going to push it.\n\nMonday morning I noticed a subtle change in Elma, her hair was done up, nothing fancy, but more than the usual, she'd put on a bit of makeup and what caught my eye immediately was the fact she was wearing lipstick, a subtle alluring shade of light red.\n\nWhen she brought my usual I commented. \"Really like the lipstick, is that the same color I had to wash off my face Saturday night?\"\n\nShe blushed, \"Shhh, people will hear you, and yes, it is. Do you really like it, or are you trying to curry favor with me?\"\n\nBetween mouthfuls I uttered, \"Both. Is it working?\"\n\nShe patted my hand as she walked away, stopping a foot away she turned and looked in my eyes, \"More than you know.\"\n\nAs I was paying I gently took her hand, \"I won't see you again until Thursday, some sort of mandatory safety training. By the way, when did you say your birthday was?\"\n\nShe laughed, \"I didn't sneaky Pete, it's tomorrow if you must know.\"\n\nI wasn't five miles down the road when my phone rang, it was Elma, without so much as a greeting she asked, \"Where are you taking me for my birthday? Do you dance?\"\n\n\"I do a little, not what the kids call dancing now, but I can still jitterbug and slow dance. Gleason's has a dance hall attached that has a band on Saturday nights. Would you like to go there?\"\n\nHer voice sounded excited as she answered, \"That sounds good, but I'll forewarn you I can't carry on like I did in my youth, I probably won't last more than forty-five minutes on the dance floor.\"\n\nThe rest of the day found me pondering new thoughts. After Saturday night I was certain she knew how to kiss with passion, and if I was being honest with myself I did feel aroused when we kissed, not enough for an erection, but it wouldn't have taken much more. Her body was soft and inviting, I could barely feel her breasts against me, but they felt soft and caress able, who knows, maybe even suck able. Oh well, things of that nature would have to wait. For the life of me I couldn't figure out why I was so enamored by this woman old enough to be my mom, especially when there was pussy half her age on call anytime I wanted it. Or was I latently having mommy issues? Nah, I'd never thought of mom in those terms.",
        "On Sunday afternoon I got a booty call from one of the divorcees across the courtyard. I surprised myself when I turned her down using an upset stomach as an excuse. My stomach was just fine, and I don't know what it was, but something inside told me to not go over and ravage her body. I ordered roses to be delivered to Elma at work Tuesday between mid-morning and lunch when they were the slowest.\n\nWhen I walked into the diner Thursday morning there stood my sweet Elma behind the counter with a smile from ear to ear. When she brought me coffee she spoke in a loud whisper.\n\n\"If this place wasn't full I'd kiss you right here. Thank you Paul, you made yesterday the best birthday ever and that's saying a lot for a sixty-four-year-old broad.\"\n\nI patted her hand, \"I made reservations at Gleason's for six, is that too early?\"\n\n\"Oh no, that will be perfect. I'm so excited, I haven't danced in years.\"\n\nOn Friday morning the roses were still displayed prominently on the far end of the counter, when I walked in she came around the counter, walked to me and gave me a hug with one arm while she balanced my coffee in her other hand. As I sat she snickered.\n\n\"They all suspect it's you who sent the roses, so I thought I'd give them something to talk about. I'm taking tomorrow off to pamper myself, beauty parlor, a mani and pedi, you know, the usual stuff a girl does for her birthday dinner with a handsome man. That would be you by the way.\"\n\nIt was an extremely busy morning, she told me she'd see me at five the next night and waved goodbye as I left. I decided Saturday night should be special and wore a brown windowpane suit, a light green dress shirt with French cuffs and a tie with similar colors. When she opened the door my eyes bugged out of my head, for 64 she sure looked inviting. A teal colored dress with three quarter sleeves, a scoop neck showing the beginning of cleavage, a flared skirt and matching heels, what caught my eye and made my dick want to rise was that her skirt was just a bit past midthigh. The shimmer of the stockings brought it all together.\n\nShe had the petite filet and I had the queen cut prime rib, end cut, both excellent meals. We made the choice to go sit in the bar until the band started at eight so others could eat. She had a glass of wine while I slowly drank two tap beers. As the band was setting up we found a booth at the back and waited. She kept saying \"this is gonna be the best birthday yet\" every few sentences.\n\nWe danced a few faster ones until the bump and grind crowd began to take over the floor, when a slow set began it was our turn. We were in the traditional dance position, my hand on the small of her back, her hand on my shoulder, her right hand in mine. As the first song neared the end she leaned forward and put her head on my chest, it also brought her body closer to mine. Having taken my coat off earlier I could feel the softness and warmth of her breasts, I also unexpectedly felt her tummy press softly against mine.\n\nI was going to escort her to our booth when another slow song began, she stopped and moved in to dance with me. Once again her head was on my chest, this time her body was a bit closer than before, she seemed to be the aggressor in the situation so I let her have control. With the song about half over she looked up and kissed me, a long, soft deep kiss. When her tongue touched my lips I took over, drawing her in tight, tight enough she couldn't help but feel my body.\n\nSitting in the booth she got a serious look on her face. \"Paul, I've been talking with Timothy, my son, he wants me to move to Guam with him. It won't be for another four months, but I've decided to go. I'm telling you this because tonight you're going to give me the best birthday present ever.\"\n\nI sat back, \"I am? And what might that be?\"\n\nShe smiled, \"You.\" I pointed at myself and mouthed me? \"Yes, you're going to take me home and make love with me. Don't say a word until I finish. I want you to be my lover until I leave, I'm old enough to know what I want, I don't need to be wined and dined although I love the attention. You don't strike me as the kiss and tell type, so, I'm going with my gut feeling. I haven't had feelings toward a man like I do for you in a decade, I want to be loved and I want you to be my lover.\"\n\nTaking a deep breath she held her hand up for me to stay quiet, \"I'm not a spring chick, I don't have little tight pink titties any longer, mine are older and show a bit of sag, but they still possess some bounce. They tend to lay to the side some when I'm on my back but the nipples still point toward the ceiling. I have stretch marks and wrinkles and everything else that comes with my age. I'm sure I won't be able to go all night like I once did, but there are lots of ways to satisfy and I'll do my best to make sure you never go without. I'm going to the ladies, think about it and let me know when I return.\"\n\nIn my mind there was nothing to think about beyond I would absolutely love to bed this older woman. When she returned I stood letting her move to the inside, looking at me she said, \"Well?\"\n\nThe way I answered startled her initially until she sensed what I was conveying. I put my right hand on the inside of her leg just above the knee and slid it up her inner thigh. Her first reaction was to close her legs tight, I didn't move my hand as I looked in her eyes, she grinned and relaxed allowing my hand to move up over the stocking tops, then along the straps which weren't attached to a belt but rather her panties. She let out a quiet \"Uhhhh\" when my fingers touched paradise, her panties weren't wet but they were warm and damp, with her dress up I could smell her arousal. Sweet and tangy, mixed with a faint smell of her perfume, I remembered my ex would often put a dab on her upper thighs at times.\n\nShe put her hand over mine and moved it down as we kissed. \"Do you like the garter panties? My mom always wore them, when I found them a few years ago I bought three pair, considering I prefer to wear stockings if it isn't beastly hot I bought several more, it sure beats having to half undress to pee.\"\n\nWith lust in her eyes she touched my face, \"Take me home Paul, I haven't felt this passionate in I don't know how long. I want you to take me, to make me yours, now a days I think they call it owning a girl. I want that Paul, let's go, I don't want to wait any longer.\"\n\nI whispered to her, \"We need to sit a minute, I'm sticking up like a flagpole.\"\n\nThat comment brought her hand to my crotch where she rubbed up and down, \"Oh my, you're a big boy aren't you. I think I've struck gold, I won't touch you anymore until we're in the car.\"\n\nMy car doesn't have one of those wide consoles, it's narrow enough she could reach across and place her hand on the inside of my right thigh. She didn't rub or grab my dick, her hand simply stayed on my thigh as if to say, \"this is mine now\".\n\nThings started slow at her house, we hung our coats, I ditched my suit jacket and sat on the couch while she fiddled with something in the coat closet, walking back to me she extended her hand.\n\n<br >\"Come, we need to get busy before I get cold feet.\"\n\nIn the bedroom she turned out the lights, leaving just enough light from outside to see, but without much detail. As she loosened my tie and unbuttoned my shirt I found the zipper in the back and pulled it down. Not a word was said as she pulled the shirt from my pants tossing it onto a chair, my pants were next leaving me in just underwear. I pulled the sleeves of the dress over her arms and let it drop, she stepped to the side so I could pick up my trousers and her dress placing them on the chair.\n\nStanding in her full slip I reached for the hem lifting, as it got higher she raised her arms and let me remove it. With her in garter panties and a bra, me in only my underwear we stood looking at one another in the dark, taking a step to me she put her arms around my neck and kissed me tenderly before she spoke.\n\n\"Can we leave the lights out tonight? I don't want you to see every wrinkle, stretch mark and blemish I have before you make love to me. You can see me in the morning if you want to, but can we do it in the dark? Please?\"\n\nWith her arms around my neck and my lips on hers I unclasp the bra and pulled it forward, we pulled apart never looking anywhere but each other's eyes. Sliding the bra off I cupped her breasts and used them to softly bring her body to mine, she giggled.\n\n\"Your chest hair tickles my nipples, I like that.\"\n\nI played with her breasts as we stood kissing, they weren't all saggy and flopping down, there was droop, but then what woman doesn't have some droop at sixty-four. They were soft and yet firm, as I caressed and shaped them with my hands she softly moaned into my mouth, when her hips tilted upward pushing into me I knew it was time to take over. I slowly pushed her back to the bed, when the back of her knees made contact with the mattress she buckled and sat, pushing her back into a prone position I hooked my fingers in the waist of her panties. When I said softly \"lift\" I was able to get them beneath her butt.\n\nUnclipping the stockings she lay there, I rolled them down her legs and hung them on the chair with the rest, sliding the panties off I knelt looking at as much pussy as I could see in the moonlight. The hair was no longer dark, though her bush wasn't very big it was still plentiful, long, and silky, between her legs there was just a narrow strip along the labia on each side. Leaning above her body I breathed her sensual aroma, not at all overwhelming and yet very inviting at the same time. When I kissed her mound though the hair she responded by putting her hand on my head playing with my hair.\n\n\"You don't have to do that Paul.\"<br >\n\nMy response, \"Oh yes I do, lay back Elma, let me take things from here.\"\n\nWith a hand under each butt cheek I lifted her into my face, I kissed the vulva, her inner thighs and licked her from bottom to top with the flat of my tongue. She whimpered like a little girl, when the stiffness of my tongue spilt the outer labia she lifted her hips. As I licked upward my tongue opened the inner labia causing her to groan deeply and put her other hand on my head. Her hips were already undulating and I hadn't touched her clit, deciding I'd teased enough I opened the hood over her clit and sucked the nub between my lips gently, all the while bathing it with my tongue.\n\nHer hips were moving up and down as she continually whispered my name, \"Paul, so good Paul, it's been so long, so good.\"\n\nI felt her body begin to tighten along with a change in her breathing pattern, when she lifted her legs alongside her body and used her fingers to pull the labia apart exposing her clit I attacked. In seconds she let out a wail and her hands went to her breasts, squeezing, pulling them, pinching the nipples. Her hips were moving about the bed as she came and I was hanging on, I licked like a kitten at a milk saucer bringing her to more orgasms until she yelled, \"No ... no more ... Please.\"\n\nI lay in the dark with a smile on my face, I was pleased that I'd brought this lovely older lady some satisfaction, that she felt relaxed and sated for the moment. Her breathing was light and sparse, as I sat she dozed off while I watched her body in the diffused light. She was right, her breasts did splay to the sides a little, her tummy was flat, I ran my fingers through her bush enjoying the softness caressing my fingers. As her eyes opened she reached out her arms beckoning to me.\n\nTaking the initiative I lowered my lips to kiss her breast, she instantly put her hand under it and shaped it into a cone, the nipple being prominently centered, I sucked it into my mouth. Another deep groan, I was feeling quite proud of myself. When I switched to the other side she did the same, offering up a nipple to suck on, another groan followed by a series of choppy breaths. I found myself wondering if she'd cum from nipple paly alone.\n\nWith her hands on the sides of my head she lifted me to kiss her, when we broke she pulled back and stroked my face.\n\n\"You sweet man, you didn't have to do that. I could never understand why a man would want to do such a thing, I always thought it was repugnant. My late husband would never do that, but now that I've tasted myself on your lips it isn't bad at all. I wouldn't want to taste anyone else, but now I know I'm not nasty down there.\"\n\n\"Nasty? Not in the least, you have a lovely inviting aroma, it very much strikes at the essence of my libido, I'm so hard it hurts.\"\n\n\"Would you want me to do the same for you? I'm not very talented but I'll try to make you happy.\"\n\nI stroked her hair, \"Nope, what I want is to be inside you, I want your sweet pussy wrapped around my dick sucking the life out of me. Hopefully my language doesn't gross you out.\"\n\n\"If it were anywhere but my bedroom it probably would, I've never had a man say the things you just did. It's kind of naughty, but I think I like it when you talk dirty to me, I always wondered what it would be like to be a naughty girl. Can I be your naughty girl?\"\n\n\"Open your legs Elma, I have a meat treat for your kitty. I'll go slow until you let me know you're ready to take it all.\"\n\nAs I rose over her she put both hands on my chest, \"Just how big are you Paul? It seems awfully long and fat.\"\n\n\"I think I'm pretty average, my ex measured me once with her sewing tape measure and I know I'm bigger than six inches. No one has complained yet. Is that an issue?\"\n\nShe chuckled, \"No, not at all, I was only curious. Women don't care how big a guy is if he uses it right, well, unless his is real short and skinny. What did the hubby call somebody like that? Oh yeah, a pencil dick. And that isn't you Paul, let me put a drop or two of KY on you and then I want my birthday gift.\"\n\nI stayed raised above her as she put a few drops on the head of my dick and smoothed it around, lowering myself slightly aligning myself with her vagina I stopped.\n\n\"You put it in Elma, show me you really want it.\"\n\nReaching between us she grabbed the shaft and put it at the opening to her vagina, when I felt the tip touch and open her sex I pushed lightly, she was tight but not enough to keep me out. With about half my dick inside she let out a little sigh.\n\n\"So big, so much to put inside me.\"\n\nI laughed softly, \"It's only halfway.\"\n\n\"HALFWAY. My God man, you'll split me in two. Go slow, I can take it, just go slow.\"\n\nI did as she asked, taking shallow strokes until I felt her hips move ever so slightly into my down stroke, I pushed a bit farther into her, she was making soft mewling noises and then shocked the hell out of me.\n\n\"Yes, just like that. Fill my pussy with your cock, bury that meat deep, give this old lady the screwing of her life. I need this Paul, I need you.\"\n\nI loved the sensation of my thick fat head opening her while her vaginal walls grabbed the shaft, sending sensations and feelings of bliss throughout my body. Working myself in further and further as we continued I finally hit bottom, I grunted, she stiffened, I could see a faint smile, her hands went to my ass cheeks and held me against her body.\n\n\"Do I have it all? Good. Then make long tender love to me, you can rip me a new pussy tomorrow, tonight will be a first time in a long time, I need it slow and gentle.\"\n\nI took a few short strokes to start, pulling out a few inches and then re-entering, by the eight or tenth stroke I was all the way out to the head and then pushed into her completely, she moaned and said softly.\n\n\"Oh my, oh yes, oh yes, so deep, so good, you make my pussy tingle, keep doing that.\"\n\nI can generally tell when a woman is going to orgasm, there are usually telltale signs of some sort, there had been when I was eating her. Not this time, she suddenly pushed her hips into mine, clamped her hands onto my shoulders digging her nails in, her head was back as she let out a long drawn out moan followed by deep breaths and her body being almost motionless. I didn't slow down, I continued to stroke, as I felt the rockets getting ready to launch within her hungry old cunt she was now showing signs of another climax, both physically and audibly.\n\n\"Cum, cum in me. I want to feel you shoot inside me, I love that feeling. It's been so long, fill my pussy with your warm creamy sperm, make an old lady feel young again. Fuck me Paulie, fuck me.\"\n\nI found myself wondering where that language had come from as I continued driving into her, gone was the \"be tender and gentle\", she wanted it planted deep and I was going to oblige. I picked up speed and pushed harder into her, she seemed to relish that, putting her feet on the mattress, bending her knees and driving up into me. As I slammed forward on last time she let loose a scream that could have woken the dead, her body was shaking this time, my balls were erupting inside her hot steamy pussy.\n\n\"Oh, I feel it, I feel it. Keep shooting into me, keep shooting. Oh, my it feels so good. Thank you, thank you for giving me the best birthday present ever. You've brought the girl in me back to the surface. Thank you.\"\n\nI found it interesting and erotic at the same time. I'd never had a woman thank me for making love to her, and certainly not for filling her pussy with a large load of cum that would soon be seeping from her body, trickling toward the sheets. It was a renewal for Elma, it was a first for me. After breakfast the next morning she modeled the garter panties for me, she kept complaining about how old her body looked, I'd finally had enough.\n\nTaking her face in my hands I lifted her to look in my eyes, \"You need to stop talking like that, if I found your body repulsive I would go. I don't need to flatter you for some sex, it's everywhere these days. I was in bed with you because I wanted to, not because I needed or had to. I find you exciting, I love those\n\npanties and stockings, if you want to make me hard, just let me know you're wearing that stuff. So, stop talking like that.\"\n\nShe changed quickly wanting to be screwed in stockings and a belt, with her legs pointed upward I ravaged her body fucking her with mucho gusto until we reached the point of no return. As I filled her body a second time with thick warm liquid squirting from my cock she squirmed and told me how good it felt to have a cock in her.\n\n\"Before today I hadn't felt a cock paint my insides for years, god how I've missed that.\"\n\nWe took a break that afternoon, I needed to get home and a decent night sleep before my morning run, she said she needed to rest or she'd be walking funny for a few days. In the diner Monday morning she didn't hold back at all, walking to me she kissed me and sat on my lap.\n\n\"Good morning Paul. Would you like the usual?\"\n\nPeople were staring at us, we didn't care, in a low voice I muttered, \"What I'd like is you sitting on top riding me.\"\n\nGetting up she kissed me again and whispered in my ear, \"Come around by five, I'll have supper ready and you can have me for dessert.\"\n\nOver the next four months we tried every position her body could tolerate, she especially liked it from behind with a wedge beneath her tummy to take the pressure off her knees. She was proving the title of the old country song, \"Older Women Are Beautiful Lovers\" to be entirely true. Within two weeks of our initial get together she stopped working at the diner, my breakfast stops were now at her house where I didn't always get around to having breakfast. She lived just outside town on a country road, plenty of room to park my rig.\n\nOnce I'd woken that sleeping beast within there was no holding her back. I'd gotten my first blow job from her in the kitchen, we'd christened the table, all three kitchen counters, the washing machine and dryer, every room and nearly every piece of furniture in her house. I learned more about the nuances of sex than I ever imagined, the little pats or rubs on my butt as she walked by, gently brushing her chest across mine even though there could have been three feet between us, the stolen kisses, the gentle squeeze of my dick where she thought no one would see.",
        "Before meeting Elma I had become calloused toward the supposed deepness of love between two people, day by day, week by week, she brought me out of that funk. No, we weren't going to spend the next thirty years having and raising babies, but little by little she was teaching me love can exist in a monogamous relationship. I'd heard my mother say many times, \"sex begins in the kitchen\", but never knew what it meant until Elma. Beside our morning soiree's I would stop in three to four nights a week, if we hadn't been active in the morning we were at night. I could tell she was tiring as the weeks progressed, when I brought up slowing down to once or twice a week she would have nothing to do with it.\n\n\"I'm not going to do that Paul. I'll never have a season like this again, we aren't in this for life, although I think we love each other, I'm going to screw you until the day I leave for Guam. Tim is coming home to fly back with me, the day before he is due to arrive you're going to take off and make love to me as many times as we can in one day. I'll leave for Guam knowing this grey-haired old pussy was loved and filled with cum right to the very end.\"\n\n\"What about the house and land Elma, are you going to sell it?\"\n\n\"Oh, that's all taken care of.\"\n\nI found myself disappointed, I would have loved to buy the place. When that sad day came I took them to the airport, we hadn't shown any sign of affection in her son's presence until their boarding call was announced. As we stood she turned to me, walked into my arms, pressing her body into mine as we kissed passionately one last time.\n\nSoftly stroking my face she said, \"Goodbye my lover. This has been one of the most exciting four months of my life. I'll never forget you, know in your heart that I'll always love you. Now that I'm going I want you to find a wife and have some babies. You have too much to offer to be single. Bye lover boy.\"\n\nAs they walked away I overheard him say, \"Lover boy?\"\n\nShe chuckled, \"Your mama isn't as old as you think young man. I had needs ... he took care of them.\"\n\nAs they approached the chute she turned and waved with a kiss goodbye, smiling from ear to ear. I never did see her again, I got a card from her every year at Christmas until she died, it was her son who sent the card that year telling me his mom had passed.\n\nI did as she told me, I found a wife, in fact it was the farm girl who took Elma's place when she left. Her name is Fran, becoming my wife only four months after we'd formerly met. She stopped working the diner when she was three months pregnant with our first. We live on what used to be Elma's place, a week after she'd arrived in Guam I was called by a lawyer and asked to meet him, I wasn't quite sure what awaited me. I sat in amazement as he handed me the deed to what had been Elma's home, she had given it to me. Now that we have three more running in the yard I can picture her sitting on the deck watching the kids play with a smile on her face.\n\nAs for Fran, she's the quintessential school mom, soccer mom, housewife and lover. She rocks my world in the bedroom and everywhere else for that matter. When I look at her and our family I'm daily reminded how an older woman was able to bring me back to that place of trust and loving someone after so much hurt earlier in my life. She may have been nearly thirty years older than me, but in the end we were both what the other needed."
    ],
    "authorname": "R410a",
    "tags": [
        "milf",
        "older woman",
        "younger man",
        "romance",
        "may-december romance",
        "age difference"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/older-women-1"
}