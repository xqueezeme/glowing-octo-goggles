{
    "title": "Claire's Invitation Pt. 03",
    "pages": [
        "The student union lounge was almost empty, which was odd. Then she remembered that the football team was playing at home; the campus was virtually deserted, but neither of us had noticed. We'd wandered away from the dorm arm in arm, meandering in no particular direction, Claire with her head resting on my shoulder as we walked. We made small-talk. Both of us were lost in a jumble of thoughts that were too raw be safe for conversation. \n\nOur sexual attraction had burst its chains a week earlier, and now we had allowed ourselves to experiment. We were free, but not quite free, like puppies who suddenly realized the fences had collapsed and were madly charging out into the unexplored world, but never so far as to lose sight of mom. We were testing this new freedom, but cautiously, and neither of us were very sure how far it was safe to wander.\n\nWe held each other closer than usual and walked more slowly, just soaking up the simple pleasures of being with each other. We all want someone who wants us, and when we find that someone, often all we really need is to hold on tight.\n\nWe found a relatively clean sofa in a corner of the lounge and sat snuggled against each other. There were muted voices, some laughter, and the clinking of glasses coming from upstairs somewhere. Maybe a small banquet. \n\nI kissed her on the temple, pressed my face into her hair, and breathed deeply. Claire's scent was always the same, but I wasn't sure what it was. Her shampoo, probably. She didn't wear perfume. She never wore much makeup. She didn't need any of those things, in my opinion. As kids we'd run around the streets together, never paying much attention to what we looked like. She was a grown woman now, subject to stricter expectations, but Claire never felt she needed to impress anyone, least of all me, and I liked that.\n\nShe'd left one more button undone than usual; looking down at her I could see the frilly bow in the center of her red bra as it strained to hold her ample breasts together. I hadn't taken the opportunity to look at the tag when I'd had the chance. I had no idea how big she was and where she ranked in the world panoply of women's breasts. I only knew that I liked the way they filled my hands. Her areolae were rose colored and her nipples got wrinkly as they swelled, which fascinated me to no end. I approved of the way she was put together.\n\nShe snuggled more deeply against me. She seemed happy. I knew I was.\n\n\"Can I ask you a question, Danny?\"\n\n\"Of course.\"\n\n\"I want you to be honest. Have you ever done it before?\"\n\nOh, wow. Where was this going?\n\nI felt myself flushing with embarrassment. I was a nerd, not a football quarterback. I read books, magazines, looked at photos, I'd even seen a few X-rated films, but none of that counted. I was a virgin, and I really didn't want to admit it.\n\nI tried to dodge the question. \"Why do you ask?\"\n\n\"I guess I want to know where I stand. I've never done these sorts of things before. I told you, I'm a virgin. I wondered if... if I'm just one more notch on your cannon.\"\n\n\"I think that would be painful.\"\n\nShe elbowed me in the ribs.\n\n\"I'm serious. I need to know. Have you ever made love to a woman before?\"\n\nIt was a reasonable question.\n\n\"Never have.\"\n\n\"Never? Really?\" What about Lydia? I remember a time when she was really into you.\"\n\nI laughed.\n\n\"Lydia?! No way. She was interested in me writing a term paper for her, and maybe, if I'd agreed, she would have paid me off with a blow job, but she was never interested in me. The truth is, I've never had a serious relationship with a woman before. Women aren't interested in nerds.\"\n\nShe looked up at me. \"I am. But I don't think of you as a nerd. You're different. Some might even say you're weird, but I would never let a nerd touch me like you've touched me.\"\n\nGood answer. I let the \"weird\" comment slide. All of a sudden, I felt like I might go try out for quarterback after all.\n\n\"What about a blow job. Has anyone done that to you?\" she wondered.\n\n\"These are pretty personal questions. You're not carrying a tape recorder on you, are you?\"\n\n\"There's one in the lamp over there. Answer my question and be sure you enunciate for the record.\"\n\nWe chuckled. It was a nice feeling, sitting there together and sharing our deepest secrets.\n\n\"I've only ever had one blow job. And it was pretty great. Amazing, really.\"\n\n\"Who? Tell me who? When?\"\n\n\"You can't tell anyone. You have to promise.\"\n\n\"I do. I promise.\"\n\n\"It was in my junior year at Hendricks. You remember Miss Kennedy, the librarian? She was the one all of us guys fantasized about. Short, tight skirts, starched white blouses, flowing red hair, those freckles and long legs and high heels. We would all go to the library just to watch her bend down and return books to the bottom shelves.\"\n\n\"Oh, my god. You're kidding me. You did that?\"\n\n\"We practically drooled over our library books when Miss Kennedy was working. So anyway, one day I went in during English class to look up something in the encyclopedia. Miss Kennedy was at her desk, and she gave me a beautiful smile as I came in, then went back to her work. I flipped through several volumes, took notes, she wasn't paying much attention, and then I nonchalantly walked over to her desk and asked her if I could interrupt her with a question.\"\n\nI paused at the memory of Miss Kennedy. Built like a brick house.\n\n\"She nodded and smiled up at me with those gorgeous green eyes. And I said, 'Miss Kennedy, I'm researching the sexual practices of the early 20th century. This article keeps mentioning something called a blow job. I've never heard that term before. Do you know what it is?' And she said, 'It's really difficult to describe. Come into the back room for a few minutes and let me show you how it's done.'\"\n\nShe elbowed me harder this time.\n\n\"Oh, stop, you liar. You big, fat liar.\"\n\n\"Think what you want, but let me tell you, I became a man that day, and Miss Kennedy never looked at me the same way again.\"\n\nShe laughed out loud.\n\n\"You're a big liar, is what you are. That never happened and you know it. I'll take that bullshit story to mean that you've never had a blow job either. You had me going there. Miss Kennedy was hot, though, I'll give you that. We always thought she was fucking Mr. Cipowicz, the track coach.\"\n\n\"Hmmm. Could be. Could be. I wonder where she went?\"\n\nWe were quiet for a bit.\n\n\"Have you ever read The Joy of Sex?\" she asked.\n\n\"Uhhh, not really. I sneaked a peak at a bookstore once.\"\n\n\"The library here has some copies. I was too embarrassed to check it out, but I pulled it off the shelf one day and read it in the stacks. It had some interesting drawings. I learned about blow jobs from that book. Fellatio. Do you know that word?\"\n\n\"Fellatio, from the Latin fellare meaning to eat a very large pickle.\"\n\nShe exploded in laughter and bent over gasping, unable to breathe. I thought she was going to pass out. She wheezed, snorted, and finally regained her composure.\n\n\"So blow jobs interest you?\" I continued. \"What did it say about cunnilingus?\" \n\n\"Oh, gross. I don't want to think about that. Gross.\"\n\n\"Why gross, Claire? I think it's hot. Miss Kennedy always complimented my tongue talents.\"\n\n\"In your dreams, Don Juan. Lydia says guys don't like it. Todd only goes down on her when he's had too much to drink.\"\n\n\"Well, Todd's a self-centered jerk.\"\n\nI thought carefully about what I wanted to say.\n\n\"I've had dreams about going down on you, Claire. Not nightmares. Really hot dreams. I'd like us to try that sometime.\"\n\nShe blushed.\n\n\"Maybe. We'll see. Maybe... maybe we could try those things tonight,\" she suggested, hesitantly. \"Fellatio and cunnilingus. They don't really roll off the tongue, do they? If we say them enough, do you think our tongues will be limbered up enough to give it a try?\" She smiled up at me wickedly.\n\nI looked back down at her, bent down and kissed her. We got into it good and limbered our tongues up pretty well. The night was going to be interesting.\n\n***\n\nWhen you want time to fly by, the clocks stop. We walked around downtown, but a lot of the stores were closed because of the game. We thought about going to a movie, but didn't find anything interesting. We stopped in the confectionery store and bought some chocolate fudge. We stopped at a Chinese restaurant and ordered Moo Goo Gai Pan to go. Ate it together at a picnic bench in the town park. \n\nAt some point, the traffic picked up. Game must have let out. It was getting dark and a bit chilly, so we worked our way through campus back to her dorm room. Once we got there, Claire decided she needed a shower. She didn't invite me to join her, but I was with her in my imagination.\n\nI actually fell asleep on Lydia's bed and woke up when I heard the door open. I glanced at my watch; she'd been gone a bit more than an hour. I stretched and smiled at her as she entered the room looking fresh, shiny, mischievous. She was wearing a crisp white blouse and a black mini-skirt that stopped half-way down her thighs.\n\n\"Miss Kennedy!\" I exclaimed. \"I knew you'd come back to me eventually.\" \n\nShe giggled, jumped onto the bed, pinned me down with her lithe body and kissed me hard, holding one of my hands above my head while pressing a muscular leg between mine. She began moving on my body, slowly but insistently, grinding her hip into my cock.  \n\nI grabbed her ass through her short skirt and pulled her tightly against me, raising my thigh a bit so that it pressed against her pussy. Our tongues wrestled, our lips tried to devour each other, our pubic bones ground into each other, the cheeks of her ass flexed in my hands as she moved her body... she was becoming a bubbling volcano of erotic stimulation.\n\nI flipped her onto her back and pinned both of her hands above her head, then proceeded to kiss her throat, her neck, her ears, her eyelids, her cheeks, before locking my mouth to hers once again. I pressed my thigh up hard into her pussy and she let out a groan. Then I freed my right hand, reached all the way down to her left foot, and started kneading and stroking her toes. I tried not to tickle her, but instead massaged her muscles as I trailed my hand up and along her calf to her knee. I drew circles with my fingers around the sensitive area behind her knee and could feel her relax as I did.\n\nThen, as I resumed kissing her throat, I trailed my fingers lightly up the soft skin of her inner thigh, taking my time, drawing abstract figures as I went, occasionally squeezing the flesh as my fingers progressed higher, steadily higher, inexorably higher, until, when I was only inches from my destination, she took my hand and, grinning like the Cheshire cat, pushed me over onto my back.\n\nShe flipped a leg over me and sat on my stomach, her knees folded, her skirt pushed up almost to the limit, but not quite. Then she wiggled her hips seductively and made herself comfortable. \n\n\"You must be the most beautiful woman in the world, Claire. How did I ever get so lucky?\"\n\n\"I'm the lucky one,\" she answered.\n\nShe ran her fingers back through her hair and held the pose, hands at the back of her head, elbows jutting out, her breasts standing proud, just begging for me to take them.\n\nI reached up and filled my hands. She wasn't wearing a bra. Only the stiff fabric of her cotton shirt separated my fingers from her nipples, but I found them anyway, already firming up, leaving their growing impressions on the outline of her blouse. She closed her eyes as I worked them erect. She wiggled her hips some more and sighed deeply, happily, but definitely not yet satisfied.\n\nShe was smiling down at me, sort of a cat-swallowed-the-canary kind of smile. Claire the cat.\n\n\"So Danny.\" Her face had changed. She was a bit flushed, but there was something else, something new. Maybe it was just the view. Her knees were pressed up under my armpits, I could see flashes of skin where her shirt puckered between buttons, her nipples were now fully erect, her lips were moist...\n\n\"Do you think you'd really like to try cunnilingus?\" Her voice was trembling a bit. I think she was nervous; maybe she was having trouble getting the words out.\n\nI involuntarily glanced down at the darkness between her thighs, the midnight blackness beneath that tiny little skirt, and my cock jumped. I may have stopped breathing. \n\nI smiled up at her. \n\n\"Yes, baby. I want to cover your pussy with my mouth, press my tongue deep into your wet bush, and make you cum. Yes. Definitely yes.\"\n\nWith that, she hiked her skirt up to her waist, spread her knees wide and raised up. No underwear. Nice. I slipped my hands under her ass cheeks and urged her forward as she shuffled and slid her dark bush right up to my chin. There was heat. There was the aroma of something like a dark path deep in a forest. I stroked her soft bush with my thumbs, spread her glistening, rosy lips, lifted my head and kissed her, nuzzled her, slurped up her nectar, and traced the delicate folds of her lips ever so slowly with my tongue. She trembled and groaned, then placed a hand against the wall to steady herself. I was astonished, spellbound. I lapped up her dripping juices as she settled her hips down on my chest. Took long, slow swipes with my tongue up the entire length of her steaming pussy, swirling my tongue where her folds joined together, encouraging her clit to come out of its hiding place. \n\nMy lips and tongue explored this newly conquered territory. The folds of her labia were slick and slippery, smooth, yielding and yet resisting. Her eyes were closed. Her hips moved slightly side to side, forward and backward in response to the movements of my tongue.\n\nThen, she jumped.\n\n\"Sweet Jesus!\"\n\nFound her clit. I cupped my hands around her cool ass cheeks and pulled her a little closer. Then I focused my attentions on her love button, alternately flitting my tongue over the reclusive little nubbin and then sucking it between my lips. It was difficult to breathe at times... Playboy's Advisor hadn't mentioned that part... but feeling her tremble, slurping down her delicious elixir, seeing the look of drunken delight on her face... I didn't care. If I was going to die, this was where I wanted to go.\n\nI pulled her shirt out of her waistband and caught a double-handful of her firm tits. Squeezed them, stroked them, caressed them, then began working up a rhythm on her nipples to match the music I was playing on her clitoris. \n\nShe started mewling and moaning. Then, I swear her clit began growing. I sucked it between my lips and flicked the very tip as lightly and rapidly as I could, while squeezing and rolling her hard nipples.\n\n\"Oh, my god! Oh, fuck! Fuck, Danny! Ohhhhhh, sweet... Soooo good.\"\n\nI alternated between firm and tender, fast and slow, random and focused, then every so often I would give her a rest while I plunged my tongue into her vagina and sucked on her lips. But I always returned to her clit, which felt like it had grown as thick as my pinkie finger.\n\nI went on like this, listening to her body, watching her reactions, adjusting my ministrations as I felt and heard her responses. Her body was speaking to me, signaling unmistakably when I had found just the right spot, just the right speed, just the right amount of pressure. I was aiming to become a cunnilingus virtuoso and I wanted to play her instrument to perfection.\n\nI wedged my right hand beneath her, slipped my middle finger up inside of her as far as it would go, and started stroking in and out of her vagina, adding one more rhythm, one more sensation, one more note to the symphony I was conducting. I could tell that I was pushing her to the point where every electrical circuit in her body would overload and all the breakers would trip at once.\n\nShe got noisy at the very end.\n\n\"Ahhhhh, aaiiii, uhhhhhhh my g... my... oh fuuuuuuck. Oh, oh, oh! Oh!! Ohhhhhh shittttt!!\"\n\nShe squealed and ground her pussy hard into my teeth and shook violently, then put one hand behind my head and pulled me even harder into her sex. She clamped her thighs together so tightly that I thought she would crack my skull. I kept her clit firmly between my lips and tongue, strumming, pressing, making all those nerve endings cry out with an ecstatic release of delight.\n\nShe began whimpering and gasping as she held me tight. And then, she suddenly let go of my head, pushed up and away, grabbed her pussy with her hand and held on tight as the jolts and spasms rolled over her like a train of waves at sea. She fell backwards, one hand clamped between her legs, the other over her face, her hips jerking every so often as another jolt of joy broke over her.\n\nMy own face was wet with her juices. I fished a couple of curly hairs from my tongue and then licked my lips thoroughly, savoring the tangy, musky flavor of her orgasm.\n\nAmazing. I'd had no idea what it would be like, and this, this was so much better than my wildest fantasies. So many guys seemed convinced that women didn't get much out of sex, and certainly didn't experience the powerful release that men did. Claire just put an end to that myth. I was delighted, and I was ready to start again.\n\nBut maybe not right away; Claire looked wasted.\n\nI flipped myself around in the bed, came up behind her, and spooned with her, pulling her against me, burying my face in her neck, just holding her. I couldn't tell from her breathing if she was awake or asleep.\n\n\"You ok, baby?\"\n\n\"Whoa. Oh, wow. I think... Ohhhh, fuck. I'm better than ok. Way better than ok. Way, way better than chocolate fudge.\"\n\nI smiled and just held onto her. She shivered, and I realized she was still naked from the waist down. I got up, found a blanket, and came back to her, covering us both. She slipped one of her feet between my calves, then took my left hand in hers, raised it to her mouth, and began kissing my fingers ever so gently, one after the other, little kisses, sweet kisses, kisses of gratitude. She sucked them clean one at a time.\n\n\"So that's what I taste like? You like that?\"\n\n\"Oh, yes. Breakfast of champions.\"\n\nShe chuckled.\n\n\"You, you're a champion cunn... What's the word? I can't remember.\"\n\n\"Cunnilinguist, maybe.\"\n\n\"That. You lied to me. You've done this before. Your tongue is way too talented for a cunnilingus virgin.\"\n\n\"No, you're my first. Honest truth. I just did what I thought would feel good, and your body told me the rest.\"\n\n\"Wow. Then, you need to write your own book. The Joy of Tongues.\"\n\nI had to laugh.\n\n\"Not a bad idea. I'd have to do a ton of research, of course. Maybe Lydia would be willing to help?\"\n\nShe slapped my hand, but lightly.\n\n\"I'm going to be your permanent research subject, mister. I'm not going to let anyone else put their pussies on your tongue. That mouth is all mine.\"\n\nWe ran out of conversation and she quickly drifted off to sleep. My cock was semi-hard. The night was young. I knew I could wait.\n\n***\n\nA door slammed somewhere, and I woke up. Claire was still sleeping, her breathing quiet, regular, untroubled. I got up quietly and went to the bathroom, then got undressed and slipped back into bed beside her. I spooned with her again, only this time, my cock nestled between the cheeks of her lovely round ass. She stirred a bit as I got myself comfortable. \n\nI found her left breast and fondled it. What wonders! I loved their softness, their fullness, the way her nipples stiffened as I caressed them. She moved slightly, pressing her ass more firmly into my cock.\n\nI slid down a bit lower until my cock found the precious gap between her thighs and her pussy. Then I eased myself forward, firmly, slowly, my cock slipping easily over the warm fullness of her thighs and past the moist entrance to her pussy, until I trapped in the Bermuda triangle of her thighs, her bush, and her still-swollen labia. ",
        "Ohhhh, Claire, I could get hooked on this feeling, I thought. \n\nCouldn't hold still. Had to move. Wow. I started gently stroking myself in and out, in and out, and after only a few repetitions my cock was slippery with her nectar. The head was rubbing up against her clit, or close enough that it got her attention, and she began to stir. She pushed back slightly as I pushed forward, she moved her legs a bit to give me a better angle, and I started thrusting more vigorously. \n\nI guess we were dry humping, but there was nothing very dry about it. Her vagina was oozing, my cockhead was spearing between her pussy lips and slurping up over her clit with every stroke, which turned her on more and made her even wetter. \n\n\"Unnngh. Unnngh. Unnngh.\" She was grunting with every thrust, her ass cheeks were slapping lightly against my abdomen, her thighs felt like they were bathed in olive oil, I was moving, she was moving, my cock was moving... and then it happened. Pulled back a little too far, pushed up a little too high, and the head of my aching cock pushed itself into her steaming vagina. She let out a yelp and I froze.\n\n\"Aiiiii! Oh, my god. Oh, my god. Oh, oh, oh, wait, wait Danny, wait. Oh, shit. Oh wow.\"\n\nI didn't move a muscle. Neither of us did. And then, she moved. She pressed herself down onto me. She wasn't backing off, she was pushing me deeper.\n\n\"Ohhhhh, godddd. Ohhhhhh, sooooo big! Ohhhh, more, please, more.\"\n\nI moved my hips a quarter-inch closer, and the head of my cock seemed to pop completely into her amazingly tight, wet cavern. Now it was my turn.\n\n\"Ohhhh, god, Claire. That feels so amazing. You're so damned tight. Your pussy is so fucking tight.\"\n\nI pulled back slightly and pushed in deeper, not far, but every millimeter was completely new to both of us.\n\n\"You're stretching me so big, Danny. I don't know, I don't know. God, it hurts, but it feels so damned good. Push some more. Push some more, please.\"\n\nI was never happier to oblige. I pushed, kept steady pressure on my hips, felt myself penetrating her more deeply, felt her gasping for breath and pushing back against me. Then, I hit a wall. Her cherry. \n\n\"Owwww, stop! Back off, back off. Oh, there, that's better. Wait. Let me do it.\"\n\nShe pushed back against me and I slipped in again as far as I could, then she pulled back and pushed against me. She repeated it, out, in a fraction deeper, out, in a little more, again and again, lubing up the short section of her vagina that had trapped my cock. I let her do the work. She thrust down on me a little harder.\n\n\"Owwww, ohhhhh, shit that's good.\"\n\nShe pulled up and thrust down on me again. I was starting to lose it. I tried to think of something else besides her tight wet pussy, her creamy round ass, her full tits, and my throbbing cock inside the vise-grip of her sex.\n\n\"Ohhhh, better.\" She pushed down harder and something changed. \"Better.\" She backed off and thrust on me again. \"One more ought to do it.\" She backed off and stopped.\n\n\"When I say go, push into me as hard as you can. Ok?\"\n\n\"Are you sure about this? Do you know what you're doing?\"\n\n\"I know, Sweetheart. I know exactly what I'm doing. I'm going to fuck your brains out. Now, Go!\"\n\nI wasn't quite ready, but she thrust back hard and I responded. She yelped, cried out, and most of my cock disappeared into her sweet pussy. I withdrew a bit and pushed harder, through an impossibly tight canal until my hips were crushing her ass cheeks. Then I stopped.\n\n\"God, damn, I'm so full, so full. I think I feel you pressing against my throat. Oh my God, Danny. Is this real? I hope this is real. I hope this is really happening. Fuck me, Danny. Fuck me please!\"\n\nI started up with the ancient music, the rhythm that men and women have shared since the beginning of time. I felt drunk. I felt possessed. I started pounding myself in and out, her ass slapping with every thrust, my cock feeling like it had grown bigger than ever before. \n\nThen I slowed down. Stopped. This wasn't right.\n\n\"Why are you stopping?\" she pleaded.\n\n\"I want to see your face while I'm fucking you. I have to look into your eyes, Claire.\"\n\nI pulled out of her and we quickly stripped her out of her skirt and blouse. She laid on her back, bend her knees, spread her legs wide, held out her arms, and pulled me into a deep and tender kiss, a lover's kiss, a kiss for making memories. We kissed for a long time, then looked into each other's eyes and grinned like fools.\n\n\"You're sure?\" I said.\n\n\"I'm so sure, so completely sure.\"\n\nI reached down and guided my hard dick to her entrance. She held my gaze as I pushed into her. Her eyes grew big, but she didn't close them, she didn't glance away. I pushed and her pussy opened, stretched, invited me in, offered me more, led me down into the unexplored cavern of her love, and I let myself sink all the way in until her bush and mine were crushed together. I drew a nipple into my lips and twirled my tongue around it while I started a slow, deep rhythm with my hips. Her knees were drawn back, which let me sink even farther into her. She grabbed my ass cheeks and began pulling me hard against her. Pretty soon I was pounding her, and with each push to the depths I brushed my pubic bone against her clit. \n\nShe met my thrusts with her own. She pushed up against me with her hips and moaned at all the new and intoxicating sensations and sounds. \n\n\"Oh, Danny. Oh, just keep doing that. I'm on fire again. Danny, Danny, Danny. Fuck me, please. Fuck me. Oh, god, oh, baby. I'm going to cum again.\"\n\nI was really out of control by that time. I knew I couldn't hold out much longer, I didn't want to hold on, I needed release, I couldn't stop, I pounded her sweet pussy with all of my strength. But warning bells were going off.\n\nSomehow, she sensed it.\n\n\"It's ok. I can't get pregnant right now. I'm safe. Cum in me, Danny. Fill me up with your cum. Please. Oh, god, Danny, I'm there. I'm cumming. Please cum with me. Oh, shit! Ohhhhh, ohhhhhhhhhhh.\"\n\nHer pussy squeezed my cock, her hips pounded into mine, her whole body shook like an explosion had gone off in the next room. I thrust into her once more and let myself go.\n\n\"Uuuuuuuhhhhhh. Unnnnggggh. Claire, Claire, uhhhhhnnnggh.\"\n\nI started pounding her again as jet after jet of my cum pulsed deep inside of her, mingling with her nectar, flooding her, overflowing her, squeezing out of her all around my hard cock. I kept thrusting and shooting my load, and for a moment I wondered if it would ever stop. \n\nBut it did, of course. I slowed my pace as my orgasm subsided, dropped my full weight onto her, and panted into her neck. \n\nI was wiped out. But then I realized that she couldn't breathe, so I forced myself up onto my elbows to give her some room. Her chest was heaving, we were both covered in sweat, we were dazed, floating in some kind of post-passion stupor, our minds blank, just the sensations of that blessed release glowing, warming, pulling us together. \n\nWe looked into each other's eyes. She was aglow. Her eyes had a softness about them, a tenderness, something brand new. She reached up and touched my cheek, brushed the hair out of my face, and ran her teeth over her bottom lip as she seemed to be memorizing my face.\n\n\"You're a wonderful man, Danny. So full of love, so generous, so sensual. You rock me to my very soul. I know what I said before, about being a virgin. But then, I didn't want to be a virgin anymore, and I only knew of one man I wanted to take that from me. No, that's wrong. I only knew of one man I wanted to give that gift to. And oh, Sweetheart, you did not disappoint. I'll never forget this. Nothing will ever top this. No matter what happens in the years to come, I'll never, ever forget how beautiful and sensual and feminine you made me feel tonight.\" \n\nI kissed her forehead. I kissed her nose. Kissed her cheek.\n\n\"I don't have any words, Claire. You've made me deliriously happy. You're such a beauty, such a delight, such a complete woman. Such an incredible friend.\"\n\nShe smiled. \n\n\"Oh, Danny boy. I think I'm addicted to you. And I think I'm ready to do this a few more times before the sun rises.\"\n\nWe laughed together, our lips came together, we held each other tight, and neither of us went back to sleep.\n\n***\n\nThis is the last of 3 installments about Claire and Danny. These stories are works of fiction and are entirely the product of my own fevered brain. Any resemblance between persons living, dead, or otherwise is purely coincidental."
    ],
    "authorname": "HighPlainsEros",
    "tags": [
        "cunnilingus",
        "virgin",
        "oral",
        "oral sex",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/claires-invitation-pt-03"
}