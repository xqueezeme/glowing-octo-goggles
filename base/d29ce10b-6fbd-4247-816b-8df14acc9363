{
    "title": "Lady in Red Pt. 02 Ch. 14",
    "pages": [
        "Gwen watched Steve dive into the icy waters without any apparent hesitation. Then, as her dress pooled at her feet, she kicked off her heels and headed for the river. Ashley was calling to her, but Gwen's attention was on the scene in the river.\n\nA man in a suit had climbed out of the helicopter and was trying to swim to shore. Although it was only about a hundred yards, Gwen could tell the man would never make it. He was using only his left arm, and quite awkwardly. Gwen was surprised when she saw Steve swim out around the man and continue toward the rapidly sinking helicopter. \n\nIt occurred to Gwen that Steve had somehow determined that there were more people in the aircraft and he was intent on rescuing them. Then she felt the sudden shock as she dove into the frigid waters. Chilled to the bone, she quickly surfaced and swam strongly toward the man that had exited the chopper. By now he was having a very difficult time. He flailed weakly as his head dropped below the surface and then reappeared. This happened several times before Gwen approached him. Then, as she drew near, he went under and did not return to the surface.\n\nGwen dove and quickly found him. She grabbed his jacket by the collar and pulled him to the surface. By this time, her limbs felt numb and her teeth were chattering, even as she exerted herself tremendously. Taking a deep breath, Gwen began pulling the man back toward shore. As she swam, she saw Steve dive at the point where the helicopter had just submerged.\n\nShe knew she had to get back to shore, and soon, or she'd never make it back. Knowing she was unable to help Steve, she prayed that he would manage without her. It became increasingly difficult for Gwen to make her arms respond. They felt like lead weights. Gwen became concerned about getting back to shore as the seconds passed. She was moving slower and with much greater effort.\n\n\"Let me take him, Miss,\" came a strong male voice from behind her just before an arm reached out and grabbed the collar of the man she had been pulling. \n\nGwen released the man and turned in the water. She saw a policeman standing in chest deep water as he worked his way toward shore, towing the man that she had helped. Gwen tried to stand, but her feet were numb! She knew they were on the bottom, but had difficulty feeling anything. Walking was almost impossible.\n\nSuddenly, strong hands grabbed on one of her arms and guided her back to shore. She hadn't seen the second man until she felt his hands on her arm. She had a chance to quickly study him as he led her from the water. He was very poorly dressed and looked extremely unkempt. His wore a beard and his coat was ragged and torn in several places. Regardless, Gwen was extremely grateful that he was there and helping her.\n\nOnce she reached waist deep water, the man released her arm, but remained close, making sure that she was going to be able to escape the frigid waters. For the first time, Gwen noticed dozens, and perhaps hundreds of people standing along the shoreline. Many had their phones in their hands and were videoing her approach to land. When the water was below her knees, several men splashed out to help her climb the river bank. An older man on shore removed his overcoat and wrapped it around her once she was standing on dry land. Then she turned to see if she could locate Steve. \n\nThe cold water had jolted Steve when he dove into the river. He forced his body to ignore the shock and began swimming strongly toward the crashed helicopter. Unlike Gwen, he had a very good idea who was inside the stricken craft. He had seen Amber Stahl and Bill Hardy doing interviews outside the Capitol Building after Congress had been adjourned. He also noticed the chopper sitting in a cordoned off grassy area a hundred yards away at the time that Gwen had spoken to her family and promised to join them after meeting her new staff. \n\nAs he swam, he saw Bill Hardy plunge into the water before the machine sank from sight. Steve quickly made the decision to circle Hardy and try to find Amber. His reasoning was that Hardy was on the surface and would be easily seen by others that would surely be rushing to render aid. Amber had not exited the chopper and that concerned Steve greatly. The aircraft disappeared from sight just a few yards in front of Steve, so he took a breath and dove down. He quickly reached the chopper as it slowly descended. \n\nOne glance told Steve that the pilot was dead. His head was bent at an unnatural angle and blood streamed from his severed throat. Inside he found Amber still held in place in a back seat by her lap belt. Her forehead had some blood seeping from it and she was unresponsive. He quickly unbuckled her and headed upward.\n\nHe broke the surface and drew a deep breath as he looked to determine the nearest land. It was immediately apparent that he had to go back toward the parked limo. He held Amber with one arm and began swimming strongly toward the shore. As he swam, he thought about Hell Week and how much he had hated it. Then he almost smiled as he realized how well it was serving him at that very moment. \n\nThe water was frigid, but he ignored it. He concentrated on the girl he held in his right arm as he pushed hard for shore. He would glance back after every ten strokes to locate his landing spot and to determine when he was close. He knew when the water was shallow enough to walk and swung Amber into both arms as he felt bottom. He then trudged slowly toward shore. As the water became waist deep, several bystanders approached and offered to take Amber from him. Steve simply shook his head and kept walking. \n\nSteve took in the scene as he stepped out of the water. Gwen was standing just to the side with Ashley. She was soaking wet, but wrapped in a warm trench coat and appeared to be doing well. Bill Hardy was sitting on someone's coat with another coat draped over his shoulders. He was complaining bitterly about how much his arm ached and how long the ambulance was taking to arrive.\n\nA couple of bystanders removed their coats and placed them on the frozen ground. Steve gently placed Amber on the clothing and felt her throat for a pulse. Feeling relief that she had a strong one, he bent down close to her mouth to determine if she was breathing properly. She had spittle and mucous around her nose and mouth, but her breathing was regular. Then the sirens became very loud as ambulances drove along the grassy shoulder of the jammed highway and stopped just yards away.\n\nSoon, two paramedics were at Amber's side, so Steve stepped back to allow them room. They quickly placed her on a backboard and then on the gurney and strapped an oxygen mask over her mouth and nose. Then they moved her toward the ambulance, loaded her, and took off along the grassy shoulder to a point where the ambulance could access the highway.\n\nSteve turned to see another crew treating Bill Hardy. He was uncooperative and still complaining about the pain and the lack of haste demonstrated by the paramedics. Steve didn't even try to conceal his contempt for Hardy as he made his way over to Gwen and Ashley. \n\nBoth women were shivering as they watched Steve approach. Suddenly, Ashley turned and raced back to the limo, grabbed Steve's clothes from the trunk and his shoes from the ground and hurried back. She knelt in front of Steve and held his pants open for him to step into.\n\nSteve was a little embarrassed by Ashley's actions. Dozens of cameras were recording his every move. Not knowing what else to do, Steve quickly stepped into his trousers and took the waistband from Ashley's hands as she pulled them up.\n\n\"Thanks, Ashley. I appreciate it, but everyone's watching. Just hand me my shirt and I'll slip it on,\" insisted Steve as gently as he could. \n\nOnce Ashley handed Steve his clothes, she went back to the car and returned with Gwen's dress and coat. Steve met her as she approached Gwen.\n\n\"Gwen, if you want to put your dress back on, I'll stand in front of you, Ashley, please stand behind her,\" instructed Steve before speaking to the older man that had obviously loaned his overcoat to Gwen. \"Sir, would you mind standing next to Gwen so we don't have a dozen cameras recording her putting her dress back on?\"\n\n\"Certainly!\" replied the man as he stepped close to Gwen, and then spoke to a woman a few feet to his left. \"Nancy, come over here please, and stand on the other side of Miss Anderson. We're trying to allow her some privacy while she gets her dress back on.\"\n\nThe lady nodded and moved close to Gwen who quickly pulled the overcoat off and held her arms up so Steve could slip her dress over her head. Although he only caught a brief glimpse, Steve could tell that her sexy red bra had become transparent and her nipples were very stiff. Then he helped her smooth the dress out and held her coat as she slid into it.\n\n\"Thank you, Sir, for the use of your overcoat,\" managed Gwen through chattering teeth. \"It helped warm me and protect me from all of those cameras. You're a gentleman. Could I invite you to our little celebration this evening? I was just sworn into Congress and we're having some friends and guests over to our hotel...\"\n\n\"Yes, I'll be there,\" promised the man. \"I know who you are, and what hotel you're in. I was planning on stopping in, but you're invitation seals it. I'll see you then. This was one of the most remarkable things I've ever witnessed. I commend you both for your courage and compassion. You'd better get inside your limo, get back to the hotel and warmed up, Ms. Anderson.\" \n\nBecky had just managed to get a cup of coffee to warm up a little while everyone waited for Gwen, Ashley, and Steve to arrive at the hotel. She sat down next to Kate and Paula at a round table in the big ballroom they had reserved for the party when her cell rang.\n\n\"Hey, Ashley! Are you guys going to get here pretty soon?\"questioned Becky as she smiled at Kate and Paula while they listened to her end of the conversation. \"What? My God! Are they okay? It's freezing out there! Stay on the line while I tell Paula what's happened.\"\n\n\"Ashley says a helicopter just crashed into the river near the road where their limo was. Steve's already swimming out to it, and Gwen's running down to the water in her underwear! Oh, my! Ashley said that Gwen's in the water and swimming out to help some guy that's drowning!\"\n\n\"Turn on the TV!\" insisted Kate to the room in general. \"Gwen and Steve are in another water rescue. It must be on a few stations!\"\n\nAlmost before she finished her sentence, a large screen TV blinked on and everyone turned toward it. The man with the remote went through four channels before he found a station with a reporter on the scene. The view on the screen was obviously from overhead and it was riveting. \n\nA swimmer had just dived and pulled a man back to the surface and started pulling him back to shore. Kate couldn't contain her excitement. \"That's Gwen! She's saving that guy's life. Where's Steve? Where's the helicopter that crashed?\"\n\nSuddenly two bodies bobbed to the surface not too far from where Gwen labored to drag the man back to shore. \"There's Steve! He must have pulled someone from the chopper. Look at him swim. He acts like the cold water doesn't even bother him.\"\n\nThen the scene switched to a camera obviously held on the shore. It showed Gwen handing the near drowning victim off to a policeman and being guided back to shore by a ragged looking man. \n\n\"My God! Gwen may as well be naked!\" observed Paula. \"And she's freezing to death! I hope she gets a coat on right away.\"\n\nAs Paula spoke, an elderly gentleman removed his overcoat and draped it over Gwen's shoulders. Gwen looked back and gave the man an appreciative smile as she pulled the coat tightly to her body and returned her gaze to where Steve was bringing Amber ashore.\n\nEveryone watched in awed silence as Steve placed Amber on the coats that had been placed on the ground. Then the paramedics arrived on scene and took over treatment. A short time later they saw Ashley drop to her knees to hold Steve's pants out for him to step in.\n\n\"Sis sure is helpful, isn't she?\" remarked Becky with a grin as Steve stepped into the trousers and pulled them up. \"Those boxers of Steve's were a little revealing when they were wet. The viewers are getting their money's worth today.\"\n\nOnce again everyone went silent as Steve held Gwen's dress up and slid it over her head while Ashley and an unknown couple stood nearby, so she couldn't be seen by the TV viewers.\n\nSteve took Gwen's arm and steered her back toward the limo. As they were getting in, a reporter began asking them questions. Steve simply shook his head and then climbed into the car behind Gwen.\n\nEveryone in the ballroom suddenly began talking. Gwen had invited the good citizens of her district to the celebration. To that end, Lady in Red Productions had provided a sign-up sheet for people that were willing to ride a bus to the affair in Washington. By the time the deadline for signing up had arrived, Lady in Red Productions had to hire thirteen buses. One bus carried seniors from Sparta High so that they could be part of the celebration.\n\nThe thirteen buses had emptied their riders into the hotel a few minutes before the TV had come to life with the report from the river. The hometown contingent had watched in stunned silence until it became obvious that Gwen and Steve were going to be okay. The citizens of the Spartan Nation were very vocal in their support of their home town heroes. Their pride was very evident as they cheered and clapped their approval as the TV announcers recapped the incredible series of events that had just transpired. The din had barely died down when Gwen, Ashley, and Steve stepped into the lobby of the hotel.\n\nThey had hoped to move quickly to their rooms to change their clothes, but that was not to be. The moment they entered the hotel, they were mobbed by admirers and well wishers. Gwen and Steve were overwhelmed by the number of people that rushed forward to congratulate and praise them. They shook hands and acknowledged as many people as they could as they inched toward the elevators.\n\n\"Okay, folks. We're all extremely pleased to see that Gwen and Steve survived their ordeal, but they need to get to their room to get warmed up and changed,\" bellowed Ted as he, Will, Billy, Jared, Jason, and Charlie gently began moving people back so that the couple could reach the elevators. \"Please give them some time to recover and prepare for the big celebration. We'll start in half an hour or so and look forward to seeing all of you there.\"\n\nAs the men made some room for the group, Paula, Lisa, and Kate closed in on Gwen and Steve and quickly led them to the elevators. \n\n\"What were you two thinking?\" demanded Paula as they rode up to their floor in the elevator. \"You could have drowned in that damn river! Thank God you're alright.\"\n\n\"Mother! Don't even think about complaining about what we just did! Two people would have died if we had simply watched from the shore. You know that isn't the way Steve is, and I hope it isn't me either. I know you were worried and maybe even scared, but don't ever tell us that we shouldn't try to help others in trouble. Amber's become a great friend. She's smart and successful and headed for great things. Steve couldn't forsake her. If he had, he wouldn't be the man I've fallen in love with. He'd be common, or average, which is okay for most men, but not for Steve!\" responded Gwen with considerable emotion.\n\n\"Amber? Amber Stahl? I didn't realize she was on the helicopter. She was the woman that Steve brought to shore? All I saw was that damned Bill Hardy complaining about how slow the ambulances were,\" added Paula contritely. \"I apologize. You two know what you're doing. I was wrong to be upset. It's just that I love you two so much, and if something happened to either of you, I don't know what I'd do. I have to admit that I'm also extremely proud of you both.\"\n\nBy this time, the group had reached Gwen and Steve's suite. He immediately began undressing as he headed for the bathroom. Once he closed the door, he peeled his damp pants off and then dragged his soaked boxers down to his ankles and kicked them off. He turned the shower on for the water to warm up, picked up his boxers, and tossed them into the trash. Suddenly the door swung open as Steve was reaching for a towel.\n\nPaula gasped as she came face to face with a naked Steve. Her eyes darted up and down his amazing physique as the rest of her body froze in place. \n\n\"What's wrong, Mom?\" came Lisa's voice from behind Paula just before she peeked over her mother's shoulder. \"Oh, my! And that's after being in ice cold water for ten minutes or so! You know there had to be some shrinkage. Can you get the towel for Gwen, or would you rather stay and wash Steve's back?\"\n\nPaula was jolted out of her momentary paralysis and grabbed a towel from the stack on the sink counter. \"I'm very sorry about barging in. I didn't realize that you were in here.\"\n\nPaula backed out of the room and closed the door. It was less than twenty seconds later that Steve heard all of the Anderson women break into hearty laughter. He realized that he had somehow managed to lift any tension Paula was feeling and smiled to himself as he climbed into the shower.\n\nSteve had just begun to soap up when he felt hands on his back and he swung around to face whoever was touching him.\n\n\"What? Were you expecting Mom, or hoping it was her?\" laughed Gwen. \"You made quite an impression on her. Lisa said that you weren't even hard and the cold water had taken its toll, but Mom didn't seem to believe it. I think her mouth is still hanging open in shock. She has a new respect for you, and probably for me.\n\n\"How can you stand the water this cold? No wonder you didn't have any trouble in that river. You shower in water the same temperature,\" observed Gwen as she reached over and adjusted the faucets while Steve quickly moved so that Gwen was between him and what he knew would become almost scalding water.\n\nAfter a brief shower, the couple left the bathroom wearing towels. \"Sorry, Mom!\" teased Kate. \"Steve has a towel on and he's way warmer than he was earlier. Maybe you can get it away from him. You won't be sorry!\"\n\n\"I think we've embarrassed Steve enough for one day,\" reasoned Paula as she blushed a bright red. \"We have to find a fast way to fix Gwen's hair. That beautiful perm she had this morning was washed away in the river. Any ideas?\"\n\n\"Gwen is so beautiful, I think she'll look great with her hair done up in a braided bun,\" suggested Lisa. \"We can do that in a few minutes. What do you think, Steve?\"\n\n\"Me? I think she'd be beautiful in an old burlap bag. I'm sure she'll be gorgeous when you're done fixing her hair.\"\n\n\"Now you see why I keep the guy around,\" beamed Gwen as she smiled at Steve.\n\n\"Actually, I saw that reason a few minutes ago,\" replied Paula as she arched her eyebrows several times.\n\n\"Mom!\" cried all three daughters at the same time.\n\n\"I did see him in all his glory that morning I woke up Gwen and him by the pool. Over the years, I'd decided that my memory had somehow exaggerated reality. I realize now that my memory was pretty good,\" laughed Paula.\n\n\"I told you she was impressed,\" chuckled Lisa. \"You never would've let Gwen near the guy if you had known the danger she was in, would you have?\"\n\n\"I certainly wouldn't have allowed Kate to sit on his lap in the hot tub,\" admitted Paula as she openly gazed at Steve's torso.\n\n\"Yeah, the first time I sat on his lap, it threw me right off! It's like sitting on an Anaconda, only way better. And stiffer!\" added Kate as an afterthought. \n\n\"I'll just take my clothes into the other room, lock the door, and get dressed. I'd like to remind you that we're supposed to be downstairs in ten minutes, and that I can hear everything you're saying,\" stated Steve as he shook his head, walked into the adjoining room, and closed the door.",
        "\"You can start helping us with Gwen's hair now,\" quipped Lisa to her mother. \"Don't be thinking about how Steve's naked on the other side of that door. Who knows what he's doing with that monster at this very moment?\"\n\n\"I have a pretty good idea. I think I took the edge off, so to speak, in the shower. He's calmly getting dressed with a big smile on his face,\" smirked Gwen as her sisters and mother broke into hearty laughter.\n\nGwen has dressed and ready to go in less than half an hour. Her mother and sisters were extremely pleased with the way her hair turned out. \"We'll go down first so you and Steve can make a grand entrance,\" explained Paula. \"You're just fashionably late, but Ted sent a text saying the place was pretty full and we need to get down there soon.\"\n\nGwen's family left as Steve and Gwen were on putting finishing touches. \"Would you rather go in alone? You're the one that was elected to Congress. I don't want to steal any of your thunder or anything.\"\n\n\"My darling man, you're in this with me. I know that at least half the people that voted for me did so because they knew you were included in the deal. I want you with me, taking care of me, helping me remember names and faces, and looking like the sexiest man alive. Will you do that for me?\"\n\nFive minutes later, Steve escorted Gwen into the ballroom. A pathway formed down the center of the room with people cheering and applauding as the couple made their way to the small stage. Both Steve and Gwen smiled and acknowledged people they knew as they slowly walked through the crowded room. Paula and Ted stood with Lisa, Kate, Jordan, Jason, Chip and Charlie and Gwen's closest friends and cheered with the best of them.\n\n\"Mom, this is the coolest thing I've ever seen,\" yelled Kate so that she could be heard above the din. \"Gwen looks like a queen, and Steve is such a hunk. Look how everyone loves them!\"\n\nSteve helped Gwen ascend the steps to the stage and then joined her as she made eye contact with many of her well wishers. Gwen was radiant as she pointed to friends and acquaintances. The folks from her Congressional district had set up in front of the stage and their approval was obvious to everyone in the room. It took almost five minutes for the crowd to settle down so that Gwen could speak.\n\n\"Friends, and I hope that you're all my friends, I'm honored and humbled by your support and well wishes. I don't pretend to have any easy answers to the difficult problems facing our country. I don't even understand all of the issues. What I do know is that life is precious. \n\n\"My job is to protect life, to help those in need, to promote good health and a nurturing environment. I want all children to receive the medical care they need. I want our brave, selfless veterans to have the health care they need, and the jobs they deserve. I want this country to once again become self sufficient with a strong economy based on production and American ingenuity. \n\n\"For myself, I want you to be proud of me, to feel in your hearts that I'm doing my very best for this great country. I want to graduate med school and become a good doctor and wife. I want to have a husband and children. I want them to be healthy and safe, as do all parents. I want what all of you want, to grow old watching my kids and grandkids learn and prosper as they work to make the world a little bit better. \n\n\"I can only promise that I will do my best. To that end, I'll rely heavily on the advice and counsel of my support group, my family and friends. But most of all, I will lean on this amazing man next to me to guide, assist, and protect me in my endeavors. You know who he is and you've seen what he's done. I'm here to tell you that you have no idea what he can, and will accomplish in the future. I'm just happy to be part of his amazing journey. Thank you, everyone! Please, enjoy the food and music as we celebrate a new beginning!\" \n\nOnce again, the crowd stomped, clapped, whistled, and yelled its approval. Gwen smiled and waved as tears trickled down her cheeks. It was an extremely emotional moment for her. She thought back to that day at the mall when the tall handsome young man decided to chat with her and then ask her out. She truly felt that it was Steve that made her seem special to so many and she thanked her lucky stars for her good fortune\n\nFor his part, Steve marveled at the ease and sincerity with which Gwen spoke to the assembled crowd. Her talents knew no limits. He beamed with pride as he stood alongside her, convinced that without Gwen and her beauty and intelligence, his life would have been quite average. \n\nOnce it became quiet enough for the orchestra to be heard, the music began. Gwen smiled as she realized Lady in Red was the opening song. Steve gathered her in and to the delight of those in attendance, danced with her on the small stage.\n\nWhen the song was over and Gwen, as well as most of the audience, had managed to stop tearing up, she began greeting well wishers. Steve was at her side as she climbed down from the stage and waded into the crowd. Both Gwen and Steve were surprised at how many people they recognized. It seemed like almost all of Sparta was in Washington.\n\nThey spent a solid hour greeting supporters with handshakes, hugs, and occasional kisses. Gwen was just beginning to feel like she could relax when politicians began approaching her. Senator Chatham was one of the first.\n\n\"Ms. Anderson, you and this fellow of yours are an inspiration to us all. You two represent what we all should be, if only we had your character and moral compass. You've made your hometown very proud, but more than that, you've made your country extremely proud. I thank you for that.\"\n\nWilliam Patterson had driven into Washington with Beatrice, Jen, and Janice. He was standing with Gwen's family as Gwen began greeting politicians.\n\n\"We're watching a master at work. I'm not even sure it was a conscious decision, but Gwen greeted her peers and supporters before any politicians. It showed where she placed the most emphasis, and it was politically brilliant. She's in the catbird seat here in D.C. and these politicians need to curry her favor. She let them cool their heels while she worked on her base, the everyday Joes that work hard, pay taxes, and vote.\n\n\"The Republican and Democratic Parties are having big blow-outs this evening. All of the party faithful are expected to attend, and they will, at least for a while. Tonight is when they begin to jockey for position and for seats on committees and the like. Gwen has no party affiliation and will be placed on the least important committee they can think of. And she'll shine like no other when they do.\n\n\"My contacts tell me that just about every powerful and influential person in Congress will make an appearance here tonight. They're paying fortunes for PR services, and every one of them is being told that nothing will help them more than being on good terms with Gwen and Steve. \n\n\"What we're seeing is unprecedented. A freshman in Congress, along with her Navy boyfriend, is rising to the top in a very difficult city. I'm not sure that President Hanson and the First Lady have more influence that Gwen and Steve. Hanson's a lame duck, but Gwen's star is rising. I predict that if they aren't already, Gwen and Steve will soon be the top power couple in Washington, and probably the world. That's your daughter I'm talking about! \n\n\"I don't know how to respond to that,\" admitted Ted. \"I haven't thought about it in those terms. Paula and I have discussed the two of them frequently. Gwen and Steve amaze us. Look at that little byplay this afternoon. She was sworn into Congress this afternoon and a little over an hour later, she peeled off her clothes and risked her life for a man she doesn't even like. Steve saved Amber Stahl from drowning in freezing water and wasn't even breathing hard, or acting chilled. I've known him for quite a while and he still surprises me with his strength and skills.\"\n\n\"As parents of such an incredible woman, you must be unbelievably proud. I'm extremely proud of Steve, but that often makes me realize what I missed when his mother left us to marry his father. I wasn't a part of his life until he graduated high school. I'll never get that time back, and I'll never forgive myself for it,\" confessed William Patterson. \n\nSecretary Rosen and his wife were the first of the presidential candidates to approach Gwen and Steve. \"You're both amazing,\" gushed Mrs. Rosen. \"We watched that water rescue today on live television. Small wonder you won the election without campaigning.\"\n\n\"Steve, we're getting a handle on the situation at the CIA,\" reported Secretary Rosen. \"It now appears that Parker was using his position to manipulate governments to stay at war, or go to war. He was getting huge payments from international arms dealers. As you know, war is good for the economy, especially for arms dealers. \n\n\"We think it was limited to his department, not that it helped you any in Iraq. Somehow he managed to convince the director to appoint one of his men to lead the search for you. Needless to say, they wanted you to die a horrible death, so hostilities would increase. He'll rot in hell for all eternity.\"\n\n\"Remember your promise that if Vincent was innocent of wrong doing in the fiasco you suffered through in Iraq, you wouldn't come out against him, or for another candidate,\" insisted Mrs. Rosen. \"Vincent will be resigning his position soon to devote full time to campaigning.\"\n\n\"We promised to not be publicly critical if he had no involvement in Steve's troubles in Iraq,\" recalled Gwen. \"We'll stick to that promise.\" \n\n\"I suppose that'll have to do for now,\" acknowledged Mrs. Rosen. \"There are at least five other likely candidates here tonight. They'll all try to get you to support them. Your support is critical and they all know it. Please don't come out for another candidate. If you must, then please let us know as far ahead of time as you can so we can prepare our campaign, although I have no idea how we'd manage that. You two own this town.\"\n\nThe Rosens drifted away to chat with other politicians. Soon other presidential hopefuls were courting Steve and Gwen. In the span of an hour, they had brief conversations with the six most likely successors to President Hanson.\n\nSteve and Gwen once again began dancing with guests. Steve had seen Ms. Walker several times, but had not had the time to speak with her. During a break, he searched until he found her, and then asked her to dance when the music resumed.\n\n\"I noticed that you and Gwen have been spending a lot of time with the people looking to be the next president. I knew you two were special when you were in my class, but I never dreamed you'd become so important in national politics. I'm very proud of you both,\" praised Ms. Walker.\n\n\"Thank you, Ma'am. Any success we've enjoyed is due to your influence, at least in part. You started the hospital drive and that gave us purpose and focus.\"\n\n\"Yeah, but saving toddlers, winning football titles, saving the entire school, why bother trying to mention all the things you've done? We both know you'd have done great if you'd never even met me. \n\n\"I'm here with a busload of seniors and some advisors tonight. I could have brought the entire school enrollment if we had the buses and the chaperones. I kind of promised the kids that I would see that they got to meet with you and Gwen. I know you're busy, but we have some really good students and you know how a few chance meetings can make a huge difference in a life.\"\n\n\"Ms. Walker, you've never asked me for any favors. I'd be glad to meet with the kids you brought. Gwen's been kept busy, but I'll catch her eye and have her join us,\" promised Steve as he and Ms. Walker headed toward her charges.\n\n\"Kids, this is Steve Hammer. Some of you may know him. All of you know who he is and have seen him around Sparta. Steve, these are some of our brightest and best seniors,\" indicated Ms. Walker as she began introducing the students.\n\nSteve smiled as he watched the kids do their best to act mature. They were at the celebration for their Congressional Representative in Washington! Their pride was apparent when Steve began answering questions. A couple of the kids stood out to Steve. One girl was absolutely beautiful, and it was obvious that she knew it. She was very confident and quite flirty. She dominated the first few minutes of their meeting as she described the many wonderful things that she and her friends had accomplished.\n\nSteve managed to catch Gwen's eye and indicated he'd like her to join him. Gwen was delighted when Ms. Walker explained to her that the kids had come from Sparta to witness democracy in action. They were spending the night and touring D.C. the next day before returning to Sparta.\n\n\"Gwen, would you speak to these kids while I dance with one of them,\" asked Steve. \"I find I get to know them better with one-on-one discussions.\"\n\n\"Yeah, that and you like to have pretty girls in your arms. Go ahead while I spend quality time with the group,\" agreed Gwen. \n\nSteve stepped over to a quiet girl sitting in the back and offered her his hand. The beautiful blonde girl that had been holding court was unable to conceal her disappointment and surprise. The quiet girl looked around nervously before taking Steve's hand, while Ms. Walker beamed her approval.\n\n\"I'm Steve and you're Cheryl, if my memory serves me,\" began Steve as he took the shy acting girl into his arms. \"I won't hurt you and I certainly won't do anything to embarrass you, so relax and smile. You don't mind dancing with me, do you?\"\n\n\"Are you kidding? You're Steve Hammer! This is a dream come true. I'm just surprised that you asked me instead of Heather. She's gorgeous, the student body president, and she stars on two sports teams.\"\n\n\"What about you, Cheryl? Are you doing anything interesting? What position do you have in the grade rankings?\" asked Steve as he guided the girl around the floor.\n\n\"I'm second in my class. I'm hoping to study chemistry and biology in college and then go into research. I'll probably take a year off between school and college to earn some more money for school,\" responded the girl as she gradually relaxed. \"We watched you save that news woman on TV today. It's hard to believe that you're able to do so many things. Sparta has become famous because of you, Gwen, and Jordan.\"\n\n\"What college will you attend? Did you apply for scholarships? Do you have family in Sparta?\" asked Steve as he changed the subject back to the girl.\n\n\"I've been accepted to Duke, but I'll probably go to a state school. They're a lot cheaper. I live with Mom and Dad and my three brothers on Maple Street. I've been promised a couple of small scholarships at state schools, so I'll probably go to one of them.\n\n\"Mom recently got a good job with your company. She's a manager in the factory where they make the Lady in Red clothes. Dad's been working pretty steady the last couple of years in construction. He works for Anderson Brothers. They've been getting a lot of the contracts to build stuff for your company. Mom and Dad say that Lady in Red has saved Sparta, and it's especially saved them,\" explained the girl.\n\n\"That's really good to hear,\" responded Steve. \"But why is it that you don't have the funds to go to school next year if your folks have good jobs? And why not to Duke, if that's where you want to go?\" \n\n\"My little brother was real sick for a few years and my parents spent most of their extra money taking care of him. My brother and I have part time jobs to buy our clothes and stuff. Mom and Dad are just beginning to get a handle on their debt. We're doing okay and my little brother is healthy now, so things are a lot better,\" answered the dark haired girl.\n\n\"Would you stay and dance another dance with me,\" asked Steve when the music stopped. He found the girl's story extremely interesting and the longer he held her in his arms, the more she smiled and the prettier she became.\n\n\"Of course! You're really being nice to me. I know you're rich and have beautiful women around you all of the time and that Gwen Anderson is your girlfriend, but it's really nice to be with you for a little while,\" smiled the girl before she suddenly got a worried look on her face.\n\n\"You don't think I'm going to have sex with you, do you? I can't do that. I've never done it and I promised my mom that I wouldn't do anything stupid on this trip. If that's what you're thinking, maybe I should go back to my classmates,\" suggested the once again nervous girl.\n\n\"Cheryl, I don't cheat on Gwen. I never have sex with other girls. I'd never try to seduce you like that, although you're very pretty and have a lovely figure. I promise you that I'll be a gentleman. Just finish the dance with me and I'll take you back, okay?\"\n\n\"I'm sorry that I was so suspicious. It's just that guys never ask me to dance. I'm not popular in school. I'm teased about being so smart and studying all of the time. I'm not good with boys, and I just made a fool of myself,\" worried the Spartan senior. \n\nThe music ended, but Steve held the girl a little longer. \"You remind me of Gwen. You're far prettier than you realize. You're smart, honest, and hard working. Can Gwen and I visit you when we're in Sparta?\" asked Steve as he turned to lead the girl back to her classmates. \n\n\"You and Gwen? Of course, but we only have a small house. It isn't a big mansion like you're building up by the lake. Mom would be so proud if you did stop in. But why would you?\" asked the confused girl. \n\n\"I'd like to get to know you better and I'd love to meet your parents,\" replied Steve.\n\n\"They're standing right over there, watching us like hawks,\" grinned the girl. \"I'll introduce you to them right now, if you aren't afraid of my father.\"\n\n\"Does he look angry?\" asked Steve as the girl led him toward her family. \"I don't want to get worked over by an upset father on Gwen's special night.\"\n\n\"Mom, Dad, this is Steve Hammer. You probably heard of him in Sparta. Steve, this is my mom, Betty Baxter. This is my father, Dan Baxter. Steve wanted to meet you for some reason, as long as Dad isn't angry with him for dancing with his only daughter.\"\n\n\"I can see he's really nervous,\" laughed Betty as she shook Steve's hand. \"We've seen you around town quite a lot, but we've never met. I'm a little curious how Cheryl wound up dancing with you, instead of Heather. She's beautiful, and she won't hesitate to tell you she is, and you don't even have to ask.\"\n\n\"Truthfully, I think Cheryl's extremely attractive. She reminds me a great deal of Gwen. That's why I asked her to dance. I found out that she's smart, a very good dancer, ranked high in her class, and is very serious about her future,\" added Steve. \"She mentioned that she's been accepted to Duke, but lacks the money to attend this fall.\"\n\n\"We had some setbacks and then the economy went to hell in a hand basket,\" admitted Dan. \"Cheryl's been an excellent daughter and we intend to help her all we can. We just have to clean up some outstanding debt first. We're both working good jobs now and things are looking up.\"\n\n\"That's why I wanted to speak with you. I think Lady in Red would be very interested in funding Cheryl's undergraduate studies. Would you be willing to talk to our people about it?\" asked Steve.\n\n\"You'd do that for her? She's not going naked in your movies, or on vacation with you. If that's what you're thinking, then...\" managed Betty before Steve interrupted her.\n\n\"I don't know why you and Cheryl think I'd try something like that, but I never would. She's a special person and we'd like her to work for Lady in Red when she's out of school, but there'd be no obligation, especially not anything sexual,\" concluded Steve without totally concealing his annoyance.",
        "\"But why would you do this for her if you're not asking for anything in return?\" demanded a suspicious Dan. \"We're both having a little trouble accepting this turn of events. No one's ever done anything like this to help us.\"\n\n\"I understand you're skepticism, but we like to invest in the future, and Cheryl certainly has a bright future. Just speak with our representative and listen with an open mind,\" urged Steve. \"May I have one last dance with your daughter before I return her to her friends?\"\n\n\"We just need to remind her to be careful and stay out of trouble. Her class is staying the evening and touring the city tomorrow. We're taking the bus back tonight,\" stated Betty. \"I want you to know that we're extremely proud of you and Gwen. You've made Sparta a household name, and it's a good one. Thank you for taking the time to speak with us and for being so kind to Cheryl, and I'm sorry if I seemed overly suspicious.\"\n\nSteve danced one more song with Cheryl before he returned her to her friends. They had been talking with Gwen, but it was obvious that they all were well aware that Steve was dancing with their classmate. Steve introduced her to Gwen when they rejoined the group. \n\n\"Gwen, this is Cheryl Baxter. Cheryl, this lady is Gwen Anderson,\" introduced Steve as he watched the two women standing together.\n\n\"Hello, Cheryl. No matter where we go, Steve always finds the most beautiful girl in the room. He's a great dancer, isn't he?\" smiled Gwen as she took Steve's arm and squeezed it tightly to her chest.\n\n\"He's amazing,\" agreed Cheryl. \"I know I'm not beautiful, but thanks for saying that. I can't tell you how much I admire you and all of the things you've accomplished. You were amazing today when you rescued that Bill Hardy.\"\n\n\"Thank you for the compliment, but what are you saying about not being beautiful? Steve, did you forget to mention to Cheryl how pretty you thought she was? That's not like you.\"\n\nSteve had been watching Gwen and Cheryl interact. He couldn't help but think how much Cheryl reminded him of Gwen when he first met her. \"I told her that she reminded me of you, and I can't compliment a woman any more than that.\"\n\n\"That's a compliment for me,\" responded Gwen as she studied the girl more closely. \"I can see some similarities, but you think that she reminds you of me, when we first met?\"\n\n\"I was wondering if you or Steve would see that,\" chimed in Ms. Walker. \"I've noticed it from the first day I had her in class. When Steve picked her out to dance with him, I knew he saw it, too. It's not just her looks, but her demeanor and attitude. You were very shy and unassuming in high school, at least before you teamed up with Steve to become the successful woman you are today.\"\n\nThe other kids were listening to the conversation quite closely. It was obvious that they were seeing Cheryl in a new light. At that moment, Ashley hurried up to speak to Gwen.\n\n\"President Hanson has just arrived! He's looking for you and Steve,\" reported Ashley with excitement and pride.\n\n\"Excuse me, everyone,\" apologized Gwen as she took Steve's hand. \"I can't be rude to the President. Thanks so much for coming and good luck in the future!\" \n\nPresident Hanson had several of the more important members of government standing near him when Gwen and Steve approached. Steve chuckled to himself as Gwen simply brushed past the fawning politicos and warmly embraced President Hanson. Hanson grinned at Steve as he wrapped his arms around Gwen while Steve stood at attention and saluted.\n\n\"It isn't my fault! She's hugging me,\" pointed out President Hanson as he pretended to be worried about Steve's reaction. \"Gwen, I watched you and Steve on TV this afternoon. You constantly amaze me. You're great examples for the youth of the country. Actually, you're great examples for all of us.\"\n\nOnce President Hanson indicated to Steve that he could be 'at ease', Steve smiled and shook the hand of Mrs. Hanson. As he did so, he detected the relief on the faces of both the president and his wife. Much had been written and reported about the lack of government control over the rogue element of the CIA. Many reporters wondered how it would affect Gwen and Steve's close relationship with the president. Gwen's hug gave the president the answer he sought.\n\nThat's when Gwen noticed the man standing to the right of the president. \"You came! I'm so happy you took the time. I want to thank you again for loaning me your overcoat this afternoon. That was very gentlemanly.\"\n\n\"Most of the members of the Supreme Court are gentlemen, unless they're ladies,\" offered President Hanson. \"Perhaps you didn't recognize Justice James Hamilton? He witnessed your heroics in person this afternoon.\"\n\n\"It's good to meet you, Sir!\" blurted Gwen as she stepped up to Justice Hamilton and hugged him warmly. \"It was a very nice thing you did for me today and I really do appreciate it.\"\n\nGwen then noticed Mrs. Hamilton smiling broadly, so she immediately hugged her. \"Mrs. Hamilton, thanks so much for helping to shield me while Steve helped me put my dress back on. I must have looked a sight!\"\n\n\"My Dear, you were truly a sight, and one that my husband is not going to soon forget. All of the other men present were rather upset when James offered you his overcoat. You were an absolute vision,\" praised the older woman.\n\nGwen chatted briefly with Justice Hamilton and his wife before they excused themselves to speak with a Senator. Gwen turned back to President and Mrs. Hanson. \n\n\"Could you both come with me?\" asked Gwen. She then took the president and first lady by their hands and led them toward the contingent from Sparta. She stopped by the group from her high school first.\n\n\"Mr. President and Mrs. Hanson, these are students from our high school in Sparta,\" indicated Gwen as she began introducing President and Mrs. Hanson to the kids. Steve was amazed that Gwen was able to remember all of the names after hearing them just a few minutes earlier.\n\nIt was quite evident that the students were awe struck by meeting President Hanson. They flashed big grins even while they shook Hanson's hand nervously. Once all of the students had met the president, Gwen took him and his wife over to meet the folks from her home town.\n\nWilliam Patterson was practically stuttering as he whispered to Ted and Paula. \"Gwen's leading President Hanson and his wife around like school kids! She's in total control of the situation without seeming rude or pushy. Look how pleased the Hansons are to meet her constituents. Now look at the other politicians watching her. They're stunned. They wish they'd been able to introduce the president to their voters. Your daughter is polite but confident, and people respond to her. There are no limits for that girl!\" \n\nThe Sparta contingent beamed with pride as their freshman representative introduced them to President Hanson. It simply solidified their already very positive feelings for Gwen. Then Gwen led the first couple over to her group of personal friends to introduce them.\n\n\"Gwen, people are often judged by the friends they keep,\" observed President Hanson as he looked over Gwen's personal entourage after being introduced. \"You have the most impressive group of friends I've ever encountered. These young men are accomplished and very capable, while these ladies are beautiful and extremely intelligent. You certainly attract good people, starting with your Lieutenant Hammer. You already have Washington eating out of your hand, and this is only your first day in office!\"\n\nGwen was beaming with pride at the president's words when she noticed Ashley hurry toward the entrance of the large room. Looking ahead to Ashley's apparent destination, Gwen saw the same poorly dressed man that had assisted her from the frigid river earlier in the day. It appeared that the man had a small child with him and that hotel security was barring his entrance. Gwen quickly excused herself and headed after Ashley. \n\n\"You need to allow this man inside right now!\" demanded Ashley as she hurried to confront the two security men. \"He and this child are most certainly welcome! Step aside and let them enter.\"\n\n\"Ma'am, the President is here. There's no way we're letting homeless people into the same room. You handle the politics and we'll take care of the panhandlers,\" assured the bigger of the two men as he took Ashley's arm and tried to lead her away from the confrontation.\n\n\"Remove your hand from Ashley, immediately!\" demanded Gwen as she took in the scene in a glance. \"You're on very thin ice, and if you persist, you'll find yourself looking for a new job.\"\n\n\"I'm just following instructions,\" insisted the man as his hand remained on Ashley's arm. \"She was interfering with the security of President Hanson, as well as your own safety, Ms. Anderson. That man and the kid can't be allowed into an event like this. It wouldn't be long and we'd have all sorts of trash trying to get in. You ladies need to go back to socializing and let us decide who's allowed in and who isn't.\"\n\nBefore Gwen was able to reply, Steve pressed up very close to the man and spoke in a very low, forceful manner. The big security man turned a sickly pale as he released Ashley's arm and hastily left the room.\n\nGwen simply looked into Steve's poker face briefly before smiling at him. \"You sure have a way with words. I've noticed that whenever you talk all low and raspy-like, men seem to decide to leave the area in a hurry. Come on with me to welcome this man!\"  \n\nAs soon as Ashley had been released by the burly security man, she rushed to catch the man with the child before he was lost from sight as he headed back toward the exit.\n\n\"Sir! Please come in! I apologize for that unfortunate reception. It didn't reflect Gwen Anderson's methods, or attitude,\" managed Ashley as she took the man's hand and then reached down with her other hand to the child. The little girl looked at her hand, then at her father's hand being grasped by Ashley, and placed her hand inside Ashley's. \n\nGwen and Steve came upon them as Ashley led them into the ballroom. \"Thanks, Ashley. Steve, this man was a tremendous help this afternoon. I had pulled Hardy to shore and a policeman took him from me, but my feet were numb. I couldn't feel the ground under my feet. This gentleman was up to his chest in water when he took my arm and escorted me back to shore. Once the water was ankle deep, all sorts of chivalrous guys rushed out to help me.\"\n\n\"Sir, anyone that helps Gwen does me a favor,\" stated Steve as he put his hand out and shook with the other man. \"I don't forget them. I'm Steve Hammer. I haven't heard your name.\"\n\n\"It's Richard Drake,\" responded the shabbily dressed man as he shook hands and grinned at Steve. \"You don't have to tell me who you are. Everyone knows you and Ms. Anderson, as well as your friends.\" \n\n\"Who is this lovely little girl?\" asked Gwen as she squatted down to the same level as the young girl. \n\n\"I'm Ingrid. Mom died last year,\" responded the small, thin blonde girl as she looked from Gwen to Ashley. \"She was pretty, like you and this lady. Daddy said we could come here and see some famous people and get something to eat.\"\n\n\"Ingrid!\" sputtered her embarrassed father. \"You don't tell people things like that!\"\n\n\"Well, Sweetheart, you sure came to the right place!\" insisted Ashley as she scooped the girl up. \"We'll go over to the buffet and get something to eat. Do you like chicken, steak, potatoes, any vegetables?\"\n\nGwen noticed Richard Drake's discomfort and decided to try to set him at ease. She took him by the hand and started after Ashley. \"Come with me and we'll get something to eat. Then I want you to tell me how you came to be at the river this afternoon and how you realized I needed help. I thought I covered it up quite well.\"\n\nSteve simply smiled and shook his head as everyone in the room watched Gwen as she graciously welcomed the poorly dressed man to her affair. She had just been speaking to the President of the United States and now she was warmly chatting with a man obviously in need.\n\n\"Isn't that the man that helped Gwen out of the river this afternoon?\" asked Becky as she stood with the Andersons and watched her sister fawn over the small child while Gwen was extremely attentive to the girl's father.\n\n\"You're right! I have to thank him,\" announced Paula as she started over to Gwen, followed by Lisa, Kate, and several friends.\n\n\"Thank you for helping my daughter out of the river today!\" praised Paula as she gave the surprised man a hug. If Paula's hug caught him off guard, he was soon totally flabbergasted as one beautiful woman after another gave him a warm hug and a sincere 'thank you' for helping Gwen. \n\nMs. Walker was speaking to the students from her school as they watched the interaction between the ragged looking man and Gwen's entourage. \"That's why Gwen was elected to Congress and why she has so many important people here at her celebration. Every person is important to her. All lives matter. I overheard that he's the man that helped her out of the river after she saved Bill Hardy's life. He was on TV for a short while as he helped her ashore, but I had forgotten what he looked like, but not Gwen. She'll make certain that the man knows just how much she appreciates his assistance.\"\n\n\"Oh, my God!\" mumbled one of the senior boys as his jaw dropped when a stunning blonde woman entered the room and made her way toward Steve. \n\n\"Steve! It's so good to see you. I just arrived in time to see you and Gwen on the TV monitors in the airport. You're such a brave man. You're a true American hero!\" praised Nadiya Misko as she kissed Steve soundly on the lips before hugging him tightly. \"Gwen is in politics now? I don't know how she does it all. I'll be going to the premier tomorrow night, even though I wasn't able to appear in the movie.\n\n\"You're always on the news in Ukraine. The hospital looks magnificent. I'm told it should be open by the spring. Will you be coming to Kiev for the grand opening?\" asked the beautiful blonde while photographers circled the couple, snapping pictures.\n\n\"Yes, we'll be there!\" responded Gwen as she tugged Nadiya from Steve's arms and warmly embraced her. \"I hear that your dad has a lot of influence with the government these days. I'm so glad that cooler, wiser heads are prevailing.\"\n\n\"Father will be so glad to hear that you feel that way. He still speaks of that night in Moscow when you danced with him, twice! My mother just smiles and reminds him that Steve was very attentive to her as well.\n\n\"The hospital has been a godsend already. The construction brought many jobs to our city and when it opens, there will be many people with steady employment, not to mention all of the sick and injured children that will be treated and cured. I have to thank Jordan and Charlie, too. You four are heroes in Kiev and all of the Ukraine,\" gushed Nadiya as she remained close to Gwen.\n\n\"Come and visit President Hanson for a minute,\" invited Gwen as she took the blonde woman's hand and led her toward Hanson. Nadiya quickly grabbed Steve's hand with her free one and the trio made their way to where President Hanson and his wife were seated.\n\n\"Sir, you remember Nadiya Misko, don't you?\" asked Gwen. \"Her father is very influential in Ukraine politics and government. She's very active herself, although she tries to use the 'dumb blonde' routine quite often.\"\n\n\"Of course!\" replied President Hanson as he shook the blonde beauty's hand. \"Your father has been a very stabilizing influence in the government. Steve will be going to Hungary later in the month. Maybe he'll be able to stop in Kiev and meet with your father?\"\n\n\"Steve might come to Kiev? I am certain that my father will see him,\" promised Nadiya. \"I will personally take him home so Papa will have no choice!\"\n\n\"I'm not sure that Steve will be available for that particular trip,\" interrupted Gwen with a smile. \"He's promised to straighten out his sock drawer and that may be the week he'll be undertaking that task.\"\n\n\"What?\" asked a visibly upset Nadiya. \"He was socks to worry about and cannot come to Kiev?\"\n\n\"I think Gwen may be teasing you,\" opined President Hanson with a grin. \"It's my guess that you appeared a bit too eager to welcome Steve to your country, so she's asserting her influence with Steve.\"\n\n\"That was a joke? I appeared too eager to welcome Steve?\" laughed Nadiya. \"Gwen is so jealous. I steal her boyfriend all the time. She's used to it. Besides, when he is ordered by his President, he cannot disobey so that he can do things to his socks. If you ordered him to be especially nice to important Ukraine girl, he would have to follow your orders, would he not?\"\n\n\"I'm not even going to comment on that,\" laughed Hanson. \"It looks like you'll be collecting combat pay, Lieutenant Hammer. I'll be interested in hearing how your trip goes. We want to maintain good relations with all of our friends in Eastern Europe.\"\n\n\"There, Gwen. You heard your president. He wants Steve to have good relations with Eastern European friend. That would be me, and it will be very good!\" asserted Nadiya as she possessively pulled Steve's arm to her ample chest.\n\nFor her part, Gwen simply stared at Steve until he pried Nadiya's hands off his arm and moved closer to Gwen. \n\n\"Hero is afraid of girl in red dress?\" asked Nadiya as she arched her eyebrows and acted surprised. \"What have you done to this man? He is under a spell or something. We still have practicing witches in Ukraine. We will have one remove the spell this woman has cast upon the poor man.\"\n\n\"I'm afraid that spell is stronger than any magic you may be able to find,\" stated Steve confidently. \"Besides, if I'm happy with the spell, why would you want to remove it?\"\n\n\"Have you not looked into a mirror?\" questioned Nadiya. \"You are strong, handsome, brave, wealthy, kind, and loyal. That's the ideal man, in any country. Gwen is very selfish.\"\n\nMany people were watching the byplay between Gwen, Nadiya, Steve and President Hanson. They could almost guess what was being said by the way Steve removed himself from Nadiya's strong grip and moved closer to Gwen as President Hanson and his wife laughed quite heartily.\n\n\"Look how comfortable Steve and Gwen are with the President of the United States!\" proudly pointed out Ms. Walker to her students. \"You're seeing history tonight. I'm sure you all watched the movie that Gwen starred in about the making of a queen. Now you're seeing it in real life. The most influential and powerful politicians and leaders in the country are here this evening, paying tribute to a rising star. They can see the influence that Gwen and Steve have, and they're trying to curry their favor. The face of politics in this city is about to change.\"\n\nPaula, Ted, and the rest of Gwen's family and friends watched the interaction between President Hanson, Nadiya, Gwen, and Steve with equal amounts of pride and amazement. \n\n\"Sis is joking with President Hanson, and he's laughing!\" exclaimed Kate to the others. \"This isn't something rookies in Congress usually do, I'm sure. Steve and Gwen are becoming totally awesome. They have the ear of every important person in the country. Oops! It looks like I should have said every important person in the world!\"\n\nAs Kate had been speaking, Vlad Novokov had entered the ballroom with Anna Chekov. They briefly looked around until one of their security people pointed to Steve and Gwen still chatting with President Hanson and his wife. The couple made their way across the floor toward Gwen and Steve.\n\nSteve broke into a big smile as he shook hands with Vlad and then hugged Anna. \"Vlad! It's great to see you! Thanks so much for coming to our little celebration. Anna, you look stunning.\n\n\"President Hanson, Mrs. Hanson, this is Vlad Novokov and his beautiful fianc\u00e9, Anna Checkov,\" managed Steve as the two men shook hands. \"This lovely lady next to me is Nadiya Misko.\"",
        "\"It is good to see you all again. We have met before, but it's always good to have memories refreshed,\" responded Vlad as he politely shook Nadiya's hand, and then Anna did the same. The rather cool greeting reminded Gwen that Ukraine and Russia weren't on the best terms.\n\nAfter some small talk, Gwen excused herself and led Anna and Nadiya back to her family and friends as Steve and Vlad spoke with President Hanson. Her friends knew of the strained relations between Russia and Ukraine and quickly surrounded the two young women and began separate conversations, keeping the two women busy and separated. Soon they were all laughing and enjoying themselves.\n\nMeanwhile, Ashley was still spending time with Richard Drake and his daughter. \"Mr. Drake, would you come to our premier party tomorrow night? It'll be right here and begin around eight. You helped Gwen when she needed it and she always repays kindnesses.\"\n\n\"I don't think that would be a good idea,\" replied the man softly and with some embarrassment. \"I have to care for Ingrid, and it's painfully obvious that we don't have the right clothes for an event like this. I probably shouldn't have come, but Ingrid's been asking about the beautiful woman I helped out of the river. I wanted her be able to tell her kids and grandkids that she had the opportunity to meet Gwen Anderson. We should be going.\"\n\n\"I don't know how to say this tactfully, so here it is. I'd be happy to go shopping with you tomorrow to get some new clothes for the premier. It's the least we can do for you,\" reasoned Ashley.\n\n\"I understand you have good intentions, but I can't accept charity. Ingrid and I are doing just fine,\" replied Drake icily.\n\n\"Are you? Look at your little girl. I mean really look at her! She's much too thin, her dress is too small, and she needs a bath. I can understand a man being proud, but it's wrong when stubborn pride harms a child!\" responded Ashley with some heat. \n\n\"You think getting some clothes will solve my problems, or put weight on Ingrid? I'm doing the best I can and I don't need your patronizing attitude,\" insisted the man Ashley now knew as Richard Drake.\n\n\"I think a hot bath and a good night's sleep in a warm bed will be an excellent start for Ingrid. We have extra rooms reserved here. Haven't you ever heard about how Lady in Red Productions tries to help people? That's all I'm asking. If you don't do it for yourself, then accept it for your daughter. It's cold, and now it's snowing outside,\" added Ashley.\n\nThe man looked at his daughter standing beside him. He reached down and ran his hand along her thin face and sighed. \"I guess we could accept your generous offer for one night. I've been worried about Ingrid's health.\"\n\nAshley flashed a huge smile as she once again took the little girl's hand and led her from the room with her father following closely. Twenty minutes later, Ashley was scrubbing what looked like weeks of grime off the little girl as she sat in Ashley's bath tub. She had been startled to see just how thin the little girl was as she helped her undress. As the child sat in the tub and tried to wash herself off, Ashley made a phone call. \n\nBy the time the little girl was clean and dry, a young woman that worked for the hotel delivered several boxes to her room. Ashley and Ingrid spent the next ten minutes looking at the items in the boxes after she had donned a pair of warm pajamas that Ashley had produced for her.\n\nBy the time they were finished, there was a knock on the door. Ashley smiled at the change in the man standing before her when she opened it. He was wearing a hotel robe, but he was clean shaven and looked much better. Ashley realized that he'd actually be quite handsome if he gained some weight and smiled more.\n\n\"Daddy! Look at my pajamas, and at all of my new clothes! Miss Ashley said I could keep them! Isn't she nice?\" asked the little girl as she hugged her father. \n\n\"Yes, she's very nice. You look beautiful in your new pajamas. It's time for us to go to sleep, so thank Miss Ashley and tell her good night. Then we'll go to our room,\" replied Drake as he wiped at his eyes with the back of his hand.\n\nIt was just after six the next morning when Gwen and Steve heard knocking at their door. They had just finished making love and were enjoying the afterglow when they heard someone at their door. Gwen quickly pulled on a robe and headed for the door while Steve retreated to the bathroom.\n\n\"Ashley! And Ingrid! This is a surprise,\" greeted Gwen as she flashed a questioning look at her friend. \"Come in. What can I do for you this morning?\"\n\n\"Gwen, I want to ask a favor. I gave Ingrid and her father a room last night so they could clean up and have a warm place to sleep. We've already had a breakfast in his room. I asked Richard a lot of personal questions while we ate. I think we should give him a job! I can email you a list of his qualifications and some references. He's been having a tough time...\"\n\n\"Absolutely!\" replied Gwen as she smiled to hide her surprise since Ashley never asked for favors and this was totally unexpected. \"I don't know how to make this any clearer to you. We have total trust in you and we'll do anything we can to help you in anything you want to do. You do what you feel is right for this wonderful little girl and her kind, gentlemanly father. Lady in Red Productions will support any decision you make.\"\n\n\"We all feel the same about that,\" added Steve as he stepped out of the bathroom. \"I can see how this little princess could steal your heart. She's adorable.\"\n\n\"Thanks so much! I'll explain everything later,\" promised Ashley as she led Ingrid back out the door.\n\n\"That was unexpected,\" admitted Gwen as she hugged Steve. \"She texted me last night and said that she was tired and going to bed early when I asked her where she disappeared to. You don't think she fancies that Richard Drake, do you? He was a great help to me yesterday, but he didn't look like Ashley's type.\"\n\n\"A shave and a haircut can make quite a difference,\" reasoned Steve as he slid his hand inside Gwen's robe and gently squeezed her breasts. \"Now I'm curious, but you were right to tell her that we trust her implicitly. I'll see what I can find out about the man.\" \n\nIt was a happy group that gathered for breakfast in a reserved dining room. \"I want to tell you how proud we are of you, Gwen,\" began Ted as Steve helped Gwen into her seat. \"I can't believe that you're just twenty-five years old when I watch you interact with people, including President Hanson.\"\n\n\"Yeah! We saw you put Nadiya in her place when she making eyes at Steve right in front of everyone. Even President Hanson was laughing,\" recalled Kate with pride. \n\n\"Thanks, Dad, and everyone,\" responded Gwen. \"It's no secret that I owe a lot to Steve, Jordan, and Charlie for any success that I've enjoyed. The rest of you have encouraged and supported me, so I feel this is a team victory and you all deserve credit.\"\n\n\"That's all touching, but what about tonight?\" asked Charlotte. \"We've got a premier to get ready for. I was in the movie and I expect critics to start recognizing my talent pretty soon. I may be in big demand by this time next year.\"\n\n\"Hey, you already are!\" insisted Billy as he rubbed Charlotte's back possessively.\n\n\"I mean for my acting skills; not for my incredible love making abilities, unless it's a love scene with some sexy hunk.\"\n\n\"Okay, I'll do a love scene with you in our next movie,\" promised Billy just before Charlotte hit him with several sugar packets.\n\n\"If the children can quiet down, I have some important news,\" interjected Stephanie. \"Yesterday, Ellen was in a car accident. She's going to be okay, but she needs surgery for a broken femur as well as some facial reconstruction. She won't be healed by Academy Award time, so the ABS Network is looking for a fill in host, or hosts. They asked if Jordan, Charlie, Gwen and Steve would be interested in sharing the duties. \n\n\"Unless there's some good reason against it, you're doing it! That show's seen by millions, if not billions. You guys would be perfect and it would garner a lot of free PR for the company. I told them that you wouldn't agree unless they gave Steve and Gwen a big dance number and Jordan and Charlie the chance to sing. That'll help promote the movies we'll be making next summer.\"\n\n\"We get to do a 'big dance number'? We don't have a big dance number,\" Gwen reminded her ambitious cousin.\n\n\"You will by then,\" insisted Stephanie. \"Mom has a great idea for you guys. It'll take a lot of practice, but you'll show the world what you can do, and you'll pique interest for your next movie. I'm going to tell them they have a deal, unless I hear a good reason not to in the next few seconds.\n\n\"No objections? Okay. You all know that the sound track Jordan and Charlie wrote for the movie is taking off. They've already had a hit with 'Worth the Fight' and it looks like 'Diana' will be even bigger. It was released last Monday and is really catching on. Jordan and Charlie always come through for us, no matter what kind of movie we make. They just sit down and write great music.\n\n\"Reviews have recently been coming out about the movie, 'Diana', and they're raves! The critics thought it was going to be another stupid comic book adaptation with unbelievable people using super powers all of the time,\" continued Stephanie. \"They were very impressed with how human the characters were in the movie. Gwen was perfect as a warrior princess who's totally clueless about men. \n\n\"That's what makes this movie so special. Gwen, as well as the other Amazon women, have to learn when to trust men and when not to trust them, just like real life. The super hero stuff is played down for the most part. The reviews all mentioned how sexy all of the women looked in their costumes and how hot the love scene between Gwen and Steve is. A lot of people go to your movies now just to see you two make love.\"\n\nGwen was blushing slightly at Stephanie's words when she recognized a couple standing by the entrance to the dining room and used their appearance to change the subject. \n\n\"Mr. and Mrs. Walker! Please come over and join us for some breakfast,\" insisted Gwen as Pete looked over his shoulder to see his parents moving in his direction. \"Pete has some difficulty seeing past Becky, so forgive him for not noticing that you had entered the room.\"\n\n\"These are my parents, Mildred and Ben Walker,\" introduced Pete as he hugged his mother and shook hands with his father. \"This is Gwen Anderson, Kate Anderson, Lisa Hunter, Charlotte...\"\n\n\"Son, I've read enough on the internet to recognize everyone at the table,\" interrupted Mildred Walker. \"Becky, is my son treating you with the proper respect? If he isn't, I'll take him aside right now.\" \n\n\"Yes, Mrs. Walker, he is,\" laughed Becky as she hugged the woman. \"Since he made the effort to save my life, and my sister's, he's been very good to me. I have to commend you on having such a brave, capable son. He sure came through for us.\"\n\n\"That's what I like to hear,\" beamed Mrs. Walker. \"It's so much better than finding out that he's been rude and insulting to a lovely lady like you. I was worried that he'd lost his mind when I heard that he treated a young, beautiful woman so poorly.\"\n\n\"Please sit down and join us,\" insisted Steve. \"You're here for the premier tonight and to visit your son, as I understand it. Let me express my appreciation of your son's quick thinking and brave actions when we really needed it. Are you related to any 'Walkers' in the Sparta area? \"\n\n\"It would have to be pretty far back, since my father and grandfather were the only boys in their families,\" offered Ben Walker. \"We'd be proud to sit at table with you folks. We're familiar with the heroic actions you and your friends have done for others, and for the country. Our friends asked us to tell you personally how proud they are of your company and its efforts for children and our veterans, when we met you.\"\n\n\"Mrs. Walker, us ladies are going to spend the morning shopping. This afternoon, we're going to a salon to get our hair, nails, and makeup done. Would you please join us?\" asked Gwen.\n\n\"You'd let me tag along? What about Ben? I hate to just leave him alone.\"\n\n\"Would he mind hanging with the men? They don't require the maintenance us ladies need for these big events. Maybe he could enjoy a couple beers, shoot some pool, and catch up on things with Pete,\" suggested Becky.\n\n\"You just described his perfect day!\" laughed Mildred Walker. \"Thank you so much for making us feel so welcome. My friends couldn't believe why we were coming to Washington and who we were going to be meeting. Now I can tell them that you're as nice in real life as you are on TV and in the movies.\"\n\nThat evening, there was a very large and boisterous crowd in front of the theater hosting the premier. The ladies and their escorts arrived every five to ten minutes and the crowd cheered and gave the appropriate reactions to the beautiful women dressed so elegantly.\n\nQuite a few politicians and actors made appearances. They walked the red carpet and waved to the crowd, and especially to the crews that were filming for news bureaus and entertainment programs. Jordan and Charlie arrived next to last. Charlie was well groomed and looked quite handsome in a tux, but Jordan was a show stopper. Her black dress was open to the navel with a small silver chain holding it together at her bosom. The dress drew the eye to the swell of her breasts. She looked incredible.\n\nFinally, Steve and Gwen stepped from the limo, with Steve exiting first so Gwen's modesty was preserved as she climbed from the back seat. Once he helped her stand, he turned and led her up the red carpet. He grinned as he heard the gasps and groans from the crowd.\n\nGwen was wearing a red dress, designed by her company for the event. It was slit in the front, exposing a lot of her long, shapely legs. The top molded to her substantial bosom and showed quite a lot of cleavage. Cameras flashed constantly as Gwen smiled and posed for the cameras. Steve did his best to smile while striking poses that he hoped would work okay. It took almost fifteen minutes for Gwen and Steve to reach their seats.\n\nSteve had not previewed the movie and he was pleasantly surprised at how good it was. The human element had been stressed while the super power part had been downplayed. It blended romance and action very smoothly. Jordan and Naomi were especially beautiful in their Amazon outfits. Jordan was petite, but voluptuous, while Naomi looked like a true Amazon. She played the role of Nubia, a dark Amazon with skills equal to Wonder Woman's. As he watched, Steve found himself wondering how her top managed to remain in place. \n\nBecky was gorgeous as Gwen's bodyguard, and her missing hand simply made her more believable as a woman in a tribe of Amazons warriors. But to Steve, and he admitted to himself that he could be biased, Gwen was the movie. She was incredible to watch when she was dressed as Wonder Woman. Her legs were long and toned, her waist was small, her stomach flat and her chest was impressive.\n\nEven men with no interest in the plot would watch the movie a few times just to enjoy the beautiful, scantily clad women. Female fans would enjoy seeing the strength and ability of the Amazon women, but the real clincher was the tender love story in the movie. Steve found himself enjoying the movie a lot.\n\nThe party at the hotel after the premier was much more relaxed than the one the previous evening. Gwen was in tremendous demand for dances, interviews, and autographs. Through it all, she remained modest and thanked everyone that had been a part of the movie.\n\n\"You do realize that you have another blockbuster on your hands, don't you?\" quizzed Stephanie as she danced with Steve. \"I know this movie was Ashley's idea, and it was a great one. Gwen was unbelievably good and sexy as hell, but you stole the movie, in my opinion. You were just the right combination of shy and studly. It was so cool how Gwen did that double take when she first saw you remove your shirt. She had been told about men and thought she knew what to expect, but she sure didn't expect anything like how you looked. \n\n\"It was a lot like the first time we saw you at Gwen's house and you took off your shirt to race Kate in the pool. I got wet just looking at you, and I think every other female there had the same reaction. Kate was speechless when you climbed out of the pool, and as you know, that doesn't happen too often.\n\n\"Pulling Amber and that dumbass, Hardy, out of the river was the best PR possible for the movie. Our people think we'll have one of the best winter openings ever. I have to thank you for giving me this job. I know it's because I'm a cousin and not because of any proven skills, but that makes me appreciate it even more. Being around you and Gwen is the best thing that has ever happened to me. You're both so generous and kind to me. I just wish I was your girlfriend, even though I'd never want to see Gwen hurt in any way. You're far and away the best guy I've ever known.\"\n\n\"Steph, being a cousin did help you land the job, but we wouldn't have given you so much responsibility if we didn't feel you could handle it, and you've done a great job so far! We plan of keeping you around for a very long time. Do you need a raise or something?\" responded Steve as he held the beautiful woman in his arms.\n\n\"No, I'm not asking for a raise! I couldn't believe it when I saw my first paycheck! There's way more being withheld than I used to take home. Then you're going to build a home for me in Asgard, at no expense to me. I'm just trying to tell you how grateful I am, and that I love you a lot, okay? Can we leave it at that? \n\n\"I used to be upset with Mom because she was so obviously infatuated with you. I was afraid it would make Dad jealous and cause a problem in their marriage. It finally dawned on me that Dad really likes you and he seems to enjoy seeing Mom flirt and tease you. He trusts you more than he does Mom, I think. Regardless, they are more romantic now than when I was a kid and they've been married twenty five years.\"\n\n\"Your mother is an extremely attractive woman,\" admitted Steve. \"I don't want you, or her, to think that she's safe around me. She knows what she does to me, so maybe you'd better tell your dad to keep a close eye on her when I'm around.\"\n\n\"I know you're teasing me. Remember that I've known you for six years. You've had all sorts of gorgeous women practically throw themselves at you, including Mom and Aunt Paula, but I'd bet a year's pay that you've never had sex with anyone but Gwen,\" stated Stephanie with certainty.\n\n\"When you put it that way, it makes me sound pretty pathetic,\" reasoned Steve. \"I should be sowing my wild oats, sleeping with a different babe every night.\"\n\n\"I know you're still teasing, but I want to be first if you do decide to go that route,\" laughed Stephanie. \"I'd forgotten how much I enjoy being with you and what a wicked sense of humor you have at times. You and Gwen are building a dynasty and I'm just glad to be a part of it. You're legend!\"\n\nThe song ended and Steve escorted Stephanie back to her seat. She blushed when she saw that Paula, Diane, Kate and Gwen were smiling knowingly at her. \n\n\"Maybe you should go change your panties,\" suggested Kate. \"We were all watching you snuggling up to Steve and laughing at every word he said. Did you offer to sleep with him?\"\n\n\"Well, the subject may have come up,\" admitted Stephanie with a big smile. \"Steve did mention that maybe he should be sowing his wild oats, so I simply pointed out that I was available, but he seemed to want Mom more than me. He said that Dad had better keep an eye on her when she's around Steve.\"\n\n\"Steve really said that?\" asked a pleased Diane before she realized how she sounded. \"I mean, why would he say such a thing? I'm a married woman, and he's spoken for.\"",
        "\"Because he knows that I know that he thinks my mother is hot and he was using you to tease me. It's about me, not you, Mom. Even if he seduces you, it's just to get my attention,\" insisted Stephanie. \"You'd be a sacrifice to reach his real objective, which is my much younger body.\"\n\n\"Did he mention me at all?\" asked Paula with a grin. \"Is he going to wade through the whole family, sowing his wild oats hither and yon?\"\n\n\"Okay, I think we've gotten as far with this as we can carry it,\" complained Gwen. \"I've been propositioned at least four times tonight but now I'm worried about my family stealing my boyfriend. He's not the only person in demand around here.\"\n\n\"Maybe you should take some of the guys up on their offer,\" replied Stephanie with a straight face. \"You just might find a better lover; a stronger, braver, better looking man.\"\n\n\"Yeah, like that would happen!\" snorted Gwen. \"What I would find would be every female relative I have jumping into bed with my guy, the very best lover, best looking, strongest, bravest man on the planet. Of course you'd have to beat that blonde bombshell to the punch.\"\n\nAs Gwen spoke she looked at Steve leading Nadiya around the dance floor, indicating the bombshell to which she was referring. \"You saw the love scene we did in the movie tonight. He's even more passionate and demanding in real life. I don't think you ladies could handle what he brings to the party. You're better off letting me handle him.\"\n\nAfter Steve finished his dance with Nadiya, Gwen joined him for a slow dance. By the time the song ended, they were surrounded by photographers and reporters.\n\n\"Well, at least they waited until the party was almost over,\" sighed Gwen as she turned and began responding to questions. Steve found it interesting that there was an equal number of reporters from serious news organizations and from entertainment shows. He let Gwen handle most of the questions, responding only when a question was asked directly to him.\n\nQuestions ranged from how Gwen kept her Wonder Woman costume up to how she stood on the proposed pipeline from Canada. Gwen was very good at deflecting questions that she felt were either too personal, or too controversial. She finally ended the interview and took Steve by the hand and moved around to thank everyone for attending. \n\nA familiar looking man approached Gwen and Steve. They exchanged glances and shrugged, realizing that neither of them recognized the man.\n\n\"You don't remember me, do you?\" laughed the man. \"I'm Richard Drake. I was here last night with my daughter? I look a lot better cleaned up, don't I?\"\n\n\"Oh! Yes, you do!\" exclaimed Gwen as she hugged the man warmly. \"You look much more comfortable and relaxed.\"\n\n\"I just wanted to thank you for giving me a position with your company,\" continued the man. \"I was pretty much at the end of my rope. I never guessed that helping you leave the river yesterday would benefit me so much. Ingrid is happier than she's been in a very long time. I just want you to know how grateful I am. I won't let you down, I promise.\"\n\nConcealing her confusion, Gwen smiled and nodded to what appeared to be her newest employee. \"I'm sure you'll do a great job! We always can use good people. Thanks again for helping me yesterday.\"\n\nAs soon as Richard Drake left them, Gwen whispered quietly to Steve. \"It looks like Ashley's been busy today. That's why she wasn't with us at the salon. She said she had business to take care of. Mr. Drake cleans up quite well, doesn't he?\"\n\n\"I just saw you talking to Richard!\" came a worried voice from behind them. \"I know I should have gotten it approved, but he was so despondent, I felt like I had to help him and his adorable little girl as fast as I could. I gave him a job! He's working for Lady in Red. I made up a position just for him. He's going to be working to help the homeless in the city.\n\n\"Please don't be upset until you hear me out,\" quickly added Ashley. \"I thought that...'\n\n\"I've already heard enough,\" stated Steve flatly. \n\n\"I'm so sorry!\" apologized a very contrite Ashley. \"I'll hand in my resignation and explain to Richard that I overstepped my authority by about a mile.\"\n\n\"Why would you even think of doing that?\" quizzed Gwen. \"Are you trying to hit us up for a raise? Is that what this is about? Okay, we'll pay you ten percent more if you'll stay with us.\"\n\n\"What? No! I wasn't trying to get a raise. I thought when Steve said that he heard enough, he was angry about me making decisions for the company that I have no right doing,\" responded a confused Ashley.\n\n\"Ashley, why can't you accept that you're stuck with us?\" chuckled Steve. \"I heard enough to know that we'd go along with whatever you did. We have total faith in you. Look how well the movie is doing, and that was pretty much your brainchild. You hire whomever you want and pay them whatever you feel is right. You're a big part of our success, as well as a part of our family. Let's plan on discussing this on the trip to Sparta tomorrow, but rest assured that Gwen and I will back you completely.\"\n\nOnce again, Steve held a sobbing Ashley in his arms while many of the people at the party watched. He held her quietly until she calmed down. Then he tilted her chin and kissed her quickly on the lips.\n\n\"You've got to get over these insecurities. You're the whole package, smart, honest, beautiful, hard working, and beautiful. Work on your confidence. You're very important to us and we want you with us as long as you're willing to put up with us,\" concluded Steve.\n\n\"You said beautiful twice!\" grinned Ashley through her tears. \"Thanks Steve. Gwen, you've got the best guy in the world, but you deserve him. I'm so lucky that you both treat me so well. I'll tell you all about it tomorrow. Congratulations on the movie's reviews and the great party tonight.\"\n\n\"Excuse me,\" came a voice next to Steve as he felt a tap on his shoulder. \"I think I owe this big lug some thanks.\"\n\nSteve looked over his shoulder to see Amber Stahl smiling at him. She had a large band-aid on her forehead that obviously covered a small knot, but otherwise looked fine.\n\n\"You've ruined me for trying to be objective when I report about you two,\" confessed Amber as she hugged Steve warmly. \"I don't remember much after we hit the water, but I watched the videos on TV and online. You saved my life, but you seem to make a habit of saving lives. I can't tell you how grateful I am. If you ever need anything from me, just ask. I'll never forget what you did for me. Gwen, this guy is a keeper!\"\n\nThe next day saw Gwen and Steve in Sparta. The premier was scheduled for seven PM and the town was bustling with visitors. They gathered at Marsh's for a late lunch before preparing for the first premier ever held in the relatively small town.\n\n\"Lady in Red is now committed to funding a homeless shelter in Washington D.C.\" began Gwen. \"Ashley set this up when she met the homeless man that helped me out of the river Thursday. I know that we usually discuss these things first, but Ashley was concerned about the mental health of the man and his little girl.\n\n\"She found out that he was a very successful stock broker until his wife was diagnosed with uterine cancer. He leveraged everything he had to try to find a cure. He took her to Mexico and then Hong Kong, hoping that alternative treatments might help. Sadly, she died last spring and he lost everything he had. He was finally evicted from his home just before Christmas and has been living day to day, sometimes being put up by friends and sometimes sleeping outside, with his six year old daughter.\n\n\"You might ask why a smart, successful guy would wind up on the street, but while his wife was dying, and after she died, he was an emotional wreck. He just gave up until he finally realized what it was doing to his daughter. Ashley feels he's worth helping. She's created a position for him to help homeless people and to shelter them. She wants to find a place to dedicate as a homeless shelter. You all know how neighborhoods resist them, and with good reason. One of his chores will be to find a way to do it, not by force, but by negotiation.\n\n\"Ashley gave him and his daughter a room on our floor, as well as a job. She did this on her own without asking permission, or seeking any input from any of us owners. How do the rest of you feel about it?\"\n\nCharlie looked to Jordan, who nodded slightly for him to proceed. \"Jordan and I support the idea a hundred percent. Ashley can do no wrong as far as we're concerned.\"\n\n\"Ashley is running Gwen's office, not Lady in Red, so she overstepped her bounds by committing us to this effort,\" pointed out Kate. \"I think we need to agree that from now on, she was the power to do that, even if it wasn't clear before. Ashley's trying to help people, so how can we not support her? She makes me proud of this company.\"\n\n\"I'd like to suggest that I be placed in charge of any and all splinter organizations or causes that crop up within the company. Stephanie is doing great handling the everyday business of the company, but we need to let her focus on that and not keep adding to it,\" argued Lisa. \"Jason and I totally support Ashley and her efforts, but feel it would be best to have more structure. Jason's already been working on systems to help people during and after disasters. This homeless shelter would dovetail in nicely with it and I think it's a responsibility that Jason and I should take on.\n\n\"I think I have the best partners in the world!\" proclaimed Gwen. \"These were all good ideas. Ashley, get with Lisa and Jason to take over the homeless shelter plan. Have Mr. Drake report to them directly. If any of us has something new that we feel needs immediate attention, we can expect support from the rest, but it's really best if we discuss it when possible. Then we'll hand it off to Lisa and Jason to make it happen!\"\n\n\"I'm sorry about assuming too much with your finances and time, but it's a great cause and I'm extremely thankful that all of you support it,\" responded Ashley gratefully. \"You guys are the best!\" \n\nThat evening was one the Spartan Nation would never forget. Celebrities and politicians were everywhere by the time the premier got started. Every hotel, motel, and bed and breakfast within fifty miles was booked full. The party was catered by local businesses. Locals, as well as tourists, got to meet Gwen and Steve, Jordan, Charlie, Naomi, Becky, and the rest of the cast. The movie managed the best winter opening in history and there was even Oscar buzz about the score written by Charlie and Jordan and the performances of Gwen and Steve. \n\nAs the evening was wrapping up, Steve took a call on his cell. He stepped into a small office for a few minutes before returning to speak to Gwen and their friends.\n\n\"There's been a terrorist attack in Paris. An orphanage was bombed and quite a few kids were killed. Senator Chatham wants me to be prepared to go to Paris with her for the funerals on Tuesday and Wednesday. She feels my presence will help,\" concluded Steve.\n\n\"That's terrible!\" exclaimed a suddenly saddened Gwen. \"We can't stay away from Paris that long. We may be able to help. Stephanie, please let the pilots know that The Red Lady is headed for Paris later tonight. They need to file their flight plan. I'm sorry everyone, but Steve and I have to leave now to get ready for a very difficult few days.\""
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "potomac",
        "helicopter",
        "water rescue",
        "inaugural",
        "premier",
        "washington",
        "politics"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-14"
}