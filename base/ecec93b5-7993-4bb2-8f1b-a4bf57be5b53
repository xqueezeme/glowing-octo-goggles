{
    "title": "At Long Last: Gwen Ch. 04",
    "pages": [
        "Chapter 3 concluded with Will trying to watch a basketball game and Gwen bouncing up and down on him instead.\n\n--------------------------------------------\n\nMonday morning arrived all too early. I stretched and groaned and tried to move a few more muscles and each effort resulted in a few more groans.\n\nEventually I realized that the little Princess was watching me with a wide grin on her face.\n\nHer first words were, \"Is the poor Old Man stiff and sore this morning?\"\n\n\"Yes, he is,\" was my response.\n\nLaughing delightedly, Gwen said, \"Poor Old Man,\" and with that she buried herself under the covers and I felt her clutch my cock. From deep under the covers I heard her muffled voice, \"I'm checking to see if Ivan is in working order.\"\n\nI would know the feel of that warm, wet mouth anywhere and, in short order, I felt Ivan expanding. I felt Gwen release Ivan and come out from under the covers to announce, \"All is well. Ivan is in functioning condition.\"\n\n\"That's a miracle,\" I responded, \"given the pounding you gave him, and me, last night. Do we need a new couch?\"\n\n\"If we do need a new couch it's because you become so animated watching basketball. I certainly did nothing to interrupt your silly basketball game.\" With that pronouncement, the little vixen batted her eyes at me.\n\n\"Well then, why is it I have the very definite recall of a little Princess bouncing up and down on my cock and gloating about my still letting her getting away with murder? That, Princess, occurred last night on the couch.\"\n\nGwen adopted a very concerned look and said, \"Oh dear! You're so confused Old Man. This happens with age. We'll call the doctor today and you'll have a nice examination and get some medicine and you'll feel a lot better very soon.\"\n\nI simply looked at Gwen for a moment and then asked, \"When was the last time you were put over someone's knee and really spanked.\"\n\nHa! It doesn't matter when it was because you are not going to spank me.\"\n\n\"Oh and why am I not going to spank you?\"\n\n\"You're not going to spank me because I'll bat my eyes at you and ask you nicely not to spank me and you'll start laughing and that will be the end of that.\"\n\nTo my considerable consternation, I started laughing and Gwen stuck out her tongue at me. \n\nThen she said, \"Lay down, Old Man, and let me get on you.\"\n\nWe got into our usual serious conversation position with me on my back and Gwen lying on top of me.\n\n\"What is it, Princess?\" I asked.\n\n\"I think, Will, you're going to get a call, if not today, tomorrow at the latest, about being the acting chair position in my department.\"\n\n\"Uh huh,\" I noted.\n\n\"I'm not sure you should take it, Will.\"\n\n\"Please share with me why you think that.\"\n\n\"There are eleven of us, Will. You work very well alone or as the head of a small project. I've noticed, people simply wear you out. You're energized by solitude or near solitude whereas with groups of people you become drained quickly. We have some tough characters in the department who are combative, and while you can handle them pretty easily, it will consume a lot of energy that you would otherwise use more productively.\"\n\n\"OK, that's a perceptive comment, Princess.\"\n\n\"So, I'm not sure being the acting chair is the best fit for you,\" was Gwen's conclusion.\n\n\"What would you say if I suggested that I won't be dealing with eleven people, but with two at most?\"\n\n\"Oh, that's interesting. How did you get to that idea?\"\n\nI said, \"There's no way I can make any progress trying to herd cats which is what a collection of faculty is. But, if the faculty themselves take ownership of the project to define the department, this might work.\"\n\nI continued, \"I'll outline to everyone what I want done by a given date and instruct everyone to figure out how to tackle the problem and come to some resolution. I'll ask the group, depending upon how they organize, to have one or two people who routinely update me on progress and come to me for intervention if it's needed.\"\n\n\"Gwen looked a bit concerned and asked, \"What if the folks in the department simply won't play ball with you and do nothing?\"\n\n\"If that happens, the untenured ones will walk the plank and be looking for a job and the tenured ones will have seen the last salary increase of their working lives at this university.\"\n\n\"You could do that, Old Man?\"\n\n\"I'll work that out with the dean in negotiations or I won't take the position.\"\n\n\"Oh boy! Maybe I'll get to screw the chairman in his office yet!\" Gwen shouted.\n\nAgain, I had to laugh at this bundle of womanhood and Gwen said, \"Let's go to the Y and see if you can't work out that stiffness and soreness,\" and that's what we did.\n\nThe rest of Monday was so quiet that when the phone rang that afternoon, all the cats descended on the kitchen to watch me answer the phone. It was Gwen's dean and he said he had the clearance from my university to hire me temporarily and could we talk about the appointment? I suggested he name the time and he said, \"How about now?\"\n\nI agreed and drove to campus and we talked and worked out our strategy and decided on my compensation. I negotiated for five thousand a month and then lowered it to four thousand so that the administrative assistant could have an immediate three thousand dollar raise. The dean whistled his admiration at the salary raise for the assistant and noted, rather unnecessarily, that I'd just secured her undying loyalty.\n\nWe agreed that we'd meet with Gwen's department the following Monday afternoon. On Tuesday, I met with the Office of Institutional Research and defined a number of reports that I wanted them to generate by Friday and they agreed.\n\nOn Wednesday the dean and I met with the chairpersons of all the other departments in the school and told them to expect to be visited by various members of Gwen's department in the near future. At that meeting I also learned just how disgusted the other departments in the school were with Gwen's group. Clearly, the dean had not exaggerated the dysfunction in Gwen's department.\n\nGwen was intrigued with the behind-the-scenes machinations in which the dean and I were engaged. Every evening she would pepper me with questions about what we were doing and why. She also reiterated that people in her department had been at the conference and knew we were a couple. As she so delicately put it, \"They have to know I am acquainted with Ivan.\" She does have a way with words sometimes.\n\nOn Saturday morning, Barb arrived for the weekend much to Gwen's and my amusement. \"Why?\" Gwen wanted to know, \"do you spend every weekend here rather than at school?\"\n\nBarb's answer was, \"Oh, this crazy place is a lot more fun than anything going on at school.\"\n\nBarb found out just how crazy it was on Sunday morning when she, responding to one of Gwen's outbursts of laughter, walked into our bedroom to ascertain what was so funny. Barb caught us, flagrante delicto, in bed. Gwen later described the look on Barb's face as incredulous as Barb said, \"Oh my god, Will. That thing is big!\"\n\nI froze when I realized that Barb was in our bedroom. Gwen did not. She came roaring out of bed, naked of course, and ushered Barb out of the bedroom and I heard Barb say, \"Wow, nice ta-tas Mom!\"\n\nThe next sound was Gwen giving Barb unadulterated hell for walking into our bedroom while Barb tried to explain why she entered, but it was a losing battle. Gwen was upset and let Barb know it in no uncertain terms. Barb apparently retreated to the safety of the guest bedroom and an incensed Gwen came stamping and jiggling back to our bedroom. I remarked, \"Nice ta-tas, Mom.\"\n\nThe whole thing had an interesting effect on Gwen because she jumped on the bed, squatted over Ivan, grabbed him, and literally shoved Ivan into her pussy and slammed herself up and down on me. I did comment, \"Possessive, are we?\"\n\nGwen, through gritted teeth, muttered, \"You're damned right I'm possessive, Old Man. This is my cock and no one else even looks at it.\"\n\nI kissed Gwen very passionately, and she enjoyed a groaning orgasm.\n\nWhen Gwen recovered from her orgasm, she put on a robe and marched right out of the bedroom and into Barb's bedroom and gave Barb another real talking to, the likes of which I'd never heard coming from Gwen before. This was one angry little Princess and Barb knew it.\n\nLater, when we came out of the bedroom to go to the kitchen, Barb was waiting for us and apologized to both of us.\n\nGwen was still steaming and only nodded her head in acknowledgement of Barb's apology. I, however, said, \"Barb, I accept your apology and I even understand your response to your Mom's laughter, but you were way out of line making any kind of comment whatsoever about my penis or your Mom's breasts. You should have immediately turned and left the bedroom without comment. You're a very integrated part of your Mom's and my relationship, but you don't cross the line into our bedroom and into our intimate relationship. That's just out-of-bounds.\"\n\nBarb dissolved into tears and started sobbing and I nodded to Gwen to go to Barb and Gwen shook her head signifying she would not. So, Barb sobbed a while longer and when she had dried her tears she arose and went to the guest bedroom and picked up her clothes and started out the door.\n\nI stopped her and said, \"We don't want you to leave. Stay the day as you always do. You screwed up, it's been explained, you understand it, and now we pick up and go on.\"\n\nBarb said, \"I can't. I've never, ever, seen Mom so angry with me that she won't talk to me. I just can't be comfortable here.\"\n\nGwen appeared at that moment and put her arm around Barb and led her back to the guest bedroom and they were in there a while. What Gwen said, I don't know. But, the two of them emerged fifteen or twenty minutes later and we went on to church and lunch and had a good morning of it.\n\nSunday afternoon was quiet. Barb studied while Gwen prepared for classes and I studied the number of reports I'd requested from Institutional Research. Barb left for college after we had a light dinner at home.\n\nOn Monday we followed our usual routine until I drove to Gwen's school in the afternoon. Her departmental meeting was at 3:00 p.m. and we started on time with all faculty and Marcie, the administrative assistant, present.\n\nThe dean called the meeting to order and then delivered a stinging lecture to the assembled faculty. I doubt, in the history of higher education, a faculty had ever been spoken to in the manner the dean did on this occasion.\n\nHe literally ripped them to shreds and he included some choice comments from the other departments in the school. He concluded his remarks with the information that a search was on for a new chairperson and a search was on for new faculty as well because he anticipated that a lot of \"deadbeats in this room won't be here in August.\"\n\nHe then introduced me as the Acting Chair and told them I had been given the mission of starting to make this collection of 'clowns' into an integral part of the school.\n\nHe turned the meeting over to me and departed. I sat and studied the eleven faculty members for a few minutes and let them stew in their juices. Gwen was watching everything with clinical detachment. Others were simply fuming at the indignity heaped on them. Others were confused and floundering and all, except Gwen, were looking at me with ill-disguised hostility.\n\nFinally, I stood up and began by saying, \"Let me give you a little more context of what is going on here. You folks are in some real jeopardy. The dean has my back. The Provost has his back. The President has her back and the Board of Trustees has, as usual, their collective heads up their collective asses, and if the President told them it was noon at midnight, they'd believe him.\"\n\n\"In other words, folks, this department is in such shambles, the President has been informed that you are a bunch of loose cannons.\"\n\nThen, I stood for a while and let them think about what I'd just said.\n\nI continued, \"Resignations are being accepted at any time. Turn them into Marcie, and I nodded to the administrative assistant, anytime in the next few weeks. If you plan to resign, you're excused from this meeting now.\"\n\nNo one departed. \n\nOne fellow did speak up and say, \"What if I choose not to resign and also choose not to participate in this game.\"\n\nI responded, \"This is no game. Restate the question if you want an answer. \"\n\n\"All right,\" the guy grumbled, \"what if I don't participate in this process?\"\n\nMy response: \"That's a good question. Are you tenured or non-tenured?\"\n\n\"Tenured,\" he said.\n\n\"Then, I hope your salary is quite sufficient because you'll never see another raise as long as you work here.\"\n\nThe fellow came up out of his chair and bellowed, \"What did you say?\" \n\nI said, \"Get your hearing checked. A prof with a hearing problem can't operate at optimal levels.\"\n\nHe stared at me for a while, but he did sit down.\n\nA young fellow asked, \"I'm not tenured. If I don't participate in the activities you have planned, what's in store for me?\"\n\nMy response was, \"You'll be denied tenure on the grounds that your Service Record is 'Inadequate.'\"\n\n\"But,\" he protested, \"what if my teaching and research are excellent?\"\n\n\"Tenure, as you should know, is based on excellence in either teaching or research or both and a ruling of, at least, \"Adequate' in the other one or two categories. 'Inadequate' in any category deems you unfit for tenure.\"\n\nI was smiling to myself because Gwen was on the edge of her seat watching and listening with rapt attention.\n\n\"Are there other questions?\" I asked.\n\nAn old timer on the faculty laughed out loud and said, \"You have our attention. What do you have in mind?\"\n\nI laughed, too, but with him, not at him. He had been around long enough to know when his balls were in a vise.\n\n\"All right. Here is the overall goal. We want two statements. The first deals with how this department relates to the mission of this school. You are an incredibly important service department to this school. Nearly every department sends students to this department to learn stats and research design, survey research, etc. What do those departments need you to teach? When do you need to teach it? What do they need their students to learn?\"\n\n\"The second deals with how this department fits into the world of scholarship. What do we emphasize and how do we demonstrate that emphasis in our graduate curriculum, in the recruitment of graduate students, and research?\"\n\nThat's the first step. Second, and we're not worried about this now, we'll want an implementation time-line. For now, put that aside.\n\n\"If you didn't digest all that orally, I've written essentially the same thing on a paper I'll be giving you.\"\n\n\"Right now, count off in twos.\"\n\nThe faculty did and I said, \"For now, those of you who are ones, will deal with the service aspect or how does this department relate to the mission of this school. The twos will deal with the second issue.\"\n\n\"If you are in one group and prefer to be in the other, find someone with whom to switch, but neither group may have fewer than five people.\"\n\n\"Each group will elect a chair and that chair will report to me on progress and issues and seek me out if my intervention is needed on an administrative problem.\"\n\n\"I'll be in most days from 10:00 a.m. until 1:00 or 2:00 p.m. Make an appointment with Marcie if you need to see me. I don't have an open-door policy and if you come to me with some damned departmental politics issue I'll bloody your nose. I am not here to babysit. I am here to get this job done.\"\n\nI nodded to Marcie and said, \"Marcie is now passing out the statement of what has to be done and she is also passing out reports on every class taught in this department for the past three years. The reports document the department of origin of every student, the students' class standing, and the students' by gender and ethnicity, etc.\"\n\n\"A separate grade report is being issued for each course and I will say the grading practices, because there is apparently no policy, are deplorable. Grade inflation is rampant and it will have to be stopped. The other departments are reporting that their students are earning 'As' and 'Bs' here and are clueless about what they ostensibly learned here while earning an 'A' or 'B.'\"\n\n\"Meeting dismissed and I want the chairs of the committees to meet with me on Friday at Noon and, by God Almighty, there better be some progress to report.\"\n\nNo one moved! \n\nI stood up to leave and someone yelled, \"Wait!\"\n\n\"A question?\" I asked.\n\nThe old fellow with whom I'd shared a laugh said, \"Yes, we have a question. We know who you are, but we don't know what in the world you're doing here. How'd you get here?\"\n\n\"I'm sure a few of your colleagues can fill in the blanks for you,\" as Marcie and I departed.\n\nWhen Marcie and I left the room on the way to the departmental office Marcie remarked, \"I think you put the fear of the Lord in them.\"\n\n\"We'll see, Marcie, we'll see. Never, ever, underestimate the ability of a faculty to turn a task into a marathon of mental masturbation.\"\n\nI went home to Gwen's place and Gwen never came home until 6:00 p.m.\n\nShe came in the door and ran to me and said, \"Up!\n\nI picked her up and she announced, \"We were working, as a faculty, until a few minutes ago. It was amazing!\"\n\nThen she kissed me and said, \"You scared me. Imagine what you did to the others.\"\n\nI grinned and said, \"Well, if it got them moving and thinking, that's a really good thing.\"\n\n\"Yes!\" Gwen said, and then she said, \"Feed me. I'm hungry.\"\n\n\"Did you not say you were making dinner tonight?\"\n\n\"I did say that, but I didn't know we'd be working as late as we were.\"\n\n\"OK, where do you want to eat?\"\n\n\"Let's go someplace nice.\"\n\n\"Princess, why do you never say, 'Let's go someplace crummy?'\"\n\nWhy was I not surprised when she stuck out her tongue at me?\n\nAt dinner Gwen told me, \"The faculty decided I should be excluded from their deliberations because I'd run home and tell you everything they said.\"\n\nI smiled and asked, \"And, your response to that was what?\"\n\n\"Oh, I told them that would make you angry and you'd think of something really Machiavellian for them, so they let me stay.\"\n\n\"One guy was really ticked off and asked me, 'Do you really live with that arrogant bastard?'\"\n\nAgain, I smiled and waited for Gwen's response which was, \"Will is easy-going and indulgent, really, but he has some standards for the professoriate that this group has violated and he wants it corrected.\"\n\nGwen continued, \"One fellow wanted to know what happened to Gearhart and I told him I didn't know. Should I have told the truth?\"\n\nI thought about that for a while and finally said, \"You don't know what happened to Gearhart. You know why something happened to him, but what it was, neither you nor I have any idea. The fellow asked the wrong question.\"\n\nGwen nodded and said, \"Another fellow wanted to know if you even knew the names of the people in the department. I told him I had no idea. And, another guy yelled at me for not alerting my colleagues about what was afoot.\"\n\n\"Uh oh,\" was my response.\n\n\"Yes, I tore him a new asshole. Boy, did I let him know that I don't know everything that is going on and much of what I heard today was as new to me as it was to him.\"\n\n\"Princess, you tore him a new what?\"\n\n\"I tore him a new asshole.\"\n\n\"That's a Southern phrase. Where did you hear it?\"\n\n\"I guess I heard that one at MIT when I was a grad student.\"\n\n\"Well, that fellow how has a lot of new assholes because I thought the dean really did a job on those fellows.\"\n\n\"He really did, didn't he? The dean was really angry. You were stern, but you weren't angry. And, the department is furious with the dean. He was demeaning.\"\n\nI thought about that for a while and said, \"Well, here's something you can share with your colleagues that they don't know. The Provost, herself, came down on the dean harder that he came down on the faculty today. That's how poorly the department is perceived on campus. Complaints had reached all the way to the Provost's Office.\"",
        "Gwen's response was, \"Wow!\"\n\nWe both ate a few bites and Gwen said, \"And, you know what else?\"\n\nMy response was, \"No, I don't know what else.\"\n\nI saw the devilish grin coming a mile away and she said, \"Watching you today made me so horny for you. All I could think about was, I get to go home and have him do magical things to my body.\"\n\nI sighed, \"You know, Princess, I am 62 years old.\"\n\nStill grinning, Gwen came back with, \"Hush! Ivan will hear you and he doesn't know that. He's too dumb to realize that.\"\n\nI just shook my head and smiled at her and asked, \"And what is it you want me to do that is so magical?\"\n\nShe shivered and said, \"Anastasia is wet right now. I'm sure she needs licked and we'll go from there as needed.\"\n\nThe rest of our dinner was taken up with a discussion of Gwen's classes and what topics her students were finding difficult. I discovered that, while I was no slouch when it came to pedagogy, Gwen was a lot more informed about, and attuned to, the different ways students learned. It was a typical enjoyable meal. When we finished I paid the bill and we drove home.\n\nOn the way home Gwen asked, \"You said you don't have an open-door policy for the faculty. That, of course, doesn't apply to me, does it?\"\n\n\"That applies doubly to you,\" was my response.\n\nGwen went into her best pout routine and informed me that I wasn't being fair at all.\n\n\"How am I not being fair?\" was my question.\n\n\"I'm different! I'll be your wife shortly.\"\n\n\"Do you want me to have a double standard of one policy for ten faculty people and a different one for one faculty member?\"\n\n\"I'm not just another faculty member. I'm special! I'm the Princess!\"\n\n\"Ohhhhhhhhhhhh, I see. Well, then, the policy doesn't apply to you.\"\n\n\"Ha! I knew you'd let me get away with that.\"\n\n\"How did you know I'd let you get away with that?\"\n\nGwen rolled her eyes and said, \"Honestly, Old Man, when did you ever not let me get away with something I wanted?\"\n\n\"Well, let me think.\"\n\nGwen injected, \"You wouldn't go shopping with me for a new bed and I knew you weren't going to plan the wedding with me.\"\n\n\"Why did you give me the answers before I could think of them?\" was my question.\"\n\nGwen's answer was, \"Because you're such an idiot and you'd never think of such things.\"\n\n\"Was this a test?\" I asked.\n\n\"Of course not. Ivan is smarter than you when it comes to dealing with our domestic life. Why would I test you when I know you'd fail?\"\n\n\"What do you mean, 'Ivan is smarter than me?'\"\n\n\"Oh, Will, at least he knows when to get big and hard while you just sit there and look at me to explain everything else.\"\n\n\"Why are you giving me such a hard time?\"\n\n\"It's just fun and I know you're clueless about what I'm doing!\"\n\nI simply broke into laughter and shook my head in wonderment at this tiny creature. When I looked over at Gwen she stuck out her tongue at me.\n\nWhen we got home we went inside and spent a few moments with the cats as they milled around our feet. We petted them all and spoke to them and then Gwen said, \"C'mon Old Man. Let's go to the bedroom.\"\n\nThree of the cats beat us to the bedroom. I asked Gwen if she thought our behavior was so predictable that the cats knew that we'd be heading to the bedroom when we came into the house. \n\n\"They aren't dumb,\" was Gwen's response.\n\nGwen was taking off her clothes and I followed suit. She was quicker than I and she landed on the bed before I did and I heard, \"Hurry up, Old Man.\"\n\nWhen I was naked I climbed onto our bed and I looked at Gwen and, I admit, I was awestruck. Gwen saw me simply staring at her and she cocked her head and asked, \"What?\"\n\nI stared at her for a few more moments and shook my head and said, \"I just can't believe where I am in life. How did I ever arrive here with this gorgeous, smart, funny creature?\"\n\nGwen smiled and opened her arms to me and we hugged. I realized that I had an erection even without Gwen's ministrations. She felt it, too, and said, \"Ooooooh, someone is very hard right now. Shall we dispense with the licking of Anastasia?\"\n\n\"Let's us,\" was my concurring response.\n\nGwen laid back and spread her legs and I positioned myself over her. She grasped Ivan and guided him to the entrance to Anastasia and I gave a gentle shove and the head of my cock slipped into her little volcano. \n\nIt didn't seem to matter how often we did this dance of love because every time I entered the little Princess, I still seemed to get the same thrill I did the first time. I noticed that Gwen winced with pleasure when I slid inside her.\n\nWhen I thrust slowly into her, Gwen gasped, and when I slid backwards she groaned. I maintained the slow thrusting for minutes on end until Gwen urged me on with a request of \"Faster, Old Man.\"\n\nGwen wrapped her legs around my waist and her arms around my neck and came off the bed so she was suspended in air and we were connected at the waist, neck, and the piston going into and out of her.\n\nGwen plastered her lips to mine and I felt her tongue inside my mouth. We remained in this position kissing for what seemed like minutes until she broke the kiss and said, \"Oh, Will, I'm going to have a big one,\" and she began to return my thrusts. The slapping of our flesh brought the cats, but I was barely aware of them on the bed.\n\nGwen signaled her impending orgasm with a long, low, groan, and then she uttered, \"Ohhhhhhhhhhhhhhhhhhhhhhhhhh\" and she stiffened and I knew she had cum. I was in such frenzy myself I didn't even feel the flush of her fluids. I do know that I erupted into her with a guttural moan and we collapsed, coupled as one, back onto the bed.\n\nDespite having ejaculated everything inside me, I still managed to keep thrusting until I was too soft to continue.\n\nHow long did we lay in a collapsed heap? I have no idea. I did become aware of the Princess pounding on my rib cage and muttering something about \"Sasquatch.\" Laughing, I rolled to the side and onto my back bringing the Princess with me.\n\nShe crawled up my chest and kissed me and then she propped herself up on her elbows and looked at me with amazement. \"Old Man, you had a big one! Where did you get all the stuff you just pumped into me? I'm leaking already.\"\n\n\"I have no idea, Princess.\"\n\n\"Well, I loved it, and I love you, you precious Old Man.\" And we kissed and then we kissed some more.\n\nWhen we broke the kiss, Gwen said, \"Shower, Old Man. Carry me.\"\n\nMy response was, \"How long do you think my back is going to hold up carrying you everywhere, Princess.\"\n\n\"Oh, poop, you're as strong as an ox. Pick me up.\"\n\nOf course, I picked her up and carried her into the bathroom and she directed me to the potty. I deposited her on the potty and started the shower. From the potty, Gwen asked, \"And, just what do you think you're doing?\"\n\nI replied, \"I'm getting the shower hot enough so that I feel like I'm getting a real shower.\"\n\n\"You will not determine the water temperature. Your Princess is far too delicate for your clumsy efforts. Unlike you, I do not have a hairy covered hide.\"\n\nSo, I grinned at Gwen and climbed into the shower. In a minute Gwen was in the shower with me and she immediately adjusted the hot water stem to her satisfaction. When she had her desired temperature she looked up at me and told me I was a big dummy. But, she did a beautiful job of washing my cock so; all in all, it wasn't a bad shower.\n\nAfter showering we got out of the tub and Gwen plastered herself to me with her arms around me. I dried her back and then held her.\n\nFinally, she unwrapped herself from me and I dried her off and she said, \"Come to bed. We need to talk.\"\n\nWe walked to the bed and found a huge wet spot where we had coupled and Gwen sighed, \"Look at the mess you made, Old Man. Why must you be so effusive?\"\n\nI gave her a cockeyed look and reminded her that it was she who had the little volcano of a pussy that routinely erupted.\n\n\"That's right,\" she said, \"blame it on the woman. The poor woman who has to submit to the animal instincts of the beastly man gets blamed for everything.\"\n\n\"Just change the sheets, Princess, and spare me the histrionics.\"\n\nGwen went off to get some clean sheets and I slipped into some jeans and was putting on a sweatshirt when Gwen returned. The Princess returned and said, \"Nay, nay, no clothes. This is a serious conversation.\"\n\nI rolled my eyes and undressed and helped Gwen put on new sheets and then climbed into bed and the little Princess climbed on top of me.\n\nGwen began: \"Topic One: Barb knows that no matter what happens with my job interview, we are moving to Alabama. She wants to move with us, live with us, work for a year, and then go to grad school.\"\n\n\"OK,\" I said.\n\n\"That's it,\" said Gwen. \"What do you think?\"\n\n\"OK,\" I said.\n\n\"Old Man, did you understand what I just said?\"\n\n\"Uh, I think so.\"\n\n\"What did I just say?\"\n\nI summarized it as, \"Barb wants to live with us in Alabama and work for a year before going to grad school.\"\n\nGwen said, \"Gee, you were listening. OK, so what are your thoughts?\"\n\n\"OK,\" I said.\n\n\"That's it?\" asked Gwen. \"It's OK with you for Barb to move, and live, with us?\"\n\n\"Sure.\"\n\nGwen started laughing and said, \"I thought you'd examine the implications of that from twelve different angles and then say, 'Let me think about it.'\"\n\n\"I already did think about it. I figured that's what she wanted to do when I hadn't heard anything about making application to a grad school.\"\n\nFor some reason, Gwen was much amused at me. Still grinning, she climbed up further on my chest and kissed me.\n\n\"OK, she said, \"Topic Two: Charles, my son, is being released from the hospital. He wants to come to the house this coming weekend and apologize to all of us for his behavior on the day we had him admitted to the hospital.\"\n\nI thought about that for a minute and said, \"OK, that's the plot. Tell me about the characters and the setting.\"\n\nGwen nodded and added, \"His father will drive him to the house on Saturday afternoon and spend some time with us to provide Charles the opportunity to apologize. It's my understanding, they won't stay very long.\"\n\nI responded, \"Well, it's your son and your house. I'll do whatever you are the most comfortable doing.\"\n\n\"Thank you. But, I want your best thoughts on this and I don't want you simply accommodating me.\"\n\n\"Really, Princess, I want you to do whatever you want to do. This is your son. Do you want to meet them at a restaurant for lunch? Do you want to host a lunch at home? Do you want them to come by in the afternoon? I'm not happy saying this, but Charles means so little to me that I'm simply indifferent to him.\" \n\n\"That indifference is what I feared,\" responded Gwen.\n\nGwen turned her head and laid it, cheek down, on my chest to think about the options. I gently massaged her gorgeous bottom and kissed the top of her head and then wrapped my arms around her.\n\nFinally, she raised her head and said, \"OK, we'll host them Saturday afternoon. Please, for me, do be present.\"\n\n\"Fine, Will David, the First will be present.\"\n\n\"And,\" Gwen added, \"please don't re-break his nose.\"\n\nI laughed and said, \"I suspect he'll be so medicated he'll be unable to insult or slap or spit and stay upright, too.\"\n\nGwen wanted to know why she was so tired given that it was only 9:00 p.m.\n\nI suggested that she had emitted so many fluids during our love-making that she was dehydrated.\n\nThe Princess announced, quite archly, \"We are not amused.\"\n\nNonetheless, after cleaning the litter boxes for the second time that day I turned out the lights and Gwen and I went to sleep in each other's arms.\n\nTuesday followed what was, for me, a normal schedule until I reported to the chairperson's office at the university and Marcie began the tedious task of teaching me how to be a departmental chair. I was utterly amazed at the tedium involved and decided that Marcie was to function in my stead until she had a question at which time she was to consult with me.\n\nThis struck Marcie as exceedingly funny and she explained the humor of the situation as being \"the more things change, the more they stay the same.\" That was a real summary of the job Gearhart had done in his many years as departmental chair.\n\nAbout 1:30 p.m. Marcie came into my office and asked if my no open-door policy included Dr. Davis. My response was \"Oh crap! I forgot to tell you that it did not.\"\n\nMarcie got a big kick out of that and warned me that I was going to hear about it when Gwen and I got home. I assured Marcie that I was going to hear about in the next fifteen seconds which Marcie found quite funny.\n\nShe left and Gwen marched in, stamping and yelling, \"You idiot, you forgot to tell Marcie that I was exempt from the no open-door policy.\"\n\nGwen grinned and shimmied onto my lap and said, \"I knew you would,\" and she gave me a big kiss.\n\n\"Hi Princess. What's a nice girl like you doing in a place like this?\"\n\nGwen enjoyed that and still grinning said, \"I'm only here for a minute to tell you the funniest thing that happened this morning.\"\n\n\"I'm listening,\" I responded.\n\nGwen asked, \"Do you remember the fellow who challenged you yesterday by asking what would happen if he didn't play the game and you made him restate the question before you'd answer him?\"\n\n\"The tenured fellow?\"\n\n\"Yes, him,\" was Gwen's response. \"He stopped me in the hall today and, with a big smirk, asked me what you had to say about him last night and what did I say in response.\"\n\nGwen continued, \"I told him he really flattered himself if he thought he even registered on your radar because you neither said nor asked anything about him.\"\n\nGwen ended with, \"Boy, you should have seen him stomp off down the hall!\"\n\nI laughed and Gwen wiggled off my lap and said, \"One suggestion?\"\n\n\"What?\"\n\nShe said, \"Put names to faces. These are your faculty.\"\n\n\"Ugh! You think that's necessary?\"\n\nGwen went out the door emphatically nodding her head 'Yes.'\n\nI sat there for a minute and then called Marcie in and asked, \"Do you think I need to learn the names and faces of the bozos in this department?\"\n\nMarcie smiled, but she said, \"Yes, you do.\"\n\nMarcie and I spent the next thirty minutes with photos of the faculty trying to put names to faces. When we quit, I asked Marcie to remind me tomorrow that we needed to do this again because I'd forget at least half what I learned today.\n\nI went home and worked hard on revisions of the book and was quite satisfied with my progress when Gwen got home around 6:00 p.m. Apparently, the faculty was actually working on the tasks laid out for them.\n\nGwen popped into my lap and I said, \"I know, let's go someplace nice for dinner.\"\n\nShe said, \"Yes, let's! But, first, Old Man, I need you to lick me.\"\n\n\"What brought that on?\" I asked.\n\nGwen laughed and said, \"Listening to the faculty bitch about you and having them tease me about our entrance to the dinner at the national conference made me wet.\"\n\nShe jumped off my lap and grabbed my hand and led me to the bedroom. She placed a pillow on the bed, hiked her skirt up to her waist and jumped onto the pillow and spread her legs.\n\n\"We aren't undressing?\" I asked.\n\n\"No, you idiot. Lick!!\"\n\n\"You never cease to amaze me, Princess. Where are your panties?\"\n\n\"In my purse. I took them off at school and drove home without them.\"\n\nShaking my head I positioned myself between Gwen's legs and asked, \"Where exactly is it you want me to lick?\"\n\nThe answer I received was, \"Will David!!!\"\n\nBeing the skilled translator that I am, I knew that meant to lick now. I did lick the Princess from the bottom to the top of her wet, red pussy. Her gasp told me I was doing something correctly. Subsequent licks yielded subsequent gasps. When the Princess was writhing and moaning I used the tip of my tongue to flick rapidly up and down on her protruding clit. Gwen was slamming her fists into the bedcover and with a final yell of \"Auuuuuggggggggggggggghh!\" her legs shot straight out and she exploded into orgasm.\n\nWhile she was still in the throes of her orgasm I scrambled up the bed to be beside her and when she turned to me I wrapped her in a big hug and kissed the top of her head.\n\nThe Princess was heaving and gasping for a long while. When she finally calmed down, she looked up at me and said, \"Old Man, you make me crazy.\"\n\n\"Good,\" I said. \"I hope I always do.\"\n\nGwen flashed the devilish grin and instructed me, \"Go wash your face, Old Man. You must have slobbered all over yourself in your dotage.\"\n\nI put my hand over Gwen's pussy and said, \"I did not slobber. The little vixen to whom this belongs gushed all over my face.\"\n\n\"You will not call the Lady Anastasia a vixen,\" was Gwen's retort.\n\n\"Then I would definitely call her a little volcano,\" I stated.\n\nGwen stuck out her tongue at me as I departed for the bathroom. After cleaning myself I was drying off when Gwen appeared with her skirt still gathered around her waist. \"Wash me, too,\" she said.\n\nI lost it. I slumped to the floor laughing and I laughed until I couldn't catch my breath. Gwen was initially puzzled, but eventually my mirth was so infectious she was laughing too, and asking, \"What?\"\n\nEventually, I calmed down and, between occasional outbursts of laughter, I managed to draw a verbal picture of the incongruity of the prim, proper, reserved woman the world knew as Dr. Gwen Davis, and the sexy little vixen I knew. Then, I added, if my colleagues could see me now, washing you with your skirt around your waist, and I dissolved into laughter again. Gwen certainly caught the spirit of how incongruous our public and private identities were, and she started laughing, too.\n\nWhen we had both regained our sanity, Gwen remarked, \"Well, I'm not going to apologize for my behavior. Eight hours after I met you I was crazy and naked and having orgasms right and left and I've never had so much fun in my life and I'm not going to stop.\"\n\nAs I grabbed a wash cloth to clean Gwen's sticky thighs and pussy, I said, \"And, I don't want you to stop.\"\n\nWhen I dried the Princess, I stayed on my knees and she folded herself into me and we kissed with a passion that could melt ice.\n\nThe remainder of the week was notable for nothing of consequence although the departmental faculty was, or at least appeared to be, deeply involved in their deliberations about what to do to transform themselves into a real department in a real school in a real university.\n\nOn Friday, Clinton Olsen and Josh Edwards were at my office door at Noon and Marcie was with them. I waved them all into the office and we began our short meeting by my greeting the two faculty members by name.\n\nThey exchanged looks and then both of them looked at a very smug Marcie who held out her hand and each faculty handed her a $5 bill. \n\nEdwards turned to me and asked, \"How did you learn our names?\"\n\nI nodded to Marcie and both Olsen and Edwards glared at Marcie. Marcie, still looking very smug, said, \"Boy, are you two dumb.\"\n\nI found this very funny although neither of the faculty members did.\n\nWe did begin the meeting in earnest when I asked for their progress reports.\n\nOlsen gave a very coherent report on the departmental mission by indicating that the faculty strongly favored developing a strong applied statistics mission in order to consult with businesses and local and state governments in the area.\n\nI thought about that for a moment and said, \"OK, we have to go see the Dean because this has some real implications for who the next chair is going to be.\"\n\nI followed that up with some questions and received some coherent answers. I asked Marcie to get us an appointment with the Dean and to make a note that this decision had strong implications for the teaching schedule of applied people who would need Fridays for consulting visits.\n\nEdwards followed Olsen and explained that visits with the department chairs of all the other departments were scheduled for the next week and the purpose of the visits was to let the departments air their grievances and for the departmental faculty to understand where their teaching was deficient.",
        "I nodded approval. Edwards continued, \"Gwen has impressed upon us that we aren't really up to speed in our teaching methods and we need to learn how to get students much more engaged in their learning.\"\n\nAgain, I nodded approval and Edwards said, \"McDermott\u00b8 the head of the Teaching Center, is putting us off and saying he can't meet with us for at least a month so we can't make any traction there.\"\n\nI looked at Marcie and asked, \"Who is McDermott?\"\n\nMarcie dryly remarked, \"Richard McDermott is His Rotundness. He's the fat guy with the big mustache who bustles around like he's the reason the school exists.\"\n\nInterestingly, both Olsen and Edwards nodded their agreement with Marcie's assessment.\n\nI thought a moment and asked Marcie to go get the school's budget. She had it in a moment and I asked what the overall budget of the Teaching Center was.\n\nMarcie reported that the overall budget for the Center was $145,000. \n\nI followed that up with the question, \"What does a three credit course cost in this department?\" \n\nMarcie said, \"Three hundred dollars.\"\n\n\"How many undergraduate students did this department teach last year?\" was my follow-up question to Marcie.\n\nMarcie left the room momentarily and returned to say, \"We taught three thousand undergrads last year.\"\n\n\"So,\" I concluded, \"this department generated nine hundred thousand dollars last year.\"\n\nMarcie nodded her agreement.\n\nMy next question was, \"What percentage of the revenue we generate is siphoned off the top to support administrative functions?\"\n\n\"Twenty percent,\" was Marcie's response.\n\n\"Uh huh,\" I grunted. \"So, we generated one hundred and eighty thousand in administrative fees last year which is more than McDermott's entire budget.\"\n\nMarcie started smiling and Olsen and Edwards started laughing and I said, \"Marcie, please call McDermott's Office this afternoon and inform whomever that Richard the Fat will be here at 10:00 a.m. Monday morning,\" and I glanced at Edwards who shook his head and said, \"11:00 a.m.\"\n\nMarcie said, \"11:00 a.m. on Monday to meet with you and Dr. Edwards.\"\n\n\"Correct,\" was my response.\n\n\"Well done, gentlemen. Shall we meet next Friday at the same time for another progress report?\"\n\nBoth men nodded agreement and before I said, \"Meeting adjourned,\" Marcie injected, \"What would you guys like to bet on for next week?\"\n\nBoth Olsen and Edwards scowled at Marcie who enjoyed a quiet laugh and held up her two $5 bills.\n\nI went home to Gwen's and made two phone calls. The first was to my editor informing her that I was satisfied with my revisions and was sending her the book, by e-mail, chapter by chapter. We had a good phone visit and concluded that she would let me know about revisions as she reviewed the text.\n\nMy second call was to Sheik Abdullah of the Ministry of Education in the Emirate of Dubai in the United Arab Emirates. After the extended courtesies of our greetings to each other the Sheik inquired about the purpose of my call. I explained that by July, when I was to fly in for a few days of consulting, I would be married and I asked if my wife could accompany me. The Sheik appeared overjoyed at the news and extended the hope that she was very young and voluptuous. We laughed heartily at this and the Sheik went on to explain that not only was my future wife welcome, she had to come as a guest of the Emirate.\n\nI was simply floored by the Sheik's generosity, but he absolutely insisted that Gwen must be their guest. He assured me that he would send a ticket for Gwen along with mine and he quietly mentioned that he would also include what he judiciously referred to as \"guidelines\" for dress and behavior for Western visitors.\n\nI thanked the Sheik profusely for his generosity and we wished each other good health and long life and much virility.\n\nI hung up the phone laughing at the Sheik's priorities, but it was a laugh of appreciation.\n\nGwen returned home at 6:00 p.m. yet again and I was impressed that the faculty were working late even on a Friday. Gwen said that the faculty had met as a whole to hear Olsen and Edwards report on their meeting with you.\n\nThey raved about the meeting because it was brief and to the point and you were helpful. I think the faculty got a whole new appreciation for you after today.\n\n\"Just doing my job, Princess. Speaking of, tell me what you know about this McDermott fellow.\"\n\nInterestingly, Gwen frowned at his name and she said, \"Oh, he knows his stuff, but he's so pompous he turns off everyone. He's arrogance personified.\"\n\nGwen added, \"He'll make trouble for you because Edwards told us that you had him summarily summoned to your office Monday.\"\n\nI responded, \"Did Edwards also tell you McDermott had said that he could meet with Edwards' group in a month or more?\"\n\n\"Oh, yes, Edwards mentioned that, but everyone agreed that McDermott will do his best to make trouble for you.\"\n\n\"Well, we'll see, Princess, we'll see.\"\n\nWe certainly did see. The phone rang and it was Gwen's dean wanting to speak with me. Gwen put the phone in speaker mode and I took the receiver from her.\n\nThe dean explained that he had just got off the phone with an apoplectic McDermott whom the dean suspected was foaming at the mouth because I had demanded his presence on Monday. \"What,\" the Dean wanted to know, \"is the story?\"\n\nI explained it to the dean who thought a moment and then said, \"Thanks for the clarification. I'll call the pompous ass right back and tell him to get his chubby cheeks into your office as specified.\"\n\nWe said, \"Goodnight and have a nice weekend.\" \n\nGwen burst out laughing and said, \"Old Man, you lead a charmed life.\"\n\nI responded, \"I know. I have you.\"\n\nGwen beamed and said, \"Ohhhhhhhh\" and melted into my arms for an extended hug. Of course she followed up this tender moment with \"Feed me!\"\n\n//\n\nBarb arrived early on Saturday and she and Gwen talked wedding plans while I headed to the driving range and hit a few bucket of balls.\n\nUpon my return home I found a restive Gwen and Barb. They were obviously worried about the condition in which they would find their son and brother.\n\nWe had a light lunch and we all read until 1:30 p.m. when the two Charles' appeared.\n\nCharles the First alighted from his SUV spryly and Charles the Second managed to fall flat on his face doing so. Barb expressed distress and Gwen cautioned her that it might be the effects of medication.\n\nGwen's ex walked to the door and Charles, the Second wobbled. Charles the First shook his head despairingly at Gwen and Barb. Clearly, something was not right. They came inside and Charles the Second greeted his mother and sister civilly. \n\nGwen hugged her son and asked him a few simple questions about his health, but Charles was vague and unhelpful. Gwen brought them into the living room and seated them and went to the kitchen to bring some cold drinks.\n\nCharles the Second asked where the cats were and Barb said, \"Oh, they're probably all outside playing somewhere.\"\n\nDuring all this I sat motionless on the couch taking in everything while beginning to wonder what the psychiatrist treating Charles had accomplished.\n\nCharles the Second began a rambling soliloquy about how sorry he was for the trouble he had caused and, in mid-sentence; he realized that someone else was in the room. He studied me carefully for a few seconds and then turned to his dad and said, \"That's the bastard who broke my nose.\"\n\nGwen's ex, a small man by any measure, seemed to shrink into himself and he threw up his hands and asked, \"Does anyone have any ideas what I can do with this kid? He's a mess!\"\n\nGwen froze with a tray of drinks half-way into the living room. She turned to me and said, \"Will?\"\n\nI nodded to Gwen and turned to her ex and said, \"Get a referral to the University's Medical School. He needs a complete physical and neurological work-up and he needs it at the hands of the best in the State.\"\n\nGwen's ex stared at me for a long moment and then nodded his head. With some effort he stood and said, \"Come on Charles; let's go get you some of that chocolate ice cream you've been wanting.\" \n\nThe son stood up shakily and forgot to say goodbye. He merely shuffled after his father who held the door for his son and helped him negotiate the steps.\n\nGwen was shaking and I got to her in a hurry and relieved her of the tray of drinks and put them down. I half-swept and half-carried Gwen to the couch and had her lie down.\n\nNo one spoke for the longest time until Gwen asked, \"Will, do you think it's something neurological?\"\n\n\"I do.\"\n\n\"Do you think,\" Gwen asked, \"it's a brain tumor?\"\n\nMy response was, \"I would think so, but it's inconceivable that a hospital would miss that.\"\n\nTo make a long, sad, story a lot shorter, a radiologist at the hospital had missed the brain tumor which was the first thing the medical college found. It was benign, but it was, by then, so large that the subsequent surgery only saved Charles' life. He was consigned to a facility for life because he simply could not function well enough to take care of himself. In fact, he was so impaired that he had genuine difficulty recognizing people he did not see every day. Essentially, Gwen and her ex-husband had lost their son and Barb had lost her brother.\n\nAs a footnote to the disastrous visit to Gwen's house, Barb came to me later that day and asked me, \"Will you be my daddy?\" \n\nPuzzled, I looked at Barb who said, \"My biological father never even said, 'Hi' to me this afternoon.\"\n\nI looked to Gwen who shook her head affirmatively so I said to Barb, \"I'm not sure what it means to be your daddy, but I'll give it a shot.\"\n\nBarb wrapped her arms around me and said, \"You'll do fine.\"\n\nWe pretty much sleep-walked our way through Sunday. Barb returned to college Sunday evening and a very subdued Gwen retired early and I later joined her. Interestingly, the cats surrounded the sleeping Gwen.\n\nI was heartened, during the wee hours of the night to awake to Gwen slowly sucking my cock, but she surprised me by not asking for sex. Instead, she merely slid up the bed and asked me to hold her until she fell back to sleep.\n\nMonday represented a new challenge with McDermott and I decided not to tolerate any nonsense so I brought my tape recorders to the office.\n\nEdwards showed up at 11:00 a.m. and McDermott displayed his importance by showing up ten minutes late. Edwards and I were duly impressed.\n\nMcDermott rumbled into my office looking like the wrath of god and did a double-take when I made a major show of turning on the tape recorders. \"What the hell is with the recorders?\" he snapped.\n\nI said, quite pleasantly, \"Good morning, Dr. McDermott. Thank you for joining us this morning as we consider the problem of enhancing our teaching skills. The recorders will serve as a record of our discussion so that, at a later time, you and we can return to the recording and confirm our understanding of what each of us has agreed to do this morning.\"\n\n\"Yes, well, be that as it may, I do not appreciate one bit being summoned to your office in the rude manner in which I was summoned,\" was McDermott's rejoinder.\n\nMy response was, \"If I may quote the dashing Rhett Butler, 'Frankly my dear, I don't give a damn.'\"\n\nMcDermott stared, almost incredulously, at me and I said, 'Now, let's dispense with the posturing and get on with the meeting. Let me turn this meeting over to Josh Edwards who will give you an outline of what we need.\"\n\nThe meeting went swimmingly well if we discount the occasional dirty look McDermott threw at me. But, he did articulate clearly what Edwards had expressed and he and Edwards worked out a summer-long schedule that would enhance the teaching skills of the faculty.\n\nAt the end of the meeting I indicated that I thought things had gone well and, as a memento of our meeting, I indicated that I wanted to give McDermott one of the two tapes of our meeting if he needed to consult it at any time in the future.\n\nI thought it was quite ungracious of him to instruct me to \"Shove your tape.\" Collegiality was certainly not Dr. McDermott's strong suit.\n\nMcDermott left huffily and Edwards enjoyed a good, long laugh. He asked, \"Why didn't you respond to his 'shove your tape' crack?\"\n\n\"Let him have his little victory,\" was my response. \"He needed to recover some dignity,\" and I shared with Edwards the dean's phone call to me of Friday evening.\n\nEdwards nodded and said, \"See you Friday.\"\n\nI called after him, \"Don't forget grade inflation and how that's tied to the teaching issue.\"\n\n\"Don't worry,\" Edwards called back. \"That's the elephant in the room with our committee.\"\n\nThe rest of the week was series of peaks and valleys. The meeting with Olsen and the dean went very well and the dean was receptive to Olsen's thinking. Much time was given to how the department would implement the applied statistics theme and we determined that, in addition to Gwen, two other young fellows in the department were likely to depart so that there was a distinct possibility of three new hires that could contribute to the desired departmental mission.\n\nThursday was a really awful day because that was the day Gwen learned that the radiology faculty at the medical school had discovered Charles' large tumor and the very guarded prognosis suggested that a productive life for Charles the Second was very doubtful.\n\nOn the other hand, in a week, Barb would be graduating from college and we would all be headed to Alabama for Gwen's interview. \n\nFriday's meeting with Olsen and Edwards went well and I began to think that the departmental faculty was actually a pretty good group and their utter disarray had really been grounded in Gearhart's utter incompetence.\n\nI was so heartened by what I was seeing, I arranged another meeting with the dean and urged him to fire me and turn the department over to Marcie and Olsen and Edwards until a new chairperson was hired. The dean asked for a few days to think it over.\n\nBarb stayed at college over the weekend as she attended to getting her stuff packed and stored and dealing with graduation issues.\n\nGwen had been quiet and reserved all week. Perhaps 'listless' would be a better descriptor of her mood and behavior in light of her son's condition.\n\nOver the weekend, I thought it might brighten Gwen's outlook if I told her about out upcoming trips in July. I explained my consulting trips to Michigan, Delaware, and Texas and indicated that I wanted her to accompany me. She perked up and asked lots of questions which I answered and when she wound down I told her about our trip to Dubai in July. She squealed with delight and said, \"Oh, I'll need clothes!\"\n\n\"You will not need clothes for Dubai, Princess. In fact,\" and I lifted her sweatshirt to reveal her braless breasts, \"you will keep these beauties under wraps at all times in Dubai.\" As I said this, I tweaked her nipples and rolled them between my thumb and finger. Gwen's eyes fluttered and she gave a little gasp.\n\nIt dawned on me that the usually highly orgasmic Princess had not expressed interest in sex for at least a week. Acting on that thought, I slid my hand down the front of her jeans. Not surprisingly, I encountered no panties. I placed my hand on her pussy and said, \"And, in Dubai, you'll keep this covered\u00b8 too.\"\n\nGwen's hand shot out and grasped my cock. She looked up at me and said, \"Screw me, Old Man, right now, please.\"\n\nI picked the Princess up and carried her to our bed where she asked me to undress her which I did in a few seconds. I got out of my clothes and presented her my cock so she could make me hard.\n\nGwen's comment was, \"Poor Ivan has been so neglected this week,\" and she commenced sucking me to hardness. Actually, she had Ivan hard in record time and she triumphantly announced\u00b8 \"What a good boy! He's ready to screw!\"\n\n\"Gee, that was elegantly put, Princess,\" was my response.\n\nGwen stuck out her tongue at me as she positioned a pillow under her beautiful tush. She spread her legs wide and announced, \"The Lady Anastasia summons big, dumb Ivan.\"\n\nBig, dumb Ivan maneuvered between Gwen's legs and I positioned Ivan for Gwen and she guided him just inside her pussy and I looked at Gwen and asked, \"Now, what?\"\n\nHonestly, one wouldn't think a creature as tiny as Gwen could hit so hard or yell so loudly.\n\nWith my chest stinging from her punch, and my ears ringing from \"You big idiot!\" I began slowly thrusting into and out of Gwen. She smiled and wrapped her legs tightly around my waist and murmured, \"Big dummy.\"\n\nI really got into it and smiled and said, \"Oh, Princess, this is so very good.\"\n\nGwen smiled and nodded and murmured, \"Oh, Old Man, it is all that and more.\"\n\nWe thrust and thrust and thrust and when Gwen began to show the early signs of her orgasm I said, \"Princess, I'm going to pull out of you for a little bit and lick you, but I'll be back inside you shortly.\"\n\nBetween her deep breaths, Gwen nodded her approval and I slid my cock out and backed away just far enough that I could lean down and lick her clit. Her deep breathing turned to moans and then yells. She stiffened and yelled something incomprehensible and exploded into orgasm.\n\nWhile still in the throes of her orgasm I scooted back towards her and re-inserted my cock into her still pulsing pussy. Gwen let loose with an \"OHHHHHHHHHHHHHHHHHH\" that may well have shaken the windows. I resumed thrusting and she was trying, and failing, to say something comprehensible to me. She did wrap her arms around my neck and held onto me for dear life while I increased the pace of my thrusts. Ultimately Gwen let loose with a shrill cry, stiffened, and had her second orgasm.\n\nShe quickly went from stiff to jelly and her arms and legs unwrapped around me and she fell limply to the bed.\n\nI was heaving from the exertion and waited from my breathing to become more regular before I wrapped the Princess into my arms and held her.\n\nPerhaps five minutes later Gwen opened her eyes and whispered, \"I don't think you should do that to me again.\"\n\nMy response was, \"Oh? Why not?\"\n\n\"Because I think you killed a lot of my brain cells, that's why.\"\n\nShe snuggled up to me and felt my now deflating cock and she looked at me with surprise and asked, \"You didn't cum?\"\n\n\"No.\"\n\n\"You mean,\" Gwen asked, \"I could ask you later to screw me again?\"\n\n\"You can certainly ask.\"\n\n\"You're amazing, Old Man.\"\n\n\"Why is that?\"\n\n\"Geez, Old Man, you're 62 and you still don't use the little blue pills.\"\n\n\"Oh, well, living with you I'll probably never use the little blue pills. Ivan will probably drop off first from overuse.\"\n\nGwen laughed and tried to hit me, but she was so wiped out her punch lacked conviction. She then struggled to a leaning position and announced, \"I have to pee.\"\n\nI laughed and said, \"Well, you better get yourself to the potty.\"\n\n\"Nay, nay,\" was Gwen's response. \"The Princess must be carried.\"\n\n\"What is it with you and being carried to the potty after sex?\"\n\nGwen grinned, \"I just love being carried by you.\"\n\n\"Will you love it when I'm in a back brace?\n\nGwen said, \"Ha! You think I don't see you at the Y, but I do. Your abdominal core is probably stronger now than when you were in college.\"\n\n\"How do you see me at the Y?\"\n\n\"Spies! I have spies, Old Man.\"\n\nI had nothing to say. I had no idea what I could say.\n\nGwen finished on the potty and announced, \"Back to bed!\"\n\n\"What now?\" I asked?\n\n\"Clothes for Dubai, Old Man. You thought just because you violated my body that I'd forgotten about clothes.\"\n\n\"All right, have it your way, Princess. What clothes do you need for Dubai?\"\n\n\"Well, it's quite warm there, isn't it?\"\n\n\"Yes, in July the mean daytime temperature is one hundred and five degrees.\"\n\n\"What? Where are you taking me? I could have fainting spells in temperatures like that.\"\n\n\"Think of it this way, Princess. It's a dry heat. It beats the heck out of Alabama in July when it's humid and ninety-five degrees.\"",
        "\"Whatever, that's hot. Let's see: I'll need new bras and panties and open sleeve jerseys and shirts and shorts and lots of new sandals and flip-flops. I'll definitely need your credit card.\"\n\nI was starting to enjoy myself and asked, \"Anything else?\"\n\n\"Oh, yes! Hats and sunglasses, too. Numerous hats and sunglasses will be required to match my cute outfits that you're going to buy me.\"\n\n\"Princess...\"\n\n\"What?\"\n\n\"If I try to tell you what would happen to you if you showed up in Dubai in a sleeveless top and shorts, you wouldn't believe me. I want you to Google 'Dubai' and read about it and then you can tell me all about the new clothes you'll need.\"\n\n\"Are you serious, Old Man?\"\n\n\"I'm very serious, Princess.\"\n\nGwen looked very dubious and wasn't at all certain that I wasn't kidding her, but she did put on a sweatshirt and panties and went to the computer. I got up and made myself a cup of coffee.\n\nAs I was pouring the coffee I could hear Gwen shouting at the computer, \"What?!\"\n\nI sat down in the kitchen and heard, \"When pigs fly, Mustafa!\"\n\nThe next outburst was, \"You can kiss my tush, Abdullah!\"\n\nFinally, I heard, \"Veil THIS, Habib!\"\n\nThen I heard the chair squeak and Gwen yelled, \"Where are you, Old Man?\"\n\nI responded, \"In the kitchen.\"\n\nGwen came marching into the kitchen with flashing eyes and said, \"That place is crazy! It's got to be the most modern place in the world economically, but socially it's in the ninth century.\"\n\n\"That's a pretty good analysis,\" Princess.\n\n\"Why are they like that?\" Princess asked.\n\n\"They are like that because Dubai is not thinking the oil will last forever and they are diversifying like crazy. But, they aren't going to alienate their people by destroying any cultural or religious norms. Those guys walk a tightrope trying to provide for the future of their people, while not alienating the people in a tornado of change.\"\n\n\"Why in heaven's name do you consult there?\" Gwen asked.\n\nMy response was, \"I really enjoy the men with whom I interact there and the pay is outstanding. When you go crazy with my credit card weekly, you're probably spending Dubai's money.\"\n\n\"I do not go crazy with your credit card weekly,\" Gwen yelled.\n\n\"Would you like to see my credit card statements, Princess?\"\n\nGwen stuck out her tongue at me and stomped off yelling, \"You're a big bully.\"\n\nI had to start laughing and when I looked up a grinning Gwen was peeking around the corner. She came into the kitchen and got on my lap and said, \"I think you should go to Dubai and make us lots of money.\"\n\nAgain, I started laughing and said, \"I'm sure you do. Are you not coming with me?\"\n\n\"Oh, no! I'm coming with you, but I don't know how I'll dress when we're there.\"\n\n\"When they send our airline tickets, they'll include guidelines that address dress and behavioral codes.\"\n\nGwen looked shocked and asked, \"They have behavioral codes, too?\"\n\n\"Yes, they do, Princess.\"\n\n\"Gee, will we be allowed to screw?\"\n\n\"Yes, Princess. We may screw in the privacy of our own room.\"\n\n\"Well, then, what are the behavioral codes?\"\n\n\"Well, let me give you some examples. You'll be publically flogged if you stick out your tongue at me. Or, if you call me an idiot you'll be fined and spend one night in jail. If you stamp your foot and yell at me, you'll be jailed for two nights.\"\n\nGwen glared at me as only Gwen can glare and said very carefully, enunciating each syllable, \"You are a big idiot!\"\n\n\"Uh oh! You said I'm a 'big' idiot. That's two nights in jail and no one will carry you to the potty on time and you'll pee on the floor.\"\n\nGwen's face was distorted into something bizarre as she tried not to laugh, but she finally exploded into laughter and almost fell off my lap. I managed to grab her and pull her more securely back onto my lap whereupon she placed both arms around my neck and laughed into my shoulder. When she finally calmed down she jumped off my lap, stuck out her tongue, stamped her foot, and reiterated, \"You're an idiot.\"\n\nWith that she stomped off to somewhere in the house and, while she thinks I can't hear anything less than a shout, I heard her laughing.\n\nI sat back and finished my coffee. I got up to rinse my cup and Gwen appeared in the kitchen saying, \"You have to decide who your best man is for the wedding and contact him and arrange for him to stay here and get you to the ceremony, and so forth.\"\n\nI looked at Gwen and thought about what she just said and said, \"I'm pretty capable. Why do I need a best man, and what in the world is a best man?\"\n\nGwen erupted into laughter and walked away and I swear I heard her refer to me as an 'idiot' again.\n\nI went into the living room and started reading and Gwen called me to the computer where she had found a web site describing the duties of the best man. I dutifully read everything the web site had to say about the duties of the best man and informed Gwen, \"I can do all that. I don't want a bachelor party and I don't need someone to keep me calm and drive me to the church and all that rubbish.\"\n\nGwen led me by the hand to the big lounge chair where I sat and she climbed into my lap. She began by saying, \"Old Man: this is important. This is like the bra and panties thing at the national conference. This is like the ta-tas. Some things just are.\"\n\n\"Do you mean convention dictates that I have to have a best man?\"\n\n\"That's it exactly, Old Man.\"\n\n\"Well, do you have to have a best woman?\"\n\nGwen erupted into laughter which I found a bit disconcerting.\n\nWhen she stopped laughing she said, \"Yes, I have a best woman although the nomenclature is a bit different. The woman in question is called a 'maid of honor' if she is unmarried and she is called a 'matron of honor' if she is married.\"\n\n\"Hmmmmm...OK.\"\n\n\"But, Old Man, the important thing is that you have a best man.\"\n\n\"OK, I get it. So, who are you going to ask to be my best man?\"\n\nGwen grabbed me by the shoulders and pounded her forehead into my chest. I deduced that I had asked the wrong question.\n\nWhen she stopped pounding against my chest Gwen said, \"You have to decide who you wish to be your best man.\"\n\nI thought about that for a second and said, \"I thought you were in charge of all arrangements and I only had to show up on time with my fly zipped.\"\n\nGwen yelled, \"Auuuuuuuuuuuuuuuuggggggghhhhhhhhh!\"\n\nShe looked me directly in the eyes and explained, \"I'm sorry, Old Man. I messed up and overlooked, at the time, the issue of the best man. This is the one thing you'll have to do.\"\n\n\"Oh! OK. Why did you scream a second ago?\"\n\n\"I'm sorry I screamed, Old Man. It's just that sometimes you get so damned methodical and logical that you somehow miss the whole point.\"\n\n\"I don't understand.\"\n\n\"It doesn't matter. All that matters now is that you decide who your best man is and you call him and ask him to serve in that capacity.\"\n\n\"Wait a minute, Princess. What if I ask someone to be my best man and he doesn't know what a best man is? Will you explain it to him?\"\n\n\"Yes, I will. Now, whom do you wish to be your best man?\"\n\n\"I have no idea.\"\n\nGwen sighed. Then she asked, \"Who is your oldest and best friend?\"\n\nI replied, \"Walt is.\"\n\n\"Don't you think, then, that Walt is the person whom you should ask to serve as your best man?\"\n\n\"OK.\"\n\nGwen climbed off my lap and said, \"Let's go call him, now.\"\n\nI said, \"OK, but do you think he'll know what I'm asking him to do?\"\n\n\"Yes,\" Gwen answered, \"Walt is married so he undoubtedly had a best man for his wedding.\"\n\n\"That's right. That's a good point, Princess.\"\n\nWe got to the kitchen and I looked up Walt's home number and I called him. Gwen put the phone in speaker mode so she could monitor our conversation and help me if I needed help.\n\nWalt answered the phone on the third ring and I identified myself and Walt gave me an enthusiastic greeting and asked what was new. I explained that I was calling to ask him to be my best man at my wedding.\n\nWalt found this inordinately amusing and wanted to know who in the world would marry me?\n\nI replied, \"Gwen.\"\n\nWalt also found this inordinately amusing and said, \"Will, Gwen's too bright to marry you.\"\n\n\"No, really Walt, we're getting married.\"\n\n\"Will, you are the original lonesome wolf. Getting married means living very intimately with someone.\"\n\n\"Walt! We're getting married.\"\n\nWalt asked, \"Is Gwen there?\"\n\n\"Yes,\"\n\n\"Let me speak to her, Will.\"\n\nI gave the phone to Gwen who took it from me and spoke, \"Hi Walt. It's Gwen.\"\n\n\"Hi Gwen,\" was Walt's response. \"Are you and Will really getting married?\"\n\n\"Yes, we are, Walt.\"\n\n\"Gwen, there are good reasons Will has never married. I mean, he lives in his own world. Can you give this a little more time, before you jump into this?\"\n\nGwen laughed and said, \"Walt: I appreciate your concern, but relax. It's fine. We've lived together since January and we are meant for each other.\"\n\nWalt said, \"Really?\"\n\nGwen responded, \"I know what a lousy marriage is, Walt. Being with Will is the most natural thing I've ever done.\"\n\n\"OK, Gwen. I'll be Will's best man, but I'm not hosting any stupid bachelor party.\"\n\nGwen laughed and said, \"I can't imagine anything Will would dislike more so there's no need to think about having a bachelor party.\"\n\nWalt concluded with, \"Send me the details via e-mail and I'll get back to you.\"\n\n\"Thank you, Walt.\"\n\n\"Put Will back on, please.\"\n\nGwen handed the phone back to me and Walt and I talked for another ten minutes and we then concluded our conversation.\n\nGwen announced, \"I'm exhausted between you destroying my brain cells, reading about Dubai, and trying to get you to understand that a wedding ceremony requires a best man.\"\n\n\"A tough day, huh?\" was my response.\n\n\"Yes, but getting Walt lined up was a major step.\"\n\nI asked, \"If Walt is my best man, who's your matron thingy?\"\n\n\"Maid of honor, Old Man. Barb is my maid of honor.\"\n\n\"Barb? Your daughter?\"\n\n\"Of course!\"\n\n\"Well, that's pretty neat, actually. What does a maid of honor do?\"\n\n\"Never mind, Old Man. The less you know, the safer it will be for all of us.\"\n\n\"You know, Princess, sometimes you confuse me.\"\n\n\"Old Man, you are in a perpetual state of confusion if you aren't in an academic setting. Everything is under control, trust me.\"\n\n\"OK, may I go read now?\"\n\n\"I think you should go read, Old Man.\"\n\n//\n\nSunday dawned beautifully both outside and inside. The sun was shining in a cloudless sky and the air was warm. Inside, the Princess was even warmer. I have no idea what got into her, but she screwed me on her side facing me, on her side facing away from me, on top of me, and she would have screwed me with her underneath me, but she lost control and had an explosive orgasm while riding on top of me.\n\nAs she lay panting on my chest I noted, \"Princess, I really wish you would wait until I had a cup of coffee before you wear me out.\"\n\nGwen stuck out her tongue at me and said, \"You have an unhealthy addiction to coffee.\"\n\n\"And you, Princess, have an unhealthy addiction to sex before I have coffee. Now, may I go make myself a cup?\"\n\n\"Not yet, Old Man. Hold me some more.\"\n\nSo, I squeezed the little Princess and kissed her until she said, \"OK, go make your dumb coffee and then take me to breakfast.\"\n\nWe did breakfast and then church and then had a light lunch and the sermon topic that morning proved to be prescient. It was the famous verse from Ecclesiastes that reads: \"To every thing there is a season, and a time to every purpose under the heaven.\"\n\nAfter lunch I went to the golf course to work on my golf game and was gone perhaps an hour and one-half and upon my return I was greeted by a gleeful Gwen who announced, \"I sold the house!\"\n\n\"You sold the house?\" was about all I could mutter.\n\n\"Yes! A new hire in biology came by with her husband to look at the house and they looked around and she said, 'I want this house.'\"\n\nShe continued, \"Then they went outside for a few minutes and came back inside and offered me five thousand less than I was asking.\"\n\nGwen grinned and said, \"Then, I got smart. Her husband is a really tall, geeky, guy so I asked, \"Did you see the bed in the master bedroom?\"\n\n\"They both said they noticed it so I told them it was new and I'd throw in the bed if they'd offer me four thousand less and they said they'd do it!\"\n\nWhen she paused and looked at me, I smiled and said, \"You are one smart cookie. What to do with that bed has been bothering me because I have the same thing at home in Alabama.\"\n\n\"But,\" Gwen asked, \"what do we do with all this stuff?\"\n\n\"You mean the household things?\" I asked.\n\nGwen nodded affirmatively.\n\nI suggested, \"Call a mover. Tell them to pack it all up and deliver it to a storage place in Alabama. Once we move into my house, you can bring what you want into the house and we'll sell the rest.\"\n\n\"OH! That's brilliant,\" Gwen gushed.\n\n\"What about Barb's stuff?\" I asked.\n\n\"Oh, I don't know,\" was Gwen's response.\n\n\"Well, tell her we'll drive down in an empty car and we'll use her car and ours to bring her stuff here to be put on the truck.\"\n\n\"Wow, what a relief to have a buyer for the house,\" Gwen noted. She added, \"They want possession next month so we'll move into your place and once the closing is done, they can move here.\"\n\nMonday brought more of the same. It was the season and a time to every purpose. Around 10:30 a.m. Marcie came into my office and was lugging a chair with her. When I inquired about the chair she said she'd be bringing in another one as well because the Dean and the Provost were on their way to meet with me.\n\nPuzzled, I noted that the two of them could sit in the two chairs already in the office. Marcie noted, though, that major administrators often walked around with administrative assistants in tow and she wanted to have at least four chairs in the office.\n\nShe had also started a fresh pot of coffee so we waited for the Dean and Provost who arrived around 10:45 a.m. The dean was by himself, but the Provost had a young lady with her whom I presumed was an administrative assistant.\n\nThe Dean and I simply nodded, but the Provost and I shook hands. She introduced me to her administrative assistant and Marcie kindly took orders for coffee.\n\nWhen everyone was seated and had their coffee, I indicated to the Provost that I hoped the circumstances of this visit were considerably more pleasant than our last meeting. She nodded that it was. I followed her nod with the question, \"To what do I owe the honor of entertaining such distinguished guests?\"\n\nThe Dean looked to the Provost who nodded and the Dean said, smilingly, \"Will, you're fired.\"\n\n\"Excellent!\" was my response.\n\nThe Dean continued, \"We,\" and nodded to include the Provost, \"met with Olsen and Edwards and were surprised to learn the depth of their grasp of what the department was facing and what it\u00b8 collectively, had to do to become a productive unit. After considering what they said, and how they presented themselves, we agreed with your recommendation that the department, under their leadership, should go forward.\"\n\n\"OK,\" was my response.\n\n\"The reason I'm here,\" the Provost injected, is to learn how you accomplished what you accomplished in such a short time.\"\n\nI sat and thought a minute and then said, \"It took the Dean's efforts and mine to channel the department's energies into productive work. The Dean delivered a rebuke to the entire department the likes of which I've never heard. It was devastating. That made them very resentful.\"\n\n\"Then, I was able to seize on their resentment and elaborate a bit on what the Dean had said, and why he had said it. My effort there was to emphasize to them that their family jewels were in a vise and if things didn't start happening, someone was going to tighten the vise.\"\n\n\"Now, we had resentment and fear operating and I gave them two very well-defined tasks to do and they had the opportunity to channel their resentment and fear into productive energy.\"\n\n\"My assessment is that, as a group, they're not the losers they appeared to be. Rather, Gearhart was so bad, the entire department drifted off into anything that resembled worthwhile work and we had eleven moons, instead of one, in orbit around the earth.\"\n\nThe Provost said, \"Very nice. Thank you for the synopsis.\"\n\nThen she said, \"Now, we do have a problem with the administrative assistant.\"\n\n\"We do?\" I asked.\n\n\"Yes, my office does not control the appointments of non-academic personnel, and it seems you two high rollers,\" as she nodded to me and the Dean, \"approved an unauthorized raise of three thousand dollars for the woman and Human Resources is in a complete uproar over the procedure and the amount. What do you propose I tell them?\"\n\nI burst out laughing and said, \"If you're who I think you are, you've already told them what they can do with their uproar.\"\n\nThe Provost, to my complete surprise, burst into laughter and said, \"You're quite right. I've already told HR, quite explicitly, what to do with their uproar.\"\n\nWe all laughed at this and the Provost said, \"There is one final matter. We hired your for three months and you've worked one, but as a gesture of our appreciation, here is your payment for the second month.\"\n\nShe handed me a check for four thousand dollars and I said, \"Not only do I thank you, but Gwen and my credit card thank you.\"\n\nThe Dean didn't get it, but the Provost did and burst into laughter again and said, \"So that's how an assistant professor dresses the way she does. I've run into Gwen two or three times at the rather exclusive shop where I buy my clothes and I've been wondering how in the world she could afford to shop there on an assistant professor's salary. The mystery is solved.\"\n\nI rolled my eyes in response. Still laughing the Provost and Dean both stood and shook my hand. I asked, \"Am I released as of now?\" \n\n\"You are,\" the Dean responded.\n\nMarcie and I said our good byes and expressed our mutual appreciation for each other and I was on my way home.\n\n//\n\nOnce home, I checked my e-mail and was surprised, but delighted, to learn that Derek Coles, my grad student who had originally reviewed Gwen's paper prior to the conference at which we met, had sent me his dissertation.\n\nMy thought was, \"Boy, from the frying pan to the fire,\" and by that I meant reading and correcting a dissertation is tough going. I had printed and read the first two chapters of Derek's dissertation when Gwen came home.\n\n\"Hi, Old Man. Are you OK?\"\n\n\"I'm fine, why?\"\n\n\"Well, I popped into your office around 12:30 this afternoon and you were gone and Marcie was gone so I couldn't ask her where you were.\"\n\n\"Oh, well, around 11:00 a.m. the Dean and the Provost came by and fired me.\"\n\n\"Oh poop!\" Gwen cried. \"Now, I'll never get to screw the chairman in his office.\" \n\n\"Yes, we must all endure some crushing defeats in our lifetime.\"\n\nGwen thought about it for a while and said, \"Well, I'm sure you're pleased so I'm pleased, too. Tell me about it.\"\n\n\"The two of them met with Olsen and Edwards and agreed with me that they had a firm grasp on things so they took my recommendation and fired me.\"\n\nGwen's thoughts were: \"Wow! That's amazing! But, I'm glad because now we are free and clear to go to Alabama.\"\n\nThen Gwen asked, \"What in the world have you printed?\"\n\n\"This is Derek Coles' dissertation. I've read his first two chapters and they are amazingly good.\"\n\n\"You've mentioned this fellow before, haven't you?\" Gwen asked.\n\n\"This is the fellow who initially read your paper that you submitted for the conference. He gave it a glowing review which grad students rarely do. He's also house sitting for me while I'm here.\"\n\n\"Well, if he gave me a glowing review, he must be very bright,\" was Gwen's response.\n\n\"Oh, absolutely. That is the acid test of intelligence,\" was my sarcastic response.",
        "As anticipated, Gwen stuck out her tongue at me and then said, \"Feed me.\"\n\nOn our way to dinner, the inevitable finally occurred. Gwen broke down and began sobbing. I simply turned the car around and headed home and half-walked, half-carried her into the bedroom and undressed and put her to bed. I laid down with her and between sobs, she asked me to undress and lie with her.\n\nI did so and she turned into me and I wrapped my arms around her and let her sob.\n\nI don't know how long she sobbed, but it was a long time. When she quieted, I got her a Diet Coke and she gratefully sipped it. She handed it back to me and I took a long swallow and put it down and laid down with Gwen again.\n\nGwen beat on my chest which I knew to mean I was supposed to roll on my back so she could lie on top of me but, instead, I said, \"Go blow your nose.\"\n\nThis, of course, brought back the memory of me scolding her at the national conference when she had had a sobbing fit and I told her to blow her nose.\n\nGwen stuck out her tongue at me and yelled, \"Go blow your own nose,\" but she did get up and blow her nose. Then she crawled on top of me and asked me to massage her bottom. I did, and Gwen said, \"It's just too much for me right now, Old Man.\"\n\nI simply nodded.\n\nShe continued: \"What has happened to Charles is so devastating. On top of that, Barb is graduating, with honors, from college. I'm facing an important job interview, a move to a new town, a wedding, and if you weren't here, I'd lose my mind. Being with you has kept me sane this long.\"\n\nAgain, I nodded.\n\n\"Thank you, Old Man, for being so calm all the time.\"\n\n\"OK, Princess.\"\n\nGwen nodded and then said, \"Thank you. I'm OK, now. But, can we visit Charles this weekend before, or after, Barb's graduation?\"\n\n\"Sure,\" I responded.\n\n\"Thank you, Old Man. Now, I'm really hungry. Will you go get us some Chinese?\"\n\n\"Yes, I will, if you'll feed these squalling cats. You'd think they were never fed.\"\n\n\"OK,\" Gwen responded and kissed me.\n\nI was off to get dinner.\n\n//\n\nThe rest of the week enabled me to arrange storage for Gwen's and Barb's belongings and I got lucky with a moving company who could move us anytime in the next few weeks. Another hurdle was overcome. As a bonus, I made great strides with Derek's outstanding dissertation.\n\nGwen did not do well on Tuesday and Wednesday, but I noticed some spark in her on Wednesday night. Early Thursday morning I realized Gwen was back, or nearly back, to her irrepressible self when she woke me and said, \"Get up Old Man!\"\n\nI looked at her and she stated, \"The Princess informs you that Lady Anastasia requires servicing.\"\n\n\"Is that so?\" I asked.\n\n\"Yes, the Lady requires that you lick her.\"\n\n\"AFTER my coffee, Princess.\"\n\n\"Nooooooooooooooooooo!\" Gwen whined.\n\nI departed for the kitchen and made a cup of coffee and returned to the bedroom.\n\nGwen was on her back and when I entered the bedroom, Gwen commenced rubbing her pussy with her right hand.\n\nI studied the situation for a moment or two and asked, \"What are you doing?\"\n\nGwen's response was, \"I am masturbating, of course.\"\n\n\"Ah, and why are you masturbating?\"\n\n\"I'm masturbating because I have no one to service me. The man who is supposed to attend to me is more interested in coffee than me.\"\n\nMy response was, \"This sounds like a guilt trip to me,\" and I turned and walked out of the bedroom.\n\nGwen's yell sounded like a sonic boom: \"Will David!! You get back in here right now!\"\n\nI returned to the bedroom and said, \"As you know, I'm very nearly deaf. Did you call me?\"\n\nGwen burst into laughter and when she composed herself she said, \"Get over here and lick me, you idiot.\"\n\n\"As you wish, Princess,\" and I knelt on the floor and Gwen positioned herself on the edge of the bed with her legs on my shoulders.\n\nI leaned forward and licked her upper thigh and said, \"Oooops, I missed.\"\n\nAs one would expect, the punishment commenced immediately. Punches rained down from Gwen onto my shoulders and the back of my head. I started laughing and looked up and grabbed her wrists to stop the blows from descending on me.\n\nFinally, I leaned forward and licked Gwen's very wet pussy and she expelled her breath and lay flat on her back. I did a very adequate job of licking her, but avoided her clit. Gwen began squirming trying to rub my tongue with her clit, but I evaded her efforts. Finally, she sat up and grasped me by the back of her head and pulled me into her pussy. She humped her clit over and over again on my lips until her head snapped back and she screamed, went rigid, gushed onto my face and collapsed on her back.\n\nI extricated myself from Gwen's legs and pulled her fully onto the bed and wrapped her in my arms. Eventually, she opened her eyes and looked at me and then kissed me forever. When she finally broke the kiss she whispered, \"I love you.\"\n\nI smiled at her and said, \"I love you.\"\n\n//\n\nWe departed early Friday and headed for the facility where Charles the Second was housed. Upon arriving we acquainted ourselves with the facility and met some staff. It was not a cheerful place and not because of an uncaring staff. The patients were simply not in good shape and it was difficult to discern joy in the place. It did seem that the place was well run and we were assured that Charles would be in good care for the duration of his life given that the hospital at which he had been misdiagnosed had agreed to provide for him for the duration of his life.\n\nGwen met with Charles alone and, while he knew her, he had difficulty conversing about much of anything. He did say that he liked some of the activities and he liked breakfast very much.\n\nGwen was pretty broken up, but tried hard to put the whole visit into a perspective that would allow her to enjoy Barb's excitement about graduating.\n\nBarb had made reservations for us at a local motel and Gwen found great humor in the fact that we had a regulation double bed for sleeping. In fact, she inquired as to exactly where on the floor I proposed sleeping. I indicated that she would sleep on the floor and I would sleep diagonally on the small bed and thus take up all the existing room in it. She explained to me that princesses did not sleep on floors.\n\nWe met Barb for dinner and discovered that she was viewing graduation as one last, final, hurdle in college. Rather, she was excited about the trip to Alabama and looking for a job. She did have a number of questions about my home in Alabama which I tried to answer.\n\nShe had particular concerns about the livability of the house given that it had been vacant for nearly five months and I explained that it would be fine because I had a graduate student living there and taking care of the place.\n\nBarb thought that was very nice and was of the opinion that I was so very fortunate that the graduate student could re-arrange his or her life to take care of the house.\n\nI looked at Barb questioningly and Gwen laughed.\n\nBarb wanted to know what puzzled me and why Mom had laughed.\n\nGwen explained that, \"Will regards grad students as one step up the evolutionary scale from the amoeba. I suspect Will simply told the young man to get into his house and to take care of it.\"\n\nBarb was shocked and asserted that that could not be the case.\n\nI shrugged it off and Barb looked at her Mom for further clarification. Gwen just shook her head and said, \"Let it go, Barb.\"\n\nBarb would not let it go and demanded to know why I regarded grad students as less than human.\n\nMy response was, \"Ask me that after you've spent five years bleeding your grad school adviser dry of his time, effort, and knowledge.\"\n\nBarb looked alarmed. Gwen counseled her to be calm. As Gwen put it, \"Most of us make us through the torture of getting the doctorate.\"\n\nSaturday morning came early, especially for me after trying to sleep on a regular double bed. Even Gwen, as tiny as she was, slept poorly after the luxury of sleeping on a king sized mattress.\n\nWe spent the morning loading Barb's belongings into her car and the one Gwen and I had driven and we went to graduation. The graduation speaker was a moron and a bore and the only thing of interest was the fact that I knew one of the fellows who was being awarded an honorary doctorate by Barb's university.\n\nQuite notable, by his absence, was Barb's dad. Out of Barb's hearing, I asked Gwen where her ex-husband was and Gwen said she had no idea, but his absence as a father followed a pattern that had developed after Gwen divorced him.\n\nAfter graduation we headed back to Gwen's place stopping only for gas and dinner and we were home by 8:30 p.m. to be greeted by three happy cats and two of whom studiously ignored us as punishment for leaving them alone for two days.\n\nWe did unpack the cars and Barb headed for a shower and bed. Gwen and I also showered and collapsed into bed.\n\nI was up pretty early on Sunday and made some coffee. I returned with it to the bedroom and Gwen was up and she motioned for me to lie on my back. She climbed on me and gave me her right nipple to suck and she asked me to massage and stroke her bottom. Eventually she gave me her left nipple to suck and I felt her pussy leaking her wetness onto my stomach.\n\nWhen she was fully aroused she removed her nipple from my mouth and turned to suck me to full hardness and she mounted me and motioned me to sit up so we were facing each other. Wordlessly, we established our rocking rhythm and I grew even harder. Gwen felt it and smiled and we rocked on and on until I felt the stirrings and told Gwen, \"Princess, you're going to make me cum.\"\n\nGwen nodded and whispered, \"You're going to make me cum so hard on your cock.\"\n\nWe rocked on for a few minutes and I finally lost it and groaned as I spurted into Gwen. She felt my spurts and the jerking of my cock and she, too, groaned and her orgasm first shook her and then stiffened her until she could fall into me and I fell backwards with her on top of me.\n\nWe simply lay there wordlessly for a while and Gwen finally broke the silence by asked, \"What are you thinking?\"\n\nI answered, \"I'm asking, what is this wondrous thing we share?\"\n\nGwen laughed and said, \"I've worn myself out trying to figure out the answer to that question.\"\n\nThen, we kissed.\n\n//\n\nMonday was hectic with taking of forwarding mail, getting a house key to the moving company, cancelling Gwen's airplane ticket to Alabama, getting three cars serviced and packing for our departure for Alabama on Tuesday.\n\nMonday night I explained the route to just east of Atlanta where we would stop for the night and Tuesday, we were off. Barb had two cats in her car, Gwen had two, and I had my Pixie with me. Within twenty miles Gwen called me on my cell phone to ask when Atlas was going to get off her lap. I explained that was how Atlas traveled and he would soon be asleep.\n\nWe stopped and stretched in North Carolina, had a brief lunch in South Carolina, and drove on to our motel in Georgia. Barb arrived first and was waiting when I arrived followed shortly by Gwen. Once there we had five cats milling around and looking to us for direction.\n\nWe checked in and the cats sorted themselves between Barb's room or Gwen's and mine. We all enjoyed the motel's pool and both women were struck by the difference in temperature between northern Virginia and north Georgia. \"Wait until tomorrow,\" was my advice.\n\nDinner was followed by play time with the cats and then we enjoyed a good night's sleep. I appreciated the king-sized bed in our room. \n\nThe next day we had slow going because we encountered a series of thunderstorms but we made it home by 1:00 p.m. I was appreciative of the fact that, although, I had both Toby and Atlas in the car with me, neither decided, as they were wont to do, to determine which of them was the alpha male of the collective.\n\nGwen and Barb were excited because it was warm and it was May in Alabama so everything was in bloom. Both of them were staggered by the beauty of the magnolias in bloom and they found the scent of jasmine intoxicating.\n\nThe cats were delighted to be out of the car and they tumbled about exploring everything.\n\nDerek was at the house and he came outside to greet us. Gwen and I both cracked up when Derek saw Barb. He was simply dumbstruck and his mouth moved, but no sounds emerged. The first coherent thing he said, \"Gosh, you're beautiful.\"\n\nI said, \"Very suave, Cow Fodder.\"\n\nGwen chimed in with, \"Cool it, buster.\"\n\nBarb laughed and said, \"Hi, I'm Barb Davis, and this is my Mom, Gwen Davis\u00b8 and you know Will.\"\n\nDerek shook hands with Gwen and said, \"Derek Coles, Ma'am. Dr. David is my graduate advisor and I've been house-sitting for him.\"\n\nDerek turned to me and shook my hand and said, \"It's good to see you, Professor.\"\n\nDerek asked, \"Are you moving into the house?\"\n\nGwen and Barb both ducked their heads to hide their laughter and I responded, \"No, Cow Fodder. You stay in the house and we'll pitch a tent out here in the front yard.\"\n\n\"Oh, oh, yes, of course, you're kidding,\" Derek responded. He added, \"I'll get my things and return to my apartment.\"\n\nDerek stood around awkwardly for a moment and then blurted out to Barb, There'sadepartmentalpartytonightandwouldyouliketogotoitwithme?\"\n\nGwen just shook her head. Barb looked wonderingly at Derek and asked, \"What?\"\n\nDerek looked panic-stricken and I said, \"Enunciate, Cow Fodder.\"\n\nBarb turned to me and said, \"Will, please! 'Cow Fodder' is very demeaning.\"\n\n\"My response was, \"Look at him! Do you think 'Poop-for-brains' would be more appropriate?\"\n\nBarb glared at me with an uncanny resemblance to her mother.\n\nMeanwhile, Derek swallowed about three times and said, \"There's a departmental party tonight and would you like to go to it with me?\"\n\nBarb responded, \"Oh, a party! Sure, that would be fun. What time?\"\n\nGwen and I wandered into the house leaving Derek and Barb to make their arrangements.\n\nGwen was very interested in the house and walked wordlessly from room to room. After a few minutes she said, \"Oh, Old Man, this is divine. Do you call this 'Early Minimalist' or 'Contemporary Locker Room'?\"\n\n\"What?\" I asked.\n\nBarb and Derek had joined us inside by the time Gwen completed her tour and Barb gushed, \"And your color scheme! Black and brown! Oh, who is your designer?\"\n\n\"What?\" I asked.\n\nBarb said, \"Gee, this is awful. Will, do you actually live here?\"\n\n\"What is wrong with you two?\" I asked.\n\n\"Check out the second bedroom on the left down that hall,\" Gwen instructed Barb.\n\nBarb walked down the hall and, I guess, she entered the bedroom and we heard her shriek, \"What is this?\"\n\n\"What is what?\" I asked.\n\n\"This, this, what is this? Is this artificial turf?\" Barb responded.\n\n\"Oh, that's my practice putting green.\"\n\nBoth women erupted into laughter.\n\nGwen was smiling broadly and walked up to me and hugged me and said, \"Oh, you sweet Old Man. We do have a makeover on our hands.\"\n\n\"What in the world is a makeover?\" I asked.\n\nGwen said, \"Oh boy, here we go.\"\n\nBarb said, \"This, I have to hear.\"\n\nDerek, passing through with some of his stuff to load in the car commented, \"Professor, I loved living in your house. It is so functional and bereft of junk.\"\n\nBoth Gwen and Barb gave Derek a look that would have killed him had he seen it. Fortunately, his back was to them when it happened.\n\nGwen drew a big breath and expelled it slowly and began, \"Old Man, the walls and ceiling need painted. The carpet must be replaced. All your furniture must go and we'll replace it with my stuff that is coming on the truck. Then we'll need some pictures and a few lamps and then we'll see where we are.\"\n\n\"Now, wait just a minute,\" I injected. \"I've lived comfortably in this house for thirty years. Everything can't be wrong with it.\"\n\nGwen rolled her eyes and asked, \"How old is this furniture?\"\n\n\"I don't know. Maybe thirty years old?\" I answered.\n\n\"It's worn out, Will,\" Gwen explained. It's all black and brown, too. There is no color in this house.\"\n\nGwen paused for breath and asked, \"How old is this dark brown carpet?\"\n\n\"I have no idea,\" I responded truthfully.\n\n\"It's worn out, Will. It's dirty and I'm sure the padding underneath it is in pieces by now.\"\n\n\"You're saying everything has to go?\" I asked.\n\n\"Yes, Old Man. Everything.\"\n\nBarb injected, \"And that artificial turf has to go and the room has to become a bedroom.\"\n\n\"Nope,\" and the finality of my voice gave both women considerable pause.\n\nI saw Gwen give Barb a signal I didn't understand, but Barb quieted.\n\nGwen said, \"Let's talk about adding a room in the back where you can set up a hitting net and a putting green.\"\n\nI thought about that for a moment and said, \"OK, but here's a ground rule from now on.\"\n\nGwen and Barb nodded and I looked at Barb and said, \"You have nothing more to say to me about this house.\"\n\nBarb looked shocked and Gwen said, \"That's fine, Will.\"\n\nI looked at Barb for a minute and then she nodded her head and said, \"You're right, Will. I'll have nothing more to say to you about your house.\"\n\nI nodded my acceptance of her statement.\n\nThroughout all this, Derek had been traipsing back and forth moving his things out of the house and putting them into his car.\n\nI said to Derek, \"Hold on a second. I have something for you,\" and I followed him out the door.\n\nI thanked Derek and gave him some money for his time and effort and he thanked me\n\nAs I re-entered the house I heard what I guessed was the end of a conversation between the two women. What I did hear of it was Gwen telling Barb, in pretty strong terms, to stop thinking that Barb was Gwen and that she could talk to me in the manner Gwen did.\n\n\"Hear! Hear!\" was my thought.\n\nWe moved in everything in our cars and fed the cats and showed them where the litter boxes were and then they all raced into the backyard to explore it. Clearly, my cats knew the place and were carefully checking to make sure everything was as they left it.\n\nBarb slept in my guest room and Gwen and I slept in what would be our room with the kind-sized bed and in-suite bathroom.\n\n//\n\nThe next morning Gwen called her dad to give him our phone number and to tell him where she and Barb were. She also put Barb on the phone to talk to her grandpa about his grandson. Barb did a good job of keeping the old guy calm and explaining Charles' brain tumor and the trauma of the life-saving surgery. \n\nGwen's dad asked to speak to Gwen again and indicated that he wanted to come to Alabama to visit and Gwen told him it would be a few weeks until we had three functioning bedrooms and some painted walls and new carpeting, and he could visit then.\n\nGwen called in a paint crew who painted the interior is an off-white and brightened it considerably. When the painters departed, Gwen had the carpet people arrive and lay new dark blue and light blue carpeting throughout the house, including my practice putting green room.\n\nI had to agree that Gwen was quite correct in saying the interior of the house did need a makeover.\n\nDuring the house refurbishing, Barb would head out each day looking for a job and Gwen would go to our library to study and prepare for her job interview. I typically played golf and reacquainted myself with the few of my colleagues who were around.\n\nMost afternoons when I arrived home I would find Derek and Barb there not doing much of anything, or just leaving for, or returning from, someplace. On one occasion I told Derek not to file a federal income tax for the year because I intended to claim him as a deduction on my return. Poor Derek went to pieces and Barb had to explain to him that I was kidding.\n\nGwen's interview was looming larger and larger and I decided it was my job not to allow her sometimes lack of self-confidence to hamper her.\n\nFinally, the day of the interview arrived. I drove Gwen to campus and we walked, hand-in-hand, to the building where the interview was scheduled.",
        "As we walked across campus for the interview Gwen asked me for any last minute advice I might have and I indicated there was one cautionary note I'd like to suggest.\n\n\"Doug Gottlieb will likely be in the group interviewing you. He's good. He's so good he's world-class. Pay attention to him. He's small and wiry with a big shock of dark hair. I've seen him trick some doctoral students at their oral defense with this trick.\"\n\n\"He'll pose a stats problem for you in the form of a word problem and ask you how you'd solve it. The word problem, to all appearances will look, for example, like a non-parametric data problem. You might say that and then say something like 'Let's look at all the assumptions underlying the non-parametric tests' and then you'll launch into a recitation of the assumptions, looking for the best fit for this problem. At this point Doug will start smiling and nodding his head up-and-down and he's feeding you all kinds of positive reinforcement.\"\n\n\"However, nested within his word problem was a very subtle suggestion that you're really dealing with parametric data and all his positive reinforcement is leading you down a blind alley and he'll blind-side you when you finish answering the question.\"\n\n\"If you respond to one of his questions and he starts that smiling and nodding, stop in your tracks and back up, because you overlooked something. You'll know with Doug that you're on the right track when he stares at you without expression.\"\n\n\"My advice is, take as long as you like to consider one of his questions and proceed only when you're sure you understand it fully.\"\n\nGwen smiled at me and said, \"Oh, Old Man, why couldn't I have had you as my adviser in grad school?\"\n\n\"Uh, I think we talked about that once and decided that would not have worked very well.\"\n\n\"I know,\" Gwen said, \"but I can dream, can't I?\"\n\nWe were at the steps of the building where Gwen's interview was to be conducted and Gwen kissed me and said, \"Don't worry. I'll be OK. Go drink coffee in the Union and I'll find you when I'm done.\"\n\nI watched Gwen go up the steps and into the building and I turned around and returned to the Union to wait.\n\nI then endured the longest two hours of my life. After an eternity of looking at my watch I looked up and saw Gwen and Doug Gottlieb approaching. I stood and they walked up to the table and I motioned them to sit.\n\nI looked at Gwen and she winked at me and I exhaled loudly enough that the trees outside the building bent over.\n\nDoug shook my hand and said, \"Hail, O Ancient and Ugly One.\"\n\nMy response to Doug was, \"Where, Whiz Kid, do you get the temerity to refer to me as 'ugly'?\"\n\nWe all sat and I asked Gwen, \"How are you?\"\n\nShe gave me the Mona Lisa smile and said, \"Good, Old Man.\"\n\nI looked at Doug and he asked, \"Do you have any more of her stashed somewhere?\"\n\nI had to smile at that and responded, \"No, the mold was broken when this one was created.\"\n\n\"That's too bad,\" was Doug's response. \"She's really first-rate. And, as far as the vote to hire or not, I can't imagine any negative votes at all. She's gets an enthusiastic thumbs-up from me. As for the rest of the committee, I can't comprehend anyone finding anything negative about Gwen.\"\n\nI said, \"It's very nice of you to walk Gwen back here to the Union.\"\n\nDoug smiled, \"It was my pleasure to walk across campus with a smart and beautiful woman.\"\n\n\"While you're here, Doug, let me ask you about an issue.\"\n\n\"OK,\" was Doug's response.\n\n\"I'm going, Doug, in July on three consultations to chemical companies and we're making a trip to Dubai also in July. These trips are wearing me out. A younger person needs to pick up the chemical consultations. I'd like to suggest to the chemical companies that you be given the most serious consideration as my replacement. May I recommend you as my replacement to these companies?\"\n\nDoug said he'd love to be considered for these consulting jobs as long as they did not involve more than twelve days of travel per year.\"\n\n\"Good enough. I'll urge them to give you their fullest consideration.\"\n\n\"Who is the 'we' on the Dubai trip?\" Doug asked.\n\n\"We,\" I responded, nodding to Gwen. \"Gwen is accompanying me and she's going to wear a veil and walk ten paces behind me singing, 'Praise be to Allah for delivering to me such a magnificent husband.'\"\n\nDoug laughed harder than I'd ever heard him laugh and Gwen stuck out her tongue at me and said, \"You idiot! Wait until we're alone.\"\n\nStill laughing, Doug stood and said to Gwen, \"It was a pleasure meeting and interviewing you. I hope I'm right when I say, I look forward to greeting you as a colleague in August.\"\n\nHe turned to me and said, \"Good seeing you, O Ancient and Ugly One.\"\n\nDoug paused a moment and then said, \"Have a wonderful wedding, too. Shalom!\"\n\nAs Doug walked away, Gwen turned to me and said, \"I have to pee.\"\n\nAs she headed for the bathroom I simply convulsed in my seat. I actually drew attention to myself by laughing so loudly.\n\nWhen I got some semblance of control I looked skyward and muttered a quick prayer of thanks.\n\nA happy and even gleeful Gwen returned and said, \"Let's walk! I feel like I'm walking on air and I also feel drained. Wow! That was some interview!\"\n\nMy response was, \"Whatever it was, you must have knocked their socks off.\"\n\nGwen said, \"I hope so! It was tough, it was draining, but it was so professional and the people interviewing me were so smart. It was like being back at MIT again where everyone shows up to work knowing they have to be at their best because everyone expects nothing less than their best. It was simply exhilarating!\"\n\nI think I was grinning like the Village Idiot at this point.\n\n\"And,\" Gwen said, \"You were right about Doug. He nearly threw me with a regression question, but I told him that discriminant analysis was actually better in the scenario he described.\"\n\n\"Who was there?\" I asked?\n\n\"Well, let's see. There was a fellow from the Teaching Center, Randy somebody. There was Doug. There was a fellow named Morton and a big, scary guy whose last name is Maloof, and a very stern, unsmiling woman named Patricia.\"\n\nI stopped walking and just looked at Gwen. She looked at me questioningly. I said, \"Princess, don't you ever doubt yourself again. You just won over what has to be the toughest bunch of interviewers imaginable.\"\n\nI went on to give Gwen her interviewing team's pedigrees and their work at the University. Gwen smiled and said, \"I'm glad I didn't know all that before the interview.\"\n\nI let out a big sigh of relief that the ordeal was over and asked, \"Where do you want to go now?\"\n\nThe little Princess gave me one of her smiles and said, \"I want to go home and ravish you!\"\n\n\"Oh, OK! A splendid idea,\" was my retort.\n\nWe drove home with me driving and Gwen in the passenger seat with her head back and her eyes closed. Occasionally, she would remark, \"Gosh that was fun,\" or \"Gee, that was challenging.\"\n\nWhen we reached home, Derek's piece-of-crap car was in the drive way and we walked inside to find Derek and Barb seated in the living room talking. Barb ran to her Mom to ask how the interview went and Gwen assured Barb that it had gone well and all indications were that a positive outcome was pending. Barb was really excited and Derek looked pleased. \n\nGwen saw Derek standing stiffly and urged him to be seated. He said, \"Thank you,\" and seated himself. I walked over to Derek and slipped him some money and said, \"For dinner with, and entertainment of, Barb tonight.\"\n\nDerek immediately stood and stiffly thanked me. I looked at him and said, \"Sit down Cow Fodder.\" Derek sat.\n\nBarb turned to me and said, \"Will, Derek was telling me he's waiting for you to read his dissertation. Will you please read it so he can get on with his life?\"\n\nI stared off into space for a long while and finally turned to Barb and said, \"I'm trying to think of a scenario in which I would ever be bored enough to want to pick up Derek's drivel and read it.\"\n\nBarb looked at me unbelievingly. Derek looked like he was going to cry. Gwen rolled her eyes at me and said, \"Stop being an idiot.\"\n\nThen I grinned and looked at Derek and said, \"I have read your pitiful contribution to the field and it's actually outstanding. Go see the departmental secretary and schedule your oral defense of it.\"\n\nDerek leaped to his feet and shouted, \"Oh, thank you, Professor!\"\n\nBarb and Gwen were smiling and I looked at Derek and said, \"Would you stop being a damn pogo stick and just sit down? You're making me nervous with all this jumping up and down.\"\n\nDerek dropped to his seat like he was shot.\n\nThen I asked him, \"Who's on your committee, anyway? I've lost track of that since you started the dissertation.\"\n\nDerek responded, \"You are my adviser and dissertation director and committee chair and Dr. Gottlieb and Dr. Maloof make up the rest of my committee.\"\n\nI took a long, hard look at Derek and said, \"BOTH Gottlieb and Maloof? Son, you either have a death wish or you have cojones the size of watermelons.\"\n\nDerek said, \"Well, Sir, I certainly have no death wish and I have no idea what cojones are.\"\n\n\"Balls, Son. Most of us have them between our legs, but I think yours are hanging between your ears.\"\n\nDerek blushed and Gwen and Barb simultaneously yelled, \"Will!\"\n\nI looked at Barb and said, \"You be quiet. One of you is more than enough. I don't need your Mom in stereo.\"\n\nDerek piped up and said, \"But, Professor, you approved of both Dr. Gottlieb and Dr. Maloof.\"\n\n\"I did?\"\n\n\"Yes, Sir.\"\n\n\"Wow, that must have been when I still thought you had a brain.\"\n\nI thought for a minute and said, \"Well...we'll serve them coffee laced with Valium at your orals and maybe they'll be is a stupor and just sign off.\"\n\nDerek very tentatively asked, \"May I start looking for a position for the Fall Semester now that you've read my dissertation?\"\n\n\"Do what you want, but I have interviews set up for you in California and Pennsylvania and, if you don't like anything there, I've you got lined up as a visiting prof right here for next year.\"\n\nDerek was speechless. Barb looked glad. Gwen started laughing and said, \"The Godfather strikes again.\"\n\nThat damned Derek was on his feet again almost shouting, \"Oh, Dr. David, I can't thank you enough!\"\n\nI shot back, \"Yes, you can. Leave and take this half-pint nag with you,\" and I nodded at Barb.\n\nBarb stuck out her tongue at me in the exact manner Gwen does and Gwen collapsed into laughter.\n\nDerek grabbed Barb's hand and as they departed, Barb said, \"Isn't Will wonderful?\"\n\nDerek said, \"Gee, if you find him wonderful you must think Genghis Khan is a candidate for sainthood.\"\n\nI yelled, \"I heard that Cow Fodder!\"\n\nThe only response was Barb's tinkling laughter.\n\nThe two youngsters were out the door and Gwen was in my lap kissing me and smiling.\n\nWhen we came up for air I smiled at Gwen and told her, \"You really, really did well today. Please, never doubt yourself again.\"\n\nGwen's eyes misted and she hugged me and said, \"Take me to our bedroom.\"\n\nI got up with Gwen in my arms and carried her to the bedroom and put her down. She commenced doffing her clothes in every direction and I whistled, \"Wow, panties even. You did take this seriously.\"\n\n\"Well,\" Gwen wanted to know, \"what are you waiting for Old Man?\"\n\n\"I was enjoying the view. I'll never get enough of your beautiful body.\"\n\nGwen was now undressed and was cupping her ta-tas in her hands and pointing them at me. She said, \"That was a nice try at recovering from that crack about me walking ten paces behind you. I should thank Allah for delivering an old fossil to me.\"\n\nI simply shook my head at the little vixen and finished undressing. Gwen shouted, \"On your back on the bed.\"\n\nDutiful to the letter of the law, I laid down in the middle of the bed on my back. Gwen climbed on the bed and positioned her little pussy over my face while she laid on top of me and grabbed my cock. She sucked away and I followed suit by licking the length of her pussy. I was enjoying the sensations in my cock no end while I watched Gwen's flower petals open to my tongue.\n\nVery suddenly I lurched and yelled, \"What was that?\" as a pain shot up my cock. Gwen fell off me laughing hysterically and I looked down and discovered that Atlas had jumped up on the bed and had expressed his high regard for me by licking my erect cock. \n\nAtlas looked at Gwen who was laughing uncontrollably and at me and back at Gwen and back at me. I got up and picked up the little guy and gave him a hard massage along his back. He enjoyed it so much he forgot to look inscrutable. I lifted him higher and kissed him on the top of his head and put him on the floor.\n\nI looked back at a still hysterical Gwen and asked, \"Where were we?\"\n\nGwen was still laughing and gasping for breath and she rolled over in an apparent attempt to get on her stomach but, succeeded instead to perform the improbable of falling off a king sized bed whereupon she landed with a thud on the floor.\n\nI heard an \"Ooouuuffff\" when she hit the floor.\n\nI ran around the bed to check Gwen. I got down on my knees at her head in time for Gwen to say, \"I'm OK.\"\n\nWhen she raised her head she was looking directly at Ivan, and without missing a beat, she reached out and scooped my cock into her mouth and resumed sucking. I found this inordinately funny and began laughing as Gwen sucked harder and then alternated sucking and stroking. When she had me really hard, Gwen released me, got up, and climbed on the bed.\n\nShe patted the bed beside her and I climbed onto it and laid on my back. Gwen swung her leg over me and grasped Ivan and directed him to Anastasia. When she had Ivan correctly aligned I lifted my hips and entered Gwen. She lowered herself onto me and grimaced with the pleasure and then began to rock up and down.\n\nShe leaned forward as far as she could and beckoned me forward. I leaned forward as much as I could as Gwen cupped her right ta-ta and tried to feed her nipple to me. There was no way, given our height differential, that my mouth could reach her. She moaned, \"Damn!\" and slid off my cock in order to give me her nipple.\n\nI took her nipple into my mouth and sucked. While sucking, I slid the middle finger of my right hand into Gwen's very, very wet pussy and pumped it into and out of her. She gripped my wrist and thrust back and forth on my finger while I continued to suck her. Gwen was moaning and tossing her head back and forth, but she found the wherewithal to stop screwing my finger. She pulled her nipple from my lips and moved back in order to locate my cock which she found and moved to the mouth of her pussy again. \n\nAgain, I thrust into her and she screamed, \"Ohhhhh, so good!\" She began sliding up and down my cock ten or twelve times and then, with a determined look, stopped her humping and slid off my cock and again offered me her breast, this time her left one.\n\n\"Suck hard, Will,\" Gwen begged.\n\nI did suck hard, and I also slipped two fingers into her pussy and, to both her surprise and mine, the presence of two fingers, induced a powerful orgasm in Gwen. Her eyes first widened, then her mouth widened into the letter 'O' and the she gripped me by my shoulders, thrust hard against my hand, and my fingers and hand were drenched with her fluids. She was frozen for a moment and then\u00b8 with a sob, she collapsed into me.\n\nI carefully laid back pulling Gwen on top of me and held her while she gasped for breath.\n\nWhen both her breath and sanity returned she said, \"Oh, Old Man, you didn't cum.\"\n\nI assured her I was fine and just wanted to hold her and tell her, again, how wonderful she was, and how wonderfully she had done in her interview this afternoon.\n\n\"Thank you, Old Man,\" was her simple response. She laid very still on me as I massaged her beautiful bottom. After a few minutes, she propped herself on her elbows and looked intently at me.\n\n\"What?\" I asked.\n\nGwen asked, \"Why did Doug Gottlieb call you 'Ancient and Ugly'? No one has ever found you ugly.\"\n\nI laughed and said, \"I'm not sure I have all the facts, but I'll share with you what I do know. Doug was flown to the west coast to interview an aerospace company for a consulting position.\"\n\n\"He showed up for the interview in one of his goofy outfits that he thinks is the height of fashion. I think he had on faded jeans, a nice dress shirt, with the tail out, and a ratty sports coat. I mean he was Mr. Spiffy by his standards.\"\n\n\"Anyway, when he didn't get the job he was furious and he called the company to find out why he didn't get hired and also to learn why they hired a guy who wasn't as sharp as he was.\"\n\n\"He was told he just didn't look 'corporate enough' and the company was afraid to put him in front of any stockholders or investors. Doug went bananas when he heard that and he was complaining about the company's stupid decision around the department and someone said, 'Well, you should learn to dress like Will David' and Doug responded, 'That ugly old dude?' and since then I've been, to him, the 'Ancient and Ugly One.'\"\n\n\"Will David?\"\n\n\"What?\"\n\n\"I want us to get married here in Alabama, not back in Virginia.\"\n\nIt wasn't unusual for the Princess to surprise me, but this change in her thinking really surprised me.\"\n\nI gave her thought some consideration and concluded, \"What the heck?\"\n\nAccordingly, I said, \"It's fine with me if you're sure this is what you want to do.\"\n\n\"It really is. It's beautiful here and I love it and the change in you since we arrived here is amazing. In Virginia, you were low-key, but here you are so relaxed it's amazing.\"\n\n\"That's interesting,\" I noted, Then I asked, \"Have you made any arrangement in Virginia that can't be un-made?\"\n\n\"Nope,\" was Gwen's response. \"A few phone calls and everything put in place there will be undone.\"\n\n\"OK, let's do it,\" I said. \"Let's see if the minister and church are available.\"\n\n\"I'll take care of that,\" Gwen said.\n\n\"You will?\"\n\n\"Yes, I will, but first you have to screw me again.\"\n\nWith that Gwen attacked my cock and sucked me back to hardness. This time she got underneath me and I mounted her and we may have set a record for the longest, most enjoyable screw in the history of mankind.\n\nAfterwards, we lay side by side stroking each other and kissing and Gwen had a far-away look in her eyes. After a long while she re-focused and said to me, \"Life is funny. What if I had not submitted that paper to the national conference? What if you hadn't been asked to be the responder?\" \n\nWith that, she burst into tears and rolled into me to be held.\n\nThe next few days were absolutely bizarre. The house was in fine shape and we had furniture delivered and in the midst of that chaos, Barb got a call from the Sociology Department saying they wanted to hire her as an assistant to the chairperson.\n\nGwen got a call from my chairperson informing her that he was pleased to offer her a position beginning in August as a Senior Lecturer and at a decent salary at that.\n\nI got a call from Dubai saying that their intelligence service had partially uncovered a plot to kill or kidnap any westerners in the Emirates. I was politely, but firmly, told that my consultation would have to take place via e-mail and Skype. Needless to say, both Gwen and I were disappointed, but I readily agreed that the consultation would go forward.\n\nWith the trip to Dubai cancelled, I told Gwen we had no options, but to go to Hawaii in July to make up for the lost trip. Gwen's eyes got very big and she shouted, \"I need clothes! Give me your credit card!\"\n\nMy only response was, \"Thank heavens for Dubai. My checking account can't take much more of your clothes.\"\n\nI did enjoy Gwen's delight and was greatly amused when Barb heard about our Hawaii trip. Barb immediately said, \"Take me with you! You won't even know I'm there!\" ",
        "I answered for both of us when I said, \"When pigs fly.\" \n\nBarb threw a hissy fit, but calmed down when Gwen said, \"Barb, live with it.\"\n\nThe word, 'Hawaii' had quite an effect on Gwen. When we went to bed that night she grabbed my hand, told me to insert a finger in her and she screwed my finger and hand to a very loud orgasm. A few minutes later Gwen asked to be licked and I found a very prominent clit evident within her otherwise tiny pussy. I licked and sucked her to another powerful, and noisy, orgasm and I assumed she was done. Thirty minutes later, at most, I awoke to find her stroking my cock to hardness whereupon she backed into me, spoon fashion, and inserted my cock into her remarkably wet and hot pussy and she humped against me asking me to 'pull my nipples.' I finally jerked and spurted and this triggered yet another powerful, and noisy, orgasm in Gwen. Then, she had the audacity to tell me that I was an 'animal.' \n\nThe next morning Gwen awoke in a festive mood which was dampened a trifle over breakfast when Barb asked her Mom if she couldn't be just a bit quieter in the future. As Barb put it, \"Mom, when I can hear you all the way down the hall, you've being a little too exuberant.\"\n\nGwen said, pointing to me, \"Talk to him. He's an animal.\"\n\nBarb smiled sweetly and said, \"I don't think he's the animal.\"\n\nGwen blushed three shades of red.\n\nWe became more settled into the house and I admitted that I liked the place with its color and pictures and more adequate lighting.\n\nAdditionally, we transferred out YMCA membership and resumed our workout schedule. Life was good.\n\nThe next major event for all of us was Derek's oral defense of his dissertation. \n\nIt was scheduled for 1:00 p.m. on a Wednesday in a small conference room commonly used for such purposes. \n\nI arrived early and picked up all the relevant documents and double-checked them before departing for the conference room where the defense was scheduled.\n\nThe departmental secretary had remembered to unlock the door so I entered, turned on the lights and laid out the documents in front of me. Based on something I had learned long ago, I turned on a tape recorder so that the doctoral candidate could review why he had been critiqued and so an examiner could not later contend that he or she had told the candidate to revise section X when the examiner had clearly said section Y.\n\nDerek was the next to arrive looking like a man on his way to the electric chair. I instructed him in no uncertain terms that he was wound too tightly and to take some deep breaths and get under control.\n\nDoug Gottlieb appeared a few minutes before the appointed start time and he took one look at Derek and decided that Derek needed to calm down so he engaged Derek is some small talk.\n\nWe waited for Maloof. \n\nWe waited some more for Maloof.\n\nFifteen minutes later, the great hulking Maloof walked through the doorway and grabbed a seat near the door.\n\nI inquired of Maloof, \"So, Tariq, were you impeded in your way here by the need to kill a few infidels along the way?\"\n\nMaloof nodded his ponderous head and said, \"Both Infidels and Zionists. They both abound at this godless, intellectual bastion. Hello, Gottlieb, you Zionist bastard.\"\n\nDerek nearly flipped out of his chair. He turned white and his right leg starting going up and down like a jackhammer. I looked at him in amazement and realized that, despite five years in the department, he had no idea that Gottlieb and Maloof were great friends and delighted in baiting each other endlessly.\n\nDoug's responded to the 'Zionist bastard' comment by laughing uproariously. He shook his head and said, \"Tariq, you really are an asshole.\"\n\nMaloof looked at Gottlieb seriously for a moment and nodded while saying, \"It must be so. I am told that so very frequently.\"\n\nDerek was, I believe, catatonic at this point.\n\nThis cracked up both Doug and me. When our laughter subsided, Maloof asked, \"So, are we here to slice and dice this little lamb into shis-kabob, or shall we sign some paper and foist upon the world yet another dubious scholar?\"\n\nI let that question linger a bit and looked at Gottlieb whose eyebrows were bumping his hair line. He shrugged imperceptibly to my questioning look. \n\nI picked up the document we three faculty had to sign to signify acceptance of Derek's dissertation and slid it down the table to Tariq.\n\nTariq looked at it and slowly reached inside his sports coat and slowly pulled out his glasses case. He opened the case and removed his glasses and adjusted them on his face. Even more slowly Tariq returned to his inside sports coat pocket and removed a fountain pen. With remarkable deliberateness, Tariq unscrewed the top of the fountain pen and slid it onto the cylinder.\n\nDoug couldn't contain himself any longer. He remarked, \"Arabs are so technologically advanced. When did you graduate, Tariq, from a quill pen and inkwell?\"\n\nTariq never even looked up and said, \"Silence Swine or I shall project a fountain of ink from this magnificently crafted device all over your ugly shirt. You dress like camel dung, by the way.\"\n\nDoug responded, \"We are all familiar with Arab accuracy with weapons. I suspect you'd hit Derek here in the face.\"\n\nDerek was most certainly catatonic by now.\n\nTariq looked at the document and asked, \"Does it matter if I sign on the second or third line?\"\n\nI responded, \"I have to sign on the top line so either the second or third line is fine.\"\n\n\"Ah,\" Tariq intoned, \"I shall sign on the second line so this Zionist scum has to sign below me.\"\n\nTariq signed his name. He then slid the document down the table to Doug along with his fountain pen.\n\nDoug picked up the fountain pen and signed his name and he pushed the document and pen over to me and I signed.\n\nI handed the pen back to Tariq and remarked, \"That is a finely crafted device.\"\n\nI turned to Derek who was still in a state of shock and said, \"Well, Cow Fodder, congratulations upon completion of the Doctor of Philosophy degree and welcome to the Life of the Mind.\"\n\nDerek's lower lip quivered and he gulped, \"But, what about my oral defense?\"\n\nDoug looked at Derek incredulously and said, \"For crying out loud, Derek, we just handed you your life on a silver platter. Are you holding out for a gold one?\"\n\nNothing was computing for Derek who blurted, \"But, I prepared so long and so hard for my defense. Is this it?\"\n\nI was speechless. I had no idea what to say, but Tariq saved the day by saying, \"Little lamb, Doug and I read your paper carefully. It is well done. You were well-trained by your advisor. Why should we waste our time and yours with a series of questions simply designed to make you jump through more hoops? Will did that for the past five years and you are ready.\"\n\nSomething finally penetrated Derek's thick skull and he asked, \"I'm really, really done? I have my Ph.D.?\"\n\nI said, \"Derek, if you don't get your butt out of here in the next five seconds I'm going to tear up this acceptance paper and you're going to spend another five years with me riding you to death.\n\nDerek ran from the room laughing insanely and screaming, \"I'm done, I'm done!\"\n\nWe all sat there for a few minutes saying nothing until I roused myself and said, \"Thank you, both of you. I think he's the best one I've ever turned out and I think both of you reinforced that for him today.\"\n\nDoug nodded and turned to Tariq and said, \"C'mon down to my office. You lost me with something you said in our proposal and I need you to explain it.\"\n\nTariq heaved his bulk into a standing position and he and Doug departed, each saying, \"See you, Will.\"\n\nI drove home and discovered upon arriving that Derek's wreck of a car was in the driveway. I went inside and found Derek looking discombobulated and talking a mile a minute to Barb and Gwen. Barb looked completely mystified and Gwen was frowning.\n\nAs I entered the room, Gwen asked me, \"What in the world occurred at Derek's defense?\"\n\nI rolled my eyes and produced the tape and recorder and invited everyone to listen.\n\nI went to the bedroom and changed into jeans and a polo shirt and returned to the living room. As I entered, the tape was replaying my comment about Derek being the best I thought I'd ever produced. I turned off the recorder and asked, \"Any questions?\"\n\nBarb was still mystified. Gwen was laughing. Derek looked like a statue.\n\nI yelled at Derek and told him to look at me. He did and I said, \"Your dissertation was so good, none of us thought you had to be examined further. Do you get it now?\"\n\nDerek sat still for another minute and then smiled and relaxed. He asked, \"One question, Professor?\"\n\nI responded, \"Derek, I'm Will now. No more 'Professor,\" no more \"Dr.' Now, what's your question?\"\n\nWill said, \"OK! Will, why were you so damn hard on me all the time?\"\n\nI shook my head and turned to Gwen and said, \"He won't believe me. You tell him.\"\n\nGwen nodded and turned to Derek and said, \"Derek, Will thought you were the best he's seen in his long career and he threw everything at you to make you even better. Had you been anything less than excellent, you'd have received little or nothing from Will. He wasn't harassing you. He was teaching you. Did you just spend two hours being shredded to pieces at your oral defense?\"\n\nRecognition began to dawn on Derek and he said, \"No.\"\n\nGwen continued, \"Are you sitting here now or are you somewhere in the throes of despair because you have weeks or months of revision and resubmitting to do?\"\n\nDerek finally broke into a big smile and said, \"OK, I see it now. Thank you for explaining it Dr. Davis.\" \n\nGwen smiled and said, \"I'm Gwen now, Derek. No more 'Dr. Davis.'\"\n\nDerek smiled and said, \"Thank you, Gwen.\"\n\nDerek then turned to Barb and said, \"Would you like to go out with me and celebrate my doctorate with a nice dinner?\"\n\nBarb perked up and said, \"Sure! Let me get my stuff!\"\n\nAs Barb bounced away I turned to Derek and said, \"By the way, if you lay one finger on that girl, Cow Fodder, I'll cut off your balls and feed them to you.\"\n\nDerek sighed and said, \"You'll never change. You'll always be an ogre.\"\n\n//\n\nAgain, let me know if Chapter 5 is desired. "
    ],
    "authorname": "Bedu",
    "tags": [
        "bachelor",
        "will",
        "gwen",
        "academic",
        "professors"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/at-long-last-gwen-ch-04"
}