{
    "title": "Spin Ch. 01",
    "pages": [
        "I'm not totally keen on hanging out tonight. I'm the only one in my friend group who's in grad school, so none of them really understand how much time goes into getting a PhD. Being a chemist, I have my work cut out for me. I'm either researching in the lab, nose-deep in the thickest textbooks the library has to offer, being underpaid as a teaching assistant, or weaning myself away from a mental breakdown. To be fair, I manage to take plenty of time for myself. That's important. And I really, truly love what I do, which is as important as it is lucky. But lately, I've been neglecting my friends. That's what happens when I feel like I'm on the verge of a breakthrough in my research.\n\n\"Okay, but when's the last time you just relaxed for a night?\" Liv asks me over the phone. I can almost envision her fluttering her eyes, her way of trying to sway someone to her side. She has a point, though -- and I rarely get a chance to see my buddy Bruce since he doesn't live in Boston anymore, so maybe it'd be worth hanging out for a little while.\n\n\"Only a couple hours,\" I say, trying to compromise.\n\nBut she's not having it. \"Are you kidding?\"\n\n\"What? A couple of hours is plenty of time.\"\n\n\"A couple of hours is fucking nothing,\" she says. \"We miss you.\"\n\n\"This could be my big break,\" I say with a slight grin, knowing she hates when I use my research as an excuse to bail on plans.\n\n\"Nuh uh. Not gonna work this time, Jackie,\" she says, and then she sighs. \"Please? How often do we get the whole gang together?\"\n\nI rub my temple lightly before relenting. \"Fine. I'll come,\" I say, and Liv squeals with joy.\n\nI do end up arriving late, though. I get sidetracked with finishing up the end-of-the-week report for my PI, so once that's complete, I rush over to Liv's apartment. I knock and let myself in, smiling at the sight of everyone sitting on the floor around the coffee table in her living room.\n\n\"God, *there* you are!\" Liv says, standing up and rushing over to hug me. \"I was afraid you just weren't gonna come.\"\n\n\"I promised, didn't I?\" I tease, smiling at the rest of them. Bruce is closest, so he's the first one I approach. \"How you been, man?\" I say as we run through our handshake.\n\nBut Liv interrupts. \"You can catch up later. It's game time.\"\n\nI raise my eyebrow, but Bruce just grins at me. \"You're just in time for Spin the Bottle,\" he says with a grimace.\n\nI snort, looking at Liv. \"Spin the bottle? Seriously?\"\n\n\"Oh, come on, it'll be fun,\" she says, grabbing my shoulder and trying to push me towards the floor next to Bruce. \"Sit down.\"\n\nI resist for a moment. \"But--\"\n\n\"Sit!\" she insists, and I give in, sighing and sitting right between Bruce and Sasha, who I kiss on the cheek. I briefly look around and see the rest of the familiar crowd: Corbin (who we just call Corb), Trish, and our favorite twins Kyle and Kayla. All of them I've seen fairly recently, so we don't need excitable hellos. There are, however, a few new faces. There's a girl on the other side of Bruce, but I assume she's someone he's \"involved with\" considering the way they're leaning into each other. The other mystery person is a guy sitting next to Liv, almost directly across from me. He seems familiar, but how? I'm not sure.\n\nBefore I can even ask for introductions, though, Liv rolls an empty bottle across the table towards me. \"You first, Casanova,\" she says.\n\n\"First of all, I take offense to that,\" I say with a grin, and I'm met with laughs from my friends. That's been a running joke between us for a while because I've been elected as the heartbreaker of the group. Honestly, I don't think of myself as particularly charming, but I'm lucky enough to have been blessed with pretty good looks: a chiseled jawline, a coy smile, narrow eyes, and a perfect set of teeth (thanks, braces). \"Second of all, I literally just sat down.\"\n\n\"Perfect timing, then.\"\n\n\"God, you're annoying,\" I groan. Forcing everyone to play some middle-school game like Spin the Bottle is extremely on-brand for Liv, but I take the bottle anyway. \"I haven't played this since I was hairless, by the way,\" I say, and Bruce snickers next to me.\n\n\"It'll be fuuuun,\" she keeps insisting, telling me the rules. I spin. Whoever it lands on, I kiss for ten seconds. Simple enough. Is everyone drunk already? Is that why we're playing this? Seems like almost everyone has one of those stupid, red solo cups near them. \"Spin!\"\n\nI look around before sighing and giving the bottle a good spin. As I watch it spin, I wonder who it'll land on. To be fair, I've either kissed or made out with most of my friends already, even a couple of the guys (usually as a result of drunken dares), and it's not like I'm afraid of or totally opposed to kissing anyone. This is just silly. We'll see how this goes, I guess.\n\nInterestingly enough, though, it lands on someone I haven't kissed: the mystery guy. As soon as it stops spinning, there's a bunch of laughter. Liv says, \"Ooo, I'd love to see this,\" and the girls all giggle in response. Pretty sure I hear Trish say something like, \"Of course it's the two hottest guys in the room.\"\n\nKyle, though, doesn't seem to find this amusing. \"Wait wait wait,\" he says, holding his hand up. \"No guy-on-guy stuff.\"\n\n\"Why not?\" Sasha asks, cocking her eyebrow.\n\n\"Because. Guy-girl only. Or, girl-on-girl,\" he adds, and he's immediately met with fervent opposition from the girls about his (admittedly idiotic) comment. I, however, start to tune them out, because I make eye contact with the guy fate has chosen for me. He smiles a little, and I smile back. He doesn't seem too bothered by it. In fact, he gives me a look and then shrugs. Fuck it, then. Plus, I'm not in the mood to listen to Kyle drone on about his mild homophobia.\n\nI stand up. \"Kyle, shut up,\" I interject, and all of them stop arguing. \"You,\" I say, pointing to the guy. \"C'mere.\"\n\nKyle looks defeated, but everyone else is watching in anticipation, some of them trying hard to hold in their laughter. The new guy stands up and walks around to my side of the table. I wonder what his name is. Greg? Tony? Hugo? No idea. I'm just bullshitting here. As he gets closer though, I realize Trish was definitely right. Honestly, of all the guys I could have been paired with, I'm glad it's him. I love my friends dearly, but some of them aren't exactly the best-looking dudes. This guy is at least handsome: clean, auburn beard; docile eyes; shy-but-winning smile.\n\nI can sense the tension in the room. I hear some whispers, and I can feel all their eyes on us. Me, I don't care. This guy looks mildly uncomfortable, though. He's smiling slightly, but I can tell he doesn't want to be the center of attention, especially for something like this. Well, sorry, big guy, but here we are. I snake my arm around his waist playfully, putting a hand on the small of his back and pulling him right into me. No time to waste. He grunts in surprise and I hear a few laughs before our lips make contact -- and then, it's quiet again. In fact, it's quite silent.\n\nAt first, we're going at it slow, and both of us are playing our parts very well. If I'm doing something for show, I like to go all out, so I quickly implement my tongue -- and he follows suit, sliding his tongue right back against mine. I'm happy he's playing along.\n\nBut then I get distracted by the texture of his lips. How are they this soft? Damn. I start to forget what the point of this kiss was. How long have we been going at it? I know the rules are ten seconds, but we must have been kissing for a little longer than that... Not that I mind, really. It's... pretty nice. And he feels so different from anyone else I've kissed. This guy is fit and muscular, like me, but even more built than I am, it seems like. His body feels strong, sturdy, present -- and I find myself suddenly very aware of what's going on between his legs. I can feel his bulge right against mine and... Wait... Does this dude have a boner right now?\n\nHe breaks the kiss, pulling back slightly, and when I open my eyes, I can see how red his face is. It's still quiet in the room, and I'm sure everyone isn't batting an eye in case they miss something. I just smile at him before stepping back slightly and offering my hand. \"Nice to meet you, by the way.\"\n\nThe tension in the room breaks and everyone bursts into laughter. Even the guy I just made out with chuckles a bit. Like a true sport, he takes my hand and nods with a smile spread wide across his face. He has one of those infectious smiles, so I find myself laughing along with everyone else.\n\nWe play more rounds of Spin the Bottle while having a few group conversations, which are all spotted with me teasing the new guy (\"Pray you land on him, he's a good kisser\"). Admittedly, I'm intrigued by this guy, and I don't totally know in what way yet. Is it just in a friendly, \"I want to know more about him\" way, or in a sexual way? Maybe a mix of both. Although historically I've only been actively heterosexual, I've had my fair share of curiosities about the other side of the fence, so this wouldn't be surprising, even though it has rarely been about specific guys. Plus, there *is* something kind of sexy about him. He's slightly unpolished, clearly athletic, shy but is quick to offer up jokes and initiates appropriate conversation, and has a killer smile. I can't deny that I'm drawn to him a little bit.\n\nEventually we call it quits with Spin the Bottle and decide to break out the drinks. As the token bartender, I handle the alcohol and mixers and get everyone the drink they request as they line up in the kitchen. Once finished, I bring back the rest of the vodka into the living room in case anyone needs a spritz and notice the new guy is still sitting at the coffee table. I sit on the side of the table adjacent to him, offering to whip him something up, but he declines.\n\n\"I don't drink,\" he says.\n\n\"Really?\" I ask, raising my eyebrows. When he nods, I shrug, deciding not to pester him. \"Well, I won't drink either.\"\n\nHe looks surprised. \"You don't have to--\"\n\n\"Trust me, I know how it feels to be the only sober one in the room,\" I say with a laugh before offering my hand out to him again. \"Also, proper introduction time,\" I say. \"I'm Jackie.\"\n\nHe smiles as he shakes my hand. \"Yeah, Liv told me your name. Might have said something Jackie-Chan-related when she mentioned you.\"\n\n\"Yeah, I'll never live that down,\" I say, and he laughs. \"My parents -- my adoptive parents -- they're obsessed with Jackie Chan.\"\n\n\"Before or after they got you?\" he asks.\n\nI chuckle. \"Before,\" I murmur -- hence why they were so hellbent on snagging an Asian baby. \"It's been a long-established fixation.\"\n\n\"I don't know whether I should laugh or be offended for you,\" he says with an amused grin.\n\n\"Go ahead and laugh,\" I say with a chuckle of my own.\n\n\"Jackie's not a bad name. Me, on the other hand... Angus?\" He grimaces a bit.\n\n\"Ouch,\" I say, snorting.\n\nHe blushes. \"You could at least pretend you don't think it's ugly,\" he says with a grin.\n\nI laugh. \"It's not that bad, I promise,\" I tell him. \"I just think of those raw beef patties.\"\n\n\"Christ,\" he whispers, and I try not to laugh again.\n\n\"We'll find you a better nickname,\" I say. \"What's your middle name?\"\n\n\"Nonexistent,\" he says.\n\n\"God, you're making this difficult,\" I say with a laugh.\n\nHe shrugs. \"Everyone calls me Gus. How's that?\"\n\n\"Much better,\" I say with a smile. \"Nice to meet you, Gus.\"\n\nHe just smiles. \"We've actually met once before.\"\n\nI blink. So I was right about him being familiar. \"Seriously?\"\n\n\"Yeah. It was for two seconds though, and it wasn't anything official.\" I give him a look that urges him to continue. \"You were visiting my campus for whatever reason, and you stopped me and asked me where Dr. Lyman's office was.\"\n\nI squint a bit before it dawns on me. The nice thing about the Boston area is that it's littered with colleges, so if I need something (or someone) outside of my own university, I can easily look to others. Dr. Lyman offered to help me with some of my research last year. \"Oh shit! I knew I recognized you,\" I say, though I'm surprised he remembers this. Suddenly, the memory comes back to me. \"You had a huge black eye though, didn't you?\"\n\nHe laughs. \"Yeah,\" he says, nodding. \"Rugby.\"\n\n\"Playing rugby was your first mistake,\" I say with a snicker. \"You still in school?\"\n\n\"Nah, I graduated in the spring,\" he says.\n\n\"Congratulations,\" I say. I want to ask what he majored in, or what he's up to now, but I get roped into a playful argument between Bruce and his alleged girlfriend Lucy. They're arguing about the pretentiousness of Bruce's music tastes, and he asks me to butt in on his behalf. For me, there's no argument about it: he's pretentious. He's the type of guy that will only listen to albums that were originally on vinyl and vehemently opposes current hits and yadda yadda yadda. Lucky for him I still enjoy his company, but he makes car rides miserable.\n\nAfter we branch off into separate conversations, I start to realize everyone's getting a bit on the drunker side, and I'm still painfully sober. People can be funny when they're drunk, but it borders on irritation unless you're drunk right alongside them. At least I'm not the *only* sober guy. When I turn back to Gus, I see that he's just smiling and observing everyone. It's been about a half-hour since our conversation was cut short, so I come sit next to him.\n\n\"Are you *sure* you don't want to drink?\" I ask.\n\nGus laughs. \"You can drink if you want to.\"\n\n\"You sure? I'd hate to leave you hanging.\"\n\n\"Consider it a gift,\" he says with a chuckle.\n\nSay no more, Gus. I grab the vodka, twist off the cap, and take a swig straight from the bottle. This brand isn't that bad. Goes down pretty easily, actually, which means I need to be careful. \"I never asked why you're here,\" I ask when I look at him. Then I wince when I see his expression. \"Did that sound dickish?\"\n\n\"No, no,\" he assures me with a laugh. \"Liv invited me.\"\n\n\"Yeah? Have you guys been friends long?\" I ask, taking another swig.\n\n\"A few months. Met at one of her dance recitals. She was friends with my girlfriend at the time. The whole nine yards.\"\n\nI chuckle. \"That's cool. Liv's one of the good ones,\" I say, glancing over at her. She's in an animated conversation with the twins.\n\n\"I gotta ask...\" Gus starts to say, and when I turn my head, I see that he's looking at me with a curious little smile. \"Are you two...?\"\n\n\"Us?\" I laugh. \"No. Liv and me, we're just friends.\"\n\n\"Really?\" he says, looking skeptical. \"She talks about you a lot.\"\n\nI shrug. \"I'm worth the conversation, I guess,\" I tease as I take another sip.\n\nHe just laughs, shaking his head. \"Guess I was wrong then. I just figured you two were at least... you know... doing it.\"\n\nI shake my head, glancing back towards Liv. \"Surprisingly, we never have.\"\n\n\"Would you?\" I hear him say.\n\nI turn back to him with a slight grin. What guy wouldn't? She's an absolute bombshell. \"I mean, yeah, but don't tell her I said that.\"\n\n\"Right,\" he says, nodding a bit with a strangely contemplative expression. \"So you're at least somewhat straight.\"\n\nI cock my eyebrow. \"What's that?\"\n\nHe shrugs. \"I don't know. After that kiss, I wasn't sure where you stood.\"\n\nI burst out laughing. This kid's got jokes, huh? \"Oh, Angus thinks he's funny,\" I say, which makes him laugh, blowing his \"serious boy\" cover. \"Yes, I'm straight,\" I tell him. \"Well... straight for now, but open to the possibilities.\"\n\n\"Yeah?\" He looks intrigued.\n\nI say what's always been my philosophy: \"You never know what's gonna happen.\" I punctuate my words with a grin, remembering how he chubbed up during our kiss.\n\nHe nods, the slightest smile on his lips. \"I can respect that.\"\n\nI smirk at him for a few moments before speaking again. \"Would your girl be pissed if she found out or is she one of those chicks that finds dudes kissing hot?\"\n\nHe blushes and laughs a bit. \"Definitely the latter,\" he says. \"But mostly because she's not my girl anymore.\"\n\nI blink. \"I thought you said you have a girlfriend.\"\n\n\"I did, up until last week.\"\n\nWhoops. \"Damn. Sorry, man,\" I say.\n\nBut he waves me off. \"It's fine,\" he says, even though he looks upset by it.\n\n\"Still sucks.\"\n\nHe shrugs. \"Only because I'm low-key a serial monogamist.\"\n\nI chuckle. \"And now you're in limbo.\"\n\n\"Exactly!\" he says, running his fingers over his head. \"It's lame, and I know it's lame, but I'm all out of whack when I'm not in a relationship.\"\n\nI can't say the same. I haven't dated in years. Fucked around, sure. I've done that plenty. But dated? Nope. The last girlfriend I had was in my undergrad years, and we only lasted a few months. It's not like I don't want something. It's that I don't need it. I've never been the type to seek out a relationship. If something is meant to be, things will fall into place. I always make fun of people who can't exist without being in a relationship, but I like this guy, so I play nice.\n\n\"But it's something I'm working on,\" he says. Then, he laughs to himself. \"Whatever that means.\"\n\n\"How are you coping?\" I ask, trying not to smile.\n\n\"Weed and video games,\" he says with a grimace. \"How corny is that?\"\n\nI chuckle. At least he's self-aware. \"Depends on the video games,\" I comment, taking a hefty swig of the bottle.\n\n\"Zelda.\"\n\nI perk up. \"Seriously?\" I'm not a gamer by any means, but the Zelda franchise is near and dear to my heart. \"I grew up on Zelda.\"\n\n\"Yeah?\" he says, grinning. \"Those games are killer. Some of the best.\"\n\nNot that my opinion is valid since I don't play many video games, but I nod because I totally agree with him. \"Absolutely. Have you played the new one?\"\n\n\"That's all I've been playing, dude,\" he says with a chuckle.\n\nI groan. \"Fuuuck. I've been dying to check it out but I don't have the new console.\" Pretty sure the Nintendo Switch is upwards of three-hundred dollars. Not to mention that the game itself is another sixty bucks. A boy's gotta pay his rent.\n\n\"Wanna come over?\" he asks.\n\nHis offer catches me off guard. \"Right now?\"\n\nHe laughs. \"Well, maybe after this whole thing dies down,\" he says, gesturing to the room.\n\n\"Right,\" I say, nodding and laughing before I smile at him. \"I'm down.\"\n\nWe force ourselves to mingle with everyone for a bit, but I'm antsy. The thought of getting my hands on the new Zelda game is all I can think about. Plus, there's that part of me that's kind of excited to get to know Gus a little more. It's rare that I make new friends nowadays. I've had the same social circle for years, and (coming from someone who can't keep a relationship to save his life) I need to be refreshed constantly. Maybe this is my shot at meeting a new pal -- especially someone who lives in town. I love Bruce, but he lives across the state, and Liv is great, but she exhausts me if I see her too often. The rest of my friends are fine, but if I'm being perfectly honest, I could live without them.\n\nSoon, after everyone's had their fill of drinks, Sasha is the first one to say she's going to leave, and she starts making the rounds of goodbyes. Just as I'm wondering if this is a good time to gracefully exit, Gus pats me on the back and asks, \"You wanna head out?\"\n\nBless this boy. I hug all my friends goodbye (even Bruce's new squeeze), ignoring Liv's attempts to rope me into another conversation. I tell her to just call me tomorrow before finally slipping out of her apartment and heading out with Gus.\n\n\"Not one for social events?\" Gus asks with a grin, noticing my eagerness to leave.\n\n\"Me?\" I scratch my head. \"Honestly, I love social stuff, but I'm a slut for Zelda, and that's all I've been thinking about since you mentioned it.\"\n\nGus lets out a hearty laugh. \"Totally understandable.\"\n\nI smile a little as we walk together towards wherever he lives. \"Alright,\" I say, standing up a little straighter. \"I'm feeling a tiny bit drunk so forgive me, but I gotta ask all the basic get-to-know-you questions.\"",
        "Gus, like a trooper, just smiles. \"Go for it.\"\n\nI count off each question with my fingers. \"How old are you, where are you from, what are you doing with your life?\"\n\nHe pauses before looking at me. \"Not gonna ask what my favorite color is?\" he asks in a serious tone before smiling, both of us laughing.\n\nI learn that Gus is twenty-four, like myself. Our graduation years were different because he took time off between high school and college to pursue some serious athletics (turns out he's big into winter sports). He graduated with a degree in publication and journalism, surprisingly enough. He's lived in Boston his whole life with his mom and his kid brother, and since his mom works the night shift, he mostly works from home as a writer for one of Boston's newspapers in order to also care for his younger sibling. He doesn't seem to mind, though. In fact, his face perks up a bit when he talks about his family, so I'm sure he has no qualms about where his life is at.\n\nHe asks for my rundown in return, so I give him the gist of things. I'm a grad student working on my PhD in organic chemistry. I'm an only child, adopted from Malaysia, and though I've never particularly been into athletics, I love hiking and rock climbing. My life has been on a cycle lately: PhD, working out at the indoor rock climbing gym, back to PhD, maybe seeing a friend or my parents, and then PhD once again. You can't really have much of a life going for a doctorate in fucking organic chemistry -- so I'm hoping the end result is worth it.\n\nIt's a decent walk to where he lives, but I don't mind. It's nice chatting with Gus. It's a totally different pace than what I'm used to. My conversations are usually either heavily science-based or pointless small-talk. In the very, very short span of time that we've been talking, I can already tell that Gus has the capacity to have real, deeper conversations. There are other qualities I can discern right off the bat, too: he's kind, very self-aware, lacking a strong sense of confidence, smart, and unambitious (which I don't see as a total con just yet). It seems like we might overlap in a lot of ways, like with humor and how we think. The only major differences I've noticed thus far are our confidence levels (of which I have plenty) and ambition (of which I have too much). Already, I'm eager to see how this friendship develops.\n\nWhen we get to his apartment, he lets me in first and locks the door behind him. Then, I hear a woman's voice coming from the kitchen. \"Angie, is that you?\"\n\nI smirk at Gus, who blushes. \"Angie?\" I whisper, but he just shoves me playfully.\n\n\"Yeah, it's me, Ma,\" he says to his mother, heading into the kitchen. I follow, seeing him hug a small, kind-looking woman who looks a bit frazzled. She looks up at me in surprise when she sees me, but Gus quickly introduces me. \"This is my friend Jackie.\"\n\n\"Hello!\" she says sweetly, and I'm about to offer my hand before I realize she's coming in for a hug. I laugh, leaning over to accept the embrace.\n\n\"Nice to meet you, Mrs. Fenway,\" I say, and she gives me a pat on the back.\n\n\"Are you hungry? Thirsty?\" she asks in typical mom-fashion. It's quite adorable.\n\nGus steps in, though. \"Mom, we're fine,\" he says with a little laugh. \"Just focus on getting ready for work.\"\n\n\"Okay, okay,\" she says, brushing him off as she finishes wrapping up food for herself. \"Can you make sure Gabriel is asleep? He keeps sneaking off to play video games.\"\n\n\"I'll make sure,\" Gus says, and he leans in to kiss her cheek. \"Have a good shift.\"\n\nAfter saying goodbye to his mother, he gestures for me to follow him, leading me through the small apartment space and down a narrow hallway. We stop halfway down, where Gus pokes his head into one of the bedrooms. \"Gabe?\" he whispers. I stand behind Gus to peer in and notice it's his seven-year-old brother's room. He looks like he's fast asleep in his bed, so Gus just shuts the door. \"I'm surprised he's actually asleep,\" he says as he heads further down the hallway.\n\n\"Does he not sleep?\"\n\n\"He does, just not alone. I almost always wake up to find him in my bed, or in my mom's bed,\" he says. He opens the door to his own room and flicks on the light. Immediately, the small space is illuminated. It reminds me of a dorm room with how compact everything feels, especially because he has a bunk bed, but he's managed to keep it cozy. The top bunk is used for storage, it looks like, while the rest of the room has so much shit on the walls that I don't even know what the paint looks like. Between the posters, banners, flags, and newspaper clippings, the already-small room feels a bit tighter, but not suffocating at least. I'm surprised, though -- because it's not as messy as I thought it'd be, especially considering he said he's been doing not much else besides getting high and playing video games. As we walk into the dimly lit room, I hear a meow coming from his bed, and notice a light-grey cat stretched out on his pillow.\n\n\"Cute,\" I say, smiling.\n\n\"Yeah, she's cute, but she's a bitch,\" Gus says, and I laugh a little. Gus goes to his bed and pets the cat's head before kicking his shoes off and climbing onto the sheets. He sits against the wall and grabs the controller that was on the pillow next to his cat. \"Take a seat, my guy,\" he says suddenly, patting the spot next to him.\n\nI smile a little, taking my shoes off before joining him on his small bed. The TV is situated at a nice angle, and when he turns the screen on, I see the game is already loaded up. Clearly, he had been playing before he went out today. I watch him save and exit his game before clicking on an empty save file to start up a new game. He then hands me the controller.\n\nI look at him. \"Seriously?\"\n\n\"Yeah, go for it,\" he says.\n\nI laugh, taking the controller. \"Damn, you really know how to treat a girl,\" I say, and he chuckles.\n\nWe spend hours playing through the beginning of the game. I'm in heaven. This is the perfect bit of escapism I need after being so balls-deep in my research. Plus, once I get a handle on the mechanics, I find that I'm surprisingly good at this game. He hasn't gotten too far in the story yet, so we spend a lot of time speculating where it may lead while I go through the intro, even doing things that he didn't notice during his first run.\n\nAnd then, the controller suddenly loses battery. \"Um. What happened?\" I ask, handing him the unresponsive controller.\n\n\"Fucking shit,\" Gus says with a laugh. He sighs. \"We gotta wait.\" He hops off the bed. \"The one fault with the Switch is that you have to charge the Joy-Cons on the actual system. So you can't use them when it's docked.\" I watch him slide each controller onto either side of the console to charge. \"Unless you wanna play it over there?\"\n\nIt's tempting, but we've been playing a while, and I'm sure it's much better visually on the TV rather than in handheld-mode. \"We can take a break,\" I say.\n\nGus nods, coming back to the bed with a sigh. \"You want anything, by the way?\" he asks. \"My mom makes a killer cake. I think there's leftovers.\"\n\n\"Nah, I'm okay,\" I say with a smile. Even though that sounds amazing, I try not to eat when it's too late at night. \"What does she do, by the way? Night shift of anything must suck.\"\n\n\"Oh, for sure,\" he says with a laugh. \"She's a nurse. Mostly third-shift, but she likes it, oddly enough.\"\n\n\"I'd fucking die, dude,\" I say. \"I need daylight.\"\n\n\"You're tellin' me,\" he says with a laugh.\n\n\"She works at a hospital, I'm assuming?\"\n\nHe nods. \"Yup. Not too far from here, actually.\"\n\n\"Is it even busy?\"\n\n\"I mean, she says it can get busy if there are big events happening nearby, but otherwise, it's super irregular.\"\n\n\"Bet she gets all the weirdos,\" I say, imagining all the strange happenings that occur in Boston at night.\n\n\"Sometimes,\" he says, and then he starts laughing. \"Actually, last week, she said a guy came into the ER with surgical complications. He had gotten a few ribs removed at the bottom in Mexico or some shit. And she was all 'Why would anyone get their ribs removed?'\" He says it in his best, high-pitched mom voice.\n\nI snort. \"I can think of one reason.\"\n\nGus laughs. \"I didn't have the heart to tell her.\"\n\nI sit up a bit, feeling my own ribs. \"Would that really help that much?\" I ask, laughing and looking at Gus while I try to envision someone trying to suck their own cock. \"I'm not that flexible.\"\n\n\"I am,\" he says.\n\nI arch my eyebrow. \"Really?\" I laugh slightly. \"So you can like... go down on yourself?\"\n\nHe blushes but laughs as if he realizes what he just admitted. \"I mean... Yeah, if I wanted to, I could probably do it.\"\n\n\"No way,\" I say with a laugh. \"And you still have all your ribs?\"\n\n\"Yeah, I'm fully intact. Here.\" He has me move down the bed more to make room for him. He turns around and rests his head on the edge of the bed with his legs up on the wall. \"Just spot me real quick. Make sure I don't fall,\" he says as he swings his legs over his head. He looks like he's about to slip so I (awkwardly) grab his sides, looking down at him between his legs. The first thing I notice is how firm his body feels. Damn, this kid definitely works out a good amount. I keep a solid grip on him and tilt my head to a better position so that I can see, and sure enough, he can bend back far enough to totally suck his own dick. I'm a bit shocked considering Gus is shorter and has a more compact built, so I wouldn't have expected him to be flexible enough to suck himself off. He could take a decent couple of inches too, depending on how big he is. I can't help but laugh -- and at the same time, I almost want to see the real thing.\n\n\"That's insane,\" I say with a grin as I spot him until he's back in a normal position.\n\n\"Strains the back a little, though,\" he says, rubbing his lower back.\n\n\"I can imagine.\" I look at him, grinning still. \"You must have tried it for real,\" I say. \"Be honest.\"\n\nHe blushes, but I think he realizes we're kind of on cool terms now. \"Uh... Yeah, I have.\"\n\nI let out a hearty laugh. \"Damn, man, that's impressive,\" I say, patting his leg before resting against the wall. \"I'd never leave the house if I could do that.\"\n\nHe laughs, which seems to make him feel more comfortable. \"It's honestly not that amazing,\" he says. \"You kinda lose the surprise element.\"\n\n\"The surprise?\"\n\n\"Yeah, like... When someone's doing you, you're not really sure what they're gonna do,\" he explains. \"Or like how scratching your own back doesn't feel as good when someone else does it.\"\n\nI nod in understanding. \"Okay, yeah, that makes sense,\" I say before smirking.\n\n\"Every now and then, though,\" he says.\n\n\"Says you,\" I tease, and we both laugh.\n\nWe just chat for a little while longer until we both feel the controllers have been charging long enough. I let him play this time, though, since he's a little further in the game and I want to see more of the map. We solve a few puzzles in-game together for a while and do some exploration, but eventually, since I'm lying down, I get tired. The exhaustion annoys me because I want to keep playing this game with Gus, but my body betrays me, and I inevitably drift off into sleep.\n\n~ ~ ~\n\nMy phone wakes me up. The vibration is extra loud for some reason, and as it pulls me out of sleep, I realize my alarm must be going off. I groan, sliding my hand down into my pocket. How did this blanket get on me?\n\n\"Morning, sleepyhead,\" I hear someone say.\n\nI glance over towards the floor and see Gus is doing some sit ups, smiling at me. \"Shut up,\" I say sleepily, and he laughs. I pull my phone from my pocket, but I notice that it's not my alarm. Liv is calling me. I squint a bit before sliding my phone open to answer the call. As I do, my phone falls onto the bed, and I sigh, my fingers still half-asleep. I just press the speaker button out of laziness. \"What?\"\n\nI hear her laugh. \"Did you just wake up?\"\n\n\"Maybe,\" I say with a yawn. \"You're on speaker, by the way,\" I tell her.\n\n\"Okay,\" she says, and then she pauses. \"Wait. Is someone else there?\"\n\n\"Gus.\"\n\n\"Really?\" she asks, and there's something in her voice that I can't quite pin down. \"You're with Gus?\"\n\n\"Yeah...\" I say, glancing at Gus, but he's just doing his sit ups. \"I'm at his place.\"\n\n\"Oh, okay,\" she says. \"Hi, Gus!\" she says loudly, and Gus smiles and says hello back. \"I just wanted to invite you to the casino this weekend. Bruce wants to book a hotel quick before the rooms are taken so we're trying to get a headcount. Gus, you should come too!\"\n\nGus pauses mid-sit-up, smiling slightly. \"I don't wanna intrude or any--\"\n\n\"You're not intruding,\" she says quickly. \"We're thinking Friday night into Saturday.\"\n\nGus glances at me and I just shrug. \"I'm down,\" I say. Gus seems to think about it before agreeing to as well, which makes Liv very happy.\n\nWe talk for another minute before she lets me go, and I hang up, sighing and resting on my back. \"Fuck you for letting me sleep in my jeans,\" I tell him, and he just laughs. He looks way more comfortable in shorts and a wife beater.\n\n\"I'm sorry. I actually tried to wake you up but you were completely out.\"\n\n\"Damn,\" I say with a slight laugh. \"Your bed is mad comfortable.\"\n\n\"It's all the extra padding,\" he says, straightening out his legs to stretch.\n\nI smile slightly. \"Well, thanks for letting me take your bed. Next time, kick me out.\"\n\n\"Kick you out?\"\n\n\"I hate taking people's beds. I always feel bad. Just tell me to move to the couch.\"\n\nGus smiles. \"Alright. I'll remember that for next time. Which is when, by the way?\" When I arch my eyebrow, he just laughs. \"Plenty more of this game to tackle,\" he says, gesturing to the Switch.\n\nI bite my lip a bit. Is tonight too soon? He doesn't seem like the type of guy who'd be weirded out by that. Plus, he was the one who suggested we hang out again. \"I can make time,\" I say.\n\n\"How 'bout tonight then?\" he asks, and I resist smiling too widely. \"If it's too far, I can come to you. Where do you live?\"\n\n\"Cambridge,\" I say. \"Literally right across the bridge.\"\n\n\"Oh, that's not bad,\" he says, shrugging. \"We could figure it out later, if you want.\"\n\n\"Yeah, that works.\" I smile, feeling excited about this new friendship.\n\n~ ~ ~\n\nWe end up hanging out multiple times over the next few days, either playing video games, going out and grabbing food, seeing some live music, or just chilling out. Each time we see each other, we've been really getting to know each other better. He's such a nice guy -- and I realize I'm incredibly attracted to his vibe. There's an energy about him that just completely calms me, which is perfect for me considering how stressed I've been with my research. After a long, mentally-taxing day, Gus is there with a smile, good food, and good company.\n\nHim coming to the casino with my friends makes it a little more exciting than it usually is. Honestly, the casino for me is a total drag. We all make plans pretty much once or twice a year to go, but I'm not a gambler, nor a shopper (since it's essentially a mall). The only reason I go is to hang out with my friends, maybe get drunk in a nice hotel suite, and just unwind for a bit. Last year I went to the nearby spa with Liv and Sasha, which was surprisingly nice. Maybe we'll do that again. But this time, I'll at least have a new friend to kick back with.\n\nWe end up not spending that much time shopping, thank the Lord. Bruce outdid himself and rented out one of the nicest suites available, and all of us are so into the space that we only leave to get a group dinner and shop for maybe an hour. The rest of our time is spent in the room mingling and drinking and listening to music. I don't drink that much so that Gus doesn't feel left out, but I still end up having a good time. Plus, it's nice to see him integrating so well with our circle of friends. Bruce's girlfriend is still very out-of-the-loop, and by her choice. I keep trying to initiate conversation but she's adamant on being a lone wolf, I suppose. At least one of the newbies is getting along with everyone.\n\nAs we're all relaxing in the sitting room that connects the two bedrooms, Liv speaks up. \"We should play Spin the Bottle again.\"\n\nAll of us groan in protest, which makes me laugh. \"*God*, no,\" Corb says, shaking his head vehemently.\n\n\"You guys are no fun,\" Liv says with a pouty face.\n\n\"No stupid games. Put on a movie or something,\" Corb suggests.\n\nBut Kayla has an even better idea. \"Why don't we go to the hot tub or something?\"\n\nI'm the first one to jump on board, and the rest eagerly accept the idea. We all change into our bathing suits and make our way downstairs to where the hot tub and pool are. It's pretty late, so there's only one man doing laps in the pool, but the hot tub is completely open, and the girls all squeal in delight at the fact that we get it all to ourselves.\n\nOnce inside, we all just have casual conversation, most of which is spent taking turns complaining about some aspect of each of our lives (I focus on grad school). I notice that Liv is all over Kyle for some reason, sitting sideways in his lap with her arms around his neck. I know they hook up often, mostly when they've both been drinking, and though I love Kayla, her brother is something to be desired at times. I like him, sure, but only in group settings, because I at least am able to shift my attention towards someone else when I need space from him. He just has irksome energy. He's also the type to stir the pot for his own entertainment... which is exactly what he tries to do in the hot tub.\n\n\"Hey, so, Gus,\" he starts to say as Liv nibbles on his ear. Since Gus is directly across from Kyle, everyone is listening. \"Liv told me you had a sex dream about Jackie.\"\n\nA couple of the girls giggle and say \"Ooo!\" Even I'm about to laugh until I notice Gus's face. \"Dude, seriously?\" he says. His face is red as fuck, and not because of the heat from the hot tub.\n\nKyle's grinning, but in a snide sort of way. It pisses me off a bit because I know he's only doing this to make Gus uncomfortable, which means Gus probably told Liv about the dream hoping it'd stay in confidence. \"I just wanna know if it was juicy or anything,\" Kyle says.\n\nGus doesn't answer Kyle. Instead, he's looking at Liv. \"Why'd you tell him that?\"\n\nShe just plays it off as if it's no big deal. \"What?\" she asks girlishly. \"Jackie doesn't care. Right, Jackie?\"\n\nI mean, she's right, but it doesn't seem like Gus wanted everyone to know. \"Yeah, but I do,\" Gus says. God, I feel horrible. He looks so embarrassed. It's not his fault he didn't know that Liv can't keep a secret to save her life. She'll tell anyone anything.\n\nBefore anyone can get another word in, Gus pulls himself out of the hot tub, grabbing his towel and making a beeline for the door. \"Gus!\" I say, calling after him, but he ignores me. Once he's gone, I sigh, looking at Kyle. \"You're a dick, dude.\"\n\n\"What?\" he says in that stupid, smug smile of his.\n\n\"It's not a big deal, guys,\" Liv says.\n\n\"You're a dick too, Liv,\" I tell her, and she looks surprised that I'm calling her out. Really, I'm mostly irritated by her. Kyle's antics are expected, but she should know better than to make a newcomer feel isolated. Then again, I should really get Gus's side of things before I start berating my friends. Deciding to go check up on him, I stand up. Liv starts to talk to me but I cut her off. \"I'm gonna go make sure he's good,\" I say, stepping out of the hot tub.\n\n\"Oh my God,\" Liv says, drawling out \"God\" in an exasperated way. \"This is way way way out of proportion. It's just a stupid sex dream.\"\n\nI know that it's not a big deal. We're adults. We know that sex dreams are random and weird and funny and who cares? But Gus isn't super close with all of us yet. He's still an outsider, and Liv and Kyle singled him out and embarrassed him. Regardless of whether or not it's a big deal, he feels bad about it, and that's valid enough. Without saying anything else, I pull myself out of the tub, grab my towel, and head out to look for Gus.",
        "It's a good thing I went to check the room first, because he's sitting outside the door in the hallway, picking at his fingernails. When he hears me coming, he looks over and then his eyes go wide as he stands up. I just smile. \"Locked out?\"\n\nHe bites his lip. \"Yeah. I forgot I don't have a key.\"\n\n\"That's okay,\" I say, pulling my card out of my wet pocket and then unlocking the door. I let him in first, and then I follow, tossing my towel on one of the beds and stretching slightly.\n\n\"Where's everyone else?\" he asks me.\n\n\"Still downstairs,\" I say. \"I came up to check on you.\"\n\nHe looks oddly dumbstruck that I did but he just nods. \"Sorry. I shouldn't have stormed off.\"\n\nHe didn't really storm off, but I don't want to argue about word choice. \"No, it's okay,\" I say, taking a seat on the edge of one of the beds. He sits across from me on the adjacent bed.\n\n\"I was just embarrassed and in panic-mode, I think,\" he says, his face still red.\n\nI smile slightly, trying to think of what to say that would make him feel better about everything. \"Would it make you feel better if I told you I had a dream about you too?\"\n\nHe just smiles a little. \"No, 'cause I know you'd be lying.\"\n\nI chuckle. \"Fair,\" I say. I did have a dream with him in it the other night, but it wasn't sexual at all. I go for a different approach. \"Well... Was I at least hot?\"\n\nHe looks at me before bursting out in laughter. I join him, chuckling slightly and happy to see that he's not too embarrassed to at least make light of it. \"Thanks for being so cool about everything,\" he says after a moment.\n\n\"Yeah, of course,\" I say.\n\nHe smiles slightly, playing with his fingers a bit. \"I'm glad we met, man.\"\n\nI'm not entirely sure what it is, but I get a weird sensation in my gut when he says that. \"Me too, Gus.\"\n\n\"Think we would have been friends if we hadn't made-out the first night?\"\n\nOh, that kiss. How could I forget? \"Probably. I would have bothered you at some point. But the kiss just...\"\n\n\"Broke the ice?\"\n\n\"Exactly,\" I say with a chuckle. \"It was a pretty nice kiss. Not gonna lie.\"\n\nHe snorts a bit. \"Are you complimenting me?\"\n\n\"Just stating facts,\" I say with a smirk.\n\n\"It was alright,\" he says in a teasing voice.\n\n\"'Alright'? Bullshit. Seems like you thought that kiss was pretty, uh... stirring?\" He looks up at me and immediately goes wide-eyed and red, and I burst out laughing. Maybe he thought I had forgotten about the fact that he popped wood during that kiss. \"I'm sorry, I had to.\"\n\n\"Jesus Christ, this is the most embarrassing night of my life,\" he says, partially hiding his face with his hands, beet red but at least smiling.\n\n\"I'm sorry,\" I try to say between laughs.\n\n\"Fuck you, dude,\" he says, but he's laughing right alongside me.\n\n\"It's okay. I know I'm a good kisser,\" I tease.\n\n\"I was picturing Lucy Liu. That's why it happened.\"\n\n\"Wooow,\" I say, throwing a pillow at him, and he laughs, catching it. \"I've never been so offended.\"\n\nHe winces. \"Did I take it too far?\" he asks, hugging the pillow.\n\n\"I'm just offended that you didn't picture me,\" I say with a slight grin.\n\nHe lets out a short laugh. \"Next time, I will,\" he says.\n\nIs this flirting? Are we flirting? I know we have chemistry. We keep subtly hinting at it, but damn. He didn't say that in a sly, purposefully-flirtatious way. It was just a comment, paired with him not looking at me directly. I think he might actually be into me a little bit -- and I think I might be reciprocating. But what if I'm wrong? I could be reading these signs completely incorrectly. After all, Bruce and I have a \"flirtatious\" type of bromance, but I'd never do anything with him, and he'd never do anything with me. We just don't have that kind of dynamic. Gus, though... Gus feels different. Fuck, he's looking pretty cute right now. Why is it that suddenly all I want to do is kiss him again?\n\n\"How 'bout now?\" I ask boldly.\n\nHe glances at me, pausing before letting out a little laugh. \"Right now?\"\n\n\"Yeah, why not? I'll give you a second chance,\" I say with a slight grin.\n\nHe just stares at me with a half-smile on his lips, wondering whether or not I'm being serious. \"I can't tell if you're joking or not.\"\n\n\"Am I being too forward or something?\"\n\nHe raises his eyebrows. \"Not forward enough, I think.\"\n\nSo he wants me to be more forward? Fine. I stand up, coming closer to him. He looks a mix between amused, excited, and nervous as I lean into him. Since he's sitting on the edge of his bed, I grab the pillow he's holding, toss it to the floor, and then put my hands on the bed on either side of his hips. He leans back a bit in surprise, but our faces remain close. I grin a little, looking at his lips. \"How's this?\"\n\nHe lets out a shaky laugh. \"Jackie...\"\n\n\"Just say the word and I'll pull away,\" I tell him. The ball's in his court now. Is he going to push me away, or is he going to want me to go in for it? I lick my lips slightly. I hope he kisses me. I don't know where this sudden, insurmountable urge came from, but I want to ride it 'til it dies.\n\nHis lips part slightly. \"Don't.\"\n\nDon't what? Don't pull away? Don't kiss him? Those are two opposite directions. I can't even read his expression because it's gone blank. What's he thinking?\n\nBut before I figure out what my next move is, Gus leans forward. Just a hair, but it's noticeable. He pauses when I can feel his breath on my lips, and I wait a moment before bridging the gap and letting our lips connect. I close my eyes, leaning into him as he leans into me. Yep. Still soft. Fuck, he's got great lips. We both tilt our heads in opposite directions, allowing the kiss to get a little deeper. Very gradually, we graduate from a simple, exploratory peck to full-fledged making out.\n\nThis kid is good. Really good. Oh shit. Is that a hint of tongue? I grin slightly against Gus' lips, volleying back -- and in turn, he responds with a little more tongue. It's like a dance. One of us takes it just slightly to the next level, and the other ups the ante. On and on we go until our lips are making wet smacking noises that echo off the walls. He tastes good, too, making me salivate even more. Is that candy? Something cherry-flavored? Before I can discern the sweetness, there's another sensation to add to the equation: his hand on my side. I hum at the feeling of his hand on my bare skin. It's an automatic response, one that revs me up into high-gear. Now I want to touch him. I want to be on top of him. I want to grind into him until we--\n\nThe door clicks open, and in an instant, Gus pushes me back, gasping slightly. I just grin slightly. I don't think I would have cared that much if we got caught, but I understand his instinctive response to push me away, especially after the fiasco in the hot tub. I just stand in front of him as everyone starts stumbling into the room, and I notice that he quickly grabs a pillow to cover his lap. I grin a bit. Is that bastard hard again?\n\n\"Hey!\" Liv says, noticing the two of us. \"Everything okay?\"\n\nI look at Gus, who glances at my eyes for a split second and then looks away, still red in the face. Damn, this kid can't hide his embarrassment for shit. \"Everything's good,\" I say with a smile towards Liv. \"We, uh, talked it out.\"\n\n\"Good, good,\" Liv says happily, coming over to sit next to Gus. \"I'm really sorry I told Kyle. It just slipped. I didn't think it was a big deal.\"\n\n\"It's okay,\" he says with a tight-lipped smile. Liv takes it.\n\n\"Wait wait wait,\" Trish says loudly, running her fingers through her hair as she looks around the room as if with new eyes. \"What are the sleeping arrangements?\" That's a good question. There are ten of us, and four beds, which means almost everyone is doubling up.\n\n\"I'll take the couch,\" Corb says, which is smart considering since he's the biggest one out of all of us. Now mostly everyone can comfortably have a partner. Three of the girls agree to cozy up in one of the beds since they're small, and the \"couples\" agree to take a bed each... which leaves me and Gus.\n\nI smirk at him. \"You 'n me?\"\n\nHe smiles a bit, laughing and rubbing his face. \"Do I have a choice?\"\n\nWe all don't stay up for much longer. Most of us are pretty tired, so Corb starts collecting spare blankets he can use for the couch while everyone does their nightly pre-bed routine. Somehow, Kyle and Liv end up sharing the room with me and Gus. I'm still a little irritated with them, but it's not like it matters where they end up. We're all just sleeping.\n\nI'm the last person in our room to get ready for bed, since I wanted to shower. When I come back in the room, the lights are off and Liv and Kyle are dead asleep. I walk quietly past their bed towards mine and then slip under the covers in just my boxers, resting on my back. I wonder if Gus is asleep yet -- and if he's still awake, I wonder if he's thinking about that kiss we shared.\n\nIt was even hotter than the first time, but I start to imagine what would have happened had gone further. What'd that be like? I've been with a number of girls, but they were all slim and smaller than me, and although I'm a little bit taller than Gus, he's a fit dude. Kissing his actual lips felt normal (facial hair aside), but his grip on my body was different. Stronger. Intentional. I lick my lips a bit, imagining what would have unfolded had we not been interrupted. How far would we have gone? Honestly, we'd probably just rut against each other like we were in junior high, making out hard as we went. Still, it'd be kind of hot, wouldn't it? My dick thinks so, at least -- after all, I'm starting to bone up a bit.\n\nI roll onto my side, turning towards Gus. I'm the only one in the room making noise, so the rustling seems super fucking loud, but it's fine. I could just be shifting in my sleep as far as anyone knows. I face Gus' backside. The bed is pretty big, so there's still some distance between us. I wish I could telepathically ask him if he's awake, what he's thinking about, and if he's pondering the same things that I am.\n\nAfter a minute, I slide forward more, making my way closer until we're nearly spooning. As I adjust the blanket, I put my hand on his bare arm and give it a little squeeze, but he doesn't respond. Is he really asleep?\n\nA second later, he lifts his hand and rests it on top of mine, giving it a light squeeze back. Okay. So he's awake, then. I slowly slide my hand down his arm, and it drops to his side once I reach his elbow. Gus is shirtless too, so I make contact with his bare skin, noticing how odd this is. I'm not used to touching someone with hair on their arms, and even though his side is smooth, I can feel the muscles underneath.\n\nWaiting for Gus to stop me, I let my hand travel down further until I feel fabric. It's thin. He must just be in boxers, too. I move my hand across his hip, and then, in response, Gus shifts his arm and rests his hand on my wrist. What does that mean? Does he want me to stop? I pause, waiting for another signal, but nothing comes.\n\nSo, I keep going, sliding directly over -- not down his thigh, but forward, closer to his crotch. I hear Gus inhale a little bit, and I realize my heart is pounding. He's not stopping me as I slide my hand along the silky waistband of his boxers. I feel the end of his happy trail at my fingertips, the heat radiating from his crotch. I want to touch him. I want to touch him so badly.\n\nI figured that if Gus wanted me to pull away, he would have stopped me by now. Encouraged by his inaction, I slide my hand right into his boxers, letting my fingers find their way around his already-hard cock. He lets out a small, breathy moan as soon as I make contact, his body tensing a bit, his manhood pulsing in my grip. Fuck. So this is what another dick feels like, huh? Not too different from mine, really. It's just fascinatingly weird because, even though I know exactly what he's feeling, even though I know what it feels like to have my hand wrapped around my dick, I can't feel those sensations right now. It throws me for a loop.\n\nI give his cock a firm squeeze, and Gus grunts and starts breathing a little heavier. Wanting more contact, I close the gap between our bodies and press my front against his backside. Now he can feel that I'm hard too, my stiff bulge pressing right against his ass. As I start moving my hand on his dick, he squirms ever so slightly. Fuck. This is kind of fucking hot, especially with Liv and Kyle in the bed next to us.\n\nI grind into Gus slightly as I breathe in his ear and jerk him off. My own cock is throbbing right now. When's the last time I got off? I haven't stroked one out in a number of days, and I haven't had sex with anyone in maybe two weeks, so I'm very into this right now. Then, to take things up a notch, Gus suddenly turns around. As soon as he's facing me, he kisses me -- but that doesn't last long. Our kisses are far too loud and far too distinct, and we end up fumbling the kiss and trying to keep our laughter at bay.\n\n\"Shh,\" I say softly between chuckles, and instead, Gus reaches down and lets his hand explore. I feel it slide down my lower torso and slip right into my boxers. As soon as his fingers get around my hard-on, my eyes roll. \"Fuck,\" I moan out quietly, aching already. I need to get off -- and I need Gus to do it.\n\nUnder the blankets, Gus pulls my cock out from my boxers, and I do the same for him. Breathing heavily, both of us quietly stroke and feel each other, our bodies close. The heat, the contact, the risk -- all of it is so hot to me, and Gus' hand feels incredible. However, what *really* drives me over the edge is when Gus gets off. It surprises me, because there's no warning. He lets out a little moan, and then all of a sudden, he's clenching his eyes shut. My hand is still moving steadily, but I feel warm liquid shooting against my body under the blankets. He's cumming. He fucking came on me. And that's what tips me over.\n\n\"Shit,\" I whisper, clenching my teeth to keep quiet as Gus' fingers bring me to a blissful orgasm. My entire body feels it. It ripples through me several times, and I spurt out what I know is quite a load because it's been days since I've gotten off. I feel him milking it out of me until I finally come down from the high and try to catch my breath.\n\nOnce we finish, I feel incredibly warm under these blankets -- warm, and sleepy. We should maybe wipe the jizz off of us before we go to sleep, though, right? I look at Gus, who's loosely holding onto my softening cock with just his finger and his thumb. On one hand, I can't believe we just did that. On the other hand, though, it seems to make sense. Now that we've done it, I feel like something like this was bound to happen. I wonder what he'll say tomorrow, if anything.\n\nI pull away from him to grab one of the pillows, removing the pillowcase and then pulling the blankets off of us for a second. A rush of cool air covers my body and I sigh in relief as I start cleaning myself up. I wipe off Gus' load off of my lower body and dab at any cum that might have gotten on the sheets. Gus cleans himself up after me, and as I pull my boxers back up, I notice I was right: I *did* shoot a huge load. He doesn't say anything about it, though. He just wipes it all up and then makes the pillowcase into a ball before tossing it to the floor. He pulls up his boxers as I pull the blanket back over us with a sigh, finding that we both get back into our original positions: me on my back and Gus with his back facing me, even though we're much closer now.\n\nI lick my lips a bit, swallowing as I stare up at the ceiling. I'm trying to predict how things will be in the morning: awkward, I'm sure, but how awkward? Awkward enough to damage our friendship? Have we crossed a border that we can't walk back through?\n\nAnd then, just as I'm speculating about our future, Gus turns his head and whispers, \"I didn't picture Lucy Liu this time.\"\n\nIn a desperate attempt to keep quiet, my laugh comes out like a gross snort. I push his head away, chuckling. \"Go to sleep,\" I say, smiling widely in his direction. I guess that settles that, then. When I close my eyes, my lips can't undo the smile that's plastered on my face -- and I like to imagine that Gus is smiling, too, right beside me."
    ],
    "authorname": "ruetheben",
    "tags": [
        "gay romance",
        "romance",
        "straight guys",
        "gay handjob",
        "interracial romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/spin-ch-01"
}