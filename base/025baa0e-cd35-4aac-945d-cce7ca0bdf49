{
    "title": "Double Helix Ch. 20",
    "pages": [
        "Norm\n\nI took a walk around the house and the barn that morning, surveying the tools that we would be using that night to make our carefully-laid plans a reality. We had a whole fleet of vehicles now. Besides the cargo truck and Tilly's truck in the barn, three motorcycles also nestled inside, plus the Suburban and six used vehicles. Those would most likely all be dead within six months, if we had intended to use them regularly. Instead, we would kill them tonight.\n\nWe had done our best to remove serial numbers and any other identifying markings that might be used to trace them back to the dealer, who might remember my face if federal investigators came calling. Andy had supplied us with Washington license plates for each of our vehicles except for the used cars, which had fake temporary tags.\n\nWe gathered in the living room for what would be the last time that morning. The atmosphere was tense and conversations didn't go past a few quiet words as everyone waited for Nonna to appear. I stood off to one side, paging carefully through my notes. The room went instantly quiet when Nonna appeared from the hallway, wearing a set of the bulky body armor that we had gotten through Andy at a cost that made my head hurt to think about. She had to be wearing it for the effect, because she would have to doff it for the trip north.\n\n\"Good morning, everyone,\" she said. \"I want to thank you all for your weeks of patience and persistence. Today we will put your training into action in service to a dear friend and family member. I recognize that many of you are putting yourselves in considerable danger on her behalf, and words cannot express how grateful I am for that sacrifice and the trust you have placed in me. It is humbling to lead such a courageous and dedicated group into battle, and I have great faith in all of you. With your determination, we will succeed. Thank you.\"\n\nShe stepped aside and I took the floor. \"Thank you, Nonna. Our goal is to break Sasha free with minimal risk and no loss of life. Having said that, every one of you must be prepared to use lethal force if necessary to protect your own life and the lives of your teammates. If any of you are having last-minute thoughts about your ability to pull the trigger if and when it is necessary, this is your last chance to come clean. Step over there,\" I said, pointing to the dining room, \"and we'll replace you with one of Mike's people.\"\n\nI bowed my head, waiting, letting the silence sink in. After a count of thirty, I looked up. No one had moved. I nodded. \"Alright. We will muster in...\" I glanced at the clock, \"ten minutes. We have a four-hour drive ahead of us to the rendezvous point. As a reminder to our drivers, please keep your radios on and monitoring the main channel at all times. Andy's daughter, Casey, will report in every five minutes. If she encounters a checkpoint, or fails to make her scheduled report, you are to exit the highway immediately and await further instructions. As you approach the rendezvous point, announce yourself over the comm and wait for confirmation before proceeding.\"\n\nI looked around. \"Any questions?\" Nock raised his hand and I pointed to him.\n\n\"How do I get out of this chicken shit outfit?\"\n\nThere were a few chuckles and I couldn't quite keep the smile off my face. Most of us had watched \"Aliens\" at the main house a few weeks back. \"Shut up, Hudson. Anyone have any real questions?\" I waited several seconds. \"Alright. Everyone check your gear over one last time and assemble at your vehicles.\"\n\nWendy picked her cat up from her lap and set her to the side. \"And you, you little shit-head, you're staying here.\"\n\nIt was a clear day and a bitterly cold one, at least for the Pacific Northwest. I boarded the big truck, loaded down with our motorcycles and the bulk of our gear, and idled the engine. Dawn climbed up into the passenger seat and buckled in. \"You ready for this?\" she asked.\n\n\"We've been watching Sasha get railroaded through the system for last year and a half,\" I said. I nodded, \"I'm ready to fight back.\"\n\nCasey's voice came over the comm, crystal clear in my earpiece. \"Hey, crew. It's a beautiful brisk black Friday here in central Oregon. Traffic is light and the sun is shining. I'm coming up on interstate 5, so it's time to gun those engines and get your asses in gear. Let's get this crazy train rolling!\"\n\nAs she finished, Ozzy Osbourne's voice came over the comm, \"All aboard! Hahahaha,\" followed by the opening guitar riff from \"Crazy Train\".\n\n\"Didn't know we were going to have a DJ for this trip,\" Dawn said with a smirk.\n\nI smiled back. \"Neither did I. She and Wendy must have coordinated on a song list.\"\n\nWendy was riding in the cab of Tilly's truck with Nissi and Stanley, and had command of the little console that controlled our radio gear. I wasn't complaining though. Black Sabbath wasn't a bad way to kick off our trip. \n\n\"She'd better play 'Convoy',\" Dawn said. \"It wouldn't be right to miss that one.\"\n\nSure enough, halfway to Portland, the trucker-themed country song came on over the comm. I was fourth in line in our little convoy, behind Nonna, Tilly and Alice. The used cars trailed behind me, driving on autopilot.\n\n\"Whoa,\" Casey said, interrupting Steppenwolf's \"Magic Carpet Ride\". \"Guys, we've got a huge slow down on I-5 approaching the Columbia River. It's gotta be a checkpoint. Either that or the bridge is out. Recommend you put Alice out front and run over to the 205. I'll try to catch up to you after I cross the border, but looks like I might be here awhile.\"\n\n\"Copy that,\" Alice said. \"Everybody off at the next exit. I'm taking point.\"\n\nCasey continued to DJ for us, but seemed a bit more subdued. Encountering the checkpoint had driven home the fact that one mistake could end our little expedition. We rejoined I-5 a few miles into Washington and rode the rest of the way without incident. Coming out of Tacoma and circling east around Puget Sound, we got off the interstate and headed up into the hills to the east of the city, following an old gravel logging road that made the cargo truck bounce and shake.\n\nWe slowed so that each vehicle could approach the rendezvous point, calling out its presence and being acknowledged by Mike over the comm. I followed suit and proceeded up a steep slope and around a bend, coming to a stop at a large, flat area on the west side of mountain we had been climbing. All of the manned vehicles parked in a line off the road, the auto-piloted cars having broken off several miles back and navigated to a parking lot near downtown.\n\nI got out and took in the view of the city well in the distance past Lake Washington, the blue expanse of the sound just beyond that. The elevation here should help with keeping our comms working while putting Wendy and Dawn well out of danger. It was also one of several possible rally points that we had staked out, the only one we would need, if everything went as smoothly as we had hoped.\n\n\"Gang's all here,\" Mike said as I approached. \"Except your primary scout. Casey, was it? She alright?\"\n\n\"She'll be along in about half an hour,\" I said. \"She ran into a checkpoint in Portland.\"\n\n\"I'm not surprised. A trip that long, you're almost certain to see at least one.\" He introduced me to the fifteen people he had brought, all of them veterans of one petty war or another from the last thirty years, and a few I had met previously. They ranged in age from a fresh-faced man named Justin, who looked not a day over twenty, to the bearded and bespeckled Harold, who must be pushing sixty.\n\nThree of them would be stationed as lookouts along the transports route to report its progress. The rest would be divided among various groups. Harold would be one of six that would merge into the perpetual crowd waiting in line to enter the food dispensary at Lower Queen Anne. Two hours before our transport left Sea-Tac Prison, those six would begin to work the crowd, inciting them to riot. We hoped that this would draw off enough police from downtown Seattle to hamper their ability to respond once someone realized that their prisoner transport had gone off the radar.\n\nThree more would remain with Wendy and Dawn, in case they needed protection. We didn't think anyone could decrypt our comms, let alone trace them back here, but it didn't hurt to have some insurance. Two of the remaining three would be on the extraction team, and the remaining one would stay with Alice, Gena, and Ed, waiting in reserve half a mile from the site we had chosen to attack the van.\n\nWe affixed a ramp to the back of the big truck and brought out the three motorcycles. Nissi used to ride dirt bikes in the hills around her childhood home in northern Arkansas and felt it necessary to take one of the high-performance bikes for a little spin to \"make sure it was running smoothly\" before using it for our op. I didn't blame her for wanting to let off a little steam. The rest of us unloaded and catalogued everything to make certain we hadn't missed some vital piece of gear. Once that was done, the leaders, myself, Mike, and Nonna, went over the plan once more in detail.\n\nMIke expressed his displeasure for about the tenth time at our reliance on SamIAm. \"I don't like being dependent on someone none of us have ever met, and who sounds like a complete whack-job. What if he doesn't come through?\"\n\n\"Then things will get a bit more dangerous,\" Nonna said. \"But Nock has the Barrett. I have full confidence that he can make up for the lack of our hacker, if needed. Either way, we will have the advantage.\"\n\n\"Sure, fine, we can still pull of the extraction, but then what if we can't get away before the full fury of the Seattle police, the FBI, and probably the federal marshals comes down on us?\"\n\n\"Four point five minutes,\" Nonna said, \"and we will be out of there. That's less than half the mean police response time in that area. We've drilled on this hundreds of times. It will work.\"\n\n\"We'll be fine,\" I put in. \"And our guy is a bit eccentric, but he's never let us down before.\"\n\nWe argued over details for a while. Casey pulled up in her Camaro and parked next to the cargo truck. She would stay here and provide a means of ferrying extra arms and equipment from the truck down to the city if we needed it. Also, if things went so horribly wrong that the authorities came up here looking, she could get Wendy and Dawn out of here quickly.\n\nAfter hashing out the details to our mutual, though sometimes marginal, satisfaction, we took a cold meal and waited for dark. The transport was set to leave Sea-Tac prison at 11:20 PM, to avoid traffic. Other than stops for fuel and meals, the transport would go straight from Seattle to Terre Haute, the marshals onboard replaced in shifts along the way. Besides Sasha, two male inmates were headed to death row in the same vehicle.\n\nWe had a lot of time to kill, so I went through our little camp, sizing up the readiness of each person. I spotted Nock and Sharon sitting together at the side of the road, looking down over the city. Her presence here made me no less uncomfortable than it did back on the farm. I had thought it through after my confrontation with Nock, on the day she had arrived. He had been right, of course, that we couldn't send her away. As days had passed, I gradually came to accept that she would not betray us.\n\nThat didn't help with the anger I felt every time I saw her. I watched Nock put an arm around her shoulders and turned away before I said or did something I might regret. My eyes fell on Tilly, helping Stan set up equipment, and she turned to meet my gaze. She said a few quick words to him and then hurried over. \"You want to talk?\"\n\n\"Not really,\" I said. \"You're just going to tell me the same thing you always do. 'She's not the same person she was.' That doesn't help.\"\n\n\"Well, then I won't bother,\" she said. She looked over at where Nock and Sharon sat. \"She seems to be fitting in quite nicely, though.\"\n\n\"Yeah,\" I said drily. \"That's wonderful.\" I looked over and caught her smiling at me. \"What?\" I asked.\n\n\"You'll come around,\" she said. \"You always do.\"\n\nI took her meaning, about how I had put her off for months after arriving on the farm. I clasped her hand in mine and squeezed it. \"That was different.\"\n\nTilly stretched up on her toes to kiss me softly. \"You love her. That's why what she did hurt you so much.\"\n\n\"It did hurt,\" I said, glancing back at Nock and Sharon again. Her head was resting on his shoulder. \"And it hurt a lot more people than just me.\"\n\n\"I know,\" Tilly said, with a nod of understanding. \"And she is sorry about that too.\"\n\nI let go of her hand as she stepped away from me, looking south along the road. The distant sound of a motorcycle engine had been growing steadily louder, and Nissi appeared around the bend. She braked and the bike's wheels locked, throwing up rocks as she skidded forward. Tilly ran up to her as she pulled off her helmet, and planted a kiss on the elf-woman's lips.\n\nI sighed, watching them. It had been a strange thing, sharing my lover with another, but I think more so in this case. Even after a year, I still couldn't look at Nissi without feeling an intense pang of regret for what I had lost. I didn't know how to act around her, and so we rarely spoke to each other or interacted at all unless pulled together by a group.\n\nI went to offer Stan a hand with the equipment. He and Tilly had already set up the generator and had been in the process of wiring up Sasha's microcomputer. A folding table and chairs were set up inside the cargo truck, our base of operations for Wendy and Dawn. Once the MC was up and running, the two terminals we had brought networked to it, as did the control unit for the comms. I helped Stan run a wire out through a hole drilled in the side of the truck to an antenna that I mounted to the roof with a bracket.\n\nOur lookouts had left some time ago to take up station along the transport's route, and Wendy contacted each of them in turn. \"Signal strength is great,\" she said. \"So unless you get stuck behind a hill or a building with nothing around to reflect the signal off, we should have no problems.\"\n\nNow we just had to wait. Few things could be as agonizingly stressful as having to wait for something like we were going to attempt. I had brought one of Stansy's maritime novels to read, but I couldn't keep my attention on it. At one point, I looked up and saw a small crowd of our people in a circle, heads bowed and fingers clasped as Harold intoned in a low voice. I recognized Mike and a few other people from that crew, but also Nonna, Tilly, and Stan.\n\n\"What was that about?\" I asked Tilly after they broke apart and passed near me. \"I knew that Stan was religious, but you?\"\n\n\"I just figure we can use all the help we can get,\" she said. \"It certainly can't hurt.\"\n\n\"You know that Pascal's wager is a terrible argument?\" I asked.\n\nShe nodded. \"That's not what I mean. Shared belief in the divine has great social utility. It fosters unity and confers an advantage for group survival. That by itself makes it at least worthy of careful study and contemplation. You aren't one of those atheists who think that it's some kind of destructive mental virus, are you?\"\n\n\"No. But you don't actually, truly believe in it, do you?\" I asked, eyeing her.\n\nShe shrugged. \"I don't know.\"\n\n\"Agnostic, then,\" I said.\n\n\"No,\" she said with a laugh, and repeated herself more slowly, \"I do not know. That doesn't mean it isn't possible to know. We live in a universe that is defined by probabilities, not certainties. And, whether because of divine intervention or social dynamics, sharing in that moment of prayer slightly increases our probability in succeeding in this venture. The effects are real, whether you believe or not.\"\n\n\"So you're a pragmatist,\" I ventured.\n\n\"Shut up, Norm,\" she said, and leaned in to give me a kiss.\n\nAt eight o'clock, we finally loaded up to head down to the city. Mike led the way in his car, acting as scout for us. Nissi and Stanford road their bikes, Nonna drove the Suburban with most of the strike team with her, and I drove Tilly's truck, with Nock riding shotgun and Tilly in the back seat. Alice followed us with our backup, one of Mike's crew riding our final motorcycle.\n\nWe re-traced our route back down the mountain and took highway 90 west across Lake Washington, exiting near I-5. We wanted to force the transport off the interstate at James Rd. and get them to turn right. From there, the fastest way for them to get back on track would be to head east to Broadway and either go north to catch the 520 that way, or go south to take I-90 east, then use the 405 to intersect the 520 on the eastern side of Lake Washington.\n\nPlenty could go wrong, of course. The transport might stay on I-5 and try to wait out the traffic, or they could turn a completely different direction than we had anticipated. If that happened, we either had to hope that SamIAm came through for us, or we would need to come up with a new plan to intercept them, and quick.\n\nWe stopped near a parking garage to let Nock out of the car. He was wearing a gray hoodie and sunglasses, and carried two large cases. He hurried into the garage as we pulled back onto the street and circled around to park in a spot a few blocks west. \"Mobile 1 is in position,\" I said over the comm, and shut the car off.\n\nMobile 2, Alice's group, reported in soon after, then control, representing Nonna and her strike team. \"Eagle Eye is in position,\" Nock said over the comm. He was set up on the top level of the parking garage, overlooking James Street. Several minutes later, Nissi and Stanford reported in as well.\n\nOnce more, we settled down to wait. Not for the first time, I had to shake off the stomach-churning thought that this might have all been for naught, that they could have moved Sasha days earlier without our knowledge.\n\n\"It's going to be fine,\" Tilly told me, sensing my emotion but not the thought that had caused it.\n\n\"You gonna tell me you aren't nervous?\"\n\nShe shook her head. \"Of course not. But we've got a plan and it's a good one.\"\n\n\"Not like the last time we were all here,\" I said, recalling the night of our escape.\n\n\"There's something I've been wanting to tell you,\" she said. \"And this seems like a terrible time to bring it up, but we're going into danger and I just can't get it off my mind.\"\n\nI chuckled, \"Well, now you've done it. You can't say something like that and just expect me to let it go. Spit it out.\"\n\nShe looked steadily at me, and the cold light from the street lamps sparkled in her eyes. \"I want to have children,\" she said.\n\nI blew out a long breath and settled back against the headrest of my seat. I chuckled. \"Wow. That's kind of a big bomb to drop on me.\"\n\n\"I told you it wasn't a good time,\" she reminded me. \"It wasn't even an option before, but our lab has all the equipment and chemical components we need to synthesize the drug that will induce ovulation for me. This is something I've been thinking about for over a year.\"\n\n\"Kids,\" I said. \"How many do you think you want?\"\n\n\"I'm not sure yet,\" she said. \"I just know that I want them, and I want them to be yours.\"\n\n\"Wow,\" I said again. Her words touched something primal in my psyche, a yearning that both subverted and transcended rational thought. \"Is this the right time, though? I mean, you've got so much going on right now. And will there be any problem with genetic compatibility?\"\n\n\"I can still work while pregnant,\" she said, \"And after the birth, we can trade off caring for it. If we need it, I'm sure Wendy would love to babysit. And compatibility won't be a problem. I talked to my mom a while back. She said that there are feedback mechanisms in the cell nucleus that kick in during the egg fertilization process. They will re-encode the genetic matter from your sperm and ensure complete expression of my genetic model. Third gen onward made that pretty standard, as the changes they were making to the genome got more extreme.\"",
        "\"So any kids we have will be superintelligent and be able to read emotions, just like you?\"\n\nShe nodded. \"Among all the other enhancements.\"\n\n\"It's a lot to think about,\" I said. I had rarely even thought about children. One of my old girlfriends had once had a pregnancy scare, but I had been enormously relieved when it turned out to just be a late period. By contrast, the thought of having a baby with Tilly was exciting, if more than a little frightening.\n\n\"There's no rush,\" she said, and then her voice got quiet and distant. \"But I have had dreams, beautiful dreams. Dreams of holding our newborn. Sometimes those make me cry when I realize they aren't real.\"\n\nShe said it with such longing and conviction that I felt an echo of that longing in return. I reached for her and kissed her slowly and tenderly. Her confession had revealed new depths to me. I allowed myself to imagine her as a mother, able to sense what her baby was feeling. Our children would be cared for with such love and understanding and my heart suddenly ached to witness it for myself.\n\nOur kiss deepened and grew more passionate by the second. I was making love to her through our mouths as surely as though I had sheathed myself between her thighs, and it went on and on, ever wilder and more sensual by the moment. I was rock hard, my mind and body in perfect harmony of purpose in their desire to procreate with this strong, compassionate, loving and courageous woman.\n\nWe were both breathing hard when I released her. If we had been anywhere else, doing anything else, I'm certain that one of us would have been on top of the other, no matter that there was traffic going by just twenty yards ahead.\n\n\"I love you, Norm,\" she said, her voice breaking from raw emotion. \"Whatever you decide, I love you, always.\"\n\nI drew in a breath. \"The answer is yes,\" I said.\n\nStill panting, she stared at me, as though disbelieving of what she had just heard. \"What?\"\n\nI smiled. \"Yes, I want to have children with you.\"\n\nI didn't get to say more, because she put her arms around me and pulled me into a hug so tight that I could barely draw a breath. \"Oh, thank you, thank you,\" she murmured. \"Oh, God, I love you, Norm.\" She suddenly released me, and I could breathe again. \"Sorry about that,\" she said.\n\nI shook my head. \"I'm fine.\" It was easy to forget that a girl who weighed maybe a buck ten could bench-press four of me easily, but I wasn't likely to forget it now for a while.\n\nWe were saved from further awkwardness by a female voice over the comm. \"Control, this is lookout one, I've got eyes on the target. Repeat, I have eyes on the target. The van is heading into the parking garage, over.\"\n\n\"Alright, people,\" Nonna said over the radio. \"Looks like they are loading her up for transport. We've got some time yet before they get on the road, but stay sharp. I have word from our crew in Queen Anne that the riot is in full swing. They've got police already showing up to try to quell it.\"\n\n\"I hope no one gets hurt too badly there,\" Tilly said, speaking only to me.\n\nI nodded. That was one thing we couldn't really control. If things got too out of hand, people might die. None of us liked that, but it was just one more risk on top of all the others.\n\nWe waited another thirty minutes, getting status updates from the rest of the group at Nonna's prompting. A few seconds after the clock ticked over to 11:20, our lookout came over the radio again. \"Target is exiting the parking garage, control.\" The woman's voice had an edge of excitement. \"They have a police escort, two patrol cars, one in front, one in back.\" She read out the markings and license plates of each car. \"Control, target and escorts are taking the turn onto the northbound I-5 ramp.\"\n\nNonna said, \"We're right on schedule. Chasers one and two. What's your status?\"\n\nNissi reported first. \"Control, I see the target. Ready to follow it onto the freeway.\"\n\nStanford was next. \"Likewise, control.\"\n\n\"Excellent. Keep your distance and wait for my signal. Base, do we have an update from Sam?\"\n\nWendy's voice came over the comm. \"I sent him the vehicle information. He wants me to patch him through from the darknet. One moment, please.\"\n\nA smooth but obviously synthesized male voice came over the comm. \"Good evening, fellow felons. My backdoors into Seattle's finest are wide open and I'm currently perusing the contents of their underwear drawer. Oh, dear! Looks like they didn't bother to secure their dispatch system separately from the main system. Bad sysadmin, bad. I have located your two escort cars and, oops! I somehow just got full access to both car's remote navigation systems.\"\n\n\"Cut down the chatter, Sam,\" Nonna said. \"And well done. Now, can you get control of the transport van?\"\n\n\"Still working on it, dulcissima. The US Marshals system is a slightly harder nut to crack. Give me five minutes.\"\n\n\"You have until Allentown. Do your best, please.\"\n\nAlmost exactly five minutes later, a new voice, young and male, came over the channel. \"This is lookout two. I've got eyes on. Target is about to pass the checkpoint.\" There was a pause. \"Now.\"\n\n\"Sam, what's your status?\" Nonna said, her tone urgent.\n\n\"I'm in the system,\" he said. \"But I can't get access to the vehicle. I think the van's remote nav has been taken offline.\"\n\nNonna said something in Russian that sounded like a curse. \"Well, it was worth a shot. We'll proceed with the next phase. Base, you know what to do.\"\n\n\"Starting up the demolition derby,\" Wendy said. \"I've got all six vehicles running.\" There was a pause of several seconds. \"They're en route. ETA two minutes.\"\n\n\"Perfect,\" Nonna said. \"ETA for our target is seven minutes.\"\n\n\"Lookout three reporting in,\" a new female voice said, a minute later. She was stationed on a bridge overlooking I-5 at Yesler, just south of James. I've got the derby in sight heading northbound on I-5. Vehicles five and six are breaking off, just as planned.\"\n\n\"Vehicles one through four are on schedule,\" Wendy said. \"Estimated impact in...five, four, three, two, one. Impact! One and two are reporting heavy damage. Vehicle one has flipped. Now vehicle three and four have hit the scene.\"\n\nIf everything had gone according to our simulation, the two lead vehicles had just collided and spun out of control across the two middle lanes of the freeway. Vehicles three and four, following close behind, would swerve as though trying to avoid the crash, vehicle four clipping the side of vehicle one before flipping on its side, while number three smashed into the center barricade, completing the roadblock.\n\n\"Crash confirmed!\" Lookout three reported excitedly. \"It's a mess down there, but I don't think we have any casualties. I see traffic slowing now. I don't see room for anyone to get around.\"\n\n\"Vehicle five and six are nearly on target,\" Wendy said. Both vehicles would be approaching the intersection at James and 7th streets from opposite sides of the freeway. \"Three, two, one. Impact!\"\n\nThe navigation system on vehicle five had been reprogrammed to slam on its brakes, turn sharply right and flip on its side, hitting vehicle six as it turned to head north against the light and causing both to stop in the middle of the intersection.\n\n\"Eagle Eye reporting,\" Nock said. \"Beautifully done, guys. That's got eastbound James Street partially blocked and northbound 7th totally blocked. Almost everything coming off the interstate is trickling my way and westbound James is backing up.\"\n\n\"Chaser one,\" Nonna said. \"You should be approaching the slowdown now. What's the status?\"\n\n\"Chaser one confirms,\" Nissi said. I could hear the sound of the cycle's engine whining and wind rushing past her helmet. \"The van and escorts are slowing down now.\"\n\n\"The police escorts are reporting in,\" Dawn said. There was a pause and she added, \"Their dispatch is recommending to find an alternate route.\"\n\n\"Watch them, chasers,\" Nonna said. \"I need to know if they deviate from our plan.\"\n\n\"They've just activated their sirens,\" Nissi said. \"They're trying to clear a path to reach the exit for James Street.\" A second later, I heard the sirens coming faintly from a distance.\n\n\"Ura!\" Nonna said. \"Stay on them, chasers, and keep up the report.\"\n\nIt took several minutes for the transport to ease its way from the third lane through the almost completely jammed outer two lanes of the freeway and onto the off ramp that was so conveniently in reach, and a few more minutes for it to get down the long ramp that had been rapidly filling up as other cars tried to use it to get around the accident up ahead. The escorts cut their sirens when it was obvious that there was no room for anyone to get out of their way.\n\n\"Sam,\" Nonna said. \"If they try to go left, give us a signal, wait five seconds and then override the nav systems on the escorts to bring them our way. Hopefully the van will follow. Chasers, if you hear that signal, you start jamming and the rest of you be ready to improvise.\"\n\nWe waited in silence for several seconds. Nissi came over again. \"They're turning right. Eagle Eye, you should see them about now.\"\n\n\"Eyes on,\" Nock drawled. \"And heading straight into our trap.\"\n\nI glanced at Tilly and we both pulled black balaclavas over our heads.\n\n\"Keep it up, Eagle Eye,\" Nonna said. \"Mark each intersection as they cross it.\"\n\n\"Crossing 8th,\" he said. A moment later, \"Stopped at 9th for a red light. Still proceeding eastbound.\" There was a pause of about a minute. \"They're moving again. They just passed Terry.\"\n\n\"We saw them,\" Nonna said. \"Everyone get ready.\"\n\n\"Mobile one here,\" I said. \"I'm moving into position.\" I eased the car forward toward the intersection, watching for traffic approaching from the rear. This late, the side street was empty, and I stopped a car length back from the intersection with James. This late, there was no traffic behind me.\n\n\"Red light. They're stopping at Boren,\" Nock said, \"outer lane, third car from the light.\" That was the street I was on.\n\nI craned my head to get a better look at the intersection up ahead, but I could only see the nose of the first eastbound car.\n\n\"Sam,\" Nonna said. \"You ready to go?\"\n\n\"As soon as you give the word, my sweet.\"\n\n\"Eagle Eye, signal once the light turns green. Chasers, stay with your targets. Mobile one, move as soon as I signal Eagle eye.\"\n\nOnly a few seconds passed before Nock came on. \"It's green, control.\"\n\n\"Sam, now!\"\n\n\"Here we go!\" Sam said in that synthesized voice. Instead of laughter, the software rendered his next words, tonelessly, as, \"Ha. Ha. Ha. Ha. Ha.\"\n\n\"Chasers, now!\" Nonna said.\n\n\"Chaser one, jammer on,\" Nissi said.\n\n\"Chaser two, jammer on,\" Stanford said, almost on top of her.\n\nEach of them carried backpacks containing high-powered, wideband radio jammers to prevent the police escorts or transport personnel from signaling for help. We had configured them to leave a deep notch of open air in the band where our own radios operated, but even so, there was a roughness to subsequent transmissions, digital noise giving us all somewhat robotic-sounding voices.\n\nAt the same moment, the sirens of both police cars started wailing and their tires screeched as they accelerated madly. There was more screeching as the cars that had just begun to move from the westbound traffic lanes suddenly stopped and the two police escorts shot through the intersection going the wrong way, then swerved left to go north up Boren, following a set of commands that Sam had given their remote nav system. Nissi followed just behind them, her bike's engine screaming to keep up.\n\n\"Eagle Eye, now!\"\n\nI stomped on the accelerator. The white transport van appeared up ahead in the intersection after the first two cars had cleared, moving slowly, and I angled to cut it off. A thwack of metal striking metal sounded and a fist-sized hole appeared in the van's hood. I screeched to a stop in front of the van as it lurched and coughed, flames licking up from the hole in the hood and smoke billowing out. The armor-piercing incendiary round, shot from Nock's .50 caliber anti-materiel rifle, had pierced the van's engine block and set the oil in the engine on fire.\n\nI jumped out, bringing my rifle to bear on the man on the vehicle's passenger side. Both were dressed in dark blue US Marshals uniforms and looked slightly dazed. \"Don't move!\" I shouted, as Tilly rounded the truck's left side and pointed her shotgun at the driver. She sidled up to the driver's window, keeping the barrel of the AA-12 fixed on the man's face. He reached up to trigger the radio hanging near his throat and she tilted her head to one side as if to say, \"Really?\"\n\n\"Your comms are down!\" I said. \"Just keep your hands where I can see them and you will not be harmed!\" The two marshals exchanged glances and a few whispered words. The glass on the van was ballistic, so unless they got out, they couldn't harm us with the handguns they carried. On the other hand, my assault rifle and Tilly's 12-gauge shotgun could definitely pierce that glass if loaded with the right ammo. They also had to realize that another shot like the one that had taken out their engine would go through the windshield like it were tissue paper.\n\nStanford perched on his motorcycle six car-lengths back from the van, blanketing the area in radio interference. Traffic had come to a complete stop as our vehicles blocked the street, and some motorists were leaping from their stopped cars and fleeing the area upon seeing our weapons.\n\nNonna's Suburban rolled up quietly along the wide sidewalk fronting James while we confronted the officers. She and the rest of the team, faces covered by balaclavas, got out quickly and they silently approached the back of the van. The two men Mike had hand-picked disappeared behind the van while the rest of the team covered them.\n\nWhile they worked, Tilly and I kept the Marshals distracted and off-balance, moving slowly closer to the van. I could see the two men weighing their options and figured that dying pointlessly wasn't at the top of their list. A minute or so went by when Nonna hissed over the comm. \"Get clear.\"\n\nMike's guys retreated back to the SUV while the rest of the crew made room. A faint hiss sounded from the back of the van that quickly grew in volume, and an intense yellow-orange light reflected off the windows of the nearby buildings and cars. I could tell that the two marshals sensed something was up, but I shouted at them again, keeping their attention on me and Tilly.\n\nThe hissing died off and two masked figures, Stan and Stanley, moved in, one bearing a huge pair of bolt-cutters. The back door on my side swung out, its inner edge scorched from the thermite that had been used to cut the lock. There were faint voices and a snick of metal being sliced through. I glanced back once more and saw Sasha standing there, looking bewildered. She had grown haggard and thin in prison. She said something to one of the Stans. He pointed and she looked my direction, her lips curling into a thin smile. I nodded to her before they hustled her off to the Suburban.\n\n\"One minute left,\" Nonna said over the comm. \"Mobile 1, get ready to disengage.\"\n\nI felt euphoric at having just pulled off what should have been an impossible rescue, and almost laughed out loud at her words. That's when Nock's voice broke over the line. \"Guys, two vehicles are stopped just to your north across the intersection. There are people getting out-\"\n\nI started to turn my head to look over my right shoulder at his words, but before I could complete the motion, and before he had finished his sentence, I was punched hard in the ribs, hard enough to make me stagger backward. Tilly cried out at the same time, dropping to one knee. Grunting, she surged towards me, hauling me around the side of the van by the back of my vest as more thin pops erupted from across the intersection.\n\n\"There are eight of them,\" Nock was saying. \"All in black. No freaking way these guys are marshals.\"\n\n\"Return fire!\" Nonna said. \"Don't let them advance. Stanford, get your ass clear!\"\n\n\"Are you hurt?\" Tilly asked me, checking me over. There was pain to the right of my sternum, but it just felt bruised. I suddenly realized that I had been shot.\n\n\"I think I'm okay,\" I said. \"The armor stopped it. You?\"\n\n\"Same,\" she said. \"Still hurts, though.\"\n\nI looked up to see the marshal on the passenger side peering down at us through the side window. I lifted my weapon to point at him, and he ducked out of sight. The popping sounds continued, coming both from across the street and behind the van now as our team returned fire. Tilly stuck the barrel of her shotgun around the front of the van, and a shower of bullets immediately plinked off the hood near it. She snatched it back, checking it quickly, but it appeared undamaged.\n\nNonna shouted into open air this time rather than her comm. \"Stanford, wake the fuck up and go!\" I heard Stanford's bike whine suddenly and he shot past us, barreling down the sidewalk. He hit the sidewalk on the opposite corner and was out of sight in seconds.\n\nI looked to my left to see two of Nonna's team crouched behind vehicles, firing bursts at targets out of sight on the other side of the van. There was a shout of alarm, maybe of pain, and Stan's panicked voice over the comm. \"Stanley's down! Stanley's down!\" Followed almost immediately by, \"Stansy's hit!\"\n\n\"Extraction team, fall back, take cover,\" Nonna shouted into the comm to be heard over the gunfire. \"Base, goddammit, haven't you been monitoring the police channels? Where did these people come from?\"\n\n\"Nothing, control,\" Dawn said, frantically. \"Most of the chatter I'm hearing is about the riot. I don't think they even realized they lost contact yet.\"\n\n\"They're wearing body armor,\" Stan said. \"I plugged one with ten rounds at least and he's still upright. I spotted at least one moving to flank us. We need to even these odds or we're done.\"\n\n\"Done,\" Nock said, and the muffled crack of his suppressed .308 echoed off the nearby buildings. \"And two,\" he said, as another shot rang out.\n\n\"That got their attention,\" Nonna said. \"Nice shooting, Eagle Eye, that's two for two. They've scattered and gone for cover. Mobile One, this is your chance. Get the hell out of here. We'll cover you. Chaser two, head back to base.\"\n\n\"We have to go now,\" I said to Tilly, getting a nod from her. \"Break for the truck. And, go!\"\n\nTilly's truck was only about fifteen feet from the front of the van, but we would be exposed for that entire distance. I charged for the open door of the truck, while Tilly took two steps and vaulted, sailing higher than the top of my head and coming down in the bed of the truck with enough force to make it bounce on its springs. True to her word, Nonna's team put down a barrage of suppressive fire on the attackers across the street. I got a flash of three or four figures firing from between abandoned cars at Nonna's crew. Another of the attackers lay on the street in a pool of blood, much of his head simply gone.\n\nI had already thrown the idling truck into reverse when a spider web of cracks appeared right in the middle of the windshield. I stomped on the accelerator as more bullets pinged into the truck's exterior, and we careened madly backwards down Boren. I plowed blindly into the intersection at the next block going backwards, threw the truck into drive and turned down the new street, leaving the scene behind.\n\nThere was a double knock over my right shoulder and I nearly lost it before I remembered that Tilly was back there. I reached back and unlatched the window so she could slide it open. She handed me her shotgun over my shoulder, then climbed headfirst through the window into the back seat. There was simply no graceful way to do it, and she had to twist and wriggle around to get into the seat, then roll over the top of the front bench seat to get back to the passenger side.",
        "I was panting, my heart racing in my chest. A spray of steam was coming from the front of the truck, flowing over the windshield. I realized suddenly that I had missed the last several seconds of what was happening over the comm.\n\n\"That's three of them down,\" Nonna said. \"Don't go for center of mass. Headshots, people. Somebody help me get Stanley into the car.\"\n\n\"I think they're breaking off,\" Nock said. \"They're retreating north up Boren.\"\n\n\"They're getting out of the line of your fire,\" Nonna said. \"Keep putting pressure on them. I'm about to get us the hell out of here. We gotta be quick, though. These bastards move way too fast.\"\n\nAn image suddenly flashed through my mind. One of the attackers I had seen had turned to look right at me. His eyes had glowed from reflected light.\n\n\"Whoa,\" Nock said. \"One of their vehicles just took off across James. I think they're going after Norm and Tilly.\"\n\nI mashed the accelerator down harder without even thinking, weaving around the sparse traffic heading east.\n\n\"Nock, you should probably move,\" Nonna said. \"We'll have someone pick you up, but right now just get as far away as you can on foot. We're leaving the scene now, but that other vehicle is likely coming after us.\"\n\nA thought suddenly struck me. \"Where's Nissi?\" I asked over the comm.\n\n\"Chaser one, report!\" Nonna said. There was a few seconds of silence, and then she repeated the command.\n\nFear twisted my gut. Nissi had followed the escort cars, staying close enough to ensure that her jammer would keep them from getting a warning out while their cars careened through the city. \"Sam,\" I said. \"Are those escort cars still being jammed?\"\n\n\"Oh,\" he said. \"Oh my, no. I am able to contact them through dispatch again. They are still moving, heading north about three miles away.\"\n\n\"That means that Nissi isn't with them anymore,\" I said. The jammers were potent, but get outside about a quarter mile, maybe less, and wireless communications would start to leak through.\n\n\"Hold on,\" Nock said. \"I just repositioned and I think I see her. About a half mile up Boren. And there's...shit! She's on the ground. She's not moving, and her helmet is off. Her bike looks wrecked.\"\n\n\"Norm!\" Tilly said, gripping my arm.\n\nI gritted my teeth. \"I know.\" I turned left at the next intersection, taking us north. I keyed my mike. \"Nonna, we have to go after Nissi. If we both circle back, we can-\"\n\n\"No, Norm, we can't!\" Nonna said. \"I've got three wounded people here and that other car is on our tail. Stanley took a hit on the neck. Mike thinks we can save him, but I need to lose our pursuit before we can stop to patch him up.\"\n\nI hadn't realized that Nonna's group had been hit so hard. Things had happened so quickly, and during the firefight, I had been more focused on staying out of sight. \"Alright. Tilly and I are getting her. Maybe Alice can-\"\n\n\"No, you will not!\" Nonna nearly shouted. \"And Mobile 2, you need to move out if you haven't already. Get back to base.\"\n\n\"Copy that, control,\" Alice said.\n\nNonna continued. \"There could be more of...whoever those men were. Mobile 1, you need to get to safety.\"\n\n\"We're not leaving her,\" Tilly said, speaking only to me.\n\n\"No, we aren't,\" I answered. I hit the comma again. \"If she's still alive and we leave her behind, they'll interrogate her. They'll find out where the farm is. We can't that happen.\"\n\nNonna was silent for a moment. \"Eagle Eye, are you still on top of that parking garage?\"\n\n\"Yes, ma'am,\" Nock said.\n\n\"Can you tell if she is still alive?\"\n\nThere was a long moment of silence. \"No. She's not moving and I can't tell if she's breathing. She looks pretty banged up.\"\n\nThere was silence for two seconds before Nonna came back. \"I am sorry to say this, but she is probably dead. If she broke her neck-\"\n\n\"To hell with that!\" I said.\n\nBefore I could say more, Nock broke in. \"Hold on, an ambulance just turned down Boren. I think they're heading her way.\"\n\n\"There,\" Nonna said. \"They'll take her to the hospital. We can regroup and come up with a plan to get her out.\"\n\nI had a sudden realization, a moment of clarity, if you will. I had given Nonna command of this mission, but that didn't give me the right to abrogate my own obligations. I made my voice hard, no longer trying to persuade. \"Nonna, we may have put you in charge of this rescue, but I am responsible for the safety of my people. Tilly and I are going to get Nissi. If you have a problem with that, I'll gladly remove you from command. As soon as you are safe and can deal with your wounded, I expect you to report back to me in case we need your help.\"\n\nI waited a few seconds. \"Understood,\" Nonna said in a flat tone.\n\n\"Uh, control,\" Alice said. \"I realize that shit got real over there, but I think you should know that Gena just took off with the spare bike.\"\n\n\"Fuck!\" I swore. Could things get any worse? I hit my mike and tried to speak in a level tone. \"Sharon, what are you doing?\"\n\n\"Someone had to go back for Nock,\" Sharon said. \"I didn't feel like arguing, so I took our spare motorcycle.\"\n\n\"Wendy,\" I said. \"I need a channel to Sam.\"\n\nThere was a pause of about three seconds. \"Okay, you're private, go ahead.\"\n\n\"Sam,\" I said. \"Are you tracking that motorcycle?\"\n\n\"Of course,\" the monotonic voice responded. \"It is heading back towards the intersection of James and Boren.\"\n\nTilly touched my shoulder. \"Norm, she won't betray us. I know it.\"\n\nI looked over at her, watching me solemnly. \"You're probably right, but I can't risk it.\" I hit the button again. \"Sam, if she deviates from that course, you lock that bike down and let me know, okay?\"\n\n\"You got it, chief.\"\n\n\"Okay,\" I breathed. \"Wendy, put me back in the main channel.\"\n\n\"You're live,\" she said.\n\n\"Nock, what's the nearest cross street to where Nissi is?\"\n\nNock sucked in a breath. \"Uh, Seneca, I think.\"\n\nTilly put the location into the GPS and it directed us to take the next left. We were still about two minutes away.\n\n\"Did you get a good look at any of the people attacking us?\" I asked Tilly.\n\nShe shook her head. \"I was too busy running away.\"\n\n\"One of them had reflective eyes, just like Nock. And Nonna said they were very fast. I think they must be genemods, but that makes no sense.\"\n\nTilly had no response to that. She was gripping her shotgun so hard that her hands were shaking.\n\nWe turned from Seneca onto Boren going north and saw the ambulance just up ahead. They had pulled into the right lane just past Nissi and the wreck of her bike. The two paramedics were rolling a stretcher over to her as we pulled up alongside. Tilly dropped from the truck, still wearing the balaclava, shotgun held at the ready. I could only imagine what the men were thinking as they froze in place.\n\n\"Get back in your vehicle, and drive away!\" Tilly shouted. \"Now!\"\n\nThe pair ran to do as she said, leaving the stretcher behind, and Tilly slung her gun, then bent her knees, looking Nissi over. Suddenly, she turned to me. \"Norm, look out!\"\n\nI looked forward to see headlights bearing down on me, going the wrong way in my lane. I gunned the engine and spun the wheel left, and the oncoming car, a black SUV, clipped my rear fender instead of plowing into me head-on. It threw the truck's rear out to the left, though, and I barely got it back under control to avoid crashing into the wall of a high-rise apartment building. As soon as I was able, I flipped sharply left, bumping up onto the sidewalk of the opposite side of the street as I reversed direction.\n\nThe SUV had skidded to a stop fifty yards away after it struck me. Two men had gotten out and were readying guns, a stubby carbine for each. I pushed the accelerator to the floor and angled across the center line of the road, aiming to run down both of them. The two men seemed to blur into motion, splitting to either side of the truck. Bullets spattered across the tailgate with a sound like hail and sent shards of glass spraying into the cabin as I swerved to try to throw off their aim. Behind me, Tilly's shotgun roared to full-auto life with a boom-boom-boom rhythm.\n\nThe SUV had flipped around as I fled the gunfire, and now it rumbled past me going the opposite direction, heading for where Tilly crouched over Nissi, still firing at the two men on foot. \"No,\" I breathed, spinning the wheel to follow, helpless to stop the ton of metal that was bearing down on them. Tilly moved so quickly that my eyes could barely follow her in the dark, cutting across the road, the SUV adjusting course to follow.\n\nI realized instantly that Tilly was drawing the car away from Nissi. She leaped just before it reached her, one foot coming down to touch the roof of the vehicle and push off as it passed beneath her. I swerved to avoid her as she touched down in the middle of the road, rolling once and coming back to her feet.\n\nThe driver of the SUV slowed and began to turn, obviously preparing to come back for another pass, not realizing that I was right on his tail. I slammed into the back left quarter of the vehicle doing at least fifty right when it was in the middle of its turn, caving in the body and spraying glass from the rear windows in a glittering shower. The vehicle tipped as it spun, then rolled completely over two times, coming to rest on its back.\n\nI hit the brakes and came to a stop with the other vehicle some thirty feet away. I was panting as though I had just run a sprint as I watched the other vehicle for signs of life, but the driver's side was on the other side. The rattle of automatic fire behind me prodded me into action.\n\nI turned to look through the back window, so riddled with cracks that the only space I could see through was a large hole that made me wonder how the bullet that had made it hadn't gone right through my head. Nissi was still lying in the ground, and the occasional boom of the shotgun and a brilliant muzzle flash showed Tilly to be running rapidly up the street, playing accompaniment to the pops of suppressed rifles from our genemodded attackers.\n\nThe AA-12 had a drum magazine that held 20 rounds. Tilly was conserving ammo now, firing off just one slug at a time, but she must have gone through more than half that already. When she ran out, the two men would get the chance to fire at her without danger to themselves.\n\n\"Nock,\" I said over the radio. \"Can you get a shot?\"\n\n\"Already tried. They're moving too goddamned fast, Norm. You're half a mile away and they're all over the place. By the time a bullet reaches them, they've had a full second to move somewhere else.\"\n\n\"Well, keep trying,\" I said. The steam coming from the hood of Tilly's Ford had gone from a cloud to a wisp and the dashboard's check engine light was flashing. Cursing, I put the truck in reverse and made a three-point turn. Tilly had drawn off our attackers, and I took advantage of her distraction to pull up next to Nissi, facing south in the lane next to her. I put the truck in park and slapped the hazard lights on.\n\nOnce I got out, I just stared for a few seconds upon catching my first glimpse of the extent of Nissi's injuries. Her leather riding jacket and leggings glistened with blood on her left arm and leg, and in a spot low on her torso. Her right palm was covered in blood, gashed and scraped raw from the road, as was her jaw on the left side.\n\nI dropped to my knees next to her and felt for a pulse. My breath went out in what was almost a laugh at finding it. I checked her over quickly for other injuries. Besides the wounds to her face and limbs, I saw several bullet impacts on her armor. A quick glance at her bike, ten feet away, showed bullet holes in its frame, and one that had blown out the front tire. The bastards must have encountered her coming up the road in pursuit of the escort cars, realized something was up, and shot her and her bike all to hell. Given the circumstances, there was a good chance that she had damaged her spine as well.\n\nThere was no time to find a way to immobilize her. I carefully slid my arms beneath her shoulders and knees and lifted. She felt light in my arms, her elf-thin frame little more of a burden than Wendy. I put her carefully into the truck's middle seat and pulled the seatbelt over her, heedless of the blood that quickly soaked into my clothes and smeared the surfaces of the truck. I clicked off the jammer as an afterthought. It obviously wasn't doing us any good, and might give away our position to pursuers. \n\nI turned and dropped into my own seat, reaching for the open door, but a hand clamped onto my left arm and pulled. I felt an excruciating wrenching as ligaments tore and my shoulder popped free of its socket, and then I was tumbling through the air. I hit the ground on my right hip, followed the next instant by my head striking the curb. Stars exploded in my vision. Too shocked and dazed to move, I immediately felt my grip on consciousness begin to slip. The pain of my injuries was distant, numb. I didn't feel the cold anymore. I could just close my eyes and slip into this nice, warm darkness...\n\nI forced my eyes open. My vision swam out of focus for an instant, but snapped back. My attacker stood over me. She was brunette, tall, with an athletic figure, and she wore black body armor that hugged her body. The right side of her face had flawless skin and perfect geometry. The other side was a bruised and bloody mess. She stood above me a moment, looking me over. Then she turned and headed back toward the truck.\n\n\"Command, this is unit six,\" she said. \"I have a Nissi and a man that may be human, both disabled for the moment. What are my orders?\"\n\n\"Ngth,\" I said. My tongue felt thick in my mouth. My finger slipped off the transmit button at my belt and I struggled to find it again.\n\n\"Acknowledged. I'll bring her in for conditioning, command,\" the woman said. \"What about the human?\" She paused for a moment. \"Acknowledged.\" She reached into Tilly's truck and came out with my rifle. She walked back to me casually, looking at me as though I were something she might have scraped off her shoe. She ejected the magazine into her hand, gave it a glance and slammed it back home in a smooth motion that took less than a second.\n\nThis can't be happening, I thought. I couldn't die here.\n\n\"No,\" I tried to say, but it sounded more like a groan. \"Please.\" The woman lifted the rifle calmly, sighting on my forehead from two feet away. She thumbed off the safety. I thought of the Colt in its concealed holster at my back. Under my body. There was simply no way I could reach it in time.\n\nThere was a hard crack in the air, and the woman staggered. The gun in her grip went off, giving off its own loud but well short of deafening snap as the suppressor stopped most of the noise. The shot missed my head by inches, peppering the side of my face with stinging bits of asphalt. It took a few seconds to register that I was still alive, and another few to piece together what had happened as my gun dropped from the woman's shaking fingers.\n\nThe fabric on the front of her armor was ripped in an area as wide as my hand, and bulged out as though the armor plate insert had been punched from the other side. Dark rivulets of red flowed down her armor and dripped onto the street. She looked more surprised than anything as she fell to her knees. Her gaze fell on me and rage contorted her features for just a moment. Then she collapsed to the street, as though her strings had been cut, and I saw the ragged hole that had been torn through her back, just below her neck.\n\n\"Nog,\" I said, and tried again. \"Nock. That you?\"\n\n\"Yeah, I got your message. That one stayed still long enough for me to put a 50 cal through her back. Their armor is good, but not that good. It looked like you took a bad hit on the head. You okay?\"\n\n\"Never better,\" I lied. I started to sit up, but my head swam and stars flashed in my vision again.\n\n\"You'd better get to Tilly,\" he said. \"Those two keep trying to flank her. She's down a side street now. I can't track her anymore.\"\n\nI finished raising myself upright and slowly got to my knees. The top of my head was awash in pain, punctuated by a pounding that went in time to my heartbeat, and the back of my neck was slick with blood. \"I'm not sure what I can do,\" I said. \"It feels a lot like that time I got drunk and kicked your ass.\" Sure enough, the contents of my stomach decided that now was the perfect time to get reacquainted, and I spent the next several seconds heaving my dinner onto the street.\n\n\"I think your wits are a little addled there, boss,\" Nock said. \"You have that backwards.\"\n\n\"You would say that,\" I said, putting one unsteady foot under me. I pushed upward through the pain and stumble-stepped up onto two legs. That was the moment that I realized that my gun was still on the ground. I hate to admit it, but I came very close to just leaving it there. Instead, I crouched, enduring another roiling bout of dizziness, and then a stab of agony as I tried to reach out and my left arm helpfully reminded me of its injury, making me hiss and cradle it with my other hand. Cursing, I reached with my right hand and scooped up the weapon, then limped to the truck, lesser pains shooting up my right leg every time I put weight on it.\n\n\"Almost there, boss,\" Nock said. \"You're doing great.\"\n\n\"Fuck you, you fucking fucker,' I said through clenched teeth, and chuckled at my impressive display of vocabulary.\n\n\"Norm,\" Mike broke in. \"You're slurring. You've probably got a concussion. I don't recommend you attempt to drive.\"\n\nI climbed into the truck. \"That's fine,\" I said thickly. \"Truck, take me south on whatever street this is.\"\n\n\"This vehicle has sustained severe damage and cannot be operated safely,\" the Ford's automated navigation system intoned. \"Would you like to call for a towing service?\"\n\n\"Fuck that,\" I said, and put the truck in gear. Only, when I hit the gas, the engine revved, but it barely moved.\n\n\"I think you're in neutral,\" Nock said. \"One more notch back.\"\n\n\"I knew that,\" I said, and pulled the gear shift one more click to drive. The vehicle, still revving, lurched forward, shuddering, but didn't stall. I angled the truck across the center line and into the southbound lane.\n\n\"Okay,\" Nock said. \"You're doing fine. Now straighten out. Left. No, left!\" I turned the wheel sharply the other way, somehow having forgotten for a moment which way was which.\n\n\"This windshield is all fucked up,\" I said, straining to see through the network of thousands of cracks and inch-wide holes. The steam billowing up out of the engine compartment certainly didn't help.\n\n\"I could shoot it out for you,\" Nock said. \"But I might take off your head.\"\n\n\"At least then it might quit pounding,\" I said.\n\nNissi bumped limply up against my shoulder and I looked over at her. Seeing her injuries once more made my stomach clench in worry and sympathetic pain, but Tilly needed me.\n\n\"Norm!\" Nock shouted. \"Go right!\"\n\nI jerked the wheel to the right, guiding the truck out of the path of oncoming traffic. \"Sorry, got distracted,\" I mumbled.\n\n\"Keep it together, boss. Take that next right. That's where I saw them go.\" I turned where I thought the street was, taking out a bush when I jumped the curb at the corner. I slowed on the narrower street, still struggling to see through the shattered glass and my doubled vision.\n\nNonna came on over the comm. \"We managed to lose our pursuit, though I'm not sure how. We're stopped now so Mike can see to Stanley. Norm, have you given any thought to what you're actually going to do when you catch up to Tilly?\"\n\n\"Nope,\" I admitted. My head was still clouded, but Nonna's question had gotten me to focus. I didn't feel as confused as I had a moment ago. \"I'm seeing double and my left arm is mostly useless. Anyone got any ideas?\"\n\n\"Distract them until Tilly can get a shot off?\" Stansy said.",
        "\"Ram them with the truck?\" Alice suggested.\n\n\"Good plan,\" I said. \"I'll go with that.\"\n\n\"Nock, I'm here,\" Sharon's voice came over the radio.\n\n\"Hold on, I see you coming. Be right down,\" Nock said.\n\n\"Shit!\" Sharon said, \"He just...dropped. Oh, he's okay.\" I could imagine her surprise, if Nock had dropped four stories from the top of the parking garage.\n\n\"We're coming, boss,\" Nock said.\n\nNonna didn't bother to contradict him this time. My guess was that she had her hands full helping to keep Stanley alive.\n\nI slowed as I approached an intersection and heard a few chatters of suppressed rifle fire. I rolled down the window, which, surprisingly, wasn't even cracked, and listened. The sound was coming from somewhere up ahead, past the domed, ornate church on my left.\n\nI hit the gas again, very conscious of the growl of the engine as it surged forward. There was almost no steam now, but the needle of the temperature gauge pointed all the way to the right, in the band of red, which could not be a good thing. I turned left at the next intersection, following what I thought to be the direction that the gunfire had come from, taking me back towards James. I had gone about a hundred feet along the street, listening intently, when I realized that the sounds of the guns had ceased. I winced at the squeak of the truck's brakes when I came to a stop.\n\nI had the church to my left and a six-story building to my right and could hear the high-pitched drone of a motorcycle engine approaching from the front. I leaned my head out the window to get a better look, thinking that it must be Nock. I couldn't see who was on the bike, though, because of the glare of the headlights from the black SUV that was barreling up the street behind it, easily doing seventy. Then the lights abruptly winked out.\n\n\"Behind you, Sharon!\" I practically shouted over the comm. The front wheel of the motorcycle lifted a foot off the ground as the engine suddenly shrieked, and though the SUV was still closing the distance and accelerating, the bike was rapidly increasing in speed to match it. I could just make out two figures on the big, a smaller, slighter one in front. Nock was behind my sister, arms looped around her waist. I was terrified for a split second that both of them were about to go tumbling off the back, but she must have eased off slightly the gas, as the front wheel touched down again.\n\n\"I am getting so sick of you bastards,\" I hissed, as I grabbed my gun. I couldn't steady it with my left hand, but I propped it on the bottom of the open window and aimed down the sight. The motorcycle blasted past me, so quick that I felt the air kicked off from its body as a hot wind on my face.\n\nGrinning behind my mask, I started squeezing the trigger as fast as I could. The assault rifle barely bucked, and I ran a line of neat holes across the windshield's lower left side, and even put a few in the side windows as the SUV roared past.\n\nThe vehicle kept going down the street for maybe fifty yards, but then it swerved suddenly to the left and scraped across a parked car. It rebounded and continued to roll down the street, losing speed. Suddenly, the brake lights flashed on and it screeched to a stop. A second later, the driver door flew open and a body fell out in a lifeless heap. One of the rear doors opened and a tall, black-clothed figure stepped out. The figure jogged towards me as the SUV peeled out, slamming the open door shut.\n\n\"Shit, shit, shit,\" I said, dropping the gun on the other side of Nissi and stepping on the gas again. The truck didn't leap forward this time, like I had expected it to. Instead, it began to make a raucous thwack-thwack-thwack and slowly pulled away from the curb. \"Shit!\" I said again, and turned the truck right to take the cross-street, which ran downhill.\n\nThe truck shuddered, springs creaking, as something banged behind me. I looked back to see the shadow of a human figure cast by the streetlamps over the nearly opaque glass. The butt of a gun struck the window behind my head, sending pebbles of tempered glass careening through the cab. The truck was only moving maybe twenty miles per hour when I slammed on the brakes. It wasn't enough to dislodge my attacker, but it stopped him from shooting me since he had to grab a handhold, if only for a moment. I hit the gas again, but as before, the truck moved sluggishly. I could hear his feet moving on the metal, no doubt taking the time to line up a shot at the back of my head.\n\nInstead of a gunshot, though, I heard a splat, a grunt, and a clatter as the truck rocked again. The echoing report of a shotgun blast came an instant later. I turned to see my would-be attacker, possibly the Nock I had seen earlier, lying against the side of the truck bed. He struggled to lift his rifle, but his right shoulder was a bloody, mangled mess, and I could only guess that things were even worse inside his chest where the slug must have penetrated. Tilly's voice came over the comm. \"Norm, keep going. I'm on my way.\"\n\nI kept the pedal to the floor, ignoring the unholy noises coming from the engine, and gravity pulled the truck along as much as the drivetrain. I saw Tilly coming, a patch of black darting out of an alley on my right. I was doing maybe twenty-five as she came alongside and vaulted into the truck bed. I heard a hard snap as she kicked the genemod still lying in the bed, then she let out a grunt of effort and I heard his body hit the pavement. She climbed in through the back window again.\n\n\"We have to quit meeting like this,\" I quipped.\n\n\"Oh, thank God, you got her\" she said, on seeing Nissi unconscious in the front seat.\n\n\"Yeah, but we need to get her to Mike before she bleeds out. The driver of that other car was a Stansy.\"\n\n\"The two who came after me were Stans, or something similar. I had to get away and reload. They're still out there somewhere.\"\n\nNo sooner had she finished speaking than pings of metal striking metal sounded behind my head. I looked back to see the suppressed muzzle flashes of a gunman on top of the hill about a hundred yards back. \"You just had to say it,\" I said, and weaved a few times to hopefully throw off the gunman's aim. The bullets abruptly stopped, and I chanced another look back to see that our newest attacker was now crumpled on the street.\n\n\"That's another kill for me,\" Nock said over the comm. I realized that he must have gotten off Sharon's bike and doubled back. \"Norm, you got Tilly with you?\"\n\n\"Yeah, though this thing is barely moving. I think Tilly can run faster on her own.\"\n\n\"I'm on my way back,\" Nonna said. \"The injured are safe, and I've got two other able-bodied gunners with me. Just keep moving as fast and as far as you can. I'll get you out of there.\"\n\n\"I hear sirens getting closer,\" Nock said. \"You'd better get here fast. Gena, did you lose the one on you?\"\n\nSharon's voice came on along with the sound of rushing wind and howling engine. \"Yeah, he turned off a few blocks back when he realized he couldn't catch up to me. I was about to circle back and come get you.\"\n\n\"Alright, we haven't gone far.\"\n\nSuddenly, a new line of holes punched through the windshield. I felt a white-hot lance of pain and heard a buzz go past my ear. I whipped the wheel reflexively to the right, but the whole world jolted the next instant and blackness folded around me. It took me a few seconds to realize that the truck's airbags had deployed, giving me a few new bruises and cuts on my face. The engine had died, and the truck sat diagonally across the lane. I tried the ignition, but the engine just gave out a series of clicks. My foggy brain struggled to piece together what had happened as Tilly fought to open the rear driver-side door. She kicked it a few times, grunting with effort, and it finally came open with a screech of protesting metal.\n\n\"Stay down,\" she said, grabbing her shotgun. \"Better lay Nissi down too. I'll draw him off.\" She took off at an inhumanly fast sprint, drawing a burst of gunfire from down the street.\n\nI forced muscles to move, in spite of my pain and shock, unstrapping the seatbelt from both Nissi and myself, and laying us both as low down as I could on the seat. The windows on the passenger side had shattered, and I could see the parked car that we had struck at a shallow angle. I lay there for several seconds, listening to the distant, muffled pops of the attacker and Tilly's answering shots coming from somewhere close by.\n\nI heard the sirens now, coming from up the street. Given all of the confusion that we had left in our wake, I thought it likely that they would head to the site where we had attacked the transport, but those sounded like they were heading right towards us. Why can't we deal with one problem at a time? I thought.\n\nHeadlights shown through the cracked glass of the windshield, painting the roof of the truck with white lines. \"Norm! Get out of there,\" TIlly's voice shouted over the comm. \"They're-ahh!\" And she cut off abruptly. I heard the chatter of gunfire a split second later.\n\nI grabbed the door handle and pulled, but it jangled loosely, as though something inside had broken. I drew my left leg up to kick at it, but it wouldn't budge. I looked out the open driver window and saw the headlights of the remaining SUV moving up the street the wrong way, heading straight for my door. I could also see the reflections of flashing blue and red lights reflecting from the windows of neighboring buildings as the police crested the top of the hill. I thought of trying to climb out the window of the truck, but the SUV would be on me in just a few seconds, and there was no way I could get Nissi out that way. I looked at Nissi and then threw myself down over her. I might not survive, but maybe my body would shield her from the crash.\n\nBut then something strange happened. The sirens that had been getting louder and louder abruptly dropped in pitch as both cars flashed right by at high speed. I risked a look out the window just in time to see both police cars hurtling towards the SUV. The first impact crumpled the hoods of both cars and spun them to the side, and the second impact, just behind it, hit the side of the SUV so hard that it folded partly in the middle, bending around the police car.\n\n\"Did I make it in time?\" Sam's synthesized voice said over the comm.\n\n\"Sam!\" I said. \"Did you just ram those two police cars into a black SUV?\"\n\n\"Lidar does not detect color,\" Sam said. \"But that sounds like a confirmation. Gaudeamus hodie! I thought maybe I should warn you I was coming, but our lovely commander told me to cut down the chatter.\"\n\n\"Then yes, you made it in time. Sam, you're a fucking miracle. I think you may have killed the cops though.\"\n\n\"Oh, no, I'm not heartless. I unlocked the doors and let them out a few miles from here. They took off running as soon as their feet hit the ground.\"\n\nStill smiling, I said, \"Tilly, are you there?\" I waited for a few seconds. \"Tilly!\"\n\nInstead of an answer, I heard a sound like an impact over her comm, and she gave a choked cry.\n\n\"I'll be right back,\" I said to Nissi. I left my rifle where it lay and climbed out through the truck's window, managing to keep a grip its edge and not quite tumble onto the street, though a stab of pain went up from my injured hip. I limped as quickly as I could in the direction she had gone, across the street and down the hill. I glanced at the wrecked black SUV as I approached, but there was no movement.\n\nI could hear something else, though. Tilly yelped in pain and there was the crinkle of glass cracking. I reached back and silently tugged my Colt from its holster. I had to hope that he wasn't sense-upgraded like Nock and Tilly, otherwise there was nothing I could do to stop him from hearing me coming. I edged between two parked cars, moving onto the sidewalk and saw them, thirty feet away.\n\nHe held Tilly up by the neck with one hand, her feet kicking out uselessly against his armor while she fought to peel his hand from her throat. Blood streamed from her nose, ran over her chin and down her neck. One leg of her pants was soaked with blood, starting just below her knee. \"Stop fighting me,\" the man hissed. He shoved her backward, slamming her head into the glass pane behind her. Cracks already spread from several impact points. \"I can hurt you a lot worse if I have to.\"\n\nI pointed my gun at him one-handed, but hesitated. Whether from fear, exhaustion, or my injuries, my hand was shaking violently. I would be more likely to miss, or even hit Tilly instead of him. So I did something incredibly stupid. \"Hey, put her down,\" I said.\n\nThe man turned to me, and I felt a jolt of recognition at seeing the greenish glint in his eyes. He flashed a grin as he whipped a handgun from a side holster. I dove for the ground between the cars, but he fired off two shots before I got out of sight. One of them struck me high in the chest, but was stopped easily by the ceramic plate there. I crawled on hands and knees to the other side of the car.\n\nI had managed to hang onto my gun and now turned to sight over the car's hood. Where the man had been standing, I saw Tilly alone, leaning against the cracked window. She clutched at her throat, and I could hear her breathing as a harsh rasp. \"Tilly,\" I said, in as low a whisper as I could manage.\n\n\"He's gone,\" she said, her voice a harsh croak. Groaning, she got to her feet and limped towards me. \"He just took off. Someone must have called him off.\"\n\n\"Are you okay?\" I asked.\n\nShe touched her face near her mouth and looked at the blood on her fingers. \"I'll be alright. My leg's not great, but I don't think I'll bleed out anytime soon. How about you?\"\n\nI pulled off the balaclava, which was soaked in my blood out to both ears. I groaned. \"I've had better days.\"\n\nShe winced. \"You're bleeding pretty badly.\" She turned her head suddenly and rose to look over the car. \"Nock's coming,\" she said.\n\n\"Help me up?\" I asked.\n\nTilly grabbed me by my vest and hauled me to my feet. I put my good arm around her and just held onto her for a moment, getting my balance after the sudden shift and the nausea that followed.\n\nI heard running footsteps approaching and turned to look. \"Nock! You beautiful bastard,\" I said. \"You saved our asses back there.\"\n\n\"You look like hell, boss. How's your head?\"\n\n\"Still hurts,\" Tilly said. \"He definitely has a concussion at least.\"\n\nI hit my comm. \"Nonna, how far out are you?\"\n\n\"Almost there. What's your position?\"\n\nI gave her the street name and the cross street as we walked back to the truck. Nissi was stirring inside, mumbling and making feeble movements. When I tried the door, I found that it was just as stuck from this side. Tilly tried pulling it open, but after straining for several seconds, the handle simply popped off in her hand.\n\n\"Ow!\" she hissed and shook her hand. Blood ran down from grazed knuckles.\n\n\"Let me try,\" Nock said. He reached in through the open window, pulled the door handle open, grabbed the window frame with the other hand and braced one foot against the frame of the truck. The metal creaked and made tick-tick-tick noises as he strained.\n\nWith a loud grunt, he pulled hard and something snapped, sending shards of metal tinkling over the pavement as Nock quickly backpedaled to stay on his feet. He leaned into the open cab to unsnap the seatbelt.\n\n\"Careful with her,\" I said, as he cradled Nissi in his arms. I pulled down the tailgate and spread my coat on the cold metal.\n\n\"Gena's here,\" he said, and hurried to meet her as she pulled up on the bike.\n\nWhen I looked back, I saw that Nissi's eyes were open. She was breathing hard, pain and fear twisting her features. \"It hurts, Martin,\" she breathed, tears streaming down her face.\n\n\"I know it does,\" I said, taking her uninjured hand and giving it a squeeze. \"We're going to get you help and you're going to be fine. Now, I need to check your injuries.\" I let go of her hand and Tilly replaced mine with hers, talking to Nissi in a low, comforting voice.\n\nI checked her pulse and found it elevated, but not dangerously so. Next, I looked at the bullet wounds. The one on her leg had passed through the meat of her calf. They must have been armor-piercing rounds, and small caliber, because it was a neat through-and through, the exit wound barely larger than the entry. The bullet that had struck her arm had gone through her triceps and hit the armor plate on her torso, burying itself in the ceramic. The last one worried me the most. It had gone in just above her left hip and apparently buried itself in meat. The vital organs were much higher in the torso, but there was a good possibility that the bullet could have damaged her intestines.\n\nGena and Nock had arrived while I worked, and I set them to find the first aid kit in the cab of the truck. With my left arm useless, I instructed the others in cleaning and bandaging her wounds. \"You're going to be okay,\" I told her again.\n\nShe nodded very slightly and closed her eyes.\n\n\"Nonna's here,\" Tilly said. \"We need to go.\"\n\nWe got Nissi into the SUV. Nonna had brought Stan and one of Mike's people, a bushy-bearded bear of a man who introduced himself as Silas. Nock and Tilly placed Nissi across one of the bench seats and she and I piled in. Nonna started away, Gena and Nock following behind us on the bike.\n\n\"How bad is she?\" Nonna asked.\n\n\"She's stable for now,\" I said. \"Just get us to Mike.\"\n\n\"He's going to meet us up on the mountain.\"\n\nAlice and Stanford had arrived well ahead of us, and she and the others had set up cots for the injured, which included me. Alice and Dawn patched us up while we waited for Mike. He showed up about half an hour later in his own vehicle, bringing Stanley, who had a bandage and a thick wad of padding on the side of his neck, and Stansy, who had her arm in a sling.\n\n\"Where is she?\" Mike asked as he approached. He held a large bag in one hand.\n\nI waved him over to the cot next to mine. Tilly sat on the ground beside Nissi, holding her hand. I told him about the bullet in her side as he checked her over. \"I bet you're in a lot of pain,\" he said, and produced a prescription bottle. \"I brought you some of the good stuff.\"\n\nTilly helped Nissi to rise enough to take a few of the pills and a swallow of water. She settled down and went to sleep after just a few minutes. He put a band on her arm and swabbed her, then inserted an IV and hung a saline bag on a collapsible pole.\n\n\"That's all I can do for her for now,\" he said. \"Her blood volume is a little low, and we don't want it to go down any more. You did well with the bandages. She'd be in a lot worse shape if you hadn't gotten the bleeding under control.\n\n\"What about the bullet?\" I asked.\n\nHe nodded. \"I need the proper equipment and a sterile operating environment. There's a place I can take her. I'll wait until morning, though, after things calm down a bit.\"\n\nHe looked at me next. When he unraveled the bandage I had put on the back of my head, his eyes widened. \"Christ, Norm, you've got a compound skull fracture. I don't see that it's depressed, so there's a good chance it'll heal on its own, but I'll need to monitor you for a few days to be sure. I was already planning on riding with you to keep an eye on Nissi.\"\n\n\"We've got an MRI machine,\" I said helpfully.\n\nMike nodded. \"We'll want to use it. We need to see if there's any brain damage.\"\n\n\"That would suck.\"\n\nMike rolled his eyes. \"Yeah, it would, Norm. Your shoulder was dislocated, your elbow sprained, and you have some deep bruising and tissue damage on your right hip. The hit to your ear is superficial, but it took a little chunk out of the lobule. It looks like a really badly-botched piercing job. Should heal up on its own after I stitch it. Now let's deal with that shoulder.\"\n\n\"How about some of those pain meds?\" I asked.",
        "\"In a moment,\" he said. \"Now relax your arm.\" He put a hand at my wrist and elbow and slowly rotated it outward, then upward towards my head. At some point, the ball suddenly lurched back into the socket. The pain was sharp but not as bad as I had expected.\n\nAfter giving me some pain meds, Mike checked over Tilly's leg wound and found that the bullet had grazed deeply through the meat of her calf, but did no lasting damage. Her nose had been broken, but he had the tools he needed to realign the bones and cartilage. He offered her pain medication, but she declined, asking for him to wait. She closed her eyes and looked like she was meditating. Half a minute later, she opened them and told him that she had blocked the pain, and that he could proceed.\n\nWe decided that it would be best to spend the night up here, so Alice went into town and bought a couple of large tents and several propane heaters. Mike stayed in the tent with the four of us who were most seriously injured, while the rest of the group either slept in the other tent or in one of the cars. I wanted to talk to Tilly and Nissi about what we had seen and heard from our attackers. More than that, I wanted to see Sasha, but whatever Mike had given me knocked me out after just a few minutes.\n\nIn the morning, Mike took Nissi into the city, with Casey driving scout, while the rest of us packed up to head back to the farm. Moments after he had gone, Sasha entered. She looked at me with a stern expression. \"Norm, coming here to rescue me was incredibly stupid. Any one of you, or even all of you, could have been killed in the attempt.\" I stared at her in disbelief, about to throw out a protest, but then her features softened. \"But I must thank you for doing it. Especially you three and Nissi, who fought and bled out there for me. I owe you my life.\"\n\nI put up my good arm, and Sasha obliged me with a one-armed hug, then went to Tilly. Stanley cleared his throat loudly and Sasha knelt to give him a hug as well.\n\n\"Your people here have talked so much about you,\" he said. \"I feel like I already know you.\"\n\nSasha straightened and turned back to me. \"I can't wait to see this farm. Everyone keeps going on about it. They say that Tilly here built a new kind of greenhouse?\"\n\nTilly shrugged. \"It's nothing special, just a refinement of existing designs. What I'm working on next is the truly revolutionary stuff. Now that we've got you back, I can pick up where I left off.\"\n\n\"I still don't know what to think of mamochka,\" Sasha said. \"She isn't the same person I knew before. And not just because of how she looks. She thinks and acts differently.\"\n\nWe had a meal from our stores while we waited for Nissi and Mike to return. The rest of Mike's crew had trickled in through the night, and all had been accounted for. The only injuries from his team were Lenny from the extraction team, who had taken a bullet through the torso just above his chest plate. The rifle round had penetrated the Kevlar and buried in meat. It wasn't immediately life-threatening, so Mike had extracted the bullet and stabilized him, leaving him with another member of VIL. Justin, who had helped start the food riot, had been hit with a thrown brick, but had only suffered cuts and bruises.\n\nMike came back in the afternoon with a sleeping Nissi. He showed me an X-ray of her lower abdomen. The bullet was clearly visible amid a few splinters of bone from where it had hit her pelvis.\n\n\"The surgery went well,\" he said. \"I extracted the bullet and all of the bone fragments I could reach. She's still in a lot of pain, but I think she's out of the woods.\"\n\nI decided to stay one more night up on the mountain. I had slept much of the day away, and I wanted to be alert while we were on the road.\n\nWe broke camp the next morning. Mike's people had filtered away during the previous day, so it was mainly my people from the farm, and Casey who were left. Nissi looked a lot better. Most of her color had returned, and she was able to walk with crutches. The pain in my head had reduced from blinding agony to merely crushing, so I wasn't ready to give up on the pain meds just yet.\n\nFor the trip south, I rodewith Nonna, Sasha, Mike, Nissi, Tilly, Stansy, and Stanley in the Suburban. It seemed best to keep all of the wounded with Mike, and Sasha was eager to catch up with us on what had been happening while she was in prison, both on the farm and out in the wider world. I rode in the third row of seats next to Tilly and Stanley.\n\nFor the first hour or so, the talk largely centered on Nonna's treatment and recovery and the weeks of planning and preparation for Sasha's rescue. I let them talk, brooding in my own thoughts for a while, but once the conversation hit a lull, I brought up the topic that had been bothering me. \"We were fighting against genemods the other night,\" I said, \"and we need to understand why.\"\n\n\"Are we certain of that?\" Mike asked. \"They were fast and strong, sure, but it's a bit of a leap to-\"\n\n\"One of them had tapeta lucida in his eyes,\" I interrupted. \"You don't get that through training. And there's no way an unenhanced human could match Tilly for physical strength. I think someone was watching that transport more closely than we thought. Once we started jamming their radio transmissions, those gunmen were dispatched to deal with the threat. I also very much doubt that they were coordinating with the police or marshals. They didn't seem to care about the officers or the other prisoners in the transport.\"\n\n\"Military?\" Sasha asked, half turning in her seat to look back at me. \"Some holdover from before the Ban?\"\n\n\"If they were,\" Mike said, \"they aren't part of the regular services. All branches of the military were phasing genemods out even before the Ban was announced. Those guys were skilled, but not seasoned. And they were suicidally brave. They should have pulled back when Nock took out the first one. Being under sniper fire is scary as hell, but they kept pressing the attack until three of them had gone down. I think they had to be ordered to take cover.\"\n\nHaving Nock on overwatch might have been the only thing that had prevented us from being overwhelmed. It had certainly limited our losses.\n\n\"Any thoughts on why they showed up when they did?\" I asked. \"Four minutes isn't a lot of time. They would have to have been within a couple of miles of where we staged the attack.\"\n\nMike held up a finger. \"Yeah, I've been thinking about that. Maybe they were on standby and got dispatched when the transport first reported the accident on the freeway.\"\n\n\"But dispatched by whom?\" Nonna asked. \"Police? The marshals?\"\n\n\"Or someone else entirely.\" Mike said. \"Like I said, not a part of the regular services. Maybe a new group.\"\n\n\"But genemods?\" Stansy said. \"Would the federal government really be using genemods? After all that rhetoric about us being the enemy?\"\n\n\"Genemods have been disappearing since McCain's amnesty period last year,\" I said. \"Not reverted and released, just gone. I think we all just assumed that they were being executed.\" I paused, choosing my next words carefully. \"What if, instead, they are being pressed into service?\" I took another moment to recall the words of the Stansy that had attacked me. \"One of them said that she was going to take Nissi to be conditioned. What could that mean?\"\n\n\"That sounds like brainwashing,\" Nonna said. \"Back home, the communists were said to have developed methods for re-educating those not loyal to the regime. I also heard that those methods were neither reliable nor lasting.\"\n\n\"Or it could just be a euphemism for torture,\" Stansy suggested.\n\n\"That's plausible,\" I admitted. It sounded like the most reasonable explanation, but it didn't sit too well with me. None of the others had looked one of them in the face and seen the emptiness, the total lack of humanity that I had seen. Nonna's suggestion felt like the closest to the truth, but I balked at the idea of it. It was the stuff of sci-fi. Things just didn't work like that in the real world."
    ],
    "authorname": "FelHarper",
    "tags": [
        "no sex",
        "genetics",
        "action",
        "dystopia"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/double-helix-ch-20"
}