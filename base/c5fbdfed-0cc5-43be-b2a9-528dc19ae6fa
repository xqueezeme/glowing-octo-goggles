{
    "title": "A Tale of Revenge Ch. 12",
    "pages": [
        "Hey everyone. Thank you all so much for your lovely emails and comments. Your support is much appreciated. This chapter will answer a lot of the technical world-building questions I've been getting. I hope it helps all the fantasy fans who are invested in this world. \n\nEnjoy! \n\n*** \n\nCh. 12 \n\nThree months ago... \n\nThe girl stumbled slightly as she crouched out of sight. Leonid watched dispassionately as she clutched her bow, her wild eyes darting about, to see if she'd been discovered. \n\n\"You have to do this,\" Emera said, standing next to him. Her presence helped still him somewhat, though he struggled to feel grateful given that she had been the one to drag him back here. \n\nHe drew a breath as he watched the girl get back up. She could not hear or see the gods as they stood a few feet from her discussing her fate in the plainest terms. \"I have performed my penance, as you well know, and I have been pardoned by The Five for my trespasses against your interests. I have no desire to concern myself in the Realm of Men again,\" Leonid said, not turning to meet the goddess's eye. It had been some time since he had last seen her and though the edge of her anger had worn off, there was still plenty of it left in her tone. \n\n\"But you have a chance to set it right in a way you could not before now.\" Her blue eyes flashed at him, her face excited. She did not believe he would deny her. \"We can restore balance, seek the progress we saw a century before.\" \n\nLeonid turned to appraise her once more, seeing her sameness, the familiar dress and fashion, the same jewels and hair. For someone so obsessed with advancement, Emera seemed rather stagnant. Her mouth twitched into a small smile, as if she knew his mind. \n\n\"Don't be so literal, brother,\" her voice was soft and musical but it pricked him with its familiarity. \n\n\"It has been a long time since you last called me that,\" he pointed out, bitterness not withheld. \"You are being manipulative, sister, and I am not interested.\" \n\nShe drew back, observing him again. Leonid watched as the goddess paced the clearing where they stood, her golden slippers silent against the deep moss at her feet. She had sought him out, a century after he'd disappeared from her wrath and he found the change off putting. \n\n\"Is it not enough that I have had time to forgive? Can I not address you as my family despite the history between us without it being a manipulation in your eyes?\" \n\n\"If it had not been your reason for seeking me out, perhaps. But I find you're breaking my solitude only when it suits you.\" Leonid turned back towards the human, watching as she slipped between the trees out of sight. He stood silently as his counterpart moved about, flitting and dainty where he was solid and still. He watched the rays of light bounce off her pleated gown, the golden hue of which was several touches lighter than her skin. Beneath her skin soft veins of blue fire burned, accented by the sapphires which marched along her shoulders, holding the folds of her clothing in place. Her lips were also tinted with her glowing veins, making them almost as blue as her eyes. She sighed in frustration, turning from him as she traced her footsteps back and forth from the trees. \n\nLeonid drew himself up, his own skin humming with the black power that made up his innermost core. For many years now he had existed away from other gods, kept to himself as he wandered the different realms, involving himself only in the lives of lesser beings when necessary to stave off the dangerous restlessness that ate away at him, and enticed him to do things he should not. She knew this, and yet she tempted him still. \n\n\"Your eyes are growing black, brother, are you angry?\" Emera drew up in front of him, her own deep blue eyes shone as she looked intensely into his face. \"What is it that requires you to deny me? Are you busy wrapping yourself in your cloak of seclusion and brooding penance? Do you keep yourself away from us because you are truly ashamed or because you are petulant and wanted us to seek you out and draw you back to the light?\" \n\n\"I am not some cantankerous child, Emera. Do not treat me as one. There are good reasons for keeping myself in solitude as long as I see fit.\" \n\n\"Is that why you have neglected your responsibilities for more than a century? Do you know what has become of the realms you ruled? How kingdoms, empires and worlds have crumbled without their god? And what of your own interests with your peers? Have you even wondered what would become of you if you did choose to cease your sulking and return to your work? Would you be able to hold off those who seek your weakness for their own gain?\" She was goading him, and it was working. But he chose to ignore it. There were more important things than his pride. \n\nHe laughed humorlessly. \"You didn't believe I would deny you this, thinking I would leap at the chance to gain favor in your eyes again.\" He brought his fire-laced hand to her golden cheek and stroked the skin there with the pad of his thumb. \"I have put this behind me. You should as well.\" \n\nLeonid moved to turn from her, to leave this sphere that clamored to keep him enthralled. He was feeling suddenly weary of the entire affair, worn just by the effort it took to stand on that ground. But Emera caught his hand and clasped it to her chest in both hands, a grip ferocious and unyielding. \"No brother, you have not. Do not deny me this. It is true I have not forgiven you. The Five were more concerned with the other realms you disturbed and left my most prized achievements in ruins with no hope of my being able to reassert my influence. You must help me. You were made to balance me as I was for you and I am asking you to right this wrong, to seek my forgiveness, not just the justice of others.\" \n\nShe was sincere, he knew her well enough to know that. And what was more she was right. Neither of them could be at peace with this between them. Could he resist the pull of the Realm of Men? Especially when asked so prettily? He quickly quashed the excitement that drew at him, the very earth beneath his feet singing sweetly to his darkest desires. He would do this for her and be done with it forever. No good could come of his further mingling with mortals in this sphere. \n\nRecognizing that he had put up pitifully little fight, he sighed in defeat and she jumped into his arms, clasping him in an iron embrace. \"Thank you Leonid,\" she said into his hair. \n\nHe chuckled and patted her exposed back. He could practically feel the beast inside him stretching its long unused limbs. This was a terrible idea. \"I assume you have a plan of action?\" \n\nThe two gods turned and Emera drew him through space silently and they appeared behind the girl again. She was clumsy and loud but there was something endearing about her determination. Emera stood by his side and they watched her toil on her way. \n\n\"Did you feel the deaths of the others? They were still attached to you,\" Emera asked, her eyes never leaving the mortal in front of her. \n\n\"Perhaps,\" Leonid frowned a bit. Had he felt those tugs as the threads of his power were severed? He couldn't be sure. He had removed himself so completely from their influence he may not have. \"So this is the last hope for your empire? What is left of the once mighty empress's house?\" It came out more mocking than he'd intended. \n\nEmera gave him a look. \"Her descendant sits on the throne. This girl is the last of the rightful line, the one you stole from me.\" Her voice was studiously casual. \"Can you not feel her? Is she not bound to you still?\" \n\nLeonid felt the bond to the girl as it teased him beneath his own skin. Her soul called out to him to consumer her, and through her he could devour the rest of the sphere, finally tasting the limitlessness of his own power. \n\n\"I can.\" \n\n\"Well go to her, stop her from this suicide. It is your right,\" Emera said, eyes shining. She was unaware of the hunger he managed to keep out of his voice. \n\n\"And then what? Keep her in her burnt out village? Breed her with another human to maintain the line? What good does this do for you? How can saving one girl possibly regain your empire?\" \n\nEmera sighed. \"It was not my empire. This is important, Leonid, this kingdom was once a bastion of advancement, a positive balance for the entire sphere. It was the seat of a mighty and just empire. We are at the brink of chaos, the war will not end till they rip apart everything that has been done. We must bring back balance to this realm.\" \n\n\"The Balance created chaos, sister,\" Leonid reminded her as they moved together to keep up with the girl. \"Sometimes retreat is what is needed. There are other directions besides forward.\" He meant it to tease her but it came out rather grave. \n\nEmera shrugged. \"Ultimately forward is what is needed. I believe The Balance intends for progress.\" \n\n\"We all would like to believe The Balance wants what we desire most. Don't be so simple, Emera, you are not a fanatic. It's unnerving to hear you speak as if you know your wishes to be in line with the power that controls the universe as we know it.\" Leonid looked once more at the smooth face of the goddess. Because they did not age it was harder to see the changes time had wrought on her, but the hard set of her mouth and the slightest crease in her brow told him that the last century had not been kind. \n\nShe looked back at the girl who was crouching behind a log, trying to get a better look at the soldiers camped nearby. Leonid watched the goddess closely and saw her look change when she observed the girl. She had hope for this endeavor, perhaps a desperate hope to regain her power in this realm. He turned his gaze to the empress's great-great-great granddaughter, the one who sang to him, who tugged at the power he kept locked up deep inside himself. \n\n\"You haven't answered me. What am I to do with her?\" Leonid knew what he wanted to do, but he doubted it was in line with what Emera had in mind. \n\n\"I trust you will figure out something. Just make sure she does not die tonight, that she understands that she will not be able to die without consent. Perhaps she will give up the violence.\" \n\n\"Doubtful,\" Leonid said as he watched the girl climb a tree. \"This one is very determined.\" \n\n\"She has suffered greatly, I am not surprised.\" \n\nLeonid gave her a sharp look. Emera was not the caring type. \"What do you know of human suffering? You would see any number of them endure an array of horrors for your ideas.\" \n\nShe gave him a small smile. \"I'm just trying to prepare you, brother. She may surprise you yet.\" \n\nHe looked back at the girl as she steadied herself on a branch and drew out her bow. \n\n\"I do love to be surprised.\" \n\n* \n\nEmera threw the doors of her chambers open with such force the walls shuddered on impact. The beautifully carved inlays suffered some splintering damage before a small globe descended from the ceiling and began to replace what had fallen until no sign of the damage was left. Leonid watched with interest as the spell did its work, ignoring the flaming glare coming off the goddess. \n\n\"You were supposed to keep her from dying, not enslave her to your whims,\" she did not shout but her voice rolled with anger so that it reverberated off the walls, once again sending the globe spell into a tizzy as it tried to repair every crack at once. \n\n\"I do believe you are going to shake your house from its foundation, Emera,\" Leonid sat back, making himself comfortable on a mountain of pillows that made up the seating area at the center of the room. \"At the very least you will overwork your clever little spell until it bursts.\" He nodded at the glowing orb. \n\nEmera did not take her eyes off him. Her golden skin was streaked with blue light as her anger burned beneath the surface, the blue of her eyes seemed to creep outwards, swallowing the white and black until her gaze was as vacant as it was penetrating. \"You promised me you would help,\" her voice lost none of its edge. \n\n\"And I will, dear sister.\" Leonid reached over to the bowl of offerings set between the cushions and popping the silver morsels in his mouth as he leaned back. \"Please join me.\" \n\nEmera turned from him and went to the window. He felt her getting herself under control before she came back and sat stiffly opposite him. \"Explain yourself.\" \n\n\"There are two issues as I see it. The first is that given the time constraint and the fickleness of mortal life, and the war that's being waged as we speak, there is but a small window to achieve your aims. It would not do simply to wait for her to spawn another, one I would have even less power over. Instead we must use this girl against the current king.\" \n\n\"You may be right but it needn't have been immediately. She is young yet, we could have prepared her at least. Instead you armed her and sent her out into this mess with nothing more than magic and a death wish. She will destroy herself on this crazed quest for vengeance by killing her own kind. It will warp her energy and she will ultimately be of no use.\" \n\nLeonid nodded; he had considered it. \"I am taking care of that with some deterrence to killing. Besides, she might surprise you, despite being consumed into thoughts of revenge she will likely choose a better path even without my stipulations. I have rarely felt such will from a human. She has something of the empress in her yet.\" \n\nEmera glared at him, \"And the second issue?\" \n\nLeonid lost his smile. He turned from her, observing the room. The walls had been carved so they were pockmarked with small cubbies, like the humans built to house their messaging birds. Each tiny chamber held a spell or contraption dreamed up by his sister, one even closely resembling the intended occupant. For a moment he watched one such space where several golden spheres circled each other in different elliptical orbits, always crossing and never interacting. He recognized it immediately as a model of the different realms. \n\n\"The artistry is impressive,\" he said, nodding at the object. Each sphere shone with symbols depicting the realm it represented. \n\n\"I did enjoy what the boys thought up for me,\" Emera said distantly, referring to the multitude of craftsmen who came to serve her both in life and death. \"You are avoiding my question.\" \n\nLeonid nodded but maintained his silence. He took a long turn around the room, looking over her display. Emera for her part seemed content to watch him take his time. Finally he came back to the model of the universe and contemplated it again. \n\n\"Have you often visited the Realm of the Living?\" He asked, referring to the fourth sphere, which shimmered with symbols of foliage and beasts. The land there was populated with cognizant plant life and near mindless animals, which served as their food. The rocks themselves hung in mid-air and pools of molten minerals served as nourishment. \n\n\"In passing, the system there works differently than my talents, I find I have little to add and less to receive. Though Ion has shown me a great many intricacies I could not appreciate on my own.\" He knew this of course, but a point must be made. \n\n\"And what of the Land of Three?\" he turned to look at her. It was not his imagination that the fire beneath her skin shone brighter for only a moment. Her eyes glowed with a far off look, easily recognizable. \n\n\"I have visited.\" She looked away from him. \n\n\"I know why you do not visit more.\" He felt it too\u2014the dreaded desire to destroy and rampage at will. The Land of Three sang to her as the Realm of Men sang to him, ever louder now as he had ceased to ignore its pull. But both were imbued with a strong will to resist this decadent desire for chaos and so they did. Emera's eyes shone with understanding, the hunger there just contained by the carefully cultivated discipline she applied to herself. \n\n\"The Realm of Men?\" she asked him. And he nodded. Both understood. The Balance had made them so\u2014in order that when chaos demanded a new beginning, the realms they thirsted after would be crushed beneath their powers. \n\n\"But my nature is to build, not destroy.\" She looked forlorn. It occurred to him that she had much less exposure to her weakness than he did. She was always more controlled; it made sense that she would have studiously avoided the temptation she felt. \n\n\"Everything has a counterpoint, even within ourselves,\" he reminded her, putting his long arm around her shoulders and drawing her into his chest. She sought comfort from him for the first time since their long estrangement. It felt good to have her back. \n\nEmera thought about his revelation for some time. \"How can you stand to be there for more than a moment? Are you not tempted?\" \n\nLeonid gave a small smile. \"Constantly. I am hoping to direct the desires and contain them. If I am able to focus the attentions on one individual, the need to devour the whole ebbs.\" He took a breath. \"The mind is truly fascinating. I hope hers will occupy me enough so I can see this through.\" \n\nEmera pulled away from him. \"Her mind? You breached the sacred barrier of the consciousness in that realm?\" She looked flabbergasted and Leonid relished the expression for a moment. It was rare that he had the opportunity to surprise her so. \n\n\"It had to be done. If I am not fully connected with her, the temptation to extend my influence beyond the bond would be too great.\" \n\n\"The Five will not approve.\" \n\n\"They would approve less to find there were only six realms.\" \n\nEmera looked up at him, \"You risk the destruction of this sphere. Why did you not tell me before?\" \n\nHe had no answer that he could speak. It had always only been a matter of time. \n\n\"I trust that you will not let it come to that.\" \n\nLeonid sighed and laid back. Emera curled up next to him, placing her golden head on his chest. He ran his fingers through the strands, thinking back to the deal he'd made with Anna. He'd barely touched her mind then and already he knew he'd underestimated its complexity. Indeed she would distract him for some time. After a long moment Emera stiffened, as if she were reaching some conclusion in her own line of thinking. \n\n\"Is that why your destruction spanned so many other realms? To spare the one you could devour?\" \n\nLeonid chose not to answer what needn't be spoke aloud. He got up, placing a kiss on her cheek, and disappeared. \n\n* \n\nLeonid paced his own abode on The First Level where gods resided. He'd avoided this place for so long and yet it was still familiar, as if he'd never been away. \n\nHe threw himself onto a large divan, feeling the soft fibers beneath him as he gazed up at the beveled glass ceiling that swirled with images of the deep woods but still let in the light of infinite stars. He ran his fingers through his hair as he contemplated his situation. What a fool he was to get himself sucked in and pulled apart again. Even now the urge to go down there and rip the world to pieces hovered on the edge of his consciousness. \n\nHe turned his thoughts to Anna, testing his theory that she might suitably sate his impulses. She was a fascinating little human, for all she'd barely lived and experienced next to nothing. He'd perused her memories only briefly, unconcerned with the narrative of her life. Now his focus was the structure of the mind, the layers of conscious and unconscious thought that drove humans to act in ways one might never have expected. The intellectual pursuit of mapping the human mind was interesting, though hardly base enough to serve as a proper distraction. \n\nHe sighed and reached out along the thread of power to see what his little human was up to now. It had only been a day since he'd last been there; surely she'd discovered her new abilities. He watched her test herself until she grew weary. The human form would never be able to truly contain his magic and he saw it draw on her. She set up camp and tumbled into her bedroll. Leonid followed his power into her mind as she fell asleep. He could feel the shifting of her consciousness, the ebb and flow of sleep and how it awakened the dormant and suppressed corners of her mind. ",
        "It reminded him of the stars, the way different pieces lit up and went dark around him. The speed of movement was impressive, even for a being of his level it was hard to keep up. Just as he'd access some newly illuminated space it would go dark again in favor of something else. He delighted in chasing them, finding glimpses of images or feelings, phantom sensations or muscle twitches. The lights began to coalesce before long and a picture formed. Her sister stood before him, then her father and mother appeared and the house grew around them. Anna's form took shape directly in front of him. \n\nSome strange barrier grew between the pair of them and the dream figures in the room. Anna raised her hands and placed them there, anguish rippling off of her. Leonid watched as the domestic scene was violently interrupted by a band of soldiers bursting through the door. Anna screamed as the dream played out but Leonid was no longer concerned with the action before him, but rather what it was doing to her mind. For the first time it seemed to him that her emotions were not some distant phenomenon. Instead now, from inside her own dream, he could feel them, encompass them entirely and witness her feelings from all angles. Captivated, he noticed as his chest hurt as though someone was pushing knives beneath his skin; his head pounded with pressure. A deep coil of pain emanated from inside him. He felt intoxicated by it, consumed in a way he'd never felt before. It was fascinating, arousing even. \n\nIt wasn't until the house began to burn, the bodies of her friends and family alight in his eyes that he realized how outsized the emotion was, how overwhelming it must be to a lower being. It was then that he reached out to her and took her dream-figure into his arms. She yielded to him, unsurprised at his presence which itself seemed odd. She cried into his chest; the emotion shrank to a more manageable size. He clasped her closer, watching as the lights around them began to dim, the dream faded and so did her form. And once again he was left alone watching the lights flicker around him. \n\nHis focus came back to the room around him, still staring at his ceiling. For a moment he just lay there, feeling ripples of the dream spread out along his body, which itself felt electrified as if every part of his skin was stimulated at once. His breath was quick, mirroring the breathing of the human girl who had sobbed into his chest. For lack of a better description, he felt alive. \n\n\"I hope I'm not disturbing you,\" a low voice came from the darkened doorway. Leonid started a little before getting control of himself. There was something unnerving about the lingering human reactions. \n\n\"Never, Jakob,\" he said from his place, welcoming his servant into the room with him. \"Please join me. I see you've kept the place for me while I was away.\" \n\n\"You should be grateful,\" Jakob said moving to the seat opposite his master. \"I had several enticing offers for employment during your long absence.\" \n\nLeonid gave him a look and allowed the smallest smile to his lips as he turned his gaze back up to the ceiling. Jakob had been a human man who had pledged himself to Leonid during his life and when he died in battle his energy was not released across the universe to be a plant in one sphere and a chipmunk in another, but retained his form and consciousness so he could serve Leonid for as long as Leonid desired. The same would go for Anna once she died now that she had pledged her soul to him. \"Have you missed your wayward master?\" \n\n\"Exceedingly,\" Jakob said carefully. \n\nLeonid sat up and faced the man across from him. \"I trust it was not too dull, that you did not feel abandoned.\" \n\nLeonid watched as his servant looked at him blankly for a moment. He could not tell what the man was thinking and it pleased him that he would never be in this position with Anna. The urge to shake the man until he spoke was easily suppressed though it was still there. \n\n\"It has been a matter of some delicacy to continue your responsibilities in this realm. As you are aware, I have no such power to work in the spheres, so those tasks have gone untended too...\" \n\n\"Yes, Jakob,\" Leonid cut him off. \"I've been neglectful of my duties. Thank you for maintaining order in the universe as we know it while I was off gallivanting.\" Leonid accepted the man's complaining with a small smile. If Jakob was not needling him then all was truly not right in the universe. \n\n\"Well if you are well recovered from your...gallivanting...then I have at least five committees with issues before them that could claim your attention, as well as a century of reports from the various areas of influence that have completely collapsed in your absence. Your position as Sun God in the 6<sup>th</sup> sphere is going to be reassigned by the high council who had drawn up numerous requests for your presence to answer for any number of insults due to your extended...vacation.\" Jakob gave him a look and stood. \"Shall I fetch the resolutions you are meant to weigh in on?\" \n\nLeonid nodded wearily and waved him off, lying down again and adjusting the bulge in his pants as he did. It seemed the arousal he had felt from the dream's intensity had not abated while they'd spoken. \n\nJakob stood but did not leave. Leonid looked over to see the gleam in the man's eye. \n\n\"Very well, you may take care of this first.\" He looked back up at the stars twinkling back at him through the multi-faceted glass mosaic of the ceiling as Jakob settled between his legs, taking his length down his throat as a dying man in the desert swallows his first sip of water. Leonid purred as the man worked his well-practiced tongue over his organ. A little indulgence of servants was necessary. \n\n* \n\nLeonid sat back with a sigh, it would seem that the last few weeks had seen many more of these indulgences. Jakob got up to leave but paused at the door. \n\n\"Yes?\" Leonid asked, still feeling a bit permissive. \n\nJakob shifted awkwardly back into the room. \"I fear I may overstep my bounds.\" \n\n\"So formal, Jakob. Speak your mind,\" Leonid indicated for his servant to take a seat. \n\n\"I speak only because I believe I may have some insight into the situation given that I was once a man from this realm.\" He paused again and gave the god lounging before him a plaintive look before ploughing forward. \"I believe that you grow too close to this girl, master. By inhabiting her thoughts and experiencing her emotions you draw yourself closer to the human condition.\" \n\nLeonid did not move but a certain ease in his posture evaporated. \"Indeed?\" the word hung in the air between them. \n\n\"You may not have noticed the difference, my lord, but I have seen a change in you, however slight, as you've spent more and more time with her. I know you hope to assuage your hunger for the energies of the Realm of Men but I fear you are unaware of the personal connection between you and this one inhabitant.\" Jakob continued on, trying to make his point before the god's anger took over. Given the increased volatility of the deity's reactions of late, he was treading on very thin ice. \n\n\"You are constantly occupied with her thoughts and dreams, her memories and reactions. You've hardly interacted with the other gods since you've returned to this level other than to resume the barest of your responsibilities. Even when Emera is here you barely give her a passing glance. Was she not once your chosen mate? And yet now your desires focus only on a mortal girl, one who is affecting you greatly.\" The man took another breath to continue but was cut off as Leonid rose from his languid pose and moved to the far side of the room, ostensibly occupied with whatever he could see beyond the window there. \n\n\"Your concern is noted, Jakob.\" He would not dignify it with a response but the man's loyalty should not be discouraged. \n\n\"I am concerned that you have replaced one weakness for another, master. And this one may\u2014\" Jakob was cut off as Leonid appeared before him, wrapping his hands around the man's throat. \n\n\"You dare speak to me of weakness? You who have witnessed and understood the power of gods in all realms?\" The anger in Leonid's voice made the room echo as the undertones of his voice became more pronounced. He knew he was losing control, acting exactly how Jakob was warning him not to, and yet he couldn't seem to suppress the growing fury in his chest, the pounding of his heart. His hand was throbbing with black pulsing veins against Jakob's ghostly skin, the darkness inside him billowed up in great clouds of magic from within. \"She is mine to do with as I see fit, and I will not be so questioned by some lesser being.\" \n\n\"This is an interesting tantrum, brother,\" Emera said from the doorway. Leonid didn't turn to her but brought himself under control, ignoring the stab of panic at being caught in such a state. He dropped his hold on Jakob, who quickly stepped back from him. \n\n\"Sister dear, what brings you by?\" his voice carefully relaxed. \n\n\"It appears the same concerns as your man here,\" she said, grabbing Jakob's arm as he moved past her to leave. \"No, don't go Jakob, it seems your insight may prove very useful to this discussion.\" \n\n\"I don't recall agreeing to any discussion,\" Leonid said as he drew himself back from them. \n\nEmera gave him a hard look. \"Many things hang in the balance here and I am determined to see this episode through with the least amount of damage to the realm as possible. When these threads unravel, I will stand before The Five in clear conscience, and so will you.\" \n\nLeonid turned from them, once again directing his gaze out into the world beyond his windows. In the level where the god's resided, there was no ground or sky but rather a mixture of the two. The seven spheres revolved around them, hanging in space, surrounded by a multitude of stars and galaxies, which painted the sky in all the colors of the cosmos. As such, the water that flowed by his window disappeared easily into the infinite space and yet any god could walk across the expanse or simply appear where they wished. He very much preferred the feeling of earth and growing things beneath him, even above him. After so long away this level still seemed precarious to him. He turned back to the room\u2014his thoughts disturbingly human. \n\nJakob stood near the door, eager for dismissal, but Emera was situating herself on the dark furniture, waiting for him. \"Speak if you wish,\" Leonid said, hardly willing to offer up his own guilt in the matter. \n\n\"You've grown attached to the girl,\" Emera said simply. \n\nLeonid considered his answer. \"My prediction that access to the mind of a human would be a diversion and focus for my less savory impulses in that realm has proven correct.\" \n\n\"But it is more than that,\" her face had not changed. \n\n\"It is no more or less. It was unprecedented that one of the gods would breach the sacrosanct barrier that keeps us from the minds of mortals in that realm. We did not know what to expect.\" Leonid moved and sat down across from the goddess. \n\n\"And so we are learning that the more you indulge your experience of a mortal's mind the more attached you become. But that is not all, the longer you spend in her mind the more your own behavior and thoughts begin to mirror hers and you begin to act and feel as a human does.\" She said this carefully, watching his face for movement. He did not appreciate the scrutiny and was about to speak when she interrupted him. \"You do not need to tell me yes or no, Leonid. Before this episode I would not have been able to make out a single expression of yours that you did not wish.\" She gestured at his body language, which was tense and defensive. \"You can barely contain yourself.\" \n\nLeonid's first instinct was to fume at her but he quickly saw that it would only further prove the truth she spoke. Instead he got up and moved away from her, settling his eyes somewhere far from his company. \n\n\"I am at an impasse then,\" he said simply. \"I cannot break off from her without risking the sphere and I cannot stay with her without risking myself.\" \n\nEmera pursed her lips, pleased that he had skipped over the denial and was back to pragmatism. \"Then we shall find another way. Jakob, have you any suggestions?\" \n\nThe man started at being addressed, concerned as he was with fading into the wall. \"None, my lady.\" \n\n\"Oh come now man, you had so much to say before I arrived. Don't be shy now.\" \n\n\"Do not taunt him, sister,\" Leonid said remorsefully, \"I have given him a fright.\" He nodded at the man, dismissing him as he wished. \n\nJakob began to move from the room but stopped once again at the threshold. \"Perhaps you should try to remain outside of her mind when you visit. Then you may be able to stay focused and yet unaffected.\" He nodded once at Leonid and scurried from the room. \n\nEmera gave Leonid a look. \"Seems as good an idea as any.\" \n\nLeonid stifled making a face and turned away again. The pair was silent for a while before he spoke. \n\n\"How long were you here?\" \n\n\"Long enough.\" \n\n\"Do you...\" Leonid started, trying to find the correct words. \n\nShe did it for him, in a most painful way. \"Do I feel the sting of your rejection? Have I been pining for my wayward mate? When I call you brother am I attempting to draw you back into my bosom so that I can be whole again?\" \n\nLeonid didn't respond but looked at her in confirmation, an uneasy feeling growing in his chest, one he had been pushing away for decades now. \n\n\"No, my love,\" she said with a smile. \"We cannot know the will of The Balance and so we are left only with our assumptions. We may have thought that being created together, reflecting back on one another as we do, was a sign that we were intended. It has long been clear to me that was not true.\" \n\nLeonid felt the relief loosen the guilt inside him, though something she said gave him pause. \"How long?\" \n\n\"Have I known?\" Emera avoided his gaze for a moment. \"I should have let you go long ago.\" \n\n\"Before Imonesh?\" \n\n\"Long before.\" \n\nLeonid looked away from her. For a moment they were silent and then she stood to pace the room. \n\n\"I do not claim any responsibility for your actions nor do I absolve you of your guilt, but I do see that my reticence to bring to light our incompatibility created a certain amount of dissonance in your mind. Imonesh was wily enough to spot it and use it, and you were angry enough to fall for it.\" She paced and stopped before him, he raised his eyes to her snapping blue ones. \"Was it anger or boredom, Leonid? What did she use? What corner of your mind did she see that I did not?\" \n\n\"You are still angry,\" he stated simply. \n\n\"I am.\" \n\nHer anger was godly; she was controlled and displaying her power, not threatening and shouting as he had done. A god's emotion was a cerebral matter, one they understood and acted on but did not feel the way a human would. She would not experience it in her skin as he had, or move without intending to. But anger was anger, and it eats at its bearer. \n\n\"I will set this right for you, Emera. But I cannot fix your feeling.\" \n\n\"Why do you refuse to tell me what happened?\" She loomed over him, crackles of power spreading over her skin. Leonid stood up slowly, moving into his space and crowding her fury back towards her. \n\n\"She used you,\" he said, stepping towards her as she refused to move. They were close enough to feel their power resonate off the other one. \"She used your passions and purpose to make me jealous, she used your focus and success to tear me down. She poisoned me against you until all I wanted was to obliterate everything you had made in this Realm of Men, the one I was made to extinguish and you had the audacity to build up, to revel in without me.\" \n\nThe blue cracks of lightening dancing over her skin combined with the black clouds that emanated from inside him. Their powers united and diverged only to join again and again. The echo of their connection rang out like the tone of a far off bell, one that might never cease. \"We were designed as something much worse than mates. We were made to trigger the other one, to begin the cascade that would consume what we thirst for. Can you taste the blood in the Land of Three? Does it sing to you now?\" \n\nEmera looked up at him, her face wild and excited. \"Yes,\" she breathed. He held her gaze, watching his perfect sister as blackness consumed the blue in her eyes. \n\nLeonid did not move away, allowing wave after wave of power reflecting back between their bodies, building to some terrible crescendo as the room filled with their combined storm. He watched her face as she flirted with her temptation, as the desires within her rose up from wherever she had buried them. It was a sight to behold, her full glory and ultimate power just out of reach. There was something so tempting about pitching over that edge together, realizing fully their potential to consume the energies around them. He kept back from the precipice and yet he could not help but look over it. \n\nEmera was always better at resisting temptation, at listening to her head and not her nature. She stepped back from him, her face closing off and the resonance of their shared power dissipating as she reined hers in. \n\n\"You tempt a dangerous power, brother.\" She clenched her fists at her side. She was diverted from her anger so she could feel the injustice of having her weakness dangled before her. \n\n\"As did Imonesh,\" he stopped and took his own step back, pulling his influence from her space so that she might not feel the pull of his powers. \"I was fortunate to focus my attentions on the royal family, as even I was unaware of my appetite for rampage until far into the plot. When the urges came I threw myself out of the realm to disperse the destruction, leaving Imonesh to believe she had been more artful than she truly was.\" \n\n\"How did we never see this before? Centuries we spent together and never once did I feel that desire.\" Emera was always searching for an explanation. \n\n\"Ignorance can mask nearly anything. But do you not recognize the sensation, Emera? Did you not feel this pull towards glory every time we coupled? As if there were some peak just out of reach, one that might satisfy more than just our carnal urges?\" She gazed back at him, her lips tight. The recognition in her face was answer enough. \n\nLeonid turned away. This prying into himself was beginning to irritate him. He would do it for Emera, so she might understand what was at stake, but the constant need to bare these deeply buried secrets was beginning to make him feel exposed. Immediately images of Anna's bound body reared up in his mind. He wanted that, to hear her scream in pleasure he gave her, to bend her to his will because he could. Here, with Emera, he had to acquiesce, to make it right again. But with Anna he had control, and he needed that now. \n\n\"I will try to heed Jakob's advice, but I need Anna.\" \n\n\"Do you care for her?\" Emera fixed him with her gaze. \n\nLeonid looked back at her, impassive, \"One may need something, desire it even, and not truly care for the object itself. She serves a specific purpose and in using her to that potential I must invest in the dynamic in order to draw from it what I need.\" \n\n\"You did not say no.\" \n\n\"But I did not say yes.\" \n\n\"Be careful, brother. You cannot lose your head.\" \n\nLeonid laughed darkly. \"She is the only thing keeping it in place, sister.\" \n\nLeonid left the beveled glass room and moved further into his home. The black walls glistened with light as though made from the darkest opals. Plants and their likeness wound their way around every door frame and across the walls. When he reached his sleeping chamber, two massive trunks delineated the room from the hall as ivy curtains, heavy and mineral moved aside to let him pass. His bed sat in the center of the large room. The frame was made up of huge crystalline structures growing from the floor as if it were the earth itself instead of an expanse of pitch dark space held at bay by the clearest glass. ",
        "His feet seemed to hang in that void as he frowned into the cosmos. The glass grew smoky until the room became more contained, the appearance and sensation of solid material beneath him comforting. He settled himself into a chair made entirely from deep green century plant whose large leaves had folded themselves and ossified in the desired shape. \n\nHis mind reached back to Anna, her sweet cries filling his ears, making him eager to access her once more. He would have her again and again until she was as consumed as he was. Her focus was now on her mission, but he knew at its end he would have her complete attention. Once this had seemed like a small price to pay, after all a few months of human life should have been a blink of his eye. But he found himself more aware of time now than he ever had been before. It was uncomfortable, although the anticipation certainly heightened the experience. \n\nThere was an edge of fear in her whenever he brought her pleasure and while the pain had augmented the sensations, this panic was a bitter addition, one he'd like to stamp out. She didn't trust him yet, despite the fact that he had not had to punish her in weeks. That lack of trust was a barrier, one he intended to stamp out tonight. \n\nHe moved through his thread of power to find his girl making herself comfortable at an inn. He watched, unseen, as she moved around the room, her boy's disguise still in place. He wondered if humans could see the grace with which she moved, one that was not influenced by his magic inside her. She was a conundrum\u2014a royal peasant girl, a magical mundane, and an untrained warrior. But there was something else, some deeper part of her will, her intense connection to those around her, the depth of her emotions, which could not be explained as quickly. Even he, who had access to the recesses of her mind, was still intrigued. The energy she carried in her mortal form, what she called her soul, was so bright her crimes had barely offered any decline in its intensity. If anything her resolve and subsequent actions had bolstered it. But goodness is not uncomplicated and her pain added layers of tangled mess above what he saw at her core. \n\nThe inn's maids entered with a stable hand carrying a bath. They filled it deftly and left, no doubt glad to be free of Anna's cold demeanor. She amused him as she shed her tough posture, divesting herself of her clothing and sinking into the hot water like a cat in a particularly soft bit of sunlight. She was so naked in these moments, unmasked from all the barriers she put up. \n\nLeonid's unseen form moved towards her, studying her face as it softened and she relaxed into the hot water. The harsh set of her mouth relaxed, her brows relinquished their furrow. He could enter her mind, feel the peace she was experiencing in this moment, allow it to bring him peace as well. But he had to at least try to remain apart. Instead he watched as her mind began to whir again, her forehead crinkling, the thoughts no doubt troubling. He half sighed to himself, wondering why the girl seemed intent on worrying herself to death. He had felt her pain and knew she suffered, but he could not truly empathize. While he appreciated her tenacity there were aspects of her self-flagellation he found tedious and repetitive. \n\nHe settled himself on the bed, wondering when he was going to interrupt her, but soon found himself soothed by watching her tangle her fingers through her pitch dark hair. The strands floated in the bath around her and he found the soft swaying movements endearing, so he let her stay undisturbed a while longer. Only when she dunked her head and disturbed the water did he make his presence known. \n\nShe took it well, as she'd grown used to his interruptions and he enjoyed the new experience of staying outside of her head, reading her movements and breathing rather than following the skip of emotions and thoughts. Perhaps Jakob was right. Tonight he would test them both\u2014her ability to trust him, and his own resolve to remain apart. He focused instead on her form, the body he could picture in perfect detail yet never tired of seeing again. Rivulets of water ran over her skin in twisted tracks as she rose from her bath. The imperfections in her skin sent the drops in various paths with the force of gravity. He traced one of them with his fingers. Her body held a loveliness that only something transient could achieve. The fragility of her form, the inevitable decline made it all the more precious. And yet, what that body was capable of despite its mortal condition\u2014that the pull of time itself would influence it, producing new shapes, different shades of ever changing loveliness\u2014was truly beautiful in a way no eternal object could ever be. \n\nHe smiled at her, pleased at her compliance and eager for the night ahead. He moved them out to the woods, her exasperation soon melting into amenability. He enjoyed speaking to her now, waiting to hear her responses rather than watching them form at lightning speed in her mind. The rope would serve to push her again and he liked watching her fear become something much more palatable. And he needed the rope as well. He wanted her submission, and a physical display of his own control; he felt the satisfaction of binding her limbs as she obeyed without resisting him. Her body arched towards him, open and offered up for his touch. \n\nBut it was still there, he could see her uncertainty despite not being able to feel it. She did not trust him. For a moment he considered how to ferret out the topic without addressing it directly but he found himself too impatient. \n\n\"Do you trust me?\" \n\nThe effect was instantaneous. Her fear faded, the fast breathing subsided and a look of perfect bewilderment played on her face. \n\n\"What?\" came the reply, her voice husky and breathless. \n\nHe repeated himself, reminding her that she was unsure of him. Her resistance to this idea of \"ownership\" surfaced again\u2014humans having an outsized sense of independence given their life spans. \n\nShe contemplated him for a long moment when he asked her again. He found he could still feel the human level of anticipation that rose in his chest as she took her time to think on it. He did not know what she would say and he could not follow what she was thinking. He held her eyes, watching as the emotions played over her features as she thought through it. Part of him wanted to press her, but he schooled himself to patience until finally she seemed to have reached her conclusion. \n\n\"Well?\" Now he had to press her. \n\n\"Don't you know?\" She was teasing him. For a moment he was torn between annoyance at his question being sidestepped by a lesser being and delighted at her spirit. \n\n\"Contrary to what you might think, I am not always listening in. I do love to be surprised.\" \n\nShe nodded and his heart actually jumped, the culmination of the heightened anticipation was like a jolt inside him. But if he could not see it in her mind, he must hear it from her lips. And when the words tumbled from them, he felt victorious in a way he hadn't when he'd conquered her body and tamed her thoughts by invasion. \n\n\"Say it again,\" he said before he could stop himself. \n\n\"I trust you,\" the repetition took none of the edge off and he gave into his desire to take her again, to test her trust and watch as she came apart for him without holding herself back, without the fear. The feelings of her living flesh against him, the rise and fall of her breathing, augmented by the arch in her back he had forced on her. The shapes she made with her long limbs folded and secured, her breasts offered up to him, her core open and eager for his attentions. He wanted to touch every part of her, consume every inch of skin and make it sing for him. He felt her response as his mouth closed over hers, her lips soft and warm against his. She was his, and he would crumple every obstacle between them till she knew it as well as he did. \n\nLeonid ended the kiss so that he could watch her face as his fingers penetrated her. He watched the play of sensations in her face, as her dark eyes widened and gazed back at him. Her lips were parted in surprise and the most enticing moan came from between them. Now that he could no longer occupy her pleasure as he gave it to her, he wanted to enter her, to take his own pleasure with her body so they might find satisfaction together. He continued, excited at the prospect of it. She was so open now, her eyes fixed on his, her acceptance and submission to his bonds and his touch. He reveled in it. He brought her to her peak, watching as tears gathered in the corners of her eyes and her lips trembled with some unfocused emotion. How he wanted to chase it back into her head, to feel it all as she did. \n\nHis will faltered slightly as she cried out in release, knowing how all-consuming her pleasure was when achieved. Just for a moment, he thought. But before he could give in, a figure appeared just beyond Anna and Leonid suddenly felt the grip of fear. \n\n\"Imonesh,\" he said her name, feeling the bitter syllables on his tongue. He withdrew his touch from Anna and he felt her try to turn to look at the goddess standing behind her but he could not allow that. He had to get her out of here, before Imonesh saw her face, before the goddess figured out that this was anything beyond a bored god enjoying a night time romp with a mortal. Leonid held fast to his thread of power, pulling Anna into him and keeping her head still. He should send her off now, but too soon and the goddess might suspect. There it was again, that annoying twinge of panic he recognized from Anna's mind, yet it came from him alone this time. \"To what do I owe this interruption?\" \n\nHe glared at her as she stepped forward, a sly smile on her dark lips. She was brilliant in red silk, her tight dark curls falling easily about her coppery shoulders in perfect spirals. She looked overly amused to have caught him in such a compromised position and it came through in her tone when she spoke. \"Don't be such a prat. I came to play. After all, you are visiting near my realm. You can't blame a girl for wondering what's brought you to this part of the world.\" She tapped a dark nail against her lips as she contemplated the girl's bound back. \n\nLeonid felt a rise of violence inside him the more she looked at Anna. Her presence was one he would not welcome again in any condition but now, here, threatening as she was, he found it difficult to control the rage he felt. But he did. If he overreacted, he might compromise the girl, and Emera had warned him how human he himself was behaving. He chose not to answer the goddess and instead ran his fingers along Anna's skin in a measure that was soothing to him, though she whimpered in fear. \n\n\"This one seems so deliciously frightened,\" Imonesh purred as she flicked out her tongue against her lips, her eyes glowing in the darkness as she reached out to Anna, who twitched as the goddess made contact. Leonid held her fast, willing his face away from the turbulence he felt inside. The need to rear up and crush the goddess who dared touch his girl was tempting his control. He had to move Anna somehow. He had hesitated too long when she first arrived, and now it would be too suspicious. He cursed himself for being triply foolish as Imonesh raked her nails along the girl's back, making her writhe in his lap. \n\n\"I have given you the impression I want your company,\" he said, allowing more of his power into his voice. He was not one to be trifled with and Imonesh was overstepping most deliberately. \n\n\"Don't forsake my presence so quickly. We can still wring some fun out of her,\" came the reply and Anna gave a small cry as the goddess continued to maul her skin. Leonid felt a rush of anger but standing up and strangling the goddess would surely be a sign that he was losing himself. The continued assault on Anna was distracting as it played on emotions he should not be experiencing. Gathering himself, he forsook his promise to remain apart and moved into her mind to create a space for her consciousness to be protected from the physical experience of pain. He turned towards Imonesh, his mask now firmly in place. \n\n\"If you are testing to see if I rise to your bait again, you are wasting your time. I've spent many long years free of your countenance and I find that I long for its absence again.\" From his seat he was eye level with the smaller deity and he enjoyed the flicker of uncertainty in her eye. \n\n\"It has been an age, hasn't it? And how am I to feel that after so long I find you back in my corner of the world playing with the animals.\" Anna's body jerked under his hands. He wanted badly to wrap her in his arms and take her far away from this. \n\n\"You are trying my patience, Imonesh. If you do not leave my company now I doubt you will enjoy the consequences.\" \n\nThe goddess tilted her head back and laughed, a tinkling musical noise that might be lovely if it didn't come from such a contemptible creature. \"You threaten me in my realm? In my seat of power?\" She leaned into him, her hand still at Anna's back. Leonid felt Anna sobbing into his shirt and took little comfort in the refuge he had given her, knowing it could not last. The goddess retracted her bloody fingers from his girl and licked her nail, leaving a bright streak of red against her bronze tongue. \"You seem to think boundaries don't apply to you, you're wrong.\" \n\nHer eyes held a challenge as she licked the blood from her fingers, flicking her tongue out over the talon-like nails. \n\nWithout displaying the fury inside him, Leonid removed the ropes, allowing himself the briefest moment of feeling Anna's body against his own before he pushed her to the ground, her face constantly shielded by her hair from the goddess's view. It proved unnecessary as Imonesh had fixed her eyes on him as he rose up before her. He saw the opening and willed Anna back to her room in the inn, safe from the goddess before him. \n\n\"Well now that you have ruined my entertainment for tonight we can stop with the pretense.\" Leonid stared down at the goddess. \"Why are you seeking me out, Imonesh? I believe we both know it is unwise to tempt my anger.\" \n\n\"Angry at me?\" she said with false innocence. \"I set you free from your master, Leonid, showed you a way around your stuck-up mate. Why should you be angry at me?\" She reached out to him with fingers still streaked in Anna's blood. He grasped her wrist before she could make contact with his shirt. \n\n\"Have you enjoyed playing world builder then? Happy in the little kingdom you've helped bring to ruin?\" The contact with her skin was uncomfortable. It brought back memories best left burned and buried. \n\n\"Poor Leonid,\" she cooed. \"Always so short sighted.\" She pressed herself against him, tipping her head back so she could look into his face. \"Don't be angry; I've missed you.\" \n\nThe barb stuck. The implication that he had missed something was not lost on him. After avoiding other gods for so long he was beginning to suspect that he was ill prepared for the complexities of their current politics. But it didn't matter. The press of her body brought about a different anger, one that easily shaded whatever manipulation he might be subjected to. He looked at her hard. \"Why are you here, Imonesh? Why did you come looking for me?\" \n\nShe looked surprised for a fraction of a second. \"You are in my realm now, Leonid. One might think you were seeking me out.\" \n\nA puzzle piece fell into place. \"You expect me to believe that you sensed my mere presence in your land? When all I did was acquire a mortal for a few hours of diversion?\" She should not have that power, not given the level of separation required between gods and their allowance of influence in this world. She could have followers, mortals in her service, whom she could influence. She could observe, as all gods did, from above. But to be able to pinpoint the presence of another god who was not invoking power or calling upon her subjects? That should not be possible. \n\nImonesh gave another sly smile as she smoothed her free hand up in chest. \"I may have been passing through on a night time stroll,\" but she changed topics fast enough to peak his suspicion. \"You've been away so long, I feared you'd never return to me.\" \n\nHe saw through the ruse but played along, following her away from her unexplained use of power. \"I never had any intention of returning to you. As lovely as the last time was, I do not intend to repeat the process.\" \n\n\"Are you afraid of me, Leo?\" she cried in mock surprise. \"Afraid I might deceive you into having some fun again? You can't be worried about your precious Emera. She has no stake left here for me to uproot.\" \n\nThe mention of Emera gave him pause. \"You do delight in your power over others.\" She slid against him, and gave a small sound in affirmation. \n\n\"We are gods, Leonid,\" she whispered seductively as she brought her face to his ear. \"It is what we are made for. Our true power is just out of reach, just beyond the petty distractions. And to gain power we much take it from someone else.\" She twisted her still captured wrist, trying to reach for him again. \"No energy is made or destroyed in our universe, which means gains in one place must mean losses in another. Surely you, of all of us, understand that.\" \n\nThe truth of her words irritated his control. He could feel the dark desires welling up, so he focused his mind on the goddess before him, distraction over destruction\u2014over even true power. \n\nLeonid clamped down on her arm, his other hand capturing her other hand and he twisted them both behind her back so he could hold them in one fist, wrenching her shoulders and eliciting a small cry of surprise from her. \"But you like having your power taken from you too, don't you?\" \n\n\"Leonid, what\u2014\" she started before he brought his unoccupied hand to her mouth, silencing her with the palm of his hand against her pouting lips. \n\n\"You like to manipulate others, to connive and plot. But you love chaos as well, the possibility that some little plot might get out of control, that you might unleash something far beyond what you intended.\" There was a deep hatred that Leonid recognized inside himself. He had carried it for this woman for more than a century, buried beneath his own failings. That hatred clouded the beast inside, quieted it some so he was less tempted to lose all control. His grip tightened on her wrist, he brought his hand down her neck and palmed her round breast roughly through the silk. \n\n\"Leonid, stop!\" Imonesh cried as he squeezed her breast. Knowing that she could not feel the same level of physical pain as a mortal, as Anna, didn't stop him. He enjoyed the panic as wisps of coppery fire played along her skin, her power attempting to push him away. \n\nHe laughed in her face, his own black power seeping out and meeting hers to battle them down. He was older, and stronger, and angry. \"Are you scared, Imonesh dear? That you may have played with fire that burns?\" he lowered his hand between her legs, ignoring her attempts to stop him. He had a dark desire to punish her, to force her to bend to him. \"Or do you secretly like it? Did you seek me out to see if you couldn't prod the dragon again after I disappointed you the last time?\" He lowered his mouth, placing a threatening kiss on her cheek before latching his teeth onto her neck. \n\nImonesh cried out, twisting in his grip, her power flaring out at him as she struggled. \"Are you really so impotent?\" she breathed hard in her struggle, \"that this is how you try to display your power?\" But Leonid felt it\u2014her easy capitulation, the half-hearted struggle in her resistance. She wanted it, and that turned his stomach. \n\nHe released her skin, leaving an oozing bite mark. He met her flaming eyes with his cold ones. \"You wish you mattered enough.\" He dropped her arms and stepped back from her, consolidating his power around him as he drew himself up, aloof and detached. She looked stunned at the sudden change in his demeanor. Part of him still wanted to grab her and force her to the ground, to pour his hate into her. But this punishment was much worse. She could never tolerate indifference. ",
        "\"Do not pursue me again, Imonesh. I will not take kindly to it.\" \n\nHer face twisted in rage. \"I did not come after you!\" Her power moved around her like flames on her skin, shimmering with warm light. Leonid chose to ignore it. She gave him a cruel smile. \"You think I can be so casually pushed aside? You think that I don't know what I cost you and how much revenge you must wish on me? Do not feign indifference to me, Leo. I know you too well.\" \n\nLeonid gave her a mirthless laugh and turned from her. \"You may believe what you wish. I care not.\" She opened her mouth to reply but he left before she could utter a word, knowing how infuriating it would be for her to lose the opportunity. He moved to Anna's room at the inn and found her asleep, her face still puffy from her tears. More than anything he wanted to stay, to hold and heal her. But he had to return to The First Level now, and his sister had much explaining to do. \n\nThe games ended now. \n\nHe burst into her sitting room, much the way she had stormed in after he struck his deal with Anna, though he did not send any of her trinkets spilling off the walls. He was unsurprised to find her in the company of several of their cohort, none of whom looked bewildered at his manner. His cold mask firmly in place, he swore to himself that they would see no crack or fissure in his godly fa\u00e7ade, despite having recently occupied Anna's mind. He was done being toyed with and acting out in anger or passion would get him nothing but knowing glances exchanged between the more level-headed among them. \n\n\"Leonid!\" Emera exclaimed, her eyes wide. He looked at her intently, watching as she calculated the probability that she could continue to hide from him. \n\nIon, one of Emera's closest friends among the gods stepped forward. \"Leonid, it is good to see you again. Emera told us you might be partial to socializing again.\" Leonid did not turn towards the onyx god dressed in green robes but kept his gaze firmly on his nervous sister. \n\n\"Indeed? It seems she tells you a great many things.\" His voice was light but cold. He would not be deterred. \"Perhaps she will do me the same courtesy.\" Emera, to her credit, did not lower her gaze and instead met his accusations without evasions. \n\n\"Leonid, I would have told you,\" she began. But he was not interested. \n\n\"I'm sure your motives are intricate and no doubt based on many demonstrable claims but I am not interested. I want to know exactly what is going on, no games, no lies, no more manipulations.\" He stood firmly at the entrance to the room. Many others shifted nervously at the intensity of his objective. \n\n\"Perhaps it would be better if we spoke alone,\" Emera said, turning towards the room. The others nodded and murmured their goodbyes with varying velocities in order to quit the room. Only Ion remained. He brought his inky hand to Emera's elbow, clasping her there. \n\n\"I do not have to go,\" he offered. She slid her fingers over his and gave him a small smile. \n\n\"I think it would be better if I spoke to him alone.\" \n\nFor his part, Leonid moved around the pair to position himself on a low divan, waiting for her to join him. Ion looked over at Leonid's calm face and nodded once, disappearing through the door and closing it behind him. \n\nEmera turned back to Leonid and lowered herself gracefully onto the pillows across from him. She seemed collected but he could see her fingers sliding against one another as she prepared herself to speak. \n\n\"It is rather a complex issue,\" she began, not meeting his eyes. \n\n\"Simplify it,\" he said shortly, indifferent in her delay. \n\n\"There are many factors to take into consideration\u2014\" she began again but stopped, meeting his stony face and looking away again. \"This is much bigger than the stakes I initially presented to you.\" \n\n\"That much is obvious, sister.\" He said the word with a hint of irony. \n\nEmera took a breath, the sapphires on her shoulders glittered as her shoulders moved. He watched her bright blue lips part and close again. \"It appears that Imonesh is a much greater agent of chaos than we initially assumed. Her takeover was not simply to gain power, but to gain access and wait for the time to be right.\" Emera paused but he gave her nowhere to go except forward with her story. \"Imonesh was after the empire, though not as we understood it. She wanted control only of one particular location, which is why she let the empire crumble as soon as she was influencing the royal family. The reason she is so particular is because of the nature of this realm. The energies therein work via conduits, allowing humans to wield magic at varying degrees of intensity. It also siphons off in particular geographical locations, confluences of power as it were.\" She was not telling him anything he didn't know yet so he chose not respond when she hesitated again. \n\n\"We believe that she is using her influence to draw on a central confluence of power. In doing so it allows her not only to access a far greater amount of energy in the Realm of Men, but also to go so far as to merge it with other realms, effectively subordinating a great deal of power to her own will.\" \n\nLeonid did not let surprise or concern reach his features. \"To do that she would need to be using humans in that realm. As it stands, she is not capable of accessing any specific power from a given sphere, none of us can.\" \n\nEmera nodded. \"We believe that she has such humans in her service, how she has managed it without subverting The Balance, I do not know, but the war is a mere prelude, a distraction that somehow fits into her plan.\" \n\n\"How is it that no one has been able to investigate this?\" Leonid asked before answering it himself. \"Does it have something to do with her inexplicable ability to monitor her entire kingdom?\" \n\nEmera looked at him sharply. \"She came to you?\" \n\nHe nodded. \"You might have mentioned that to me earlier. I unknowingly put Anna in a fairly precarious position there.\" He saw his sister's concern. \"She is intact, and unknown to Imonesh.\" \n\n\"Leonid, I would have told you,\" Emera started again before he raised his hand, stopping her again. \n\n\"I do not care why you didn't tell me. I only ask that you hold nothing back now.\" \n\nEmera nodded. \"There is precious little left to tell. A decade ago things under the newest king began to unravel and a strange barrier shielded the capital city. Imonesh must have some mortal agent who is acting on her behalf. Ion became aware of it when one of his healers went missing some year ago and could not be found. When he tried to seek him out, Imonesh confronted him, laying claim on the territory around the kingdom and since then he has raised the suspicion amongst many of us. We are watching her but we cannot interfere.\" \n\n\"So you came to me, the only one left with a bound connection to the Realm of Men and spun a story of redeeming myself to you.\" \n\n\"Yes.\" \n\nHe didn't move his gaze but turned this over in his mind. The goddess in question has implied that he was missing the bigger picture, and he had to admit he had always assumed Imonesh's motives had been a rather banal usurpation. It appears he was mistaken. He knew, more than most, how tempting it was to seek out greater power. If she were finding a way to augment her own it would make more sense that she had gone to such lengths to protect it. But there was something Emera had not touched on. \n\n\"You knew that Anna would follow her family's killers to the capital.\" Her mouth drew into a tight line. Leonid kept his voice even as he thought through it aloud. \"You must have been depending on it if the true motive was to be able to get a thread of power past whatever Imonesh is planning. Which means that your anger in the bargain I struck with her must have been feigned.\" Blue lips parted to protest but he continued. \"You have watched me struggle with my own darkness, all this time allowing me to believe the stakes were personal, redemptive instead of political.\" \n\n\"It's not political!\" Emera said with no small amount of indignation. \"This is the very fabric of The Balance that she is meddling with.\" \n\n\"Allegedly.\" \n\n\"We have to be sure.\" \n\nLeonid shifted his eyes from his sister for the first time since entering the room. This meant Anna was walking into something much worse than a fight with ruthless soldiers. If Imonesh had the type of control that Emera was implying, then she would do any number of hideous things to the girl if she found out about her connection to Leonid, and he would not be able to stop her. \n\n\"And have we contemplated Anna's fate in all this or is she merely the unwitting mouse we are placing in the viper's den in the hopes that it bites?\" \n\nEmera looked him over. \"I had not anticipated that you would grow attached to the girl. I had thought you would have been aloof to her and allowed me to use your connection once she reached the capital so that I might be able to interfere, or at least gather evidence to bring Imonesh before The Five.\" \n\n\"And when were you planning on telling me my visits would soon bring about such dangerous scrutiny?\" \n\n\"I was going to tell you before but I did not know how you would take it. When I began this I knew nothing of your darkness, of the destruction I tempted to the very place I was trying to save. I have betrayed your confidence to no one and have had no council on this. I am sorry that I delayed too long.\" \n\nLeonid did not know if he was ready to hear her apology. \"If Imonesh has done all of this without upsetting The Balance or infringing on the rules of the sphere then we are the ones trespassing and she will be free to bring us before The Five.\" \n\nEmera tipped her chin in agreement. \"We are trying to be cautious.\" \n\nHe gave her a twisted smile. \"And you said it was not political.\" \n\n\"Leonid, please,\" she said mournfully, clearly she was still unsure as to how he was taking this all. It pleased him to know his thoughts were more obscure than they had been. \n\n\"And now? What plans do you have for the kingdom if we succeed in unseating the king? Are you planning on using Anna to secure the throne again?\" Leonid's anger boiled in his veins but he held on, just barely. He had been so distracted, so consumed with Anna that he had missed what an important player she might be in the larger scheme. \n\nEmera gave him a look. \"No, a general from the eastern kingdom who fights in the war for the king, General Rafia. He is sworn to me and will secure the kingdom and help dismantle whatever her mortal ward has been creating. He is a good man, Leonid. He seeks to restore the land.\" \n\nLeonid gave her a look but chose not to respond. She was prepared, but he wasn't. He had to at least try to keep Anna from this mess. If the things Emera described were true, then whatever revenge Anna was seeking would likely land her in the middle of this mess. Damn the rest of them and their suspicions and plots. If need be he would find a way around Imonesh to deal with it. Putting Anna in harm's way again was not an option. \n\n\"You will do something for me, sister,\" he said. \"I will speak to Anna before she enters the capital tomorrow and you will facilitate it by distracting Imonesh.\" \n\n\"But how...\" she began. \n\n\"If Imonesh is truly a spider with her feet on every thread, then trouble the web, sister. I do not need more than an hour.\" \n\n* \n\n\"Brother,\" Emera's voice rang out in his chambers. Leonid did not raise his head to see her face. Jakob had betrayed his condition to the goddess and she had come. He sat amongst the rubble of his room and furniture, his back to a semi intact wall at the far end from where she stood, open space beyond the holes he'd torn from the structure. He heard the room begin to right itself under Emera's commands; it would only be a matter of time before he destroyed it again. \n\nHer hands were cool against his. \"You should not be doing this, Leonid. You have to pull back from her.\" \n\nLeonid raised his head from his hands and looked at her with blackened eyes, no sign of the white or cobalt remained. \"I will not,\" he said shortly. The rage he was barely containing flickered across his skin in waves of power. Emera knelt before him, placing her hands on his knees when his arms vacated the post as he leaned back, placing his head against the newly repaired wall. \n\n\"You tried to dissuade her, it is not your fault. You nearly lost control when she defied you, almost betrayed your movements to Imonesh. This is why so few gods have ever placed their power in a mortal vessel. They are unpredictable and willful. You cannot blame yourself for this.\" \n\nLeonid laughed at the ceiling. \"I am not the only one to blame; do not pretend this is not what you wanted, Emera. She is not only within the capital but amongst the very agents of Imonesh's plans. We now know how Imonesh is planning to access the confluence and yet here we sit, trapped by the laws of the realm from interfering until my agreement with Anna is violated.\" \n\nEmera stood and swept her eyes over the chamber, making sure all was back in place before sitting in one of his century plant seats. \"Has Imonesh involved herself in Anna's fate?\" \n\nLeonid shook his head. \"She has no contact with the sorcerer. If she is indeed the mastermind of this plot, she works only through the king, no doubt to keep from upsetting the laws of The Five. And the king is only concerned with Anna's heritage, not her power.\" \n\nEmera nodded, her gaze intent on Leonid. \"What good can come of suffering with her? Are you not trying your control by refusing to separate from her?\" She took in the god's worn appearance, his skin darkened by magic rippling underneath it like some barely contained beast, a testament to how much he was holding back. She had seen his eyes go black before when he was using his powers or he was tempted to. But to witness his empty gaze as he fought to hold back was a different matter altogether, one she found it unnerving. \n\n\"If I leave her alone, then no amount of distraction will stop me from rampaging through the city to get her back. I would burn those who are responsible for her pain to ash and rip Imonesh's kingdom to pieces. And subsequently I would not be able to stop if I started. So no, it is better for no one if I leave her now.\" \n\nEmera chewed her lip as he closed his eyes. He could feel Anna's pain deep inside his own body. He felt the fear and exhaustion, the wearing of her spirits and physical horror at what was done to her form. It was relentless. And he suffered it still, not allowing himself to look away, knowing it was his fault. The realm meant less and less to him with each passing minute, every time the lash fell on her flesh, every fist that bruised her bones. \n\n\"Even if I were to stop them,\" his voice held the longing for being free to do just that, \"Imonesh would have the upper hand with The Five and she would use it to take Anna from me. And the things she would do to her would not equal a hundred times what these humans could dream up.\" He knew what gods might inflict to souls that they had rights to, so he must be cautious, and wait till a full violation had occurred. \n\n\"You must wait for just cause,\" Emera spoke what he already knew and it flared his anger. \n\n\"Do not come here to quote the rules to me. If your own eyes cannot convince you that I fully understand what it is that I have to do, then you are useless to me.\" His voice rolled out across the room, booming against the walls and reverberating the furniture. Emera's eyes went wide and she nodded silently though she did not leave him. \n\nThe pair sat in silence. Leonid closed his eyes, letting the distant torture wash through his own body, feeling on his skin what no being in his level could ever feel, each blow stoking the greater darkness inside him. The guilt ate at him but it also served to still his hand. A blast of magic reverberated along his thread of power; the sorcerer was trying again. Leonid slammed his hands through the floor, shards of glass crumbling off his skin. Emera jerked her head up in surprise. \n\nHe wanted to rage until the spell dissipated as he had before, but her presence reminded him how human his reactions were, so he got up and turned away. He couldn't face Emera, knowing that she could not understand it. The desire to physically hurt himself had never been so strong, because it was impossible. It was the fault that ate at him, the human quality of the emotion all of his own making that sat in his chest. For the first time he understood why Anna had taken that knife to her palm\u2014physical pain seemed like such an obvious way to concentrate and dispel the overwhelming emotions that chipped away at him. \n\nEmera came up behind him and brought her arms around his body, resting her cheek between his shoulder blades. \"I am sorry.\" Her voice was quiet and sincere. He took comfort in it. But still he drew away, walking towards the window and looking out onto the stretches of gardens beyond. \n\n\"You care for her.\" It was a statement this time, though still seeking verification from his lips. \n\n\"It is not so simple.\" She could not understand it. \n\n\"Explain it then,\" she said settling back into her seat. He was going to be stuck with her for the duration. \n\n\"This is not the time\u2014\" he started but reverberations of something much worse than pain began along his connection to Anna. \"Emera,\" he gasped, knowing what was coming. \"I cannot stop it.\" \n\nEmera was on her feet in an instant, her skin cracking with bolts of blue energy. His power began to surge out of him in great clouds of darkness. He tried in vain to gather it back again but the fury that had exploded inside of him when he felt Anna's violation would not be silenced. So he did the only thing he could, the method he'd always used, and redirected it. \n\nHis magic charged at Emera, seeking out a mark to destroy, something to devour. The room shuddered under its force. Leonid felt it pour off of him as if he were only a conduit for his own rage, manifested in this all-consuming storm. Emera fought it off, bringing her own magic up to protect herself from the initial attack then quickly wrapping it about his wayward power, pulling it back from where it threatened to force itself from the room. Leonid's fought hers valiantly but he clamped down on himself, slowing the outflow, fighting for control. It was not easy and he clenched his hands till he felt the bones would break. The violence he felt towards the man who had his Anna was more intense than any hatred or fury he'd experienced. \n\nEmera's magic cleared the room, chasing the wisps of black clouds until they were consumed. Leonid sank to the ground, propping his head against the wall and watching the bits of blue pursued what had moments before been so powerful. Emera waited till she was entirely done to speak. \n\n\"Perhaps this is why we have not been gifted with the intensity of emotion as the humans.\" \n\n\"That is putting it mildly, sister,\" he said, closing his eyes and resting his head. Leonid meant to continue but was suddenly distracted by Anna's laughter echoing from across the expanse of space. The quality of her emotions were mixed up, satisfaction and fear mingling together as she defied her tormentor. Emera was right. They had never been designed to feel this much, to be so effected as to risk losing control. He had felt anger, contentment, lust and even love as a god, but the physical, all consuming experience of a human's emotions were far beyond what beings at his level could succumb to. It was both exhilarating and debilitating. \n\nHer hesitation was appropriate, \"Is she suffering very terribly?\" \n\nLeonid could not answer that. To speak it would be to tempt his control once more. Anna was being hurt again, physically this time. But he found her mind more secure than it had been in the past days. She was still fighting. ",
        "\"I must ask you to stay with me. This is not over yet.\" \n\nHe heard her settle herself into the seat closest to him, her fingers nervously tapping the smooth leaves beneath them. \"Of course.\" \n\n* \n\nIt was unusual for humans to be removed from their spheres but there were some exceptions. Trespassing on a god's property was one of them. Leonid pulled the man through space, his power wrapped around his neck so he could feel just how the human struggled and writhed. The urge to rip the man's limbs off one at a time with excruciating slowness just to hear him scream was incredibly hard to ignore. But Leonid silenced it. There was a way of things that had to be maintained, and it would not do for the others to see him so altered. He met Emera and the others in the wide space outside the amphitheater; huge walls of glowing white stones and arching gates towered above them. \n\nLeonid shoved the naked man at their feet. The pathetic thing whimpered in fear, cowering when minutes before he had been so mighty. \n\n\"Here is Imonesh's king,\" Leonid spoke in a voice that would pain the mortal's ears. \"He can attest to her plan before The Five.\" \n\nEmera nodded, her eyes falling on the man huddled on the ground clasping his ears. \"We shall take him now, before Imonesh can stop the proceedings. You must initiate them,\" she said, stepping aside, allowing Leonid a clear path towards the main gate. With no outward signs of hesitation, Leonid strode in, the human compelled to follow him. Within the walls, Leonid made his way down to the open platform at the center of the structure. The Five did not exist on the same plane as he and the other gods did, but this was a point of contact, a meeting place for their overseers. \n\nHe strode out, unsurprised to see the large rows empty and dark. The Five were anything if not unpredictable. Time moved differently for them, as it did in this place between the two planes. It was possible to wait for what seemed like years before they came, only to emerge and find a moment had passed, sometimes a few moments were days in the lower spheres. He looked down at the human, his lip curled. He would make sure this wretch would never return to his realm. \n\nWhat's this? Back again? A voice drifted through his head. Leonid looked up and found five glowing figures above him. They refused to coalesce into clear shapes, each one shifting and swirling with lights and shadows, sometimes slowly, sometimes more quickly, as if they could not quite settle on a corporeal form. \n\n\"I am,\" Leonid spoke. \"I've brought before you a being of a lower sphere who has trespassed on my property there. I bid your permission to disperse his energies as punishment.\" \n\nLeonid, again in the affairs of men? Another one spoke. They had no discernible gender, their voices were not the physical waves of sound but rather like ideas that were occurring spontaneously in the mind of those that heard them, translated into language only out of the necessity to communicate. \n\nWasn't it a moment ago that you declared your intentions never to return? \n\nWhat was the property? \n\nWhy is this coming before us? \n\nThey spoke over each other, and yet distinctly. He spoke vaguely of the deal he had made with Anna and how the king had violated her. He thought it better to leave out the details though he did not think he'd be able to keep them secret for the entirety of the inquiry. It occurred to him, not for the first time, that their actions were fairly limited by the rules The Five imposed on them. \n\nAnd you brought him here? You are within your rights to handle the punishment of a lesser being. \n\n\"As I would have, but this man is tied to another goddess,\" another thing that prevented Leonid from ripping him apart. \"And I believe he has some information about violations to The Balance being committed in his kingdom.\" Leonid was careful not to say the violation was against the rules of The Five despite the fact that they saw themselves as the wardens of The Balance in the lower spheres and did not like to be challenged. \n\nThe swirling forms brightened, two of them moving in towards him. Indeed? A most interesting development. Send for the goddess, we will speak to her as well. \n\nLeonid nodded, moving beyond the stage to signal to Emera to go and find Imonesh. Something beat through his connection with Anna as he moved away from The Five. He shot Emera a knowing look, and she disappeared. Part of him wanted to follow her, to go and make sure Imonesh was nowhere near his girl but he was trapped there before The Five until they were done with him. \n\nWhen he reemerged, The Five were waiting, listening to the trembling king who told them as much as he knew about magic and Imonesh and her plans. She had been with him throughout his life, a watchful guardian and mentor. His parents had listened to her and once he became king he too had always gone to her for council. \n\nWhen a sorcerer came to him, looking for employment, Imonesh had suggested the collars, even helped build the spell by dictating scrolls that he would place in the sorcerer's hands. She promised it was an ultimate weapon, one that would rebuild the empire of old and allow him to rule in his rightful place as ruler over many lands. Leonid did not appreciate still being subjected to the man's shaky voice or his kneeling form, but the information was necessary. \n\nTell us, Leonid, one of them spoke up, leaving the fearful human alone for a moment, when we look into this violation, what will we find of your role in all this? It seems a pity you've found yourself mixed up again, especially after the last time. \n\nLeonid paused, considering. \"I have re-established and strengthened my connection with a human of the Realm of Men. In doing so, I have placed some of my power within her and in return gained access to the human's mind.\" As he expected, there was an eruption of objections. \n\nThis is unprecedented. \n\nGodly powers in a lower sphere could destroy it and its vessel. \n\nYou cannot breach the sacred barriers of the mind. \n\nYou put yourself and the realm at risk. \n\nThe Balance must be maintained. \n\nHe waited for them to settle. \"I know what I have done, but as you will no doubt find, I have done so within the parameters of what you have set forth for us. I am aware of the consequences involved in access to the human mind and I have taken steps to protect myself and the possibility of losing control.\" \n\nIt is not that simple, god of the First Level, you are in violation of a series of wards in place to separate the spheres, contain the energies where they lie. You and your ilk are designed to influence and to enhance, to create change. But you must remain separate, above and removed from those that you rule over. \n\nLeonid considered this, \"The Balance created us all, but you define our place in the universe. In placing us as wardens, gods, and rulers over the lesser beings of the lower spheres, you have assured that we are in constant contact with them, our very existence tied to how we wield that power, and control our own. But the restrictions you've mentioned are your attempts to understand what it was The Balance intended, to create a doctrine for our actions. \n\n\"We cannot know that The Balance was forever intending to keep us separated, and to proclaim that our canon is the only possibility would be to imply that we understood the intentions of a far greater power than we can conceivably fathom. I have not violated your rules to the extent that there were none to prevent what I accomplished. The existence of a god's power within a human, and a human's emotions within a god may trouble what you five initially intended for us, but, if you consider for a moment the possibility, it may not be the worst outcome for those of us who exists below you.\" \n\nThe silence that followed his proclamation was resounding, until it wasn't. \n\nNonsense. \n\nWe are the rightful agents of The Balance and you will heed our pronouncements. \n\nPretty words from a pretty god. \n\nA base attempt to question the power of this court, Leonid, for shame. \n\nThere was nothing else to say. They would not be able to sever his connection with Anna, though they would likely make it much harder for any god to do the same in the future. He had circumvented them, which may bode ill for him here, but the threat of disturbing the integrity of the universe below them would be much more pressing shortly. He turned as Imonesh arrived, just in time to refocus the conversation. The Five settled down, flashes of light traveling between them. Leonid recognized it as their personal form of communication. He hoped he had not over played this hand. \n\nThe goddess looked properly furious as her eyes went from the king huddled at the side of the stage, to Leonid's stance as the aggrieved, over towards the five shifting forms of the powers they answered to. \n\n\"What is my ward doing here?\" Imonesh asked, her voice steady. \n\n\"He has taken what is mine, and in so doing violated my assets in that sphere. It is within my rights to remove his energy for dispersal.\" \n\n\"And what, pray tell, did he violate?\" Imonesh was watching him closely, her eyes narrowed. \n\nWhile Leonid was back in control of his emotions, the question pained him. He kept his face calm even if it made him squirm on the inside. \"I made a bargain with a human in that realm. Her innocence was a defining part of it. Your king here raped her and in so doing violated the contract.\" \n\nImonesh's eyes widened in understanding. \"The human you played sex games with in the woods? You mean to tell me that her 'innocence' was maintained throughout the length of your contract?\" \n\nLeonid turned towards The Five. \"In violating her this man was the first to breach her womb. There is no question as to whether he took from me what was mine.\" He steadied himself, turned back to Imonesh. \"But the misuse of magic that she uncovered during her stay with your king was more interesting to the present council. Your charge has attested to the misuse of magical individuals to build a weapon.\" \n\nImonesh froze. \"I have no agents beyond the royal family, and cannot influence magical individuals. My connection to the kingdom was approved by this court after you tore apart sphere after sphere\u2014\" \n\nThe court has settled the matter this god brought before us and will release the human's energies from his mortal form. Goddess of the First Level, we are interested in your role with this man, his kingdom and the use of magic in violation of The Balance. \n\nImonesh looked properly worried now. Her king sobbed in the corner. \n\n\"Perhaps we should speak to Ion, who was the first to suspect a plot by Imonesh.\" Leonid offered. He had set the stage, from here onwards it was up to the other gods to make the case. \n\nGo and fetch the others who would accuse this goddess. \n\nLeonid nodded and moved to leave. \"Wait!\" Imonesh called out. \"This was a hearing about our subjects in the Realm of Men. The other gods add nothing to the issue at hand.\" \n\nThis meeting has moved past the violation of Leonid's human and now, with this new information, we will see to the plot against our laws that you have set in motion. \n\nLeonid stepped off the stage, leaving Imonesh to argue with The Five. He had set them off balance with his revelation and indelicate questioning of their doctrine. They would be seeking to display their authority now, and Imonesh was the perfect subject to make an example of. \n\nThe other gods were standing beyond the gate, bunched in a crowd that spread out as he approached. \n\n\"What's going on?\" Emera asked, her concern evident. \"Did they reject the violation of your contract?\" \n\n\"No,\" Leonid said a bit confused, \"They have accepted it and are questioning Imonesh as to her involvement with the misuse of energies in the sphere. They wish to speak to those of you who suspected her plot.\" The others looked relieved. \"How long have we been in there?\" Leonid asked, finding their reaction strange given the scant few minutes he had experienced with Imonesh. \n\n\"Hours, Leonid, we were beginning to worry,\" Ion spoke up. \n\nLeonid frowned and turned to extend his hand towards the gate, \"Well then let us not linger any longer.\" As the others moved past him, he reached out towards Anna, knowing she would not have remained idle after he left her. She was still deeply troubled. He tightened his jaw in frustration. He should be there, after all she had suffered, he should be there with her. He was painfully aware of the meager comfort he had offered her since that night she had trusted him, and all that had happened since only added to his failings towards her. \n\n\"What is it, brother?\" Emera called out to him, pausing before she entered the gate. \n\n\"I'm not sure.\" Leonid did not move towards her, something still felt wrong. Anna felt fragile to him, the way she had when she was trapped in the tower, when her mind was edging ever closer towards collapse. \n\nEmera held her hand out, \"Let us go and finish this with Imonesh. With any luck she may never trouble us again.\" \n\nLeonid's frown deepened but he moved towards the gate, the connection to Anna humming in his mind. He was about to take Emera's hand when he stopped, his eyes went wide as he finally understood what was wrong. \"I must go,\" he said and turned away. \n\n\"Leonid, don't be a fool! She is fine. We have the king and Imonesh; no one else can do her harm.\" \n\n\"You're wrong.\" And he was gone. \n\n*** \n\nHow did I do? Did I answer all your questions? Did I only give you more? Are you still with me despite the lack of naughty bits? Let me know..."
    ],
    "authorname": "AmoryParks",
    "tags": [
        "leonid",
        "anna",
        "god",
        "bargain",
        "soul",
        "magic",
        "power",
        "binding",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/a-tale-of-revenge-ch-12"
}