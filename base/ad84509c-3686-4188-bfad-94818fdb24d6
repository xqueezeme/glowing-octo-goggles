{
    "title": "There and Back Again Ch. 059-060",
    "pages": [
        "Chapter Fifty-Nine: Adjustment \n\n\"I'll stay, if that's okay.\" \n\n\"Only if you get a bedroll or find another couch and get more comfortable. I won't have you sitting up all night.\" \n\n\"Yes, mother.\" \n\nI stuck my tongue out again, and he laughed. \n\nMorrigan dropped in to say hello while Aedan was away gathering things. We chatted amiably for a few minutes, and then I managed to work my way around to thanking her for her help. She was embarrassed, I think, and while she looked pleased, her face got red and she left shortly after. I shook my head, wishing I could bring Flemeth back momentarily to slap her. No one should be raised like that. Foster care was better. \n\nI dozed for much of the afternoon, then slept all night thanks to another of Avernus' sleeping draughts. I planned to try to convince him to teach Wynne to make them before we left. In the morning, I felt better than I had in a long time. I felt refreshed, and luckily hadn't dreamt, so my energy level was quite high. Aedan, by contrast, looked tired. He'd refused to take a sleeping potion in case I needed him in the night, and I imagined the floor in my little room wasn't the best place to sleep. Between that and the worry I'd put him through, he definitely wasn't at his best. I hoped we could stay one more day, and try to get him rested before we headed out. \n\nI walked back down to the area where everyone else was, and was welcomed warmly. I spent the day sitting with each of my companions for a while, even Shale and Dariel. I was glad to get to know the elf a little bit better; he seemed like just a nice guy, who had also grown up in less than ideal circumstances. It started me thinking, and I realised - Aedan and Gorim might have been the only two of my companions with a good childhood. Even Levi had been telling stories of a drunken, embittered father who could never get past the fact that the Drydens used to be nobles. Shale didn't remember hers, of course, and Sten thought his was fine, but I knew he'd missed out on something too. \n\nMy chat with Gorim was enlightening. Of course, we ended up talking about Riana. He missed her, it was obvious. I think he was somewhat surprised by just how much. When I apologised, he waved me off. \n\n\"It was my choice, and hers. Not yours. And honestly...it wasn't going to work out, long-term. She was eventually going to get sick of me dreaming about Sereda, even if they were nightmares of her dying in the Deep Roads, and I was going to resent her for keeping me from knowing what happened. My guilt was eating us both alive. Of course, knowing it would have to end doesn't make it any easier.\" \n\nI glanced over at Alistair, and then away. \"No, it doesn't.\" I cleared my throat. \"So tell me about Sereda.\" \n\n\"What do you want to know?\" \n\n\"Well, what sort of person is she? I know Trian - and Harrowmont - were all about tradition. Bhelen is much more for trying to modernise, but at the cost of being a sleaze. Where did Sereda stand?\" \n\nHe thought. \"She was the middle child in disposition as well as birth order, I think. She recognised that things in Orzammar needed to change or we were going to be in trouble, but she also didn't think that just allowing the casteless to work and surfacers to return home was going to make sense. Most of the casteless can't even read, and fewer can fight - what sort of work would they be suitable for? What about the criminals? And the current members of each caste would never be okay with a brand stealing their business. It would start a civil war. She thought that there needed to be a plan in place to educate and train the casteless, give them some skills first and then allow them to work. And she thought that any child of a cross-caste union should be enough to elevate the caste of the lower-caste parent, not just a same sex child. She thought Orzammar needed a big boost to its birth rate, and encouraging breeding through trying to improve one's caste has always worked in Orzammar, but this would open it up more. She even talked about incentives for cross-caste marriage. Like paying a dowry for casteless women, for example.\" \n\nI thought about it, and it made sense. In Earth history, whenever slaves were freed, there was always an increase in social disorder for a while, because there were often more slaves than masters, and that many uneducated, unskilled citizens with nothing to do could wreak havoc on a society and an economy. Someone needed to feed the former slaves, and someone still needed to do the work, and it took a few decades for that to work itself out. If the dwarves did it more slowly, it might improve things. It was worth a shot, anyway. Bhelen's plan to just 'free the casteless' had never made sense to me. \n\n\"So, say she had to choose between Bhelen and Harrowmont, who would she pick?\" \n\nHe didn't even hesitate. \"Bhelen.\" \n\n\"Really? But...he killed Trian, and maybe even Endrin; he had her exiled. Would it be just the blood she'd want to keep going? Maintain the Aeducan name?\" \n\n\"Actually, she'd have been reluctant to admit it, but she'd have been proud of him getting her exiled. I'd never have thought Bhelen capable of it. But dwarven politics are cut-throat, and she knew that - she'd have taken his betrayal as a sign he was ready to take part in the game. She'd be less understanding about Trian and Endrin, but...if the choice was stagnation, or Bhelen? She'd take Bhelen.\" His expression was decidedly sour. \n\n\"And you?\" \n\n\"Harrowmont. I understand why Sereda would feel that way, but if our King has no honour, then what exactly would be the point? She would make fun of me for that, I know. Honour is less than useless if your society dies out, I suppose.\" \n\n\"I'd have to agree with her there.\" I thought I just might like Sereda, if we ever found her. \n\n** \n\nMorrigan had taken to making scathing remarks at Alistair, reminiscent of the game, and after the fiftieth time she'd implied he was stupid, I'd had enough. He wasn't even trying to defend himself, and it was too pathetic to listen to anymore. I finally had to drag her aside and talk about it. \n\n\"Look, I'm flattered that you're angry with him on my behalf. But really, please, just knock it off. He's not stupid. Leave him be.\" \n\n\"What gives you the idea he is not? He brought this upon himself.\" \n\n\"Like I said. I'm pleased we're friends enough for you to be so clearly on my side. I'm angry with him too. But being nasty isn't helping. It makes me want to defend him, and then I realise I don't want to defend him, and then I get all tied up in knots thinking about it. I'd rather not think about it, if it's all the same to you. So please. Give it a rest.\" \n\nShe sighed. \"Fine. I'll just go back to avoiding him.\" Her expression said she was contemplating setting him on fire. \n\n\"I think avoidance would work, yes.\" \n\n** \n\nLeliana, Zev, and Wynne were far more interested in talking about me and my former love life, than anything else. I didn't linger long - it hurt too much, and I had no desire to dredge it all up. I assured them all that I was fine. \n\nIt was a lie, and we all knew it. \n\nI couldn't mention that he'd spent the other night holding me. I still didn't know what to think of that. Was it guilt? Did he feel responsible for me Joining? Morrigan had blamed him for me going through with it. We'd avoided talking since then, and I had no plans to change that anytime soon. I just didn't not know how to handle the storm of emotions inside me. Between anger, and hurt, and sadness, and loneliness, and guilt I didn't even know where to start. Avoiding him just seemed better. \n\nAedan had gone back to bed, and everyone else seemed to be trying to pretend nothing had happened, and that we weren't all acting strangely. I was oddly grateful. \n\nTomas informed us of a change of plans. He decided that we would leave the following day, but instead of heading to Orzammar directly, we were making a side trip to Redcliffe first. He thought that it would only add about two weeks to our travel, including a few days spent in Redcliffe, if we were willing to hike cross-country down to the Circle Tower. From there we could take a boat across Lake Calenhad to Redcliffe. He'd coerced Avernus into giving him much of the Keep's supply of Archdemon blood, and had him write down the ritual required to assemble the new and improved potion. He wanted to swing back and pick up Solona, as well as recruit Jowan. I almost giggled as everyone looked to Aedan for confirmation before agreeing. Even Tomas had a wry smile, and I winked at him when he looked at me. \n\nHe again asked Dariel to think about whether he'd like to Join, and gave him until we arrived in Redcliffe to decide. Dariel asked some pointed questions, which Tomas refused to answer; I still thought keeping so many secrets was a poor recruiting strategy. Once we'd proven the decreased death rate with the new Joining formula, I planned to try to talk Tomas into being more open about it. The only secret needed would be that a Grey Warden would perish to slay the Archdemon - but I hoped to convince him to at least tell Cailan - or rather, Theron that. We didn't need the idiot looking for glory again trying to slay the Archdemon personally. \n\nThe evening was quiet and we all turned in early. I slept alone, and actually managed to sleep. In the morning, after packing up, we bid goodbye to Avernus and left the Keep. Levi was coming with us to the base of the pass, then planned to get word to his family and bring them up to start getting things organised. Aedan had surreptitiously slipped the man some money to find a couple of extra servants and some furnishings so things would be more comfortable the next time we returned. I would be happy if they just dusted the place. \n\nWithout mentioning it, Alistair took my pack like he used to, and just walked off. I stared after him for a few moments, uncertain what to think. But then it occurred to me: guilt. He figured I wouldn't be able to keep up if I had to carry my pack, and felt guilty that our break-up would slow the group down. I followed behind, feeling a little more despondent, if anything. \n\nThe hike down the pass was interesting - it led through a bunch of tunnels, like Levi had said, and it was a bit of a rat's maze. No wonder the demon had to help Levi find the way. The group had the foresight to make a mark at every intersection with some charcoal, but it was clear a more permanent way of marking the correct path would be needed. \n\nIt was cold, which was not a surprise, and I found myself wearing almost every piece of clothing that I owned to try to stay warm. I didn't have gloves (other than the leather armour, which didn't help much) or a toque, so I pulled my hood up over my helmeted head and wrapped my hands in the excess fabric of my cloak. I'm glad I grew up in a cold climate. Zev looks miserable. The poor elf was huddled in all of the clothes he owned too, and couldn't seem to stop shivering. Sten looked entirely unaffected, though I figured that was mostly bravado. Everyone else was more like me - not happy, but managing. \n\nThe further we got from Soldier's Peak, the warmer it got; due to altitude, I assumed. By the time we met Bodahn and bid Levi goodbye, we were all back to normal clothing. Everyone in game mentions Ferelden being an especially cold country, but it hasn't been that bad so far. Maybe I'm just used to it. Canada isn't exactly tropical. I had been told we were coming in to the fall season, so it was going to get colder, and likely soon. I resolved to find somewhere to buy a toque. And wool gloves. \n\nThere was a noticeable difference for me in how difficult it was to keep up with everyone. I hadn't realised it before, but everyone had slowed down a bit for me, and they didn't need to anymore. I felt more and more convinced that the Joining had worked, but that something the architect had done to me prevented other Grey Wardens from sensing me. I wondered if the darkspawn would be able to. We wouldn't know until we met up with some, and I was also interested to see if my new stat boosts (I cringed, thinking about it in game terms, but couldn't come up with a better term) would make me a better fighter, too. \n\nAt camp, when we finally stopped, I asked Aedan to spar with me like he used to. It had been quite a while since I'd trained, and I needed to get back into it. To my surprise, Tomas offered instead. He stood and grabbed a small shield without even a sword, and then dragged me off to an unused area with decent footing. \n\nI had no idea how to fight someone with a shield, it occurred to me. Aedan and Zev had taught me how to counter the things another dual-wielder would do, but I had never fought someone with a shield. At first, Tomas just blocked and watched me. I tried all the things I would normally use against Aedan, but all he had to do was lift his left arm, and I'd jab my dagger against a shield. I did get in one decent throw - like Wayne had taught me, no one ever expected it - but then he learned to avoid that, and I was done. \n\nAfter that, he began giving me instructions as I struck. He had me trying to occasionally spin or drop low, both of which mostly resulted in me falling over, but he was teaching me to feint. I had to make him think I'd hit him somewhere, but then spin and hit somewhere else instead. And he knocked me onto my ass with his shield over, and over, and over. He was much less forgiving than Aedan. \n\nAfter a bit, Aedan came over and tried to stop us. His jaw was clenched, and I knew he was angry at Tomas for being too hard on me. But if I was going to be a Grey Warden, even if in secret, I was damn well going to try to act like one. And that meant knowing how to fight. Being coddled wasn't going to teach me what I needed to know. \n\nI told Aedan to piss off. I am done being feeble. \n\nWhen Tomas finally quit kicking my ass, I was sore. Not like the pain after the Joining, or when the dragon roasted me alive, but certainly worse than anything else I had experienced. I limped over to the fire, and when I sat to eat, Wynne began casting without even asking first. After the pain of the first bruises eased off, I didn't have the heart to object, and just sighed in relief. And I didn't pass out, for which I was grateful. I gave the motherly mage a hug and kissed her cheek, and she chuckled at me. I wolfed down my supper like I hadn't eaten in a week, triggering a cheeky grin from all three Wardens; I rolled my eyes. \n\nAfter supper, Aedan, clearly still furious, motioned to Tomas and dragged him off into the bush a ways. Alistair got up and joined them, without being invited. I waited a few minutes, torn, but I knew damn well they were talking about me. I finally stood and followed their tracks. \n\nI hadn't intended to eavesdrop; my plan was to join in the conversation, but when I heard the first angry words hissed under Aedan's breath, I froze. \n\n\"...don't know what you thought you were doing, but you're going to go back there and apologise, and tomorrow when she asks, you will let me work with her.\" \n\nI'd never heard Aedan use such a haughty tone before, to anyone. I was appalled. \n\nTomas replied, his voice soft, and I had to edge closer to hear it. \"...said she would be coming with us into the Deep Roads. Unless you relish seeing her as a broodmother in your nightmares for the rest of your fifty years as a Warden, she needs to be able to at least defend herself.\" \n\nAedan released a string of largely unintelligible swear words. \"I was teaching her that.\" It was a whine. I almost laughed; I would have, if I hadn't been so annoyed at Aedan. \n\nAlistair's retort was also quiet. \"Aedan, you did teach her. But you know this - if the person you're sparring with isn't going to hit you, there's no impetus to get any better. I'm willing to bet whoever trained you hit you. A lot. How many times did you have to be healed after sparring? The templars training me kept poultices in every pocket. I'm not saying we have to beat her, but she's a Grey Warden now. She needs to be trained, and the trainer needs to be able to hit her.\" \n\n\"You're so good at hurting her, Alistair, you should train with her.\" I could practically hear Tomas flinch, but Alistair didn't say a word. \"What the hell, anyway? You don't want her in the fighting any more than I do.\" \n\n\"I don't, but it's not my choice to make, Aedan. Nor yours. She was wrong about me not loving her, though I have been an ass and totally self-centred. I am learning that if I ever want her back, I need to pay attention and try to understand her better, not repeat the same mistake of thinking every decision she makes is about me. What you're really angry about is her taking the Joining. Maybe it's time you decide to respect her decisions and stop trying to be her father. She's a big girl. Let her live her own life, for once, would you?\" \n\nI eased away, then, not eager to be caught eavesdropping and too stunned by what I'd heard to know how to react. I wandered, purposelessly, through the brush around camp, out of sight but within yelling distance. Alistair was trying to make it up to me? I wasn't sure that could ever work, but the fact that he even wanted to was a surprise. I could still see the disgust on his face when he called me a monster. I just couldn't reconcile the two facts. And he defended me against Aedan, when even I knew Alistair would also rather I hadn't Joined, and wasn't going to be fighting. \n\nI finally headed back to camp as the daylight started to wane, no less confused than before. I found everyone polishing armour, sharpening blades, and all the other frequent maintenance required to keep a fighting force efficient. Aedan and Alistair were nowhere to be seen. I was exhausted after all the fighting and the healing, and I wanted my bedroll. When I went looking for canvas to set up my own tent, Leliana approached me. \n\n\"You already have a tent set up, Sierra.\" She pointed at a small tent a little ways from the fire. \n\n\"Oh, thanks, Leli. That was sweet of you to think of me.\" I gave her a quick hug. \n\n\"I appreciate the gratitude, but it's misplaced. Look again, yes?\" \n\nI looked back at the tent, uncertain what she was trying to say. I stared at the smooth canvas, the single central pole, which instead of standing straight upright...canted just a little bit towards the front. Alistair. Son of a... \n\n\"Maker's breath. I don't...I can't even...\" I sighed, rubbing my face. It's already set up, bet my bedroll is even laid out. I might as well use it. \"I need sleep. Goodnight, Leli.\" \n\nShe grinned at me and nodded. I crawled into the little tent, dropped onto my bedroll, and fell asleep before my head hit the pillow. \n\nIn the morning, by the time I was ready to go, breakfast was already cooked. I headed to the fire to eat before packing my things, but before I'd taken two mouthfuls of porridge, Alistair was packing my stuff, had my tent disassembled, and tucked my things with his own packs. Bodahn was going the long way around Lake Calenhad, and we planned to meet him on the highway between Redcliffe and Orzammar later; I was sad not only for the lack of the cheerful dwarf's company, but also his cart to carry all of our things. \n\nWhen we had all finished eating and bid Bodahn goodbye, Alistair picked up my things, once again, and walked away. I growled in frustration, but dealing with it meant talking to him, and I was far too confused for that. Too angry, still, if I'm honest with myself. We proceeded quite quickly through the northern section of the Bannorn, making good time on the flatter, less forested ground. The group was subdued, hardly anyone speaking, and when they did, it was in whispers. \n\nWhen I asked Aedan about it, he shrugged. \"What did you expect?\" \n",
        "I was confused. It must have been obvious by my expression. \n\n\"Sierra, you're the bubbly positive one. You and Alistair always kept everyone laughing. Like this...well, you're not exactly bubbly right now. It rubs off on the rest of us.\" \n\nI looked down, feeling guilty. \"I'm sorry.\" \n\n\"It's not your job to always be that person, Sierra. We will adjust. Stop blaming yourself.\" \n\nAfter that I paid attention more, noting how everyone kept accidentally talking about things and interrupting themselves if they bordered on anything related to Alistair and me. I sighed, unsure how to fix it. I just couldn't be that happy, carefree person I had been. Alistair, on the other hand, was leading the group alone, staying ahead of everyone, never looking back. His shoulders were stiff, his posture defeated. Tears threatened to spill again, unexpectedly, and I couldn't be sure if they were due to grief or guilt. I wiped them away, and turned away to walk alone again for a while. \n\nI tried, later, to drag Aedan into a discussion about my training with Tomas, but he just refused to talk about it. Frustrated, I let it go. \n\nChapter Sixty: Surprises \n\nWe finally stopped for supper, and I immediately claimed Tomas for more sparring. This time, Aedan watched from the sideline, mouth closed in a thin line, expression disapproving, but at least he didn't try to stop us. After a few minutes Zevran and Alistair joined him, but they instead tried to be helpful, shouting out instructions and suggestions. When I had a hard time understanding what they were trying to say, Zev would demonstrate with his daggers against Alistair with a shield. I was still embarrassed to be beaten that badly by Tomas when he wasn't even using a sword, but I was getting better at dodging the shield bashes. I wasn't quite as bruised, when we finished, though I still couldn't deny the relief I felt when Wynne healed me. \n\nWhen I looked around at supper, I noted that my tent had again been set up for me, still with that forward cant that indicated the identity of my benefactor. I sighed. I knew I should have confronted him, but I just didn't want to talk about it. I finished supper, excused myself, and crawled into my tent early, heart aching. \n\nI found my bedroll set out, my things carefully tucked into my pack, Alistair's cloak rolled up to make a pillow. On top of my bedroll was a sheet of parchment, loosely rolled, and my phone. \n\nI put my phone aside, and decided to change before looking at the parchment. Once in a loose fitting tunic and pants, I crawled into my bedroll. It was dark - we had stolen a couple of the arcane lamps from Soldier's Peak, but not enough for everyone to have one in their tent. I rolled to the side, hoping the firelight would be enough to read by, but finally ended up using the light from my phone. \n\nSierra, \n\nI know that nothing I say can ever express how sorry I am, for everything. I'm an idiot, and I've always known that, but I never thought even I would be stupid enough to hurt you like that. I understand if you can't forgive me, but I have to try. Because as much as you might not want me to be, anymore, I am yours even if you won't be mine. You said you hoped that when I met someone else she'd have better luck, but the fact is that I won't meet anyone else. I don't want to. \n\nI want you to be happy, whatever it takes. I would like to be the one who can help you with that, but I will understand if you find someone else. I will still be here, helping in any way I can, even if that's just setting up your tent or carrying your pack, hoping to prove myself eventually. \n\nI will say that if you do find someone else, I hope it won't be my brother. I cannot stand to think of the way he would treat you, and I'd be forced to kill him if he betrayed you. \n\nAnyway, when Leliana was listening to music earlier, I heard a song on that little machine of yours that seemed appropriate. It's all ready to go. \n\nI love you, always. \n\nForever yours, \n\nAlistair \n\nI wiped away the tears that fell while I read, a couple of them splashing onto the parchment. I read it several times, before finally turning my attention to the phone. When I turned it on, I just hit play without looking at what he'd chosen. A voice came blaring out of the speakers, and I rushed to turn down the volume so no one would hear what I was listening to. I realised after a few seconds that the song was \"I'm Sorry\" by Breeze-E, something that an online acquaintance had sent to me after discovering it on Youtube. \n\n<p align=\"center\">Memories I just can't erase, I'll do anything to see your face \nWhat if I said that I believed in you and me \nA part of me that I just can't replace, I'm lost and I was gone without a trace \nI just find it hard to breathe without you near \n... </p>\n\nAfter listening to the rest of the heart wrenching lyrics, I turned the music off and collapsed on my bedroll, bawling my eyes out. He still thought he loved me, but I didn't really believe him; still, just the thought of it broke my heart all over again. \n\nI slept poorly, crying on and off as I tried to doze. When I finally gave up on sleep, it was dawn, and weak light was filtering in through the canvas. I changed into my armour and crawled out of my tent. \n\nTomas was up, adding wood to the fire so he could start breakfast; I settled down beside him, and he smiled sadly at me. \n\n\"You alright?\" \n\n\"No, but I will be. Eventually.\" \n\n\"Of that, I never had any doubt.\" \n\nI grinned, and helped put the porridge on the fire. The smoke was rather thick, as all the wood was damp; I guessed it had rained at some point in the night while I fitfully slept. \n\n\"Did you get some sleep, Tomas?\" \n\n\"I did. Alistair was on first watch. I took Aedan's as well as mine. I think he could benefit from some time and rest.\" \n\n\"It's going to be weird when we can all use your real name again. I'm more used to you as Tomas than...you know.\" \n\nHe smiled. \"You think it will be strange for you - I almost don't remember my real name.\" \n\n\"Tomas...I want to start helping with watch. My stamina is better now, I should be able to help out.\" \n\nHe examined me for a few moments, and finally nodded. \"Once we've established that you can sense darkspawn, I agree. Can you wait until we know for sure? I don't want us surprised if it turns out you can't.\" \n\n\"How long does that usually take?\" \n\n\"A few days after the Joining to sense them at all, but years to get good at it. The biggest thing is to find some darkspawn for you to sense. There haven't been any up in these parts yet.\" \n\n\"Shouldn't I be able to sense you?\" I concentrated, on what I wasn't sure, but I could feel nothing unusual. \n\n\"Not yet. The taint isn't as strong in a Warden as in a darkspawn. That will come with time.\" \n\nI agreed to wait. Once the breakfast was made, I gobbled down a bowl, cleaned it out, then wandered out of camp to do my business out of sight of any of my companions. After that, I packed up my tent, and was waiting when everyone else was ready. I decided to take the lead, for once, and gathering my stuff, I took off at a brisk walk heading to the south-west, as per my compass. Tomas and Aedan always seemed to just know what direction we were heading, but I was loving the little magnetic pocket compass. \n\nI hadn't gotten very far when Alistair caught up to me, snagging one of the packs I carried and slinging it onto his own shoulder. He didn't even speak; he just dropped back, obviously allowing my avoidance, and I let him go. At least he'd left me with one bag to carry. I balanced it across both shoulders and carried on. \n\nI gave the phone to Leli when she asked; it was still almost fully charged, and we hadn't touched the new charger I'd brought with me the last time. She gave me a soft smile when she saw what song had been playing, and I wondered if she knew that Alistair had left it for me. She walked with me for a while, discussing my music preferences; I had everything from country music to rap to classical to Broadway show tunes. A lot of my music was pop from the 80s and 90s; when I first began collecting music, before MP3 players came out, I could only afford second-hand CDs. I developed a taste for retro music that never left. Even the recent music that I liked was often stylistically more 'retro'. \n\nShe was shocked that I knew so many songs. In Thedas, I learned, most people knew a handful of folk songs unless they were actual musicians. But having free radio, back on Earth, I knew the words and the tune to hundreds of songs, even if I couldn't exactly perform them with any skill. Leli started testing me, and no matter what song she chose off my phone, I could at least sing a little. She shook her head, amazed. \n\nThe rest of the day was the usual; walking, and more walking. A few of my companions walked with me for a while, and while I was appreciative of their company, I wasn't, as Aedan put it, bubbly. It seemed to make everyone uncomfortable; no one knew what to say. So after a while, each would drop back again, leaving me alone with my thoughts. \n\nI could feel Alistair staring at my back, and that made me uncomfortable. Without talking to him, however, I couldn't tell him to stop, so I put up with it. I knew eventually I was going to have to end my childish avoidance, but I wasn't ready. Between my residual anger, my heartache, my loneliness, and the confusion from my accidental eavesdropping and his letter, I just wasn't ready to talk to him. About anything. \n\nAfter sparring with Tomas again, I curled up next to Aedan by the fire. I didn't need healing this time; I'd gotten better at avoiding Tomas' shield, though I'd still failed to land a hit. Aedan put his arm around me, and I felt better than I had in a while. I'd been afraid he would be angry with me for doing what he didn't want me to - sparring, putting myself in harm's way even though he knew Tomas wouldn't really hurt me. I enjoyed the contact, and when dinner was served, and he took his arm back, I kissed his cheek. He grinned at me in return. \n\nAfter supper, I wandered out of the camp for a little while, not wanting everyone to feel awkward with me sitting there quietly. I found a little clearing with a view of the sunset, and leaned against a tree trunk to watch. I stiffened when I heard the rustle of someone approaching, but relaxed when I saw it was just Wynne. She stopped beside me and watched the sunset silently for a few moments, then settled down in the long grass expectantly. \n\nI sighed and slid down the tree trunk to sit facing her. \"I suppose this is where you tell me it's a good thing that we're not together anymore.\" \n\nShe examined my face briefly, before answering calmly. \"No, it isn't, child. Quite the opposite, in fact. I admit I was nervous, at first, about Aedan's relationship and yours with Alistair, but I also admit that you were right. I changed my mind. You and Alistair are good for each other. You helped him be confident, trust himself and his abilities, and try to make his own decisions. He helped you open up, and relax, and find some self-worth. I'm very sorry that you are both so unhappy. He made a mistake, one he regrets, and he is paying for it. I hope that one day you can forgive him for that. It would be a shame for you two to be apart forever because of a stupid lapse in judgement and self-confidence.\" \n\nI was shocked - so far Wynne was the only one who was hoping for us to get back together, and she was the one I figured would be the most pleased about the split. My expression must have been disbelieving, because she chuckled. \n\n\"I'm not so old that I cannot admit my mistakes, but I am old enough to be a bit sentimental. Besides, if even your Commander approves of his Wardens having relationships, how could I not?\" \n\n\"Thanks Wynne. I don't...I'm not sure what will happen. He says he wants to be with me. He's apologised. I just don't know if I can forgive him. I don't know if I'll ever be able to look at him and not see that expression of disgust on his face. He truly believed, even if only for a day, that I could betray him, that I might be using him for personal gain. I don't know how to get past that.\" \n\n\"Perhaps, dear, you could start by taking him off the pedestal you've had him on since you arrived? You loved him as a character in a performance. He isn't that character. He's a real person, with talents and flaws all mixed together. People make mistakes. Characters don't. Perhaps you need to start thinking of him as human, not some infallible creation, and it will all come together for you.\" \n\nShe patted my shoulder, rose gracefully, and left me to think. \n\nWhen I stumbled back into camp an hour later, I found Alistair leaning against a tree near where I'd been sitting. He had respected my privacy, but remained close enough to hear if I needed anything. He didn't look up at me as I walked by, just let me pass and then headed into his own tent. Which, I noticed, was a distance away from everyone else's, but close enough to mine that he'd be able to hear me in the night. When I thought about it, I realised it had been that way the last few nights. Which means he's been hearing me cry myself to sleep. Marvellous. \n\nI bid Aedan, who was on watch, a goodnight, and crawled into my own tent. I managed to keep from crying, though Wynne's words were ringing through my head as I tried to sleep. He's only human. But he was supposed to trust me. I fell asleep, fully dressed, still confused. \n\nI woke with a scream from a dream of darkspawn and death, only to hear shouting and the clanging of metal; I realised this must have been the shriek ambush I'd expected earlier. I grabbed my daggers and crawled out of my tent. In the dim light of the pre-dawn morning, I could see dark figures weaving through the camp. Alistair was holding off several with his shield, and Aedan and Tomas fought back-to-back; everyone else seemed only to be a target if they got in the way between darkspawn and Warden. And the 'spawn were completely ignoring me. \n\nI took advantage of their lack of awareness, and sank my daggers into the flank of a shriek that was heading towards Leli, the arrows protruding from it making it obvious how the bard had gotten its attention. I pushed the corpse off my blades and turned towards the next one, which was trying to cut Alistair down with its wicked claws. It also did not see me coming, and I got the chance to backstab it and its friend, distracting them enough that Alistair decapitated one and cut deeply into the neck of the other. He nodded to me briefly, then swung around to parry another shriek's claws. \n\nBy that time, the fight was winding down; I helped Tomas cut down two more, a shriek and a genlock, when I realised that I could feel something coming. It was similar to the sensation when you could tell someone was watching you, but creepier. And while the shrieks and genlocks had all had a little bit of it, this sensation was bigger. I only knew of one thing that would fit the description; one glance at Tomas' wide-eyed expression, and I knew I was right. \n\n\"Ogre!\" I screamed. I didn't get a chance to do much else, as Tomas shoved me aside, hard, and then turned to face the monster as it lumbered into the camp. I landed in Zev's arms in a pile, and the assassin held me down. Alistair stepped up beside Tomas, and as I watched, Aedan disappeared into the shadows. Before I even had a chance to stand, our mages had slowed the ogre down, Leliana had put an arrow in its eye, Alistair had held his shield up through an assault that I thought would have left a crater in the ground, and then Tomas and my brother were swarming it, strategically cutting tendons and bleeding it with slices into major arteries. It was a war of attrition, but it was obviously one the wardens were going to win. Everyone else stayed back, trying to avoid the arterial spray spreading in a wide circle around the beast. Finally, with one last roar, the ogre sank to the ground and didn't move again. \n\nIt was suddenly deathly quiet, everyone listening frantically to determine if there were further ambushers; everyone except me and the other Wardens, that was. I could clearly feel no further taint nearby, so presumably the others felt the same; when I looked, Tomas was wiping black ichor off his sword, and Alistair had already begun piling bodies near the ogre. Aedan came over and hugged me, smiling gratefully at Zev as he handed me off. I was briefly irritated - I knew damn well I wasn't capable of fighting an ogre, I wouldn't have jumped into that fray, and it bothered me that everyone assumed I needed someone to hold me back. I scowled at Aedan, and he flushed slightly, obviously aware of how condescending he was being. \n\nTomas stayed out of it, though I sent him a nasty glare for pushing me down; Alistair, on the other hand, looked at the corpses I'd helped him create, murmured \"Nice job!\" under his breath, and otherwise left me alone. I was confused and impressed and just slightly sad all at once, and I had no idea what to do with that insane swirl of emotion, so I suppressed it ruthlessly. \n\nWe all packed up our camp, as no one wanting to stay near the site of the ambush to try and sleep more; Morrigan fired the pile of darkspawn, and we were on our way. \n\nAs we walked in the dim light, we all discussed the ambush. \n\n\"Did...did you have a nightmare too?\" Alistair asked. Aedan nodded, as did I. I was unsurprised to learn that Tomas hadn't been sleeping - I doubted he'd closed his eyes since we'd left Soldier's Peak. \n\n\"Was the Archdemon...looking at us?\" Aedan sounded freaked, and I couldn't blame him. \n\n\"Yes. At least, the performance implied as much, and it sure as hell felt like that.\" I tried to make it sound normal; I failed, I was fairly sure. \n\n\"Sierra, I thought that we were going to be ambushed by shrieks. Not ogres and genlocks as well.\" Tomas sounded irritated, like I'd kept the information to myself for some reason. \n\n\"Hey, don't look at me. In the performance, it was only shrieks.\" \n\n\"Maker, how did an ogre even get here fast enough to ambush us like that?\" Aedan was a little more matter-of-fact about the little details than the big picture. I could understand that. The big picture is bloody frightening. \n\nAlistair replied wryly, \"I'm just going to assume the ogre happened to be nearby, and so the Archdemon took advantage of that. Otherwise, I'm never going to sleep again. Like, ever.\" \n\nI couldn't have agreed more. A hysterical giggle escaped me without my permission, and Alistair smirked at me briefly, before dropping back to walk beside Gorim. Tomas looked from him to me, frowning slightly. I just shrugged and avoided eye contact. \n\nIt was a long day of walking after such an early start; Tomas figured we were probably a little more than two days from the docks for the Circle Tower. We skipped sparring for an evening, everyone tired from the ambush and early start. I put up my own tent, feeling ridiculous and somehow defiant, especially ridiculous when it sagged a bit. I negotiated with Tomas about sitting watch - clearly, I could sense darkspawn - and he gave me the last one of the night. \n\nSomething had been bothering me for a few days about going back to the Tower, and I finally decided I needed to know. \n\nWhile we were sitting eating dinner, I asked, \"Wynne?\" \n\n\"Yes, dear?\" \n\n\"Look I know you're not going to be happy, but...do you know where Anders is, right now?\" \n\nShe gave me a sharp look by firelight. \"How do you know Anders?\" \n\n\"Same way I knew Solona. Though I probably know Anders better. He is in the performance, of course.\" \n\n\"Why do you want to know?\" \n\nI sighed. \"Look, is he in the Tower, or not?\" ",
        "She grimaced. \"Unless he's escaped yet again, I imagine he's still confined in the basement.\" \n\n\"Solitary? You mean dungeon, not basement.\" The elderly mage nodded, having the decency to look at least a little bit ashamed. \"How long?\" \n\n\"He should have another six months or so, I think.\" \n\nI thought furiously. He must have been doing his year of solitary after his sixth escape; his next would bring him to Vigil's Keep. I wondered if there was any way to keep the tragedy that was Anders in seven or eight years from happening; getting him out of the Tower sooner couldn't hurt. I turned to Tomas, who'd been watching with a carefully neutral expression. \n\n\"When we get there, how'd you like to pop in unannounced on your good friend Greagoir?\" \n\nHe smirked, so I knew he'd caught my sarcasm. \"I suppose we can make time for a brief social visit.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-59-60"
}