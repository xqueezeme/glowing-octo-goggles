{
    "title": "Any Chance We Could Ch. 32",
    "pages": [
        "This chapter is not meant to stand alone. Please begin at the first chapter to appreciate this tale. I apologize for the length of time between this chapter and the last one.\n\n* Thursday afternoon and evening, October 26\n\nCheryl Babcock walked out of my office as I approached it from the elevator. She turned and looked at me, \"I just left the coffee carafe and the cups on your table. Emerson and the attorney want to see you right away. Should I tell them you're here?\"\n\n\"Sure, how'd you know I just gotten here?\"\n\n\"Denise in reception called me.\"\n\nCovering for Grace for the few days, Cheryl, our office manager was a year or so younger than Emerson and I, and had worked for us for about 16 years, or maybe it was 17 years now. About five-eight in two inch heels, with light brown wavy hair to her shoulders she was a lovely mature woman. She almost always wore dresses or a skirt and blouse with hose and heels. Unlike Grace, I don't remember seeing her in pants. Usually effervescent, her pretty face highlighted by her brown eyes and usually a radiant smile. Not now, though, she looked quite unhappy.\n\n\"Not a happy camper today?\" I asked.\n\n\"No, sorry, I've a personal problem.\"\n\n\"Wanna talk?\" I asked. Our daughters were two years apart and had known each other since pre-school. Her son, Max, I remembered was younger than Katrina. Cheryl and Marty had been good friends. Though they often shared concerns and celebrations, Cheryl was sincerely stunned by Marty's affair.\n\n\"If you'd be able to take some time today? I'd really appreciate it,\" she replied.\n\n\"Certainly, I'll let you know when I've finished this meeting and made a few calls. Would early this afternoon be okay?\"\n\n\"Yes, thanks. I'll get Emerson and the attorney and send them in.\"\n\nEmerson had a frown on his face as he walked into my office three minutes later. \"Is there a problem?\" I asked as he sat down on one end of the couch.\n\n\"A minor one. They don't want us to pay the bonuses to Jim, Frank, Gordon and Grace out of pre-closing funds. They're expecting you and I to cover them with a post-closing reimbursement.\"\n\nI took a deep breath as I settled into my chair, looked at Irwin before looking at Emerson. \"Nonsense, it's our company until we close, we'll pay the bonuses pre-closing with a 50% gross-up for a total cost of six mill, four net and two for taxes.\" Emerson nodded his head in agreement. I suspected that this was the buyer's strategy to gain a concession thinking we'd blink with so much on the table. I suspected that if we conceded this issue that Citi may ask for another concession.\n\n\"Is this a deal-breaker?\" asked Irwin, the attorney from New York we hired to help us in the negotiations. Bruce, our regular corporate attorney had been wise in bringing Irwin onboard.\n\n\"Perhaps,\" replied Emerson. \"They haven't proposed changing the 85/15 cash/stock purchase and the 60 day stock hold period have they?\"\n\n\"No, but they've always wanted a 60/40 split with a 90 day hold. You cleared that up early on but they could use this to push to change the split at the last moment to a 70/30 split. Why don't I go back to them and propose that you'll accept the bonus change in exchange for a 30 day hold and that they sweeten the pot with six month stock options that if exercised could yield much of what you're giving in bonuses,\" proposed Irwin.\n\n\"Should we mention that Bank America had expressed interest three weeks ago?\" asked Bruce.\n\n\"They moved on the split when I mentioned BofA's interest. It wouldn't hurt to remind Citi that if they equivocate now that we're prepared to open talks with BofA within hours. I believe they want to have an agreement quickly. They're testing our resolve to see if they can change the terms to be more in their favor. With our accepting their request with our conditions attached and a few judicious statements that we're prepared to walk if they don't accept our conditions, I think that we'll have an agreement.\"\n\n\"What happens to the 31st closing?\" I asked.\n\n\"I guess it could be pushed back depending on their response and inserting new language in the contract,\" responded Irwin. \"If they agree today or tomorrow, and the changes are made by late tomorrow, and Mike and my team in New York give it a positive review within 12 hours, the closing could still happen on the 31<sup>st</sup>, the 2<sup>nd</sup> at the latest.\"\n\nEmerson said, \"Call their counsel and we'll talk again based on their response.\"\n\nAfter chatting about other issues for another half hour, Emerson, Bruce and Irwin left and I called Veronica's cell. \"Hi lover, did I awaken you. You sound a bit groggy, late night?\"\n\n\"Mmm, hi handsome. Yes and no, Grace is in the shower and I've been dozing waiting for her to finish. She fell asleep while I was getting ready for bed late last night, so no, nothing intimate last night.\"\n\n\"I love you and I miss you. There's a glitch, probably minor, but the closing could be pushed back and I suggest that perhaps you and Grace should cool it until the closing date is certain again. Will that cause a problem?\"\n\n\"I'm disappointed, yes, but it's not a problem. Life'll go on and perhaps on Sunday when she comes over we'll have a better idea about the 'glitch'. I understand what you're saying from an employer/employee standpoint and I won't quibble. By the way, how was ... Corinne, is it? ... last night?\"\n\n\"No comparison to you or even to her daughter, but she was enjoyable. I think our fuck-session opened her eyes to a few issues that she's been in denial about. She seemed happy enough when I left this morning,\" I replied.\n\n\"We have to come back out here, the four of us, sometime soon. This is a romantic city and I know the girls'd love being here with us. I miss you handsome. I miss your touches, your mouth and your cock. I miss your presence. I love you so much, so very, very much. My heart aches for you.\"\n\n\"I love you too, Veronica. Enjoy your gala tonight and I'm sorry about delaying your plans with Grace. Oh, have Grace announce that we'll, you and I, pledge the same gift for the next three years.\"\n\n\"Wow, we're really generous aren't we? You can tell her yourself, here she comes. I love you handsome.\"\n\nI heard her say as she handed the phone to Grace, \"It's Scott, good news, bad news.\"\n\n\"Hi, Scott,\" bubbled Grace evidently more awake than Veronica. \"Good news, bad news, eh?\"\n\nI told her about the closing glitch and what I thought it meant, and then about announcing the pledge for the next three years. Grace was palpably disappointed but philosophical as well. \"It won't be instant gratification, but nonetheless certainly worth waiting for. The bad news isn't all that bad, we can still enjoy ourselves and I'm sure the good news will be well received this evening. Thanks for calling, and I hope the problem's quickly resolved. See you Sunday perhaps without any clothes.\" mused Grace as she hung up.\n\n##\n\nMary Claire despite a few detours due to road construction arrived at the campus a bit before ten but only found rare visitor parking spot mid-campus when another car pulled out just as she was twenty yards from the spot. As she walked to the heart of the campus she became confused about direction and knelt on a bench looking at a mounted map of the campus. Unfortunately, Bixby Hall wasn't evident on the map. A tall young woman was walking past, sensed Mary Claire's confusion, stopped, and turned back four steps.\n\nAs she walked up to Mary Claire she extended her hand and said, \"Hi, I'm Gloria Graham, you look lost, may I help?\"\n\nMary Claire returned the firm grasp with \"I'm Mary Claire Peters, I am and I hope you can. I'm looking for Bixby Hall, the art department and I don't see it on the map. I was told it was at one end of the campus.\"\n\n\"Oh, that's part of the Sam Fox School of Design and Visual Arts and it's that way,\" pointing to her right. \"I'll be glad to walk you through the Quadrangle and point it out to you,\" said Gloria warmly. \"It's somewhat in the direction I'm headed.\"\n\nThey walked towards Sam Fox talking about the campus and college life. Mary Claire glanced up at the clock in the quadrangle and noticed that she was forty-five minutes early. \"Anywhere nearby to grab a cup of coffee, or do you need to leave right away?\" asked Mary Claire.\n\n\"No. And there's a coffee shop right over there.\" As they returned from the shop carrying paper cups they sat on a bench in the morning sun and enjoyed each other's company and began to get acquainted.\n\n\"You're a student here?\" Mary Claire asked as she put her notebooks on the bench.\n\n\"No, not here. I'm a senior in Nursing at SLU and I'm here to have lunch with my Mom.\"\n\n\"Your Mom works here?\"\n\n\"Yes, Dr Evelyn Graham, she teaches comparative religion and counsels. Who're you looking for down at Sam Fox?\"\n\n\"The father of a good friend of mine set up a meeting with the Dean Emeritus and I'm here to show him my portfolio. I kinda screwed up in high school and let my grades go into the toilet. Scott, my friend's father, seems to think that I've some artistic talent and I guess he's giving me a chance to get a second opinion.\"\n\n\"I know the Dean through my mother. He's a wonderful and wise man, an excellent choice on your friend's part. Be frank and honest with him, if he agrees on your potential, you could with an academic recommendation, be accepted on probation.\"\n\nThey continued to talk for another twenty minutes before Gloria noticed the time. She patted Mary Claire's hand and smiled, \"I like that you're easy to talk to. I hope your presentation goes well and that perhaps we could see each other for lunch or dinner sometime. Do you have a cell?\n\n\"Yes,\" replied Mary Claire saying the number.\n\nGloria stopped talking for a moment and called the number. \"Now save that as Gloria Graham Almost Nurse and I've got you in my phone. Is Mary Claire what you go by, not Mary or Claire?\"\n\n\"It's always been Mary Claire Peters. It's the name my mother and family always used. She named me after Sister Mary Claire, a Nun she admired and influenced her greatly as a teen.\"\n\nFrom the top of the stairs at the east end of the Quadrangle Gloria pointed out the Sam Fox School and reminded Mary Claire that she had found her at the corner of Graham Chapel. Mary Claire extended her hand and thanked Gloria for her company, time and interest. The handshake was lingering as the two young ladies looked each other in the eye. \"I'd like to spend some more time with you,\" said Mary Claire as their hands lingered together.\n\n\"I'd like that too,\" replied Gloria as she gave a light squeeze to Mary Claire's hand. \"Now go impress the man as you impressed me. Don't sell yourself short. Just be yourself.\"\n\nAfter being met in the office reception area the Dean Emeritus ushered her into his office and after a few pleasantries he asked to see her sketch books. After turning a few pages he began to examine each one a bit closer. His comments were few but were positive. After looking at the book of building drawings he stepped out of his office and shortly after brought the Dean of Architecture into his office to look at the books as well. After about forty-five minutes of both professors browsing and asking her opinions on various buildings she drew, the Art School Dean came in with a sheaf of papers and asked Mary Claire if she would like to take the Mensa exam.\n\nWith a secretary proctoring Mary Claire stayed in the Dean Emeritus's office to taking the exam while all three men went to the Art School Dean's office. Upon completion of the exam, the Dean scored it and was blown away by the result.\n\n\"What did you do in high school?\" he asked.\n\n\"Got bored mostly, and neglected my studies which earned me mostly Cs, the odd B and a few Ds,\" was Mary Claire's reply.\n\n\"Hmm, I can see why, you should have been in Advanced Placement classes. I'll call admissions now and tell them to expect you.\"\n\n\"Does that mean I'll be able to start classes in the Winter?\" she excitedly asked.\n\n\"Not really, you'll have to go through all the admission rigamarole and take an SAT test, but I hope they'll admit you on probation based on letters of recommendation from me and the Deans of both the Art and Architecture schools. I think you'll have a nice future in the Art and design field. Tell Scott hello for me and it's been a real pleasure meeting you Mary Claire,\" said the Dean Emeritus as Mary Claire gathered her sketchbooks.\n\nMary Claire assembled a pile of forms in the Admissions office and was walking back to her car when she spotted Gloria walking with another woman coming towards her. \"Hey Mary Claire, how'd it go?\" greeted Gloria.\n\n\"I think I might get in on probation for the Spring semester or possibly even the Winter semester after jumping over a few hurdles, tuition being one of them,\" responded Mary Claire with sparkling eyes.\n\n\"You blew 'em away huh? I thought you might,\" said Gloria as she awkwardly hugged Mary Clair who had her arms full. \"Meet my Mom, Dr Evelyn Graham. Mom, Mary Claire Peters, Mary Claire, my Mom.\"\n\n\"Pleased to meet you,\" said Mary Claire reaching out a hand while balancing her papers and books.\n\n\"You're as pretty as Gloria described you at lunch. She felt the two of you made a connection. My pleasure as well,\" grinned Evelyn returning the firm handclasp.\n\n\"Don't forget I found you at the corner of Graham Chapel and let's talk soon,\" said Gloria.\n\n\"Yes, I'll call you soon, bye.\" As she walked up the campus she thought, What a gorgeous woman her mother is, I can see where Gloria gets her good looks. I'm going to have to get to know Gloria a bit better, could be fun.\n\n##\n\nAfter I'd finished my calls I buzzed Cheryl and asked her to come to my office. \"I have time now. Do you still want to talk to me?\" I asked.\n\n\"Of course,\" she responded with a more cheerful tone than earlier. Moments later Cheryl sat on the couch and I walked to one of the guest chairs in front of my desk and sat across the coffee table from her. As she crossed her legs I thought I noticed a stocking top, but maybe not.\n\nTaking a deep breath she began, \"My sister Mandy lives in Boston and saw my husband a month or so ago in the company of a thirtyish, attractive woman entering a Concord hotel mid-afternoon. She was curious and unobtrusively followed them expecting to greet John and be introduced to his companion, whom she assumed at first sight was a business colleague. Seeing them holding hands as they walked through the doors changed her opinion. Mandy watched him go to the reception desk and give a credit card to the desk clerk and after a few minutes rejoined the young woman. She was about my height, blonde, but she could tell little else because she was wearing a light raincoat. They walked into the bar off the lobby and my sister followed and sat at a far corner of the bar. She did notice that when she took off the coat to sit that her top was a nicely fitted satin blouse and her skirt was mid-thigh length over dark hose. My two-timing husband had eyes only for the blonde and my sister went unnoticed. After an hour or so they went back to the lobby and entered an elevator which Mandy noted stopped at the fifth floor. Returning to the bar she called the hotel from her cell and asked for John Babcock and was connected to his phone. She let it ring twice and disconnected.\n\nYesterday she saw John again at the same hotel entering with the same woman and going through the same routine as he had a month ago. After they went to their room she called me and I called the hotel. I let his room phone ring until he answered. Needless to say he was surprised but not at all apologetic. John said that we needed to talk and he would be home next Tuesday because he had a project he needed to follow up on in Connecticut over the rest of this week and the weekend.\"\n\nGiven his reaction to me calling, his tone and implied statements about our lives going in new directions, I can only assume our marriage is over. He's been strangely distant from both Beth and me for the last two or three years or so, and when I'd try to talk to him about it he'd wave me off and say nothing was wrong. He was no longer interested in Beth's activities or grades. He's spending more time with projects in the northeast than he is at home.\"\n\n\"Cheryl, I'm so sorry what can I do to help?\" While she had been relating her tale her skirt had ridden up just enough so that when she would uncross and re-cross her legs it was obvious that she wasn't wearing pantyhose but either thigh highs or garter hose.\n\n\"Several things really, I need an attorney and an investigator I guess. I want to nail his ass! I don't want him to use the language of being fair only to screw me over financially. Since I won't be your employee much longer I'd love to have lunch with you, to catch up on each other and our daughters.\" She paused and my eyes couldn't help me watch her cross her legs again. \"Have you been enjoying my legs?\"\n\n\"Uh, busted on the leg stares, lovely legs, and you're a lovely woman Cheryl, and yes I'd enjoy that, perhaps tomorrow. Feel free to contact our legal firm. Tell Bruce I told you to call him. If I recall Bruce has a woman who's family law partner and she'll be able put you in touch with a private investigator if necessary. Bruce was in on our earlier meeting and I think he's still meeting with Emerson and Irwin. Why don't you try to catch him before he leaves?\"\n\nAs Cheryl stood and smoothed her skirt she remarked, \"I wear garter stockings, have for a long, long time. I like them a lot better than pantyhose which I never liked. John used to like them but that interest has waned as well. Beth even wears them instead of pantyhose if she's wearing hose. Even that wouldn't get John to turn his head. I guess we bore him. Well it's going to be his loss. I've noticed Max admiring both Beth's and my legs from time to time especially the last couple of years.\"\n\nMy initial reaction was an erection to her stocking description and I quickly turned and put the back of a guest chair between us.\n\n##\n\nThe phone in Veronica's room rang and when she answered it the woman, Joceline Aubuchon, from the concierge desk said she was reminding them of their nine o'clock spa appointment. She also asked if she could help them in any way with plans for the rest of the day. Veronica told her that they'd probably go shopping but she'd talk to Grace about where and let her know when they got back from the spa. \"I do have a suggestion, if I may\" said Joceline.\n\n\"The couple in the suite across from yours, a mother and her daughter, is having our limo take them down the coast to Carmel to shop for antiques. They'll leave at nine-thirty and be back here by five-thirty. They're attending the same gala as you and your partner. Would you like to ride with them? Angie will be driving and will be sensitive to female wants and desires. Do you want me to arrange for you to go?\"\n\n\"How old are the woman and her daughter?\" asked Veronica.\n\n\"Her daughter looks to be around thirty and I'd rather not venture to guess her mother's age. She's, ... they're both quite attractive, like the two of you,\" said Joceline.\n\n\"Why thank you, that was quite kind of you to say that. Yes, if they wouldn't mind we'd like to go with them. Will you make the arrangements with the spa for a quick hair and nail appointment when we return? I think we'll have to leave for the event about seven-thirty,\" smiled Veronica.\n\n\"Consider it done. Can you be at my desk at nine-thirty?\" asked Joceline.\n\n\"Yes, of course.\"\n\n\"Grace, love, more good news and bad news,\" grinned Veronica as she took both of Grace's hands in hers. \"We're not going to spa just yet but we're being driven down to Carmel to antique shop! There's a couple across the hall who're also going. I need to hop in the shower, it's eight-thirty and we're leaving at nine-thirty.\"",
        "As Veronica dropped her hands Grace asked, \"And the bad news is?\"\n\n\"There isn't any, but isn't that what people say when there's a change of plans?\" grinned Veronica.\n\nWhile Veronica showered, Grace finished up her hair and make-up asking Veronica through the open door what she was going to wear. As Veronica was toweling off, she replied, \"Skirt, heels, hose, blouse, and probably I ought to take a light jacket.\"\n\n\"You're a gorgeous woman Veronica Bryce,\" said Grace opening admiring Veronica's nude body.\n\n\"Thank you Grace, I like the way you look as well. Garter stockings?\"\n\n\"Sure, I wanna get used to them for the time when I'm no longer employed by your future husband,\" smiled Grace as she was fastening her suntan hose.\n\nVeronica chose a light tan flaired jersey skirt that ended mid-knee and hugged her ass. Her blouse was a chocolate silk and her stockings were almost the color of the blouse. Her sling-back heels, the color of her skirt were two inches high and had open toes.\n\nGrace's green linen A-line skirt was just above the knee with matching two inch high pumps. Her blouse, pale green satin with a scooped neckline and small collar along the edge of the scooped opening.\n\nVeronica embraced Grace, lightly kissed her and said, \"Let's wander down there, grab a jacket.\"\n\nAs they walked up to the desk they observed the backs of two women, one in a black skirt, barely black stockings, black three inch pumps and wearing a bright red satin blouse. Her dark hair, lightly streaked with grey hung loosely just above her shoulders. The other, a bit taller dressed in a light grey skirt, seamed grey hose ending in grey alligator three inch pumps and a gold silk blouse. Her curly dark brown hair cascaded on the tops of her shoulders and down her back. Grace nudged Veronica and smiled asking, \"Our travel companions?\"\n\nJoceline looked up from a form she was writing on and saw the two approach. \"Hi, Grace Powers and Veronica Bryce this is Edith and Felicity Strang-Von Wagner,\" pronouncing it Von Vagner. Felicity, the gorgeous curly-head turned and extended her hand first to Grace then to Veronica. Her mother, who looked to be a bit younger than Grace at first glance, also shook their hands. Both women were tall, Felicity in a higher heel almost as tall as Veronica, and Edith and Grace looked eye to eye. \"I'm Felicity\" she clarified to Grace. And in retort Grace said, \"I'm Grace, and very pleased to meet you.\"\n\n\"Your car is in the portico, the refrigerator has been stocked. There are four bottles of wine in the cabinet and Angie will take you to lunch and will stop for snacks or facilities whenever you ask. I'd go to the car with you but my assistant hasn't returned so I hope you don't mind.\"\n\nWhen the four women crossed the lobby to the portico they saw a white limo with a small hotel logo discreetly placed on the rear quarter panel. Angie in black pants, black patent high heels and a white blouse was standing by the open door and introduced herself to each. As each woman said her name Angie Perdue quickly memorized the face and name. \"Just to make sure: We're going to Carmel to shop and need to be back here by five-thirty at the very latest. Please make yourself comfortable, you can control the climate in the passenger compartment with those controls under the window and simply lift that phone over there to speak to me. If you want complete privacy, raise the shade behind me and keep the interior lights off. Questions? No? Shall we then?\"\n\nGrace and Edith were in the back seat and Veronica and Felicity were in the side seat. As they went up and down the hills in the city Felicity would slide against Veronica and after the third time Veronica playfully put her arm around Felicity's shoulder and snickered, \"What a great ice-breaker. If you're comfortable against me, you needn't move.\"\n\nFelicity turned her head and looking Veronica in the eye replied, \"Then I shan't.\" After leaving the city and getting on the freeway Felicity stayed against Veronica and they began to introduce themselves to one another. Admiring Veronica's ring Felicity asked, \"When are you getting married?\"\n\nHolding up her hand for Felicity to see the ring Veronica smiled, \"November 16<sup>th</sup> to the love of my life. Are you married?\"\n\nFelicity responded, \"It's complicated, but not at the moment, in fact not after a lot of moments. I've been engaged three times since I graduated but my father has managed to run each one off. You'd think at 31 that I could have found a man to want me enough to stick up to him, but unfortunately, no one with enough balls has come along. I've had several close, very close girlfriends along the way so my libido hasn't completely gone in the toilet during those times I've been without a boyfriend.\"\n\nEdith leaned toward Grace saying, \"Wolf can be rather difficult at times. I suppose it's surprising that we're still married, but he does love me in his own unique way. He provides us with a good life and doesn't seem to mind my frequent dalliances as long as I'm discrete. I do have a penchant for women so it's easier to be discrete.\"\n\nFelicity and Veronica had a wide ranging conversation, during the course of which each determined the other was bi. Grace and Edith came to the same conclusion except that Grace had never been with another woman. \"Tut, tut, don't be concerned. You'll meet a mentor someday and you'll savor the experience.\"\n\n\"Does your fianc\u00e9e know you're bi?\" asked Felicity.\n\n\"Oh yes, he definitely knows. I love young pussy and I love sharing them with him.\"\n\n\"By sharing you mean you both make love to them?\" asked a wide-eyed Felicity.\n\n\"And sometimes we just fuck them, in the same bed at the same time. Threesomes sometimes occur several times a week in our home,\" smiled Veronica.\n\n\"Oooh, so you live together. Where do you live and when can I visit?\" asked a broadly smiling Felicity.\n\n\"Let's get to know each other today and maybe I'll tell you. I'll bet you have a pleasant body under that skirt and blouse. Is it too cool in here?\" asked Veronica.\n\n\"No, why?\" frowned Felicity.\n\n\"Your nipples say otherwise, ... or is it me?\" laughed Veronica.\n\n\"It's you. I didn't realize they're misbehaving. Well so much for being subtle, huh,\" broadly smiled Felicity. As she leaned closer to Veronica's ear she continued just above a whisper, \"Edith says my ass is too broad, but my stomach is still flat and my tits are still natural. So yes, I consider it 'pleasant'. I've pleased a lot of partners of both sexes. Edith on the other hand has nips and tucks on a regular basis but she doesn't look bad for a 60 year old does she?\"\n\nVeronica looked at Edith and said, \"I'll say. I had no idea she was that old, ... er, mature. She's older than Grace.\"\n\n\"Speaking of Grace, who is she to you, a relative?\"\n\n\"No. She's my fianc\u00e9e's administrative assistant and has worked for him for over 20 years. She came with me because Scott couldn't come due to some intense negotiations he and his partner are having,\" said Veronica internally stifling any further discussion about what they had intended this trip to be.\n\nFelicity's hand had strayed to Veronica's skirt covered thigh and as she moved it from time to time, she asked, \"Garter stockings?\" Veronica's heart fluttered as she nodded before the curly headed woman continued, \"I love garter stockings. I'm wearing them now. Want to see?\" Without waiting for a response Felicity pulled her skirt up to her stocking tops.\n\nEdith remarked to Grace, \"She does have nice legs and likes to show them off.\"\n\n\"She does at that,\" concurred Grace with a growing grin.\n\n\"Would you like to touch them?\" asked Felicity as she looked Veronica in the eyes.\n\nWithout responding Veronica turned a bit and put her free hand on Felicity's upper thigh and then as her new friend spread her legs a bit, Veronica moved her hand to rest between her bare thighs.\n\n\"Now it's my turn. Your nipples are trying to escape,\" laughed Felicity as she closed her legs to trap Veronica's hand.\n\n\"Hussy,\" laughed Edith just above a whisper as she nodded towards her daughter. \"I'm wearing pantyhose, are you as well?\"\n\n\"No. Garter stockings today. I think I'd like your hand on my leg,\" said Grace as she turned a bit toward Edith and pulled her skirt up. Edith's hand immediately moved to Grace's thigh, stopping at the garter clasp and the welt, half on her stocking top and half on her bare thigh.\n\nThe leg play continued for the next hour or so with the conversations becoming more heavily laced with sexual innuendo. Finally Felicity wound up sitting perpendicular to Veronica with her skirt up to her crotch and her legs across Veronica's lap.\n\nAngie announced \"We'll be in Carmel in the next thirty minutes or so but I can stop just on the outskirts at a hotel where you can get a bite to eat and use the bathrooms. If you don't, I'll continue into the heart of the shopping district and you can eat there as well as begin 'serious shopping'. Parking will be tight, so my cell number is on these cards, each of you take one, and call me when you're ready to get off your feet and sit, leave, have a glass of wine or another drink, drop off packages or whatever. I'll pick you up as soon as I can.\" She noticed how Felicity was sitting but couldn't see Veronica's hand caressing her pussy or the dreamy expression on Felicity's face.\n\n\"Would you like me to drop you here, across from the Intima European lingerie shop, high quality, high prices, but some gorgeous lingerie.\"\n\nEdith replied, \"That'll be fine, thank you Angie.\" Both Grace and Edith smoothed their skirts and Felicity swung her legs off Veronica's lap and they both adjusted their skirts, Felicity also adjusted her thong that Veronica had pulled aside.\n\n\"Ummm, you have the nicest touch Veronica,\" smiled Felicity and then kissed her on the cheek.\n\n\"Let's get naked sometime and I'll show you a nice touch, fingers as well as tongue. Interested?\" leered Veronica running her hand under Felicity's skirt and lightly kissing her on her lips.\n\nGrace and Edith headed for Intima while Felicity and Veronica walked down the street peering in the windows of antique shops. Felicity's knowledge of antique furniture impressed her older friend. After browsing several shops Veronica saw a dining room set that after talking to the sales clerk learned that it included sixteen chairs, several leafs to expand the table from its normal six chair setting. Both the table and the matching hutch were solid oak with decorative inlay in the center of the table that was repeated in the leaves, and in the counter of the hutch. Veronica persuaded the clerk to hold it for at least a couple of hours. They then crossed the street to enjoy a sandwich and a glass of wine at a small boutique restaurant.\n\nAfter eating they cruised more shops, stopping at one where Felicity found a coffee table of interest, which she bought. After looking at two or three more dining room tables, Veronica decided to purchase the set that initially captured her attention and which Felicity claimed was a unique find and fairly priced.\n\nVeronica with Felicity's help negotiated a final price before offering the clerk her debit card. After swiping the card the clerk noted a message from the bank that required her to call before approval. She dialed the displayed number and the clerk at the other end asked to speak to Veronica, and asked her date of birth as well as the last four digits of her social security number. She apologized for the delay but Veronica assured her that to verify her identity on a $26,500.00 purchase was not unreasonable.\n\nVeronica made arrangements for the set to be shipped to St. Louis after she returned from her honeymoon. She left confident that Scott and her daughters would love the set. Her mind was already picturing the type of d\u00e9cor in the dining room that'd fit with the table's inlay.\n\nFelicity took her hand as they walked down the street both broadly smiling and enjoying the looks they were getting from passers-by. After crossing the street and heading back in the direction from which they'd come they encountered Grace and Edith coming out of a shop each carrying a bag. Since they agreed that they were all pretty much shopped out, Felicity called Angie to pick them up outside a coffee shop just ahead. They had just enough time to finish a cup of coffee and a small plate of assorted cookies when Angie appeared, double parked, ran around the limo and opened the doors for them.\n\nVeronica couldn't help but notice the tight ass that Angie exhibited in her heels and tight black pants.\n\nThey began talking about their purchases and as Grace and Edith were showing their purchases from Intima, Felicity asked about the gala.\n\n\"You're going, right?\" she asked. \"Do you think we'll be able to sit together? I'd really like to sit with you, and I think Mom would like to sit with Grace. Would you like to sit with us? Do you mind dancing with another woman? I'd really like to dance with you.\"\n\nAfter Felicity ran out of breath, Veronica put her arm around her and pulled her next to her, gave her a quick kiss and said, \"Calm down sweetheart. Yes I'd like to sit with the two of you, and yes I'd like to dance with you. Yes I'd like to fuck your brains out after dinner. Next question?\"\n\n\"What did you say? I caught the words 'fuck' and 'after dinner'. Were there any others that I missed?\" asked a wide-eyed Felicity.\n\n\"I think you missed 'yes', you gorgeous, sexy lady. Yes, plan on a long sensuous evening together. Okay?\" responded Veronica.\n\n\"Oooh, you twisted my arm, of course,\" grinned Felicity. \"Think you could put your hand under my skirt for awhile?\"\n\nVeronica notice that it was getting to be three-thirty, dug out her cell and called Scott.\n\n\"Hi handsome, I love you. Haven't you left for you date with Carol and Erin yet?\"\n\n\"No, lover, neither are here yet, wait there's the door bell.\" I kept the phone to my ear as I walked to the door and after opening it I greeted Erin with a kiss and said, \"Come in.\"\n\n\"Who's there,\" asked Veronica.\n\n\"Erin, dressed very primly in a business skirt, blouse and jacket, but she's carrying a bag and a hanging bag,\" I explained.\n\n\"Use our bedroom, you know where it is,\" I said to Erin.\n\n\"Carol's not there yet?\" asked Veronica.\n\n\"No, but it's early yet. Our reservations aren't until seven, plenty of time. Have you had a good day?\" I asked.\n\n\"Yes, we've we meet a delightful couple, a mother and daughter, and spent the day in Carmel shopping. We're on our way back to the hotel now. Oh, Felicity, that feels nice. She just put her hand inside my bra and pinched my nipple,\" she explained to me. \"When we finish talking I'll send you pictures of something I bought today. Also watch for pictures of Edith and Felicity.\"\n\n\"I see Carol driving in. Do you want to talk to her?\" I asked.\n\n\"Yes, please,\" she replied.\n\nI lightly kissed Carol as she came in the door and handed her the phone saying, \"Veronica.\"\n\n\"Hi sweetie, thanks for 'fixing me up'. ... Of course I'll take good care of him. .. We need to spend some time this weekend or next week talking about your wedding. ... No, I won't break him and Erin's been talking about Ashley ever since you called. ... Yes I will, ... No I won't, ... Love you, bye.\"\n\nCarol handed the phone back to me and I said, \"Call me tomorrow when you're an hour out of St. Louis and I'll pick you up. ... Yes, I'll bring both of them. I love you Veronica, more than ever. Send me their pictures and I'll see you tomorrow. Bye.\"\n\nAs I was walking up the stairs with Carol my phone chimed and there was a notice of an MMS message. I opened the message and looked at a picture of the table and one of the hutch, as well as the lovely Felicity and Edith. \"She certainly has excellent choice in women as well as men,\" I wryly smiled.\n\nErin was standing in my bath with the door open drying from her shower. After drying the bit of moisture in her hair she turned and walked to the bed and opened her bag. \"Like what you see, Scott?\n\n\"Yes, Erin, I do.\" I replied\n\nErin slid on a black g-string before sitting to pull on a pair of fishnet thigh highs and slip into a pair of black suede stiletto heel boots. She opened her hanging bag and took out a long hip-hugger bias cut black skirt and then extracted a dark green bustier top. The skirt ended mid-calf but the low riding skirt didn't reach the bottom of the bustier leaving her midriff bare. Enhancing the sexy look was an emerald stone in her exposed navel. \"Your pants are tented Scott. Does that you mean you like it and it's not just Carol standing nude behind me?\"\n\n\"Both of you,\" I said as I unbuttoned my shirt and unzipped and lowered my pants.\n\n\"Ooh, right to it,\" remarked Carol.\n\n\"No, I'm going to feed and romance both of you first. I'm just doing what you are ... changing.\"\n\nCarol blew her hair a bit with the dryer and toweled off as well. I put on a dark shirt and as I was pulling on grey trousers, Carol pulled a black garter belt from her bag, fastened it and pulled on a black g-string that did not contain many of her fiery red pubic hairs. After threading the straps under the sides of the g-string she sat and pulled on a pair of barely black seamed stockings. \"What'd you think, Scott, enough clothes?\"\n\n\"Certainly for me, but probably not for Tony's,\" I leered.\n\nCarol donned a sheer black bra then took a dark grey cashmere sweater dress and a half slip from her hanging bag and slipped into the slip then pulled into the dress. \"Sorry about the slip, but the garter clasps will show without it,\" remarked Carol. She took a pair of strappy black heels from her bag and slipped them on. They were a perfect complement to her mid-thigh length dress. As both jostled for space before the vanity I made a mental note to rectify that issue in the renovations. When they finished with their hair and a light touch of makeup both were such delicious visions that it was difficult to tell them it was time to go.\n\nAs we reached the entry hall, Mary Claire, Ashley and Katrina came in, stopped and looked at the three of us. Mary Claire extended her hand and introduced herself to Carol and Erin. \"You certainly beat the large dog that Scott was going to get to keep him company,\" giggled Mary Claire.\n\n\"Will we see you after dinner, Dad?\" asked Katrina. \"Should we wear hose and heels?\"\n\n\"And precious little else,\" I replied. \"Carol and Erin are spending the night.\"\n\n\"Oooh,\" squealed Ashley. \"You like anal don't you Erin? Could we talk about that later?\"\n\n\"Demonstrations might be necessary?\" asked Erin in playful tone.\n\n\"Absolutely,\" replied Mary Claire.\n\n\"Okay Scott,\" began Carol as we got in the car, with her next to me and Erin by the door, a pox on bucket seats I thought, \"Who's the absolutely stunning Mary Claire?\"\n\n\"She's a friend of Ashley and Katrina who seems to be around here a lot. Her father and mother both travel and she wants to be around people,\" I replied.\n\n\"And how's she in bed?\" teasingly asked Carol.\n\n\"What makes you think she's been in our bed?\" I innocently asked.\n\n\"A woman who knows you knows you. And I know what you've unleashed in Veronica too. That's how I know. Besides, your future wife told me all about her. That made it easier to recognize,\" grinned Carol.\n\n\"Last night both she and her mother shared my bed and earlier I took her virginity at her request. And before you ask further she goes both ways so she'll probably be willing to play with either or both of you,\" I honestly replied.\n\n\"Not me tonight you lovely man. I'm exclusively yours for the whole night but Erin'll probably play, she's been looking forward to seeing Ashley again,\" and with that statement she put her arm around my shoulder and rested her head against me.\n\n\"Can you tell, she's in love with you,\" asked Erin.\n\n\"Shush, don't tell him that even if it's true,\" teased Carol.",
        "I knew enough not to take this discussion any further without Veronica's presence. I suspected she knew how Carol felt because of the bond between them, but I didn't know what either of them expected of me. Carol was a drop-dead gorgeous red-head which had always been a weakness of mine, but I was engaged to the perfect soul-mate. Sigh, enjoy the night and talk to my true love tomorrow.\n\nOur conversation covered a range of topics but Erin kept coming back to how she was looking forward to spending the night with my girls, particularly Ashley.\n\nWe arrived a few minutes early. Leaving the car with the valet we were shown immediately to our table which was a small back corner banquette as I had requested. Carol nestled in on my left and Erin on my right. Our obviously envious waiter took our drink order and as we continued to converse I kept my hand on Carol's thigh and she on mine.\n\nTwenty minutes later who should begin to walk by our table but Hazel and Emerson. I called out, \"Emerson\" just loudly enough for him to hear.\n\nHe turned as did Hazel. Their expressions were priceless. Her's was one of disbelief contrasting with Emerson's one of envy. Emerson was dressed in a suit jacket with no tie as I was and Hazel in a little black dress, short, low cut, quite sexy. Her wardrobe was clearly changing.\n\nI stood and introduced \"Carol McDonough and her niece Erin McDonough, this is Emerson Jacobsen and Hazel his wife. We've been business partners since college,\" I said as handshakes were exchanged all around. \"Will you join us?\" I asked.\n\nEmerson immediately said \"Yes\" and Hazel frowned. I noticed her look as I signaled to a waiter, \"Two more chairs please. They'll be joining us.\" As the waiter fetched the chairs I looked at Hazel, \"Hazel, Veronica knows I'm here and with whom. She set up this 'date' knowing she'd be out of town. She and Grace are in San Francisco accepting recognition from a charity on our behalf. Carol and Veronica lived together in college and have been friends since.\"\n\nWith that explanation Hazel smiled as she and Emerson were seated by the waiter who then quickly took their drink orders. Carol is a very easy person to talk too, even with her hand on my thigh and mine back on hers. Emerson and I avoided any business discussion but I noticed that he and Hazel were very 'touchy, feely' with each other, far more than I'd witnessed since when they dated.\n\nHazel asked how our wedding plans were coming and I deferred to Carol who explained where we were. Hazel asked if we were using Evie Graham for the ceremony. After that was affirmed Hazel said that Veronica had suggested that she talk to her and that she'd done so Tuesday. The topics covered were not disclosed but Hazel said she immediately liked Reverend Graham and that their conversation had been helpful, 'cathartic' was the word she used. My immediate thought was that perhaps she'd gotten her demons exorcised, and given the smiles on Emerson's face I was sure I was right.\n\nThe dinner was a very pleasant affair. Surrounded by three gorgeous women, what else could it have been. Hazel was the most relaxed I'd seen her since shortly after graduation. And Emerson, even though he occasional leered at my dates didn't draw any displeasing looks from his wife. The owner, Vince Bommarito stopped by the table to greet us and I introduced him to Carol and Erin. Every time Hazel bent over her plate to take a bite, I was drawn to her cleavage. The one time the three ladies went to the restroom together I wondered why do they do that in pairs or packs? As they left I couldn't help but notice the swing of Hazel's ass and the seamed stockings disappearing into her high heels. Here I was with two stunning women who were going to share my bed tonight and Hazel got me hard. Go figure.\n\nThree hours after we'd arrived we'd finished dessert, liquors and coffee. I noticed all three women seemed anxious to get going, for a second round of dessert, I guessed.\n\nAs we walked out and stopped at the podium the ma\u00eetre d' told us our cars were on their way. How does he do that?\n\nI went to lightly kiss Hazel on the cheek but she turned her head so that we kissed fully on the lips. I noticed an undercurrent of energy from her soft lips. I glanced at Emerson when the kiss ended. He had a smile as he nodded his approval.\n\nAs we approached our respective cars I said, \"Tomorrow night are you bringing the music selections?\" He nodded yes. Carol slid over against me. I did notice a raised eyebrow from Emerson as he and Hazel got in their car.\n\nThe drive home was delightful with Carol cuddled against me, her skirt pulled up to afford me maximum access to her bare thighs. She told us some of the wedding plans and about the ones that needed to be finalized. \"I do need to see Veronica next week,\" she remarked more than once as she talked about a particular item.\n\nWhen we arrived home, my three young women were in the den watching the most recent events on Bryce Field and each was offering pointed comments. When someone came they held up numbered cards to score the event and were laughing uproariously at their own game. Carol and I joined Mary Claire and Ashley on the couch. Katrina was sitting on the floor leaning her arm on the end of the coffee table. Erin sat in a wingback chair after pulling it behind Katrina. Mary Claire appointed Erin as scorekeeper and pushed a pencil and a pad of paper toward Katrina to hand to Erin.\n\n\"This top was quite comfortable before we I started laughing. So if there are no objections I'm going to take it off,\" smiled Erin as she began undoing the back of her bustier. As she dropped it on the floor, Ashley held up a '9' card which encouraged everyone else to join in. After fifteen minutes or so and after Katrina had her top off as well, the gamers adjourned to Ashley's bedroom leaving Carol and I on the couch.\n\nCarol turned and lay across my chest. We tenderly and then passionately kissed as I caressed her breasts and then her hip. As the kiss drew longer, Carol reached down, hiked her skirt up and spread her legs, an obvious invitation for me to stroke her upper thighs and her pussy. \"Let's go up, you perfectly salacious redhead,\" I said as we broke the kiss. \"May I have the honor of undressing you and making love to you?\" I grinned.\n\n\"Oh, I don't know. I usually don't get undressed on the second date, but the most beautiful woman in our world told me to tease you into submission. Okay, you talked me into it,\" she smiled as she stood, fluttered her eyes and extended her hand to me.\n\nI took her hand and led her to the kitchen where I grabbed a bottle of shiraz and two glasses. She took the bottle of wine, opened it, then took my free hand. When we walked back to the foyer I locked the front door and turned off the lights in the den. We excitedly climbed the stairs hand in hand. As we reached the second floor we smiled at each other as we heard giggling coming from the girls' bedroom then low moaning from at least one of them.\n\nAfter Carol and I entered my bedroom, we embraced after setting the wine and glasses on a night stand. Carol reached under her skirt and shimmied her slip down and let it puddle at her feet. \"Veronica told me you like this,\" she said as she turned on the radio to an FM soft jazz station. She began erotically moving her delightful body as she pulled her dress over her head. She shook her curly hair and began running her hands over her body after pushing me into a seated position on the edge of the bed. \"Want me yet?\" she cooed.\n\n\"Since I first ate you, yes,\" I replied.\n\nAs she danced to me she turned and said, \"Take off my bra.\"\n\nI put my arms around her and gently caressed her firm breasts inside the bra and kissed her neck. I released her. She stood and I unfastened her bra. She turned to face me, still moving her hips in time to the music as the bra slid down her arms and off her breasts. A few seconds later she slid onto my lap and wiggled on my thighs as she drew my face between her breasts. When I moved my face from her valley I sucked each nipple as I caressed each breast. As she danced away from me I stood and pulled off my shirt before pulling her to me and kissing her. Our tongues dueled back and forth between each other's mouths.\n\nAs she ground her pelvis into me she thumbed her g-string. While still kissing me Carol moved back a half step and pushed it down her legs. Seconds later I felt her hands unfastening my belt, then eagerly pushing my pants and boxers down to my ankles. I stepped out of my shoes and pants and kicked them aside. Our bare groins ground together, my raging cock between her legs, her thighs tightly squeezing me.\n\n\"Let's lie down,\" she said as she broke the kiss.\n\n\"Not yet,\" I whispered. I released her for a moment to get my socks off and took her back in my arms and said, \"Remember the last time we danced?\"\n\n\"Oh, yes, you felt so delightful,\" she smiled crushing her breasts into me.\n\nI wrapped both arms around her back and she wrapped both of hers around my neck. We kissed and slowly danced around the bedroom, my hands straying to her small ass and caressing her wonderful cheeks.\n\nShe whispered into my ear, \"I've told you this before, but I love you Scott Stuart Appleton, I could grow old with you. I'd like to grow old with you.\"\n\nI whispered back, \"I love you too Carol, very much.\"\n\n\"Do you think there's room for me in your marriage?\" she asked. The tear in her eye screamed that she was being sincere and this wasn't bedroom banter.\n\n\"I know there is in my heart,\" I responded hoping this wouldn't go much further without Veronica in the conversation.\n\n\"Veronica said you did, can we talk about it next time we're together?\"\n\nWhew, I thought. \"Yes, you beautiful woman, we can and will.\"\n\nWe danced for another fifteen or twenty minutes and I noticed a nude Katrina come quickly in the door and then leave again. After she left the green camera light was on.\n\n\"We're being watched,\" I whispered into her ear.\n\n\"Camera's on?\" she asked never taking her mouth from my neck.\n\n\"How'd you know,\" I asked.\n\n\"Veronica tells me everything,\" she whispered as she nibbled my earlobe. \"When you're unemployed and at home a lot, can Veronica and I still have our 'nooners'?\"\n\n\"Of course, with or without me participating. Your choice,\" I replied returning the earlobe nibbling. \"Your hair smells incredible.\"\n\n\"I know, it's your favorite.\"\n\n\"Because Veronica told you,\" I finished her sentence.\n\n\"Let me put my back against you,\" she whispered.\n\nShe turned in my arms and reached behind her fondling my cock while I caressed her beasts with one hand and moved the middle finger of my other hand up and down her soaking slit. She began pushing her clit against my finger as I backed to the edge of the bed, gently turned her, and as I began kissing her lifted her onto the bed.\n\nShe scooted away from the edge as I joined her on the mattress and we embraced and continued to passionately kiss. I was on my stomach next to her and she was on her back. My hand found her breast and I began to gently knead it and then pinched her rock hard nipple. I finished by lightly running a finger around her areola and along the side of her nipple. As she cooed quietly I provided a reverse treatment to her other breast.\n\nI could smell the arousal in her breath. Our eyes focused and locked on the other's. \"Carol, I want to be inside you. I want to feel you grasp me as I slowly move in and out of you. I want to hear your breath quicken as I bring you to an orgasm.\"   \"God, you're the consummate lover,\" she whispered as she spread her legs.\n\nI slowly slid between her legs and without touching my cock found her wet needy hole and slowly entered her in a series of short strokes. At each stroke she moaned and said, \"God, that feels so good. So loving, so fucking good.\"\n\nAs she was bucking her narrow hips and pushing back I began to speed up my pace and while resting on my forearms continued to kiss her lips, eyes, chin and ears. \"Oh, Scott, you feel so good,\" she panted. \"Fuck me hard now, cum in me, fuck me hard.\"\n\nI began doing just that and within minutes we came together and fused as one.\n\nAs I rolled beside her and her breathing slowed I sensed someone at the edge of the bed. It was Mary Claire. \"You two make love so beautifully, can I pleasure you while Scott recovers. Katrina usually gets the cream pies but she and Ashley are giving Erin a workout, so can I?\"\n\n\"Of course, I'd think I'd enjoy that from you,\" replied Carol.\n\nA nude Mary Claire climbed over me but managed to stop and give me a thorough suck and cock cleaning licking, saying as she swished her long hair out of her face, \"Carol you taste so sweet on him.\"\n\nI moved up the bed to sit against the headboard and invited Carol to nestle against my chest. Mary Claire very gently licked and sucked Carols nipples and dragged her tongue down Carol's chest, across the waist band of the garter belt and began licking her slit with the tip of her tongue. When Mary Claire touched her clit Carol moaned \"Ooh,\" and bucked a bit. \"That's really sensitive, but nice sensitive. Your tongue is delightful.\"\n\nAs Mary Claire was consuming Carol's pussy, I was enjoying Carol's breasts, her lips and her curly hair against my cheek.\n\nFeeling a little parched, ten minutes later I asked, \"Wine anyone?\" Both women wanted a glass so I poured three and we sat leaning against the headboard. Having a beautiful bare-breasted woman against either side of me seemed to make the wine taste even more superb.\n\n##\n\nThey had time before going to the spa for hair styling and nails so to make the best use of it they showered together. It took a great deal of grit and will power to avoid sexual entanglement. On the way down to the spa Veronica remarked to Grace, \"Thank you for the will power, I almost lost mine,\" lightly kissing her.\n\nThey began dressing after returning from the spa and both stood nude trying to figure out what to put on first. Finally Grace put on her sheer gold bra and garter belt then pulled her gold g-string on, tucking the suspenders under the waist band of the g-string. Veronica put on her lavender garter belt and lavender g-string then they sat side by side on the bed and began pulling on their stockings. Grace's were a lace top light tan with sparkling gold highlights and were long enough that the clasps came down only three or four inches on her thighs. Veronica's lace top light lavender stockings had a bit of glitter to them as well.\n\nGrace pulled on her dress and after modeling it in front of the mirror on the door she asked Veronica, \"Think I should wear a mini slip, these clasps may show when I sit?\"\n\n\"Whatever makes you more comfortable. I'd be comfortable if you weren't wearing the dress at all,\" grinned Veronica. \"By the way, I kind of propositioned Felicity this afternoon and she'll probably be in here all night. Given the way you and Edith were enjoying touching each other I don't doubt that you got a similar invitation from her.\"\n\n\"I did and I will,\" smiled Grace. \"We made a connection today and tonight she wants to affirm it with 'lots of sex', and you know me with my newfound interest, I couldn't resist. I'm disappointed that you and I aren't going to fuck the night away, but it looks like we're both going to get too anyway.\"\n\nAs she finished pulling on her hose and stepping into her shoes Veronica replied, \"We'll have untold days together in the future, so we can both enjoy whatever the evening brings.\"\n\nVeronica stepped into her dress and fastened the clasp at the bodice. \"God, what a sexy dress. I didn't get to see it on you when we bought them. You'll turn a few heads and pop a few eyes tonight,\" leered Grace.\n\n\"Thanks, I hope so. Where's my phone I want to send Scott pictures of us.\" It was under a towel on the dressing table and after taking pictures of each other she sent them to Scott with a message, 'enjoy yourself tonight, but look who you're missing! I love you.'\n\nVeronica embraced Grace passionately kissed her and said, \"You look gorgeous, let's both turn some heads tonight. New lipstick, it's seven twenty-five.\" They both picked up white cashmere shawls, put them over their arms and walked out just as Edith and Felicity opened their own door.\n\nEdith was in a green scooped neck dress, lots of cleavage, the skirt was tight over her shapely hips and ass, knee length but short enough to show off her nice legs, four inch green strappy sandals and a magnificent diamond and emerald necklace and matching earrings. Felicity was in a dark beige silk dress, very fitted bodice emphasizing her C cup breasts, her hair as full as it had been this afternoon, her skirt above knee length and her tan minimally strappy four inch sandals showed her pretty feet. As she turned to show her off her dress Veronica noticed seamed hose again.\n\n\"I like what both of what you're wearing, you're beautiful,\" remarked Grace. The two women repaid the compliment to Grace and Veronica as they walked toward Joceline's desk.\n\n\"Ladies, very attractive. Angie is waiting, this time I'll go with you to the car.\"\n\nThe five of them walked to the door that Angie was holding open for them. She was now dressed in a mid-thigh length black skirt with satin tux stripes up each side, a fitted white tuxedo shirt with a bow tie, black opaque stockings and black suede three inch heel pumps. \"Very sexy, Angie,\" said Felicity as she got in the car after Grace and Edith.\n\n\"Thanks, it's our evening uniform,\" smiled Angie.\n\nVeronica stepped closer to Angie and said in a low voice, \"Would you like to play with Felicity and me after you bring us back here?\"\n\nAngie responded \"I'd love to, but we're not allowed to.\"\n\nVeronica asked, \"What if I leave something in the limo and you have to bring it up, would that work?\"\n\n\"I think I could make that happen, do you want me to change?\" smiled Angie.\n\n\"No, come as you are, sheer hose would be nice, but not necessary.\"\n\nAfter closing the door behind Veronica Angie saw Joceline looking at her with a querulous frown. Joceline approached her as she began to walk around the limo. \"You just got propositioned, didn't you? I'm envious. Need help?\" grinned Joceline. \"I was hoping they'd ask me.\"\n\n\"What about the policy?\" asked Angie.\n\n\"In the case of these four ladies, it doesn't exist. I'm staying in room 224 tonight, my car's been in the body shop since Monday. If you want help, or to share, call me and I'll be there,\" grinned Joceline.\n\n\"Thanks, I'll ask later and see what they desire,\" replied Angie.\n\nAngie's been with a women only a few times, but at twenty six is willing to try anything to please and be pleased. She remembered that she had a pair of black crotchless sheer pantyhose and a pearl g-string in her locker. Left over from a jilted date a few weeks earlier.\n\nAfter arriving at the gala and as the women were getting out Angie told Veronica, \"I've got my cell and I'll be nearby, so call when you're ready to leave. Joceline saw us talking and correctly surmised that you'd propositioned me and said that the policy doesn't apply to guests in the Presidential suites. So ... you don't have to 'leave' anything, I'll be up as soon as I garage the car and freshen up a bit. Joceline was a bit disappointed that you didn't invite her.\"\n\n\"She's more than welcome if you don't mind her being there with you. I know I sure as hell won't mind and I don't think Felicity would either,\" smiled Veronica.\n\nAfter parking the car Angie called Joceline and told her what Veronica had said. After hanging up Joceline excitedly went through her meager clothes supply to find something appropriate. She selected a thin, almost sheer cream colored sweater, a very short khaki skirt that just barely covered the tops of the lace top thigh highs she'd found. Her black three inch pumps would have to do. After looking at herself in the mirror, she pulled off the sweater and removed her bra. After putting the sweater back on her hard nipples tented it nicely and her small areola were clearly visible. She took her hair out of the work day bun and brushed her shoulder length dark brown hair smooth. She turned on the TV and impatiently waited. At twenty eight she didn't have a regular boy friend but a group of girl friends in her Sausalito apartment complex provided her with as much social and sexual stimulation as she needed.",
        "Angie mused as she waited listening to her iPod what Joceline would be like as a lover. Maybe she and I could develop an intimate friendship. Joceline's a very sexy lady, she thought\n\nAs the four women entered the lobby they were directed to the Main Ballroom and were told that the four of them were at table number three near the podium and there would be four more guests joining them.\n\nThe women stood and mingled in the reception area in the back of the ballroom, circulating wait staff served them drinks and canap\u00e9s.\n\nAt eight o'clock all were invited to be seated and that serving would begin shortly. The four women walked to their table and met the other two couples. One of the men, Baxter Evans, introduced them all as \"My wife Jeanne, Gordon Ashford and his wife Jessica, and they call me Bax.\" Veronica introduced Edith, Felicity and Grace and they all seated themselves. To Veronica's right was Felicity, then Grace, Edith, Jeanne, Gordon, Bax and Jessica. The fact that neither couple was paired as introduced gave Veronica a brief pause, and as she and Felicity engaged Jessica in conversation, Bax was quiet, but Gordon and Jeanne seemed to be enjoying a private muted conversation.\n\nDinner was excellent and as coffee, liquors and dessert were being served the Master of Ceremonies, a local TV anchorwoman began explaining the goals and accomplishments of the organization and as she was doing this there were tuxedoed staff from the organization ushering the recipients forward. Grace and Veronica were the fourth announced and after stepping to the podium Grace introduced herself as representing Midwest Capital and then after accepting the crystal award stepped aside and let Veronica speak.\n\n\"I'm Veronica Appleton and my husband wanted me to announce that we pledge the same gift for each of the next three years.\" After the thunderous applause died down she smiled and turned to go back to the table. As she passed Bax he said, \"Beautiful tits, when you bent forward I couldn't not look.\"\n\n\"I like then too,\" she remarked moving past him.\n\nAfter all the recognitions the Master of Ceremonies and the Fund Director came to their table and thanked Veronica for her generous future pledge, she having been the only person to have done so. \"I appreciate that that's a million dollar commitment over four years, so again, thank you. Not only me personally, but the Board and the recipients of our grants,\" smiled a very grateful Director.\n\nAfter the awards the dance floor opened and the band on the stage began taking requests, given that the average age of the guests was somewhere between Veronica and Edith the requests were for slower pieces, usually from the forties and fifties. Veronica danced first with Grace then with Felicity. Bax and Gordon approached them as the number ended and Gordon danced with Veronica and Bax with Felicity.\n\n\"You have beautiful legs, Veronica, very sexy in the stockings with the tops showing. I wish I could talk Jeanne into something like that.\" He pulled her closer to him and pushed his erection into her hip.\n\n\"Did I do that?\" demurely asked Veronica knowing damned well she had. Feels like a nice dick from my side of your pants. Can I ask you something?\"\n\n\"Sure anything,\" he responded.\n\n\"Are you and Bax wife swapping?\"\n\n\"Yes, ... regularly, we're staying at different hotels and this is the first time in two days I've seen Jessica. Why do you ask? Interested in some three-way?\"\n\n\"I might be, feels like you've got enough for two of us.\" As the music ended she stepped away from Gordon and looking down at his crotch said, \"Hold that thought.\"\n\nShe found Felicity and grinning took her hand and led her to the restroom. She pushed her up against the sink and deeply and passionately kissed her. \"Want to have some fun?\"\n\n\"More than I just had,\" panted Felicity.\n\n\"Yes, let's put those two 'super studs' in their place. Come on to one or the other and tell them that you'd like to have a three-way with him and the other guy's wife. Tell them a room number in this hotel and that you expect to see then both naked outside your door at eleven-thirty.\"\n\n'Ooh, does sound like fun,\" smiled Felicity.\n\n\"Not as much as we're gonna have with Angie,\" smiled Veronica.\n\n\"Angie, our driver?\" asked Felicity.\n\n\"None other, you told her she looked sexy. I'll bet she's even sexier in nothing at all. I've asked her to join us after she puts the car away. I also told her she could invite Joceline too. Now let's go finish our practical joke,\" smiled Veronica as she and Felicity rejoined the crowd.\n\nAfter a couple of more numbers, Bax asked Veronica to dance and Gordon asked Felicity. Veronica complimented him on how good his cock felt against her and slapped his hand away a few times as he tried to reach inside her dress, finally saying, \"Bring your wife or Jessica to my room at eleven thirty, its 736, don't wear clothes. When I answer the knock at the door and look out the peephole, if either of you are dressed, the door won't open, deal?\" seductively grinned Veronica.\n\nMeanwhile Felicity was giving Gordon a similar invitation to room 843.\n\nAt ten forty-five, Veronica called Angie and asked \"Ten minutes?\"\n\nShe responded, \"Of course.\"\n\nVeronica stood and then leaned over making sure her breasts were visible and cooed into Jessica's ear, \"Eleven thirty, will you be there?\"\n\n\"Ooh, yes, both of us. Nude,\" whispered Jessica.\n\nFelicity did the same pressing her breast into Gordon's shoulder and nipping his ear.\n\nThe four then left through the lobby having noticed that the front door couldn't be seen from the ballroom.\n\nAs they approached the car door being held open by Angie they were all laughing. \"What's so funny?\" asked Angie.\n\n\"I'll tell you when we get back you sexy thing. We put a couple of 'super studs' in their place, details later.\"\n\n\"I wish we could get hold of the surveillance video of those hallways,\" laughed Felicity.\n\nFelicity cuddled into Veronica. She threaded her hand into the front of Veronica's dress and gently caressed her breast. Instead of slapping her hand away, she cooed and kissed Felicity and put her hand on top of hers outside the dress.\n\n##\n\nWe finished our wine, and I began to caress Carol, her hair, her face, her torso, her legs, her magnificent ass, her still wet pussy. Mary Claire sat cross legged watching us and began stroking her own clit. As we became more passionate, Carol said, \"From behind.\" She turned onto her hands and knees, said, \"Lick my asshole and then make love to my hot, loving pussy.\"\n\nAfter thoroughly licking her and getting my tongue a bit into her asshole, I slowly entered her and while holding her breasts fully entered her in a series of short rapid strokes.\n\n##\n\nVeronica pulled Felicity's legs across her lap and slid her hand under her skirt up to her bare thighs above the stocking top. \"I want to eat you, and finger fuck you 'til you beg me to stop,\" she told Felicity as they broke the kiss momentarily.   \"And you don't think I want to do the same to you? I want to lick your asshole and finger fuck both your holes at the same time. Interested?\"\n\n\"And you think you need to ask?\" replied Veronica. \"My ass is virgin territory but I'm willing to get over it.\"\n\n\"Ooh, I'll be your first, how erotic. Your husband hasn't been there?\" murmured Felicity.\n\n\"No, not yet but there's always tomorrow if I enjoy you tonight,\" replied Veronica through the kiss.\n\nGrace and Edith were enjoying mutual pussy contact and both were moaning as they neared the hotel.\n\n\"Five minute warning,\" announced Angie, \"I'm about to cum just looking at you guys in the rearview mirror.\"\n\nReluctantly the two couples separated, smoothing dresses and repairing lipstick. Angie opened the door in the portico of the hotel and as Veronica passed her she asked, \"Still want either or both of us?\"\n\n\"Both,\" was Veronica's smiling reply. \"How soon?\"\n\n\"Fifteen minutes tops,\" grinned Angie.\n\nThey boarded the elevator to the suite floor, Grace and Edith were embracing in a prolonged tongue dueling kiss. Veronica pulled Felicity's back against her and commenced caressing her breasts. As she nibbled on her earlobe Veronica whispered, \"Watch your mother and Grace.\"\n\nWhen the elevator stopped the four women were so carried away that the doors closed before they could disengage and exit. Felicity pushed the 'Open Door' and nudged her Mother. Grace and Edith went directly to Edith's suite and Veronica and Felicity to Veronica's. A magnum of champagne in an ice bucket and two flutes on a silver tray were in Edith's suite delivered when the maid had pulled the bedcovers down. There were two magnums of champagne and four flutes on a silver tray similarly delivered to Veronica's suite.\n\nThere was a note in a sealed envelope under the flutes in Veronica's suite . 'I hope I got this right, four in this suite?' read the note, no signature.\n\nAlmost before the door closed, Felicity unzipped her dress and after stepping out of it and throwing in on a nearby chair, she pushed her half slip down and stood with it puddled around her feet extending her arms to Veronica. Veronica moved slowly toward her noticing her full breasts and broad hips that tapered nicely to a narrow waist and almost flat stomach. \"Turn, Felicity, let me drink you in,\" she commanded smiling.\n\nAs Felicity turned Veronica licked her lips at Felicity's full rounded ass, wonderful legs with slightly full thighs and calves that tapered to a slender ankle, and the profile of her breasts. \"Your seams are a bit crooked. I'll adjust them for you if you like.\"\n\n\"Yes, I'd like,\" responded Felicity with a shiver. \"Would you like some help with your dress first?\"\n\n\"Yes, I think I'd like to wear it tomorrow night and don't want to wrinkle it any more,\" broadly smiled Veronica.\n\nFelicity finished turning around, stepped out of her slip puddle and took two steps to Veronica. As Veronica lifted her left arm for Felicity to unzip her she noticed the champagne. When Felicity had unzipped her Veronica freed the clasp and dropped her arms so Felicity could slide the dress off her shoulders and Veronica stepped out of it and carefully laid it on the nearby desk.\n\nFelicity was almost speechless when Veronica bared her breasts. \"Those have got to be the most perfect tits I've ever seen. I knew they felt good, but didn't imagine they'd look like they do. Turn, please,\" gasped Felicity. The lavender string up Veronica's ass crack and the lavender garter straps down each cheek highlighted her nicely rounded ass and again Felicity shivered. \"I've seen a lot of women's bodies, but never one as perfect as yours.\"\n\n\"Thank you, you sexy woman, shall we have a drink and do a bit of mutual admiration before I muss your hair and lick you to the first of many orgasms. First though may I take and send a picture of you to my husband.\" smiled Veronica.\n\n\"God, I'm glad you're not shy or subtle. Did you read my mind? Yes, champagne then sex, lots of sex. How's this pose, should I spread my legs a bit more? You can send the pictures on one condition ... that sometime I get to play with the recipient too.\"\n\n\"Of course,\" Veronica smiled as she snapped the picture with her phone. After opening and pouring two flutes, Veronica knelt behind Felicity unfastening her garter straps in order to begin to straighten her seams. After finishing and refastening the straps, she put her hand between Felicity's legs and pushed her palm against her pussy while licking and kissing her magnificent ass. Felicity was appreciatively moaning and trying to grind into Veronica's hand when there was a quiet tapping at the door. Veronica looked out the peephole and saw Angie and Joceline. Joceline had put on a blazer so her unfettered breasts were not so evident.\n\nVeronica began laughing as she opened the door wide and invited both wide-eyed young ladies in. Both Angie and Joceline's eyes went immediately to Veronica's bare breasts and then to Felicity's. Angie turned to Joceline and said, \"I think we're over dressed.\" And then to Veronica, \"Are you laughing because we are?\"\n\n\"No, no, no,\" Veronica laughed closing the door. As Felicity was pouring two more flutes, she related the scheme they'd set up.\n\nJoceline, when she'd stopped laughing said, \"I dated the security supervisor there, want copies of the videos? Do you remember the room numbers and the approximate time?\"\"\n\n\"I used 843,\" replied Veronica as she edged toward Angie and put her arm around her shoulder.\n\n\"Mine was 736,\" laughed Felicity. \"We just made them up, if they're occupied at 11:30 they're going to be some surprises.\" Joceline slipped off her blazer revealing her breasts under the sheer sweater.\n\nFelicity asked, \"Are everyone's tits better looking than mine?\"\n\n\"Mine are the only ones in the breeze,\" giggled Veronica. \"Lets see. ... Joceline, unfasten Felicity's bra will you. Angie let me help you off with your shirt and tie.\"\n\nAfter baring Felicity's boobs Joceline reached around her and while pulling her back against her caressed her breasts and lightly pinched her nipples. \"Nothing wrong with these. No sag, nice and firm, very hard nipples,\" she remarked. \"But I'll know more after I've sucked on them.\"\n\nAngie was pulling her shirt down her arms when Veronica opened the clasp on her front closure bra, freeing a beautiful pair of breasts that in may ways were similar to her own. \"Tasty looking,\" smiled Veronica as she began caressing and massaging them. \"Let me take a picture of each of you, I've got to share you beautiful women with my husband.\"\n\n\"He doesn't mind?\" asked Joceline after posing in a nice profile shot, hands on hips, big smile and the nipples clearly visible under the sweater.\n\n\"No, if we were in my bedroom or if he were here, he'd be watching and waiting for my permission to fuck both of you,\" frankly said Veronica.\n\nAngie's pose was face on with a demure look and Veronica also took a full length picture of her with one foot on the coffee table.\n\nVeronica dispatched them via MMS to Scott. \"Angie join me on the loveseat will you?\" asked Veronica taking Angie's hand. \"Your hair looks very nice down, I didn't realize how long it was the way you had it up.\" Veronica sat and invited Angie to lean across her legs and face her. \"I like the sheer stockings, sweetie,\" smiled Veronica. \"Thigh highs?\"\n\n\"No, pantyhose with a surprise on top,\" giggled Angie.\n\nFelicity and Joceline were similarly arranged on the other facing loveseat and all the flutes were on the coffee table between the sofas. Felicity was across Joceline's lap and had attached her lips to Joceline's now bare breasts, having pushed her sweater up above them. \"Wait,\" said Joceline, \"Let me lean forward a bit and you pull this thing off.\"\n\n\"Play with my breasts a bit while I kiss you.\" As Angie's hands were busy on Veronica's breasts Veronica's hand was busy caressing Angie's legs and her ass through her skirt. Then up her bare side and back and then intertwined her fingers in Angie's mane. Angie began moaning with delight at Veronica's touch and moved a hand to the back of Veronica's neck and put her hand in Veronica's hair. She broke the kiss and dropped her mouth to Veronica's nipples and began sucking and lightly nipping each one. Veronica leaned her head back and moved her hand to Angie's nipples to roll them between her fingers.\n\nJoceline while enjoying Felicity's mouth moved her hand down to her legs and began caressing the nylon covered knee and thigh up to the bare thigh and hip. When she started using her nails, Felicity spread her legs. At that invitation, Joceline began tugging her g-string down and Felicity closed her legs and lifted her hips a bit. As Joceline pulled it off her feet past the heels, she pitched it over to Veronica and Angie and it landed on Angie's cheek. Angie inhaled deeply and said around a nipple, \"I've got to taste that pussy.\"\n\nAcross the hall Grace and Edith had completed undressing each other while drinking flutes of champagne.\n\nEdith held her at arms length and complimented Grace on her body. Grace was in awe of the Edith's now naked body. Her tits were high and firm, her stomach fairly flat and her ass and thighs were firm.\n\nEdith widely smiling said, \"I exercise, watch my diet and have regular sex. But most of all I have the best plastic surgeon that money can buy. He's from Los Angeles but comes to see me in a St. Louis hospital to perform his surgeries. I'll bet he could raise those tits to their former glory, but can't imagine that you'd want to touch anything else. Nice ass, nice thighs, luscious looking pussy. Finish that flute I want to love you.\"\n\n\"Edith, lie down, let's cuddle a bit and touch. I need to tell you something. Veronica and I came out here to accept the award as you and your daughter did. I was intending for her to be my first woman. I work for her husband and his partner and have desired him and his partner for the last twenty years and most recently have developed a passion to be with his wife as well. The attraction was mutual. Veronica has had multiple female lovers in the last month, most of whom she's shared with her husband. Veronica and I were to be lovers on this trip except that a deal fell through that would have meant that I was no longer an employee of either her husband or his partner. Our love making understandingly so, got put on hold.\"\n\n\"But she's with my daughter, won't he care about that?\" asked Edith.\n\n\"No, it's different, your daughter doesn't work for his company. Neither Veronica nor her husband are jealous if they know what the other's doing. I'm sorry if I sound needy, but I'm really really horny now.\"\n\nEdith embraced Grace and began passionately kissing her and caressing her breasts, stomach and her pussy. Grace's breathing became labored as Edith tenderly touched her clit.\n\n##\n\nHazel cuddled against Emerson on the way home and kept her hand in his lap atop his steely dick. \"I don't fully understand how Veronica lets Scott have multiple sex partners. I know Carol is her best friend and that they were lovers in college and later, but to arrange for Scott to be with her while she's out of town, I just don't understand.\"\n\n\"Maybe it's just a sex thing, I know they love each other deeply, probably no less than I love you. Even when they're in bed with another woman, Mary Claire comes to mind, they still love each other intensely,\" replied Emerson moving his hand up Hazel's inner thigh, past the stocking top to her warm damp pussy. \"You don't have any underwear on?\" he asked.\n\n\"I do, feel around a bit and see what you can find.\" At that comment Emerson almost ran off the road. Hazel took her hand off his dick and pulled his hand against her pussy while she moved her hips from side to side.\n\n\"I feel something that feels like beads. What is that?\" hew gasped.\n\n\"It's a pearl bikini, there's a string of pearls that stretch through my pussy and up my ass. Call it a very abbreviated g-string. Think you might like to take a closer look when we get home? Believe me it's made me horny all night rubbing against my clit and my asshole.\"\n\nEmerson turned and looked at her, having never heard her use the words 'pussy', clit' or 'asshole' in his presence. His dick twitched as she uttered each one.\n\n\"Surprised by me using those words. Well let's fuck when we get home,\" grinned Hazel putting her hand back in his lap.\n\n\"Hazel why don't I just pull over here we can get in the back seat right now.\"\n\n\"We're only a few minutes from home sweetheart. You can fuck me in the garage if you can't wait to get to bed, okay?\" grinned Hazel.\n\nAfter pulling in the garage and closing the door, Emerson got out ran around the back of the car and climbed into the passenger seat. He unzipped his fly and before he could pull his dick out, Hazel had her hand on it and pulled it out for him. \"Nice cock you got there lover,\" she said as she began to straddle him and pull up her skirt. She wriggled his cock in her slit to get it wet, pushed the pearls aside and impaled herself on him. As she began bouncing up and down, an incredulous Emerson pulled her to him and began kissing her. Breaking the kiss, Hazel said, \"Get a hand on a bare tit, pinch my nipple,\" and resumed the kiss.",
        "Both began groaning as the sensations began to overwhelm them, \"Pinch harder, fuck deeper,\" Hazel said through the kiss. \"Oh, God, I'm on the edge, Fuck me, fuck me, fill me up with your seed,\" she intoned through the kiss. After a few more minutes Hazel had a massive orgasm and as she was shaking through it Emerson plunged as deep as he could and began filling her.\n\nHe pulled his hand out of her bra and wrapped both arms around her nuzzling her neck. \"What's gotten into you?\" he asked. \"We haven't done this in the car since our honeymoon. And did you join the navy to learn that language?\" he grinned.\n\n\"No I didn't. I had a four hour talk with the Reverend Doctor Graham Tuesday afternoon and she convinced me that God wasn't going to get me for having sex with my husband or anyone else he wanted to share me with. Aunt Josie was a dried up mean old woman and my childhood minister was just plain vindictive. She showed me the Bible verses that they had often quoted and explained how they could be interpreted either positively or negatively. God is a loving God, not a vindictive one. After I talked to her I talked to Veronica, who is probably the most sexually liberated person I know after Reverend Graham and realized how much I was hurting you. And I was denying myself as well. I did notice that after using the words I did and fucking you in something other than the missionary position in our bed that lightning didn't to strike. Unless that orgasm we just shared was a lightning strike. I've never come with such intensity. Are we done talking? Let's get inside, I need to ask you something and I want you to see me almost naked in a well lighted room. I've got a nice body and I want you to properly appreciate it.\"\n\nAs Emerson softened and popped out of her wet pussy, Hazel raised, up opened the door and awkwardly climbed out of the car. As she stood she extended her hand and held onto Emerson's as they entered the house.\n\n\"I envy Scott and Veronica, he's probably fucking both those women we had dinner with, probably Mary Claire as well. I wonder what Veronica and Grace are up to in California?' Let's get some wine and play show and tell, shall we,\" smiled Hazel.\n\nIn the kitchen Hazel made sure the shades were down before saying to Emerson. \"Pour that wine and undress me, take clothes off me until I tell you to stop, then I'll return the favor.\" Emerson poured two glasses of a nice Malbec turned, gave one to Hazel and touched his glass to hers saying, \"To us, now and forever. I love you Hazel. I always have and always will.\"\n\n\"And I love you too Emerson, I apologize for causing you pain, but that's all behind us now. If you want to fuck me on a couch or a bed in front of Scott and Veronica, I'm ready. Now unzip me,\" she asked raising her arm so he could undo the side zipper. \"By the way, what'd you think of this dress, should I get more like it, or even shorter?\"\n\n\"I like it and yes whatever you wish. More stockings too, get a whole closet full, more high heels as well. More pearl panties, more sheer bras, more of those that show off your nipples. Buy some very skimpy bikinis to wear to Scott and Veronica's next time we're invited to swim.\"\n\n\"Can you afford all that,\" demurely asked Hazel.\n\n\"Sweetheart, if this deal closes which it probably will next week, Scott and I'll get almost ninety million apiece Shoot, even Kim and you'll get about sixteen million apiece. So will Katrina. Even Marty gets about eight mil. What's a few dozen pairs of heels, several drawers full of lingerie and closets full of sexy dresses with that kind of money?\"\n\n\"Sooo, ... I seemed to have hit a few of your fetishes, care to talk about them?\" asked Hazel as the slid the dress down her arms exposing her half bra clad breasts. \"Look good don't they. Veronica told me they did not too long ago but I was too embarrassed to react. They're nice for a aging forty-five year old gal, don't you think? \"\n\n\"I really don't have anything to compare them to, but they're luscious to me. ... Fetishes, I have a few, some are in common with my partner. ... Nylon clad legs, high heels, teasing lingerie, watching women, stockings that leave the upper part of the thigh exposed. Generous, but nicely shaped asses, on a woman that is. Long haired women. I think I'd like to see your pussy shaved. If we don't like it it'll always grow back, won't it?\"\n\n\"I didn't hear anything in that list that I won't wear or do, but what do you mean by watching?\" smiled Hazel.\n\n\"That's probably more a fantasy than a fetish. As in I actually watched Katrina blow Scott, or Mary Claire eat Veronica, or looking up Veronica's skirt, or watching sweet young things walk through the mall inappropriately dressed. I'd even like to watch our daughter and her partner make love. Veronica even suggested that I watch Scott fuck you while I fuck her or Mary Claire, remember? Am I sounding too weird, sweetheart?\" Emerson asked.\n\n\"No. You're exciting me, but not repulsing me at all. Some of the things you mentioned I don't think I'm ready for, but give me time. Do you like looking at me in high heels, dark stockings, exposed nipples.\"\n\n\"Oh, God, do I! Can't you tell by the tent in my pants.\"\n\n\"Take 'em off, show me in the flesh,\" commanded Hazel.\n\nEmerson couldn't get his trousers off fast enough. Hazel helped unbutton his shirt as he pushed his briefs down. As he stood before her with his cock at a right angle to his body, Hazel shivered a bit in ecstasy and said, \"God damn, you're beautiful Emerson and right now I want to watch us fuck, some other time perhaps watch you fuck someone else or me getting fucked. Come,\" she led him by the hand to their bedroom and asked, \"If we move that dresser and tilt the mirror do you think maybe we could see ourselves.\"\n\n\"Worth a try, you sexy woman.\"\n\nAfter scooting it around a bit and lying on the bed to check its positioning, Hazel spread her legs and with a come hither look at Emerson, said, \"Come, fuck me.\"\n\n##\n\nAfter breaking a tongue entangling kiss, Veronica pulled her head back from Angie and said, \"take off your skirt and let me play in your pussy while you suck my tits.\" Angie stood, unzipped her skirt letting it drop to reveal the crotchless pantyhose, her bare pussy and the pearl g-string. With a sharp intake of breath Veronica said, \"Let's get on the bed, I need to tongue fuck that pussy.\"\n\nAfter pulling the duvet down Veronica had Angie sit against the headboard with her legs apart and knelt between her ankles. She lightly touched Angie's ankles and began to slowly slide her hands up her satiny legs. As she reached her crotch she gently spread her labia and breathed in Angie's arousal. As Veronica began to lick her slit her hands continued up Angie's hips and as Veronica began to lick and suck her clit her fingers began pinching her nipples. Angie put her fingers in Veronica's hair and moaned. Veronica pushed one finger then two into her wet slit curling them and searching for her g-spot. When she found it Angie began gasping and bucking her hips and then with a very strong shudder came.\n\n\"Oh, my God, that was wonderful,\" she exclaimed after coming down a bit. \"Let me return the favor.\"\n\n\"Of course,\" smiled Veronica as they shared a kiss with Angie relishing the taste of herself on Veronica's lips.\n\nAs she traded places with Angie Veronica saw Joceline stand and remove her skirt and g-string, what a nice ass thought Veronica as Felicity had her bend over and put her hands on the coffee table. Felicity moved her hands to Joceline's ass cheeks and buried her face between her cheeks. As Felicity spread her cheeks she began licking and pushing her tongue against Joceline's asshole. Joceline began moaning and pushing back against the assaulting tongue. Felicity pushed her finger into Joceline's pussy and after getting it covered with her moisture pulled it out and pushed it against her asshole. With a bit of pressure she entered Joceline to the first knuckle. \"Oooh, you're right, that's a virgin ass you're in, can you go deeper.\"\n\nFelicity withdrew her finger completely, stood and walked over to her purse and came back with a tube of Carrageenan lube. \"I'd hoped I'd need this tonight,\" she said as she covered her finger and put a large dollop on Joceline's asshole. She pushed her middle finger into Joceline's asshole again and after withdrawing and reinserting it twice her index finger was completely in. Felicity then pushed her first finger into Joceline's pussy and caressed her clit with her thumb. \"Oh, my God, Oh fuck, oh fuck that feels good. My knees are wobbly, I'm going to come,\" chanted Joceline pushing back against Felicity's hand as she came.\n\nAfter a few minutes Felicity pulled her finger out and stood, then led Joceline to the bed.\n\n*\n\nDear readers I hope you're continuing to enjoy this tale of a family and their lovers. I've a long way to go before I finish but the chapters may sometimes be published further apart because of my day job. I'd appreciate comments and if you have some ideas you'd like me to incorporate, please tell me and I'll consider them. I try to respond to all emails unless they're cranky. I'd like especially to hear from any female readers."
    ],
    "authorname": "Reindeer58",
    "tags": [
        "drama"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/any-chance-we-could-ch-32"
}