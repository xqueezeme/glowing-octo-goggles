{
    "title": "At Heaven's 'Bate",
    "pages": [
        "\"Hey, Dad. Is there an old wooden queen size bed frame anywhere I could use?\" Brian asked as he stared at the vista of his father's collection filling the old sales floor of the closed down hardware store.\n\nHis father let out a hum as he thought, and then said, \"There's a queen you could use over in the northwest corner, as long as you don't scratch up the head and footboards. That's real wood, not the particle board garbage everything is made out of nowadays. One of these days, I'm going to find someone who will pay me what it's worth.\"\n\n\"I'll be careful with them,\" Brian said as he wandered through the maze toward where his father had indicated the bed frame was hiding.\n\nHis father asked, \"This for that horror flick you've been talking about?\" \n\n\"No, this is a commission from a historical channel that wants a short reenactment piece to put in one of their videos.\"\n\n\"Well, be sure to send it to me when it goes up. Just grab a mattress and box spring from the stacks. Leave the plastic on them.\"\n\n\"No problem. They mailed me a period recreation quilt that will hide the mattress anyway.\" Upon reaching the indicated spot, he saw the headboard wrapped in shipping blankets. He was always amazed by how well his father knew where every single item in the chaotic jumble resided. A person less familiar with the space could get lost for an hour trying to find the door. \"Found it. Thanks, Dad.\"\n\n\"Can't argue with making something off it until I can sell it. Got to get back to work.\"\n\n\"Me too. It will take me half the day to carry this through the maze back to my studio.\"\n\nHis father laughed and said goodbye. Brian put his phone in his pocket, and went to work extracting the pieces of the bed frame. Upon taking off part of one of the shipping blankets, he was pleased to see that the headboard was moderately ornate &mdash; exactly what he was looking for.\n\nHe grunted as he lifted it on his shoulder. Even with the shipping blanket as padding, it wasn't going to be pleasant to carry alone. He made his way through the narrow aisles, and then pushed through the double doors to his abode. In sharp contrast to the chaos only his father could understand, Brian's studio space in the back was perfectly ordered &mdash; everything in its place.\n\nAd revenue from short films on video sharing sites &mdash; and commissions such as the one he was working on &mdash; had allowed him to up his game with good cameras, lighting, and a green screen. Having just finished his first year of college, he hoped to expand his passion into a real career in filmmaking. He leaned the headboard up against a wall, and headed back out into the jumble.\n\nAfter a few trips through the winding corridors of accumulation, he finished unwrapping the bed frame and assembled it in front of the green screen. It wasn't a period piece, but it would pass well enough for the average person with the accurate quilt on top.\n\nFortunately, the mattresses and box springs were stacked very near the door to his studio. While they were bulky and awkward, the shorter, straighter path made bringing them in no more difficult than packing in the pieces of the frame. With the bed fully assembled, he put on a sheet to cover the plastic, and then draped the quilt over the bed. It barely overlapped one side once he pulled the camera side down to where he wanted it, but it was enough.\n\nHis phone sounded off, and Brian pulled it out to see a text that read, \"What's up?\"\n\nHe grinned and sighed. The text was from his oldest friend, Heaven. Though she went by her middle name &mdash; Anne &mdash; he thought her given name suited her far better, and it was how he thought of her. Ever since she'd broken up with her boyfriend, Heaven had been spending a lot of time with him. It was always bittersweet.\n\n\"Just setting up a shot,\" he replied.\n\n\"Guess what? I'm outside. Mind if I hang?\"\n\n\"Be right there,\" he answered, and headed that way.\n\nThe two of them had grown up next door to each other, and their parents were best friends. So, they'd been spending time together since before either of them could remember. Since they were the only two kids of similar age in the neighborhood, they had gravitated toward each other in school as well.\n\nBrian had developed a crush on her in about the third grade.\n\nHe finally screwed up his courage to ask her to a dance in middle school. Unfortunately, someone else had already asked her, and she told him that she didn't really think about him that way.\n\nOuch.\n\nAs familiar and comfortable as their friendship was, his feelings were always lurking. They hadn't cooled in the slightest in all the years since. Some days, he was perfectly fine just being her friend. Other times, a whiff of her perfume or a little too much exposed skin left him aching.\n\nHe wondered which it would be today. Odds are it would be the painful latter, because he had spent so much time with her of late. Every time she went through a breakup, she leaned on him, and the closeness made it more difficult to ignore his inner desire for more. He did everything in his power to suppress it and hide it from her &mdash; and had never made her uncomfortable by asking her out again.\n\nShe waved as soon as she saw him &mdash; which was only a few steps from the door thanks to the walls of his father's collection. It was definitely going to be one of those days. Her shoulder length auburn hair rustled in the breeze with just a few strands covering the side of her face. She was wearing a pair of shorts that showed off her legs, and a tight, sleeveless top that left her midriff bare.\n\nBrian unlocked the door to let her in. \"Hey, you,\" she said, and then leaned in to give him a brief kiss on the cheek.\n\nIt gave him chills.\n\n\"Let's go. I'm always afraid all this stuff is going to collapse on us,\" she said, and let out a little laugh.\n\nHe chuckled as he locked the door. \"Want to lead the way?\"\n\nShe shook her head. \"I'm already lost.\"\n\nAs they walked through the cluttered store floor, Brian thought he noticed something pensive in her expression. \"Everything okay?\"\n\n\"Hmm? Oh. Yeah, I'm fine,\" she answered.\n\nIt sounded a little forced to him.\n\nOnce they passed through the double doors, she looked surprised by the bed.\n\n\"I'm doing a commission for a history channel,\" he explained. \"The background will be green screen, but I'm going with as many practical props as I can.\"\n\nShe nodded and said, \"I didn't think it looked like something you would put in one of your movies.\"\n\n\"You sure you're okay?\" Brian asked, thinking she still looked anxious.\n\nShe glanced down for a moment, shrugged, and offered a half smile as she asked, \"Is it that obvious?\"\n\n\"Well, a little,\" he answered.\n\n\"I kind of want to ask you something.\"\n\n\"Like what?\" he asked. He noticed that her cheeks had turned a little red.\n\n\"Well, there's this contest.\" She paused for a second, and then continued a little more quickly, \"There's a five hundred dollar prize, and I was hoping you might help me win it.\"\n\n\"How can I help?\"\n\n\"Well, it's video...\" She pulled out her phone and said, \"Let me show you.\" Heaven tapped and swiped on her phone, then held it out to him.\"\n\nBrian's eyes widened when he saw the advertisement of a five hundred dollar prize for the winning amateur masturbation video on a porn sharing site.\n\nHeaven quickly said, \"I figured, you're a guy, and you make movies, so you could give me advice on what would be hot, and how to make it look totally awesome.\"\n\nHe opened his mouth, but no words came out.\n\n\"I know. I know. It's soo awkward, but I really want to win that money. So, do you think you could help me out? Pretty please?\"\n\nHe couldn't resist her. Those big, expressive eyes, the flush in her cheeks, and the playful lilt in her voice was too much. \"I can try,\" he answered.\n\n\"So, what do you think?\"\n\nI think I just graduated to the King of the Friendzone. Concentrate. Pretend it's any other movie, he thought, despite knowing it was anything but. \"Do you have any idea... Have you watched any videos like that?\"\n\nShe said, \"I watched a few, and they all seem to be the same. She's only wearing panties, then takes them off, and diddles herself, with lots of screaming and moaning. It just seems so fake and boring.\"\n\n\"You want to do something different?\" Brian asked, still in complete disbelief that he was having the conversation with her.\n\n\"Mmm hmm.\"\n\n\"Let me think a second,\" he said, stalling for time. The fact of the matter was, he couldn't think of anything except her playing with herself.\n\n\"If it's too much, that's okay.\"\n\nThere was only the tiniest hint of disappointment in her voice, but that was enough. He latched on to her comment about the videos she watched feeling fake. \"Maybe start it out more naturally. Come into the shot wearing normal clothes.\"\n\n\"Just like, what I'm wearing now?\"\n\n\"Yeah, sure.\"\n\n\"Like I just came home feeling horny and have to do something about it?\"\n\nJesus. He nodded and said, \"Uh huh.\"\n\n\"So, kind of like there just happens to be a camera there, and I don't know about it?\"\n\n\"Sure.\"\n\n\"Maybe...\" She stopped, pointed at the bed, and asked, \"Can I sit down and try something? See what you think?\"\n\nHe barely had time to nod an acknowledgment before she walked over to the bed, paused a couple of steps from it as if hitting a mark, and then continued on to sit down.\n\nShe let out a sigh, ran her fingers through her auburn locks, and then reached down to slip off her right shoe. It landed on the floor with a quiet thump, and was quickly followed by the left. Next, she pulled off each sock in turn, and dropped them on top of her shoes.\n\nHeaven sighed again, scooted backward, and then turned so she could lie down on the bed. Once reclined, she briefly caressed her bare midriff, and then slowly slid her hand up to her breasts. A quiet moan escaped her as she squeezed one of the big, beautiful mounds.\n\nBrian was mesmerized. His cock stiffened rapidly as he watched the sexy display.\n\nHeaven suddenly dropped her hands to the bed, sat up, and asked, \"Something like that? Is that hot?\"\n\nThat is the hottest thing I've ever seen in my life, he thought as he tried to ignore the throbbing between his legs. \"Yeah. That's good.\"\n\n\"It's not too slow? I was thinking I would play with my boobs through my top for a while, and then slowly pull it up to show off my bra, and then pull them out. You know, a lot of teasing.\"\n\n\"That should work,\" he said, and inwardly winced as his voice cracked.\n\n\"What do you think is hotter &mdash; just fingers, or a vibrator?\"\n\nHe absolutely had a preference. Articulating that he would prefer just fingers was a different story though. \"Uhm... Well... I guess just... You know.\"\n\n\"It would seem more spontaneous without a dildo or anything, wouldn't it?\"\n\nHe gave a quick nod, hoping he wasn't showing the mix of anxiety and arousal he felt in his expression.\n\n\"I like it,\" she said, a smile spreading across her face. \"I don't really want to record it on my phone, though.\"\n\n\"If you want to borrow a camera&mdash;\" he began.\n\n\"Do you think you could record it and edit it for me? I just know it will be amazing if you do it.\"\n\nCorrection, you're Emperor for life of the Friendzone, he thought. Stop it. She's your friend, and asking you for a favor.\n\nShe said, \"I know it's a lot to ask.\" Once again, there was just a touch of disappointment in her voice.\n\n\"I can do it,\" he quickly responded.\n\nA wide smile spread across her face. \"No time like the present. I mean, you even have a bed set up. It's perfect. Just need to put one of my comforters on it or something.\"\n\nThis is actually happening. Right now, he thought in disbelief.\n\nShe asked, \"Do you think you could find a nightstand or something?\"\n\n\"I think I know where I can find one out there.\"\n\n\"Maybe a lamp... I could bring my phone dock from home too.\" She gestured toward the green screen. \"Can you work your magic with that and make it look like my bedroom wall? What about the floor?\"\n\n\"I've got some carpet sections and mock-ups of hardwood.\"\n\nShe giggled and said, \"Hardwood. Why don't you get things ready while I go home and pick out a few things to make it look lived in? I'll need to wait an hour and a half or so until Mom leaves, so she doesn't ask why I'm putting stuff in the car.\"\n\n\"Okay.\"\n\n\"Thank you so, so much,\" she said, and then walked over to hug him. \"Let me out, and then I'll see you in a little while?\"\n\n\"Sure.\"\n\nBrian waited for her to put back on her shoes, walked her to the door, watched her drive away, and then slumped against the glass door with a groan. He was committed, even though he was certain it was going to be the death of him. Concentrate. Set up the shot, he told himself.\n\nFirst things first, he located the nightstand he'd mentioned. It was a modern piece that was part of a lot his father had picked up. It was nice, but nothing special. It was in the resell part of the collection near the front door, but despite that, it had been there for a couple of years already. He set it up next to the bed, and then returned for a nice lamp.\n\nUpon running an extension cord and planning how to hide it, he found that the lamp worked, and the bulb was even good. Another outlet would provide power to her phone dock on the nightstand.\n\nThe technical work actually managed to calm his nerves, allowing him to somewhat forget the truth of the shot he was setting up. He assembled a second green screen, allowing for an angle shot from the foot of the bed. Then he put down the hardwood flooring sections, which were actually veneer over plywood.\n\nHe brought in lights, and used filters to give the scene a bit of warm ambiance. Then he set up two cameras, with one shooting from the foot of the bed, and another coming from the side. He was deep enough into his director's mindset to even grab a dolly a friend had made for him, in order to have an overhead angle coming from the foot of the bed.\n\nThinking about that shot was what broke him out of his forced disconnection from reality. He could imagine her naked and masturbating, with her face flushed and tight with pleasure. He squeezed his throbbing erection through his jeans as he fantasized &mdash; which was all too familiar to him.\n\nHis face burned when an alert from his phone interrupted the fantasy, announcing that Heaven was on her way. He desperately turned his thoughts toward the most disturbing things he could think of, trying to calm down his raging erection. He'd mostly succeeded by the time Heaven sent a message saying she was outside.\n\nShe was dressed in the same outfit as before, but with a backpack slung over her shoulder.\n\n\"Could you grab the comforter out of my car?\" she asked when he unlocked the door.\n\n\"Uh huh,\" he responded, and then slipped past her. He saw the comforter in her back seat, and picked it up. The faint scent of lavender coming from the comforter caused him to break out into gooseflesh. The aroma came from the lotion she used, and he'd come to associate it so strongly with her that he couldn't smell it without thinking of her. His last girlfriend had used a similar lotion, and he knew without a doubt that it was what had attracted him to her more than anything.\n\nHer inability to understand that his relationship with Heaven was completely &mdash; regrettably &mdash; platonic was what had caused her to break up with him. He hadn't been out with anyone since, and it had been a couple of months.\n\nContrary to what she'd said before, Heaven led the way, and unerringly negotiated the labyrinth back to his studio.\n\n\"Wow. You really went all out,\" she said upon seeing the setup.\n\nHis face warmed. \"It's no big deal.\"\n\n\"Maybe not for you,\" she said, and then winked. \"Put the comforter on the bed while I get the rest of my stuff.\"\n\nHaving already removed the quilt, it only took a few seconds to spread the comforter over the bed and a couple of pillows he'd pillaged from the jumble. By then, Heaven had pulled out her phone dock and a light purple bottle of lotion. She sat them on the nightstand and reached back into her backpack.\n\nBrian could practically see her spreading the lotion from that bottle over her body, and distracted himself by grabbing the cord of her phone dock and plugging it into the extension cord. She had hung a hoodie over one of the posts on the footboard, but what he couldn't take his eyes off of was her artfully dangling a lacy white bra around it as well.\n\nHe quickly tore his gaze away from the undergarment as she turned to look at him. She then backed away and took it all in.\n\n\"You know what it needs? A water bottle. Do you have one?\" she asked.\n\n\"Sure, I've got some back in the office. Be right back,\" he said, glad for the escape &mdash; no matter how brief it would be.\n\nWhen he returned, she'd added a couple of stuffed animals to the bed as a final touch. She accepted the water bottle, fussed about where it should be sitting for a few seconds, and then finally settled on a position.\n\n\"Okay,\" she said as she turned back toward him. \"Do you think this is about right?\"\n\nBrian could barely believe his eyes when she pulled up her shirt, revealing a pretty pink bra.\n\n\"Not too fancy or slutty?\" she asked.\n\n\"No. Perfect,\" he said, and hoped it didn't sound as sad and desperate to her as it did to him.\n\nShe pulled her shirt back down, but only upped the ante when she tugged down the front of her shorts to reveal a pair of pink panties.\n\n\"It's a matching set. Well, I guess we're ready to go then,\" Heaven said, as if it was the most normal, mundane thing in the world.\n\nHe nodded. \"I'll turn on the cameras and head back to the office, then when&mdash;\"\n\nShe interrupted, \"You're not going to work one of the cameras? Wouldn't it come out better if you were?\"\n\nHe couldn't lie to her and admitted, \"Yes, but I didn't know... Well...\"\n\n\"It's fine. If it's okay with you, I mean?\"\n\nYeah. Sure. I'm so non-threatening that you feel comfortable masturbating in front of me, he silently lamented. \"I'll take the camera over here,\" he said, pointing to the profile angle. At least that way, he wouldn't be staring straight into her pussy.\n\nShe pointed at some tape he'd put down earlier, and asked, \"Is that my mark?\"\n\nSince she'd played parts in some of his short films, she had easily recognized the taped marks. He answered, \"Yeah, come in from there, at about the angle of the arrow. Try to stay sort of in the center of the bed, too.\"\n\n\"I'll try,\" she said, and then giggled while heading for her mark.\n\nBrian turned on the two cameras at the foot of the bed, and then manned the one at the side. He took a deep breath and said, \"Action.\"\n\nHeaven walked into the frame, duplicating her actions from earlier in the day. She took off her shoes and socks, reclined on the bed, and touched her breast. He tightened the frame, showing her from the waistband of her shorts to her hair spread out on the pillow.\n\nHeaven explored the firm mounds, and let out a quiet moan. It was that sound that broke him. His jeans tightened from the swelling of his cock, and there was nothing he could do about it.\n\nNext, she slid her hand beneath her half shirt, and he could see it moving over her breasts under the cloth. Before long, her hand lifted upward, and the other joined it to pull her top up above her breasts.\n\nHeaven drew in a fast, open mouthed breath when her fingers glided over the upper swell of her breasts, and she let it out as a long sigh. She traced the curve of the right into the valley between them, and then up the curve of its twin. Her nipples were pressing at the material of the pink bra, and when her hand moved downward over the left one, she gasped, and her back arched.\n\nShe rested her forearm against the right nipple while flicking the left with the tip of her pointer finger. She moaned &mdash; the sound deeper, but no louder than the first. It was then that she grabbed the tail of her top and pulled it over her head. Brian's heart ached from the sight of her hair tumbling down in auburn waves from the tight neck of the shirt.",
        "Heaven dropped her top on the edge of the bed, where it hung precariously for a second before artfully slithering down to the floor.\n\nOnce again, her back arched, but this time, she reached into the gap between her skin and the mattress. A deft twist of her fingers born from years of practice caused the band of her bra to go slack. The slow, graceful movement of her right arm as she slipped it out of the bra strap put Brian in mind of a dancer. It also revealed tantalizing amounts of skin, though both of her nipples remained hidden from view.\n\nBut only briefly.\n\nIt was all he could do not to groan when she lifted her bra off her breasts, fully revealing them to his mesmerized gaze. The big mounds slipped slightly toward her sides when unbound, hinting at their weight. They were capped with pale pink circles &mdash; barely blushing a different color than her skin. Her nipples were big, dimpled, and erect. In his eyes, her breasts were absolutely, indisputably perfect. Though he dimly heard the muffled whump of her bra falling to the floor, he hadn't even seen her arm moving.\n\nHe most certainly saw both of them move when Heaven cupped her breasts in her hands, pushing them together. She whimpered and used her thumbs to tweak her hard nipples. She gave both globes a squeeze, squishing them in her hands, and then let the right hand slide down to her abdomen while the left continued to caress her breasts.\n\nHis instincts as a filmmaker &mdash; honed since the age of twelve when his parents had first let him use the camcorder to make a ridiculous monster movie parody for Halloween &mdash; kicked in. He widened the frame as her hand moved down her body, and over the top of her shorts.\n\n\"Ah. Oh,\" she said in a soft, sweet voice when her hand curled over her mound and her fingers slipped between her thighs. Her body moved in undulating waves as her fingers worked between her legs, and she drew in deep breaths through her nose.\n\nShe whimpered &mdash; the loudest sound she'd yet made &mdash; when she pulled her hand from between her legs and slipped it beneath the waistband of her shorts. She shuddered and pinched one of her nipples between a dainty finger and thumb when her hand returned to its former position, with one less layer of cloth between it and her need.\n\nThe sight of her hand moving beneath the material was sensual beyond belief. Though it was plain what she was doing, it was still hidden away from prying eyes, and thus even more enticing. Again she writhed with pleasure from her touch &mdash; her head lolling on the pillow, causing auburn locks to partially obscure her beautiful face.\n\nBrian's cock throbbed uncomfortably within the confines of his jeans. He was certain he'd never been harder in his life, and he couldn't give himself even the slightest relief. Still, it was the sweetest torment he could imagine.\n\nHeaven's shuddering breaths grew louder, and were occasionally interrupted by whimpers and moans. A loud gasp marked the moment she pulled her hands out of her shorts and hooked her thumbs beneath the waistband. She quickly lifted her butt from the bed and pushed her shorts down, fully revealing her pink panties. She lifted her legs, and between her feet and hands, managed to slip completely out of her shorts. She had barely kicked them off at the foot of the bed when her thumbs returned to her waist.\n\nBrian's heart thundered in his chest as her panties slid down. Though she was moving quickly, it all seemed to be in slow motion to him. He first saw a roughly triangular tuft of neatly trimmed auburn hair, and then a patch of perfectly smooth skin. His erection felt as if it was going to burst his zipper when her folds emerged from beneath the cotton. A sliver of slightly darker pink in the crotch of her panties attested to how wet she was. The cloth slid down her shapely legs, but remained forgotten around one ankle as she parted her thighs.\n\nHeaven dipped two fingers between her folds, and they emerged glistening with her wetness. The slippery digits immediately moved to the heart of her need. Her back arched high from the mattress, her left hand clawed at the comforter, and a long, warbling whimper escaped her.\n\nHis cheeks and ears both burned as he blushed from watching her intimate play. Praying that she couldn't see the evidence of his shame with the camera in the way, he tried to concentrate on filming her. It was all but impossible.\n\nShe wriggled and moaned on the bed while tracing slow circles over her clit with her fingers. After a few seconds, she dipped them back into the font of her juices, and returned to her pleasure button with a flurry of faster, back and forth strokes. She followed that by pulling back her hood with her other hand, and stroking her naked clit with the tip of one finger, which made her loudly gasp.\n\nBrian watched her on the LCD screen, desperately wanting to look over the top of it at her, and yet deathly afraid to do so. Somehow, a bit of his brain remained disconnected from the sexy display, and took note of the time readout in the corner. For three minutes, twenty-two seconds, he watched her slowly tease her need, and listened to her whimpers growing louder, and more frequent.\n\nAs she had many times before, Heaven slipped her fingers between her nether lips, but this time, a third joined her pointer and middle fingers, and went deeper. She stretched her pinky and thumb out to the side, and buried her fingers in her pussy. The digits pumped slowly into her canal at first, but soon moved faster. The squishy sounds of her fingers penetrating her gave him chills.\n\n\"Yeah. Yeah. Uh huh,\" she said in a high-pitched, breathless voice as the motion of her arm grew more energetic, adding the faint sound of her hand clapping against her bare skin to the symphony.\n\nHer left hand joined the right between her legs to stroke her clit, and her body lurched from the increased stimulation. Brian saw a flush arise in her cheeks and spread through her face. A sheen of sweat glimmered from her tightening features. Indistinguishable, almost-words tumbled from her lips amidst whimpers and yelps. His whole body ached for her as she approached the brink of ecstasy.\n\nHeaven's mouth slowly gaped open and her breaths emerged in blasts. \"Ah! Ah! Ah!\" she cried as her pleasure soared. Then suddenly, she curled up and squealed with her fingers buried deep inside her.\n\nBrian held stone still, irrationally thinking that the slightest movement would make him come in his pants as he watched her explode into orgasm.\n\nShe yelped as the second wave of sweet surrender rushed through her body. A rapid-fire series of whimpers followed when her fingers haltingly thrust into her depths for a few seconds. Then she squealed again. Heaven writhed, twitched, and trembled as she endured the throes of her orgasm.\n\nEventually, her body stilled, and her cries faded. Her fingers slipped from the embrace of her pussy, and she brought them to her lips. She let out a long, deeply satisfied moan while licking her juices from them. At last, she let her hand settle atop her breast, sighed, and rolled onto her side.\n\nBrian swallowed hard when it appeared she was looking directly at him.\n\nHeaven's eyes drifted closed, remained that way for a few seconds, and then snapped back open. She blew out a breath from between pursed lips, and sat up to lean against the headboard.\n\nBrian shut off the camera he was working and said, \"I'll get the other two shut off and go download&mdash;\"\n\n\"Brian,\" she said, cutting him off. When he looked, she was beckoning him with a waving hand.\n\nHe nervously approached where she sat naked on the bed, mindful that he was still stone hard. Heaven swung her legs out of the bed and faced him as he closed the distance between them.\n\nWhen he was a step away from the bed, she glanced down for a moment, looked back up at him, and said, \"You're hard.\"\n\nHe could have dropped dead of shame in that instant. He hastily moved a hand in front of his erection and apologized, \"I'm sorry. It's just...\"\n\nHe trailed off when she reached out and took the hand he'd interposed between them to hide his shame. She curled her fingers around it and said, \"Don't apologize. I wasn't sure you were interested in me anymore. I've been trying to give you signs for a while now, and you didn't seem to notice.\"\n\n\"Huh? What? Why?\" he asked.\n\n\"Because when I was about to text you after catching Lucas cheating on me, I finally realized that the only guy who's ever really been there for me... Always been there for me is you. I'm so sorry I strung you along all this time.\"\n\nBrian vehemently shook his head. \"You didn't.\"\n\n\"Yes, I did. Every time some asshole cheated on me, or treated me like dirt, I came straight to you and cried on your shoulder, even though it was probably killing you. I knew you liked me, and I just kept thrusting myself into your life, not caring how it made you feel, and then moved on to the next jerk.\"\n\n\"I'm your friend. That's what friends do.\"\n\n\"But you wanted to be more.\"\n\nHe didn't know what to say. It sounded as if she was about to walk away from him to preserve his feelings, but as painful as her nearness was, he practically lived for those days of wonderful torture when he had her to himself.\n\n\"Now...\" She paused, bit her lower lip, and then finished, \"I do too.\"\n\nHis brain completely froze up as he heard the words he'd longed to hear for so many years. He stared at her in disbelief, wondering if it was a dream, or some cruel cosmic joke.\n\nHer smile faded and she looked away. \"If... If you want to, I mean. I understand if&mdash;\"\n\nSeeing the pain in her eyes was all it took. He held tight to her hand as she tried to pull it away, lifted his other hand to her cheek, raised her eyes to his, and said, \"Yes.\"\n\nHeaven's eyes welled up with tears. She stood up, wrapped her arms around him, lifted up onto her toes, and leaned in for a kiss.\n\nThey both shivered as their lips met in a series of soft pecks, followed by a longer, deeper kiss. Her hand roamed over his back while the other moved to where her fingers could entwine in his hair. He caressed her cheek and her back, feeling as if he was hovering above the floor &mdash; as light as a feather.\n\nThe couple broke from the kiss in perfect unison to stare deep into each other's eyes for a few moments. For some reason, Brian couldn't hold back a chuckle, and she joined in as soon as she heard it.\n\n\"So, do you want to go... Uhm...\" his mind whirled as he tried to think of somewhere to take her.\n\n\"Yes,\" she answered, not seeming to care the destination. \"But...\" The fire of desire came alight in her still misty eyes, and she continued, \"It seems like a shame to waste this chance to make up for lost time.\"\n\nOnce again, she sought his lips &mdash; but this time with hungry passion. He returned the kiss in kind as she slowly sat down, pulling him into the bed.\n\n****\n\nThanks for reading! Please take a moment to vote. ( once per reader ) Comments and favorites are a nice boost, too. That's my writing fuel, so every little bit pushes me toward putting out a new story.\n\nFeel free to point out any mistakes I missed in my self-edit. If they're painful enough, I'll put in a fix.\n\n \n"
    ],
    "authorname": "RejectReality",
    "tags": [
        "big tits",
        "fingering",
        "friendzone",
        "masturbation",
        "redhead",
        "video",
        "voyeur",
        "erotic",
        "teasing",
        "aroused"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/at-heavens-bate"
}