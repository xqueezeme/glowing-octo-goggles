{
    "title": "Contrast Ch. 04",
    "pages": [
        "This is the last chapter. I'd like to thank everybody for reading, and I'd especially like to thank DonnaBeck for doing a first read before I posted this chapter and the previous one. She's a wonderful writer with a great sense of story and character, and \"Contrast\" is much better due to her holding my feet to the fire on a couple of things. \n\nThe story so far: After a chance street meeting, a kind-of-meek white guy and a part-time-college black woman go back to her place and fuck like weasels. Then they agree to begin a just-for-sex, no-names relationship. What they expect to be a few days or weeks of a hot-and-heavy fling turns into months, and their constant intimacy brings both of them to a place much more emotional than they had planned. The rules of their game are clear and straightforward - no names, no personal details. But with every erotic encounter, something deeper and more powerful challenges their resolve to stick to that agreement ... \n\n* * * \n\nHim \n\nThe light is dim, one lamp across the room glowing at its lowest setting. She's on her elbows and knees in the middle of the bed, and I'm three strokes into fucking her in the ass ... when the phone rings. \n\nGod damn it. \n\nWe've done anal before, but it's rare. Maybe five times in the whole six months. So it's special - I mean, everything is special, every time is amazing and unique and its own mind-blowing experience ... but the butt sex is always over the top. Especially the penetration and the first few thrusts after that, when every push I make into her brings an explosive, animalistic grunt from her throat. \n\nSo the ring-tone's chipper little I-don't-give-a-fuck-if-I'm-interrupting-anything tune is even more aggravating than it ordinarily would be. \n\n\"Guh,\" she says, \"don't stop ...\" \n\nI pull back with the tight-ring squeeze of her asshole sucking at my shaft, slowly revealing its veined length and glistening coat of lube. It's not that hard to ignore the ringing. \n\n\"oh,\" she says, \"ohhh ...\" \n\nThen \"NGH!\" as I load myself back into her, and \"Yeahhhhh\" as I clutch her waist and hold the stroke deep. \n\nDoo-do-dee-doo-de-do, diddle-oo-dee-do-de-doo. This isn't the first time one of us has gotten a call during sex, but it's the first time we've had a precious in-through-the-out-door moment interrupted. I really need to remember to put the damn thing on vibrate only. \n\nTwo more strokes, and I'm barely conscious of the annoying loop of electronica. Another two strokes after that, it finally gives up. \n\nHer forceful gasps have gone to moans now as she moves with me in cyclical flesh-waves, breasts swinging free beneath her, forehead rolling against the sheets. \n\n\"Faster,\" she breaths. \"Harder.\" \n\nMy hands squeeze deeper into the cushioning flesh of her waist. I bring up my speed, add another notch of power. \n\n\"UH! God, yes!\" \n\nFor a maybe a minute, definitely no more than that, we pound ourselves together, her gorgeous, full, round bottom swallowing me up, letting me loose, swallowing me up again. \n\nThen. \n\nDoo-do-dee-doo-de-do, diddle-oo-dee-do-de-doo. \n\nI say it out loud this time: \"God damn it.\" \n\nShe laughs, but something about the dainty synthesized melody infuriates me and gives my next thrust a nitro-boost of anger. \n\n\"UHH!\" The gutteral intensity of her response sparks and sizzles a crossfire with the phone-hate in my brain, and I go into overdrive, every thrust a punch of revenge against whoever is on the other end of that line. \n\nDamn \n\n\"Eee!\" \n\nyou \n\n\"uh - uhh -\" \n\nyou \n\n\"Yes, honey, fuck me!\" \n\ninconsiderate \n\n\"Oh god -\" \n\nsack \n\n\"I'm gonna ... I'm gonna ...\" \n\nof \n\n\"UHHhhuuAAAHH!!\" \n\nShe's screaming, contorting, smacking one hand down against the mattress, and out of nowhere, my brain thinks - \n\nOh. What if it's the call. \n\nI go completely still. She's panting, face buried in the sheets, hands clenched into fists. I feel the rhythmic throb of her orgasm clamping the sphincter of her anus around me in fierce pulsations. The phone has gone silent. \n\nIf it's Gabe, he'll keep calling. He wouldn't text me something like that. \n\nHesitantly, I take an experimental stroke out and in. She quivers and trembles and makes the most fantastic vibrating whimper in her throat. \n\nThe phone rings again. \n\n* * * \n\nHer \n\nI have just had the most incredible motherfucking ass-gasm of my life, so hearing another call on his phone is nothing but hilarious to me. I laugh and I shake and I open my mouth to say, \"Aren't you going to get that?\" \n\nBut then I realize he's stopped again, and his hands are limp at my waist like he's forgotten me. And when I lift up and turn my head to see what's going on, he's got a look on his face that says something is very, very fucked up. \n\n\"Do you need to get that?\" I ask, all the sarcasm I was about to lay on him suddenly gone. \"It's okay.\" \n\nHe pulls out and rolls off of the bed. Something's wrong with his breathing. Without knowing why, I'm terrified for him. I turn over to track him as he stands up, bends over, picks up his jeans, fishes in one of the pockets for that ridiculous sing-song noisemaker. \n\nIn the glow of the screen, I see his eyes recognize the phone number. Then they squeeze closed and he swallows before hitting the answer button. \n\n\"Gabe.\" \n\nFaint and buzzing, that ear-muffled other-end-of-a-conversation sound is all that reaches me. \n\n\"Okay,\" he tells Gabe, whoever that is. His voice is hollow and unsteady. \"How long ago? Uh-huh.\" \n\nThe mattress shakes as he slumps down to sit on it. \"Did you call Susie yet? I can, if you're - no, sure. I just don't want you to feel like you have to take care of everything. Uh-huh. No, I know. Thanks. That's why you were always the favorite son, Gabe - you have this kind of shit under control. Look, man, I ... what? Okay, tomorrow. Yeah. Yeah. Love you too.\" \n\nAs he punches the hang-up circle, tosses his phone away to land on his jeans, and puts his face in both hands, I crawl over to him, wanting to help but not sure if I'm allowed to. I don't know this man's name, but now ... he has, what, a brother or a cousin named Gabe, and a sister, maybe - Susan - and someone has just died, probably his mother or his dad. \n\nI know what that's like. Except the brother and sister part. \n\nMaybe our agreement means our lives aren't supposed to touch like this, but I can't keep my hands off his shoulders, and even though I don't hear him sobbing, I feel it, and I move in close and put my cheek against his warm, trembling back and slide my hand around onto his chest. \n\nWe're like that for long enough that I realize I'm smelling my ass-juice on his dick, and it pisses me off that my brain even notices it, because every single brain-cell that I own ought to be trying to figure out how to make him feel better, even though I also know, completely, that there's no way for me to do that. \n\nFinally, he takes a few deep breaths and straightens a little, hands sliding together as he pulls them away from his face. \n\n\"I'm sorry,\" he says in a thick voice. \"I'm sorry about that, I -\" \n\n\"Shut up,\" I say, quietly, squeezing my hand into his chest. \"Tell me what you need. Do you need to go? Do you need me to hold you? Do you want me to try taking your mind off it?\" \n\nIt takes a couple more uneven breaths for him to answer me. \n\n\"Just ... lie down with me, okay?\" \n\nWith a nod, I kiss his shoulder and slide across the sheets to make room. \n\nThen we curl together on my bed, pressed together but completely still, and I have never known that a place could hurt so much and be so wonderful at the same time. \n\n* * * \n\nThem \n\nA month later, their routine is more or less back to normal. Except that instead of occasionally holding her quietly after sex and thinking, This is almost better than the actual sex, he now thinks it all the time. With no \"almost.\" \n\nAnd instead of thinking, Should I, or shouldn't I? Should I, or shouldn't I? about the idea of asking him for more, asking for them to share names, to learn each other, she finds herself thinking, How much longer will I be able to stop myself? \n\nHe comes over one Thursday after work with a bag of takeout Chinese. After kissing for a couple minutes just inside the door, they sit at her little round kitchen table and eat sesame chicken and moo goo gai pan straight out of the cartons, passing them back and forth. Occasionally she catches a mushroom in her chopsticks and holds it out for him to snag from their bamboo grip with his teeth. Sometimes teasing him by pulling it back at the last moment, which he doesn't mind because it forces him to lean closer to a fantastic view of the cleavage within her tight blue tank top, unhampered by any bra. \n\nHe's thinking she's quieter than usual. She's sitting with her heart pounding because she's done something wrong. Deliberately. On the nightstand beside her bed there's a book - her favorite book. It shouldn't be there, and all through the Chinese food she's on the verge of excusing herself for a second to go in and put it back on its shelf. It's part of who she is, and if he sees it and asks about it and she tells him even a little bit, he'll know so much more about her than he does right now. At least, that was her plan when she put it there. \n\nIs she playing mysterious? he wonders. Their chairs are close, her thigh touching his. Sometimes the mushrooms come circling around from his right side as she loops her arm across his shoulders and snuggles close enough to press one breast against his left bicep. She watches him closely as he turns his head to take the offered bite, and she's still watching closely when he turns back and puckers for a quick kiss before chewing. Maybe she's just looking to see if I'm okay. \n\nThe hole where his mom used to be isn't filled in yet (and won't ever be). But it's mostly a part of his internal landscape now, something that became familiar and bearable much more quickly than he expected it to. Probably because they'd had so much warning, he told himself. Almost a year of knowing it could happen at any time. \n\nYeah, he thinks, looking into her unbelievably brown eyes as he chews the last of the straw mushroom. That's why you've been able to cope. Keep telling yourself that. \n\nGod, you've got to get up and go hide that book, she thinks. The second he sees it he'll know what you're trying to pull. \n\nBut she doesn't. She just keeps eating and watching him and seeing him watch her back. How does he manage to be so fucking hot? \n\n\"Okay,\" he says at last, pushing the sesame chicken away, \"you are way too sexy, and if I don't stop, I'm going to be too full to bone you. You ready to get to it ...?\" \n\nBitch? \n\nShe hears him not saying the word plain as day. Oh shit, what does that mean? Maybe it doesn't mean anything. Tell him, \"Yeah, but give me a second\" and go move that goddamn book. \n\nBut her heart's cranked up so wild she doesn't think her voice will be steady, so she just tries to give a shrug of, Sure, what the hell, as she puts her own food down. \n\nHe's up and walking toward the bedroom then, unbuttoning his shirt, glancing back, wondering what she's got up her sleeve for him. She's never this reserved. Something's going to break loose and explode when they get in the bedroom. Something good? He wonders what the hell it is and feels her presence like a wave pushing him toward the bed. \n\nBut ... \n\nWhile still in the tiny hallway, he catches sight of the nightstand through the doorway. \n\nWhat the fuck? \n\nHis first thought is, Did she look through my wallet while I was sleeping and Google me? \n\nThere's no mistaking the cover of that book, even from across the room. It's the middle book of his first trilogy, the edition with that lame blank sky-blue cover he'd cobbled together himself in his early days of self-publishing. Where the hell would she have even gotten it? He only sold a few dozen copies before he paid to upgrade to a professional cover. And half those sales, thanks to the mysteries of Internet commerce, went to individual buyers in Italy and Germany. \n\nNo, if she Googled my name and bought a copy to plant, it'd be the new version, or one of the other books entirely. \n\nShe thinks she sees his stride falter as he gets to the bedroom doorway. Great. Here it comes, you dumbass. Why the hell didn't you get up and move the damn thing? \n\nHe makes his decision in a split second and feels like a chickenshit doing it. Without stopping, he pivots so that he's backing into the bedroom, shucking the dress shirt, then putting a thumb over his shoulder toward the adjoining bathroom. It's not too hard to pretend that he's doing it so he can drink in a long look of her as he's moving. \n\n\"I'm going to take a leak real quick, okay?\" He paints her body head to toe with his gaze, down and then up again. \"But don't get undressed. I want to peel you out of those clothes.\" \n\n\"Sure,\" she says, with a clumsily faked casual tone. He saw it. She knows he saw it. He's giving me a chance to ditch it. \n\nIf there's any doubt, just as he starts closing the bathroom door, he glances at the nightstand and says, \"Oh. Hey, you left a book out. Uh, probably ought to put it away if you don't want me to see it.\" \n\nHe's a shy pisser. It's not that weird for him to go in and close the door, or for it to take a bit before she hears the stream of his pee hitting the toilet bowl. She stands paralyzed in the doorway, staring at the book in silence. \n\nInside the bathroom, he thinks, She wanted you to see it. She wanted you to see it, and you pushed her away, you dipshit. But what if that's wrong? What if she just forgot it was there? Goddamnit. Then you could have just asked, \"Hey, what's that? Any good?\" But no, because then he'd be lying, pretending he didn't already know the damn thing cover-to-cover. And if she had snuck a peek at his license and was trying to tell him she knew who he was, then playing dumb would be pushing her away just as much as handling it the way he had. But either she doesn't know who you are and she likes your books, or she's trying to tell you she knows who you are. He can't figure out which one of those is scarier, or more exciting. Then he realizes the third alternative is that someone loaned her the book and she doesn't give a crap about it. \n\nCome on, you stupid fucker, piss already! The last is aimed at his bladder. \n\nWhen the splash of urine sounds through the door, she finally moves. Stomps to the nightstand. Grabs the book roughly (even though it's precious and probably one of the only things she would try to save from the apartment in a fire). \n\nYanks open the nightstand drawer, throws the book inside, slams it shut. \n\nStands panting with her back toward the bathroom door, trying to get herself under control while the toilet flushes and the sink runs. \n\nThe book is gone when he opens the door in his boxer-briefs, pants and socks discarded on the floor. Because she didn't really want me to see it, or because I made her feel rejected? \n\nHe steps in behind her, wraps her in his arms, hooks his chin over her shoulder, closes his eyes, takes a few long breaths. Perfume. Deodorant. Hair. Skin. Her whole body feels taut in his grasp. What do you say? What do you say? \n\nIt hits him pretty quick. \"You know what I like about you, bitch?\" \n\n\"What?\" \n\n\"Everything. There is not a single goddamn thing wrong with you. You're fucking perfect.\" \n\nSome of the tension eases out of her. \"Well ... I did cock up and leave that book out. Almost gave away what kind of thing I like to read.\" \n\nSo she does like it. Or - she's covering for the fact that she peeked in my wallet. Dude, just ... turn it off, okay? \n\n\"Yeah,\" he replies, \"but I think I would have lived. And anyway, it gave you an excuse to say 'cock up.' That was a pretty well chosen phrase.\" \n\nShe feels him hardening against her left ass-cheek then, and she lets go of her worry and frustration, squirms around to face him within the tight circle of his arms. His grey eyes say he meant it when he called her perfect. \n\n\"Okay. So we gonna fuck now or what?\" She feels filled up with sunlight as she says it. Things are suddenly so good, there's no conceivable reason to change them. \n\n\"Yes, bitch, I believe we are.\" \n\nHis encircling arms loosen, slide his hands down her back. Her eyes close and she shivers as his fingers reach her waist, tickle their way farther down, find the hem of her tank and begin to draw it upward. He puts his lips to the rich fullness of her mouth, closing his eyes to match hers. The feel of her shifting slightly as she raises her arms sets him afire, almost makes him rip the blue top up and off, except that he'd have to break the kiss to do that, and he's not willing to - not yet. So he creeps the fabric higher and higher, releasing her soft flesh to the air in movements of inches. Her breasts momentarily weigh down his progress, until the fabric rolls up and around their curves, lifting and then letting them fall. He breaks the kiss then, to lean and get his mouth to one of her nipples. The tank top goes up and over her head to be tossed across the room. \n\n\"God, it makes me so hot when you do that,\" she breathes at his suckling. A quick circle of his tongue around the nipple makes her gasp. \"Yeahhhh. You getting my skirt, or am I?\" \n\nHe rises up, looks her in the eye, one hand on each side of her rib cage. The way she stands there, nude to the waist, the color of coffee with a dash of cream, and then an extra dash in the band around her breasts and ribs where the sun never hits, and then the deep chocolate of her areolas and nipples, the bronze of her hair, the buff of her palms - he could write a whole book on just the different browns of her. \n\nThe look he's giving her makes her forget her own question about the skirt. For a while, she just meets his stare and knows and needs nothing else. Then a heat like being belly-down on hot sand suggests at least one other need. Maybe the same thing hits him at the same time, because he kneels and works the catch of her skirt, unzips it, glides it down with both hands, the fingers spread wide to cover and sense as much of her flesh as he can. \n\nAs the denim curtain descends along her thighs, her silky off-white panties are laid bare, an aromatic painting of female arousal. He stoops and bends and grazes her still-clothed mound ever-so-gently with his teeth, making her suck in a lightning-quick breath. \n\n\"I want to ride your mouth,\" she says. His grey eyes glitter as he brings his jaw and lips to a slow close, sending soft heat and a bit of extra dampness into her panties with his delicate kiss. Then he tongues a crease into the cloth along her slit and leans back, getting his thumbs through the leg-holes to either side of her mons, to tug the fabric down. \n\nThey move like a single creature: her, stepping out of the wet, silken cloth, him sliding his legs through her wide-spaced ankles, her coming forward and down, him easing down and back with just slightly less speed so that the space between her labia and his lips closes in time with their descent to the floor. His head touches the carpet just as she settles fully against his mouth, the subtle and intricate involutions of her flesh tangy with lust. With a few careful shifts and adjustments, she positions her legs, her hips, just where she can press herself to him without her weight crushing him or straining her knees. ",
        "In a whisper, she says, \"Kiss me there.\" \n\nAs if he needs the encouragement. \n\nBy now he knows every ridge and valley of her pudenda almost as well as the shapes of his own teeth in his mouth. His tongue knows where to flick and where to flit, how deeply it can probe and when to do so. His lips know the pace at which to widen and close, to latch and to loosen, to nibble, to enfold. His ears know the catch in her breath that says more and the soft moan that says there. \n\nAbove him, she seeks her own pleasure not from carnal appetite but because she knows how much it delights him to give it to her. She has never been told how beautiful she is any better than his tongue and lips are telling her now. In the darkness behind her eyelids, she lets go of the rest of her existence and becomes her clitoris, her labia, her slit - the wet, lush engorgements that he delves into with exquisite care and perfectly timed moments of fervor. \n\nWhen she lifts up and crawls forward, he tries to stop her, putting a hand about each thigh, but she laughs and rolls and ends up on her ass, slipping one big toe into the waistband of his underwear. \n\n\"How about let's get these off?\" \n\nHe doesn't say anything for a moment, head tilted back to look at her, upside-down from his angle. He breathes in the smell of her still glistening on his lower face, licks his lips to taste it. Then he shrugs and grins. \n\n\"If you say so, I guess.\" \n\nShe stands, hands on her hips, watching as he crawls out of his underwear and gets up to face her. His look is earnest and heated, almost worshipful, but that cock seems to have its own swagger, like it knows how it makes her burn every time she sees it. They kiss and swivel and turn. She ends up seated at the edge of the bed, with him on his knees between her legs. The book is long gone, vanished from her head and from his. There is only this: his steady push up and in, her grateful, slick acceptance, and then their passion, swirling and surging, bowing the mattress, shaking the frame, mouths locked together, hands everywhere, voices a symphony of moans and murmurs and gasps. \n\n\"Bitch,\" he whispers, \"your pussy is so, so good.\" \n\nShe rolls her hips the way he likes and whispers back, \"It loves the way you fuck it. Ah - yes, fuck it ...\" \n\nThey kiss and clutch and hump with rising urgency, rattling the bed. \n\n\"God ... damn ...\" \n\n\"Yes, baby, take it. Take - that - \" \n\n\"Uhh! God, close - \" \n\n\"Yes, come on - come for me!\" \n\n\"Hahh ... Hnghhhh ...\" \n\nThe clench of her jaw, the furrow of her brow, the hook of her ankles around behind him, the dig of her nails into his back - if there's a muscle in her body that's not responding to the stroke of his cock, he certainly can't tell which. Not that the tight, perfect squeeze of her cunt is letting him do a full inventory. But whatever geology lab might have a seismograph turned on nearby, he's pretty sure it must be scribbling out the tremor of her approaching climax. \n\nAnd ... \n\n\"YES!\" \n\nIt hits her. Lifts her. Peels her chest back away from him as her spine arches. The heat between her legs becomes fire, roaring through her in an orgasmic conflagration, like a wildfire sparked by lightning. \n\nHe sees it, feels it, hears it, and is pulled up into it - carried aloft by the updraft of her inferno until the blazing, dizzying heights ignite his own ecstatic explosion. \n\nFrom each of them, at the same moment, bursts an exultation: \n\n\"Oh my god, I -\" \n\n\"Holy fuck, I -\" \n\nBut there is no verb, because even in this moment of insensate bliss, they both know the only proper verb is forbidden, and instead they turn it into the loudest groan of mutual passion they can manage. When the drumbeats of their pulses calm, they heave up onto the bed together and lie gasping in each other's arms. \n\n\"More Chinese food?\" he asks, a little later, caressing her bare shoulder with his eyes still closed. \"Or more sex?\" \n\nShe snuggles in tighter to his warm, perfect body. Her sigh of contentment fills him up more than either of those alternatives would. \n\n\"Both,\" she says, inseparably close and still. \"But not yet.\" \n\n* * * \n\nHer \n\nI turned twenty-six this morning. Now he's on me, and inside me, and he doesn't have any idea. \n\nThe smoothness of him pushing up through my cunt has me just shy of paradise. We're on our first fuck of the night. I'm twenty-six, and I've had more sex in the last year than in the twenty-five before that. \n\nHe sighs into my ear: \"Ahhh.\" I love his breath heating the whorls and curves there. We're on our first fuck of the night, but I already came hard from him putting his face between my legs and kissing there like he was born to do it. \n\n\"So good ...\" he whispers. \n\nHis lips brush gently at my neck as he eases his cock forward within me, slow and wonderful. Its whole stiff length rests at full penetration for a moment before he draws it just as gracefully back. \n\nI love it when he fucks me like a lust-crazed stallion, but I love it even more when he does this. \n\nI love you. \n\nI'm twenty-six years old, and I've never felt this way about anyone - and I don't even know his name. \n\nI want to know it so badly. \n\nI want to know it right now, so that a few minutes into the future, when he works me up into a thrashing, catapulting orgasm, I can scream it out at the top of my lungs. So the neighbors will know who this man is and how I feel about him. So he understands that it is him I'm coming for. Not just the feeling of a dick between my legs, but him. \n\nHe rises up and puts his lips softly to mine. I watch his closed eyes, his expressive eyebrows, the look of total peace and pleasure that being with me puts on his face. \n\nI love him. \n\nI think he loves me. \n\nHe has to love me. \n\nI'm twenty-six years old, and I've been fucking this man for almost exactly a year, and I don't know his name, and if I don't know it soon, I'll go crazy. \n\nAnd if I screw it up and he doesn't want to tell me or he doesn't want to know mine and I scare him off by telling him how I feel, then I'll also go crazy. \n\nSomewhere along the way, thinking and feeling all of this, I've stopped moving, stopped responding to his movements, without realizing it. He opens his eyes and sees me crying. \n\n\"What's wrong?\" His arms, around me, suddenly tense with concern. \n\n\"Nothing.\" \n\nA second of pain shows in his face. Not pain like I hurt him, pain like he feels my hurt in the tone of my voice. He blinks a little faster than normal, puts one hand up to my cheek, gentle, brushing at the tears. \n\n\"No, really. I want to know.\" The softness in his voice makes me cry even more. He does. He really does want to know. But if I answer him, there's no going back. \n\n\"Please,\" he says. \"It's okay. You can tell me.\" \n\nI shut my eyes and breathe, feel the solidity of his body above mine. Inside I can tell his erection is fading, but we're both still, so it doesn't slip out. \n\n\"Do ...\" My voice shuts down as I look in those grey eyes. I have to swallow and start again. \"Look, do you know what Thursday is?\" \n\nSomething widens in his face. Not physically - some emotion. Oh my God, he does. He knows. \n\n\"Sure,\" he says, in this ridiculously casual voice. \"It's our anniversary. I didn't think you'd be keeping track.\" \n\nBullshit, I think, barely able to stop myself from screaming it in a maniac laugh. Oh, you beautiful silly bullshitter. \n\nIt's going to be okay. I can hardly breathe, but I do, enough to say back in my own casual voice, \"Pretty easy for me to keep track, coz it's four days after my birthday.\" \n\nI see him doing the math in his head and I wait, wondering what he's going to say, but no longer worried, not worried at all. \n\n* * * \n\nHim \n\nHoly shit. \n\nThis is it. The moment it all changes. Only no, it's not - it's just the moment when we both admit that it's changed. Somewhere in between, somewhere in the last year, not on any day or at any hour you could put a finger on, it changed, and we've both just been trying to figure out if the change was real, or if we were dreaming it. \n\n\"Huh,\" I say, wondering how it is that her face looks giddy and calm at the same time. Does mine look that way too? \"So ... happy birthday. Anything particular you want? Besides orgasms, I mean. I was already planning to give you several of those.\" \n\nShe laughs and grins, just a flash of each, and then she's staring at me, getting ready to say something - to ask something, I can see it. Something I'm going to say yes to. \n\n\"You remember what you told me, that first time, the very first time, right after we finished fucking and I asked how often you were going to come back?\" \n\nI think for a second, not because it takes me a full second to remember, but because even though I shouldn't be able to believe what she's saying, I do. I believe it completely. \n\n\"I said I was ready to move in and spend all day every day screwing you.\" \n\nShe nods, once, not a hint of humor in her eyes. \"That's what I want.\" \n\nI have this intense impulse to kiss the tip of her nose. Instead, I ask, \"You always go this big when you ask for birthday presents?\" \n\n\"I didn't ask - you offered.\" \n\nI tilt my head to concede the point. \"You realize I'd have to put my name on the lease, and then you'd know what it is.\" \n\nShe shrugs. \"Guess I could live with that, if the tradeoff is cock on demand.\" \n\n\"Hm. Should we maybe have a look at my place, though? See if we'd rather shack up there?\" \n\n\"Why?\" she asks. \"Does it matter where it is or how big it is, long as it's got room for a bed, and us?\" \n\n\"No.\" \n\nThe insanity of the moment is hopping up and down waving its arms trying to get my attention, but I ignore it. Gabe and Susie will think I've gone crazy - they know I'm seeing someone, but I've been downplaying it the whole time, saying it was purely physical. Technically, the absolute truth, but also a giant fucking lie. \n\n\"So,\" she says. \"When?\" Her face glows with sensuality, and before I can answer, she goes on, \"Thursday would be kind of cool, wouldn't it?\" \n\n\"It would ...\" I say. And we've already talked about how shot both our schedules are for Monday through Wednesday. But ... \n\nPutting on a disappointed look, I sigh and say, \"I've already got something on Thursday.\" \n\nShe knows I'm messing with her and lifts a mean eyebrow. \"Really. What?\" \n\n\"Well, this is kind of awkward. It's a blind date. With this chick whose name I don't even know. I'm supposed to meet her at that Mexican restaurant across the street - the one we've never been to?\" \n\n\"That place sucks.\" \n\n\"Damn. That's too bad, because everything's set up. I told her to wear a camo tank top and jean skirt, and I'm supposed to wear a concert t-shirt for this really filthy rapper that she apparently gets off to.\" \n\nShe laughs and her fingernails scrape down my naked back. \"Like you've got the balls to go out and buy a gangsta t-shirt.\" \n\nI shrug. \"Yeah, my plan was actually to show up in my work stuff and scope her out without her knowing I'm there yet.\" \n\n\"Boy, don't fool yourself. That girl's gonna see you comin' from a mile away. A thousand miles.\" She pauses, lets her grin soften into a smile. The sharp edge in her eyes goes misty and deep. \"From the other side of the world.\" \n\n\"Well,\" I say, \"I guess it'll be a pretty interesting date, then.\" \n\n* * * \n\nThem \n\nHe sits on a bench in the foyer of the Mexican place, tapping his foot. It's a small foyer and a really small bench - she seems to be right about the place being crappy. The noise from the kitchen grates on him even from here, and it's got to be worse in the dining area. He's kind of bummed about that because he's got something in his pocket that's not his phone or his keys or his wallet, something that probably won't come out in a cheap-ass hole in the wall like this. It probably wasn't going to come out regardless, but he bought it and brought it just in case. If there's a chance you might decide to propose on a first date, and especially if there's a chance she'll say yes, you damn sure want to be prepared. \n\nShe waits on her side of the street for the crosswalk signal to change. How many times has she jaywalked this intersection to get to the bus stop on the other side? But tonight she is one hundred percent damn sure not getting herself hit by a car going across the road. The little white guy walking comes on and she laughs. Oh, you cute little white guy walking. One year ago. One fucking year ago this morning, at this same intersection, she turned to bitch out some creep trailing her ass, then decided to taunt him with what he couldn't have - then saw this harmless, awkwardly handsome dude who clearly just wanted to cross the street, wasn't trying anything at all. So she toyed with him, and then she made a decision, and then he followed her like a puppy, neither one of them paying a damn bit of attention to whether the \"Don't Walk\" was flashing. \n\nTonight she waits for the little white guy to blink on, looks both ways very carefully, and then sets out with an electric power to her stride. \n\nHe looks at his watch. He's been here a while, and it's still five minutes before time. He straightens his tie, thinks again about taking it off. It's a work tie, and he's left his blazer in the car, but he still feels overdressed. The box in his pocket puts in its two cents: You take the tie off, it means you're definitely not taking me out tonight. Which means the sensible thing is to take the tie off, but he still doesn't do it. Instead, he stops tapping his foot and picks the book up from the bench next to him. It falls open pretty easily to his favorite scene. He wonders if it's her favorite scene too. \n\nOn the way through the parking lot she realizes she's breathing hard and forces herself to slow down even though it's not walking too fast that has her lungs in a twist. Her dress is black and tight, low-cut and short in the skirt. Should she have worn the camo top and denim like he'd joked? No. She needs to sizzle for him tonight, and this is the sizzling-est thing she has. She hopes the ivory handbag and shoes are tasteful enough to keep her from looking like a hooker. But if not, what the fuck.  \n\nThe door. \n\nA little stiff, with a jangly bell at the top, some kind of silvery tint job making the glass hard to see through. It opens with a gust of Tejano music, and there he is on the bench. \n\nWhere in the shit did he get that? she thinks, staring at the sky-blue book in his hands. He folds it closed and stands up grinning, one finger in a spot that she thinks may actually be page three hundred and sixty-eight. She shakes away the daydream of him being exactly at her favorite part of the book. Guess he really paid attention when I left it on the nightstand that night, didn't he? Can't believe he'd go and steal that off my bookshelf when I wasn't looking, sneaky bastard. \n\nOnly no, the copy he's got is missing the big diagonal crease across the back cover from where she'd dropped it on the bus that one time. \n\nThe look on her face when she sees the book - it's absolutely, perfectly her. A blink, another blink, and then a flash of those brown eyes straight into his, lids narrowing, one eyebrow daring him to play whatever trick he has up his sleeve. He's pretty sure, though, that he's going to surprise her several different ways tonight. Recovering, she moves in and lets the door swing closed behind her. He's looking really pleased with himself, and then a second later he's looking even more pleased with her outfit. \n\n\"Hey,\" he says, stepping toward her. \"I think I'm supposed to be meeting you here, but that is damn sure not what I suggested you should wear.\" \n\nShe tips her jaw up like a challenge. \"Yeah, I wanted to make sure I showed you up if you really had the cojones to wear that rapper shirt. But I guess you get the reward even if you chickened out.\" \n\n\"You look nice,\" he says, his grey eyes glowing in a way that says those words are the understatement of the year. \n\n\"You look nice too,\" she says, reaching out to trail her fingers down his tie while her smile tells him how much she means it. \n\nWith a wry expression he doesn't quite have under control, he puts one hand out, the one without the book. \n\n\"I'm Dan,\" he says. \n\nHer eyes flicker down toward the blue cover of the book and the name under the title, and then she just laughs, a little wildly, showing lots of teeth, and takes his hand. \n\n\"Jenice,\" she says, even happier to say it than to imagine he's not playing a joke with his name and a copy of her favorite book by her favorite author. \n\n\"Jenice,\" he repeats, feeling the softness of her fingers in his hand and the strength of her gaze in his eyes. \"That's a beautiful name.\" \n\n\"Thank you,\" she says, smiling. It occurs to her that her cheeks are going to be really tired by the time dinner is over. \"It sounds better than usual when you say it.\" \n\nEyes twinkling, he says, \"Well, it's going to sound even better when I say it later.\" \n\n\"Promise?\" \n\n\"Oh, yes, I promise.\" \n\n\"Good.\" \n\nThe server comes, and they sit down to have dinner. \n\n* * * \n\nJenice and Dan \n\nDan orders a Dos Equis. Jenice orders a margarita on the rocks. They both agree on queso instead of just chips and salsa before the entrees arrive. The waitress leaves water and menus, then sees to another table instead of heading for the kitchen to get their queso going or the bar to put their drink orders in. \n\nThe strangeness of it hits them both as soon as the waitress steps away - alien territory, sitting across a table to enjoy a meal and talk, not just refuel in preparation for sex. Dan picks up a menu to cover the fact that his brain is suddenly empty. Jenice, having experienced this menu before, knows it won't help her, but realizes that it gives her something to say into the silence. \n\n\"Just order the enchilada plate,\" she says. \"Trust me.\" \n\nThe confidence in her voice comes as a relief to her. Having something to respond to comes as a relief to him. \n\n\"The enchilada plate's good?\" \n\n\"No,\" Jenice says. \"The enchilada plate sucks. But everything else here sucks too, so there's no point spending ten minutes deciding which sucky thing to get.\" \n\nHe laughs, a real laugh, but with a thread of nerves tangled in it. Knowing that he's nervous too makes her feel a little better. \n\n\"So ...\" he says. Nothing occurs to him after that, though. Holy crap, am I totally fucking this up? \n\nOn the corner of the table, the blue-covered book sits waiting. Jenice has been working to keep her eyes off it, but it's begging to be talked about, and neither of them is coming up with anything else. \n\n\"You're teasing me with that, right? I mean, rubbing my nose in it for leaving the damn thing out.\" \n\nHe raises his eyebrows as if to say, What? Me, teasing? \n\n\"Cut that out,\" she says. But now it's her turn to laugh, and that at least feels good. There's some relief, too, in being committed now: they have a subject. A little worried about the answer, a little regretful that the book just wouldn't be postponed until they were both more comfortable, she asks, \"So are you really reading it, or did you just find a copy to play games with me?\" \n\n\"I found a copy to play games with you,\" Dan says. \n\nOh no, Dan, she thinks, finding it weird to know his name at last, please don't do this to me. \n\nThen he goes on, \"I have read it a time or two, though - had to dig through some boxes in my garage to find it.\" \n\nOh god, don't do that to me either! \"You dick. Why didn't you say anything that night, if you knew what it was? I mean, especially if you liked it enough to read it more than once?\" ",
        "He drums his fingers on the table. The nearness of telling her the truth makes his brain crackle electrically, shoots current through the wires of his whole nervous system. He tries to find the suave Dan Holden who handled this situation so deftly in all the fantasies he'd had since digging the book out two days earlier. \"Well,\" says a passable imitation of that Dan Holden, \"I wasn't a hundred percent sure you wanted me to say anything. Maybe you just left it out by accident. Maybe if I said something, then I'd be the one crossing a line. Remember, you're the scary black woman in this relationship.\" \n\nThat makes her smile - but she also wears a hint of embarrassment on her face. \"Thought I had the scary pretty well turned off that night.\" \n\n\"You did.\" Enough with the joking. Get your legs under you and help her get hers too. \"It wasn't you I was scared of. It was the idea I might do something wrong and lose you.\" \n\nHer eyes close slowly and then re-open. She leans her chin into one palm. \n\n\"I was afraid of that too,\" she admits. \"I knew it was off-limits - I just ... I wanted there to be more. I wanted it so much. So I spent all afternoon before you showed up taking that book out, putting it back, taking it out, laying it open at my favorite scene, closing it back up.\" \n\n\"What's your favorite scene?\" A physical thrill runs through him that she knows the book well enough to have a favorite scene. He has to know which one it is, and he simultaneously thinks it doesn't matter and also thinks, The meadow scene, right? \n\nHis intensity surprises her. She wonders if it's somehow possible the book is as important to him as it is to her. \n\n\"Page three-hundred and sixty-eight,\" she says. \"You know, where she admits everything she's been hiding from him. Where she opens up and we finally learn what makes her tick, why she's so fucking brave and keeps sticking her neck out where it might get chopped off. Every time I read it, it's like, God, I want to be this chick and believe in things like she believes in them, and then also find somebody who deserves to be trusted that way, who I could feel safe letting myself be weak in front of.\" \n\nDan is just looking at her, not saying anything. She has no idea what his expression means, but she knows she can sit here and take that look all night long if he keeps it up. \n\nThe waitress comes back, though, with a bowl of queso and some chips. \n\n\"You folks ready to order?\" She's a weathered-looking hispanic lady, one of those completely indifferent servers whose gum-chewing is the most energetic thing about them. \n\nJenice waves a hand back and forth between the two of them. \"We'll both have the enchilada plate.\" \n\nThe waitress turns her face blankly at Dan, somehow managing to make a question of it without a hint of expressiveness. \n\n\"Yes, absolutely, enchiladas,\" he says, to get rid of her as quickly as possible. \n\nTaking the menus, the waitress departs. \n\nUnable to wait any longer, desperate to know if this coincidence of the book is as big a deal as she wants it to be, Jenice asks, \"So - you read the rest of the series too?\" \n\nHe nods, opens his mouth like he has something to say, but then closes it again. \n\nIt's a thing, she thinks. It is, it's our first big thing we share together. \"I've read every goddamn thing the guy's written,\" she says. \"He's amazing. Now you've come along, he's downgraded to my second-favorite Daniel, but lemme tell you, it's a near thing.\" \n\nFuck, he thinks. This is it. Here we go. \n\n\"It's ... uh ... a nearer thing than you think.\" \n\nShe narrows her eyes at him, not sure what he's getting at. \n\nHis heart's pounding as he puts a fingertip by the name on the front of the book. \"This is me, Jenice.\" \n\nJenice feels her jaw drop - not because she believes him, but because she's stunned that he would make a joke out of something she's trying to say is so important to her. \n\n\"That's not funny.\" \n\nOh shit. She doesn't ... The way her face closes off makes him panic for a second. This wasn't how his fantasies had gone at all. Wait, he thinks. Wait, wait, wait ... \n\nHe remembers what he'd first thought, seeing the book on the nightstand that night - that she'd snuck a peek in his wallet and found his ID. \n\n\"Look,\" he says, grabbing out his billfold and fumbling the driver's license free. Holding it out to her. \"Look. I'm totally serious.\" \n\nShe takes the license, stares at the picture, stares at the name. \"You're shitting me.\" \n\n\"No, Jenice, really ...\" He rifles through the credit cards, pulls out the business one with his publishing imprint on it. The one he charged the hell out of in the early days trying to run ads and find a readership. It's still pretty maxed out - self-publishing hasn't been that good to him. But at least here's a use he can put it to. He flips the book over, holds the card next to the publishing company name. \n\nShe puts a hand out like she's going to touch the book or the card, then pulls it back and says, \"Where the fuck is my margarita right now?\" \n\nDan isn't sure he hears much humor in her voice, so he waits. \n\n\"You're not shitting me. Oh my god.\" She's trembling, the driver's license forgotten in her hand as she looks at him. \"I've been screwing Daniel fucking Holden for a year without even knowing it. Jesus.\" \n\nShe's about to start crying, he thinks. It hasn't occurred to him, but now it does, that she might be such a big fan of his writing that she won't be able to handle knowing him. No ... no, she's tougher and cooler than that. Just pull it together and bring things back down to Earth. In a stab at humor, he says, \"Actually, the 'F' stands for 'Frederick.'\" \n\nShe picks up the book and hits him with it, feels amazingly better for having done so, is about to hit him again, then stops and looks at the cover and says, \"Wait. There's no 'F,' it's Daniel P. Holden.\" \n\n\"Yeah, but I didn't think saying the 'P' stands for 'Frederick' would be as funny.\" \n\nShe hits him again, but now she's laughing and collapsing back into her chair, giddy and dazed. \"Fuck you. I bet the 'P' stands for 'Prick,' you asshole.\" \n\n\"It can definitely stand for that if you want it to,\" he replies. \"And any time you want it to. And some other 'P' words too.\" \n\n\"Nasty,\" she says. \"You nasty, nasty boy.\" \n\n\"That surprises you, after a whole year?\" \n\nJenice just shakes her head and blinks at him a while. \"Daniel P. Holden. Daniel P. Holden. Would you believe I've been in love with you since I was nineteen years old?\" \n\n\"Sure, that's totally you,\" he says. \"You've always got to go one bigger than me - I've only been in love with you about eleven and a half months.\" \n\nAgain, she feels her jaw try to drop. But this time she doesn't let it. \"Did you just say that?\" \n\nDan wrinkles his nose. \"Yeah, I guess I did. Probably not the most romantic way to say it the first -\" \n\nBefore he can finish, Jenice launches out of her chair and across the table, grabs his tie, yanks him forward to get her mouth on his, knocking over a sugar barrel and her water glass in the process. They spend what seems like half a Tejano song kissing before she comes back to her senses and lets him go - though they don't pull more than an inch away even after she releases his tie. \n\nNose to nose with him, she understands that he's real, that this is real, that everything she's ever wanted is here, near enough to grab, and hers to have. Even if this place had the best enchilada plate in the whole world, she would no longer be hungry. \n\nDan tries to figure out what the look on her wonderful face means and finds that he can't be sure - until a shrug of her smooth, dark shoulders offers her entire body to him, and she whispers, \"You want some of this?\" \n\nHe does his best to pour a yes out of his eyes and into her soul. She smiles and goes on: \"Coz if you want some of this ... our apartment is right over there.\" \n\nHe kisses her again, then puts his lips to her ear and breathes, \"Bitch, you are bad news.\" \n\nShe laughs, and now it's Jenice's laugh to him. Grins, and it's Jenice's grin. Says, in her sexiest growl, \"You've only seen the start of it. Let's get out of here.\" \n\nHe throws a couple of bills on the table, and they take each other home."
    ],
    "authorname": "IanSaulWhitcomb",
    "tags": [
        "interracial",
        "black woman",
        "white guy"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/contrast-ch-04"
}