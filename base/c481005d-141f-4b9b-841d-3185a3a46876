{
    "title": "Bosom Buddies Epilogue",
    "pages": [
        "EPILOGUE:\n\nThe ugly truth of any long-distance relationship is, it sucks. Much as your young heart may try to romanticize all the effort and the sacrifice involved, at the end of the day you're still miserable. Eventually, you start to feel a bit like the widow who lives out her days celibate, still in love with her dead husband.\n\nIt was the hardest thing I've ever done.\n\nLiz and I poured every meager cent we earned into long-distance phone calls and plane fares, but, more often then not, I found myself romantically committed to a voice on a telephone (true, that voice belonged to a girl with an adorable smile and huge, luscious tits, but knowing that only added to my frustration).\n\nWith all our combined income, we were still only able to afford to see each other for one weekend each month. You'd think these occasional visits would be filled with non-stop passion and amorous euphoria, but that's never how they turned out. Sure, there was \"the good stuff\"\u2014the sex, the cuddling, pillow talk, romantic adventure\u2014but each weekend tryst was always underscored by a certain degree of disappointment; of never being quite as perfect as what we'd built up in our minds over the preceding weeks.\n\nAnd then there were the fights. Like clockwork, each of these supposed-to-be-blissful cross-country weekend visits inevitably included one huge, awful argument between Liz and I, carried out with the same pent-up passion as our lovemaking.\n\nI guess relationships need a certain degree of conflict to survive, just as they need tenderness and affection. It's an essential part of the recipe. But, while normal couples got the privilege of balancing these emotional necessities with a more mild day-to-day commitment, our long-distance relationship meant we had to pack everything into a tiny, potent capsule; more like a relationship suppository, taken once a month.\n\nSome side effects may include: Depression, jealousy, confusion, loneliness, doubt, and frequent masturbation.\n\nIt also didn't help that there were so many goddamn gorgeous girls running around my coed dorm in their pajamas, their perky, 19-year-old breasts bouncing braless beneath those too-tight tee shirts. There was one girl in particular\u2014Jessica Hernandez\u2014who made my life a living hell: long legs, tiny waist, dark Latin hair that reached down to her ass, and absolutely SPECTACULAR tits. Skinny everywhere except the bust, that girl was the definition of \"top-heavy.\"\n\nAnd she was totally devoid of modesty. Each night, Jessica would stroll down the hallway between her room and the showers\u2014a route that took her right past my door\u2014wearing nothing but a frayed bath towel.\n\nStill, all that was manageable. Nothing five minutes and a fistful of Kleenex couldn't solve. No, the thing that made Jessica so horrible was the fact that she and I had so much in common. We liked the same movies, read the same books, shared more than half of our classes, and she was a barista at my favorite off-campus caf\u00e9.\n\nShe was perfect girlfriend material. If I'd made a pass at her, the awful truth was that she'd probably have gone out with me. And I had to see her EVERY DAY.\n\nOn the other side of the country, Liz was going through a similar ordeal with some cute guy she met in her \"human sexuality\" class, of all things. I don't imagine things were any easier on her.\n\nLiz and I turned to Stephanie and Simon for support. They were struggling with the long-distance thing as well, and their commiseration via phone or AIM (yes, we chatted over AIM back then), was my only lifeline on those lonely nights when I was either so lonely or so horny I thought I would go insane.\n\nThen they broke up.\n\nThey broke up! After all that drama our senior year of high school, Simon and Stephanie couldn't last just one semester apart. I guess I shouldn't have been so surprised, given how difficult things were for Liz and I. But it didn't much help our own resolve, seeing our best friends give up on their relationship.\n\nAlas, Simon and Stephanie went their separate ways, finding new loves and lovers. By the time we were all halfway through our second semester of college, it was plainly obvious to both Elizabeth and myself that our friends were happier for having split up.\n\nOn an otherwise unspectacular night, while Liz and I were chatting on the phone, she whispered, \"We haven't had a chance to really experience college, have we? I don't mean hooking up with other people, I mean\u2014\"\n\n\"I know what you mean.\"\n\nNo matter how many new and exciting experiences we'd had since starting college, we both missed each other so deeply and so constantly that we couldn't let ourselves enjoy any of it. Our long-distance relationship did more than just keep us from getting laid, it was something that weighed down on every aspect of our lives.\n\nExhausted, we both grudgingly agreed to take a break. We weren't \"breaking up,\" exactly, we were just clearing out the storm clouds. We needed to know what college was like without a long-distance relationship, before we could really know for sure whether we were making the right choice.\n\nI had a lot of trouble studying for my midterms that week.\n\nIn a daze, I went out to grab a coffee and, as luck would have it, found Jessica Hernandez working at the caf\u00e9. I was enough of a regular that Jessica didn't even bother with taking my order anymore, she just poured me a tall black coffee the second I walked in the door (it was all I could ever afford.)\n\nJessica saw the ragged look on my face when I came to collect my drink and asked, \"Hey Ian, are you okay?\"\n\n\"Yeah. Just tired.\"\n\nI deliberately tried to be nonchalant about it. I was in too weird a mood to go fishing for pity hugs, even when those hugs would mean feeling my favorite barista's big, soft boobs squeezing up against me.\n\n\"Are you sure?\"\n\nI wasn't. And the more I tried to avoid staring at her chest, the more I felt my resolve wane. Come to think of it, why the hell didn't I deserve a few big-breasted pity hugs? I'd had a tough week, and damn if she didn't look terrific in the tight white polo shirt they made the baristas wear.\n\n\"Actually, me and Liz decided to take a break.\"\n\n\"Oh no!\" she ignored her current customer to race around the bar and embrace me, thrusting the full weight of her tits against my chest to cushion the impact. Yep, that hit the spot. For the first time since I'd started college, I allowed myself to actually enjoy being attracted to another woman.\n\nOnce she finished hugging me, Jessica whipped me up some kind of huge, frothy drink I couldn't even pronounce, much less afford.\n\n\"Here, on the house.\"\n\nI returned to my dorm room to study, but an hour later I found myself distracted by the sound of someone pacing back and forth in the hallway outside my door. Happy to take a break from my books, I took a look through the peep-hole and saw Jessica\u2014still wearing her work clothes\u2014standing in the hallway outside. She lifted her fist, as if to knock, but quickly decided against it and started back towards her room\u2014\n\nThen she stopped, turned back, and returned to my door. Then she left. Then she came back. Then she left again. I'd spent my senior year of high school hanging out almost exclusively with girls, and apparently I still had no idea how their brains worked.\n\n<br> When Jessica finally returned to my door, I took the initiative and opened it.\n\n\"Everything okay?\" I asked.\n\n\"Yeah! I just\u2014my roommate's gone for the weekend, and I know you're having a rough time so I thought I'd just offer to talk. If you need to. But then I thought, it'd be weird, and it's not really my place, and you probably just want your space or whatever, right? I'm sorry, this was a bad idea.\"\n\n\"Jess?\"\n\n\"Yeah?\"\n\nI gave her a hug.\n\nWe spent the rest of the evening lounging around her dorm discussing what was going on with me and my \"sort-of-sort-of-not\" girlfriend. Sensing that I needed something a little stronger than coffee to get me through the night, Jessica grabbed a bottle of cheap, room-temperature vodka from under her bed and we took turns downing shots until we were buzzing and silly.\n\n\"What about you?\" I finally asked. \"We've been talking and talking about my love life, how are things with you?\"\n\n\"Honestly, the past couple nights, it's been kind of... frustrating.\"\n\nThunk.\n\nWe both flinched as something heavy bumped against the wall on the other side.\n\nThunk. Thunk.\n\nThere it was again. As if her neighbors were rearranging the furniture at two o'clock in the morning. Jessica giggled knowingly into her vodka.\n\n\"Ohhhhhhh...\"\n\nIt was a woman's voice, coming from the neighboring dorm room. A low, ecstatic moan.\n\n\"Ohh yeah...\" Thunk. Thunk. Thunk.\n\nJessica burst out laughing. The grunts and moaning coming through the wall grew faster and fiercer, and I admit there was a certain comic desperation in it, punctuated by the sound of the bed jamming repeatedly against the wall.\n\n\"Is this what you mean by 'frustrating?\" I whispered.\n\nJessica nodded, cupping a hand over her mouth to muffle the laughter. \"They go at it like every night! Sometimes at four or five in the morning! Not only do they wake me up, but sometimes the sound of it gets me all turned-on and I can't even go back to sleep!\"\n\nIn the other room, the two noisy lovers finally reached their obnoxiously loud climaxes, shouting, \"Oh god! Oh god! Yeahhhhh...\"\n\nI looked down at Jessica and we both cracked up. I nonchalantly rested a pillow on my lap, hoping to hide the fact that my pants had suddenly gotten a bit tighter around the crotch.\n\n\"What are you doing to my roommate's pillow?\" she asked suggestively.\n\n\"Busted,\" I laughed.\n\n\"Oh, and I'm not?\" she laughed, gesturing at the beautifully plump pair of nipples poking into the fabric of her white polo shirt.\n\n\"Dammit, why do you have to do that?\"\n\n\"Do what?\"\n\n\"Be all hot!\" I shouted, laughing as I drunkenly poked my finger into her shoulder. \"All year, I'm trying to be as faithful as a monk, and there you are, every night\u2014this beautiful, gorgeous naked girl\u2014walking down the hallway outside my room!\"\n\n\"I am not naked! I'm wearing a towel.\"\n\n\"Yeah, but underneath it you're all naked and sexy and... dammit!\"\n\nJessica just blushed and took another swig of the vodka. Tipsy or not, what I'd just said had crossed the line into awkwardness.\n\n\"I think it's time for bed,\" she sighed at last.\n\nI just nodded, pulling on my tennis shoes while Jessica strolled over to her closet. \"Thanks for talking, Jess. I didn't mean to say anything weird, I'm just kind of confused and\u2014\"\n\nShe suddenly peeled off the tight white polo shirt she'd been wearing. A plain white bra cut enticingly across the rich, warm color of her skin.\n\n\"What are you doing?\" I stammered.\n\n\"Changing out of my work clothes,\" she explained.\n\nFeeling pretty confident that her behavior implied an invitation to stare, I reclined back on the bed and enjoyed the show as she lowered her slacks to the floor, giving me an eyeful of the peach-colored lace panties struggling to cover maybe a quarter of her ass.\n\n\"Cute underwear.\"\n\n\"Thanks!\" she giggled. Then, keeping her back to me, Jessica unsnapped her bra and threw it in the hamper. The sides of her ample, naked breasts swung teasingly into view.\n\nWhoa.\n\nShe rejoined me on the bed, concealing her tits with nothing but her hands.\n\n\"There,\" she sighed. \"Much better. That bra was getting all itchy.\"\n\n\"Your hands are more comfortable, I take it?\"\n\nShe bit her lip and grinned suggestively. \"Anyone's hands, really.\"\n\nI wanted Jessica so badly\u2014thoughts of her naked body had been keeping me up at night since orientation\u2014\n\nBut for some reason I choked.\n\nHere she was, actually trying to seduce ME, and I couldn't bring myself to go for it. It was like my body had forgotten how to respond to a woman who wasn't Liz. I sought out that vodka bottle for an emergency swallow.\n\nFor her part, Jessica seemed a bit confused by the fact that I hadn't already pounced on her like some horny, slobbering Labrador. Guess she figured I was playing hard-to-get.\n\nStill holding her breasts, Jessica snuggled into my arms. I felt the bare skin of her back beneath my fingers. Felt the heat of her lips pressing softly into the crook of my neck. I grew painfully hard within the constraints of my jeans.\n\n\"I'm still in love with her,\" I sighed. Jessica quietly broke away, meeting my eyes with her own.\n\n\"Does that mean you don't want to do this?\"\n\nMy eyes drifted south, to the soft, delectable pillows of flesh ballooning out around her fingers.\n\n\"Of course I do, I just\u2014I don't want to be unfair to you. I'm kind of a mess on the inside, right now.\"\n\nJessica mulled over what I'd said, then flashed me a sweet smile. She shifted her body so that she was covering both breasts with one arm, and used her free hand to ruffle my hair.\n\n\"Kind of a mess on the outside, too,\" she teased. \"But at least you're honest. And the mood I'm in right now, the most 'unfair' thing you could do would be to leave me alone and unsatisfied.\"\n\nShe let her fingers slowly trace their way down from my hair, caressing my cheek, grazing her nails across my chest...\n\nWe both lowered our gaze to watch intently as those fingers of hers reached my jeans and began stroking the shape of my cock.\n\n\"Oh Jesus.\"\n\n\"It's okay,\" she cooed. \"You've had a rough year. Why don't you just let me take care of you for a little while?\"\n\nIt was the first time since prom night\u2014almost a year now\u2014that someone other than Liz had touched me like that. I felt wrong and guilty, and so-goddam-fucking-horny I thought I was going to pass out.\n\nJessica was gentle; sweet and affectionate. Her touch reminded me of how I had behaved the first time I'd caressed Elizabeth's breasts, her body literally shaking with desire at my touch\u2014\n\nGoddammit! Why can't I go five minutes without thinking of Liz?\n\nJessica squeezed me through my jeans, wrenching my thoughts back to reality. Liz and I were on a break, after all. And the point of that break was so that we could enjoy moments like this.\n\nI was done being miserable. And I needed to get laid.\n\nI grabbed Jessica and pulled her in for a sudden kiss, reveling in the fiery passion as our lips and bodies crashed together. The hand on my crotch fumbled with my zipper until my cock was out in the open, hot and hard. I felt a jolt as her fingers wrapped around me and began pumping, up and down.\n\n\"Mmm,\" Jessica intoned, leaning back to study my enraptured expression. Slowly but deliberately, she swung her other arm out of the way, finally revealing her full, round, gorgeous boobs to my hungry gaze. The rest of Jessica's body was so slim in comparison, it was kind of ridiculous.\n\nShe cupped her voluptuous bosom and offered it up to my lips.\n\n\"Oh God, yes,\" I sighed, and filled my mouth with the softness of her breast.\n\nI really let myself enjoy those big tits of hers, greedily groping and kneading while I traced my tongue from one nipple to the other. Jessica cooed with pleasure and straddled my thighs, continuing to gently stroke me while letting the tip of my erection brush against her bare midriff.\n\nI playfully squeezed the firm bubble of her ass, slipping my hands beneath those thin lace panties to appreciate the smooth skin beneath. I dared myself to keep going, reaching down until I felt the wetness between her legs. Jessica momentarily released her grip on me, reveling in the sensation as my fingertips slowly swirled across the soft folds of her pussy.\n\nBoth of us now breathing heavily, I brushed the long strands of dark hair from Jessica's face and pulled her in for a kiss. She kissed back ferociously\u2014all tongue\u2014putting a big smile on my face in the process. With Jessica momentarily distracted, I slipped two fingers all the way up inside her, causing the girl to reflexively bite down on my lower lip.\n\nShe didn't break the skin, but that unexpected snap of pain was still enough to really get me going. I promptly picked Jessica up and dropped her onto the bed, kicking off my pants and yanking off my shirt. Then I knelt down on the floor, grabbed Jessica's delicate lace panties with my teeth, and dragged them down her legs\u2014revealing her perfectly shaven crotch.\n\nStill kneeling, I pushed her thighs apart and started kissing my way to the center\u2014\n\nBut Jessica grabbed me by the hair and impatiently pulled me back to my feet.\n\n\"I don't want to wait, just put it in me.\"\n\nShe hurriedly reached into her nightstand and retrieved a condom, tearing it from the foil packaging as quickly as she could. Jessica gave my penis a couple of nice, long licks, then rolled the condom onto me herself and flopped back into her most eager \"fuck me\" position, those long legs hanging off the bed on either side of me.\n\nI didn't really want to wait, either, and honestly who could deny an invitation like that? Grabbing that tiny waist of hers for leverage, I pushed inside the warmth of Jessica's body with a long, satisfying thrust that left us both gasping for air.\n\nI thrust into her again\u2014harder this time\u2014and then again, and again, each time provoking a little yelp of surprise. Those long, beautiful legs tensed up on either side of me, her toes pointing at the ceiling.\n\n\"Yes! Oh yes!\" she cried, punctuating her moans by slapping the wall as hard as she could, no doubt a calculated act of revenge against those noisy neighbors.\n\nAfter a few minutes, Jessica's big breasts were bouncing around so wildly she had to grab hold of them to keep the things under control. As her orgasm crashed down like a wave, Jessica forgot all about revenge against her neighbors and scrunched her eyes shut in ecstasy\u2014going suddenly and surprisingly silent as she convulsed and climaxed around my cock.\n\nWhen her eyes finally opened again, she had a huge smile on her face. \"Now me on top,\" she breathed. I fell onto her bed, my back propped up against the wall as Jessica spun around and straddled me\u2014her long hair an adorable mess and her juicy tits bumping into my chin.\n\nI gave those tits a good hard squeeze as Jessica guided me back inside her incredibly hot body, her hips swaying like a hula dancer's all the way down. She braced her hands on my shoulders and began rising and falling, her bare breasts rubbing up and down my chest as she went. I happily cupped my hands beneath her buttocks, feeling them tighten with each thrust.\n\nDamn it felt good. I hadn't been laid in over a month and I was more than eager for some relief. I grabbed Jessica around the waist and lifted her up\u2014the girl hardly weighed a thing\u2014then slammed her back down onto my cock. It did it again and again, using my own strength to bounce her up and down as fast as I could.\n\nJessica giggled, enjoying the ride. With a naughty smile, she leaned back and pulled my face into her cleavage. Much as I loved that, I eventually had to break away for air, but I gave her nipples each a good licking to show my appreciation. She cursed in Spanish, trembling as her second climax approached.\n\nMy arms started burning from the strain of constantly bouncing her up and down on my cock--but I forced myself to keep going. Finally, Jessica's pussy clamped down on me and she let out a shriek of orgasmic pleasure. I was past the point of no return, ready to burst at any second\u2014\n\n\"Cum on me,\" she panted.\n\n\"What?\" I was so close to blowing my load, I wasn't sure I'd heard right.\n\n\"I want you to\u2014ohhh\u2014pull out and cum on me.\"\n\nI frantically pushed her back onto the bed\u2014pulled out of her pussy\u2014ripped off my condom\u2014straddled her hips\u2014\n\nJessica grabbed my shaft and pumped it until I exploded, making a mess all over her beautiful big tits.\n\n............................\n\nThe sex was awesome.",
        "After that night, Jessica and I started unofficially dating. We had a lot of fun together, and whenever I got horny, all I had to do was take a thirty second walk down the hallway to her dorm room. It was convenient, casual, and gratifying\u2014in the moment. But, relieved as I was to be rid of the stress and pain of my long-distance relationship with Elizabeth, there was a palpable hollowness in its place.\n\nEight weeks passed, with no sign of things getting any more serious between Jessica and I. She started getting anxious, clearly feeling there was some kind of a connection between us that I never did. Maybe I was just spoiled; every other girl I'd been intimate with before Jessica had started off as an incredibly close personal friend. I felt a bit silly, keeping such a fun, gorgeous girl at arm's length.\n\nFinally, Jessica voiced the big question: \"Where is this going?\" And of course I had no answer for her. I wasn't dating Jessica because I loved her\u2014I didn't. I wasn't even dating Jessica because I just wanted to be in a relationship\u2014I didn't. If I was brutally honest with myself, the only reason I was dating Jessica was because I didn't have a good reason not to.\n\nI knew our breakup was inevitable, and I couldn't blame her for moving on to another guy (though the fact that the \"other guy\" was my GODDAMN ROOMATE was kind of bad form, if you ask me).\n\nHalfway across the country, it was much the same story for Elizabeth. Not the bit about her ex fucking her roommate, but just an overall lack of substance to her love life. For the next year, we both tried the whole \"college dating scene,\" with short-term relationships, casual hookups, and one-night stands. I somehow managed to convince myself I'd moved on.\n\nBut I still dreamt about Liz. Bittersweet memories of her smile would hit me out of the blue like a debilitating acid flashback.\n\nThen, one Tuesday morning, as I got up to go to my first class, I groggily noticed that something was very odd in my dorm: There was nobody in the hallway. No talking coming from the rooms. Sure, it was early, but it wasn't that early. I'd been going to college for a good while now and I had never found the hallway abandoned in the morning. Curious, I peeked inside an open dorm room and saw what was on TV:\n\nSmoke rising out of the World Trade Center.\n\nI know I don't need to recount the events of that day for anyone, but I have to at least mention it because the moment I saw that image of the towers, the very first thing I did was race back to my room and phone Liz. I don't know what came over me, it just seemed like the natural thing to do. I had to hear her voice.\n\nWe hadn't spoken in months, and then only very courteously because our mutual friends were around. When I heard Elizabeth answer that phone, my heart skipped a beat.\n\n\"Ian?\"\n\n\"I'm still in love with you,\" I blurted out. \"I thought I wasn't, but I am. I never stopped. I don't think I ever will. You don't have to say anything, if you don't want to. I just\u2014I needed to tell you.\"\n\nThere was a long, awful pause on the line as my words sunk in. Then:\n\n\"I love you, too.\"\n\nAs soon as the airports were working again, I flew out to see her, and the second we were alone together our clothes hit the floor. We tumbled onto her bed, hugging and kissing, whispering how much we loved one another while our naked limbs entwined. I marveled as always at the size and softness of her breasts, then lovingly sucked her wine-dark nipples into my mouth\u2014pulling gently with my lips until she moaned.\n\nBeneath me, Elizabeth spread her legs to either side and scooted her hips until the tip of my penis was perfectly aligned with her eager pussy.\n\nGod, I thought, she's boiling.\n\nElizabeth pulled my face from her incredible tits and kissed me full on the lips.\n\n\"I love you,\" she whispered again.\n\nThen her hands clamped down on my ass and she drove me all the way inside.\n\nIt felt so right. She felt so right. We felt so right. I'd missed Elizabeth much more than I would have ever admitted to myself.\n\nHer kisses were electric, already pushing me right to the edge. Less than thirty seconds after plunging my cock into Liz's incredibly hot body, I felt myself losing control\u2014\n\n\"I'm gonna cum!\" I moaned --\n\n\"Yes!\" she screamed --\n\nAnd so I burst, overwhelmed by the moment, collapsing light-headed onto her bare shoulder. Liz wrapped her legs around my waist and held me in place, buried to the hilt, until we both stopped shaking.\n\nWe spent the better part of the week making love with the kind of passion I'd all but forgotten was possible. When the time came for me to once again return to school, we bade each other our customary tearful farewell. Though it hurt just as much as ever, this time there was something different about the way we said goodbye. There was no uncertainty; no creeping fear that we were making a huge mistake.\n\nFrom that day forward, we just made it work. There were a few things that made the long-distance thing easier this time around: Liz and I were able to schedule all our classes Tuesday-Thursday, creating four-day weekends we could spend together. We both finally got cell phones with unlimited minutes, and we both bought webcams, which were a god-send on those lonely nights when we just needed to see one another.\n\nI'll never forget the first night we plugged those things in. Liz\u2014still stuck on the other side of the country\u2014was getting ready for bed, wearing a thin red camisole over her enormous, braless breasts.\n\n\"Lock your door,\" she whispered.\n\nAnd so I did, feeling my pulse quicken as my beautiful girlfriend smiled back at me from hundreds of miles away and slowly let the straps of her camisole slide off her delicate shoulders. The swells of her luscious cleavage bulged above the drooping neckline.\n\n\"Wow,\" I panted.\n\n\"Oh, you like that?\"\n\nIn response, I slid off my boxers and grabbed hold of my aching shaft. On-screen, Liz taunted me, squeezing her own tits through the brief fabric of her shirt. I watched transfixed as that neckline drifted lower and lower.\n\nLiz gave the corner of her shirt a quick little tug and her breasts spilled into view. The hand on my cock went on auto-pilot at the sight, furiously jacking off. Panting, I watched as Liz rubbed and caressed her own nipples, her growing arousal adding color to her cheeks...\n\nI came, dribbling hot white semen down over my fingers.\n\nSo, yeah, there were a few things that helped us with the long-distance thing our second time around. But the real difference\u2014what really made the situation work that second time\u2014was the two of us. We'd both matured a lot in our time apart, and we'd both spent enough time experiencing college on our own that we didn't have to worry about what we were missing by staying together. We were at peace with what we had.\n\nAs months turned into years, things just got better. Liz and I graduated, moved into an apartment together out east, and found that we made great roommates.\n\nSo I proposed. And she said, \"Yes, of course.\" And she kissed me and cried and put on the ring.\n\nWe were both already so hopelessly and unquestionably devoted to one another that our wedding vows felt more like a pleasant formality and less like a life-changing commitment.\n\nCorny as it sounds, we'd found true love. Our only regret was that we'd fallen largely out of touch with our amazing friends from high school. Even Stephanie, so long an indelible fixture in Elizabeth's life, eventually became little more than a Facebook friend.\n\nWe found plenty of great new friends as time went on, but we never recaptured the magic we'd shared with our high school friends. Liz and I still talked about them all the time, and the pain of missing them never went away.\n\nAfter college, Steph really made a go at an acting career. She spent a few years waitressing in New York, and then another few in Los Angeles, booking the occasional gig in a stage play or a TV commercial. She never really caught her \"big break\" as an actress, but she also never let herself get jaded or discouraged.\n\nTalia and Rachel broke all of our hearts by splitting up during their final year of college. Just as Liz and I were finally getting back together, the two of them drifted apart, with Rachel hopping the pond to Oxford for grad school and Talia staying behind in California.\n\nWhen I asked Talia why she and Rachel broke it off, she told me that there wasn't any one reason, they had both just become different people over the years, and they both wanted different things from life.\n\nShortly after her 24<sup>th</sup> birthday, Amy shocked everyone by changing her Facebook status to: \"So... It turns out birth control isn't 100% effective.\"\n\nHer then-casual boyfriend got Amy pregnant, and her whole life turned upside down when she later gave birth to her adorable son, Adam. All of her plans\u2014including that pipe-dream of one day becoming a professional dancer\u2014went out the window when she suddenly found herself caring for a small, helpless person. She didn't even have someone to help her out\u2014the boy's father skipped town after less than a year.\n\nStill, Amy was a goddamn champion, and she turned out to be a great mother, expertly balancing time with Adam and her burgeoning career. I'll never forget the first time I saw her playing with Adam\u2014my fiery-haired, beautiful, badass-mother-fucker of a friend, happily making goo-goo noises at her infant son. She was exhausted, but as happy as I'd ever seen her.\n\nThen there was Corry. Much as I should have seen it coming, that girl still caught me completely by surprise...\n\nI was killing some time at the local bookstore when Liz excitedly tore me away from the science fiction section and dragged me up to the front counter.\n\n\"You have to get it, I'm too nervous,\" she giggled.\n\n\"I have to get what?\"\n\nMy wife pointed behind the counter, where the adult magazines were hiding. At first, I didn't understand what she was so excited about. I hadn't bought a nudie magazine since I was a teenager, as I considered them a waste of money for anyone that had a working internet connection. But then I saw it, too:\n\nPosing on the cover of a certain well-known gentleman's periodical was a very familiar face, with a very familiar set of tits.\n\n\"Holy shit, that's Corry!\"\n\nI couldn't believe it. Beneath all the dramatic makeup and a mane of crazily glamorous hair, there was my friend\u2014her skin airbrushed and gleaming like bronze, her huge breasts barely hidden behind a tiny bouquet of flowers.\n\nLiz was turning red, on the verge of exploding into nervous laughter right there in the middle of the store.\n\n\"You have to buy it!\" she squeaked.\n\n\"Okay, okay!\"\n\nI turned to face the shop's proprietor\u2014a sweet-natured elderly woman who reminded me very much of my grandmother\u2014and politely asked her for a copy of the magazine with the big-breasted blonde on the cover.\n\nWe didn't wait until we were home to look inside. Soon as we got in the car, Liz tore off the shrink wrap, and we huddled over the magazine, nervously giggling like a pair of 13 year old boys.\n\n\"Wow, she looks hot,\" Liz sighed.\n\nI couldn't disagree. Corrine's nude body looked spectacular in every photo, seductively posing around a Napa Valley vineyard, sunlight gleaming through her long golden hair. In one image, she was bending over to work an old-fashioned water pump, suggestively gripping the handle and aiming it between her tits.\n\n\"Bringing back memories?\" my wife teased.\n\n\"Yeah. Good times.\"\n\n\"Hmm. Feels to me like very good times.\"\n\nLiz gently rested her hand on my crotch, testing my hardness. I glanced up from the magazine and looked into her beautiful green eyes\u2014\n\nZip. Liz fished my aching cock out into the open. I quickly glanced around\u2014our car was sitting in the middle of a public parking garage, after all\u2014but there didn't seem to be any possible witnesses heading our way.\n\nLiz leaned down into my lap and gave my erection a series of slow, sensuous kisses.\n\n\"Keep looking at the pictures,\" she whispered\n\nThen my gorgeous wife engulfed my cock with her mouth.\n\nOhh, yeah...\n\nI dutifully returned my gaze to the photos of our friend, pulling out the centerfold to ogle an unbelievably sexy picture of Corrine: kneeling on a picnic blanket, arching her back, thrusting out her prodigious chest as she poured an entire jar of honey onto her tits. Sticky sweet nectar dripped down from her delicious nipples.\n\nDown in my lap, Liz withdrew her lips to catch her breath, stroking my wet shaft with her fist. She tormented me, teasingly swirling her tongue around the very tip of my penis before finally diving back down\u2014this time for keeps\u2014her head rising and falling on my lap, licking and sucking with abandon.\n\nLooking at the centerfold, I couldn't help but recall the way it had felt, all those years ago, when I'd first held Corrine's glorious naked body in my arms. How it had felt to bury my cock inside her enormous, soft cleavage.\n\nThen I flashed back to all my gorgeous friends from high school, and all the amazing sexual experiences we'd shared.\n\nAnd I exploded into Liz's mouth.\n\n...............................\n\nI turned twenty nine on the same day as my ten year high school reunion. Fit, confident, and still pretty good at math; financially successful and madly in love with my beautiful wife. With the big three-oh looming on the horizon, we were even finally starting to think about kids.\n\nBut no matter how much time passed, and no matter how drastically my life changed, memories of my senior year never felt too distant.\n\nMe, Liz, Amy, Corry, Talia, Steph\u2014 it had been years since all of us had managed to get together in the same place at the same time. Spread out and living our separate lives, it was tough to coordinate. But we all vowed to be there for our school reunion. The fact that it was also my birthday made the gathering that much more important. Even Amy, who typically spent every free minute with her four-year-old son, asked her father to babysit for the weekend so she could see the rest of us.\n\nOne by one, everyone arrived, and the six of us fell into easy conversation, chatting and joking around as though we were still back in high school; as though the past ten years had never even happened. The reunion dinner drew to a close in the blink of an eye, and we agreed that we still had way too much catching up to do before we called it a night.\n\nTalia eagerly invited us to spend the rest of the evening at her place:\n\n\"Come on, it'll be just like old times.\"\n\nShe was more right than she realized.\n\nTalia's apartment was an eccentrically designed one-bedroom in a great part of the city\u2014but with space at a premium, her living room was a bit small to accommodate six people (Liz wound up sitting on my lap so that we could fit Stephanie on the couch beside us). The coffee table we huddled around was so tiny we hardly had space to set our drinks down.\n\nSomebody brought out a cake and the women all sang \"Happy Birthday\" to me before each of them took turns giving me a very nice\u2014albeit chaste\u2014kiss on the lips.\n\n\"I really missed you guys,\" I finally sighed.\n\nIt had been the better part of eight years since I had kissed anyone other than my wife, and it was more than a little bit of a thrill getting attention from so many beautiful women. It didn't help that my wife's exquisite butt\u2014barely covered by the shimmery gold dress she had on\u2014was rubbing against on my crotch every time she moved.\n\nI swear that each of my old friends looked even more beautiful at 29 than they had at 18. They possessed a calmness and a confidence in the way they carried themselves that had been lacking in the desperate years of high school.\n\nAmy didn't exactly have the same \"hard body\" that she'd fanatically honed throughout her teenage years, but she was still trim and curvy in all the right places, and her tight slacks proved that her famously terrific ass remained one for the record books. As an added bonus, Amy's already sizable bust had filled out even more when Adam was born, making her nearly as stacked up top as our other friends were.\n\nShe wasn't as chesty as Corrine, of course, who had reignited some of my oldest fantasies with the playful, scoop-neck dress she'd worn that evening. Don't get me wrong, there was nothing overtly slutty about the choice of outfit, but when a woman with tits like Corry's wears something with a low neckline, it's nigh impossible to escape the gravitational pull.\n\nStephanie was done up that evening in a kind of retro, sixties style that really complimented her Hollywood good looks and pinup body. Her navy blue top was a turtle-neck, but it still stretched nicely over her prominent double D's. I caught myself staring, trying to determine whether or not she'd worn a bra.\n\nI had no such questions about Talia. She wore a red silk blouse, and her full, firm tits bounced around with glorious freedom beneath the fabric. Of all the women, Talia had changed her appearance the most since high school, cutting her long, raven hair into an edgy, short style and dying it to a dark metallic burgundy. Her lips, painted bright red to match her blouse, set my mind wandering, and I kept picturing her kneeling down between my legs, her head bobbing rhythmically up an down, smearing some of that red lipstick on my dick.\n\nStill sitting on my lap, Liz turned around and shot me a curious look, no doubt feeling the evidence my growing arousal beneath her. I tried to ignore her, turning my attention back to the others, but she leaned in close and whispered in my ear:\n\n\"Is it turning you on, seeing everyone again?\"\n\nI blushed a bit at being caught, but there was nothing I could do for it but shrug.\n\n\"What are you guys whispering about?\" Stephanie frowned, pretending to be offended.\n\n\"We were... just whispering about how weird it is that you girls are all single!\" Liz responded.\n\nThat earned her a round of boos from the crowd, who all offered up various excuses about being \"too busy\" or \"still looking for the right guy.\"\n\nAmy just laughed and said, \"Are you fucking kidding me? I've got a fucking four-year-old! When would I have time to date? Maybe you could just let me borrow Ian for this weekend, while my dad is watching T-Rex.\"\n\n\"Huh?\" Talia asked.\n\n\"Oh sorry,\" Amy laughed, \"Adam insists that everybody call him 'T-Rex.' He's really into dinosaurs.\"\n\nLiz clicked her tongue in mock-disapproval. \"I'm sorry to change the subject, but did you just ask to borrow my husband?\"\n\n\"Only for the weekend!\" Amy exclaimed, laughing. \"I'll bring him back in one piece.\"\n\n\"Well, once piece IS all you need,\" Stephanie joked.\n\nCorrine cut in, \"Can I say something? I know you're all thinking the same thing, you're just too shy to say it. So, for the record, I just want to say that I was right. Ian? You are totally hot at thirty.\"\n\nI blushed as the others all emphatically agreed with her.\n\n\"Hey, I'm still just twenty nine,\" I argued.\n\n\"Oh, close enough! Point is, I said you'd get really cute, and you did! Your face just... fits you better than it used to. I don't know. Everything kind of settled into place. And you look bigger, like you've been working out.\"\n\nLiz hugged me proudly, saying, \"He has! He lifts weights and stuff now. You should see him without his shirt on, he has these great big muscles.\"\n\nShe was exaggerating, of course. I was happy with the way I looked, but I wasn't exactly hiding the torso of a Spartan warrior beneath my shirt.\n\n\"Show us!\" Amy cheered.\n\n\"Yeah, show us!\" the other women echoed.\n\n\"Thanks, guys,\" I mumbled. \"You all look amazing, as well.\"\n\nBut that didn't satisfy anyone. They all took up the chant: \"Take--it-off! Take-it-off!\" Even my wife started cheering for me to disrobe. I guess she wanted to show me off to her friends.",
        "\"Come on, it's my birthday! Why should I be the one taking my clothes off?\"\n\nTalia jumped to her feet, shouting, \"Democracy, that's why! You're outvoted. Now take off your shirt or it means you're a communist.\"\n\nAh hell, why not? It's not like I was gonna mind being the center of attention. I moved to unbutton my jacket\u2014but stopped myself just short of taking it off.\n\n\"I tell you what,\" I grinned at them all. \"I'll take my clothes off. But, because it's my birthday, and in the interest of fairness, I'll only take something off if one of you takes something off first.\"\n\nStephanie grumbled, \"That's not fair, you're a guy. You've got way more clothes on than the rest of us.\"\n\n\"Yeah, but there's five of you and just one of me. Still, no big deal. If none of you girls wanna buy a ticket to the gun show...\"\n\nTalia laughed so hard she snorted, which made the rest of us laugh even harder. When the fits of giggles finally died down, I went to reclaim my seat\u2014\n\nBut before I could, Amy stood up, looked me dead in the eye, and said, \"Alright, FINE.\"\n\nAnd she calmly took off her leather jacket.\n\nA series of \"ooh's\" rippled through the room, daring me to meet her challenge.\n\n\"You better do it, honey,\" Liz chided me.\n\nI handed her my jacket.\n\nAll eyes swung back to Amy, who nonchalantly unbuttoned her blouse and pulled it open\u2014revealing her large, round breasts supported in a plain beige bra. I grinned at the little freckles around her cleavage, remembering some of the very good times we'd shared our senior year.\n\nJust to mess with everyone, I pulled off my shoe in response.\n\nEveryone complained, but I silenced them all, insisting, \"Hey! I said I'd take off something. I never said what that something would be.\"\n\nThe five women in the room looked around, frowning at their own, bare feet. They'd all worn sexy-but-painful heels to the reunion, which they'd immediately removed once we'd gotten settled inside Talia's apartment.\n\nAmy shifted where she stood, suddenly a bit uncomfortable with the position she was in. None of the women had much on that they could lose without sacrificing their modesty. I flashed back to high school, when everyone had been so gung-ho about skinny-dipping. Now that we were older\u2014and I was MARRIED\u2014everyone was a lot more self-conscious.\n\n\"A little help, guys?\" Amy pleaded with the others. Finally, Corrine stood up, reached a hand up under her hemline, and quickly pulled down her slip.\n\nI took off my other shoe.\n\nStephanie considered for a moment, before finally scooting herself to the edge of the couch so she could reach a hand up beneath her retro miniskirt and take off her little black panties. She caught my eyes staring at the small fistful of lace in her hand and suddenly looked away, nervous.\n\nIn response, I undid my necktie and draped it over the back of the sofa.\n\nOnce again, Amy looked around to the others, her natural competitiveness ignited. Talia rose to the occasion, unbuttoning her slacks and sliding them down her toned, sexy legs, giving the room a brief glimpse of her shiny red thong underwear before adjusting her blouse to cover up.\n\nBefore I even moved to strip an article of my own clothing, Amy was already stepping out of her own pants, until she was standing before me wearing nothing but that beige bra and some very cute green underwear.\n\nTalia whistled, \"Wow, Amy, you look great.\"\n\nShe was right, Amy DID look great. Even with my wife right next to me, I couldn't tear my eyes from Amy's nearly-naked body.\n\nStephanie turned everyone's attention back to me, saying, \"Okay, Ian, that was two things. Now strip.\"\n\nSo, I took off my socks.\n\nThe girls all laughed that they should have had a \"strategy meeting\" before they agreed to this.\n\n\"Fine!\" Corrine sighed, and she pulled her arms inside her dress. After a few seconds of fumbling, she pulled her enormous, heavy-duty bra out through her neckline and tossed it on the couch.\n\nHoly shit.\n\nAnd I'd thought her tits were looking nice in that dress before she went bra-less. I could clearly see the telltale bumps of her nipples poking through the fabric.\n\nI took off my belt, wondering if any of the women could tell how hard I was getting inside my slacks.\n\nEveryone looked at Liz\u2014now the only woman still fully clothed\u2014but she just batted her eyelashes. \"What do I need to take something off for? I see him naked every night!\"\n\nThey all groaned in response. My wife winked at me.\n\nAmy turned to her friends, pleading, \"Come on ladies, are you just gonna let him win? I'm down to my freakin' skivvies, somebody's got to have something else they can take off.\"\n\nBut her pleas were just met with nervous laughter from the rest of the room.\n\n\"Don't look at me,\" Talia answered. \"I'm not wearing a bra.\"\n\n\"Me neither,\" said Stephanie.\n\nImpatient, Amy turned to Corrine, saying, \"Corry, are you wearing underwear?\"\n\n\"Yeah.\"\n\n\"Well then, los it! We've almost got him.\"\n\nA bit awkwardly, Corrine leaned forward, and in the process her incredible braless tits nearly popped out of her dress. But, to my great disappointment, she somehow managed to keep everything in its proper place while she reached a hand up under the hemline of her dress and removed a sexy pair of lace bikini panties.\n\nI figured that earned them all my shirt\u2014though it wasn't much of a compromise, given the fact that I was wearing an undershirt.\n\nStephanie swore, \"Jesus Christ, you've got another shirt on underneath? I never realized how many layers you guys wear!\"\n\nI just nodded, suddenly realizing that, aside from my fully-clothed wife, every girl in the room was now wearing absolutely nothing beneath the clothes she had on.\n\nAmy spun to Corrine, pleading \"Come on, help us out, it's not like he's never seen them before.\"\n\n\"Hey!\" Corrine smiled, \"You could say that about everybody here! Back in high school, I seem to remember a certain girl lured Ian into a changing room with her while she tried on swimsuits. What's so different about me?\"\n\n\"Yeah, but that was ten years ago! It's weird now! And you were in all those magazines, showing your boobs, so what's the big deal?\"\n\nCorrine's cheeks turned a deep pink and she exclaimed, \"The big deal is he's MARRIED! I'm not stripping in front of a married man.\"\n\nShe turned to Liz for support, saying, \"Liz, you honestly don't think it would be weird having your husband looking at another woman naked?\"\n\nLiz just frowned, \"Not when it's YOU, sweetie! If it was some random tramp from his work or something, then yeah, but we're all friends. Besides, I want to make him happy. The poor guy fantasizes about the four of you all the time.\"\n\n\"Liz!\" I gaped at her, incredulous.\n\n\"Right, I'm sure that's SUCH as surprise to everyone,\" Liz smirked.\n\nThe rest of us all giggled self-consciously.\n\nStephanie took a deep sip of her drink, and whispered, \"Really? You still think about us like that? Even after all these years?\"\n\n\"Well, um\u2014\" I started to answer, but then changed my mind and promptly threw down the rest of my wine instead. Liz shook her head in amusement, answering for me:\n\n\"Are you kidding? Sometimes, when we're having sex, we even role-play that I'm one of you.\"\n\nI practically choked on my drink. It was one thing for Liz to tell the others about my sexual fantasies\u2014like she said, not exactly a surprise\u2014but this conversation had suddenly turned REALLY personal.\n\n\"No way!\" Amy shouted.\n\n\"I guess we should be... honored?\" Corrine grinned.\n\nI hid my face in my hands, nervously mumbling, \"Can you blame me? I mean, you ladies all left quite an impression. Not exactly easy to forget.\"\n\nStephanie fidgeted, rubbing her bare thighs together as she asked, \"What exactly does that mean? Like, do you pretend that we're back in high school, or do you pretend that it's happening, like, today? Like we hook up again?\"\n\n\"Both, I guess.\" I poured myself another glass of wine.\n\nTalia ran over and gave me a hug, and a big wet kiss on the cheek. \"Oh come on, Ian, don't be embarrassed. Truth be told, I fantasize about you sometimes too.\"\n\n\"Yeah?\"\n\n\"Me too,\" Corrine admitted.\n\nAmy suddenly burst out laughing.\n\n\"What's so funny?\" I asked.\n\n\"I named my vibrator 'Ian Junior.'\"\n\nThe awkwardness in the room finally deflated.\n\n\"Now THAT is an honor,\" I smiled.\n\nOff to my side, Stephanie whispered something in Elizabeth's ear and got an encouraging nod in response. Then the busty blonde stood up and faced me, her large, braless tits swaying beneath her turtleneck.\n\n\"Hell with it,\" she said. \"It is your birthday, after all.\"\n\nThen she grabbed hold of her turtleneck and peeled it off her chest.\n\nI had to remind myself to breathe. Stephanie's tits looked perfect\u2014full and firm, big and juicy, topped with those little pink nipples I still remembered so well.\n\nIt was the first time I'd seen another woman topless since I'd married Liz. I loved my wife, but I would have killed for the chance to cross the room and fill my hands with Stephanie's incredible breasts.\n\n\"Wow,\" I sighed.\n\n\"Your turn,\" she answered.\n\nFeeling my fingers tremble, I tugged off my undershirt and smiled at the approving hoots and hollers I got in return.\n\n\"Nice!\"\n\n\"Yummy!\"\n\n\"Damn!\"\n\n\"Lookin' good!\"\n\nLiz ran up to me and planted a series of exaggerated kisses all along my chest and arms.\n\n\"Mmm, I love my husband!\"\n\nI took my eyes off Stephanie's rack long enough to give Liz an appreciative smile, and in a flash she reached up under her hemline and pulled down her slip.\n\n\"Honey?\" I asked.\n\nShe pulled down her underwear and tossed it on the table.\n\n\"Two more!\" she exclaimed, triumphantly.\n\nTwo? All eyes in the room swung over to me.\n\nOh. Two.\n\n\"Are you sure about this?\" I asked her.\n\nLiz nodded, her fingers already unbuttoning my slacks. She slowly dropped to her knees, sliding my pants down my legs as she went. I took a look around the room, feeling my pulse quicken as the other women all leaned in for a closer look.\n\nWith my pants around my ankles, there was little I could do to disguise my obvious, prominent erection\u2014which had started throbbing with desire after Stephanie took her top off.\n\nLiz shocked us all by grabbing my shaft through my boxers and giving it a quick, firm squeeze.\n\n\"Holy shit!\" I moaned, much to her amusement.\n\nThen came the coup-de-grace: Liz teasingly took hold of my boxers and pulled them down a few centimeters, ready to reveal her husband's erection to all her oldest friends.\n\nThe other women shifted, suddenly tense. Talia chewed her lower lip, unconsciously tugging at the fabric of her blouse.\n\n\"Who's the prude little girl now?\" Liz asked, and then she tugged off my boxers and stuffed my whole naked cock in her mouth.\n\nAn audible gasp went through the room. I froze, unable to believe what was happening. Without thinking, my hands grabbed hold of Liz's hair, holding on for dear life.\n\nI stood there, staring at the other women like a deer in headlights while they all watched\u2014shocked and aroused\u2014while my beautiful wife sucked on my dick. Elizabeth really made a spectacle of herself, too: deliberately positioning herself so that everyone could see what was going on as she licked, sucked, kissed, and stroked my entire length, while moaning loudly about how much she enjoyed it. Liz was always great at giving head, but she was absolutely on fire tonight.\n\nEveryone else just stared in rapt silence. I noticed that Talia had, without even realizing it, moved her hand between her legs, up against the crotch of her thong. Then I turned my attention to Stephanie, naked except for that little retro miniskirt, her beautiful bare bosom flushed with desire.\n\nLiz finally took her mouth off of me, gently massaging my balls while she turned to her friends, saying, \"Enjoying the show?\"\n\n\"Jealous,\" Amy whispered.\n\n\"Stephanie, sweetie-\" Liz whispered, pausing mid-sentence to lick the underside of my shaft. \"Since you were nice enough to take off your top for Ian, would you like to come over here get a taste of what you've been missing all these years?\"\n\nI couldn't believe what I was hearing. What the heck was going on in Liz's head? In our six years of marriage, we'd always been 100% faithful to one another. Sure, we'd played around with our friends back in high school\u2014but that was a lifetime ago! I never in a million years would have expected Liz to be okay with something like this, much less be the one encouraging it.\n\nAcross the room, Stephanie rose to her feet and walked uncertainly towards me, her heavy breasts swaying hypnotically with each step. My legs turn to rubber, and I felt paralyzed with desire. Thanks to Liz's diligent stimulation of my cock, I couldn't even catch my breath for a second to process what was happening.\n\nBefore I knew it, the busty blonde was standing at my side, looking up and down my naked body as she tentatively reached out and caressed my chest.\n\nI finally managed to croak out, \"You sure about this, Liz?\"\n\n\"Mmm, Happy birthday, honey,\" she cooed, planting warm, wet kisses all along my shaft.\n\nWith my wife busy down below, Stephanie and I met each other's eyes. Years of fantasies and unfulfilled desires flashed through my mind. Memories of horny, adolescent passions.\n\nStephanie pulled me in and kissed me, hot and hungry, crushing my body against her boobs.\n\nNearby, I heard Talia whisper, \"Oh my God.\"\n\nStephanie's hands were all over me, wandering every inch of my back, arms and shoulders. She let her fingers travel down to my hips and then, nervous as hell, she grabbed hold of my butt and squeezed with both hands.\n\nThat was the moment I completely lost control. I reached up and groped her fabulous tits, grunting with desire as I squeezed the soft flesh and pulled at her adorable pink nipples.\n\nStephanie broke our passionate lip-lock, gasping, \"I can't believe we're doing this!\"\n\n\"Me neither,\" I agreed, and then dropped my mouth to her cleavage.\n\nAll around the room, the other women wordlessly began to shed what little clothing they had left. Amy unsnapped her bra, Talia unbuttoned her red silk blouse, and Corrine slipped out of her dress.\n\nThen I felt the world spin crazily as all four of my beautiful best friends crowded around my body and began kissing me\u2014groping me\u2014rubbing their soft, warm bodies against me.\n\nI felt the twin imprints of Corrine's enormous breasts pressing into my back. My skin shivered with pleasure, and I reluctantly pulled Elizabeth's mouth off my cock, not wanting this moment to end too quickly.\n\n\"Let's all just play for a while,\" I said. My wife nodded and rose to her feet, reaching for the zipper on her dress\u2014\n\n\"Let me help you with that,\" Talia urged. I watched as Liz's exotic bisexual friend tugged down her dress, revealing the wonderful curves of my wife's body. Talia then gave Liz's healthy ass a little squeeze\u2014\"Sorry Hon, couldn't help myself\"\u2014before unsnapping her bra and releasing Liz's great big boobs.\n\nTo my right, I realized that Amy was still wearing those cute green panties, so I turned my attention to her. I wrapped both arms around Amy's body and pulled her in for a kiss. She melted into my affections, her fingers grabbing me by the hair and holding me in place while we kissed, unwilling to let go. Her tongue hungrily probed my mouth.\n\nFinally she released me, then threw back her head and arched her back, thrusting her chest out at me.\n\n\"Suck on my tits,\" she panted.\n\nSo I did. I grabbed hold of Amy's heaving breasts and directed them into my mouth, swirling my tongue around her nipples.\n\nOn either side of me, Stephanie and Corrine started kissing my neck and nibbling my shoulders, then I felt their hands join together around my cock, gently stroking.\n\nThese women are unbelievable...\n\nNearby, my wife smiled at me while Talia had some fun of her own, gently pulling at Liz's big, burgundy nipples.\n\nAs I suckled Amy's rack, her urgent moaning got to be too much for me to bear\u2014I needed to do more. I dropped forward, to my knees, grabbed hold of her panties, and yanked them down to her ankles.\n\nI was rewarded with the tantalizing sight of her bald pussy, just inches from my lips. For a few seconds, I teased her wet, puffy lips with the tip of my finger.\n\n\"Mmm!\" she urged me, grabbing my hair and pulling my face towards her crotch\u2014\n\nBut I resisted. First, I wanted to feel her glorious ass in my hands again. I reached up, cupped my palms around those firm, perfect butt cheeks of hers, and SQUEEZED.\n\nFuck yes.\n\nI finally allowed Amy to pull my mouth against her cunt, which I happily tongued like there was no tomorrow.\n\n\"Oh yes! OH YES! Ohhh...\"\n\nWhile I was kneeling there, eating out Amy, Stephanie got creative:\n\nShe laid down on her back, scooted between my legs, and craned her neck up to give me a first-rate blowjob. Okay, maybe that's not entirely accurate\u2014from that position it was a struggle for her to do much more than gently lick the underside of my cock\u2014but I still gotta give her an \"A\" for initiative.\n\nIn any case, I had been so preoccupied with Amy's pussy that the sudden blast of pleasure on my cock took me completely by surprise. I nearly came, but before that could happen, I took a quick moment to collect myself, catch my breath, and get my hummingbird of a pulse back down to manageable human speeds.\n\nAmy staggered a bit, reaching behind to brace herself against the couch in preparation for my renewed assault.\n\nI sat back, resting my bare buttocks on the cushion of Stephanie's large breasts. Then I dove back in between Amy's toned thighs, probing my tongue between her folds.\n\nSeeing how much of a strain it was for Stephanie to reach my erect penis, Corrine snuggled up behind me and reached around with her hand, grabbing hold of my rigid shaft and gently pressing it down closer to her friend's mouth.\n\nTo my left, Liz suddenly moaned. Loudly. I flicked my eyes over in her direction, shocked to see what was happening:\n\nApparently, while I had been busy fooling around with the triple-threat of Amy, Stephanie, and Corrine, Talia had been taking some liberties with my wife. She'd removed one of her hands from Liz's breasts, replacing it instead with her mouth. Then she'd slowly walked her fingers down my wife's stomach and through the soft fuzz of her pubic hair, finally arriving at the warm, wet heat between Liz's thighs.\n\nLiz had never been touched quite so intimately by another woman before in her life, and I saw the confusion in her eyes; the conflict between the pleasure she was feeling and the strangeness of the situation. But when Liz saw me watching out of the corner of my eye\u2014when she saw how hot it was making me\u2014she finally just gave in and went with it.\n\nTalia curled her slender finger up inside Liz's slit, provoking a long, shuttering gasp.\n\nUnreal.\n\nFeeling like I was getting distracted (though who could blame me?), I made a conscious decision to re-focus all my attention on pleasuring Amy. I tuned out the rest of the room as best I could, kissing and tonguing her hot, delicious pussy.\n\nIt wasn't long before I was rewarded for my efforts. Amy's thighs started trembling, her panting became frantic, and then\u2014\n\n\"Oh, fuck! Yes!\"\n\nAs she came, I felt her incredibly firm butt cheeks clenching reflexively in my hands.\n\nFinally satisfied, Amy fell away to recover, giving me a chance to concentrate all my attention on the two voluptuous blondes. I scooted my body a few inches backwards, drawing my slick wet cock away from Stephanie's mouth, letting it drop down instead into the valley between her soft, pink boobs.\n\nWith a smile, she dutifully squeezed her breasts together and began pumping them up and down the length of my shaft.\n\n\"Stephanie?\" I panted, leaning forward to plant a kiss on her forehead. \"That feels amazing, but right now I have something else in mind.\"",
        "I kept scooting back, sliding my cock across her belly and finally positioning myself at the entrance between her legs. As I hiked up Stephanie's miniskirt around her hips, the sensitive tip of my penis bumped up against her boiling wet cunt.\n\nOnce she saw what I was up to, Stephanie's eyes went wide in shock. \"Oh my God! Can we do that? Can we really do that? Liz?\"\n\nStephanie and I turned our attention to my wife, who was gripping the fabric of Talia's blouse with white knuckles, trying to stave off an orgasm as the other girl inserted a second finger into her snatch. Liz just nodded her approval to us, dazedly muttering, \"I want to watch.\"\n\nThat was all the permission I needed. Slowly, smoothly, I pushed the entirety of my granite hardness into Stephanie. As she and I watched each subsequent inch of me disappear between her legs, Stephanie just kept moaning, \"I can't believe we're really doing this... I can't believe we're really doing this...\"\n\n\"Neither can I,\" I assured her. \"But we ARE.\"\n\nAnd we DID. I fucked Stephanie while her best friend\u2014my wife\u2014watched us do it. It felt absolutely spectacular. Liz was my soul mate and my one true love, but Stephanie was my first. And you never really get over your first.\n\nFeeling left out, Corrine sat her naked body down on the carpet beside me, smiling with pride as my eyes were inexorably drawn to her tits.\n\n\"See anything you like?\" she asked, spreading her legs apart squeezing her breasts together.\n\n\"Hell yes,\" I answered.\n\nThen Corrine scooped up her tremendous tits and offered them to my hungry mouth. In a daze, I suckled the plump, juicy nipples between my lips, relishing every delicious second of it.\n\nContinuing to fuck Stephanie, I shifted my weight onto one hand, reaching out with my other to play with Corry's poor, neglected pussy.\n\nEverything was pretty overwhelming: Liz, Corry, and Stephanie's combined moans filling the air, the wet heat of Steph's body clenching at my cock, and the feel of Corry squirming on my fingers while her tits smothered my face.\n\nIt took all my willpower, but somehow I managed not to cum. Chalk it up to getting older, I suppose\u2014better self-control during sex. Still, all that self-control was only gonna do so much for me. These girls were way too hot.\n\nBeneath me, Stephanie's body went rigid as she cried out in ecstasy. I slowed down, gently rubbing my pelvis against her for a few minutes as she was wracked by short little tremors\u2014orgasmic aftershocks\u2014until she finally collapsed with a long, happy sigh.\n\nI quickly pulled out, hoping to give my throbbing cock a moment's respite from all the wild stimulation.\n\nCorrine, however, had other ideas. She immediately shoved me onto my back and climbed aboard, sheathing me inside her boiling hot cunt.\n\n\"Holy shit...\"\n\nI groaned as Corry's fingernails scratched at my chest. She was already hot-to-trot, and wasted no time warming into things. Right from the get-go, that woman started bouncing on my cock like her life depended on it, grunting and screaming as she went.\n\nHer pendulous breasts swung crazily towards my face with each powerful thrust. God, I'd missed those things. I made a game of catching her nipples with my tongue every time they bounded in my direction.\n\nBehind me, I heard Liz whisper, \"Let's get on the sofa, I want Ian to see.\" Talia let her fingers slip out of my wife's pussy, and the two of them hurriedly repositioned themselves on the couch, right smack dab in my field of vision. Everyone in the room turned to watch as they continued cuddling together, Talia growing braver and braver the closer Liz got to orgasm.\n\nI twitched as one of Liz's juicy nipples fell from Talia's mouth with an audible plop.\n\n\"You are so damn sexy,\" she muttered. Liz just threw her head back and mewed happily, enjoying the feel of Talia's fingers returning to her cunt.\n\nArousal coursed through my veins like fire. Spurned on by the view of my wife's glorious naked body, I grabbed Corrine by the hips and slammed myself up into her. Our fucking grew ferocious, and Talia made sure to match our frantic new pace, fingering her own big-breasted lover with manic intensity. Liz and Corry even started a moaning contest, playfully trying to outdo one another with their loudest, boldest, sexiest screams.\n\n\"Oh fuck, I'm so close!\" Corrine exclaimed. I was too\u2014it felt like I'd been on the verge of orgasm ever since Liz had first initiated this whole crazy scenario\u2014but I'd come too far to give in now. I was determined to be the last one in the room to climax, so I closed my eyes and focused with all my might on keeping it together.\n\nCorrine wasn't helping. She yanked my hands off her hips and crushed them against her chest, belting out a shrill series of yelps as she came with me buried to the hilt inside of her. Even through the pillow of her breasts, I could feel Corrine's pulse, racing along at a million miles a second.\n\n\"Mmm!\" Liz gasped, exploding into her own orgasm mere seconds later. Talia instinctively raised her lips to Liz's, kissing passionately. Unthinking, or perhaps just grateful, my wife kissed her back, liberally slipping in some tongue.\n\nCorrine fell to the ground beside me, letting my rock-hard dick slip out of her. I let out a frustrated groan as I felt her two enormous boobs mold against my shoulder.\n\n\"You still haven't come?\" Talia asked in disbelief, quirking an eyebrow at my throbbing erection.\n\n\"Neither have you,\" I grinned.\n\nShe repositioned herself on the couch, letting her unbuttoned silk blouse fall open wide enough to show me every inch of her body. That shiny red thong was taunting me...\n\n\"Well, I have been a bad girl,\" Talia continued. \"Fooling around with your wife and all. Maybe you should come over here and punish me.\"\n\nThose intoxicating, exotic eyes flashed with desire, and her red lips curled into a devilish grin. I was so aroused, I was hardly able to walk. Nonetheless, I climbed to my feet and managed to cross the short distance over to where Talia was laying beside my wife.\n\n\"Get up,\" I commanded.\n\nShe obeyed.\n\n\"Turn around.\"\n\nTalia obediently spun away from me, presenting me with a breathtaking view of her nice, firm butt.\n\nI playfully shoved her forward, bending her over the backrest of the couch. The outline of her pussy lips was clearly visible through the fabric of her thong underwear. I took a step forward, so that my naked erection was rubbing against her genitals through the brief layer of silk.\n\nNearby, my wife looked up at me from the couch, still recovering from her recent orgasm. She smiled encouragingly.\n\n\"What do you want me to do next?\" Talia asked, her voice quaking slightly with anticipation.\n\nI pulled her thong aside and pushed the head of my cock into her wet, eager gash.\n\n\"I want you to moan for me.\"\n\nShe was only too happy to oblige. The second I was all the way inside Talia, I knew I wouldn't be able to last. My body was begging me to end it all, my mind screaming at me to just let loose and fuck my exotic lover with total abandon until I burst.\n\nAnd that's exactly what I did.\n\nWith one hand holding firmly onto Talia's beautiful ass cheeks, and my other hand reaching around to frig her engorged clit, I started fucking her like there was no tomorrow. I didn't care about self-control anymore; I just wanted to fuck her as hard as I could, as fast as I could.\n\nTalia continued moaning for me as I pounded her senseless. I watched with delight as her blouse kept scrunching up higher and higher on her torso, until it was riding up around her armpits. Her soft, creamy breasts shuddered and bounced with my every thrust.\n\nIn the end, I suppose I got lucky. I wasn't trying to hold back my orgasm anymore, but apparently Talia was even hornier than me. Splayed out in front of her eyes were four of the sexiest women in the world: Amy, Stephanie, Corry, and Liz\u2014all of them buck naked, all of them smelling of sex, and all of them watching us fuck. Talia cursed as rapture overwhelmed her\u2014\n\n\"Damn you guys, you're all so\u2014so fucking HOT!\"\n\nAnd she came like a crazy person, slapping the sofa with her hands. The sound of her orgasm instantly triggered my own. I yanked my cock out of her pussy, slapped it down into the crease of her ass, and roared out a howl of pleasure as I ejaculated all over her slender back.\n\nTalia went limp, still bent over the back of the couch.\n\nMy dick kept spurting for what felt like a solid minute. At last a final, heavy stream of cum flowed out of me and dribbled down across Talia's ass, positively soaking her thong.\n\n\"Wow,\" Amy said at last. \"I don't think I've ever seen a guy cum that much.\"\n\nLiz walked over to give me a hug, and I glowed at the familiar pressure of her epic tits squeezing against my body.\n\n\"How are you feeling?\" she asked sweetly.\n\n\"How are YOU feeling? You just watched your husband have sex with a bunch of other women.\"\n\nLiz looked around at our friends, considering, then planted an explosive kiss on my lips. I swear I already felt myself coming alive again.\n\n\"I'm okay,\" she said at last. \"I'm not okay with you going around screwing 'other' women\u2014but these aren't 'other' women. They're special. And I wanted you to have something special for your birthday. Besides, I know how much you've always wanted to do something like this.\"\n\n\"Dreamed, is more like it,\" I grinned.\n\nStephanie shook her head in amusement, adding, \"I STILL can't believe we all just did that! I've been wanting to have sex with Ian again ever since high school. I just never said anything, because he's been with Liz the whole time.\"\n\nLiz released me and walked over to give her BFF a naked hug. \"Aw, I'm sorry honey. You should have told me, we could have worked something out.\"\n\n\"I didn't want to make you feel weird!\" Stephanie exclaimed. \"Besides, I've had other boyfriends and stuff over the years. It's not a huge deal, it's just\u2014all that stuff that happened between us in high school, I just always fantasized about doing it one more time.\"\n\n\"ONE more time?\" Corrine exclaimed. \"Who said anything about ONE more time? The night is young! I guarantee you guys\u2014between the five of us, we can definitely get Ian rearing to go again.\"\n\n\"I'm already getting there,\" I said, which prompted a cheer from my beautiful friends.\n\n\"First, I think I need a shower,\" Talia muttered, her cum-spattered body still draped limply over the couch.\n\nI gave her a pleasant pat on the rear, saying, \"I think I'll join you.\"\n\n\"Me too!\" Liz said.\n\n\"And me!\"\n\n\"All of us!\"\n\nTalia shook her head, laughing, \"Guys, my shower is tiny. There isn't room for two people to fool around in there, much less six.\"\n\nBut we tried anyway.\n\nTalia was right, of course. Her shower was basically the size of a phone booth. To fit everyone inside, we had to comically jam ourselves together like sardines. It wasn't exactly easy to get clean, but then getting clean wasn't exactly our priority.\n\nAs the lone male, and the birthday boy to boot, I was the natural center of attention. I was bombarded by a constant assault of gropes, licks, and kisses. But I didn't get ALL the fun; the girls spent plenty of time pinching and tickling one another as well.\n\nIt was Corrine who finally took the initiative to actually get us all clean. She picked up a bottle of coconut-scented body wash and held it high overhead\u2014\n\n\"Okay, close your eyes, everybody!\"\n\nShe poured it all over us. Seconds later, our six hot, soapy bodies were sliding back and forth together. I felt someone's hand grab hold of my rapidly-thickening penis, helpfully coating it with Talia's body wash until it was nice and slippery. Then I felt another hand down there as well\u2014someone else's, this time\u2014and then another. I closed me eyes and leaned back, enjoying the relaxing attention of so many slick, soapy fingers stroking up and down my cock.\n\n\"I missed you guys so much,\" I sighed. Then someone bit me on the nipple.\n\nBy the time that shower ended, I was anxiously awaiting round two. We all hurried into Talia's bedroom, not even bothering to towel off, and flopped our wet, naked bodies down onto her queen size-bed.\n\nWith five girls on top of me, it was hard to see where one person ended and the next began. We rolled around together, tearing up the sheets. Writhing and touching and moaning in a messy tangle. As soon as I started paying attention to one girl, the others would swarm around me like a school of hungry piranha.\n\nI was in heaven\u2014and not just because I was having a six-some with the hottest women in the world, but because I was back with my friends again. Back with the best friends I'd ever had.\n\nThe best friends I'd ever had.\n\nIt was crazy, when I thought about it like that. These women were so central to my life and the man that I became, and yet our \"clique\" in high school really only lasted a couple of months; October to June of our senior year. Before then, we weren't even acquaintances, and afterwards, we all went our separate ways. Nearly thirty years of life, and I was still hung up on those few precious months.\n\nI appreciatively held their bodies close to mine.\n\nNobody was in a rush to cum this time around, and we all settled in for a long, playful night of lovemaking. I lost track of time, my hands and lips roaming from one beautiful woman to the next\u2014way more than I could handle all by myself, but I was game to try.\n\nSince I'd kind of neglected Liz when we were all in the living room together, I took the opportunity to remind my wife just how much I adored her body. She cooed as I trailed kisses down her back and across her ample buttocks.\n\nNo fewer than three of the other four women were caressing my cock as I did this, so I turned to my lovely companions and politely asked, \"Sorry ladies, but would you mind if I took a moment to have sex with my amazing wife?\"\n\nThey released my penis and contented themselves with kissing and groping the rest of me as I rolled Liz onto her side and lifted her leg over my shoulder.\n\n\"Mmm...\" she sighed as I entered her. We kept things slow and sensual, rocking back and forth with controlled thrusts.\n\n\"I love you so much,\" I said, reaching down to caress her enormous breasts.\n\n\"Did it turn you on? Watching Talia touch me like that?\"\n\n\"Oh yeah. That's gonna give me fantasies for the rest of my life.\"\n\n\"Me too,\" Talia cut in.\n\nCorrine took my free hand and placed it on her chest. Stephanie teasingly bit down on one of my ass cheeks. Amy was massaging my balls.\n\nMy thrusting hips reflexively began to pick up speed.\n\n\"How come we never did this back when we were in high school?\" Amy asked. \"I mean, the six of us, all together at once, like this.\"\n\n\"We were all just kids back then,\" Corrine answered. \"We didn't know what we were doing.\"\n\n\"And we know what we're doing now?\" Stephanie asked, giggling.\n\nI looked around at all my beautiful lovers and replied, \"All I know is I never want this night to end.\"\n\n\"Me neither,\" Liz panted. \"This is so much fun.\"\n\n\"Thank you for sharing your husband, honey,\" Stephanie grinned. The others all echoed her comment.\n\nMy wife started to answer them, but her words were cut short mid-sentence by the approach of a very nice, gentle orgasm. I took my hand from her breasts, gently strumming her clit until\u2014\n\nShe came with a long, satisfied sigh.\n\n\"Thank you, sweetie,\" she said to me, finally re-opening her eyes. \"That was wonderful.\"\n\nI pulled my glistening cock from her vagina, and suddenly had four pairs of hands reaching for me all at once. This was getting ridiculous.\n\n\"Ooh, I just thought of something!\" Talia cried.\n\nWith a naughty twinkle in her eyes, she hopped off the bed and circled around to her closet, retrieving a box from the top shelf.\n\n\"What's in there?\" Amy asked.\n\n\"Goodies,\" Talia explained. \"Condoms, massage oil, my vibrator, some stuff you straight folks probably wouldn't be into, AND\u2014\"\n\nShe reached inside that devious little box and took out a pair of fuzzy purple handcuffs. \"How 'bout it, Ian?\"\n\nEveryone chuckled. I just shrugged and said, \"Go ahead.\"\n\nLiz got the privilege of shackling my wrists to the bed's headboard. The other four women surrounded me on the bed, looking over at every inch of my helpless naked body. My cock pointed straight up at the ceiling, eager for some attention.\n\n\"Should we blindfold him, too?\" Corrine asked.\n\n\"I've got a better idea,\" Stephanie answered. Then she straddled my face and lowered her delicious cunt onto my mouth. I moaned happily.\n\n\"See? Much better than a blindfold.\"\n\nRobbed of both my sight and the use of my hands, I could do nothing but lie there and enjoy each and every surprising new sensation as the other women teased and tormented my body.\n\nAnonymous lips and tongues moved up and down my shaft. One girl\u2014I think it was Talia\u2014started rubbing her slick gash up and down my thigh for stimulation.\n\nThen I heard Amy say, \"Okay, step aside, I'm the only one who hasn't had a turn with this guy yet.\"\n\nShe gave my penis a squeeze for emphasis, and I felt the two mouths slip away as Amy's toned thighs straddled my hips. She reached between her legs to grab hold of me, gently guiding me into the softness of her opening\u2014\n\n\"Aaahhh...\"\n\nShe sank lower and lower onto me, sighing contentedly, like an athlete, soaking her exhausted muscles in a Jacuzzi.\n\nI was dying to see what my gorgeous red-headed friend looked like down there, slowly rising and falling, carefully impaling herself on my shaft over and over again. My thigh was now soaking wet where Talia continued to gyrate on it.\n\nWell, if I wanted to get a look at Amy riding my cock, that meant getting Stephanie off my face\u2014and the only way I could think to do that was to provide her with a good, strong orgasm.\n\n\"Whoa.\"\n\nStephanie shuddered as I curled my tongue up to her clit. I rocked my head back and forth, licking and sucking on every sensitive millimeter of her crotch.\n\nOff to my side, I suddenly heard faint buzzing, followed by a steady stream of moaning from Corrine. I could only assume she had decided to borrow Talia's vibrator until the other women were done with me.\n\nStephanie grabbed onto the headboard of the bed and began rocking her hips, eager for more stimulation. She was so anxious to cum, she got sloppy, rubbing her cunt back and forth across my entire face, making it nearly impossible for me to keep my tongue where it belonged.\n\nSweet honey poured down over my cheeks, soaking the pillow beneath me.\n\n\"Ohh... oh yes...\"\n\nI forcefully curled my neck, shoving my face up into her crotch, licking her clit with abandon\u2014\n\n\"Oh GOD! YES!\"\n\nShe collapsed, suddenly struck down by a lightning bolt of a climax. Exhausted, Stephanie crawled off my face, finally giving me a clear view of the action down below\u2014\n\nAnd I nearly came when I saw what was happening.\n\nFirst of all, Amy and Talia were kissing. And I don't mean the kind of playful, platonic kisses that teenage girls share at slumber parties, either. I'm talking about the kind of horny, desperate kissing of two sexually active women right on the verge of orgasm. Those two were I going at it. Totally lost in a fugue of pleasure, Amy tongue-wrestled her beautiful bisexual friend, all the while bouncing up and down on my cock.\n\nTalia was writhing on my leg, grinding her clit against my thigh. Above, her hands were overflowing with Amy's naked breasts, which she was frantically kneading between slender fingers.\n\nOff to the side of the bed, Corrine was reclining in Talia's desk chair while my wife of six years knelt on the ground between her legs, attentively massaging the blonde woman's cunt with Talia's vibrator.\n\n\"What the\u2014?\"\n\nCorrine interrupted me with a squeal of delight, throwing her head back in ecstasy and squirming in the chair.\n",
        "Holy shit.\n\nAmy groaned into Talia's mouth, and I quickly swung my gaze back between my legs just as my voluptuous red-headed friend began convulsing uncontrollably on my cock. Her sexy hips shook and spasmed as an orgasm wracked her entire nervous system.\n\nSeconds later, Talia wrenched her lips away from Amy and threw back her head, panting up at the ceiling as her own body neared its climax.\n\nAmy reached around behind her and started playing with Talia's nipples\u2014lightly tugging and twisting. Talia's eyes popped open in surprise, then quickly glazed over with lust as she realized what was going on. Amy directed one of those beautiful, firm breasts towards her mouth, gently planting a tender kiss directly on Talia's achingly erect nipple...\n\n\"Mmm!\"\n\nTalia pulled Amy's face into her cleavage and came, her hot wet cunt pulsing on my bare leg.\n\nOnce the two women came down from their orgasmic highs, they delicately climbed off of my body, leaving my rock hard penis once again pointing straight up in the air, unattended.\n\n\"You have no idea how badly I needed that,\" Amy sighed.\n\nThen she, Talia, and Stephanie crowded around me and turns planting slow, delicate kisses up and down my shaft.\n\nI somehow tore my eyes away from them and looked over to where my wife was frigging Corrine on the office chair.\n\n\"Well, you're just full of surprises tonight, aren't you?\" I said to Liz.\n\nShe nodded, blushing a bit as she said, \"We just got so horny watching you guys, we couldn't hold still. But there wasn't really anymore room on the bed, and this just seemed like more fun than playing with ourselves.\"\n\n\"Although,\" Corrine said, reluctantly pulling Liz's vibrating hand out from between her legs, \"It does look like you're in need of another blindfold.\"\n\nShe stood up: tall, stacked, and statuesque, and strode over to the bed. I licked my lips in anticipation, expecting Corrine to straddle my face just as Stephanie had\u2014\n\nBut she had something else in mind. Corrine crawled onto the bed, positioning her huge, swinging breasts above my head.\n\n\"Oh, hell yes,\" I grinned.\n\nThen, with a smile, Corrine lowered those great big melons of hers directly onto my face.\n\nThey blocked out my view of the action, but I didn't care. I licked and kissed and moaned into the abundance of soft, smooth flesh.\n\n\"What is it with guys and boobs?\" Corry asked, amused.\n\nI felt the bed shift as Liz crawled up on the other side of me.\n\n\"I don't know,\" my wife said. \"But Ian's kind of obsessed with them.\"\n\n\"Seriously,\" Corrine laughed.\n\nThen Liz nudged Corrine a few inches to the side and lowered her own incredible breasts onto my tongue.\n\nI kind of went insane with lust, my entire head surrounded by two sets of the biggest, fullest, most awesome tits. Corrine and Liz rolled their chests back and forth, dragging the weight of those delicious fun bags all over my face. Four plump, perky nipples slid up and down my cheeks, and across my lips and chin.\n\nMy whole body began shaking with the need to cum. But, great as it felt, the dozens of little kisses being planted on my cock just weren't gonna be enough to push me over the edge.\n\nStill shackled to the headboard, my fists clenched in frustration. Liz knew me well enough to pick up on my body language. She turned to her friends and said, \"It looks like Ian could use a little bit of relief.\"\n\n\"Ooh, I wanna try something!\" Stephanie giggled, hopping off the bed. Suddenly, I felt her grab hold of my ankles and swing me sideways, until the bottom half of my body was dangling over one side of the bed.\n\nWhat the hell is she up to? I wondered. Still blinded by the four enormous tits on my face, I couldn't begin to guess.\n\n\"Don't worry, Ian, you're gonna like this,\" Stephanie answered. She patted my wife on the butt, saying:\n\n\"Liz, you get up and kneel down over here. Corry, you kneel down over here.\"\n\nMy field of vision finally cleared as Corrine and Elizabeth lifted their boobs off my face and slid their naked bodies down to the floor, Liz kneeling beside my left hip and Corrine kneeling between my legs. I couldn't help but notice that my dick was dangerously close to their massive cleavage.\n\n\"What about us?\" Talia asked.\n\nStephanie hurried over to Talia's box of goodies, retrieving the bottle of massage oil.\n\n\"You two scoot up next to Ian on the bed. You get to play with the rest of him.\"\n\n\"Good thing the rest of him is so darn cute,\" Amy winked at me.\n\nNow holding the uncapped bottle of scented oil, Steph took her own position\u2014\n\nkneeling down on the floor to my right. With Liz on my left and Corry in the middle, the three of them formed a very voluptuous triangle around my penis.\n\nI groaned as Stephanie poured the massage oil liberally onto my cock.\n\nShe then poured it all over her tits, thoroughly rubbing it in until every square inch of those soft pink pillows was glistening and slippery. She handed the bottle to Liz before returning her attention to me:\n\n\"Remember back in high school, when Liz and I used our boobs to get you off at the same time?\"\n\nI stammered, \"Course I do. You guys gave me a double tit-fuck, it was one of the best moments of my life.\"\n\n\"My pleasure, sweetie,\" Liz said.\n\nOnce Liz had finished rubbing the massage oil into her own prodigious breasts, Stephanie took it back from her and handed it to Corrine.\n\n\"That's right, a double tit-fuck,\" Stephanie continued. \"I remember that morning being a lot of fun, and I've kind of been wanting to do it again ever since. But then I figured, with all of us here\u2014and since it is your birthday and all\u2014why don't we all team up and give you a triple tit-fuck?\"\n\nNo. Way.\n\nI groaned and bit my lip in anticipation, watching as Corrine thoroughly lubed up her gigantic boobs.\n\nHoly shit.\n\n\"Everybody ready?\" Liz asked. The others nodded, and then all three gloriously busty women\u2014Stephanie, Liz, and Corrine\u2014cupped their big, slippery breasts and leaned in towards my dick.\n\nHoly shit holy shit holy shit...\n\nTheir tits collided together, the soft, smooth flesh mashing messily around my penis.\n\n\"Oh!\" I screamed.\n\nThen, moving as one, the three women lifted their boobs up the length of me and pumped them back down. Again. And again. I throbbed, so hard it hurt. Every muscle was on fire.\n\nMeanwhile, Amy and Talia busied themselves on my upper half, nibbling away at my chest and nipples.\n\n\"You enjoying this, honey?\" Liz asked, sliding her sweet tits down my shaft.\n\nI couldn't answer her. I just grunted and flexed my hips, bucking my granite cock up into the three sets of cleavage that surrounded it.\n\n\"Let's unlock these handcuffs,\" Amy suggested, taking a quick nip at my neck.\n\nA second later, Talia was back with the key, and then, at long last, my hands were free to use as I liked. With my right hand, I grabbed onto Amy's substantial tits. With my left, I groped at Talia. Between my legs, I watched as those three incredible sets of breasts continued to rise and fall on my glistening shaft.\n\nBouncing, jiggling, glistening breasts...\n\nAll five women were watching me. All of them were smiling, amused by the absurd show of rapture on my face.\n\n\"You guys...\" I muttered, struggling to breath, \"You guys are the BEST.\"\n\nThen I felt my balls tighten, gearing up for release. My vision blurred, my chest was tight\u2014\n\nAmy and Talia bent down, crushing their tits against my hands and licking feverishly at my nipples.\n\nA full-blown geyser of semen blasted out of me, splattering everywhere across all that beautiful cleavage.\n\nThe next thing I remember, I was blinking awake in Talia's bed, lying beneath the covers. My wife was snuggling close beside me.\n\nSeeing that I was awake, she whispered, \"Hey there, cutie.\"\n\nI shook my head clear and asked, \"Did I actually pass out?\"\n\n\"Uh-huh.\"\n\n\"Where is everybody?\"\n\n\"In the living room, hanging out. I wanted to stay in here with you.\"\n\n\"God, tonight was crazy,\" I sighed, holding her close. \"I don't know what came over us.\"\n\n\"Well, I know exactly what came over us. You did. You came all over us.\"\n\nI burst out laughing.\n\n\"So everyone's okay? Nothing weird or awkward?\"\n\n\"Mmm... maybe a little bit. I mean, it was one thing to be naked and kissing and touching everybody when we were all horny, but after the smoke cleared and things went back to normal, there was this definite moment everybody had where we were like, 'Oh geez, I'm naked, and so are all my friends, and we all just had sex with Liz's husband.'\"\n\nI nodded, blushing. Liz continued, \"But everyone is okay now. I think what happened tonight was about ten years overdue. We all had a lot of unresolved feelings that needed to be brought out in the open.\"\n\nShe kissed me, and I felt a tinge of desperation in it.\n\n\"What about you?\" she asked. \"How do you feel about what happened?\"\n\n\"I feel like I'm married to the most amazing woman in the world. And yeah, tonight finally put to rest a lot of those 'what ifs' that had been nagging at me over the years. But if you're wondering how this is gonna affect our marriage\u2014don't worry. I promise you, tonight didn't change a thing between you and me.\"\n\n\"Okay,\" she said, a bit relieved. \"I know it was me that initiated the whole thing, but that doesn't mean I suddenly want us to be having orgies every night.\"\n\n\"Liz, this was a once-in-a-lifetime evening. I promise.\"\n\nI felt her tiny hand reach down my body beneath the covers, where she gently squeezed my recovering penis. She met my eyes with a smile and said, \"Well, I don't know about that. I do think we should see our friends a lot more often than we do. I couldn't believe how much I missed everyone. And, as long as those girls remain single, I don't see why we can't at least all make the effort to get together on your birthday every year.\"\n\nI was hardening rapidly in her grasp.\n\n\"I love you so much,\" I said.\n\nThen Liz pulled down the covers, brightening at the site of my towering, fully-renewed erection.\n\n\"Looks like you're ready for round three.\"\n\n\"Round three?\"\n\n\"Round three.\"\n\nMy wife got out of bed and walked her stunning, naked body across the room. She opened the door and called out, \"Hey everybody, get your butts back in here! He's awake.\"\n\nTHE END "
    ],
    "authorname": "bosombuddies",
    "tags": [
        "high school romance",
        "best friends",
        "big tits",
        "big breasts",
        "mfffff",
        "tit-fucking",
        "titty fuck",
        "long distance",
        "nerd",
        "latina"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/bosom-buddies-epilogue"
}