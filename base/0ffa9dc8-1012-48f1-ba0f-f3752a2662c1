{
    "title": "Crypt Girls",
    "pages": [
        "I was asked about this story in particular, so I went ahead and finished it. It's October anyway, so a horror story is appropriate, even if it isn't quite a Halloween story. This is definitely in the style of the early spicy pulp horror stories, known as the \"Shivers.\" Thanks to sbrooks103x and texquill for beta read and editing. Any errors remaining are very much mine, probably added after their able assistance. As with most pulp-style stories there is far more innuendo than graphic sex. If you really want to see what Rose and Lily look like, look up \"Thelma Todd and Clara Bow.\" \n\n### \n\nCrypt Girls \n\n1923. Saint Louis, Missouri \n\n### \n\nRose drifted up the central stairs of the library, carrying the dusty tomes in her charge. She and Lily were \"Crypt Girls,\" sorting and re-shelving books in the main stacks in the sub-basements. Rose was occasionally charged with helping people in the public research rooms, while Lily usually stayed in the stack down in the \"The Crypt.\" The pay wasn't great, but with both her and Lily bringing in small paychecks as library assistants, they were able to keep up with the rent and have enough to live on, although sometimes a bit sparsely. \n\nThey'd graduated St. Tristan's after rooming together for four years there, and they'd gotten a lot closer than they'd ever have expected. Not long after they left the University, Lily had hired on at the library in Saint Louis and then sent Rose a letter asking if she was interested in working at the library as well. Rose was more than a little relieved; her mother was pressuring her to consider marrying a suitable well off man. Perhaps sensing the kind of relationship Lily and she had fallen into, her mother didn't really seem to care which man. Rose had happily moved in with Lily, and they'd easily resumed their relationship, a very easy-going \"Boston Marriage.\" Very occasionally, they would accept a double date invitation to a club or dancing, but neither she nor Lily had any real desire for a serious long-term male companionship. They'd both tried that, and had some fun, but found each other much better company. \n\nEven if they'd been inclined, dating men was problematic, the library did have a morals clause, even if it was nowhere near as strict or seriously enforced as some of the ones she had seen; an occasional date would be acceptable, but any hint of real impropriety, or even a long term relationship, would cost them their jobs. \n\nThe public library research room was usually empty during the day, with the exception of the \"quiet man,\" Ken Stanton, who spent Mondays, Wednesdays and Fridays researching almost from open to close. Rose figured he must be a professor, or, perhaps, a writer, although his broad shoulders seemed rather more designed for longshoreman duty. The conservatively dressed man was always intensely focused on his wide ranging research, but was invariably courteous and distantly friendly to Rose, who found usually herself searching for a bizarre variety of obscure texts on his behalf. He usually wore a nice linen suit, occasionally removing his jacket while he sorted through the Crypt of books Invariably, he would quietly ask for her permission to doff his jacket - and it wasn't in a perfunctory manner; she got the feeling he was actually concerned that he might offend her. She considered him something of a reliable fixture and, to be honest, a pleasant diversion. He was certainly better than the standard run of Frat boys she always had propositioning her, and he certainly had far better manners. \n\nHe'd been coming here since before even Lily started working at the library and knew the holdings well. A ragged scar ran down the left side of his face - Lily irreverently insisted that it was a dueling scar, but Rose harbored a suspicion that it was more serious, since his hands were heavily scarred as well. Perhaps, she mused, they were remnants of an early life hard-lived - or, she figured, he was of an age that he could well have served in the War. On anyone else, those scars might have been menacing, but he was so quiet and unassuming, they just didn't have any impact, at least on her. His rather broad and heavily muscled shoulders, however, did attract her attention, although not in a negative way. Lily teased her about him, telling her that she was dreaming of being carried off over one of his shoulders, and, perhaps she was, just a little bit. Of course Lily didn't seem too put off with the prospect of it herself - pointing out that he did, after all, have two shoulders well-suited for transporting fair maidens. \n\nToday, Mr. Stanton was already in his shirtsleeves and linen vest - it was hotter than usual, even for mid August, and, while the tall ceilings and ceiling fans helped a lot, the heat was everywhere. The man seemed to be focused on the limestone caverns that dotted the central Missouri landscape -Rose had brought up a dozen books ranging from geology books to land grants, as well as recent newspapers from the area. \n\nShe shifted the final books onto the table next to him. \n\nHe glanced up at her. \"Did you have any luck finding them all?\" \n\nShe smiled. \"Every one, although there were two different land grant volumes covering the time period you are looking at, so I brought them both.\" \n\nHis gaze focused on her more directly for a few seconds. \"Oh? Well thank you, Rose, that will save some time.\" Distractedly he added. \"I don't think I'll need anything else for a couple of hours, so you can retreat to the Crypt - it's a lot cooler down there. Beautiful flowers shouldn't be left to wilt in the heat.\" He said it in such an off-hand way that it was more a statement of fact than anything else. \n\nRose blushed, thanked him, and headed back down to the Crypt, first informing Mrs. Crenshaw of her whereabouts then working her way down to help Lily; as it turned out, Lily was as deep in the Crypt as it was possible to get - the 3<sup>rd</sup> subbasement, where the walls were carved from the living limestone. Lily was working just outside the restricted stacks- the area closed off to all but a few employees. The restricted stacks were for particularly rare and expensive books, city records, and those books that might be deemed of \"morally corrosive nature.\" If a book in that zone were requested, Mrs. Crenshaw would have to get approval from at least two Library Board members, then, if the request was approved, the patron would have to do his or her research in the zone with a library assistant present at all times. \n\nLily was sliding books neatly into their places on the shelves from her huge wooden rolling cart, but once she saw Rose was alone she stopped and plopped herself onto a clear spot on the cart, leaning against the shelves. \n\n\"Have a seat, Rose,\" she gestured to another conspicuously open spot on the cart. Lily had a great memory, so she could shelve books many times faster than the next fastest attendant - a fact she occasionally took advantage of by getting way ahead, then sitting and reading for long periods of time. She still managed to get more far work done in the Crypt than anyone else. Mrs. Crenshaw certainly knew about Lily's long breaks, but overlooked it since the work got done. Besides, Lily could be a distraction if she were in the public areas. Lily's tall, lean form and white-blonde hair were just as notable as Rose's curly red locks and shorter, fuller figure, but Lily lacked Rose's ability to avoid confrontations. More than one college frat boy had been given a ringing slap before Lily was eventually sentenced to the Crypt. \n\nRose pulled her sweater off the cart, put it on and slid up onto the cart next to Lily. \n\nLily smiled and raised one eyebrow. \"So how's our man?\" \n\nRose told her about his comment on flowers and wilting. \n\nLily giggled. \"Think he'd want to come down here and do a little gardening?\" \n\nFor the next hour they shelved a few books and Lily quietly kept up a stream of endless sharp patter, full of gardening innuendos; she was especially interested in plowing and fertilizing. Both of them were in pretty silly moods when they heard the heavy door at the top of the stairs. Footsteps echoed as someone came down from the second subbasement. \n\nMuch to Rose's surprise, Mrs. Crenshaw came around the corner, leading Ken Stanton and carrying her heavy key ring. He had his jacket back on, which Rose felt sure would disappoint Lily, but the lower Crypt was quite cool. \n\n\"Rose. Lily. Mr. Stanton requires access to the restricted stack. So, given that we don't have a male assistant available today, I am going to require both of you to stay in the area. There are some books that require re-shelving in the restricted stacks any case.\" \n\nRose was puzzled, since any book pulled from the restricted stacks was always immediately re-shelved. After she let them in, however, Rose could see a large stack of volumes next to one of the large chairs in the research area in the center; clearly not everything had been put up. As they signed in, she noted that the previous research entry had been signed by Mrs. Garrison, the wife of the Library Board President. The research entry said, \"various.\" Mrs. Crenshaw handed Rose a card with the authorized material listed, and stepped out in odd haste, leaving Lily and Rose trading puzzled looks. \n\nRose gestured to the chairs and tables. \"Please, Mr. Stanton, take a seat and I'll find these records for you.\" \n\nHe smiled pleasantly and moved to a large green chair with a fairly large table in front of it. \"Thank you, Rose, I'm looking at older land surveys and maps, so the large table is probably for the best.\" \n\nPast him she could see Lily moving toward the large stack of un-shelved books left behind by Mrs. Garrison, pause and arch her eyebrows and mouth, \"Rose?\" silently. She jerked her attention back to Ken - er, Mr. Stanton - and nodded. \"I'll be back.\" \n\nThe surveys and maps were side by side, so it was easy to round them up. When she returned Ken was seated in the chair writing in his notebooks while Lily sorted through the un-shelved books. After she laid the maps and surveys out she realized Lily hadn't moved - she seemed frozen, staring at an open book in her hand. Rose moved to her side and realized Lily's face was beet red. \n\n\"Are you okay?\" she hissed. \n\nLily shook her head for second \"I, um, I just...\" her voice trailed off. \n\nRose had never seen Lily so out of sorts - she reached up to take the books from her, but it dropped from Lily's apparently nerveless fingers and slid right to Ken's foot. As he reached down and picked it up, Lily's flushed face paled and assumed a look of absolute horror. \n\nRose spun and stepped over to him, shooting a look back at Lily. \n\nKen flipped open the cover, glanced at the bookplate and gave a light chuckle, then extended it out to her. \n\n\"Generally not, I can assume, what Lily is used to sorting?\" \n\nStill confused Rose plucked the book from his hand and flipped it open to see just what was going on. She almost dropped the book herself. Rose was hardly inexperienced, but the stunningly graphic series of illustrations of people - from India to all appearances - engaged in a rather complicated and very acrobatic sexual coupling almost made her drop the book as well. \n\n\"Oh. Dear Heavens.\" She stopped, flushed from head to toe, and looked at Ken, seeing the amusement in his eyes. \n\nHe broke the awkward moment as smoothly as it was possible to do, all things considered. \n\n\"That is the Kama Sutra - it is technically a Tantric religious text, although that is not usually the reason copies are brought here from India. The binding looks new, but the plates are probably original to India judging by the paper. Probably cut from a series of scrolls. It's an extremely valuable work.\" \n\n\"I... I...\" \n\n\"Libraries have to keep all sorts of material Rose, that's what they are for. You and Lily are hardly accountable for Mrs. Garrison's choice of... research material.\" \n\nLily stared at the pile - there were several more books - she started looking through them, placing each somewhat gingerly on the table again. Despite her overtly brash behavior, she was actually naturally shy - her brassy quips and comments were a shield of sorts. \n\n\"I think they're all, kind of... like that.\" She held up one with an ornate lacquered wood cover while she glanced at the bindings. \"These aren't classed by subject first like the rest - they are classed by country of origin, then subject. And all the subjects are different.\" \n\nKen nodded absently. \"Since that's a Japanese 'marriage manual' or 'pillow book' you're holding, that makes sense. The Indian book is theology, the Japanese book would be considered an instructional book, an Arab version, if you have one, would be anatomy or physiology and that British 'Pearl Magazine' would be fiction.\" He seemed to be sinking deeper into poring over a particular map. \n\nRose decided to help Lily shelve the volumes while he continued research. It turned out to be quite a slow process, which wasn't exactly sped up by Lily's insistence on pointing our particularly interesting illustrations to her. Or, to be honest, her own interest in those illustrations. Lily was terrible; she kept showing Rose the most lewd illustrations, especially ones with two woman and one man in them - making doe eyes, fluttering her lashes at her and asking if she thought they could find a man who could, perhaps, assist them in studying this complex and fascinating subject -all the while looking in the direction of the reading room and winking. When Rose threatened to tie her up to make her behave, all Lily said was, \"Great Britain, aisle two, shelf three, the whole shelf.\" Which turned out to be accurate. Caning and spanking, she helpfully pointed out, were on shelf four. And five. \n\nKen appeared to be oblivious to their quiet back and forth - for which Rose was grateful. \n\nBy the end of the day, the atmosphere was congenial, although not so \"overly familiar\" to where Mrs. Crenshaw would have any complaints, and they'd learned that the reason for Ken's knowledge was that he'd been an attendant at a library \"not unlike this one\" when he was younger. Although whatever it was he did now was still unspoken. Unlike most men, he didn't press the forced familiarity of the situation. That seemed to disappoint Lily a little, even if it was a relief to Rose. She liked working at the Library and really didn't want to end up unemployed. When Mrs. Crenshaw popped down quietly, probably with an eye to seeing what they were up to, she found them re-ordering the map section correctly, since Lily had noticed many of the maps were misfiled. After Ken finished his research, commenting that he'd be back the next day with tracing paper, he departed, and Mrs. Crenshaw returned to lock the iron grate, letting them head out for the day through the back entrance, nearest to their apartment block. \n\nLily and Rose stopped on the walk home for a quick meal at the Blue Star tea room, then headed home. \n\nOnce Rose latched the door, she felt Lily's arms around her. \n\n\"I've been absolutely starving for you all day!\" \n\nRose turned and kissed her deeply, then, while Lily struggled with her clothing, \"Me too. I can't believe you were so bad down there!\" \n\nEarlier in the day, Rose had planned on getting some reading done, but that was out the window tonight; perusing explicit books from ten countries had left both her and Lily with some creative new ideas. \n\nKen Stanton walked into the lushly appointed restaurant, keeping his hands in sight and sliding into the chair that Giovanni \"Johnny\" Gambini gestured to. Johnny's son Vittorio - or Vic - sat to his left with a thinly disguised look of contempt. \n\nKen accepted a glass of red wine from a concerned looking waiter. \n\nVic focused directly on his father. \"Pops, look, I told you I can handle this - it's just those Green boys again. A good knocking and they'll back down.\" \n\nJohnny looked at Ken. \"Please forgive my son his lack of manners. One tries, but his Mamma spoiled him way too much.\" \n\nKen smiled, the flat, humorless smile of a true predator, although \"Vic\" didn't recognize it for what it was. Ken could sense the four nervous bodyguards checked their spacing - they didn't have the comfort of Vic's lack of familiarity. \n\n\"Sir, I think I understand your son's hesitance at taking in outside assistance. Caution with outsiders is a form of wisdom all its own.\" \n\nJohnny smiled, recognizing the thin effort at civility, \"Still, the police are paying all too close attention to this matter and something about it smells... rotten. My boys are loyal, experienced, and well meaning, but I'd rather have a professional clean this up.\" Johnny glared at Vic as he said it, a not too subtle message to shut up. \n\nKen pretended not to notice. \"I'll do this at the offered price, but I need a reliable delivery truck, nothing new. An old grocery truck would be best, I think. I don't know if I can recover the shipment, but I'll hunt down the ones who did it.\" \n\nJohnny nodded. \"Do you need any other equipment?\" his slight pause made it clear \"equipment\" meant weapons. \n\n\"No, I have everything else I need.\" Ken paused. \"I'm pretty sure your driver and the other man are dead. I can't think of any reason for them to be held this long without contact, and I think we'd know if they showed up anywhere. I doubt if your shipment is still around, but if I recover it, I'll take the finder's fee.\" \n\nJohnny nodded. \"That's fair. I feel bad about Tony and his brothers. I'll have to make that right with his family. As right as I can. Nothing will make up for the loss of three boys.\" \n\nKen simply stood up and shook hands with Johnny solemnly, then walked out. \n\nVic stared at his father, but before he could say anything, the old man heaved a sigh of relief, suddenly looking far more aged. \n\n\"Still breathing. I know he doesn't take those kind of jobs, but... what if he decided to?\" Looking at Vic he went on: \"If I have a heart attack or get hit by a truck or whatever, when that man shows up and asks for his pay, you just pay it. Capelli tried to cheat him, that's why the Capelli family moved back to Sicily.\" \n\n\"He can't be that tough.\" \n\n\"Don't be a fool. If he wasn't, he'd be dead by now.\" \n\nVic started to respond, but Johnny staved him off with an upheld palm. \"Don't argue. This is no game. This man? He doesn't bluff or threaten, he just does what he does.\" \n\nVic noted the concern in his father's voice. \"Why do they call him Silence?\" \n\n\"All I've ever heard is rumors. They say during the war he led a team of trench raiders. They'd creep across No Man's Land and kill enemy sentries and soldiers using garrotes, knives, clubs and axes. Prepare for the big assaults. I don't know that it is true, but that's the story.\" \n\n________________________________________________ \n\nRose untangled herself from Lily as gently as possible and slid off the bed, as she did every morning. She always told herself - and Lily - that it was because she wanted to give Lily a few minutes extra sleep. When she was completely honest with herself, she admitted that with only the one washstand, she wanted to be cleaned up before Lily started her frantic preparations. \n\nShe just finished washing her face when she noticed in the mirror that Lily was up on one elbow watching her get ready. \n\n\"Good Morning, Sunshine.\" \n\n\"Good morning to you. Are you going to just lay in bed all day? Would you like me to bring your cart of books here to work on?\" \n\n\"Oh, would you? Mrs. Crenshaw would certainly understand, just tell her you kept me up all night with your lascivious and insatiable appetites. You wore my poor, frail self so thin you can see a candle through me.\" \n\nRose threw her powder puff at Lily, hitting her shoulder, resulting in a delicate cloud. ",
        "\"Who kept who up all night?! Deceitful woman.\" \n\n\"Oh you love it and you know it.\" \n\n\"I do. I really do. But still, you had better get your poor frail little self out of bed and get ready. I really don't think Mrs. Crenshaw will accept 'weariness from excessive Sapphic indulgence due to overexposure to morally corrupting material' as a good excuse for lateness.\" \n\nLily giggled, rolled over until she was crossways on the bed and rested her chin in her cupped palms, bright blue eyes twinkling. \"If she did, I'd use that excuse every day.\" \n\nRose rolled her eyes. \"Mrs. Crenshaw wouldn't consider the Apocalypse as a good reason for lateness.\" \n\nLily swung her legs off the bed and self-consciously smoothed her thin, white, chiffon peignoir. \n\n\"Well, if we're lucky, maybe we'll get trapped down in the Crypt with your man again!\" \n\nThey were in fact \"trapped\" with Ken down in the Crypt for most of the morning. He'd brought several rolls of tracing paper and spent the morning tracing maps, then annotating them from his notebooks, occasionally asking Rose or Lily to hunt down one of the newspapers or books he'd been looking at. He was dutifully marking notations on the traced maps with a variety of colored pencils, then measuring and making more notations. He had a compass and a ruler as well as his colored pencils. \n\nLily's curiosity got the better of her. \n\n\"So, what are you doing?\" \n\nKen finished scribing a red line. \n\n\"I don't really have a name for it - I'm looking at connections between events and geological formations for a customer.\" \n\nLily looked at the mesh of lines. \"Does it... pay well?\" \n\nKen smiled - it seemed just a little less humorless than usual. \"It can. It depends on the customer.\" \n\nRose sensed something off and was afraid Lily had said something offensive, and started to pull her away, but Ken smiled genuinely. \n\n\"If Mrs. Crenshaw approves I would to like to go ahead and work through lunch. If you two have no objection, I'll have lunch delivered here for all of us.\" \n\nLilly agreed for both of them - sometimes Rose despaired over how much Lily valued food - and when Mrs. Crenshaw came down to check on them, Ken explained that he really didn't want to lose track of what he was doing and proposed his lunch offer - even offering to purchase lunch for Mrs. Crenshaw. She hesitantly agreed, although she declined his offer for her to join them for lunch, as she was afraid it might show favoritism toward Rose and Lily. Ken wrote out a note and gave her two dollars and a note to give to one of the cab drivers who came to the library to pick up patrons for lunch. He hadn't asked what they wanted, but Rose figured two dollars would certainly buy some good sandwiches. \n\nRose and Lilly cleared off one of the research tables just in time. Mrs. Crenshaw escorted two large men down to the Crypt carrying large baskets - they laid out an absolute repast. Rose watched as Lilly's eyes almost bugged out of her head at the trays of food being laid out. The smells were indescribably delicious. One of the two men gave Mrs. Crenshaw a basket to take with her when she went upstairs. \n\nIt was hardly sandwiches. Instead, a huge array of Italian dishes were laid out, some of which Rose had never seen before. \n\nOne of the two men pulled a bottle of wine out of the basket along with three glass, and expertly filled and placed a glass in front of each of them. \n\n\"From Mr. Gambini, with his thanks.\" \n\nKen looked solemn for a moment and replied. \"I appreciate it. And please tell him that the food is up to his usual fine standards.\" \n\nRose felt herself freeze, and saw Lily freeze as well, glass couched in one hand, eyes wide. \n\nThat, she felt, certainly explained the fine food. Gambini's was the finest restaurant in town. A single meal at Gambini's would cost more than she and Lily earned in a month combined. While that was disconcerting enough, Gambini was also known to be one of the most powerful racketeers and bootleggers in the city. And the familiarity meant that Ken was connected to him. \n\nLily caught her eye and shrugged, then sipped her wine, closing her eyes for a minute. After the men left, they began their meal and Ken watched bemusedly as Lily tore through dish after dish, declaring each one to be better than the last. Rose could hardly keep up with her, but was surprised at just how much she did eat. Each and every dish really was better than the last. \n\nDespite everything, Ken didn't push his advantage with familiarity, although he responded to Lily's aggressive questioning with wry amusement. \n\n\"So, is Johnny Gambini one of your customers?\" \n\n\"Sometimes. I do occasional research for him. He pays well, and I can always get a seat at his restaurant.\" \n\nLily peered at him with narrowed eyes and a slight smile, \"What does your... wife think of your work.\" \n\nRose was appalled at her lack of subtlety and kicked her under the table, eliciting a yelp. \n\nKen chuckled. \"I'm afraid my work isn't very conducive to marriage.\" \n\n\"Oh, that's a terrible Pity\". Although it was quite clear Lily didn't feel bad about that at all. \n\nRose felt it was a fair enough warning for any girl. \n\nDespite being kicked, Lily kept up her barrage of questions. Which Ken fielded with good humor, and began politely responding with his own. \n\nLily responded with a flirtatious glee, far too forward for Rose's comfort. Still though, Ken adeptly turned the subject whenever it bordered on true impropriety and made sure Rose was pulled into the banter herself. \n\nBy the end of the meal, as they packed up the dishes into the baskets for the men to pick up later, Rose realized she felt she had known Ken for simply ages. \n\nBy the end of the day, when Ken prepared to leave, both she and Lily actually felt saddened by his announcement that he would be gone for several weeks. \n\n### \n\nTwo days later, Rose found herself working with a large, repellent man with thin, unkempt hair, and staring dark eyes in a lupine face, slouched shoulders, long arms, huge hands and large discolored yellow teeth that reminded her vaguely of shovels. Mrs. Crenshaw, obviously repelled by him, introduced him as Mr. Pike. His furtive looks at her made her uncomfortable in a different manner than those of the frat boys and other men. The frat boys - and most men for that matter - were obviously picturing her in a state of dishabille, but in this man's case his desire seemed less like healthy carnal lust, and far more unclean. A vague foetid odor seemed to cling to him. \n\nHe'd asked for several books, some with German and Latin names, only a few of which were listed and most of them were in the restricted Crypt. His agitation at discovering he would have to fill out paperwork was clear. Rose patiently explained that she couldn't even get into the deeper Crypt without Mrs. Crenshaw's permission and keys, but he simply became surly and lurched from the library in visible anger leaving his material on the table. \n\nRose was hardly sorry to see him leave, but still resented his angry departure and furtive, unhealthy looks. She took the books down to Lilly in the Crypt and described the visitor while they sat, perched on Lily's cart. \n\nLily wrinkled her nose. \"Sounds perfectly horrible. I hope I never meet him.\" \n\nRose shivered. \"Guys look me over all the time, but the way he did it was...\" she just trailed off as metal clinked over by the restricted Crypt. Rose stood up off the cart and stepped off in the direction of the sound, followed by Lily. \n\n\"Mrs. Crenshsaw?\" \n\nNo answer but the creak of metal. \n\nAs they rounded the corner, the gate to the restricted stacks stood wide open. Lily pushed past Rose, eyes blazing. \"I swear if it's those Kappa Sigma mugs down here again...\" \n\nShe froze as the grotesque form of Mr. Pike limped out of the restricted Crypt, through the open gate, clutching several volumes in his oversize hands. A string of drool hung from the corner of his mouth, which was frozen in a hideous parody of a smile. \n\nHe hissed at them, \"Oh, what lovely Queens you will make!\" \n\nRose was about to scream, when they were both seized from behind by several sets of strong, clawed hands and rags dripping with a noxious chemical substance shoved into their faces. The last thing Rose saw as she lost consciousness was a set of yellow, shovel-shaped teeth grinning maniacally in triumph. \n\n### \n\nThe old grocery truck sputtered along the dusty road, occasional ruts making efforts to wrench the wheel from Ken's hands. Weeks of dry heat had turned the landscape a dull brown - even the still-green trees were muted and dull. His ragged undershirt and stained work pants were almost the same color as the dull brown fields. A battered Ivy cap perched firmly on his head, twisted slightly to shade his eyes from the relentless stare of the sun. \n\nOver the last three weeks, he'd turned up some interesting facts. The missing truck full of whiskey couldn't have gone far - the follow car had made it to the rendezvous point only five minutes later than expected, found out that the truck hadn't made it and turned right around finding the dead bootlegger only five miles back. There were really no connecting roads, but the ground had been baked hard enough that tracks were unlikely even in the open fields. Gambini was sure of his men's loyalty. And Ken had failed to find anything to indicate he was wrong. There'd been some leads, though - his ragged array of vegetables, bought second hand from Soulard Market, brought a lot of wives out to look them over and exchange gossip. The vegetables were selling better than they should have due to the drought's impact on local gardens and the fact that Ken was selling them below his cost. Stories seemed to center on a creepy hunchbacked man who had shown up a few months earlier - nobody really knew him, and nobody was sure where he was staying, but by the stories he certainly lived somewhere near the point where the truck had gone missing. Ken was sure the missing truck hadn't left the area, and he suspected it was being kept in one of the large caverns he'd found on the geologic surveys in the library. \n\nHe pulled the truck into a small wooded draw sheltering a small spring-fed pool off the side of the road and spent several minutes covering with brush. On inspection, it was clearly out of casual view of the road, the small pool had kept the greenery thick enough for a good hiding place, despite the drought. He knew he was going to have to be cautious. Gambini had been right, there was a least one Treasury agent looking into the situation - a known bootlegger, dead with his throat ripped out had drawn attention. The agent hadn't been very subtle, and all the housewives remembered the big blonde man very clearly, Ken had been careful to stay away from the agent's inquiries. The agent had apparently left a couple days ago, but Ken had heard that he had left his suitcase at a rooming house in the area. \n\nKen pulled a long bundle and an old Army pack from the truck and began to stride quickly, but quietly toward the nearest cave. \n\n### \n\nRose wasn't sure how long she'd been here anymore, it seemed like forever; she was cold and damp... and so gnawingly hungry. She had woken here, stripped and chained to the wall opposite Lily, whose bruised, pale, grime-covered body she could see curled in her corner, staring hollow-eyed, unblinkingly, around their tiny hell. They fed the girls occasionally, a nasty broth with undercooked chunks of gristly meat. It was probably a measure of how hungry they were that the awful meal was starting to taste normal. Recently, though, all they'd brought was a little iron-tasting water, obviously filthy, even in the dim reddish light that filtered in from the other side of the door. Both of the women felt sick, constantly queasy - and neither could sleep. After a couple days, a sibilant, unceasing whispering began that they just couldn't shut out, no matter how hard they tried. They never said it out loud, but they both knew they would be defiled. It hadn't quite happened yet but the awful men treated them horribly, leering and making grotesque gestures. \n\nOnce, a few days ago, one of the man-things had suddenly grabbed Lily and began to force her legs apart - in her weakened state all she could do was cry. But the others grabbed him and began to beat him unmercifully. He kept struggling to get to her right up until they caved his skull in. One of the animal-like men leered at her and uttered one of the few things any of them said. \"Not ready yet.\" \n\nAt first she and Lily had talked, kept encouraging each other and looked for a way out, but the chains were massive and they didn't have anything to work with. As time dragged on, hope died and she and Lily had spent more and more time silently staring fixedly into each other's eyes. Lily's gaunt stare began to remind her of their grotesque captors, her shoulders hunching, her hands curling, claw-like. Worst of all, her eyes grew darker and darker, seeming to lose the beautiful blue that Rose loved so much. \n\nRose started at the sound of the metal door opening and cringed further back into her corner of the stone cell. Two of the misshapen men dragged something in. It was a man, a big, blonde man, badly beaten, breathing slow, shallow, labored breaths. His shirt and shoes were missing. The two captors produced a set of manacles and chained him to a large iron staple in the middle of the floor. Then they adjusted Lily and Rose's chains to give them another couple of feet of movement before walking out. \n\nThe door slammed shut. \n\nRose crawled over to the new limit of her chain and tried to rouse the man. Despite the blood, he felt clean, somehow better than their surroundings. Lily was doing the same thing, gently shaking him and whispering, he moved but didn't wake. Rose leaned closer. His smell filled her nostrils. She felt her mouth water. \n\nRose jerked back with a start, seeing Lily do the same - eyes wide in terror. \n\nThey knew now. They knew what the food was, knew why the food had stopped. The things had just brought fresher food this time. The whispering seemed louder, she was sure they were making vile, unspeakable promises, if only the girls would... Rose heard a high pitched whining and looked at Lily, realizing that both of them were doing it. \n\nSimultaneously they snatched each other's hands in an unbreakable grip. \n\n\"NO!\" Rose wasn't sure which of them had spoken for a second, then realized it had been her. \n\nLily locked eyes with her - and Rose could momentarily see them flare to their old bright blue, hard and determined. \n\n\"I'd rather die.\" \n\nThey both knew they really would die, and they began to sob, almost silently, leaning into each other. They huddled protectively over the wounded man until they fell into fitful, useless half-sleep. \n\n### \n\nKen crouched over the dead body - he'd smashed the man's head in with his old trench mace - if the ape-like figure really was a man. The trench mace was swifter and surer than the knife and lot less noisy than the shotgun slung over his back. He'd left his pack with its load of dynamite near the entrance. \n\nAfter the finding the room with corpses of men and women hung up and butchered for meat, he'd gone back and killed the two \"men\" he'd knocked out and tied up; there would be no prisoners and he decided he really didn't want to hear any answers they might have. The men were oddly formed, degenerate things, stoop shouldered, heavily muscled with big staring eyes that never blinked and large yellow spade-like teeth. He'd had a bad feeling when he'd looked at them. The repulsive things were familiar. Figures from the past, things he'd hoped to never see them again. \n\nHe'd found the truck, although had been abused to the point of uselessness. He'd also found what seemed to the entrance to hell. The cave system was dimly lit with oil lamps placed sporadically throughout the chambers. The floor had been somewhat leveled and various chambers were used as rooms for different purposes. The abattoir had been the worst, but the floors of other rooms were coated in blood. In one room he found the Gambini's nearly pure alcohol. It was originally intended to be cut with water and colorized to produce ersatz whiskey, but it was spoiled for any purpose now - the barrels had been opened and severed heads floated in them. \n\nLooking around a corner down a tunnel that seemed to lead steeply down, he could see two of the repellent men peering through a grating in a metal door. They were talking in harsh voices. \n\n\"They haven't fed. Why haven't they eaten?\" \n\n\"Something is wrong, they're... broken... somehow...\" \n\nThe other snarled angrily. \"We did nothing wrong!\" \n\nOne of them pulled a set of keys and began to unlock the door. \n\nGlancing once more down the passage, Ken slid toward them silently, trench mace readied. \n\n### \n\nThe cover over the tiny grating slid back, letting more dull red light into the cell. Rose looked at Lily then down at the blonde man. He was still alive, she could sense his heartbeat. The mouth-watering smell wasn't as compelling as it had been at first. She felt stronger, better. The unending sick feeling was gone for the first time she could remember since waking up here. Staring eyes leered at them through the window in the door. For some reason, she sensed that one of them was actually \"Mr. Pike\", even though she couldn't really see them and they were hard to tell apart anyway. \n\nShe felt their disappointment at the blonde man's survival. She looked over and saw a defiant look on Lily's face that she knew echoed her own. The horrible men would continue to be disappointed. \n\nShe returned her stare to the door as she heard the key turning and found her voice. \n\n\"You might as well kill us. It doesn't matter how much you hurt us, we'll never be like you!\" \n\nMr. Pike started to respond, but was yanked suddenly from the window, with an odd crunching sound - moments later, something slammed hard into the cell door. Curious dragging sounds, with shifting light, then the door opened wide. As suddenly as if a radio was turned off, the horrible whispering scratching at the back of her skull abruptly stopped cold. A dark figure filled the doorway, a too-bright lamp in one hand and a heavy club of some kind gripped in the other. \n\n### \n\nKen dragged the dead men from the door - they had been far too focused to hear his approach, and the mace had made short work of them. Grabbing one of the oil lamps, he pulled the door open. \n\nThe room was a scene from a deranged man's nightmares. The walls floor and ceiling were coated in blood, and two lean figures covered in dried blood crouched aggressively over the slumped body of a man. He had just begun to step forward to kill the beasts before recognition sunk in. They were women. And he knew them. \n\n\"Rose. Lily.\" \n\nRose sat back, stunned as Ken stepped in. Lily started to babble incoherently, and reached for him, but was suddenly jerked short by the chains. He stepped back and yanked the keys from the door and quickly unlocked their chains. \n\n\"We have to get out of here, I'm not sure how many of them there are, but it looks like they are... feeding... dozens of them.\" \n\nHe looked down at the big blonde man in a calculating manner. \n\nRose spoke \"We have to take him with us. We can't leave him here for them.\" \n\n\"You'll have to get him - I need to check the passage.\" He handed her the keys and stepped back out into the corridor as she scrabbled to unlock the last lock. She could feel the hope surging through herself and Lily, feel the weakness and fear dropping away. \n\nWordlessly, she and Lily pulled the man up - far easier than she expected - and draped one of his arms over each of their shoulders to drag him out. ",
        "In the corridor she could see Ken unsling the shotgun from behind him, leveling it down the corridor at waist level. \n\n\"Girls! Get moving, they're coming!\" \n\nAs they pushed past him toward the painful light of the entrance he began to fire - just holding the trigger back and working the slide, producing a long thundering wave of sound. \n\nRose glanced back and wished she hadn't - in the dim, flickering light she could see a mass of misshapen bodies pushing up the corridor from the darkness. The hail of shot from the roaring gun was taking down the ones in front and they were tripping the ones behind, but the horde kept pushing forward. The shotgun finally fell silent as the ammo ran out. \n\nRose dropped the man's arm and yelled to Lily, \"Get him outside!\" \n\nKen had dropped the shotgun to dangle on its sling and pulled out a revolver to fire down the hall, dropping any creatures that broke free from the tangle of bleeding bodies. \n\nRose grabbed an oil lamp and flung it down the hallway, where it burst spraying burning oil all over the things. That set them back and she snatched another oil lamp, then finally a third - the hall was full of flame. She wasn't sure whether it was fear of fire or the pain of the light that held them back. \n\nKen grabbed her arm and began propelling her toward the entrance. \n\n\"Run!\" \n\nEven dragging the blonde man, Lily was further ahead than she had expected. Too far for Rose to do anything when one of the deformed ape-men suddenly leapt out a side passage at Lily and her charge. \n\nLily didn't hesitate at all. Instead of screaming, or trying to run away, she dropped the blonde man and met the beast thing with a lunge of her own, hissing in fury. \n\nThe ape man was obviously shocked at Lily's strength, fighting to hold her back. Rose could see Lily had changed again - dark-eyed and manic, she was snapping her spade-like teeth at his face. \n\nRage washed over Rose as she saw Lily, her Lily, struggle. A second later, she felt her own teeth sinking into the back of the fiend's neck, as her own claws raked his sides. He lost his grip on Lily and she viciously tore into his throat. \n\nThey ripped at him in a red haze of hate and fury. Until a voice made it through the sound of blood rushing in their ears. \n\n\"Girls! He's dead. Leave him.\" \n\nShe looked over at Ken as she stepped back from the ruined corpse. He looked less shocked than he should have. Lily was crouched over the blonde man, and for just a second Rose feared for her mind, but Lily looked up, blue eyes sparkling. \"We have to keep going. I can feel more of them coming - a lot more!\" \n\nRose could feel it too; the dark hateful thoughts as the things crawled out of their slime pits beneath, rushing almost mindlessly upwards. Those behind would soon force the ones in front through the flames. \n\nKen kicked a door inward and rushed into the room. \n\n\"Rose, help me with these.\" He pointed at several barrels. \"It's raw alcohol. It will burn.\" \n\nRose felt herself grin. \"There's enough here to zozzle half the city!\" \n\nThey pushed the barrels over, spilling gallons and gallons of alcohol. If any place on earth needed to be burned, this was it. \n\nThey splashed through the liquor back into the corridor, Ken sending a couple shots back toward the falling mass of bodies. \n\nLily was already standing in the sunlight with the wounded man, her face broke into a smile when she saw them charging out. \n\nKen yelled up ahead to her. \"Keep running Lily!\" \n\nThey only slowed for a second at the painful sunlight. Rose caught up, looking back in time to see Ken pick up some kind of dull tan pack near the entrance, the do something to it and hurl it further back into the cave before sprinting out. \n\n\"Go to the right!\" \n\nAs he caught up to them, Rose felt the ground drop away and they tumbled down a steep slope. The top of the rocky ridge erupted in a sheet of smoke and flame. A wave of debris shot straight out the entrance, then the whole hillside seemed to lift and settle. Once they rolled to a halt, Ken stood and rapidly reloaded his shotgun, scanning the ridge for movement. They froze and listened. Odd low rumbling and cracking beneath their feet told of further collapses deep underground. \n\nRose grabbed a heavy rock and looked around while Lily examined the blonde man. Like Ken, Rose and Lily were bleeding from dozens of cuts, scrapes and gashes, but none of them were severe. The blonde man, likewise, had only added a little to his injuries as far as Rose could see; he was starting to show some vague signs of consciousness. \n\nCrumping noises continued for a while and the hill sank in on itself as if it were melting. \n\nKen looked at them. \n\n\"Can you walk?\" \n\nLily smiled wanly. \"Yeah, we'll walk to the moon and back to get outta here.\" \n\nShe paused, looking around, squinting against the sunlight. Then looked at Ken. \n\n\"Where are we anyway? I don't know which way to walk.\" \n\n\"We're about 100 miles south east of Saint Louis. You only need to walk about a mile to my truck - that way...\" he pointed, \"and we'll drive the rest of the way.\" \n\nLily smiled, a real smile, although Rose thought the effect somewhat ruined by the bloodstained teeth. She squared her shoulders and gestured to Rose. \n\n\"We'll get Blondie here, you just be ready to shoot any of those things, if any got out.\" \n\n\"Are you sure you can get him?\" \n\n\"Ya, he's not as heavy as he looks.\" \n\nLilly and Rose easily pulled him up and Ken led them toward the truck. Despite the rocky ground, Rose realized her feet didn't hurt, and she and Lily had little trouble handling their unconscious load. It wasn't long before they reached the truck, where they laid the man in the back while Ken pulled a battered fiberboard suitcase out from under the front seat. \n\nHe pulled out a couple of white dress shirts and a bar of harsh lye soap. \n\nHanding Rose the soap, Ken gestured toward the spring-fed pool. \"I'm sure it is a little cool, but you need to scrub that dried blood off...\" \n\nBefore he even finished the sentence, both girls were in the water, desperately scrubbing as hard as they could - Rose found that she could use handfuls of sand to scrub a lot quicker than just soap. Their hair was so matted that Rose was afraid she'd never get it clean, but after a while it loosened up and came out - although it was obvious that Lily's platinum hair was dimly stained, at least for now. If she squinted she could pretend it was a natural light brown rather than the tint of dried blood. \n\nSomehow, she felt more naked now that she was clean and she quickly slipped one of the white shirts on - noting that Lily did the same with the same urgency. Without a towel, they would have to rely on the sun to dry them and their new 'dresses'. It wouldn't take long in this heat. Ken seemed not to even notice their nudity other than to give them the shirts. The shirts covered more than the dresses they wore to dance halls would have, but it still felt a bit unseemly to Rose. \n\nKen pulled some apples and carrots out of a bag and handed them each a couple; he seemed to be eyeing them a bit cautiously, and Rose noticed he seemed to keep one hand near the revolver in his belt. \n\nRose took a bite of the apple and chewed slowly, it tasted clean and sweet and perfect. \"What's wrong?\" \n\nKen hesitated for a second. \"Why were you there?\" \n\nFor the next several minutes Rose told him how they'd been kidnapped and mistreated, while he asked concise questions. She didn't pull any punches, woodenly telling him how they were fed and when they realized what was happening. She couldn't even meet his eyes when she was finished. Lily seemed to be holding her breath. \n\nKen nodded slowly, chewing his own apple. \"That fits what I saw and heard. Not sure what they were trying to change you to, but they seemed to think it had failed. It wasn't your fault, you know.\" He held up a hand to stop their ashamed replies. \"Not your fault at all - and they were shocked you didn't... feed on the Treasury agent here.\" \n\nSeeing their shocked faces he pulled a wallet out of his pocket and opened it, showing a badge and an ID card. \"John Dietrich, Department of the Treasury. I found his wallet in that... mess.\" \n\nThe whole experience seemed to hit Lily at once. She plopped ungracefully straight down, sitting cross legged in a clump of violets, bright blue eyes wide open staring at her hands. \"Oh, that's just ducky! We almost ATE a Treasury man?!\" \n\nShe began to shake and Rose rushed to her, kneeling and pulling her into a hug. Ken gave them time to compose themselves. \n\nLily finally calmed down and managed a weak smile. \"You know, Sister Mary Anne at Saint Tristan probably expected us to turn out this way.\" \n\nRose couldn't quite suppress a giggle at that. \n\nKen shook his head. \"This isn't something you did, it was something that was being done to you. And they failed. They didn't get to turn you into whatever kind of monsters they were trying to.\" He paused. \"Not all the way, anyway. You know you changed when you ... dealt with the one in the tunnel? \n\nLily looked at her nails for second. \"Yeah. I could feel it and I could see Rose change. And change back.\" \n\n\"You also carried a big man a mile over rocky ground like he didn't weigh anything. You didn't get tired, and most of the cuts and scrapes you got falling down that hill are already gone.\" \n\nRose looked down at her skin and saw that other than a few light, fading, bruises, she was unmarked, as was Lily. She looked back at Ken. \"Why don't you seem surprised by this?\" \n\n\"I saw some things during the war, something the Huns let loose at night sometimes. A lot like those creatures in the caves. I've also heard other stories.\" \n\nA low voice grumbled from the bed of the truck. \"I've seen and heard some things too. Thanks for getting me out of there. And not eating me.\" \n\nThe blonde man weakly pulled himself up into a sitting position while clutching his ribs. He looked over them, one eye swollen shut. \n\nKen looked at him with a flat expression. \"Back among the living.\" \n\n\"Mostly. There were things in the Belleau Wood that looked like those things. They usually hunted at night, they ate men and hated the light.\" He gave a slight smile. \"Especially the light from the kerosene bombs we made from glass bottles.\" \n\nFor a fraction of a second, the man and Kens shared humorless grins. \"So now what?\" \n\n\"We head back to Saint Louis. The cavern collapsed, so unless someone wants to excavate several thousand tons of rock, this is over.\" \n\nRose listened for a second. \"I think, they're all gone. I can't feel them anymore.\" \n\nLily cocked her head. \"Me neither.\" \n\nThe man looked over at Ken. \"So you're just going to give me a lift into town?\" \n\nRose broke in. \"You got any better offers?\" \n\nThe Treasury agent looked at her, then back at Ken. \"Does she have any idea who you are?\" \n\n\"A better question is who do you think I am?\" \n\nThe federal man pulled himself further up. \"Rumor has it that Gambini brought in a professional. A guy they just call Silence.\" \n\n\"Do tell. I thought he was a spooky story for little kids.\" \n\nThe federal agent gave a half smile through bloodied lips. \"Yeah, well, I don't think all the stories are true, but then I just saw a mountain full of monsters killed off, so if I were a betting man, I'd say more of the stories are true than I thought.\" \n\nKen shrugged. \n\nThe agent looked at Rose and Lily. \n\nLily mimicked Ken's shrug, then slipped her arm around Rose's waist. \"I don't care if he's the Kaiser in disguise, he got all three of us out of there. So, Dietrich, if it's all the same to you, I would just as soon get headed home.\" \n\nKen checked Agent Dietrich over, splinting a leg he thought might be broken. \n\nAfter he was done, he looked at Dietrich, who was eying the girls a bit warily. \n\n\"I think the girls should ride up front with me.\" \n\nIt took Rose a second to realize that Ken was actually concerned that Lily and she might not be able to resist their urges. She was certain that the feeling had passed. Mostly certain anyway. But, all in all, it did seem like a wise decision. \n\nAgent Dietrich nodded. \"No point in being careless. Any chance you could loan me a gun... just in case.\" \n\nKen shook his head slowly, amused. \"Here's your badge though. I've got a cabin at the Lost Valley Resort about 30 miles from here. We should be able to make it before dark. We'll figure out the rest after that.\" \n\nRose found herself seated between Ken and Lily as they pulled out. Under other circumstances, the drive would have been awful - the road was tortuously bad and the truck bounced along in a boneshaking manner. But they were going away from that awful, hellish place. Rose admitted to herself that being sandwiched between Lily and Ken was hardly a terrible experience. Lily only lasted a few minutes before dropping off to sleep with her head on Rose's lap. While she fought sleep off longer, within a half hour Rose found herself slumping against Ken as exhaustion won. Her last conscious thought was that he had gently put an arm around her and helped her settle in. \n\nA distinct lack of truck noise was the first thing Rose noticed on waking. The second thing she noticed was Lily's brilliant smile as she looked down at her. \n\n\"Wake up, sleepy head.\" \n\nRose struggled upright, looking around at thick underbrush. The changing light of an evening sun filtered through the trees. \n\nLily smiled \"He'll be right back - he's making sure the coast is clear for us to slip into the cabin.\" \n\nThen she settled more seriously next to Rose. \"He said something about waiting here a few days in case some of those things got away. And to get Mr. Dietrich a doctor. I think he wants to make sure we don't deliver a dead Treasury man to the police station.\" \n\nA few minutes later, Ken slipped soundlessly from the underbush. \n\n\"Everything is quiet. Our cabin is the last one on the trail, so there shouldn't be anyone walking by.\" \n\nThe federal agent was awake, but in no shape to walk, but Rose and Lily easily lifted him out and followed Ken through the trees to little cabin. Once inside, Ken made sure the curtains were drawn while Rose and Lily laid Dietrich on the couch. \n\nKen explained that while he had checked the cabin he had also walked to the main office and used the sole telephone to summon a doctor who would look over Dietrich it the morning - no questions asked. \n\nWhen he came back he sat them down. \"I also called a friend, who might know more about what's happening to you two. She'll be here tomorrow night.\" \n\n\"A lady friend?\" Lily sounded as disappointed as Rose felt. That startled her. She'd started thinking of Ken as hers and Lily's. \n\n\"A lady who is a friend. She owns the Beauchamp's Voodoo Lounge nightclub. She knows about stuff like... this,\" he gestured to them. \n\nLily smiled. \"We went there a couple times on double dates. You know, there's a cellar you can go down into to pick out your own wine.\" \n\nRose giggled. \"I remember that. There are places you can look up right through gaps in the dance floor.\" \n\nLily burst out laughing. She fought to catch her breath, tears running out of her eyes. \"Rose said... 'Lily, I think there's a serious lady's underwear shortage in this town!'\" \n\nEven Dietrich laughed at that. \n\nRose claimed the bathroom for her and Lily to clean up more thoroughly. Ken produced two more clean shirts for them to wear. \n\n\"This is all I have right now, but there's a small store here I can buy you a couple dresses in when it opens in the morning. This place specializes in providing some quiet isolation for men of some means and their 'nieces' to relax in.\" \n\nRose couldn't help herself. She smirked \"Why, Mr. Stanton, whatever kind of place did you spirit us away to?\" \n\nLily caught on a second later, plastering herself to Ken's side and joining in on Rose's comment, batting her blue eyes up at him. \"Oh Uncle Ken, however shall we express our gratitude for this lovely vacation?\" \n\nHe shook his head ruefully. \"If I'd have known I would be convalescing a Treasury agent and watching over a couple of waifs, I'd have looked for a family resort with bigger cabins. And maybe brought some clothes for you two along with me.\" \n\nRose wrinkled her nose at him. \"What would be the fun in that?\" \n\nShe reflected that she was getting as bad as Lily about flirting. \n\nCleaning up took them several minutes and a whole lot of water; poor Lily scrubbed her pale hair until the last traces of blood were gone. After Ken cleaned up, they worked to get Dietrich cleaned up as gently as possible. He was weaker than before and she could tell he was in more pain than he was letting on. She could smell the pain and weakness. A surreptitious glance told her that Lily was sensing the same thing. \n\nThat really worried her; the cabin only had three rooms - a living room, a bedroom and a bathroom. Only the bathroom had a door to close and it didn't lock. Lily and she seemed well past the hunger, and while she could smell the agents pain and weakness, it no longer made her mouth water and stomach growl - but the daylight was almost gone and the hunger and the voices had always been stronger at night. She wasn't worried about Ken, he had never smelled like food. \n\nDietrich seemed to read her mind, he rolled up on his side. \"I'm not trying to be ungrateful - and I understand staying here a couple days. I'd just be more comfortable if you had a room to lock me in at night. Or lock them in. Or something.\" \n\nHe trailed off, expecting an argument. \n\nRose spoke up before Ken could say anything. \"No, it's okay. I'm not sure I trust us yet either. I feel pretty normal now, but I don't know how we will be at night. The... feelings are worse in the dark.\" \n\nKen looked around. \"I'll see if I can get another cabin tomorrow. But we'll have to come up with something for tonight.\" \n\n\"Aisle Two, shelf Three\" pronounced Lily. \n\nKen looked at her in puzzlement. \n\nLily suddenly blushed brilliant red and seemed at a loss for words. \n\nRose caught on \"Oh, Mrs. Garrison's books!\" She turned to Ken. \"Those books we had to put up in the restricted Crypt - Aisle Two, shelf three is where the one with, um, tied-up women.\" \n\nLily regained her composure and rallied with a cheeky grin. \"If we're bad you can always resort to shelf four. And five.\" \n\nThat was how Rose and Lily found themselves tied up and gently placed on the bed. Lily played it up for all she was worth, playfully asking to be tucked in and making teasing remarks the whole time Ken tied them up. He fielded her comments with good humor. Despite Lily's entreaties for \"snuggles,\" Ken moved an easy chair to the doorway between the living room and the bedroom. Dietrich still looked concerned though. \n\nSeconds after she laid down, Rose fell into a dreamless, whisper-free sleep. \n\n### \n\nBright sunlight woke Rose the next morning - she had one arm wrapped around Lily. \n\nShe sat up suddenly when she realized her bonds were off. Spinning off the bed, she dashed to the doorway. \n\nKen was standing next to a well-dressed, but furtive, weasel-looking man who was examining Dietrich. \n\nKen gave her a half-smile. \"I took the ropes off you two after the sun rose about three hours ago. You didn't wake at all.\" \n\nThe strange man - who she assumed to be the expected doctor spoke. \"He'd be best off if you keep him here until he really stabilizes. A couple of days or so.\" The Doctor pointedly didn't look in her direction. He obviously decided that the less he knew the better off he was. \n\nTrue to his word, Ken went out and came back with two dresses. \n\n\"Here you go, for Lily...\" he lifted a light blue shift from the bag. \"and one for Rose.\" He handed a light yellow shift to Rose. \n\nHe stepped out while they changed, even though Lily called after him, giggling. \"It's not like you haven't seen everything already, you know!\" ",
        "The two girls then went down to the store on their own, Ken telling them to get whatever was necessary for a couple days and tell the clerk to bill it to the cabin. \n\nTwo peignoirs, two robes, four more dresses two pairs of shoes and two darling cloche hats later, they checked out with a very tactful clerk, who very solemnly listed their acquisitions to be charged to their \"uncle.\" \n\nAs they slowly walked back up the path, Lily looked over at Rose. \"You feel the same way about Ken that I do?\" \n\nRose nodded. \"It's an 'us' thing. Not just you or me with him, but us. He's ours now. Or we're his. Or something like that.\" \n\n\"Thank Heavens. I feel that way too.\" Lily giggled. \"I hope he's been eating all his vegetables, he's gonna need all his strength, once we ditch Treasury man. I haven't wanted a man like this as long as I remember.\" \n\n\"Me neither.\" \n\nRose and Lily cheerfully wandered up to the cabin, but as they pulled the door open, Rose felt a rush of anger. It was a smell, sort of, a sense like a smell anyway. A scent of something wrong, something unclean. Like the man-things, but different. From the corner of her eye, she saw Lily's eyes darken and her lips curl back with a hiss to expose her lengthening teeth, hands forming claws. \n\n\"Stop!\" Ken stepped quickly between the doorway and the rest of the cabin, hands up to ward them off. \n\nHe was blocking them from a figure behind him, a woman, veiled and draped in yards of ornate cloth. \n\nThe smell, though, came from the towering figure behind her. An enormous bald man, stolid, powerful and black as pitch. \n\nRose and Lily froze, struggling to keep from knocking Ken aside and launching themselves at the huge figure, until the veiled woman turned and gestured to the looming thing. It ponderously moved into the bathroom and shut the door. Agent Dietrich stared at them from the couch, holding as still as possible, trying not to even breath. \n\nRose felt some of her fury slip away, enough of it anyway, and she could sense Lily's subside as well. The woman pulled her veil down. She was a black woman with an aquiline nose and dark, hypnotic eyes. She looked them over slowly. \"I apologize. None of the ghul can bear the presence of the zombi. I hadn't considered that.\" Her voice rolled with the soft lilt of Spanish moss and African music. \"I am Marie Beauchamp. I believe I can see why Monsieur Stanton requested my presence.\" \n\nShe walked over slowly, extending one hand toward Rose and one toward Lily. She slowly touched each girls face. \"The ghul kept you together in the same room, yes?\" \n\nRose nodded. \"They chained us up together.\" \n\nThe woman looked back and forth between them, then shook her head. \"That was the mistake the ghul made. You're not just friends, you are lovers.\" \n\nRose flushed a little when Ken raised an amused eyebrow. It was the first time anyone other than her and Lily had ever acknowledged it, ever said it aloud. Lily pursed her lips and stepped forward, standing hipshot, with her arms crossed and her jaw set. \"So? You have a problem with that?\" \n\nThe woman shook her head. \"Certainement pas. Above all else, despair makes a ghul. Your love for each other gave you hope, and hope defeats despair.\" \n\nRose felt a sickening chill. \"If I lose Lily...\" Lily grabbed her hand, eyes wide with the same fear. \n\n\"Non. It is like a vase cast in clay, once you fire it, it is the shape it will be forever. They failed to turn you fully, so you will remain what you are, not entirely one nor the other.\" \n\nRose squeezed Lily's hand as a sense of relief washed over both girls. Rose glanced at Lily for a second. \"So what are we then?\" \n\n\"Part ghul. The ghul are the night runners, the eaters of the dead.\" \n\nRose's face twisted in disgust. Lily voiced her opinion. \"Eeeewww.\" \n\nMarie studied them for a moment. \"Do you crave human flesh?\" \n\nRose thought for a bit. \"No... I don't think so. I was so hungry for so long, but it was just for any food, not anything in particular.\" Lily nodded her agreement. \n\n\"Not even at night?\" \n\nLily shivered. \"No, but in the dark there were... voices. Horrible voices. I could never quite hear them, never really understand what they were saying.\" \n\nRose choked down the lump in her throat. \"They whispered and hissed constantly. I was so glad I couldn't hear what they were saying.\" \n\nMarie shifted, then reached up to touch each of their faces in turn again, looking into their eyes. Then she turned to Ken. \"They are telling the truth. They'll crave raw meat, but just meat. They will have to learn to control their anger.\" \n\nKen relaxed, and Dietrich looked relieved. They talked for several more minutes until Marie asked Lily and Rose to walk outside with her. \"You have... bonded with Mister Stanton?\" \n\nRose shrugged. \"We both feel it. What does it mean?\" \n\n\"I'm not certain, but I am sure it is a good thing unless you cannot bear a man.\" \n\nLily giggled. \"We aren't that way. We love each other, but it isn't because we don't like guys.\" \n\n\"You'll have to let him know.\" \n\nLily smirked. \"Oh, we will, Sister, soon as we get a little privacy. Don't have any doubt about that.\" \n\nMarie smiled a bit. \"I almost feel sorry for him.\" \n\n*** \n\nSix Months Later \n\nAgent John Dietrich walked into the Voodoo Lounge as quietly as possible - the doorman barely even glanced at him. Unshaven and in a rumpled suit he hardly looked like a top level Treasury agent. He assured himself that that was the point. Mostly though it was because he was exhausted. He looked around the crowded room for a minute, until he saw Ken sitting at a table off to the side of the bar. \n\nHe was almost halfway to the table when they came up on either side of him. \n\n\"Fancy meeting you here, Agent Dietrich.\" \n\n\"Good evening, Lily.\" \n\nRose touched his other elbow. \"It would have probably been easier to come by the library to meet us in the Crypt if you wanted to talk. Thanks for that, by the way. Mrs. Crenshaw was very impressed that a real Treasury agent dropped by to tell her than her two library aides had broken up a murder-for-hire gangster ring. She lets us get away with murder these days.\" \n\nHe chuckled to himself. \"I'd rather talk with you in a brightly lit, crowded place where there are lots of witnesses. Meeting you in a dark sub-basement alone seems like it could be unwise.\" \n\nLily prodded his side. \"Don't you trust us?\" \n\nHe glanced at them. Lily in an off white silk shift and Rose in an emerald green one. Both dresses were thin as gossamer and hid next to nothing. \"Not very shy these days, I see.\" \n\nRose smiled. \"Didn't you hear? There's a lady's underwear shortage these days.\" \n\nJohn didn't say anything as he sat himself slowly in a chair while the two girls glided around the table like feral cats and slid into chairs on either side of Ken, leaning slightly against him with too-wide smiles. \n\nAgent Dietrich kept his hands on the table. \"Ken.\" \n\n\"John. What can we do for you?\" \n\n\"I filed my report. Said exactly what happened. I half thought they'd fire me or send me to an asylum. Two days after I submitted my report I was summoned to the Secretary's office and informed that 'the Department of the Treasury does not have the luxury of pretending that things don't exist.' The Secret Service already has the task of dealing with things like...\" He paused, picking his words carefully. \"... like what we ran into.\" \n\nRose leaned forward, letting her eyes darken and teeth lengthen for a second. \"Like us.\" \n\n\"If you make trouble, yes. Otherwise it is mostly hands off.\" \n\nKen gave a slight smile. \"You got reassigned.\" \n\n\"I got reassigned.\" \n\nRose suddenly frowned, then sat back. \"Wait. You said 'mostly.' Why are you here?\" \n\n\"I need some help. The Secret Service needs help.\" \n\nLily shook her head. \"We're pretty happy here.\" \n\n\"I'd rather not force you to help. But I will if you make me. Some of the things I've seen are pretty horrible. I wouldn't come here if I had a choice.\" \n\nKen grimaced. \"We've seen a couple things here, too, but we've taken care of them ourselves. Turns out my girls here can smell trouble and they're a little territorial.\" \n\nRose rolled her eyes. \"There's all kind of weird things happening all the time. I don't know how we never noticed.\" She started counting off on her fingers. \"Let's see, there was that giant reptile-thing in the sewers, whatever it was. I'm kind of glad we never got a good look at it. There was that headless guy walking the cemeteries, that crazy scientist guy...\" \n\nLily cut her off. \"That guy. Geez. Puttin' a girl's brain into a gorilla body. Why? Why would anybody even want to do that?\" \n\nRose looked up to the sky for a second. \"Who knows? He was nuts. Didn't work out for him, though. Cindy was mad as a hornet when she woke up. Tore his head off when we let her loose.\" \n\nLily pursed her lips. \"Marie fixed that. Switched them back. Mostly anyway. Cindy has a job at the zoo takin' care of Koko now, so nobody even thinks anything is weird. Cindy eats a lot of bananas and Koko likes to wear dresses all the time.\" She shrugged. \"That was more fun than the guy with the giant brain in the vat. Those 'brain beams' gave me headaches for a weak.\" \n\nRose screwed up her face. \"And it tasted awful.\" \n\n\"I figured that it was you keeping things down here. And the Secret Service thanks you for that. But this is a little different, we've had some occult activity in Louisiana. Lost three agents there already. Weird religious cult calling something up from somewhere. Something big.\" \n\nLily and Rose reached for each other's hand on the table. Lily sighed, frowning. \"That's just ducky. Why do I get the feeling we're gonna wish we'd eaten you when we had the chance?\" \n\n***** \n\nPost Production Notes: \n\nI am planning more in this series, Crypt Girls versus the Giant Robot, Crypt Girls versus the Times Beach Vampire, etc, but my backlog of stories is getting worse every day, so expect them to come slowly. But this one was sitting on the shelf mostly done for several months, so when I got asked if I was ever going to publish it, I went ahead and finished it. I am very fond of Rose and Lily, and if any ghouls are going to haunt my dreams, I'd just as soon it was them. \n\nThe Winchester Model 1897 shotgun, modified to the M97 trench gun was(and is) an absolutely lethal weapon. It could be fired in what we would now call \"Slamfire\" - just holding the trigger back and working the slide for rapid fire. It was often heavily modified with heat shields, extended magazines and muzzle brakes. Also known as a Trench Sweeper or Trench Broom."
    ],
    "authorname": "Todd172",
    "tags": [
        "violent",
        "ghouls",
        "rose",
        "lily",
        "prohibition",
        "gangsters",
        "crypt girls",
        "librarian"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/crypt-girls"
}