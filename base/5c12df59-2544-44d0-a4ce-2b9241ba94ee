{
    "title": "My Angel of Mercy",
    "pages": [
        "Love and Lust can be powerful healers... \n\n\u00a9Copyright 2017 by eidetic. This is being placed in the body of the story because of unscrupulous pilfering by other online sites. Literotica.com is the only online site permitted to publish this story. \n\nAuthor's note: this is my first attempt in the First Time category. It's rather long and a little complicated, but then so is the relationship of the characters. And per usual, it starts slowly, with background. I intended it as a stand-alone, but by the end I began thinking in terms of 'sequel'... not sure which way I'll go. As always, your constructive comments are appreciated and voting is like applause - it lets me know how I'm doing, pleasing you, the reader. Enjoy... \n\n* * * * * \n\nI lay in the dark and listened to the muted sounds of the machinery hooked up to me. The soft beeping that tracked my pulse and the gentle hiss of the oxygen being fed to my nasal cannula. The almost imperceptible drip, drip, drip of the IV. \n\nI lay in the dark and felt my painfully throbbing erection. The erection I'd woken up with and had no idea how to relieve, given that my hands and forearms were covered in thick gauze and I couldn't grip anything with them, let alone rub myself off. \n\nI lay in the dark and thought about how the hell I'd gotten here. \n\nBy being a fucking Good Samaritan, that's how. The cabin cruiser was on fire and there were people standing at the stern yelling and screaming, and I saw them holding up little kids, trying to get life preservers on them. I may be a professional hard-ass but little kids in trouble get to me. Long story. \n\nSo I jumped in the dinghy, fired up the little outboard motor and hustled over to the burning boat as fast as I could make the little boat go. I knew damn well it could blow up in my face, but just filed that under the \"You're Fucked\" category and kept going. I didn't see or hear the Coast Guard, yet, and I was just getting there when a man threw a little kid over the side, about twenty feet from me. Shit. \n\nI dove in and grabbed the kid, a young girl, like maybe a toddler, barely strapped into the vest. I hauled her over to the dinghy and pushed her in, then turned to the guy. \n\n\"Hey, Asshole!\" I called to him. \"Get down here and help retrieve 'em before you pitch anymore overboard!\" He looked surprised to see me. And relieved. \n\n\"Somebody else can throw!\" I yelled. \"Get down here and man the boat!\" \n\nI will give the man a little credit. He turned and yelled something to someone I couldn't see, then jumped overboard, swimming for the dinghy. The someone turned out to be a young woman who threw the next kid overboard. I was closest, so I retrieved the kid, this one a boy, and started pulling him towards safety. The guy met me part way and took him, so I went back to see if there were any others. \n\nThere were. And the woman was having a hell of a time getting the life preservers on the squirming kids. So I decided fuck it and swam to the transom, hauling myself up the ladder to the deck. There was thick, oily smoke pouring out of the main cabin and the engine compartment, which did not bode well. There were two apparently empty fire extinguishers lying on the deck. \n\nThe woman was about done with one of three kids that were left, so I grabbed the other two and told her, \"Jump! Take the kid with you and jump! I'll get these two ready and throw them to you!\" \n\nShe started to object. \n\n\"Jump, God damn it!\" I yelled in her face and she did. Maybe she was just frightened of me. I don't know. What I did know was I had two kids to get strapped up. I dropped one of them to the deck and knelt across him, using my legs to keep him pinned while I got the girl into her vest. I wasn't being gentle because I was in a hurry, but she had kind of freaked out and wasn't fighting me. \n\nOnce I had her in her vest, I grabbed her in one hand and the boy in the other and went to the stern rail. \n\n\"Catch!\" I yelled and tossed the girl. I didn't wait to see who got her. I turned to the boy. \n\n\"Stop fighting me! I'm saving your ass!\" I told him and I must have shocked him, because he did stop struggling. I got his vest on him and two of the four buckles cinched, and decided that was good enough. I took him to the rail and looked before I threw this time. \n\nThe woman was beside the dinghy, the man was halfway between it and me and the other kids were in the boat. \n\n\"Last one!\" I yelled to the man and pitched the boy over the side. The guy swam to him immediately. \n\n\"No!\" the woman called out. \"There is one more! Giselle!\" \n\n\"Where?\" I yelled back. \n\n\"Forward!\" she yelled back. \"In her crib!\" \n\nIn her crib??? Oh, fuck! I looked around, trying to remember what I knew about this kind of boat. It was one of the old Pershing 50-footers, which meant that \"forward\" meant either the master berth in the bow or one of the berths amidships. The fire had involved the stern of the boat, so I hustled over the deck to the hatch that led down into the bow. \n\nSome god of good fortune was working overtime because the hatch was cracked open for ventilation. I grabbed it and yanked and it came the rest of the way open. I eased my way in and dropped onto the bed. It wasn't quite as smoky here as aft and I saw the crib immediately. With a squalling infant in it, wrapped up in a blanket. \n\nI didn't have time to screw around. I could hear the siren from the Coast Guard cutter, but it was still a ways off. Baby and blanket went up through the hatch, and I was really hoping he/she/it would stay put and not roll off until I could get out there. I had to pull my way up through the hatch and yeah, I was a little out of shape, but I made it. And the baby was still there. \n\nI grabbed it and ran aft. The only life jackets left, that I knew, were in the locker on the flybridge. Which meant putting the baby down and making my way through the oily smoke. I fished one out, realized it wasn't going to fit, wrapped it around the kid and secured it by tying my belt around it. By this time, my eyes were watering bad, and I was coughing up a storm. I got to the rail, though, yelled \"Catch!\", and threw the kid. I really hoped somebody caught it. \n\nI was climbing up on the starboard gunwale by the transom, getting ready to jump, when the damn boat exploded - and caught me in it, throwing me into the water. I remembered the searing heat and massive concussion from behind, and I vaguely remember hitting the water, but that was about it. The next thing I knew, I woke up in a dark hospital room, hooked up to a bunch of equipment, and sporting an erection that was extremely painful. \n\nI figured I had to be at the Schneider Hospital. The boat had blown up in Ruyter Bay off St. Thomas Island. It would be the place they'd take me. I needed to talk to somebody, though. I needed to find out what the hell was going on. I looked around for a call button for the nurse and of course, it was in the TV remote control, which I couldn't pick up because my hands and arms were all bandaged up. \n\nI was about ready to try yelling when the door opened, spilling a yellowish light into the room, and a nurse entered. I don't get embarrassed easily, but I was about to be. She was young, she was pretty and I was immediately imagining her naked. \n\nShe walked up to me in the dim light and noticed I was awake. \n\n\"Good evening, Mr. Foster,\" she smiled at me. \"How are you feeling?\" \n\nShe was only listening with half an ear as she moved to check my temperature and read off the rest of my vitals, which was okay because I suddenly found myself parched. I tried to point with my bandaged up hands and say \"water,\" which I am not sure came out intelligible at all. But she understood, and once she finished checking the machines, she went to the sink and wet a cloth to dab my lips. \n\n\"Drink,\" I tried to tell her. She nodded her understanding, then looked at my chart. \n\n\"I will get you some water, Mr. Foster,\" she told me. \"We must be careful not to hurt you. You have been through a severe trauma and we must go slow.\" \n\nI nodded and laid back, and she went out and came back with some ice water and a straw so I could at least moisten my throat and mouth enough to talk. \n\n\"What happened?\" I managed to ask her after awhile. \n\n\"You were injured by an explosion aboard a boat in the harbor,\" she explained. \"I believe you were saving lives at the time. You were very lucky, it appears. You have severe burns on your forearms and hands, and they had to remove some shrapnel from your back, but overall you are okay. You have been drifting in and out for the last three days. You now seem ready to rejoin the land of the living.\" \n\n\"Who are you?\" \n\n\"My name is Kayla, sir,\" she smiled again. I was really liking that smile. \"I am one of the night shift nurses here on Medical/Surgical Recovery.\" \n\n\"Did the kids live?\" I asked. For some reason, it was important to me. \n\n\"Yes, sir, the entire family of eight survived, with only minor injuries,\" she told me. \"You are now quite the local hero.\" \n\n\"I'm not a hero,\" I told her. \"You guys are. You fix the broken ones. I just retrieve 'em. And is there any way I can get something to eat? I'm starving here.\" \n\n\"You are supposed to be on clear liquids, until the Doctor clears you,\" she explained. \"I'll see what I can get.\" \n\n\"You are an angel, Kayla, thanks,\" I told her, \"but somebody's going to have to feed me. I can't do anything with these bandages. I'd have thought I'd have been in a lot more pain...\" \n\n\"You have quite a cocktail of pain killers in you, sir,\" she smiled. \"Which is probably why you aren't feeling much.\" \n\nOh, I was feeling something, alright. It was between my legs. Painfully so. The only reason it wasn't glaringly obvious was because the lights in the room were dimmed, and this cute nurse wasn't helping things any. \n\n\"I'll be back in a few minutes, sir,\" she told me and then turned to leave. I got to see the other reason she was cute... a wasp waist and really fine ass. Even in the scrubs-type uniform, she was obviously toned and curvy. I sighed, laid back and waited for her to leave. \n\nOnce she was gone, I tried to see if there was anything I could do to get myself off. The hard-on was really bothering me, to the point of being painful in my balls, thighs and lower back. Although, the lower back pain might have been from the shrapnel they took out, since I seemed to have a bunch of bandages there, too. I couldn't find a damned thing to help myself out. \n\nIf I'm that doped up, I thought, why the hell am I hard? I should be out of it. I was still trying to figure that out when Kayla returned with a tray. \n\n\"I did not know what you might like, sir, so I made do with what I could scrounge from the cafeteria,\" she told me. \"The kitchens are closed.\" \n\n\"What time is it?\" I asked as she put the tray on the bed-table thing that could swing over in front of me. \n\n\"It is almost three o'clock in the morning, sir, on Friday,\" she answered, and then drove my anxiety through the roof as she moved to lower the railing, raise the head of the bed and sit on the side of it, next to me. Right next to the very obvious tent pole sticking up. \"You had your accident on Tuesday night.\" \n\n\"I have lime gelatin,\" she went on, moving into position to feed me, \"and both tea or coffee, with sugar or honey, if you would like. I also have apple juice and both Mountain Dew and Pepsi available. I also have some... oh!...\" She paused as she accidentally brushed my cock. \"I am sorry, sir...\" \n\nI wasn't. Just her bumping it was nice and the fantasies started flowing. \n\n\"I also have... um... some, uh... some hard... uh, candies and peppermints,\" she managed to finish up. I was ecstatic to see that she was distracted by my hard-on. A perverse part of me liked the idea that she was unfamiliar with erections and might by fascinated by mine. She turned on her Professional Nurse, though, and helped me get fed. I would have preferred steak and potatoes, but I'd have to wait on the Doc for that. \n\nWhen we finished up, she'd told me she'd be right back while she cleared out the tray. When she came back, she brought something with her that looked like a ping pong paddle, which she hooked into the bed. \n\n\"You should try and rest now, Mr. Foster,\" she told me. \"If you need anything, just push on this with your elbow. It will be the same as the call button and will chime at the nurses' station. Oh, and the Doctor had approved a PCA, but since you can't operate it conveniently, you can just call and one of us will do it for you.\" \n\n\"What's a PCA?\" I asked. I thought I knew, but I wanted to be sure. \n\n\"Patient Controlled Analgesia,\" she smiled. \"Intravenous pain relief. Normally, you would push a button to get extra pain relief or not push it if you didn't need it. But since you aren't a button-pusher today, we get to do it for you. Just call if you hurt too much.\" \n\n\"Can I get out of this stupid hospital gown?\" I asked. \"It's really uncomfortable and pushing on all the wrong places.\" \n\nShe thought about it for a moment, then helped me by unsnapping it at the shoulders and peeling it off carefully, not removing the sheet. Which meant I wasn't going to embarrass her, or be embarrassed, by my obvious problem. \n\n\"Okay, now you try to get some rest, Mr. Foster,\" she told me. \"Call if you need something.\" \n\nI nodded my thanks and watched her walk out the door, closing it and immersing the room once more in darkness. There was no way I was going to tell her that the PCA wasn't going to give me the kind of pain relief I needed. I tried to settle down and think about other, more pleasant things. Like Sgt. Carter, the ass-wipe at the Army Recruiting Station and the reason I was in the Virgin Islands in the first place. \n\nLong story. I needed his recollections of an Op we'd been on together, for a different problem. He wasn't pleasant in country the first time and he was less pleasant behind a desk. Thinking about him did keep my mind off my cock and the nurse, but it made me realize I was getting agitated, and I didn't want to drive the nurses nuts with bad biotelemetry. \n\nSo I gave up on that and tried falling asleep. An hour later, I gave up and pushed the call paddle. \n\n\"How may I help you, Mr. Foster?\" It was Kayla again. Which was just going to make this more embarrassing. I'd rather have gotten an old crone. \n\n\"Look, Kayla, I've got a problem,\" I started. She simply looked at me attentively while I tried to get it out. \"I need a certain kind of relief from a rather painful problem and I can't take care of it myself, exactly, so... I was wondering if you... if the hospital... had some kind of, um... tube or something... I could hold between my bandaged hands and, um... well, use... um... use as an artificial vagina? If you know what I mean?\" \n\nI was really bordering on groveling here. I wanted some kind of fuck toy I could get off in, but I didn't want to drag her into it. She seemed rather... ingenuous. And I sure as hell didn't want her thinking I was a dirty old man, trying to come on to her. \n\nShe kept looking at me for a couple of moments, then looked at my tent pole for a few more, then turned back to me. \n\n\"I do not know, sir,\" she told me. \"But I will find out.\" And she abruptly turned around and headed out. \n\nOh, fucking great... I thought. Now she's going to go ask the rest of the staff, and when they're done laughing their asses off over it, she'll have to come back and tell me there's nothing they can do. Wonderful... \n\n* * * * * \n\nMr. Foster is an interesting patient, I thought as I transcribed my notes from my rounds. Badly burned saving the family off that boat fire, we got him after ER and Surgery were done with him. He was pretty out of it. An older man, true, but ruggedly handsome and in very good shape. Not like most of the men that pass through here after having their prostates removed. \n\nI didn't realize at the time the effect he would have on me. Rather educational, to say the least. \n\nWhen his vitals shifted, indicating he was regaining consciousness, we were having problems with Mrs. Heatherton and Rita sent me to handle anything that wasn't an emergency, since everyone else would be busy with the old bag. Her confidence made me rather proud, actually. I'd been on staff less than six months and was still earning the respect of the veterans. \n\nOf course, the first thing he wanted to know was what had happened. I tried to keep it simple and leave it to Dr. Carlton to explain the severity of his injuries. It is odd, but he didn't seem to want the adulation due a man who had singlehandedly saved a family of eight at great peril to himself. I didn't think I should push it. He would find out in good time just who it was he saved and how important they were. \n\nThe next logical thing was getting him something to eat. After three days of living on a D25W drip laced with narcotics, sedatives and antibiotics, it seemed obvious. I confirmed, as I started to leave, that the problem Dr. Carlton had suggested might appear, had appeared. The rather pronounced tenting of the sheets indicated it. I'd been warned it might be painful even with the medications, but that I was to politely ignore the condition unless it became medically necessary. We weren't to embarrass the man. \n\nI did manage to scrape together something for him and assist in feeding him, since his hands are virtually worthless for now. I had hoped that once he had a little sustenance, he might fall back asleep. Sleep is one of the body's best ways of handling pain while it repairs itself. Apparently, not one that was available to Mr. Foster. And I now had the oddest request. \n\nI had no idea what might be used for an artificial vagina, that he might grip between his damaged hands in order to relieve himself. And according to Dr. Carlton, if he were able to get some relief through masturbation, it would only last a little while before the painful erection returned. Some sort of neurological damage to the fifth lumbar vertebra was causing the sexually exciting stimulation and only time would heal the wound. \n\nThat, or surgery - an option the doctors were trying to avoid if Mr. Foster's body could at all deal with fixing the injury. In the meantime, Mr. Foster could end up very uncomfortable, and would probably see the temporary relief as preferable to the constant erection. \n\nI determined to ask Rita, as soon as she, Margaret and Tracey had Mrs. Heatherton stabilized. Rita was incredibly knowledgeable, as befitted a woman old enough to be my grandmother. That conversation did not go at all like I had supposed. \n\n\"Rita, Mr. Foster is asking about some kind of artificial vagina that he could use to relieve himself,\" I told her. \"I have no idea what we'd use for that type of situation. Do you know where we might have something like that?\" She gave me a look that was best described as sympathetic condescension with a bit of amusement thrown in. \n\n\"Oh, my dear,\" she answered slowly in her best motherly fashion, \"the only thing even close is kept in the Physical Therapy department and they are not likely to be cooperative, even if they were open. I'm afraid we don't have any 'artificial vaginas' except the natural ones.\" \n\n\"Then I have to tell Mr. Foster he's just plain out of luck?\" I asked. I really didn't like seeing the heroic man suffer. \n\n\"As far as a masturbatory toy, yes, I suppose,\" Rita nodded. \"We can give him more analgesics, try to help him sleep, but Dr. Carlton has already indicated they are unlikely to work in this particular situation. Until the nerves heal, Mr. Foster will be experiencing continuing sexual stimulation. I'm sorry.\" \n\n\"So am I,\" I told her. \"I really don't like seeing him suffer.\" ",
        "\"Well, you're a bright girl,\" she had smiled a bit wistfully. \"Maybe you'll think of something. If it's still a problem after Dr. Carlton sees him Monday, I may put my thinking cap on and see if I can help.\" \n\n\"Thank you,\" I told her. \"I guess I better go give him the bad news.\" Oddly, I heard my coworkers giggling amongst themselves as I walked away. \n\nI paused outside Mr. Foster's room as I mulled over what I was going to tell him, and how. And to pay some attention to the annoying idea nagging at me from somewhere deep inside. I truly hated seeing the man suffer. And I knew what he wanted to do. But Dr. Carlton had said it would only be temporary relief. Until the nerves healed, his problem would just keep coming back. \n\nBut temporary relief was better than no relief at all, right? The idea that was pushing at me so hard involved doing things I'd never done before. But masturbation was masturbation, right? I was no stranger to giving myself pleasure. It was one of the ways I got through nursing school without letting my hormones derail me, especially around the boys. \n\nI'd been so good at staying focused, though, that I'd never touched a man's erect penis in a sexual way. Medically, yes... learning about cystoscopy and such. And I certainly had never masturbated one to orgasm. But that is, essentially, what Mr. Foster needed. And truthfully, there was a tingly part of me in my belly that was excited at the idea of helping him out. Maybe that's what Rita meant by \"except the natural ones.\" Maybe my hand could be an artificial vagina for Mr. Foster. \n\nResolved to see if I could discreetly aid Mr. Foster, I entered his room. \n\n* * * * * \n\nIf I could get turned over, maybe I could hump a pillow or something, I thought as I lay waiting for the innocent young girl to come back with an embarrassed apology. Or if I was lucky, a goat milker from a local 24-hour farming supply company. Yeah, right... \n\nThe yellow light splashing into the room surprised me. She hadn't seemed to have been gone that long. But it was definitely Kayla's tantalizing body entering the room, and right at that moment, Tantalus had nothing on me. \n\nShe stopped to close the door and the light disappeared. Usually, she left the door open so she could see what she was doing by the spill light from the doorway. Less need to turn on what were probably painfully bright room lights. Now, we were only lit by the illuminated meters and such on the equipment surrounding my bed. All of which seemed rather odd to me. \n\nShe carefully threaded her way around the machines until she could reach a switch on the wall. When she turned it on, instead of glaring white light, we were bathed in a soft warm low glow from a couple of \"night lights\" around the room. We could see each other without it being jarring. She moved to stand next to me at the side of the bed. \n\nHere it comes, I thought. Try not to embarrass the kid anymore than you already have, idiot... \n\n\"I'm sorry to have to tell you, Mr. Foster,\" she began and she really did look sorry. \"We don't have anything here that could be used as an 'artificial vagina' which you could use to get some relief. I've asked coworkers who've had some experience in these kinds of problems and they all concur. I'm not your doctor, but I think it only fair to tell you that part of your back injuries were to a part of the spine which is causing your current discomfort.\" \n\n\"Dr. Carlton will be able to explain more when he sees you, but for now I want to explain that with your kind of injury, only the nerves healing will stop the stimulation which is making you uncomfortable. At best, you would only get temporary relief. It sounds stupid, but the best thing you could do to fix your situation would be to heal quickly.\" \n\nThe poor girl was trying very hard to keep it professional. I couldn't tell, though, whether she was valiantly suppressing a desire to laugh at my predicament, or whether she simply was that na\u00efve. I'm not sure how I'd gotten to the decision that she was innocent. She just didn't seem to have a worldliness about her. I mean, I half expected her to have wings, a halo and glow with her own light. \n\n\"Got it,\" I nodded. \"Would it be possible to get some extra pillows?\" It didn't hurt to ask. \n\nShe stood and looked at me for several moments without answering. Then she asked, \"Mr. Foster, as I mentioned, I'm not a doctor, but would you mind if I took a look at your 'problem'?\" \n\nThat surprised me. I didn't know what she thought looking at an engorged penis would do. Maybe she was thinking some kind of anaesthetizing ointment or something. But she was the nurse, so I just shrugged my shoulders and told her, \"whatever you'd like...\" \n\nShe carefully peeled the sheets down, revealing the cause of the tenting. \n\nShe gasped a quiet \"oh, my!\" at the cause of my discomfort. I was right there with her. That sonofabitch seemed half-again as big as he'd ever been, and all purple and mottled. No wonder I was bloody uncomfortable. \n\n\"I will be back in a moment, Mr. Foster,\" she told me and went out the door. Leaving my cock out to get some fresh air. That bastard was bobbing around with my pulse and every bob hurt. It couldn't have been helping to be that swollen. Seriously, I'm a healthy eight inches on a good day, but I swear, I was a foot now. Okay maybe only ten, but a lot bigger than normal and every inch of it throbbed. \n\nKayla returned moments later, again closing the door behind her, and approached the bed with a tube of some sort of ointment in her hand. \n\nThank God! I thought. Numb that fucker out but good! \n\nKayla carefully squeezed some of the ointment onto her palm, recapped the tube and then started applying it. She only had to pause to scrape me off the ceiling. \n\nHer hand was warm, the ointment cool and soothing and whether she intended to or not, she wrapped her hand around my schlong and for all intents and purposes, started giving me an incredible handjob. Long, slow strokes, cupping the glans at the top, cupping my balls at the bottom, and all the time doing it with the gentlest touch I've ever felt. \n\nShe was interrupted by the biometric alarms going off. Pulse, respiration, blood pressure... all heading off the charts, induced partly by her wonderful ministrations and in part by my growing panic as I realized what the likely outcome was going to be. Out-cum, as it were. I needed to explain to her that she had to stop before there was an accident. \n\nShe looked at the machines, looked at my face and then my cock, then back at the machines. She stopped the massage long enough to reach over and turn off the alarms on the machines. She looked at me with a slight smile as she resumed stroking me.  \n\n\"You can relax, Mr. Foster,\" she told me. \"I've disabled the alarms for now. They don't mean anything at the moment.\" \n\nI disagreed. They meant she was doing an incredibly good job pleasuring me. And I needed to protect her virtue. \n\n\"Kayla, what you're doing feels great,\" I tried telling her, \"but you're going to have to stop. We might have an... um,... accident. It could get kind of messy. And embarrassing.\" She didn't even pause before answering me. \n\n\"You do not need to feel embarrassed, Mr. Foster,\" she told me and I realized she'd taken it wrong. \"We want pain relief after all, don't we?\" \n\n\"Well, yes, but...\" I stumbled. \n\n\"Then simply tell me when you think you are going to orgasm,\" she went on. \"I'll make sure it isn't messy. Just think of this as a special massage for pain.\" \n\n\"Oh, fuck... I already am...\" I muttered. Her smile was killing me. And I was going to cum. The buildup was excruciating and I was approaching that Point-of-No-Return with agonizing slowness. But it was inevitable, and I wanted it so very, very badly. \n\n\"Kayla, I'm almost there,\" I told her. \"You better get a towel or something, because... Oh, my Fucking GOD!!\" My asshole snapped shut, my balls pulled up and I felt the cum getting ready to spurt. \n\nKayla put her mouth over my cock and kept stroking. \n\n\"HOLY FUCKING SHIT!! CUMMING!!\" I went over and I went over hard, blasting rope after rope into that sweet girl's mouth, and she just kept stroking and sucking and swallowing. Every muscle in my body went into convulsions and every cell felt like it was on fire. \n\nShe kept me thrashing and cumming and going crazy until I damn near passed out. Maybe that's what she was trying for. And honest-to-God, the hard-on did eventually start to go down. \n\n\"Halle-fucking-lujah!\" I moaned. \"You're a fucking miracle worker, Kayla! You're incredible!\" \n\n\"I take it that wasn't bad for my first time?\" she asked and I was stunned. Her First Time??? \n\n\"Um... what do you mean?\" I asked. \n\n\"I have never held, much less masturbated a man's penis before, except holding one for medical purposes,\" she explained. \"I was afraid I might hurt you, rather than give you relief. Although...\" and she got a sly little smile in her eyes, \"I suppose this was for medical purposes.\" \n\n\"Kayla, if you could get that classified as a medical procedure covered by insurance, you would make half the planet very happy men!\" I told her. \"Wow! Just, wow! And you didn't just masturbate me. You did oral, too, and you swallowed. That puts you in the Goddess category, right there.\" \n\nIn the dim light, I actually saw her blush. \n\n\"Please don't be embarrassed, Kayla,\" I tried to reassure her. \"You were phenomenal. I will never, ever forget you. You are my Angel of Mercy.\" \n\nShe just shook her head slightly and started to pull the covers back up over me. \n\n\"Um... Kayla, before you do that, can you either help me to the bathroom or get me something to piss in? I know that's indelicate, but with the erection down... I really need to pee!\" \n\nShe laughed a little... a choir of angels on earth... and helped get me and my IV to the toilet, although I was wincing all the way. Whatever was screwed up in my back was still screwed up. But that piss was only second to that orgasm in total relief, and actually, it may have been a tie. When I'd finished and she'd gotten her volume, she helped me get cleaned up and back into the bed. \n\n\"I hope you can get some sleep now, Mr. Foster,\" she smiled. \"It is Friday morning and the kitchens open at six o'clock. If you'd like to fill out a breakfast card, I would be more than happy to make sure they hold it for you until you are awake. I am off shift at eight, but the other nurses will make sure you're fed. Remember you are on a clear liquids diet, although I will write up in my notes that you seemed to tolerate the previous foods very well.\" \n\n\"Kayla, I am not joking,\" I told her. \"You are an angel. A put-on-the-Earth by God Himself angel. I hope I get to see you again.\" \n\n\"I am working nights all weekend, Mr. Foster,\" she smiled. \"I'll check in on you when I come back on shift at midnight. Get some sleep, sir...\" She reached over and turned off the night lights, then worked her way out of the room. \n\nI lay back and actually managed to fall asleep, comfortably. \n\n* * * * * \n\nThat was one of the strangest, most frightening, most exciting things I have ever done in my life, I thought as I headed home to laundry, shopping, one dog and three cats. I guess I'm some kind of crazy because I'm really, really wet. \n\nI'd told Rita that I'd \"made Mr. Foster comfortable so he could get some sleep\" and gave her the breakfast card. She nodded with a knowing look and said something about \"welcome to the Big Leagues, dear,\" before telling me she'd pass on the diet information to Dr. Carlton. \n\nI got my chores done, even though severely distracted by memories of that very large, very turgid phallus and the joy I'd felt at Mr. Foster's ecstasy and ensuing relief. I had never tasted a man before and I found him fascinating. I'm very conversant with the technical side of it. I'd just never done it. \n\nI surprised myself. I was fascinated by the feeling of his skin sliding through my hand. I'd gotten some Surgi-lube because I'd heard that lubrication made the sensation much more pleasant, which made sense because it certainly does for me. Even with the slipperiness of the lube, his skin still felt amazing. And I really liked playing with the flare of his glans. Each time I'd play with the frenulum, he'd get a big bead of preseminal fluid flowing out of his urethra. Absolutely fascinating. \n\nThe sweetness of his semen surprised me, too. I'd heard all kinds of stories, mostly from girlfriends, about how guys tasted like everything from burnt butter to tinny metal. And salty. Several girlfriends complained that they couldn't give good head to their boyfriends because they gagged on the salty taste. But Mr. Foster was kind of sweet, kind of bland. Very pleasant. \n\nI loved how he kept calling me an angel. I'm not, of course. I'm just a simple girl trying to do well, living a simple life. Once I'd gotten the animals fed, watered and walked - in the case of Charlie, short for Emperor Charlemagne, my Irish Setter - I puttered around for awhile, showered and went to bed. And lay there daydreaming about Mr. Foster. They say you never forget your first. Well, right then I wished I could. He was keeping me from getting to sleep. \n\nThree orgasms later, I managed to fall out. \n\n* * * * * \n\nI woke up and hit the call paddle. I was hungry. And the damned erection was back. \n\n\"Yes, Mr. Foster,\" a matronly type nurse greeted me as she responded to the call. \"How may I help you?\" \n\n\"Well, I'd like to know what time it is,\" I told her. \"But more importantly, I'd like two eggs scrambled, sausage, toast with butter and jelly, orange juice and coffee.\" \n\n\"That, Mr. Foster,\" she lectured me with a smile trying to peek out, \"is not a Clear Liquids diet.\" \n\n\"I know. Wishful thinking,\" I told her. \"I suppose it's gelatin time again.\" \n\n\"Well, to answer your first question, it is about half past noon on Friday,\" she informed me. \"And secondly, Dr. Carlton would prefer you had a bowel movement before you start solid foods, but he has authorized a standard diet for you, regardless. The kitchen is still taking lunch orders. We can probably convince them to do breakfast for you. You're a bit of a celebrity, you know.\" \n\n\"After four days of liquid, I don't think I have anything to 'move',\" I told her. \"But I'll be happy to comply whenever I can. And just so we're straight, I'm not a celebrity. I'm a simple man who was in the wrong place at the wrong time and got hurt. And if I can get breakfast, that would be wonderful. If not, get me a lunch menu, please. By the way, who are you?\" \n\n\"I'm Louise,\" she told me. \"I'm the Charge Nurse on this shift.\" She walked over and checked the machines for my vitals, then lifted the sheet and looked at my now-painful-again erection. After a moment, she put the sheet back down, made a couple of notes on my chart, then turned and smiled to me. \n\n\"I'll see what I can do about the food,\" she told me and I nodded gratefully. \"And your favorite nurse will be back at midnight tonight.\" \n\nHoly fuck, everybody knows about it! I thought. That is so unfair to Kayla. \n\n\"You know, you don't have to spread that around,\" I told her pointedly. \"It was just getting me some relief that I badly needed. You ought to leave her alone.\" \n\n\"It isn't being 'spread around', Mr. Foster,\" she told me. \"I only know because the night shift Charge Nurse told me during turn-over. Kayla obviously did a thorough job, because you've slept straight through for almost eight hours. Let us know if you need help getting to the bathroom.\" \n\n\"Yes, ma'am!\" I told her. She shook her head and smiled slightly, then left. I laid back and started daydreaming about my Angel of Mercy. I was still daydreaming and softly humping a pillow when my food arrived. And with it came Louise. \n\n\"I thought I'd help feed you, Mr. Foster,\" she told me as she arranged the tray table. \"Your current situation might prove overly distracting to others on the staff.\" \n\n\"Whereas, there's no chance you'll get distracted,\" I smiled. \"Competent, professional and efficient!\" I meant it as a compliment. \n\n\"There is a very good chance I'll get distracted, Mr. Foster,\" she told me with a kind of faux-gruffness in her voice. \"I may be a grandmother, but I am for a reason, and I am not dead!\" Then she broke into the smile and we had our understanding. She moved to sit on the edge of the bed to help me eat and of course, when she sat, I winced. The sheets pulling tight over my cock shot pain through my belly and legs. \n\nShe stood right back up again and without a word, walked over to the door and closed it. Then she came back, pulled the sheets down off my cock and sat on the edge of the bed again, politely ignoring the purple flagpole waving in the breeze. Her solution worked and she got me fed without there being any additional pain to what I was already constantly feeling. Institutional food usually sucks, but this hospital must have had a decent kitchen staff because it was fine. Louise helped me until I was full, then tidied everything up. \n\nBefore leaving, she went to put the sheets back over me and paused, looking at my raging hard-on. \n\n\"It does seem so unfair,\" she observed softly, \"that your heroic actions were rewarded with pain rather than ecstasy.\" She reached out and gently took my throbbing cock in her hand and examined it. Then she just as gently put it back down and covered me. \n\n\"Would you like a pillow over your groin, for pain relief purposes, Mr. Foster?\" she asked as she tented the sheets up even more so they weren't pressing down on me. I shook my head and she made one more comment as she turned to go. \n\n\"Kayla is young and rather inexperienced, Mr. Foster,\" she told me. \"And whether she realizes it or not, I think she may be smitten with you. Please be kind. And if you need the hand of experience... just call.\" \n\nWith that offer, she took the food tray and left. I lay back and wondered how the fuck long it was going to take for my spine to heal. \n\n* * * * * \n\nI was as nervous as one of my kitty-cats on bath day as I approached the nurses' station. I had the proverbial butterflies dancing and all, and I knew damn well I needed to get my game face on. The idea that I might get to spend some time with Mr. Foster just kept intruding and severely distracting me. Not good when it came to patient care. \n\nI checked in and got updated. Mrs. Heatherton was still kicking up a ruckus, Mr. Palmer had been discharged, we had a new arrival, a young woman named Ms. Newcastle who'd been in an auto accident and required surgery to put her back together... and Mr. Foster was still our guest, now awake more often and very grumpy. Or so the second shift said. \n\nRita smiled at me as she was handing out assignments. \"He's yours,\" is all she said. \n\n\"He...\" I prompted. I didn't want to jump to conclusions. \n\n\"Foster, Kayla. You're his primary tonight. Try to keep him comfortable, he's had a long day.\" \n\n\"Did the media get to him?\" I asked. It was one of the things I dreaded. I hated it when the paparazzi turned the hospital into a circus. \n\n\"No, Security won't let them on the floor. Every visitor is getting vetted,\" she told me. \"You'll notice on his chart that he's on solid foods now, but his sleep schedule is all screwed up, so we made a deal with the Kitchen to keep a couple of warmable dinners in our refrigerator. They've got an 'F' marked on them.\" I nodded and looked at his chart while she went on with the others' assignments. \n\nI was going to take care of him tonight. The ramifications of that simple phrase made my nethers clench and flood. I suddenly felt very justified in putting on the pad before coming in, and sticking a few in my purse. I also knew I needed to stay as detached as possible, if I was going to do my job. I couldn't let myself get emotionally involved with him any more than on a nurse-patient basis. ",
        "Too late, a surly voice from somewhere inside piped up. \n\nShut up! I told it. I am perfectly capable of being a professional about this. \n\nYeah, right... I don't think the surly voice was listening to me. Maybe because it knew I'd already decided that if Mr. Foster needed relief, I would try giving him a blowjob. I'd spent some time before work surfing the internet, making sure I had the general idea and trying to find some of the best techniques for pleasuring a man. I didn't want to seem completely na\u00efve. But honestly, based on how swollen he was, I wasn't at all sure I could do some of them, although two good-sized bananas gave their lives at dinner for the cause. \n\n* * * * * \n\nThe door swished open and my angel appeared. The night lights were already on and I'd been trying to doze. I'd spent the evening seeing if there were some way I could hump a pillow to get relief. I'd failed miserably and finally gave up. \n\n\"Hi, Kayla,\" I smiled at her as she approached, reading something in her hand. \"Any way you could put a shot of Jack Daniels in the IV?\" \n\nThat startled her, and she looked up at me very disapprovingly. \"And bypass your liver and kidneys?\" she asked in a very accusatory tone. \"Thank you, but I'd rather not kill you, if you don't mind.\" \n\n\"How about in the mouth, then?\" I teased. She snorted. \n\n\"It is a clear liquid, true,\" she parried. \"It is also about 40% alcohol by volume, which will seriously pickle you if your body can't process it fast enough.\" \n\n\"And...\" she mused, affecting an air of serious reflection, \"the bubbles in beer and champagne would wreak havoc with your digestive system.\" She cocked her head to the side and looked at me as if making a decision. \"No,\" she stated, \"you'd best stick to whine.\" \n\n\"Whine?\" I bit, thinking I'd misheard her. \n\n\"Yeah, you know...\" she smiled and I knew she'd got me. \"You whine about this, you whine about that... little problems...\" She paused and looked at the tenting. \"Big problems...\" \n\nI started laughing. I couldn't help it. It hurt, but it didn't matter. \n\n\"Well, at least somebody's in decent spirits,\" she told me. \n\n\"That's because you're here,\" I told her. I think she might have blushed a little. \n\n\"So you're on solid foods and doing rather well,\" she commented, looking at my chart. \"They don't want the dressings on your arms changed for at least another 24 hours, but I need to do the ones on your back. Are you going to give me any trouble, Mr. Foster?\" \n\n\"Not at all,\" I assured her. \"I'll need help turning over. I can't get much leverage with my arms. And somebody's got to keep my problem out of the way.\" \n\n\"I thought as much,\" she smiled slightly. \"Okay, mindful of the IV, Mr. Foster, and roll up on your side. I'll help you move the rest of the way. Or at least as much as I need, to change your dressings.\" \n\nI decided it wouldn't be a good idea to screw around with her at this point, and I did seriously try to do what she wanted. I sort of succeeded and she sort of helped me finish. Her holding my cock up against my belly as I rolled forward onto it was pleasant... and I didn't get any shooting pains, thank God. \n\nShe started working on my back as I lay there, commenting on how nicely I was healing and how it was surprising for a man my age and so forth. She expressed hope that the vertebra, disc and nerves would soon heal enough to relieve my problem. And she had my bandages changed out in short order. Then she helped me get back onto my back. \n\nShe also took a moment to \"adjust\" me so the sheets weren't pressing on me so hard. Her touch felt wonderful, and she had this slight smile while she was doing it. \n\n\"So, not too shabby for a decrepit, ancient, pervert, huh?\" I asked as she handled me. I couldn't resist teasing her. The chuckle I got was music to my ears. \n\n\"No, not too shabby,\" she agreed. \"A lot of swollen, bruised tissue that's probably being damaged beyond repair by the continued excessive engorgement, but no... not too shabby.\" \n\n\"Well, Angel,\" I backpedalled quickly. \"You certainly have an effective way of putting me in my place.\" \n\n\"Let's not talk about places I might want to put you, Mr. Foster. Okay?\" The words flowed off her tongue with the greatest of ease, and I figured she was just teasing back, but foremost in my mind was Holy Shit!... Did she just suggest what I think she was suggesting??? Oh, fuck... \n\n\"Um... okay,\" I agreed. I wasn't happy about it, but I agreed. \n\n\"Are you hungry, Mr. Foster?\" \n\n\"Excuse me?\" I was caught daydreaming about her, though she wouldn't know that. \n\n\"My Charge Nurse assigned me to you tonight,\" she explained, then broke into a smile. \"So your comfort and happiness is my primary goal. I was wondering if you were hungry?\" \n\n\"You mean for food?\" Please, God, let her be thinking about something else... \n\n\"Well, that, too...\" Thank you, God! Thank you, thank you, thank you! \n\n\"Would you mind closing the door, Kayla? So we can have a private conversation?\" This was too good to be true. She walked to the door, closed it and came back. \n\n\"I have some personal issues to confess, Kayla, and I don't want you to freak out, okay?\" \n\n\"Whatever you say, Mr. Foster.\" She sat on the edge of the bed to listen, studiously avoiding creating any discomfort. \n\n\"Okay, to start, what you did for me last night was wonderful. A miracle. One I will be grateful for, to you, for the rest of my life. I'm sure you can see in my chart, my problem is back. In fact, I think it was you who told me it would be. Now, even without this problem, I'm a horndog... you know what a horndog is, Kayla?\" \n\n\"A sexually excited or desirous person,\" she quoted some dictionary. \n\n\"Yes, and it's a bit more than that. I'm an opportunist, Kayla. Generally speaking, I'll bed anything that wears a skirt and will hold still. Actually, it doesn't even have to hold still. I suppose there are some Scotsmen who may be in trouble.\" \n\nShe smiled at my joke but didn't interrupt or respond. She just listened. \n\n\"So, the thing is, I feel pretty guilty about taking advantage of someone who is sweet and innocent like you. You are damned attractive to me and it isn't just because of the sex. There is something really good about you, which is why I call you Angel. Usually, feeling guilty wouldn't stop me. But it is now.\" \n\n\"I don't want to pressure you into doing anything you don't want to do, and I don't want to suggest that it's your professional duty to provide the kind of pain relief I need. If there's an old bag out there on this shift that would jerk me off, maybe it would be better to tell her to come in and help me out. I don't want to corrupt you.\" \n\nShe looked at me for several long moments, obviously thinking, before she asked me a question. \n\n\"Mr. Foster, how would providing comfort through sexual relief be corrupting?\" The confused look on her face led me to believe she meant the question. She really didn't know. \n\n\"Well, I wouldn't want to play on your emotions, maybe get you to crush on me so you'd want to have a lot of sex with me, maybe even after I get the fuck out of this hospital. I don't want to screw up any kind of normal life you might have. How old are you, Kayla?\" \n\n\"Twenty-two, Mr. Foster,\" she told me. \"I'll be twenty-three next month.\" \n\n\"I'm sixty-six, Kayla. Three times your age. I feel so good about you, I might try to go for a romantic relationship; sweep you off your feet with my experience and sophistication. Teach you all kinds of ways to experience pleasure, including some very naughty ones. I would try to seduce you to be mine and only mine. And that's all the above-board stuff. That's part of how I'd screw up your life.\" \n\nShe was silent again for quite a bit before she answered. Then she derailed the conversation. \n\n\"Mr. Foster, before we go on with this discussion, would you mind if I checked your problem?\" \n\nShe was my nurse and I was interfering with her work, so I just shrugged and leaned back. She took down the covers and gently held my throbbing cock. \n\n\"I take it the pain is back,\" she commented. \"Not just the erection.\" I nodded. She leaned down to take a closer look. And put half my cock in her mouth. \n\n\"Kayla! What are you doing? I don't want to hurt you!\" She didn't answer me. \n\nInstead, she began a languorous blowjob. Honest to God. I didn't ask her to, I didn't suggest it, nothing. She just started sucking on me and driving me nuts. And doing an incredible job. \n\nNot only was she sucking up and down on me like a popsicle, she was running her tongue around both my shaft and my glans. And she'd suck up against my flare until it popped out of her mouth, then go right back down again. I was so ready for this, I was not going to last very long. Maybe that was her intent. \n\nThen she took it to the next level. Apparently encouraged by my increasing moans and writhing, she started taking me deeper. It took me a few moments to realize she was trying to deepthroat me. \n\n\"Kayla, no, please,\" I told her. \"You're going to hurt yourself that way. You said you don't have any experience. I don't want to be the reason you end up in this hospital's ER because of a throat-fucking.\" \n\n\"Don't worry, Mr. Foster,\" she told me, coming off my cock for a moment. \"I'll figure it out. I've done a lot of reading.\" \n\nOh, my God, please help this angel not make a mistake and hurt herself, I pleaded to the Almighty. I don't ask for much and you got no reason to give, but please, if you're listening, don't let her get... \n\n\"O'M'Gmmphh!!\" I had slammed a pillow over my face to mute the outcry. I was going to cum. And I realized her lips were brushing my ball-sack. This little angel was determined, and her throat was bulging because I was down it. I looked for the call paddle. I wanted to be able to call someone if she started to choke or something. \n\nThen I went over. There just wasn't any choice in the matter. And that tenacious beauty stayed right where she was and milked me for every drop. I came so hard I had little lights flashing in my eyes - and they were closed. I opened them and looked at her and I swear I was falling in love. Not just lust. Love. And that was going to be bad. \n\nI watched as she withdrew my now shrinking hard-on from her mouth, licked her lips, turned to me and smiled. \n\n\"Was that okay for my second time?\" she asked. Oh, God... \n\n\"Kayla that was wonderful! And because you are so wonderful, you're going to have to help me to the bathroom in a moment,\" I told her. \"But why didn't you listen to me? My hornies are going to screw you up. I don't want that.\" \n\n\"I like you, Mr. Foster,\" she told me as she started to tidy up, getting ready to take me to the head. \"You fascinate me. I may even be 'crushing' on you, like you said. But I don't see anything wrong with that. And it has nothing to do with you saving the Schneider family. I'm learning a lot from you and I appreciate it. I don't think there's any way you're corrupting me.\" \n\nI decided not to argue. This was one smart woman. \"This was another first time for you, Kayla,\" I decided to point out. \"Deepthroating. You didn't do that before.\" \n\n\"I didn't know if I'd be able to,\" she admitted as she moved to help me stand up. \"Half the internet videos make it look easy, the other half painful. I think you're somewhere in between.\" \n\nI just shook my head as she helped me make my way to the toilet. I sat there thinking about this angel - this real angel - and hoped I wasn't screwing her up. It was out of my hands, pun intended. She helped me get back in the bed and tucked me in, making sure to leave plenty of easement around my cock, even though at the moment it was blessedly flaccid. \n\n\"Who did you say was on that boat?\" I asked. Her comment had just bubbled to the surface of my brain. \n\n\"The Schneider family,\" she told me. \"Stephen Schneider and brood. Grandson of Roy Schneider, ex-Governor of the islands and namesake of this hospital.\" \n\n\"Holy fuck...\" I mumbled. \"And I called him an Asshole...\" \n\n\"Goodnight, Mr. Foster,\" she smiled as she got ready to leave. \n\n\"Alexander,\" I told her. \n\n\"What?\" she asked, stopping in confusion. \n\n\"My name is Alexander. Or Alex for short. If you intend to stay this intimate with me, maybe you should start calling me Alex.\" \n\n\"Okay, Mr. Alex Foster,\" she smiled and I melted. \"Sleep tight.\" \n\nShe left and I fell out. \n\n* * * * * \n\nOh, my God, I don't believe I did that! I was sitting in a stall in the women's room and masturbating. I needed the relief and I needed it badly. Taking care of Mr. Foster... Alex... was overwhelmingly exciting, and yet I needed to set my needs aside and take care of him. I could get my own relief later. \n\nHe was huge! He'd felt bigger in my throat than my hand, or just looking at him. And I did it! My butterflies were doing a little Happy Dance. I'd managed to take him all the way down my throat... and make him cum! Guess I was becoming a good little slut. \n\nExcept I didn't feel like a slut. I felt like a healer... a person who could bring him the blessed relief he so richly deserved. Maybe he was right, maybe I was an angel. At least, functionally, for him. Really, all I could hope for was to be the best for him that I knew how. \n\nAnd speaking of best, God!... the memories of stroking and sucking him had me so wired, I was panting and shaking from my third crashing cum when Rita's voice echoed in the bathroom, reminding me that when I was done, we had other patients to look after as well. \n\nOne thing he said kept bugging me as I did the rest of my rounds and wrote out my notes. Well, actually two things. But the first was him pointing out our age difference, like somehow that mattered. He'd admitted he felt so good towards me, he might see me romantically. Well... what was the matter with that? \n\nHe was a handsome man, even banged up. He was caring, or he wouldn't have risked his life to save the Schneiders. I guess he might be a pensioner, but he obviously took care of himself. Other than outliving him, I didn't see a problem with being \"swept off my feet\" and falling in love. But he did. \n\nI'd have to be careful about that. I'd have to be sure my \"crush\" on him didn't show. He was just my special patient with special needs who happened to be the sexiest man I'd ever met. \n\nYeah, right... that surly part of me piped up. You've fallen for him and you know it. He is way out of your league. Hell, you're still a virgin. Want to guess how many women he's bedded in his lifetime? Why would he be interested in shy little inexperienced you? \n\nThat was the other thing. I was inexperienced, and Mr. Foster... Alex... was trying valiantly to protect me from myself. I really didn't like that. I was right on the edge of changing my virginal status and getting it out of my way. Problem was, I'd want it to be him. And he wasn't exactly in the best of circumstances for deflowering me. That particular part of the problem ate at me for quite awhile. I needed an answer... \n\n* * * * * \n\nKayla had worked her angelic magic again. I went out like a light, missed breakfast and woke up around noon, hungry and with that damned erection. And because it was Saturday, Louise wasn't working. I got Nurse Nancy instead. Probably a cousin to Nurse Ratched. She was cold and tyrannical, and repeatedly made comments about my \"condition\" requiring catheterization. If she even tried, she'd find out I didn't need my bandaged hands to defend myself. \n\nAnyway, the time I spent not dodging Nurse Rat-shit, I spent thinking about Kayla. I was really starting to obsess on her and for all the wrong reasons. In retrospect, I think I'd fallen for her and was trying to screw it up so I didn't screw her up. I mean, c'mon... how many December-May relationships work out, anyway? She'd outlive me, having to take care of me while I wasted away from some stupid disease or other, and if she wanted kids, I wouldn't be around very long to help raise them... \n\nThis is the kind of obsessing I was doing. I was already imagining us married and with kids, and all the things wrong with that scenario. Plus the fact that she had to be a virgin, based on her comments about the handjob and blowjob being her \"first\" and \"second\" sexual experiences with a male. \n\nAnd yet, I was desperate to see her again. Screw the erection problem, she lighted up the room when she walked in, even with all the lights off. She'd gotten to me, and I wasn't doing a very good job of fighting it off. \n\n* * * * * \n\nI was afraid Nancy would mess things up for Alex. I mean, Mr. Foster. It was Saturday, going into Sunday, and even though I was still on my normal shift, Rita wouldn't be there tonight. Barbara would be the Charge Nurse, and I hoped she'd realize how important it was that I get assigned to him. Nancy would have had the first shift, and that woman was a battleaxe witch if ever there was one. She liked screwing with patients because she could. I had to have faith that Mr. Foster could stand up for himself. \n\nSecond shift on the weekend would have been Mary, and anybody she'd assigned to him would have been fine. They were all caring women... well, I suppose Tony isn't a woman, but he's still caring... and I don't think they would have given him any trouble. \n\nSo I was pretty nervous when it got to shift change and we were getting turnover. My guess is, Rita must have said something to Barbara, because I got assigned to Mr. Foster without any questions or comments. I got his chart and he seemed to be doing pretty well. His vitals were all pretty normal, his food intake was down some, but he was on a normal diet, and his back was doing much, much better. \n\nI had to smile when I saw Nancy's clinical recounting of how Mr. Foster refused the catheter, with promises of severe damage to favorite parts of her anatomy if she tried. He probably should get used to the idea of a catheter, I mused as I read. I'm not going to be around to take care of him all the time, and God knows how long it's going to take that vertebra to heal. \n\nI took care of my other patients first, making sure everyone was as comfortable as possible, which sometimes isn't much when you're recovering from some kind of trauma. But I did the best I could. I always did the best I could. Then I went to see Alex. \n\n\"Hi!\" I greeted him as I entered and closed the door. He was sitting up, partially, and the night lights were on. \"How's my favorite patient?\" \n\n\"Bored,\" he told me bluntly. \"I can't hold a book to read, I hate television, and conversation around here is limited to what's wrong with my body and what should be done about it. And I still can't get the taste of Nurse Ratched out of my mouth.\" \n\n\"But...\" and he grinned, \"my favorite angel has arrived and all will be right with the world shortly, after she purges the room of all those evil spirits.\" \n\nI had to smile as I checked his vitals and the dressing on his back. Most of the incisions from removing the shrapnel were well healed. This man had amazing recuperative powers, especially for a man in his mid-sixties. My father was nearing his sixties and he wasn't in nearly as good of a shape. Dr. Carlton would see to the burns on his arms on Monday. I suspected he'd be in hospital for a good month for those. Deep partial thickness second degree burns, according to the ER notes. Those could leave scarring, though he should have full use of his hands and arms. \n\n\"Mr. Foster...\" \n\n\"Alex...\" \n\n\"Okay,\" I smiled, \"Mr. Alex. Do you have anyone living with you at home?\" I was wondering about wound care after they discharged him. Plus any physical therapy that might be needed. \n\n\"Why?\" he smiled. \"Are you applying for the position?\" I actually blushed. I couldn't help it. Partly because it was so suggestive... and partly because it was so attractive. I really needed to stay professional with this man. ",
        "\"Not immediately,\" I joked. \"You may need some help tending your wounds and helping with physical therapy after you are discharged,\" I told him. \"I was just wondering if you had someone.\" \n\n\"Let's see...\" he mused. \"I'd tick 'em off on my fingers if I had any, but they seem to have disappeared under a bunch of gauze and tape.\" \n\n\"I'm sure Dr. Carlton will find them for you tomorrow. Monday, that is,\" I reassured him. \n\n\"Well, until then, let's see... no wife, no kids, no parents, one sister in California with her brood, one brother in Paris with his brood, no girlfriend and no boyfriend. Or fuck buddies. Nope... I'd have to say I live alone. Unless you mean pets, too, in which case there's Geri and Freki, my Great Pyrenees dogs currently under the care of my neighbor Marcy, who is a nature freak and thinks they should never have been trained to hunt.\" \n\n\"Does that make you Odin?\" I asked as I finished the last of the dressings. \"You can lie back now.\" \n\n\"My God, a woman who knows her mythology!\" he exclaimed. \"You just keep getting better and better! You sure you don't want to apply? You'd have to move to Puerto Rico, though.\" \n\n\"Mr. Alex, you are a very seductive man,\" I told him and I heard him mutter \"I hope so\" under his breath before I went on. \"I'm pretty sure I'm not looking to settle down right now, though thank you for the offer.\" \n\n\"Nuts!\" That one I was meant to hear. \n\n\"There's food available when you get hungry,\" I told him, \"and according to your chart, you've been having trouble resting during the day. I'll be back later to help with that, and just push the call paddle when you want to eat.\" I know I was being a bit saucy when I teased him about helping him sleep, but seeing the way he lit up made it okay for me. I finished tucking him in and then left to go check in on Mr. Perkins, a new arrival. A crotchety old bugger who'd had his prostrate out and was making life miserable for everyone on the ward. \n\nI was hoping Barbara could get his doctor to authorize sedating him. Instead, thinking about what Mr. Foster had said let me ignore the old coot's ravings while I dealt with him. I was too busy warring with myself. \n\nI knew I was very attracted to Mr. Alex Foster. I also knew it was absolutely the wrong thing to do. I knew Mr. Foster would be a good choice to relieve me of my virginity. I also knew it was absolutely the wrong thing to do. I knew that moving in with him, married or not, and taking care of him while a real relationship had a chance to grow was also very, very attractive. I also knew it was absolutely the wrong thing to do. \n\nI was getting very tired of knowing it was absolutely the wrong thing to do. \n\nWell, I'd already made up my mind about the virginity. And I'd figured out how to do it so that I didn't risk further injury to his burns, and could keep most of the strain off his back. If he'd cooperate. Tonight I had come prepared. A thoroughly shaved to baby-bare pussy. Old-fashioned stockings and garters with panties and maxi-pad over them. The dress style of our uniform. Raise the head slightly, lower the knees, drop the side rail and I'd be set... \n\nI needed to wait until he wanted to drop off, though... \n\n* * * * * \n\nTalk about feeling guilty... looking forward to getting a blowjob from Kayla was about as wrong as it gets. Even if I did have the excuse of it being a medical necessity so I could piss and get some sleep. \n\nWell, I'd gone light on dinner as I did with all my regular food meals, because I was not looking forward to taking that dump Doctor What's-his-name wanted me to have. The erection was still incredibly painful, but I was starting to get used to it. Which in and of itself is a sad commentary on my daily life at that point. \n\nBy the way, simply willing one's body to heal isn't all that effective. I know a \"Positive Mental Attitude\" is important, but there are some basic mechanics that need tending to as well, and the idea of surgery to \"fix\" the vertebra was becoming acceptable. I was musing on what I considered my despicable state of affairs when my angel returned. \n\nShe came up to the bedside and smiled softly as she asked, \"how are we doing, Alex?\" My heart skipped about three beats. She'd actually called me Alex. \n\n\"Ready to take a piss and sleep,\" I told her. \n\n\"Yeah, you take the piss, alright,\" she smiled. She went back to the door and closed it before returning to me. \n\n\"So do you,\" I told her and she smiled. \n\n\"I'm about to...\" she muttered, but I caught it. Aloud, she said, \"so let's look at our problem...\" \n\nShe gently raised the head of the bed a bit and I had to admit, it did feel better to be sitting up more. Then she lowered the knees a bit, but left them with a comfortable, supported bend. Then she lowered the side rail and I thought, oh, Momma! Yes! Here comes the blowjob!... \n\nShe peeled back the covers, carefully, and gently handled my ridiculously swollen member. The purple and mottling hadn't gone away at all. In fact, the only time it did was in the post-orgasm stage where I went flaccid. Despite the pain, though, her touch felt wonderful. And it felt even better when her warm, wet, soft mouth descended on me and the waves of pleasure made a valiant attempt to overcome the pain. I lay back, but because of sitting more upright, I had an unimpeded view of her marvelous mouth working me over. \n\nShe was incredible. I watched as she nearly brought me off, then paused for a bit. She brought out a bottle of some sort of lube and coated me well, going back to a slow, gentle handjob. I could feel everything pulling up and although it would have been nice to cum in her mouth, her hands weren't bad at all. I watched as she paused again, bent over and dropped something on the floor, then crawled in with me... \n\nCrawled in??? She was crawling into the bed and straddling me, her uniform skirt pulled up and her stockings and garters framing a beautiful bare pussy. And I realized what she was going to do. And what she'd dropped on the floor. \n\n\"Kayla, don't!\" I tried to tell her. \"You're a virgin! I'm going to hurt you! Please... your first should be someone special!\" \n\nShe raised up over me and positioned my turgid manhood right at her slit and rubbed me with her pussy lips a couple of times while she fixed me with an almost feral stare. \n\n\"You are someone special, Alex,\" she told me. \"I've wanted you since the first time I got intimate with you. You refuse to be a hero because you saved lives. Well, you're going to be my hero and you're going to get rid of my pesky maidenhead... and if this big fucker won't do it, I'll end up dying intact!\" Then she sat down. \n\n\"Owww!!... Son of a bitch, that hurt!\" She had paused as she slowly adjusted to my undesired enhanced size, and I saw the tears beginning to brim in her eyes. \n\n\"Kayla, please...\" I tried again. \"Please don't hurt yourself!\" I had a hundred flavors of Guilty rampaging through me. \n\n\"Just hold still, Alex,\" she told me. \"The pain is starting to go down.\" Then she leaned forward and kissed me... and I realized why she'd raised the head of the bed. \n\nI had never had someone own me with a kiss like that. She lit up every good feeling in my entire being. Her taste, her scent, her touch, her soft breath... all thrilled me to my core. She slipped me her tongue and it got even better. More intense, more... well, loving. And she kept kissing me as she slowly rose, then fell, on my shaft. The hypersensitive one buried deep in her used-to-be-virginal pussy. \n\n\"Oh, God, Alex...\" she moaned quietly. \"You feel so fucking good! I didn't know it could be this good.\" \n\n\"You should feel it from my side,\" I tried to joke with her. \"I've got my dick stuck in a hot, tight blast furnace that's squeezing me in half like a tube of toothpaste...\" \n\n\"Is that a complaint?\" she moaned a little louder as she sped up fucking me. And it was her fucking me. I was just lying there hoping I wasn't doing some kind of internal damage to her. And trying not to cum. She felt so incredibly good, I wasn't going to last very long. \n\n\"No, no complaint,\" I hurried to reassure her. \"Just shock and awe. Just completely blown away by the most marvelous feeling cunt I've ever known.\" \n\n\"My cunt, is it?\" she asked, speeding up more and making it nearly impossible for me to hold back. \n\n\"Sorry,\" I apologized. \"Please don't let my crudeness offend you...\" \n\n\"Well, Alex...\" and she was panting now. \"I want you to fucking cum your brains out in my hot cunt! I want you to spend your load deep in me... fill me with your seed... make me trip over and cum my fucking brains out all over your hot cock!\" \n\n\"Make me your bitch, Alex Foster,\" she went on. \"Make me your filthy little cum-dumpster!\" \n\nI got the point. And I told her so. \n\n\"Kayla, you don't have to talk dirty to me,\" I told her. \"I love every inch of how you feel and I'm not going to be able to hold back much longer. But please, tell me... you are protected, right? 'Cause I'm not.\" \n\n\"Nope,\" she told me flat out. \"Now, cum in me, Alex! Make me your little virgin whore!\" \n\nAll the panic and fear in the world could not have stopped my orgasm. And as I hit the inevitable, so did she. Which only spurred me on more, and then me her. I hooked a pillow with my arm and pulled it over my head to muffle my screams as the pain and pleasure rocketed through me, but nothing muffled the sweet, sweet sound of my Angel of Mercy cumming all over my cock. \n\n\"Oh, God, Alex!... Oh, God! I'm gonna... gonna... Oh, Fuck! I'm going to CUM!! FUCK! CUMMING!!\" \n\nHer hot pussy pulsed hard on me as she bounced up and down, forcing my ropes of jism deep into her, forcing me to keep spurting my seed into her... \n\nUntil a shot of pain went through my back and ass and shoulders and head that almost made me vomit through my scream. I had never felt anything so excruciatingly horrible in my life. I felt like someone had torn my spine out and set it on fire. \n\nKayla must have sensed something was wrong because she slowed down and then stopped, taking the pillow off my face. I don't know what her expression was, because my eyes were closed, but her words will echo in my mind forever. \n\n\"Oh, God! Please, no!\" She kept repeating that prayer as she scrambled off me and off the bed, falling into nurse mode and doing a quick assessment of my vitals as she hit the call button. Not the patient one. The other one. The one that had her boss charging through the door in a couple of seconds. \n\n\"What happened?\" That would be Barbara, the Charge Nurse. \n\n\"Oh, God, Barbara, I think I've hurt him! Bad!\" was the first thing Kayla chose to tell her. \n\nThinking about it later, I reconstructed what Barbara must have seen. I'm lying on my back with my head thrown back, in agony. My erect cock is dancing in the air covered in my cum and Kayla's blood. And there's probably blood on the sheets. Kayla's panties are on the floor, next to the bed. And a horrified Kayla is starting to unload as if she'd just killed a patient. \n\nGod bless that woman to her dying day, she didn't say a word to Kayla. I fought down the pain as she moved up next to the bed and asked me, \"can you talk, Mr. Foster?\" \n\n\"Yes,\" I grimaced, \"and don't blame her. Ow, fuck!!\" \n\n\"Your back or your penis, Mr. Foster?\" \n\n\"My back. Most of me. Something cramped in my back and it hurt like hell...\" I got a few more deep breaths as Barbara looked at my vitals on the machines. \"It wasn't Kayla...\" I had to add. \"Something in me...\" \n\nI could feel the erection subsiding and right behind it came the need to piss. \n\n\"I'm going to need help, ma'am,\" I told her. \"I have to piss and I'll need help getting to the bathroom.\" \n\n\"I don't think moving you is a good idea, Mr. Foster,\" she told me, and I know she was being professional, but I didn't care. \n\n\"I can move, ma'am,\" I told her. \"I'll fucking do it on my own if I have to. It would be better if you helped.\" I guess someone had warned her about my temper. \n\n\"You will let Kayla and me do the lifting, Mr. Foster,\" she informed me, \"and we are going to go slow so that I can assess whether something additional has been damaged.\" \n\nI agreed and the two women helped me get out of the bed. When I got to the edge of the bed, Nurse Barbara handed Kayla some kind of wipe and told her \"clean yourselves up. Then we'll move him.\" Kayla complied, starting with wiping me down and then wiping herself while Barbara went around behind me and looked at the dressings on my back. \n\n\"No external evidence of hemorrhaging,\" she commented as she came back around front. I looked over at Kayla and I had never seen her scared like that before. \n\n\"It's nothing you did,\" I tried to tell her, but she just gave me one of those looks women are good at, that tell you to can it because you're full of shit. They got me to the toilet and stepped out while I pissed, being a good boy and urinating into the measuring cup. I don't think I was supposed to hear their hushed conversation outside the door. \n\n* * * * * \n\n\"Kayla, I'm not going to report you,\" Barbara told me as we waited outside for Alex to finish. \"I just need to know what happened. I can make my own guesses from the blood, cum and panties but I'd rather you just level with me. I want to make sure Mr. Foster is okay.\" \n\n\"I screwed up, Barbara,\" I admitted. I was having a hard time talking. My heart was in my throat and my guts wanted to puke. \"I've been relieving his erection so he could pee and get some sleep by helping him get off. First it was a handjob, and then a blowjob. I guess I'm what he called 'crushing' on him, and you see, well... I was a virgin and I wanted him to be my first and it seemed like a good way to do it.\" \n\n\"And...\" she prompted me. \n\n\"And it was fine until we both came together, kind of hard, and all of a sudden he went real stiff and was screaming into his pillow and it seemed something was wrong. I mean, he muffled his cums before with the pillow so he wouldn't drag you all down here, but this one was different. When I took the pillow off his face, he was grimacing really badly. Like 10 out of 10 pain. I... um... dismounted... and checked his stats and he was having a pain reflex kind of reaction. BP, pulse, respiration, O2 saturation... the works.\" \n\n\"So I called you. I know I'm probably getting fired, but I needed your help. He needed your help.\" I didn't know what else to tell her. She looked thoughtful for a moment before she spoke. \n\n\"So you two were engaged in consensual therapy,\" she stated, and I began to see the wisdom of her ways. \"And something happened in his back to cause extreme agony. But he is mobile, and only wincing when moving, and otherwise seems quite capable.\" \n\n\"Yes, ma'am,\" I told her, and I was figuratively, if not literally, hanging my head. \n\n\"Don't ma'am me,\" she told me. \"How's your pussy?\" I was a little surprised at the question, but answered her honestly. \n\n\"Sore,\" I told her, \"but happy. He is a bit on the large side...\" That got a snicker from Barbara. \n\n\"Hell of a way to punch your V-card,\" she told me. \"Look, when he's done, we're going to help him back to bed and if he wants, we'll hit the PCA for him. Then you are going to go to the locker room and grab a shower. After that, you can finish your shift. We will keep tabs on whether there's any ensuing problems from tonight's incident. If nothing's wrong, nothing gets said. Or written. Am I understood?\" \n\n\"Yes, ma'... um, Barbara,\" I told her. \"And thank you.\" \n\n\"I'm guessing from the way he came to your defense, even still in pain, that there's something special going on there. But, please Kayla... be more careful.\" \n\nI nodded and we waited for Alex to finish up. \n\n* * * * * \n\nI felt bad for Kayla. Really bad. She was taking on all this responsibility for me and doing more for me than anyone, and then one small thing happens and it all comes tumbling down on her. Except for that Nurse Barbara. She was rapidly becoming my second favorite nurse. I was going to have to get her on the side and make sure that no matter what happened with me, that Kayla wouldn't get hurt by it. \n\nI pretended I hadn't heard their discussion, and they helped me back to bed after I was done. Kayla tucked me in with Barbara standing by, and other than extreme soreness in my lower back, I wasn't any worse than before. In fact, the excruciating twinges were gone. Kayla offered me the PCA bump and I decided it wouldn't hurt. I wanted to sleep, anyway. My horndog mind was flooded with memories of my wonderful angel giving me her virginity. The awful thoughts about the consequences would come later. \n\nI wished them both a goodnight and settled back. Kayla adjusted the bed back where it was originally and then surprised the hell out of me by leaning over and giving me a loving and lingering kiss - right in front of her boss! And I melted into it. Right then I didn't give a rat's left testicle about proper. I took her face in my bandaged arms and tried to pull her to me. She just gently smiled as she broke the kiss and eased my arms down alongside me. I was falling for this girl and falling hard. Woman, actually, I thought. Actually, I amended, she was a woman long before giving me her cherry. Such were my musings when the morphine crept up on me and I fell out. \n\n* * * * * \n\nBarbara had a strange sense of humor. She noted \"bio spill\" on my log when she sent me to the showers. As I stood in the hot water raining down on me, some hard realities started to set in. \n\nFirst off, I had been incredibly irresponsible. Between the risk of injury to my patient and the fact that I was in the middle of my cycle and not protected, there could be major repercussions. Add to that, Barbara knew exactly what had happened and if word leaked at all, I could end up fired, or worse, charged. \n\nThen there was my relationship to Alex... Mr. Foster. I wanted desperately to believe he loved me. He kept pointing out how it would be wrong, but that just made me think all the more that he did. I didn't have much experience in the love department, but I wanted to believe that what I was feeling for him was exactly that - true love. \n\nBut he was right that relationships with wide age discrepancies had long odds of working. That didn't mean they couldn't. Just that it would be difficult. Plus, if we were to have children, he'd probably die while they were still young, putting me and them in a very strained position. Children? What the hell was I thinking? That was really getting ahead of myself. \n\nI resolved to work things out before there was any more drama or trauma. I would see him again tomorrow night and then I was off Monday and Tuesday, and back on Wednesday. By then, Dr. Carlton would have assessed his progress and there'd be a better idea of what Alex's treatment plan would look like. Maybe I was just being hormonal after his wonderful fucking, but I was starting to think it would be a good idea if I weren't around for the rest of his rehab. \n\nOr maybe at all. Maybe he had it backward and I wasn't the one who would get hurt by us falling in love. Maybe it would screw up his life, put him under pressure to meet my needs, fantasized or otherwise. Maybe, maybe, maybe... my head was spinning with maybe's. Maybe I shouldn't be here at all. Maybe I should go back to my folks' place in Aibonito. I could work at the Mennonite hospital there while I got calmed down and figured out what to do with my life. And it would save my friends here from having to fire or charge me... ",
        "I'd see Alex tomorrow night, and then I'd make up my mind. I was feeling so torn, it was hard to concentrate on the rest of my shift. \n\n* * * * * \n\nI woke up earlier than usual after a \"Kayla treatment\" and was very hungry and had to piss like a racehorse. And without the painful erection. \n\nThat stopped me cold. \n\nI didn't have the erection. I didn't have the God-awful pain. I was cramping with having to piss, but the rest of it was gone. I hit the call paddle. \n\nI got Nurse Rat-shit again. Just my fucking luck. I told her I needed help getting to the bathroom and she just gave me a disdainful look and handed me a piss-bottle. I told her, no, I needed to go to the toilet and if she wouldn't help, I'd bloody well do it myself and started to work my way out of the bed. I guess that got her attention enough that she called two of the other nurses and they, rather than Nurse Nancy, got me to the toilet where I managed the great relief of the pent-up piss and also managed to give Dr. Carlton his precious stool sample. \n\nMy back still hurt where Kayla and I had had our \"accident\" - but the excruciating pain was gone. I tried telling Nurse Nancy about it but she just blew me off. So I told her I wanted to see whatever doctor was on call and she told me she'd see what she could do... which turned out to be nothing, since she didn't deem it medically necessary before Dr. Carlton saw me the next day. That woman was seriously pissing me off. \n\nI bided my time until second shift imagining all the ways I could make Nurse Ratched's life miserable, beginning with getting her fired for unprofessional conduct and including a lawsuit for reckless endangerment. It kept me amused. \n\nThe second shift Charge Nurse, Mary, was an okay gal and when I explained my change in condition, she made sure to note it. She also, unfortunately, asked me if I had any idea what might have caused my change in condition and idiot me, without thinking, told her I might have popped something back into place when Kayla and I were fucking. \n\nHer expression froze and she stopped writing. \n\n\"I did not say what you thought you heard,\" I hurried to explain. \"I misspoke myself. I meant 'fucking around' like when she was trying to move me. Last night I was trying to sit up or roll over so she could change my dressings on my back and I think something popped.\" \n\nShe looked down at my chart before informing me that Kayla changed my dressings two nights ago. \n\n\"Then maybe it was helping me get to the bathroom,\" I temporized. \"Anyway, that's the only thing I can think of...\" \n\n\"I'll bet...\" she murmured to my chart as she finished a couple of notes. \"Well, we'll have dinner for you between six and seven, Mr. Foster. Try to relax until then. You're blood pressure is a little high.\" \n\n\"It'll come down, now that you're here,\" I told her and apparently the implication wasn't lost on her. She smirked a little as she nodded and left the room. I lay back and went back to daydreaming about my Angel of Mercy. I was 99% convinced she's the one that fixed my back with the vigorous fucking. I just wasn't sure how to communicate that to the doctor without getting her in trouble. I was going to have to make up some kind of lie. \n\n* * * * * \n\nBarbara caught me on my way in. \n\n\"You and Mr. Foster need to be a little more careful about describing the miracle you worked on him. People are starting to put two and two together,\" she told me. \n\n\"What are you talking about?\" I almost whispered. \"What miracle?\" She handed me his chart. \n\nI glanced at it, then looked again. And again. \n\nThe erectile problem was gone and he was going back to \"normal\" with no further evidence of the severe pain. His only continuing problems were the healing burns and shrapnel wounds. \n\n\"Is this a joke?\" I asked. I couldn't figure how any of the staff could be that cruel. \n\n\"No joke,\" Barbara told me. \"Your antics appear to have snapped something back into place and relieved the pressure on the nerves. He's no longer the guy with too much dick and not enough hands. Now he just doesn't have his hands.\" \n\n\"Wow,\" I breathed. \"I guess that's pretty good.\" \n\n\"Agreed,\" Barbara told me. \"But he's let slip about fucking and you could end up in a lot of trouble.\" \n\n\"I'll, um... I'll, uh, fix that tonight,\" I told her. \"And thanks for keeping it off the official record.\" I knew now what I was going to have to do. \n\n\"You've got him tonight,\" she told me, leaving me with his chart. \"Make him comfortable but don't get caught.\" \n\n\"Yes, ma'am!\" I fake-saluted and she smiled, then walked away. \n\nI could leave my pets with my girlfriend Marisol, until I could get Marcus to sail them to me in Puerto Rico. I would go to my parents' place and commandeer my old bedroom. They'd be happy to see me, although I'd get the Third Degree about why I'd left St. Thomas. I could probably chalk it up to boyfriend trouble and they probably wouldn't push too hard... except for Mamma. She'd want to know all about this first boyfriend of mine and whether she'd have to have him beaten up. \n\nI would just get out of the way and let it all blow over. Alex could go back to his life after he healed and not have to worry about me stalking him or some such. I'd ask for personal leave, on the off-chance that I might want to come back here to work, but if I had to quit, so be it. I would normally be off until Wednesday anyway, so me not showing up after tonight wouldn't alarm him... \n\nWith that settled in my head, I felt a lot calmer. I went ahead and did my other patients first. I wanted some unrushed time with him. I also broke out the little yellow hair ribbon that we nurses recognized as a \"Do Not Disturb\" sign. It was usually for when one of us had a partner in and wanted a little privacy for a quickie, or needed to crash for awhile on a slow night. \n\nI wanted the privacy, but it wasn't going to be a \"quickie\" if I could help it. \n\n\"Hey, Angel!\" he greeted me as I walked in. \"Thank God you're back! You are a certified Miracle Worker and I'll testify to the bloody Pope for you!\" \n\n\"I think you should keep your testifying between us, Mr. Foster,\" I told him. \"Rumors are starting and I could get fired. Or charged.\" \n\n\"Oh, shit...\" was his simple response. \"Well, whatever it is, I'll deny it all.\" \n\nI smiled and shook my head as I went and checked the monitors and his drip. \n\n\"I hear you're in a lot less pain these days,\" I told him as I faced away so he couldn't see my silly grin. \n\n\"Yeah, some Fairy Godmother came by with her Magic Wand and beaned me on the noggin.\" I could hear the smile in his voice. \"When I woke up, I was a lot more comfortable. Too bad I didn't get the license number of that FGM, though. I'd like to thank her someday.\" \n\n\"I think she should be thanking you,\" I told him as I turned back to him. \"You were probably the high point of her career.\" \n\n\"I doubt that,\" he told me with a gorgeous smile. \"I think she's probably got a lot more highs in her.\" \n\nThat smile melted my nethers and was going to make what I had to tell him later, that much harder. \n\n\"Well, Alex...\" I stressed it on purpose. \"I've just come on shift and I have quite a bit to do.\" \n\n\"I could have sworn you'd cum on shift last night,\" he smiled and he was starting to look boyish cute - which is a good trick for a man in his sixties. \"Doing it just now must mean you can't resist me.\" \n\nYou have no idea, I thought. \"I'll be back later, when I can spend some time with you,\" I told him. \"In the meantime, is there anything I can do for you?\" \n\n\"You could get naked and crawl in bed with me,\" he suggested. Okay, so that got a snort out of me. \n\n\"Later,\" I told him and the surprised look on his face was priceless. \"Anything else?\" \n\n\"That shot of Jack?\" he asked hopefully. \n\n\"Mr. Foster...\" I had to pretend to be cross. \n\n\"Okay, alright, already,\" he shrugged. \"You can't blame a man for trying.\" \n\n\"No, you're right, I can't,\" I admitted. \"If you need anything, hit the call paddle. I'll see you in a bit.\" \n\n\"No worries, luv,\" he answered softly with a nod and I headed out to find Barbara. \n\nI needed a confidant. Somebody who knew the system and could help me find and file the right paperwork, and do it in a hurry. I wanted to be off St. Thomas before Wednesday night. That meant pushing the leave through on Monday, turning over any patient notes or anything I had that wasn't on the ward by Tuesday and being on a plane or boat by Wednesday. I also wanted to tell her what I intended to do tonight and have her make sure we weren't disturbed, but so I would have backup in case something went wrong. \n\nBased on her initial reaction, I was really, really hoping she was the one. \n\nIt turned out she was. We had a lull and I pulled her down to the lounge for a cup of vending machine coffee. I told her I needed to level with her and have none of it screw up Alex. Mr. Foster, that is. She agreed, as long as whatever I needed to share didn't fall under the mandatory reporting requirements. That one was kind of iffy, but since I'd had Alex's consent and he was lucid and able to give it freely, and had actually, in a way, already asked me, I figured I could skirt the issue. \n\nSo I told her. Starting with my original intent to fuck him again, and now since the erectile problem had disappeared, to try to make love with him. Actual, real, honest-to-God lovemaking. Naked together and exploring each other and letting down the shields and being intimate with each other. And I told her about his request that I crawl into bed with him, naked. She looked at me for quite awhile before responding. \n\n\"This stays between us, Kayla,\" she began. I was confused, because I'd already asked her for complete secrecy. When she went on, it got clearer. \"That's how I met Jack.\" \n\n\"Jack?\" I asked. \"Your husband Jack?\" \n\n\"Yes, my husband Jack,\" she confirmed. \"I was working as a rehab nurse, he was in because his left leg was paralyzed from an accident. The doctors were trying to restore the full use of his leg. The poor man got hard every time he'd see me, and it was worse whenever we had contact. It started with handjobs to relieve his frustration, then blowjobs, then fucking. I didn't lose my virginity to him, but I did find out along the way that he was pretty good at cunnilingus. After he'd recovered, we ended up getting married. So I can empathize with your position. What exactly do you want from me?\" \n\n\"Well, when I've got the yellow ribbon on the door, I'd like you to make sure no one disturbs us,\" I told her. \"And in case something goes wrong and I hit the emergency call, I'd like you to be the one that shows up. First, anyway. After that, I need some help with paperwork.\" \n\n\"Paperwork?\" She was obviously confused. \n\nSo I told her about my plan to make love with Alex and then point out I'd be off Monday and Tuesday, and that I wished him all the best in his recovery. I wouldn't tell him the next part, which was taking the personal leave and going to my parents'. I figured Dr. Carlton was going to have a fit at the \"miracle\" and somehow, the beans would get spilled. I wanted to be away from Alex and the hospital, to make it easier on everybody. \n\nBarbara thought about that one for awhile, too, before she answered. \n\n\"Kayla, I think you're making a mistake,\" she started and I know my expression was none too friendly. \"Not about the lovemaking,\" she pointed out and I put my hackles down. \"About the leaving. You're not giving him any say in this, and if he feels about you the way I suspect he does, and even if it's just because you're associated with his miracle, you're setting it up so you disappear. Whether they move him to Burns, Rehab or leave him here on Med/Surge, he's going to be stuck without you for at least three weeks. He will probably not be a happy camper.\" \n\n\"But I'll help you do what you want to do, and I'll keep it in confidence. On one condition.\" \n\n\"What's that?\" I asked. I was getting nervous. Conditions could be bad. \n\n\"That you give me your parents' contact information when you go so that if I am asked, and only if I am asked, I can give whoever might be searching for you a starting point, if it seems a good idea at the time.\" \n\nI studied her face for a moment, but didn't see any sign of duplicity there. I decided to trust her. Again. \n\n\"Okay,\" I told her. \"You've got it.\" \n\nWe went back to work and for the next hour or so I made sure everything I needed to get done, got done. I wanted as long a block of time as I could get. Finally, around three in the morning, I was ready. \n\nI told Barbara the game was afoot, went to Alex's room, put the ribbon on the door, went in and closed it. It was dark, but the night lights were on and I could see Alex lying in bed, his chest gently rising and falling. I walked over to him, took off my clothes and put them neatly on the chair, then lowered the side rail and eased myself into the bed, sliding under the covers with him. He shifted slightly, but didn't seem to wake up. \n\nI curled up with him the best I could and eased my hand down his chest to his abdomen and down to his penis. Which was now soft. A very strange state of affairs for me. I got myself tucked in under his arm and began gently massaging his cock, paying close attention to how it felt and how it was responding to my touch. And he was responding. Slowly but surely, he was becoming erect in my hand. \n\nHe got pretty hard, but he wasn't nearly as large this time. I was guessing this must be his \"normal\" size. When I looked down, I could still see some splotchy discoloration on his skin. Probably the aftermath of all that stretching. I was hoping there wasn't any permanent tissue damage. \n\nHe groaned softly as I played with him, and then I could feel him coming awake and becoming aware of my presence and my fondling him. I felt him stiffen up for a moment, then relax. \n\n\"Either I'm dreaming, or I've died and gone to Heaven,\" he muttered, his eyes still closed. \"I seem to be surrounded by an angel...\" \n\n\"Just following patient's orders, Alex,\" I told him softly. \"You did say to crawl into bed with you, naked.\" \n\n\"And my hands are fucking useless...\" he answered in an incredibly sad and irritated tone. \"Kayla, you deserve so much more... you deserve someone who can make love with you...\" \n\n\"Shhh...\" I told him. \"We are making love. You're just going to have to be more on the receiving end.\" I moved a little, to get my leg over his and press my breasts into him. \"I absolutely love your skin and unless you've got a problem with it, Mister, I'm going to explore every inch of it not covered by bandages or an IV patch.\" \n\n\"Okay,\" he answered, \"so I did die...\" \n\nI smiled and raised up a bit so I could kiss him. Or rather, so we could kiss. I wasn't completely inexperienced when it came to sex... I'd done some dating and some making out... and Alex's kisses blew them all away. He might have been considered a \"hard body,\" but his lips were soft and wet and sensuous, and he knew how to use them and his tongue to excite me to my core. I knew he was frustrated, not being able to hold me, so I tried to make do for both of us. \n\nI put one hand behind his head so I could support it, and cupped his face with the other. When I wasn't running my hand through his hair. He kept it short, but it wasn't bristly. It felt soft and sort of downy. I loved his scent - all him, no cologne or deodorant - and I loved the feel of his well-toned body against mine. \n\nHe had me so wound up, I was almost hyperventilating. I eased up on the kissing to catch my breath and realized I was leaking down my thigh. And onto his hip and leg. \n\n\"Oh, God...\" he moaned. \"You are incredible, Miss... um... Kayla? What's your last name?\" \n\n\"Misericordia,\" I teased him. \"Kayla \u00c1ngel de la Misericordia.\" \n\n\"Very funny, Kayla Angel of Mercy,\" he chided. \"How am I supposed to fall in love with you if I don't know your last name?\" \n\n\"You're not supposed to fall in love with me,\" I reminded him. \"You said so.\" \n\n\"Too late,\" he told me and the thrill that shot through me literally made me shudder. \n\n\"Does that scare you?\" he asked, mistaking my shudder for fear. \n\n\"No,\" I answered softly, then added in a whisper, \"and yes...\" \n\n\"The last thing in the world I want to do is scare the woman who basically saved my life,\" he told me. \"Maybe we need to stop before you get in too deep. After all, here there be Dragons.\" \n\n\"Like Falkor, the Luck Dragon?\" I asked, trying to tease. \"Or the avaricious Smaug?\" \n\n\"I was thinking more along the lines of Libidinem, Dragon of Lust,\" he smiled. \n\n\"Oooh, I like the sound of that one,\" I told him and kissed him again. \"Alex, if I said 'too late' for me, too, would that bother you?\" I didn't really give him a chance to answer before I rushed on. \"I want you to teach me how to make love to a man, Alex. I know you can't use your hands, and that isn't what this is about. This is about me wanting to be so close to you that I melt into you. It's about me learning to give you pleasure beyond anything a simple fucking might give. I want to know how to touch you in all the good ways, physically, mentally, emotionally, spiritually...\" \n\nHe interrupted me with a kiss. \"I pretty much can't put my hand over your mouth to shut you up, now, can I?\" he asked and I realized I'd kind of just blown past anything he might have to say. \n\n\"Um, sorry...\" I decided it was time to shut up. \n\n\"Okay, first of all, does it scare me that you're falling for me?\" he iterated. \"No more than it scares me that I'm falling for you. Or have already fallen. This is new to me. I guess this is where I just stop fighting it and admit to myself, and to you, that I've fallen in love with you. The next question, though, is what do we do about it? And I have no idea. I need to get healed and get out of here. Then maybe we could date, or something. See if you really have any interest in shacking up with an old man. Take some time to let Reason get a word in edgewise.\" \n\nI sighed and laid my head on his chest, sliding down a bit and reaching the hand not under his head, down under the covers to resume playing with his now very erect penis. \n\n\"Well, at least you're happy to see me,\" I told his chest. \n\n\"Woman, you have no idea...\" was his slightly moaned response. \n\n\"Woman. I like the sound of that,\" I told him. \"Thanks for aiding in my rite of passage. Even if the transformation didn't go without incident. In fact...\" I threw the sheets back and straddled him, wetting his turgid manhood with my juices and sliding down onto him. It was much easier this time. \n\n\"Oh, Kayla...\" he moaned as he watched me bottom out on him. Then he groaned and put his head back, closing his eyes. \"You were sculpted by the gods,\" he told me. \"I'll probably be blinded as punishment for deigning to gaze upon you.\" \n\nIt's a good thing his eyes were closed. I was blushing furiously. I know I'm kind of attractive, in a cute sort of way. I'm pretty usual for an Island Girl... I'm 5'5\" and 125 lbs., with tan skin and medium brown hair to my ass, which I've streaked with blonde. And like a lot of Puerto Rican girls, I'm a bit big in the butt. Not horribly so, though. I'm a 34B-25-36 and I keep myself in decent shape. I love swimming and running with Charlie. Where Alex was getting 'sculpted by the gods' was beyond me. \n\n\"Gaze away, Alex, if that's what you like,\" I told him. \"You feel so incredibly good inside me, I just can't tell you.\" I started rocking back and forth, essentially making him fuck me. \"So teach me how to make love, Alex.\" \n\n\"Oh, sweetheart... you're driving me crazy...\" he muttered in a sort of low moan. \"Make love? Oh, God... Well, if you're serious, you're learning back-to-front.\" ",
        "\"Back-to-front? What?...\" I asked. \"Do you mean like, anal?...\" Obviously, my brain had short-circuited there for a moment and I missed the obvious. \n\n\"No, Kayla, back-to-front as in, fucking is usually one of the last things you do,\" he explained. \"The kissing was a wonderful start. It pisses me off that I can't pet you with my hands, because sharing that kind of exploration, slowly and deliberately, would probably be next. We'd take our time, finding each other's sensitive spots and what kind of stimulation each of us liked. And we might get into oral... me finding out how you liked to be eaten, you finding out how I liked to be blown. Then we might move on to fucking, when we were filled with the excitement of each other.\" \n\n\"Of course, you've already got experience masturbating and fellating me. And I'll tell you, you feel so good fucking me I'm about ready to blow, and that hasn't happened to me this quickly in decades. I, unfortunately, have no idea how you like to be eaten or fingered... right now, you're the one with all the experience. And the ability, since I can't use my hands.\" \n\nHe was right. I suddenly realized what I'd been doing was all about taking care of him. Until the fucking, of course. That was for both of us. I also realized I could fix that. I came up off his cock, ignoring his moan of protest, turned around in the bed into a sixty-nine position and went back down on him, lowering my pussy so he could easily reach me with his mouth. \n\n\"Oh, my God, you are incredible!\" he exclaimed. \"Come on down a little farther.\" \n\nI did. And damn near went right back up off of him, post haste. He'd licked my nether lips and sucked on my clit. I though the shock wave of pleasure was going to launch me off the bed. \n\n\"Come on back,\" he chided me. \"Sit on my face and leave it there until one of the alarms goes off.\" \n\nI was squirming like crazy, but I did it. I managed to keep my pussy in his face so he could lick me, and suck me, and probe inside with his warm, wet, very pliable tongue. And he didn't need very long to drive me over the edge of my first orgasm. Of the night, anyway. I moaned, but tried to keep it down. I wasn't muffled and I didn't want it carrying. \n\nHe didn't let up, though. He kept on licking and sucking and probing until I was about to go over again, and he had me so distracted, I wasn't doing a very good job going down on him. Then he stuck his tongue in my butt and that was it. I cried out on that one. I couldn't help it. I came so hard it surprised the hell out of me. And then, he used his nose to tickle my anus while he tongued my pussy some more. \n\nHe was turning me into jelly, and without the use of his burned arms. I started laughing. \n\n\"What's funny?\" he managed to ask, using his forehead to lift me so he could talk. \n\n\"Look, ma! No hands!\" I told him, and he started laughing, too. And when someone is bumping up against your pussy with their head while they're laughing, it feels really, really strange. I got him to stop laughing by trying to deepthroat him. I'd done it when he was a lot more swollen, I figured I could easily do it now. Well, maybe not so easy... \n\nI guess maybe my throat had a reset button or something. It took a couple of tries before I figured out how to get past my gag reflex, but I did. I'm nothing, if not persistent. Alex wasn't even trying to be subtle in his moaning. He kept saying, \"Oh, God, Kayla! Oh, fuck!\" over and over. I knew I had him close when he pulled the pillow over with his arm, though. That's when I stopped. \n\nHis groan when I stopped could've melted Pharaoh's Heart, it was so pitiable. \n\n\"Oh, God, Kayla, no!...\" he whimpered. \"Don't stop! Oh, God, please don't stop!\" \n\n\"Nnn-nnn,\" I disagreed. \"Something better.\" I straddled him again, lined him up and sheathed him. And damn near came, myself, just from feeling him fill me up. But I was on a mission. I leaned way forward so I could dangle my tits in his face. He got the idea right away. \n\nHe was as good at suckling me as he was at everything else. Not that I had anything to judge by, but his mouth sent little shivers all through me as he lapped at my rock-hard nipples, then sucked them deep in his mouth, only to let them go and swirl his tongue around them, driving me absolutely out of my mind. \n\nFinally I started rocking on him, a slow, gentle fucking that was building me up pretty quickly, but more importantly, was building him up just as fast. I knew I wasn't going to last and I felt him pull up, ready to cum, so I pulled my tits away from his face and replaced them with my mouth. \n\nI think they call it a \"soul kiss.\" The kind where you just get completely lost in the other person. Where you feel like you've become one, that they own you body, mind and spirit. And that's when we went over, both of us, together. We were both moaning and mewling and grunting and groaning, and the only intelligible words had something to do with God and fuck and cum. I felt like I imploded on his hard, throbbing shaft as I felt him pulse his semen into my aching, yearning cunt. \n\nI came so hard, I passed out. Little twinkly lights, velvet curtain, and out. \n\n* * * * * \n\nI came to, barely, to find Kayla still sprawled across me, her warm, luscious body melted into mine, and realized someone had put a sheet over us. That was about it for coherent thought as I drifted back out, feeling immensely self-satisfied and an incredibly warm, loving glow for this little girl who had worked such a huge miracle. \n\nI woke up again to the sound of Nurse Barbara waking Kayla. \n\n\"Kayla, honey, it's time to get up,\" she was telling her. It was dark in the room, except for the lighted dials on the equipment, so I figured she was trying to avoid waking me. \n\n\"C'mon, baby,\" I told Kayla, lifting her slightly with my shoulder and kissing the side of her face. \"Your boss says you need to wakey-wakey.\" I saw Nurse Barbara freeze when I started to talk, but quickly resumed helping a disoriented Kayla sit up. \"It's okay, ma'am, I told her. I'm awake, and I'm only a little sore, and I would appreciate it if you could look after this Angel on Earth for me. She is amazing.\" \n\n\"We agree, Mr. Foster,\" she smiled slightly. \"Come on, Kayla. You need to get dressed and get some coffee in you before the morning shift starts to arrive.\" \n\n\"Sure...\" Kayla mumbled, but did manage to get out of the bed and into her uniform, with a little help from Barbara. \n\n\"Um, Nurse, ma'am?\" I asked Barbara. \"I could use one of those cups of coffee, too, if you would.\" \n\n\"Actually, I'd suggest not, Mr. Foster,\" she told me. \"If I were you, I'd use the bathroom, then try to get some more sleep. Doctor Carlton will be in later this morning to check on you, and he is going to be very interested in your miraculous recovery. I suspect a series of tests and a rather tiring day will be in order. You'll want to be rested.\" \n\n\"Yeah, about that...\" I decided I needed to exert whatever influence I had. \"Could you please see that Kayla doesn't get in any trouble because of me?\" I paused for a moment before adding, \"the Reluctant Hero?\" \n\n\"I will do what I can, Mr. Foster,\" she told me. \"Let's get you squared away first.\" \n\nThey did. The two did their routine and helped get me and my IV to the toilet, then cleaned up and back to the bed when I was done. Kayla was tucking me in when she asked Barbara if she could have a minute with me, alone. Nurse Barbara didn't even bat an eye. \n\n\"I'll be at the Nurses' Station when you're done,\" she told Kayla. \"Rest easy, Mr. Foster,\" she turned to me. \"I'll probably see you next weekend, if you're still on our Ward.\" \n\nI thanked her and she left, leaving Kayla standing beside the bed, looking down at me. I thought she might be on the edge of crying. \n\n\"I'm off tomorrow and Tuesday, Alex,\" she told me. \"Dr. Carlton and the others will decide your fate before I get back. But it is important to me that you know just how very much you are loved, and I will pray that you keep healing as fast and as well as you have already. You will always be a very special man to me, Alex. I don't know if our paths will cross in the future or not. But please know this, in your heart of hearts... you will always have a place in mine, and in my life if that's how it works out.\" \n\n\"I will never regret you being my first in so many ways. It is a blessing I will take to my grave.\" Then she leaned down and kissed me. Long and slow and sensuous... and final. It felt very final. \n\n\"Kayla, I'm not joking about you being an angel,\" I told her when we broke the kiss. \"You, too, will have a place in my heart, forever. Just so it gets said... I love you. That is for always.\" She kissed me again and this time I could see the tears starting to leak out. \n\n\"Rest well, Mr. Foster,\" she smiled through her tears. Then she turned and walked out. I lay back with a lump in my throat I'm not used to feeling. \n\nI lay in the dark and listened to the muted sounds of the machinery hooked up to me. The soft beeping that tracked my pulse and the gentle hiss of the oxygen being fed to my nasal cannula. The almost imperceptible drip, drip, drip of the IV. And the pain I was feeling had nothing to do with a throbbing erection. \n\nDr. Carlton did check on me. And as predicted, he did go somewhat ballistic. Louise was back instead of Rat-shit, to my great relief. Nobody was giving the good doctor any satisfactory answers - I'd characterize it as avoidance behavior - but he didn't let that stop him. After a thorough examination, he ordered a bunch of diagnostic tests and congratulated me on my great good fortune. He and another fellow, a Dr. Oslo who was a burn specialist, would be back to see me after they got the results of the tests. \n\nI endured the poking and prodding and irradiating by thinking about Kayla and what a sweet girl she was, and how it was really out of line for us to have fallen in love. But I was also starting to think in terms of \"so what?\" Other people had dealt with similar situations successfully. We could. I just had to figure out how. I would ask her what she thought when I saw her Wednesday night. Or if they'd moved me, I'd leave a message, asking her to come find me so we could talk. \n\nTuesday afternoon I was informed that they were going to move me on Thursday to the Burn Unit and soon thereafter get me started with Rehab. They had taken the bandages off and redressed the burns as part of my examination and I have to admit, I didn't look very good. The skin looked all raw and inflamed, with little white streaks running through it. They had some kind of medication on it which I presumed was part antibiotic and part moisturizer. My arms and hands didn't throb so much and I got the impression I was healing, and from the doctors' comments I guess quickly and fairly well. \n\nWednesday afternoon I got a visit from Stephen Schneider, the man whose family I had allegedly saved. \n\nAbove and beyond his profuse gratitude for saving his family, he wanted to let me know that if there was ever anything I needed in the way of a favor, not to hesitate. He made sure I had his personal cell number and that of his wife, Natalie. He wanted to know what made me decide to be a hero. I told him I wasn't a hero. But the thing that got me in that skiff and heading towards the fire was the children. To me, children should never have to suffer that kind of terror, and all too often, do. \n\nHe accepted that with appreciation and invited me, and anyone I'd like to bring, out to his for dinner, whenever I got out of the hospital. I told him I'd take him up on it, at some point. As he was getting ready to leave, he paused and turned back to me. \n\n\"You know, Mr. Foster,\" he smiled slightly. \"I believe you are the only man I am glad called me an asshole.\" I just snorted a little and shook my head while he turned and left. \n\nWednesday night, there was no Kayla. When I asked Nurse Rita where she was, I was told she'd taken some personal leave and wasn't currently reachable. When I asked why, Rita simply told me it was \"something personal.\" I was a really grumpy, dejected jerk the rest of that night. And the next day when they moved me. And that night. In fact, I was just generally grumpy. \n\nI had to get used to life without Kayla, though, and I had to concentrate on getting well enough to leave the hospital if I wanted any chance of finding her. I had to fight to keep down the nightmares about all the reasons she might have left. Most of them featured me and I was not happy about it. \n\nI did it in record time. Nine days on the Burn Unit, thirteen in Rehab, twenty-two total from the day they moved me out of Med/Surge. My hair had grown back in, I had minor scarring on my arms, nothing on my hands, my back had healed up beautifully, and thanks to the Rehab people, I'd gotten myself into better shape than I was when I headed for that yacht. On the day they discharged me, I went to the Med/Surge ward and found Nurse Louise, and asked her for Kayla's address and phone number. \n\nNeither of which she would give me. Hospital confidentiality policy. Which, unfortunately, I could understand. So the next thing I did was call Schneider. Then I went back to the hotel where I'd been staying. They surprised me. \n\nFirst, they'd seen what happened on the news, so they packed up all my belongings and put them in the hotel storage. Second, they stopped charging me for the room. Third, they were holding my bill and not closing it out, pending my return. I asked them for a room back, they gave it to me and soon thereafter I had all my stuff back where it had been, including my laptop and a few other essentials. Whoever packed up my room must have understood \"government contractor\" because they didn't mess with any of it. \n\nSettled in, I contacted my superiors, got righteous with them, then sat back and waited for Schneider. It took three days. \n\n* * * * * \n\nMamma did want to know all about my boyfriend trouble back on St. Thomas. She knew I was avoiding talking about it, and that just made her nosier. Poppa was just happy to see me home. He knew I was \"hiding out\" from my problems, but he also knew to just let me stew through them and when I wanted his opinion, I'd ask. \n\nI wasn't sleeping well at night. I wasn't sleeping well at all. I kept seeing Alex's smile, hearing his laugh, feeling his skin and the awesome sex... I just couldn't let it go. That should have been a warning to me right there, that I wasn't doing the right thing. Truthfully, I didn't know what I was doing. \n\nMarisol and Marcus had been more than happy to help me out, and I promised them that I'd let them know what I was doing once I'd gotten to my parents' and had a chance to think. Marcus basically moved off his boat and into my townhome so I didn't have to do anything with pets or my stuff right away. I'd grabbed a flight from St. Thomas to San Juan and rented a car. It would be cheaper than a taxi, and I could turn it in after I'd connected with my parents. \n\nAfter a couple of days of stewing, and starting to go back, and then deciding to stay, and then not deciding anything at all, which is a decision in itself, I finally went and checked at Hospital General Menonita de Aibonito to see if they had any openings, knowing full well that everywhere in Puerto Rico they were hard pressed for professional medical staff, from doctors to nurses. \n\nI had an offer before the ink was dry on my application. I told them I needed a day or two to think about it, but the reality was, I was going to take it. I could help out my parents in exchange for a place to stay and it would help keep me grounded while I sorted out what to do about Alex. I called Barbara a couple of times, just to find out how he was doing. It was good news when he was moved to the Burns Unit and even better news when they moved him to Rehab. The closer he got to being discharged, though, the worse my jitters got. I didn't feel like self-medicating with rum, so I sought out our old family doctor and leveled with her about what I was going through. \n\nDr. Ramiro is an absolute treasure. She's not only a very competent physician in Internal Medicine, she listens well. And had very sage advice. She agreed to give me a limited prescription for Lorazepam on my promise to work through my anxiety, preferably with a professional. When I told her I didn't know who I could be comfortable with, given my breach of professional ethics that started the whole mess, she recommended a Dr. Sanchez, a PhD psychologist and also a good listener. \n\nJulia - Dr. Sanchez - pointed out that lasting relationships aren't generally fallen into, but grown into. That being said, it was also obvious that Alex and I had developed a very strong emotional bond in a very short period of time. She helped me see that it was time and experience that would let me know if it were really love and not just infatuation. Hiding from him wouldn't give me the chance to find out. It would only afford me an opportunity to obsess on him, possibly to imagine a \"him\" that wasn't real. \n\nI admitted to being afraid, especially of what he must think when he found out I'd bolted. And I was afraid I couldn't handle the rejection when he figured out I was just a scared little kid in awe of a hero. Julia pointed out that I was already off and running in the imaginings department. Not about being afraid - that was real enough - but about him rejecting me, and me being the scared little kid. \n\nI told her how he kept calling me his Angel, and I think he meant it. I was afraid of what would happen when he found out I wasn't, that I had just treated him with kindness and respect. She asked if that was like his refusing to take on the mantle of Hero, because he was just a guy doing what was right? \n\nThat brought me up short. In my eyes, he was a hero. He'd risked his life to save others, and then gently helped me transition to what I considered womanhood. There wasn't a selfish bone in his body. \n\n\"Maybe that's how he sees you,\" Julia suggested. \"Maybe you're one of the few selfless people he's known. You said he was some kind of government agent or something. Maybe his circle of friends aren't friends at all. Just associates. To him, you would seem untainted... angelic.\" \n\nI was mulling that one over when she hit me with the giant-killer. \"Kayla, do you want a family?\" she asked. \"Children?\" \n\n\"You had to ask that one, didn't you?\" I mumbled, then took a few moments before I answered her. I had lucked out with my reckless behavior and gotten my period right on time. But I did catch myself wondering if I'd really rather have been pregnant. \n\n\"Honestly, I think yes,\" I told her. \"There are the obvious drawbacks of having a man in his sixties father children. But if I were going to have kids, I think I'd want him to be the father.\" \n\n\"Would you remarry when he dies?\" \n\nWhat the fuck kind of question was that? Well, a practical one if I was being honest with myself. \n\n\"I don't know.\" \n\n\"Kayla, I think that should go on the list of things for you to talk about with him,\" Julia gently suggested. \n\n\"Doc, I don't even know if he wants to ever see me again!\" I could almost hear the plaintive wail in my voice. \"He's the one that was pointing out how May-December relationships didn't often work...\" \n\n\"Then call him,\" she smiled. \"The worst he can do is hang up on you. Do you have his number?\" \n\n\"No,\" I admitted. \"But I know how to get ahold of him. And hanging up isn't the worst thing he could do.\" Julia raised an eyebrow at that, but didn't say anything. \n\n\"He could tell me he doesn't love me,\" I told her and I am certain that the world's entire store of pitiable dejection was in that sentence. \n\n\"As kind as you've made him out to be,\" she told me gently, \"I doubt he would ever say that. But I'll tell you what... we need to wrap up today, so how about you just take some time to think about it without letting your emotions grab the reins? Some realistic introspection might do you some good and we can talk about it next week.\" ",
        "\"He's due to get out next Wednesday,\" I mumbled. \n\n\"Then let's get together Monday,\" she suggested and I worked out an appointment with her. \n\nI had a lot to think about, but with the help of the meds, I managed to concentrate on work at night and do my thinking during the day, along with what sleep I could manage, while Mamma and Poppa were at work. \n\n* * * * * \n\n\"150 Calle San Jos\u00e9, Aibonito, Puerto Rico, Mr. Foster,\" Stephen Schneider was telling me. \"Home of Se\u00f1or y Se\u00f1ora Martin, Kayla Marie Martin's parents. We think that's where she's living. She's just started working at Hospital General Menonita de Aibonito, whose address is Carretera 726, Calle Jos\u00e9 C. V\u00e1zquez. Basically, at Highway 726 and Jos\u00e9 V\u00e1zquez Street.\" \n\n\"It's Alex, Mr. Schneider,\" I told him, happy to have her supposed address. \"And thank you.\" \n\n\"Then it's Steven, Alex,\" he smiled. We were in my hotel room. He'd stopped by on Sunday with the results of his investigation. \"And if you don't mind a word of advice... or even if you do... if she ran, she ran for a reason. She seems like a level-headed girl and I think you should be careful in your dealings with her.\" \n\n\"Point taken,\" I acknowledged. \"What she ran from was me. Or her feelings about me. At least, that's the theory I'm working on because I've got it pretty bad for her, too.\" \n\nSchneider smiled slightly. \"I suppose you'll be wanting to return to your home,\" he told me. \"You wouldn't be interested in a lift, would you? I have to fly to San Juan tomorrow.\" \n\n\"I'd love to hitch a ride,\" I told him. \"When and where?\" \n\n\"I'll pick you up on the way to the airport. About 10am, if that's okay.\" \n\n\"More than okay,\" I told him. \"I'll see you in the morning.\" We said our goodbyes and he left. I poured myself a stiff drink and went out on the balcony overlooking the pool. It was a good place to stew. \n\nHe was right, I was going to have to be careful how I approached Kayla. I didn't know if she was running from me to protect herself, or to protect me. I wanted to believe that what we felt with each other was real. But just like it had been a lot of first times for her, for sex, I was willing to bet it was her first time for love as well. And I sure as shit didn't want to screw that up. I had a sudden flash of inspiration. \n\nI called Steven again. \n\nI checked out the next morning, arranging to have most of my stuff shipped to my home by the hotel. \n\nThe limo picked me up at the hotel, then we made an unscheduled stop to talk to this Marcus fellow who was watching her townhome. I didn't mean to intimidate him, but I probably did. The good news was, he agreed with me. \n\nThen Steven had us delivered to the airport where his Gulfstream G280 was hangared. I love that jet. All kinds of roomy and comfortable, especially when the only passengers were the pilot, copilot, flight attendant and two men with a dog. It was less than an hour before I was at Isla Grande Airport, where Steven's driver picked us up and dropped me and Charlie at my home, off Highway 187 in Loiza. \n\nI had to check in with Marcy, who still had Geri and Freki, and explain the whole long sordid story of getting blown up, falling in love and why I had an Irish Setter with me. She decided it was \"romantic\" and volunteered to watch my dogs while I tried to see Kayla. My two brutes took to Charlie with no problem and I spent a few hours with them, running the beach and playing in the ocean. Marcy hung around and laughed at our antics, and finally I told her I'd call her in the morning before I brought Geri and Freki back. \n\n\"So, are you going to marry her?\" she asked as we started to part ways. \n\n\"Marcy, how the hell should I know?\" I answered. \"For all I know, I'm going to catch a load of buckshot for taking her virginity!\" \n\n\"She was a virgin?\" Marcy's jaw dropped. \"You were laid up in a hospital bed and you deflowered her? Jesus, Alex! You really take the cake!...\" She was shaking her head as she stared at me. \n\n\"It was more like she used me to 'punch her V-card' as one of the other nurses put it.\" I felt obligated to defend myself. \"I was the helpless victim.\" \n\n\"Helpless, my ass,\" she snorted. \"And I wouldn't sweat the buckshot. Only somebody like you would go through the pain in the ass process to get licensed. Not a nurse or her parents.\" \n\n\"Maybe,\" I agreed. \"But I don't want her pissed at me. That's why I'm returning Charlie to her. Maybe make some Brownie Points.\" \n\nMarcy just shook her head and waved as she turned and headed home. I headed into my house, too, three dogs in tow. It was an hour-and-a-half drive to Aibonito. I wanted to be there when she came off shift. Tomorrow morning was going to be interesting. \n\n* * * * * \n\nIt had been a long night. I was working in Medical-Surgical Recovery again, and we'd had two Code Blues and one severe anaphylactic shock from an allergic reaction. I was tired and looking forward to going home and crashing. Per usual, I'd been thinking about Alex a lot, too. He just seemed to be everywhere I looked. Julia was right. I needed to get a handle on my emotions. Some kind of tangible course of action. Something I could do to relax. \n\nI came out into the bright light of morning and blinked as I headed for the parking lot. I chided myself for being so tired that I was hallucinating as I saw a man standing with an Irish Setter across the fountain plaza. Hmmph! I thought to myself. Alex and Charlie. That'd be a hell of a combination. \n\nI was a bit surprised, then, when the man unsnapped the dog's leash and it started running towards me. I was scared shitless, and then flabbergasted, when the dog leapt up and started licking me, and he turned out to be Charlie! \n\nI fell down. Or rather, I sat down, hard. I completely lost it. To be honest, I hugged his neck and cried. All this emotion just came pouring out and there wasn't anything I could do about it but hug my dog and cry. And the big, beautiful fur-ball just kept dancing around me and licking me. So I hugged him even more, and cried even more. It didn't cross my mind to wonder where the hell he'd come from... \n\nUntil there was a hand on my shoulder. And another gripping Charlie's collar and calming him down. I looked up and Alex was kneeling beside me, the sun making a freaking halo behind his head. \n\n\"Are you okay?\" he asked softly. \n\nAm I okay? Am I okay??? What a stupid question! Of course I wasn't okay! I wanted to make some kind of snappy retort, but all that came out were more tears. Happy tears, but still tears. And scared tears, too. And angry tears. And sad tears. Everything was all jumbled up. \n\nHe started to take his hand off me and I grabbed it. I was so incredibly desperate... I didn't want him to ever stop touching me again. Really, really stupid and I didn't care. I couldn't have put words to it if my life depended on it. \n\n\"I need my hand for a second, Kayla,\" he told me and he gently pried himself loose from my death grip. \"He's not supposed to be off the leash,\" he went on to explain as he hooked the leash back on Charlie's collar. Then God bless that man for all eternity, he sat down and put his hand back on my shoulder. \n\nI could hardly see his face because of the tears, but it was him. I knew it was him. I could have been struck deaf, dumb and blind and I still would have known it was him. From his gentle, gentle touch. I didn't need to see the man. I could feel him. And I didn't care that we were sitting in the middle of a public plaza with morning happening around us. I turned and felt for his face, and cupped it with my hands, and drew him to me for the kiss I was hoping would last a lifetime.  \n\nHe did not disappoint. He returned my kiss with equal passion, if not more, and we got lost in each other as the world faded away, and there was only the two of us. \n\nWell, the two of us and Charlie, who decided we weren't paying enough attention to him. His barks and lunges to get his licks in sort of broke things up. We broke the kiss because we had to, not because we wanted to. \n\n\"What...\" I managed to squeak out. \"What are you doing here?\" That was the best I could do. \n\n\"Returning your constant companion,\" Alex smiled, and I was crying all over again. \"The cats were obnoxious. They'll have to wait for another trip.\" \n\n\"You know...\" he went on thoughtfully. \"A guy could get a pretty bad complex if every time he touches the woman he loves, she bursts out into tears.\" \n\nI laughed. Through the tears, yes, but I laughed. My maniacal side was waking up. \n\n\"Do I only get one?\" I sniffled. \"Only one Constant Companion?\" \n\n\"That's going to depend on you, Kayla,\" he told me and Hope started erupting in me like a Phoenix from the ashes. \"I'm not the one that bailed. Obviously, you need something and I want to help you get it, any way I can. I'm clueless when it comes to what you need, Kayla, but I'm a quick study - even if that means you telling me to go away and to never see you again.\" \n\n\"Oh, God, no!\" I sobbed as he went on. \n\n\"But... you'll have to be the one to tell me, Kayla, because I'm not leaving otherwise.\" He put his arm around me as we sat, and I put my head on his shoulder, trying to breathe, trying to calm down. Charlie sat at our feet, doing that doggy-panting thing with his tongue lolling out. \n\n\"I'm scared, Alex,\" I whispered. \"I am so scared...\" \n\n\"I believe you,\" he told me, still holding me. \"Want to get some breakfast?\" \n\nThe question was so incongruous, it derailed me. And made me suddenly realize I was starving. \n\n\"Um... yes?\" I half-smiled up at him. \"I was going to go home and grab a bite, and sleep.\" \n\n\"You can still go home and sleep,\" he told me. \"But let me feed you, first. Pick a restaurant.\" \n\n\"McDonald's,\" I told him. \n\n\"Seriously?\" He was definitely surprised. \"McDonald's?\" \n\n\"I like their Sausage McMuffin and hash browns,\" I told him, rather defensively I'll admit. \"And coffee.\" \n\n\"Okay,\" he shrugged. \"McDonald's it is.\" He stood up and extended his hand to help me stand. I couldn't. I was shaking too bad. \n\n\"Hmmm...\" he intoned, looking down at me. Then he put Charlie's leash in one hand, bent over and picked me up in both arms like I was a little girl. \"C'mon,\" he told Charlie, then started walking for the parking lot, with Charlie trotting right along with us. When we got to a big black SUV, he stopped. \n\nStill holding me, he fumbled in his pocket for his key fob, then unlocked the car, placing me in the front passenger seat of one of the snazzier vehicles I'd been in. He opened the back door and Charlie jumped in like it was second nature. Then Alex slid into the driver's seat. \n\n\"Next stop, McDonald's,\" he announced and we pulled out of the parking lot. \n\n* * * * * \n\n\"Ese es tu novio?\" Kayla's mother did not look happy. Just one more thing that wasn't going as planned. Or expected. \n\n\"No, Mamma, esa es mi novia!\" Kayla's sarcasm was dripping from her voice. It had better have been sarcasm, if she was going to call me her girlfriend. \n\nHer mother sort of snorted and stood out of the way while Kayla, standing on the porch with her, took Charlie off his leash and let him run into the house. \n\n\"Ya vuelvo,\" Kayla told her mother, then turned to come down the stairs to me. I had wisely waited by the car. Her mother took one more disapproving look at me and closed the door. \n\n\"That is not a happy woman,\" I commented as Kayla reached me and fell into my arms. \n\n\"No she isn't,\" Kayla agreed. \"You'd best believe I'm going to catch an earful about the man old enough to be my grandfather.\" \n\n\"Jeez,\" I complained. \"It's going to be tough enough winning over you and your mother. Am I going to have to worry about your father, too?\" \n\n\"Give him a grandson and all will be forgiven,\" she smiled. Talk like that was digging us in deeper and deeper, and the bitch was, I was loving it. \n\n\"So, what do we do now?\" I asked. The initial shock had worn off and she was warming up to the idea that we were near each other and could maybe even date. In fact, over breakfast at the Arches, she'd confessed that in her mind, she already had us married, with kids. \n\n\"I go in the house, try to sleep, and pray this isn't a dream,\" she told me. \"You go home and come pick me up after work on Saturday morning and we go to your house for the weekend, and I get to see your side of life. I work Monday night through Friday night. So Saturday morning to Monday night are yours.\" \n\n\"This is fucking Tuesday,\" I grumbled. \n\n\"Unfortunately, yes,\" she nodded. \"You'll just have to go home and content yourself with images of me masturbating to massive orgasms while thinking about you.\" She paused while I gave her the Really? look. \"Which is what I've been doing since I left St. Thomas,\" she finished. \n\nShe slid deeper into my arms and turned her face up to me, and I knew damned well her mother was watching through the lace curtains. I decided to ignore Mamma until I could figure out how to win her over. I leaned down into the kiss and again was flooded with the pure, raw, sensual emotion that poured out of the woman in my arms. She finally let up and pushed back a little. \n\n\"Go on, go...\" she told me. \"Get out of here. Drive safe. Don't you dare do anything to hurt that wonderful body, now that it's healed. And thank you... thank you very much... for bringing me Charlie. He means a lot to me. Just like you.\" \n\nI gave her one more kiss, long and slow and smoldering. With her, I didn't know any other way, anymore. Then reluctantly, I got in my car and headed home. This was fucking Tuesday and I was going to have to wait until Saturday morning. This was really going to suck. \n\nIt was the middle of the afternoon when I swung by Marcy's and picked up Geri and Freki, and headed back to my house. I looked around, trying to pretend to be Kayla and seeing what she would see. \n\nI gave up and called Marcy. \n\n\"So, your new girlfriend's first impressions on entering your home...\" she murmured as she walked in. \"I obviously have my work cut out for me.\" That did not sound promising. \n\nA long talk later, when I'd explained in detail everything that I was aware of, and how I felt, and how I presumed she felt, and blah-blah-blah... Marcy's advice was simple. Leave it like it was. A general housecleaning, for sure, but I hadn't been around recently to muck it up. Let the woman see me in my natural habitat. She'd either run screaming or start nesting. \n\n\"Does this mean you're going to give up on your balling buddies, Alex?\" she asked as we were wrapping up. \"Fresh page, new start and all that?\" \n\n\"Why?\" The question had caught me off-guard. \n\n\"Because I am one, silly, and I just want to know where I'm going to stand,\" she pointed out. \n\n\"Um...\" I hesitated. \"I don't know?\" \n\n\"Okay, well let me know when you do,\" she smiled. \"I suspect that if you can make this work, you'll be a very lucky man, Alex Foster.\" She headed on out and I went in search of something to throw in the microwave for dinner. \n\n* * * * * \n\nWork dragged. It dragged Wednesday. It dragged Thursday. It dragged all the way through to Saturday morning. \n\nMamma had not been happy with my choice of boyfriends, and she wasn't shy about letting me know it. Poppa was basically a white mainlander, born of immigrant hippy parents, and pretty laid back. Mamma was full-blooded Boricua and her Latina was definitely out and about. I'm pretty sure the neighbors knew how upset she was, in detail. \n\nI made it worse the day I blew up and told her it wasn't her choice or her business who I decided to lose my virginity to, and at the age of twenty-two I had been way overdue. I don't think she'd put two and two together until that point. When I informed her that I was going to spend the weekend at Alex's home, trying to get pregnant, I thought she was going into cardiac arrest. That was one of the few times I saw Poppa get angry. \n\nHe got between us and lambasted us both. He told me to stop baiting Mamma and just leave her alone. I was welcome in his house because I was his daughter, but I was not permitted to create an uproar. He told Mamma I was old enough to make my own decisions and to keep her opinions to herself, and leave me alone. He reminded her, subtly, that there were parts of her past she didn't want aired. I still don't know what they were, but the threat shut her up. Instead I got the icy glare routine. \n\nWhen I left for work Friday night, I kissed Poppa goodbye and told him I knew what I was doing. Or, I really hoped I did. He just told me to go do what I did so well... make other people's live better. And to protect myself. I had that turning around in my head all night until Alex picked me up in the morning. \n\n\"Breakfast first?\" he asked as soon as we put my roll-aboard in back and got in his car. \n\n\"Mc...\" I started. \n\n\"Donald's,\" he finished. \"On it.\" He pulled out of the parking lot and we headed for the Arches. I told him I'd packed a suit, just in case he was ridiculously rich and had a pool. He asked if I'd settle for a beach. I told him I hadn't brought anything to wear at night and he asked, what about him? Smiling, of course. I told him I was a lousy cook - not true, I just wanted to see his reaction - and he told me not to sweat it, he had it covered. It seemed like he had an answer for everything. \n\nAnd I couldn't keep my eyes off of him. No one looks good in a hospital gown and sporting an IV. Well, almost no one. He did. Besides that, though, with him out of bed and in really nice fitting, tasteful clothes, well... fine, I was drooling. We finished breakfast and he drove us to his place. \n\nOkay, every reason I had for not moving in with him went right out the window. First of all, the Barrios of Loiza are beautiful, especially the beaches. They're generally not crowded, like the resorts in Rio Grande. And Alex pulled into the driveway of one of the houses along a stretch of private beach. He pushed a button and the big iron gate opened up, allowing us in. The driveway ended at a modern beach house with a sloped roofline to protect it from hurricanes and with a distinct Spanish kind of style to it, including the brick paved turnaround with the fountain in the middle. \n\nIt was gorgeous and I was speechless. \n\n\"Wow... are you some kind of millionaire or something?\" I asked, staring, when I could talk. \n\n\"Not exactly,\" he told me as he opened his door to get out. \"Well... or something.\" Since he was getting out, I followed suit. And almost climbed right back in. Two gigantic, white snowballs came barreling around the corner at such a blur they made Charlie look like a slowpoke. They came straight for me and I nearly wet myself. \n\n\"Geri! Freki! Heel!\" Alex commanded and the two abruptly stopped and trotted over to him. \"Sit!\" and they sat. \"Stay...\" and they stayed. \n\n\"Come on over and meet my owners,\" he told me. \"Or, they think they are, anyway. They're just behaving to impress you.\" \n\nI'd never seen a Great Pyrenees for real, much less two of them together. They were beautiful, and they were scary. Their heads came easily to Alex's ribs and I'm sure they could have torn me apart in seconds if they'd wanted to... But oh, that luxurious white fur! \n\nI very timidly made my way over to them. I'm sure they knew I was scared. Which was stupid because I knew better. Charlie's a pretty good size and if I'd let him intimidate me, he'd have run roughshod all over the neighborhood. I knew not to be fearful of Alex's dogs. Not just not show it, but not be it. They were obviously well trained and I really did have nothing to fear. Not as long as Alex liked me. \n\nI knelt down by them and they looked to Alex for permission to move. He made them wait while I ran my fingers through their ruffs and quickly became entranced. Then he quietly said, \"alright\" and the two of them started a lick-fest that had me covered in slobber faster than I could realize what was happening. ",
        "\"I'd say they approve of you,\" Alex smiled down at me, now sitting because his dogs had essentially knocked me down. \"The one on your left is Geri, the male. He's slightly larger than Freki, who is the female on your right. Also, Geri has a slight scar over his left eye. Otherwise, they're pretty identical.\" \n\n\"I love them,\" I told him, and I meant it. \n\n\"Apparently, so does Charlie,\" he told me, \"and vice versa. I had Charlie here for a few hours and let them play. They worked out okay. And when you're done mauling my dogs, let's go inside and get you settled. And something to eat.\" \n\n\"Me mauling them?\" I demanded in faux indignation. \n\nHe just smiled. \"Geri. Freki. Come.\" They left me and followed him around the corner of the house. I got there in time to see them disappearing into a sliding glass door, so I walked around the motorcycle leaning up against the wall and walked in. And came to a full stop. \n\nOne, the house was beautiful. Natural wood and white plaster and stucco, tile floors, a large sitting room with couches and chairs, a modern kitchen with a woman standing at the counter... \n\nThat was number two. A woman, probably mid-thirties, standing at the kitchen counter and smiling at us. I'm glad Alex was the first one to speak. I would have asked what the hell was going on? \n\n\"Hi, Marcy,\" he greeted her. \"What are you doing here?\" \n\n\"Not moving fast enough,\" she told him with a smile. \"I thought you and your angel might be famished, so I made sandwiches, which are in the fridge, and dinner's in the slow cooker. Should be ready by around 6 or so. I was hoping to be gone by the time you got here.\" Then she turned to me. \n\n\"Hi, I'm Marcy,\" she told me. \"I'm Alex's neighbor from up the beach. And his part-time housekeeper and dog-sitter. I'm going to guess you're Kayla, Alex's Angel of Mercy. Don't worry, everything he's said about you is complimentary. You beat me home. About thirty seconds while I put the drinks on ice and I'll be out of here.\" Then she turned to do as she'd said, putting a bunch of bottles in a tub and pouring ice over them. \n\nI didn't say anything. I couldn't. I was still trying to process what she said. I stood and watched as she wiped off her hands, walked up to him and gave him a hug, which he returned, and a peck on the cheek. \n\n\"Welcome home, Sailor,\" she told him with a smile, then walked towards the door, which meant she was walking towards me. She didn't go by me, though. She stopped and opened her arms for a hug. I hesitated. \n\n\"Thanks for saving his life, Kayla,\" she said softly. \"He's kind of important to some of us around here.\" \n\nI felt stupid standing there while her arms were out, so I went ahead and walked into the hug. \n\n\"You're welcome,\" I told her. \"I think that pendulum swings both ways.\" She hugged me for a few seconds more before she broke it and smiled. \n\n\"Lots of things do,\" she told me. \"You've got a winner there. I'll see you later... yeah, yeah, Alex... I know. Much later!\" \n\nWith a laugh, she walked out the door and seconds later I heard the motorcycle start. And a few after that, she was driving away, up the beach. I turned to face Alex. \n\n\"I wasn't expecting her to be here, Kayla,\" he started in, obviously feeling defensive. \"She's a long time friend and no threat to you, whatsoever. Unless you like women. She was right about being hungry, though. You want something now, or wait until later?\" \n\nI was still hung up back at unless you like women. \"Um... something to drink?\" I asked. \"The food can wait until later and you have to show me where I'm living.\" \n\n\"Okay,\" he smiled. \"Follow me.\" He walked down a hallway towards the other end of the house, then paused in front of a doorway. \"This...\" and he pointed. \"Is your room. Specifically, it is your room. Your sanctum sanctorum, your private space, yours to do with as you please. It has its own bath and access to the veranda and beyond, the beach. I will not come in here uninvited. Only the cleaning lady, Maria, will do that, and not even her if you tell her to stay out.\" \n\n\"There...\" and he pointed, \"is my room. Specifically my office. That room is off-limits to everyone but me unless I specifically invite you in. And there...\" he pointed to the end of the hall, \"is the Master Bedroom to which you will have full access and I'm hoping you use it, because that's where I sleep.\" \n\n\"The rest of the house is currently unoccupied, so there are no restrictions and you can explore as you wish. Oh, and yes, I do have a couple of WaveRunners and a small sailboat. I usually keep them up the beach at the marina where they can be secured. Plus Marcy and some of my other friends like to use them. If you see somebody strange wandering around, don't shoot them unless the dogs are barking.\" \n\nI wasn't sure if he was joking. I sure wasn't going to shoot anybody. I'd be more scared of the gun than they would be. \n\n\"So, there's sun and sand and surf,\" he smiled, \"and a quiet place to relax and ditch all your worries. There's lunch, and dinner's getting ready, and I've got soft drinks, beer, wine and liquor... whatever you'd like. The library, game-slash-entertainment-room are upstairs. Welcome to my home, Kayla. What would you like to do?\" \n\n\"You,\" I told him, stepping into him and throwing my arms around his neck. I didn't even give him a chance. I pulled him down into a kiss that had everything I had thrown into it. Apparently, it worked. \n\nHe responded, quick and strong. He wrapped me in his arms and held me to him as our lips and tongues explored each other. We picked right up where we'd left off on Monday, outside my parents' home with Mamma spying out the window. I was wet, and wanting, and melting, and completely amazed that this gorgeous man had come back into my life. And this time, he wasn't all bandaged up in a hospital bed with an IV stuck in him. \n\nI'd spent almost a month imagining his hands running all over me, driving me to incredible heights of pleasure. I wanted that, and I wanted it now! \n\n\"Take me to bed, Alex...\" I whispered in his ear. \"Take me to bed and make slow, sweet, exquisite love to me. Show me what you wanted to show me back on St. Thomas...\" \n\nI must have said something right. He looked straight into my soul as he picked me up like a child and carried me towards the huge canopied bed. Setting me down gently, he began unbuttoning my uniform. \n\n\"At least you're not in scrubs,\" he smiled. \"Difficult to get off without help.\" \n\n\"Would you like help?\" I offered with a smile. \n\n\"No...\" he kept smiling. \"I haven't had a chance to give my refurbished hands a proper test run. I'll apologize in advance for any awkwardness.\" \n\nThe buttons on the dress ran the full length of the front and he painstakingly unbuttoned each and every one before sliding the dress open, exposing me. Per my usual, I had my bra, stockings and garters, and panties on. He grinned as he devoured me with his eyes and noted the bra. \n\n\"Mmm... closes in front. Nice,\" he told me as he leaned forward and unsnapped it. It fell away to either side, still covering my breasts but exposing the valley between them. He leaned forward and planted a soft kiss in that valley and I felt a shiver run all through me. He took the side and back of his right hand and gently swept the cup off my left breast, leaning down and running little circles around my nipple with his tongue. I felt like my nipple was standing out a mile. A rock hard mile. Then he did the same with my right breast. Same result. And my clit felt like she was going to explode. \n\nHe traced soft lines from my cheeks, down my neck to my breasts, passing his hands over the fullness of their outsides, then in along the valley and swirling gently to the areola, but frustratingly not touching my yearning nipples, while I squirmed like crazy. I guess I was getting a demonstration of what using his hands could be like. What I knew was that I wanted him in me, and I wanted him in me now! \n\nThat wasn't going to happen. He was tantalizing me... teasing me... revving me up like one of those drag racing cars, right before the driver took off. I think they called it \"popping the clutch.\" \n\n\"Do you think we could slide the dress off?\" he asked and my simple response was, \"God, yes! Please!\" \n\nHe helped me sit enough to wriggle out of the uniform and bra, and I lay back down feeling more exposed and more ready than ever. I was sure I was soaking his bed. \n\n\"A stockings and garters girl,\" he mused, looking at my remaining attire. \"Ah, I remember it well!\" It sounded like he was quoting Gigi. It didn't matter to me. He could quote Lord Kelvin and I wouldn't care. That it was him was enough. \n\nHe eased my not so elegant white nurse's shoes off, and then my panties. I had shaved, as close as I possibly could, for him. I didn't want him coughing up fur-balls. I did want his mouth down there, because like he said, I remembered it well. What I didn't know was what his hands could do. \n\nI found out. \n\nWithout the bandages restricting them, his Magic Fingers could play... and God, did they play! \n\nHe started with the lightest of touches on my abdomen, tracing faint circles, ever widening until he was brushing my ribcage and gently stroking across my mons. I was so excited, I was vibrating. Then he moved to concentrate on my mons and down the insides of my thighs. I moved them apart, to make his access easier, praying he'd get to my clit before she burst like an overfilled balloon. \n\nHe was infuriatingly meticulous in the attention he paid my nethers. I was hoping and praying that he'd go down on me... I remembered his marvelous tongue and the exquisite, almost painful pleasure he'd given me. I would go to sleep masturbating to those images. \n\nI had no idea what would happen when he could use his hands, too. But he taught me. \n\nHe lowered his head to my mound as his fingers still drew lazy circles around my clit. I thought if he touched her with his tongue, I would explode. Instead, he gently spread my nether lips and began taking long, broad strokes from my anus to just short of my clit with his warm, wet, wonderful, - frustrating! - tongue. I was squirming under its Cyprian attentions, so badly did I want him to lick her. \n\nI was about to start begging when he distracted me by slipping a finger into my pussy and moving it around, exciting with precision places I'd only suspected existed. He probed until he found my cervix, which was more sensitive to his pleasurable touch than I'd ever imagined. He stroked the walls of my cunt - just thinking the word gave me shivers of the most depraved kind - and found my swollen spot on the anterior of my canal. \n\nI aced Anatomy and Physiology, and I knew exactly what he'd found. My paraurethral glands, more commonly known as the Gr\u00e4fenberg Spot, or G-spot, and I was very, very engorged - almost painfully so. Rubbing it made me feel like I had to pee. It also made me clench down on his finger, strongly. \n\nThe scientists can debate its existence to the end of time - I don't care. In my case, it was there and he was stimulating it and I was on the edge of incontinence. Or whatever the correct term is. Right then, it didn't matter. He was messing with me in ways I'd never imagined possible. \n\nHe slipped a second finger in, gently stretching me out and almost making me cum just from the fingering alone. He started doing that \"come hither\" motion I'd read about in Cosmo - I wasn't all academic, for Christ's sake - and I knew I was going to go over. Whether I wanted to or not, I was moaning with the pleasure he was giving me. I hoped to God that explicit expletives didn't turn him off, because I didn't seem to have a choice. \n\nThat's when he sucked my clit into his mouth and started giving me, for want of a better analogy, a blowjob. I guess my clit is kind of large. Large enough, anyway, that he could suck her in and run his tongue around her, like I had done to his glans when I was fellating him. I was excruciatingly on the edge but couldn't trip over. \n\nPart of me was afraid of losing it and peeing in his face. Part of me was just plain lustful, wanting more, more, more! Part of me was afraid of losing myself in his wonderful feelings. \n\nThey all took a hike when he stuck his little finger up my ass. \n\nThat was it. That was all she wrote. I went over like a cannon shot, arching up and screaming at the top of my lungs as everything let loose. Any embarrassment about pissing all over him took a backseat to the unbelievably intense orgasmic pleasure that rocked through me as I clamped down, hard, felt my heart pounding in my ears, felt the impossible tension in my body give way to utter relaxation and the feeling of knowing I'd sprayed him. I hoped to God he was a tolerant man. \n\nHe kept going. I couldn't fucking believe it! He kept going! \n\nI didn't even have a chance to come down before I was right back there on the edge again. His hands and mouth were giving me no choice. I had never felt this overwhelmed in my life. I had no choice but to cum again. And to spray again. And to wonder if I was going to survive this man. \n\nI must have gurgled out something that sounded like I was being strangled, because he eased up after the second massive cum and let me come down. \n\n\"Are you okay?\" he asked with innocence dripping from his voice. \n\n\"I... have never... felt... anything... like that... before... in my life!\" I panted out as I tried to catch my breath. \"You... are fucking... amazing!\" \n\nI could hear his chuckle. \"I guess having the use of my hands makes it better,\" he told me and I could hear the smile in his voice. \n\n\"No fucking shit!\" I told him. Polite wasn't in my vocabulary at the moment. \n\n\"Tossing the proper and going for the raw animal, I see...\" he said in that same pleased voice. \"Excellent!\" He paused for a moment before adding, \"Want to fuck?\" \n\nThat had to be the stupidest question asked, by anyone, ever. \n\n\"What the fuck do you think?\" I growled. There really isn't a better way to describe it. \n\n\"I think you're stretched out enough that it won't hurt this time,\" he told me as he crawled up between my legs. \"And I think you've got enough endorphins running around in your system to make this a very happy experience.\" \n\nI looked up at him and realized he was soaked from his hair to his chin and was dripping onto his chest with my pee. \n\n\"I am so sorry,\" I told him. \"I didn't mean to pee on you! Really... I couldn't help it.\" \n\n\"You think this is urine?\" he asked as he lifted my legs around his waist as he knelt. I nodded. What else would come out of my urethra? I watched, confused, as he took his hand and wiped some of it off of his face, then tasted it. \n\n\"Nope, not urine,\" he told me, then wiped off some more and offered it to me to taste. \n\nThis was getting really weird. What he had just done was so base... so depraved... but he didn't look like he'd turned into some kind of horned devil. He looked pleased. I decided to trust him and throw out every bit of basic conditioning I had. I took a lick off of his hand. \n\nHe was right, it wasn't urine. There was a little bit of an acid taste, maybe uric acid, but mostly it was bland to sweet, like fructose... like his semen. I realized it must be what they called \"fem-cum\" and he had it sprayed all over his face. And he was smiling. \n\n\"You are awesome when you squirt like that,\" he told me. \"Why didn't you tell me you did?\" \n\n\"I didn't know I did,\" I told him, kind of defensively. \"Or could.\" \n\n\"Another first, but I assure you, it won't be the last,\" he told me as he eased his big cock into me and I lay back, accepting and moaning. \"I think it's great... so don't apologize.\" \n\n\"Oh, God, Alex... please, just fuck me!\" I pleaded. He felt so huge and hot and well, dominating buried in me and all I wanted was this pleasure to last forever. \n\nHe started stroking and I went right back up and over again. I was so incredibly sensitive, and he was hitting all the right places, I just couldn't hold back. I was, in a word, helpless. \n\n\"Oh, fuck!\" he groaned after I'd cum a couple of times, just clenching and pulsing and vibrating beneath him. \"I'm close, Kayla. I hope you're protected by now.\" \n\n\"No,\" I had to admit. I didn't want to lie to him, even if I did want his baby. \n\n\"Oh, GOD!\" he groaned even louder and pulled out of me. Which left me confused. And even more confused when he crawled up over me to start rummaging in his nightstand drawer. \n\n\"Dammit!\" he nearly yelled in frustration. \n\n\"What's the matter, Alex?\" I asked. Apparently I'd taken a dose of Stupid. \n\n\"No condoms!\" he spat out. \"SHIT! Well...\" and he calmed down a little, \"as much as I love fucking you, Kayla, and you feel so incredibly good to me, I can't get you pregnant. To many things wrong with the timing and situation and all. We'll figure something else out... maybe your incredible mouth...\" \n\nA completely taboo, forbidden solution floated up from my masturbatory fantasies and my Conscience, or what was left of her, fought it out with my Lust before I amazed myself and let it leak out. \n\n\"What about my, um...\" I offered tentatively, shy and embarrassed all of a sudden. \"Um... what about my other place?\" I literally held my breath, waiting for his reaction. \n\nHe very slowly moved back to between my open and very desirous thighs, looking at me closely the entire way. \n\n\"Kayla, as wonderful as that sounds to an old horndog like me... I'm pretty big and you're pretty...\" \n\n\"New at this,\" I finished for him. \"So I'll be tight. But if you're gentle and you've got some Vaseline or something...\" I paused. I was fighting down the fear of what I was proposing. \"I'm willing...\" I finished meekly. \"But you better hurry, before the scaredy-cat in me changes her mind.\" \n\n\"There won't be any 'hurry' to it, if you're serious,\" he told me in his soft voice. \"But I absolutely don't want to do something that will hurt you or you'll regret later. I'm still working off the guilt of hurting you when I deflowered you.\" \n\n\"If you want out from under the guilt,\" I told him, getting my confidence back, \"you can look at it this way. I deflowered myself using your big flesh dildo. Just like now. This is my choice. You're not forcing me. Just please... I have no idea what I'm doing, so be gentle.\" \n\n\"Absolutely,\" he told me, then started to get out of bed. \n\n\"Where are you going?\" I really didn't want him leaving me right then. \n\n\"To get something other than Vaseline,\" he told me. \"Vaseline lasts a long time, true. But that's the problem - it lasts a long time. I'm getting something water-soluble.\" \n\nHe wasn't gone long before he was back between my legs with a squeeze bottle in his hand. \n\n\"Now, babe, you just relax and let me play around for awhile,\" he told me. \"It's going to feel really strange and that's okay. Just accept the feelings and if anything hurts, which it shouldn't, you let me know right away. Okay?\" \n\n\"Whatever you say, Master,\" I quipped and he froze. \n\n\"What did you say?\" he asked, carefully keeping his voice neutral. \n\n\"I said, 'whatever you say, Master,' as in, you're the Master and I'm the Student?\" I explained. \n\n\"Oh! Okay... good...\" He seemed relieved. He also began putting some of the cool - from my hot pussy's point of view - lubricant on my nethers, working it down to and around my anus, poking a little with a finger as he spread some inside. Then he went back down on me as he slipped an entire finger in, probing around deep inside. Or what I thought was deep. \n\n\"You called me Babe,\" I told him as I was assaulted by confused rushes of feelings from my nethers. It felt like my clit was trying to become a tentacle and slither down his throat, but the probing of my rosebud was just as intense. Not painful, but so different as to be distracting. \"Where does that... oh, God!\" I was momentarily distracted by his tonguing my clit. \"Where does... oh, FUCK!\" I went over that time and it felt great and it felt weird, because my ass was clamping down around his finger as my pussy pulsed. ",
        "\"Where-does-that-rank-with-Sweetheart-Luv-Bitch-and-Cunt?\" I managed to get out, all run together. \n\n\"Mmm...\" he virtually hummed into my pussy. \"Somewhere closer to Sweetheart than Cunt,\" he said around my labia, then eased another finger into my ass. \n\nI'd never had anything bigger than a rectal thermometer or enema nozzle up my ass and I felt like I was really getting stretched out. Not hurting though, just stretched. And I found out that in some positions, I could feel his fingers with my pussy, through the wall. Weird. And exciting. \n\nI about freaked when I felt him slide a third finger in. \n\n\"My God, Alex! What are you doing?\" I'm sure there was some panic in my voice. \n\n\"Just making sure I don't hurt you,\" he told me as he continued his oral ministrations. \n\n\"But that's three fingers you've got up my bum!\" I protested. \n\n\"Does it hurt?\" he asked and I had to admit it didn't. \n\n\"Then let's give it a minute,\" he suggested. \"Three or four healthy orgasms on your part and you should be ready.\" \n\n\"Three or four orgasms in a minute???\" I must've sounded incredulous because he laughed again. That wonderful, wonderful laugh I would do anything for. \n\n\"Well, maybe a bit longer than a minute,\" he conceded - then proceeded to drive me to the brink of unconsciousness by making me cum, hard, on the three fingers he had inserted, working them around and loosening me up as my body gradually gave up the fight and yielded to his superior pleasure prowess. By the time he took them out, I wanted his big cock so far up my ass that he would be cumming out of my mouth! \n\nWhen he finally did enter me, I thought I might get my wish. He was enormous! And I was still very much an anal virgin, despite his best efforts. He was slow, he was patient, he was easy, he was gentle, he was very concerned for my pleasure... he was perfect. \n\nI remember the guttural moan that escaped me as his glans popped past my anal sphincter. There wasn't any Proper Lady left. I was all Pure Lustful Animal. I'd thought I'd felt invaded, filled up, taken over when he had his cock in my pussy, but this... this was pure hedonistic bliss. A state of pleasure I could never have conceived, no matter how good my imagination. I was his, body, mind and spirit. \n\nFor some silly reason, I started singing Colbie Caillat's You Got Me under my breath. \n\n\"Oh, I just can't get enough, How much do I need to fill me up? \n\nIt feels so good it must be love, it's everything that I've been dreaming of. \n\nI give up, I give in, I let go, let's begin... \n\n'cuz no matter what I do, my heart is filled with you.\" \n\nAlex heard me and started chuckling, even as he eased that huge cock of his into my very virgin territory. \n\n\"Are you sure it's your heart that's filled?\" he asked with a smile. I knew he was being careful not to hurt me. \n\n\"Among other things,\" I smiled back. \"You can go ahead and push, if you want. I think I'm stretched enough and you're not hurting me.\" \n\n\"Oh, my God!\" That was me, when he took my suggestion. The rush was overwhelming and it took me a moment to realize I felt his balls slapping against my ass. He had that whole huge cock buried in me, completely. \n\nAnd I was going to cum. Again. Hard. From being fucked up the ass. Oh. My. God! \n\nMy moan of pleasure, my \"oh, yes!\" and my grabbing his ass and pulling was all the encouragement Alex needed to start giving me derri\u00e8re a proper pounding. I surrendered and let the awesome feelings wash over me. It was like he was in my pussy, but ten times more sensitive. \n\nHe kept it up and I kept rolling the orgasms over, one on top of the other, until I felt like I was going to pass out. I could feel him getting bigger and harder and heard his breathing getting labored. \n\n\"Kayla, I can't last. I'm going to...\" he tried to tell me, but I put my hand over his mouth, interrupting him for a moment as I told him, \"then don't, Alex. Cum in me. Cum deep in me. Fill me. Make me yours.\" Maybe words have powers I don't understand, because as soon as I said that, his groan became a growl, became a bellow as he tightened up everywhere and came in me, tripping me over with his hot seed pouring into me, making me feel like we had melted together. \n\nI don't remember exactly when it was that I passed out. \n\n* * * * * \n\nThe steady sound of the surf pounded in the background as we sat on my veranda, watching the daylight fade, picking at the remains of the barbeque pulled pork Marcy had made for us, holding hands and leaning into each other, occasionally stealing a kiss. \n\n\"You are a most amazing woman, Kayla,\" I told her. \"As much as I tried to avoid it at first, I just couldn't resist falling in love with you. I want, very much, to have you in the rest of my life.\" \n\n\"Is that a proposal of marriage, Alex?\" she asked me coyly, giving me a slight nudge, letting me know she was teasing me. But she sounded serious, too. \n\n\"It can't be,\" I told her. \"Not yet. And when we've had time together to get under each other's skin and we've had a few doozies of a fight, and we've shed tears over each other, and laughed hysterically, and maybe figured out what might work for a future together... then, when I propose, I'll do it proper. Ring, bended knee, the whole shebang. Until then, you've just got to know that I love you.\" \n\n\"I love you, too, Alex,\" she told me. \"I'll wait for you. I know you're the right man for me, but I also know you've got to do it your way, so I'll wait for you. You want me here? I'm here. You want me gone? I'm gone. But you'll always be in my heart, Alex. There isn't anything you can do about that.\" \n\n\"You deserve a lot more than me, Kayla,\" I tried telling her. \"I'm a retired old fart, not a rising young star. And you're going to want a family. You'll want someone around to help raise the kids.\" \n\n\"Alex?\" she asked, pausing. \n\n\"Yes?\" \n\n\"Shut up.\" \n\n\"What?\" I turned to give her a dead-on strange look. \n\n\"You're right we need to talk about marriage and kids and stuff. Dr. Sanchez pointed that out to me. But we don't have to do it now. Obviously I have to get on birth control, although I really do like you doing me up my ass. But I am going to have your children, and yes, that's a plural. I know you love me and you know it will make me happy. We'll work something out.\" \n\n\"What I'd like to see now is how far you can stretch your romantic side. You have an awesome place here, and I know you're part romantic or you wouldn't have brought Charlie back to me. So sweep me off my feet. Make mad, passionate love to me in the sand. Walk naked in the moonlight with me, arm in arm. Tell me how beautiful I am. Or how horny you are. Something. Anything. We have until Monday night and I want you for all of it.\" \n\n\"I know that makes me sound greedy, and maybe self-centered, but trying to protect you from me didn't work, so now I want you. All of you. As much as possible.\" \n\n\"Not the sand,\" I told her. She looked confused. \n\n\"No making love in the sand,\" I iterated. \"There's these little shit stinging bugs and they will wreak havoc with any plans you have for intimacy. There's a bug-free bedroom for that.\" \n\nShe smiled and I melted. I try to tell people I'm not a romantic. I'm a realist. I guess that wasn't going to apply to Kayla, not the way she was going. \n\nWe turned to face the last glimmers of day and to feel the soft breeze blowing off the ocean while the surf played its accompaniment and we held hands and thought about our future. \n\nSorry, Aldous, I thought. We're definitely headed into a Brave New World... \n\n[finis]"
    ],
    "authorname": "eidetic",
    "tags": [
        "man",
        "woman",
        "oral",
        "anal",
        "virgin",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/my-angel-of-mercy"
}