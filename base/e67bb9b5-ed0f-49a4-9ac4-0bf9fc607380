{
    "title": "Speech and Debate Pt. 11",
    "pages": [
        "Apologies that this chapter took a little longer than expected. Real life got in the way and I didn't want to rush the story just for the sake of speed. There's a lot of ground to cover so it's another extra long addition this time. There was more planned for this chapter, but length prevented it so I will be extending the series yet again, now to a planned 18 total chapters (reserve the right to go as far as 20) I hope you enjoy it! There are still more chapters on the way...and a possibility of a side line extension once this main series comes to a close. Fingers crossed!\n\n~D.A.M~\n\n*****\n\nThey Never Found the Breadcrumbs\n\nBy D. A. Mackey\n\nThe unrivaled way to rise each morning, should you have the option, is to find yourself in that clouded place where your dreams and your reality blend like watercolors, one into the next; where it's several heartbeats before you come to realize that the dream has ended and life begun anew. You want to stay in that limbo for as long as you can, to let it revive you and comfort you in a way your waking life never will. There is a small sense of loss that coats your mind for a while, a thin slick of oil on water, once the clouds are burned away by life; a benign sadness lingering just beyond recognition and evaporating to nothingness in a blink, leaving only a dim fading glimmer of memory behind.\n\nWhen my eyes adjusted to the dim morning light, tinted blue and pale yellow from the curtains that blocked out most of the dawn, I hadn't a clue where I was. I expected panic to take hold immediately, for my heart to race and my animal instincts to seize control of my muscles. But nothing happened. \n\nDaniel's muscled arm wound under my own and over my ribs and pulled me deeply into him. I sensed his presence and felt his warm skin against mine; that was enough to temper my compulsion towards panic. I felt his soft chest hair tickle the skin of my back, his hips pushed into my ass and softly thrusting with each deep breath. His thighs wound over and through my legs so that I couldn't have moved from his vine-like grasp if I'd wanted to.\n\nI could just make out the piles of black and white formal wear tossed uncaringly into the corner. Bright red and blue satin gleamed every now and then, when a dusty ray of morning light touched it's surface just right. My shiny prom shoes, laces still tied in perfect bows shone like beacons. Daniel's room solidified in my view, the familiar sights and smells falling into place like puzzle pieces while the fog dissipated. \n\nIt was all heightened by the touch, the feel, the smell of Daniel, hugging me tight to his body, allowing no space between us. I felt small next to him, though I was taller by full inches, but somehow protected and sheltered. We had slept side by side many times now, but this was the first time I could remember feeling this connected. Not just to him, but to where we were.\n\nWe had crossed some line after the prom. I was unsure where the path might lead us from here, but one thing was certain: we were now, officially, an \"us.\" We were linked in a way we hadn't admitted before. Maybe that link had always been there, even unrecognized. It was as if the admission itself granted a new perspective on places and things that had once been ordinary only hours before.\n\nThis was just Daniel's room yesterday. But now, I was a part of Daniel. I felt like I had a true stake in the place now, one that I hadn't felt before. I didn't own it, none of it was mine; but a part of Daniel WAS, and forever would be. His books, his bed, his body all became...more precious...to me.\n\nI closed my eyes and snuggled back into him. Moving even that slightly made Daniel's soft cock come to life against my ass. I arched my back like a cat on a sunny windowsill and ground myself into him. I felt his foreskin begin to pull back as his shaft swelled and grew along side my crack. I listened to Daniel's breathing, trying to sense when he would wake because of my movements, but I found no change. I smiled to myself and ground deeper into him, testing the limits.\n\nMy hole began to throb in anticipation every time Daniel's thick shaft glided over it. I bit my lower lip between my teeth and held my breath, trying with all I was worth to remain silent. I must have been lost in the sensations and imagination of the beautiful man behind me because I didn't hear his breathing change. I was in my own little world of ever increasing pleasure when I felt his lips press to the nape of my neck, his breath hot on my skin but sending shivers down my spine like I'd been thrown into a lake in December. \n\nHis next kiss was more forceful and he coupled it with a powerful thrust into my backside. My cheeks parted and held his entire rigid shaft between them, radiating with his heat. I laced my fingers into his and lead his hand and my own downwards. \n\nTogether, we traced down my stomach and over my bellybutton, past my well-trimmed pubes and right to the edge of my fully hard cock. I guided his hand forward, urging him to do what I knew he wanted.\n\n\"Fuck,\" I sighed when his fingers grasped the base of my shaft, just barely closing around my girth when he squeezed me tightly beneath his iron grasp. There was no denying that we were both fully awakened now, but my eyes remained closed, reveling in the feel of Daniel's grip on my rigid cock and his soft lips as he kissed his way up my neck to my ear.\n\n\"Good morning, baby,\" he whispered softly, taking my earlobe gently between his teeth when he spoke and then sucking lightly on my ear.\n\n\"Morning,\" I groaned, my voice dripping with my rapidly growing lust. I could feel his cock head dripping hot pre cum onto the top of my ass even as he jerked me and worked my own clear liquor into the taught skin of my quivering cock. His thumb pressed into the sensitive triangle under my slit and my body shook uncontrollably.\n\n\"Please.\" The word was so soft that I was almost unsure if I'd spoken it or just thought it.\n\nDaniel didn't even respond with speech; he simply adjusted himself behind me, his hips pulling away from me so he could line up his uncut cock with my waiting cavity. I held my breath, as if I'd crested the first hill on a roller coaster, just waiting for the imminent drop and rush that was surely to follow.\n\nHe pushed forward gently and my body reacted on instinct, opening for him easily, pulling him inside me. His cock felt massive as it invaded. My hole spasmed around him, squeezing him tightly and then opening smoothly, begging him to continue his march forward. He never stopped his slow up and down movements on my cock as he eased himself gently, slowly, lovingly inside me.\n\nI twisted my torso around, unwilling and unable to keep my eyes on the far wall anymore, needing to see his face. It was an awkward position to be sure, Daniel's cock slowly pushing into my smooth white ass as I twisted my upper body into knots to reach him. \n\nDaniel's brown eyes met my gaze and I was nearly struck dumb with their beauty. His eyes were always beautiful and deep, flecked with bright spots of gold and glowing amber on a background of warm cinnamon. But they'd always been like a lake to me. No matter how clear the water, there are places in a still lake where you can't see the bottom, can't even sense it. It could go on for miles. Daniel's eyes had always been like that, deep and mysterious and somewhat unknown. But today...the first morning after our love for each other had received it's true naming...today, it seemed I could see through them to the very core of his being, as if his soul was right there for me to touch. \n\n\"I love you,\" I whispered as I stared into him, watching his pupils grow before me. I was rocked by that nearly painful level of bliss that accompanies both love and mind blowing sex, like the pressure of a knife on the sensitive skin of your wrist, pressing hard but never breaking the surface, shot through with the full trust that it never would. \n\n\"I love you more,\" he said with a broad smile, flashing me his perfect white teeth, his newly revealed eyes brightening even further. My mouth hung open a bit.\n\nGods above, but he was so beautiful! \n\nPart of me believed that this whole thing must be a dream. This couldn't be happening to me. I would wake up any moment and find myself in the airport waiting to board the plane to Boston.\n\nHis prick was nearly fully inside me, pressed tightly against that magic spot. My cock pulsed a huge jet of precum into Daniel's waiting fingers and my eyes fluttered closed, my neck losing the ability to hold my head up. Daniel's lips on mine drove the last breath from my body as his hips settled fully onto my ass, his black pubes tickling my smooth skin. I found myself flung back into that clouded place between dreams and life once more, but fully aware that I was awake, alive, and on fire. The watercolors swirled in my vision from the bright whites of passion to the deep mossy green-browns of my connection to Daniel and the earth herself.\n\nDaniel went slow, slower than ever before. It seemed it took him hours to draw himself from deep inside me, his cock head raking against my prostate for minutes, sending me into spasms that paralyzed my nerves and set my muscles to shaking. His tongue slowly swirled over mine, and the deeply satisfied sounds that came from his chest, like a bumble bee the size of a golden retriever approaching from beyond a distant hill, rumbled into me and through me. Just as slowly, deliberately, he pressed back inside and repeated.\n\n\"D...Dan...Daniel...please...please...make me cum, baby.\" \n\nPart of me hoped my whimper-riddled begging would encourage Daniel to pick up his pace. But Daniel read my body like his favorite book. His slow and undulating thrusts stayed the course; he never let his passions gain the upper hand and take control until he pounded my twitching ass into submission. Instead, he tortured me and forced my body to respond to his at his pace.\n\nI let out a groan that quavered and broke. Daniel just slipped his cock deeper inside me again. I felt his shaft throbbing with a steady beat, expanding against my button and driving me to the brink of insanity as his talented fingers still played my cock like a concert violinist.\n\n\"I'm close...oh jesus, I'm so close...\"\n\nDaniel's free hand came to my cheek and turned my face towards his again. He kissed me lightly on the lips and stroked my cheek with his thumb.\n\n\"Do you want me to shoot my load inside you?\" he whispered. I bit my lip and nodded for all I was worth.\n\n\"Are you going to cum for me?\" he teased. His grip tightened on my cock and his speed picked up a bit on my shaft, while his cock still worked in and out of my hole with measured slowness. \n\n\"Yes,\" I croaked, my eyes begging him to release me.\n\n\"I love the way your ass grips my cock, baby. You're so tight. You feel that?\" \n\nHe pulsed his cock inside me, making it swell, pulling my hole open even more. I screamed and a jet of precum flew from my cock and soaked the bedsheets. \n\n\"Shoot for me, David,\" he begged and pulsed inside me again, thrusting in small motions, just barely pulling out and pushing in again so that his rock hard cock head scraped and pressed into my prostate at all times. \"Cum for me and I'll give you my load.\"\n\nI panted on the bed, unable to catch my breath or form words. My throat clenched up and I felt my chest tighten like someone was sitting on me. My fingers grabbed at handfuls of the sheets and comforter in a death grip that turned my already pale knuckles to the color of bleached bone. The sounds that escaped from me were those of a strangled man, breathless gasps and grunts I barely recognized as my human, much less my own.\n\nI felt my balls pulling up tight and knew that I couldn't hold out any longer, though I couldn't convey this to Daniel. He continued his slow short thrusts against my prostate and my breath grew more ragged. I slammed my mouth into his and screamed through the pleasure, pushing it into him, feeling him receive it.\n\nI hit myself square in the face with my first volley and followed it up with several more until I was covered in my own jizz. I lost count when I felt Daniel finally cease his tiny thrusting against my spot and slam his thick cock to the hilt inside me. His groan and my own melted into each other through our kiss while I felt him spew his load deep into me, jet after jet of his burning hot seed filling me up.\n\nComing down from that euphoric high was like waking up all over again. For a few moments, Daniel and I hovered in that abeyance together. Daniel recovered first.\n\n\"Screw Folgers,\" he quipped, rolling onto his back and thus freeing his cock from my still aching hole, \"THAT is the best part of waking up.\"\n\nI couldn't help but laugh. I rolled over and into him, throwing my arm over his chest and resting my chin on his hairy pecs, completely uncaring of the cum that I smeared onto the sheets in the process. I edged forward and kissed him lightly.\n\n\"You'll get no arguments from me on that front.\"\n\nDaniel ruffled my tangled mass of blonde hair and brushed an errant strand from my face.\n\n\"You sure you're okay, babe?\" He asked. \"I mean, about last night? Amy and all that bullshit?\"\n\nTo be honest, I had almost forgotten about Amy and her tirade of bigotry and hate. It spoke very highly of Daniel that something which would have wounded me beyond easy repair a few short weeks ago was brushed off without a second thought. Hell, some part of my brain was STILL stewing over that B+ in Spanish; but, for Amy I felt...nothing.\n\n\"I'm sure,\" I said, favoring him with my best smile, staring into his eyes, so new again to me. \"Who could remember you're sorry excuse for a girlfriend...\"\n\n\"EX-girlfriend,\" Daniel corrected me quickly.\n\n\"Ex-Girlfriend. Who cares about her when I've got you?\" \n\nHe smiled that crooked half smile and I kissed him again. It was strange to feel my heart racing in my chest, skipping along lightly. There was still a part of me that equated that heart-pounding feeling with fear and anxiety and the desire to run from oncoming torment. I still had some adjustments to make, old habits to break.\n\n\"Good!\" he barked and slapped my bare ass cheek with a loud pop. \"Because I'm on top of the fuckin' world!\"\n\nI rubbed at the sore spot he'd just given me, sure that a well-outlined five fingered palm print would appear there in no time, but couldn't help but giggle as Daniel wiggled out from under me and leapt to his feet. I was treated to a spectacular view of his rounded ass and semi-hard cock as he danced and shimmied around his room, kicking his feet and pumping his fists in the air. For such a masculine appearing man, it was hilarious to watch him in a state of boyish glee. I imagined this must have been what he looked like as a little boy on Christmas morning. \n\n\"Remind me to get us some dancing lessons!\" I laughed as he continued to shake and shimmy. He threw back his head and roared a laugh.\n\n\"Deal! But nothing's gonna bring me down today. Not even your wit, you ass hole.\" He winked at me, turned, and waggled his ass in my direction.\n\n\"Careful with that thing,\" I admonished sarcastically. \"I'm not to be held responsible for what I might do to it if you keep presenting it to me.\"\n\nI could have stayed there in Daniel's bed and watched him dance around his room all day. There was a brief moment when I thought that might actually happen.\n\n\"Get up! We have to shower and get dressed,\" he said with unencumbered glee, extending his hand to me and motioning me to join. I took it and he pulled me from the bed in a swift motion that found my limbs flailing in the open air before I suddenly crashed into his massive wall of chest muscles. Before my feet could settle to the floor, his arm was around my waist and we were dancing together in quick swaying motions. \n\nWell, HE was dancing, I was still not too certain my legs worked after the fucking he'd given me. But I was content to let him hold me up. \n\n\"Where are we going?\" I asked through my fit of giggles.\n\n\"Only the best for you, baby!\" he intoned with pride. \"I'm taking you to the International House of Pancakes!\"\n\n\"Oo, la la,\" I joked and feigned a swoon. He caught me easily and maneuvered my limp torso back up to his and kissed me dramatically.\n\n\"I know, right? I'm an impressive specimen. So let's get that beautiful ass of yours scrubbed up and out the door.\"\n\nHe nearly yanked my shoulder out of the socket when he turned and dragged me towards his bathroom.\n\nOur fingers were wrinkled like shriveled raisins by the time we stepped out of the shower. We hadn't exactly been very conscious of the time, after all; or utilitarian and effective with our time management. How can you expect me to focus on the actual point of bathing when I got to run my soapy fingers over every square inch of Daniel's olive skin in the attempt to wash him clean? \n\nEventually we had to turn off the steamy water. Even drying off was a task that took decidedly longer than absolutely necessary. I took my time running the terry-cloth over his high, tight calves and up his massive thighs. He flexed for me as I worked, the ligaments standing out under his hairy skin, rolling like gentle hills and valleys from one to the next. Two could play at that game: I opened my mouth and sucked in his almost hard cock and bobbed up and down for a moment, making sure his knees shook before I stopped.\n\n\"You are evil. We're already late as it is, and you're gonna make me stay in this room for the rest of the day if you don't stop. The rest of the team is probably already waiting for us.\"\n\nThat certainly got my attention.\n\n\"The guys are gonna be there?\" I asked. \n\nDaniel nodded.\n\n\"Is that okay? I thought...,\"\n\n\"No, no!\" I started. \"It's fine. Of course it is. I love the guys.\"\n\nDaniel arched an eyebrow at me.\n\n\"It took you nearly three months to say you loved me, but the entire Baseball team get's it in a few short weeks?\"\n\nI punched him in the chest. Sometime soon (for the sake of my knuckles, alone), I would have to learn that trying to impress any emotional outburst onto Daniel with my puny physical strength was as futile as riding a bicycle from New York to London. He didn't even flatter me by pretending to budge.\n\n\"Shut your mouth. You know what I meant.\"\n\n\"Do I?\" He asked. \"You may have to tell me again.\" He smirked at me. I sighed dramatically and acquiesced.\n\n\"I love you.\" I placed my palms on the wide planes of his chest and gently scratched my nails over his skin. \"You big hairy ox.\"\n\nHe kissed me tenderly.\n\n\"Good. Cause it would truly suck to love you as much as I do and not have you love me back.\"\n\nMy knees trembled. I used my grip on his torso to steady myself. I wondered how long it would be before those words tripping off Daniel's tongue would cease to make my head spin. Part of me hoped that day never came.\n\n\"Woah there.\" Daniel said, lifting me up. \"You okay?\"\n\n\"I'm fine, I'm fine,\" I assured him, \"it's just a little overwhelming still...hearing you say that.\"\n\n\"I'll stop if you want?\"\n\n\"Absolutely not. Don't you dare.\"\n\n\"Good. Cause that was a straight out lie. I love you, too.\"\n\nI laughed and turned to walk back to the bedroom, thankful that Daniel had a private bathroom so there was no need to cover up. I sat on the end of the disheveled bed and finished drying off. Daniel stood in the bathroom doorway and watched me, making no effort to conceal his stiffening cock. I loved to watch his foreskin roll smoothly away from the darker skin of his cock head as it lengthened and began to arch gently upwards, his full balls always hanging underneath like sandbags on a hot air balloon. The effect on my own cock was, as always, instant. I decided to change the conversation as quickly as possible or else there was a distinct possibility that we would NEVER leave his room.",
        "\"After everything that happened last night, with Amy and all that, and then leaving with me,\" I started before I realized I didn't really know how to finish my question. I faltered and stammered a bit. \"I mean, do you think...? Fuck, I don't know. I mean, everyone knows now right? About us?\"\n\nI was blushing. To this day, I do not know why, but my face was red as a beet before I finally got out the thought. I guess it was the idea of being a known item now, and all the changes that would bring. Daniel had held my hand as he lead me from the ball room. Surely everyone had seen us and guessed what that signified? Right?\n\n\"I don't think so, babe,\" Daniel said with calm, collected ease. \"I mean, Ian knows, of course. I think Paul and Gordon were blitzed out of their minds. It's a crap shoot wether they'll even remember anything at all, much less the implications of me holding your hand.\"\n\n\"And Coach B,\" I murmured to myself, my brain already going a million miles an hour, planning for a hundred possible eventualities, listing people who may know, did know, and didn't know. \n\n\"Coach knows?\" Daniel asked, a smidgen of concern finally entering his voice. It took me a moment to register what he was asking and what I had said.\n\n\"Fuck. I totally forgot to tell you after last night. I'm sorry, baby. Coach B talked to me for a while before all that shit went down. He knows. He's known since that first morning he walked in on us in the shower at school. Remember? After you made me run to school?\"\n\nDaniel smirked and snorted a little laugh. \n\n\"Of course I remember. I remember every time with you, David,\" he said as he walked towards me and sat beside me on the edge of the bed. Our finger laced together without the need for either of us to hold our our hands in supplication. It just felt right to be connected to him when he was that close to me. \"I guess it makes sense, now that I think about it. He smiled like a damned hyena when I suggested to him that you should be the Team Manager.\"\n\n\"You're not as sneaky as you thought, huh?\" I teased. He squeezed my hand and nudged me gently in the ribs.\n\n\"It got me what I wanted in the end, didn't it.\"\n\n\"Oh!\" I squeaked, remembering another important tidbit of information, \"you're not crazy, by the way! There WAS someone watching that night in your Jeep. Well, not watching,... not really. Coach just forgot his bag and happened to see us. Said he had to run like hell and hid in his office until we left.\"\n\nDaniel roared with laughter until his eyes brimmed with tears.\n\n\"No shit?! That's hilarious! He could have at least told me so I didn't think I was headed to the looney bin on the express train for paranoid delusions and seeing shit!\"\n\nDaniel did his best to ease any lingering fears I may have been harboring while at the same time urging me to move faster. He had finally checked the time and pronounced us, \"late as shit.\" I didn't have any clothing other than my tuxedo, an outfit that would be out of place at an IHOP, where the \"No shirt, no shoes, no service\" sign on the front door was an actual necessity gleaned from past instances. \n\nDaniel handed me a pair of his basketball shorts and a tight black t-shirt. Though he could have dressed in jeans and a nice polo, as was his usual style most warm days, he mirrored my own athletic attire instead, and to much greater effect if you asked me. \n\nWe rushed down the stairs and towards the kitchen. I had to follow behind him. I had been to his house many times, but I still wasn't entirely sure where each hallway lead in the massive floor plan. Before we got to the kitchen, Adam stepped from a side hallway and blocked our path.\n\n\"Mornin', little bro. How'd you sleep?\" He winked.\n\n\"Fuck off, Adam. We're late,\" Daniel shot back, obviously annoyed at the interference. \n\n\"Cool your jets, dipshit. Just wanted you to know that you two weren't exactly quiet when you came in last night. Catch my drift? I could hear you from my room and Mom's is closer...so...\"\n\nI could have died. \n\nI may have, actually. I remember the blood suddenly pounding in my ears and my vision going kind of wonky for a bit. Daniel's brother had HEARD us last night. After the limo ride home, we hadn't really stopped our sexploration and utterances of sweet nothings and words of love and devotion until physical exhaustion forced us to. \n\n\"You can pick 'em, lil' D.\" Adam smirked. \"He is definitely a hottie when he's blushing to beat the band.\"\n\nYep. \n\nDead.\n\nDeceased. Please send donations to the David-is-Done-Fund in lieu of flowers.\n\n\"Hands off. You're older, but I can still hand you your own ass in a skinny minute,\" Daniel warned. \n\nIt sounded like a joke to me, sibling rivalry at it's most basic. But buried beneath it's mundane normalcy, there was a razor sharp edge of an actual threat. If it came right down to it, and Daniel had to choose between me and his brother...well, hasta la vista Adam. That helped to ease the burning ember that had become my face. A bit.\n\nAdam raised his hands in surrender and pressed himself to the wall so we could pass.\n\n\"Just thought you should know before you walk in there and Mom stares at you till you spill your guts.\"\n\nI did my best to mouth the word \"thanks,\" to Adam as I passed. He winked at me again. There was something about that man that just...\n\n\"Morning, you lazy Larry's!\" Daniel's mom sang at us as we entered the kitchen. \n\n\"I thought for sure you two would sleep all day!\"\n\n\"Good morning, Ma'am,\" I said sheepishly, feeling the heat returning to my face again in full force, accompanied this time with the pounding heart and anxiety that damn near gnawed a hole in my stomach.\n\n\"So, sit, sit, sit. Tell me everything? How was prom? Why'd you come home early? I expected you to stay at the hotel last night. When I heard the front door open I was half way to the shotgun under the bed before I recognized your voice, Daniel.\"\n\nI swallowed hard against the lump in my throat.\n\n\"I'll tell you all about it later, Mamma,\" Daniel said, grabbing an apple from the silver bowl on the island counter and tossing one back for me as well. I actually caught it. Me? The homosexual nerd caught something thrown in the air. I was silently cheering for myself. \"We're running late.\"\n\n\"Can't you at least stay for some breakfast?\" she asked, actually sounding hurt.\n\n\"That's what were late for. But I promise we'll talk later, okay. We really have to go.\" He leaned in close and gave her a peck on the cheek.\n\n\"Alright, then. Drive safe. Don't stay out too late.\"\n\n\"We won't,\" Daniel promised in the way every teen always promises. His hand was on the door handle when his diminutive mother spoke again and stopped him in his tracks.\n\n\"Don't forget you've got to take the SATs again tomorrow.\"\n\n\"What?!\" Daniel bellowed. \"I've already accepted my place at State! Why do I need to take them again?\"\n\nDaniel's mom got very serious, very quickly. Southern Mammas have a way of running to the extremes of the emotional spectrum like no other. I've often wondered if Mercurial was originally a name for a woman from the South.\n\n\"David has been sweet enough to give you his time and tutor you for weeks now. Place at State or not, you will not make his efforts go to waste young man. Do I make myself clear?\"\n\n\"Yes, Ma'am,\" Daniel sighed, the wind gone thoroughly out of his sails. My mouth hung open to my chest. I would have to ask her to give me lessons. It was truly an amazing trick.\n\nDaniel grumbled to himself all the way to the Jeep. He didn't stop grumbling until we had both gotten in, strapped on our seat belts and held hands over the center console. I smiled as broadly as I could. I liked Daniel when he was stewing and introspective. His eyebrows drew down over his eyes and he stuck out his lower lip in almost a pout. Watching a full grown masculine man pout is cute sometimes. To a point. There are limits, of course. \n\nBy the time we arrived at the IHOP, he was back to his normal self, his thumb running in small lazy circles over my hand. \n\nThe hostess in her white button down and blue apron barely looked up from her station when we walked in the door before she mumbled the apathetic greeting that Corporate Headquarters had commanded her to:\n\n\"Welcome to the International House of Pancakes. How many in your party?\"\n\n\"Umm, we're here to meet...\"\n\nThe roar of \"DANIEL!!\" and \"DAVID!!\" that assaulted the air waves from a big semi-circular booth off to the left got not only our attention, but also the hostess'. When she looked up and finally saw Daniel standing before her, I was filled with a great swell of pride. Her eyes got very wide and her mouth fell open a bit as she took in the beautiful man standing before her, his toned arms and broad chest outlined perfectly even in his plain t-shirt.\n\nAnd you can't touch him...he's all mine. \n\nI smiled very broadly and nodded my thanks to her as we headed towards our waiting companions. To say they were the best dressed table in the house was like saying that Marilyn Monroe was a decent looking chick. They were resplendent in their finery from the night before, a little rumpled and wrinkled here and there, but still dashing none the less. Maybe it was a sign of their upper middle class upbringing that they had chosen to retie their bow ties and vests. Their cufflinks were even still on, their semi-precious sparkle lost on the fluorescent lighting of the restaurant. \n\nTall Paul and Gordon looked like they hated the world and everything that walked upon it's surface. The bags under their eyes could have held enough clothes for a honeymoon in Europe and they both had lost some of their youthful color, replaced with a slight tinge of green. They had joined Ian in trying to get our attention when we walked in the door and seemed to be regretting the decision to produce sound or exert any effort in the first place.\n\nAdrienne, Amanda, and Katy smiled pleasantly at both Daniel and I as we stood at the head of the table. They looked identical to their glamorous selves from the evening before: every hair in place, every pore refined and eyelash blackened and curled. Even carrying only those tiny little handbags they had managed to scrounge together enough beautification accouterment to maintain their flawlessness. \n\nDaniel scooted in beside Ian on the side of the booth occupied by the boys and I followed suit, taking the place at the end. Ian wasted no time and dove straight into the deep end.\n\n\"Dude, are you okay?\" he asked, leaning around Daniel to get my attention. \"That was some utter bull shit that bitch pulled last night.\" He glanced at the girls. \"Sorry. But she IS a bitch.\" The girls put up no argument to the contrary.\n\n\"I'm fine. Promise,\" I said in my best reassuring voice. It really was sweet of him to worry.\n\n\"We are all worried about you, guy,\" Gordon slurred more than his usual. \n\n\"Mhmm,\" Paul added, apparently the worse off of the drunken duo.\n\n\"Thanks, but I swear I'm okay.\" \n\nDaniel's strong hand rested on the exposed skin of my thigh and he squeezed lightly under the table. I wondered if anyone had seen. \n\n\"I don't know what got into her,\" Katy said. She had that strange way of raising her inflection at the end of every sentence so that I was never quite sure if she was asking a question or making a declarative statement. Either way, I was touched that she was making an effort to show any emotion towards me at all, much less sympathy. I could count the words she had spoken to me in our four years of school together on two hands.\n\n\"Yeah. I mean, she's never been the nicest person on the planet, but that was just...\" Adrienne offered and shuddered in disgust at the end.\n\n\"Totally.\" \n\nThat was Amanda. She never was one for words. But I'd be damned if she didn't have the body of a Victoria Secret model. I had no fears for her future, despite her apparent and shocking lack of vocabulary.\n\nI didn't really know how to react. Even with my rising social standing, these three former minions of Amy had never paid me much attention. Begrudging smiles and cordial lifts of the head was about it. Before Daniel, I doubt they even knew I breathed the same atmosphere. For them to speak to me at all was overwhelming, and it conjured up the memories of just how awful Amy had been last night. \n\n\"Thanks.\" I whispered and stared at the paper placemat before me. Daniel squeezed my thigh again and I brightened a little.\n\n\"Has anyone heard from her yet?\" Daniel asked. Our six companions all shook their heads no.\n\n\"She's probably lying in wait behind the bushes to take me out with her fingernails sharpened to a razor's edge.\"\n\nI have no idea why I said it. I certainly had no intention of speaking, but my inner monologue came rushing out and I spoke the words to the table. My horrified expression when I realized what I'd just said softened when the entire table, the girls included, burst into raucous laughter.\n\nOur meal was a pleasant as any IHOP meal can be. We chatted amiably about school and final exams and graduation. We dropped the graduation topic rather quickly when we recalled that Katy wouldn't be walking across that stage with us since she had to repeat her Junior year. It felt strange, since she'd been a staple of the school hierarchy for all four years I'd been there. But all told, breakfast was a success.\n\nSomewhere in the middle of our airy conversation, Daniel reached for my hand under the table and took it in his own. My gut reaction was to pull away as quickly as possible in case someone saw us. We were in an IHOP. In the South. I highly doubted there was a weekly PFLAG meeting scheduled in that particular location. But Daniel held firm. When I tried to move my hand his fingers gripped mine ever tighter and he looked at me quickly. His eyes were almost hurt. My heart broke and I gave up any attempt at resistance.\n\nBut I still wasn't sure if anyone at the table actually KNEW. They made no hints, no comments, no jokes, nothing to indicate that anything had happened last night except Amy had berated me, Daniel had confronted her and then taken me home. None of them even asked if I had gone back to my own home or to Daniel's. \n\nIt was a weird place to be in. I was waiting for someone, anyone to say something, drop a hint that they knew what was going on. Even a glance down towards our hands. A smirk of disgust. Something to let me know which way the winds were blowing. I could at least prepare if I had the slightest clue. But I got nothing. \n\nI was on the cusp of \"coming out\" with Daniel as a couple. But they weren't going to make it easy. It seemed that if we were going to be a couple in public, we would have to declare as much from our own mouths. Our little hand holding last night and the small clues I felt were glaringly obvious from my point of view were not sufficient evidence to my peers. \n\nI was used to planning for every eventuality, each way things could go down. I could find the quickest escape route and road to safety and survival without even thinking about it. But now I stood at the center of an intersection with no road signs. How can you plan to run when you aren't even sure when or where your feet will hit the ground? Or even if they will? \n\nMy single solace came from the fact that Daniel was up in the air with me. Better than that, he tethered me to reality, his fingers interwoven with mine keeping me grounded. Without him...I didn't want to think about what could happen without him. I squeezed his fingers tightly and didn't stop until I could feel his heartbeat through my skin. \n\nI was shaken from inside my skull by the sound of a loud blast from a car horn. The girls reacted almost immediately.\n\n\"That's our ride,\" Adrienne said as she scooted from the booth and smoothed her gown.\n\n\"Thank you for a lovely evening, gentlemen,\" Katy offered demurely, following her friend out. Amanda was last and favored us with a smile and twinkle of her bright green eyes. I wondered what was going on behind those emerald spheres. \n\nThe boys and I made our goodbyes and watched the trio leave. Katy and Adrienne were already to the door when Amanda stopped, turned, and shuffled quickly back to the table. I figured she must have forgotten her purse.\n\nIt wasn't until her arms were around my neck and her face pressed next to mine that I realized what was happening. I didn't know what to do! I was frozen in my seat, smelling her light lavender scented skin and completely unable to return her unexpected show of affection.\n\n\"I really am sorry, David,\" she whispered close to my ear. \"You didn't deserve that.\"\n\nShe straightened and smiled at me. I think I smiled back. I hope I did.\n\n\"You looked great last night, by the way. See you at school!\" she chirped and bounced off to rejoin the others.\n\n\"Dude, you should see your face right now,\" Ian snorted as he let out a laugh. \"I know you're gay and all that, but she just hugged you. You look like she just showed you her lady parts.\"\n\nGordon and Paul (and yes, even Daniel) snickered at that. I was happy to see that the effort redoubled the hangover on both of them.\n\nOnce the girls were gone, it became apparent that Gordon and Paul had both been just barely holding it together for their benefit. Paul folded his gangly arms on the table and rested his head on them, covering his eyes. Gordon didn't even cushion his head with his arms, just went forehead first straight to the shellacked table top. I may not have been raised in the Cotillion and proper table manners set, but even I could read the signs that breakfast was at an end.\n\nThe drunk boys shuffled towards the parking lot with unintelligible grumbles about Ian hurrying up and driving them home before they puked in his car. The door closed behind them and left Ian, Daniel and I to pay for our meals.\n\n\"And I thought I was supposed to be the dense one,\" Ian said, elbowing Daniel in the ribs, which given the height disparity was located closer to the shoulder than the ribcage. He handed the cashier his credit card. \"Seats 1 through 6 please.\" He smiled at the middle aged woman manning the register. I watched his pecs bounce beneath his tuxedo jacket and saw the poor woman's eyes bulge a bit. \n\n\"They really don't know do they?\" Daniel asked. I had finally shaken off most of the shock from Amanda's unexpected physical interaction and returned my attention to their conversation.\n\n\"Apparently not. I mean, I guess I had more clues to go on, given the hotel room at the away game and all but still...\"\n\nIan blushed a bit and glanced at me. I winked at him and watched his color deepen to an even more intense scarlet. I loved my natural ability to turn such a large and masculine man into a stereotypical quivering school girl with only a wink of my eye. Ian cleared his throat and ran his fingers through his short hair while he composed himself.\n\n\"So how was your night?\" he asked me, stuffing his long white paper receipt into his pocket as Daniel handed the cashier his debit card to pay for his and my meals. I didn't even hesitate or try to offer him money to cover my own breakfast. It hadn't taken very long for me to get used to the idea that, sometimes, Daniel would just take care of me. I made a mental note to save up some money to take him out to dinner on my own dime someday soon.\n\n\"Good,\" I said, my face heating this time as I recalled our sexually adventurous trip back to Daniel's house from the ballroom. \"Very good.\" \n\nI smiled and glanced at Daniel, found him already looking in my direction. We shared a small smile and I walked past him when he held the clear glass door open for me and Ian to leave International waters and return to American soil.\n\nIan followed us to Daniel's red Jeep, easily found amongst the assembled vehicles. I scooted in on the passenger side and Ian followed Daniel to the driver's. Daniel sat and started the Jeep easily. Ian rested his forearms on Daniel's fully open window and leaned easily inside the cab. His massive shoulders and bull-like chest blocked the entire open space. I realized that perhaps Ian's own massive SUV wasn't a sign of his parent's higher than average income level, but rather a necessity for a boy who was built larger than two average men put together. ",
        "Daniel reached for my hand on the middle console and I took it without thought. I was amazed at the quickness with which ease of affection had taken over my life. At least around Ian. I instinctively trusted him. Yes, we were in public, but the semi-private space of the car, only seen by Ian was a safe space for us. Ian smiled at us from his easy leaning stance.\n\n\"Nice. Very nice. I'm happy for the two of you. Really,\" Ian said, his usually macho bravado replaced with sincere interest. Daniel returned Ian's smile and squeezed my hand again. \n\nIan straightened and looked around the parking lot for his own vehicle. It was easier to find, even than the bright red Jeep; not only because it was a massive black vehicle that wouldn't have been out of place in a war zone, but also because either Gordon or Tall Paul were loudly depositing the contents of their stomach on the ground somewhere near it's general vicinity . Ian's face screwed up in annoyance.\n\n\"Jack asses. Both of them,\" he sighed. \"See you guys at school, yeah?\" we both nodded. Ian waved his goodbye and vacated the driver side window. \n\nHis shoulders were gone for only a moment before he returned in a flash.\n\n\"By the way, I know they rest of these weirdoes are blind, deaf, and dumb, but what's the deal with school? Are you guys...are you 'out?' Boyfriends? Not that I care, of course. I just wanna know what to expect is all.\"\n\nDaniel looked to me and raised his eyebrows with the questions, allowing me the honor of response. His eyes were open and hopeful. And my stomach was suddenly in knots again, and not just from Daniel's beauty.\n\n\"I don't know yet,\" I said quietly. \"We are...we...I,... I don't know. We're together. Boyfriends, I guess, works. Maybe. I'm just not sure.\"\n\nDaniel's face fell a little bit. I wondered if he was somehow excited to come out, like a soldier on the front lines on an ancient battle field waiting for the horn to sound the advance, bouncing on his toes, adrenaline making him feel invincible and immortal. I envied him that. I was excited, of course I was. But I was also even more terrified. Daniel and Ian hadn't ever had to undergo the negative side of the social order. Their optimism was infectious, but I had real life experience, honest to god scars and wounds that would never let me forget that people, even or maybe especially teenagers, have a capacity for causing pain and torment the likes of which would make a serial killer blush. \n\n\"I love him. He loves me,\" Daniel said, turning to face Ian again and favoring me with another squeeze of my hand. He could have been saying, \"My Jeep is red.\" It was that matter of fact.\n\nIan's face split into a wide smile. When he smiled like that, I was able to forget his bulk and muscles, his masculinity and bluster. That smile revealed the boy he'd been, and the teenager he truly was.\n\n\"Heard, received, and understood,\" Ian quipped, his voice rising. It was a little disconcerting to watch a man like him bounce on his toes in excitement. Disconcerting because it ran counter to my own stereotypes of how a guy like him SHOULD act. But I'd be damned if it didn't make me love the big muscled lummox. I wondered if I had somehow stumbled into a \"big brother/little brother\" kind of relationship with him.\n\n\"Oh. I forgot to tell you. You owe me fifty bucks,\" Ian said, holding out his open palm as if he expected Daniel to fill it with cash right then. \"My Dad got a call from the Limo company that there was an additional cleaning charge. Apparently, someone left a bit of a sticky mess in the back seat?\"\n\nDaniel cleared his throat and adjusted the rear view mirror to avoid looking at his teammate directly. \n\n\"I'll give it to you at school.\"\n\nIan laughed, waved to the both of us and walked to his SUV and the two jocks-in-distress that waited for him there. Daniel and I were in a full blown fit of giggles and guffaws before we had fully pulled out of the parking lot.\n\nThe next afternoon, a bright and clear Spring Sunday, I waited in the parking lot of one of the gigantic public high schools for Daniel to finish his SAT's. He had huffed and puffed and sulked about having to wake up at the crack of dawn to take a test that was essentially for the sake of his health at this point. But his mamma had held firm and Adam had held his smirks and side-eyed glances to a minimum as his littler brother twisted and tried to evade three and a half ours of pointless standardization. \n\nI had picked him up from his house early that morning, the first time he would be riding in MY car. He was too pre occupied and brooding over his own misfortune to put up any resistance when I offered to drive. I spent the hours in the parking lot studying for finals next week and listening to the radio. Unlike the commonly held assumption of teenagers and their loud, crazy tastes in music, I preferred NPR.\n\nSurprise, surprise. The nerd enjoyed public radio. But at least I could pronounce the name of the Prime Minister of Israel. I doubted the majority of my classmates could. \n\nPeople began to trickle out of the square brick building. In one's and two's at first, around the two hour mark. Soon, they began to leave the building at a faster clip. I exited my car and leaned casually against the hood and waited for Daniel to appear. Before too long, he emerged, located me immediately and walked towards me, picking up his speed as he approached. He wore a look of abstract annoyance that quickly brightened to a broad smile when he was nearer.\n\n\"So, how'd it go?\" I asked as brightly as I could without being comical, wanting to show my support of his academic endeavor, but also back up his own obvious feelings towards the futility of the task in the first place.\n\n\"Better than expected,\" he said when he was within a few feet of me. \"Might actually get a better score. Guess I had a good teacher.\"\n\nThough dozens of students and their parents milled about the parking lot around us, Daniel paid them no mind. He pulled near to me and pressed himself against my legs to lean in and kiss me fully on the mouth. He held the kiss for a while, enough time for the shock of the public display to wear off and my stomach to launch the squad of butterflies it kept in reserve for moments like this when Daniel touched me. \n\nWhen he pulled away, he looked into my eyes, searching for some sign of how his kiss had been received. To his credit, he had kissed me so thoroughly and my emotions for him ran so deep into my core that I didn't even glance around to see if anyone had been watching or if we had been discovered. It was highly unlikely that any of our own classmates would be in attendance, but still, the possibility of a negative reaction from the strangers in the parking lot was high.\n\n\"Gross,\" one pimple ridden red headed boy muttered as he passed.\n\n\"Fuck off, ass hat,\" Daniel spat at his retreating back. \n\nThe boy turned, obviously shocked that his utterance had been heard and unsure what to do next. Daniel lurched towards him, as if he would pounce on the poor boy (who I shouldn't really sympathize with, given his apparent bigotry) stumbled backwards, lost his footing and crashed to the ground. He scrambled to get up and gather his fallen pencils and calculator and walked away at a much faster pace than was absolutely necessary, never quite breaking into a run, though he pushed the limits of walking to their edge. \n\nDaniel and I were both watching his retreating back when a familiar voice grabbed our combined attention. I was seated on my hood with my legs slightly spread, Daniel's arms around my waist and his thighs in the open space between my own.\n\n\"Well, that makes much more sense,\" it said.\n\nDaniel and I turned and the blood drained from out faces, which meant I must have been nearly translucent while Daniel took on my usual pale pallor.\n\nKaty held her binder in her crossed arms and a designer bag was looped over her shoulder. She wore a tight white button down blouse and deep green pencil skirt that hugged her thighs all the way to her knees and highlighted her cream colored high heels. Leave it to one of the popular girls to dress to the nines for the SAT's. She got no few looks from boys and girls alike as they passed, mostly dressed in plaid pajama bottoms and hoodies, but she didn't pay them any mind.\n\nMy mind was in a whirlwind of panic and fear. \n\nKaty! She was the logical successor to Amy, now that the former it-girl seemed well and truly dethroned. And she was staring at me and Daniel. This wasn't an easy explained hand holding. We had kissed. In public. How could we have been so stupid!\n\n\"Katy!\" I stammered, trying in vain to disentangle myself from Daniel. He was having none of it. He held me firmly in his arms and refused to move his knees from my front bumper, effectively trapping me beneath him. \"Umm...I...It's...\"\n\nKaty giggled a bit. I had heard that laugh before. It usually preceded a popular girl launching into an attack that would leave her victim breathless and destroyed while she remained poised and aloof.\n\n\"Save your breath, David.\" She started and my heart sank. \"I guess Amy was right, huh? I mean, she still deserved what she got, and more besides, but she was right.\" She laughed again. \"Close your mouth, hun, or you're liable to catch flies.\"\n\nMy mouth snapped shut with an audible click of my teeth. My eyes remained wide and unblinking. I wondered if Daniel wore a similar expression but I dared not tear my gaze from Katy to check.\n\n\"You make a cute couple. Odd. But cute,\" she declared, cocking her head to the side like an inquisitive owl as she examined us. \"What? You were expecting me to be a hateful bitch? You haven't met my little brother. He's in the sixth grade, but judging by the N'SYNC and Britney Spears posters he thinks he's hidden in his closet, you probably will soon enough.\"\n\nI had to concentrate on keeping my mouth closed. I heard my teeth creak from the pressure and my jaw began to ache. What was happening?!\n\n\"I assume no one at school knows yet?\" She asked. \n\n\"Ian. And Coach.\" Daniel said calmly.\n\n\"And you want to keep it that way?\"\n\nDaniel turned to me, leaving me the room to answer her question. I was still paralyzed so Daniel took the lead.\n\n\"For now.\"\n\nKaty nodded.\n\n\"Cool,\" she said easily. \"How'd you do? I think it was okay, but I'm shit at math still.\"\n\nJust like that, it was done. I was suddenly wracked with guilt. For months, years really, I had judged Katy to be a vapid soulless automaton incapable of her own thought and blindly following the social norms. And here she was faced with something that went fully against those expected norms; and she took it in stride without a moments' hesitation. She showed none of the apprehension and anxiety that I myself struggled through even now. Though we hadn't ever spoken and my judgements of her had always been internal, I felt the need to apologize to her for my inner monologue. I didn't. But I felt I should.\n\n\"It was alright,\" Daniel said.\n\n\"Well, I'll see you guys at school tomorrow then?\"\n\nDaniel nodded and I think my head may have bobbed up and down imperceptibly. That was all I could manage at the time. Katy smiled again and swayed away, tottering confidently on her designer high heels towards the bright gold Mercedes convertible I should have recognized as her own parked a few spaces away. \n\nDaniel was positively BEAMING at me. He kissed me dramatically and his face shone like the sun.\n\n\"Well, that went better than I'd anticipated!\"\n\nI tried to work some moisture back into my mouth, which had been dry as a bone since Katy first approached.\n\n\"Yeah. I...I...dunno what to think.\"\n\nDaniel's hand came to my cheek and he turned my eyes to focus on his own.\n\n\"Think about how nice it will feel to jump into my swimming pool. Come on! We've got a few good hours left before the sun sets and I want to go swimming.\"\n\n\"You drive,\" I said, fishing my keys from my front pocket and handing them to him. \"I don't think I can focus.\" \n\nDaniel took them and in no time, we were headed back to his house in my old beat up Toyota, apparently planning to take a dip in his swimming pool.\n\nThere was a note on the kitchen counter when we entered stating that his Mom and Dad were out at a church function and wouldn't be home until around 7:00 PM and that Adam was at a friends' house until later in the evening as well. There was a casserole in the oven if he got hungry.\n\n\"Looks like we have the place to ourselves for a few hours,\" Daniel said mischievously as he read the note and placed it back on the marble counter. \"What ever shall we do?\"\n\nI cozied up to his broad chest and snaked my arms around his lower back.\n\n\"You mentioned something about a swim?\" I said and kissed him gently. He moaned a bit when our lips touched and ground his pelvis lightly into mine.\n\n\"But I don't have a suit. Can I borrow one?\"\n\n\"Mmhmm,\" Daniel said, letting his hands rest on my ass and pinching it firmly. \"I have the perfect one picked out just for you. It's out back in the pool shed.\"\n\nI hadn't ever been to Daniel's back yard before. I had spied the pool and it's accompanying hot tub from the driveway, but it did little to prepare me for what I found. The pool itself was large and shaped vaguely like an amoeba of some kind, with a wide stone stairway at the shallow end. At the far deep end of the pool a constant waterfall flowed from about 3 feet above the pool's edge, the source of which was the large hot tub built above it. The hot tub itself was big enough to easily accommodate 5 or more people and began bubbling away when Daniel flipped a switch on the wall next to the back door. \n\nThe large multi-level wooden deck wrapped the entire length of the mini-mansion and the grounds were landscaped to perfection. A hammock hung between two tall sturdy trees near the far left corner and a stone fire pit and outdoor permanent cooking area rounded out the space. My family had a little circular charcoal grill that we kept out back. The gas fueled monstrosity that was built into the cooking area was twice as wide as a normal stove. Fourth of July Barbecues would be a simple affair on that grill.\n\nThe \"pool shed,\" as Daniel had called it, was most certainly a misnomer. Most middle class people in the south have a shed out back to store their yard equipment. Daniel's family was not most people. Where I was expecting a modest 10 foot by 10 foot siding cover windowless shack, I found instead a brick lined square building complete with windows and a sliding glass door that could have easily been large enough for a one bedroom apartment in any major metropolis.\n\nInside, it was carpeted and held a seating area and full bathroom with a shower and a small mini kitchen area. Imagine a beach house but in smaller proportion. \n\nDaniel paid no attention to his surroundings as he headed straight through the sliding glass door for the tall white dresser in the back and opened the bottom drawer. I, however, did my best not to have my eyes pop from their sockets.\n\n\"I have a lot to choose from,\" Daniel called boyishly. \"But, I think I want to see you in this one.\"\n\nThe sheer paucity of fabric that he held between his long fingers was appalling. Well, enthralling AND appalling. The black and white lycra was done in a checkered pattern that made my head spin a bit from the busyness of it...and man, it was TINY. Speedo cut in the briefs style, it looked like it would ride high up on my hips. I idly wondered if it would even cover my cock and balls. I wondered less idly if that was the point of Daniels' choice in the first place.\n\n\"You have a dirty mind, my love,\" I said as I paced towards him and took the suit from his outstretched arms, brushing a quick kiss across his lips in the taking.\n\n\"You knew that from day one,\" he announced, fully taking responsibility for his choice. \"But fair is fair. There's a lot to choose from. I picked yours, so you get to pick mine.\"\n\nI surveyed the drawer and found it to be stuffed to the brim with a blinding array of colors and options in every conceivable style, cut, and fabric. I sifted through them for a bit and finally settled on my choice. I held them out for Daniel to see.\n\n\"Now who's got the dirty mind,\" he mused, taking my offering. \"Get dressed in here. I'm gonna change outside. I want to be surprised when I see you.\"\n\nWith that, he bounded out of the pool shed and out to the yard. I removed my pants and boxer briefs, letting the warm summer air flow over the skin of my cock and balls. I stepped into the tiny swimsuit and pulled it up to my hips. I had to admit the feel of the fabric stretching over my bulge was...alluring. The sides were maybe two inches thick but the front covered my ample package with ease, stretching to accommodate me while lifting and pushing my manhood out for full inspection. I did a quick turn in front of the full length mirror and was not disappointed with what I saw. I giggled how the black and white checks over my cock were MUCH stretched and distorted when compared to the less fully packed areas of my ass and hips. \n\nI grabbed a towel from a large pile on one of the padded chairs by the door and headed out to the yard.\n\nDaniel had his back to me, allowing me to gaze hungrily over the wide broad plains of him, from the mounded shoulders to his narrowing waist. His skin was smooth and gleamed in the afternoon sunlight, seeming to drink it in. I could tell that when I finally touched him, he would be warm like something delicious just pulled from the oven. My mouth watered.\n\nMy choice for his suit was...perfection. \n\nThey were small shorts in hunter green nylon that resembled parachute fabric, but matte not shiny. The detail on the hems and the string that tied in front was a neon yellow so bright it would never be seen in nature. One reason I had chosen the suit was for its cut. The back and the front were not joined by a seam at the hips, they simply overlaid each other, creating a little flap that would widen when he moved his legs in any direction. Built in, was a mesh undergarment meant to hold his ample balls and uncut cock in place and from where he stood with one leg slightly in front of the other, I could see the split at the hips giving me a small peak at the white mesh that ran around his thighs. The shorts cupped his muscled bubble butt perfectly, stretching over his cheeks while displaying them in their individual glory. And the length was ideal, at least for me. They stopped just at his upper thighs, maybe two inches below his ass.\n\n\"Holy mother of god,\" I nearly bleated, gaining his attention so that he turned to face me.\n\n\"Speak for yourself...\" Daniel sighed, looking me up and and own and doing nothing to cover up his obviously growing lust. His hand cupped his own well amplified package and he squeezed himself hard. With his other hand he beckoned me forward to meet him.\n\nI walked a little cautiously, letting the feel of the spring grass beneath my bare feet sink in and the warmth that began to stream down on my shoulders and chest bring me to life. When I was within his arms reach, he grabbed my hand and pulled me into him. My lycra covered cock ground into his nylon shorts and his strong fingers gripped my ass, lifted me onto my toes.\n\n\"I am going to do horrible, unspeakable things to you,\" he announced quietly as his lips pressed close to my ear. \"I hope you didn't have plans today.\"\n\n\"Mmmm,\" I whimpered, feeling his hot wet tongue as he traveled the sensitive skin of my neck and up towards my ear. \"I'm all yours.\"\n\nHe pulled my face down and kissed me fiercely, pulling my breath into his mouth and driving me onto my toes. I felt my cock twitch to life in my speedoes and felt Daniel's member growing inside it's mesh binding. I lost track of where I was, the sun blinding me from nearly directly over head and my body responding to Daniel's touch and kiss by firing on all cylinders. I didn't even sense the change in motion or directions, never realized my feet had left the ground...",
        "Until, still locked in Daniel's kiss, my world went into total shock when he leaned back and dragged us both into the water.\n\nI knew right away not to struggle. There was nothing to struggle against. I held my eyes closed and marveled at how cold the water was on my formerly hot skin. I could still feel every degree of body heat from my man who grabbed me tightly to his chest, as if the water should be boiling around our hips and cocks from the temperature difference alone. I didn't kick my feet or search for the surface. I let Daniel hold me there, knowing he wouldn't harm me or let me drown. He would bring us up.\n\nI felt my head rise above the water but I didn't gasp for air. My lips were still on his, my tongue swirling around in his mouth and his in, over, and around mine. I breathed through my nose and felt Daniel do the same. The water against my back, flowing over my sides made it clear Daniel was moving us. My own legs had wrapped around his waist, my arms around his neck and I clung to him like a very wet, very satisfied Koala. \n\nMy back crashed into the tile of the pool wall, knocking my mouth free from Daniel's with the impact. He didn't miss a beat, but placed his lips on the crook of my neck, licking and sucking at my now wet skin, grinding into my hips and thrusting me against the wall. \n\n\"Oh fuck, yes...\"I groaned, one of my hands grabbing for the molded concrete lip of the pool that hung somewhere above my head, taking some of the pressure off Daniel to keep us afloat. \n\nDaniel's lips left my neck just long enough to speak.\n\n\"I know I just got you into that suit, but now I want you out of it. Come on.\" \n\nHe dove under the water and I watched as his body rocketed away from me, towards the shallow end of the pool. Even with the rippling water distorting his image to my eyes, he was still too beautiful for words. I dove and swam after him before he got too far ahead. \n\nMy feet on the bottom of the pool was a welcome reminder that I still had legs and they worked, however shaky Daniel's opening forays had made them. Daniel had pulled himself up onto the wide cement steps that took up the largest portion of the shallow end. He lounged back on his elbows so that the water came up to his chest, and his feet floated out in front. His dark black hair shone wetly and made him look even more dangerous and appealing than usual.\n\nI swam up to him and pulled myself so that my body floated over his, kissing him and pressing him into the stairs, thankful that the water was shallow enough he didn't slip under it's surface. Daniel's fingers pried the tight fabric away from my waist so that he could grab both globes of my ass directly, maneuvering the fabric under my ass cheeks, exposing my nakedness to the warm sun.\n\n\"God, I love your ass, baby,\" he groaned into me, one thick finger working into my crack and pressing lightly on my hole, never pushing inside, just pressing to the brink. I kissed him and sucked air through his lungs against the shaking his finger had set me to.\n\n\"Mmmm?\" I moaned, \"Prove it.\"\n\nDaniel's athletic abilities still shocked me. I should have known better than to dare him to do anything when he could have snapped any bone in my body without breaking a sweat. My torso flipped and I just had time to bring my arms down in front of me onto the second highest step. Daniel's body was suddenly no longer underneath me, and my ankles were flying backwards so that I was held in a super man position on my forearms.\n\nDaniel's head emerged from under the water right between my knees. He spread my legs easily and placed them on his shoulders, wrapping his forearms around my thighs so that I couldn't escape him. I'm not sure, but I think he knelt on the bottom step, the water came just to his collar bones. He had to sink below the surface again to pull my suit fully from my legs and toss it with a wet thump to the pool deck in front of us. \n\nI didn't have any warning or signal for what he was going to do. My legs behind me and my arms folded in front of me, I couldn't see Daniel no matter how hard I twisted my torso to catch a glimpse.\n\nBut I felt him.\n\nHis teeth bit down hard on my left ass cheek and I screamed in pleasure. His strong fingers kneaded my muscles, deep and hard, spreading my cheeks with ease and exposing my pink opening to the sun.\n\nHe dove at it with gusto. His tongue flicked and swirled on my hole, making my body shake. If I hadn't been supported by the step I would have lost all control. I let out a long wordless \"ahhhh,\" while he worked me, over and over and over. He was not being gentle. Not loving licks or small swirls of light pressure. No. He was well and truly fucking my hole with his strong tongue with everything he could.\n\nHe growled in his chest as he did, shaking his head back and forth and pushing his tongue deeper into me. I could feel the coarse yet soft hairs of his chin against the skin of my perineum. My cock pulsed and shot a jet of precum into the clear water, mixing and disappearing. I didn't even care that other people had to swim in there at some point. I was too focused on the firestorm of pleasure and sensation Daniel had just released onto my hole.\n\n\"Ahh...oh...god, baby...mmm...don't stop...oh god, please...fuck me...god I want you to fuck me so bad.\" \n\nI am not ashamed to say that I whined and whimpered those words like a bitch in heat. Because I was. I was so turned on I wouldn't have stopped Daniel had the entire school suddenly waltzed through the back door with towels in hand ready for a pool party. Let them watch. This felt too good to stop for any reason.\n\nMy legs were suddenly drifting to the steps, no longer supported on Daniel's rippling shoulders. Before they reached the step three below my arms, Daniel's hands were on my hips and his suit-covered-cock pushed against my well-loosened hole with such force that I jerked forward.\n\n\"You want my cock, baby? You want me to fuck you out here in the open?\"\n\nI nodded vigorously and wiggled my hips against his obviously hard cock, trying to fuck myself against him even before he was exposed. \n\n\"Mmm, yes baby. Pound my ass. Please!\" \n\nI was out of control with lust. I prided myself on always being in control of my emotions and my body, but I had lost all of that. I was an animal right now, acting on instinct alone. I knew exactly what I wanted and who was going to give it to me. Decorum and control be damned, I needed to get fucked right then.\n\nMy heart was fluttering like the wings of a hummingbird, my body on high alert in the hunt for what it craved. Daniel's hips were suddenly absent from my ass, his hard cock missing from where it belonged. \n\nWithout warning, my vision flashed to whiteness, my muscles turned to water and I collapsed to the step, just barely avoiding cracking my chin on the hard cement. My mouth opened, my throat seized, a strangled grunt the only sound I could manufacture. I felt as if I was completely outside of my body, the part that made me somewhere far away, leaving my physical form to survive as best it could, a match head flickering to bright flame in the space of a heartbeat.\n\nDaniel had not held back when he slammed his cock into me, not eased in or waited for my body to respond and react to him. His fingers ground into the tender skin of my hips, pressing until I felt the bones creak beneath his pressure. The soft hairs of his pubes were forced to my ass as he wiggled himself deeper and deeper inside me.\n\nMy body shook, and my skin was on fire but I shivered all the same. Daniel sensed my surrender to him, my total and complete willingness to put myself in his hands. I hadn't even fully registered what had happened when he pulled himself nearly all the way out of me and forcefully slammed back inside, reigniting the waves all over again.\n\nAt the edge of my mind, where I still had some connection to my body I could just make out a rhythm, like war drums, never ceasing, pounding out a steady beat. \n\nPrum. Prum. Prum. Prum. I focused on that sound, let it guide my mind, lead me back to my body. The mists lifted a bit and the drumming became clearer, it's origins easily explained: Daniel's hips ramming into my tender ass over and over as he fucked me senseless.\n\n\"Take my cock, baby! Yeah...god it's so good!\" Daniel grunted behind me. The dichotomy between the gentle sincere words of love and honor we had exchanged and the pure lust that saturated his voice as he took me only served to heighten my pleasure. I screamed with abandon, letting it pour from me without reservation, thought, or care. Let them hear me, whomever they may be. I didn't care. I was somewhere beyond bliss.\n\nDaniel never slowed, never slackened, only sped up to a blistering pace, his cock a pistoning blur as it invaded me. My hole jerked and twitched around him, but as hard as I squeezed, no matter the force I could muster to hold him inside, my defenses were no match for his power. He owned my body, he could do what he liked, with my full permission. I felt myself getting nearer to that cliff, felt Daniel pushing me ever closer to it. It would be a race to see who would get there first. I dared not reach beneath me to touch my cock, dared not try to stem the near constant flow of crystal pre cum that I leaked into the clear, cold water.\n\n\"You're gonna take my load. I'm gonna bust inside you...FUCK! God, baby, take my load!\"\n\nDaniel's cock slammed into me to the hilt at the same time that his hand slid around my waist and grabbed my cock in a vice grip, squeezing until I thought he might cause it to explode. His first jet of cum was hotter than anything he'd ever given me before, more full of his animal passions. It permeated me and stopped my breath. I felt my orgasm coming with extreme force...until it ran into Daniel's hands and was stopped. He held my cum inside me, refusing to let me spill myself until he allowed it. \n\nSlam.\n\nHis hips pounded me again, punctuating his throbbing cock filling me with a second stream of white hot love.\n\nSlam.\n\nA third.\n\nSlam.\n\nA fifth.\n\nAnd then...I was empty. Daniel's cock was gone from inside me and I felt his cum leaking from my abused hole, down my thighs. I didn't have time to miss it...Daniel's free arm wrapped around my stomach and pulled me backwards from the step I leaned on, throwing me over his head until my back splashed to the open water. His hands never left my cock, never allowed my still pent orgasm to go. I don't know how he did it, what level of acrobatics it required for him to achieve it, but before my feet settled to the pool floor, Daniel's black hair disappeared beneath the water and his mouth engulfed my cock head, his lips forming a tight ring just below the rim.\n\nAnd then he let his grip on my cock slacken.\n\nHave you ever seen the videos of people waiting outside of the Wal-Mart on Black Friday? The mad-dash rushing when they finally open the door? Yeah, that's nothing compared to the force of my first shot.\n\nI half expected to watch Daniel be blown bodily away from me. I felt my cock head on his tongue, the tip of it tickling my shaft. My fingers immediately went to his hair underneath the water and I emptied myself into him, over and over until I was sure he would drown.\n\nMy cock was still twitching wildly beneath the water when Daniel surfaced, wiping his eyes and licking his lips. He smiled at me and made a great show of swallowing my load as I watched.\n\n\"Well that took some talent.\"\n\nDaniel's body was instantly in front of mine, his arms spread wide and his back pressed to my chest as if to shield me from whizzing bullets.\n\nAdam stood on the pool deck, arms folded across his chest. From our position below him and with his back to the sun, his face was partially obscured.\n\n\"I hope you swallowed all of it. I don't want to be swimming in David's baby goo,\" he chuckled. He peeled off his shirt and let it fall to the ground in a heap.\n\n\"What are you doing here, Adam?\" Daniel asked brusquely. \"Mom said you were gone for the evening.\"\n\n\"Change of plans, dipshit.\" Adam kicked off his sneakers and pulled off his socks.\n\n\"How long were you watching us, fucking pervert?\"\n\n\"Long enough.\" His belt buckle clicked metallically as he undid the clasp.\n\nI had never seen Adam without his shirt. To be sure, he was nothing when compared to Daniel. He was somewhat taller, more lean than muscular with a small amount of fat that clung to his stomach and sides. He didn't have the washboard abs of his younger sibling or the mounded chest. Where Daniel had a forrest of soft black hair, Adam sprouted only a few curly hairs in the middle of his chest and a few around each nipple. It was amazing to me that these two could be related and yet so different.\n\nAdams shorts hit the deck and he stepped out of them. He wore a pair of green plaid boxer shorts. He adjusted himself in the thin fabric and made his package bounce before my eyes. Seemed like Daniel got the better end of that bargain as well.\n\nDaniel took my hand under the water and walked me towards the stairs. I followed without comment. My tiny swimsuit was still a good distance away. There was no way I could retrieve it without exposing my nakedness to Adam.\n\n\"Daniel, he's going to...\" I whispered.\n\n\"He's already seen more than he's gonna tell us. Trust me. The guy can be a real dick head sometimes. Eyes forward. Concentrate on me and let's just get back inside.\"\n\nI stepped up onto the first step and felt my bare ass cheek rise out of the water at the same moment I heard a giant splash that meant Adam had dived in. Daniel squeezed my hand and walked at a stead pace up the steps. My knees wanted to shake, and it seemed like I could feel Adam's eyes on my skin. I wasn't sure if it was his eyes on me or the cooling air that made me break out in goosebumps.\n\n\"You have a good eye, little bro.\" Adam teased. \n\nWell, at least I knew he was looking, now.\n\n\"Shut it, fuck face,\" Daniel snapped.\n\nI didn't turn to look at Adam as Daniel gathered my suit and handed me a towel. I was wrapping it around my waist when I felt something slap against my skin, right between my shoulder blades, then drop to the deck with a splat.\n\n\"Can you put those on the chair for me, David?\" Adam asked.\n\nI turned and saw what he had apparently thrown at me. The green plaid of his discarded boxers was almost black when wet.\n\n\"Get it yourself,\" Daniel nearly screamed. I finished putting the towel around my waist and let Daniel lead me quickly back into the main house.\n\nAdam's childish laughter was cut off by a loud thud when Daniel slammed the door behind us. \n\n\"FUCK!\" he bellowed. \n\nI wrapped my arms around Daniel's waist and pressed my chest to his back, feeling his breathing return to normal, his heartbeat slow. I kissed the back of his neck and heard a little sigh escape him. We were dripping onto the kitchen floor, but I don't think Daniel cared. \n\nHe had given me what I'd needed. And it was my turn to return the favor.\n\nI was coming to see that this give and take, in balance and turn, lay at the heart of love; At least, at the heart of this, my first love. I wondered what more I had still to learn. \n\nI would wonder tomorrow. Now, Daniel needed me, and that was all that mattered."
    ],
    "authorname": "DAMackey",
    "tags": [
        "highschool",
        "jock",
        "nerd",
        "top",
        "bottom",
        "bareback",
        "coming out",
        "fucking",
        "rimming",
        "cum"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-11"
}