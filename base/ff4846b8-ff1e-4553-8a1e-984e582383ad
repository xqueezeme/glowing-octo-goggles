{
    "title": "The Twelve Zenati Pt. 37",
    "pages": [
        "Author's note: Hello everyone. Again, I am grateful to MsSensualiT for her continued help to be my second set of eyes as we crawl slowly towards the end. I hope those of you who enjoy this series continue to do so.\n\n~ellie. \n\nThe moon boot that now encased Marcella's leg saved it from many of the big jolts, but her ass wasn't lucky enough to escape as they travelled seemingly without roads across the scrubby tree-dotted edge of the red desert. They travelled with a convoy of vehicles that looked like they had come straight out of a Mad Max stunt teams' graveyard of cars. Some of the bigger vehicles looked to be ex-army trucks, while the smaller quads and four by fours appeared cobbled together by experimental mechanics. They were travelling to a satellite camp separate from the main houses of the property, and rather than mustering as she knew it to be from reading and television, they were about to meet some ringers and hunt wild bulls.\n\nWild bulls, she had been told, were probably the most dangerous animal in the Never-Never, more so even than the water buffalo, who were bigger but slower and not quite as aggressive. There were three Jeeps like the one she rode in, each towed a trailer full of supplies, and each looked out of place with the strange collection of cobbled-together vehicles. If they were trying to hide in the Never-Never, then using cars that would stand out as much as these Jeeps was probably not a good idea. At least, that is what she thought before they slowed to a stop part way along their journey to traverse a stream carefully.\n\nWhen she exited the car, she saw that the jeep she travelled in was no longer sleek and shiny. Instead, it was covered in the red dirt of the land just like everything else out there, making the paint look almost rusted and pockmarked like the other stranger vehicles. It was the beginning of the wet season for the territory, and they took special care and consideration of even the most minor streams in the outback. Noah, who rode shotgun as she stretched out her leg along the back seat, pointed out the wild bulls, brumbies and explained that the water buffalo tended to stay further north near the rivers and wetlands. However, a few could be seen this far south in the wet season, along with the freshwater crocodiles.\n\nMarcella would have been happy never to see another crocodile again. Still, as Hector had said, she had gotten off reasonably lightly, and aside from several deep puncture marks and stitches in her lower leg and ankle, she had been relatively unscathed by the event. It inconvenienced her more than it caused her any real pain. When they stopped again, she looked around and was surprised by what she saw. A large tin shed stood on one side, which served to help hide the cave-like dwellings set into the wall of a small cliff or something like that behind the shed making the area defensible should they come under attack for some reason. The entrances to the huts were dark so that she couldn't see within the cave-like dwellings, but a more careful look around showed her several tent-like huts that seemed to be covered in paperbark so that they blended in with the area. The only thing to stand out in this place was the tin shed which looked aged and unused, matching most of the cars and trucks that surrounded it.\n\n\"Let me show you where we will be staying,\" Noah held out his hand to Marcella, who looked at it and back at him. He chuckled. He should have known better than to give her a choice that she could argue with, but things had been going so well in the last few days that he had allowed himself to believe they had turned a corner in their relationship.\n\n\"Sure,\" Marcella agreed hesitantly, turning to look at the strange tents and cave dwellings, unsure what to think about any of this. Eventually, she felt Noah walk up behind her and put a hand loosely around her waist as he tried to guide her forward. Then, realising it was difficult for her to walk over the rough surface in her moon boot, he bent and swept her up into his arms.\n\n\"You don't have to do that,\" she gasped.\n\n\"Did you pack the crutches, because I think we left them behind,\" he smirked, enjoying having her in his arms and didn't want her to start fighting him again.\n\n\"It looks awkward, but it doesn't hurt. You can put me down,\" Marcella protested weekly.\n\n\"I don't want to,\" he said honestly and smiled down at her. The red dust of this place was so pervasive that he could see it sprinkled over her olive skin, making her almost glow in the bright sunlight.\n\nMarcella leaned further into his chest rather than return his soft gaze. No one had ever gotten to her the way Noah had, and she tried to analyse why for the umpteenth time. She had dated handsome, intelligent, bold, and beautiful men before; so, although she could admit he was those things, she didn't think that was why she kept letting him wear her down and allowing him back into her life and bed. He was persistent. She gave him credit for that, but it was also more than that. She'd grown to trust him or at least trust him more than she trusted most other people. In him, she had found someone who could force her out of her own head to live in the moment with him while keeping her safe from all the demons that haunted her.\n\nIn the past, she had always been the dominant one in her relationships once she had successfully distanced herself from Apollo and the tables. She chose who she dated, where they went, what they did and if they ever got a second date. Not that many ever got that far with her. She was far from dominant with Noah. He would let her be on an equal footing with him, but more often than not, he had taken control of their intimacy. From their very first tussle over who controlled their first kiss, she wanted to prove herself to him, and his rejection that night had stung so badly. It was as if she would never be enough or worthy of him.\n\nHow far they had come since then, she thought. She had made Noah prove he was worthy of her over and over again rather than proving herself worthy of him. Yet, deep in her gut, she knew it was right between them. Whether it was his curse or hers that had brought them together, she had given in to that pull, and although it scared her, she didn't feel the overwhelming urge to get away from him and the family organisation he was born into. He had shown her a different side to all of that, and it was rocking her world as she came to terms with what it meant to him and his family.\n\n\"Noah?\" she quietly asked just before he ducked his head into one of the cave-like structures against the cliff wall.\n\n\"What's wrong?\" he asked, bending his head under the low ceiling and placing her feet on the floor while still holding her close.\n\n\"Explain it to me again?\" she requested, sounding unsure of herself.\n\n\"We think the watchers might have been compromised, so when that crocodile decided to nibble at your leg because you look so delicious, we decided to scatter and make it harder for Konrad to find any of us. We are here. Genesis and Olivia are out at sea, and Vivienne has gone home to her family. Gideon has gone to Darwin to be the bridge between us all because my dad is on the warpath with the senior blades,\" he explained, thinking the reason for them coming to this place was what was foremost in her mind.\n\n\"Thank you, but that wasn't what I meant. I trust that you and your brothers are doing the right thing this time,\" she sighed, realising how condescending that sounded and pulled out of his arms to take a seat on the edge of the bed.\n\n\"What did you mean then?\" he asked with a frown. He sat next to her, not touching her, but feeling like something about their relationship was troubling her again. He was starting to have good intuition about when to push her and when it was better for him to back off.\n\n\"You have uprooted your whole life for me. That's not the way Table men act. They take what they want and damn everyone else and their opinion. So, explain to me again about this curse?\" she asked. The magic of his curse, or whatever it was, was what had made him break through her hard outer shell to her inner wounded heart. \"Please?\" she added as an afterthought. The power of this man and his curse had left her feeling exposed and vulnerable. It was as if she were waiting for the whole fantasy of being loved without an agenda to disintegrate in front of her now that she was falling for his act.\n\n\"I think we covered this a few times already, both with my brothers and your sister and without. You know the story of my parents?\" he ventured. \"You know why my mother is such a bitch and why my dad puts up with it?\" Noah tilted his head at her.\n\n\"Well, I agree she's a bitch,\" Marcella shrugged, trying to remember all the bullshit that happened with Vivienne and her flight back to her family and the subsequent rushed wedding.\n\n\"He loves her and forgives her every bitchy act,\" Noah smiled. \"I don't think any of us understood why he always forgave her so easily until we met our curse breakers. We were told as young men that one day we would meet the love of our lives, and it wouldn't matter what other plans we had made for our lives, we would forego them all for the woman who broke our hearts curse.\" He paused and looked at her. \"I know it sounds far-fetched, but many of the women say they feel the rightness of their relationships. Something that they hadn't found with anyone else.\"\n\n\"Why is she such a bitch, though?\" Marcella asked curiously.\n\n\"She doesn't believe in the curse and is always making my dad prove that he loves her not just because of the curse but truly loves her. Except there is no real answer to that. It's about being a believer and having faith in us when we tell you that we love you. You are the only woman for me, Marcella, the only one that could ever complete me. There would never be anyone who could match or even come near the love and protectiveness I feel for you. Of course, you can choose to leave me, but I will continue to watch over you and try to win you back while you allow me in your life because I can't imagine my life without you,\" he said, knowing that sounded like every man who had ever tried to control her with their declarations of love. \"I will keep you safe while Konrad is out there, but if once he is dealt with, you choose to leave me, I will have no choice but to let you go.\"\n\n\"You would let me go? After going to so much trouble to keep me with you?\" She gaped at him.\n\n\"I've been trying to keep you safe,\" he sighed. \"I couldn't let you go when we didn't know who was targeting you and Olivia. When I let you go at the casino, and I thought you had died on that yacht... I will not live through that horror again. Believing you died on that yacht almost killed me, I won't survive if it happens again. So, I will keep you safe and with me until I know this bastard is dealt with once and for all. Then and only then will I listen when you ask me to let you go.\"\n\n\"And if I choose to stay?\" she asked, knowing that from the time she had taken back control of her mind and body, this had been a certainty. She wanted the family that her sister and Vivienne offered her along with Noah, his brothers and their extended family.\n\n\"Then I will grab a priest and make it official as soon as you say yes,\" he grinned and pulled her across his lap to kiss her.\n\n\"I sort of already did as Olivia keeps pointing out to everyone,\" she wiggled the fingers of her left hand at him, showing the fire opal ring she still wore.\n\n\"You never said yes to the happily ever after version of events, just the disguise,\" Noah reminded her.\n\n\"You haven't proposed anything more than that, not in those words exactly,\" she pressed.\n\n\"I will propose properly the moment Konrad is nothing but a bad memory for us both,\" he grinned and kissed her again. His hands stroked over her body, letting her know she was loved, desired and cherished. Noah wasn't sure when the change from angry, scared little girl to a passionate woman who knew her own mind happened, but he was grateful for every harrowing moment of their lives together if it brought them to this moment of surrender to the love they were fated to share. She was finally trusting him to take care of her damaged and vulnerable heart. Of course, it was only a beginning as it had been all week, but he wasn't taking the trust she was giving him lightly.\n\nEnding the kiss, he leaned back to look down into her eyes. Her strength didn't detract from his dominance, but instead complimented it, and he could feel her yield to him willingly now, not that he would ever truly dominate her as he had others no matter how much the idea of that turned him on. He was content with the relationship they were forging together from the ruined ashes of their lives before the Mother's Day shootings brought the Gambaro sisters and Vivienne into the lives of the Zenati clan.\n\nMarcella was glad for the dimness inside the cave-like hut as she felt herself blush with her admission that she would stay and be part of his family. That she wouldn't make him leave the people, he loved to follow her to goodness knew where. It was difficult for her to admit that she trusted and loved him. Maybe not with the strength of his curse, but it was true nonetheless, and she knew she wouldn't be happy without him in her life either, and she turned her head rather than have him see the blush and need for him she felt at that moment.\n\n\"Was that so hard to admit?\" Noah asked. He was not letting her avoid his eyes so easily and turned her face back to his searching her eyes.\n\nThe depth of Noah's gaze left Marcella breathless. It was as though he could look directly into her soul, and she closed her eyes to stem the deep emotions passing through her. It wasn't that she didn't feel safe or comfortable. It was more that she couldn't ever remember feeling this secure with another person. Even when he was angry and dominated her physically and sexually, she felt safe. He never made her feel genuinely powerless or helpless, even when they had their biggest fight in Adelaide, she had perhaps felt vulnerable, even weak at one point, but she never once felt like she was truly in danger.\n\n\"Look at me, Marcie,\" he said softly. \"You are the most beautiful of women because of the way you challenge me and the sparkle you get in your eyes when you are passionate about something and determined to prove to me that it's worth fighting for to me. You are beautiful because of the way you always put those you love first, even to your own detriment at times. You are just as beautiful deep down in your soul as you are on the surface, and I will be the luckiest man in the world when you agree to be mine forever and ever. So please don't turn away from me anymore. There is nothing you need to hide from me. I love and accept all of you, the whole crazy-beautiful package that is Marcella Gambaro. Soon to be Marcella Zenati!\"\n\nMarcella wrapped her arms around his neck and gave into the feeling that constantly assailed her since returning to Noah's home territory. She wanted more, wanted him, or at least the feel of his hands on her skin rather than her clothes.\n\n\"Are you hungry? It's about lunchtime,\" he asked, concern for her and his own need rising as she buried her face in the crook of his neck.\n\n\"Not for food,\" she murmured back, feeling that horrible girlish blush colour her cheeks again. She was a tough bitch; goddammit, she didn't blush. She took what she wanted, no questions asked. She tried to draw up a saucy grin to go with her words as he pulled them apart to narrow his eyes at her taking the initiative this time.\n\n\"Pray tell,\" Noah turned them, pushing her down onto the bed and holding her hands down beside her head. \"What are you hungry for?\" he asked with a wicked smile as he moved over her.\n\n\"If you don't know, the answer to that is you, already; you aren't the man I thought you were,\" she challenged. She distantly recognised that even being held down like this by him no longer pushed her fight or flight buttons. The drama of the past weeks had changed her significantly in that this man who held her at his mercy had always been there for her, fought for her, and loved her, no matter how badly she treated him. He was not just her lover but her friend and the closest thing she had to a trustworthy confidante that she trusted to keep her secrets--something she had never had before, not even with her beloved Aunt.\n\n\"Fuck,\" Noah groaned. Of all the things he thought she might say, that was not it, but it made his heart swell in his chest. Every day since her break down in Adelaide and again in Perth, she was becoming more demonstrative of her feelings for him, without having to fight him every step of the way. He leaned down and kissed her deeply, letting his lips trail slowly over her body as he undressed her. He slid off the edge of the bed and settled between her legs, pressing his mouth against her pussy and enjoying the moan of pleasure she emitted.\n\n\"Oh yes,\" Marcella sighed lustily, reaching down to tangle her hands in his hair and lift her hips to increase the pleasure he was giving her.\n\n\"Fuck!\" she panted as he worked on her. Her hands were forcing his face tighter against her body, her fingertips digging into his scalp. Then, without lifting his mouth from her or pausing in his attack on her pussy, he groped for her hands. He held her captive when he found them, palm to palm with their fingers intertwined and locked with his. She writhed while he tongued at her in a futile struggle to break his grip. Eventually, she gave a great groan and lifted her hips to push herself against his face as her climax hit her body with a jolt leaving her shaking and twitching as sensations overwhelmed her.\n\nNoah released her hands and pushed her legs wider apart, at the same time hooking her under the knees and pushing them towards her chest. He renewed his assault from this new angle using his fingers to plunge into her and hook forward against the ridged surface within to drive her into a second climax on the back of the first. In doing so, he was sure the whole camp heard Marcella's cries as she spiralled out of control beneath him.\n\nHe stopped lifting his head to watch her while she was still lost in the throes of her climax. He took his cock in his fist and gave several slow strokes. Marcella's eyes opened, and she looked at him while she panted, coming down from such a big endorphin high. He could read the lust and desire in her expression and felt the same emotions surge through him.\n\nMarcella pulled him closer, coming up off the bed to kiss him and taste herself. She couldn't even fathom what this man did to her anymore and had stopped trying. If this was a curse that brought them together and made everything else seem insignificant, then so be it. She was so tired of fighting the world alone. Within the last week on his family's property, she could finally admit that she wanted this. She wanted him and the family he offered her.\n\nNoah climbed back onto the bed and over her breathless body as they kissed. Still locked together, she reached between their bodies and took his cock in her hand, bringing it to her entrance. Then, continuing the kiss, he slid his entire length into her, groaning into her open mouth as their tongues slid and coiled in an erotic dance.\n\nThey rocked together, her hands moving up and down and over his back as the heat of the day outside sheened their bodies in a film of sweat. The sounds of their lovemaking grew ever more sordid as their bodies slid and slithered together. Then, gathering her strength, Marcella gave a shove accompanied by a grunt of exertion. She somehow rolled Noah over onto his back and still kept him inside her. Then, she lifted herself into position to ride him. She had a suspicion that he felt what she was doing and allowed her the moment by rolling with her, but she didn't care. She wanted a little bit of control. She needed to show him that she would never be some weak, submissive partner in bed like he was used to having. Yes, she wanted him and this and everything that came with him now, but she would never make it easy for him to control her on any level.",
        "\"I need more,\" she panted, taking his hand and pulling it to her breast. She squeezed his palm over her breast much harder than he would have on his own. \"I need more than you have been giving me,\" she practically demanded as she rocked back and forth on his cock.\n\nHe looked up at her as her long hair fell over her face. He reached up and covered both of her breasts with his hands. He could feel the hard nipples against his palms and was overwhelmed with the urge to suck them. He let go of her body and heaved his torso off the bed, almost sitting up while keeping her in place as she rode him slowly. He managed to take one nipple into his mouth and sucked on it before rolling his tongue around her areola and grazing his teeth over the hard pink bud. He managed the same feat with its twin before his abdominal muscles complained enough to make him fall back against the mattress, making her breast elongate and pop from his suctioning mouth as she remained upright.\n\nMarcella placed her hands on his chest, leaning over him in the dominant position feeling his hands trace up her sides to her breasts. Then, taking her at her word, he pinched and rolled her nipples between his thumbs and fingers as he began lifting his hips to match her rhythm so that they fucked with equal energy and vigour. From his supine and, in some ways, a weak position, he could see her pussy clinging to his girth as she rose on the upward stroke.\n\n\"So, fucking hot,\" he murmured, looking up into her face and seeing her lust-filled eyes and the quivers that ran through her body, telling him she was about to climax again. \"You look so... feel so,\" he groaned loudly and pulled her down over his chest and bent his knees, beginning to thrust up into her hard and fast. \"Fuck!\" he roared, struggling on the edge of his own orgasm as he tried to push her over the edge into her third.\n\nMarcella slumped forward against his chest, her breasts squashing against him, giving her the sensory feedback she needed. He took control now and gripped her hips, his fingers digging in almost cruelly as he moved her to match the pounding rhythm of his cock. He pushed upwards with his hips to meet each downward movement as he manipulated her body over his own. He heard her whimper and felt her begin to tense. With each sound urging him on, he could feel his orgasm begin to surge, the rush of his cum inevitable and unstoppable now, and he wanted her right there with him.\n\nThe cry that left her lips was high, and long as her orgasm hit her hard. Then, finally, Noah relaxed his tight control on his orgasm and lost himself in the feel and sound of the woman he loved holding her close to his chest in a tight grip.\n\n\"Mine,\" he breathed into her hair.\n\n\"Mine,\" she echoed him instead of answering him with an affirmation of 'yours'. She felt the laugh rolling through his chest before she heard it, but she smiled\n\n\"Yeah, I am yours,\" he continued to chuckle.\n\n*****\n\nVivienne knew the moment something had gone wrong. Leighton had called and told Lydia to take Vivienne and head for the safe house, and now here she was sitting in a comfortable chair in an underground bunker. With there being so many caves, tunnels, underground water systems, and the like throughout the Kimberley Ranges, it made sense that the Papillo would add to the phenomena with spaces designed to keep their most precious of people and objects safe, including the dangerous secrets of the twelve.\n\nSince becoming aware of Konrad and his games from Noah and Xavier Zenati, Leighton and Rick had isolated the people held in the impenetrable fortress along with the people who had been working there at the time. Those who worked there understood this could happen at any time and immediately shut down any access in or out of the space except by one singular old school telegraph connection. That connection being the only way someone could alert them when the lockdown was over or if they hadn't heard from anyone within a week allowed them to notify a secondary team.\n\nRick and Leighton plugged all the holes in their shield within hours of receiving the information. If the game master thought for one moment to divert their attention from their own home and what was most precious to them by attacks on the other tables, he would be sadly mistaken. The cherry on the top of their plan was that Gideon Zenati had agreed for Leighton's favourite sister to return home during the crisis. The thought of her in the most likely city to come under attack would have messed with his head more than he would want to admit.\n\n\"Hey,\" Leighton said, walking into the safe house where Lydia and Vivienne had been taken for their own protection. He kissed Lydia wrapping his arms around her before delivering his news. \"There have been attacks in three cities so far, so you must stay here, understand?\" he looked at both women knowing how stubborn they could be in their own ways.\n\n\"Darwin?\" Vivienne asked, her voice catching.\n\n\"Yes, but there are no fatalities,\" Leighton answered, trying to soften the news for her.\n\n\"And,\" Lydia asked. She was Papillo now, but she still had family amongst the other tables.\n\n\"Perth and Adelaide, so far,\" he admitted and felt Lydia flinch and gasp in his arms. \"There are no fatalities anywhere, and we think they are a distraction to turn people's eyes away from their real targets. We are in full lockdown. The whole family and all of our facilities have gone to the highest alert systems. We have called in bomb threats to those public facilities we couldn't shut ourselves. No one moves, understand me?\" he paused and looked at them both again.\n\n\"So, you are staying here with us?\" Lydia asked sceptically.\n\n\"Rick and I will be topside but close,\" Leighton admitted. \"Viv, he's safe, okay? No need to call him, yet he will be dealing with the repercussions. When he calls, I will put it through, okay?\" he explained carefully. There was no need to use his name. There was only one person on his sister's mind. \"I have to manage every call in and out of all our facilities for now. This Konrad has infiltrated all of the tables in one way or another, so now we need to be even more careful than ever.\"\n\n\"Okay,\" Vivienne nodded reluctantly. This was the life she had grown up in and one she understood, but her heart ached to hear Gideon's voice and have the reassurance that he and his brothers survived the attack.\n\n*****\n\nLike the rest of his family, Gideon raced towards the bomb site. Logically, he knew there was little he could do. They were under attack now, and there was more danger in going to the bomb site where they could all be picked off than staying where he was. Still, he had to know, so he drove toward the danger dialling his father's number as he drove.\n\n\"Don't be dead, don't be dead, don't be dead,\" he murmured over and over until his father answered.\n\n\"We aren't there. We left this afternoon to follow some leads of our own,\" Armando barked into the phone.\" We emptied the whole place, staff and all, knowing it would be a target. Your Uncles have been leading this family longer than you have been alive, boy, and you need to have a little faith in us. We are not geriatrics yet!\"\n\n\"I.. umm..,\" Gideon stared speechlessly at the console where the hands-free told him he was speaking to his father. \"So, no one was there? Not even Zia?\"\n\n\"Do you think we would leave our most precious gift in a house with a target painted on it?\" Armando scoffed. \"Trust us to do what is best for our family. You should be more worried about your team of heroes. We have this mess fully under control.\" He hung up then, and Gideon breathed a sigh. They hadn't meant to treat their elders like geriatrics, but he could see how some of what they had done might have come off that way, especially after the circle's success. They probably should have given credit for forming that circle to their fathers, but instead revelled in their own generations cleverness and willingness to collaborate.\n\nPulling over to the curb, Gideon sighed. He couldn't go back now to fix anything. They just had to move forward and head off this attack as best they could now. He read through the messages on their emergency board. The Gambaro's and Farnese had also been hit tonight with no casualties due to clever planning. That was it. He needed to keep his head and think about the next logical step just like Noah or Gen would do. But, while they were both logical and thought things through, Gideon was led by his heart. He sat in his car for long minutes contemplating what to do next. The alarm had not sounded, because no watchers would be coming to help tonight. For good or bad, most watchers were all remanded to the training facility until this was over. He wondered briefly if that had been Konrad's plan all along to weaken their defences this way.\n\nHe scrolled through his number list and hit the one he knew needed this information more than anyone else in this game they were playing. Luckily it went through. Valdemar had been out of range for a while, but tonight the stars aligned and smiled on him. He was sure.\n\n\"It's begun,\" Gideon said into his phone. They hadn't been surprised when a small band of watchers turned on their brethren and the people they had sworn to protect in Darwin and their main property. Even the women of the Zenati had been on alert, and those loyal to them acted swiftly and without reservation. With each failure to complete their mission and find and detain the Gambaro girls or the people they loved, the riskier the moves of the Varangian guard became.\n\n\"Shit, is anyone hurt?\" Valdemar gritted his teeth against the knowledge of his family being betrayed by those they trusted with their lives.\n\n\"Superficial wounds only. Nothing to be concerned about, but it's time for you to move. Is everyone there with you?\" Gideon asked\n\n\"There are twelve of us. You better narrow down the satellite camp for me,\" Valdemar said. \"We are still a fair way away from the target, but we will get there, trust me.\" He didn't want to let on that he had worked out the plans of the Varangians the day before and were closer than anyone could guess at this point. He just needed to know which satellite camp they were heading for in Kriol country.\n\n\"Okay, tell Farnese and Gambaro to call home if they haven't already, they've been hit too, but it seems to be more of a decoy or distraction than for any real purpose,\" Gideon relayed the information he knew.\n\n\"Everyone is touching base while we are close to a tower, so they probably already know,\" Valdemar sighed, looking around at his brothers in arms.\n\n\"The Black Blades are moving, be careful you don't get caught in the crossfire,\" Gideon warned. The older generation was ready were for war and were obsessed with finding and destroying the Varangian guard. But, unfortunately, the younger generation could do little to stop them from moving out against the man who threatened their family.\n\n\"It's all good. We are going to get there first and save the motherfucking day,\" Valdemar chortled and surprising even himself, he added. \"And we are pretty happy to play the hero this time around,\" he chuckled.\n\nGideon ended the call and hoped that Val was right. Then he turned his car around and headed to his tables command post to relay information and instructions as needed. As well as financing any purchases the project required urgently. It was his job now, and he would be clear-headed and methodical about it just as soon as he checked on Vivienne and said good night to her. He smiled as he hit her number on the hands-free screen, knowing she was in the safest place possible for her right now.\n\n*****\n\nThe air was cooler when Olivia stepped out of the shower. Her skin, still warm and damp from the steamy water, pricked at the new sensation of the breeze sweeping through the boat. Genesis must have left the door open when he went back up on deck. She smiled as she grabbed a sarong pulling it loosely around her body.\n\nWalking into the living area, bare feet padding on the polished wooden floor, she made her way towards the open door that was currently letting in the ocean breeze from the upper deck. The view was incredible when she got to the top of the stairs. The bright full moon reflected off the waters. Waves crashed into the shimmering sands of the beach not far away. All of this was the backdrop to the large comfy chair on the foredeck where her lover, her Master, her everything sat waiting for her.\n\nShe smiled and ran her fingers through her damp curls. Genesis had his back to her, dark hair slightly dishevelled from the breeze and still shirtless as he had been since their afternoon swim. The glow of the soft lamps illuminated him in such a way as to highlight every ridge his muscles carved into his body. Odd with the beauty of nature's white glow of the moon and the amber glow of their light lamp making a mixture of wild and intimate, which was how she felt about this moment. He was hers as much as she was his, and she craved his touch constantly as if she were an addict.\n\nShe held the thin sarong around her body--small hard-tipped breasts pushing at the material. Her short, but lithe legs stuck out from the short hem making the whole look awkward against the tiny cotton she had chosen tonight. Then, on a wicked thought, she looked at the distant boats that shadowed them on one side and the coastline on the other and let the sarong fall to the deck before moving up behind him in the chair. There was, after all, no real reason to wear clothes when she hoped to have them taken right back off.\n\nHe was holding a glass of spirits in his right hand, and she slid herself onto the left arm of the chair, allowing his arm to pull her into him and onto his lap. It was a peaceful moment, a delicate time of silence, happiness, and the knowing that this was a rare moment of calm that might not find a way to happen again in their lives if the last year was anything to go by.\n\n\"It's beautiful, the moon,\" she said as she nuzzled his neck, purring in contentment.\n\n\"I think you are beautiful too, every inch of you,\" was his reply making her blush and squirm on top of the sarong that was wrapped around his waist. His hand stroked her side, paying careful attention to the curve of her breast and then close detail to the shape of her thigh until she sighed into the side of his neck and kissed the lobe of his ear. He turned and smelled her freshly washed hair. \"Not a hint of the sea when it surrounds us,\" he smiled at her. Only a few minutes earlier, he had been dreaming of how beautiful she looked on the remote sandbar with the sun and the sand mixing with the seawater to highlight every delectable curve on her body. It was something he knew he would think about often. She was truly breathtaking in the sea and the sand.\n\n\"It would seem that way, after a shower. You disapprove?\" She asked as her hand stroked his chest, then moving down to explore further until her hand found the edge of his sarong, and she looped her fingers inside the edge. Then, smiling at him and being bold, she stood up and let her body press over his in the chair. She expected him to take control of the situation as soon as she asserted herself, but he just sat there watching her, curious and pleased.\n\nWith one hand in the edge of the sarong, the other on the back of the chair, she leaned forward and kissed him slow and passionately, her breasts brushing against the hair on his chest. Then, in one smooth motion, she slid down between his legs to her knees and pulled the sarong open at the same time. The warm night's air having the same tingling sensation on her skin as it had to her body earlier as the object of her desire began to lengthen and harden under her watchful gaze.\n\n\"Of course, there is still you who smells like the sand and the sea, and it's something I have a craving for,\" she practically purred and lifted her eyes to his expecting a frown of disapproval for topping from the bottom. Instead, he seemed to be enjoying the moment and gave her a small encouraging smile.\n\nGenesis watched her every movement. Having Olivia naked before him and bending to his will was his ultimate pleasure, but this... Seeing her grow in confidence and belief in their relationship that she dared to show him what she wanted was a frequent fantasy in his mind. But, along with the sounds she would make, the way she would move, the one that stood out the most was watching her take him inside of her mouth without his command.\n\nHer hands led the way to wrap around the base of his shaft and stroke in slow, firm movements. Her eyes were bright with passion as she watched him growing harder under her hands. Harder was an understatement. It was all he could do not to lose control of himself, just watching her. Finally, her motions became a little faster, and she looked up at him to watch his face for a moment.\n\nHis hand came out to caress her face, his thumb pulling against her full bottom lip. She smiled at him, kissed his hand, and licked her lips before opening them to lower her towards his waiting cock. Her tongue came out first to flick softly against the mushroomed head of his cock. She wanted to taste him again. Probing at first, with flicks and licks then flattening her tongue into a soft bed, she swirled her tongue around the head then lowered her lips to take him deep inside.\n\nIt was all Genesis could do not to cry out his pleasure. Her hot mouth felt so good, so warm and inviting. He found himself leaning back against the chair and pushing his body forward to allow her better access. His hands could not resist touching her at that moment, and he wrapped his fingers into her hair to stroke her scalp as she set up a rhythm of sucking him deep into her throat and then moving him out to the tip to swirl and taste then do the process again.\n\nHe wanted to guide her, control her mouth and find his release there as he had done so many times before, but this was her moment, and he was trying to let her have it. He applied pressure to the base of her skull, moving her into the rhythm that he liked most despite his best intentions. His attentions were encouraged by her, her hands cupping his balls as she moaned her approval with him deep inside of her throat. The sensation was overwhelming to his senses, and he arched back to close his eyes and give in to the moment of utter pleasure she was giving him.\n\nAll the images of her he kept in his mind for those quiet moments when he could not be with her, all the sounds and moments they had shared this very day already flooded his mind. They mingled with the beautiful image of her thick blonde tresses entwined in his hands and her blue eyes watching him as his cock slid in and out between her lips faster. The reality and fantasy were becoming a blur, and he felt himself building towards his climax earlier than he had expected.\n\nHis dominant side couldn't help but take control of the moment. His hips rocked up against her face, and one of her hands moved to stroke his shaft in rhythm along with her mouth. He barely let her breathe until she urgently pressed his hold and leaned back, gulping air for a moment, stroking him still while she looked him in the eyes. Finally, she dipped down to nip at his inner thigh, then kissing a path to his belly, she looked up at him again, \"Let me do this, please, Master. I want to know how you taste when I make you cum.\"\n\n\"It is always you who gives me the pleasure I seek. How could you ever think otherwise?\" Genesis asked.\n\n\"It's also the control and power exchange. Let me have the power, just this once, please, Master?\" she asked again, and he nodded stiffly. With that, she put his hands back on her head to tangle in her hair the way she liked and took him deep into her mouth again. This time she brought him deeply, entirely into the back of her throat, causing small gagging spasms to erupt until she set a new pace of her own.",
        "Her tongue flicked the backside of his shaft going down and pressed firmly along the length moving up. Slurping noises came as she swirled the cockhead with her lips and tongue before pressing herself back down the length.\n\nThe slow movements became too passionate and too intense for Genesis. He had wanted to finish this game by skull fucking her and coming deep inside her throat, but she had other plans and was winning him over to them with the way her wonderful mouth and tongue worshipped his cock. She would pay for this titillating moment, though, and his mind began to fill with delightful ways to punish her for pushing him too close to the edge, so soon he realised.\n\nShe felt him tense, his balls drawing in, and his hips thrusting up with stronger movements. This was what she had wanted and what she had been waiting to see. Knowing he was close; she relaxed her throat to take him to the back and hold him there. She began sucking his cock harder, holding her lips as a seal around the base and feeling the head of him pulsing within her mouth.\n\nHis hands began to clutch at her hair, pushing and pulling and holding her head in place just where he wanted her. Her nose pressed into the area above his shaft. She felt him shift, heard his breathing get harder, then, with a sudden thrust, the moment happened. He pulled back slightly, and hot liquid filled her mouth, splashing into the back of her throat. She held him there, loving the feel of him emptying into her mouth. Knowing the pleasure she was giving him gave her pleasure all her own.\n\nHe came harder than she had expected after their day in the sun and the sea, and she almost couldn't swallow him all, feeling a tiny dribble fall from the corner of her mouth. Then, with one last spasm, she pulled her mouth slowly upwards off of his softening cock and swallowed the warm sweetness of his release.\n\nHe had called her name in his moment of release, making her feel as if she had received a great reward for her efforts, and now he was breathing hard and watching her utterly relaxed in the chair. She stared at him for a moment and allowed him his time to collect himself again. But before she knew it, he was pulling her into his lap again and kissing her.\n\n\"You're are everything I have ever wanted in my life. You are amazing,\" he whispered, \"that was amazing. I am truly the luckiest man in the world to have found the woman who holds my heart so gently in her hands.\"\n\nOlivia curled herself into his arms. She was happy she had pleased him and glad to be here in the one place she wanted to be. Together they watched the water, content to just touch for a moment and find peace. Only there was a strange thumping sound that disturbed their tranquillity.\n\n\"What is that?\" Olivia asked with a frown, leaning forward to sit up and ensure what she was hearing was real.\n\nGenesis opened his eyes and looked around. A distant explosion and flash of light sounded from the shoreline, and Genesis swore, leaping into action. He dragged Olivia to the side and forced her into a life vest before taking one of his own.\n\n\"Don't inflate it yet. They may not realise who or what we are,\" Genesis murmured. A glance at the closest boat told him that they had heard the danger as well and were scrambling to prepare for an attack. He held his breath, clutching Olivia to him, and waited, his eyes on the dark shadow in the sky and the fire on the shoreline where they had been only a few days ago.\n\n*****\n\nOnly a few of the men from each of the tables knew they had all come together to meet the threat based on the vision of Phil Sergi, who was unquestionably the greatest oracle of their age. Valdemar and all of the men with him knew without a doubt t they would turn the tide of this battle. They just didn't know how.\n\n\"Alright, fellas, follow me to the border, then Zenati can take us into Kriol country. We need to avoid main routes for now. It seems someone tipped off the AFP that some bikers were defying the laws in Queensland about known motorcycle organisations gathering together,\" Red said. \"Fuel up. It will be a long ride, and we'll each need a spare tank.\n\n\"I thought those laws were repealed,\" Larry frowned.\n\n\"Probably, but it's a big scary threat, so they're looking into it,\" he grinned.\n\n\"Us or them,\" Chase grimaced.\n\n\"Both,\" Red laughed and swung his leg over his bike.\n\n\"It's started,\" Val said quietly, making the others fall silent. \"We need to move with speed now. Stay together. The more light we have on those bush tracks, the better. I know you're all experienced riders, but it's blacker than the inside of a demon's arse out here at night so take care and watch out for each other. I'll lead because I know the terrain best,\" he said, then looked directly at Paolo Farnese and Mick Gambaro. Did everyone in your families make it?\" he asked, demonstrating to the others just how serious this attack and threat was.\n\n\"Yeah, we were ready,\" Paolo nodded\n\n\"Collateral damage only. Everyone will survive,\" Mick spoke quietly.\n\n\"Then we better get on the road and play our part in this game because I will always bet on our families to not only survive but to win,\" Zed said, starting his bike and pushing his helmet over his head.\n\nThe others did the same and rode out into the night rather than setting up camp as planned.\n\nAt three in the morning, Red led them into a station owned by distant cousins of his family near the border. Finally, they'd be able to refuel their bikes and their bodies as well as grab a couple of hours sleep before continuing their trek in daylight. Driving through the outback in the dark was dangerous enough with the rough road surface and wildlife, but adding fatigue to the mix was just plain dumb, so they agreed to a two-hour nap and start again at dawn.\n\n*****\n\n\"Thank you for agreeing to see us,\" Tabitha lowered her head slightly to the woman and her two mates, who sat stiffly before her. The two men behind her bowing their heads in the same way.\n\n\"My cousins said it was important that I meet with you, but I must warn you that tensions are high at the moment. While you and your people have been nothing but helpful to this point, outsiders are viewed with suspicion at this time,\" Catriona Vitali placed a hand on her extended belly.\n\n\"Again, I will thank you for suspending that suspicion to allow this meeting to happen,\" Tabitha smiled gently, and her eyes glistened. \"You look so much like your grandmother. I have seen it in the pictures, but to be here is quite something. Forgive me, I know so much of you, and you know nothing of me,\" she apologised. \"I am your Aunt Tabitha, and I rule the Tartar in your absence.\"\n\n\"What is it you want from my wife exactly?\" Matteo said. \"There was no way he was giving up his wife without a fight to these people. Not as pregnant as she was.\n\n\"We have come to apologise. Some of us are good readers of people, and fewer still have the gifts of second sight. It is what we are known for in your circles. But, in general, we are a peaceful people aside from one or two who have blemished our history and that of our royal family,\" she admitted.\n\n\"We know this much is true,\" Ricco nodded, wanting to hurry the woman on as his older brother bristled and scowled at what was essentially royalty amongst his wife's family.\n\n\"We entered into a pact with Konrad Van der Kemp in good faith that his information was true and correct. However, while it was true that our missing princess was with the Twelve Tables and held to them as tightly as any prisoner would be, she was not imprisoned by them but rather freed,\" Tabitha admitted. \"We have severed our pact with Konrad Van Der Kemp and his Varangian knights. He will no longer have forewarnings of your attempts to discover him. Catriona has clearly chosen her family from love, not force.\"\n\n\"She tilted her head as she looked at Ricco Vitali. I do not expect to need to tell you that his plan has always been to divide and conquer. Some few rebels remain with him as he closes in on his heart's desire. Even if you warn them the meeting must happen, we have seen it in many futures. It will only be a Black Blade that ends his reign of terror,\" she foretold.\n\n\"Why come to us now? Why should we believe anything you have to say after leaving Catriona in tragic and dangerous circumstances for most of her life?\" Matteo pushed the woman. \"He wanted her gone. She wasn't telling them anything they didn't already know.\n\n\"Had we have known of Catriona's suffering, we would have intervened, but we didn't even know of her existence because she was shielded from our sight by her Mother. Our assistance in the destruction of your tables was reliant on us acquiring our lost royal. We have found her now and confirmed her linage. She offers her protection to your tables, and so must we as her people. We have severed the pact we made with Konrad as it was a worthless agreement and one he never planned to honour,\" she said without emotion.\n\n\"I see. Well, that is a good thing, and we thank you on behalf of all twelve tables,\" Ricco said.\n\n\"You don't understand, Ricco Vitali,\" she smiled gently. \"We tell you this so you can tell your brethren that we will move against the threat when the time is right as their allies. As proof of our changed allegiance, I would ask you to contact Anthony, or Gianni Zenati ask them who told them to evacuate their house before it exploded. There have been similar warnings issued to the Farnese and Gambaro's, and while there were some superficial injuries in Perth, there were no fatalities due to the forewarning. Tell only your circle and remember he has some rebels with the sight beside him. He wants the girl with three faces because she is completely unpredictable. He cannot guess her next moves, and neither can the Tatar who have the sight. He is obsessed with her and exterminating the Zenati who he blames for his original plans falling apart around him. He will stop at nothing to take her from them.\"\n\n\"Okay, we will talk to our circle, but the choice is theirs. Particularly the Zenati, but I am sure they already know they are the focus of his wrath. I trust you will not harm Catriona. You have also helped remove the Suebi, though I believe now that it was part of Konrad's game. But, beyond that, I don't trust you at all,\" Matteo said. He felt his wife stiffen beside him. \"No, Cat, if they want our trust, they can start earning it.\"\n\n\"Thank you for coming in person, Queen Tabitha,\" Cat spoke softly. \"I had wanted to meet you and tell you that I would not be returning to take up the mantle of my grandmother. The right woman for the job has that title already,\" she smiled softly. \"And I am exactly where I am supposed to be,\" she laughed lightly as she felt her men relax beside her.\n\n\"I believe you are right about that,\" Tabitha grinned. \"Your cousin will stay close to warn you of any fallout of our parting of ways with the Varangians, but I trust you will be safe with your men.\" Tabitha stood and stepped forward to embrace Catriona. \"Never forget you are a queen to more than just the men who love you.\"\n\n*****\n\nDante and Joshua Donati had suffered more than most at the hands of this game master. First, the early loss of Christo, then the loss of a brother and a sister, a sister-in-law and the heartache his brother felt for that. Finally, they lost their remaining parents and closest Uncle. They would have done anything to exact their own vengeance on the man who continually threatened their family and friends. So it was with suspicion they sat waiting for the circle meeting that Matteo Vitali and his brother had called.\n\nPeri sat across from them in a comfortable chair, nursing the new additions to their brood. Dante gazed at her feeling all his dark thoughts wash away. They had entered a new era, and there was only sunshine and lollipops from this point on.\n\n\"Fuck, Josh! How did we get here?\" he asked seriously. Of course, it was a regular question and needed no answer. \"The emo kid and the spoilt brat? Us?\" he shook his head, not taking his eyes from the answer as she finished feeding and lifted the babe to her shoulder.\n\n\"I'll get him,\" Josh said, standing and moving over to Peri. He leaned down to kiss her as he took the baby from her shoulder and transferred him to his own. \"Daddy's little man is getting so big now,\" he crooned. \"I'll come with you to the nursery,\" he said as Peri stood and righted her clothing before holding her arms out for her son.\n\n\"Okay,\" she shrugged. She didn't bother arguing when tensions were high. They needed the peace of mind she and their babies were all safe and sound, and she didn't mind giving it to them. She made her way over to Dante so he could kiss their daughter and her before she left and smiled. \"I'll send him straight back to play with you and your friends,\" she laughed. Then she turned and left the room with Josh. She said nothing until they had put the babies to bed under the careful watch of Heather, their long-time nanny.\n\n\"Josh, I know what this man represents to you, but, remember, nothing that happens now will change the past. We need to move forward as best we can, okay?\" she asked. The anger and vengeance he had been exuding in the last few weeks were eating him up, and she needed him to be the man she fell in love with again. \"I need you, and the kids need you, the good you who isn't all torn up inside. It will be okay. I know it will.\"\n\n\"It will,\" he agreed and hugged her close. \"How could it not be when you love me the way you do,\" he chuckled. \"I have to go help catch a bad guy, and then it will be over once and for all.\"\n\n\"So, it seems the Tartar have been playing both sides of the fence, which is how he has stayed one step ahead instead of all the planning and pre-empting we thought he did,\" Dante tried to get Josh up to speed as he continued to listen. The Tatar broke the pact and are offering us help now because the person he promised was in the Papillo prison was in Melbourne the whole time and here with us for a bit. It turns out Catriona is Tartar royalty, and their allegiance is to her, now they have verified who she is.\"\n\n\"That explains the attacks on the Papillo, at least,\" Josh nodded.\n\n\"So, they will come to each family if there is an imminent threat. The Zenati evacuated a house that was subsequently blown up thanks to the forewarning of similar stories from both the Farnese and Gambaro's, so it's your choice whether to trust them or not,\" Ricco said to the circle.\n\n\"Phil? Care to weigh in?\" Dante asked.\n\n\"I don't feel any threat from them. But honestly, there are so many moving pieces now I am unsure of what moves to make, so my thoughts are staying with the riders,\" Phil said. \"I can't even tell you why, but I think they will be important.\"\n\n*****\n\nGideon raced through the streets of Darwin heading for his Madrina's home. The silly old woman had come home from the gathering early. As he pulled into her street and saw her house, he breathed a sigh of relief. Now to get her to a safe house if he could. He stepped out of the car and approached her door taking long rushed strides in his urgency. Taped to the door was a note with his name on it. He pulled it off to read the message.\n\n\"Dear cheeky boy, I am not so old and senile that I would not head for safety on a night such as this, but I knew when I couldn't get hold of anyone that you would come. Trust that I will be around to embrace my grandchildren.\" He could hear her cackle in his head but it was interrupted by a rumble, then a flash of light and Gideons world went dark.\n\n*****\n\nGenesis and Olivia had already left the ship when the first of their small fleet was hit with a missile of some kind. They were swimming as stealthily as they could toward shore when a hail of bullets sprayed the water and the boat they had been aboard a few minutes before. As Genesis kept Olivia close to him, she cried out in what he thought was fear until she cried in a high-pitched whine and clutched her shoulder.\n\nLooking up at the sky as the helicopters veered away, Genesis made the decision to head back to the boat rather than try for the shore while there was blood in the water attracting sharks of all kinds. Distant cousins helped him back onto his boat having got there first from their own vessel intent on protecting the couple.\n\nThe helicopters did not turn to ensure they had completed their job and Genesis lead their small group inside the ship so he could see how bad Olivia had been hurt.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "dominance",
        "submission",
        "escape"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-37"
}