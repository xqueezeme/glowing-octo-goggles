{
    "title": "Dombo and Angel",
    "pages": [
        "\"Welcome to this year's induction ceremony to Major League Baseball's Hall of Fame.\n\nAs Commissioner of Major League Baseball, it is always my pleasure to host the annual induction ceremony. However this year is extra special because for the first time in history The Baseball Hall of Fame has waived its 5 year waiting period to accommodate the induction of not only one of the games' greatest players of all time, but also one of its greatest ambassadors. Dominick Carvoli Passed away 3 weeks ago succumbing colon cancer after a 3 year fight. He died the same way lived his life: thinking of others first and fighting the good fight to the end.\n\nWe have as presenters for you today several of Dom's coaches from throughout his career and accepting for Dom will be Angie Carvoli, Dom's wife of 17 years. \n\nFirst, may I Introduce Dom's High School coach, Coach Bud James.\"\n\n\"Thank you Mr. Commissioner. It's my honor to be here to help induct to baseball's Hall of Fame the greatest player I ever saw play the game. The first time I saw Dom was the spring of his sophomore year. Here comes this tall, gangly...\"\n\n********************\n\nAngie reminisces:\n\nThe first time I saw him, he was tripping down the hall in our high school, and I do mean tripping. Dom was about 6'2\" and weighted about 130 lbs. Like me, he was a sophomore and obviously had just had his growth spurt - vertically anyway.\n\nDom's other outstanding feature was his ears - they were huge. Not only were they big, but they stuck out from his head like a wind break. He had to have strong legs just to keep moving forward against the drag those ears must have created. After all these years I still remember my astonishment when I first saw those ears.\n\nMy best friend Cindy and I were on our way to our next class when we passed Dom. Cindy, with her normal lack of discretion almost screamed \"Who's that dork\"? I was mortified, but Dom just smiled and kept going. \n\nI was intrigued; I just had to find out more about this person. I finally found out his name was Dominick Carvoli. He was from a large Italian family on the east side of town. He had that sultry olive complexion that characterizes those of Mediterranean decent. Dom's hair was near black, and his dark brown eyes would flash obsidian when his passions were aroused.\n\nOn the other hand I am Irish; pale skin, red hair and freckles - lots and lots of freckles. My family is the law in our little town of New Madrid, MO. Da is the Chief, and both my uncles are patrolmen. My aunt is our cities detective. My older brothers want to go into law enforcement. I'm so screwed and any potential boyfriends better be ready for the inquisition. \n\nBut like I said, I was intrigued by this long tall scarecrow with twin wind socks. So I started my investigation. What? I do have the investigative genes you know. The first thing I learned was his nickname - Dombo! You know, like Dumbo the flying elephant. Kids can be so cruel. The second thing I learned about Dom was he was man totally comfortable with himself. He always knew he wasn't perfect, but so what. God, that we all could be that way.\n\nAnyway it was still amazing that that Dom got along as well as he did. For one he was terminally clumsy, Dom could (and did) trip over the cracks in the linoleum. I noticed that teachers, when they had Dom in a class would hide the trash can because he would invariably find a way to trip over it.\n\nThen there was his voice. That year, his voice was in the middle of changing and would go from a low baritone to a high screech all on its own and seemingly in the middle of a syllable. This drove my Da crazy when they finally met, but that was somewhere in the future. \n\nThat's what Dominick looked like, but, as you all know, looks only tell part of the story. Dom was the oldest son of a large family. As I learned from observing Dom, he was always looking out for his younger brothers and sisters. The easiest way to get those eyes to flash obsidian was to mess with his siblings. I soon learned all the little kids looked up to Dom and he in turn, always had time for them. The more I learned about Dominick Carvoli, the more I was intrigued.\n\nI decided I had to meet him. So, I started my campaign to get him to notice me. I arranged to drop a book in front of him and he promptly tripped over it. I cut in front of him in the cafeteria line and he promptly tripped over me! He screeched an apology but I had finally gotten him to notice me. As time went on we would sit together at lunch and look for each other in the morning upon arriving at school.\n\nOne thing I learned as we got to know each other was that Dom was never offended by his Dombo nickname. In fact, he encouraged the young kids to call him Dombo and I was amazed to learn that he taught himself to wiggle his ears to be better able to entertain the youngsters.\n\nSo it was natural that I came to call him Dombo and I became his Angel - and that's when I started falling for him.\n\nI told you I was Irish, red hair, pale skin, freckles, the whole bit. I also had the red haired personality; outgoing and outspoken, and an Irish temper when provoked. I have been told I have a devilish sense of humor and an open face, so you always know what I'm thinking. But I've never been called an angel, much less to BE someone's Angel, even if he was screeching when he called me Angel. How could I not fall for him?\n\n*******************\n\nBack to the present:\n\n\"...here he comes barreling down toward 3rd base. I've got the stop sign out but Dom just keeps going. I never could see how he got those long arms and legs moving so fast, but he was as fast as anybody I've ever seen before or since. In addition, when he needed it he seemed to have an extra gear. Well, he kicked into the passing gear and scored standing up! A stand up inside the park home run! If we hadn't filmed the game, I never would have believed it. I know I needed to chew his ass out for disregarding my stop sign. But how do you do that after what Dom had just done...\"\n\n*******************\n\nAngie reminisces:\n\nI found out Dom was on the baseball team. I didn't know much about baseball, but my Dom was playing, so Cindy and I decided to go to the first game of the season.\n\nI'm not sure what I was expecting, but watching my Dombo trip across the foul line and turn into Super-Stud Shortstop was not on the list. He went out to his position and promptly took over the entire game. He ran the whole team when on the field. Nobody even questioned this sophomore telling everyone what to do, they just did it. For the record, Dom went 4 for 5 with 2 home runs (one of those being an inside the park HR). In the field he had 8 chances and no errors. Oh by the way, he had an unassisted triple play, something that I later learned was so rare as to be almost mythical.\n\nAnd so our lives went on, Dom played baseball and Dombo and I continued as best friends. But I wanted more. \n\nI got my opportunity late in the spring. Sophomores could not go to the prom, but we did have a Sadie Hawkins Dance. For those of you who may not know, a Sadie Hawkins dance is one where the girls ask the boys to the dance. I cornered Dom one day at lunch and asked him to go to the dance with me. He looked at me, opened his mouth, closed it and opened it again. His face turned several interesting shades of red and he finally looked to my eyes and screeched \"OK\".\n\nThat presented a new problem, my Da. Da was very protective of his baby girl and he demanded that he meet (and interrogate) any boy who would dare date his Angie. I told Dom he would have to come to our house to meet Mom and Da and after warning him what to expect, Dom screeched \"OK\".\n\nThank God for Mom. If not for her, Da might still cross examining and intimidating poor Dom. After an hour of telling Dom what he could and could not do with me on our date and what would happen to Dom if he should break any of Da's rules, Mom finally came up behind Da, slapped him on the head and said that was enough. Mom then winked at me. \n\nFor his part, Dom screeched his understanding of Da's rules. Dom also reassured Mom and Da that he would never do anything to hurt his Angel. At this declaration Mom smiled and Da's face turned almost as red as his hair. I was sure that the whole New Madrid police force was going to be at the dance. I was so screwed!\n\nSomehow we made it through the dance. Dom's Godfather took us to the dance in a limo. You should have seen the jaws drop, at least until Dom fell getting out of the damn car. Ah well, he WAS my Dombo! We danced, well I danced and Dom stepped on, and tripped over, whose ever toes happened to fall with-in a 5 foot radius. Funny thing, toward the end of the night we had the whole dance floor to ourselves, hmm. All in all, it was a magical night. I was falling further and further for my Dombo and, I believe he was falling for his Angel. \n\nIt was perfect until we got home and Da saw the limo. As Da came out of the house and walked toward the car Dom's Godfather got out from behind the wheel. The first words out of my Da's mouth were \"Who are you and where did you get this limo?\" \n\n\"I'm Dominick's Godfather and I made someone an offer he couldn't refuse.\" Dom's godfather replied with a smirk. I could only think \"I'm so screwed.\"\n\nThank god Mom chose that moment to come out and introduce herself. With-in 30 seconds she had thoroughly charmed Dom's Godfather who explained he owned a car lot and had taken the limo in trade. Da settled down and finally walked away muttering something about the Hooterville Mafia. I didn't realize it at the time but Dom's Godfather heard the remark. It would later come back to haunt Da.\n\n********************\n\nBack to the present:\n\n\"...ended his high school career batting .736 with 63 home runs and 228 RBI 93 games. Dom had a career fielding percentage of .998 with 645 chances. Dom was born to play baseball, and boy did he play!\"\n\n\"Thank you Coach James. \n\nNext up is Dom's college coach. Coach Don Kessinger is a name familiar to all of you. Coach Kessinger was an all-star shortstop for the Cubs in the 60's and early 70's. After retiring, Don returned to his Alma-mater to coach the next generation. Ladies and Gentlemen, I give you Coach Don Kessinger.\"\n\n\"Dominick Carvoli Arrived on the campus of Ole Miss 20 years ago. At 6' 2\" and 165lbs, Dom was just beginning to grow into his body. Waking around campus you would never guess he was one of the most gifted athletes in the world. That is until he walked onto the diamond. Then he became \"The Dominator\"!\n\nDom was able to do things on the field that I didn't think were possible. I played shortstop for the Cubs for many years, and I saw all the greats play the game. Nobody, I mean NO BODY could do the things, either with the glove or at bat, that Dom did routinely.\n\nIn his 3 years at Ole Miss, Dom made 2 errors. Now that stat can sometimes be misleading. Let me clarify how amazing 2 errors in 3 years really is: in that same 3 years Dom accepted 1235 chances. That's 1 error every 600 chances accepting. By way of comparison, Last year's gold glove winner at shortstop in the National League committed 7 errors while accepting 734 chances...\"\n\n*******************\n\nAngie reminisces:\n\nThe closer we got to graduation, the more upset I became. What was I going to do? Dom had accepted a scholarship to Ole Miss. He told me he wanted to play for Don Kessinger who, he told me, was a great shortstop for the Chicago Cubs years ago. He felt that playing for Kessinger would help him prepare for his dream of playing Major League baseball. \n\nWe had become closer and closer. I was still his Angel and he said he loved me. He was my Dombo and I loved him more every day. Da, of course new he wasn't good enough for me. After all, how was he going to provide for me? You can't make a living playing games. Doesn't Da know anything about love? All I needed was my Dombo. Nothing else mattered, well at least to me.\n\nDom and I talked about it. He told me that he had promised my Da that he would never do anything to harm me. In his mind that included marrying me before he could provide for me financially. What was I going to do; I couldn't bear the thought of being away from Dom for the next 4 years while he was away at school. \n\nI had been accepted to nursing school at Southeast Missouri State in Cape Girardeau; MO. Nursing had long been a goal of mine. I wanted to work in pediatric nursing. I loved working with kids. I guess I got that from Dom. He had begun going to the hospital on Saturdays to visit the pediatric ward. The kids loved to see Dombo, and he always entertained them by wiggling his ears and telling stories about how he could fly. I started going with him and that's when I found that I loved children as much as Dom.  \n\nOf course, it was Mom who found the solution to my problem. One day when I was moping around the house, she walked up to me and casually said \"You know they have a nursing school at Ole Miss.\" She looked at me with a devilish twinkle in her eyes. I looked up at her in wonder and she handed me an application to Ole Miss. As she sauntered away, I realized just how smart my Mom really was. Looking back, I could see that while Da ranted and raved, all it would take was a quiet word from Mom and issues would seem to be resolved.\n\nThat fall saw Dom and me arriving on the campus of Ole Miss, Dom to play for his hero. Me, to be with mine. Life was good. Oh, Da had his rants. I was moving too far away, I better pay attention to my studies and not spend all my time with \"that screeching scarecrow.\" Now that description was a little unfair. Dom's voice had settled down to a well-modulated adult male voice. Additionally, Dom had gained weight and while still slim, was certainly no scarecrow. But, that's how Da saw him and, I guess, always would. \n\n*****************\n\nBack to the present:\n\n\"...It was while at Ole Miss that Dom acquired the nickname he would carry the rest of his life. Midway through his freshman season he had a particularly torrid stretch even for him. It was then that some of the fans started calling him \"The Dominator\". It grew from a groundswell to the point where the fans started chanting \"Dominator, Dominator\" when he walked into the on deck circle. Pretty soon the newspaper picked up on the Dominator angle and then some enterprising young man began selling Dominator t-shirts and a legend was born...\"\n\n*******************\n\nAngie reminisces:\n\nAll of a sudden my Dombo was The Dominator, well at least to most people he was. In the fall of our first year we discovered St Jude Hospital for children. Every Saturday (during the off season) we would drive up to Memphis, TN to visit the kids of St Jude. Oh how they loved him, and oh how we loved them. You really can't understand courage until you see the courage that these children exhibit each and every day. Some people shy away from volunteering at places like St Jude because they think it is a depressing place. What those people don't understand is that everything you give to the kids you receive back two fold from those same children. To Dom and me it was always a joyous and spiritually uplifting experience. That was when I came to realize that we would have a big family. I knew, even if Dom didn't know it yet. I guess there was a little of my Mom in me.\n\nI said that to most people Dom was The Dominator but to the kids at St Jude, Dom was still Dombo. It was funny, when the Dominator t-shirts came out; we bought some to give to the kids. They wanted Dombo shirts! Of course we were just poor students; we couldn't afford to have Dombo shirts made. One of the volunteer doctors heard about the kids wanting Dombo shirts and, after getting Dom's permission, had enough printed to insure each child was able to have their own Dombo t-shirt.\n\n*********************\n\nBack to the present:\n\n\"...Dom was drafted in the first round by the Chicago Cubs after his junior season at Ole Miss. While we were certainly sorry to see Dom leave the University, we all were excited for him and knew that he was about to take Major League Baseball by storm...\"\n\n*********************\n\nAngie reminisces:\n\nBy now Dom and I both knew we were in love with each other. We had talked long and hard about our future. That we would get married was a given, the real question was when. As Dom was leaving Ole Miss to pursue his dream of playing major league baseball, I wanted to get married as soon as possible. I wanted the security of wearing Dom's ring while he was traveling all over the country playing baseball and I was still finishing my degree work. Dom, on the other hand remembered his promise to my Da that he would never hurt me and was adamant that we wait until he could support me. This meant waiting until he made the big leagues as minor league players don't get paid much. I knew he was right but I still didn't like it.\n\nDom left town to start his career as a ballplayer. We would talk every night and he would get back to town as often as he could. When he was in town it was a magical whirlwind. We, of course wanted to be together as much as possible, but there were other demands as well. Both our families wanted to see us as much as possible although in Da's case I think it was mainly to complain about Dom's career choice and, what Da perceived as Dom's lack of earning potential. Dom would always just smile at Da and tell him everything would work out and he would never do anything to hurt his Angel. \n\nIn addition, we always made time to visit the children of St Jude. It's funny, looking back while this detracted from our much needed alone time, visiting St Jude was always a special time for the both of us. It was a bonding time and help set the tenor for the rest of our life together. Children, first others, and later ours, always came first in our relationship. Dom was always my Dombo and I was always his Angel. I don't know how it came about, but somehow that's how we became known around the Hospital \u2013 Dombo and Angel.\n\nIt was September of that year that we got the break we had been waiting for, Dom was called up to the big leagues \u2013 Dom was a Chicago Cub!\n\n*****************\n\nBack to the present:\n\n\"Our final presenter is Dom's first major league manager. John Sampson coached and played major league baseball for more than 40 years. He has had the opportunity to see and be around the greatest ballplayers of our time. John managed Dom for 6 years and there is no one more qualified to present Dominick Carvoli to the Major League Baseball Hall of Fame. Ladies and gentlemen, I give you John Sampson.\"\n\n\"Thank you Mr. Commissioner and thank all of you who have come out today to see Dominick Carvoli enshrined in our Hall of Fame. No one has ever been more deserving.\n\nDom was called up to the Cubs after spending only a part of his first year in professional baseball at the Double A level. It was the end of the year and we brought Dom up when we were able to expand the roster. The Idea was to see where he was developmentally so we could better see where he would fit into the system the next year. We weren't prepared for what happened...\"\n\n*******************\n\nAngie reminisces:\n\nDom finally got his big chance. He called me and said the Cubs had called him up and he wanted me to fly to Chicago be there for his first game. Dom's Godfather met me at the Memphis airport and we flew to Chicago. I'm so glad he came with me, Chicago is so big and I'm sure I would have gotten hopelessly lost. \n\nI met Dom at the ballpark and he showed me around. Everyone was so nice to me. It was hard to understand until you understood Dom's effect on people. He loved people and they loved him back. He'd only been there a day, but he team had already accepted him as one of their own.\n\nWalking out onto the field with Dom was a feeling I will never forget. It was almost a religious experience. The only other people in sight were the groundskeepers, so we were basically alone in what was to be Dom's work home. It was so big and beautiful. I was enthralled. ",
        "Dom started his first game that day. I don't remember much about the game. All I really remember was seeing my Dombo out at his position \u2013 Shortstop, and remembering way back to when I first saw him play. That was the day I first saw the transformation from Dombo to the Dominator. I saw it again that day in Wrigley Field in Chicago. Dom was at home and everyone in attendance that day saw it too.\n\nHe finished the season with the Cubs and was offered a big league contract! Dom had finally achieved his dream of becoming a major league ballplayer. \n\nI was ecstatic because I just knew we could get married now. We talked about it that fall and decided that we would get married during Christmas break. I was still in school finishing my degree in nursing. This was something Dom wanted me to do. \n\nDa, of course, was against the timing. Why couldn't we get married in the spring or the summer like normal people? Fortunately, as we all know, women are in charge of weddings. The groom's job, and in this case the father of the bride's job, is to \"Shut up, Show up, and Pay up. Mom, Dom's Mom and I made sure of that.\n\nThe one thing that we 3 worried about leading up to the wedding was the interaction between Dom's large Italian family and my large Irish family. Leave it to Dom's Godfather to defuse the situation before it even became one.\n\nIt was the evening of our rehearsal and rehearsal dinner. My folks and Dom were all at the church waiting for Dom's folks. Where were they? Da was getting more and more upset. You could see the color rising out of his collar and up his neck. Where were they, and how dare they keep everyone waiting!\n\nFinally the rear door to the church open and in walked all of Dom's family. The men were dressed in black suits, black shirts and white ties. They had taken them off as they entered the church, but he men also had black fedoras with a white satin band. The women all had black peasant dresses, with black lace scarves covering their heads.\n\nDa was flabbergasted. We could see the steam rising as his facial color stared to match the red of his hair. Finally, with steam coming out of his ears he exploded: \"What the hell is going on here! What are you all supposed to dressed up as?\"\n\nDom's Godfather calmly walked up to Da and answered \"Why we're the Hooterville Mafia.\"\n\nThere was dead silence and Da's complexion, if anything got darker. I thought to myself \"Why me, why now? I'm so screwed!\"\n\nSuddenly Mom exploded in laughter. She remembered Da's comment from so many years ago. Mom ran into Dom's Godfathers arms Exclaiming that was the best joke Da had ever had played on him. With that the tension of the moment was gone. Everyone laughed, Da included, and we became one REALY big family. How did Mom get so smart?\n\nAfter that the wedding went off like clockwork and Dom and I started the next chapter in our life.\n\nWe must have done something right because exactly 9 months later Dominick junior was born. Over the next 8 years we had five more children. Just like I knew we would, we had our large family. Dom was the best father a kid could have, yes he was on the road during the season, but there wasn't a night gone by, when he didn't call us and make time to talk to all of us. Some of those calls would last 2 hours or more, but Dom always made sure that each and every one of us got his full attention.\n\n*****************\n\nBack to the present:\n\n\"...All-in-all Dominick played 13 years for the Cubs. He was an all-star 12 of those years. He also won the Gold Glove for shortstops 12 years in a row and hit over .300 12 of the 13 years he played. Dom retired with a lifetime .328 batting average. Oh, by the way, he also won the National League MVP award twice. \n\nDom also set up a foundation for children in need. Dom being Dom, never specified what that need should be. He donated money to the Make-A-Wish folks. He bought a whole section of season tickets so disadvantaged kids could come to a ballgame. He never charged any child for an autograph and he always made himself available before and after games. He visited pediatric wards and hospitals in every city we visited. In all Dom made sure that every child he came in contact with was made to feel special. I can't think of a better legacy...\"\n\n******************\n\nAngie reminisces:\n\nOur lives were wonderful. As soon as the season was over Dom would come home to New Madrid, after all this was our home. He spent as much time with our children as was possible. It's funny, but even when our kids got old enough to know what Dom did for a living, and how famous a ballplayer he was, to them he was always Dombo. Not Dad, not The Dominator, but Dombo. And Dom reveled in it, he would spend hours wiggling his ears and telling stories of how he could fly with his ears, but the ball club wouldn't let him. He also told them I was an angel and would sometimes fly with him but we had to do it at night because we would scare people. Fortunately, none of our children inherited his ears or his imagination! One Dombo in our family was enough!\n\nThrough the years we continued to spend a lot of time with the children of St Jude. We never failed to be humbled by the courage and tenacity of these wonderful kids. We always made sure to have plenty of Dombo t-shirts for all the kids. It always amazed me, but no matter how famous Dom the Dominator became, the children always wanted Dombo. \n\nThen came the day we found out Dom was sick. He'd been uncomfortable for some time but it was nothing he could put a name to: he was just uncomfortable. He finally noticed some blood in his stool. When we got to the doctor we found he had colon cancer. The doctors were hopeful that with treatment, Dom would be able to recover. \n\nI was devastated. My Dom was only 34 years old, he couldn't have cancer. Of course, we told our children and the rest of our family. Everyone was concerned, but we all believed that Dom could beat this just has he has always beat everything else. \n\nSo, we started chemotherapy. When Dom's hair started falling out, all six of our kids shaved their heads too, even our girls. Dom laughed when he saw them, pointing out that with their bald heads, our kids seemed to have Dombo ears. \n\nAs word got out, some of our St Jude kids started coming by to visit. Dom never refused a child wanting to see him. The irony of the role reversal was not lost on us. Of course cards and letters were coming in by the truckload. We tried to acknowledge everyone. The ratio of correspondence for Dombo beat out that for the Dominator by a good 3 to 1.\n\nAs time went on it became apparent that Dom was not getting any better. If anything his cancer was spreading. Dom never gave up. He still made his appearances both for baseball, and for the children. He was always positive and upbeat.\n\nAt home Dom spent as much time with each of us as he could. Our children always understood that their dad loved them wholly and unconditionally. Dom's and my time together became my whole life. I couldn't bear the thought of a life without my Dombo. But Dom would reassure me that no matter what, I would always be his Angel and his life would always be full because we were together.\n\nI found that I could draw strength from his strength. I learned that we would always be together in spirit if not in body and I was able carry on secure in the knowledge of our everlasting love. \n\n*******************\n\nBack to the present:\n\n\"Dominick Carvoli was forced to retire from baseball at the age of 34. Not because his skills had diminished, but because he contracted colon cancer. Dom felt it was in the best interest of his family that he retire to be with them and together they would fight this cancer.\n\nHe and his family fought his cancer for 3 years before succumbing this past April 22nd. He was 37. Baseball lost one of the greatest players of all time. The world lost one of its greatest ambassadors for children. I lost a friend. Ladies and Gentlemen, you do me great honor by allowing me to present Dominick Carvoli for induction to Major League Baseball's Hall of Fame. Dominick I love you.\"\n\n\"Thank you John. Accepting for Dom is his lifelong friend, his wife and the mother of his children: Angie Carvoli.\"\n\nAs they called me to the dais to accept for Dom, they unveiled his bust. I looked at it and smiled. It was perfect. It was at that moment I knew what I was going to say. First I pinned on my pink ribbon for breast cancer awareness and my brown ribbon for colon cancer awareness. I dropped my prepared speech on the table and looked to my family sitting in the first few rows. There must have been a hint of the devilment in my eyes because when my six children saw me, they stood as one and started whooping and waving their fists in the air. Mom's hands flew to her mouth, but then she smiled and winked at me. Da, the man who gave Dom so much hell over the years, simply sat there and with tears running down his cheeks gave me a thumbs up.\n\nI got up and went to stand behind Dom's bust. I looked out over the crowd. There was Dom's family led by his irascible Godfather who was grinning like the cat that got the cream (how could he know what I was up to)? In the back were 5 of our St Jude kids brought here from Dom's induction as part of their Make-A-Wish. Tears were flowing freely as they chanted \"Dombo! Dombo!\"\n\nOthers in the crowd that day looked around in wonder at what was happening.\n\nAs I rubbed my hands lovingly on Dom's ears I began. \"You've just heard all about the Dominator; Let me tell you about my Dombo...\""
    ],
    "authorname": "Jeff_Thomas",
    "tags": [
        "baseball"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/dombo-and-angel"
}