{
    "title": "The Runesmith Chronicles Ch. 23",
    "pages": [
        " Welcome,\n\nFor those of you who are new to The Runesmith Chronicles, I sincerely suggest you go back and start at chapter one or you won't understand what is going on. My apologies for being so direct ,but for this particular chapter it's important. \n\nBlu\n\n------\n\nEdited by: Old Fart\n\n------\n\n\"Hold your breath,\" said Ikuno, leaning over as she held the ink behind Kal's back with the telekinesis cantrip.\n\nKal did as she asked, trying hard to hold down his excitement as Ikuno placed the last and probably most important of his runic tattoos, the healing rune. Cure Poison and Cure Disease were already on his shoulder blades and now the healing rune was going to go right in between. Ikuno had recommended placing it on his back because when attacked the first instinct is to face your foe. Having it here reduced any chance of the rune getting damaged in combat.\n\nThe spell Ikuno was using to set the ink into his skin was accompanied by an icy tingling that made Kal grit his teeth. Thankfully, the sensation faded quickly.\n\n\"All done,\" she proclaimed standing up straight again. \"I'd say that we should test it out, but you aren't injured at the moment and I have every faith in your improved runes after seeing you use them for so long.\"\n\nKal smiled at the compliment and looked over his shoulder, \"I wish I could see them.\"\n\n\"Start working on some of the low-level illusions and you will probably be able to. Let me see if I can come up with something,\" said Ikuno. She concentrated for a moment and made a circular motion with her hand in front of her. The air shimmered for a few moments then started to become slightly reflective. Kal examined the runes on his back as best he could with the fuzzy image.\n\n\"Thank you,\" he said, \"I couldn't make out much, but I appreciate the attempt.\"\n\nIkuno shrugged as the spell dissipated, \"It's easier to make colors in the air than to make something reflective. I do have a polished piece of silver you could use as a mirror but it's in my bag,\" she offered. Kal thought about it for a moment and decided that it wasn't worth putting up with Dai again. When he shook his head there was an unmistakable look of relief on the oni's face.\n\nMovement over by the entrance to Ikuno's home caught their attention as Gerda emerged from the stone wall. Her sad expression told them that she didn't have good news.\n\n\"What's wrong Gerda?\" asked Kal.\n\n\"Sandy is gone,\" she replied, \"It doesn't look like she even stayed the night.\"\n\nKal and Ikuno walked over and wrapped the golem in a hug to console her. \"I shouldn't have yelled at her before we left,\" Gerda continued, relaxing into their embrace, \"and I shouldn't have left her alone last night. She was so excited. She never stopped talking about having a daughter all the way here. I didn't think she would be so scared of humans that she wouldn't even show her face.\"\n\nIkuno had her arms wrapped around Gerda and Kal, she gave them a small squeeze and stepped back. \"She has good reason to be wary and I can understand her being extremely cautious. However, I'm with Kal, that's no way to bring a child into this world.\" She looked over at Kal, \"I must say though, I'm curious why you got as upset as you did last night.\"\n\n\"Honestly, it surprised me as well,\" answered Kal. \"I think that it goes back to accepting that I wouldn't be the kind of father I wanted to be. Even with Sandy, Bas, and Marble, I knew that we wouldn't be doing this out of love, but I still assumed that we would still spend some quality time together and enjoy the experience. Being treated like a faceless donor made the whole situation feel... mechanical, as though anyone could have filled that role. I think that was what pissed me off the most, she made me feel like I didn't matter. If I don't get to be a true father and dote upon my children, then I at least want to know that they were conceived in a good way. I can't imagine if I had gone through with things last night and would live out the rest of my life knowing I had a daughter out there with my only memory being a woman's ass sticking out of a wall.\"\n\nGerda looked thoughtful at his words, \"Maybe I should try to find her and explain what you just said. She only has a little bit of time before her cycle ends and it will be almost a year before she will be ready again.\"\n\nKal shrugged, \"I really don't care at the moment since I'm still annoyed with her right now. However, I won't stop you if you decide to go after her.\"\n\n\"I was wondering, how did you end up yelling at her last night?\" asked Ikuno.\n\nThe golem's expression saddened. \"When I asked her what she was doing Sandy made it sound like Kal was just some bandit. I told her that I had been with him many times and not once had he done anything to hurt me. She snapped back at me saying that he was only keeping me around to have sex with.\"\n\nIkuno burst into laughter at the absurdity of the accusation while Kal just looked confused, \"Did you not mention that I have other women?\"\n\nGerda looked over at Kal while steadfastly ignoring the laughing oni, \"No, I didn't know how she would react to having to share you with non-golems.\"\n\n\"If you go after Sandy, no more secrets. Let her know the whole story about who and what I am as well as my situation,\" said Kal \"If you don't, then make sure Bas knows the same whenever you go get her.\" Gerda nodded in understanding.\n\nKal stopped for a moment and looked off in the direction of his farm, \"I think that meant that I'm welcome back home.\"\n\n\"Ria already has all of your stuff stored away, except your shirt, cloak, and staff,\" said Ikuno as she and the golem followed Kal over to his belongings. When he was ready to go she leaned down and gave him a searing kiss goodbye, \"I've left a little jar of lube with Ria, don't be afraid to use it. Remember, human women are a lot more sensitive back there, you can't just dive in and fuck the hell out Perra's ass like you can with me. It may take some time to make sure you don't hurt her but if you do it right she'll love you more for it.\"\n\nKal nodded even though this was probably the fifth time a similar conversation had happened between him and Ikuno since he told the oni of Perra's offer. He couldn't blame her for being so concerned, with the girl's only experience being the unpleasantness with Sir Michael, this was a big step. Kal was determined to make it as enjoyable for the girl as possible and hopefully erase the last of those bad memories.\n\nHe did have to suppress a smile at how the oni's attitude towards Perra had changed since the girl's birthday. 'Motherly' certainly wouldn't be a good way to describe it, more like a protective, horny older sister who didn't mind sharing her man with the younger girl. Kal's guess was that because Perra was now considered an adult, Ikuno could relax and play the part of older, wiser woman since she no longer had any direct responsibility over the girl.\n\nKal turned to Gerda and gave the golem a passionate goodbye kiss. \"Last night was wonderful and I'm very happy that you decided to come with me instead of staying with Sandy. I'd like to do that with you a bit more often. I appreciate that you aren't as demanding as the others, but I don't want to get to the point where I feel like I'm neglecting you either.\"\n\nThe golem blushed at the thought of the previous night. Once she and Kal had cooled off from the encounter with Sandy, Ikuno had all but tackled them both into bed. Kal had mentioned early on to the oni that he wanted to focus on the golem girl that night. Ikuno had been quite accommodating, helping to get Gerda warmed up with some heavy petting then stepping back while Kal and the golem made love, for a while at least. As she was laying on her back with Kal slowly stroking in and out of her while sucking on one of her nipples, Gerda felt another much larger mouth on her other breast. From that point on Ikuno seemed determined to give the golem's body as much pleasure as possible while Kal was taking care of her sex. She had even allowed the oni to tease her backdoor as she rode Kal, sending her quickly into a shuddering orgasm and one step closer to letting Kal take her that way.\n\nKal had pulled out a small stone shelf next to Ikuno's bed for Gerda to put her hand on as she slept. The golem was far better about being away from stone for short periods but still needed its comforting presence to sleep. With her hand on the shelf Kal had curled up behind her, his cock slipping easily between her cheeks since it was still a bit wet from being inside Ikuno moments before.\n\nOnce he had filled her up for the second time, and Gerda was nearly insensate from being double teamed, Kal had asked Ikuno to cast a spell on him. He'd then bent her over the bed and slipped inside the oni, pounding her hard and fast to a couple of leg shaking climaxes while the golem looked on. Gerda had blushed fiercely when she realized that Ikuno was staring at her sex with obvious hunger. She hadn't noticed she was sitting on the bed with her legs slightly open while Kal's seed dripped on the bedcovers below.\n\nA thought came to her that made the golem look quickly over at Kal. He nodded back at her with a smile. Shifting her hips forward she brought her human hand down below her pussy. Using her internal muscles, she squeezed out a dollop of cum onto her fingers and presented it to the oni. Gerda was stunned at Ikuno's reaction, nearly as soon as Kal's seed touched her tongue the oni sucked the rest of the golem's fingers into her mouth and screamed around them as her body shook from her second orgasm.\n\nAfterward, Kal gave Ikuno a goodnight kiss and curled up behind Gerda on the bed. The golem looked over, expecting to feel the oni joining them on the bed, and saw Ikuno with a large metal club which she was securing to her hand with a strip of cloth. Laying her head back down she heard the oni sigh heavily before putting out the torches. Moments later, the same sigh was echoed by her bedmate.\n\nSometime during the night, she woke up to Kal moving.\n\n\"Fuck this,\" he'd muttered, pulling on the vambrace with his strength rune. Ikuno was just starting to wake from the small light he had summoned. Gerda watched as he walked over to where the oni was sleeping. \"I'll take my chances,\" he said then picked up the large blue woman out of the stone chair and deposited her onto the bed. Kal directed her to lay with the club across the top of the bed as he strengthened the stone shelf he'd made for Gerda to also support the end of the weapon. With the oni situated, Kal crawled back into bed and pressed himself in between the two women. After taking a moment to lift one of the golems cheeks and tuck his prick between them again, he draped an arm over her and quickly began nodding off.\n\nThe last thing the golem had heard before falling asleep herself was Ikuno kissing the top of Kal's head and whispering, \"I love you.\"\n\nNow, as Kal stepped into the tunnel to go back to his farm, Gerda continued to blush. Not from their activities last night but because she wanted to tell Kal she loved him the way Ikuno did but couldn't overcome her embarrassment. She was just about to go after him when she felt a hand on her shoulder. Gerda looked up at the oni with a mixture of frustration and relief.\n\n\"Wait,\" said Ikuno, \"I'm pretty sure I know what you were about to do. When you say it he will want to spend some time with you alone. For Perra's sake and for his, wait just a little while longer. If I know him he'll turn around and come right back if you say it now.\"\n\nGerda nodded and watched Kal's light in the tunnel fade as he made his way home.\n\n------\n\nIt was just before midday when he arrived back at his farm. Stopping just before the forest edge he looked over the property.\n\nSomething felt different.\n\nKal had been away from home for extended periods of time before as he grew up and each time there had been this sense of relief or perhaps it was a sense of being back where he belonged as he first laid eyes on the farmhouse.\n\nToday, he didn't feel that.\n\nIt made him uncomfortable, like he was betraying some part of his nature. This had been his home his entire life, he had even been born here. Even so, it didn't feel like it was \"his\" anymore.\n\nA small part of him wanted to blame Perra for the change but he quickly dismissed the idea. Certainly, the woman had stepped up to make sure that things were taken care of during the times he was gone but she had never acted with any sense of ownership over the property. He could argue that her wanting to hire some helpers could be construed as an act of ownership, however, their connection still worked largely on feelings and beneath what had sounded like the order of an annoyed woman was the hope that he would approve of her request.\n\nNo, Kal knew that it was him that had changed. Over just a few days he had climbed a mountain and found an ancient nesting site for a legendary bird, traveled to the depths of the earth and swum in a lake of molten rock, and even fought for his life a couple of times. Along the way he had been witness to a marriage; recognized as a Master within his town; befriended a harpy, a salamander, a bag of holding, and a group of metal eating crabs. Above all of those, he had flown. Well... not really, it had just been gliding, but the sense of freedom had been exhilarating. Days later the memory still made his breath quicken.\n\nAll of those experiences had undoubtedly altered him in some way but under careful consideration, it likely wasn't any of those things that had changed how he looked at the farmhouse. Most likely, it was the three magical runes that were now on his back. When he thought of someone calling him a wizard, the title felt like it fit in a way that it hadn't the day before. In a similar manner it had been getting harder and harder to think of himself as a farmer, today he felt more like a magic-user who occasionally works on a farm. Kal smiled as his internal identity as a farmer, which he had held onto so tightly and with great pride for years, fumed at the idea that he now thought of himself as a mage.\n\nKal looked up and saw Perra standing in the doorway of the barn staring at him, more specifically staring in his direction since he knew she wouldn't be able to see him beneath the shadow of the forest canopy. He was surprised that this bit of inner turmoil had been strong enough for her to sense it.\n\nKal adjusted his pack and stepped out of the forest heading towards the girl. Perhaps Ikuno has been more correct than he had given her credit for. Perhaps the time for him to strike out on his own was coming far faster than he had anticipated.\n\n------\n\nAfter helping his mother out into the living room, Kal spent the rest of the afternoon regaling her and Perra with his tales of events from the last few days. His mother's occasional scolding ranged from corrupting Rone into taking on a second wife to \"there are some things a mother doesn't need to hear about,\" when he told them of how the gargoyle flew him high into the air and dropped him.\n\nBoth of the women had an enjoyable conversation with Ria once he had introduced her. Kal's mother had been slightly put off by the sprite's nudity. He mentioned something to her about being dressed for the occasion, a moment later a loose top just barely large enough to cover her breasts and a short skirt appeared on the avatar's small body. They were equally impressed with Ria's ability to store things as they were with her personality when he demonstrated by having her store his staff then retrieve it right away.\n\nKal had just sat back down from getting himself a mug of ale from the small keg they kept in the kitchen when Perra asked Ria.\n\n\"Have you ever been filled up before?\" she asked then immediately blushed since how it sounded was much different than what she meant. Kal's mother shot the girl a disapproving glance and Kal choked a bit as he tried to take a sip of ale.\n\n\"No,\" replied Ria, \"Not to say that my former master didn't try, but he was hardly up to the task.\"\n\nKal just managed to turn his head and keep from spitting the brew all over his mother after the sprite's comment. He then spent the next couple of minutes cleaning warm ale from the front of his shirt and trying to get the smell out of his nose. \"You did that on purpose,\" he said to Ria with a half-hearted accusing glare. The bag's avatar was laughing too hard to respond.\n\nPerra came back with a couple more towels for Kal to clean up with \"I think I'm going to like her,\" she said nodding towards the giggling image of a sprite.\n\nKal removed his shirt and pushed some magic into the small rune on a leather tag that quickly cleaned it. He took the opportunity to show them the three rune's he now had across his back, explaining to his mother for the first time that the ink for these wouldn't burn and had been the purpose of the journey he had been on for the last few days. When he mentioned that one of them was Cure Disease his mother looked up at Kal's face.\n\n\"You didn't waste some of that precious ink you worked so hard for that just because of what happened to me, did you?\"\n\nKal smiled, \"Partly, if I ever run across someone in a similar situation to ours then I plan on using this to help them. No one should have to choose between the life of a loved one and slavery. However, it's more than just that, this allows me a degree of protection from liken... lycan... from being turned into a werewolf,\" he said in a rush, annoyed that he couldn't remember how to say the blasted word.\n\n\"That's a disease?\" asked Perra, then shared a confused glance with Kal's mother.\n\nHe nodded, \"A magical one but it's still considered a disease, as is vampirism,\" Kal allowed himself a mental pat on the back for not stumbling over that word as well. \"From what I learned, it's both a disease and a powerful curse. With this, if I were bitten I could heal myself of the disease portion, which would kill me in the next few days then bring me back as an undead. After that, I would just need to get the curse removed to get rid of the bloodlust and burning in the sun.\n\n\"As you can see, it has other purposes besides sentimental ones.\"\n\nHis mother frowned, \"I still don't like the idea of you preparing to go deal with things like vampires and werewolves,\" a small shudder ran through her, \"I still can't imagine what kind of hell the werewolf that took your father put other families through once it left the area.\"\n\n\"No...\" Kal whispered his eyes wide. Perra and his mother both gave him questioning looks as he slowly shook his head. \"There's no way I could have forgotten that, I rehearsed it over and over. I thought you would be so happy...\"\n\n\"What is it Kal?\" asked Perra, concerned by the shocked look on his face.\n\n\"Something I should have told mother a long time ago, I still can't believe I could have forgotten something so important.\" He knelt down in front of his mother's chair, \"The werewolf that killed father is dead. It turned north then east as the menfolk in the village suspected but it never left the area.\" Knowing how his mother usually reacted to mentioning Ikuno, he had glossed over her importance in his journey, there was no way of getting out of bringing her up now. \"The werewolf ran into Ikuno's home, there was a fierce battle between them, but she won in the end. She chopped it up and disposed of the body in a way that it couldn't ever regenerate and hurt anyone else. Without even knowing, Ikuno avenged Father, Gran, and Gramps.\"\n\nKal's mother sat there for a moment with a stunned look on her face. A few seconds later tears began to run down her cheeks then she leaned forward wrapping her arms around Kal as she began to cry in earnest.\n\nPerra quietly moved around the back of Kal's mother and gestured agitatedly while mouthing, 'How the hell do you forget something like that!'",
        "'I don't know!' he responded as his mother continued crying into his shoulder.\n\nPerra threw her hands up in exasperation before deciding to leave Kal and his mother alone and go work on supper.\n\n------\n\nKal came into his and Perra's room after helping his mother to bed. She had been weak to the point where she couldn't walk, even with Kal's assistance, and he had ended up carrying her into his old bedroom.\n\n\"Is it just me, or did she get worse over the course of the day?\" he asked Perra.\n\nThe younger woman sighed as she crawled under the covers, \"Something similar happened a while back on one of the nights you were gone. I think it was after your encounter with the gargoyles if I'm not mistaken. She came to check on me and fell hitting her head. I came out and helped her up into her chair and we sat there and talked for a while, mostly about you, until the bleeding stopped. When I took her back to bed I nearly had to carry her, much like you did when you went and got her today. It wouldn't have been so noticeable except that she had mostly gotten herself into the chair only a few minutes earlier.\"\n\n\"As awful as this sounds maybe this is why I 'forgot' to tell her about what happened to the werewolf. It seems like certain things make her suddenly worse.\" He looked at the wall separating their rooms, strain apparent on his face. \"Now I'm wishing I hadn't told her,\" he said remembering how moments ago his mother had been struggling just to keep her head raised and not let it loll as she was carried to bed.\n\n\"I'm sorry, Kal, I wish there was more I could do, but I really don't understand what's going on with her,\" said Perra, with sadness and concern for her lover in her eyes.\n\nKal gave her a weak smile, \"Don't feel bad Perra, no one does. Except for Ikuno perhaps, but she's so tight-lipped about anything to do with my mother I can't help but wonder what the connection between them is.\" Kal quickly undressed and joined Perra in bed but not before she gave him an appreciative whistle for his clean-shaven groin. \"I know you had something special planned for tonight, I hope you don't mind but I'm not really feeling up for it.\"\n\n\"It's fine,\" she said pressing her back up against his chest and suddenly missing the feeling of his chest hair, \"To be honest I may have been a bit quick to make that offer. Fingers and tongue seem to be okay but when I think about you taking me that way, I mean really imagining that you are about to enter me, my whole body locks up and I have to fight down the fear of it hurting.\" She gave him an apologetic look over her shoulder, \"Give me a bit more time.\"\n\nKal wrapped his arms around her, \"Take all of the time you need, I'm in no hurry.\"\n\n\"Hmph, I'd imagine not with women like Ikuno who bend over and spread their cheeks wide while begging to be taken that way.\"\n\nA very vivid image popped into Kal's head. Despite his insistence that he wasn't really in the mood, his body reacted anyway.\n\n\"That's what I was hoping for,\" said Perra feeling him harden. She lifted a leg and reached down placing him at the entrance of her sex. With a groan, she slid down on him as far as she could manage from this angle before lowering her leg again. With a contented sigh, she adjusted herself so she was comfortable. \"I love you, Kal, goodnight.\"\n\nKal chuckled and draped an arm over the woman in front of him cupping one of her breasts. Flexing his cock, he got a pleasing squeak from the girl before he kissed her on the back of the head. \"Goodnight, Perra, I love you too.\"\n\n------ \n\nA couple of days later Gerda contacted him, her excitement apparent through their bond. Sandy had come back!\n\nAfter his and Sandy's first encounter Kal wasn't nearly as enthusiastic as the Gerda. It was with more than a little regret that he bid his mother and Perra farewell and headed to Ikuno's where the golem girl was waiting to take her to her sister. On his way there he conversed as best he could with Gerda through their bond to make sure he wasn't wasting his time. She assured him that she had explained everything as best she could to the younger golem and that there shouldn't be any issues.\n\nHe was mildly disappointed when he and Gerda arrived in her cavern to find it empty. Gerda, on the other hand, had a big smile on her face and began making a 'come here' motion at the wall. A couple of seconds later Sandy walked out, with a motion from Gerda the pebbles covering her breasts and groin melted away and her rocky body parts shrunk to more human proportions.\n\nShe looked to be about the same age as Perra but Kal knew that was misleading and that she would actually be just over two-hundred years old. Besides being noticeably younger than Gerda, her body was set up much the same way as far as her parts that were made of rock, one arm, both legs below the knees and the top left quarter of her head were all tan colored sandstone. As she slowly moved toward Kal and Gerda he noticed they weren't truly tan. Striations in her rocky parts that ran from white, to red, to deep brown in a seemingly random pattern gave the impression of a tan color from afar. Also, like her older sister she had a large ruby for her left eye.\n\nKal stood quietly holding out his hand to the girl as she cautiously approached. With a look that flickered between fear and determination, she stopped right in front of them.\n\n\"I am sorry,\" she said quietly, \"when Lime explained things to me I realized you were right, that was no way to make my first daughter.\" Kal was very appreciative of the earpiece, Gerda's voice bordered on melodic when compared to the younger golem's.\n\nKal smiled as he continued to hold out his hand. Sandy finally reached out and put her human hand in his. The young wizard pulled her in and tilted her head up with his other hand. The young golem gasped as he bent down and started placing small kisses along her jawline on his way to her neck. Forgetting for a moment that there wasn't really an ear on that side with lobes for nibbling on, Kal instead moved his mouth to hers and kissed her hard as he held her body tight to his.\n\n\"Now let's do this in a way that will make you smile every time you look down and see your belly growing,\" he said. The young golem just nodded and stared back at him, amazed that this human had barely touched her, and she could already feel the fluids from her sex running down her thigh.\n\n------\n\nSandy left the next day, unbonded and without Kal learning her real name. Granted, he hadn't actually asked and from the way she constantly referred to Gerda as Lime he had a feeling that this was a custom among the golem girls. Gerda had been ecstatic after Sandy left, hugging him and telling him profusely how much she appreciated what he had done. Out of nowhere she suddenly blurted out \"I love you\" then reeled back in horror and promptly sank into the stone out of embarrassment. Kal sat on one of the chairs by the table waiting for her to come back, misjudging her perseverance and drifting off to sleep before she returned. True to Ikuno's prediction, once she woke him up he insisted on spending some alone time with just her in the cave. Gerda was delighted.\n\nKal got a whoop of excitement from Ikuno as he and Perra were in Telsin looking for possible helpers out at the farm. They, unfortunately, had to turn away their first applicant. News traveled through town fast and when it reached the tanner's, the boy Kal had lifted the tree off of had dropped everything to meet Kal and offer up his services. Perra was the one who noticed the Master Tanner had followed the boy and was watching from the edge of town. His scowling face as the boy spoke to Kal and Perra convinced them to turn the boy down for the sake of keeping the peace, especially with a member of the council.\n\nShortly after the young man had left Kal felt the oni's burst of elation, from what he could tell she finally managed to cast the spell that would protect her from being attacked from the astral plane. More specifically it anchored her here in the real world and preventing her from being dragged off to where she could be assaulted.\n\nAs he was explaining this to Perra a couple of travelers looking for some easy coin came striding out of the inn and demanded jobs. A good number of the patrons had spilled out onto the front porch in anticipation of a fight.\n\nKal yelled over at those watching, \"Can anyone over there speak for these two as being good workers!\" There was much shrugging and shaking of heads coming from the onlookers. \"I'm sorry,\" said Kal, \"If no one of any reputation in this town will vouch for you then I won't be hiring you to take care of my property.\"\n\n\"No one in this town of mudpuppies has any reputation,\" spat one of the men as he pulled out a knife and waved it at Kal, \"and I'll be damned if I'll let some farmer make me look like a fool just because none of that gaggle of idiots back there will speak for me.\"\n\nPerra sighed heavily and began walking off towards the stables, about half-way there she made a sharp turn that took her to the front steps of the inn. Meanwhile, Kal ignored the men for a moment and called out to the inn's patrons again, \"He called me a farmer! Did no one mention to these two what I am?\"\n\n\"Nay!\" Kahrin yelled back a moment before Perra walked up the steps and gave her a hug. \"They heard ye were payin' fer some help at yer farm and high-tailed it out the door!\"\n\nThe two men were obviously getting agitated by Kal's flippant attitude. The man without the knife looked back and saw the smiling faces and almost jovial atmosphere of those in front of the inn. When he faced Kal again it was clear the man was feeling very uncomfortable.\n\nKal pulled his cloak to the side, \"Ria, can I have my staff please?\" he said without taking his eyes from the two men. A mote of light floated up out of the bag tied to his belt and turned into his gold and platinum capped staff when it hit his palm.\n\n\"Nice magic trick,\" sneered the man with the knife, \"but...\" his friend nudged him to get his attention then shook his head while glancing back towards the inn. The knife wielder looked back an saw the same as the other man. \"What? Is this boy your town's champion or something?\" He yelled towards the inn. \"You all going to hide behind some snot-nosed bra... urk!\" When he turned back around he came nose to tip with the point of a spear held by a man with glowing eyes and runes shining from the leather coverings on his forearms.\n\n\"I believe it's time for you two gentlemen to leave town,\" said Kal with a level tone.\n\nThe man's eyes crossed for a moment as he tried to focus on the tip of the spear before he looked at the figure holding it. \"I may be an asshole, but I'm not a stupid one,\" he said sheathing his knife. \"Well be out of your little mudhole in a couple of minutes.\" He nodded at his friend and they both started making their way towards the town stables.\n\nKal turned off the light show and turned the spear back into a staff as he watched the men walk away. Once they had gotten their horses and were on their way out of town he began making his way towards Perra and the inn. When he arrived Kal was treated to an unusual sight, Perra was wandering around collecting a few coppers from various customers as everyone slowly filed back into the dining area.\n\n\"What are you doing?\" he whispered at her when he got close.\n\n\"I made some bets that you could run them off without bloodshed,\" seeing his frown she patted his cheek. \"Don't make that face, I have a plan.\" Once everyone was settled back in, Kal found two tankards of ale shoved into his hands as Kahrin and Perra pushed him towards Bren's table before having a whispering discussion behind the bar.\n\nWhen the noise levels returned to normal Kahrin stood up on the bar and got everyone's attention. \"There's a few o' ye out there that were foolish enough ta bet against Lady Perra's man.\" numerous groans were heard across the dining room. \"As most o' ye know by now, Master Kal an' Lady Perra are lookin' for some help out on their farm,\" there was a chorus of agreement that ran through the room. \"Lady Perra is offerin' ta give ya back yer coppers if'n you'd be willin' ta head out to some of the farms about town and ask any second sons ye can find if'n they'd be interested in the job.\"\n\nA couple of those who were on the wrong side of the betting waved off their losses but quite a few approached the bar where Perra counted out their coppers back to them before they exited the inn.\n\nBy the time sunset came along Kal and Perra had three young men familiar with farming ready to be put to work, and a big problem. Two of the boys had gotten into fights with their families when they left and had shown up with every possession they had. Perra's reasoning for going after the second son was sound, they wouldn't inherit anything when their father passed on so they would be most likely to jump at the opportunity to make a name for themselves elsewhere. However, she hadn't considered how much of a help a young boy was around a farm and how upset the family would be to lose said help. As it was, Kal told them that their first job would be building themselves a bunkhouse out on his property. Until it was finished they would be staying at the Inn with Kal picking up their tabs. The young mage had a slightly surreal moment as he was telling the men all of this, momentarily unable to wrap his head around the fact that two of them were between him and Perra in age while the last was actually a year older than Kal. Yet here he was giving them orders like someone closer to his mother's age.\n\nThe men were warned that Kal kept odd company and he quickly proved it by getting Felli to help with the construction of the new building on the far side of the barn. At first, they were wary when the harpy showed up a couple of minutes before the wizard the next day, though Perra's warm welcome of the monster girl helped put them at ease. When Kal arrived he quickly took one of his larger axes and felled one of the trees the men had marked earlier, the three men hardly believing that it had only taken him a few swings to do so. Kal, however, was quietly annoyed with himself, because of his showing off he was now going to have to replace the handle.\n\nWith that done he directed Felli to stand on top of the trimmed log then asked one of the other men to pick it up. The skeptical looks Kal got were anticipated but he just stood there waiting next to Felli with his now-cracked axe on his shoulder. Finally, the youngest of the three, Tain, if Kal remembered correctly, came over and heaved the end of the log up into the air. He then promptly ended up on his rear as not only was he able to lift it but it was extremely light which he hadn't been expecting. The harpy walked over to the end of the felled tree and glared down at the man, having not appreciated being nearly thrown into the air then just as quickly dropped. It didn't take them long to figure out how Felli's power worked and they were quickly on their way to setting up a foundation by the end of the first day.\n\nThe second day of work held a surprise for Kal. Unbeknownst to him, Felli had taken her new duties of cleaning up the cave very seriously and had invited a few other harpies in the area to help out with the hopes that they might eventually find mates. That morning four harpies showed up instead of just the one Kal had been expecting. After meeting Felli the day before the men were relatively comfortable around the newcomers and by the end of the second day most of the work remaining needed cut boards from the lumber mill. Kal's new helpers were very appreciative of the harpy's attention, second born males often didn't get much consideration from the girls in town since their chances of becoming landowners were so slim.\n\nKal was unaware of harpy's ability to target a specific male with her pheromones, even so, he still wasn't surprised when none of the men returned to the inn that night. The next morning, he met three exhausted but happy farmhands as the harpies dropped them off. He didn't get many complaints as he told them that plans had changed from a bunkhouse to four good-sized bedrooms, two on each side, with a large common room in the middle. With beaming smiles, all six of them went to work changing around what they had already built to match the new floorplan.\n\nPerra approached him as he was saddling Bonn to go put in his order at the lumber mill. \"Do you think it's wise to let them have their new girlfriends staying here with them? If the townspeople find out they will be shunned, and we are a good deal closer to town than Rone and Marda's farm.\"\n\nKal shrugged, \"In some ways they already were. No chance of having their own farm yet too important as an extra set of hands to just allow them to go learn a different craft like many third sons do. I'm honestly more concerned about someone reporting it to the church. I know in the big cities that tolerate monster girls there's little they can do, but Telsin isn't a big city and they might decide to take action. Thankfully, Felli drilled it into the girl's heads before allowing them to come what the rules were about staying out of sight. After last night and the smiles on their faces this morning I doubt those three will do anything to jeopardize what they have going.\"\n\n\"What about chicks?\"\n\nKal's brow furrowed, \"Hadn't thought about that. It feels mean to make them stay up on the mountain but that may have to be the case until they are old enough to understand the rules of dealing with humans.\"\n\nA flutter of wings by the barn entrance drew Kal and Perra's attention. Kuto was a couple of inches shorter than Felli, her cobalt hair, wings, and back along with hay colored chest and forked tail resembled those of a barn swallow. Despite her diminutive stature she was the oldest of the harpies and seemed to be a natural leader. Along with Corben, whom she assisted and eventually took home yesterday, Kal got the impression he could tell the couple what he wanted to be done then walk away without any worries, only to come back later to find the project completed. \"Master Kal?\" called Ruto from the doorway. \"Corben and Thom would like to speak to you about a couple of changes we... umm... they would like to make since we are nearly starting from scratch.\"\n\nKal smiled at Perra, \"Duty calls,\" he said before following the small harpy.\n\n------\n\nDuring the next month and a half, things fell into a sort of rhythm. Kal made his visits across the northern mountains to visit with 'Dell and Bea on occasion. He would have liked to go more often but with his mother's condition worsening it made him nervous to be far from home for too long. Thankfully they were both very understanding, as was Ikuno. The oni drove him hard on his visits pushing him both physically and mentally due to their limited time. To her delight, Kal rose to the occasion, becoming quite adept with the staff while his hand to hand skills improved at nearly the same pace as before with much less time for training. Even without magic, he was becoming a formidable opponent.\n\nWhile Kal didn't make any more progress on the flight rune he did finally remember the book where he had seen the word \"Entropa\" before. Unfortunately, it was just the word on the diagram and had no more information to offer elsewhere in the book. He worked diligently to learn as many of the cantrip level spells as he could while he was at home. Because of the situation, Ikuno started letting him take a single tome with him to study. This allowed him to focus on his various runes when he had access to the rest of her library. Even with the limited availability of research time Kal still found the time to learn and perfect the rune that eventually took the place of the healing rune on his vambraces.\n\nThe adaptation rune allowed him to traverse areas of blistering heat and biting cold without the need for extra protective clothing. However, the protection was only from natural weather phenomenon and didn't apply to magical sources like the fire resistance rune did. He was honestly a bit sad as he used a variant of the spell for setting the runes into the leather to remove the healing spell, it had been one of his first and he had put it to good use since he became a mage. He just couldn't see the purpose of having this one as well as the one on his back. The spells that were set into leather still required he pierce through what felt like a clay wall to activate, the one on his back was like poking his finger through a piece of extremely thin paper. With a sigh, he let the ink from the healing rune crumble into a small pile of dust off to one side. He then pulled some ink from the well and began making his improved version of the adaptation rune.",
        "Corben, Thom, and Tain all came to him after a few weeks and asked if he would be interested in expanding his farm. With the three of them working fields that had been manageable by a single person and the added help of their harpy girlfriends they didn't feel like they were doing enough work to justify their pay. Kal passed off the idea to Perra who was quickly becoming his go-to person for business matters now that she wasn't doing much farm work. The next day she showed him a writ of ownership that increased the size of his farm by more than double and later that day he could already see trees on the back edge of the property coming down to make room for more fields.\n\nKal was certainly proud of what his farm was turning into, at the same time, it seemed to drive home that this wasn't what he was meant to do in life. He was bothered that all of this recent prosperity had come about through no actual work of his own. Even when his hired help and the harpies had suggested moving the boarding house from behind the barn to the north-eastern corner of his property, keeping them and any possible future families away from prying eyes, all he had done was nod his assent. It was perhaps a blessing that between his studies and his mother he had little time to dwell on such thoughts.\n\nThe rhythmic pace to Kal's life came to an end when Gerda announced that she was going to be heading out to get Bas. With so many distractions he had completely forgotten about his rendezvous with the golem's sister. After the poor start with Sandy he wondered if some of that forgetfulness was intentional, he wasn't excited about the prospect of a repeat.\n\nPerra seemed especially agitated by the news. It took him a few hours to realize that she was right in the middle of her cycle, meaning that it was also her best time to get pregnant if she chose to. They had talked about children a couple of times, but she had yet to give him a solid answer as to whether or not she wanted his child before he left.\n\nOn the day Kal was to meet with the Bas he left a huffy and scowling Perra banging dishes around in the kitchen area. As he made his way to Ikuno's he maintained his normal routine and stopped to say a couple of words to Eludora. To his surprise, something had changed in his daughter's little clearing. There was a small sprout poking up out of the ground at the very top of her mound. Kal's excitement shot through his bond with the girls and through his connection with Perra, even though she had dulled things down to a whisper earlier because of her mood. Within minutes Perra and Ikuno were on their way and very pregnant Bea was slowly heading towards Aradelle. Kal wished he could do the same, he could tell she was crying tears of happiness through their bond and wanted to be there to comfort her. Since that wasn't possible today, he instead burned the image of their daughter into his head and sent it to 'Dell as strongly as he could. She quickly sent back a few interesting things she planned on doing to him during his next visit to show her appreciation. Ikuno arrived first and immediately burst into tears upon the tiny green tendril that had pushed up through the soil. Kal could hardly blame her, in a way Eludora was as much Ikuno's as she was his and 'Dell's. Kal experienced a flash of sadness at how the oni had to experience things like motherhood in a second-hand manner.\n\nIkuno looked up at him from where she was kneeling next to Eludora. \"Don't feel sad for me,\" she said, \"I came to terms with that part of my life long ago.\"\n\nHoofbeats from the southwest announced Perra's arrival just before Bonn trotted into the small clearing and came to a stop. At Kal's questioning look toward the horse she just smiled, \"I was going to head over to town and already had him saddled.\" She stared at the tiny plant in front of Ikuno as she dismounted. \"She's beautiful, Kal.\" The oni looked up at Perra's voice, quickly wiping her tears away with the back of her hand. Perra hesitated next to Bonn for a moment before walking over and throwing her arms around Ikuno's neck. \"I've missed you,\" she mumbled into the blue woman's shoulder.\n\nIkuno returned the hug, \"I've missed you too dear. I'd resigned myself to not seeing you until Bea's little girl hatched and we all went up there to see her.\" They had decided that meeting Bea's baby would also be a good time to see if the bonding magic would work for Perra as well. Ikuno was adamant that the attempt be a bit more ceremonious than the other girls had been. The only reason Kal could come up with for the oni's insistence was that they were both human and the scene Ikuno pictured was somewhat similar to a human wedding ceremony.\n\nKal sighed heavily, \"Much as I would like to stay, Gerda is still expecting me.\"\n\nPerra lifted her head off of Ikuno's shoulder and gave him a sultry look, \"You finally get us together and now you're running away?\" Turning back to the oni, she said, \"I guess we will have to keep ourselves occupied.\"\n\n\"Perra!\" the girl's eyes widened at Kal's tone. He indicated the sprout over by her and Ikuno, \"Not in front of the children,\" he said emphatically while utterly failing at keeping a straight face. Perra rolled her eyes in exasperation as Ikuno started laughing. He stepped over and gave them both a quick goodbye kiss before continuing on his way to meet Gerda.\n\n------\n\nKal couldn't have been more wrong in thinking that Bas would be anything like Sandy. When he and Gerda entered her cavern Bas was sitting on the bed, she immediately stood and began walking toward them.\n\nBas was nearly as tall as he was and followed the same pattern of which body parts were made of rock, the similarities ended there. Where Gerda was all soft curves and Sandy had a body type very close to Perra's; Bas's body and how she moved gave the impression of raw sensuality. Kal found himself getting hard already and she hadn't done anything more than walk towards him. It probably helped that she hadn't bothered with the pebble bikini and had shrunk down all of her rocky parts the same way Gerda did. Unlike Gerda and Sandy, her stone body parts were smooth, as if polished. This gave her the look of wearing boots, a single glove and a partial mask made out of something similar to Bea's chitin but without the brown undertones.\n\nFrom his experience with Ikuno and the others Kal could tell every movement the woman made was designed to be enticing; from the gentle almost hypnotic sway of her large breasts, to the way every step seemed like a presentation of a perfectly shaped leg that made him forget her sex was in plain sight, then teased him with its presence until she brought her other leg forward. The display was nothing short of masterful as the prick straining to get out of his trousers could attest to.\n\nBas stopped in front of Kal, her entire demeanor changed from full vamp to concerned and hesitant in an instant. \"Is what Lime is saying true? That if I bind myself to you it will protect me from men using their seed to try to hunt me?\" Her voice was smooth and almost melodic, a welcome change from Sandy.\n\nKal nodded, \"Yes we believe that to be true, although, in honesty, we haven't tested it yet. One of my women who has been bound to others before says that's how it works, and I trust her implicitly. The only way to know is to try it.\"\n\nBas closed her human eye as she considered his offer. When she opened it again a few moments later there was a smile on her face and she was back to being a seductress. Kal was a little bit surprised when he saw the binding magic swirl in between him and the golem but true to his word he accepted it.\n\nBas smiled when she felt the desire coming from Kal and nearly laughed at the fainter desires coming from a few of the other women wanting to learn how to move like she did. She stepped closer to Kal and took his hand. \"You've given me protection,\" she said, pulling him toward the bed, \"now it's time to give me a daughter.\"\n\nKal laughed, \"What do I get out of it?\" he asked as she nearly dragged him along.\n\nBas dropped his hand and stood in front of the bed with her arms out to either side.\n\n\"Everything.\"\n\n------\n\nKal pushed aside all of the background chatter among the girls as he made his way home the next day. Bas and Gerda were still back at Ikuno's chatting with the oni and trying to keep Aradelle and Bea in the conversation as well. Unfortunately, talking with the girls on the northern side of the mountain took more 'volume' for lack of a better word, this meant they were being very loud to Kal.\n\nHe stopped in to see Eludora and got another surprise. Where a sprout had been the day before there was now a sapling that was nearly chest high and dotted with tiny leaf-buds. Aradelle explained through a series of images that this was how a young Alarune increased her chances of survival and was completely normal. First, they set down a good-sized root system then grew intensely for a couple of days to avoid being eaten by local fauna as well as get up into the canopy of the forest to get access to sunlight, something Eludora didn't need to worry about thanks to her little clearing. Next, they would take on the look of a nearby tree and use it as camouflage while they grew to adulthood. Kal sent back his thanks and decided that he should probably get his mother over here within the next couple of days, so she could meet her first granddaughter.\n\n------\n\n\"This is my granddaughter?\" Kal's mother said as Perra helped her down of Bonn's back and into Kal's waiting arms.\n\n\"Don't sound so disappointed, mother,\" he was starting to think that perhaps this hadn't been the greatest idea. His mother had been grouchy and complained all the way here.\n\n\"I'm not disappointed, she's beautiful, Kal. But this...\" she waved at the small tree in front of her, \"isn't the same as having a baby to swaddle and bounce on your knee.\" Kal could hardly argue that point as Eludora now stood well over his head and even Ikuno's, the buds from the day before had turned into oval-shaped leaves that danced in the light breeze.\n\nKal stood next to his daughter's tree holding his mother. She reached up and took one of the leaves in her hand, gently rubbing her thumb over it. At that moment her entire demeanor changed, a happy smile coming to her face. \"I can feel it,\" she said, \"I don't think I really believed you, Kal. The idea of having a plant for a granddaughter felt like you were playing a bad joke on me. Now I know, she really is your daughter, it's like a tiny part of me recognizes her as one of my own blood. Take me in further Kal.\"\n\nHe did as she asked, and his mother put her hand on the tree's trunk closing her eyes and relaxing into Kal's arms. Perra came up beside him and laid her head on his shoulder, \"I'm not sure I've ever seen your mother so at peace.\"\n\nKal's mother looked over at the young woman, a contented smile on her face, \"I am.\" A moment later her eyes closed and her head lolled back as her hand slipped off of Eludora's trunk.\n\n\"Mother?... Mother!... MOTHER!\"\n\n------\n\nIkuno paced back and forth across the furs in her home, someone was coming and she was pretty sure it was Perra since she could feel that Kal was still back at his farmhouse with his mother. Light appeared in the entrance to her cave and eventually revealed Perra holding her enchanted rock, her face streaked from crying.\n\n\"I'm not coming,\" Ikuno growled at the girl.\n\nPerra ignored the oni's words, \"Mom wanted me to tell you that it's not a request this time and to bring her books.\"\n\nIkuno stared wide-eyed at the girl for a moment.\n\n\"FUCK!\" yelled the oni stomping into her library. A chair that got in her way came flying out and was reduced to splinters as it hit the side of her bed. The table went crashing into one set of bookshelves, whatever books Kal had been studying ending up in a heap along with the magical lantern. Ikuno knelt down and opened a secret compartment in the bottom of the other set of bookshelves. Yanking out a small leather bag she threw it out into the middle of the floor and yelled, \"Dai!\"\n\nThe image of a green man sitting on a cloud appeared above the pouch, \"What do you want now peasan...\"\n\n\"Shut the fuck up,\" barked Ikuno, striding out of her library, \"So help me if you say another word I will take everything of value out of you, fill you with cow manure, then toss you into the middle of the nearest fucking volcano. Three books, children's stories that I gave to you around eighteen years ago.\"\n\nDai's expression went from wide-eyed with shock at her threat to disgust, \"Why would you want...\"\n\n\"NOT ANOTHER FUCKING WORD DAI!\"\n\nThe bag's avatar snarled back at the oni before three lights flew out of the bag and turned into the books she had asked for.\n\n\"Now go away,\" commanded the oni. As soon as Dai had disappeared Ikuno stepped over the books and stomped repeatedly on the leather bag, grinding her heel in each time before picking it up and flinging it against the back wall of her library. She took a deep calming breath before gingerly picking up the three books on the floor, each of which looked as though it had been read through hundreds of times.\n\nSeeing the shocked look on Perra's face, Ikuno mumbled, \"Sorry you had to see that. In case Kal didn't mention it Dai and Ria are nearly indestructible.\"\n\n\"Why, Ikuno?\" she asked surveying the mess the oni had caused.\n\n\"Because it's one thing to have an idea or a suspicion.\" Ikuno looked down at the books in her hand, \"It's another thing to know for sure.\"\n\n------\n\nKal saw Bonn come trotting out of the forest carrying Perra with Ikuno jogging close behind. Stepping inside his house he addressed his visitors. \"Master Jurien, Lady Nina, one of my friends is about to arrive. She looks a lot like an ogre but is actually something else called an oni. She's one of my women and will not hurt you,\" he said before disappearing into his mother's room.\n\nA few seconds later Perra came in closely followed by a blue-skinned giant of a woman that had to duck and turn sideways just to get in the door. Both the apothecary and his wife were thankful for Kal's warning. The large woman nodded towards the two before following Perra to see the young wizard's mother.\n\n\"Were those books?\" Nina asked her husband.\n\n\"Aye, but the way she carried them, you'd think they were made of gold.\"\n\nInside the small room, Kal and Perra moved off to either side to make room for the oni.\n\nIkuno glared down at the woman in the bed despite her eyes filling with tears. \"Merantha, you foolish child, why didn't you listen to me?\" she said, handing the books to Kal and kneeling next to the bed.\n\nKal knew there was a connection between his mother and Ikuno but hearing the oni call his mother by her full name still came as a surprise. Looking down he saw the missing volumes to the set of books he had used to learn to read growing up. \"No more secrets, please,\" he said running his hand over the cover of the topmost book.\n\n\"No, I suppose there isn't enough time left for secrets,\" said Kal's mother. Kal winced at the implication. \"Sorry dear, but we know it's true. You answered your own question, Ikuno. I was foolish, and I was a child. Worse yet I was a child who was madly in love and few things can make a woman more foolish. Speaking of which, you look beautiful Ikuno, you wear my son's love well. This blue suits you so much better than that greenish color I remember.\"\n\n\"You did good, Mera. Your son has turned into an amazing man and I think it's time he knows the whole story.\"\n\nKal's mother nodded and laid her head back, collecting her thoughts before she began to speak. \"I've told you the story of how your father and I met and eventually got married. What I didn't tell you was that I was never supposed to happen, near as anyone could tell my mother was barren. Then, by chance, I came along, and I was your Gran and Gramps's only child. Your father was an only child as well but that was because something went wrong when his mother was giving birth to him, she was never able to bear children after that.\n\nAfter four years of trying to get pregnant, I was desperate, afraid that I had taken after my mother and would only be able to give your father an heir out of luck. I had heard whispers from people in a town to the east, your hometown Perra, of a witch who lived out somewhere in the woods.\"\n\nIkuno shook her head with a slight smile, \"Around that time, I had come across a bandit raid on some travelers just to the north of the town. Instead of showing myself I used magic to take out the bandits from the forest edge. Apparently, someone saw me as I was trying to sneak away.\"\n\nKal's mother nodded, \"Being as desperate as I was, I went looking for this witch. It took me some time, and I think your father was starting to worry I had found another man, but I finally stumbled across a cave that was mostly hidden by trees. Without really thinking about what might be inside I stumbled my way through the darkness until I started seeing light from inside. Seeing an angry looking ogre staring back at me gave me an awful fright but as I looked around I saw that she was far more civilized than what I had heard about ogres. Then I saw all of the books in the back and I knew I was in the right place.\"\n\n\"I was reading when she tripped my wards,\" grumbled Ikuno, \"forgot to turn the damn lamp off.\"\n\n\"I begged and begged and begged for a spell that would let me have a child and for the longest time I didn't think she would do it.\"\n\nIkuno's hand came down to her belly, \"I knew that pain from a long time ago. Thinking I could help save this young girl from something similar, I swore your mother to secrecy and looked up the fertility spell. It isn't even a difficult spell, it just forces the woman's body into her fertile time. I had her stand in the middle of the room and cast the spell. Nothing happened, the spell fizzled. It didn't have anything to work with inside your mother's body and just failed.\"\n\nTears ran own Merantha's cheeks at the memory, \"My worst nightmare came true, I was barren. I cursed my mother, cursed the gods and goddesses, I even had a few choice words for Ikuno that I regret to this day. I cried myself to sleep on her floor and woke up the next morning in her bed. Ikuno was in the back of the cave with dozens of books laid out over the table, looking exhausted.\"\n\n\"I knew there was a potion that could allow a barren woman to have a child,\" continued Ikuno, \"I knew some of the requirements and that I could help out in a way no other magic-user could.\"\n\n\"How do you mean?\" asked Kal.\n\n\"Potions like this are a trade-off, you can't get something for nothing. In order for the potion to work both parents have to sacrifice half of their lifeforce to make the child. Sometimes the parents regenerate their lifeforce, sometimes they fade away,\" Ikuno shot a glare at Kal's mother. \"Since my lifeforce replenishes so quickly I thought I could make it safer for your mother and father by adding some of my own into the mix.\"\n\n\"Hold on,\" said Perra, \"Does this mean that in a way you are Kal's mother?\"\n\nIkuno chuckled, \"No, he is most definitely the product of his mother and father. However, my contribution is likely the reason he can absorb magic energy from the world around him.\" She turned back to Kal, \"I was going to have to hunt for some of the ingredients, so I told your mother to come back in two months.\"\n\n\"Those were the two most nerve-wracking months of my life. Hope that she could fix me and fear that she wouldn't be able to were constantly on my mind. Your father admitted later that he thought I was going crazy during that time, if I'd had to wait much longer he may have been right.\"\n\n\"Then what about these? How did you end up with them, Ikuno?\" asked Kal, holding up the books.\n\n\"Those were my price for the potion, I told your mother to bring back her three most treasured possessions. To be honest, I wasn't sure what she might bring. Coming from a peasant girl and farmer, books were probably the last things I expected.\" Ikuno turned back to Kal's mother, \"I will say, you bringing me books as your most precious belonging made me feel like I wasn't throwing away my time doing that for you.\"",
        "\"After two months I showed back up at the cave with the books, this time she met me out front and guided me into her home. Ikuno took my books and gave me the potion...\"\n\n\"With some very specific instructions, I might add,\" said Ikuno sounding annoyed.\n\n\"Yes, with some very specific instructions. That was the last time I saw Ikuno until today. I ran home and had to wait a couple more days until the middle of my cycle. That time it was a success and a few months later you were born.\"\n\n\"Merantha,\" growled Ikuno, \"tell him the whole truth.\"\n\nKal's mother sighed, \"Ikuno told me that both your father and I would need to be holding the bottle as I drank the potion. That way it would take some lifeforce from both of us to make me fertile, I didn't know about Ikuno's lifeforce being part of it until tonight.\" She took a shuddering breath, \"I couldn't tell him. After thinking I was sleeping around on him then thinking that I was going completely crazy, I couldn't bring myself to tell him that I was damaged and the only way we could have a child was through magic. That night I took the potion all by myself and tripped your father into bed.\"\n\n\"I had given up a third of my lifeforce when making the potion. This meant that if she had done as I asked they both would have stayed above the halfway mark and not been in any danger of fading away.\"\n\n\"But that would have meant that Mother lost two-thirds of her lifeforce making me. By what you said before, being that low she should have faded,\" said Kal.\n\n\"Should have.\" Ikuno sighed, \"I hate telling you this right now but I didn't just avenge your father and grandparent's deaths when I killed that werewolf, I avenged your mother too.\"\n\n\"Now I'm really confused,\" said Kal with Perra nodding in agreement.\n\n\"Go on, Ikuno,\" Kal's mother urged the oni.\n\n\"When Kal was telling me about your history he said that you never took another man, that his father was your soulmate,\" Merantha nodded, \"If that was the case then he would have helped bolster you until your lifeforce could begin to regenerate on its own. Unfortunately, it's a very slow process for humans and...\"\n\n\"My father was killed before mother reached the halfway point,\" said Kal as Ikuno nodded in agreement.\n\n\"I think if the werewolf had come a year, possibly two, later then your mother would have been fine, Kal.\"\n\nKal took his mother's hand in his, \"How on earth did you manage to hang on for so long?\"\n\nIkuno opened her mouth but Kal's mother shook her head, \"I think I have the answer to this one. You, Kal. I held on for so long for you.\"\n\n\"You said yourself Kal that this all started not long after you came of age. Each time she has become noticeably weaker has been when you did something showing your independence,\" explained Ikuno. Kal hated to admit it, but she was right, he just hadn't been able to see the connection.\n\n\"I've watched my son become a fine young man, a man that his father would be ever so proud of,\" she said smiling up at him and squeezing his hand. \"Help me up, Kal,\" his mother asked. She left a hand on his shoulder and gestured to Perra with the other. \"Perra, I'm truly amazed at the woman you have become, so different from the frightened child who first arrived here,\" she said, raising a shaky hand to the girl's cheek before drawing her in. Kal's mother looked straight forward, \"You too Ikuno.\" The oni gingerly leaned forward and wrapped her arms around the woman. Merantha pulled in Kal and Perra on either side until they both reached around the oni's and his mother's back and clasped hands. Kal gritted his teeth in an attempt to control his emotions while tears flowed freely down Ikuno and Perra's cheeks.\n\n\"Twenty years ago, you gave me a wonderful baby boy who I've loved and cared for and protected as best I could. Today, I give him back to you.\"\n\nKal's mother let out a contented sigh and sagged into Ikuno's shoulder, her arms slipping from around Kal and Perra's necks and falling to the bed.\n\nKal choked back a sob as he waited for his mother to take another breath.\n\nShe never did."
    ],
    "authorname": "BluDraygn",
    "tags": [
        "harem",
        "magic",
        "monster girl",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-runesmith-chronicles-ch-23"
}