{
    "title": "The Scholarship Ch. 03",
    "pages": [
        "Author's Note: I believe you'll find this story enjoyable on its own. But you'll enjoy it more if you read the two preceding chapters first.\n\n*\n\nI slept at my friend Jessica's that night, lying there in the dark living room of her apartment, tossing and turning on the most uncomfortable futon in existence. But it wasn't the futon that was keeping me awake. It was all the thoughts and feelings that had been stirring inside me ever since this afternoon, when my roommate, Marni, burst into our dorm room and caught me masturbating.\n\nNow, trying to get some sleep, I was this great mass of conflicting emotions. It wasn't so much embarrassment that she had caught me pleasuring myself. We had been doing that \"together\" for several months, although neither of us acknowledged what we were doing as we lay in the dark almost nightly and got ourselves off.\n\nWe never talked about it, but we could each hear the sounds of the other's pleasure\u2014the rustling of the sheets, the soft moans, even the squishy sounds of fingers slipping in and out of our wet pussies. We had even gotten so \"in sync\" that our orgasms often came almost simultaneously. So getting \"caught\" masturbating by Marni that afternoon couldn't be why I was too uncomfortable to go home and face her. \n\nAnd it wasn't even because I had \"borrowed\" the two headed dildo from her panty drawer. As free as Marni is sexually, she wouldn't have been embarrassed for me to find out that she owned that magnificent black toy. She probably would have demonstrated it for me if I'd asked, even though she'd always been respectful of my sexual inexperience. \n\nMarni never acted in a way that would make me uncomfortable, although she didn't hesitate to let me see her naked. Nearly every morning after her shower, as she decided what to wear, she would bend and lean this way and that as she made selections from her closet and dresser. Not that I minded in the least. In fact, I rather enjoyed casting lingering and admiring glances over Marni's wonderful body.\n\nAnd, as far as I knew, Marni didn't even know I had borrowed her toy that afternoon. I had been able to throw it back into her drawer just before she came charging in. So, while it was embarrassing, the incident shouldn't have made me so uncomfortable that I felt I had to sleep somewhere else.\n\nAs I lay there tossing and turning in Jessica's living room, I decided to be totally honest with myself, to confront what was really bothering me. And what I saw scared me to death. I was attracted to Marni. In fact, it wouldn't be an exaggeration to say I was lusting after her.\n\nI thought back to how I felt that afternoon as I lay there on my bed, legs spread wide apart, as I thrust that big black cock into my pussy time after time. I wanted Marni to be on the other end of that two headed dildo!\n\nI remembered how that slick, slithering dong slipped between my eager lips, and in my mind's eye, there was Marni, .... Marni, with her firm body, sweating and straining between my legs.\n\nI wanted to see that beautiful pussy of hers open up and swallow the other end with her puffy wet lips. I wanted to see her move closer to me with each thrust of the big toy until our pussies were only inches apart. I wanted to watch the nectar ooze from our cunts and coat the shaft of the big cock until it was impossible to tell where Marni's wetness ended and mine began.\n\nI wanted Marni to shove that cock into me, thrusting it in and out with the dong held in the hard grip of her cunt, ... fucking me while the dong fucked her, ... controlling my body by the movement of her hips. \n\nI wanted to feel her warm breath in my mouth as our faces pressed close together and we panted in our desire for each other. And finally, and above all, I wanted to feel our labia caress one another and our clits press hard together in that most intimate of kisses.\n\nAnd I wanted to stay like that forever, our bodies rocking slowly and gently back and forth as our breasts pressed against one another, nipples hard and sensitive. We'd move only just enough to keep ourselves on the brink of orgasm, holding ever so still each time one of us felt those little contractions beginning deep in her belly.\n\nOnce the feeling subsided, we'd begin to rock gently once more\u2014rubbing, pressing, caressing, kissing\u2014until we were so close to our climax that even the slightest movement would shove us both over the cliff. We'd even hold our breath, knowing that just the act of exhaling would be more that we could withstand.\n\nAnd finally, Marni would exhale, blowing her warm breath into my open mouth, and it would hit us. Wave after wave of crashing, pulsing sensations would claim our bodies, our minds. I'd clutch her hips and pull her and that giant cock tight to me as my body celebrated this glorious release. Sweat would glisten on our bodies from the passion, the exertion of our mutual pleasure. Our cunts would rebel against the giant cock, while our contractions tried to force it deeper.\n\nHer teeth would clench with an intense hard look, as if she wanted to dominate me. That's what scared me--the thought that Marni already held me captive.\n\nWhen our throbbing finally began to subside, we would collapse, weak and spent, our pussies and our eyes still locked together. And we'd lie there in each other's arms, safe, warm and satisfied.\n\nIt was that desire for Marni that I couldn't face back in our dorm room and why I was in Jessica's apartment instead. \n\nAll my life I'd been a \"good girl,\" a slave to convention. Even my sex life had been very ordinary up to this point (if you don't count my encounter with Ms. Miranda Steele). I'd slept with only two boys. And, of course, no girls! Where I came from, calling someone a \"lesbian\" was the most cutting of put-downs. I'd never be one of those. Or so I thought.\n\nBut my attraction to Marni, which I had to admit had been slowly developing all semester, was forcing me to confront some of my most fundamental beliefs. And it was uncomfortable. I thought it would just be easier to stay away from her for awhile and try to ignore it.\n\nI realized, though, that I couldn't keep running away from my feelings. I would have to confront them\u2014not necessarily by confessing to Marni how I felt about her\u2014but at least getting my life back to normal and seeing where things went from there. I decided to return to my dorm room\u2014and to Marni\u2014the next day and see what developed.\n\nAll of a sudden, the futon got a lot more comfortable, and I drifted off to a dreamless sleep. xxxxxxxxxxxxxxxxxxx\n\nJessica woke me next morning as she was clattering around in the kitchen, fixing herself a bite to eat before class. I squinted into the light and tried to focus both my eyes and my mind.\n\n\"Hey sleepyhead,\" she called. \"It's about time you rolled out.\n\n\"I've made some coffee, and there's a bagel left over from yesterday. Help yourself.\" And with that Jessica was out the door.\n\nI stumbled around a little as I disengaged myself from the futon. It was my hope never to spend another night with that steely monster, which was covered only by the thinnest of cushions. My restless night had left me drained, and I could tell that my emotions were right on the surface, as a result of my exhaustion and the events of yesterday.\n\nBut I was thinking clearly enough to realize that I needed to get to class by 9:30, and it was already a little after eight. My studies still came first, and I was determined not to let my grades fall off, even in my senior year, because I needed a good job when I graduated.\n\nSo I threw on my clothes from the night before and raced over to the dorm, not really knowing whether I hoped to run into Marni or hoped to avoid her. I decided that we wouldn't have time to talk this morning, anyway, so I opted for avoidance.\n\nAnd that's the way it worked out, as I remembered Marni had an early class on Mondays, Wednesdays and Fridays, just about the time I unlocked the door and dashed into our empty room.\n\nI quickly threw off my clothes, slipped on a robe and headed down the hall to the communal bathroom we shared with 17 other girls on our end of the tenth-floor. Fortunately, there were individual shower stalls with curtains to provide a modicum of privacy. Though we often had to wait in the peak morning hours for one of the four showers to open up, I was running late enough today that most everyone was already on their way to class. I actually paused a moment and marveled at how quiet the bathroom was for a change. \n\nBefore Marni and I began our late-night masturbation ritual, I occasionally would slip down to the showers in the evening to relieve some of the day's stress before bedtime. But today, I didn't want it, didn't need it, and didn't have time for it. \n\nI know I set a record as I showered, threw on my clothes, slipped my dark curly hair under a baseball cap and dashed out the door to my first class. I may not have looked great, but I was on time.\n\nI had four classes during the day, so I didn't take time to go back to the dorm between them, choosing instead to eat lunch in the student union food court and study in the library during my other dead time. It turned out to be a productive day, but I was exhausted as I trudged back to the dorm after my final class.\n\nI was surprised that the room was quiet and dark when I got back about 4:30 that afternoon. Marni usually beat me home on most days. I flipped on the light and looked around the room. And I saw the envelope lying on my pillow. My name was written on the outside in Marni's distinctive combination of cursive and printing.\n\nMy hands were shaking as I retrieved the envelope and removed the one-page note. And they shook even more as I began to read.\n\n\"Sarah, I noticed this morning that you had obviously gone through my dresser. I am not shocked at all that you would do it, but that it took you so long. To be honest, I went through some of your things soon after we moved in, not necessarily to be nosey, but rather to find out about the stranger that I'd be living with for a year. \"\n\nI could feel the redness rising in my cheeks as I continued to read. \n\n\"Please forgive me, as I will forgive you, for snooping through my things, at least. However, next time you fuck yourself with my dildo, please have the courtesy to clean and dry it so my lingerie won't be damp, and smell like sex.\"\n\nIt was, of course, signed by Marni. And I remember thinking how incongruous it was for her to dot the \"i\" at the end of her name with a little heart in a note like that. I could hardly read the final few lines through the tears that had welled up in my eyes.\n\nSo now, not only had my roommate caught me masturbating, she now thinks I'm a pig for not cleaning up after myself! All I needed now was a story about this incident in the campus newspaper and my humiliation would be complete.\n\nIt looked as if Jessica's futon and I had a date again tonight, and I dashed out of the room, praying that I wouldn't run into Marni on my way. I took the ten flights of stairs, rather than the elevator, to improve my chances of avoiding her. xxxxxxxxxxxxxxxxxx\n\n\"I'm sorry, Sarah,\" Jessica told me when I called her on my cell. \"Bobby's in town for a few days and you know you two don't get along.\"\n\n\"I like Bobby just fine,\" I lied, desperate for a place to sleep, other than my dorm room.\n\n\"Well, I'm sorry, but he doesn't like you. He thinks you're a tight-assed bitch.\" She laughed about it as if she was kidding, but I knew that's what her creepy boyfriend really thought of me.\n\n\"Well, fuck Bobby! And fuck you, too,\" I screamed as I hung up on my former friend.\n\n\"I'm not a tight-assed bitch,\" I thought to myself. \"Oh no, I'm a wanton masturbator and a sloppy one at that.\"\n\nIt was after midnight when I finally slunk back to the dorm, praying that Marni would be asleep. Thankfully, she was, and I quietly slipped out of my clothes, climbed into bed and pulled the covers over my head.\n\nI kept my head covered and pretended to sleep as Marni got ready for class the next morning. When she was gone, I dragged myself out of bed and got ready, too. It was hard to even get up in my present emotional state, but I was determined to keep going.  xxxxxxxxxxxxxxxxxx\n\nFor the next several weeks, Marni and continued this little dance of avoidance. She'd rise early and leave. I'd come home late. It's amazing how you can totally avoid someone and still live with them in a 16x20-foot room.\n\nAnd there was certainly no masturbating going on at night. The only sounds you could hear in the darkness from time to time were muffled sobs--coming from both sides of the room.\n\nOf course, I spent my days away from the room, going to class, studying, and wondering when I would hear from Miranda Steele about the upcoming \"interview\" to see if she would renew my scholarship. I had a strange sense of anticipation about that interview, knowing that Miranda would do her best to humiliate me again. And knowing that in some sick, perverted way, I would be turned on by it.\n\nGod, I'd turned into a masturbating lesbian masochist!\n\nIn preparation for the upcoming interview, I'd been spending a lot of time at the university's new fitness center. I knew that one way or another, Miranda would get me out of my clothes, and I thought I might as well look my best when she saw me. I had to be careful and not think about the possibilities in too much detail, as I would find myself getting extremely aroused.\n\nAnd with Marni and me no longer enjoying our late-night masturbation ritual, I had no way of relieving the tension. My workouts helped, and I worked even harder this particular day to drive the thoughts of Miranda and her kinky sexual games out of my mind.\n\nThe workout room of the rec center had almost a surreal quality about it. There were no windows to give any hint of the time, and the bright fluorescent lights made it always seem like the middle of the day\u2014even though I always worked out late at night. Full length mirrors around three walls provided ample opportunity for us to measure our progress (or lack thereof) toward our ideal weight, shape, or whatever it was all of us were after.\n\nAn array of machines and contraptions nearly filled the large room, offering everything from weight and strength training to aerobic cycling. The floor was covered by blue industrial carpeting and had a bit of a \"give\" to it to put less stress on the knees. I had developed my own routine these past few weeks, knowing which areas of my body I wanted to improve in advance of my \"interview\" with Miranda.\n\nFirst I took on the stair-climbing machine, which made my legs and hips burn, but promised to make my already tight little butt even harder. My legs were shaking and my feet felt like lead as I finally finished my reps.\n\nNext, I moved to the incline board and started my crunches, putting a weight behind my head to make the exercise a little more difficult. I loved the way my stomach muscles tightened with each crunch, and I especially loved the new flatness I was noticing in my belly.\n\nI used the weight machine to work on my pecs, wondering how long my 34-C breasts would be firm enough to let me get away with not wearing a bra from time to time. It was late and the workout room was almost deserted, and I ran my hands over both breasts, enjoying their firmness and noticing that my nipples were slightly erect.\n\nBy the time I finished 200 reps on the jump rope, my legs were wobbly again and my leotard was drenched with sweat. And there was a dampness in the crotch area that might have been from something else. I always felt sexy and aroused after a good workout.\n\nI picked up my towel and water bottle and headed for the dressing room, where I had left my clothes in one of the lockers near the showers. Since I'd been avoiding the dorm as much as possible, I'd made it a habit of showering here at the rec center before going home late after Marni had already retired.\n\nIt was already 11:30, and the building closed at midnight. So there were few people in the workout rooms and no one in the women's locker room when I entered.\n\nAs I peeled off my wet leotard, I glanced in the mirror on the wall opposite my locker. I liked what I saw. The exercise was paying off, as my body had hardened noticeably over the past month, and at the age of 21, I was probably near the peak of my physical beauty.\n\nI loved the way my smooth pale skin contrasted with my dark brown hair and eyes. I ran my hands along both cheeks, caressing them softly, before moving my fingers to my full pink lips and tracing their outline.\n\nJust those brief touches on my face caused my nipples to harden noticeably. They were full and erect, the pinkness of the nipples and areola standing out from my two curvy white globes. The instant response of my nipples reminded me how long it had been since Marni and I had climaxed together and how much I missed it. I knew, without even touching, that the dampness between my thighs was not only from the exercise. \n\nI kept my dark brown bush well trimmed in a neat \"v\" shape, but even with that, I felt quite hairy compared with Marni's cute \"landing strip\" that she never seemed to mind showing off around the room. I could see little droplets that had collected on my mound and along my lips from both my exertion and my arousal. And I knew I'd better hit the shower before I looked any further.\n\nFortunately, the showers in the rec center were also divided into individual stalls, each with an opaque curtain covering the opening. Just inside the curtain was a tile bench where you could set your soap, shampoo and any other necessities. I decided to use the shower on the far end, in order to have as much privacy as possible in a public locker room.\n\nAs I closed the curtain behind me, I reached in and turned the shower to the hottest setting. I wanted to fill the area with steam, as I like that feeling of being enveloped in a mist. Everything just feels more intimate. \n\nI slipped out of the robe that I had worn to the shower and stood there just feeling the hot mist on my body. It wasn't long before little beads of moisture were all over me, especially my breasts. I caressed them a little before I even got into the shower.\n\nOf course, my pussy was already wet from the time I'd spent in front of the mirror. And the fact that I'd been touching myself so intimately in an almost-public place gave me that little extra sensation of naughtiness and risk. \n\nI've found that when my body feels an urgent need for release, as it did this night, that I rarely make a conscious decision to masturbate. Perhaps I don't want to take responsibility for choosing to do something that most of us have been discouraged from. However, if I just let my mind drift for awhile, allowing that tingling deep in my belly to take me over, my body will make the decision for me.\n\nAnd somewhere between when I was looking at myself in the mirror and when I pulled off my robe in the shower stall, my body had decided. It was demanding an orgasm, and I intended to comply.\n\nI glanced down at the bench where I had laid out my things and saw my hair brush. I hadn't thought about it before, but it was really perfect for what my body was needing. The bristles were black and stiff and the pink handle was made out of a hard, smooth plastic. The handle was as big around as two of my fingers put together, and about twice as long.\n\nIt was just perfect in another respect. So the handle would fit comfortably in the hand, it was sort of curved in the middle, making the end turn up just a little. That makes it easy to grasp when you're brushing your hair. But when held by the bristles and used for what I (no, my body) was planning, it gave the handle that perfect little curve on the end. \n\nI knew instinctively that the handle would reach right up like two curved fingers to caress my g-spot.",
        "So, with the brush in hand, my body wet with steam and perspiration, and my pussy wet with excitement and arousal, I stepped under the shower. The hot mist played over my breasts and body as I stood there just taking it all in, feeling the wonderful sensations. I ran both hands over my breasts, stopping at the bottom and lifting each one upward so that the spray fell directly onto my very hard and erect nipples. The sensation was truly wonderful, making that tingle deep in my belly spread downward to my pussy and upward to my breasts. My body was on alert. Something very erotic was about to happen.\n\nI took my bath gel and squirted a generous amount of the cool liquid into the palm of my hand. I don't understand why this soap always feels cool to the touch, even when everything else in the bathroom is hot and steamy, but it does. Rather than rubbing my palms together first, I rubbed the gel directly onto my breasts while it still felt a little cool. The contrast between the cool gel, my warm, wet globes, and the hot water was delicious. The purple liquid made the whole shower smell of lavender.\n\nI massaged the gel into my breasts, my shoulders, my belly, taking my time. I wanted to savor the sensations. With the now-warm soap clinging to my breasts and abdomen, I squirted more into my palm, and this time rubbed my hands together before bending down and applying the soapy liquid to my feet and legs. I moved my hands slowly upward, caressing my legs sensuously, and paying special attention to my inner thighs. I got a little more gel in my hands and applied more to my thighs, rubbing up and down along the insides, and finally allowing my hands to go to my mound.\n\nI rubbed the soap generously into the coarse, dark hair, making it look almost white from the suds clinging to it. As I massaged it in, I took both hands and pressed my labia together, running my hands along that crease on either side, where my legs meet my torso.\n\nAll the while, the hot shower was raining down on me, pelting me with its fine spray on my back. Finally, I turned around and let the shower wash the suds from my breasts, belly and mound. My hands lingered at each sensitive spot, as the white bubbles trickled down my legs and into the drain.\n\nWith the soap gone, I could feel how wet I had become. I ran one finger along the length of my slit and marveled at my arousal. I slipped one finger inside and it entered me with hardly any resistance. I left that one finger there and brought my other hand to my pussy, lovingly caressing my hood, then using two fingers to make little circles around my emerging clit.\n\nA low moan of pleasure escaped me before I remembered where I was.\n\nThe whole collection of sensations just felt so good. The hot spray of the shower. The steamy mist that enveloped me. The scent of lavender, And, of course, the feel of my finger now moving in and out of my tight tunnel while my other hand stroked my clit. My knees were slightly bent by now so I could thrust my hips forward in a lewd fucking motion as I rode my finger.\n\nI reached over to the bench and took the brush in my hand. Ever since using Marni's dildo, I had longed to be filled like that again, and I hoped the brush handle would help recreate that wonderful sensation. My hand trembled just a little as I moved the handle slowly toward my wet opening. I turned it so the curve was pointing in the right direction and slid it slowly inside.\n\n\"Mmmmmmmm.\" Another involuntary cry of pleasure. This time I didn't even consider whether I was alone. My body had taken me over completely. \n\nI held my breath, literally, as the handle slid inside, again with little resistance. I was so incredibly wet by now. And that little curve on the end slid right up and pressed against my magic spot, as if it was some special tool that had been designed just for that. \n\nI leaned against the cool wall. The bristles of the bush pressed against my pussy lips and their sharp tips scratching against my thighs. I pressed it deep, my hand gripping the bristles so the entire the handle was available to fill me. I closed my eyes and breathed the heavy-laden steamy air and concentrated on the sensation as I stirred the soft walls of my vagina. Around and around I moved the handle, always returning to linger and press hard against my wonderful little bundle of nerves there near the front of my drenched tunnel. My toes touched the other wall and curled against it as I spread my legs wider and both hands gripped the bristling dildo as I fucked myself.\n\nSlowly, savoring the pleasure, I drew one hand along the center line of my stomach, up over my mound, pausing to fondle the wet curls, teasing over my navel. The hair of my head drooped over my eyes with the steam. My hand fondled the taut muscles of my abdomen, caressing the hard-earned neatness of my compact tummy. Finally, my hand made generous love to my breasts, rolling first one and then the other, then grasping, grasping them together, trying to grip both with one hand, pulling my nipples. \n\nWhile below, my eager, neglected cunt swallowed and sucked the handle deep into my body. I glanced out into the locker room past the edge of the curtain, wondering if I was still alone.\n\nBy this time, it didn't matter. My body craved release, and nothing could stop it now. I slid my hand from my breasts, down again to my needing cunt, and grasped my hard clit between my index and middle fingers, sort of squeezing it between them. My little pearl was swollen and very sensitive by now. I massaged it to the rhythm of the brush handle slipping in and out of my tunnel--a little faster with each thrust.\n\nAs my mind gave way to the intense sensations, I closed my eyes and pictured Marni in the shower with me, her hand gripping the brush, which was by now invading me very vigorously. In my mind, I could see her naked with me, the shower spray pelting her breasts, too, and cascading down over her belly and mound and leaving little droplets in her pubic hair. I saw the pure lust in her face, eyes half-closed and lips slightly parted as she thrust the slick pink handle in and out of me.\n\nIt was clear that she was extremely aroused, too, as she plunged her fingers into her own pussy as her other hand fucked me wantonly with the brush. My fingers were now making faster and faster circles on my clit, trying to match the speed of her thrusts.\n\nI paused for just a moment to reach up and grab the hand-held shower massage in my right hand and twisted the setting to pulse. The hot spray began to spurt out in rapid, firm bursts--almost at the same rhythm that my imaginary Marni was using to fuck me with the brush handle.\n\nI directed the bursts of water at my clit, as the brush fucked me harder and faster. My knees bent further and I humped the brush and thrust my clit toward the hard stream. \n\nJust before my orgasm burst over me, I saw her! Miranda Steele, sitting on that tile bench, those cold eyes of her locked on my beautiful Marni and me. Almost expressionless, she watched us fuck wantonly, as if we were there entirely for her amusement.\n\nI tried to stop, tried to stop that makeshift dildo from invading me. But I couldn't. I was over the edge now, locked in the embrace of the most wrenching orgasm I'd ever experienced. And Miranda Steele was watching, studying me as I went totally out of control.\n\n\"Ooooohhhhhhh fuuuuck!\" The throbbing, pulsing was so strong, it buckled my knees and I dropped to the wet floor, kneeling on the hard tile as the brush handle continued to fuck me. I released the massager and pressed my hand hard against my clit.\n\nThe sensations were amazing! I could feel the contractions in my vaginal walls, my belly and in my rectum as wave after wave swept over me. And as they began to subside a little, to my shock and surprise, I felt a hot yellow stream escape me, washing over my hand and the brush, before it disappeared into the drain.\n\nAnd, yes, Miranda Steele watched that, too.\n\nI was truly overcome and totally limp as I knelt there in the shower and tried to find the strength to stand. I was also a little scared by the strength of my orgasm. Only one other time had I cum hard enough to cause me to wet myself. Since then, I had always lived in fear that it would happen again, but this time with a partner. I didn't think I could stand the embarrassment of humiliating myself that way in front of someone else.\n\nBut, fortunately (or unfortunately, depending on how you view it), I'd never had such an orgasm with anyone else present. But the worry of it always made me hold back just a little during the few times I'd actually had sex.\n\nI opened my heavy eyelids and looked around. My beautiful Marni was gone. And so was Miranda Steele. Of course, they hadn't really been there in the first place, but they both seemed quite real to me during the height of my ecstasy. \n\nAnd, God help me, I wished that they had been there. Both Marni and Miranda. Especially Miranda!\n\nWhen I finally felt as if my legs could support my 115 pounds again, I stood up, turned off the shower and began to dry myself. My breasts were still tender from my state of arousal, and my labia were puffy and swollen from the workout I'd given myself down there. But how I needed the release after depriving myself for so long!\n\nI dressed and made my way across the nearly-deserted campus to my dorm, It was well after midnight, and I knew that Marni would be asleep by now. I wondered if she used my time away from the room to pleasure herself with that giant black dildo. The very thought of it made me tingle a little all over.\n\nAs I passed through the dorm lobby, I decided to stop and check my mail. It was then I saw the envelope. It lay innocently enough there in my mailbox. The envelope was made of a cool grey linen paper, with the letters \"MS\" written in bold gothic script in the upper left corner. My hands trembled as I tore it open.\n\nThe stationery matched the envelope and also had the \"MS\" insignia embossed at the top. The letter was neatly typed and was quite businesslike.\n\n\"Dear Ms. Robbins,\" the letter began. \"It is time for your interview to determine whether your scholarship will be renewed for the second semester.\"\n\n\"Yeah, right,\" I thought to myself. \"I bet it'll be some interview.\"\n\nThe letter continued, \"Please report to the private aviation hanger at Midway Airport at 4:00 p.m. Friday, November 18. You will be flown to meet Ms. Steele for your interview.\n\n\"Ms. Steele has instructed me to advise you not to bring any luggage with you\u2014only your purse. Any necessary clothing or personal care items will be provided upon your arrival.\"\n\nIt was signed, \"Rachel Green, personal assistant to Miranda Steele.\"\n\nWell, the other shoe had finally dropped. The warm glow I was feeling after my wonderful orgasm in the shower had suddenly turned into a cold dread (mixed, regrettably, with a perverse sense of arousal). It was time once again to find out to what depths Miranda Steele would take me in return for my scholarship.\n\nIt was also time to find out to what depths I would willingly go. "
    ],
    "authorname": "pixie2002",
    "tags": [
        "dildo",
        "college",
        "coed",
        "watching",
        "humiliate",
        "voyeur",
        "roommate",
        "lesbian coed"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-scholarship-ch-03"
}