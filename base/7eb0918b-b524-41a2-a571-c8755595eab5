{
    "title": "What The Cat Dragged In Ch. 04",
    "pages": [
        "A/N: A great big Thank You! to those of you who took time to comment, both in public and in private. I'm glad to know the story is being enjoyed. :)\n\nAnd now, what you've all been waiting for.... psyche b\n\n4. Other Firsts\n\nKelly's knees went weak as soon as she felt him break the skin on the inside edge of her lip. How many times had someone made her bleed? She'd lost count. This was the first time she liked it. She added that to the knot of confusing and conflicting emotions that was growing in her chest. His tongue dipped into her mouth, just long enough to tantalize her.\n\n\"Mine.\" His voice and the implications of the word sent shivers down her spine.\n\nHis tongue entered her mouth again, as if proving ownership of this part of her body anyway. She stroked it lightly with hers, feeling its rougher texture and drawing something between a growl and a purr from deep in his chest. She started to tremble. He released her hair, pulled the blanket from her shoulders and picked her up faster than Kelly could respond. She wrapped her legs around his waist. As soon as she did she could feel how hard he was, how large he felt against her. Fear started to overwhelm arousal and confusion.\n\nHe moved quickly through the house, his claws slicing through the shirt she was wearing. They grazed her skin just hard enough to trail stinging fire over her shoulders and back. She shifted first to the left, then to the right. He chuckled darkly. \n\n\"Think you're getting away from me, frail?\" His voice was a low purr next to her ear. He drew one claw down the middle of her back from the nape of her neck to the waistband of her panties. Her whole body contracted, her legs tightened around him. Kelly buried her face against the side of his neck. She tried to bite back the whimpers and panic that threatened to erupt in tears and struggles, despite the arousal that was making her whole body ache for him in a way she hadn't experienced before.\n\n\"I can't-\" \n\n\"Can't what, frail? Can't help gettin' wet for me?\" \n\nShe heard a door open and a dim light came on. He tore through one side of her panties. The pain of his claws raking over her skin served to focus her mind again. He set her down on his bed and she scampered back, holding the intact shirt front over her body. He advanced on her slowly on his hands and knees, his wide shoulders rolling like a predator's.\n\nHe was grinning, his fangs clearly visible. Kelly found herself almost out of space on the bed. Her head was spinning. She was fighting tears, fighting panic and fighting her own desire to have his hands and mouth on her everywhere. It was all too much to process at once.\n\n*~*~*~*~*~*\n\nShit! This wasn't going how he'd planned. He'd waited long enough to bring her to his bed because he'd never fucked a frail in his own bed before. They'd all been disposable before this. Just outlets for his lust for sex or blood or both. She was different. She wasn't just a victim, she was his. Only now he could see her retreating into herself and he had no fucking idea how to stop it.\n\nHe couldn't reassure her. What the fuck would he say? 'I'm not gonna gut you, like I have a thousand others.' 'I promise not to shatter any bones or rupture any internal organs.' 'You'll wake up in the morning.' Real fucking reassuring.\n\nHe couldn't even promise not to hurt her because every time he'd caught her skin and sliced through it, he'd smelled the spike in her arousal. The smell of her blood and how she moved against him had made him so fucking hard it was painful. He wanted her to be as willing as she smelled and with her hiding inside herself that wasn't going to happen.\n\nHe pulled his shirt off, then grasped her ankle carefully, like he did when she was dreaming. A tremor went through her body. When she started to calm, he moved his hand up her leg as he moved around behind her. Her back was covered in fine, crisscrossing red lines. Half would be gone by tomorrow. Some would take a day. Several by her shoulders were deeper than he intended and blood had started to trickle down her back. He started licking the wounds gently.\n\nHe expected her to cringe or beg him to stop. Instead she rested hesitantly against him. He could smell her fear dissipating. When had that ever happened before? He put his arm in front of her, giving her something to lean into. \n\n\"I'm sorry.\" Her voice was so soft, if his hearing hadn't been so keen, he would have missed it. As it was, he had no fucking idea what she meant. He grunted a little, hoping she would go on without him having to ask a question. \"I've never done this before and I got really scared when....I got really scared and confused.\"\n\nHe shifted her body so that he could get to the other shoulder. She complied easily. As calm spread through her, her scent sweetened again. Her neck was stretched, presented to him. He nipped softly, drawing fresh blood and then soothing the wound with his lips and tongue. Her arousal wafted to his sensitive nose. He bit into the muscle where her neck joined her shoulder - a little harder this time - because she was just too fucking good to resist. The fear came back, but it was the kind that seasoned her scent with that much more excitement.\n\n\"You like that, don't you frail?\" He tugged at the piece of ruined shirt she was holding over herself. At first, she held on tightly. A low growl made her give it up. She kept her arms over her breasts and her legs drawn up and crossed. One large hand made its way under her arms to cup her breast, then pinch the nipple roughly. That got another little swallowed whimper. \"You answer me when I ask a question.\" \n\n\"Yes.\" She was squirming. He hadn't eased the pressure on her nipple. Her hand was on his wrist, her short fingernails digging in. \"Please, let go.\"\n\nHe started to massage that firm bud of sensitive flesh. She bit back another moan. He knew she liked it from the scent that grew heavier in the air by the minute. \"I'm gonna make you fucking scream for me tonight.\"\n\n*~*~*~*~*~*\n\nKelly had no doubt that he would do just that. The prospect terrified her and electrified her at the same time. She turned and planted a soft kiss on his shoulder, because it was all she could reach. He looked down at her, one razor sharp talon teased her nipple with just enough pressure to make her tremble. His lips feathered lightly over hers before becoming more demanding and possessive. Kelly was almost accustomed to it by now. She turned to face him a little more, her tongue stroking his.\n\nHe grabbed her wrists and pushed her back into the bed. Kelly whimpered against his mouth, but her body arched up to his. Her eyes were closed, her head arched back and turned away, baring her throat, hoping he would give the left side of her neck the same treatment as the right side. He growled and obliged with a gusto that brought tears to her eyes. She struggled against him for a moment, half wanting to get away, half wanting to pull him closer. He held her fast though, then moved down her body. One broad thigh pressed between hers, opening them so his body could settle between them.\n\nIt seemed like he stared at her for an eternity before he started to tease her nipples with the flat of his tongue. Kelly didn't even try to hold back a moan when he started to nip and suck firmly. By the time he moved across the valley between her breasts, Kelly was completely lost in the sensations he was drawing from her body. She could feel a tension beginning to build in her lower tummy. Each gentle lick or rough bite only served to build that tension higher. If he had asked, Kelly had no idea which she liked better. \n\nHe chuckled and moved down lower, placing sucking kisses and firmer nips on her tummy. He licked her navel and gave her a warning look before letting go of her hands. He grasped her legs behind her knees, pushing them back and open, revealing her. Kelly blushed and started to struggle. Talons bit into her thighs, stopping her.\n\nHe chuckled. \"Fightin' when you don't even know what I got planned.\" He moved back and started to place tender, licking kisses down the inside of her left thigh. Kelly moaned and arched. He teased her right thigh, and just the inside of her pouting, open sex. \n\n\"Please.\" The word came out in a sharp whimper. The tension he had built was at an almost painful level.\n\n\"Please what?\" His tongue teased her tense opening.\n\nKelly had no idea what he wanted to hear, and she wasn't focused enough to think about it. She grabbed handfuls of the comforter and arched her back. A sharp whimpering escaping her lips.\n\n\"Maybe this?\" His tongue fluttered over her delicate inner lips.\n\nIt was almost too much to take, she was right on the edge and near tears. \"Please.\" \n\nThe caress of his breath on her moist flesh was almost enough to send her over the edge, and that 'almost' was more painful than all the times he'd broken her skin. Tears filled her eyes. She pulled harder on the comforter. \"Victor!\" It was a desperate sob.\n\nHe growled and captured the nub of her pleasure between his lips, sucking on it carefully, flicking the tip of his tongue over it. The tension that had been building splintered and then shattered. The world could have ended in that moment of release, Kelly wouldn't have noticed. She felt his claws bite into her legs, holding her still, she felt his mouth continuing to drive her deeper into the pleasure that consumed her, and that was all. \n\nEventually, she didn't feel those things either. She had no way of knowing how long she stayed in that soft, gray pleasure haze. The first thing she felt was Victor's weight over her. Slowly, she opened her eyes to see him grinning down at her. \"Told you I'd make you scream for me.\"\n\nKelly blushed and hid her face against his shoulder. He twisted one hand in her hair and forced her to look at him. \n\n\"Mine.\" He purred against her lips. She captured his lower lip between her teeth and traced it with her tongue while her hands explored the planes of muscle she'd been so curious about on his sides and chest. He took control of the kiss, but allowed her hands to explore for a moment longer before he brought them together over her head. \n\nFear rippled through her again. He held both of her wrists in one hand and then moved forward until she felt something hard and impossibly broad brush against her entrance. She whimpered and twisted her hands in his grip. He held on tighter, and pushed forward sharply. Kelly screamed again, this time it was laced with pain and panic. She barely had her breath back when he growled and pushed forward again.\n\nHer cries mingled with his growls for an agonizing slice of forever. Slowly, most of the pain started to subside and the feeling of being consumed by him began to take over. Her body shook with every hard thrust, she felt bruised and torn, but she felt the stirrings of that pressure beginning to build again. She wrapped her legs around his waist, holding him closer. The pressure on her wrists increased, but her pained cry got lost in his roar of release.\n\n*~*~*~*~*~*\n\nCreed watched the little tremors that shook her body from time to time. She was curled up in a tight little ball, her back against his arm. Now that he was done, he didn't know what to do with her. With the disposable ones it was easy. He killed them or left them for dead and went on about his business. It was simple. This time, a million other things that he had never given a shit about before raced through his mind and not a goddamn one of them had to do with his own enjoyment of her. In a way, that was disturbing to him. \n\nHe knew she wasn't a telepath. He'd felt someone fucking around with his thoughts enough times that he would have known right away if she'd been trying something like that. If he'd doubted that, her scent was pure human. Well, not quite so pure anymore. He grinned at that thought. She'd screamed for him, she'd begged, and she'd said his name out loud for the first time since he told her what it was. If anyone had told him that those things would make him feel the same rush of power and dominance he got from rape or murder, he would have laughed. Hell he might still laugh, because the feeling was different. Better in some ways, uncomfortable in others. He wasn't entirely sure that he liked it.\n\nThat wasn't the only thing bothering him though. Her scent was wrong. Everything he'd expected was there; the scent of her orgasm and the salt of her tears. The fading scent of blood and bruises from the bites and scratches. The heavier dose of fresh blood from her pussy and his scent weaving through all of it. He'd expected that sweet scent that surrounded her when she was relaxed, but instead the tang of anxiety was starting to creep in. What the fuck was going on in her head?\n\nHe turned to look at her, then raised his hand to touch her arm, but thought that would probably upset her more. What the fuck did he know about comforting anybody anyway? \n\nHe'd probably comforted Jimmy in the beginning. It was just the two of them and the runt was sick all the goddamn time. Even when he wasn't sick he was always getting hurt somehow. Before the kid's healing factor kicked in it had been up to Victor to keep him alive out in the middle of fuckin' nowhere. He'd buried those memories for so long that he didn't think he could find them again now if he wanted to. Besides, she wasn't Jimmy, and she wasn't sick or weak. Whatever this was, it was different than the dreams she had, too. So what the hell did she need?\n\nAnother tremor went through her, this time he caught the scent of fresh tears. She wasn't letting these fall though. He raised his hand again, unsure where to touch her, finally he settled on her hip. A different kind of tremor went through her. She moved until her back was resting against his chest. He didn't think he'd ever get used to the idea that someone could want to be close to him. \n\nHe gripped her wrist, intending to turn her to face him. The pained squeak stopped him. She pulled her wrist away quickly and hid it against her chest. He grasped her shoulder and turned her to face him, this time she complied without resistance. \n\nHe sat up. \"Lemme see.\" It came out as a rough command.\n\nShe sat up more slowly, arranging herself to cover as much of her body as she could. He could see more of the bruises and bites on her breasts though. Her eyes flickered nervously up to his and then down again. He was about to repeat himself when she held out her bruised and swollen left wrist. The feeling of her bones grinding together came back to him.\n\n\"Move your fingers.\"\n\nShe complied, the twitch in her eyebrows was the only thing that belied the fact that the movement was uncomfortable. \"It's alright, you just surprised me.\"\n\n\"Bullshit.\" He took her hand in his and manipulated her wrist carefully. The way broken bones felt through flesh was more familiar to him than to most doctors. Wrists and ankles were trickier because of their construction, but after so many years, he figured he was about as accurate as an x-ray. Her jaw clenched. He knew that was probably as much of a reaction as he was going to get from her, so he used that tension as a barometer for her pain. \"Not broken.\"\n\nShe smiled a little and turned her hand so that her palm rested on his. She should be pulling away from him. Others had rejected him for less than he'd put her through. For a brief, delicious moment her scent sweetened again. Almost as soon as he noticed the change, it was gone.\n\n\"I should let you get some sleep.\" Her fingers stroked his broad palm softly, exploring the callouses there. \"I need something else to wear though.\"\n\n\"Why? You ain't goin' anywhere.\"\n\n\"But, you didn't seem like you-\"\n\n\"Just shut the fuck up and get under the covers. You already look like you haven't slept in a week.\" He closed his hand around hers carefully, expecting a spike in her fear. There wasn't any, in fact her anxiety started to dissipate. \n\n\"Let me get cleaned up first.\"\n\nHe moved closer and she rested against him. \"Like having my scent on what's mine.\"\n\nThe way she looked up at him, he could tell she didn't know what he meant. She didn't ask either. \"But the blood is mine, I don't want to get blood all over your sheets.\" Even though she looked away, he watched a deep blush spread over her cheeks. He lifted her chin, forcing her to look into his eyes.\n\n\"Ten minutes. If you're not back, I come and get you.\"\n\n*~*~*~*~*~*\n\nKelly had managed to down a couple of the Ibuprofen he'd brought back and get cleaned up in the ten minutes he'd given her. It wasn't the long hot shower she'd wanted, but she'd cleaned away the blood from her skin. She was relieved to find that the bleeding between her legs had stopped too. Just moving hurt. Washing was painful. She hoped he wouldn't be ready for round two for a couple of days at least, but at the same time, the ache to be close to him was more intense than anything physical she'd ever experienced.\n\nBefore leaving the bathroom, she wrapped up in the shredded shirt and walked back into the room. She sat with her back to him and started to tie the remnants of his shirt around herself. He shifted and sliced the shirt down her back. This time, he didn't touch her skin.\n\n\"What-?\"\n\n\"I just fucked you and you wanna get all wrapped up like a goddamn Christmas present.\"\n\nShe blushed and put the ruined shirt next to the bed. \"I'm not used to that part.\"\n\nHe snorted, an arm snaked around her waist, drawing her tight against him. Kelly knew she should have been afraid, or angry or both. She couldn't muster either of those feelings at that moment. His scent surrounded her, his body was warm, and for the first time in a very long time, Kelly felt truly safe. She closed her eyes and relaxed into him.\n\n*~*~*~*~*~*\n\nHer scent sweetened almost as soon as she settled against him. Half of him thought she was fucking nuts for falling asleep with her back to a predator. The other half didn't want to let her go. Ever. That wasn't going to happen though. In a few weeks or a few months, she'd find out she was sleeping next to a rapist and a murderer and she'd be disgusted. She'd hate him, and he'd kill her rather than let her go. The idea of losing her made him ache in a way he couldn't define, and that pissed him off. \n\nShe turned and snuggled against his chest. Her contented little sigh cut through his anger. Whatever happened later, she fit against him, and she was his. \n\n*~*~*~*~*~*\n\nThe first time Kelly woke up, she was alone in the huge bed. She sat up quickly and strained to hear something, anything, to tell her that he was still there. When the door opened, she jumped.\n\n\"What?\" He asked.\n\nKelly hadn't expected that he would walk around naked. By the time she realized she was staring, he'd realized it too. She looked away quickly.\n\n\"Like what you see?\" Even though Kelly was doing her best to hide her face, she could hear the grin in his voice.\n\nShe started to look around for something to put on. \"It's late. I should get breakfast going-\"\n\nHe pushed her back into the bed and settled over her. Kelly bit her lower lip to stifle the whimper that rose in her throat.\n\nHis mouth came down on hers in a possessive, but careful kiss. Kelly let her tongue explore his while her hands moved over his back. \"Scare you frail?\" His voice was a soft purr next to her ear.\n\n\"A little.\" She admitted.\n\nHe wrapped one of her legs around his waist. A little tremor went through her. She felt his low chuckle as much as she heard it. \"Only a little?\" He stroked just the tips of his claws down her other thigh. Goosebumps and electrical jolts of pleasure followed the delicate touch of such dangerous instruments. She moaned and wrapped her other leg around him.\n\nKelly blushed and nuzzled the side of his neck, tentatively stroking the firm muscles with her tongue. He growled softly. \"Maybe more than a little.\"",
        "He nipped her shoulder. Kelly's legs tightened around his waist. If she'd been unsure of his intentions before, pulling him closer dispelled all doubt. \"Can't.\" Her voice was a soft murmur, her fingers traveled down his sides.\n\nHe chuckled. \"You're already wet for me.\" Another claiming kiss, a fang catching her lower lip again. Kelly knew she was going to lose this argument. His hips rocked slowly against her, drawing his broad length against the sensitive nub hidden in her folds. Seconds later she forgot why she was arguing in the first place.\n\n*~*~*~*~*~*\n\nCreed looked down at her. For the past hour she'd been dozing against his chest, a little smile on her lips. He'd wanted to feel her cum while he was inside her. He was familiar with terror, anger, hatred and every possible combination of them conveyed through the contractions of a frail's pussy. Pleasure would be new, but beyond that he wanted to feel her cum for him. It had almost happened too, but she was still in too much pain. The smell of her blood and her pleasure hung in the air, though the blood scent wasn't as intense as the night before. He decided that it might be a good thing he'd be gone for a few days. It would give her time to recover.\n\nNow he just had to figure out what the hell he was going to tell her. 'Off to kill the asshole PI Stan hired, don't wait up' was honest, but that would scare the shit out of her, and he wanted her to be there when he got back. It would save him the trouble of tracking her down and dragging her back. Just leaving her with no explanation would scare her just as much and might send her running.\n\nHe drew patterns over her back with his claws, carefully avoiding the places that were still healing with the light touches. It was easier when they were disposable. He didn't have to say anything. He didn't have to worry about keeping them, and he didn't have to worry about protecting them. He glanced down at her. She trusted him completely. One hand drifted up to her slender neck. He could snap it now and never wake her up. Then he wouldn't have to worry about what to tell her or Embry or anything else. It would be easy.\n\nThe contented little sigh and the half-conscious kiss she pressed over his right nipple derailed the thought completely. He told himself that if he killed her he'd be denying himself all the pleasure he could take from her body. Creed had never been one to deny himself anything.\n\n*~*~*~*~*~*\n\nThe second time Kelly woke up, she was snuggled against Victor's chest. She could hear his heart beating. Her arms tightened around him.\n\n\"Thought you were gonna sleep all goddamn day.\" He twisted a lock of her hair around his finger and tugged, forcing her to look at him.\n\nKelly blushed. \"You tired me out.\"\n\nHe snorted. \"And you made me hungry.\"\n\n\"Let me get a shower and I'll make...\" she glanced at the clock. Her eyebrows rose. \"Lunch. I didn't know it was that late.\" She reached up to disentangle her hair from his hand. He raised an eyebrow and she lowered her hand. \n\n\"First we gotta talk.\" \n\nKelly's heart sank like a stone into the pit of her stomach. \"About what?\"\n\n\"What the fuck are you looking at me like that for? You don't even know what I'm gonna say.\"\n\n\"I can guess.\"\n\n\"Can you?\" The tension on her hair increased and there was a low, dangerous growl in his voice. \"So why don't you tell me.\"\n\n\"That you regret saying I was yours, or you just did it to get me in bed-\"\n\nHe rolled his eyes. \"You say the dumbest goddamn things sometimes.\"\n\n\"The way you said-\"\n\n\"Just shut up before you piss me off.\"\n\nKelly closed her mouth and looked up at him. Safe as she felt with him, the idea of his anger being directed fully at her was absolutely terrifying.\n\n\"I'm leaving later tonight to get that damn PI off your ass. I'll be gone for a couple days.\" He didn't quite meet her eyes as he said it.\n\n\"What-\"\n\n\"And I ain't gonna answer any questions about it so you might as well save your breath.\"\n\nThe prospect of spending so long without him was frightening and almost physically painful. \"Days?\" Her voice was barely above a whisper.\n\nHis hand cradled the back of her head. \"You're gonna do as I tell you and you'll be fine. C'mon, shower and food.\"\n\nShe moved off of him. \"I'll let you shower first.\"\n\nThe corner of his mouth twitched into a little smile. \"There you go saying stupid shit again.\" He avoided her bruised wrists and grasped her elbow instead, pulling her along.\n\n*~*~*~*~*~*\n\nThe rest of the day passed slowly for Kelly. She could see him growing more tense as the day went on too, but when she'd tried to ask about it he hadn't even let her get the sentence out. She didn't try again. Around three, he went into town and came back with a small bag. As on edge as he was, she didn't think it wise to ask what it was. They spent the rest of the day in silence. \n\nAfter dinner he left her to clean up. Kelly was drying the last pan when she heard him come into the kitchen. She turned and saw him standing here dressed all in black, a long black coat making him look every bit as frightening as the villain in a horror movie. She stepped back and the pan clattered to the floor.\n\n\"I know you heard me come in.\" He set a bag down on a chair.\n\n\"Sorry, you just look....really intimidating.\" Kelly put the pot back in the sink again.\n\n\"Good. I need to get going.\" He sat down and pulled her into his lap. Kelly snuggled close. For a minute, he let her, then he wrapped his hand in her hair and turned her to face him. \"I should be back in a couple of days. You're going to stay inside and keep all the doors and windows locked. Anybody knocks, you let 'em keep knocking. Repeat that.\"\n\n\"I understand-\"\n\nHe growled. \"I said repeat it.\"\n\nKelly's heart was pounding at the intensity in his eyes. \"You should be back in a couple of days. I'll stay inside and keep everything locked. If anyone knocks I should ignore them.\"\n\nHe reached into his pocket and pulled out a cell phone. \"The first contact is me. If anything unusual happens and I mean anything you call me. If I'm gone more than two weeks and you can't reach me, call the second contact. Repeat that.\"\n\nKelly was about to protest again, but the way he looked at her told her that would be a bad idea. She repeated back what he'd told her. \"Who is the second contact?\"\n\n\"Nobody you need to worry about.\" He kissed her firmly and then let her rest her head on his shoulder. His voice was softer when he spoke again. \"And you're going to sleep in my bed, because if I come back and your scent's faded in there, I'll make you wish I'd stayed gone.\"\n\nKelly nodded, her face hidden in the crook of his neck."
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "virgin",
        "deflowering",
        "reluctance",
        "victor creed",
        "sabretooth"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-04"
}