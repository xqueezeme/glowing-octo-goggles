{
    "title": "A Christmas Gift",
    "pages": [
        "DB86 Xmas special #2\n\nEdited by Pat.\n\nThis story is a sequel of \"Peace of Mind\" I strongly suggest you to read it first.\n\n***\n\nCHAPTER 1\n\n\"You have a great woman there, Landon. Don't let her get away,\" Landon's mother advised her son for the umpteenth time.\n\nLandon Petersen had gone back to his hometown in Wyoming for a few days to help his mother and sister to move to Middletown with him. He was a soldier who had been diagnosed with PTSD. His army buddy Derek Hayes, and especially his girlfriend, Grace McAllister, had nursed him back to health. His symptoms had improved and his mood had stabilized. He was now seeing his psychiatrist in a special center in Seattle once a month instead of every week, and his meds had been reduced.\n\n\"Grace is an amazing woman, Mom, she has helped in ways you can't imagine. But she is well aware of my situation and she knows that I'll move to the next step of our relationship when I'm ready. It's not easy loving someone with PTSD.\"\n\n\"You're doing much better, Son. You're not the same person you were a year ago.\"\n\n\"I've worked hard with my doctor to get where I am now. Grace, Derek and the whole town helped me a lot too.\"\n\n\"Look, I don't want to be pushy, Landon, but you should give that poor girl a lot more than some vague hope. I know women, trust me.\"\n\n\"Mom, I'm an adult. Grace is an adult. And we'll make our decisions in our own time.\"\n\n\"You're right, of course. You are happier than you've ever been. Your face lightens up when you talk about Grace. Look at you, you're smiling!\"\n\nLandon couldn't help but smile every time his girlfriend was mentioned.\n\n\"You don't need to apologize, Mom. That's what parents do. But you need to understand that two people can be happy just the way they are. I don't want to ruin things.\"\n\n\"Baby, I bet Grace doesn't want to push you but she must be waiting for you to take your relationship to the next level. Do people still say that? How long have you been dating?\"\n\nLandon took a minute to do the math in his head. \"About a year. We had been together almost every day. This is the longest we had been apart since we met.\"\n\n\"Baby, women have our biological clocks ticking, you know? If you really love Grace, there is no reason to wait. Love makes you feel scared and wonderful at the same time. I still remember how it was with your father.\"\n\n\"When I'm with Grace I'm not scared because I know she can take everything I throw at her. She has seen me at my worst and, for some reason, she still loves me.\"\n\n\"Maybe you should plan something special for her as a thank you for all she did for you... A Christmas gift.\"\n\nHis mother's words were like a switch flipped on in Landon's brain. The rest of the day he couldn't stop thinking about where he and Grace stood. He tried to see things from her perspective and he realized that his mother might have a point. He loved Grace, and things between them had been going great. Maybe it was time to move their relationship to the next level.\n\nCHAPTER 2\n\n\"Sis, I've been thinking about what Mom said about Grace and me... And I think she might be right. I still don't trust myself when it comes to relationships so I'm going to take her advice. I want to prepare something special for Grace for Christmas. I need some ideas.\"\n\n\"You came to the right place, big Bro,\" Landon's sister Callie said flexing her hands and making her fingers crack. \"I've read every romance novel written in the last ten years, watched every romantic movie, and sat in the wings of life longingly watching couples that are in love.\"\n\n\"Your moment will come Callie... Look at me. I never thought I would find love again,\" Landon squeezed his sister's hand. \"So, what does the expert suggest?\"\n\nLandon's baby sister opened her laptop and started typing.\n\n\"We need a carriage... and flowers, of course, red roses. You'll be wearing a tuxedo and she'll be wearing a beautiful dress. There must be romantic music playing...\"\n\n\"Sis, I think you are thinking about Pretty Woman. I'm not Richard Gere, I can't afford any of that...\"\n\n\"Let your imagination fly, Bro. We'll have time to tone things down to match your budget. Where were we? Oh yes... the carriage. Then, you'll take her to a fancy restaurant...\"\n\n\"There is only one restaurant in Middletown, The Jammed.\"\n\n\"Not the most romantic name, but I guess that it'll have to do. You had your first date there, right?\"\n\n\"I wouldn't call having a flashback a first date.\"\n\n\"She held your hand...\"\n\n\"It was more like I crushed her hand while I was trying to regain control of my mind...\"\n\n\"Details, details... Then, she looked at you in the eye and said that she cared for you and wanted to help you,\" Callie let out a long sigh. \"Soooo, romantic!\"\n\n\"Trust me, Sis, it was anything but romantic. Try scary instead.\"\n\n\"You're spoiling the mood, Bro. You obviously need my help.\"\n\nLandon rolled his eyes. \"Okay, go on. What's next in our dream date?\"\n\n\"I was thinking you could invite her to a special Christmas dinner, in the same restaurant where you had your first date,\" Callie went on.\n\n\"It wasn't a date!\"\n\n\"Women know best. If you ask Grace she'll tell you it was. What if we write an email to the manager of the restaurant, explaining our idea to him? What was it called, again?\"\n\n\"The Jammed.\"\n\nCallie's fingers finger flew over the keyboard of her laptop.\n\n\"Here it is... The Jammed... It doesn't look bad. It certainly has potential,\" Callie said checking the restaurant's webpage pictures. \"It looks cozy. And... here it is... Contact us...\"\n\nLandon shook his head and let his sister go on. There was no harm in dreaming.\n\nCallie opened the email and started to type. Landon read over his sister's shoulder, changing some words, and adding some details or additional information here and there when needed. He twisted his mouth at some lines, especially the sappy ones, but he let his sister go. She was enjoying herself.\n\nWhen they both were satisfied with the result, Callie cleared her throat and read aloud.\n\nThe Manager\n\nThe Jammed\n\nMiddletown, WA\n\nDear Sir,\n\nMy name is Landon Petersen. I'm sure you remember me. I wrote a short history of Middletown and I was involved in the script of the play for Founder's Day.\n\nI'm also in a steady relationship with Grace McAllister which is the reason for this email.\n\nI am very much in love with this young lady, but I haven't been keen enough to express to her how much she means to me and that I love her so desperately and completely.\n\nI'm a soldier and I've been in treatment for PTSD for a year. All this time, through my struggles Grace has been my rock. She didn't judge me and she didn't treat me differently. She has been my motivation to get better, and she has healed me in every way that I needed it. She brought light to the darkness I was in.\n\nSo I wanted to make a big gesture to show her how much her love and support mean to me and tell her that I want to spend the rest of my life with her.\n\nFor all the reasons expressed above, this evening must be the most marvelous of all possible evenings, for I intend to ask her to be my wife.\n\nI thought about picking her up in a fancy carriage with a dozen roses and taking her to your fine establishment.\n\nAnd that, dear sir, is where you and The Jammed come in.\n\nI would like a perfect table. Because of my condition, I would prefer a quiet one. There should be candlelight, gleaming silver, and snowy linen. There should be a dinner that will be the culmination of the chef's career.\n\nIt would be great to have some live music, maybe a string quartet playing soft, romantic tunes.\n\nThen, at precisely midnight, they could play Grace's favorite song 'A Thousand Years,' by Christina Perri while I propose to her.\n\nI'm now visiting my family but I plan to be back in Middletown by mid December.\n\nI would appreciate it very much if you could confirm this plan and also tell me approximately what the bill will be. I am admittedly not rich, but I have put a little money aside. So please give me your estimate of the cost, and I'll bet it will be plenty! Keep in mind I still have to get a ring.\n\nVery truly yours,\n\nLandon Petersen\n\n\"And send,\" Callie said pressing the key of her laptop with her index finger.\n\n\"Wait! What did you do? The email was supposed to be just for fun,\" Landon protested.\n\n\"Cheer up, Bro! What's the worst that could happen?\"\n\n\"That's not the point. You shouldn't have done that.\"\n\n\"You needed a little push in the right direction.\"\n\n\"And what was that about a proposal?\"\n\n\"You love her, she loves you... Getting married is the natural next step. Why wait when you already have the perfect girl?\n\n\"You're impossible!\"\n\n\"You'll thank me later. Don't say a word to Grace when you Skype with her tonight.\"\n\n\"Of course not, why would I? It's just an impossible dream way out of my reach.\"\n\nCHAPTER 3\n\nRed Harding, co-owner of The Jammed, read the email for the third time, and his smile became bigger with each read.\n\n\"Kat! Tony! Could you come here for a minute?\" he called out.\n\nKat Davies was Red's wife and head waitress at the restaurant. Tony Marino was the other co-owner and chef. He was responsible for putting the restaurant on the state culinary radar.\n\n\"What is the emergency?\" they both asked Red.\n\n\"Read this,\" Red Harding said pointing at the screen.\n\nKat and Tony both stared at the screen in silence for a few minutes.\n\n\"This is the most romantic email I've ever read,\" Kat said wiping the tears from the corner of her eyes. \"To think that I had to organize my own proposal...\"\n\n\"Hey, it wasn't exactly like that,\" Red complained.\n\n\"I helped a lot with it,\" Tony added. \"Red is as romantic as a bull with a headache.\"\n\nTony and Kat laughed.\n\n\"What do you think about the email?\" Red said trying to divert the subject away from him.\n\n\"I think it's a wonderful idea. Grace deserves this and more. She has done a lot for the people of Middletown,\" Kat opined.\n\n\"Landon too. It's funny that he thinks, we might not know who he is,\" Tony added. \"Since the play, he is one of the most famous and beloved people in town. His email certainly inspired me. Let me pull a lovers menu together before answering his email, Red.\"\n\n\"I'll help,\" Kat offered. Tony looked at her with surprise. \"Not with the menu, silly, but with the rest of the stuff. Don't breathe a word about this to anyone unless needed. I don't want the rumor mill to alert Grace and spoil Landon's plans.\"\n\nRed rubbed his chin and said, \"Whatever you do, you should include Marcus Carter. He and Landon became close and I don't want to get on the old man's bad side. We are leasing the restaurant from him.\"\n\n\"Good idea,\" Kat said, kissing her husband's cheek. \"I should let Mary in too. She is my friend and a fellow waitress and we won't be able to keep the secret from her.\"\n\n\"Which means her husband Paul will know too,\" Red said twisting his mouth.\n\n\"You should tell Grace's brother, Steve and his wife, Diana. Ah, and your father too!\" Tony suggested.\n\n\"My father? Why?\"\n\n\"Landon plays poker with him every Thursday,\" Tony remembered his friend. \"You don't want to catch hell from him and his friends. Besides, he could ask around among the farmers for a carriage.\"\n\n\"If the poker crew is in the know, it means Judge Anderson and the mayor will know about it too...and God knows who else,\" Red sighed, counting with his fingers.\n\n\"We should include Derek Hayes. He was Landon's army buddy. Landon saved his life. He won't forgive us if we let him out. Derek has been helping Landon a lot since he came to town,\" Kat added.\n\n\"Which means his wife Bella will know too,\" Red looked frustrated. \"And you wonder why it's impossible to keep a secret in this town.\"\n\n\"All we have to do is make sure that Grace doesn't hear a word about this,\" Kat said.\n\n\"What do I tell Landon about his idea? He won't be able to pay for something like this,\" Red asked.\n\n\"Maybe we should offer him a cheaper option,\" Tony suggested.\n\nRed nodded.\n\n\"I'll try to come up with something he can afford.\"\n\nCHAPTER 4\n\nLandon forgot about the email and tried frantically to think of some other way to show Grace how much he loved her and convince her that she should spend the rest of her life with him.\n\nAll his ideas seemed inadequate compared to the original one.\n\nSome days later, Callie let out a whoop of excitement. \"They answered our email, Landon! They answered our email!\"\n\nLandon sat at his sister's side, took a deep breath and asked, \"Did they say we are crazy?\" his heart was pounding hard.\n\n\"Shut up, you Grinch! I'll read their answer to you.\"\n\nDear Mr. Petersen,\n\nYour charming email has been receiving some attention from our staff here You stole the hearts of all who read it.\n\nOn the day of your choice, at exactly twenty minutes to 6pm, a carriage will pick you up from your cabin for an enjoyable horse-powered journey to Grace McAllister's place. Two dozen of roses will be ready on your seat.\n\nThe carriage will take both of you to our establishment. The utmost attention will be given to you two when you arrive.\n\nWe have reserved you our most exclusive and romantic table. A string quartet will be booked to play a selection of the greatest love songs of all time.\n\nJust for fun, I am going to attach the reply from our chef, the famous Tony Marino.\n\nANTIPASTI\n\nItalian Parma Prosciutto with soft stracchino cheese and panzerotti fritters.\n\nPIATTI PRINCIPALI\n\nLinguine with lobster and cherry tomato sauce\n\nDOLCE\n\nA trio of chocolate ganache cheesecake, Torta della Nonna and bomboloni.\n\nAt exactly five minutes to midnight, the string quartet will play 'A thousand years' and that will be your cue to propose to your lovely girlfriend.\n\nThe carriage is on us, but the ring will be on you, of course.\n\nWe are aware that the cost of such an event will be out of your budget.\n\nFrankly, we think it is entirely unnecessary to spend so much money. We would be happy to make a reservation for you at a very nice table, the best of attention, flowers, and you and your girlfriend order directly from the menu whatever intrigues you.\n\nYou certainly can have a couple of cocktails and a very nice dinner and a bottle of champagne for one-third of what the other idea would cost. We could play the song you chose on our sound system.\n\nHowever, you are the only one who can make the decision, so let me know how you would like to have us arrange your special day.\n\nBest wishes,\n\nCordially yours,\n\nRed Harding,\n\nCo-owner and Manager.\n\nP.S. I think your delightful email inspired our personnel.\n\n\"It was a stupid idea anyway!\" Landon exclaimed throwing his arms up.\n\n\"Sorry, Bro.\"\n\n\"Looking back I think our email was presumptuous. The manager of the most famous restaurant in the zone and the best chef in the state were certainly not going to be interested in the love life of an obscure soldier with PTSD. The email is now probably in the recycle bin where it belongs.\"\n\n\"Why don't you pick the cheaper option? It doesn't sound too bad.\"\n\n\"It wouldn't be the same. Instead of a big night, it would be a cheap night.\"\n\n\"I'm sure Grace wouldn't mind. She's a simple girl, she'll love whatever you do for her. It's the intention that counts.\"\n\n\"I know. And you're right. But it's truly frustrating not being able to give her the magic evening that she deserves. She did a lot for me and I would have loved to give her back something truly special in return.\"\n\nCHAPTER 5\n\nWhen the bus reached Middletown station, Landon was surprised to find Derek instead of Grace waiting for them.\n\n\"Welcome home, Bro,\" Derek greeted Landon. \"Nice to see you again, Mrs. Petersen. You too Callie.\"\n\n\"Derek!\" Callie run to Landon's army buddy and hugged him tight.\n\n\"Thank you for taking care of my son, Derek.\"\n\n\"It was my pleasure, Mrs. Petersen. I wouldn't be here if it wasn't for him. I'll drive you to the cabin. Come on.\" Derek grabbed a couple of suitcases and headed to his truck.\n\n\"Where is Grace?\" Landon asked, grabbing the rest of the luggage.\n\n\"She had things to do and asked me to pick you up. Don't worry, she and Scout are fine.\"\n\nThey made small talk during the trip. Mainly, catching up with the local gossip.\n\nWhen they finally arrived and entered the cabin, Landon carried his bag to his bedroom and found a tux hanging there in front of him.\n\n\"What is this?\" he asked Derek. \"I'm pretty sure it wasn't there when I left.\n\n\"Looks like a tux to me,\" Derek said.\n\n\"I can see that, smarty pants. What is going on?\"\n\n\"There's a party at the community center and you are invited,\" Derek winked at his friend. Then he checked his phone and said, \"Take a quick shower and I'll help you change, the carriage will be here any minute.\"\n\nAs soon as Landon got out of the bathroom, Derek helped Landon to put on the tux.\n\n\"What did you mean by carriage? Derek, you need to start talking right now.\"\n\n\"I plead the fifth.\"\n\n\"What about my mother and sister, I can't leave them alone.\"\n\n\"We'll be fine, Bro. I remember where everything is from our previous visit. We can take care of ourselves. By the way, you look very handsome in your tux.\"\n\nThere was a soft knock on the door and Landon opened it to find a carriage beautifully decorated with Christmas garland, green velvet bows, and multicolor lights. The driver was wearing a beautiful outfit and a top hat.\n\n\"Your carriage is ready, sir.\"\n\nHe looked back but Derek had already gone through the back door.\n\nLandon shook his head, climbed into the carriage and sat alongside a huge bouquet of roses.\n\nThe coach headed for the road and out to town.\n\nMiddletown was about as bustling as a little town could get at Christmas. There were lavish decorations up and down Main Street.\n\n\"Where are we going? This is not the way to the community center.\"\n\nThe driver ignored Landon and kept driving.\n\nThere was cedar strung over shop windows, wreaths hung from each street lamp on the main street, and shopkeepers outdid themselves with store displays. Landon had to admit it would be pretty nice if he were into the whole Norman Rockwell scene.\n\nFinally, the carriage stopped in front of Grace's place. Landon was surprised to find that his girlfriend was waiting for him dressed as a princess.\n\n\"Landon! What a beautiful surprise! Your note left me speechless!\"\n\n\"My note...?\" He went down and helped his girlfriend to climb up to her seat.\n\n\"Yes, you know the one where you told me to wear this dress and wait for you at exactly 6pm. The dress is lovely by the way. You have impeccable taste in clothes.\"\n\n\"Eh... thank you, I guess.\" He rubbed the back of his head looking actually embarrassed.\n\n\"Are those roses for me?\" Grace asked with surprise looking at the bouquet.\n\n\"Yes, of course. Who else?\" Landon was still trying to get a grip on what was going on.\n\nGrace let out a shriek of excitement. \"No one had ever given me flowers before. You are the best boyfriend ever.\" She took the roses in her arms and smelt them. \"Thank you, my love. They are beautiful.\"\n\nShe leaned in to give Landon a truly loving kiss.\n\n\"I'm so happy to spend Christmas with you,\" he whispered when they broke the kiss. The raw emotion in his deep voice made Grace shiver.\n\n\"I'm excited too. Our first Christmas together. Are your mom and your sister joining us tonight?\"\n",
        "Landon shook his head.\n\n\"They stayed at the cabin. Our bus arrived just an hour ago. I barely had time to take a shower and change. But let's not talk about them. This evening is about us.\"\n\n\"Where are we going?\"\n\n\"Eh... surprise?\" he said, because he had no idea.\n\nGrace shivered. Her dress wasn't offering much protection from the cold. A December wind was coming off the lake. There was a prediction of snow next week. Just in time for Christmas.\n\nLandon pulled Grace into his arms and hugged her tightly. For a few minutes, the only sound was the clip-clop of horse hooves over the street. They were both lost in their own thoughts.\n\nLandon was trying to figure out what was going on. Everything was happening exactly as he asked in his email. Except that he didn't have the money to pay for all this. A disturbing thought popped into his head, he had never sent an answer telling them he couldn't pay for it. What if they thought the plan for the evening was still on?\n\nMaybe with luck, they assumed he had opted for the cheaper plan. He truly hoped so, because if not he didn't know how he was going to pay for all this. Derek probably informed them when he was coming home and that was the reason why he was acting so weird.\n\nGrace was deep in thought too, but for different reasons. She was expecting a family dinner with Landon, his mother, and his sister. Instead, she found herself riding in a beautifully decorated carriage, wearing a fancy dress, and holding a huge bouquet of roses. Even while she loved every bit of it, she couldn't help but wonder why Landon had gone to all this trouble?\n\nThe coach stopped in front of The Jammed and Landon helped Grace to climb down. She took his arm and they walked together inside.\n\nCHAPTER 6\n\nWhat Landon and Grace saw when they entered the restaurant took their breath away. They stood at the entrance absorbing the whole scene. It looked like a picture taken from a fairy tale. The restaurant was empty except for just one table. A string quartet was playing soft romantic music.\n\nThe room was decorated with Christmas bells and wreaths. There was a large Christmas tree in the corner. Dozens of holiday figurines and blinking lights were strategically placed along the walls.\n\nThe Jammed had never looked so romantic and dreamier.\n\nLandon heart sank when he saw all this. This wasn't the cheapest plan. Just the opposite.\n\n\"Landon! What's going on here?\" Grace whispered afraid of breaking the spell.\n\n\"Surprise?\" he whispered back with embarrassment.\n\n\"Oh, my God, I love this...\" Grace exclaimed in a voice choked with emotion.\n\nA waitress wearing a Santa hat came to them.\n\n\"Good evening, welcome to The Jammed. My name is Kat and I'll be your waitress, please follow me to your table.\"\n\nAs they walked to their table, Landon placed a guiding hand against the small of his girlfriend's back. It was a gentlemanly gesture, an almost protective one, but it still set her skin on fire.\n\nGrace looked in amazement at the table they had prepared for them. Centered between the candles in a low white vase there were flowers, white jasmines, and pink sweetheart roses.\n\nLandon pulled out a chair for his girlfriend. Grace's pulse skittered in a crazy tempo when her boyfriend seated himself right beside her.\n\nA menu, unlike any they had ever seen, lay on the table in front of the centerpiece. It had been hand-painted in watercolor. It had their names on the top and a description of every plate.\n\nThere was a quote at the bottom, \"Se l'amore rechiede solo baci, a cosa serve la fama del capocuoco? (If love requires only kisses, what is the use of the fame of the chef?)\"\n\n\"I'll put your roses in water,\" said Kat taking the bouquet from Grace's hands.\n\nBefore leaving the waitress said, \"I have just one question to ask you...\"\n\n\"...Can you pay for all of this?\" Landon completed the sentence in his head.\n\n\"Would you like a drink?\"\n\nThat was the only question they were asked all evening.\n\nThe dinner began. Silver sparkled and crystal glistened in the candlelight. The string quartet played in the background. Service was constant, attentive, and unobtrusive.\n\nThey never felt the waitress near them. Everything simply happened as if by sorcery.\n\nThe food was splendid. Each course was more exquisite than the one that came before it, and every taste and flavor would have thrilled the most meticulous gourmet.\n\nThey kept the conversation light, though their minds were working overtime.\n\nGrace had no idea what was going on. It seemed as if she living one of her more romantic dreams. If so, she never wanted to wake up.\n\nLandon was thinking how to pay for all this. Most importantly, he wanted to discuss the matter in private with the owners to avoid Grace the most humiliating moment of her life.\n\nFrom time to time, Grace dared to glance up into Landon's bright eyes. They looked more beautiful than usual because of the candlelight.\n\nAbout halfway through their dinner, Tony approached their table wearing a red chef's hat. He smiled and greeted them, \"Landon... Grace..., I hope you're enjoying your dinner.\"\n\nThey both replied in unison, \"It was superb!\" And they laughed.\n\nTony drew up a chair and sat down and talked with them, delighting them with anecdotes of his childhood when he learned to cook from his nonna, and how Kat and he prepared a Lady-and-the-Tramp-themed surprise dinner for Red.\n\nAfter Tony left their table, the director of the string quartet left his seat and came to their table to greet them. He asked them if they were enjoying the music and wished them a Merry Christmas.\n\nWhen Grace's attention was distracted for a moment, the violinist leaned over to Landon and whispered, \"'A Thousand Years' at midnight. Good luck!\" He rose, grinning, and walked back to his seat.\n\nDessert was brought to their table and it was as delicious as the rest of the meal.\n\nCHAPTER 7\n\nKat approached their table and told Landon that he was required at the kitchen for a moment.\n\nGrace looked at him with a question in her eyes and he shrugged.\n\nLandon excused himself and followed the waitress, knowing that they were about to present him with the bill. The dreaded moment had finally arrived.\n\nOnce he entered the kitchen, he saw the manager, the chef, and the waitress smiling at him.\n\nRed Harding handed him the bill on a silver plate and said, \"We thought you might prefer not to have this brought to your table.\"\n\n\"I couldn't agree more,\" he muttered under his breath. Then, raising his voice, he said, \"Look, I'm pretty sure you know I don't have the money to pay for all this. Even when this was a misunderstanding, I plan to honor my debt. Perhaps we can reach some kind of arrangement. I'll wash dishes. I'll do windows, I'll paint the walls. I'm pretty handy and I'll do whatever work you need to pay for my bill. All I'm asking is don't tell Grace. Don't ruin her surprise.\"\n\n\"Landon, look at the bill, Landon,\" Red said still smiling which was strange. He should be frowning.\n\n\"I'd rather not. Just tell me how much is it and I'll do my best to pay you back as soon as possible.\"\n\nKat came close to Landon, placed a hand on his arm, and said, \"Landon, trust me. Take a look at the bill.\"\n\nHe turned the slip of paper over fearfully and looked at the total. It said, \"Paid in full, Merry Christmas.\"\n\nHe looked at them in amazement and gratitude.\n\n\"But, how is this possible? This evening must have cost you a fortune.\"\n\nA side door opened and people started coming into the kitchen.\n\n\"We got your six, Bro,\" a deep voice said.\n\n\"Derek, what's going on? What's all this?\"\n\n\"This is friends helping a friend,\" John Harding walked in behind Landon. \"All the poker crew pitched in and helped.\"\n\nBill Anderson, Jonah Hitchcock, and Mayor Thompson smiled at Landon.\n\n\"We changed your M&amp;Ms for real money,\" Bill Anderson said with a wink.\n\nLandon shook his head. \"This is too much. I can't accept it,\" his voice was hoarse with emotion, his eyes burning unexpectedly.\n\n\"You can and you will. You make my sister happier than she had ever been. That's priceless,\" Steve added.\n\nLandon's mother and sister walked into the kitchen behind Steve.\n\n\"Now we come to the second part of our plan, are you ready to propose to Grace, Landon?\" Callie asked her brother.\n\n\"Propose? Yeah, well, the thing is I don't have a ring. I don't have a proposal planned either. This whole event was supposed to be a dream, a game I played with you, Sis...\"\n\n\"I can help with the ring problem,\" announced a firm voice.\n\nMarcus Carter walked into the kitchen helping himself with a cane. The old man stood in front of Landon, put his hand into his pocket, and handed him a blue velvet box.\n\nLandon took the box and opened it with shaky hands. The most beautiful diamond engagement ring was nestled in velvet.\n\n\"Marcus! This is too much. Besides, it's a bit...\"\n\n\"Gaudy?\" the old man completed the sentence. \"It totally is. It's a treasured family heirloom that was gathering dust for years in the safe box. I'm happy to be able to pass it to another honorary family member.\"\n\n\"I... just... don't know... I can't accept it! It must cost a fortune.\" The lump in his throat was impossible to swallow. The barrage of emotions was almost too much for him to handle.\n\n\"You can and you will,\" Marcus insisted.\n\nLandon sniffed and nodded, \"Okay, I'll accept the ring with one condition. You'll be my best man at our wedding.\"\n\nMarcus pretended to think for a minute, \"I have a counter proposal for you. I'll be your best man if you let me take care of the reception.\"\n\nThe old man arched a brow and extended his hand.\n\n\"Deal,\" Landon said finally, shaking Marcus' hand.\n\n\"You're a tough negotiator.\" Then the old man smiled, patted Landon's back and pushed him to the door, \"Now go and close the deal, Son.\"\n\n\"Don't worry about the proposal. Just speak from your heart,\" Red Harding suggested. \"It worked for me.\"\n\nKat grabbed her husband's arm and leaned her head on his shoulder.\n\n\"Good luck, Bro,\" Callie wished, giving the thumbs up to her brother.\n\n\"We brought you some moral support,\" Diana guided Scout to the center of the group.\n\n\"Scout!\" Landon got on one knee and hugged his service dog who was licking his face and whining.\n\n\"I missed you too.\"\n\n\"I have a wonderful idea,\" Tony took the ring box from Landon's hand and tied it to Scout's collar with a red bow. \"Perfect. Call him when you're ready.\"\n\nThe chef winked at Landon.\n\n\"We'll keep our fingers crossed for you. Good luck, Bro,\" Derek wished Landon.\n\nHe nodded, unable to speak and walked back into the room glowing.\n\nIn the meantime, Grace was thinking that Landon never ceased to amaze her. She never thought he was able to plan a romantic evening like this for her. It made her shiver from head to toes every time she thought about all the trouble he had gone through just to make her happy.\n\n\"Shall we dance?\" Landon's voice brought her back to reality. He made a slow, stiff yet refined bow\n\n\"It would be my pleasure,\" she said managing a lovely and graceful curtsey for him.\n\nGrace felt her boyfriend's hand on her arm, guiding her gently to the floor.\n\nThey just felt warm and cozy in each other's arms as they smoothly glided across the floor. They swayed to the soft music. Grace brought her hands to Landon's neck. He cupped her cheeks. Her eyes caught the twinkling lights perfectly, making them look like stars. Their lips met. It was a soft, lingering kiss. What could be more perfect?\n\nGrace was living a fairy-tale evening, and it was all real. Landon was real. Their love was real. Their relationship was real.\n\n\"I'm in love!\" she screamed in her mind, \"How wonderful. I'm in love.\"\n\nThe thought brought tears of joy to her eyes.\n\nAt five minutes till midnight, the director of the quartet turned toward Landon, smiled, and winked. He raised his hand and brought it down, and suddenly the first chords of \"A Thousand Years\" started.\n\nLandon guided Grace back to her chair. Then he let out a short whistle and Scout came out of the kitchen door. The ring box was tied to his collar.\n\nThe dog sat in front of Grace and offered her his paw. Grace looked up to find Landon down on one knee in front of her, eyes gleaming, smile as wide as she'd ever seen it.\n\n\"Oh my God!\" Grace breathed, while joyful light danced in her eyes.\n\nLandon untied the bow, opened the box, and held the ring up to her. It sparkled under the room light, and Landon thought his girlfriend might tumble off the chair.\n\n\"Landon...\" she whispered.\n\n\"I know it's a bit fancy. We can change it for a simpler one.\"\n\n\"Don't you dare! It's perfect.\"\n\nHe placed the ring on Grace's finger and said, \"I'm not an easy person to love...\"\n\n\"That's not true,\" she protested. He laid a finger on her lips.\n\n\"But I can promise you wholeheartedly that you will be loved with so much passion and intensity that you'll forget what life felt like before I came along. You will always be cared for and you will always have someone in your corner. It's been a long time coming, Grace McAllister, but I love you with every fiber of my being. I want to spend the rest of my life loving you. Will you let me?\"\n\n\"Yes!!!!\" She wanted to shout the word, but she could only squeak out a whisper. She gulped several times, tears streaming down her face. \"Yes, yes, yes, yes. A thousand times, yes. I'll marry you Landon Petersen, my true and only love, my life, my everything.\"\n\nLandon's eyes shone. \"Scout, if you don't mind?\" He pointed to the ground and Scout, evidently all-too-willing an accomplice, sat obediently down. It gave Landon enough room to lean in and give Grace a deep loving kiss that made the world spin in circles around her.\n\nThey barely registered the cheers and the applause from all the people gathering around them.\n\nEPILOGUE\n\nLandon and Grace got married the day after Christmas.\n\nIt was a perfect wedding. It showcased the deep and abiding love Grace and Landon shared, which was meant to last and conquer adversity. Steve walked his sister down the aisle, and Callie was one of the bridesmaids.\n\nLandon's vows brought tears to all the people present at the church.\n\n\"My beautiful bride, you are the most exceptional woman I have ever met. I am one lucky man to be able to call you my wife, my partner, my teammate....\"\n\nGrace pumped her fist in the air and shouted, \"Go, Team Landon!\"\n\nThere were a few laughs and several voices joined her.\n\n\"You saved me from the darkness that overwhelmed my soul. You saved me from my worst self. You saved me and showed me how to love again. You fought at my side to make me the man I always wanted to be. I will cherish you. I will love you. I will take care of you. I will be there for you to fight every battle together as a team. I will faithfully love you always and forever.\"\n\nTears streamed down the bride's cheeks.\n\nLandon's eyes, too, misted over with happiness. He flipped her veil over after it was all said and done, then cupped her cheek lovingly. Tenderly.\n\nThen he pressed his lips to hers and the audience erupted into applause.\n\n\"Ladies and gentlemen, I give you to... Mr. and Mrs. Landon Petersen!\" Reverend Marsden said.\n\nIt was a perfect reception too. Everyone clapped their hands as Landon and Grace entered the room.\n\nLandon dipped Grace down before wrapping his arms around her and coming in for a loving kiss. She threaded her arms around his neck as he picked her up, then twirled her around the floor.\n\nEveryone had a wonderful time dancing and eating and joking. It was fun and unique. Marcus Carter was the perfect host. The old man looked happy as a child on Christmas morning. He even danced a few steps with the bride.\n\nBesides the ring, Marcus gifted the newlyweds the title of the cabin where Landon had been living.\n\n\"It's already done,\" was all he said when Landon protested it was too much.\n\nIt was the perfect honeymoon too. Instead of going to some place, they stayed at their cabin for a week. His mother and his sister moved to Grace's place.\n\nOne morning, Grace woke up to an empty bed. It wasn't strange since Landon was an early riser.\n\nShe found him sitting on the porch, with a cup of hot chocolate watching the snowy mountains. Scout was lying at his feet.\n\nShe sat at her husband's side, and wrapped her blanket around him.\n\n\"What are you thinking, my love?\"\n\n\"I love the peace and beauty of the sunrise. Everything is so still. Even the birds are silent. Then, moments before the sun appears you can see, high up in the sky, a change as the blackness begins to take the morning colors. You see shades of blue, orange, yellow, and red as they slowly begin to catch the first rays of the morning sun. Then, the sun peeks over the mountains, and darkness gives way to light.\"\n\nLandon looked his wife in the eyes, \"That's what you did for me. I couldn't find peace, I felt guilt, fear, and pain. I felt unworthy, unloved. I was struggling with my life because I felt there was darkness all around me. I was lost.\" He took his wife's hand in his. \"You took the darkness out of my life so I could see the light. Now there is no darkness in me, only love.\"\n\nGrace nodded and laid her head on her husband's shoulder.\n\n\"You give me too much credit, my love. You were already on the good path. I just walked at your side.\"\n\nHe brought her hand to his lips and kissed its back lovingly. \"Agree to disagree.\"\n\n\"You save me too,\" Grace confessed in a soft voice. \"I had locked up my heart with seven keys so I could protect myself from the heartbreak. I had built walls around me. I was nursing anger and resentment against men. It was poisoning my soul...\" She swallowed hard and went on. \"And then you came into my life. You were so broken that you could barely hold yourself together. But you didn't give up. You kept fighting to find the light.\"\n\nShe took her husband's hand in hers. \"And you made me want to fight at your side. And when I did, I started to fight my own darkness too. I found the light because of you, Landon.\"\n\nShe looked into her husband's eyes, took his face between her hands, and kissed him deeply. It was a long, loving lingering kiss.\n\n\"I love you so much it hurts, my love,\" Grace said.\n\nThey sat there in silence. A silence full of love and understanding. Their hearts were filled with confidence and certainty they could conquer any obstacle that might come their way.\n\nTHE END\n\n***\n\nI wish a Merry Christmas to all my readers. Thank you for your support, your votes, your comments and your feedback. My warmest thoughts and best wishes are with you. May the spirit of the Holidays fill your home with love and peace."
    ],
    "authorname": "DB86",
    "tags": [
        "middletown",
        "romance",
        "no sex",
        "proposal",
        "wedding",
        "christmas"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/a-christmas-gift-6"
}