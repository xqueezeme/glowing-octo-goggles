{
    "title": "Mira",
    "pages": [
        "Warnings I promised: \n\n There is no f/f or group in this story. Read with no fear&hellip; \n\nIt's all m/f, but it takes a while to get there.\n\nThis one's a vampire story.\n\nOkay, if you read \"leader of the pack\" then I suggest you read my prefaces. If you didn't then it's not necessary, but I suggest it, if you want to avoid future confusion should you choose to read any of my other stuff.\n\nPREFACE: I have this obsession about certain concepts. They reappear in the stuff I write frequently. However, they don't always come up in the same way. Druids for example change what they're able to do and what they are from story to story. So before you read this, turn off anything you may have stuck in your brain from the last thing I wrote. Different world, different people, different stuff!\n\nPREFACE 2: I wasn't going to post this story and then thought, \"What the hell. It's almost done. Finish it off and then work on your thesis.\" Note the procrastination attempt. This story was actually written before \"leader of the pack\" and the concept is similar. I messed with this idea quite a bit and actually have put research into a somewhat historically accurate version of this for a book I've had going, on and off, over the past couple years. It's not done, maybe I'll start posting chapters of that. The feedback and comments really motivated me to finish \"leader of the pack\". 300 pages and an edit in 2 months. That's a personal best for me. I think I am going to send that one out and see if a publisher will pick it up. So if it disappears, hopefully by then I'll have captured you with something else. If it isn't picked up I might consider posting the edit. It's a lot better than the draft you're all raving about. \n\nAnd on to the main event!\n\n***************************\n\nMira stood staring into the darkness of the cave, her white shift blowing slightly in the breeze. She was average in all ways. She had average brown hair, average brown eyes, average weight, average height, average intelligence, and average bravery. She was just average. She had been dreading this moment since she had watched the first of her sisters commit to the path. She was the last of this generation. Mira wasn't sure if it was better to have lived a longer life dreading what would come or if it would have been better to have died first and lose what little time she had been given. \n\nThe ceremony was almost over. He was inside the cave waiting for her. \n\nShe had him pictured as some kind of vicious, desperate creature. The druids had kept him around for centuries and she could hear the lessons she had been taught since she was a child running through her head. Mira had even helped to teach the new generation of girls about him. She went over the lessons in her head as she waited for the high priestess to be done with her speech.\n\nRillan Tiernay was created to protect and serve the circle. He was a guardian, an assassin, and a vampire. Each generation a group of girls was picked to be sacrificed to his thirst. This was his condition for his loyalty. He had come to despise what he was, but his self preservation instinct was too strong for him to kill himself. Each girl given to him was there to feed him until she died or asked him to kill her. Then she was replaced by another. Once she was sent into the caves she could not leave and only came to the gateway to collect the supplies that the druids left nightly. Rillan left only when there was an assignment from the druids. Every girl who entered the cave believes that maybe she will be different. Perhaps she won't want to die. Most last several months. The longest was ten years. The girl who had gone before Mira had lasted three weeks. \n\nMira looked up from her thoughts to find that the high priestess had stopped speaking, and everyone was waiting for Mira to finish the ceremony. They were patient and stood quietly. Mira didn't know how long they had waited for her to realize it was her turn. Now as she looked around she was more afraid of what was to happen to her then she had thought she would be. The lessons were all so cut and dry; so matter of fact. This is what they had to do to survive. If not for Rillan their circle would have been found, and they would have been destroyed long ago. The sacrifices were all voluntary. The girls went to him as a service to their people. She couldn't stop her mind from churning.\n\nMira walked forward. The moon was high in the sky and blood red. It cast an eerie light about the clearing beyond the gate. She stepped through the tall, rusted iron gateway, and she heard it creak as it swung shut behind her. The sound of the gate lock clanking sent a jolt though her and the last of her courage seemed to have been locked on the other side. She looked into the darkness beyond the mouth of the cave trying to see if he was watching, but she couldn't see anything. The little light that touched the mouth of the cave seemed to be swallowed into the black. In all the times she had delivered food or other supplies to the cave it had never seemed this ominous. \n\nThe clearing in front of the cave mouth was unkempt. Unlike all the other gardens kept by the druids, this one was off limits. It was for her to take care of, if she wanted, as long as she never stepped past the gate. There was the carved stone alter at the center of the clearing in front of the cave mouth. That was where he would leave her body after her death, so that the druids would know that it was time for a new sacrifice. There was the table where they would leave food for her and any supplies that she requested. There was the stone basin where letters could be left. She was never to speak to anyone but Rillan from now until her death. It was as though she was taking inventory of her new life as she looked at each cold thing in the clearing in turn. She could almost feel loneliness creeping up on her from the shadows cast about her like a demon in the dark. \n\nMira turned around to see if the others were still watching. There was no one. The gate had been locked and she was standing alone. All that was left for her was to enter the cave and find him. Her eyes traveled the twisted metal archway that she had studied so many times in the past. Now it was backward as she stood on the wrong side of it. Finally.\n\nShe took a deep breath and walked toward the cave mouth in a resolute fashion. Her breathing was purposeful and audible. Best to get this over with. The breeze blew her shift around her legs. There were rumors that he would insist that she walk about naked after he took her. That was why the sacrifices didn't bring clothes with them into his home. The dirt floor was packed hard and her feet made a soft padding sound as she entered the darkness. Mira lifted the front of her shift so that she wouldn't step on it as she stooped under a low ceiling in the tunnel and continued further into the darkness.\n\nRillan must live like an animal in here, she thought. The stone wall was cold and damp under her hand as she used it to guide her way. I wonder if he'll come get me or if I'll wander in here for hours before finding my way. The least he could do is provide some light. Mira was beginning to become frustrated and more frightened. She couldn't see in the black and she was tripping on either her shift or loose stone. Suddenly there was a swishing noise. Like something flying and she screamed. She fell to her knees and a stone bit into the palm of her hand. \n\nMira held her wrist and turned to sit on the floor with her back against the wall. What if I took a wrong turn or missed some sign. The tunnels were rumored to be endless so that no one could find Rillan should he choose to not be found. It was a test of the new sacrifices. The girls were supposed to find him to prove that they were worthy. Some test. Stumbling around in pitch black, down caves with no end, looking for something that I don't want to find and doesn't want to be found. \n\nMira began to cry. She knew that she had only been here a few minutes, five maybe fifteen, but it felt like forever. So she waited. She wasn't going to be fool enough to wander around in here. He could come get her if he wanted her. Without being able to see the moon or sky Mira couldn't tell how much time passed. Eventually she fell asleep leaning against the wall. \n\nWhen she opened her eyes Mira could see daylight streaming in from the entrance. It was only about a hundred feet away. She could have sworn that she had gone farther into the cave than that. She couldn't see any deeper into the cave than maybe fifty more feet ahead of her. Mira stood up. She didn't know why he hadn't come looking for her. He had to know that last night was the sacrifice. She was feeling foolish and guilty. Daylight chased away the fear, but now she was worried he would be angry at her for taking so long to come to him. She could see now that there was only one way to go. The cave went on into the mountain side in a straight line from what she could tell.\n\nGathering her courage she stood up and brushed herself off and then headed resolutely into the darkness again. This time she kept one hand on the wall and one above her head and in front of her, in case the ceiling dropped again. It wasn't long before the hall curved and the packed dirt changed to stone. She felt the difference under her feet. Mira bent down to touch the ground and found that it felt like stonework. Like a floor that had been made or carved. It certainly didn't feel like natural stone. She traced one pavestone with her fingers and then stood up again and followed the wall.\n\nFarther down the cave and the wall changed under her hand. The stone went from feeling like a cave wall to feeling like a castle wall. Just like the floor, she thought. Now curiosity was winning out over all the other emotions racing through her. Mira moved more quickly down the hall. She wasn't afraid of the ceiling dropping again so she put her hand out in front of her like a blind man feeling for obstacles in his path.\n\nWhen her hand ran across wood in the wall she stopped. Mira's breath increased as she felt the wood under her hand. There were slats that were held together by metal cross work and bolts. Then her hand found the doorknob. Her heart seemed to pound in her chest. She wondered if she had found him. That wasn't so hard, she thought with a strange, smug sense of accomplishment. She turned the knob and the door opened onto more blackness. \"Hello,\" she called, but there was nothing. \n\nMira walked blindly into the room. Her hands both held out in front of her, she walked straight forward a few feet. She almost fell over when her foot hit something with a loud thud that echoed out the door and down the hallway. She reached down and her hands found a crate. She felt around it and found that there were a number of crates along the floor. She was about to leave it and try to move around it, when it occurred to her that she may have found a store room. Mira pushed the lid off the crate and found it full of fabric of some kind. She crawled around on the floor groping about until she found another crate and pushed the lid off that one. This crate contained jars. It is a store room, her thoughts raced excitedly. When she ran into a wall she felt her way up and found shelves. One at a time she carefully felt her way along the shelves. There were books, small boxes, small jars, more fabric, paper, scrolls. Finally she found what she was looking for, a lantern. There were several lanterns on that part of the shelf. \n\nShe pulled down one of the lanterns and felt the weight of it. She guessed it already held oil in it. Now she needed some tinder twigs. She felt her way back to the small boxes. The first one held something small and round, the next something square. She didn't know what the things were but they weren't tinder twigs so she moved on. She found a box of straight pins and a box of spools of thread. She was about to give up when she found the tinder twigs. They were in a small box almost directly under the lanterns. She smiled and shook her head as she took one of the think wooden sticks out of the box and felt for the striker. \n\nMira paused as she held the tinder twigbox in her hand. The lantern was ready. She'd finally be able to see where she was going. It was strange, but a funny kind of fear pulled at her stomach again. She had been so obsessed with what she was doing that she almost forgot why she was in this dark place. Suddenly it felt as if she was being watched. He could be right next to her and she wouldn't know it. Her mind raced irrationally as she imagined striking the tinder twig and having an evil face appear in the light staring at her. \"Hello,\" she called meekly into the dark. Maybe I don't want to see, she thought.\n\n\"Get a hold of yourself,\" she said out loud. The sound of her voice was comforting. Mira struck the tinder twig and lit the lantern. To her relief, when light flooded the room, all she found were opened crates and shelves of stored goods. If she didn't know better she would have thought she was in a castle storage room. Not in a cave, deep in a mountain, looking for a vampire who would inevitably drain the life out of her. Not that the idea of being in a castle wasn't strange either. But hell, where else would a vampire live, right?\n\nMira took another deep breath, held the lantern out and left the room. It was much easier going now. The light gave her confidence. It turned out the rumors were correct. There were quite a few halls that criss crossed, now that she was in the manmade section of the tunnels. How am I going to find him? She asked herself as she looked down several hallways. Other than that first door she hadn't seen any others. She tried listening carefully down the halls for some noise but didn't hear anything. \"Hello,\" she called down one of the halls a bit more loudly than she had before. Her voice echoed back toward her. So she called down one of the other halls. Again her voice echoed back. When she called down the third hall it was different. \"Hello,\" she called again. There was no echo here.\n\n\"Something has to be absorbing the sound,\" she said aloud. \"Furniture, maybe.\" Mira gathered herself and headed down the hallway. There were doors in this one. She opened the first door and held up the lantern. The room was a library. There were books lining shelves. There was a chair and a table. There was a large assortment of papers and writing things on a small desk. There was a rug on the floor and a pile of crumpled papers in one corner. Mira stepped back into the hall. \"What kind of vampire collects books,\" she whispered.\n\nShe closed the door behind herself as she continued to walk down the hallway. She found the cause of the lack of echoing. There were tapestries on some of the walls down this hall. Mira started to open another door when a sound caught her attention. At first she thought she may be losing her mind. There was clanging. Metal clanging. Sword fighting clanging. She followed the sound of metal crashing against metal. It was all so strange. This was never covered in the lessons, she thought. The clashing noises became louder as she walked down the hall. When she came to the end of the hall the sounds stopped. She stared at the large carved, wooden, double doors that filled the end of the hallway. There was light streaming out from under the doors. \n\nMira's stomach churned. She hadn't eaten breakfast and she could feel bile rise in her throat. She wished that the clanging would start again. The silence was dreadful. Finally she reached out and turned the handle on the door. It was well worn and smooth. It released easily and the door swung silently in letting light fall into the hallway from the multitude of candles in the wrought iron chandelier that hung from the high ceiling. \n\nMira didn't really see him at first. She was looking for a monster. Some pale, gaunt, angry beast that would fall on her and drain the life from her body. What she saw was much different. Rillan Tiernay was tall, built like a warrior. The stories had described him as noble and brave. But that was before he was turned into a vampire. Mira, like those who had come before her, had believed that the man of legend had changed when he was turned into a bloodsucking assassin. Obviously she was wrong. He had dark blue eyes and black hair. His skin was tanned dark, not pale at all. He was wearing leather armor and there was a sword leaning against a dummy that was dressed in armor as well. It was holding a shield and looked severely battered. He was handsome. He was larger than most of the men were in her village. But legend had it that he wasn't originally a druid, nor was he from her village. He had been a warrior of the Celtic clans before the Romans had assimilated them. He had come to the druids seeking a way of vengeance against the Roman conquerors. \n\nJust as she was measuring him, he stood measuring her. She knew what he would see. She never thought of herself as anything special. What was worse; she had been wandering around in the dark and had fallen on the ground. Her hand was scraped up, and she hadn't a hair brush or a chance to wash before this meeting. \"Come in girl.\" His accent was strong, as if he barely spoke the language. \"You've been more resourceful than most of the others. I believe you are the first to actually find a lantern and get here without being lost in the labyrinth for a few days.\"\n\nMira found herself annoyed by the comment and almost forgot she was afraid as she answered. \"Do you find it amusing to let us grope about in the dark, frightened and lost for several days?\"\n\nRillan walked toward her. His purposeful strides made her wonder if this was it. He was going to bite her. She let out a yelp and fell back into the door, dropping the lantern on the floor with a clatter. When he reached her he stared into her eyes searchingly. His expression was hard and icy and his cold blue eyes seemed to look into her soul. When he replied to her question his voice was low and warning. \"No, I don't find it amusing. But I do find that after a few days alone in the dark even, my company is looked upon as a welcome alternative. Usually when they see me after the darkness they don't jump in fear. Like you did.\"\n\nMira felt a little ashamed. \"I didn't- I mean I'm not-\" She stared into his eyes as he stood over her and tried to find the words to explain why her lessons hadn't properly prepared her to take on her duties with more strength than she had shown.\n\nHe cut her off. \"I'm used to it.\" As he spoke he leaned in and breathed heavily. Mira got the impression that he was smelling her. When he pulled away his pupils seemed to bleed into the rest of his eyes until they were solid black. Then he blinked and it was like she had been seeing things.\n\n\"I'll show you where your room is,\" he said. Then he turned and went back to the dummy wearing the armor, picked up the sword, and walked out of the room. Mira took a moment to collect herself and then followed him out. She almost forgot the lantern. As he disappeared into the darkness she grabbed it and then hurried to catch up.\n\nShe followed him back down the hallway she had come from. He opened one of the doors that was toward the very beginning of the hall. It led into another hallway that was lined with more tapestries and doors. As he led her down the hall she tentatively asked, \"Is it always this dark in here?\"\n\nRillan abruptly stopped, turned around to look at her, then he grabbed a candle off a sconce on the wall. He tossed it to her. \"These are your quarters. This hall and these rooms. There are candles. You can light them if you wish, but the rest of the chamber is mine. There it is always dark.\" With that he turned around and led her to the door at the far end of the hall. Pushing the door open he walked into the room and crossed the floor to a fireplace that was against the far wall. He picked up a tinder twig and walked back toward her. Rillan used her lantern to light the twig and then tossed it into the fireplace.",
        "As the fire spread light and warmth through the room Mira realized how cold she had been to this point. \"Explore the rooms in this hall. You'll find a small store room. There should be everything you need to feed yourself or make clothes. It'll probably take you a while to bore yourself with what's there. If you decide you need something I can be found usually where you found me tonight.\" With that he turned and appeared to be leaving.\n\n\"Lord Tiernay,\" Mira started and almost didn't finish the question when he turned to look at her. \"Um, what about you?\" She spoke slowly and was trembling a bit as she did.\n\n\"You're not ready yet.\" Then he left, leaving her staring after him dumbfounded.\n\n<p align=\"center\">***\n\nHer room was beautiful. As she lit the candles that were set on woven metal sconces around the room, light fell on a large canopy bed covered with silken blankets. There was a wardrobe, and she opened it to find that it was full of dresses. A morbid feeling went through her body when she realized that these were the clothes of the women who had previously been Lord Tiernay's companions. She sighed. They were still beautiful clothes. The women who made them must have had a great deal of time and talent. There was a dressing table with a large mirror and silver hair combs and several different brushes. There was a jewelry box with a number of necklaces and bracelets and broaches. There was a table with wine glasses and plates, forks, knives, and spoons. There was a pot near the fire and other cooking implements. She wondered if the elders knew that he did this and left it out of the lessons on purpose or if he kept this secret.\n\nHe had been right. It took her a couple weeks to explore the other rooms in her chambers. There was a small library. There was the store room that contained meats and vegetables. Now she knew where the items that the druids left went. She realized a couple days into her stay that he was gathering the things that the others left and was placing them in the store room when she was unaware, maybe when she was sleeping. There was a room that was just a big open room with mirrors on some of the walls. Mirrors of that size would have been difficult to bring here. She wondered what the room was for. Dancing maybe, she thought. There were a number of musical instruments in the store room. Finally there was a room with a bathing tub. There was space for a small fire or hot coals beneath the tub and a warmer for water. There were towels and a dressing gown in this room. There was also a tub for washing her clothes on the far wall, but it was the bathtub that kept her attention.\n\nThe water in the basin next to the tub appeared clear and clean as did the water in the tub itself. Mira lit the coals under the tub. Then she lit the coals under the warming basin for more water and waited for the water to warm before she got in. She enjoyed her bath. It occurred to her that she was being pampered probably as well as any noble in the roman palaces to the south. Lord Tiernay certainly knows how to try and keep his women happy, she thought. But that thought led to the more morbid thoughts. If he's so good at making sure his women have everything they could want that only leaves a couple alternatives. The women beg for death because he is so vicious in his feeding, or they die from the loneliness.\n\nMira had grown up with so many people always around. As she continued her explorations of her chambers she realized exactly how solitary this life was. He must keep us alone so that we won't run away. A person doesn't long for something as badly, if she's not being tempted by it. \n\nAfter she was familiar with everything her chambers had to offer, she started reading the books in her small library. They were mostly history books or folklore. Some of them were in languages she didn't know. She set herself a routine. She found that her water was replaced regularly, and her store room was continually replenished. There were occasions that she felt as though she was being watched. But she was never able to catch him in her chambers even when she tried to wait up and see him.\n\nIt was several weeks worth of her solitary existence, in what she had come to see as a prison, before she was desperate enough for company that she ventured out the door at the farthest end of the hall. Carrying a lantern in one hand, wearing one of the simpler dresses, and walking cautiously down the hall, she listened for signs that Lord Tiernay was nearby. She managed to find her way to the room where she had originally met him, but he wasn't there. \n\nThe chandelier hanging from the ceiling was not lit and the room was dark and silent. Suddenly she was overwhelmed by the irrational fear that she would never see or hear or speak to another person ever again. \"Hello,\" she whimpered into the darkness, but there was no answer. She walked around the room looking for another door or some clue as to where he may be. She hadn't really realized how lonely she was. Somewhere in her mind, she had always thought he was just down the hall. But now that she was standing here and the room was dark she felt as though her entire body was going numb. She continued her search for another door, hoping she'd find. As she came back to the door she had come in and had turned up nothing she fell to sitting on the ground in the middle of the doorway and began to cry.\n\nShe didn't care what he would do to her now. She only wanted some company. Any company. As she sat sobbing, a gentle hand touched her shoulder. \"Shh. I'm here.\" His voice seemed, at that moment, to be the most beautiful sound in the world. She turned to see him bending on one knee behind her and she flung her arms around his neck. He held her and spoke softly. \"I understand. Calm down.\" He stroked her hair and waited for her to stop crying.\n\n\"Mira, come with me,\" Rillan coaxed as he helped her stand up.\n\nShe left the lantern on the floor as she held onto Rillan. He led her through the darkness and set her in a large armchair. She could make out his shape in the darkness by the light of the lantern as he lit the fireplace that was near the chair. Light spilled into the room from the fireplace, forming an intimate circle of warmth around the hearth. Rillan stepped over to the lantern that was still sitting on the floor and picked it up, blew it out, then set it on the floor next to the chair he had placed Mira in. \"You picked a bad time to look for company. I was sleeping.\" Rillan sat down on the edge of the chair across from Mira. He leaned forward, staring at her measuringly.\n\n\"Um, is it nighttime?\" Mira was tentative. She felt as though she had forgotten how to have a conversation.\n\n\"No. I usually sleep during the day.\" Rillan's voice was resolute and almost harsh. \n\nMira wasn't sure what to say to him. She knew that he slept during day. She had been taught that. Why couldn't she think of anything intelligent to say? All she knew was that she didn't want him to go away and leave her right then. \"I, I'm sorry to have awakened you. Um, do you need to go back to sleep?\"\n\nRillan didn't answer right away. He had been up several days and wasn't overly interested in consoling his latest sacrifice. He couldn't see this one lasting very long. She may be resourceful and bright, but she was scared out of her mind. \"I would prefer to go back to sleep.\" \n\n\"But you'll stay?\" Mira was quick with the request.\n\nRillan sighed and sat back in the chair. \"Alright. What do you want to talk about?\"\n\nMira's mind raced. She didn't really know what she wanted to talk about. She just didn't want to stay alone in her room any longer.\n\nRillan cleared his throat impatiently. Mira panicked. \"Um, this isn't what I expected when I came here,\" she said uncertainly.\n\nHe smiled wickedly at her. Mira's eyes widened as she saw his fangs. \"What did you expect?\"\n\n\"I guess, uh, I thought&hellip;\"\n\n\"You thought that I would rape you, then suck your body dry and leave you to die.\"\n\nMira swallowed. \"That's not what I meant.\"\n\n\"Isn't it?\"\n\n\"What happened to the others then?\" Mira couldn't help but ask.\n\nRillan's dark blue eyes seemed to look into her. \"Do you really think you're ready for that?\"\n\n\"I can't think of anything else right now,\" she whispered. \n\nRillan's eyes turned solid black and his voice dropped to a deadly soft tone. \"I waited until they were lonely enough to come to me. Then I seduced them. I used them as long as they were willing. When they couldn't live with the idea of me any longer, regardless of how lonely they were, I offered them death. The ones who accepted what I am, lived longer. The ones who feared me died sooner.\"\n\n\"The ones who lived longer, why did they decide to die in the end,\" Mira asked softly.\n\n\"It's easy enough for you to pretend that you're happy and in love until the druids give me an assignment. Each of the ones who lived with me at length asked to die within days after I returned from an assassination. Most live until the first night I chose to feed.\" The emphasis he put on feed sounded like a threat.\n\n\"You mean you only have to to uh feed,\" she could barely say it, \"when you choose to?\"\n\nHe smiled at her again and his fangs seemed to be emphasized by the firelight. \"Not quite as simple as that. I feed when I need to or when I choose to. Are you offering?\"\n\nMira shifted uncomfortably in her chair. \"I don't know. That's what I was sent here for. Does it hurt?\"\n\nRillan's smile fell. \"The druids have failed me in this respect. They were supposed to send me companions. But their teachings seem, in recent years, to result in girls coming to me afraid of the hunger and unknowing of the rest of their duties.\"\n\nMira was overcome with pity for him. \"You're angry because you're alone,\" she said softly.\n\n\"You are the clever one,\" he said sarcastically. \"Did it never occur to your teachers that it seems I go through girls much more quickly of late.\"\n\nMira shifted uneasily again. \n\nRillan could hear the increase in her heart rate. \"What?\"\n\nMira jumped in her seat at his quick question. \"What?\"\n\nHe shook his head as if he didn't believe her response. \"Yes, what. What exactly about my comment caused you to become nervous?\"\n\nMira's eyes dropped. \"Oh.\" She sat a moment in thought. She didn't want to insult him anymore than she already had. She felt so sorry for him at this point that she had almost forgotten she was frightened of him. Almost forgotten.\n\nRillan grew tired of waiting for her response. He stood up. \"I'm tired. If you've had enough conversation for one night I'll take my leave.\"\n\n\"No!\" Mira stood up. \"Don't go yet.\"\n\n\"Then answer my question.\"\n\nMira looked away from him again and walked over to the fire. Haltingly she said, \"I guess they think that the, uh, deaths have increased because you're growing more&hellip;\"\n\nMira heard his footsteps behind her. \"Bloodthirsty,\" he asked as he finished her sentence. Then she felt his breath on her neck. \"Cruel? Vicious?\"\n\nMira turned around to find herself face to face with him. \"Yes,\" she said suddenly feeling brave. \"Are you trying to frighten me?\"\n\nHe backed her into the fire hearth and pinned her against it, placing his hands on the mantle on either side of her. \"What advantage would I possibly have by frightening you?\"\n\nShe tried to push her way out of his arms, but he countered her movements and smiled at her, baring his fangs again. Her eyes widened, and then she pushed the fear down again. \"I suppose that you'd have the same advantage in frightening me this way as you had in frightening me by leaving me to wander alone in the dark or by leaving me alone in my room for weeks on end.\"\n\nHe was taken aback by her confrontation. \"What if I were to tell you that I haven't eaten in weeks.\" The black of his pupils bled out through the blue again and his eyes bore into her. \"How brave will you be when I decide to take you to my bed? Are you so lonely yet that you'll give in to that?\"\n\nMira swallowed hard. \"I don't know. Why are you being so manipulative?\"\n\nRillan moved away from her. She barely caught the change in his expression before he turned. \"I'm done for this day. Go back to your rooms.\" At that Rillan headed toward the door.\n\nHe had almost vanished completely into the darkness when Mira realized what he was doing and called after him. \"I know why.\" She heard his footsteps stop. \"You give us two choices. You or complete and utter loneliness. That's why we can't talk with anyone but you. That's why this place is so dark and frightening. Then you wait until we are so desperate from the loneliness that we willingly submit to anything just to be near another body. In a strange way you've set yourself up to be a savior so that you don't have to rape us.\"\n\nRillan's tone was sad and hollow. \"Go back to your room Mira. In a week's time I'll come for you. I won't be able to resist the thirst much longer. Prepare yourself for it.\" Then he was gone.\n\nThat night and through the next day Mira thought back to the first lessons she had been taught. The lessons in the beginning spoke of the great warrior who had come to the druids. He had been a good man. So this is what happens when a good man is turned into something that people believe to be inherently evil, she thought. He must truly despise himself. All he really wants is someone to care for him. It's hard to believe that he hasn't gone insane.\n\nIt took Mira most of the afternoon to reach the decision she finally came to. She soaked in a long bath, then put on one of the dresses in the closet that she was particularly fond of. It was a soft green and reminded her of spring. It wasn't one of the overly fancy ones. In another lifetime she may even have been able to own this dress. It fitted her personality much better than the heavy brocade and beaded gowns that it shared the closet with. She brushed her hair out and placed some barrettes in it. She had never owned jewelry so this seemed as good an occasion as any to wear them.\n\nMira stood in front of the mirror looking at herself. She decided that under the right light, she may even be considered pretty. She took a deep breath and realized that she was excited. She had been waiting a long time to lose her virginity. In some ways she was a little disappointed that it hadn't happened sooner. She was actually more scared that he wouldn't like her than she was of what else he may do to her. She pushed those thoughts out of her mind and resolutely walked out of the rooms and down the hall. Mira held the lantern high and stared into the darkness around her. She was familiar enough with where she was going at this point. She noted the sound of her feet on the stone floor and wondered how good his hearing was. She could feel a chill rush through the hall and wondered how cold it had become outside the cave. She thought about everything other than what she was doing. There was no point in dwelling now. Her mind had been made up. \n\nBefore she realized it she was standing in the room that she had now met him in twice. It was dark as it had been the last time she was here and he was nowhere to be seen. Mira turned around and headed out the door she had come in. Since she had thoroughly looked through this room for a door the last time she was here she was positive that his rooms had to be elsewhere.\n\nShe had passed several doors on her way to this end of the hall so she figured that she'd just have to start looking. She hadn't gone far when she came to the first set of doors. One led left and one led right. Well it's one way or the other. If one doesn't work I can go the other way. Mira walked up to the door on her right, turned the knob and opened it onto another hallway. She sighed. She hated that there was no light anywhere down here. Forcing herself forward she walked into the hall and the light from the lantern fell on a set of rooms similar to the rooms she was residing in. The only difference was that it was obvious no one had been here in a long time. There was a fine layer of dust covering everything. The bed wasn't made and there was nothing in the closet.\n\nMira turned and walked out of the rooms and reached for the other doorknob. When she heard a door slam somewhere further down the hall she jumped. It sounded as though it came from the direction of her rooms. She hear footsteps coming down the hall. They were heavy and fast. Suddenly her resolution failed her and she felt the need to hide. She turned the knob on the door and she slipped into the room closing it softly behind her. After a moment of heart pounding she thought to put out the lantern. She stood in the dark staring at the door she had just come through. The footsteps came closer. \n\nMira turned and softly padded down the hall into the main room at the end of the corridor. She was taken aback at what she found. This was what she had been looking for. Rillan Tiernay's rooms. There was a large bed similar to hers. The fire was lit and candles about the room were burning nearly completely down making the shadows dance strangely across the floor. The room smelled clean, like rain. That's when she noticed a small crevice in the cave wall that led up a shaft. There was a heave stone and metalwork cover that could be slid over it, presumably during daylight hours. She could smell fresh air wafting down the shaft and rain. It was pitch black but she knew that if there had been stars that night she would have been able to see them.\n\n\"You shouldn't be here.\" The cold voice made her jump. Mira turned around to see Rillan standing behind her glaring at her.\n\nShe swallowed hard. She had promised herself that she wouldn't let him frighten her. She was going to offer herself to him. That's what I was trained for. I belong to him. He's been more than reasonable waiting for me. \"I don't want to wait a week. I've come to you now.\"\n\nRillan was amazed at the strength in her voice. He almost believed that she wanted to be there with him. Almost. \"I'll not argue with that decision if it's truly what you want, but if we begin this and you change your mind I may not be able to stop.\"\n\n\"I don't want you to,\" she said in that same strong, resolute tone.\n\nHe reached out, allowing his fingers to graze the white skin of her neck. She shivered, from the coolness of his hand. Mira's eyes fluttered closed, and she breathed softly. She felt his fingernails tracing the line from just below her chin to the bodice of her dress. They continued around the rounded edge, then back up the other side of her neck, until his hand was pressed against her hairline. I never expected him to be so gentle, Mira thought, as she felt his other hand on the opposite side, turning her around and cupping her face. He's painted as bloodthirsty, a warrior with uncontrollable hunger. The druids never talk about this side of him.\n\nRillan watched Mira as his hands caressed her neck and cheeks. She had not flinched, as though he was a monster. The shiver that he felt against his palm was like that of an excited lover. He had expected frightened trembling. He leaned down, his lips only a breath away from kissing her. He still didn't quite trust her offering, coming as it did on the heels of his ultimatum. But she was soft under his touch, and he was nearly blind with hunger. He couldn't refuse her, not now that she was here. Her breath warmed his lips, and Rillan pulled her to her tiptoes to close the distance between them. The contrast always overwhelms me, he thought. Their warmth against my cold, balance. Mira accepted him, pressing her lips back against his. The kiss seemed to last forever. \n\nWhen Rillan released Mira from the kiss, she sighed. \"I wondered how that would feel,\" she said. \"I spent a long time wondering.\" Her eyes were still closed, and a small flush began to creep up her chest, beginning just above the bodice of her dress. Rillan smiled, reminded that she was so much younger than he was. He moved his hands down her neck, caressing, pressing palms on her shoulders. Mira felt the movement and held her breath in anticipation. I'm enjoying this, she thought, surprised. Finally she opened her eyes and held his dark gaze. \"So much I expected has been wrong,\" she admitted.",
        "\"Yes,\" he replied, simply. With one more sweep of his hands, he pushed the sleeves of her dress off her shoulders and few inches down her arms, effectively locking them in place and exposing more of her chest. One arm slid around her waist and held her body to his. He placed the other hand over her heart, to touch the place where her pulse had quickened while he kissed her. Warmth spread outward from beneath his fingers. Her skin was soft to the touch. Rillan leaned down again, placing small kisses around her jawline and down her neck. \n\nMira felt Rillan's kisses like the fluttering of butterflies against her skin. When his hand moved from over her heart, to caress her breast, she sighed. He hooked fingers into the bodice of her dress, and one nipple was caught between the cool, slender digits. It swelled, becoming a hard nub, and pressed against the fabric of the dress. His fingers tightened around that nub, squeezing and pinching. \n\nShe was so distracted by that pinch, Mira almost didn't feel the sharp teeth pierce her skin just above her breast. She cried out in surprise and pain, but he couldn't stop. After piercing pain where his teeth had entered, she could only feel Rillan's mouth moving against her skin. It was like a long, slow kiss. Even this is gentle, she thought, idly. I wonder what it tastes like. Time nearly stopped while he took her blood from her breast. Mira lifted her hands to his head and her fingers stroked into his hair. \n\nHis fingers had not stopped squeezing and twisting her nipple. It was a strange combination of pleasure and pain. The bite and then pressing lips and stroking tongue on her flesh. The pinching and fondling of her breast. Mira closed her eyes and listened as he made suckling noises at her breast. She heard soft moans and gasps as well, and it took her a moment to identify that they were coming from her mouth. When he released her breast, she could feel his absence. Somehow his taking from her had seemed completely right, at that moment. She was a little dazed. When she felt his lips press against hers she was surprised at first. Then she found herself wantonly leaning into the kiss. Her hands still in his hair urged him to go farther. She could taste warmth and copper and she realized it was her blood in his mouth.\n\nRillan straightened, and waited until Mira opened her eyes before speaking. \"It's pleasure and pain,\" he said. \"A very potent combination.\"\n\nMira agreed with a silent nod, watching him lick his lips of the fresh blood, in fascination. \"I don't know what I expected.\" \n\n\"You expected I would rip your pretty dress, and take everything you had to offer.\" Rillan sighed, disappointed. \"You expected an act of violence. In a week, you might have gotten what you expected.\" He leaned down to where his teeth punctured her skin and tongued around the holes, lapping at the trickle of blood that still oozed. Mira shivered again, in pleasure. Her skin burned where his tongue touched her. \"They do you and your sisters a disservice sending you here unprepared,\" he said in between strokes of his tongue on her skin.\n\nMira didn't reply. She couldn't have formed words if she wanted to. Besides, he was absolutely right, she had not been prepared for any of this. She had not been prepared for the darkness of the cave or how lonely she would feel. She had not been prepared for his gentle touch. She had definitely not been prepared for the arousal she was now feeling. Her arms reached for his neck, wanting to hold him to her breast. Rillan's fangs caught the edge of her dress and pulled down, freeing both breasts. He took a ragged breath before taking one nipple into his mouth and sucking. \n\nShrugging her arms out of the sleeves, Mira reached for Rillan. She found the ties to his shirt, and tugged. The knot untied and a portion of Rillan's chest was exposed to her touch. Mira traced a fingertip down the center of his chest and found the next tie, just above the buttons of his vest. In her haste, she pulled a little harder than she intended, ripping the fabric of the shirt and popping one of the buttons on his vest. She didn't hear the sound, there was rushing in her ears, like water. All she noticed was that it was easier to remove both the shirt and vest at the same time, pushing them down around his arms as Rillan had done with her dress.\n\nRillan raised his arms to circle her waist, not realizing that she hadn't quite finished with his shirt. His muscles flexed and the sound of ripping material was too loud for either of them to ignore. For a moment, they both stopped, a little surprised. Rillan released her nipple from his lips, looking down at his shredded shirt and bare chest. \"You're stronger than you look, girl,\" he said, smiling. Then he laughed. It rang through the cavern, and echoed in Mira's ears. The terrible intensity which had been constant in his expression broke with that laugh, and she couldn't help but smile along with him.\n\n\"Lord Tiernay, are you mocking me,\" Mira asked, coyly pushing her lips down into a frown. Rillan licked his lips and grinned at her. A day ago, the sight of his fangs bared like that would have scared Mira almost to the point of running from her duty. But now, she grinned back, laughing with him as he shifted his weight to sweep her into his arms and swing her around to the bed. He laid her down gently, and pulled her dress completely off her body. He took only the care needed to make sure the dress didn't tear as he removed it, then tossed it away into a corner. As he finished undressing himself, Mira closed her eyes and waited, not exactly comfortable, but not frightened anymore.\n\nShe could almost feel his gaze on her skin. He was watching her chest rise and fall, listening to the shallow breath. Rillan still hungered for her blood, but he wanted to taste the rest of her first. He knelt at the edge of the bed, and spread Mira's legs apart. Bringing his face close to her foot, he licked the heel. Mira felt his tongue tickle her insole, then gasped when the warmth of his mouth engulfed her big toe. He sucked and licked that toe, then the other four before dragging his tongue up the inside of her leg. Rillan stopped just short of her sex, then repeated what he'd just done on the other leg, again starting at the toes and teasing his tongue up Mira's thigh.\n\nRillan stared at the pink folds as he raised his hand to spread the lips. With one finger, he barely stroked the nub at the top of the long slit, causing Mira's body to writhe. Her fingers clutched the silken blankets in anticipation. Rillan trailed his tongue along the inside of her thigh and down into the dip just beside her sex. He listened to her moan hungrily as he worked his way with agonizingly slow strokes closer and closer to her center, He took his time liking her outer lips and then dipping into the valley beside the soft folds of her vulva. Her clit protruded proudly from its little hood and quivered, begging him to suck on it.\n\nRillan delighted in the sounds of her pleasure. There was something about still being capable of pleasing her that made him feel less of the beast he believed himself to be. Each time his tongue touched her gently needy moan erupted from her lips. He wasn't even sure she realized that she was making the sounds. But he never wanted her to stop.\n\nHer sex dripped with desire and Cullen finally gave in and let himself taste her. His tongue dipped deftly into her center. In one long stroke from her core to her clit she came for him. Rillan watched as Mira's body trembles and her breath caught in her chest. He sat up to stare at her face and reached down to tease her swollen clit as she convulsed. Her back arched up off the bed and her hands gripping the blankets.\n\nWhen the waves of pleasure subsided she stared up at him in wonder. He smiled as he looked down into her eyes. Mira wondered at the fact that the smile seemed so superficial. He wanted more of something. She sat up and stared into his eyes. She blushed a bit under his gaze. Rillan reminded himself that the minute she saw the other side of him she'd beg for death as all the others had. He had given up thinking that the next would be different a long time ago. Enjoy this moment, he said to himself. She's sweet and willing. She believes she can save you right now. Let her, enjoy her. \n\nMira couldn't even begin to imagine what caused the emptiness she saw when she looked into his eyes. But she desperately wanted to do something to change it. She reached up to touch his face and he closed his eyes, leaning into her hand. Then his hand came up to the back of hers. \"Make me feel like that again,\" she asked timidly.\n\nThe smile came back to his mouth and he turned to her hand, kissing her palm, before pushing her back down on the bed. \"As you wish,\" was all he said.\n\nRillan knelt between her legs and took his hard cock in hand. He groaned as he squeezed the shaft in his grip and then stroked the head up and down her slit. He watched her watching him. Her eyes were wide with uncertainty. He lined his cock up with her virgin entrance and pressed himself tentatively against her, looking into her eyes. Mira's body stilled and she whimpered. She closed her eyes and grabbed the bed sheets again as if to brace herself for his next movement. \n\nRillan took a deep breath and then forced himself past her maidenhead and into her body. She whimpered beneath him and her face contorted with the pain. \"Relax,\" he said gently and stroked her hair from her brow. He held himself above her, half his length inside her and waited for the fluttering walls of her sex to calm and adjust before pushing the rest of the way in.\n\nMira moaned as she felt him completely sheath himself in her pussy. His hand reached between them and his fingers began to dance on her clit. As pleasure began to seep through her once again she reached up for Rillan. To his surprise she pulled him to her and began kissing and nibbling at his lips. When her hips began to move beneath him, Rillan pulled his hand away and began to rock against her.\n\nMira stopped her kisses only to moan her appreciation of the slow gentle strokes he was torturing her with. Rillan took his time making love to her. He gave her whatever she seemed to want, alternating from kissing and suckling on her lips, neck, or breasts. He let her hands guide him over her body as he thrust into her in an agonizingly slow dance. When she came for him again he closed his eyes, pulled back from her lips and pressed deeply into her. As he felt her pussy convulsing around his shaft his body tightened and he flooded her with his own release. He held onto the sensation for as long as he could, gently thrusting into a few more times as the last of his molten heat spilled into her.\n\nRillan breathed heavily, as he braced himself on his elbows above her. When they both came back to reality, he stared into her eyes as if to say that he wasn't quite done yet. One more test for my brave little one, he thought. This had sent more than one completely compliant girl running from his rooms.\n\nMira stared at him uncertainly. The look on his face didn't match what they had just done. It was so contradictory. His touch and manor so gentle and giving and his eyes were so cruel and distrusting. Then his face changed. The handsome warrior seemed to distort, his skin paled and his eyes turned completely black and cold. In the darkness it was as though she was looking into empty sockets. The fangs that had frightened so before grew again and seemed to fill the whole of his mouth. Mira lay completely still as the monster she had feared took form on top of her. \n\nRillan waited a few moments as she took in the harsh reality of his horrific features. When she didn't begin crying or trying to escape, he leaned up on one arm and pushed her head to the side. The vampire opened his mouth wide allowing her to see not just two delicate fangs in his mouth, but numerous long, angry knives jutting from where teeth should have been. Rillan leaned down toward her neck, holding her head so that she wouldn't move and cause him to harm her. A tongue much too long for his mouth snaked out and laved along her neck, searching for a pulse. Mira trembled but her resolve held firm. Rillan was amazed as he felt her relax beneath him. When he put his mouth over her pulse, she took in a deep breath. As he bit down a soft whimper escaped her lips, but she didn't cry out.\n\nRillan drank to sate his hunger. He tasted her warmth again and as it flooded through his veins his body felt the heat that only came with feeding. Mira lay still. The room spun around her and she began to feel very tired. She could still feel him inside of her and the tired drifting feeling was accompanied with a gentle pleasure from where their bodies were joined. Mira moaned at the memory of what he had done to her moments before and pressed her hips against him as he continued to drain her body. Then the darkness settled over her and she lay still.\n\nRillan sat back and looked down on her motionless form. She was paler now that he had drained her. She slept softly. It was a rare thing when he considered keeping one of them with him while she slept after the feeding. As he thought about her hips pressing against him while he drained her even after she had seen his face there was a little piece of him that wanted to hope.\n\nAnger quickly took over his mind. He was annoyed with himself for letting her get to him. Mira was just as frightened by the others. The girl probably just had a more lascivious side to her than the others had. Growling, he got out of the bed and pulled on his breeches. He left his tattered shirt on the floor. He went to the corner of the room where he had thrown her dress and grabbed it, tossed it across her body and picked her up off his bed.\n\nI'll have to lock my door in future, in case she goes wandering again, he thought angrily as he carried her to her own rooms. He muttered and fumed the entire way there, not knowing why she had gotten to him so badly. By the time he had reached her bed his temper had cooled somewhat. He laid her down with a reluctant gentleness and stared at her a moment. Rillan laid her dress across a chair nearby and then returned to her side. He carefully pulled the blankets of her bed back and covered her. He took the time to brush her hair from her face and arrange her in the bed so that she looked comfortable. He felt like he was looking for excuses to stay near her.\n\nRillan started to lean down to kiss her cheek. It had been a long time since a girl had managed to spend a first night with him without running from him, no matter what time he spent preparing them for it. Anger hit him again and he pulled himself away. He stormed from her rooms, slamming doors behind him. Give her time. She'll be like all the rest, he told himself. \n\nWhen Rillan reached his own room he slammed the covering for the shaft closed. Dawn was approaching, he could feel it. He couldn't believe how much time he had her here. When he crawled into his own bed he could still smell her on his sheets. He took a deep breath and closed his eyes, allowing the nightmares to come for him as they always did.\n\n**************\n\nOkay, as it sits this was just a one shot deal. I've got no future plans for these two. Just warning you.\n\nBut I hoped you liked Mira and Rillan&hellip; I'll add them to the list of fun couples.\n\nYou guys are all soo cool with the comments and the feedback and the sticking me on the favorites lists and stuff. You have no idea how much I love the fact that people like reading my stuff! I can keep it up as long as you like. Or at least I'll try to&hellip;\n\nThanks to Meegs, she played a small part in a middle portion or two!!\n\nVotes, feedback, comments, * favorites* lol I can't believe that one! Talk about natural high! \n\n Tee Hee!"
    ],
    "authorname": "secretme",
    "tags": [
        "vampire",
        "druid",
        "dark"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-1"
}