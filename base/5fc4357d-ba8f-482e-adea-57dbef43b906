{
    "title": "Me & My Penis",
    "pages": [
        "To the women out there,\n\nI've talked to many of my girl friends, both virgin and not, about sex. What seems to come up most in our discussions is, The Penis. Most fear it, others set out to tame it. For the shy kinda girl, it is not something they care to think about or deal with. It's alien, it's foreign, it moves on its own. As females we don't quite know how to deal with this, as we have nothing that is like that, all our body parts are fastened down as best they can be with the occasional jiggle and bounce. I remember when I wanted nothing to do with penises, even after I had sex. But, I came to realize, that for a fulfilling, happy, exciting relationship, girls, know your penis!\n\nI never even looked at my first boyfriends \"Pedro\", but from what I remember about my first time, it was nothing to be amazed about. I mean, if your 16, just had your first sexual experience, and are thinking \"Um, that was it? I went against my faith and years of learning abstinence is best, for this???\" Yeah, sad. My next encounter with the \"love sausage\" was with my second boyfriend at 18. Again, no interest, no need to explore or learn about his body. My relationship with him ended with him forcing his cock on me, literally. Not very good experiences, but with my third boyfriend, I found myself mysteriously interested and fascinated by the product of his \"Y\" chromosome which dangled between his legs, wafting in breeze.\n\nIt's so different! Anything that can go from a flabby 2-3 inches to an 8-inch rock-hard behemoth, has to be one of the most compelling, amazing thing to watch. It did take more then one time for me to finally confront \"God\"(or little Tim, as I like to call him), but I was amazed at how much he filled me and completed me like neither one of my other boyfriends had. I knew he was bigger and thicker, so I was driven to see him.\n\nWow! How ugly can it get? I mean really, a common agreement between me and the girls I know who have wonderful penile relationships are: It's so ugly, it's cute! Like Chihuahuas or hairless cats. It's all shriveled and tiny and \"floppy\" when not in use, heavens, the balls appear huge in comparison, thoroughly dwarfing the little dangler. Yet when its like this, its incredibly mobile. You can take it at the base and move your hand and make it swing around like the rotors on a helicopter! I had never been so entertained by a minute object in all my life. Once, I actually found that you could press the balls up into the flaccid shaft and make it look kinda like two big bug eyes with long nose. He even let me draw eyes on it with a permanent marker! Is that love and devotion, or what?\n\nWhen we go to sleep at night, I like to rest my hand on his genital area and wait. I love the feeling of it starting to harden. It's amazing how you feel it move on its own, twitching under my fingers. Soon, it has definitely grown beyond my hand. Then, the most amazing thing happens! It starts to move back and forth on its own! Guys should feel special, they can control the random movement of their hardened \"fuck pole\". We can't do it with anything we have. Show me a girl who can \"wag\" her clitoris and then I'll be impressed. Not only is it fascinating to watch him in his own control, but you would be amazed at what a good joystick it makes. If you ever want to get a giggle out of your man, simply act out one of his lame computer games using the penis as the throttle.\n\nNot only does a girl have to get to know all the little wrinkles and waggles of her partners \"trouser snake\", she has to know the penis's two closest friends, the balls. These funny little sacks of flab look like somebody took walnuts and put them in a saggy latex bag. Really, these things are almost as fascinating as the penis. Not only are they funny looking, but they are covered in about 6 coarse hairs that are longer then anything you'll find on the chest. A man's whole \"swimsuit area\" is constantly under motion completely separate from the rest of the men's body, if the groin is its own being, then the balls are the brain. Not only is it wrinkly and separated into two spheres, it is under constant motion. You tickle the right side and the all the skin will wrinkle towards the touched area. You can make a game out of this. I can honestly say I have spent countless time sitting and watching the unconscious movement of the scrotum. Believe it or not, when you do this, you will also note that The Penis feels as though it is getting plenty of attention and put on a little wagging show for you accompanied by the shifting dance of the testicles.\n\nWe can find so many things about the male physique that is fascinating and worth exploring. Experimentation is the key to finding out all these different games and such. There is one thing to say, we can play with it, toy with it, pet it, stroke it, kiss it, whatever, but in the end, we only have to deal with it when we want to. We get the benefits while the men get that dangly feeling between the legs. We can laugh as we watch them adjust themselves from suffering from penis-and-balls-sticking-to-my-inner-thigh-syndrome. Giggle when you watch them have to adjust themselves because their willies get excited from you walking towards them. Ignore the fact that they can write their names in the snow while we squat, is it really worth the easy ejaculation or blue balls? No! \n\nWomen, take pride in your penises, get to know them, love them, name them. They will be your truest, most steadfast friends. Even if your man is mad at you, his penis will always forgive you. Not to mention, just the right touch, tap, and stroke, and he'll be moaning and forget what he was mad about. Take advantage of it, god didn't give men penises for their own use; they simply look after them till we're ready to play. I know that if we ever break up, the one thing I will demand is visitation rights to MY penis!\n\nSincerely,\n\nA woman in love with her penis"
    ],
    "authorname": "femihussy",
    "tags": [
        "humor",
        "penis",
        "playing"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/me-and-my-penis"
}