{
    "title": "Send The Fools Further",
    "pages": [
        "The rest of the tour crew knew my one rule: never mess with the speaker when my playlist was on Motorhead. Especially if it was \"We Are The Road Crew.\" So when I was under a riser platform tightening a few screws and all of a sudden the music stopped right before the solo, a soft, collective gasp rippled through the crew. I slowly scooted out from under the riser on my back, then sat up and looked to see who had the balls to silence Holy Lemmy.\n\nSam Forth of the duo of Sam and Sheila stood by the equipment case my phone was on. He hadn't shut the song itself off, but had dialed down the volume of the portable speaker to nothing. He was dressed in a turtleneck and sweats, and through the dense fog of irritation I though sweet Jesus that's an ugly fucking color.\n\n\"What do you want, Sam?\" I asked. Being my boss technically, he was the only one who could turn off my music and not get cussed out.\n\n\"I need to talk to you, Lars,\" he said, tapping a manicured nail on the metal part of the box.\n\nI sat there for a moment. Everyone around us went back to their business of putting Sam and Sheila's elaborate stage together. \"What about?\"\n\nSam rolled his eyes. \"In private, please.\"\n\nI grunted and got up, clapping grit off my hands. I whistled to my assistant, a gangly ginger guy named Lucas, and passed him my socket wrench. \"Tighten the rest of the bolts while I'm gone,\" I said to him as I left.\n\nI followed Sam through the back hallways of the arena he and Sheila were going to play in that evening. Though I use the term \"play\" rather loosely. I have respects for the pop artists of yore - MJ, Prince, Madonna, you get the idea. But Sam and Sheila played that more modern pop, the kind where the production is slick, the vocals are either mumbled or autotuned, the beats are assembled in a computer and each song has about five writing credits, and only one of them is the singer.\n\nCall me old fashioned if you want.\n\nSam's dressing room actually had a star on it, and he didn't hold the door open for me as we both entered. The prick had his own craft services in here, complete with caviar. Fucking caviar!\n\nThere were two women in the room. The first was Sheila, leggy, blond and botoxed just enough that the tabloids didn't drag her for it. The other was one of her backup dancers, a girl who I dimly remembered was named Mei. She was college age, early twenties or so, with a round, friendly face, a cute nose, and striking blue eyes framed by thick black glasses. Both women wore sweats and tour t-shirts.\n\n\"What's with the pow wow, Sam?\" I asked, forcing myself to look at him and not the delicious catering cornucopia off to my right.\n\nSam turned on his heel and sat down in a chair next to his paramour. \"Seeing as, Lars, this is the last show of the tour before we go on sabbatical and head overseas in two weeks, She and I decided that we wanted to... spice up tonight's show.\"\n\nI jabbed a finger at him. \"I'm not doing that thing with the risers. It's dangerous and you could hurt yourself.\"\n\nSam scoffed. \"Lars, Lars, relax. You made your point about that the first dozen times I've asked, and I totally respect your wishes. No, this is something completely different.\"\n\n\"We want it to be a surprise for everyone, including you two,\" Sheila said, running a finger along Sam's chin. \"But someone has to go get it, so we're sending the two of you on a mission.\"\n\nMei pushed her glasses up her nose with a finger in a motion that was strangely adorable. \"Where are we going?\" she asked, her voice carrying the faintest hint of a Chinese accent. \"What do we have to do?\"\n\nSheila reached behind her on her dressing stand and grabbed a sealed envelope. There was an address scrawled on the front in pen. \"Just take this letter, dearie, and head to this address. The people there will know what to do.\"\n\nI folded my arms. \"Sam, the stage isn't fully setup yet. I can't go traipsing around on some stupid errand - we're six hours until go time and we still need to do sound checks and-\"\n\n\"Lars, relax,\" Sam said, making a palms down motion with his hands. \"Take a chill pill. You've got a whole crew of roadies here that know how to do the setup, they can handle things.\" He brought his hands together. \"Please, buddy, it's for the show! I know how much you care about the show. Don't you want it to be as good as it can be?\"\n\nI dipped my head, thinking for a bit. It had been a long few months dealing with Sam and his crap. He was a needy little primadonna, always bitching about something or another. A few hours away from him sounded like heaven. But could the rest of the guys really get it done?\n\nSam held up a finger. \"Tell you what. I will write you a check for a thousand dollars, right now, if you do this for me.\"\n\nI sighed. He knew my weakness. \"Alright, fine.\"\n\n\"Excellent!\" Sheila cooed as Sam quickly made good in his promise. She passed Mei the sealed envelope. \"And remember, no peeking at what's inside. It's a surprise!\"\n\nSam pressed the check into my hand. \"I knew I could trust you, Lars. Now hurry hurry. Like you said, six hours to showtime!\"\n\nThe two pop starlets pushed me and Mei out of the dressing room and shut the door behind us. It was almost cartoonish. Both of us turned to look at the door, then at each other for a long moment. \"So...\" Mei said. She held out her hand. \"Mei Parker. Nice to, um, meet you!\"\n\nI shook it gently, my meaty mitt engulfing her hand completely. \"Lars Zetro.\"\n\nMei drew her hand back, her arms rigid at her sides. \"Well, good, okay! Should we, erm... get going?\"\n\n\"Just let me make a pitstop backstage real quick.\"\n\nThe two of us walked back through the concrete back halls of the arena until we came to where the roadies were. Lucas was busy doing as I'd told him with the bolts under the riser, and I explained things to him quickly.\n\n\"I'm going to be gone for an hour or two, tops,\" I said. \"You know how everything works, just run things until I get back okay?\"\n\n\"No problem, boss.\" Lucas gave me a fist-bump as I left with Mei in tow.\n\nWe walked out of one of the arena backdoors, and I fished my rental car keys out of my pocket. I'd made sure to get the rental written into my contract. Slumming it on the buses of a rock tour was one thing, but I had no patience for the army of tailors, hairdressers, and PR people that Sam and Sheila commanded. It was me, Lucas, and a few others in the car, trading off driving duties between towns and catching sleep where we could. Rough on our sleep schedules yes, but far easier to deal with than the alternative.\n\nMei actually had to pull herself up into the compact SUV. \"So this is the dude mobile?\" she asked. Her nose wrinkled and she blanched. \"Eugh, smells like it.\"\n\n\"That is the delicate bouquet of man stink and Old Spice,\" I said, twisting the keys so the car purred to life. \"New from Giorgio Armani, available for eighty-nine ninety-nine at your local high end outlet mall.\"\n\nMei snorted, the sound cute. \"Please. If it was Armani it'd be more expensive.\"\n\n\"You'd know that better than me,\" I said, firing up the GPS. \"Where are we headed again?\"\n\nMei read me the address. \"Place is called Rigby's. I think it's on the north part of town,\" she said.\n\nI grabbed the free end of the AUX cord and plugged my phone in. Mindful of my company, I skimmed over the death metal in my playlist and settled on some more classic stuff. Mei made a face as we left the parking garage with a German drinking song playing. \"What exactly are we listening to?\" she asked.\n\n\"Give it a moment.\"\n\nAs soon as I finished the sentence the vocals ripped free of the speakers, the guitars and drums following close behind. \"Motherfucking Accept,\" I said as I began to follow the GPS trail out of the parking lot and onto the roads.\n\nMei stared at the stereo for a few moments as the classic metal soared, then tactfully reached up and turned the volume down a few notches. \"I'd like to be able to hear during the show tonight, thanks,\" she said.\n\nI raised a finger as I took the turn onto the highway. \"I'll allow it. If you were one of the guys you'd owe me a beer.\"\n\nHer brow furrowed. \"Why's that?\"\n\n\"Driver commands the stereo and all related apperati. Rules are rules.\"\n\nShe snorted. \"Since when does the driver do that? Where I come from it's the shotgun that takes care of that.\"\n\n\"Uh uh.\" I shook my head. \"Driver controls the tunes.\"\n\n\"No way! Driver drives, shotgun controls the music and navigates, backseat is on snack duty.\" Her blue eyes glittered. \"It's the optimal setup.\"\n\n\"Optimal my left foot,\" I grumbled.\n\nWe lapsed into silence for a while as the song ended, and the shuffle ticked over to some Judas Priest as we crossed town on the band of Interstate that wound its way through the city. It was relatively low-key as far as cities go, with most of the skyscrapers occupying a few square miles of land near the bay with the buildings getting shorter and flatter the further out you went. But it had an amphitheater that played host to a hockey team and could be easily converted into a concert space, so here we were making a stop. I'd been here once or twice before, and I dimly recognized the neighborhoods I'd visited before, the one and two-story buildings of an older, more run-down section. Tucked down there were death metal bars and hole in the wall venues that took all comers, from rap to metal to whatever the heck retrowave was.\n\nAfter an uncomfortably long time of not saying anything, Mei piped up as she bobbed her head in time with the riff to a Sabbath B-side. \"I know this one. My dad used to listen to it in the garage while he worked on his car.\"\n\n\"What kind of car?\"\n\nShe shook her head. \"Never paid attention, really. Something low and boxy.\"\n\nI took a turn off the highway, checking the GPS to make sure were on the right track. \"Valiant? Firebird?\"\n\n\"Dunno.\" Mei leaned back in the seat, her eyes looking me up and down. \"You seem like... I don't know, the exact opposite of what a roadie for Sam and Sheila would be like. You're way more old school, classic rock. What brought you out of the bars and onto the pop stage?\"\n\nI stopped at a light and turned in the seat to look at her. \"Who wants to know?\"\n\nMei blushed and looked away. \"W-well, I mean...\"\n\nI chuckled and patted her shoulder. \"No worries.\" The light turned green and I accelerated slowly, keeping one eye on the GPS and another on the road as we went. \"Money. I'm a month behind on my house payment. While touring with metal and rock bands is nice, it's not exactly the best way to pay the bills.\" I shrugged. \"Heard S and S needed a roadie and for what they offered it was too good to pass up.\"\n\nMei put her head in her hand and stared out the window, the afternoon sun playing off her glasses. \"Well, you've lasted longer than the last head stage tech. He only put up with Sam for a month before bailing.\"\n\nWe were getting close, the GPS indicating we would be at our destination in five minutes. \"No question why,\" I said, turning into a neighborhood. \"If the money weren't as good as it was I'd have left back in Kansas when he tried to hit me with the beer bottle.\" I looked at her for a moment. \"What about you? What brought you on this tour de force?\"\n\nShe fidgeted. \"Well, um... hmm.\" She didn't say anything else beyond that. I knew a touchy subject when I heard one, so I buttoned up my lip and focused on getting us the rest of the way to where we were going.\n\nWe pulled into a single story plaza. You know the kind - the ones that have a grocery store or Walmart as their centerpiece with other assorted shops taking up the spaces around it. Usually one or two of them are vacant with For Sale signs in the smudged windows. This one had a whopping four, all of them at the very end. The GPS was pointing us to the shop right before the vacant ones, which I hoped wasn't some kind of omen. A sign on the side of the building proclaimed it as Rigby's Records.\n\nMei and I got out of the car and walked up to the storefront. The windows were blacked out, though upon closer inspection I saw that it was actually large pieces of black paper taped in the corners and at regular intervals along the inside of the windows. \"This looks like your kind of place,\" Mei said, her hands on her hips. Her posture made her tank top lift slightly, exposing a line of skin around her waist that my eyes lingered on for a moment longer than was probably proper.\n\n\"It honestly does,\" I agreed, grabbing hold of the door. \"Be ready for anything. The fact that Sam sent us here makes me feel like something's up.\"\n\nDespite my paranoia, the inside of the record store was pretty normal. Rows and rows of vinyls were set up in boxes lining the tables, ripe for flitting through. Each table had a few placeholders indicating what types of records were on a given table. The walls were lined with vintage rock posters from the 70s and 80s, as if they'd been yanked from my childhood room and plastered up. A few ceiling fans turned lazily overhead.\n\nBehind the counter was a guy who looked about my age with his feet propped up, watching something on a laptop with some Chinese takeout in his hands. He perked up as we walked in. \"Hey, guys,\" he said in a scratchy voice. \"What can I do for ya?\"\n\nI walked up to the counter and fished the letter out of my pocket. \"We just came from the arena across town,\" I said. \"We're with Sam and Sheila, the pop act. They sent us here with this letter for you, said it was a big secret or something.\"\n\nCounter Guy made a face and took the letter from me. He slit the envelope with a letter opener that looked like a guitar. As he took the letter out and read it, I turned and watched Mei. She was poking around the shop, her slender fingers flipping through a box of vinyls. Her lips silently mouthed the titles of the artists, and every so often I'd see the tip of her tongue flit across her bottom lip. The motion was quick, but when you've spent your whole life working around guitarists who play wicked fast, you learn to catch motions like it. I watched it happen a few times, consciously reigning in my brain before it wandered down imagining that tongue and those lips engaged in other activities.\n\n\"Hey, buddy.\"\n\nI started and turned back to the clerk. \"Uh, yeah?\"\n\nThe guy was sealing a new envelope with his tongue. \"You gotta take this thing to a different place. Your boss got the wrong Rigby's.\"\n\nMy brow furrowed. \"Uh, what?\"\n\nHe passed the envelope back to me. \"You got the wrong Rigby's. There's another place across town, I put the address on the envelope. Don't worry, people get my place and theirs mixed up all the times.\" He offered me a sympathetic smile. \"Google Maps, right?\"\n\nI sighed and took the envelope back. \"Yeah. Google Maps. Thanks, buddy.\"\n\nMei joined me as I walked back through the store. \"So where do we have to go?\"\n\nI punched the new address into my phone as we got back in the car. After the app computed for a moment, I sighed and leaned back into the seat. \"Back across fucking town.\" I checked my watch. Three hours to showtime. We could still make it.\n\n\"Well,\" Mei said, patting my arm on the center console. \"No use sitting around here grousing about it. Let's get going.\"\n\n\"Yeah.\" I put the car in gear and got us out of the plaza and back onto the highway. We got stuck at a red light for a few minutes, leading me to drumming my fingers on the steering wheel.\n\n\"Money.\"\n\nI looked at her. \"Hm?\"\n\n\"Money. That's my reason too.\" Mei sighed and leaned back in her seat. Her eyes were closed against the setting sun shining through the passenger window. \"College tuition isn't going to pay for itself, you know.\"\n\nI kept tapping my fingers against the steering wheel. \"I wouldn't know. Didn't go.\" The light turned green and I hit the gas.\n\n\"You never went to college?\"\n\n\"Nope,\" I said, popping my lips on the P. \"Finished high school, immediately went on the road with a friend's band doing stage stuff. Got paid fifty bucks a night.\" I smiled. \"Good times.\"\n\nMei smiled. \"Sometimes I wonder if maybe that was the better decision. I went to college because I felt like I had to. Did my time, in and out with a degree in four years.\"\n\n\"What was your major?\"\n\n\"Music theory. I play the violin.\"\n\nI was taken aback as I changed lanes on the highway. \"Wait - if you play the violin, then what the actual hell are you doing here on this tour?\"\n\n\"Money, you doof!\" Mei laughed. \"I just said that!\"\n\nI coughed. \"Well, what I meant was-!\"\n\n\"I know, I know,\" Mei waved me off. \"I haven't been able to do anything with my degree since I finished school, and like you said, bills don't pay themselves.\" She blushed a little. \"I used to do some... dancing back when. It's how I was able to get through college.\"\n\nI had been around the block enough times and in enough dingy bars and clubs to know exactly what kind of \"dancing\" she was probably referring to. She obviously didn't like talking about it, so I wasn't about to force the conversation. So I steered it in a different direction. \"Do you like being a part of Sheila's group?\"\n\n\"Ugh.\" Mei took off her glasses and pinched the bridge of her nose. \"Gives me a damn headache working for that bitch.\"\n\n\"Harsh.\"\n\nShe gave me a sidelong look, her eyes just as striking without the glasses in front of them. \"Please, like you truly enjoy working for Sam.\"\n\nI snorted. \"Oh, for sure! Who wouldn't love working for an egomaniacal pop star who's constantly pestering you about how high you can make the stage rise and 'can't you just get it up another ten feet so the spotlight hits him just right,' and you constantly tell him no, because it's a freaking safety hazard and my job is to keep everyone onstage safe.\" The car noise was getting obnoxious, so I used one hand to cue up some more tunes while I drove.\n\n\"And I just love working for a starlet with her head up her own ass who always sticks me at the back of the dancers because, and I quote, 'my nose is too big.'\"\n\nI turned to look at her. \"It is not!\"\n\n\"Right?\" Mei poked and prodded at her face. \"I have a cute nose.\"\n\n\"You totally do!\" It slipped out before I could stop myself, and I immediately tried to recover. \"Well, I, erm, what I meant was-\" She's a decade your junior, Lars, way to be a creep.\n\nMei giggled and brushed a lock of her hair behind her ear. \"Well, thank you, you handsome roadie you.\"\n\nI coughed politely, and we lapsed into silence for the rest of the trip to our next destination, carried on by more Priest.\n\nThe second Rigby's turned out to be a clothing boutique, which begged a question as I got out of the car. \"Why would a ladies' clothing store be named after a dude?\" I wondered aloud as we got out, the sun beginning to set.\n\n\"Beats me,\" Mei said.\n\nI held the door to the place open for her, and we both walked inside. The air smelled much cleaner than in the record store, piped through vents in the ceiling. There were round racks of clothes from wall to wall, starting with plain shirts, blouses and pants in the front and moving towards more... racier garments in the back. We weren't the only ones there, a few other women searching for their next outfit in the store. The counter took up the entire back wall, manned by two ladies who were reading a fashion magazine. Next to the counter was a curtained off area with red neon lights proclaiming it to be The Fun Zone. I pointed it out to Mei, saying nothing. She let out a noise that was somewhere between a giggle and a snort, and I felt my soul brighten a little bit.\n\nThe two ladies at the front perked up as we walked in. \"Hello!\" one of them chirped. \"What can we do for you?\"\n\nMei tapped my side. \"Let me have the letter, I'll handle this one.\"\n\n\"By all means.\"\n\nMei beamed at me. \"Thank you much.\" She walked up to the counter, and I hung back a little, trying to keep my eyes from wandering around or looking at her. I checked my phone while cocking one ear towards the conversation Mei was having with the clerks. It was six forty-three. Sam and Sheila went on at eight. We would have to boogie to get back to the arena in time for the show.",
        "The clerks took the letter and opened it, both of them reading it. Their eyes flicked back and forth from the letter to us, then back to the letter. One of them made a face. \"Well...we've got some bad news for you.\"\n\nI jammed my phone back into my pocket. \"What?\"\n\nThe other clerk made a face. \"You guys got sent to the wrong place.\"\n\nMei frowned, putting her hands on her hips and making her shirt lift again. My eyes lingered on her lower back, where I could see the faintest line of pink where her sweats didn't cover her panty line. \"What do you mean?\" she asked. \"We just came from another place that told us we were in the wrong place. This is supposed to be the right place.\"\n\n\"Well...it's not.\" The first clerk grabbed another envelope out from beneath the desk and stuck the letter in it, then wrote another address on it with a Sharpie. \"This is where you really need to go.\"\n\nThe second clerk tapped her coworker. \"Don't we have the thing for them?\"\n\n\"Oh, you're right!\" She held up a finger to us. \"Come with me for a second!\"\n\nMei and I shared a glance, then followed the clerk through the curtain and into The Fun Zone. The entire back room was lit up in deep reds and purples, casting the lingerie on the racks into sharp relief. The clerk went to the back and rummaged about for a moment. I studiously kept my eyes fixed in the far wall, refusing to fall to the temptation of the sight of satin and lace. I would be strong, dammit.\n\nThen out of the corner of my eye I saw Mei examining one of the ensembles. She was biting her lip, and even in the red light of the room I could see the blush on her face. The top in her left hand was a lacy number, made out of a bunch of connected straps rather than a single piece of fabric. The bottoms in her other hand were a laughable pair of panties, almost nothing. I couldn't tell whether the bit I could see was the front or the back. It didn't look like it would cover much either way. Then of course I started thinking about what Mei would look like while wearing them, that thin piece of garment flossing her ass, and the room felt about twenty degrees warmer than it had than when we'd walked in.\n\n\"Here it is!\" Both Mei and I jumped, and she hurriedly put the lingerie back on the rack.\n\nThe clerk pressed a plastic package into Mei's hands. \"Please oh please can you deliver this to where you're going? We totally forgot to send it out earlier.\"\n\nI reigned in my thoughts. \"I don't know if that's going to be possible,\" I said. \"We're on a tight schedule.\"\n\n\"But it's the same place!\" the clerk protested. \"You'd be doing me a huge favor!\" She clapped her hands together. \"Please?\"\n\n\"Come on, Lars,\" Mei said. \"She's right. It's not terribly out of our way. Plus we have to go there anyways for Sam and Sheila.\" She put the package under her arm and gave me a plaintive look.\n\nHer puppy dog eyes bested my attempts at resistance. \"Fine,\" I grumbled, fishing for the car keys. \"But this had better be the real deal this time.\"\n\nWe left the clothing store, hopping into the car quickly. The GPS indicated we could make it to our destination, then be back just a few minutes after the concert started. A bit unprofessional, but also not unwarranted based on the day we'd had.\n\nI called Sam as we got back on the crosstown expressway. He picked up on the third ring. \"Hell-o?\" he sang, sounding like he was in the middle of his warmup.\n\n\"Sam, it's Lars.\"\n\n\"Oh hey,\" he said, his voice dripping saccharine. \"How's my favorite roadie doing?\"\n\n\"Not great. You gave us the wrong address the first time, then that guy gave us the wrong address again, so now we're on our way to where we really need to go. You'll have your thing just after the show starts, I can stealth onstage and gst it to you, whatever it is.\"\n\n\"Wonderful! Hurry back!\" The line clicked without even a goodbye.\n\n\"That was almost cordial,\" Mei teased.\n\n\"He's a primma donna, sure, but he's far from the worst person I've ever worked for,\" I said. I set my phone back on the dashboard. \"Even if this whole afternoon has been like a friggin' fetch quest.\"\n\n\"How much EXP do you think we'll get?\"\n\nI cracked a smile. \"Hopefully a lot. And several beers.\"\n\n\"Eh, you strike me as more of a Viking,\" Mei said, miming stroking a beard. \"Seems like you'd be more of a mead type.\"\n\nI wondered what she saw, looking at me. Was it the same thing I did in the mirror, a guy past his prime chasing whatever money he could just to keep himself afloat? Did she see the few hairs that were already starting to go grey? What about the thickness around my waist? Why was I even concerned about that?\n\n\"Mead's alright,\" I replied lamely.\n\nMei reached out and touched my arm. \"Everything okay?\" she asked, her eyes kind.\n\nI shrugged one shoulder, trying not to let on that the touch of her fingers alone seemed to have magical \"give late thirties roadie a raging boner\" powers. \"Just focused. I don't want to be late getting back to the show.\"\n\nHer fingers didn't leave my arm. \"You seem awfully devoted to getting back in time despite the fact that you don't like Sam.\"\n\n\"It's...\" I tried to find the words. \"It's like a base level of professionalism thing. I still work for the guy, I still need to be there in case something goes wrong.\"\n\n\"But aren't there other guys who can pick up the slack a bit? You're not the only roadie.\"\n\n\"Yeah, but still.\" I squared my shoulders. \"Consummate professional, that's me. If I slack off here, it might reflect badly on me.\"\n\nMei frowned, and slowly took her fingers off my arm. I had to stop myself from asking her to put them back on.\n\nA series of red lights slowed our progress, as if the universe said \"let's fuck with Lars for right now.\" When we got to our destination I was more than a little antsy. I took the turn into the parking lot far quicker than I should have, and I felt the back wheel clip the curb. That was okay, though. We were where we needed to be.\n\nThen I looked up and realized we were in the parking lot of a strip club named Rigby's.\n\n\"You've gotta be kidding me,\" I said.\n\n\"Somehow, I can totally believe that there's this many places in this town named Rigby's,\" Mei said, unclipping her seatbelt and opening her door. \"Let's see what's up.\"\n\nI got out of the car and followed her, my mind going a mile a minute. If this really was the place, what the hell were we picking up? Drugs? Doubtful, unless Sam had suddenly started feeling froggy. Strippers? Also highly unlikely, him and Sheila were married and loved to boast about how they were monogamous in the face of \"music's typical excesses.\" Then again, that could also totally be projection from one or both parties. So maybe we were picking up someone skeezy.\n\nThere was no line out front, befitting a Thursday night. The bouncer was noodling around in his phone as we approached, though he looked up as Mei and I got close. \"Y'all can go right on in,\" he said, waving us by.\n\n\"Actually, we were asked to deliver something here,\" Mei said. \"Well, now two somethings.\"\n\nWe explained everything to the bouncer quickly, and when we were done, he nodded. \"Lemme go fetch Marty. He'll know how to help you guys.\" The bouncer left, cinching a velvet guard rope in front of the entrance as he did.\n\n\"Like that's going to stop anyone,\" I muttered. Mei grinned as I fished out my phone and checked the time. Twenty minutes to showtime. \"Come on, come on, come on...\"\n\nTen minutes later the bouncer appeared out of the club, leading another guy. Marty wore a tweed suit with a green tie, his brown hair gelled and coiffed. Not too shabby for a skin club owner.\n\n\"Hey there!\" he said, flashing pearly white teeth and shaking both our hands vigorously like a circus carnie. \"What can ole Marty do for you?\"\n\n\"Well, the girls at Rigby's boutique asked us to bring you this,\" Mei said, handing over the plastic package. \"Because we were already on our way to bring you this letter from Sam and Shiela.\" She produced the letter and put it on top of the package.\n\nMarty took hold of the envelope and ripped it open, his eyes skimming the letter. \"Hmm.\" His eyes widened. \"Well, you know what, funny you should mention it-\"\n\nI stared at him. \"Do not. Fucking tell me. We have the wrong place.\"\n\n\"Well, erm...\" Marty's fingers clutched at the paper.\n\nQuick as a flash I yanked the piece of paper out of his hands, tearing a corner as I did. I turned away and walked out into the parking lot under a light so I could read the single sentence printed on the page better.\n\nSend the fools further. Below was a list of addresses, all of them of establishments named Rigby's throughout the city.\n\n\"Lars, that was rude!\" Mei scolded as she sidled up next to me.\n\nI thrust the note in front of her. \"What the hell does this mean?\"\n\nHer eyes flicked across the page and her brow furrowed. \"I... don't know.\"\n\nI looked up and scanned the parking lot, my brain slowly putting the pieces together. It all clicked when I looked at the strip club's neon sign and read the advertisement on the letter board.\n\nTONIGHT - APRIL FOOL'S AMATEUR NIGHT. I had completely and utterly forgotten what day it was. Things like that were meaningless on the road - it was always \"in a week,\" \"in three days,\" \"in an hour.\"\n\n\"Son of a bitch...\" I muttered.\n\nMei followed my gaze, and reached the same conclusion I had. \"Son of a bitch,\" she echoed.\n\nI whirled around and stomped over to Marty, who looked around frantically for his bouncer buddy. As he started to speed walk away I grabbed him by his collar and spun him around.\n\n\"I've got a few questions for you, pal,\" I growled.\n\n\"Please don't hurt me!\" Marty yelped.\n\n\"Sam and Sheila put you up to this, didn't they?\"\n\n\"Okay, okay, okay, yeah, yeah they did!\"\n\nMei appeared at my side, putting her hand on my arm. \"Easy there, tiger.\" She looked to Marty. \"Where were you supposed to send us next?\"\n\n\"W-whatever the next address on the page is,\" Marty said. \"They wanted us to just keep sending you guys along, me and the owners of all the other Rigby's around town.\"\n\n\"And you thought we'd be dumb enough to fall for that?\" I snapped.\n\nMarty actually offered me a wry smile. \"Well, I mean, you didn't catch it after the guy at the record store told you you had the wrong address.\"\n\nMei and I looked at each other. She grimaced. \"He has a point.\"\n\n\"But why?\" I asked Marty. \"Why go to all this bother?\"\n\n\"I dunno! All he did was say he'd give me a thousand bucks to keep this thing going. Apparently this is some old Irish prank or something. Just to keep sending you guys along until you got the drift.\"\n\n\"No no no, Sam wouldn't go to all this trouble just to fuck with us,\" I said, letting Marty go and turning in place. \"He wanted something...\"\n\n\"Look, if you're done manhandling me pal, I need to get back inside,\" Marty said, rubbing his suit jacket off as if I'd left some residue on it. \"I need to finish getting the stage ready for the contest tonight.\"\n\nThe stage. \"That motherfucker!\" I yelled. I ran to the car, yanking my phone out of my pocket and hitting Lucas's number on the speed dial.\n\n\"Lars, wait!\" Mei said, chasing after me.\n\nLucas picked up on the fifth ring. \"Lars? Where you at, man?\"\n\n\"Getting sent on a wild goose chase by fucking Sam,\" I huffed, fumbling with the keys. \"Did he tell you to jack up the main stage riser?\"\n\n\"Uh, yeah, why?\"\n\nMy hand tightened on the phone so hard I felt like it was about to crack in two. \"I keep telling him not to take it that high! It gets unstable and he could fall!\"\n\n\"Shit. Everything's already locked in place!\"\n\n\"Well then delay the show start and fucking unlock it,\" I said, stepping up into the SUV. \"And keep Sam in the back so I can tear him a new asshole when I get back.\" I took the phone away from my ear. \"Come on, Mei, we gotta get back!\"\n\nMei looked at me, then folded her arms and stood still. \"I'm not going.\"\n\nI stared at her for a second. \"Lucas, get that thing unlocked and lowered, I'll call you right back.\" I killed the call and slid back out of the car, walking back to her. \"What do you mean?\"\n\nShe was hugging herself again, her hands gripping her elbows. \"I'm not going back. I don't want to go back.\"\n\n\"Why?\"\n\n\"Don't you get it? I'm not here by accident. They sent me with you so I wouldn't make it back to the show on time.\" Mei hung her head. \"Sheila's been making it clear she doesn't think I'm good enough for her. Why should I bother, then?\"\n\n\"Don't be like that,\" I said, putting my hands on her shoulders. \"We have to go back. We can't just let them walk over us like this.\"\n\nShe looked up at me, smiling gently. \"You can fight this battle if you want, Lars. But I think I got the message quite clearly.\" She looked back over her shoulder at the strip club. \"As for me, I think I'm gonna have some fun since I'm here. I'll catch a taxi or an Uber back to the arena later.\"\n\n\"Mei...\"\n\n\"Go on, you big lug,\" she said, giving me a gentle push away. She was putting on a brave face, but I could see in her beautiful blue eyes she was hurting bad. \"Yell at them enough for both of us.\" Mei turned and walked across the parking lot, her head and shoulders slumped.\n\nMy desire to go after her and comfort her was overruled by my desire to punch Sam in the face. I hopped back in the SUV and gunned it out of the strip club parking lot, neatly cutting off a Mercedes turning into the lot as I sped off towards the traffic light to make the U-turn. I hammered my hands on the steering wheel, seething with anger. The cocky little prick thought he could one-up the big, stupid roadie, huh? I'd give him a piece of my mind when I got back. The clock read 8PM. Showtime.\n\nAt 8:01 as I was speeding down the road back to the arena my phone rang again. \"Lucas, talk to me,\" I answered.\n\n\"Okay, so...\" Lucas's voice was hesitant. \"Sam threatened to fire me if I tried to adjust the stage platform, and when I tried holding him up he got these two big security dudes and scared the crap out of me. There was nothing I could do, man.\"\n\n\"That asshole's not going to have a road crew by the time I'm done with him,\" I growled, blowing through a light as it turned yellow.\n\n\"Yeah, also about that... he's told security not to let you back into the building until after the show is over.\"\n\n\"What?\"\n\n\"Dude, he is really set on the stage being as high as it is. Is this really worth it?\"\n\n\"Of course it is...\" I started to say. I trailed off as I came to a red light. Sam clearly wasn't going to listen to me about the stage, to the point where he'd orchestrated this elaborate prank to get me out of his hair so he could get the other roadies to follow his whims. Seemed that Sheila had also taken the opportunity to rid herself of someone she didn't care for either. It was scummy, rude, and downright petty.\n\nBut it had also net me a nice few hours with Mei. She was fun to talk to, and cute to look at. And it didn't sit right with me just leaving her be at the strip club.\n\n\"You know what,\" I said to Lucas. \"Sam wants me gone for the night, I'll stay gone. I needed a night off, anyways. But just as a precaution, you may went to get ahold of some EMTs and a stretcher for when he falls off that stage.\"\n\n\"You got it, boss.\" Lucas hung up, and I turned the car around and drove back to the strip club.\n\nThe bouncer wasn't there when I walked up, so I was able to walk inside unobstructed. The club was dimly lit, with a stage off to the right and a smattering of tables occupied by a decent amount of guys and a handful of women. I couldn't see Mei anywhere. But I did see someone else.\n\nMarty jumped as my meaty hand clapped down on his shoulder. \"You again?\" he squeaked.\n\n\"Relax, buddy,\" I said. \"I'm just looking for my friend.\"\n\n\"The cute Asian gal? She entered the contest tonight.\" Marty inclined his head towards the back. \"I can't let you backstage, though, pal. Safety concerns.\"\n\n\"No problem,\" I said, patting him heavily on the shoulder. \"I'll just hang out. What kind of beers you got?\"\n\nMarty gave me a couple free beers and parked myself at a table in the back just as the contest started. Marty went through a very carny-esque opening spiel, though I saw he kept glancing my way as if he was afraid I'd storm the stage. I simply stared him in the eye and knocked back half my beer in one go as he introduced the girls. Most of them did manageable, shaking it to electronic jams or disco classics. One of them, a slender black girl, did a routine to ELO's \"Strange Magic\" that piqued my interest simply because of the song choice.\n\nI was checking my phone for any updates from Lucas or the roadies when I heard the classic opening of \"Rock of Ages.\" I looked up just in time to see Mei slowly strut out onto the stage, and my jaw hit the floor. She was wearing it. The ensemble I'd eyeballed in the boutique earlier. The corset top hugged her torso and pushed up her breasts, and from the way they shone in the stage lights I wondered if she'd applied some lotion to them before coming on.\n\nThe crowd immediately started paying attention as Mei began. She looked like a completely different person. She turned, hiking her hips and running a hand up the back of her leg over her ass. My perverted thinking in the boutique hadn't been far off - the bottoms were almost nonexistent, disappearing into the cleft of her ass. Mei looked over her shoulder, and her eyes met mine. I saw them widen for a moment and a blush creep across her face. I held her gaze and gave her a little nod, projecting the thought \"go on\" at her as hard as I could.\n\nMei only missed a few beats of the song while we shared the moment. Then she composed herself and kept going, grinding herself against the pole onstage. I relaxed into the chair, allowing myself to be open in my admiration of her. Mei's eyes kept meeting mine as she went, hanging off the pole with her legs grapevined around it, her breasts looking like they were about to fall out of her corset top at any moment. Every guy in the place was leaning forward, but I kept myself still, my hands gripping the table and not pawing at the erection straining against the confines of my jeans. Something passed between us as she kept going through the guitar solo, running her hands all over herself with her eyes still locked with mine. She wasn't wearing her glasses, likely because they would've slipped off during her routine, but I kind of missed them.\n\nThen the song finished, and the old Mei came back. She stood demurely and bowed as the club applauded. I stuck two fingers in my mouth and wolf-whistled, which made her shoot me a bemused look as she left the stage.\n\nThere was only one other woman who performed after Mei, and after she was finished the club voted by show of hands for who would get the cash prize. The black girl who had done the routine to \"Strange Magic\" wound up winning by one vote over Mei.\n\nAfterwards, Mei disappeared into the back, and I got up and went outside, hoping the open air would do something about the raging boner confined in my pants. I checked my phone again. There was a message from Lucas. Show's half done. No problems yet. Big stage thing is coming up soon, though. Did what you suggested and got a few EMT's on standby.\n\nGood job, I texted him back. Will be back in a little bit.\n\n\"Texting someone important?\" Mei sauntered out of the club towards me. She was back in her street clothes.\n\n\"Just Lucas,\" I answered. \"You totally should've won that, by the way. Leppard beats ELO any day.\"\n\nShe smiled. \"That's what the gal who won said. But what can you do? Besides, I had fun.\"\n\n\"Where did you get the outfit you used?\"\n\n\"It was what was in the package from the clothing store,\" Mei said. \"I managed to convince Marty to let me use it because I was oh so troubled.\" She mimed a dramatic posture.",
        "I laughed. \"Not bad!\"\n\nMei inclined her head. \"What brought you back?\"\n\n\"Well, apparently yours truly has been barred from entering the arena until the show's over,\" I said, tapping the phone against my thigh. \"And I didn't like the idea of you being all alone out here with no ride.\"\n\n\"Such a gentleman,\" Mei said, leaning against me. \"Sure it wasn't just to watch me shake my ass onstage?\"\n\n\"What?\" I spluttered, drawing the word out. \"N-no, don't be ridiculous!\"\n\n\"Mmm hmm,\" Mei said, nodding with a bemused expression on her face.\n\nMy face was burning, and I knew that if she looked down she was liable to see the bulge that was still partially visible in my pants. \"Should we head back, I guess? We can just wait it out behind the arena.\"\n\nMei nodded, her eyes still sparkling. \"Sure. But you've had a few drinks and you've been doing all the driving today, so I'll take the wheel. Fair enough?\"\n\nShe had a point. I passed her the keys. \"Deal.\"\n\nMei had to adjust the seat in the car multiple times before she found a happy spot. \"It's like I'm driving a freaking tank,\" she muttered as she turned the key.\n\n\"It's not that bad, come on.\"\n\n\"I drive a Prius!\" she protested as she pulled out of the strip club. \"This is a bit weighty for me, cut me some slack!\"\n\nI laughed and leaned back in the seat, scrolling through my phone's playlist for something chill. I settled on Alice Cooper and hooked up the phone to the car's speakers.\n\n\"What happened to driver picks the music?\" Mei asked.\n\n\"The current driver just explained that she's not that good at driving big vehicles, therefore DJ privileges go to shotgun. New rule.\"\n\n\"You ass,\" Mei said, smacking my arm lightly.\n\nI snickered and settled back in the seat, turning to look out the window. I still felt heated from watching her performance, and knew that I'd probably be jerking off to the memory of it for a while. \"I wonder if Sam will actually have the balls to fire me,\" I said. \"Or if he's going to keep pulling stunts like this to get rid of me.\"\n\n\"If he does, why not just quit?\" Mei said, taking a turn slowly. \"There's got to be some big rock tours out there that could benefit from having an experienced roadie.\"\n\n\"Maybe.\"\n\nShe grinned. \"Probably more opportunities for you to get laid there. Most of the gals at these show's aren't looking for rough and tumble guys like you.\"\n\nI shrugged. \"They're allowed to. I'm not that impressive.\"\n\nThat remark earned me another light smack. \"Don't say that, you doof.\"\n\nSilence stretched between us after that as we went through several more lights and intersections. It took me a minute to realize that we weren't heading directly back to the arena and I lifted my head. \"Where are you going?\"\n\n\"Shush.\"\n\nI kept my mouth shut as Mei took a turn into a little parking lot by a retention pond. There were some picnic tables set up, along with those boxy public grills that could fit like three burgers max. The parking lot was deserted, and she'd parked the car out of the light.\n\nI looked around. \"What are we doing here?\"\n\nMei turned off the car and leaned back in the seat. \"Killing some time.\" She looked over at me, that playful sparkle in her eyes doing wonderous things to my half-mast erection.\n\nI held up a finger. \"You're fucking with me.\"\n\n\"Why would I be?\" She lifted her shirt a little, exposing her belly. \"We've had fun all afternoon. Dancing like that again got me horny.\"\n\n\"But...me? I'm like, ten years older than you.\"\n\n\"So?\" The shirt went a little higher, and I caught another glimpse of the pink panties she wore peeking up from within her jeans. \"I'm twenty-five. I can fuck who I want to.\" Her tongue flitted across her bottom lip. \"Don't think I haven't noticed you staring at my ass all day.\"\n\nMy face burned. \"I... well, I... um.\"\n\nMei giggled and leaned across the seat, her face close to mine. \"It's okay,\" she murmured. \"I liked it.\" I jumped as her hand reached between my legs, cupping and squeezing my trapped erection. \"I like it a lot.\"\n\nMy hands touched her arms, and when she didn't balk, slid higher up to her shoulders. \"You did?\"\n\n\"Mm hmm.\"\n\nWell, who was I to not give a girl more of what she wanted?\n\nI closed the gap between us and kissed her gently. Her lips were pillowy soft, and she made a contented noise as we made contact. She shifted in the seat, sitting with her knees so she could lean across the front seats and make out with me. Her hands caressed the side of my face, her thumbs rubbing my cheeks.\n\n\"We're not going to get anything done up here,\" I panted. \"Hang on.\"\n\nWe broke apart, and I quickly ducked out of the shotgun seat and opened up the back hatch of the SUV. THe seats were easy to drop down, and I did all the back ones, so there was a flat surface for us to use. Mei grabbed a blanket that one of the guys used when he took naps in the back seat and spread it out over the space, her face flushed with anticipation of what was coming. I scrambled inside through the back and shut the hatch behind me as she moved from the front. We bumped into each other as we jockeyed for postion, and some things got groped, leaving us giggling and panting like seniors on prom night as the lights in the car dimmed and plunged us into darkness.\n\nI wound up on my back with her on top of me, her weight pressing into me as her lips found mine again. I hiked her shirt up and ran my hands down her back, reaching around and giving her pert ass a squeeze. Mei hummed into my mouth, her tongue sliding between my lips to mingle with mine as clothes came off slowly. First shoes, then socks, then her shirt. She leaned back atop me as the garment got tossed into the corner. She cupped her breasts in her hands, jiggling them up and down. \"Tit for tat,\" she said, inclining her head at me.\n\nIt took a fair amount of wriggling to get out of my shirt from my position, but I managed. \"Done.\"\n\nMei smiled and made to take her glasses off. I stilled her hands. \"No, leave them on,\" I said. \"I like them.\"\n\nShe blushed, then moved her hands behind her. There was a faint click as she unhooked her bra. The garment fell away, baring her smallish but perky tits to me. Her nipples were stiff and wanting, the areola dark. I reached up and cupped them, kneading the soft flesh between my fingers. Mei made a soft noise and leaned into my touch, purring like a cat. \"I feel like the luckiest guy in the world right now,\" I murmured.\n\nHer hands undid the catch on my jeans. \"And I'm about to be a really lucky girl, judging by what this bad boy feels like,\" she said, her hands diving into my pants and fondling my cock through my boxers. She drew them down, drawing my erection out into the open, and sucked a breath in through her teeth. \"Holy fuck, you're big....\"\n\nShe gripped me with both hands, slowly pumping up and down. Warm tingles flowed through me, watching this beautiful woman stroke me. There was an intimacy in the motions, a slow, rolling gentleness, as if this was the thousandth time we'd done this and not the first. I leaned my head back and growled my appreciation.\n\nMei kept one hand on me and adjusted her hips so she could slide her pants down her legs. Her jeans went first, and wound up tossed in the same corner of the car as our shirts, leaving her just in her pink panties. I scooted my legs up so she could yank off my pants, and she did so with gusto, leaving me naked on the sheet. She flashed me a smile, then her head dipped towards my crotch.\n\nAt that exact moment, my phone rang.\n\nWe both froze, her lips inches from my cock. I fought the urge to jerk my hips up as I grabbed the phone and checked the number. Lucas. I turned the phone to her, and a devious grin spread across her face. \"Answer it,\" she purred.\n\nI answered the call. \"Hell-oooooo,\" I said, my voice hitching as Mei's soft lips slid along the hot flesh of my cock.\n\n\"Lars?\" Lucas said. \"You okay?\"\n\n\"Just...fine...\" I said, fighting to keep my voice level as Mei's tongue pressed against the bottom of my length and curled just right. \"What's going on?\"\n\n\"Somebody better pick up the phone, because you called it. Sam took a nasty dive off the stage platform. Knocked himself right out when he hit the ground.\"\n\nSweet, sweet vindication surged through me, tempered by the satisfaction of a beautiful woman sucking on my cock. \"Good thing you called those EMTs, huh?\"\n\n\"They were literally five feet from where he landed,\" Lucas said. \"So yeah, show's ended prematurely, Sam's been taken away in an ambulance with Sheila, and the rest of us are waiting for the audience to get out before we start taking things down.\"\n\n\"Don't wait on my account,\" I said, threading my fingers into Mei's hair as she went down on me. \"I'll be back there in a bit.\"\n\n\"Gotcha boss.\" Lucas hung up.\n\nI tossed the phone away and let myself sink into bliss as Mei blew me, letting her know her efforts were appreciated. I writhed and arched my hips into her mouth, and she hummed appreciatively around my length. Her tongue swirled around my head, her moans filling the car with gentle, pleasured noises. \"I want to see all of you,\" I said.\n\nWithout missing a beat Mei reached down and slid her bottoms off with one hand. She kept her pubic hair trimmed, but there was still some length to it as it gave way to her labia and clit. Her lips left my cock and she caught her breath. \"I needed this,\" she said, then winked at me. \"Sounds like you needed it too.\"\n\n\"I want more, if you're up for it.\"\n\nShe raised an eyebrow. \"You really think I'd pass up the chance to have this in me?\" She wiggled my cock back and forth. \"Please, what kind of girl do you take me for?\"\n\nI sat up and brought my face close to hers. \"A naughty one?\"\n\nShe nipped the tip of my nose playfully. \"Only with the right kind of guys.\"\n\n\"You have a preference?\" I asked. Mei blushed, a bit of her demure side peeking back through. I decided to assuage it and gently reached between her legs, cupping her vulva and running a gentle finger along her pussy lips. \"Come on. You can tell me what you want.\"\n\nHer breathing deepened, and for a moment she seemed content to just let me rub her. After a bit, she nudged my hand away and motioned for me to scoot aside. I did, and she laid down on the sheet flat on her stomach, her bare, perky ass highlighted by a strip of moonlight through the window. \"I like it like this...\" she murmured.\n\nI threw my leg over her and straddled her, resting my weight on her thighs. My cock rested in the cleft of her ass, but I didn't go for the obvious just yet. My hands pressed down on her back, fingers pressing into her soft skin. I pawed at her back muscles, keeping my touches light as my fingers went lower and lower, until they reached the swell of her rear. Mei squirmed under me as I feathered light kisses up her back to her neck, then leaned around and stole one from her lips. I could taste a bit of myself on her, but didn't' care. \"Indulge me a bit,\" I murmured. \"Beg me for it.\"\n\n\"Oh, Lars,\" she panted, not missing a beat. \"I want your big, thick cock inside my tight little pussy...\" I tried to pick out any tinge of playfulness in her words, but didn't find anything. Mei's face was fully flushed to the tips of her ears, a hungry spark in her eyes..\n\nI put my hands on her hips, the grip of someone in control. Mei's breathing hitched and she spread her legs in her prone position. I dipped my hips, sliding the tip of my cock against her smoldering, wet entrance. My hand stayed firm against her lower back as my other guided myself into her, spreading her lips wide. Her pussy was tight as I slid into her slowly, both of us moaning in harmony as we became one. She reached back, fingers twining with mine as I slid further and further into her, until I bottomed out inside her. \"F-fuck,\" she whimpered.\n\n\"You okay?\" I asked, aware of every twitch in both our bodies.\n\n\"Mmmmyeah,\" she purred. \"You?\"\n\nI leaned over her, planting my hands on either side of her shoulders. \"Damn fine,\" I murmured. My hips began to move on instinct, plunging my cock into her. Her prone position meant her legs were pressed together, making her pussy muscles sheathe me tight as I rocked my hips back and forth lazily. I wasn't in any hurry, and I liked looming over Mei as she moaned and writhed around underneath me. It was a powerful, intoxicating position, especially as her hands sought mine, as if she needed something to hang onto to keep her grounded.\n\n\"Too much?\" I murmured.\n\n\"Noooooo,\" she moaned pitieously. \"Kee-keep going....\"\n\nI dipped my head and kissed the top of her her head. \"You're so warm.\"\n\nShe made a soft crooning noise and craned her head back, and I kissed her without missing a beat. Her sex rippled and clenched around me, almost forcing me out multiple times as she shuddered and whimpered in pleasure, but I kept going, my pelvis bumping her ass with every thrust as we went at it.\n\nWe lapsed into silence save for our little noises and the sound of our bodies meeting, parting, and coming back together slowly. Mei's face was rapturous, her hair in disarray and her forehead beading with a little sweat. \"I...\" she squeaked. \"I'm gonna... gonna... oh!\"\n\nHer pussy clenched around me, and I stilled, simply letting her muscles squeeze and milk me. I growled as it threatened to overwhelm me, an animal noise that filled the car. \"Mei...\"\n\n\"Cum in me,\" she whispered. \"I'm on the pill, it's okay.\" She looked back at me, and there was an animal need to her expression. \"I want it.\"\n\nThat was all I needed to hear. My hips drew back and slammed into her, making her cry out in abject delight as I fucked her hard and fast. I pinned her hands down under mine, leaving her barely able to move as I took her. I growled in her ear, and she answered with a pleasurable moan. As I drew closer and closer to the end, I sped up, until I was almost savage in how I fucked her, until I felt myself blow past the point of no return. \"Rrf... Mei... Mei!\" I slammed myself home and let go, flooding her warm pussy. Mei sucked in an eager breath as she felt me come, her hips humping back into me, the tight muscles milking me for every drop as I saw stars. I hadn't come like that in a long time.\n\nStaying upright was a challenge, so I simply lowered my body atop hers, pinning her underneath my weight as my cock continued to shudder and spurt gently inside her. \"Whichever one of the guys this blanket belongs to is going to be pissed,\" I said.\n\nMei laughed, her voice giddy and happy. \"You might want to hide it then, hah!\"\n\nWe stayed like that for a while, me locked inside her while we nuzzled and kissed, coming down slowly. When my erection had died down enough, I slid back out of her, and got a moment of satisfaction at watching my cum leak out of her cute little pussy. I reached up to the front and turned the key back, allowing me to crank the A/C and crack the windows to cool us down and let some of the sex smell filter out.\n\nI flopped back onto my back as Mei finished using the blanket to wipe between her legs. She tucked herself into my side, and we stayed like that for a little while, holding each other and sharing... a moment. I'm not sure what kind of moment, but it was still something nice, at least.\n\n\"Time to face the music?\" Mei asked after a time.\n\nI checked my phone. \"Yeah, getting there.\"\n\nShe stretched and sat up on all fours, scouting around for her clothes. \"Well, at least this day ended on a high note. I had a good time, Lars.\"\n\nI pinched her ass as I got up to find my own pants. \"Same.\"\n\nOnce we dressed, we put the seats back up, and I was sober enough to take us back to the arena. When we got there, we ducked in the back and walked out onto the stage. The crew was milling about, dismantling the stage into its component parts to be loaded into the trucks, where it would go into storage for a month until the overseas leg next month. Or whenever that would be, now that Sam was hurt.\n\n\"You look like you're in a good mood,\" Lucas said as I knelt down next to him to start undoing bolts.\n\nI looked back over my shoulder. Mei winked at me and sauntered off. \"I am. Sam tried to pull a fast one on me, but I think tonight, at least, the joke's on him.\""
    ],
    "authorname": "NathanRavenwood",
    "tags": [
        "mf",
        "straight",
        "asian",
        "humerous",
        "wholesome",
        "car sex",
        "strip club",
        "younger woman",
        "older man",
        "music"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/send-the-fools-further"
}