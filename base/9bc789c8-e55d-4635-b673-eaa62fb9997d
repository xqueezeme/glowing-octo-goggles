{
    "title": "Welcome to the Neighborhood Ch. 10",
    "pages": [
        "Disclaimer: Hey guys! Here it is: the final chapter to the Welcome to the Neighborhood series. Big thanks to all of you who've stuck around since the beginning and have fallen in love with Nick and Cory. All the comments and feedback are greatly appreciated. I'm currently working on another series more focused on young love, so stay tuned for that. I'm also looking at continuing The Chase series- long overdue I know. Be on the lookout for those.\n\n-Thealphamale\n\n*****\n\nCHAPTER 10: Starting off fresh\n\nTwo weeks had passed since I drove off on Cory that afternoon. I look back on that moment and wonder if I had over-reacted, yet as I wallow in my own misery, I know that nothing can be taken back. It just happened really quickly, and that morning seemed to push me to my edge. It would have happened sooner or later, and him not choosing me was just the final straw. These days I find myself holding my breath every time I turn into our block, hoping that I wouldn't find his grey Jeep parked outside, or worse, catch a glimpse of him. But he never showed up, and after a few days, I convinced myself that he wouldn't anymore. \n\nI decided to throw myself into work. Now I may have been the fresh meat in the office, but that didn't stop them from piling projects on my plate. But I didn't mind, I enjoyed it actually. Taking that month or so off after graduation proved how rusty my skills had become, and there's nothing like a stack of deadlines to get the brain working again. \n\nI focused on my friends too. I decided to spare them the news of the break-up out of my own self-consciousness. I knew that any mention of it would only bring pity and remorse. And before you know it, I'd be Nick, the fragile sensitive one going through a rough break up. I didn't need that.\n\nFour days after that afternoon, I decided to talk to Connor. Truth be told, we hadn't spoken much since that afternoon at Ty's. And unless you consider indirectly messaging each other through our friend group chat, then technically we hadn't spoken at all. The silence came from my stubborn inability to be proven wrong; I needed to be right. But these days, I needed a friend more. \n\nI hopped into my car just after work on Thursday and made my way over to his apartment. I had texted Quinn at lunch asking if she could give me and Connor some time to hash things out, and she happily agreed. She threw a message about how she was getting tired of Connor's moping and I smiled to myself, knowing full well that if It was a competition for throwing the best pity party, I'd be number one with a bullet. \n\nI pulled up to the building and saw that Quinn's bright red Fiat was nowhere to be found. Walking up the stairs, I grew nervous. Connor and I have had our fair share of spats in our friendship, but this was a new level of tension. My fist grew heavy as I brought it up to the front door. There, my feet felt as though they were sinking into the charcoal welcome mat like it was a pool of quicksand. He finally answered and, catching his face, I saw an eager smile escape his mouth at the sight of me. That quickly faded to a blank expression, like his body just reminded him that we weren't speaking. He asked, plainly, \"What are you doing here?\"\n\nI dug further into the mat, sinking my hands into my pockets, I could almost feel the fabric rip. I stated, in brutal honesty, \"I need you, buddy.\" With those words, I unravelled before him, breaking the front I had worn for the past few days and erupting into a geyser of pent up emotions and endless hours of self-loathing. \n\nHis arms wrapped around me like he had managed to catch the cork from a newly popped bottle of champagne. Pulling me in close, he capped it, and I felt my tears puddle into his sweater. He brought a hand up, patting my back, \"Tell me what happened Nick, I'm here for you.\"\n\nI gathered, in between sobs, \"He's gone, Connor. I left him. I-I just couldn't take it anymore.\"\n\nHe turned slightly, keeping a single arm around my shoulder as he led us to the couch. Sitting down, I could practically feel him looking down on me as I buried my face into my palms. I felt him analyzing the situation in true Connor fashion. He had every right to berate me with a series of 'I told you so's, but given the choice of being right and being kind, he chose kindness. He asked, innocently, \"What made you decide to leave him, Nick? Last weekend you told me you loved him.\"\n\nI shook my head, \"I guess I just reached my breaking point.\" Sniffling, I continued, \"I realized that until either one of us did something about it, we'd be living that deranged fantasy until the day we wouldn't be able to. And so, I did something.\" He nodded, taking in my words. \n\nConnor offered, \"Well it's clearly tearing you up inside. You did this 'cause you felt you had to, right?\" I nodded. He went on, \"I think we force ourselves to do a lot of things we don't want to do just because we know it's what's best.\" He rubbed my back as I thought to myself, \"Bullseye\". \n\nConnor got up after a few minutes, walking towards the kitchen. Trying to clean myself up, I watched as he strolled back with two glasses and a bottle of whiskey. \n\nI raised an eyebrow, \"You want me to drink my problems away?\"\n\nHe set the glasses down, pouring mine, \"I want you to let all of it out.\" He moved over to his, \"You spent the past month or so keeping this secret and holding in all of your problems.\" Looking directly at me, he choked, \"That must've eaten you up inside.\" \n\nI gulped, knowing he was right. He continued, \"Now you don't have to drink if you don't want to. The whiskey is more for me.\" He chuckled, \"I just...\" he corrected himself, \"You just, need to stop bottling up your emotions.\"\n\nI picked up the drink, cradling the glass in my hands as I brought it up to my face. Connor followed, toasting, \"Here's to getting you through this.\"\n\nI nodded, \"Semi-charmed kinda life\", humming to myself as I drank. \n\n***\n\nThree hours after that first initial drink, I looked down to see that the bottle, like most of my pent-up frustrations, was empty. Connor, ever the more responsible one, paced himself to a modest drink and a half. I say half because I kinda finished most of his second cup. After a series of talking and drinking and crying (mostly on my end), I set the glass down one last time. Letting out a deep breath, I felt like I was starting to heal. \n\nQuinn eventually came home, and after a rehashing of old wounds, I found myself ready to go. Connor led me down the steps towards my car, swiftly grabbing the keys out of my pocket. He pulled out of their complex, looking over to make sure I was okay, then at the rear-view mirror, seeing Quinn convoying behind us. As we snaked through the suburban streets, he asked, \"So what now, Nick?\"\n\nI breathed, feeling sobriety hit me as the cool evening wind swept my face, \"I need to talk to him.\"\n\nHe looked over for a second, \"Are you sure that's for the best?\"\n\nI nodded, \"I need him to tell me what he wants. I left that morning without even giving him a chance to explain himself. I need to know where he stands...regardless of where that may be.\"\n\nHe focused back on the road, \"You do what you think is right and I'll support you.\" Just then, as if knowing what we were talking about, Quinn flashed the headlights on her car. Connor corrected himself, rolling his eyes, \"We will support you\"\n\nI thanked Quinn when we got to the house and she walked back to the car, leaving me and Connor just at the front door. He handed me my keys just as I pulled him into a tight hug, saying, \"I love you, man.\" \n\nPatting my back, he reciprocated, \"I love you too.\" He straightened himself, clearing his throat to break the slight awkwardness. He joked, \"Now don't go telling Ty or Mitch I said that.\" He turned slightly, \"They still think the fight for Best Man at my wedding is between the two of 'em.\" \n\nI made a face, \"Best Man, huh?\"\n\nHe turned back at me and I saw a clear picture of Quinn a few feet behind him, standing by the door of her car, \"Someday soon, my friend. You'll be the first to know\" \n\n***\n\nA few more days passed, and I found myself conflicted about seeing Cory again. I knew that I wanted to talk to him, but part of me was terrified that if I let myself get vulnerable one more time, I could be opening myself up to pain. I wanted to talk to him, but more importantly, I wanted to listen. \n\nEvery night on the drive back home, I'd work up enough confidence to confront him just for an ounce of closure. But as I pulled onto our street day in and day out, his car was nowhere to be found. It was like building up a mountain of pressure only to be released in a slow emission of steam. \n\nWednesday came and as I turned onto our street, I expected to see an empty driveway but instead found, what seemed to be, a sign to give up entirely. I felt a lump in my throat as I read the words out loud, \"For Sale\". I was crushed. Not only did this serve as a reminder that I'd never be with him again, but it meant that I could never get to hear him out. I'd spend the next few days constantly wondering how things would have turned out if I acted differently. \n\nMy nights, however, consisted of playing every possible scenario in my head. Some nights I wondered if Cory had been deployed again meaning that, for the second time, he found a way out of a situation he didn't want to be in. Other nights, I pictured him choosing to be happy with her. That, after two months of being distracted by me, he finally focused. That one stung, but as I looked out to their empty driveway adorned with a \"For Sale\" sign in front of a pitch-black house, I knew it wasn't entirely unlikely. The last scenario often kept me up at night, so I tried my hardest not to let it cross my mind. It was Cory, alone and living his life somewhere new. He looked relieved, happy even. Rather than choosing me or choosing his wife, he chose himself.\n\nI crawled into bed Friday night, earlier than usual. Stripping down to a simple t-shirt and boxers, I sat upright for a few minutes with my back resting against the head board. My mind started to race, and I cursed myself for letting those thoughts enter my head. \"Misery loves company\", I whispered to myself as I pulled over the covers and drifted off to sleep. \n\n***\n\nMy Saturday morning started with a series of loud knocks at the front door. I sat upright, blinking myself awake. Normally, I'd let it go and fall back asleep, but the banging was relentless and by that time, I was already awake and fully capable of answering the door. I ran downstairs matching the steady rhythm of knocks with the thumping of my feet against the wood stairs. I pulled open the door, ready to tell whoever it was that my parents were gone for the day. But instead, I looked out and saw him: a silhouette of a man shadowed in morning light, standing at my door. He continued to look down, as if embarrassed at his presence here. \n\nI called out, \"Cory? Oh my God, where have you been?\"\n\nHe looked up and I found his eyes. They looked tired, like he had been awake for hours on end. His scruff had grown out a bit and the expression on his face could only be described in one word: worn. He finally replied, \"Nick, I know you probably don't want to see me, but I needed to talk to you.\" \n\nI looked out to see his Jeep parked right in front of the driveway; his presence felt urgent and intentional. He needed to be here, and he didn't care if anyone saw. I nodded, telling him to continue, \"I just wanted to tell you how sorry I am for allowing you to be hurt for so long. I kept thinking that I could continue ignoring that other life and keep living the one with you, and that was completely selfish of me.\" \n\nI walked closer, steadying his shaking wrists with my grip. He looked up at me with relief, swallowing down as if holding back tears. He breathed out, \"I told her about us. I told her that I didn't love her anymore, and she confessed that she hasn't loved me for a while too.\" His voice changed pitch, as if he found it funny, \"We both just sat there, cursing ourselves for becoming ghosts in our marriage.\" He paused, \"I signed the papers this morning. I knew that I couldn't come and see you without proving how much you mean to me.\" I stood there in disbelief with my legs giving in from the hard-hitting truth. \n\nFinding the couch, we sat as he went on, piercing me with his eyes that had regained that luster of green, \"I-I love you Nick. The truth is, I've known it for a while. I just didn't say it out loud because then that would make it real. But I want it to be real. I want to be with you. And I'm here, begging you to take me back.\"\n\nMy heart swelled at this confession. Here he was, telling the words I prayed that I'd someday hear from him. My mouth went dry as I saw his eyes grow wide. Unable to speak, I did the only thing I could. I leaned in, clenched his jaw in my palms and kissed him. I felt as his face melted from surprise to acceptance, taking my lips in as he cradled the back of my head in his hands. I let go and kissed him again, making sure it was real and not some figment of my imagination. He held his face close to mine and watched his mouth curve up to a smile- the first time he showed that expression this morning. I rested our foreheads together with the side of my nose brushing up against his. Centimeters apart, I opened my lips, \"I love you, Cory.\" \n\nHe sighed loudly, \"You don't know how relieved I am to hear that.\" Cradling my face, he said, \"I thought I lost you, Grayson.\" \n\nI quipped back, \"You can't get rid of me that easy.\" He laughed and it seemed like all happiness returned to that shell of a man that stood at my doorstop just a few minutes ago. Just like that, we were back to where we left off, just in much better places. \n\nHe kissed some more, and I slowly ran my hands up his shirt to feel his warm, chiselled body against my fingertips. Breathing me in, I watched his eyes slowly roll back as if he was taken over by my scent, the same way I had been many times before. He stopped for a second, not letting go of my hands, \"Babe, I wanna take you somewhere. There's this place I need you to see.\" \n\nI grunted slightly, not wanting to let go of his lips. Shaking it off, I replied, \"Where are we going?\"\n\n\"It's a surprise\", he commented as he raised a finger up to his puckered lips. \n\nI rolled my eyes, \"Okay fine, I'll play along.\" Standing up, I said, \"Let's go.\"\n\nHe raised an eyebrow, \"Uh, don't you want to at least comb your hair?\" His eyes lowered to the growing bulge in my boxers, \"Or put on some pants?\"\n\nI teased, \"Why? I thought you liked me like this?\"\n\nHe stood up so that we were facing each other. Leaning in for a quick peck, he corrected, \"I love you Nick.\" Raising his hand, he ruffled my hair, \"You're perfect as is.\"\n\n***\n\nI looked out the window of Cory's jeep as the steady stream of buildings turned to thick foliage. We were about a half hour out of town driving along the coast with the ocean just over my left shoulder. Cory looked happy with a smile plastered over his face, dressed in sunlight that shined through his open window. I swear, I could see a twinkle in his eyes through the dark sunglasses. He held my hand, often bringing it up for a kiss as he cruised down the highway with a single hand on the wheel. Turning left, he stated, \"We're almost there.\"\n\nBut I didn't know where \"there\" was. The asphalt soon turned to gravel with the lush trees bottlenecking before us. The road didn't look like it had seen much traffic, and the pristine jungle that surrounded us told me it didn't see people either. I watched in amazement as the trees opened up before us, framing the view of a small but beautiful two-story cottage up ahead. As we pulled up, I caught glance of the ocean, peaking through the Northwest corner beside an open deck that must have spanned the entire length of the house. \n\nCory pulled up to the rounded entrance, stopping just before the front door. I didn't wait for him to get down, I simply had to see this place for myself. I opened my door, feeling the cool sea breeze sweep against my skin. I closed my eyes and took it in, listening to the roaring waves crash onto the shore. I could tell it was close by.\n\nCory came around the car and stood behind me. Grabbing my shoulders, I felt his chest at my back as he rested his chin on my shoulder. He explained, \"After Brooke left, I knew I couldn't live in that house anymore.\" I tensed up slightly, having never heard her name before. It made me uneasy at first, like he was reopening an old wound. But as I felt his hands on me and his breath on my ear, I knew that it was his way of healing.\n\nHe continued, looking over at me, \"I haunted that house for so long. Every moment I spent there was just a reminder of how much I hurt you.\" He breathed out, \"I needed to start off fresh.\" \n\nCory turned me slightly so that we were standing face to face. He held my hands in his, \"I bought this place for us.\" I held back my emotions, resisting the urge to melt right then and there. He steadied me, \"Now you don't have to move in right now, there's no pressure here. I just want you to know that here, at this place, it's just you and me. There's no sneaking around, there's no remnants of other people, it's just us.\" He caught my glance and I fought the will to shed a tear, \"We can build a pretty great life here\"\n\n\"Yeah we can.\" I muttered, before pulling him into my embrace. I continued, \"I can't wait to see the kind of amazing life we'll have together.\" We stood there for a few moments with our arms tangled around each other's bodies, and faces nuzzled up against every patch of exposed skin. \n\nHe motioned, telling me, \"Come, you need to see the best part.\" \n\nCory pulled out a rolled-up mat from the back of his Jeep and made his way back to me before leading us down the wooden stairs just off the deck. I felt the soft wood against my skin, weathered from the constant exposure to saline and sun. Cory walked up ahead, standing just feet from the ocean's edge. Looking left then right, I saw miles of sand that stretched over the horizon. He pulled me in, lifting me up in his arms, \"It's just us out here. There's not another property for miles.\" \n\nI raised a brow, smirking in mid-air, \"Just us, you say?\"\n\nHe only nodded, leaning back as if to prepare himself for my assault on his mouth. I reached behind his back, catching his body as I kissed him hard. Cory opened up, sneaking his tongue past mine, tasting my mouth. Cory's hands moved up my body, holding onto my face as he kissed me back. After a few minutes of this, I felt him slowly lower us down so that both our knees were pressed into the mat just above the sand. Cory then took control, pushing me slightly so that I was lying on my back. He let out a soft growl as he put his weight on me, cradling my head in his arm as he pulled me closer, working my mouth. \n\nI pulled at his shirt, releasing his pecs from the tight fabric. He leaned in again with his dog tag swinging in the space between us like a pendulum. He went for my shirt next, pulling it off and tossing it aside the sand that surrounded us. With that, he pressed his chest against mine, putting his full weight on me as I moaned out. He found that spot on my neck; that poor stretch of skin that he'd bruised so many times before. His lips sucked hard, sending tingles down my spine as he played with my sensitive marks. \n\nGrabbing at the back of his neck, I asked, \"You trying to mark me, baby?\"\n\nHe grinned at me, breaking the feral motions that consumed him, \"Sorry, I just get so carried away with you.\" His eyes looked down on me, almost ashamed of his actions.\n\nI shoved my hand down his pants, clenching his ass in my palm, \"You don't have to hold back with me anymore.\"\n\nHe nodded at my reassurance before diving down to attack my nipples. I started to moan as his tongue swirled around my hard flesh. He continued to switch off, causing me to quiver at the sensation of cool breeze against my wet chest. His attention then turned towards my shorts, desperately yanking them off as quickly as possible. After finally pulling them off, I lied there with my ass pressed against the soft mat. Cory, not leaving me enough time to react, pulled at his own pants with the same urgency. I followed his lead, grabbing at the waistband, pushing his jeans and boxers down past his cheeks and down the rest of his legs. He kicked them off, leaning nothing but body heat separating the two of us. ",
        "I wrapped my legs around him so that my feet rested against the small indents on his back. He pushed in further, filling my mouth with his tongue while spit dripped past my lips. Cory was rough with me, satisfying every urge he had. But this time wasn't like our first; he worked into my body with a fierce passion that burned through every fiber of his being. \n\nSomething came over me, and suddenly I couldn't take the prolonged teasing and foreplay. I needed him to fuck me. There was something about the fact that here, in this place, I didn't need to be cautious or insecure. Cory was mine and I needed him as such. \n\nCory pulled apart from my lips and I couldn't help but frown, as if his entire body resting on mine still wasn't enough contact for me. I reached over, grabbing his cock at the base and aligning it to my hole. He bit down on his lip, letting out a soft growl as he felt the muscles of my hole relax at his tip. \n\nI looked up at him with lustful eyes, pleading, \"Kiss me.\" As he leaned down and met my lips, I felt his cock continue to push into me. I started to whimper, feeling his length fill me up as my hole remembered his size. I pulled my head back, resting it on the soft sand as I felt the slight brush of Cory's pubes on my skin. He was fully inside me with his balls leaning beside the curve of my lower back. Cory kept his mouth on mine for a minute and we stayed there, motionless with nowhere for our breath to escape. \n\nI pulled off his lips, riding the high as oxygen flowed back to my light-headed brain. Catching some air, I felt Cory's knees press up against my waist. He rested his hands on my chest for leverage as he fucked me in long, slow strokes. My moans became as loud as the waves that crashed a few feet beside us. But he didn't seem to mind. He looked me dead in the eye with a proud look on his face, like for the first time, neither of us was scared to prove how much we wanted the other. And on this beach with miles of untouched sand, I moaned louder, making sure that whoever heard me would know I was his. \n\nAfter a while, I felt my hole open up even more as Cory's length slid past my muscles. The combination of spit and precum coated his cock, gliding up against my spot with ease. By then, Cory and I hadn't spoken much. We exchanged wild glances and moans- just enough to tell the other how much we were enjoying this. But as my cock continued to slap across my stomach from his pounding, I knew that I couldn't last much longer. \n\nCory rammed his cock into me, sending a rush of pain and pleasure up through my body. His eyes found mine as he continued to fuck me, asking with his motions, if I was okay. My moans and constant tugging of the mat beneath us gave him his answer. \n\nI knew that Cory was close. Between his shaking fingers running circles around my skin and the quick moans that escaped his mouth, I could feel him resisting the urge to cum too soon. But we had all the time in the world and many moments like this ahead of us. So I grabbed my cock, and giving it a slight tug, begged, \"Please.\"\n\nMy words proved enough as he growled out, feeling his balls tense up against my hole. Cory leaned into me, attacking my mouth as my hand continued to stroke my cock in the small space between our abs. I found his eyes once more and gave him a slight nod, telling him to let go.\n\nOut in the open with the sun kissing our sweat drenched bodies, Cory and I reached our climax. His lips met mine, muffling his moans as he shot his load deep inside me. I rolled my eyes back, feeling the warm cum gush out of my cock and run down the sides of my fist, coating every finger with thick white jizz. I held my grasp there, letting the cum pool on my stomach as Cory continued to pump into me, painting my hole with his cum. I let out a soft chuckle at how perfect that moment was. Cory kept pumping until his cock grew soft inside me, pulling out with ease. \n\nI rested my back onto the mat, feeling his warm cum drip out of my hole. Cory fell to my right, propping himself up with an elbow while resting his leg on mine. He lifted his finger, running it in the pool of fresh cum and swirling it around my stomach. Lifting it up, he led the sweet juice to my mouth. I opened, extending my tongue to taste it. He laughed at the sight, pleased with our newfound playfulness given the marathon of emotions we raced through these past weeks. \n\nHe leaned down, placing a determined yet delicate kiss on my lips. Resting his hand on my jaw, I looked up to see the sun shining beautifully against his olive skin. Taking a breath, he admitted, \"You're so damned beautiful.\" \n\nI propped myself up so that our faces were next to each other, slipping, \"I love you\", off my tongue. \n\nHe flashed me a wide smile, \"I don't think I'll ever get tired of hearing you say that.\" Kissing my lips, he continued, \"I love you, Nick.\" \n\nAfter a few more minutes of him softly tickling my skin and his feet rubbing up the side of my leg, he knelt beside me. Reaching up with his arms, he pulled at the stainless-steel chain that hung at his neck. Cradling it, he explained, \"In the Army, these tags are used to identify soldiers. They tell the story of everything you need to know about them- from their blood type to their religion. It's brief: it's quick, but it's essential.\"\n\nI sat up, listening intently as he raised his arms to place the chain around me. I continued to watch his eyes, feeling the cool metal resting on my skin. Rubbing the emblem in his fingers, he explained, \"I want you to have this.\" He found my hands, interlocking our fingers by my waist, \"We may not have known each other a long time, but you're my story Nick. Everything that someone needs to know about me can be told through you. \n\nI felt a single tear drip down my face before falling to the sand at our knees. This simple, heartfelt act pushed away every ounce of doubt I had held onto for so long. Cory was here. He was telling me how much he loved me and how much he wanted me to be a part of his life. I managed a, \"Thank you Cory, I love this so much. I love you\" in between my sobs. He grabbed my face once more, kissing me passionately with a smile so wide on his face, it could practically stretch the entire length of this beach. He pulled us back slowly and I nuzzled my head in my favorite spot between his chest and shoulder. Cory reached over, locking our fingers and resting them just above my stomach. That moment was perfect, and as the waves continued to crash at our feet, I couldn't help but know that he and I were about to embark on something truly amazing."
    ],
    "authorname": "thealphamale",
    "tags": [
        "gay",
        "anal",
        "romance",
        "military",
        "cum",
        "bareback",
        "passion",
        "mature",
        "athletic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/welcome-to-the-neighborhood-ch-10"
}