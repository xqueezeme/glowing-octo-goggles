{
    "title": "Graduation Ch. 02",
    "pages": [
        "Hey, fellas! If you haven't read chapter 1 of Graduation, or you haven't read it in a while and could use a refresher, do yourself a favor and !\n\nFor those of you who have been waiting for Chapter 2...welcome! Thanks for your patience while I figured out how to crack this thing. It's ultimately up to you whether or not this chapter lives up to your expectations; I hope I don't disappoint, but for what it's worth, I love what I came up with, and I think you'll get something out of it.\n\nAnyway, the wordcount on this is around a smaller but still formidable 16.9K, so there's no sense screwing around any longer. TO HELL!\n\n<p align=\"center\">= = = = =</p>\n\n\"YO!\" QB1 Jeff Prosser shouted into his microphone, standing on his back porch steps, looking over his team, their friends, girlfriends\u201448 in all, splashing around in his pool, dancing on his patio, drinking around his bonfire. It was a surprisingly nice Saturday night, just warm enough to draw people into the water, dry enough to maintain the energy without anyone collapsing in a puddle of booze and sweat.\n\n\"I gotta cut the music for a second,\" he said, \"and I gotta say some words. I'll try to keep it quick.\" The party turned to him, because how could they not, and some seemed surprised to find Caleb Bradstreet standing next to him with an unreadable expression. It was a stark contrast, if nothing else; stoic, beefy Caleb against the charming grin, slick haircut, and smug preppie gait of Jeff.\n\n\"So you guys assume we're here because high school's over, we made it, dropped the mic on a district title back in December.\" The crowd hooted and hollered their approval, the members of the team throwing up their District Championship rings in time with Jeff. \"That's no lie! We're all here for that, but! But.\"\n\nThe crowd fell silent off his calming words. The word was he wanted to go into politics after college; it seemed like a good fit.\n\n\"It turns out we've got another reason to celebrate tonight.\" Jeff pointed to Caleb. \"Y'all know him. Our boy K. I didn't give him the ball that often, but when I did, he made magic happen\u2014like the go-ahead touchdown in the game that got us these fuckin' rings!\"\n\nNaturally, parties thrown by jocks tend to breed jock-like behavior, and this was no different; it was probably a good thing that Jeff didn't have any neighbors. Unfortunately for Caleb, he was not only around to hear it, but he had to pretend to be into what he was about to hear next.\n\n\"But here's the thing about K: Dude is jacked up, talented as shit, nicest guy you'll ever meet, and could not get laid to save his life.\" The crowd laughed. \"We tried setting him up with Danielle Carlson last year...we're still not sure what the fuck happened there but it was hilarious.\" The ones who were there clapped and cheered in remembrance of the scene Danielle created; others laughed because if Jeff Prosser said it was hilarious then it was as good as watching it unfold before your eyes. \"No girlfriend, no date to the prom. I'll be real, K, we started getting some ideas about you.\" He paused for a moment to let the crowd laugh again, and Caleb shook his head, forcing a grin. \"But then I'm talking to my boy Chris a few days ago, and he mentions that he got a phone call from K, asking to back up a cover story for him...because he met some bomb-ass cougar at Silver Spoons that wanted to take him back to her place!\"\n\nAwestruck gasps and cheers rolled through the crowd as the Tale of Caleb Bradstreet seemed to evolve into life-affirming Legend.\n\nJeff turned to Caleb. \"K, even though you're not telling us much about who this bitch is, you had every opportunity to lie to us, nobody would even BLAME YOU for lying to us, and yet...you always told the truth. It's just one of the reasons why you're the fucking best, brother. I'm proud of you.\"\n\nOff Caleb's brotherly nod, Jeff took his hand off him, raised his iPod to the sky like a beacon, and shouted into his mic. \"Holler if you're with me, motherfuckers! We are gathered here today to celebrate our dominance!\"\n\nThe crowd hollered.\n\n\"We are gathered here today to celebrate the end of youth!\"\n\nThe crowd screamed.\n\n\"And we are gathered here today, to celebrate Caleb Bradstreet, and his long-the-fuck-overdue entry into MOTHAFUCKIN' MANHOOD!\"\n\nThe crowd went ballistic, and Jeff fired up his iPod and blasted \"I Just Had Sex\" by The Lonely Island through his sound system. And even though he was embarrassed, even though he felt that this profound experience he had shared deserved to be commemorated with something...more than some drunken blowout, Caleb saw all these friends and acquaintances that were happy for him, and he remembered how happy he felt to be with her, and he raised his arms in a sort of shamed triumph.\n\nThe rest of the night got dangerous, as he got drunker and drunker and was peppered with more and more questions about his conquest. \"Did she have kids?\" \"What kind of body did she have?\" \"Be real, you banged a wealthy grandma, didn't you?\" Caleb was practically a marine; he knew what he was walking into, and he had rehearsed his story so many times in front of a mirror that it might as well have been the truth.\n\n\"Yeah, an 18-year-old named Tommy. I'm just messing with you, Tommy, her kids are in middle school.\"\n\n\"Her body was pretty slammin' actually. Not much T&A, but she's super into yoga and shit, so that was fun.\"\n\n\"Don't judge me, motherfucker. You talk all this shit about 'teeth,' why wouldn't I go after a chick with removable dentures?\"\n\nWhen the vision started to blur and the legs started to tilt, he found one of the many designated drivers at the party and hitched the next ride home. When he puked into the storm drain in front of his house, he caught a glimpse of his watch, noted the time as 1:30, and stumbled in as respectfully as he could.\n\n\"What's happenin', hot stuff?\" he heard someone ask.\n\n\"Not much,\" he muttered, \"gonna pass out now.\"\n\nHe was sure he was on the right path to his room, but he felt a pair of hands guiding him there all the same. He shrugged off his shirt, peeled off his pants, and fell onto his bed. The hands turned his body to the side, and he felt his sheets stretch over his body.\n\n\"Night, Ma,\" he muttered, closing his eyes.\n\n\"Night, Caleb,\" he heard back, and he was gone.\n\n<p align=\"center\">* * * * *</p>\n\nIt was 10:52 when Caleb's phone blasted the \"X Gon' Give It To Ya\" marimba remix from his pants pocket, but it felt closer to 6 or 7 thanks to the ungodly mix of tequila, rum, beer, and whatever the hell else he shamelessly poured down his throat last night.\n\nFuckin' Jeff. Out to show Westbrook Heights that he was King Shit before he left for Alabama. Shame on him...and on the whole team, including himself, for going along. Caleb half expected the call to be from Chris, panicking because somebody wasn't breathing and he needed to get down here NOW, MAN. The dead cheerleader disposal would have to wait until he brushed the rancid vomit out of his teeth.\n\nUnfortunately, it was worse than that; God damn, did he not want to decline a call from Penny Piper.\n\nHe declined anyway, because he was pretty sure he'd sound like he had a mouth full of oatmeal and broken glass, and that wasn't the way he wanted to greet her after a few days of radio silence. He opted to send a text: \"Not ducking you. QB1 grad party last night. Mistakes were made.\"\n\nThe adrenaline spike he got from seeing Penny's name on his phone was just enough to keep him from going back to sleep; just not enough to shake his pounding headache and general sluggishness. He formulated a plan: Pedialyte. Breakfast. Shower. Penny. Knowing he was about to hop into the shower, Caleb just pulled some clothes off of his carpet and threw them on. His phone buzzed with a new text:\n\n>Sorry! Call back when you can!\n\n>(I was going to say \"I know how it is,\" but...I don't.)\n\nA rueful smile crossed Caleb's face. Contact with Penny had been surprisingly light since last Thursday. They ended up going at it almost all day Friday and most of Saturday afternoon and night. Then Sunday was graduation and he had to spend it with Mom and Becca, and that turned out to be enough of a break to kill the momentum and bring in doubt. There were two phone calls between them throughout the whole week\u2014none of which amounted to much in the way of casual conversation, let alone anything physical. With every horrible result they were worried about going forward\u2014exposure, dependency, abuse, pregnancy (Penny was on the pill, and Caleb obviously preferred pulling out, but there was always that one hundredth of a chance)\u2014somehow \"things get awkward, we barely hook up, I opt to jack off to school-themed porn instead\" wasn't on the list.\n\nFuck it, I can call Penny before my shower.\n\nCaleb stepped out of his room. A quick glance showed Mom and Becca's bedroom door already open; sure enough, Caleb could hear the TV from the great room, suggesting activity, possibly anticipation.\n\n\"Morning,\" he muttered, shuffling into the kitchen, waving into the great room, to Mom's lithe body entangled with Becca's curvy form on the couch in front of the TV, their nudity barely covered by a...\n\n...\n\n...blanket.\n\n\"Oh, shit!\" Mom shouted, waking up with a snap, clutching the blanket to her flesh.\n\n\"NOPE.\" Suddenly cured of his hangover and his appetite, Caleb spun on his heel and power-scurried out of the kitchen, returning to his room. He could hear Becca cackling from the short distance and Mom insisting it wasn't funny, like she was being teased about her secret diary.\n\nAfter a handful of seconds within the safety of his room, Mom's horrified voice came through the door: \"Caleb, honey, we are SO sorry you saw that.\"\n\n\"Yeah, we're really embarrassed,\" he heard Becca say, still trying to choke back her laughter. \"But look, sometimes when mommies and stepmommies love each other very much\u2014\"\n\n\"Becca!\"\n\n\"\u2014and mommies can't sleep, and stepmommies find them on the couch with a bottle of therapeutic wine, watching Sixteen Candles on TBS\u2014\"\n\n\"Jesus Christ,\" Mom groaned.\n\n\"Seriously, why would you watch that movie on TBS? There are commercials! What do you think happens during commercials? You get something to\u2014\"\n\n\"Goddammit Becca!\" He could hear Becca get lightly shoved from the other side of the door.\n\n\"In Becca's defense, Mom,\" Caleb admitted, \"this is kind of hilarious.\"\n\n\"See, Aimes?\" he heard Becca say. \"He gets it!\"\n\n\"I do,\" confirmed Caleb. \"Now are you guys dressed yet? I'd really like to come out so I can drink the bleach under the sink.\"\n\nNothing was heard for a few moments; eventually his mother's soft voice slipped through the door, warning Becca: \"Don't you dare!\"\n\n\"I was just gonna say,\" snarked Becca, \"you could Clapton the shit outta that the way you did Critical Care!\"\n\n\"You motherfucker,\" Mom carelessly hissed.\n\n\"Please don't ever call Becca that again!\"\n\n\"Would you even be able to look me in the eye,\" Becca sang, haphazardly cramming the words into Clapton's \"Tears in Heaven\" melody with all the glee of a fourteen year old drawing a random dick in a video game, \"if I saw you in heaaaavAAAAH!\"\n\n\"You are so dead,\" Mom told Becca, her tone suggesting she was going out with (ugh) a bang.\n\n\"We're getting changed in our room, Caleb,\" Becca called out as fast as she could. \"For real, don't drink the bleach! There's a perfectly good bottle of vodka in your mom's office!\" His mother's laughter mixed with Becca's and became more distant as they presumably got closer to their bedroom. \"You're such a bitch,\" he could hear his mother giggle-whine just before the bedroom door slammed shut. \"He'll never be able to watch Sixteen Candles now!\"\n\nCaleb shook his head; a smile peeked through his disgust. Marriage vows didn't often mean a whole lot in a moneyed suburb like Westbrook Heights. So putting aside all the sights and sounds he couldn't unsee or unhear, it was kind of cool to have parents who still acted like teenagers around each other after over ten years together. Not that he didn't want to slam his head against the wall until the inevitable concussion erased the last 15 minutes of his memory, but all things considered, it was still slightly better than certain other alternatives.\n\nSpeaking of acting like teenagers, though: I should probably call Penny now while Mom and Becca are changing.\n\nThat's right. Changing.\n\nCaleb picked up his phone and dialed Penny, dropping back onto the cheap black futon that faced his PlayStation 4 setup. Penny picked up after two rings. \"Hey,\" she said, \"that was fast!\"\n\n\"Well, I'd like to say you inspire me, but the truth is, I just walked in on my parents. That woke me up real quick.\"\n\nPenny cringe-laughed at Caleb's horror.\n\n\"Yeah, I should point out that this is happening just over a week after you held me back by telling me to picture my mom naked. So I blame you.\"\n\n\"What can I say? I'm not as smart as I look.\"\n\n\"Yeah, well...\" Caleb stretched out on the futon, phone heavy on his ear. \"That's been going around lately. And I don't even look that smart.\"\n\n\"Is this you apologizing for not calling me?\"\n\n\"It is. Sorry for not calling you.\"\n\n\"You know what,\" she said, \"in the macro, it'd probably be even worse if things weren't a little weird between us.\"\n\n\"The macro?\"\n\n\"Big picture,\" she clarified. \"Anyway, it goes both ways, right? I haven't exactly been blowing up your phone either.\"\n\n\"Yeah, but I just figured you've got, like, grown-up things to do.\"\n\n\"I spent most of the week working through Halt and Catch Fire on Netflix.\"\n\n\"Oh, in that case, go to hell.\"\n\nPenny chuckled. \"Yeah, if you only learn one life lesson out of this...mess we're in, make it this one: Don't put adulthood on a pedestal. We can be just as dumb as teenagers.\"\n\n\"So why haven't you called, really? Or is Halt and Catch Fire that good?\"\n\n\"Oh, I can't get enough of it, but even though you tend to surprise me, I'm not sure you'd be impressed,\" she said. \"But why I haven't called...I don't know. Or I do, but I have trouble putting it into words. It's like, I'll start thinking about you, I pick up the phone, but before I can dial out, I worry that I'd be intruding or I'd be a bad person if I called somehow. I end up reading crappy student/teacher erotica instead.\"\n\nWith a long, silent breath, Caleb released the weight on his shoulders. \"Same here,\" he said, \"except I watch crappy student/teacher porn on tube sites.\"\n\n\"That's so much worse!\"\n\n\"Yeah, I'd say you're way hotter than any of those women, but that's\u2014\"\n\n\"\u2014not saying much at all,\" Penny finished alongside Caleb's \"not worth a whole lot.\"\n\n\"Exactly!\" Caleb shook off the last of his guilt and jumped into a righteous, fiery groove. \"Assuming you're lucky enough to even find any porn with a chick teacher instead of a dude, the women all look the same, they've all got the worst boob jobs, they can't act, and the stories they come up with are garbage. 'Ooh, you've been slacking off all semester, but if you have sex with me, maybe I'll let you pass.'\" Penny was dying on the other end of the line, but he could only scoff. \"Yeah, you laugh, but even with all the wet dreams I've had about you, if you pulled that shit on me I would've been, like, sobbing in fear.\"\n\n\"Well,\" said Penny, after catching her breath, \"it's almost like stories in pornography are poorly thought out pretenses for raunchy sex, and shouldn't be taken...this is coming out snarkier than I intended.\"\n\n\"Oh, snark away, it's not like I stopped watching.\"\n\n\"Well, it's not like I have the right to judge! I mean...okay, so this story I'm reading, the student is blackmailing the teacher with a video he took of a kinky one-night stand she had with his stepdad, forcing her to do increasingly perverse things. Sounds like a good erotic thriller, right?\"\n\n\"Sure.\"\n\n\"It's a romance.\"\n\nCaleb opened his mouth, but no words came out. He gave Penny a look of confusion and disgust, realized she couldn't see it over the phone, and said, \"I-I'm sorry, what?\"\n\n\"The author's trying to play it like the perverse, rapey tasks he makes her do are actually setting her free of her inhibitions instead of traumatizing her for life, thus making her feel closer to him.\"\n\n\"So, 50 Shades of Grey, but between a teacher and a student.\"\n\n\"And in reverse, kind of. Also, it's Master of the Universe if you want to get dorky about it.\" This confused Caleb; Penny, being fucking amazing, sensed his confusion even over the phone. \"Okay, do you know Twilight?\"\n\n\"Dumb vampire books, sure.\"\n\n\"Do you know what fan fiction is?\"\n\n\"Stories starring the characters of dumb vampire books written by people too lazy to do their own thing. I've heard of it.\"\n\nThere was an odd, uncomfortable pause on the other end before Penny's words stumbled across the signal: \"It's a little more complicated than...forget it. So 50 Shades was originally a Twilight fanfic that E.L. James wrote called Master of the Universe. She changed the names, altered some backstory details, and voila. Publishing phenom.\"\n\nUpon learning this, Caleb was pretty sure he was clinically dead for about five seconds. \"Okay. Um. Putting aside my...blown freakin' mind for a second,\" he said, \"You're reading a story that's influenced by some Twi-hard's crazy sex fantasy.\"\n\n\"As we speak.\"\n\n\"And, I gotta figure, getting off on it.\"\n\n\"Not, you know, a lot, but it tides me over.\"\n\n\"...How?\"\n\n\"Well, a lot of the sexy stuff is exhibition-based,\" Penny confessed, \"and I think that might be my kink.\"\n\nIt would be inaccurate to say that Caleb's brain finally broke while picturing his intelligent, soft-voiced, and (usually) demure English teacher taking her top off at a beach, getting riled up over it, and touching herself in the open air. However, at this point, his cooling fans had to spin at Mach speeds to keep him functional.\n\n\"Caleb? Did I lose you, sweetie?\"\n\n\"Oh,\" he said, shaking the image of her reclining along the shore, nimble fingers slipping between swollen lips, waves crashing upon her, an audience watching in awe because it was the only reaction that made...actually, nope, couldn't really shake that image. \"Sorry. Just, uh, imagining the possibilities.\"\n\n\"Well,\" she laughed, \"learn to love imagining. I don't have the nerve to do anything more than fantasize.\"\n\n\"Oh, I get that. I'm just super turned on right now.\"\n\n\"Really?\" Her voice seemed to make the phone hotter against Caleb's ear. \"So, what kind of image did I put in your head, Caleb?\"\n\n\"You fingering yourself on a beach.\"\n\n\"That's a good one,\" she exclaimed. \"Although...sand can really hurt if you're not careful. I'd probably be too worried about getting any of it stuck up there to really concentrate on myself and I should stop talking.\"\n\n\"It's cool,\" Caleb laughed. \"What would you be into?\"\n\n\"Hmm...\"\n\n\"I mean, if you could do it and not worry about being embarrassed or arrested and stuff.\"\n\n\"Mmm, yeah. I'm thinking.\"\n\nCaleb could picture her on the other end of the phone, lips tucked behind her teeth, thumb rubbing the underside of her chin, wearing that tight bikini...he was still having trouble shaking that image.\n\nHe shook it just fine sometime after Penny answered, \"Probably the gym.\"\n\nCaleb's response could only come in stages. He started by asking \"Really?\" He was entertained, but kind of cool about it; this was stage one.\n\n\"Yeah,\" said Penny. \"It's vain of me, really. I've always felt proud of myself after a good workout, but ever since I met you, gym sessions have been making me really horny. I'm sure I look good to you because I work out, and knowing that I look good to you drives me crazy. So, yeah, vanity.\"",
        "The acknowledgement that Caleb had something to do with Penny's newfound love of working out was flattering, of course, but it led him to the second stage for entirely different reasons. The full weight of what her fantasy meant sank in for him, causing his brain to crank forward and imagine an even hotter set of far more plausible possibilities.\n\n\"It's only gotten worse, you know.\" Penny's voice started to take on a low, syrupy affectation. \"Because when I got tired and sweaty after my last couple of workouts, I'd think back to last weekend, all the times I'd have to lay still and catch my breath, glistening with sweat and sperm...\"\n\nCaleb heard a sharp sigh on the other end of the phone; entering into the third stage, he swore there were fish swimming inside his head.\n\n\"It makes me hot, remembering how much, how hard I can make you shoot,\" she purred. \"You remember that first night, don't you? When you covered me in your sweet cream, and I looked so good to you that you just had to pump that beautiful cock of yours between my slick, sticky titties until you blasted me again?\"\n\nHoly shit did Caleb remember. One part of him remembered so well it threatened to detach itself from him and fly around the world fast enough to travel back in time and relive it.\n\n\"You know, Caleb,\" Penny snarked in good nature, \"it's hard to get a good round of phone sex going when the other guy won't talk.\"\n\nInstead of an apology, Caleb stammered out \"I've got a home gym in my basement.\"\n\n\"Really?\" She drew out the word as long as the sexy, shit-eating grin that had to be on her face at that moment.\n\n\"And my Mom's friend is throwing a barbecue today, so she and Becca are gonna be there until 10 or 11.\"\n\n\"Hmm...\"\n\n\"I mean, it wouldn't be EXACTLY like your fantasy, I'm sure. For one thing it's private.\"\n\n\"Right, and we'd be taking a lot of crazy chances here. A neighbor could see me coming in.\"\n\n\"Or my parents could come home early.\"\n\n\"Or, they come home long after I'm gone, but there's something I left behind.\"\n\n\"Or some kind of mess.\"\n\n\"Yeah, overall, it seems like a dumb risk.\"\n\n\"Super dumb.\"\n\n\"Text me when they leave?\"\n\n\"Absolutely.\"\n\n<p align=\"center\">* * * * *</p>\n\nThey ended up leaving at around 3. By then, of course, Caleb was showered, shaved, fed, and over the rest of his hangover; all he worried about was the sudden twinge of panic in his gut when Becca half-jokingly wondered what he was getting dressed up for. Penny was ostensibly coming over to work out with him, but he had lots of time after the shower he needed to take, and thought he'd look suspicious hanging out in his workout clothes all day. Instead, he opted for a blue patterned v-neck tee from Banana Republic and a pair of white shorts. He almost applied cologne out of habit before dressing, but at the last second decided to wait until he texted Penny the all-clear. Becca's gentle tease made him wonder how suspicious she would have been if he had worn cologne, and reminded him of the frayed tightrope he was attempting to walk by inviting Penny over.\n\nBut it all passed, the parents left, and after giving it five minutes to assure himself they weren't coming back, Caleb sent the text: \"All clear. You need the address?\"\n\nThat done, Caleb went back to his room to spray some cologne on his wrist and neck. Penny's apartment was fifteen minutes out, plus she probably had to get ready, so he figured he had time for a couple of quick Overwatch games while he waited. He fired up his PS4, and just moments after the home screen appeared, his phone buzzed:\n\n>Thanks, but I think I have it.\n\nThe doorbell rang.\n\n\"No way,\" Caleb thought aloud. He got up and walked to the front door.\n\nThrough the glass of the front door, he saw Penny in a grey tee-shirt and a small gym bag slung over her shoulder. She sipped from a Slurpee cup, the straw slipping back and forth across her mouth.\n\n\"That was fast,\" Caleb said, opening the door.\n\n\"Where's your room?\" asked Penny. She set her cherry Slurpee down on the foyer table, dropped her gym bag nearby.\n\n\"Make a right, and another right,\" said Caleb, shutting and locking the door. \"I thought you wanted to use the gym?\"\n\n\"Well, I thought your parents were leaving much earlier.\" Without stopping, Penny unsnapped her cuffed denim shorts, hooked her thumbs into the waist, and pushed them down her tight, round ass.\n\nStepping over her shorts and panties, Caleb glanced down and saw that her gusset was dark and damp. \"Oh, shit,\" he acknowledged.\n\n\"Yeah, this might get a little dark.\" With one hand, Penny pulled Caleb into his room by the collar of his shirt and shoved her tongue down his throat, gripping the back of his head with her other hand. He reciprocated, sliding his hands downward to grope her cotton-clad chest, eventually breaking from her mouth altogether to kiss a trail down to those perfect tits.\n\n\"Doesn't look like you were expecting company,\" smirked Penny as he nibbled on the excited nubs poking through her shirt. His TV was still on, tuned to the PlayStation home screen; his PS4 controller was on the futon, plugged into a charging cable that hazardously crossed the length of the room. Odd items of laundry and trash\u2014a used shirt here, a small bag of chips there\u2014were strewn about the floor, and his twin bed at the far end of the room sat unmade, its white/navy comforter haphazardly pulled aside to expose the fitted navy sheet underneath.\n\n\"I was gonna clean it today,\" said Caleb, reaching down for the hem of Penny's shirt.\n\n\"Sure you were.\" Before Caleb could get her shirt above her belly button, Penny was pushing him across the room, past the TV\u2014gracefully stepping over the charging cable\u2014and onto his messy bed.\n\n\"After three and a half hours I just said 'screw it' and left.\" Penny crawled down Caleb's body, unsnapping his shorts. \"Spent the last ten minutes just driving around your neighborhood, waiting for your text, because apparently I'm Glenn Close from Fatal Attraction now.\"\n\n\"I'm fine with that, just leave my pet rabbit alone.\"\n\nPenny's eyes bugged in surprise, and she flashed an open-mouthed grin while she pulled Caleb's shorts away from his rigid cock and off of his legs.\n\n\"Becca\u2014my stepmom,\" he explained, \"she loves that movie.\"\n\n\"Thanks for not making me feel old,\" she said. She crawled back up his body and rose on top of him, blocking his view of the \"WORK HARD, DREAM BIG\" motivational poster above the foot of his bed. \"Maybe I'll take a little pity on you.\"\n\n\"Do what you gotta do, Penny.\"\n\n\"Excuse me?\"\n\nCaleb watched his teacher's eyes sharpen from behind her glasses and he twitched against her powerful grip. \"Sorry, Miss Piper,\" he said. \"Won't happen again, I promise.\"\n\n\"I should hope not, Caleb,\" she sexily condescended, before plugging him into her with a loud gasp. \"FUCK, I missed this dick!\"\n\nPenny\u2014no, Miss Piper wasn't easing into this one; she grabbed tight to Caleb's shoulders and rode him like she was on a moonbounce. Her aggression took Caleb by surprise; he had to keep telling himself to breathe, even if those breaths came loud and quick and ragged as his steel cock was struck over and again within his teacher's tight tinderbox.\n\n\"You like that, don't you?\" She was almost snarling, delirious from frustration and relief and pure literal fucking joy, \"Doesn't feel like your right hand at all, does it? Such a shame; all those thick, beautiful loads, wasted on a computer screen that can't appreciate them...\"\n\nA jangle sounded from his TV; Chris was inviting him to play Overwatch. Caleb turned his head a little further and noticed his bedroom door was still open.\n\n\"Eyes forward, Caleb!\" Miss Piper took Caleb by his chin and turned his attention back to her dick-drunk face. \"You're on MY time now!\" His eyes drifted down to Miss Piper's breasts, bouncing, applauding him from within the confines of her tee. He reached up to return their adulation, only for Miss Piper to clamp down on his forearms with a sly smile and a shake of her head before she threw her head back and moaned with increasing satisfaction.\n\nAt this point it became clear to Caleb that he was Miss Piper's human dildo. Given how he was treated by Danielle Carlson and how he felt about all the women he turned down for being so aggressive, it was only natural for some small voice within himself to break ranks with his raging libido and say \"This is wrong! This isn't what we signed up for! You have to tell her to stop!\" There was a certain glint within Miss Piper's impish eyes, though, the relief of someone drinking from a garden hose after a hundred days in the desert, that told him enough to bring that small voice back in line. Unfortunately, that same glint also triggered a bunch of different ideas that pushed his balls to a breaking point, forcing him to shut his eyes and do math problems in his head. What good was a human dildo that couldn't get its owner off?\n\n\"Ooh, Caleb! Are you cumming already?\"\n\n\"If you slow down a bit,\" he groaned through clenched teeth, \"I can hold out.\"\n\n\"I don't want you to.\" Miss Piper slipped off of Caleb and began to slide back and forth across his sopping member. \"Where do you want to put it?\"\n\n\"You know where.\"\n\n\"I think I do...\" Miss Piper straightened her back, thrusting out her covered chest. Continuing her wet grind on his prick, she reached down and took her shirt by the hem, dragging it slowly up her smooth, trim stomach. \"You want to cum all over these titties, right?\" She pulled her shirt up past the underside of her breasts, stretching it taut against her nipples. \"You wanna cover my girls with your hot junk?\"\n\n\"Hell yes, Miss Piper.\"\n\n\"Well, you should have thought of that before you chose those fucking porn stars over me!\" Penny dropped her shirt and ground on him even harder, and Caleb burst out laughing over Miss Piper's ingeniously bitchy tease.\n\nShe clutched his t-shirt, rubbing the soft fabric between her fingers. \"Such a nice shirt, Caleb. I think it'd look even better with some splashes of white on it.\" Caleb tilted his head forward and found that Miss Piper's puffy pussy lips had trapped his stiff cockhead directly over the hem of his tee.\n\n\"Oh, God, please don't make me cum all over my shirt, Miss Piper!\" He'd have to do laundry! Which he had to do anyway, but would put him out for a whole five minutes!\n\n\"Don't?\" Miss Piper sneered. \"What a rude boy, jerking it to your pornstars, leaving me high and lonesome while you expose your poor computer to all sorts of nasty viruses. Give me one good reason why I shouldn't ruin this nice shirt!\"\n\nCaleb didn't have one, even though he was totally super desperate for one, honest. Of course he was shocked, SHOCKED, that his English teacher would be so depraved in her punishment for such a minor, and frankly expected offense...but wrong was wrong, and if it got her off and triggered those amazing faces and moans she made in the throes of her orgasm, he supposed his punishment was only fair.\n\n\"You know what?\" She leaned down, into his face, just out of reach of his tongue, cradling his head in her firm hands while her wet lips continued to slip and slide against him. \"You look so cute when you're scared, that I think if you ask really nicely, I might let you cum in my mouth instead.\"\n\nThe shock of Miss Piper's denial had held him back a bit, but at this point, there was so much pressure building up in his dick Caleb thought it might explode outward rather than upward. \"Please, Miss Piper!\"\n\n\"Please what?\"\n\n\"Please let me cum in your mouth!\"\n\n\"Is that what you want?\" she asked. \"You wanna flood my throat with your pervy teen spunk?\"\n\nCaleb nodded vigorously within her grip.\n\n\"Are you gonna stop jerking off to those plastic skanks that pretend to be like me?\"\n\n\"Yes, Miss Piper!\"\n\n\"Are you gonna stop being a little bitch boy and call me whenever you get hard?\"\n\n\"Fuck! Yes, Miss Piper!\" He had to force himself not to laugh at Miss Piper calling him \"bitch boy.\"\n\n\"Then apologize!\"\n\n\"I'm sorry!\"\n\n\"'I'm sorry' who?\"\n\n\"I'm sorry...Miss Piper!\"\n\nMiss Piper shook her head, pulling herself back up. \"I'm not the one you should be apologizing to!\" She got off Caleb's dick just in time, knee-walking forward until her swollen pink slit hovered over his mouth. Her hands returned to the back of his head and pushed it upwards, flooding his mouth with the tangy-sweetness of her sex. Caleb shoved his tongue up inside her tunnel, lapping and twisting within her while she cried out and ground herself on his face, the fine sand-colored down above her cunt tickling his nose. He thrusted his hips upward, trying to luck into friction that wasn't there.\n\nWith Caleb showing her pussy sufficient remorse, Miss Piper was now ready to show him mercy; she flipped over to face his cock, sitting back down on his mouth before devouring his sopping member. Caleb moaned into her, which caused Miss Piper to moan against him while she corkscrewed her tongue around his throbbing shaft, which eventually caused Caleb to blow so hard he saw entire galaxies. He could only faintly hear Miss Piper gag against the first shot of his load because he was groaning so loud, and because he was groaning against her clit, that triggered Miss Piper's own release, cascading into an orgasmic ouroboros that left them twitching and crying and cumming into each other until she finally rolled off him. They were both out of breath, sticky with each other's releases, and comfortably cramped on his small bed.\n\nWhen he was ready, Caleb flipped himself around to come face to face with a breathless Penny, getting a closer look at the spend that had stained the corner of her mouth and the bottom of her lip. She had a look on her face like she just realized there was a warm gun in her hand and a cold body at her feet. \"I am...so sorry,\" she panted, \"I don't know...where that came from.\"\n\n\"Can you find out? Because that was fucking awesome.\" Caleb could somehow feel his pupils dilate a bit on that last word.\n\nPenny chuckled sardonically. \"Well,\" she admitted, \"clearly you were enjoying yourself, but still, there was no warning, no real consent\u2014\"\n\n\"Would you feel better if I said I was asking for it? Dressing up like I do?\"\n\nPenny responded with a playful smack across his chest. \"I'm serious. This is the kind of thing we have to be careful about if we're going to do this. It's weird enough that you were my student; it'd be messed up if I made you my sex slave on top of that.\" \n\nCaleb nodded, and tried to think of an answer that showed his respect for where Penny was coming from as well as his insistence that she not kick herself too hard. But he couldn't concentrate because \"Um, it's really hard to talk to you seriously when my stuff's dripping out of your mouth.\"\n\n\"Oh!\" Penny collected his sperm with her finger, but stopped short of placing it in her mouth. \"Actually, I feel like if I clean this off, I'll just make it worse.\"\n\n\"I got you.\" Caleb sat up and grabbed a box of tissues from his night table, which Penny used to wipe her finger clean. Caleb took one for himself as well and dabbed at the juices on his face, only because he didn't want her to feel weird about it. \"Okay, so, yeah,\" he continued, \"I did get a little freaked out at first. But I was cool because I know you'd never actually hurt me on purpose, and I could also tell you were really into it. It makes me hot to see you so turned on.\"\n\nPenny shook her head, falling back against his mattress with a stupefied grin on her face.\n\n\"What?\"\n\n\"I can't think of a single guy I've slept with who seemed to give a shit about whether or not I was turned on in bed, let alone be excited about it.\" She shook her head again, apparently still unable to process it. \"How is it that the most generous lover I've ever had is a hormonal, college-bound football jock?\"\n\nThe words escaped from Caleb's throat almost a full second after they formed in his mind: \"The gay agenda?\"\n\nBefore he finished saying it, he thought he'd have to explain that it was a joke about the benefits of growing up surrounded by strong, feminist women. But then Penny burst out laughing, hard enough to snort, smooching him on the cheek the second she was calm enough to do so.\n\nHe was glad he made her laugh; as someone both deeply invested in Penny and fully aware of how inappropriate their relationship was, if Caleb wasn't happy, he'd be offended on her behalf. He had spent the first half of last week running back all the nasty, pornographic shit they did together over that weekend, comparing himself to (what little he could stand to read of) the gentle love scenes his mother would write, packed with emotion and passion, silk bedsheets and red roses. Caleb had always assumed that that was how adults had sex, and that it was somehow inherently better than the movies he jerked off to because of true love or something.\n\nIt was obvious that Penny enjoyed herself that weekend; her words about being a man had stuck with him, suggesting that maybe there was real emotion and passion between all the dirty-talking and the tit-fucking and the cum-shotting. But \"the most generous lover I've ever had?\" That was some severe bullshit; Penny deserved better than that.\n\nThis didn't feel like the time or place, though, so Caleb continued. \"Look, all I'm saying is, if you're taking me somewhere I don't wanna go, you can trust me to speak up, because I trust you to stop if I do. Okay?\"\n\n\"Okay.\" Penny let out a deep lungful of air. \"Let's also say, because I did make you a little uncomfortable, that I won't pull that dominating bitch routine again. Not without your permission.\"\n\n\"That's fine.\"\n\n\"And maybe I should let you...return the favor downstairs.\"\n\n\"Return the favor?\"\n\n\"I mean...I could use a personal trainer when we start working out.\" Her fingers danced across his firm, clothed chest. \"Someone who can push me past my limits, maybe? Because, you know, that's what all the best trainers do.\"\n\nCaleb blinked. Something caught in his throat. He wasn't sure how he was able to insist that she didn't need to do that, but his first attempt sounded a lot like \"Um, maybe we should take a break first?\"\n\n\"Sure!\" Penny pushed herself up and crawled over Caleb to the floor. \"I'd love to see the rest of your house.\"\n\nCaleb wasn't much of an ass man, but the t-shirt she wore drew extra emphasis to her round behind, and suddenly he was rethinking his suggestion to take a break. His rethink turned to naked regret when she innocently turned back to him, giving him a look at the way her trim hips narrowed down into her pussy, framed by her soft, neat bush.\n\n\"By the way,\" she said, stretching herself out, \"I'm more than okay with you watching porn, and you don't need to call me every time you're in the mood. But you should call me more often; it's not nice to leave a girl hanging.\" She turned back around, giving him another view of her spectacular ass. Walking out the door, she threw him a smoldering over-the-shoulder look. \"Also, clean your room, Caleb,\" she sizzled. \"When I come in here again, I want it to be somewhere other than your twin bed.\"\n\nCaleb resolved to actually clean his room that night.\n\n<p align=\"center\">* * * * *</p>\n\nPenny had a weekend gig as an at-home tutor when school was in session, giving her access to some of the nicest, most expensive homes in Westbrook Heights and neighboring towns and areas. Yet, whether out of genuine appreciation for the architecture, or just as part and parcel with her appreciation of her new hunky teenage side-piece, she liked the Bradstreet home the best. It was a cozy little single-story cottage with an open floor plan; the foyer led straight into a great room with a solid home theater and stereo setup. There was a small kitchen to the left that fed into a dining area, separated by an island counter. At the far end of the great room, a sliding glass door led out to the patio with an in-ground pool and jacuzzi. The door faced east, the flooring was light birch wood, and the walls were painted in bright blue colors; Penny could only imagine what it would be like to walk into this room on a sunny morning.",
        "Caleb smiled when she mused as much, standing arm-in-arm with her, looking out through the patio door. \"Mom and Becca are driving up to Tacoma on the 14th for their anniversary. So if you're still feeling brave, I wouldn't mind having you over for a night to find out.\"\n\n\"God, we're just begging to be caught, aren't we?\" Penny was shaking her head, more amused and resigned than nervous.\n\n\"Well, if you think about it, if we do get caught, that means everyone knows that you picked up the hottest guy in school and I nailed the hottest teacher in the world.\"\n\n\"'The hottest guy in school,' huh? When'd you get so cocky?\"\n\n\"I think it started after I nailed the hottest teacher in the world.\"\n\nPenny giggled and kissed Caleb on the head. It was the second time she responded that way to something Caleb said; she could see herself defaulting to it whenever he said anything, what with him always being so god damned adorable somehow.\n\nYeah, he was adorable, along with being hot as hell, and he deserved a little treat. She glanced to the basement steps behind her and said, \"I think there's only one stop left on the tour.\"\n\n\"Actually, can I show you one more thing?\" Caleb was quick to ask. \"You might think it's cool.\"\n\nOf course Penny knew that Amelia Bradstreet\u2014or Amelia Easton, as the New York Times Bestseller Lists knew her\u2014was a writer. Despite obvious mutual interests, though, Penny chose not to ask her about her work, opting to keep any parent-teacher conferences focused on Caleb. Partly because she figured Amelia would appreciate it, but also because romance novels weren't really Penny's thing anyway. All the same, Penny was fascinated by writer's spaces, and she was more than happy to let Caleb show off Amelia's...assuming that \"You're sure this is okay?\"\n\n\"Yeah, positive,\" said Caleb, entering her office, located just to the left of the front door. \"Mom protects her time, but outside of that, she's not too precious about her space.\"\n\nThe office had a thin, unpadded carpet the color of a bright overcast sky, with forest green walls, an old comfy-looking couch, and three dark wooden bookcases stuffed with books. Amelia's ten published works had a place of honor on the top shelf of the middle bookcase, ordered chronologically instead of alphabetically by author. Bolted to that shelf was a long, thin plastic sign with bright white lettering: \"REMEMBER: YOU DID THIS.\" Penny resisted the temptation to leave her fingerprint across the stark evidence of a successful author's resilient fragility.\n\nThe desk caught Penny's attention next; more accurately, the series of pictures next to the monitor, lined up in a cascading row. One was a posed headshot of Caleb from one or two years ago, wearing a tuxedo in the same way he tended to wear the shit out of anything; next was a casual snapshot of Amelia in a wedding gown, laying a smooch on a glowing woman\u2014Becca, she presumed\u2014in a snazzy white tuxedo, with short dark hair and a pleasantly round face. Penny was about to comment on how cute they looked together, but the last picture got her attention: a weathered but handsome man with tight wavy hair and a bright smile. \"This isn't your Dad, is it?\" Penny asked.\n\n\"Yep, that's him.\"\n\n\"Wouldn't expect your mom to keep a picture of her ex on her desk.\"\n\n\"That's because he's not really an ex,\" he explained. \"Brain cancer.\"\n\nPenny's hand collided with her face. \"Oh, God, I'm so sorry.\"\n\n\"Dad wouldn't want you to be,\" he assured.\n\n\"Can I ask how your mom found Becca, then? Seems like there's an interesting story there.\"\n\n\"'Interesting?' It was kinda my college admission essay,\" said Caleb. \"The short version is that I got creamed by a drunk driver when I was six.\" Off Penny's gasp, he said \"Yeah, something like that. It was bad. 'Repeat the first grade' bad.\"\n\n\"Jesus! Did they catch the guy, at least?\"\n\n\"Oh yeah. He did seven years, and there are still enough damages from the civil suit left over to technically pay for college. But that's a whole other story,\" he said. \"Becca was my physical therapist after I got out of the hospital. She had to teach me how to walk again.\"\n\n\"How to\u2014 How the hell did you end up playing football after taking that kind of damage?\"\n\n\"Persistent trauma surgeons, a lot of luck, and Becca being that awesome. I don't remember if you've ever met her, but the thing about Becca is, she doesn't give a shit. Like even now, after I walked in on her and Mom, Mom's all horrified and apologetic, and she's, like, making all these jokes about eating her out.\"\n\n\"Ew!\"\n\n\"Yeah, that image isn't leaving my head for, I dunno, ever, but on the other hand, I kinda like that she doesn't do shame or decency. Because the other side of that is, when everyone's looking at you like you're the victim of this horrible tragedy that you're never gonna recover from, it's great to have someone throw all that bullshit out and say, 'Look, we're gonna put one foot in front of the other, and we're going to find your way back to normal.' I mean, yeah, give me awesome trauma surgeons, give me every lucky break that can come my way, but I don't ever really get better without Becca daring me to.\"\n\n\"Wow,\" was all Penny could think to say. \"That...wow.\" Literally.\n\n\"Yeah, well,\" Caleb continued, \"I loved Becca. But then there was Mom; she actually saw me get hit, and it really messed with her for a while.\"\n\n\"I can imagine.\"\n\nCaleb nodded. \"So she thought that Becca was too hard on me and I actually had to beg her to keep us together, and that forced the two of them to start talking to each other. And then after each session, I'd just see them talk more and more. I'd watch them, and I had no idea how the whole gay and lesbian thing worked back then, but I still had this sense that the two of them just...you know, fit together.\n\n\"I'm guessing it got pretty intense because they stopped talking after I fully recovered, and whenever I asked Mom about her she'd try to change the subject. Dad\u2014oh yeah, I forgot to mention: This all went down before Dad got sick.\"\n\n\"Oh, shit!\"\n\n\"Yeah. I don't remember Mom and Dad having any arguments about her, maybe they did a good job hiding it, I don't know. But Dad must've figured it out somehow, because a year later, when his doctor was telling him to get his affairs in order, his first call was to Becca.\"\n\n\"I can't imagine...any of that. I mean, I believe you, I just...I honestly can't even.\"\n\n\"None of us could, Mom especially. She tells me that's why she left Becca with me and locked herself in here for a week and a half after he died.\" Caleb walked to the middle bookshelf and pulled the third book off the \"YOU DID THIS\" shelf. \"Getting it on paper was the only way she could work through it.\"\n\nThe book was called Critical Care; the jacket was a beautiful illustration of three hands resting on each other for comfort. According to the inside jacket, it was the story of an at-home nurse, hired to watch over a once-proud working mother with end-stage ALS, who falls in love with her patient's husband.\n\n\"What's crazy is, it ended up putting her on the map,\" explained Caleb. \"I think Mom kind of resents it; I once heard her complain about it being her 'Tears in Heaven,' whatever that means. But I read it a couple of years ago, and I dunno, I think it's great. There's this one thing the mother says late in the book, about how she wasn't really afraid of dying, but that she hated causing so much pain for the people she loved, and that she thought she could die in peace if, like, she knew that her tragedy led to something beautiful. Obviously Mom said it a lot better, but that always stuck with me.\"\n\n\"You're a romantic,\" said Penny.\n\n\"Think I'm a little too perverted to be a romantic,\" he shrugged.\n\n\"Trust me,\" said Penny, \"you're a romantic.\"\n\nCaleb nodded. They remained silent for a minute, basking in the afterglow of his story. They both knew what was supposed to come next, but neither one seemed to be in any rush to get there. In other words, \"I totally killed the mood, didn't I?\"\n\n\"It died for a good cause,\" assured Penny.\n\nCaleb shrugged and slid the book back into its rightful space. \"Well...now what?\"\n\n<p align=\"center\">* * * * *</p>\n\n\"Ah,\" sighed the bottle blonde, seated behind a desk in a cheap drywall set made to look like a classroom, \"I thought this day would never end.\"\n\n\"Wow,\" said Penny, swallowing a bite of her ham sandwich as she watched it happen on-screen, \"right off the bat, stellar production values. You can just tell they cared so much.\"\n\nPenny and Caleb figured that if they were going to use the gym, even just to roleplay, they should at least eat something first, food being fuel and all that. They quietly figured that while they ate, they'd need something to clear the slate; it was tricky to go from a deeply personal story about love and triumph in the wake of heart-rending tragedy to \"pound that sweet pussy, baby.\" Caleb's wild idea was to sling some porn from his iPad to the TV, \"even though I probably sound like a weirdo for suggesting it,\" and Penny amended that to bad porn to keep them from getting too turned on and going at each other on the couch.\n\nFinding bad free porn was harder than finding good free porn. Most bad porn is depressing, amounting to blurry footage of two worn out bodies bumping against each other until one of them sputters to an inevitability. It can ruin the very concept of sex if you watch too much of it. The key to entertainingly bad porn was on-camera talent that still looked good and seemed into what they were doing, while being incompetently conceived and executed in every other respect. It was a tall order, but thanks to their morning conversation, Penny and Caleb had a good idea of where to start.\n\n\"Anybody still here?\" chirped the teacher, looking around a classroom that should have clearly been empty at this point.\n\n\"I gotta be honest,\" said Caleb, \"she's pretty hot.\"\n\n\"She really is,\" said Penny, \"and she's costumed sensibly too. Nothing too revealing, yet still hot enough that you want to see more. That goes a long way.\"\n\nAfter a couple of moments, the teacher stood and began to hike up her skirt.\n\n\"LADY!\" cried Penny. \"Get the fuck outta here!\" laughed Caleb.\n\n\"God, I really need to relax,\" the teacher said, sitting at her desk chair, presumably facing the classroom door, rubbing her hand over the gusset of her panties.\n\n\"You can't relax in the fucking bathroom, at least?\" asked Penny, more incredulous than she probably should have been.\n\n\"But see,\" explained Caleb, as the actress pulled her panties to the side and strummed her fingers across her vulva, \"then it wouldn't be taboo, which means it wouldn't be sexy. Besides, how else would some lucky student realize that she's down?\"\n\n\"I don't know, creatively?\"\n\n\"This is kinda creative,\" said Caleb. \"I mean, who expected this?\"\n\n\"Being a teacher is SO HARD,\" she moaned, sucking on a pen.\n\n\"Point taken.\"\n\nAfter three graphic minutes of masturbation, a buff man appeared from out of nowhere and started rubbing his own crotch, wearing a backwards baseball cap and the sort of loose graphic tee that adults thought all kids wore. He looked to be at least five years older than the actress, but since he kept referring to her as Ms. Miller, he was apparently a student.\n\n\"You can't tell anyone about this, Peter!\"\n\n\"Well, Ms. Miller, that depends on what you can do for me.\"\n\n\"Funny story,\" said Penny, \"she has him on attempted blackmail now, which means mutually assured destruction. Technically, he can't force her to do anything.\"\n\n\"Wouldn't it be her word against his?\"\n\n\"It's her word against his anyway. Administration tends to favor the student's claim by default, but his claim would be a little bit wilder than 'oh, she slapped me on the ass.' As long as she kept her cool, she could probably bullshit her way through it. I mean, not that it matters since she's letting him face-fuck her now...\"\n\n\"Aw, yeah, take it, Ms. Miller!\" Peter was clutching Ms. Miller by the back of her head, repeatedly jamming his oversized cock down her throat. Ms. Miller was making duck-like gagging noises in response, but she seemed to be game for it. He cooed, \"You like being my dirty little slut teacher?\"\n\n\"I love it!\" Ms. Miller cried out after being pulled off his cock, gasping for breath. \"I love being your dirty little slut teacher!\"\n\n\"If she gives him a grade at the end of this like I did with you our first night,\" said Penny, \"I might get a little sick.\"\n\nCaleb said nothing. Penny looked over and realized he seemed to be making an effort to keep watching the quasi-abuse.\n\nGiven Caleb's age, it was hard not to cheekily call it \"a senior moment.\" The longer she observed Caleb's despondence over the action onscreen, the more his behavior since leaving his bedroom seemed to slide into place.\n\n\"Hey.\" Penny put a hand on Caleb's shoulder, getting his attention. \"You do realize I'm not expecting you to do any of that to me downstairs, right?\"\n\n\"Yeah, I know,\" Caleb blurted out. \"Well, I didn't, but I mean yeah, of course you weren't.\"\n\n\"Well, you could if you wanted, but...you know what, pause this for a minute.\" Caleb paused the porn on a frame of Peter's hands stretching Ms. Miller's mouth into a large gape. Her heavy makeup was already starting to run, just like the fat wad of oxygenated drool spilling from her lips. \"Actually, just\u2014\"\n\n\"Shut it down, yeah.\" Caleb closed down the video entirely, disconnecting his iPad from the TV.\n\n\"Okay, how do I put this,\" Penny continued, racking her mind for some kind of example.\n\nCaleb jumped in before Penny could settle on her words. \"Look,\" he said, \"I get that it should be fun to have a little power over someone who used to be in charge of you, even if she was really nice about it. But that's the thing; you're not some horrible person I'm finally turning the tables on after a year of eating shit. You're...you're Miss Piper.\"\n\nShe nodded in response, unable to stop herself from smiling.\n\n\"I mean, it's not like I never thought about it. That first night, when you were sexting me, I kept thinking 'Okay, I'm going to pass this quiz, I'm going to run up to her apartment, and I'm going to fucking ruin her.'\"\n\n\"YES,\" exclaimed Penny. \"Can I tell you something? After I sent you that last question\u2014\"\n\n\"Still pissed about that, by the way. That was so cheap.\"\n\n\"Yeah it was, and I was bracing myself. I thought, 'If I unlock that door, he's going to kick it open, he's going to fuck me stupid, and I'm going to love it.'\"\n\n\"Instead, I just stood there like an idiot.\"\n\nPenny shook her head. \"Don't do that. You gave me a chance to take the lead, and it brought out a side of myself that I didn't know I had. And I LOVED it. I wouldn't change a thing about that weekend.\"\n\nPenny's hand slid down across the clothed ridges of Caleb's muscular body, just past his stiffening cock, coming to rest on the inside of his thigh.\n\n\"Now, though...you're experienced. More than that, you've turned out to be a good cocksman.\"\n\n\"A lot of that was you,\" he giggled.\n\n\"So? Even if it was,\" she said, \"there are things you did to me\u2014subtle things\u2014that I never could've taught you.\" She rubbed up and down the inside of his thigh, pulling in closer, talking softly into his ear. \"Face it, sweetie: You're kind of a natural, and I have to know what exactly I'm dealing with. So before I can teach you any more...I have to give you an assessment test.\"\n\nOn her next upstroke, Penny drifted up a little further to his sac and felt him twitch upon her fingertips.\n\n\"Mmm,\" she confirmed, \"something tells me that sounds a lot more appealing to you.\"\n\n\"A little bit, yeah.\"\n\nPenny kissed Caleb on the cheek. \"So, don't overthink it,\" she said, before getting off the couch. \"All you need to do is pound the shit out of me, the way you apparently fantasized about all year.\" She passed back through with her gym bag over her shoulder, rounding the bannister between the entryway and the wall. \"You get changed into your gym clothes. I'll change downstairs.\"\n\n\"You're not just my hot teacher anymore, though!\" Penny reentered the great room with her gym bag slung over her shoulder and turned for the steps. \"What if I can't really do that to you?\"\n\n\"Let me worry about that,\" said Penny, descending the stairs without looking back to Caleb.\n\nShe made sure her grin was evident in her voice, because the only other way to assure him was to tell him what she had in her bag.\n\n<p align=\"center\">* * * * *</p>\n\nFor a little while after he dressed in his ratty Adidas tank top and mesh shorts, Caleb sat on his bed in quiet contemplation. After an admittedly short life-to-date facing down an extended hit-and-run recovery, a departed father, tough-talking coaches, and defensive linemen built like refrigerator trucks, his sweet and smoking-hot English teacher had reduced his inner vocabulary to one word:\n\nFuck.\n\nHe saw three ways this could go. In the first way, his hormones would go apeshit, he'd pounce on her, and commit to something that, if it wasn't rape, was probably rape-adjacent. He'd hate himself, Penny would probably be freaked out, and whatever was between them would be ruined forever.\n\nTwo: His self-control would win out. More accurately, his self-control would win out too well. He'd make gentle love to Penny, and while it probably wouldn't be grounds for a...break-up, he guessed, it would still disappoint her and possibly trigger some uncomfortable questions, however wrongheaded they were.\n\nLeading to option three, the most likely thing to happen: the sex would turn into some awkward, uneven mix of poetic lovemaking and hardcore screwing that neither Penny or Caleb would know what the actual fuck to make of and would take years of therapy to sort out. Either possibility ended in failure, and Caleb's relationship with failure was up in the air.\n\nOnce again, Fuuuuuuuuuuck.\n\nCaleb rolled his shoulders, working out the tension, briefly envisioning a 4th possibility where he never followed Penny downstairs at all. Of course, that was never a real option, so Fuck it, he decided. One foot in front of the other. He pushed his shoulders back, stretching out his chest, then got up and started toward his basement.\n\nCaleb's small-ish basement gym was well organized: the exercise machine and treadmill stood against the stairway wall, facing a large mirror on the opposite wall, where an exercise mat laid between a heavy bag and a rack of free weights. The rubber flooring had the appearance of light oak, which worked surprisingly well and complimented the yellow chiffon walls. A door next to the weights led to a bathroom with a small shower.\n\nOn his way down the steps, Caleb finally began to consider what Penny told him before she disappeared into the basement, and realized she had to have some kind of plan in place to help him bring out whatever animal lust she wanted to see from him. He wondered what that plan could possibly be for the time it took to round the corner into the basement landing and see what she was wearing.\n\nThe glasses he loved so much were gone, but that didn't seem to matter. Penny's dirty-blonde hair was pulled back tight into a sporty ponytail. She wore a dark blue tank top that clung tight to her fit, luscious curves, and loose black nylon short shorts that left little to the imagination. He could see only one set of straps around her shoulders, which probably meant she wasn't wearing a sports bra.\n\nAnd again, out loud this time, \"Fuck!\"\n\nPenny turned to Caleb and delivered her hardest punch. The hard nipples that poked through the tank top confirmed the lack of a bra, and silk-screened on the front in bronze varsity lettering were the words \"RAVENCLAW QUIDDITCH.\" Caleb swore his dick added another three inches to itself after he saw them.",
        "That wasn't her hardest punch. Her hardest punch was \"Is my outfit okay, Coach?\"\n\nHer delivery was very matter of fact, with only a slight hint of playfulness. She wasn't trying to act girly or na\u00efve, nor was she trying to act overly seductive. She knew she was dressing to get fucked, and as such, let the outfit and her choice of words\u2014not her voice\u2014do the work.\n\nWell, first way it was. He strode down the rest of the steps and marched toward Penny with a very clear image in his head. Everything that happened in Caleb's room? That was lovemaking. In this basement, he wasn't even going to undress her. He was going to pin her down and somehow push his cock through her shorts, God knows it was hard enough. It was going to be short, violent, direct, and oh-so-fucking...\n\nTake the scenic route.\n\nHis first night with Penny blindsided his mind. His stride lost no determination, but it softened all the same as he recalled Miss Piper's lesson on how to appreciate a woman's body: The idea of building anticipation, taking \"the scenic route,\" how that heightened Penny's response to him and made him even hotter in return.\n\nCaleb kept slowing down until he had stopped in his tracks, drinking in the object of his lust. Unlike last night, he wasn't freezing; on the contrary, he knew exactly what he had to do. Miss Piper was calling this a test. If he wanted to score high marks, he had to prove he'd been paying attention in class.\n\n\"Outfit's great,\" Caleb said, trying to sound calm, kind of hoping he failed. \"Finish stretching, I'll turn on some music.\"\n\nWith one eye, he loaded Spotify on his phone, paired it to the gym's sound system, and hit \"Shuffle Play\" on his usual workout mix. He kept his other eye on Penny, bending down to stretch her smooth, shapely legs. The motion caused her shorts to ride up her rear ever so slightly, and they were cut high enough and hung just loose enough that Caleb could see just a hint of swollen labial flesh where one would expect to see cotton.\n\nPenny could see Caleb staring in the mirror, but that was part of the point. It was roleplay, tease; he was supposed to stare. However, if he wasn't staring in the first place, he probably would have realized that his usual \"beast mode\" workout music didn't exactly fit.\n\nCaleb's phone jumped out of his hand as soon as the first N-bomb dropped, at which point Penny abruptly stopped stretching for some reason. By the time he caught the phone in his left hand, a couple of other N-bombs went off, as well as the words \"motherfucker,\" \"bullshit,\" and, naturally, \"bitch.\"\n\nCaleb finally killed the music and looked back up at Penny, trying her best not to chortle. \"I was just about to say,\" she chided, \"maybe we should have a safe word for when a really bad song comes up.\"\n\n\"Waka Flocka Flame is actually amazing, but\u2014\"\n\n\"Oh, with a name like Waka Flocka Flame, how could he not be?\" She took a pull from her Planet Fitness-branded water bottle.\n\n\"Yeah, I don't blame you for not getting it. Hang on, I think Spotify might have a playlist with lighter stuff.\" Caleb started punching it in. \"Anyway, I got all this equipment, but I'm thinking we keep things simple. Stick with mat work, throw in some barbells. It'll kick your ass a little bit, but trust me, it'll be worth it.\"\n\n\"Whatever you say, Coach.\" Penny didn't seem sure where he was going with this\u2014which, Caleb recalled, was a good thing. He hit \"shuffle\" on the playlist he found, blasting Jason Derulo through the gym speakers.\n\n\"Grab some weights,\" he said, \"and we'll start with some bicep curls.\"\n\nCaleb wasn't kidding; this was rough. The exercises were simple, but cumulatively intense, with Penny feeling more of a burn as she pushed on. For his part, Caleb was encouraging but firm, pushing her from one exercise to the next with no rest in between and leading her through her reps with well-meaning hostility.\n\n\"SIX,\" Caleb barked as Penny started to slow down on her push-ups. \"SEVEN! Push through, Penny, we're a long way from done!\"\n\n\"God, you're mean!\" Penny groaned through another push-up, sweat already starting to coat her body from the exertion and the stale basement air.\n\n\"EIGHT! I didn't get my pecs from couch surfing, just like you didn't get your brains from reading E.L. James! NINE, gimme one more!\"\n\nPenny growled on her last push-up and collapsed onto the mat.\n\n\"Good news, that's ten!\" Caleb clapped his hands together. \"Bad news: we're moving on to squat thrusts! Stand up, let's go!\"\n\n\"This is the worst idea I've ever had,\" Penny whined, half-joking.\n\n\"Spoken like someone who knows what a squat thrust is. Show me how you do one.\"\n\nTen squat thrusts, ten mountain climbers, and a sixty-second side plank later, Penny's back was on the mat. Caleb circled around her panting, shining body, watched her captive breasts rise and fall with each breath she barely caught, stretching out the sweat-stained bust of her Ravenclaw Quidditch tank a little each time.\n\n\"Get some water.\" Caleb handed Penny her bottle. Without getting up, she took the bottle, wordlessly thanked her \"coach,\" and took a pull.\n\n\"It can get a little hot down here,\" said Caleb, appearing with a gym towel. \"I'm gonna wipe you down before your next circuit.\"\n\nPenny was going to say something about how she was starting to see his game, and how clever he was for it. But before she could open her mouth, Caleb was above her, wiping down the moisture that had collected on the top of her scalp and her eyebrows. He then slid down past her temple to her neck, giving Penny a little chill when Caleb passed her throat. The towel was soft and clean, but Caleb had a football player's grip that reminded her of her delicacy in his hands. He didn't scare her, but he was clearly in control, which he exhibited by moving the towel down, across her collarbone, into the beginning of her cleavage...\n\n...then pulling out, sliding the towel up and across, collecting the sweat under her right arm before coming back for her left. Wow, she thought, wincing in beautiful disappointment, he really is a fast learner.\n\nCaleb lifted her tank up, peeling it off the skin of her glistening stomach, holding it in place while he wiped off her sweat in small, circular motions that kept drifting lower, lower, lower. Her breaths shrank, and the air passing through her throat seemed to thicken, as the soft cloth began to push against the elastic of her waistband, poking ever so harder each time...\n\n...until it was gone, the towel moving to her left leg. Penny had moaned, quietly impressed with the monster she had created, while Caleb held back the gasp he wanted to make after bringing himself so close to the soft, juicy mound he so desperately wanted to penetrate. But the words from Penny's phone call kept ringing in his ear, reminding him how much better it was going to be if she felt like she earned it.\n\n\"So for the next circuit,\" said Caleb, his eyes fixed on the leg he was toweling off and not the face that revealed so much frustration and desperation, \"I want you to go five pounds up on your weights.\"\n\n\"I don't know, Coach,\" she groaned, \"that first run really took it out of me.\"\n\n\"Don't think about how much you may or may not have left in the tank,\" he said, moving the towel to the inside of her thigh. He dropped his voice to a sizzling murmur and continued, \"Just focus on how good you'll feel when you get through it.\"\n\nPenny took a deep breath. \"Just five pounds?\"\n\n\"That's all.\"\n\n\"...I think I can handle that.\"\n\nIt turned out that after a circuit that worked the body head to toe, five pounds made a hell of a difference. When Penny curled her arms with the dumbbells, she felt more of the extra weight than she expected to, generating a more intense burn in her biceps. Caleb carried her through, though. Aside from the promise of ridiculously hot post-workout sex, Caleb continued to prove himself to be a damn good motivator. Whenever she felt herself fading, she'd concentrate on his fierce, encouraging voice, telling her not to quit, inspiring her to dig deeper for the energy she needed to push forward.\n\nAfter she finished her sixty second side plank, a winded Penny dropped back to the mat, drenched in a fresh coat of sweat. Once again, Caleb handed Penny her water bottle, but her arms were too jellied to take it. So Caleb sat her up and watered her himself, sitting right behind her.\n\n\"You okay?\" he asked.\n\n\"Fine,\" Penny wheezed. \"I should be good to go in a minute.\"\n\n\"Good.\" Caleb grabbed the towel and scooted in, enclosing Penny within the embrace of his stripling, rock solid body. She sighed when he started dragging the towel against her skin, then gasped when she felt his powerful cock press against the small of her back. \"I've got something else for you to lift,\" he said.\n\n\"Mmm. A nice protein shake sounds like just what I need right now.\"\n\nCaleb blinked, stopping his ministrations around her collarbone; Penny could see spinning pinwheels in his eyes.\n\n\"There's protein in cum,\" she explained. \"It's a DNA joke.\"\n\nHe winced. \"Jesus, I'm dumb.\"\n\n\"The benefits of banging your teacher,\" she mused with a gentle laugh, reaching behind her to stroke his cute, sexy cheek. \"You get a little smarter every\u2014\"\n\nPenny gasped before she could finish that thought; Caleb's towel slid into her cleavage and under her tank top, dragging the cloth against the soft, moist flesh of her breast and over her stiff, sensitive nipple. She moaned softly, leaning her head back against Caleb's shoulder, prompting him to crane his head down and kiss the outstretched side of her neck. \"Seems I've made you real wet,\" he said, the salty taste of her sweat fresh on his tongue.\n\n\"You sure have, Coach.\"\n\nThey were facing the mirror, which gave Penny a good straight-ahead view of Caleb's knuckles distorting the \"RAVENCLAW QUIDDITCH\" lettering on her tank top from underneath. She realized, aside from light strokes and touches, that she was powerless to return any of Caleb's affections; he had worked all the energy out of Penny's limbs, turning her into nigh-literal putty in his hands. She watched helplessly as his free hand caressed her stomach while his other hand, no longer holding the towel, continued to knead and flick at her breasts; just like before, the hand on her stomach creeped ever closer to the waistband of her shorts, going so far as to probe at it, push it just past the edge of her mound.\n\nUnlike last time, however, Caleb eventually slid past that barrier, brushing his fingers through her soft bush on his way down to her ever-slickening center. All she could do about it was watch her expressions contort into various pleasured and pained expressions as his nimble fingers slipped back and forth across her clit, in and out of her slit. All the while, he stared at her mirror image with those fucking heat-vision eyes, the same ones he looked at her with back in September, before his inconvenient emotional attachment set in. English naturally lent itself to an appreciation of creativity...and this was certainly a creative way to dominate her.\n\nShe had yet to realize how creative he could be.\n\nCaleb didn't plan this. In fact, he didn't really plan any of it, he was going mostly by the seat of his pants and was surprised he was doing as well as he was. He just saw the mirror image of Penny, captured in his massive arms, twisting erotically in his powerful grip, staring back at them with her face warped from her wanton lust, and somehow, he connected it to Penny's modest jones for an audience.\n\nIt seemed so dumb in his head. But he trusted Penny to tell him if it was dumb, and he trusted his ego to survive the hit if she did. So he lightly kissed her neck, slowly worked his way up to her ear, and after lightly licking its round rim, whispered \"She's kind of hot, don't you think?\"\n\nHe motioned to the mirror; Penny followed his gaze, laughed gently, and nodded.\n\n\"Yeah,\" he whispered, \"I think she likes you too.\" He kissed her ear once more. \"I bet she's got a great set of tits under that shirt. What do you think?\"\n\nPenny nodded again. She couldn't do much more than that, really.\n\n\"I bet if we show them yours...\" Caleb's hand slid out of Penny's tank top, moving itself downward and grabbing it by the hem. \"...they'll show us hers.\"\n\n\"I'd like that,\" Penny moaned, and Caleb dragged her shirt up across her stomach. He made sure the hem got caught on the underside of her breasts so that they bounced out of her confines, drawing a small gasp from Penny when she watched the same thing happen to her new friend in the mirror.\n\n\"I was right,\" Caleb teased. \"Big firm titties, juicy red nipples...\" Caleb tweaked her nipple when he said that, and seeing her friend gasp at the same time she did sent an electric shock through her body and down to her pussy, causing her to semi-involuntarily grind against her student's steel member.\n\n\"Look at her face,\" he said. \"She looks like she wants to get fucked, doesn't she?\"\n\nShe moaned in affirmation, her pussy gushing in anticipation.\n\n\"Wouldn't you like to see her get fucked?\"\n\n\"Uh huh!\"\n\n\"Tell her,\" he said. \"Tell her you want to see her get fucked.\"\n\nPenny looked right into the eyes of her new friend, writhing in the embrace of her lover. Her friend looked back at her with challenging, lecherous eyes. Penny told her, \"I want to see you get fucked.\"\n\nAnd then Penny was down face-first on the mat by a firm push of Caleb's hand. That hand soon took hold of her shorts, and she yelped with lust when they were yanked off of her legs, leaving her naked below her shoulders. When Caleb pulled her back to her knees, she saw her friend in the mirror once more; her now shirtless lover had gotten behind her, slapping his throbbing cock against her ass. There was a mischievous, anticipatory smile on her face, which morphed into a satisfied \"O\" when Penny felt Caleb's length slip into her velvet folds.\n\nShe cried out, but kept her eyes open so she could watch her friend relish the sudden fullness within her, swaying back and forth in time with Caleb's slow and steady rhythm, pushing out soft moans, drawing in soft breaths. Penny had helped him perfect this rhythm last weekend, allowing her to get accustomed to the warm, intrusive flesh of his perfect prick.\n\nPenny turned her attention to the man behind her friend; young, thick, arms like hot iron chains around her body. He was intensely focused on her, watching with his eyes and feeling with his grip, every twitch and shudder and groan she would make every time his tight pelvis would crash into her pliant bottom. His hands would change places every few dozen strokes, just when she was getting used to them; from her stomach, to her breasts, to her shoulders, to a mix, guiding her firmly through the ever-increasing chop of a roiling ocean of orgasmic bliss. She was connected to him, to her friend on the other side of the mirror, to her friend's lover, feeling their highs and lows alongside her own, and rather than be too much it was all just right.\n\nSuddenly she felt a sharp pain in the back of her scalp and her head was jerked upwards; his hand was pulling tight on her ponytail, and before Penny could object, his other hand returned to her breast and began to tweak her nipple. The pleasure and pain seemed to mesh together like peanut butter and chocolate; her moans, her friend's moans, only got louder, and instead of crashing back down she only went higher and higher and higher, until her skin started to crackle on the perpetual verge of catching fire. She saw that look in her friend's eyes, and she reached out to her only to find that she was also reaching out to her.\n\nCaleb bent forward, smothering their bodies, and hissed into Penny's ear, \"I think she wants you.\"\n\nPenny nodded. So did her friend.\n\n\"Do you want her?\"\n\nPenny nodded. So did her friend.\n\nHe wrapped one powerful arm around her stomach, and after slamming all the way into her, picked her up and knee-walked her forward, forward to the polished glass that separated her from her active audience, forward until her hands connected with her friend's through the glass, and then he started pounding back into her, at rocket speed now, and they watched each other jiggle and shake and shout under the ministrations of their respective lovers until they pushed them forward, cheek to cheek, their breasts crushed against the glass, their stiff nipples pushing inward against their pleasure centers, holy shit he was good at this, and from what little she could see of her friend she could tell that she was just as close as she was, she just needed a little more, she just needed her, and she stuck out her tongue and her skin ignited and the dam exploded and the world went black.\n\nShe was riding on gentle waves again. Up. Down. Up. Down. Watching fractal images of herself and her friend and their young lovers unfurl casually before her eyes at a measured, comforting rhythm.\n\nSuddenly there was another sharp jerk at the back of her head, and she opened her eyes to see Caleb beating off furiously above her face. In a split second she realized it was time to hit the showers, so she closed her eyes and stuck out her tongue and felt the first hot jet of his creamy passion streak across her forehead. She gasped and laughed, and felt more of his thick load splash across the bridge of her nose, the lid of her eye, her cheek, her lip, her tongue, her cheek again. \"OH FUCK,\" she could hear Caleb moan, \"fuck...fuck...\" and she responded with a moan of her own, before licking her lips and swallowing what landed in her mouth. She wiped the spunk clean off her eye, swallowed that too, and opened her eyes to see Caleb, winded, sitting on the floor, his spent dong drooling onto the mat.\n\nPenny crawled to him, and sank down toward his slowly deflating length. She placed a light hand on his sculpted chest; \"I love how your cock looks after it cums,\" she said, just before slipping it into her mouth and sucking down what little remained. She looked up to see him roll his eyes in pleasure and disbelief, making her heart flutter just for a split second. She came back up with a kiss on his helmet and a satisfied, theatrical sigh.\n\n\"How'd I do, Miss Piper?\"\n\nPenny flashed him a grin. \"Really well,\" she said. \"Just one small note...did you keep fucking me after I passed out?\"\n\nCaleb took a few seconds to process the question. Then, in the blink of an eye, his flawless peach complexion turned a ghastly white.\n\n\"No no,\" assured Penny, \"I'm okay, we're okay\u2014\"\n\n\"Oh my God I'm fucking horrible.\" Caleb buried his head in his hands.\n\n\"No you're not, you're 18 and horny.\"\n\n\"I knew something was off, but\u2014\"\n\n\"Caleb, I know you can't take me seriously right now, but look at me.\" Despite being so clearly twisted up, he still had to laugh at that, which Penny took as a good sign. \"The fact that I let you frost my face like this should tell you that we're okay. I'm just saying, if your partner ever seems limp or non-responsive for more than 30 seconds, you should stop and check on her.\"\n\nCaleb nodded. \"I guess I just feel like I should've known better.\"\n\n\"Well, now you do.\" Penny smiled, putting a reassuring hand on his shoulder. \"And honestly, I'm not that broken up about it. I know the kind of person you are, I know you regret it, and I forgive you. This is really not a conversation we should have when I'm covered in your cum.\"\n\n\"Yeah, we should shower.\"\n\n\"Let's go.\"\n\n<p align=\"center\">* * * * *</p>\n\n\"Let's not think of it as a 'feminist' thing,\" said Penny later that night, as she and Caleb both dug into a succulent rack of baby back ribs taken out from Austin's Smoker, the local barbecue joint. They were dressed once more in their normal clothes, back on the couch in the great room, with Caleb piping in some relaxing indie rock at a low volume for background. \"I mean, it is, but that's not the easiest way to explain what I'm talking about. It's like this: sex is an act of partnership.\"",
        "\"Right.\"\n\n\"Yeah, obviously. But feelings and emotions during sex can be so intense that it's easy to forget about the other person. Even when we recognize that person, it's about how he or she makes us feel, or how proud we are for making that person feel a certain way\u2014I am absolutely guilty of this, by the way. I don't want you to think that this is about me lecturing you on how selfish you are. We're all a little selfish during sex. We have to be; otherwise it's just work.\"\n\nCaleb finished cleaning off a rib and dropped it onto the pile stacked on a paper plate. \"So what are you saying?\" he asked. \"That I shouldn't kick myself too hard for what I did because I'm still learning?\"\n\n\"Frankly,\" said Penny. \"I don't entirely know where I'm going with this. I'm actually not as experienced as I might seem. I just know that I want you to move on from what happened downstairs because I'm already over it, and I want you to understand...\"\n\nPenny stopped for a moment, looked forward, into some imaginary truth that was staring back at her, and laughed softly to herself.\n\n\"You know,\" she continued, \"I've been with four other people besides you. One of them long term. They all just kind of took charge in bed, and I was fine with that. Even now, when I'm starting to get a taste for being in control, there's still something oddly comforting about letting a guy just go to town on me. So that's probably how it's going to go for however long this lasts; sometimes I'll want you under my spell, sometimes I'll want you to throw me on a bed and fuck me to death. But as much as you have to meet my needs, I still have to meet yours\u2014whatever those are. See what I mean? It's a partnership.\"\n\n\"So you're asking what my needs are? What I'm hoping to get out of this?\"\n\nPenny blinked. She resisted the urge to smack herself. \"You know what,\" she said instead in a self-flagellating tone, \"I was just rambling, but that's a really good question to ask. What do you want when you're with me?\"\n\n\"I suppose 'make you happy' is a cheap answer.\"\n\n\"Admirable, but yeah, cheap. It's all about what I can give you.\"\n\nCaleb sat with the question for a while; he even turned down the music a bit to better concentrate on it. Penny wanted to tell him not to hurt himself trying to think of an answer, but she was worried it would come off as snarky even though she didn't want him under any undue pressure. Anyway, the time gave her a chance to think of her own answer.\n\n\"Honestly,\" Caleb eventually said, \"the best I can come up with is 'the pleasure of your company.' Which makes me sound like I think this is a romantic comedy about following my dreams or something.\"\n\n\"You know what,\" said Penny, \"that's the best I can come up with too.\"\n\n\"Maybe it's just that simple,\" offered Caleb, washing his hands and mouth with a wet-nap.\n\n\"Or, scary version, maybe we don't understand the real answer,\" countered Penny.\n\n\"Maybe,\" said Caleb.\n\nPenny thought there was a \"but\" coming, but none ever came. The two just sat in a relatively comfortable silence, finishing their meals, and then Caleb asked the real important question.\n\n\"So the long term guy,\" he said, \"that's the one who gave you the biggest orgasm of your life, right?\"\n\n\"Oh my God, you're STILL on that?\"\n\n\"Look, just because I know it's a stupid, juvenile thing to compete on doesn't make me want to compete any less!\"\n\n\"Caleb,\" Penny laughed, \"I know you think you want the title, but I promise you, you don't want the title.\"\n\n\"That only makes me want it more!\"\n\n\"The biggest orgasm of my life involved me going so hypersensitive that I screamed like a banshee every time I felt so much as a gentle breeze! For, like, 20 minutes!\"\n\nCaleb's eyebrows jumped.\n\n\"No, it only SOUNDS hot. In practice you will never stop laughing at me.\"\n\n\"I'm kinda laughing at you now.\"\n\n\"Whatever. Yes, he was the long term guy, no, he's not someone you should aspire to. So let it go; you'll never get me there, and you shouldn't feel bad about not getting me there.\"\n\n\"Miss Piper.\" Caleb caught himself using that name; it only took him a split second to decide that it was fine, and he laid his hand on her thigh. \"You realize you're waving a red flag in front of a bull, right?\"\n\n\"I'm just telling you how it is!\"\n\n\"All right.\" Caleb was now off the couch and on his knees at Penny's feet, unbuckling her shorts. \"Keep telling me.\"\n\n\"Caleb, your parents will be home in two hours. We have to clean up, I have to get out of here. You are not going down on me right now!\"\n\n\"Yes I am.\"\n\n\"Caleb, seriously...\" She wouldn't allow her shorts to come off, but she wasn't doing much else to fight him, either.\n\n\"Seriously...\" He started kissing up her thigh.\n\n\"Seriously...\" His left hand trailed under her shirt, his fingertips gently brushing back and forth across her skin, slowly creeping up to her breast.\n\n\"Seriously...\" His right hand creeped up her other thigh, up through her shorts, tracing her engorged and increasingly slippery vulva.\n\n\"Oh, all right.\" And she lifted up her hips and slid off her shorts.\n\n<p align=\"center\">* * * * *</p>\n\nPenny was gone with plenty of time to spare. Caleb had changed out of his day clothes and into the ratty gym shorts and t-shirt she slept in. He found some time to do a quick pickup of his room, and he was Overwatching it up with Chris, Jeff, and their friend Porter when he heard a knock on his bedroom door.\n\n\"C'mon in,\" he said after switching his mic off.\n\nThe door opened, but no one stepped inside. Caleb glanced over and saw Mom and Becca standing there, looking a little too calm.\n\n\"Hey, Caleb,\" said Mom.\n\n\"Hey, Caleb,\" said Becca immediately after.\n\n\"Uh, hey.\"\n\n\"How was your day, Caleb?\"\n\n\"You have a good day, Caleb?\"\n\n\"Ooh, your room's clean.\"\n\n\"It looks like a nice, clean room Caleb.\"\n\nWell, this certainly wasn't creepy and totally suspicious. \"Um, what's going on?\" Caleb asked, bemused.\n\n\"Did you go to 7-Eleven today, Caleb?\"\n\n\"You treat yourself to a Slurpee, Caleb? At 7-Eleven?\"\n\nCherry Slurpee. Foyer table. FUCK. \"Uh, yeah, shit, I got myself a Slurpee and totally forgot about it.\" Caleb was proud of how cool he was playing it considering that he was screaming on the inside. \"I am so sorry. I'll do better next time.\"\n\n\"Oh, don't worry about it, Caleb,\" said Mom.\n\n\"Yeah, don't worry about it. We all make mistakes.\"\n\n\"Sometimes life just gets in the way.\"\n\n\"You feel like a nice Coca-Cola Slurpee, you enjoy some of it, suddenly something comes up, it happens.\"\n\n\"You mean a Cherry Slurpee.\" Caleb was ready for that babytown frolics bullshit.\n\nBecca giggled. \"Yeah, you see? Everybody goofs.\"\n\n\"Everybody goofs, Caleb.\"\n\n\"Everybody.\"\n\nCaleb and his parents stared at each other, waiting. Neither side expected a confession, but one of them might have started corpsing over this absurd standoff, and that was always fun.\n\nIt was Mom who finally backed down. \"Anyway,\" she said, \"we're tired, I'm a bit drunk, Becca's a bit...Becca, I'm gonna let you play your game right after I do this.\" Mom shuffled inside, gave Caleb a peck on the cheek, and shuffled her way back out. \"Good night, honey.\"\n\n\"Night, Mom. Night, Becca.\"\n\n\"Night, Caleb.\" Becca gave him a quick wave and disappeared from the doorway.\n\nWhen Mom shut the door behind her, Caleb unclenched. He switched his mic back on. \"Yo, sorry about that,\" he said, \"had to say goodnight to Mom.\"\n\n\"No sweat,\" said Chris.\n\n\"Hey, do you need me to switch characters? We're a little low on defensive guys, I could roll with Bastion for\u2014\"\n\nThere was another, slightly more urgent knock on the door.\n\n\"Oh for fuck's\u2014What's up, Mom?\" He switched off his mic.\n\n\"Hey, Caleb, almost forgot.\" Mom opened the door. \"Did you get into my makeup? Maybe experiment with my lipstick a little?\"\n\n\"...what?\"\n\nAnd that's when Becca literally slid through the door, holding Penny's cherry Slurpee, pointing at the thing that blew Caleb's story to pieces. \"Because there's a red lip-shaped smudge on the straw! BAM! BUSTED!\"\n\n\"SO BUSTED!\" Mom added, excited.\n\nCaleb was cringing, shaking his head, kind of embarrassed, kind of loving this.\n\n\"Tell me EVERYTHING,\" said Becca, plopping down next to Caleb on his futon.\n\n\"Tell HER everything,\" said Mom. \"Just tell me her name and that you have condoms!\"\n\n\"Okay, look!\" Caleb said, raising his hand to stop everything. He had pretty much given up on his game at this point, but couldn't leave lest he be penalized for abandoning his team. \"She's not a girlfriend. She's just somebody I've been hanging out with. You're never meeting her, so don't make a big deal out of it.\"\n\n\"Why not?\" asked Mom. \"We're entertaining!\"\n\n\"We only needed three minutes to hash out this whole Columbo routine! We're awesome!\"\n\n\"It's not about that,\" laughed Caleb. \"Really, I just don't see her ever being that important to me. Neither does she. I promise you, though, when I meet The One, you will beg me to stop talking about her.\"\n\n\"Okay, honey,\" Mom chuckled. \"We're just really excited for you.\"\n\n\"Really? I didn't notice. Oh, and we're not at the point where condoms need to be a thing\u2014\" A little white lie, or what he hoped would be one. \"\u2014but I'll buy some tomorrow. Promise.\" Not a lie at all.\n\n\"Works for me,\" said Mom. \"And she's treating you okay?\"\n\n\"Yeah, she's pretty cool,\" said Caleb. Something came over him, then; he wasn't quite sure why he brought this up, but in retrospect, he probably realized it was worth talking about. \"I'm actually a bit too sensitive for her tastes; go figure. But I'm learning, and she's been patient, so...yeah.\"\n\n\"Interesting,\" said Mom; she was referring to Caleb's answer, but she also happened to describe the look on Becca's face. \"All right, seriously, I'm about to pass out. C'mon, Becks, we've tortured him enough.\"\n\nBecca stood up and walked toward her wife without saying goodnight. Instead, she whispered something in her ear, and she nodded in response. Caleb knew what was happening, and he wasn't that threatened by it; Amelia and Becca had figured out pretty early on that there were some things Caleb was more comfortable telling his loving mother, and other things Caleb was more comfortable telling his cool stepmother. Both understood the value of his confidence; neither would ever seek to undermine it without a grave reason.\n\n\"Hey, Caleb,\" said Becca, \"is it cool if I hang out with you for a couple more minutes?\"\n\n\"Uh, sure. Gimme a sec.\" He switched on his mic, told his friends he had to pull out (the match had just ended anyway; of course they lost), and quit the game. Mom wished Caleb a good night once more, and shut the door behind her.\n\n\"Okay,\" said Becca, reclaiming her seat on the futon next to Caleb. \"So, what's going on with this girl? How far have you gotten with her?\"\n\nCaleb shook his head. \"I lied. We've gone all the way.\" Becca didn't even flinch; just nodded her head in understanding. \"We've taken precautions,\" Caleb continued, \"not that you want to know about them. She also says she's on the pill, and I trust her, but I get why you'd have concerns.\"\n\n\"Right,\" said Becca. \"It's not about trust, it's about responsibility. If she's cool, she'll get that.\"\n\n\"I really will pick some condoms up tomorrow, and I'll use them from now on.\"\n\n\"Good,\" said Becca. \"Listen, I know I look like I've been out and proud since puberty, but I've had some misadventures while I was learning about myself. And for what it's worth? Condoms aren't that big of a deal. It feels different, absolutely, but the peace of mind is worth it.\"\n\nCaleb nodded.\n\n\"So, since we're on a roll, do you have any questions? Anything you're worried about?\"\n\n\"Actually, no,\" said Caleb. \"She really is very cool. She knew what she was doing, she was patient with me, she gave a shit about my feelings...we had a great time.\" Caleb suddenly felt Becca's hand reaching around his back and patting him on the shoulder. She was beaming, and when Caleb went back over his words he realized he was beaming too.\n\n\"Good for you,\" she said. \"Not a lot of people are lucky enough to get a first time like that. I'm glad it was with someone who made you feel safe and comfortable.\"\n\n\"Thanks,\" blushed Caleb. \"So am I.\"\n\n\"Let me ask you something, though: When you said earlier that you thought you were too sensitive for her, what\u2014\"\n\n\"Just a vibe I get,\" Caleb said. \"She says I'm okay, and I mostly believe her, but there's a couple of things that...I dunno.\"\n\n\"That's fine,\" said Becca. \"Sometimes you just get a feeling. Here's my thing: You're no sap. You don't strike me as the kind of guy who dotes a girl to death. Obviously, I could be wrong; maybe you keep telling her shit like 'You're my pookie-wookie honeybear schweetums'\"\u2014she said this in a falsetto voice while making a jerk-off motion with her hand\u2014\"and you insist on fucking her while listening to 'Hands to Heaven,' I don't know your life.\"\n\n\"What's 'Hands to Heaven?'\"\n\n\"The most pathetic love song ever written,\" said Becca, theatrically staring into the middle distance. She shook it off and continued. \"My point is, if that's not you...well, the only kind of person who doesn't like to hear compliments is the kind that isn't used to hearing them.\"\n\nCaleb nodded. \"You know, she might have hinted that her ex-boyfriend really sucked.\"\n\n\"Hmm,\" said Becca. \"What I'm thinking of might run deeper than a douchebag ex.\"\n\nCaleb didn't respond because there was nothing to respond to.\n\n\"Look, don't let me scare you. Again, this is purely hypothetical. But if you keep seeing this chick and you get more of a sense of that, don't try to fix her. And don't try to force more info out of her. For now, let her talk to you on her own time, if she even wants to talk to you. You said that this might be more of a fling?\" Caleb nodded. \"Then the same rules apply: Give her something to measure everyone else against. Just be ready for her to lash out if she thinks you're getting too close, because she will.\"\n\n\"Thanks, Becca,\" said Caleb. \"I appreciate that.\"\n\nBecca pulled Caleb in and gave him a rare kiss on the cheek. \"All right,\" she said, \"no more lectures tonight. I'm ready to pass out.\"\n\n\"Sleep well.\"\n\n\"You too.\" She had one foot out the door when she suddenly thought of something else. \"Actually, one more lecture.\"\n\n\"What's that?\"\n\n\"Make sure she knows this is a fling,\" she said, closing the door. \"I didn't want to say anything and embarrass you, but it sounds like you managed to land an older woman. And if that's the case, she probably gets what this is better than you do\u2014certainly better than me. But whether she's older or closer to your age, if you somehow manage to slip past her defenses, and then you leave? It's gonna destroy her.\"\n\nCaleb nodded. It didn't matter that he and Penny always seemed to be talking around that concern\u2014one of many, of course. It was important; if it was already in his mental file, he made sure to underline it then. \"That's a good point,\" he said. \"Thanks.\"\n\n\"Happy to help. Feel free to talk to me if you ever need it.\"\n\nCaleb planned to jump back into Overwatch after his talk, but instead he found himself replaying his time with Penny, focusing more on the conversations and the looks she would give him instead of the usual spank bank material.\n\nHonestly, Penny didn't seem like she was that insecure.\n\nThen again, did they ever?\n\n<p align=\"center\">= = = = =</p>\n\nThank you so much for reading this whole thing! Before you go, take a couple of seconds and just rate this chapter for me; it's right below the story text. Almost any feedback is good feedback, and the stars are the easiest way to do it.\n\nOf course, if you have a few minutes, you can REALLY make my day by leaving a constructive comment. It can be affirmative, it can be critical, it can ask a question, it can even just suggest a more pathetic love song than \"Hands to Heaven.\" As long as it doesn't have any death threats or personal attacks, I'm not picky! Also, I try to respond to anything that brings up a good talking point, whether it's affirmative or critical, so if you do post a comment, check back in a few days; I might have a response! \n\nFinally, speaking of comments, you can find extended author's notes in the comments section if you want a little insight on what I was going for and what the hell took me so long to write this. Either way, thanks again for your time; hope to see you again soon!"
    ],
    "authorname": "member9458",
    "tags": [
        "teacher",
        "student",
        "older woman",
        "younger man",
        "domination",
        "nerd",
        "jock",
        "facial",
        "gym",
        "cumshot"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/graduation-ch-02"
}