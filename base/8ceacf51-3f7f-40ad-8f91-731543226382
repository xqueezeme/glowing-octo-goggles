{
    "title": "Is She Smiling at Me? Pt. 03 Ch. 02",
    "pages": [
        "This story is the second chapter of the third installment of the \"Is She Smiling at Me?\" series. As dearly as I wish I could say any part of it was based on actual events it is, in its entirety, a work of fiction. Any resemblance to real people is purely coincidental. This series is as much a tale of a polyfidelitous romance as it is a sex story, some readers may find it tedious if they're only looking for the naughty bits. Thanks, and enjoy.\n\n*****\n\nI awoke to the bright morning light beaming in through the bay windows of the bedroom, cursing whoever owned the place for whatever perverted malfunction of the mind had prevented them from installing curtains. It was our third day at the cabin and the blaring early morning sun routine was getting old. 'Maybe I'll jury rig something later...' I thought, rolling over to find myself alone in the big bed. Though I could smell coffee, the cabin was quiet; the girls obviously having gone off on their own somewhere. After a few minutes I groaned and rolled out of bed, pulling on my pajama pants and heading for the washroom.\n\nIn the kitchen I poured myself a mug of coffee and leaned against the counter, taking a sip and trying to shake the sleep from my head. I heard Alex's muffled giggle from out on the deck through the sliding glass doors. I walked around the counter to see what the girls were up to outside. I should not have been surprised, having been with the girls as long as I had, at what I saw out on the wooden deck in the shade of the cabin. They had dragged a blanket outside and Liz was on her knees in a pink satin robe, Alex reclining in one of the chaise lounge deck chairs in her blue floral number. Liz was holding one of Alex's long, slender legs aloft, slowly kissing and sucking her pale toes while Alex giggled.\n\nStanding there beside the counter, I paused to consider my options before deciding with a smile that I would sit inside and just watch the girls mess around, at least until one of them noticed me. I took my mug over to the couch and sat down, sipping the hot, bitter coffee. Just a few feet from the door I was afforded a good view; only a portion of Alex's upper half obstructed by the back of the chair. She wouldn't notice me unless she turned around, but Liz would have to spot me sooner or later.\n\nLiz was staring intently at Alex, one hand holding the back of her heel and the other massaging her smooth calf, her glistening tongue slipping between Alex's toes with their cute little black-painted nails. I'd never paid much mind to women's feet before I'd met the girls, but they definitely had a bit of a foot fetish going on, and watching them express it had in turn piqued my interest. Once Liz had licked between each toe individually, she began sucking them into her mouth, one or two at a time, making Alex giggle and squirm. I watched her bury her face in the arch of Alex's foot, sensually licking the smooth skin before letting her leg down and lifting the other to her mouth.\n\nI drank my coffee, trying to ignore my erection tenting my pajama bottoms, while Liz lovingly kissed and licked all around Alex's other foot. She repeated the same treatment I had witnessed on the first, her moist tongue snaking between each toe before sucking them gently, Alex giggling happily again. When she was done, she lowered the foot and crawled forward between Alex's legs, taking her hard, uncut cock in her hand and stroking her while she stretched forward for a kiss. The girls made out tenderly for a moment before Liz produced a bottle of lube, slathering it on Alex's dick until it was wet and shiny in the morning light. She shifted her legs out from under her, sitting down on her butt and leaning backwards until she was lying flat on her back on the blanket. Lifting her legs, she took Alex between her feet and started stroking her throbbing member between her toes, her nails painted a pale shade of -of course- pink.\n\n\"Jesus Christ...\" I muttered under my breath, incredibly aroused at the sight before me.\n\nLiz's robe had fallen open, her flat stomach and big, beautiful breasts on full display as she jerked Alex off with her feet. Her control was impressive; toes curled around Alex's shaft, sliding up and down on the slippery cock as the foreskin winked over her head with each pass. The glass muffled a lot of the sound but I was pretty sure I heard Alex moan softly as Liz stroked her with her dainty feet. At that moment Liz happened to turn her head towards me, looking cute and happy. When she actually noticed me her big, bright eyes lit up and her smile grew even wider. She licked her lips seductively and made a gesture for me to come join them, never missing a beat as her toes slid up and down Alex's cock. I waved her off, as if to say 'You girls go ahead' and smiled at her. She looked puzzled for a moment, trying to understand what I was attempting to communicate, but then she winked at me and blew a kiss.\n\nI laughed silently as Liz turned her focus back to Alex, who had evidently noticed none of our interaction and was lying still, enjoying the ministrations of Liz's feet. A few minutes later, Liz rolled over onto her stomach, the hem of her robe pulled up over her taut little ass, showing off her adorable cheeks as she found Alex's cock with her feet once more and started stroking her from this new position. She looked over her shoulder, then back to me with a mischievous grin, making a jerking gesture with her hand. I shrugged and pulled off my pajama pants; if Liz wanted to see me pleasure myself it seemed like a fair trade, and I was fully engorged as it was.\n\nFor a while I sat there stroking myself and watching Liz's talented feet pleasure her lover, her tiny toes curving around the big cock as they glided up and down expertly, until I heard Alex say something indecipherable through the glass. Liz giggled happily and turned around, crawling onto the chair on top of Alex and kissing her passionately. I watched as she reached around behind herself to position Alex's cock and sink down slowly, her mouth going wide as her ass met her lover's lap. She flashed me a sexy look and looked back down at Alex, riding her slowly.\n\nThis was the first time I had really sat back and watched the girls together. Of course, I'd seen them playing dozens of times by now, but I'd always been involved in some way. I enjoyed just seeing them be themselves together. Sure, they were both sexy as hell, but it was more than that; somehow their love and passion for each other became a tangible presence when they were together, and I felt fortunate to witness it.\n\nLiz was bouncing faster on Alex's cock, her big, full breasts bouncing along with her as she impaled herself over and over. I saw Alex's hands reach up and cup her bountiful tits, kneading them and pinching her nipples, until she sat up and buried her face in Liz's chest. Liz grabbed the back of her head, holding her close while Alex kissed and sucked her nipples. Liz looked over at me, an inaudible moan escaping her lips, as her fingers knitted into Alex's vibrant red mane. She bent to kiss her on the forehead as she rode her enthusiastically.\n\nAfter some time, Alex wrapped an arm around Liz and lifted her, flipping her over onto her back so they were face to face, Liz's legs wrapped around her waist. They kissed desperately while Alex plowed into her, fucking her forcefully. I could definitely hear Liz's moans and cries through the doors now as Alex had her way with her, hips rising and falling sensually as she drove herself into Liz. Recently, I had learned what Alex was capable of with that goddess cock of hers and I couldn't help but feel a small pang of yearning as I watched Liz take it hard and fast.\n\nI thought Alex might notice me, but she was making love to Liz with such singular devotion that the rest of the world was shut out, irrelevant to the moment they were sharing. Eventually, my experience with the girls told me Alex was about to climax, her thrusts growing more forceful yet slightly slower in cadence, and when I hear her muffled cry, I knew I was right. Alex jerked into Liz, her hips slamming forward and pushing into her as if she was trying to launch herself into her lover with the big load I knew she was pumping into Liz's ass. I smiled as I watched Alex cum and finally relax, collapsing against Liz and kissing her adoringly. The girls cuddled and made out lovingly, giggling and smiling at each other.\n\nI saw Liz whisper something in Alex's ear and she finally looked up in my direction. Her face cracked into a warm smile and she laughed, looking back down at Liz and saying something inaudible. Liz nodded her response and Alex laughed again, looking back at me and blowing a kiss. I smiled back at her and laughed quietly to myself. Now Liz said something I couldn't hear and Alex nodded, giving her a quick kiss and crawling off of her, shifting to one side. I watched Liz stand up, her robe loose and just barely hanging over her shoulders, fully open and showing off her tits and still-hard cock. Alex leaned over and smacked her playfully on the ass, making Liz giggle happily before she headed over and opened the door.\n\n\"Morning baby!\" She said excitedly, beaming at me as she pulled the door closed behind her.\n\n\"Good morning, beautiful.\" I said with a slight laugh.\n\nLiz said nothing else as she crossed the room, slipping her robe off her shoulders and letting it fall to the floor. She straddled my lap, positioning my throbbing cock at her hole and sinking down on me with a gasp. Between whatever lube remained and Alex's thick load, she was plenty lubricated, and I moaned as I entered her, feeling her tight warmth envelope me until she hit bottom.\n\n\"How'd you like the view?\" She asked sensually, her big, sparkling eyes staring into mine.\n\n\"You are a fucking smoke-show, baby.\" I smiled up at her.\n\nShe giggled and smiled joyfully, putting her feet over my thighs for leverage and started bouncing on my lap, moaning as she fucked herself on my hard cock. I took her stiff five-inches in my hand and stroked her as she rode me, leaning into her tits and sucking a nipple into my mouth, making her cry out. We'd been fucking only a few minutes when I heard the door open and close again; Alex walked over to us and leaned on the back of the couch.\n\n\"Mornin' perv.\" She teased, tousling my hair affectionately.\n\n\"Hey, can you blame me?\" I grunted, considerably distracted as Liz's ass slid up and down on me energetically.\n\n\"No,\" She laughed, \"No, I guess I can't.\"\n\nShe leaned in to kiss me playfully, slipping her tongue past my lips before turning to kiss Liz while she moaned and bounced on my dick.\n\n\"I'm going to have a shower, come join me when you guys finish up.\" With that she turned and headed up the stairs.\n\nAs worked up as I'd gotten watching the girls out on the deck, it wasn't long before I knew I was soon cresting the peak. I grabbed Liz and pulled her into me, kissing her and stroking her cock feverishly. She whimpered and cried out, panting heavily as precum flowed out of her, making my fingers slippery on her turgid member. We came together, Liz just a hair before me, her cum spraying into my chest and stomach hair in thick ropes as her ass contracted firmly on my cock. I tensed and bucked, shooting my own load deep inside her while she continued riding me, thrusting herself onto me forcibly as we grunted, cried and moaned in rapture.\n\nLiz giggled and leaned into me, pressing her tits against my chest, and kissed me happily, holding the back of my head in her hands. My own hands ran up and down her smooth sides, back and ass sensually while we made out, both of us breathing heavily, smiling and laughing at each other. When we began to float back down to earth, Liz finally pulled herself off me and stood up. I noticed a thick wad of cum, no doubt a cocktail of both mine and Alex's, leak down the inside of her thigh. Without a second thought Liz wiped it off with two fingers and sucked them clean, grinning sexily at me. I smiled and kissed her deeply, tasting the semen on her tongue. When she took my hand and led us towards the stairs, I slapped her on the ass firmly, earning another giggle.\n\nAlex was already standing under the hot water in the shower, washing her long hair, and Liz bounded around the half-wall to join her, hugging and kissing her joyfully. I rubbed a hand over my chin, realizing I was overdue for a trim, and went to the mirror over the sink. I wore my facial hair in a very short, trimmed beard, but I was a few days past the point I normally would have tidied it up and I was starting to look a little scruffy. The longer it got, the more my increasing collection of greys showed, and for being only thirty-four I guess I was a little self-conscious of that.\n\n\"What do you ladies think?\" I asked, turning toward them cuddling under the spray of the shower. \"Time for a trim?\"\n\n\"Naw, it suits you,\" Alex offered, \"At least up here. We're on vacation.\"\n\n\"You don't think my greys show too much when it gets long?\"\n\n\"You look so handsome!\" Liz insisted, making me grin.\n\n\"Very distinguished.\" Alex added with a smile.\n\n\"Besides, I like the way it tickles my butt.\" Liz giggled.\n\nWho could argue with an endorsement like that? I shrugged and brushed my teeth before going to join the girls in the shower, kissing each tenderly. We washed each other, cuddling, teasing and laughing amorously under the warm water.\n\n*****\n\n\"There could be snakes and shit.\" Alex said disconcertedly.\n\n\"There's no snakes!\" Liz exclaimed, looking to me for affirmation.\n\n\"There could be snakes.\" I answered with a shrug.\n\n\"Really?\" Liz's eyes went even wider than usual, an impressive feat.\n\n\"Honestly, I'm more concerned about bears.\"\n\n\"Bears?!\" Both girls blurted out.\n\n\"Yeah, I mean this is bear country.\"\n\n\"Yeah, no. You guys can go get eaten by bears, I'll stay here.\" Alex said firmly.\n\nIt was just after noon and we were standing around in the kitchen. I had been trying to talk the girls into wandering out into the woods with me; Liz was game, or she was up until I mentioned bears, but Alex wasn't keen on venturing out into the wilderness. I was going either way, but I'd be disappointed if I couldn't share the experience with at least one of them.\n\n\"Matt, you didn't mention bears.\" Liz said apprehensively.\n\n\"They're harmless.\" I laughed, \"Black bears. Little things, it'll be fine. We'll bring a few beers, find a nice spot to have a fire and cook some hot dogs, you'll love it.\"\n\n\"I do love a good wiener.\" Liz grinned. I smiled and slapped her on the ass.\n\n\"Ugh!\" Alex groaned, \"I hope you do get eaten by bears.\"\n\n\"You're going to need to change into pants.\" I pointed at Liz.\n\n\"Why?\"\n\n\"There's probably going to be poison ivy and shit. I'll show you.\"\n\n\"You're not doing a good job selling this whole thing, baby.\" Liz said, sounding dismayed.\n\n\"It'll be fine!\" I laughed, \"You're gonna be with me, right? I'm not going to let anything happen.\"\n\nShe did smile at that, and she leaned forward to kiss me on the cheek before turning toward the bedroom to change.\n\n\"Please don't let her get eaten by bears.\" Alex pleaded.\n\nI laughed and hugged her reassuringly, giving her a pat on the butt and following Liz to the bedroom to get my knives and tools from my bag. Liz was pulling a tight pair of jeans up over her cute little ass when she turned around and saw me clip a large knife to my belt.\n\n\"That better not be for bears.\" She muttered.\n\nI laughed again and shook my head. I couldn't believe these girls had never been out in the woods before. Out in the kitchen I threw a few bottles of beer into small backpack with a pack of hot dogs. We kissed Alex goodbye and went on our way. Towards either side of the cabin was dense woodlands, but I felt the right side might stay flatter as the left fell away to towards the lake. As we headed into the trees Liz said something about getting lost. I showed her how I would be using a compass to take a bearing to a landmark if we had to change direction so we could find our way back.\n\nWe made slow but steady progress through the foliage; there where areas thick with undergrowth that were easier to go around than traverse but I kept us moving more or less in a straight direction. Along the way I pointed out plants and fungi that were edible, or otherwise interesting for their medicinal or fire-starting properties. We came across a fallen birch tree and I cut some bark free, explaining I was going to start a fire without a lighter and birch bark was the best tinder nature had to offer. I found a patch of poison ivy and pointed it out to Liz.\n\n\"See how the edges of the leaves are smooth and they grow in clusters of three? That's what to look out for. Leaves of three, leave it be.\" I repeated the old adage.\n\nShe raised an eyebrow at me.\n\n\"I know it's dorky, but you'll remember that the rest of your life.\" I laughed.\n\nI took us back on course, walking carefully over loose rocks and tree roots. Liz tripped a couple times, far less nimble in the bush then I was, but I stayed close to her and caught her when she stumbled. It was like watching a newborn foal learn to walk and I laughed silently, shaking my head. A few hundred yards ahead it looked like the trees opened up into a clearing. I pointed it out and took us towards it. It might have been a good place to start a fire, so I felt it an appropriate time to say something I'd been holding back.\n\n\"Hey seriously, if we do see a bear, I'm going to need you to do exactly as I say, okay?\" I asked.\n\n\"I thought you said they were harmless.\" She made a face at me.\n\n\"They are.\" I said honestly, \"Unless you get between a mama and her cubs.\"\n\n\"You waited until I wouldn't be able to find my own way back to tell me that, didn't you?\" She asked incredulously.\n\n\"Yup.\" I laughed when she smacked me on the arm.\n\nThe forest did, in fact, open up to a small clearing, only a few dozen yards wide and maybe a hundred long. Natural rock formations had prevented any trees from taking root in this narrow slash in the forest, and thus the sun beamed down on us from above. A large, flat rock jutted out of the earth roughly chair height. I sat down and took off the backpack, opening a beer for Liz and offering it to her. She smiled brightly and sat down next to me, leaning over to kiss me on the cheek.\n\n\"Not so bad right?\" I asked, sipping my own beer. \"No snakes and no bears?\"\n\n\"No, just poison plants everywhere and bugs that want to eat me.\" She teased, making a face at me.\n\nI laughed and put an arm around her shoulder, pulling her into me and kissing her softly on the forehead. We sat quietly for a bit, sipping our beers and indeed swatting the odd mosquito. Being out in the forest with nothing but some basic tools and my wits was about as close as I ever felt to truly being free. You can't get that kind of peace in the city and I tried to make the most of every opportunity I was afforded. It wasn't often I had someone to share the experience with and I was grateful Liz decided to come with me.\n\n\"I'm really glad you came.\" I wanted her to know.\n\n\"I didn't... Yet.\" She grinned and winked.\n\n\"Wha- God damnit.\" I shook my head. I'd walked into that one.\n\nLiz giggled and looked up at me, big brown eyes sparkling warmly, her illuminating smile lighting her face. She hugged me tight and kissed me softly on the mouth before nuzzling her head into my shoulder.\n\n\"I'm really glad I'm here, too.\" She finally said, almost whispering.\n\nWhen we finished the first beer, I set to work gathering firewood from the dead branches that littered the clearing and processed them down with my knife. In a few minutes I had the structure of the fire assembled, only thing left was to light it. I got out the strip of birch bark I had collected earlier and I used my knife to scrape an alloy rod, about the size of a thick pencil, showering the bark in a spray of sparks. After a few attempts I had not yet gotten the birch to take a spark and Liz was beginning to doubt me.",
        "\"I have a question.\" Liz needled, \"Why wouldn't you just use a lighter?\"\n\n\"Where's the challenge in that?\" I asked, still scraping at the rod.\n\n\"I'm just sayin', we'd have a fire by now if you had a lighter.\"\n\n\"I do have a lighter.\" I answered just as a spark burned an ember into the bark and it went up like a torch. I picked it up and stuffed it into the center of the firewood, packing dry grass in behind it. Bark lit grass, grass lit twigs, twigs lit split wood and in seconds we had a fire. I flashed a self-satisfied smirk at Liz.\n\n\"Okay, that was pretty cool. I'll give you that one.\" She smiled at me.\n\nA few minutes later we were roasting hotdogs on an open flame in the middle of the forest, drinking beer and enjoying each other's company. After we ate Liz sat down between my legs, her back to my chest, and I held her close to me. Despite the heat and the sun, I enjoyed the closeness, and I took her hand in mine, lifting it to give it a kiss and squeezing her affectionately. Liz sighed happily and leaned into me, taking a sip of her beer. We talked and laughed, holding hands as the fire burned down to embers and the shadows of the trees in the clearing grew longer. Being with Liz always felt so natural, from my first awkward time meeting her at a bar, we had an instant and deep rapport. Time passed quickly and easily when I was with her and the way she looked at me when we shared these tender moments loosed a flutter of butterflies in my stomach.\n\n\"Hey, Matt?\" Liz asked softly, \"Are you our boyfriend?\"\n\n\"Ah...\" I hesitated, caught off guard. \"I mean it's not like we've ever talked about it. I'm still figuring out how this works with the three of us...\"\n\n\"What do you mean?\"\n\n\"Don't get me wrong, I am the happiest I've ever been being with you and Alex-\" She smiled brightly at that, \"It's just that it's a little... Weird. Isn't it?\"\n\n\"I don't think so. I think that you think it's weird because society taught you to think that. We live in a world where things are supposed to go a certain way, and when people don't fit into that narrow definition the world rejects them. Do you feel weird about us, or do societal structures make you feel weird about feeling natural about us?\"\n\nI was speechless. It was easy to overlook the fact that, despite her youthful innocence and bubbly personality, inside Liz was a wise and highly intelligent woman and I was taken aback momentarily. Of course, she was right. Nothing about being with the girls felt forced or uncomfortable. Whatever we were doing, the three of us just clicked. Without ever having to have talked about it, we found a natural harmony together; I felt like I fit into their lives and they into mine. The only times I ever felt strange about it was in relation to someone else's expectations, but never my own; my own heart and mind were quite clear on what they felt and what they wanted. It was fitting that I had this realization here, out in the quiet solitude of the forest where I liked to come specifically to get away from exactly what Liz had just pointed out.\n\n\"I feel like a boyfriend.\" I finally answered.\n\nLiz turned and hugged me fiercely, making that squealing sound she made when she was particularly excited, her bright eyes radiating joy as she leaned in to kiss me adoringly. I hugged her and held her tight, returning her kiss with equal enthusiasm. For a while longer we sat together, cuddling amorously and quietly enjoying each other. Any thoughts we may have otherwise had about getting frisky out in the woods were dashed by reality; reality being that mosquitos exist, as they insisted on reminding us every few seconds.\n\nWhen it was time to head back, I collected the beer bottles and anything man-made I may have left lying around, stuffing them into the backpack. I kicked dirt over the smoldering embers of the fire until the smoke had ceased and we started on our way back. Stepping into the dark forest, it took my eyes a moment to adjust as we moved from the bright sun of clearing to the shade of the trees. With a general sense of where I was headed, I guided us back, more or less the same way we had come in, and we were back at the cabin in half the time it took us to come out. We found Alex sunning herself, reclining in the chaise lounge out on the deck. She sat up when she saw us emerging from the foliage.\n\n\"No bears?\" She called.\n\n\"No ma'am.\" I said with a grin.\n\nLiz bounded over to Alex and hugged her, I bent to give her a quick kiss before going inside. Hot and parched, I rounded up three beers and popped the caps, bringing them back out to the girls. When I got back, Liz was enthusiastically telling Alex about my knowledge of plants and how I started a fire with a knife and piece of metal.\n\n\"Who are you?\" Alex teased, looking over the rim of her aviators at me.\n\n\"I told you when we left the city, you were gonna learn.\" I laughed and handed her a beer.\n\n*****\n\nFor dinner I made steaks with crumbled bacon and a sauce of whiskey, lemon, rosemary and brown sugar that was always one of my favorite recipes. For sides we had grilled corn on the cob and a potato salad I whipped up the day before. I was glad when the girls enjoyed it as much as I did; it was a bold flavor and I was worried I was taking a gamble with it, but they both complemented the meal emphatically as we sat at the little dining table in the living room.\n\nAfterwards, Alex and Liz wanted to take a walk down to the freshwater beach that was our corner of the lake to watch the sun set. We had gone down to check it out the day before and, though I was no fan of swimming, it was indeed a nice spot to hang out. I poured myself a whiskey and put the bottle in a backpack with a few plastic cups while the girls went to the bedroom to change. Stepping out onto the deck, I stared out over the horizon as the sun began its slow retreat toward the trees. I felt happy. My earlier conversation with Liz stuck in my mind; it had been a point of some uncertainty how the girls saw their relationship with me up to that point, but talking to Liz out in the forest assured me we were all on the same page. Even if Alex hadn't said as much herself, I felt it before Liz had said it and I was glad that it was out in the open now.\n\nAs I leaned against the rail sipping my whiskey and lost in my thoughts, I finally realized the girls were taking an exceptionally long while to change. I was about to go see what they were up to when Liz bounced out of the bedroom, Alex following shortly behind her. Liz was wearing nothing but her denim Daisy Duke-esque short shorts and a small, coral pink bikini top that struggled to contain her ample breasts. Alex wore a long maxi skirt and a white, crochet halter top, looking very boho-chic, as usual.\n\nThe trail to the lake wound through the trees down the slope behind the property in a hairpin fashion; long steady grades ending in a tight turn to the next level down. It was wide enough to not be treacherous, but if we were out past nightfall, we would have to be careful making our way back up to the cabin. Soon we emerged from the woods onto the open sand, a few dozen yards between us and the edge of the water. It was quiet here, save for the haunting cry of a loon somewhere out on the lake, fishing for his dinner. The sun was nearly at the point on the horizon where it met the tops of the trees on the other side of lake, long golden streaks reflecting off the gently rippling water.\n\nLiz squealed joyfully and kicked off her flip-flops, tugging Alex by the hand and dragging her toward the water. Alex laughed and kicked off her own footwear, looking over her shoulder at me. I gestured for them to go ahead and collected their flip-flops; I wanted to scrounge wood and tinder to be able to start a fire while we still had light. When I had gathered everything I felt I needed I sat down in the sand, assembling a fire structure so all I'd have to do is light it when the time came. While I worked, I watched the girls frolicking down by the water, even from my position nearer the tree line I could read Liz's body language; giddy with delight. The girls faced each other and kissed, appearing almost as silhouettes against the backlighting of the setting sun reflecting off the lake. I smiled and wished I had brought a camera to capture the moment.\n\nSometime later they parted and Alex walked slowly up the beach towards me, smiling happily while Liz walked into the surf, standing calf deep in the gentle waves. Alex sat next to me and leaned against my side, laying her head on my shoulder and sighing contentedly. I put an arm around her shoulder and squeezed her affectionately, kissing her on the forehead as we sat and watched Liz walking down the water's edge.\n\n\"Liz told me she had the boyfriend talk with you.\" She said softly.\n\n\"She did.\"\n\n\"She give you the society speech?\"\n\n\"Yeah, yeah she did.\" I chuckled.\n\n\"Yeah, that's how she convinced me too.\"\n\n\"It's an excellent point.\"\n\n\"Mmm.\" Alex acknowledged as she snuggled into me. \"It's been a long time since I've had a boyfriend.\"\n\nThat was all that was said on the matter. For a long time it had concerned me, as I knew it had Alex as well, how things could possibly work between the three of us. Despite our natural harmony, a personality flaw of mine was certainly that I felt a need to understand and define things, all things really. I was beginning to see the shortcomings of that mentality; what I had with Alex and Liz spoke for itself. Few, if any, words had ever seemed necessary on the subject. We had both come a long way since Alex expressed her worries that first morning together in the shower. I looked down at her and kissed her softly, just grazing her tongue with mine as I held her close, before she laid her head back down on my shoulder.\n\nEventually Liz began heading back up the beach towards us, looking back over her shoulder dreamily at the sky in its hues of gold, pink and purple. Seeing Liz coming our way, Alex jumped slightly, as if she'd suddenly remembered something important.\n\n\"Oh! Watch this.\" Alex said, a mischievous tone to her voice while she pulled what looked like a tiny remote from her top.\n\nShe clicked a button and Liz froze in her tracks a couple dozen yards away from us. She looked like a knee gave out and she almost lost her footing before catching herself, her eyes gone even wider than normal. I looked at Alex quizzically, one eyebrow raised.\n\n\"I made her put a vibrator in her ass while we were getting changed.\" Alex giggled and clicked off the remote.\n\n\"That's awesome.\" I laughed. The girls never ceased to surprise me.\n\n\"You could at least warn me first!\" Liz yelled, walking normally again.\n\n\"Where's the fun in that?\" Alex yelled back, clicking the remote again and eliciting another dramatic reaction from Liz.\n\n\"Jesus, I'm gonna have to try that some time.\" I chuckled.\n\nAlex turned to me, smiling brightly and gave me a quick kiss on the mouth, clicking the vibrator off again. She let Liz make her way the last few yards across the sand without further impediment, at least until Liz was standing directly in front of us. 'Click.' Liz gasped and fell to her knees, her mouth open and her eyes unfocused. Alex giggled and leaned forward to kiss her, Liz melting into her arms and kissing her back distractedly. 'Click, click, click,' went the remote until I could actually hear the buzzing of the vibrations coming from inside Liz while she moaned and squirmed. Alex let it go on until Liz was trembling from head to toe, humming in delight. 'Click.' It stopped. Liz shuddered and took a deep breath, collecting herself.\n\n\"She's evil.\" Liz said, looking at me.\n\n\"I know.\" I smiled at her, very amused with the situation.\n\nAlex just giggled again and pulled up her skirt as Liz turned around to sit between her legs, her back to Alex's chest with Alex's arms wrapped around her, kissing her on the cheek. I shook my head and lit the fire; I used a lighter this time, no messing around with knives and rods. The heat of the day was subsiding with the falling sun and the air would soon turn cool as night descended on the lake. Rifling through the backpack, I shook the loose sand out of three plastic cups and poured us each a couple ounces of whiskey, handing the drinks over to the girls.\n\nWe sat in the sand and watched the sky change color as the sun dipped below the horizon, casting shades from all across the Roy G. Biv spectrum against the few clouds in the otherwise clear sky while the fire popped and crackled cheerfully. We sipped our whiskey, laughing and flirting until the sky turned dark and the fire provided the only significant illumination on the quiet beach. Alex was sporadically tormenting Liz, turning the vibrator on and cranking up the power, leaving it on until Liz was humming and trembling before abruptly turning it off. Each time Liz would whimper in frustration, and Alex would giggle mischievously, hugging and kissing her lovingly.\n\nBy the time we decided to head back we had each had a few rounds of whiskey and we were definitely feeling it. The girls were growing steadily more amorous as the night went on and Liz seemed ready to burst, radiating raw sexual energy as her need built with Alex's teasing. I stood up and helped the girls to their feet before smothering the fire in sand. As the flames waned and finally died, darkness enveloped the beach such that it was all but impossible to see more than a few feet around in any direction, though the lake shimmered with the twinkling light of the stars above as it rippled gently.\n\n\"We may have made a mistake.\" Liz said, squinting in the darkness.\n\nI clicked on a flashlight, casting a cone of illumination against the tree line.\n\n\"Alright then, lead the way boy-scout.\" Alex teased.\n\n\"Alex, I swear to god, don't turn that thing on while we're going up the hill, I don't want to die tonight!\" Liz said insistently.\n\nAlex and I laughed.\n\n\"I'm serious!\" She exclaimed.\n\nI guided the girls up the trail and we made it back to the cabin without incident. Back inside, Liz was practically vibrating herself, ready to boil over with excitement. Barely through the door she leaned into me and kissed me hard, pressing herself against me while Alex sidled up to her back, sandwiching her between us and kissing her neck. 'Click,' went the remote and Liz began humming into my mouth as our tongues danced together. Alex took a handful of Liz's hair in her fist and pulled her head back roughly, shoving her tongue into Liz's mouth just inches from my face. When the remote clicked off again Liz whimpered and looked up at me, her big bright eyes broadcasting desperation.\n\n\"Bedroom.\" Alex commanded, a firm tone in her voice as she pulled Liz off me and turned her around.\n\nFollowing the girls to the room, I watched as Alex grabbed Liz's shorts by the waistband, firmly pulling her in and shoving her tongue down her throat once more. I sat on the edge of the bed and watched as Alex deftly popped the button on Liz's shorts, sliding them over her hips and letting them fall to the floor. Liz was fully erect and straining against the tiny black thong that barely covered her. A moment later Alex had the ties of the bikini top undone, Liz's generous breasts bouncing free as the top fell from her shoulders.\n\n\"Knees.\" Alex ordered.\n\nLiz obeyed and sunk down to her knees on the floor in the middle of the room, staring up at Alex with rapt attention. I knew by the tone of Alex's voice and body language that whatever came next was going to be sexy as hell; it wasn't often that she fully engaged Liz's submissive side, but it was always a lot of fun to be a part of. Alex opened the nightstand drawer and pulled out a pair of padded wrist cuffs, flashing me a sultry wink. Stepping behind Liz, she crouched down and fastened the cuffs to her wrists, binding Liz's arms behind her back. When she was done, she made a show of stripping off her skirt and top, ignoring Liz gazing up at her and making eye contact with me as she shimmied sexily out of her clothes.\n\nThe remote clicked on once again and Liz reacted instantly; her eyes rolled back and a low moan escaped her lips. Alex unbuckled my belt and pulled my pants down and off, straddling me as she pulled my shirt over my head and pressed her small, supple tits into my chest, kissing me passionately. I reached around behind her to squeeze her tight little ass as we made out hungrily, Alex writhing against me until we were both hard. She took both our cocks in her hand, squeezing us together and stroking us sensually while we kissed, softly moaning our desire for each other.\n\nPulling Alex's chest into me, I sucked a pert nipple into my mouth, flicking my tongue over it and nibbling gently, tugging with my lips and teeth. Alex gasped and held me by the back of my head with her free hand, arching her back as I showed her tits my total devotion. When the first nipple grew firm and pointed, I moved on to the second, taking her into my mouth once more and giving her my best while she gasped and moaned, still stroking us both in one hand.\n\nGlancing past Alex, Liz was still on her knees, staring back at us with a glazed, unfocused look in her eyes. She was humming and moaning softly, a dark patch had spread through the material of her thong where the silhouette of her hard cock ended. Enough precum had even filtered through the fabric that a thin string of clear fluid hung down a few inches from the tip of her bulge, waving slightly with her subtle movements.\n\nAlex followed my gaze and looked over her shoulder, giggling at the sight of Liz bound and helpless on the floor. She reached for the remote and clicked it a few times, the pitch of the vibrator increasing along with the volume and urgency of Liz's humming. Liz trembled and began to pant, but Alex had lost interest in her and turned her attention back to me, kissing me intensely. I knew she was trying to drive Liz mad and I was happy to play along. We made out a while longer while the cute noises coming from Liz built in desperation until she sounded ready to explode. Sensing the same thing I was, Alex clicked off the remote, Liz whimpering adorably in frustration.\n\nGiggling once again, evidently rather pleased with herself, Alex crawled off me and crouched in front of Liz, grabbing her face with both hands and kissing her deeply, earning more moans and whimpers in response. When she stood up again, she reached for my hand, pulling me up off the bed to stand next to her in front of Liz. With both our hard cocks pointed straight at her face, Liz stared up at us hungrily, her need and desperation a palpable aura radiating from her petite frame. Alex slapped her face with her big, beautiful cock, leaving wet smears of precum on her cheeks and lips.\n\nWhen Liz opened her mouth, begging for Alex's member, Alex grabbed her by the back of the head and roughly forced herself all the way down her throat, smothering Liz's cute little nose in her bright orange muff. The vibrator clicked back on as Alex began fucking Liz's face, long, slow strokes all the way out before pushing back in, all eight inches of her disappearing into Liz's mouth over and over. A few moments later Alex withdrew entirely, directing Liz's open mouth toward my own throbbing cock and shoving her forward. I took the hint and put a hand on top of Liz's head, pushing myself into her throat, feeling her tonsils stretch over me.\n\nLiz stared up at me, going in and out of focus while I fucked myself into her throat slowly. She felt amazing; her tight throat engulfing the entirety of my erection as I pumped in and out of her. Driven wild by the sensations in her ass, she was humming even as my balls pressed firmly against her chin, imparting her own vibrations into me. Holding still, fully enveloped in her mouth, I felt her tongue snake out past her lips, grazing my balls and making me gasp. I began pumping again, short strokes into her throat so her tongue never left my scrotum for long, moaning at the incredible feeling of using her entire mouth.",
        "Alex and I went back and forth, kissing each other and taking turns fucking Liz's throat while she moaned and hummed. Alex was slowly turning up the power on the vibrator until Liz was trembling once more, seemingly drifting in and out of reality as we used her face for our pleasure. She was more aggressive with Liz then I was comfortable initiating; I always let her set the tone when it came to rough play. It wasn't that I didn't think Liz could handle it, but she was so tiny and cute my own personal limit for what seemed like reasonable force was a lower bar than Alex's.\n\nTo that end, Alex was now fucking Liz's mouth violently, gripping her head in both hands and forcing herself into her lover's throat with reckless abandon. I could hear the sound of her cock hitting the back of Liz's throat and pushing through over and over, even seeing Liz actually gag for the first time. Unfazed, Liz just dribbled a thick glob of saliva down her chin, falling to her heaving breasts in glistening strands, taking Alex's big cock without pause. She seemed barely present, as if just enough consciousness remained to experience the pleasure she was being subjected to.\n\nPanting and moaning with increasing desperation, Alex pulled out of Liz, a thick string of spit connected her cock to Liz's lips. She stroked herself feverishly, glistening foreskin winking back and forth over her head until, with a cry of ecstasy, she shot a thick rope of cum onto Liz's face. The first squirt stretched from Liz's eyebrow, down her nose and over her cheek to the corner of her wide-open mouth. I watched as Alex's cock pulsed jet after jet of her juices onto Liz's waiting tongue, her orgasm seemingly endless as she filled her mouth. As the volume of the spurts began to die down, I watched Liz swallow the load in her mouth just before Alex forced herself down her throat once more, making short strokes deep into her and panting heavily as her climax finally passed.\n\nWhen Alex pulled out, Liz gasped, strings of cum stretching across her open lips. She moved behind Liz and pulled her head back by the hair, kissing her passionately, forcing a moan from deep inside Liz before pushing her down on my cock. I followed Alex's lead and fucked her throat roughly, moaning while she stared up at me, her eyes shifting back and forth between a gleam of adoration and total vacancy as she drifted in and out of reality. The vibrator was humming at a surprising volume and Liz trembled and shook as I buried my dick in her face again and again.\n\nLiz was whimpering and moaning intensely, looking unforgivably sexy with Alex's cum still decorating her glowing face. Saliva hung in swaying globs, glistening in the light as it stretched across my balls to her chin and down to her gorgeous tits. When she came her muffled cries sent waves of vibrations through me, her throat tensing and relaxing on my shaft as her orgasm crashed over her. The sensations sent me over the edge and I grunted loudly, fucking myself deep into her throat as my cock throbbed and twitched, shooting my load directly into her stomach as I came, thrusting raggedly until I was finished. I lingered for a moment before pulling out, breathing heavily and lightheaded from the strength of my orgasm.\n\nWith her mouth finally free Liz gasped, panting heavily. She was trembling violently and looked suddenly exhausted. A thick glob of cum had worked its way through her thong and clung to the tip of her bulge in heavy strands. Alex finally clicked off the vibrator and undid the cuffs binding her wrists, Liz falling forward and catching herself on all fours, desperately swallowing for air.\n\n\"Oh, baby!\" Alex said sympathetically with a giggle.\n\nI bent down to help her to her feet; I'd never seen Liz look so used up before and I was slightly concerned for a moment we had overdone it, but when she looked up at me beaming that illuminating smile my worries vanished. I kissed her adoringly and tried to lift her, but her legs refused to work, so I picked her up and carried her the short distance to the bed. Placing her down gently, she curled up in the fetal position, looking drained though serene, twitching intermittently with aftershocks. Alex and I looked at each other and smiled, laughing softly. I pulled Liz's messy thong off her, tossing it aside and crawling onto the bed behind her, holding her close.\n\nAlex sat next to us on Liz's other side, brushing her hair over her ear lovingly before bending to clean her cum from Liz's face with her tongue, licking a long, wet trail from the corner of her mouth to her brow. Liz moaned softly as Alex shared it with her with a sensual kiss. Alex leaned over to kiss me next, tasting heavily of her semen, and laid down next to Liz, petting her gently. We cuddled together quietly as Liz recovered, twitching and whimpering as the voltage of her aftershocks slowly lowered.\n\n\"Jesus Christ...\" She muttered when she was finally able to speak again. \"That was fucking amazing.\"\n\nAlex and I laughed and I squeezed her affectionately, kissing the back of her neck. It was a while before Liz seemed to drift back down the earth, Alex and I nursing her adoringly while her strength returned. Eventually, Liz pulled the vibrator out of herself and we went to the shower. I guided Liz up the stairs on shaky legs while she giggled at herself, Alex and I smiling at each other in amusement. As we washed her, Liz touched and kissed us passionately, as if to express her gratitude for what we'd just done to her. The girl lived to give pleasure; the more she gave the more she seemed to get out of it and she was always thankful for the opportunity.\n\nWhen we were done, Alex and I weren't quite ready for sleep but Liz was finished. We put her to bed and I watched Alex tuck her in, looking adorably content, if not utterly exhausted. Both of us kissed her softly, smiling at each other at the sight of her thus. I pulled on my pajama pants and Alex her robe and we went out to the living room. The cabin had grown cool again so I started a small fire to get some warmth back. We watched the flames dance in the fireplace, cuddling and drinking wine and whiskey while we talked and laughed with each other for a couple hours until we were ready to join Liz in bed.\n\n******\n\nThe next day it rained. I awoke to a rumble of thunder off in the distance, reverberating through the air in a rolling wave of deep, low noise. I opened my eyes to a strobe of lightning illuminating the otherwise dim bedroom in a brilliant flash, followed by a second, louder crash of thunder, the resonant whip-crack indicating its proximity. I loved a good thunderstorm, so I sat up and crawled over the somehow still-sleeping forms of Alex and Liz, pulling on my pajama pants and a t-shirt.\n\nAfter going to the bathroom and fixing a steaming cup of black coffee, I stepped out through the sliding glass doors onto the deck. There was enough overhang on the roof of the cabin to provide shelter for the first few feet of the deck and I sat in one of the patio chairs nearest the doors, sipping my coffee and staring out into the forest. The sound of the rain falling on the leaves, washed out with the occasional clash of thunder, was imposing; an encompassing din that drowned out all other sound. I found it peaceful in its own loud way. It was a sound that meant rest and relaxation, warmth and comfort, for what else was there to do in a heavy downpour?\n\nI went back in for a second cup of coffee just as Alex emerged from the bedroom squinting, her long red hair a frizzy mess from sleep. She yawned and stretched majestically, the front of her robe slipping open just enough to expose the toned lines of her stomach and a single, pert little breast. I smiled at the sight of her just as she noticed me and smiled back warmly.\n\n\"Mornin' beautiful.\" I grinned at her.\n\n\"Morning handsome.\" She smiled back, cinching her robe closed again.\n\nI poured us both some coffee, milk and sugar for Alex, while she went to the bathroom. Between the storm and the coffee, I already felt invigorated, glad someone was up to share the rain with me. When Alex returned to the kitchen, I handed her cup over and asked if she wanted to join me outside. She smiled and nodded sleepily, following me back out onto the deck and sitting in my lap sideways, crossing her long, smooth legs and cuddling up to my chest. We sat quietly together, watching the rain and the odd flash of lightning as we drank our coffee.\n\nThe roiling mist in the air eventually got the better of us, dressed as we were in our sleepwear. Raised goosebumps all over Alex's otherwise silky legs proclaimed her discomfort and we went back inside to watch the rain from the warmth of the cabin. Alex poured herself a second cup while I started a fire, and we snuggled together on the couch. After some time, Liz staggered out of the bedroom in her pajamas, eyes half closed and nostrils flaring cutely as she sniffed out the coffee. We welcomed Liz onto the couch and the three of us cuddled together, warmed by the fire and body heat, spending a lazy morning together as the storm passed over us.\n\nEventually boredom set in and we got into the beer sometime around noon. I was snooping around at a low wall unit behind the dining table when I realized the top opened. Lifting the cover and looking inside I was surprised to find a turntable and collection of vinyl records; the whole unit was a speaker system for the record player, though you wouldn't guess to look at it. I rifled through the albums, mostly classic rock, and I gasped dramatically, pulling out a jacket labeled Creedence Clearwater Revival Greatest Hits.\n\nThe girls looked over the couch at me and I held up the album, grinning excitedly at my prize. Alex laughed and Liz groaned, but I made a face at her and set the record on the turntable anyway. The sound of John Fogerty's voice and country rock filled the air, adding a different kind of warmth to the atmosphere. I went back to the couch and took Liz's hand, tugging at her to get up. She looked up at me, big brown eyes twinkling in amusement before looking to Alex, who just smiled and shrugged. Finally, Liz got up and I directed her away from the couch, doing my best impression of a halfway-decent dancer as I pulled her into me.\n\n\"God, you're so old.\" Liz teased, but her smile and sparkling eyes betrayed her mock annoyance.\n\n\"I like the way you walk, I like the way you talk, my Susie Q.\" I ignored her, singing along to the music, earning an emphatic giggle.\n\nWhen the song ended, I kissed Liz, hugging her adoringly before pulling Alex up off the couch for \"I Put a Spell on You.\" She didn't bother pretending to be annoyed with me, her warm smile broadcasting her entertainment at my antics. I danced with the girls, laughing and generally goofing off until somewhere around \"Who'll Stop the Rain?\" - a fitting song for the grey and wet day, when the three of us collapsed back on the couch laughing. Alex and Liz sighing contentedly, looking at me with amusement and adoration. I kissed each of them on the forehead and squeezed them affectionately.\n\nBy the afternoon the rain had not let up. It fell in waves; a light drizzle at times or coming down in sheets as it was presently. The dark sky and constant precipitation had sucked all the heat from the air outside, so I had been keeping the fire stoked all day. The flames danced cheerfully in the fireplace while the wood popped and crackled, slowly consumed as it warmed us. Alex had gone to bed for a nap and Liz and I were cuddled up on the couch, drinking beer and staring out the glass doors at the rain falling on the deck. The persistent sound of droplets falling on the roof and surrounding trees leant a soothing rhythm to the otherwise quiet forest around us as the music played softly.\n\nLiz was barefoot in her pink flannel pajama pants and a tight white t-shirt that hugged her braless breasts exquisitely, her legs over my lap while she snuggled up to my chest. I had one hand up her pant-leg, absentmindedly massaging her smooth calf, enjoying the quiet moment together. Glancing down at her adorable little feet, toenails painted that pale, dusted rose shade of pink, my mind drifted to the sexy scene I had witnessed the morning before when I discovered the girls out on the deck. I found myself growing aroused remembering how Liz had given Alex a footjob before they made love on the chaise lounge. My cock shifted in my pants as I thought about Liz's feet on me, surprising myself at how much the idea turned me on. I wanted to experience that. I knew by now that Liz would do anything I asked of her, but I never wanted her to feel like I would take that for granted, so I tried to bring it up casually.\n\n\"Hey, Liz.\" I began, \"Yesterday, when you were jerking Alex off with your feet?\"\n\n\"Mm-mhm?\" She hummed, as if fondly recalling the memory.\n\n\"You looked like you were really good at that.\"\n\n\"Lots of practice.\" She giggled, flashing a coy smile.\n\n\"You know, I've never had someone give me a footjob.\" I hinted with a grin.\n\n\"Really?!\" She asked, her eyes going unusually wide.\n\n\"It's never come up, no.\" I chuckled at her reaction.\n\n\"Hold on.\"\n\nLiz rolled off the couch and bounded towards the bedroom. A moment later she was back, and with her was a bottle of massage oil. She flashed a sexy wink at me and straddled me, sitting in my lap and looking into my eyes adoringly. I looked back at her, stunned as always by her big, sparkling eyes and the butterflies she let loose in my stomach when she looked at me that way. Pulling her into me I kissed her gently, just parting my lips to run the tip of my tongue along her upper lip, feeling her shudder in response. The passion built slowly until we were kissing each other hungrily, soft moans and gasps escaped both our mouths as Liz grinded her body against mine.\n\nShifting herself off me, Liz slipped her fingers into the waistband of my pajama pants, teasingly tickling my abdomen as she pulled them down. I lifted my butt off the couch and my hard cock sprang free, pointing up towards me as Liz pulled the pants down my legs. Kicking off the pants and pulling my shirt over my head, I leaned back into the armrest of the couch, one leg up on the cushions and the other off the edge, Liz sitting on her knees in between. She took my dick in one hand cupped my balls in the other, leaning forward to kiss me again, stroking me slowly while our moist tongues danced in our mouths.\n\nWhen Liz finally leaned back, she lifted her butt and pulled her pajamas off, exposing a cute little pair of pink hipster panties, her excitement clearly visible through the thin material. She placed both her dainty little feet on my lap, on either side of my swollen erection, and reached for the oil. I watched as she drizzled the clear liquid all over us, wet trails glinting against our skin as she poured it over both her feet and my cock. The air filled with the subtle aroma of strawberries as Liz rubbed her feet against me, rolling me between them to spread the oil around, making me moan softly at the feel of her soles on my hard dick.\n\n\"It's edible, you know?\" Liz informed me suggestively.\n\nGood to know. The impulse to kiss and lick her cute little toes was overwhelming as I watched her rub them against me. I lifted one foot to my mouth, gingerly kissing her baby toe, pleased the flavor of the oil was not very strong or overly sweet. Liz gasped softly as I slipped my tongue between her toes, while with her other foot she pressed my cock against my stomach, sliding it up and down so that her toes wrapped around either side of my head. I was surprised at the sensation; the bottom of her foot was a unique texture against me, not unlike a hand, but somehow softer and smoother. I was surprised doubly with how much sucking her diminutive toes into my mouth turned me on. It wasn't that I'd never sucked a toe before, it was that I'd never sucked the toes of someone who was really into it before; Liz's reaction was what really drove me wild as she gasped and shuddered in delight.\n\nThe more Liz got into it, the more I got into it. She was giggling and moaning cutely as I kissed and licked back and forth across her foot, taking my time to give each toe my adoring attention as I sucked them sensually, wrapping my tongue around each before moving to the next. Soon she pulled her foot away and took my cock between both feet, all ten adorable little toes wrapped around my shaft as she slid them up and down, making me moan softly. Liz pulled off her t-shirt, supporting herself with one arm and touching herself with the other, kneading her tits while she stroked me with her feet.\n\nI watched as she worked my cock with perfect control, her toes gliding over my head and back down my shaft while she sat before me in nothing but her cute little panties, a dark stain growing at her hip as her own hard member leaked precum into the fabric. She smiled at me, biting her lip sexily while her eyes twinkled. Liz always seemed so happy to give me pleasure I wasn't convinced she didn't get more out of the experience than I did, even as I gasped and moaned with increasing urgency. Between my overwhelming arousal at watching her and the amazing feeling of her toes wrapped around me, I soon felt an orgasm building up.\n\n\"God, babe, your feet feel incredible.\" I moaned.\n\n\"Mmm.\" Liz giggled back.\n\nThe sensation mounted until finally, I came. I grunted as my cock twitched between Liz's toes, shooting a rope of cum that splashed as high up as her cheek, just below her eye. She gasped and giggled, stroking me faster while I came powerfully, spraying her with my seed while I tensed and shuddered, my cock pulsing as my balls emptied themselves all over her body. When my orgasm finally subsided, she slowed down, her dainty toes sliding smoothly up and down my dick, glinting with oil and dappled with droplets of cum. I was breathing heavily, recovering from the intensity of my orgasm and smiling at her.\n\n\"How was that for a first time, baby?\" She asked, biting her lip again.\n\n\"I could see why someone could really get into that.\" I laughed as my breath began to return to normal, Liz giggling happily.\n\nI shifted over and pushed her down, laying down beside her, taking the back of her neck in my hand and kissing her passionately, expressing my gratitude for the pleasure she had just given me. She pressed herself against me as our tongues rolled wetly in our mouths and I slipped a hand into her panties, squeezing her rigid cock. When we broke the kiss, she was beaming at me, smiling wide and looking into my eyes. She looked incredibly cute with a thick string of my cum running from high up on her cheek down to her chin while she grinned at me. I licked myself off her, collecting the semen from her face before kissing her again, making her moan as we shared my cum.\n\nI pulled her panties aside, freeing her cock as I jerked her while we kissed hungrily, the salty taste of semen coating our tongues. When we parted again Liz made a show of swallowing and twinkled at me, moaning softly at the feel of my hand on her dick. I looked down at her gorgeous body decorated with my essence and took my hand off her, wiping a rope of cum off her smooth stomach before returning to her cock, using myself as lubrication. Coated in my juices, my hand slid easily over her throbbing member as I stroked her with increasing fervor, watching her moan and squirm against me.\n\nWhen Liz buried her face into my neck and began whimpering in a high pitch, I knew she was about to cum. I held her close to me, squeezing her against my body as my hand slid up and down her shaft vigorously, twisting my wrist as I went. With a wavering gasp she let go, tensing against me as I felt her warm wetness splash against my chest and stomach. I stroked her intensely while she whimpered, pulsing in my hand until her orgasm had run its course through her tiny body and passed. She was panting into my neck, her hot breath tickling my skin as I held her cock in my hand and hugged her with my other arm.",
        "Liz snuggled into me when I finally released her now-flaccid cock, pressing her front into mine and squishing our cum all over us, her head still buried in my neck. I held her close, caressing her smooth back and ass while I felt her softening breath against me. We laid like that for a long time, cuddled together in a warm, wet mess, basking in after-glow, until we fell asleep together on the couch.\n\n*****\n\nTo be continued...\n\n \n"
    ],
    "authorname": "loveinbriefs",
    "tags": [
        "blow job",
        "cum",
        "feet",
        "fetish",
        "lesbian",
        "oral sex",
        "redhead",
        "submissive",
        "threesome",
        "transexual"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/is-she-smiling-at-me-pt-03-ch-02"
}