{
    "title": "The Girl from the Ouachita Ch. 02",
    "pages": [
        "The Girl from the Ouachita, Ch.2\n\nNo sex between persons under 18; you should read chapter 1 first. It ends like this:\n\nHe wanted to tell her the truth, but there was a good chance she would react badly and he didn't want her to leave. He gave her a big smile and sung, \"you ain't bad for a country girl, all tight in your faded jeans.\"\n\n\"Are you flirting with me, Mr. Alexander?\" she asked with faux disbelief, hand over her heart like the southern belle whose persona she assumed at will.\n\nHe chuckled, \"No, Miss Kennedy, merely rendering an informed opinion.\"\n\n****\n\nThey went to bed soon after Jo called him out on his weak attempt to flirt, and they both fell into the kind of deep sleep that engenders dreams. His dreams were confused, and confusing and contradictory when he examined them early the next morning.\n\nHe lay there, considering the conflicting feelings he had for the young blonde who suddenly haunted his dreams. The desire to protect and nurture her was still the powerful force it had become that fateful night, but his attraction to her had grown much more powerful.\n\nLying in bed thinking about her wasn't productive, so he was up at 6:30, making coffee and rattling around, opening and shutting cabinets, trying to find things they put up last night so he could cook breakfast.\n\nShe stumbled into the kitchen rubbing her eyes; her hair was tousled, she wore an oversized white Hot Springs Trojans football jersey with black and gold numerals and trim, and white socks. Somehow, she managed to look particularly adorable.\n\n\"Why are you up so early making so much noise? I thought you didn't have to work today?\" she asked sleepily.\n\n\"It's not early -- it's nearly seven! And I didn't say I don't have to work: I do, but I'm working here, setting up my office.\n\n\"Sorry about the noise; I didn't think you'd hear me through the closed door, and I had to dig around to find the skillets and pot I wanted.\"\n\n\"Stop being so cheerful and energetic and give me some coffee\" she murmured through pouty lips.\n\n\"Not a morning person, I see.\" She made a guttural sound of agreement mixed with exasperation.\n\nHe handed her the cup of coffee, a pack of Sugar Twin, and the bottle of Skinny French Vanilla Cinnamon coffee flavoring she bought last night. \"Need anything else for your coffee, Princess?\"\n\n\"You tease me at your own risk before I have a cup of coffee,\" she muttered, and took a sip.\n\nChris turned back to his breakfast prep; paused, and asked, \"I'm fixing myself scrambled eggs, sausage patties, grits, and biscuits; would you like some?\" She would: two of each. He shook his head at her hunger and metabolism; how she could eat so much and stay so tiny was yet another Jo conundrum.\n\nBetween bites, she complimented him on the delicious breakfast, her words verified by the little sounds of delight she made when she first tasted each item. He enjoyed watching and hearing her more than eating his food, and the food was good.\n\nShe helped him clean up the kitchen, chattering happily about the meal, how good the new tableware looked, and what a good job they did of organizing things. He filed that for future reference: give her coffee and food before starting conversations.\n\nHe could have sat in the kitchen drinking coffee and listening to her happy voice all morning, but she was ready to tackle his new office, which was actually the smallest of the bedrooms. A chest of drawers and a double bed took up most of the room, so Chris moved the chest of drawers into the closet and the bed into the northwest corner along the wall. That freed two-thirds of the room for other use.\n\nHe retrieved his office chair and glass top computer desk with matching table from storage, and they reassembled them in the open space he'd created. She ragged on him about the conglomeration of cords and chargers he needed for his personal laptop, the company laptop, the printer/scanner/fax, his iPad, his iPhone, and the company Android phone.\n\nHe added a wireless keypad and mouse, set up the WiFi, and enabled the Bluetooth speakers. The surfaces of the computer desk and table were cluttered, but neatly cluttered.\n\nShe shook her head at him, \"Do you have to have ALL the latest toys?\"\n\n\"Hey! I'll have you know my phone is so old it's eligible for upgrade, and my iPad is a full generation behind. I admit my laptop is brand new, but I got it for a great price on a Cyber Monday sale!\"\n\nShe pulled an old iPhone out of the back pocket of her jeans, held it up, and said, \"Yours is a XS; mine is a 6S, but it works just fine!\"\n\nHe laughed, but then grew serious and asked, \"Do you have a laptop for school?\"\n\nShe looked away. \"No, but I understand the school has some.\"\n\n\"My other Dell is in its box in the closet. It was top-of-the-line when I bought it last year. I've already moved everything off it and backed it up to a hard drive. If you think it would fit your needs, we could update it, increase the memory, and install whatever you need for school. Wanna do that?\"\n\n\"Chris... you're... I can't keep taking your charity! I'm not some helpless little girl you have to take care of all the time!\"\n\n\"Jo, I have a perfectly good laptop computer stored in the closet; I have no use for it. I guess I can recycle it, but I'd rather give it to someone who can use it. No strings attached!\"\n\nShe sighed loudly, forced a smile, and said, \"Thank you, Kind Sir; I can take that off your hands and use it. I suppose that's kind of like recycling it.\"\n\nHe pulled it out, charged it, tested it, looked up the specs, and ordered a bigger memory card. Without fuss or discussion, he added another computer to his Office 365 subscription, and then made space for \"her laptop\" on the table. \"Looks like we need another computer chair,\" he announced.\n\nShe chuckled at him, picked up the laptop, sat cross-legged on the bed, set it on her thighs, and started downloading programs and apps she would need or wanted. He opened his work laptop and began reviewing the specs for his next assignments.\n\nThey drank water and worked on their computers for hours. \"Oh! Excuse me!\" Jo said with a giggle after her stomach growled.\n\n\"Heck, it's after 2pm!\" Chris exclaimed. \"Time flies when you're having fun! Wanna cook something or go out?\"\n\n\"It's a sunny day; what would you say about grilling one of the sirloins we bought and some veges? I'll make a salad and tea, and we can eat here!\" Jo replied.\n\nHe liked her idea, so he went out to start a fire in the charcoal grill the apartment provided just outside his deck. He seasoned the meat while Jo prepared the squash and corn, and fixed the salad. They worked efficiently and well together while she, at his request, told him what she had been downloading and doing on her computer.\n\nHe cut the sirloin in half because she wanted hers 'well done'. He fixed his medium rare, hers medium, and she ate it without comment, other than moaning about how good it was. He was starting to really enjoy the little sounds she made when pleased, and couldn't help but wonder...\n\n'Nope, can't go there', he reminded himself. 'This is not some hot sorority girl whose panties you want to get into!' Then it struck him that she soon would be a hot sorority girl, and there would be bunches of frat boys and jocks trying to get into her panties. That realization made him frown.\n\nThey cleaned up after the meal and decided it was time for a workout, so they changed into shorts and tee shirts. Chris almost had to go put on a jock when he saw her in thin workout shorts and a tank top. The ass was as magnificent as always, but her legs! Wow! They looked shapely in jeans, but bare -- just wow!\n\nThe hint of boobs offered by the hoodies was wildly inaccurate; he didn't know how big they were, but in the tank he could tell they were plenty big enough! In fact, perfect fits for her slender body.\n\nHe knew he was too obviously gawking at her, but she didn't seem to mind. If anything, she seemed to be showing off a little, preening and posing subtly, and judging his reaction. She might be young, but she certainly knew how to present herself enticingly. He looked away, to prevent embarrassing himself in his mesh-lined shorts.\n\nThey went for a jog around the complex to warm up, stretched in the workout room, lifted, stretched again, and then went for longer run on the nearby trail alongside the Clear Fork of the Trinity River that gave the apartments their name.\n\nWhen they neared runners or walkers, he was quick to fall behind, ostensibly to make room on the path for them to pass, but actually so he could marvel at her trim, taut, yet curvy form, and her delightful butt and legs!\n\nThey decided to jog slowly around the complex to cool down, and also to get a better look at the amenities and decide which they would like to visit. It was after five, so people were arriving home from their jobs, and they attracted attention as they jogged by. Invariably, Jo waved and smiled at the people they saw, which drew return waves and smiles. 'Small town girl', he reminded himself.\n\nThe clubhouse had a poster inviting everyone to a \"Hump-Day Mixer\" from 6-8 tonight. Chris asked, \"Interested?\" She smiled and said it might be fun; let's go home and clean up!\n\nHe caught her 'home' reference and smiled to himself.\n\n****\n\nShe came out of her bedroom at 6:18 wearing a jungle print sweater dress that almost caused him to drop his bottle of beer. He was wearing boots, jeans, and a polo shirt, and he expected young Jo in jeans. Instead, he got a sophisticated young woman.\n\nShe smiled brightly at his startled response and asked, \"So I look alright?\"\n\n\"Ummm, yes, you look... ummm, quite a bit better than alright. Shall we?\"\n\nHe wondered if he should get his pistol, but decided to chance it with his fists when the inevitable gawping morphed into aggressive pursuit. In her faded jeans and hoodie she looked a lot younger than in this dress and short black suede boots; she was going to get a lot of attention.\n\nTheir entry didn't exactly cause the entire clubhouse to go silent, but the din diminished considerably while they were getting their name tags; at least three-quarters of the eyes had turned to watch them.\n\nThey wandered over to the open bar; Chris ordered a bourdon rocks for himself and, as they had discussed, a Rob Roy mocktail for Jo.\n\nThey wandered toward the fireplace, but the first group they encountered stopped them and introductions were made. The group continued to grow, more introductions were made, and the distance between Chris and Jo grew as more people inserted themselves for introductions. It made him a bit nervous, but Jo was still sipping the same drink and she certainly seemed to be holding her own in the conversations, so he relaxed and conversed with the many potential new friends.\n\nHe felt his arm taken by a small hand and a soft boob pressed against his elbow. With a slight tug on his arm, she asked, \"Honey, would you come get me another drink? That one was delicious!\"\n\nHe cataloged the 'honey', looked down into her exquisite smiling face, smiled back, and replied that he would also like another.\n\nHe steered her toward the bar and noted how many eyes followed them. \"Are you getting hustled as hard as I am?\" she asked quietly, while giving him a bright smile.\n\nChris chuckled and smiled back at her. \"I doubt it; you're particularly captivating tonight. I doubt there is a man in the place hasn't given you a long look, and there is no doubt some keep trying to cut you out of the herd. Every time I looked up, there were more people between us and you were further away.\"\n\n\"These twenty- and thirty-somethings are really aggressive compared to the teenagers I'm used to,\" she whispered with a grin. \"Except you, of course. You continue to be a perfect gentleman!\"\n\nHe sighed internally, knowing his thoughts were far from gentlemanly. \"You seem to be holding your own quite well. Is there someone in particular or just the men in general?\"\n\nShe snickered, \"The tall blonde man in the expensive jacket, the drugstore cowboy, the bodybuilder stuffed into his shirt, and the tall woman with dark hair are probably the worst!\n\n\"Do you mind if I stay attached to you the rest of the night, because I don't trust any of them! I've been taught about date-rape drugs and stuff, and they kept wanting to buy me drinks!\"\n\nChris was more alarmed by her comment than he let on. \"I doubt it would happen when you're here with me, but you're right to be cautious. You know the rules: don't leave your drink alone and don't accept a drink from someone you don't know. If someone asks you to dance, have someone you trust watch your drink while you're gone.\"\n\n\"Oh, I know all the rules; they drummed them into us at school. This is just the first time I understood why! School dances aren't exactly the place to drug someone.\"\n\nFor the rest of the evening they were, for all intents, purposes, and appearances, a couple. As they mingled, Chris grew more appreciative of her gregarious nature and her ability to blend in seamlessly with people ten to thirty years older. Her natural intelligence and wit disguised her youth quite well.\n\nThey engaged in wide-ranging conversations with as great a variety of people as one can find at an expensive apartment complex in Fort Worth, Texas. He learned that Jo is unintimidated by people or topics, is charming, witty, and has impeccable timing with her laughter, responses, and comments.\n\nIn fact, she was the best \"date\" he ever had to something like this, including Becky and the sorority president he dated his sophomore year! That thought kept cycling through his mind as they circulated and chatted.\n\nWhen they left their latest group and went to get drinks, an older couple that had been watching them suddenly appeared and introduced themselves. Although the invitation specified \"Casual\", she -- Carla - wore a designer's version of a casual dress with matching leather boots; he -- Ken - wore a Rolex watch, blue blazer, and grey slacks.\n\nIt was obvious that they wanted to impress the hot youngsters, and they didn't waste any time in letting them know that they were wealthy, and that they were living in the apartment complex because they had recently sold their mansion. They downsized to a penthouse apartment here, and intended to travel the world.\n\n\"We are curious people,\" said Carla; \"We want to take some time off from the rat race to explore new things with new people.\"\n\nCarla put her hand on Chris' arm, but gazed at Jo. \"Our kids are off in school, and we're not traveling until mid-January. I know we're a bit older, but we're young at heart, in excellent condition, and open to anything! We would love to entertain you two; when would be a good time?\"\n\nChris was trying to come up with a way to politely turn them down when Jo enthusiastically said, \"Oh, that sounds like so much FUN! You two are so stylish, elegant, and attractive; I'm sure we could learn a lot from you! We're kind of busy until after the first, though; can we get back with you then?\"\n\nCarla looked disappointed, but Ken was devouring Jo with his eyes. He replied, \"As my darling wife said, we'd love to entertain you anytime -- we'll be expecting your call after the first!\"\n\nJo batted her eyelashes at him, put her hand on his shoulder, and said, \"Oh, you'll hear from us; we can hardly wait!\n\nTurning to Chris, she said, \"Honey, I need to go to the restroom. Could you get me a fresh drink and meet me by the bar? Nice to meet you, Carla and Ken!\"\n\nChris was amused and bemused by her handling of what could have been an uncomfortable situation. How did she come up with that so quickly, and handle it so coolly, he wondered. Her presence of mind is truly impressive!\n\nAnd then it hit him!\n\nWould she be the one to take to the Country Club? To meet his bosses and their wives? Sounded foolish when you considered her age and background, but she was certainly holding her own with tonight's diverse crowd, and she smoothly handled that little problem while he, the older and more experienced one, stood befuddled.\n\nWith that possibility in mind, he 'tested' her a bit by pressing her engagement in groups discussing topics ranging from world events, about which she was surprisingly well informed, to sports, to local politics, of which neither she nor he knew anything. She handled that topic well anyway, by admitting she had just moved here, and asking for opinions about candidates and issues.\n\nIn fact, as the two hours passed, he noticed that she had an uncanny knack for getting people to talk, to express opinions, offer information, or elaborate on a topic, and that her perceived interest in their responses encouraged them to continue sharing. She was remarkably poised and intuitive for an 18 year-old...or actually, for any young person.\n\nBack at the apartment, he complimented her on how effectively she handled situations and people, and offered her a \"nightcap\" of hot cocoa with marshmallows. They sat on the couch, angled sufficiently to face one another.\n\n\"Jo, three of my bosses invited me, 'plus one', to join them and their wives at the country club Friday night for dinner and drinks. Would you be interested in being said 'plus one'?\"\n\nShe didn't look away; in fact, she locked her eyes on his and looked deep within him. \"Are you sure? That's a little outside my experience, and I wouldn't want to embarrass you.\"\n\n\"That's the least of my concerns! After seeing you work the crowd tonight, I'm sure you'll captivate them just as you did this much-larger group. You met with people of varied backgrounds and ages tonight without any problems, and you seem quite confident around older people, which they are. I'm 100% sure you will do well, and enjoy yourself.\n\n\"So, since I'm not concerned, that means you'll do it?\"\n\n\"Chris, I don't really have anything to wear to something like that, Maybe you should ask Claire, the pretty brunette we met tonight; she's single and rich, and I'm sure the country club is home for her.\"\n\n\"I don't want to take her, Jo; I want to take you. We passed a mall with a Dillard's and a Macy's when we went food shopping; I'm confident we can find something appropriate for you. I'll buy your dress, and spring for a beauty shop visit too, if you will go with me.\n\n\"After all, you'd be doing me a huge favor!\"\n\nHe was dazzled by her return smile, and thrilled by her nod of acceptance. It was a small step, but it was a nice step away from the resentment and mistrust that limited her vision and options.\n\n****\n\nThey left for the mall at 10 so they would be there when the stores opened. The sales lady in Dillard's was pleased to have a customer like Jo. \"You're a perfect size four in ladies, size five in juniors, and looked good in everything you try on! We serve so many girls and young women who are size 16 but want to be a 10! Helping you is a refreshing change!\"\n\nThey had plenty of choices in those sizes -- far too many, in fact. After trying on a dozen \"party dresses\" and \"cocktail dresses,\" all of which stirred Chris' loins, she strutted out on four-inch black patent heels wearing a little black dress.\n\nThe neckline of the LBD was square cut, sleeveless, with two-inch wide straps; the hemline ended about three inches above her knees. She was carrying the small jacket over her left arm as if it were a prop. Although far from immodest, on her body the dress was quite enticing, but in a sophisticated manner.\n\nApparently, the look on his face said everything that needed saying. \"I told you, Honey,\" the fortyish saleslady told Jo with a grin. It's perfect for you! See, he's speechless, and the effect on the older men he's trying to impress will be devastating! Their wives will be as impressed by your good taste as by the way your wear it!\"\n\nThey walked away giggling, pleased by the impact of her choice. After a few minutes, they waved him to the front so he could pay for the LBD and the black sweater dress with red and white trim and red buttons down the front he couldn't seem to let go. She tried it on early, and again later, at his prompting. She modeled it and posed, asking him if he were sure she should get it too. He was.",
        "The smirks on the faces of Jo and the saleslady conveyed they knew his body language said he liked the sweater dress and black suede knee-high boots a lot, and were only tormenting him with the display.\n\nThe two dresses, shoes, and boots she had picked were all on sale for the holidays, and he was pleased that the four pieces cost less and looked better than any of the dresses displayed around the showroom. The sales lady gave her card to Jo and to Chris, enthusiastically said it had been her pleasure to help, and encouraged them to return anytime!\n\nThe mall was starting to fill up, and Jo was ready to leave. He suggested they try Macy's sale to get her a couple of \"casual sets you can wear to class, school events, or around the apartment complex at mixers or informal parties.\"\n\nShe searched his face, but saw only earnest intentions. She was having fun trying on clothes and watching his reactions, so she grinned, shrugged, and said, \"Okay, Moneybags, if you want to spend more money on your little 'ward', I'm willing to help you!\"\n\nThere was a problem, however: there were too many choices, and she looked so good in each he would have bought her all eighteen sets she tried on! She told him if he wouldn't pick she would; he couldn't, so she 'settled' for the five that drew the biggest reactions from him, and from the onlookers that had gathered to watch her modeling. She also got a casual jumpsuit she liked because it was so comfortable.\n\nThey lugged her goodies to Chick-fil-a, ate sandwiches, and then returned to the apartment. Jo disappeared into her room and he could hear her stirring around. \"So, am I going to get a fashion show now?\" he asked playfully.\n\nShe popped her head out; \"Really?\"\n\n\"Of course, but this time I expect the runway version.\" She grinned ear to ear, and said, \"Take a seat on the couch!\"\n\nShe started with the casual jumpsuit, then the two sets of tailored pants and blouses, a pair of indigo jeans with a rather low-cut blouse, and then surprised him with a red mini-dress he hadn't seen before.\n\n\"You just saw the LBD, so this is my last one,\" she said as she reappeared in the sweater dress that just begged to be unbuttoned down the front.\n\nBetween her prancing around and the way her luscious body looked in the clothes, he held a throw pillow in his lap from start to finish. The last two dresses, though, had given new meaning to 'hard-on'.\n\nTo make things much worse, she put on a DVD entitled Ballroom Dances. \"These are the kinds of dances we will probably encounter at the country club, don't you think?\" He nodded his agreement.\n\nShe took both his hands in hers, \"Since we've never danced, we need to practice so we won't embarrass ourselves!\"\n\nHe willed his cock to relax, but it continued defying him while they addressed one another in the proper manner for their first dance, a waltz. She seemed to ignore the protrusion, keeping her pelvis just outside its reach; that, focusing on the dance steps, and guiding his new partner helped alleviate his problem.\n\nChris' family had ensured he was proficient in ballroom dancing, as any son of the Old South should be; after all there were all those balls to attend at their level of society. That Jo, a poor country girl from the wilds of the Ouachita, was more expert than he, however, blew his mind.\n\n\"The same coach that got me into martial arts also got me into an elective class called 'ballroom dancing'. Turned out I had a knack for that too,\" Jo explained, in response to his unasked question.\n\nThey took turns at waltzes, polkas, two-steps, fox trots, even the tango; she was his better at all. Light as a feather on her feet, she seemed to anticipate his every move; as a result, they danced as if they had practiced together for years.\n\nIt was only mid-afternoon when the music ended, they congratulated each other, and she went to change. Just before entering her bedroom, she looked over her shoulder and innocently asked, \"Want to go for a run along the river? I think we could both use some cardio, and you seem to enjoy the views along the trail.\"\n\nHe suspected she knew the view he most enjoyed, and the racer-back top and tiny short-shorts she changed into did not disappoint. The stick-on sales tag was still on the shorts, but he made no mention -- he was more than happy to pay for something that looked this good on her.\n\nIt was a little chilly for her running gear, but the only effect he noticed was a bit more nipple showing through the fabric of the top.\n\nAs before, they ran side by side until they encountered people on the trail, at which point he would drop back and run behind her. When he returned to her side, he saw the smug smirk and he knew she knew.\n\nAt this point, he didn't care. Yes, she was far too young for him; no, he wasn't going to seduce someone who was, for all intents and purposes, under his guardianship. Those minor issues aside, she was his dream girl, at least physically, although the off-putting angst and mood swings had all but disappeared since they moved into the apartment.\n\nHe fell back to let a bicyclist by, and she caught him staring when she looked back over her shoulder. She smiled and kept running gracefully in front of him.\n\nWell, if she didn't mind his open admiration of her physical assets, he intended to drink her in while he could.\n\nThey stayed in that night. They watched a movie, ate popcorn, and drank hot chocolate. She wore her favorite nightshirt -- the HSHS Trojans jersey, which did a fine job of establishing her sleek golden legs within his vision.\n\nThey began with Jo sitting on the opposite end of the couch, but sharing the popcorn meant passing it back and forth, so she moved into the middle and held the bag between her thighs with her feet on the coffee table. Each time he reached into the bag his imagination ran wild; soon, his cock was so hard it hurt, and even his pillow compress didn't help.\n\nHe took a long shower after the movie, to lower the tension in his loins a bit; she lowered her tension in her bed.\n\n****\n\nJack had learned to appreciate and make breakfast tacos from his Texan roommate in Knoxville, so he made egg and bacon tacos with cheese and salsa for their breakfast. They shared a pot of coffee before starting their respective projects.\n\nLunch was a club sandwich Jo prepared, after which she was going to do her nails. He returned to his office to check emails from his friends and new employers. The only email was instructions on getting into the country club as their guest.\n\nWhen he walked back out of his office she was sitting on the couch with her feet on the coffee table, carefully painting her toenails; he stopped and watched. Painting toenails had never been something he considered a turn on, but somehow Jo made it quite sensual. The way her flexible little body was all scrunched up, being so focused and careful with each stroke, and her cute little feet perched on the table below those gorgeous legs... she looked adorable!\n\nHe stood and watched until she became aware of him.\n\n\"Never seen a girl painting her toenails?\" she asked teasingly.\n\n\"Not the way you do it,\" he replied, after clearing his throat.\n\n\"Oh, I got an email from my boss saying to be at the CC by 6:45, and giving me instructions for getting in. You won't have any problem being ready by then, will you?\"\n\nShe did not, strutting out of her bedroom at 6:20 in the LBD, black hose, and high heels. She saw his wide eyes and gave a spin, \"How do I look?\" she asked coquettishly.\n\n\"Not bad for a country girl,\" he understated, thinking that she looked more like a big city sophisticate. She gave him a dazzling smile, asked him to help her into the jacket, and they proceeded to the Ram. He explained that getting in and out of either of his vehicles in that dress without exposing herself was going to a trick, but he felt the step bar on the Ram would allow more modesty.\n\n\"Thank you for considering my modesty, Kind Sir. I haven't been in your fancy truck before, so we'll see how climbing up like this goes... Oops! Sorry about that -- I didn't mean to flash you!\"\n\nHe colored, and his cock throbbed; the thigh-high hose had lacy tops, and the black panties were sheer. He hurried back to the driver side, climbed in, and did his best to ignore the lovely legs extending below the dress, and her nonchalance in positioning them so he could see the skin above the hose. He also tried but failed to ignore the round white mounds swelling slightly above the neckline of the dress.\n\n\"So, what shall our story be?\" she asked. \"Tell them the truth, or is that too embarrassing? If so, do you have another version you prefer?\"\n\n\"I don't want them to think badly of you... or me,\" Chris replied. \"I doubt they will believe our living arrangement is platonic, but I don't like lying to them, either. What do you think?\"\n\n\"The truth and nothing but the truth! Too hard to keep up with the lies once you start,\" she answered firmly.\n\nThe valet was only too happy to assist Jo from the high 4x4 pickup, and was well rewarded for his assistance. She gracefully alighted and thanked him; he was momentarily flummoxed, but mumbled \"My pleasure, Mam. My pleasure indeed!\"\n\nChris thought his was high praise indeed, considering the number and quality of the women the valet undoubtedly assisted each evening.\n\nHe strode to her, offered his arm, and escorted her through the front door. The Ma\u00eetre D took their information and escorted them to their table. His confident-appearing date clung tightly to his arm, and his own poise was tested; there were so many ways this could go wrong!\n\nNeither of them should have been concerned. The fifty-somethings awaiting their arrival were suitably impressed by Chris in his dark suit, and agog about Jo in her little black dress. This was the world in which Chris grew up, so, even though it was his bosses and their wives, he was at ease by the time the introductions were completed.\n\nGiven her age and background, Jo had every right to be uneasy; in fact, she should have been intimidated and she should have been out of her depth: she was not, or if she was, it didn't show. Chris already knew her well enough to see the slightest tension in her smile, but no one else did.\n\nShe greeted the group with aplomb, was gracious in accepting handshakes, air kisses, and the hand kiss proffered by Trey Beck. She repeated each name after introduction as an aid in remembering. She appeared composed, confident, and at ease.\n\nSandra Beck turned back to Chris, crooked her head to the left, peered at him, and said, \"I see you don't remember me, but you were half as tall as I the last time I saw you. I'll bet you remember your mom getting calls from her friend Sandy on birthdays and holidays, though, don't you?\"\n\nChris reacted with obvious surprise: \"You're Sandy Hardy Beck, her sorority sister? Of course you are -- I didn't draw the conclusion, but now it's obvious. You always sent us birthday cards and presents! Of course! It's so good to meet you again!\"\n\nShe beamed, and he turned to Trey. \"Why didn't you tell me? I knew you and Dad were friends, but I assumed it was due to your construction ties!\"\n\n\"When I got the recommendation to hire you from HR, I called your dad. He said you were hell bent on making it on your own, so I should keep you in the dark, work the hell out of you, and see how you did. So if you're wondering how you got all the crap jobs for the first year, you can thank your dad!\"\n\nHe laughed, and added, \"As to making it on your own, so far so good, and I know these men agree. Heck, even your crews agree, and they hate all their managers!\"\n\nSandra reached across the table and petted his hand, \"We're sorry for the deceit, Darling, but we promised your mom and dad!\"\n\nChris laughed heartily, and said, \"All I can say is, small world! And, this is a pleasant surprise!\"\n\nEach of the six elders already had a drink, so Trey Beck signaled the waiter to come take their order. Chris ordered his favorite bourbon on the rocks, and Jo ordered her new favorite mocktail: Rob Roy with Coke instead of scotch, with a splash of seltzer.\n\nThat drew a curious look but no comment from the other ladies, who immediately began what would become a very interesting grilling of Chris and Jo.\n\n\"So! You two are such a beautiful couple!\" enthused Sandra Beck. \"How do you know each other?\"\n\nChris and Jo chuckled and exchanged looks; good thing they had prepared. Jo said, \"You tell them.\"\n\nWith a big smile, Chris began a \"just the facts\" version of the tale. Chris working in Hot Springs on restoring Bathhouse Row; Jo was an early high school graduate; she was living with a mutual friend who introduced them; she needed a ride to TCU; Chris offered, she accepted, and a friendship was born during the drive.\n\nChris saw the slight frowns on the faces of the three men, so he addressed the \"early graduate\" part by saying Jo was eighteen and emancipated, anxious to leave a difficult family situation behind, and that their friendship -- and that's all it is, he assured everyone -- is strictly above board and totally legal.\n\nHis rendition was accurate but incomplete, and he expected the women would want more detail; he was correct.\n\nRebecca Elliot, the wife of Chris's direct supervisor, asked where Jo was staying. She replied that she was Chris' guest in an empty bedroom until the dorms opened, and she was serving as chief cook and bottle washer in return.\n\nThat drew a laugh from the women and a curious look from the men, but Sue Schneider, wife of the COO, redirected the conversation.\n\n\"Jo, when you walked in I looked you and Chris over rather thoroughly, and I honestly thought you were his age. Not that you don't look young -- both of you do, when you're in your fifties like me -- but you appeared so self-possessed and assured. Even knowing your age, I see a mature if very young woman. How is it that a girl your age is so poised and self-confident?\"\n\nJo looked at Chris, who barely shrugged his shoulders; it was her story to tell, or not. If she chose not to, he would protect her.\n\n\"I should probably lie to you so you won't think less of Chris for bringing someone like me, but I won't because we agreed on the way over here to tell only the truth,\" Jo said with a steady voice that contained a bit of challenge, or perhaps defiance.\n\n\"My mother says my last name is Kennedy; unfortunately, I've never met my father, so I don't know if that's true. It could just as easily be a name that came up during one of her alcohol and drug-based delusions, or she may not know.\n\n\"Yes, I'm the only child of an alcohol and drug-addicted woman of loose virtue. For the past three years we've been living with one of her boyfriends, who has three sons. All of them made their plans for me clear from the day we moved in, but a child and family services worker and a deputy sheriff kept me safe because I was underage.\n\n\"My eighteenth birthday was last week, and I had learned a few months ago that they had organized a 'coming out party' for me since I would no longer be a minor and no longer a concern of the state. That's why I graduated early, and that's why I asked Chris for a ride to Fort Worth, where I have a scholarship to attend TCU next semester.\"\n\nJo's story had not faltered, nor had her gaze broken. No, she had, in turn, looked each member of her audience in the eyes as she told her disturbing story, without obvious rancor and with minimal emotion.\n\nThough again touched, Chris listened sympathetically but without displaying emotion that might cause her to choke up.\n\nThe other six adults, however, had exhibited the gauntlet of emotions Chris felt in the truck when he first heard her story.\n\nAt this point, the three men were sitting upright in their chairs, eyes blazing at the injustice. During the course of the story she had morphed from Chris' sexy girlfriend into another daughter who needed protection.\n\nThe three women were leaning forward, each wanting to reach out and touch her, to pull her to them, to comfort, console, and assure her, as they would a daughter.\n\n\"I need to credit my high school coach, the school counselor, and concerned teachers for getting me involved in sports and other activities, like theater and debate, to develop my leadership and personal skills, and to teach me to face challenges rather than run from them. Hot Springs High School was 'the village' that helped raise and direct me during my rebellious teen years.\n\n\"I also need to give credit to my mother. Her lack of concern and her provision of a role model not to be emulated certainly toughened me and made me grow up faster than many of my peers. It's not a pretty story, but it's my story, and I guess all that makes me the girl you see here today.\"\n\nJo took a deep breath, ignored the swirling emotion at the table, and forged ahead. This time she was looking everywhere but at Chris. \"I'm sure you think I'm paying him back with sex, but I swear Chris is far too much of a gentleman to accept even if I offered!\n\n\"In a lifetime of dealing with the male equivalents of my mother, and boys whose goal was to grow up to raise chickens and cheat on the girls they knocked up and made their wives, Christian Brady is the one man, other than Deputy Shillings, in whose presence I've ever felt safe and secure. He's also the only man, other than my teachers, I've ever thought was concerned about my future.\n\n\"I left home with one good dress, a few pair of jeans, shorts, hoodies, and tee shirts, and two pair of athletic shoes. He bought me this dress and shoes so I could be here tonight, and six other nice sets so I won't be humiliated when I start school.\n\n\"By bringing me here tonight to meet all of you, knowing full well this is an alien landscape for me and that I might embarrass him, he showed again that he has faith in my abilities.\"\n\nShe cast her eyes downward; when she looked back up, there was sadness all around. \"I see all of you are distressed by my story, and for that I apologize. Perhaps I should have lied; I'm afraid I've ruined our special evening. I never intended this to be about me, but Chris told me to tell the truth if asked, so I have. I'm sorry if I upset or offended anyone, and I hope we can turn to more pleasant topics now.\"\n\nChris broke the tension by interjecting. \"Jo left out a few things in the telling of 'her story'. She's an award-winning three-sport athlete, an accomplished thespian who sings like an angel, graduated with highest honors, and is eligible for Mensa.\n\n\"In two months, she put together a resume and sent admission and aid applications to several universities. All admitted her, but TCU showed enough confidence in her to cobble together a full-ride for the spring semester at this very expensive private university.\n\n\"To me, all the rest is background. She is who she is. She's not the byproduct of a messy life, but rather someone who has risen above that life to make the most of opportunities by developing and using her many God-given talents.\n\n\"Since you know my parents, you know I never faced her kind of challenges. I have the ability to help her move forward, and I'm happy to assist her in any way I can - because I know she will make me, and all her supporters, proud.\"\n\nThroughout, Chris maintained a sanguine look and voice, as if speaking fondly of a younger sibling or friend. His sideways glance and smile at Jo as he said he knew she would make him proud, however, was laden with emotion that the others saw and she felt.\n\nFor the first time, she clouded up and her mouth quivered a little, which resulted in the three women quickly escorting her to the restroom. The three men gave Chris knowing looks, but no one spoke until Trey Beck suggested they have another round.\n\nFor his part, Chris tried to hide his embarrassment at having allowed his feelings to show when his purpose was to build Jo up and move the group toward celebrating her achievements instead of dwelling on things beyond her control. Little did he know that he had accomplished much more.",
        "When the women returned, the men were through lamenting the Cowboy's failure to make the playoffs and had moved on to the underdog Longhorns versus the Georgia Bulldogs in the Sugar Bowl in New Orleans on January 1, and the Horned Frogs chances against the California Bears in the Cheez-It Bowl in Phoenix the day after Christmas.\n\nThey courteously arose as their women approached, now smiling and chatting happily, with Jo walking between Sandra Beck and Rebecca Elliot. Jo looked tentatively at Chris as he seated her, but his smile was warm and cordial, betraying nothing.\n\nTheir waiter appeared with a menu card, which they scanned before choosing among the evening's standard offerings. At Sandra's urging, Jo ordered the chicken piccata with lemon sauce and capers, as did the other women. The men ordered prime rib.\n\nTrey asked if anyone would like another drink before the meal, and all accepted. Before Jo ordered, Sandra leaned in and asked, \"Honey, there is a delicious mixed drink we let our daughters drink when they were your age. It's called a Bocce Ball, and you would have to drink a bunch of them to be affected. Would you like to try one?\"\n\nJo looked at her noncommittal escort, and replied that she would.\n\n\"And a Bocce Ball, substitute club soda for the vodka, for the young lady,\" said Sandra.\n\nA Bocce Ball turned out to be a glass of orange juice with a jigger of amaretto and one of club soda: Jo liked it, and thanked Sandra.\n\nLegally, they shouldn't have provided it. Given her DNA, Jo shouldn't have accepted it, and thereby tested whether the propensity toward addiction was passed along. But they provided and she imbibed.\n\nThe pre-dinner conversation, as directed by Jo, was light and happy. She wanted to know all about their favorite topic: their families. Each couple took a turn, and Jo's interest never wavered. She soaked up the joy and pride their children and grandchildren brought them, and pushed them to elaborate, seemingly never getting enough detail about the big and little things that made their families special.\n\nThe proud parents and grandparents eagerly complied, enriching descriptions with stories.\n\nChris was interested in each couple's family story, which gave him insights and information that would help him be a good employee and caring friend, and satisfied his natural curiosity.\n\nMore than anything, however, he was impressed by Jo's ability to get people to open up and share, and to happily display her interest in even minute details. He was proud of the way she had dealt with the difficult part of the night, but wondered how she had recovered so well and completely. Was this really her enchanting the group, or was she an even better thespian than he knew?\n\nThe arrival of the delicious meal largely stymied the conversation, but gave him time to consider what he had seen and heard. Jo remained a conundrum wrapped in an enigma.\n\nAfter the meal they were enjoying another drink before the orchestra began playing, when Sue Schneider asked about Christmas plans. As if she hadn't realized it was December 22, Jo looked at Chris with surprise.\n\n\"Well,\" asked Sandra, \"what are your plans, Chris, Jo?\"\n\nHe looked at Jo, and then at the others. \"I didn't know how much time I would have off, given the new project, so we made our plans at Thanksgiving. My parents and siblings are driving down here tomorrow in Dad's motorhome. They should arrive early on Christmas Eve. We're going to celebrate Christmas in my apartment, so I have to get a tree and decorations in the morning. As Jo says, my apartment is not at all 'homey', but I hope she will help me make it look at least welcoming.\"\n\n\"Your parents are coming?\" Jo asked in horror. \"Why didn't you tell me? I don't want to mess up your family celebration! I'll get a room somewhere!\"\n\n\"Haha!\" interjected Sandra, who waggled her finger at Jo. \"If you do, his family will hunt you down and drag you back! I talked to Debora on the phone just before we left to come here, and they are chaffing at the bit to meet the first girl Chris has spoken of since... well, since the unfortunate end to his engagement.\"\n\nShe still looked horrified at the prospect, but Trey added, \"Jo, they are the sweetest people, and they are going to love you. Just relax and be yourself; you'll charm them, just as you have their friends around this table tonight.\"\n\nFortunately for Jo, not so fortunately for Chris, the orchestra began playing and everyone got up to dance. \"When were you going to tell me?\" she asked angrily while they were waltzing in perfect tandem.\n\n\"In the morning, when we went to get decorations. I was afraid you'd have this reaction, and my family does want to meet you. No pressure, Jo; they really are sweet people, and my younger sisters assure me they are going to be your best friends by Christmas Day.\"\n\n\"What will they think of me, Chris? That I'm some kind of gold digger, sponging off your generosity!\"\n\n\"Jo, it's not like that at all! Look, we often kept students with us who lived too far away to go home for the holidays. That's just hospitality. Same things with friends who need a place to crash, for one reason or another. We're southerners; we are hospitable. It's no big deal!\n\n\"They know you're staying in my spare room, and they think nothing of it! Don't let yourself start doubting our friendship now!\"\n\n\"What did she mean by 'the first girl he's spoken of since your unfortunate breakup'? Have you talked to them about me?\"\n\n\"Of course! You know I talk to at least one of them every few days. I even sent them a pic of us at the mixer because everyone was curious about my new roommate.\n\n\"I see that look, but I'm telling you the truth! My sisters think you look 'so sweet', and they're ready to become your best friends. Mom and Dad just want to meet you, but they did get you a present, so we'll have to get them something from you tomorrow.\"\n\n\"No, WE won't! I have some money saved up, and I'm going to spend it on presents for your family and my roommate! You've been far too generous already!\"\n\n\"Fine! We'll go shopping as soon as the stores open. I'll show you some pictures of the Fam, and what I already got for them. You can ask all the question you want, and I might even have a few ideas for you. But me? No, that isn't going to happen; serving as my escort tonight and charming the pants off my bosses and their wives is the best present you could give me!\"\n\nShe crooked her head and innocently inquired, \"Is it? The best present I could give you, I mean.\"\n\nShe grinned, he blushed, but recovered, \"Are you flirting with me, Lady Jo?\" She giggled and pretended to be embarrassed, but the grin remained.\n\nAfter the dance they returned to a table of chuckling adults. \"So, Jo, what did you say to your roommate to make him turn red like that?\" asked Sandra, before taking a sip of her drink.\n\n\"Oh, I was just being a tease. He's easily embarrassed about some things,\" she replied with a smile.\n\nChris was avoiding eyes by staring at his drink, but turned a brighter shade when they laughed at Jo's reply.\n\nWhen the music began again, everyone adjourned to the dancefloor. The Waltzes, Fox Trots, and Two Steps were fine; he kept his distance and his cool, while admiring her grace, timing, and impeccable sense of rhythm.\n\nThen they just had to play a Tango, and watching her movements to 'the dance of love' about broke him. Of course, she had to show lots of shapely leg on the lunges and kicks, her hands had to lovingly caress his arms when they slid apart, and the way her body responded to his direction... Shit!\n\nHe wasn't the only one; a small crowd stood and watched their (her) performance from the fringes of the dance floor.\n\nHis relief at the end of the dance was short lived, although the applause they received gave him a few seconds to recover. In order to complicate his life further, the orchestra transitioned to Rock Around the Clock. Jo could jitterbug like Juliana Hough, and the cute LBD did a great job of drawing attention to her incredible moves and even more incredible legs and body.\n\nChris noticed that the dance floor had grown steadily less crowded, and the eyes of the crowd were focused on them. He wasn't Derek Hough, but he held his own, as best he could. The band saw the interest, and prolonged the song another couple of minutes. They drew another, even louder, round of applause when the song finally ended.\n\nThankfully, the orchestra moved on to a slow country two-step that brought her into his arms, albeit a little closer than he was used to. Her supple body felt amazingly good with his big arms encircling it, and the inadvertent touching of her boobs to his chest was causing the problem he could barely control to grow larger in scope.\n\nWhen they made the final turn, she straddled his right leg and rode it through the turn, and then moved away. There was simply no way she hadn't felt his steel cock, but she gave no indication. He looked down into her perfect face, saw a coy smile, and realized the little tease did that on purpose!\n\nInstead of letting him escort her to the table, she led him, which helped hide his problem until after she was seated. The men were watching her flushed and excited face; the women watched him hurriedly step to the side to take his seat, and smiled at his obvious reaction to his young dance partner.\n\nThey knew their husbands and all the other men ogling her as she danced had similar reactions, but Chris had so emphasized the platonic nature of his relationship with Jo. The proof of what they already knew was gratifying and humorous, because he was so embarrassed by their knowing looks.\n\nSandra smiled, but Sue chuckled quietly, which caused Rebecca to giggle. Chris' blush spread.\n\nAs males are want to do, the men struck up a conversation with the pretty girl, allowing their pretty wives to pry into the mind of the handsome boy. His interrogation lasted until his escort suggested they should go, since they had last minute shopping to do tomorrow. By that time, he was glad he didn't have a high security clearance and state secrets to guard, because he would have spilled them all.\n\nSeveral young valets hurried over to help Jo into the big pickup, lingered as she was assisted into her seat by the lucky one, and then pivoted her gorgeous legs. She was cautious and the LBD wasn't immodest, but it showed a lot of leg when she was seated; she knew that, and threw the boys a smile as an additional reward.\n\n\"I'm never going to need to tip the valet when you're along, am I?\" Chris mumbled. \"I barely got my keys, but you had four of them at your beck and call.\"\n\n\"Oh?\" she asked coyly. \"Am I your beck and call girl now?\"\n\nHe got it. \"Julia Roberts in Pretty Woman, right?\" She laughed and nodded.\n\nHe opened the door to help her get down out of the truck when they got to the apartment, and was treated to the best view of the night! The sight of her creamy thighs between the lacy tops of the black hose and the black panties as she pivoted her knees to face him was enthralling, and it only got better when she slid slowly off the seat, placed her shoes on the nerf bar, put her hand on his shoulder for balance, and took his hand. He assisted her to the ground, her dress fell back into place, and he finally looked at her face. He couldn't decide if that was a smirk he saw, or a look of satisfaction.\n\nThey walked to the door arm in arm, with her very nice, soft, but firm boob pressed against his arm. He unlocked the door; she paused, pivoted, stood on her tiptoes, and whispered. \"I had a wonderful time tonight\" before softly kissing his cheek.\n\nShe quickly opened the door and, for the first time, walked toward her bedroom with a very feminine sway. He stood and watched. He needed another long, hot shower, to release the incredible tension he was feeling. She did too.\n\n****\n\nOver breakfast, she made him show her all the pictures of his family that were on his phone, and tell him stories about each family member. She then visited his mother and sisters' social media sites. She was surprised that his dad had a Facebook page, but not surprised all the pictures were of his family, dogs, or from his hunting trips.\n\nBecause of her earlier research, the shopping trip was relatively short and painless. She wouldn't let him see what she was buying, so he played with his phone while she shopped.\n\nShe also wouldn't let him buy her anything else, although they had only that morning received a written invitation to a private NYE party at the Clear Fork Clubhouse, and he had offered.\n\nShe said she had something nice to wear, but couldn't help surveying the party dresses when she passed through that section. He saw her linger just a hair too long over a dress before she went on to the men's section to find something for his dad.\n\nWhen she was out of sight, he examined and fell in love with the dress; it would look perfect with her Christmas gift! He bought the dress, had it wrapped, and insinuated the bag among the others he was carrying. He considered what the salesgirl called a \"darling silver sequin body con dress\" dress to be a present to her, to him, and to all the men fortunate enough to be invited to the NYE party.\n\nHe was quite pleased with himself, until he considered the possible consequences of dressing his young friend up like that and putting her in front of a room full of drunken men, and women.\n\nJo returned in less than a half hour with her final purchases, and they went to lunch at a restaurant near the mall. After, they bought a live 7-foot Black Hills Spruce in a large bucket, and what he considered a more-than-sufficient quantity of decorations for the tree, door, and living room. He wanted a simple cut tree, but Chris wanted a live one, \"Because it's better for the planet! We can plant it after Christmas and help create cleaner air!\"\n\nHe didn't argue, although he wondered where one planted a 7' Spruce when one owned no property in Texas.\n\nSetting up the tree and decorating it was the first order of business, followed by decorating the front and back doors, the mantle of the gas fireplace, and sundry other places Jo thought needed attention. When they finished, he stood and surveyed the result: the utilitarian apartment was transformed!\n\nShe spent the rest of the afternoon wrapping her purchases just so, and he reorganized his in his closet, hiding two of Jo's so she wouldn't have so many from her roomie under the tree.\n\n\"Let's watch a Christmas movie on Hallmark!\" suggested his happy little buddy, who was dressed in a long sleeved navy nightshirt with watching knee sock. She looked adorable, sitting in the middle of the couch with her feet tucked under her and most of her thighs exposed. He didn't understand how women could sit like that; he'd have to have knee surgery if he tried it! Still, she did look adorable.\n\nHe took an inordinately long shower to relieve his tension that night. Jo took care of her tension in bed.\n\n****\n\nHis family must have spent the night across the street, because they were there with breakfast tacos at 7:30 am. Jo and Chris were still on their first cup of coffee when the doorbell rang, and he opened the door wondering who it could be, only to be mugged by his sisters.\n\nJo, in her nightshirt and knee socks, tried to make a run for it, but the sisters intercepted her. All she could think of was \"you never get a second chance to make a first impression\", and here she was in a nightgown, without makeup, and with wavy mussed hair that she had barely run a brush through!\n\nDidn't seem to bother the Alexanders; they beamed at her and hugged on her as they introduced themselves, and then Donna said, \"Jo, you are just as adorable in person as in your pictures! Get another cup of coffee and come show us your room -- we can eat later!\"\n\nMom said she wanted to tag along, so she got a cup of coffee, told them to heat up the tacos, and joined the others.\n\nWhen the girls were gone, his dad said, \"Dang, son; she's a doll!\"\n\nChris nodded, but reminded his dad that she was at most his temporary roommate, and that only due to her circumstances. His dad smiled, tilted his head, and said, \"Your mother got a call from Sandy Beck last night. Sandy has a different impression. She thinks you're 'sweet on her' whatever that means.\"\n\nChris got his dad a cup of coffee, heated the oven, moved the foil-wrapped tacos into a covered dish, and turned back to face his dad. \"Okay, I can't argue that she is very attractive, or that I can ignore that she is, but there is a story behind our meeting that only she can tell, so let me assure you that our relationship is entirely platonic in nature.\"\n\n\"Sure, son, keep on telling yourself that\" his dad said with a lazy grin, before artfully changing the subject to his success in Hot Springs, his promotion, and the new project. The table was set, a fresh pot of coffee was brewing, and they were laughing and talking across the breakfast bar when the ladies returned.\n\n\"Bubba, her room is fixed up so nice, and yours is just so blah! You should let her help you decorate it!\" proclaimed Donna, his nearly eighteen-year-old youngest sister.\n\n\"Don't you just love the way she has it decorated, Bubba?\" asked middle sister Dianne.\n\n\"I wouldn't know,\" Chris replied. \"I haven't been in it since I helped her move in.\"\n\nThe women all looked at Jo, who shrugged and said, \"That's true, and today with you was the first time I've been in his room. But, back to the point: I agree - his room is blah. Maybe the four of us can spruce it up a little while you're here.\"\n\nThe timer went off, so Chris moved the tacos, salsa, milk, and orange juice to the table. The women dominated the conversation, with Diane proclaiming that she had two friends who had attended TCU before transferring to Vanderbilt, which was a lot like TCU, so she would be glad to share her experiences with Jo. They discussed sororities and organizations Jo should consider, how athletics were an important part of the collegiate experience, that students should support their teams, and then transitioned to classroom expectations, norms, and grading.\n\nAlthough she was a high school senior, Donna was taking all AP or dual-credit courses, and she wondered aloud if she should also apply to TCU. \"Then Diane would be in Nashville and y'all could come see all three of us in one trip!\"\n\nThat set off a firestorm of discussion among the Alexanders about all the schools she had already been accepted to and whether it was too late to apply to TCU. Jo and Chris listened, looked at each other, and smiled.\n\nThat ran its course, and they wanted a tour of the apartment complex. Jo led them because she had explored more than Chris, who was surprised by how many people greeted Jo by name and then introduced themselves to his family. The family loved all the amenities, and the three girls decided they should work out in the gym and run the trail along the river, because they had been 'eating too much and not getting enough exercise'.\n\nThey bullied Chris into joining them, and talked mom and dad into 'at least working out with us a while'!\n\nAfter warmups and stretching, the four younger completed strenuous weight workouts, stretched again, and then hit the trail while mom and dad continued their more leisurely workouts in the gym.\n\nWith his sisters along, Chris led on the trail while the girls followed. He wanted to follow Jo, but watching his sisters' cute butts seemed creepy, so he led. Then he heard Diane say, \"Dang, I hate to say it, but Bubba is kind of a hunk, isn't he? It's been a long time since I've seen him in workout clothes!\" Donna and Jo agreed; Chris smiled and rethought his position on what constitutes creeping.\n\nAfter showers, they decided to take Chris' Ram over to TCU to look around. None of them, including Jo, had ever been there, and they were all impressed with the compact size and the beauty of the campus, both facilities and grounds.",
        "They couldn't buy any TCU gear because the bookstore was closed until the 27<sup>th</sup>, but the \"World Famous Dutch's Hamburgers\" was open, so they ate burgers and onion rings with shakes, and then walked it off by touring the campus and football stadium on foot. The football team was in Phoenix for the Cheezit Bowl versus U Cal on the 26<sup>th</sup> and the students were home for the holidays, so they snuck into the stadium through a gate 'secured' by a wrapped chain and unlocked lock.\n\nAmon G. Carter Stadium was nice and compact, but tiny compared to sprawling Neyland Stadium, where Chris' Volunteers played. It had recently been renovated and enlarged, and plans were posted for the addition of an upper deck and luxury boxes on the east side. Chris didn't say anything, but he was well aware of the new construction, which would begin in early January: it was one of his two new projects. The other was a new baseball stadium for the Texas Rangers. Chris wasn't wild about the plans for that one, but he was excited by the scope.\n\nBack at the apartment, they brought the gifts from the RV inside, and then Chris followed Dan to a nearby RV park where he had reservations. After checking in and setting up, they returned to the apartment to find the gifts had been nicely arranged around the tree by the ladies, Christmas carols were playing, and cookies 'for Santa' were baking. The once-drab apartment looked and smelled homey.\n\nThey were invited to the Becks' for a 'small Christmas Eve party', so the ladies were dressed spectacularly in their finest 'casual wear'. The men donned boots and jeans with sweaters and sports coats, and, although they were underdressed compared to the women, drew whistles of appreciation.\n\nThe party was also pretty spectacular, filled as it was with pretty people of substantial means who were there to see and be seen. There was quite a bit of strutting and one-upping, but neither the Alexanders nor their guest were intimidated, and made favorable impressions on all but the snobbiest and/or those most envious of their attractiveness.\n\nJo, Diane, and Donna adeptly dodged and dislodged wandering hands and adroitly deflected pickup lines, while Chris found that young women, MILFs, and cougars were quite handsy and plain spoken about their interest in getting to know him better. Dan and Debora also drew interest when separated, but their wedding bands were effective deterrents even for those getting shit-face drunk on Christmas Eve.\n\nThey thanked their hosts at midnight, and returned to the apartment to open just one gift each. Dianne, Donna, and Debora all picked large boxes with a certain wrapping; Jo had a box like that too, but she had chosen a small box 'from Santa' that was wrapped in silver. The others convinced her to change \"so we can all look alike tomorrow\", and they opened their gifts at the same time; they contained sweaters and leather skirts with matching boots. Dan and Chris also had matching boxes with new boots in them, and hand-tooled leather belts.\n\nIt was late and the excitement died off rather quickly. When the yawning began, they exchanged hugs and kisses and the Alexanders took the Jeep to the RV park. Jo and Chris waved at them as they drove off, looked at each other, mumbled 'goodnight' rather uncomfortably, and went to their rooms.\n\nIn spite of what appeared to be increasing closeness when together with his family, there was a sense of awkwardness between the roommates when they were alone in the apartment that hadn't been there since the first night.\n\n****\n\nAs he had warned, his family was back at 8:30. Chris, wearing his new boots and belt, had coffee ready, an oven full of biscuits, a pan of grits bubbling, and a skillet of sausage gravy ready when they arrived. After hugs and kisses, the sisters went to get their new best friend, whose emergence in her new set took Chris' breath away, and his parents' too.\n\nThe V-neck red sweater with wavy golden hair spilling over it was indeed breathtaking, and the mid-thigh golden skirt and knee-high boots only exacerbated Chris' reaction, which Jo, his sisters, and his mother caught. Jo blushed; mom smiled; the sisters chuckled. Chris and his dad continued staring, until Mom thanked him for making breakfast and insisted they eat.\n\nFollowing a quick cleanup, Chris put the huge ham in the oven, while they arranged themselves around the living room to receive their gifts. Chris played Santa, stacking gifts around each until all were distributed.\n\nThe family rule was that gifts be opened in rotation so everyone could share in the excitement and joy each gift brought to the receiver.\n\nThey began with the youngest, Donna, and ended each round with the oldest, Dan. Jo was holding the silver-wrapped gift from Santa, but Chris teasingly explained that gifts from Santa came last, so she reluctantly put it back and chose another. For the ladies, clothing, expensive perfume, and fancy, decorative athletic shoes and socks (from Jo) reigned.\n\nThe men received aftershave and nice shirts, but their 'big gifts' were matching side-by-side shotguns made in Italy by the Rizzini family. Jo's gift to Chris was something he had been talking about needing: a new pair of cross-trainers. Her gift to his dad was a camouflage field jacket for his bird-hunting obsession, and he made an extra-big fuss about how much he liked and appreciated it. Jo beamed.\n\nHugs and kisses had been exchanged between the receiver and giver after each gift was opened, and Chris got a soft kiss on his cheek after Jo opened his gift of a new iPhone, with a note in the box that said service was provided under his plan. The soft kiss was accompanied by watery eyes and sniffles, but she kept her cool and told Diane it was her turn.\n\nAfter all the other gifts had been exchanged, only the gifts from Santa remained. Donna's box contained diamond stud earrings with oversized diamonds, which caused her to whoop. \"Santa knew I just got my ears pierced!\" She hopped up, ran over to Chris, hugged him, and said, \"Tell Santa I love him!\" Chris hugged her back and promised he would.\n\nJo found an Akoya White Pearl necklace and earrings in her box, but her reaction was quite different: she froze in place, looking troubled. After a moment, she looked quickly from person to person and saw were all looking at Chris. He sat there innocently, and asked what she got.\n\nShe held up the necklace and dangling earrings, and then burst out in sobs. She jumped up and ran into her room crying, followed quickly by Donna and Dianne. His mom shook her head while smiling at him, and followed the girls.\n\nDan turned to him with a smile of his own. \"Grand gesture, son. Perhaps a bit too grand? She can't reciprocate, you know.\"\n\nChris shrugged and looked puzzled. \"Santa had a very good year, financially; he gave that to her because she only has cheap costume jewelry, and she's had a tough year -- well, life.\n\n\"I guess he wanted her to know she's on his 'nice' list.\"\n\n\"You are a very good and generous man, and I'm very proud of you; so are your mom and sisters. Your heart is in the right place, but your hand is a bit heavy on the reigns sometimes. She's not something broken that you can fix or restore, you know. And if you must try, understand that you can't fix her life situation in a week or two. You need to go slow and keep a light hand.\n\n\"She's a proud and defiant girl who has made her own way through a morass, and she fully intends to make her own future. They will be out in a few minutes; ask her to show you her gift, and act surprised. She'll know, but that provides her a little cover. Like I said, she's a proud girl.\"\n\nThey returned in less than five minutes, and Chris followed his father's instructions. She still looked upset, but most of the angst left Jo's pretty face when he asked if her could fasten the necklace around her neck. She told him to let her put the earrings on first. The pearl earrings dangling in the mass of golden hair were enticing, but, once his shaking hands got it clasped, the pearl necklace lying between the swelling cleavage was enchanting, beguiling, and breathtaking!\n\nHe walked around and stood in front of her, admired what he saw, and said, \"Very nice; Santa must have you at the top of his 'nice' list!\" She bit her bottom lip gently, and replied, \"Thank you for the compliment. Santa is overly generous to a girl to a poor girl from the Ouachita.\"\n\nThey exchanged smiles at their inside joke, and he returned to his seat.\n\n\"Your turn, Diane.\"\n\nSanta gave Diane a gold tennis bracelet with tokens and charms representing her sorority, other Vanderbilt organizations, and her seat in the student government. She squealed, hugged Chris, looked up, and loudly cried, \"Thank you, Santa! You're the greatest!\"\n\nDebora got a diamond encrusted watch from Santa to replace the one her daddy gave her for Christmas thirty years ago. It had stopped working and the jeweler said couldn't be repaired. With tears in her eyes, she climbed on her son's lap, took his face in her hands, kissed his lips, his nose, and his forehead: \"Tell Santa that I love him very much, and that he's the sweetest guy in the whole world!\"\n\nSanta had left one more gift: a sports watch for Dan that, in addition to a dozen other functions, kept his heart rate, blood pressure, exercise, and sleep records. He didn't sit on Chris' lap, but Dan pulled him up and gave him a big hug, for Santa.\n\n****\n\nThe table was formally set and covered with food fresh from the oven that Chris and Jo had pre-prepared ahead of time: green bean casserole, broccoli with cheese, sweet potato pie with brown sugar glaze, the gigantic ham, and loaves of fresh bread from a nearby bakery. The pecan pies were also from the bakery, but the brownies were homemade by Jo.\n\nTheir gluttony called for a long walk along the river after cleanup. When they returned, they carried out their Christmas tradition by streaming \"It's A Wonderful Life\".\n\nThey were still in a stupor from overeating, so Diane began looking through his DVD collection and found a box set of Grace Kelly movies: To Catch a Thief, Rear Window, and The Country Girl.\n\n\"So you still have that Grace Kelly obsession, I see,\" she teased. \"Which one shall we watch?\"\n\n\"To Catch a Thief\" won handily.\n\nMidway through, Dianne paused the film on a picture of Grace Kelly with windblown hair; she turned, looked at Jo with a curious frown, and murmured, \"Wow! That's uncanny! You could be her little sister!\"\n\nJo looked surprised; she barely knew of Grace Kelly, and no one had ever drawn that comparison before. Oh, guys had compared her to some movie star or pop singer from time to time while trying to pick her up or get a date, but never Grace Kelly. She doubted anyone she grew up with knew who that was anyway.\n\nEveryone looked at Jo, looked back at the screen, and then back at Jo. \"The Golden Ratio\" Chris proposed. One by one, the others nodded.\n\nJo said, \"I have no idea what you're talking about. Can we just watch the movie; I'm getting kind of freaked out, here!\"\n\nThey did, without further comment, but Jo began to notice times when the female lead did look a little like her.\n\nWhen it ended, Jo asked, \"So Chris has an obsession with her? Grace Kelly?\"\n\n\"Not really an obsession,\" Debora said with a smile, \"but Dan and I have always been fans of Alfred Hitchcock. The girls were young and Chris was about twelve, and we sat down to watch this movie. About halfway through, Chris wanted to know about 'the pretty blonde lady'.\n\n\"We told them all about 'The Princess of Monaco', including how she died so young in a car wreck. They were all captivated, but she kind of became Chris' ideal of beauty, and he would often unfavorably compare celebrities of his generation to her.\n\n\"The Golden Ratio refers to the ratio of the parts of her face, which a man named Marquardt claimed defined feminine beauty mathematically. He even created a 'mask' of sorts that supposedly fits her face perfectly. Chris thinks it fits yours too.\"\n\nJo had been frowning slightly throughout the explanation, and then looked puzzled at the idea that beauty could be defined mathematically: \"Beauty is in the eye of the beholder\" she understood, but \"Golden Ratio?\"\n\nThen his mom's final statement sunk in; her puzzlement became a smile, and then a smirk. She turned to Chris: \"So I'm your ideal of feminine beauty?\"\n\n\"I didn't say that; I proposed that the Golden Ratio may apply to you,\" he countered insincerely.\n\nHer smirk grew, and his sisters began laughing. Mom and Dad were chuckling as well. He knew he was busted, so he lamely ordered Diane to push play. That weak effort only drew more laughter.\n\nHis dad rescued him by suggesting it was time for a sandwich made from the leftover bread and ham, and another of Jo's delicious brownies. They relented and moved to the kitchen, although Jo brought the smirk with her.\n\nAnother meal, a walk before dark, and the Alexander's took the Jeep, filled to the roof with loot, back to the RV park.\n\nWith everyone else gone, the sense of awkwardness returned, and they went to bed early.\n\nChapter 3 will be submitted as soon as Chapter 2 is posted."
    ],
    "authorname": "Texican1830",
    "tags": [
        "young love",
        "first love",
        "romance",
        "flirting",
        "blonde girl",
        "grace kelly",
        "sweet",
        "innocent",
        "eighteen yo girl",
        "twenty-five yo man"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-girl-from-the-ouachita-ch-02"
}