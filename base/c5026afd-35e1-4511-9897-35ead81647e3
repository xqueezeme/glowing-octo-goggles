{
    "title": "Pushover Ch. 06",
    "pages": [
        "And here we are at the end. I'd like to thank everyone for all the comments and encouragement, and I'm really glad everyone seemed to enjoy it. Something I should have mentioned in previous chapters: Any similarity between characters mentioned here and actual performers in the adult industry is mostly intended. I hope no one was offended.\n\nPlease enjoy.\n\n~~~~~~~~~~~~~~~~~\n\nShape-Up! was a small gym and fitness center in a strip mall about ten minutes from Rick's place. They had weight lifting machines, free weights and a wide variety of stationary bikes and ellipticals. They also had two studios in the back that were used for yoga and aerobics classes, as well as Rick's self-defense training, and were open seven days a week, 6am to midnight.\n\nBut on this night, at 2am, there was clearly something going on. If you looked closely, you saw that one of the front gates was still open. The lights were off, but someone was manning the front desk: a tall, bulky guy who appeared to be fiddling with the computer while talking on his cell phone.\n\n\"Maria, baby, it's a job, what do you want me to say?\" Tony pleaded, a little sick of having the same fight for the third night in a row. \"I'm getting a hundred bucks to sit here and fuckin' watch Hulu. I'm not even seeing anything.\"\n\n\"C'mon, you don't want to watch?\"\n\n\"No! And it's all very professional; there are only three people in there. And one of them's a girl! We talked about this, babe.\"\n\n\"I know. I just... I hate the idea of it,\" she grumped. \"And the other girl is named Marie? Ew.\"\n\n\"If it makes you feel any better, I doubt that's even her real name.\" Maria had to laugh at that. \"I like the idea of a little extra money. And I think you'll get used to the idea too.\"\n\n\"Guess I could get used to that, yeah. How much longer are you gonna be?\"\n\n\"I dunno. They said a few hours.\"\n\n\"Rick can rock that long? Dayum.\"\n\n\"If you're curious, we can watch the video together,\" Tony teased.\n\n\"Well,\" she said slowly, her tone playful, \"I'd been meaning to tell you... I watched some of Daisy's bits.\"\n\n\"No shit?\" Tony was shocked: Maria had always thought porn was disgusting. She wasn't a prude, really, but she had always been resistant to the idea of watching other people have sex.\n\n\"I couldn't help it! I know them both! It's... like the opposite of a celebrity sex tape. I couldn't resist!\"\n\n\"What'd you think?\"\n\n\"They had their intended effect.\"\n\n\"Oh really?\" Tony could guess she was blushing.\n\n\"Well... They're pretty hot together. And I know they aren't acting. I can admit that it's sexy. I'm not some kind of robot.\"\n\n\"Maybe when I get home we can watch something together.\"\n\n\"Maybe we can. What're you watching?\"\n\n\"Hm?\"\n\n\"On Hulu.\"\n\n\"Last night's CSI.\"<br /> \"Ugh.\"\n\n\"I know, but... It's better than nothing.\" There was a brief cry from the back of the gym, and Tony couldn't help but glance back there. \"I think Rick just got his end wet.\"\n\n\"Ew, What's going on? Go look and tell me!\"\n\nTony had to smile at her change in attitude.\n\nTony's presence was almost certainly unnecessary, but Rick had insisted. Rick was paying Tony to make sure that what was going on in studio A wouldn't be discovered: Construction paper had been taped over the big glass windows cutting off all view of what was going on inside.\n\n~~~~~~~~~~~~~\n\n\"Oh fuck! Fuck my pussy, fuck my pussy!\" Marie cried out again, bouncing up and down on Rick's hips. The black belt from a karate gi was still wrapped around her waist, and Rick was using it to pull her down against him hard. Her smooth pussy looked fantastic sliding up and down his shaft. She glared in the camera sexily, moaning near constantly as she alternated with rubbing Rick's balls, her own clit, or her tits. Tim was kneeling almost between Rick's feet, filming the action up close.\n\n\"Oh yes baby, just like that,\" Daisy moaned, looking down into Rick's eyes as she rode his mouth. She wore a headband like the one worn by the Karate Kid, the rest of her clothing having been tossed off earlier in the scene. Her fingers pinched her nipples firmly, as she gasped and moaned at Rick was doing with his tongue deep in her pussy. Brent, the other camera guy, was getting more creative with his filming, moving around to get some different angles.\n\nRick grunted as Marie switched to a swirling motion with her hips, stirring him in her pussy. She was hot and wet on him, but nothing like Daisy's gripping pussy, and Rick was glad because otherwise he would have cum ages ago.\n\nRick was enjoying his view from beneath Daisy as she gasped and groaned above him. She was flush, her dark skin shining with sweat, her belly a shiny writhing thing as she ground against him gently. Rick alternated between thrusting his tongue deep inside her and lapping at her clit, and he loved her cries and moans of pleasure.\n\nRick glanced over and saw Sarah signaling him that it was time for the next part of the scene. He managed not to roll his eyes as he nodded slightly, taking his hands off of Marie's belt and gripping Daisy's butt hard, shifting her hips so her tight ass was over his lips. He started lapping at her little knot, Daisy gasping as her anus clenched tight against his assault.\n\n\"Oh, oh fuck, he's eating my ass out, mm, fuck!\" Daisy squealed out, leaning back against Marie as she spread her legs wide, giving the camera an excellent view of Rick lapping at her.\n\n\"Mm. He's a naughty sensei!\" Marie said with a giggle, her eyes on the camera. She pulled his cock out and slapped it against her pussy a few times before sliding back down on it. They stayed like this for a few minutes, the only sound the girl's grunting and the gentle thumping of Marie's ass against Rick's hips. Rick knew that he was supposed to do this for a few minutes more before moving on to the next bit.\n\nBefore they had begun, Marie and Sally had explained the proceedings, with sexual script of moves that they were supposed to do. Marie was the biggest star there and had a way she liked to do things. Rick remembered Sally explaining how it was going to go: double blow job to straight fucking each girl, then them double teaming him and each other, to him flat on his back with them both riding him to climax.\n\nRick knew he was hardly experienced in the porn business, having only been in two scenes with Daisy, but he had started to take for granted just how unusual he and Daisy's shooting style was: they just had amazing sex while some other people filmed it. Sure, Sally occasionally directed them, but it was relaxed, spontaneous and fun.\n\nThis shoot really wasn't any of those things. At first he had been nervous about even touching another girl with Daisy there. Her eagerness relaxed those concerns a great deal, and Rick had to admit laying back on the padded floor, Daisy and Marie have a cock sucking contest on top of him, was one of the nicer experiences of his life. As the scene wore on, however, it became more mechanical and drawn out. Every few minutes it seemed like Sally was ordering them around, moving them this way or that to get the shot or move them on to the next bit in the scene. The whole process was staged, surreal, and as not fun as having sex with two women could get.\n\n\"Mm, I want him in my ass,\" Marie hissed to the camera, indicating that it was time for the last part of the scene.\n\n\"And quick cut,\" Sally said, grabbing a condom and packet of lube and tossing them to Rick. Daisy and Marie had already dismounted, standing in their naked glory as Rick slowly sat up from the sweaty mat. \"Here you go. You two alright?\" This was directed to Daisy and Marie, the actual talent in the room.\n\n\"Fine,\" Marie said, drinking deeply from a bottle of water. She was looking about the room absently, apparently unconcerned at her nudity and uninterested in the two people in the room that she had just been having sex with. Rick could tell that this was just another day at work for her, he just another cock to get off for the cameras so she could cash a check. It shouldn't have bothered him, but it did.\n\nRick rolled the condom down his shaft but when he reached for the packet of lube, he was pleased to find Daisy kneeling at his hips opening the packet.\n\n\"Let me do that, sensei.\" The grin was fully in place as stroked the lube onto him. She put a little more effort into it than needed, her slippery hands pumping on him till he throbbed. Rick couldn't help but grin, thinking about her lubed hands on him earlier in the week.\n\n\"Yes Daisy-san. Wax on-\"\n\n\"-Whack off,\" Daisy finished, rolling her eyes at him, as this was not the first time he'd made the joke. Her hand was sliding on him easily, his cock nice and hard in her hand. \"He's all ready for you Marie.\"\n\n\"Thanks,\" Marie said as she stepped over him, coming down in an easy squat over his hips. Daisy aimed Rick's cock at Marie's glistening pink anus.\n\n\"Rolling,\" Brent said quietly as he and Tim took up position.\n\n\"Action.\"\n\n\"Mm, I can't wait for this cock to plow my tight little asshole,\" Marie said into the camera as Daisy rubbed him against her butt. Lining him up, Marie hissed through her teeth as she slowly pressed her way down Rick's cock. He popped in rather easily, groaning a little as he slipped into her hot wet butt.\n\n\"Oh fuck, look at that,\" Daisy said, cupping Marie's pussy in her hand, rubbing her clit as her hips began to pump up and down. \"Mm, like that sensei? Her ass nice and tight?\"\n\n\"Oh yeah!\" Rick played along. Daisy glanced at him and he subtly shook his head: Marie felt hot and smooth on him, but not that tight. She looked away, trying not to laugh.\n\nMarie stayed right where she was, her hips pounding down again and again. She never stopped moaning and calling out as she fucked herself on him. Daisy moved around a lot, sometimes playing with Marie, sometimes with Rick. Without any cameras on him Rick felt mostly forgotten, little more than a functioning cock for the scene.\n\nRick closed his eyes and thought back to when Daisy was over two nights ago. They had spent the day people watching at a street-side bar, which really amounted to getting drunk and pointing out hot people to each other. They had come home sweaty, horny, and a little drunk.\n\nRick relaxed, remembering how they had quickly moved from the couch to the bedroom, slipping into an easy 69. He remembered her scent filling his world, her mouth an insistent, sucking vacuum on his cock. He could feel her tongue stud, a hard knob moving up and down his shaft...\n\nWhen Rick opened his eyes he found himself face to face with Daisy's ass as she straddled his midsection. She was looking over Marie's shoulder as she reached around, playing with the blonde's breasts as she bounced away on his cock. Suddenly confronted with the sight of his fantasy, coupled with knowing what Daisy was doing above him, and Rick could feel his orgasm rushing.\n\nHe quickly tapped Marie on the butt, the tall blonde quickly hopping off of him as she and Daisy moved to their knees by his side. He stood, ripping the condom off and turning to the two beauties. Daisy quickly grabbed his shaft, her hands pumping him. He came with a soft grunt, his cum spurting thickly across Marie's cheek and forehead. His next pulse caught Daisy across the bridge of her nose, and she quickly pulled him close and pumped him slowly, aiming the rest of his load into her open mouth. Rick just kept spurting, having followed Paul's advice on how to guarantee a big load for the camera. Through it all Daisy stared up at him, her dark brown eyes playful and challenging. As his orgasm slowed to a dribble, Rick stepped back and the cameramen swooped in, filming as the two girls shared a deep, passionate, tongue-filled, cum-swapping kiss. As they made out, some errant cum dripped down their chins. Rick had to admit: it was hot.\n\n\"Thanks for showing us that technique, sensei,\" Marie said as she wiped some cum off of Daisy's chin, sucking her finger clean. Daisy simply crooned in response as the cameramen both panned away for the end of the scene.\n\n\"And cut. Nicely done everybody,\" Sally said as she stepped forward with two robes for Daisy and Marie. \"The locker room is right through there, I'll show you...\" Sally left with the two stars, leaving Rick breathing heavily and naked with the two cameramen.\n\n\"So, uh, you and Daisy are seeing each other?\" Brent asked, looking away while Rick put on his underwear.\n\n\"Uh yeah, yeah we are,\" Rick replied as he pulled a shirt out of his gym bag.\n\n\"She seems pretty cool,\" Brent offered as he ejected and labeled his tape.\n\n\"Yeah,\" Tim agreed. \"A lot of these girls are total cunts.\"\n\n\"Noted,\" Rick said, pulling on his flip-flops and heading out of the cramped room before he was forced to talk to the camera guys anymore. He found Tony waiting at the front desk, a smirk on his face.\n\n\"And how was your night?\"\n\n\"Strangely unpleasant,\" Rick groused.\n\n\"What?\"\n\n\"It just... This one wasn't nearly as fun as the others, is all.\"\n\n\"Sounded to me like you guys were having fun, I dunno...\"\n\n\"That was just acting, I think.\"\n\n~~~~~~~~~~~~~\n\n\"So you and Rick are dating, huh?\" Marie asked as she emerged from the toilet, heading directly into the shower stall.\n\n\"Uh, yeah. For a couple months now,\" Daisy said as she finished rinsing off.\n\n\"He seems okay. Not like a lot of these guys.\"\n\n\"Oh yeah, he's great.\" Daisy stepped out of the shower and started drying off with the tiny, too rough towel, which was all the gym seemed to keep in stock.\n\n\"Nice cock too. A lot of these guys are like fucking donkeys. Feels like they're trying to drive your cervix into your sternum.\"\n\nDaisy laughed, thinking it was the only normal reaction to discussing the pros and cons of your boyfriend's dick.\n\n\"How long have you been doing this?\"\n\n\"Porn?\" Marie asked with a laugh. \"A bit more than two years. I saw you'd only done a few scenes so far?\"\n\n\"Yeah, this is my fifth. Sally signed me to a three-shoot deal with an option for a fourth. I've been wondering if I want to re-up with them, but I'm not sure...\"\n\n\"You could do a lot worse. Slambros has good exposure, and they pay above the standard rate, generally. My advice?\" Marie said as she pulled the curtain aside and stepped out, her fantastic body shining with moisture. \"You should get a boob job.\"   \"Pardon?\"\n\n\"To be competitive you need at least a solid C, but I think you could go larger. You're so tiny, so a big pair of tits will really pop, y'know? Bigger is always better.\"\n\n\"I guess...\" Daisy said, eyeing the tall blonde more closely. Marie's boobs looked great, but having felt them during the shoot Daisy knew they were fake. Really good fakes, but fake. How many boob jobs has she had?\n\n\"And I don't know if you've done anal yet, but don't make the same mistake I did.\"\n\n\"What's that?\" Daisy wondered if it had to do with the donkey-cocked costars that Marie seemed to be used to.\n\n\"I just did an anal scene, in like my second shoot. And they paid more, but I realized I'd missed a big opportunity. Sites love to be able to slap 'in her first anal scene!' on shit if they can. You've got to build to that, and then make them pay out the nose, y'know? Like I did with my DP.\"\n\n\"Uh, right.\"\n\n\"But you play it right you can get a couple extra hundred, maybe even a grand out of them, y'know?\" Marie said absently, rubbing the rough towel over her tits and belly. \"Rick okay with you fucking other guys?\"\n\n\"Well, uh...\"\n\n\"Right. My guy was pretty cool with it right up until I started doing DPs.\" She shrugged, pulling on her underwear. \"Ugh, that reminds me I've got a group scene day after tomorrow. Blech.\"\n\n\"Group scene?\" Daisy couldn't help herself. \"Like tonight or...\"\n\n\"More like a gang bang. Well I dunno, is four guys a gang?\" It was said with a laugh, but Daisy knew gallows' humor when she heard it. \"Shit, whenever it's more guys then holes, right?\"\n\n\"How much longer are you gonna do this?\"\n\n\"I figure I've got maybe six months before I'm over the hill,\" Marie said with a shrug. \"But by then I'll have enough put away to practically retire, or start my own business. I mean whatever. I won't be a fucking cum target anymore, is my point. I swear, I think after this I'll be celibate for a year. Or five. I mean seriously, men are such fucking apes.\"\n\n\"Uh, right.\" Daisy was lacing up her sneakers and desperate to escape, but at the same time she could hardly ignore the woman. \"So... Do you regret it at all?\"\n\n\"Hey, I made a choice and I'll live with it. I mean, and this is just the way I thought on it, if I was going to be a pornstar I wasn't going to half-ass it. Do it, and do it for real, for as long as I could keep it up. I knew I was never gonna be a model or nothing, you know? Some of it sucked, but I've got money in the bank, a condo, a 401k... It wasn't all for nothing.\"\n\nAs Marie talked, she absently got dressed, pulling on a simple t-shirt and jeans. Daisy thought she looked better without the caked on make up, but between the bleach blonde hair, the over-surgeried face, fake tits, and collection of \"sexy\" tattoos, Daisy couldn't help but think that she looked pretty haggard.\n\nDaisy's heart jumped as she had a sudden vision of herself in three years: Fake blonde hair, fake blue eyes, giant fake tits, huge horrible tribal tattoo all over her back, her pussy a gaping cavern after miles of cock had pounded their way through her. Dried up, bitter, alone, and totally going to retire in six months... Daisy snapped out of it, standing up suddenly.\n\n\"I gotta get going. But it was really nice meeting you.\"\n\n\"I'll walk out with you,\" Marie said, stepping into her crocs and grabbing her small bag.\n\nDaisy walked briskly to the front of the club, Marie trailing behind. They found everyone else waiting for them, the cameraman having quickly packed up their gear as if they were never there.\n\n\"Ready to go?\" Rick asked as he fished out the keys. Daisy nodded emphatically as Rick opened the front door and everyone filed out\n\n\"Nicely done everyone. I feel like we were just part of something out of Ocean's 11,\" Sally said as she handed out envelopes to Marie, Daisy, and Rick. \"Really good shoot, seriously. It'll make a great launch video.\"\n\n\"Great,\" Daisy said, feeling that it was anything but.\n\n\"Yeah, thanks. Tony, if you could escort Ms. Phoenix to her car?\" Rick was desperate to get out of there, but he knew Tony had done him a huge favor.\n\n\"Not a problem Rick. I'll see you Friday?\"\n\n\"You know it. Thanks man.\"\n\n\"It was an adventure. Night Daze. Ms. Phoenix?\" Tony indicated the way to the parking lot.\n\n\"Such a gentleman!\" Marie laughed. \"It was nice to meet you Daisy. Good luck with that stuff we were talking about. Rick, nice to work with you,\" she said very professionally as she set off to the parking lot with Tony in tow.\n\n\"Back atcha. Daisy, I-Daze?\" Daisy was already half-running to Rick's car. Rick glanced to Sally, who could only shrug as she indicated he should probably follow his girlfriend. \"Hey, hey babe what's wrong?\"\n\nDaisy didn't say anything as she quickly climbed inside and shut the door behind her. Rick went around to the driver's side and climbed in.\n\n\"I don't think I can do this anymore.\" It was said with such utter finality.\n\n\"Wait, what? What's the matter?\"\n\n\"This, this fucking job, this porn shit. I can't do it anymore. I'll end up a dried out old slut with a fucking yawning cunt and an ass like a hallway and horrible tattoos and god knows what else...\"\n\n\"Hey, hey, hey, easy, easy baby,\" Rick said, taking her hands. \"What bought all this on?\"\n\n\"Marie. She's been doing this two years and... Well, god, I can't even imagine what she must've used to look like, first of all. And she gets fucked like a couple of times a week by guys she can barely stand. She was talking about taking on a fucking gangbang like I talk about pulling a crap shift! It's not even acting, it's just... Plumbing. Just holes to stick cocks in and make a scene.\"",
        "\"If it helps, I didn't have much fun tonight either. I was kind of feeling the same way.\"\n\n\"I know, right? It was so... Mechanical.\" Her head fell to her headrest with a quiet clunk. \"I'm done. I don't care what they offer, I'm just not interested.\"\n\n\"Won't hear me complain.\" Rick was smiling as he turned the car on. They drove in silence for a few minutes. \"This is definitely different than our other drives back.\"\n\n\"I know. I'm not feeling terribly sexy. Sorry.\"\n\n\"It's okay babe, we don't have to do anything.\"\n\nDaisy grumped to herself quietly, bringing a questioning look from Rick.\n\n\"I was looking forward to having a threesome with you. It was supposed to be fun.\"\n\n\"Well we'll just have to make sure our next one is great, obviously,\" Rick joked as they pulled onto her street. She elbowed his side with a laugh as they stopped in front of her place.\n\n\"I still want to sleep with you tonight,\" Daisy said, leaning close. \"Seriously, I need a cuddle-buddy.\"\n\nRick laughed, but couldn't think of anything he'd rather do.\n\n\"Sure Daze,\" Rick said as he opened his door. \"Is Lilly...\"\n\n\"Cuddling's quiet,\" Daisy said as she kissed his jaw. \"Besides, you gotta take a shower before I'll even think about touching your dick again.\"\n\nRick could barely roll out of his car he was laughing so hard.\n\n~~~~~~~~~~~~~\n\n\"You and you,\" Rick said, pointing to two cute, underdressed girls. They zipped forward, getting ahead of the line and into the club.\n\n\"C'mon man! We've been waiting out here for like an hour!\"\n\n\"Yes you have. Patience is a virtue,\" Rick said solemnly, consulting his clipboard as if there was something important on it. With the two girls he just sent in he could probably let these guys in now, but he decided to let them stew for another few minutes.\n\n\"Sup Rick! How you doing?\" Paul asked as he appeared in front of Rick like some sort of apparition.\n\n\"Hey, how's it going,\" Rick said as he shook Paul's hand, a little thrown off. \"Not too bad, decided to hit the scene tonight, y'know?\"\n\n\"Sure man, I gotcha.\"\n\n\"Think I can get a table in VIP?\" Paul asked, his eyebrow raised.\n\nIf Paul was out for a night of clubbing, he didn't really show it. He looked about the same as when Rick met him at Daisy's first shoot: loose shorts and a wife-beater, his somewhat gangly frame on full display. His two male companions weren't doing much better, with one of them actually wearing crocs out of the house. Eden was all about style, class and exclusivity, and crocs were about as far from that as a person could get. Typically, Rick would show guys dressed like this back to the street.\n\nBut he was also in the company of six of the hottest women Rick had seen that night. All were dressed to thrill, with everything from thin, cut-away t-shirts and leggings to skin tight rubber dresses. Paul's date was the best, an adorable curly-haired brunette wearing a tightly packed sports bra and a pair of overalls, and apparently nothing else. The overall effect was somehow both innocent and terribly sexy.\n\n\"I think I can make that happen.\" Rick said while signaling Jose. \"Do me a favor and get your girls to do a little dancing in there? I think y'all could set it off.\"\n\n\"Oh don't worry man. We're here to party,\" Paul said as he patted his pocket. Rick didn't get it until he noticed Paul's bloodshot eyes. Rick had to grin: He was supposed to throw anyone using drugs out of the club, but VIPs did get a certain level of consideration.\n\n\"Good to know.\" When Jose came over, Rick whispered in his ear: \"Table three in VIP. Give him a bottle of Skyy on the house.\"\n\n\"Got it.\"\n\n\"You're all set. I'll stop by later on,\" Rick said, opening the rope and allowing Paul's party in.\n\n\"Rick?\" Rick was surprised as Sally appeared at his elbow. Looking around, Rick realized that Sally had been amongst Paul's party, but he hadn't really noticed her amongst the barely dressed porn starlets.\n\n\"Hey Sal, what's up?\" Rick hadn't had much of a chance to speak with Sally at the shoot, and hoped that she wasn't going to try and get him to convince Daisy to keep working with them.\n\n\"I didn't want to mention it the other night but, uh... I just wanted to apologize for blabbing to Daisy like I did. I'm not like that, usually... I thought I was looking out for her.\"\n\n\"Oh that? It's okay. You were just trying to be her friend, I get it.\"\n\n\"And I also wanted to let you know that I've got a contract for you.\"\n\n\"Sal, I don't want to do any more work as a... performer,\" Rick said, uncomfortable to be talking about this at his day job. As it were.\n\n\"No! Not for that. Daisy said you were looking for some security freelancing? I've been looking to get someone on contract for a while now. We need security help all the fucking time! We've been doing it sort of a piecemeal, but I was hoping we could come to some sort of formalized plan?\"\n\n\"But I... I was talking to Paul about that?\"\n\n\"Paul?\" Sally asked, laughing. \"Paul doesn't work with that stuff. He's our creative director. I'm the general manager.\"\n\n\"Oh. I see.\"\n\n\"You would have found that information useful I guess.\"\n\n\"Sorry,\" Rick said, feeling like he had stepped in it.\n\n\"Don't sweat it. Here,\" she said, handing him an envelope. \"I'll see you in there at some point?\"\n\n\"Sure, sure, Daisy's at the bar, go say hi!\" Rick was smiling, playing it cool, but inside he was freaking out. He had a few possible clients lined up, but this had the makings of a fantastic account. As soon as Sally was out of sight he was flipping open the paperwork. The pay rates she was suggesting were enough to raise his eyebrows.\n\nRick's walkie chirped: someone wanted to talk to him.\n\n\"Yeah?\"\n\n\"Holy shit did you see the girls that came in? They just hit the dance floor. Ay yi yi!\" Marco called out.\n\n\"Take it easy in there, those are friends of mine.\"\n\n\"Oh. Oh! Got it boss.\"\n\nAs he handed off door duties so he could take a quick break to look at this contract, Rick couldn't help but smile. Boss. That sounded nice. And it was closer than ever.\n\n\"You three: Get in there,\" Rick said, indicating the guys he had made wait before. With all of Paul's girls flooding the dance floor they needed some guys in there stat.\n\n~~~~~~~~~~~~\n\n\"One more!\"\n\n\"Daze, c'mon, it's almost one in the morning.\"\n\n\"We've only got two more to go! C'mon, you know you got me hooked,\" she pleaded, her fingers at his side.\n\n\"If you really want to, sure. But you only have two episodes left, though. You sure you want to rush through them like this?\"\n\n\"But you said there was a movie too!\" She was already starting up the next episode when Rick's cell phone rang. Rick looked and saw that it was his sister.\n\n\"Hey Kate, what's wrong?\"\n\n\"Rick, I never thought I'd have to fucking ask you this.\"\n\n\"Ask me what? What's the matter?\" he asked, becoming concerned.\n\n\"Are you in porn?\"\n\n\"Oh, um.\" Rick was surprised at the sudden relief he felt: It couldn't get much worse than you're sister finding out you're in porn. Rick wondered at the right way to field that question, but it seemed Kate already knew the truth. \"Would it help if I told you I'm retired?\"\n\n\"Jesus Christ Rick have you lost your fucking mind? Fucking Internet porn? Seriously? Dad's gonna have a stroke. What happened to that girl Holly? She was so nice! I mean maybe she wasn't a goddamn porn star but-\"\n\n\"Kate, I-\"\n\n\"And you can't even warn me? I've got to find that shit out from my husband?! Luke says he's gotta show me something, and it's a video of you boning some slut! What on earth was-\"\n\n\"Rick! Nicely done,\" Luke laughed into the phone, picking up on another extension in the house. \"I know I shouldn't have told her but I couldn't help it! Katie you've gotta calm down!\"\n\n\"It's okay Luke I-\"\n\n\"Luke get off the damn phone!!\" Kate screamed, and Rick couldn't help but laugh.\n\n\"What happened?\" Daisy asked, taking the laughter as a good sign.\n\n\"Kate found out about my part time job.\"\n\n\"Oh. Oh! Oh jeez. Want me to talk to her?\"\n\n\"Do I want what? Hey!\" But before he could stop her she had his phone in her hand and was talking to his sister. The one who just called her a slut.\n\n\"Hello? Hi. My name's Daisy. I've been dating your brother. Yes that was me. I don't know, maybe three months now?\" She said this to Rick, who nodded. \"Uh huh. No I'm not seeing anyone else. Hello? Hi Luke, I've... Glad you liked it! I-\" Daisy pulled the phone away from her ear as Kate yelled at her husband again. \"Kate? Hi. I'm sorry we met this way, but my name is Daisy Shaw. Uh, right. Same person, that's just my stage name. No, it's okay. I work with Rick at the club. Yeah.\"\n\n\"Can I get that---\"\n\n\"We're just watching a DVD, it's okay. This show Firefly? No it's pretty good, actually. How's Syracuse? Yikes. I left Brooklyn to get away from the cold so... a year or two now? No, no, I live with my sister.\" Daisy got up from the couch and wandered off to the bedroom, chatting amiably as she entered Rick's bedroom and closed the door behind her.\n\n\"Well that can't be good,\" Rick muttered, stewing for a second before grabbing his laptop and flipping it open. The latest draft of his business plan was already open, and he went over it for what felt like the billionth time, trying to see where it still needed improvement.\n\nHe had tried to touch on his high points: experience, including management of a large security operation, good personnel, and being a martial arts instructor he could train all the staff guaranteeing skilled, capable personnel. That, combined with initial low overhead, meant he should be able to be up and profitable within short order. Rick nodded, more or less happy with what he had written. Rick had spent the past week or so polishing it up, but for all his work he had no idea if it was any good or not, having never written one before. He was going to show it to Daisy, but he had wanted to make sure it was perfect before he did that.\n\nAnd now she's on the phone talking to my sister. Katie was great, but she was always pretty protective of him, especially after their mom passed. He knew that Daisy was probably getting the third degree, and wondered what in the world they were talking about. After a few moments of stewing, Rick snapped out of it and turned the xbox off, switching to some late night TV to distract himself.\n\nIt was nearly forty minutes later that Daisy reemerged, still speaking to Kate.\n\n\"No, I insist. Lilly can babysit! You'll pay her, right?\" This was said with a laugh, getting worse at whatever Kate was saying. \"Yeah she's cheap, don't worry. I know! Okay, yes, I'll see you then. Buh-bye.\" Daisy hung up and tossed Rick's phone back to him.\n\n\"What was all that? And she didn't want to talk to me?\"\n\n\"Not once she had me on the phone. Apparently you tend to keep her away from your girlfriends?\"\n\n\"She can get a little protective.\" Rick considered his words. \"Which is to say she can become monstrously nosey. I think she feels like she has to fill in for mom.\"\n\n\"What do you mean?\"\n\n\"Bug me about when I'm gonna settle down and get married.\"\n\n\"Ah.\" Daisy climbed over the back of the couch and settled in his lap. \"Well, she was a little surprised to see video of you getting sucked off on the Internet. Apparently she thought this was very out of character for you. I assured her you made the decision of your own volition.\"\n\n\"Said it just like that, huh?\"\n\n\"I think I might have said it didn't take too much work to seduce you.\"\n\n\"What'd you tell her?\"\n\n\"How we got together, where I'm from, stuff like that.\"\n\n\"You told her how we got together? The truth? With the porn and everything?\"\n\n\"Well she knew I filmed a scene with someone other than you anyway. It's okay!\" she said firmly off of Rick's look, touching his chest gently. \"She laughed, don't worry. Kate's great, I can't wait to meet her.\"\n\n\"Yeah, what was that about?\"\n\n\"They wanted to visit you anyway, what with it getting so cold up there. They were just worried about what they'd do with their kids, and I told them Lilly would take care of them and the grownups could enjoy themselves.\"\n\n\"I see...\"\n\n\"Nervous?\"\n\n\"A bit. Kate managed to scare off a few girls in high school. And one in college.\"\n\n\"She's gotta take care of you. You're her little brother!\"<br /> \"I weigh literally more than twice as much as her, you know.\"\n\n\"She's just looking out for you. Although she liked this Holly she last met.\" This was said with raised eyebrows.\n\n\"Ugh. That was her last visit about a year ago.\"\n\n\"She didn't scare her off too did she?\"\n\nRick had to laugh. \"No, no. She loved Holly. Thought she was so decent and special.\"\n\n\"And I take it she wasn't those things?\"\n\n\"Holly was totally crazy! Possessive like I've never seen! I caught her going through my text messages! And you know, she was so sweet and decent, she was the girl who loved it up the ass!\"\n\n\"Well, y'know, crazy in the head, crazy in bed.\"\n\n\"Then how come you aren't crazy?\" Rick asked as he wrapped his arms around her.\n\n\"I'm just the exception that proves the rule,\" Daisy said, her grin broad. \"Or maybe I am and you don't know it.\"\n\n\"A girl's got to be a little crazy to do porn,\" Rick teased\n\n\"Then there are a lot of crazy girls out there, huh?\" Daisy gave right back, her eyebrow arched. \"And how crazy are you to have joined me in front of the camera, hm?\"\n\n\"Pretty crazy. About you.\"\n\nDaisy's grin turned into a cute little smile, which Rick kissed. \"Take me to bed.\"\n\n\"I thought you wanted more Firefly?\"\n\n\"I did, now I want you.\"\n\nAnd then they were kissing. This wasn't the bruising kisses that they usually shared before sex. These were soft, sucking, playful, their tongues fighting over space as their hands gently stroked along arms and sides. When Daisy pulled his shirt off, Rick returned the favor, cupping her perfect breasts in his hands, her nipples like hard pebbles.\n\n\"I thought you wanted to go to bed?\" Rick asked as Daisy's hands met at his belt, working his pants off.\n\n\"Like I said, I want you. Here's as good as anywhere else,\" Daisy said as she roughly jerked his pants down, his cock flopping back against his belly.\n\n\"You've got a point,\" Rick said as she pulled the crotch of her shorts to the side.\n\n~~~~~~~~~~~\n\n\"You ready?\" Rick asked as he hit the bar. Eden after closing always looked a bit like a warzone: trash all over, hundreds of empty glasses and bottles taking up every available surface. Occasionally you'd find condom wrappers or panties on the floor, but that was more of a rarity and earned you a shot.\n\n\"Getting there. Five more minutes?\" Daisy said as she drained another bar mat into the sink.\n\n\"Hey Rick! Daisy! Stevie wants to talk to you guys,\" Alexis shouted from across the empty club, pointing with her thumb up to Stevie's office. Rick and Daisy shared a look, not sure what to make of this. They walked over and climbed the stairs to the club owner's elevated office.\n\n\"Rick, Daisy, close the door please,\" Stevie said as he put aside some paperwork and took his glasses off. \"Have a seat.\"\n\n\"Something the matter boss?\" Rick risked.\n\n\"It's come to my attention that you two are seeing each other?\"\n\n\"Um.\"\n\n\"Uh.\"\n\n\"Well, I mean obviously, right?\" Stevie said as he turned his monitor so they could see it. The Slambros webpage was familiar to both of them, and Daisy Duke looked down at them with her dark, sultry eyes. Along the bottom of the screen was a series of thumbnails of Daisy and Rick in various stages of fucking the hell out of each other. Their threesome scene with Marie had been on the site for a few weeks now, but it being her most recent scene, a teaser for it was playing on the page. At least Stevie had turned the sound off so they weren't forced to hear themselves fucking as their boss looked on.\n\nRick slumped back a little. So there is something worse than your sister finding out you were in porn. Daisy's only real reaction was a slight straightening in her seat. Her lips tensed to a tight bow as she prepared to defend herself against some hypocritical moralizing.\n\n\"Now don't apologize or explain, please. What my employees do on their own time is their own business, even if I think it's stupid and reckless.\"\n\n\"Okay,\" Daisy said, waiting for the other shoe to drop.\n\n\"What is my business is when what you do in your private life intersects with your work here. Rick, I understand you admitted a group from this company into the club the other night? Put them in VIP? Gave them a free bottle?\"\n\n\"Uh, yeah, yeah I did.\"\n\n\"Made a bit of a scene, I understand.\"\n\nRick's jaw clenched. It was true, mostly. The place had gone crazy when Paul's girls hit the dance floor. Their dancing was stripper caliber, even if all their clothes managed to stay on. One girl in particular was quite fond of her booty, and took great pleasure in shaking the hell out of it for the crowd. Between all that and the massive clouds of pot smoke billowing away from Table 3, Rick had to admit that they had, in fact, made a scene.\n\nBut as far as scenes went, Rick thought this one was pretty tame. One time when Taylor Swift and her entourage had made an appearance, some of them had to be told that cutting lines of coke was not allowed. Or the time a girl, in an attempt to make her boyfriend jealous, sucked a stranger's dick in the middle of the dance floor. Rick had seen all kinds of stuff in the past year of working at Eden, and Paul and his friend's antics hardly rated.\n\nStevie seemed to disagree.\n\n\"Stevie, they were just dancing crazy and smoking some pot. We deal with that shit every night.\"\n\n\"Yes but that night you welcomed it in, gave it one of the better tables and free five hundred dollar bottle service.\"\n\n\"We both know that I have the authority to comp bottles. I do it all the time,\" Rick said evenly, not liking this at all.\n\n\"That's not in dispute. What bothers me... I'm no prude. I can't be, not in this business. But I don't want this club to become the one with the porn stars. Eden has always been about class, exclusivity, style. Your friends... Shorts and flip flops?\" Stevie switched to his browser's other tab, showing a local nightlife blog, which had a picture of Paul on the dance floor sandwiched between two girls. \"It looks like he got off the back of a double-wide. And then there's how he makes his money. It's crass, and tacky, and I don't want to club associated with it in any way. I'm sorry.\"\n\nRick felt his stomach drop. \"Sorry for what?\"\n\n\"I'll have to let you go. I've prepared a sev-\"\n\n\"What?\" Daisy blurted, unable to contain herself anymore. \"You're firing us?\"\n\n\"That's the long and short of it, yes. I'm sorry, but I have to think of my business. Do you know what all the blogs were talking about this weekend? How all the porn stars showed up at Eden. Pretty soon we'll be the place with the hot bartender who's in porn. Then who knows what. Like I said, I don't much care what you guys do with your life, but when it follows you in here I get a say.\" He pushed two envelopes across the table to them. \"I am sorry. I'll give you any kind of reference you want, and I think you'll find the severance is generous.\"\n\nRick could sense Daisy's boiling anger and reached over to take her hand before she blew her top. They shared a look: Daisy was angry, upset, but Rick knew her well enough to see that she was also on the verge of tears. She stood suddenly and stomped out of the office. Rick stood slowly and collected the two envelopes.\n\n\"Rick, this isn't personal. I'm sorry, but you haven't left me with too much choice here.\" Rick paused at the door before turning back, his mother's advice ringing loud in his ears: Never burn bridges behind you.\n\n\"Thanks for the opportunity, Stevie,\" Rick said before leaving and closing the door behind him.",
        "He paused for a moment on the landing: He felt like he'd just taken a kick to the gut. And just like that I'm out of work. And in this economy! Descending back to the main floor, the whole place was already in an uproar. Several of the bartenders were gathered around a crying Daisy, while Marco was already heading his way.\n\n\"No shit. For real?\" he asked once he reached Rick.\n\n\"Looks like.\"\n\n\"Bullshit. Fucking nonsense. Get fired for what, bringing business in? Motherfucker never liked you is all. Fuckin' hell.\"\n\nRick could only nod in agreement as he made his way over to Daisy. He could see the news traveling around the staff. Tony came jogging out of the locker room, slowing when he saw Rick pull Daisy into an easy hug.\n\n\"You alright babe?\"\n\n\"Getting there.\"\n\n\"This is fucking bullshit!\" Sarah half-shouted.\n\n\"That seems to be the consensus.\" Rick was more concerned with Daisy at the moment, stroking her back through her long hair.\n\n\"You should sue!\"\n\n\"For what? It's employ at will. He can fire us whenever he feels like it, for whatever he feels like. Or for no reason at all.\"\n\n\"No way,\" Tony said as he reached the crowd.\n\n\"I know, right?\" Sarah agreed, quickly lining up some shot glasses. Rick couldn't help it, but it felt good to see how upset everyone was. \"What are you guys gonna do?\"\n\n\"I've got some stuff planned,\" Rick said, sharing a look with Marco and Tony. Rick had shared his plans of starting his own business with them, as they each had enough experience and talent to form a great management team. Rick had been eager to get started, but he hadn't expected to find himself straight out of a job and have to scramble.\n\n\"Asshole.\" Daisy said as she pulled away, her hurt having turned to anger. Sarah handed her a shot and Daisy quickly slammed it back, taking another and doing the same. \"Well fuck this place. Everybody! It's been great, and I love you all, but Stevie's a dickless piece of shit and I just can't work under such conditions anymore!\" There was a smattering of laughter, and Rick was again amazed how Daisy could turn things around with nothing but her own brimming self-confidence. She picked up one last shot and held it in a toast: \"To Stevie! The dumbest, laziest, most short-sighted cocksucker around!\" She tossed the booze back and flashed her huge grin. \"Rick, take me home please?\"\n\n\"Sure thing babe. Bye everybody, we'll stay in touch,\" Rick led an already-wobbly Daisy out of the club, saying goodbye and shaking hands on their way out. Stepping out in the predawn hour, the sudden chill felt refreshing, awakening, and Rick had to shake off a shiver as he guided Daisy to her car. \"I'm driving babe.\"\n\n\"No doubt,\" Daisy said as she handed her keys over, already feeling the booze working on her. She settled into the passenger seat as Rick pulled out of the parking lot and headed for her house. Rick was distracted driving as he pulled onto the main drag, and when next he looked over Daisy had her head in her hands, crying again. \"Please don't be mad at me.\"\n\n\"Mad at... Daisy, baby,\" Rick pulled over and turned to her, pulling her hands away from her tear streaked face. \"Why on earth would I be mad at you?\"\n\n\"I just got you fired! If I hadn't dragged you along to that fucking shoot, none of this would have happened! You would never have been in the scenes! You'd still have your fucking job!\"\n\nRick was about to respond when he realized something. She wasn't upset about losing her job. She was upset that he'd lost his job.\n\n\"My job?\" Rick laughed. \"Daze, if you hadn't taken me along on that shoot I'd... I wouldn't have you. Christ babe, I'd trade ten jobs for what I've got with you.\"\n\nDaisy's eyes opened slowly, her dark irises shining.\n\n\"Really?\"\n\n\"Fuck yeah really.\" Rick pushed a few errant strands of silky black hair back off her forehead. \"Fuck Eden. Maybe it'll be the kick in the ass I need to start my own thing up. Shit, with the way Tony and Marco were acting I'd bet they'd tell Stevie to kiss their ass on their way to the door.\"\n\n\"You're not mad at me? Really?\"\n\n\"For this? Not in the slightest.\" He gave her a quick peck on the lips. \"Lets get you home, alright?\"\n\nRick started the car and they were back on the road, Daisy still lightly holding his hand. They drove in silence the rest of the way, Daisy looking out the window as they drove.\n\n\"So you're going to start your company now?\"\n\n\"I guess so. Don't look at it as a crisis, more as an opportunity, y'know?\"\n\n\"Need a partner?\"\n\n\"What do you mean?\" This time Rick pulled over for his own sake.\n\n\"I mean do you need a partner, in the security business. Jeffers Security? What are you calling it?\"\n\n\"I hadn't actually... Wait, I don't get it. You want to be a body guard?\"\n\n\"Don't be dense. I have money and a whole lot of free time all of a sudden. We could work together. You need an office manager, right? Salespeople? I can be very persuasive.\"\n\n\"Daze, you can't... I can't ask you to invest your money in this.\"\n\n\"Why not?\"\n\n\"What if I go under? This isn't going to be easy. Who knows-\"\n\n\"Listen,\" Daisy said, eerily calm despite the tears still on her cheeks. \"I was pulling down a couple hundred dollars a night, cash, working the bar. For like six months now. Between that and Slambros I'm sitting on more than twenty grand.\"\n\n\"I thought that was for Lilly?\"\n\n\"I've set money for Lilly aside. But what am I gonna do with the rest of it. Leave it in the bank? Stock market's a nightmare, real estate's in the toilet... I mean hell, with the way everything's going to hell in this fucking country it seems like investing in a security company would be a good move in any case. You seem like an okay investment.\"\n\n\"But, but what if-\"\n\n\"Rick, I trust you. I think you'll be really good at this. And I want to help.\" She took his hand in hers again. \"What do you say?\"\n\nRick thought for a second, completely thrown. Closing his eyes, he thought about on a strictly business level. With more liquid assets it would be easier to get a loan, and they could get by with a smaller loan overall. And he knew he'd eventually need to hire someone for office work anyway, but he just never thought it'd be his girlfriend.\n\n\"I, I can't- I can't let you risk all that! What if-\" Daisy stopped him with slim finger against his lips.\n\n\"All investment carries a certain amount of risk. I believe in you.\"\n\nIt was said so honestly, so simply, Rick felt himself slip a little inside. He nodded, agreeing, and Daisy gave a small smile as her finger slipped away from his mouth.\n\n\"I love you Daze,\" he breathed, his fingers moving to her cheek. Daisy gasped a little, her hand tightening on his.\n\n\"Don't just say it,\" she said, her voice tiny.\n\n\"I'm not. It's not some weird way of saying thank you. And I'm not asleep this time.\" This got a tiny laugh out of Daisy. \"I know we haven't been together for that long but... I've never been with anyone like you. I can't help it.\"\n\n\"I've... I've never told a guy that. Not ever,\" Daisy murmured, her hand still holding his. \"It's kinda... scary, y'know?\"\n\n\"You don't have to-\"\n\n\"But I do. I think I do. I... I love you too,\" it came out as a whisper, but her eyes never left his.\n\nAnd then she was over the center console and in his arms. They just held each other tight, Rick's hands sliding up and down her soft back.\n\n\"You want to work with me? We'll fight.\"\n\n\"We've worked together the whole time we've known each other. And fighting means we get to make up.\" Rick laughed, but Daisy quickly silenced him with a kiss. \"Let's go back to your place. You can show me your prospectus.\"\n\n\"God you're nasty. What about Lilly?\"\n\n\"Lilly's turning sixteen in two weeks. She can take care of herself. Take your business partner home so we can herald this new arrangement properly.\"\n\n\"And how would that be?\"\n\n\"Shrieking, tear down the walls monkey sex. \"\n\n\"I think I might like this business partnership,\" Rick said as his hands settled against her butt.\n\n~~~~~~~~~~~~~~\n\nThree months later\n\n\"You're kidding me,\" Stevie said, looking up at the two dour men in his office. \"You're both quitting?\"\n\n\"That's right,\" Marco said evenly, Tony simply nodding in agreement.\n\n\"Both of you?\" Tony nodded again. \"This minute?\"\n\n\"We've had a better offer,\" Tony said simply.\n\n\"Wait, wait a moment,\" Stevie said as the two men turned to leave his office. \"Could you stay on through the night? Without you two we'll kind of be in the lurch here.\"\n\n\"Sorry Stevie, but our new positions start immediately.\"\n\n\"This is very unprofessional,\" Stevie said as he stood, barely coming up to Tony's chest as he came around the desk. \"Forget quitting without any sort of notice. Without you two I've got no managers, and a gutted security staff besides.\"\n\n\"We're sorry, but we really have no other option. It's not personal,\" Tony said, the slightest trace of a smile on his lips as he and Marcos left the office.\n\nStevie stood and stewed for a moment, willing himself to remain calm. Ever since firing Rick and Daisy he had found himself butting heads with the staff over almost everything, especially Tony, Marco and Sarah. He had made Marco the new head of security, but Marco seemed to resent the move more than appreciate it.\n\nAnd then they both quit at the same time, leaving the club with a decapitated security team and no back up. Stevie didn't believe for a second that they had a better job offer, but doubted that they would both quit just to fuck him over, no matter how much they disliked him. Stevie wasn't sure what was going on, but he got the distinct impression that someone was messing with him, and he didn't like it.\n\n\"Alexis,\" he said into his intercom, \"Get... Jose up here, I guess. Shit. And do we have any temp security guys we can call?\"\n\n\"Temporary security? I don't think so... But there's someone here to speak with you. I think it might be related.\"\n\n\"Send them up,\" Stevie said, his interest piqued. Stevie wasn't sure whom he was expecting, but it certainly wasn't who opened his door and strutted in confidently: Daisy Shaw. Stevie was used to seeing Daisy dressed as walking sex, but today she looked smart and professional in a light suit jacket and pencil skirt, tiny black-framed glasses perched on her nose.\n\n\"Good afternoon Mr. D'Angelo,\" she said crisply as she handed over her business card. Stevie looked at it with narrowed eyes: Daisy was apparently the chief of accounts of Duke Security Solutions. \"I understand you were looking for some help with your security situation here?\"\n\n\"I suppose I do. Do I have you to thank for that?\"\n\n\"Mr. Santos and Mr. Anderson had been in negotiations with us for some time,\" Daisy said evenly as she sat, crossing her slim legs. \"As far as the timing is concerned, it was unfortunate. But we hope that we'll be able to provide you with a continuity of service at a competitive price.\"\n\n\"We? You and Rick cook this up?\"\n\n\"Mr. Jeffers is my business partner, yes. But given that our termination wasn't personal, we hope that you'll look over our proposal with an open mind.\"\n\n\"Oh?\" Stevie asked as she handed him a manila envelope. \"So you poach my best managers and then try to sell them back to me? Listen, I've been doing this too long to have you waltz in here and-\"\n\n\"Stevie,\" Daisy cut him off, her voice a little hard, \"do you realize how much money you were wasting on security?\"\n\nStevie paused. She was definitely speaking his language.\n\n\"You're current configuration, you have four men inside and three outside, every night. You can probably stand to trim that down to three and two, except maybe on your major events and big time parties. Your shift system is also rather inefficient, with more people working when they're not needed. Further, by outsourcing the whole mess to us you get to save on overhead and headaches. If you'll look at our proposal, you'll see that our rates are quite competitive.\"\n\nStevie frowned, but opened the envelope and started looking over her proposal. Stevie almost had to laugh: She and Rick had used their knowledge of the club to point out how badly he was managing his security operation, showing how he could cut costs almost across the board. Stevie had to shake his head: Maybe he'd jumped the gun when he'd shitcanned them.\n\n\"You mentioned continuity of service?\" Stevie asked, flipping through the proposal.\n\n\"We could have our team in place before start of business tonight,\" Daisy said, knowing she'd be coming home with another account in her teeth. And a little revenge just for fun.\n\n~~~~~~~~~~~~~\n\n\"Well? How'd it go?\" Rick asked when Daisy returned to the office. Which was also his living room.\n\n\"He whined and bitched and complained, but once I took five percent off our offer he came around. Call Tony and tell him he's the new head of Eden's account.\"\n\n\"On it,\" Rick said, already dialing. As he waited for Tony to pick up, Daisy headed towards the bedroom to change. \"Tony? It's a go. You all set?\"\n\nTony laughed. \"I'm at a diner down the street with Maria. I figured if I was going to be running back to take charge it didn't make sense to go too far.\"\n\n\"Good thinking. So congratulations, you're now the account executive of Eden.\"\n\n\"Account executive? The fuck is that?\"\n\n\"Corporate-ese for HNIC.\"\n\n\"Gotcha. So your old job? That shit'll be easy,\" Tony said with a laugh.\n\n\"Yeah, fuck you too.\"\n\n\"I'll keep you posted. Betcha Stevie pitches a fit.\"\n\n\"Stay strong man. Talk to you later.\"\n\n\"Peace out,\" Tony said as he hung up.\n\nRick was already updating the ledger. Slambros was still their biggest account, but Sally had turned out to be an even better asset than he had thought. Many of Slambros' performers also worked as feature dancers in the Miami area. Sally was more than happy to pass Rick's information on to them, and most of the girls had decided to bring their own security guard with them to cover them from door to door. Which as far as Rick was concerned meant more steady, easy work.\n\nBetween Eden, Slambros and it's related work, and a few other accounts that he and Daisy had managed to scrounge up, Duke Securities was just barely in the black, which wasn't a bad way to start. The pressure was on though: Now they also had a larger workforce to deal with if they were going to absorb Eden's security staff as contractors, but Rick had to shake his head in amazement: He did not expect that this early.\n\n\"Hey Daze, we done good!\"\n\n\"Oh yeah?\"\n\n\"How do you feel about actually making a profit?\"\n\n\"It'll be a bit of a change, but I think I can get used to it!\" she called from the bedroom. There was a knock on the front door, causing Rick to look up in confusion. It was a little past seven and Rick wasn't expecting anyone.\n\n\"Can you get that please?\" Rick said, in the middle of punching receipt totals into Excel.\n\n\"Yeah, sure,\" Daisy said after laughing aloud for a moment. Rick looked up at that and gawped as Daisy emerged from the back wearing her shiny Mary Janes, black knee socks, and nothing else. Daisy didn't spare him a glance as she went straight to the front door.\n\n\"Daze, what the-\"\n\n\"Good evening Mr. Stevens,\" the young redhead said, her fingers toying with the edge of her schoolgirl skirt as she entered the apartment. Her lips were glossy and pink, her tongue just teasing her bottom lip. It took Rick a long second to realize he recognized her: Faye, the girl who costarred in Daisy's second video. She was a naughty shoplifter caught by Officer Daisy, and spent most of the video devouring her pussy and ass before Daisy returned the favor with a strap-on. All of this flashed through Rick's mind in a split second, his jaw dropping open in surprise.\n\n\"Faye, right? What are you do-\" he asked, standing.\n\n\"I'm sorry Mr. Stevens,\" Daisy said, smiling the cutest shy smile, \"I know I was supposed to keep it a secret, but Faye's my best friend and... I couldn't help it! Please don't be mad,\" this last was said as she reached him, her slim arms slipping around his right arm.\n\n\"Yes, please don't be mad Mr. Stevens,\" Faye said as she slowly slid to his side, taking his other arm in hers.\n\n\"Daisy, what's, what're you...\" Rick mumbled, his eyes moving between his nude girlfriend on right and the slutty schoolgirl porn starlet on his left. He turned back to Daisy and gave her a serious look, silently begging her to drop the Mr. Stevens act.\n\n\"Well I was talking to Faye,\" Daisy explained as they guided Rick back toward the bedroom, \"and I was telling her about how disappointed you were with your first threesome.\"\n\n\"I felt so bad for you two!\" Faye said as they entered the bedroom and deposited him in his comfy chair. \"I was thinking about it, and then I remembered how Daisy told me about how she attacked you after our scene together? Daisy's and mine, that is.\"\n\n\"For real?\" Rick asked, to Daisy. He knew she had kept in touch with Faye, but she didn't realize that included intimate details of their sex life.\n\n\"What? We talk,\" Daisy said, rolling her eyes slightly at him as she moved close to Faye. \"Remember how I told you that after shooting with Faye I was so horny I came over and jumped you?\"\n\n\"Told me? I was there when you did it.\"\n\n\"Well she told me, anyway,\" Faye explained, taking off her flat shoes with her toes. \"I really feel the same way sometimes: girl-girl is like two hours of foreplay.\"\n\nDaisy began unbuttoning Faye's blouse, revealing that the young redhead wasn't wearing a bra. He breasts were fleshy handfuls, almost pointy, with broad puffy pink nipples. Faye's hands unfastened her short skirt and let it flutter down her thighs, revealing red cotton panties hugging her big ass tightly.\n\n\"So Faye called me the other day and told me she was shooting an all-girl orgy scene today.\" Daisy's fingers were toying with Faye's fantastic nipples, her thumbs just barely tracing over the puffy peaks.\n\n\"No shit.\"\n\n\"No Country for Men 3, actually,\" Faye corrected as Daisy slipped to her knees before her. Rick watched, rapt, as Daisy slid the tight red fabric off Faye's butt. Her round cheeks jiggled slightly as she shifted so Daisy could pull her panties off her. Daisy reached back and gripped the heavy ass in her hands.\n\n\"She asked if she could stop by after the shoot. She knew she would be all wound up, and thought we might be able to help her. Think we can?\" Daisy asked as she bit her friend's hip lightly, jiggling her big butt for Rick's enjoyment.\n\n\"I, uh, sure?\" His eyes were glued to Daisy on her knees before Faye's pale form.\n\n\"Goody. Lay back on the bed babe.\" Daisy said, smacking Faye's pale ass for emphasis as she went around to the other side. Rick's mouth hung open as he watched Faye climb onto the bed and lay on her back, her thighs up and inviting. Daisy climbed on the other side, easily mounting her in an easy 69.\n\n\"Holy fuck,\" he grunted, watching Faye's hands light easily onto Daisy's plump butt. They were almost perfect opposites: Daisy with her perfect dark skin, Faye pale, smattered with freckles. He couldn't quite see what they were doing from his angle, but both girls were soon humming happily to themselves, with light licking noises making it clear that neither was being idle. Rick's cock had been an iron bar since Faye appeared in his apartment, and he could feel himself throbbing as he watched the two girls working each other up to orgasm. Daisy's head rose in a sudden cry of pleasure, hissing as Faye did something particularly nice to her. She glanced over and Rick and saw him sitting there dumbly, his hands on the arm rests.\n\n\"Well what are you waiting for baby?\" she challenged, her eyebrow arched.\n\nRick was up and tearing his clothes off a second later. He was about to jump into the fray when he paused, trying to decide just what to do. He circled around till he was standing at the side of the bed, Daisy's up thrust butt before him. Faye was looking up at him from between her legs, her blue eyes dancing as her tongue stayed busy. Rick quickly grabbed Daisy's hips hard, holding her still has he slid his cock along the back of her thigh to her waiting pussy. Just as she tensed, thinking he was going to thrust into her, Rick bent over her. Holding her ass open he began lapping quickly at her ass, trying to match Faye's speed at her clit.",
        "\"OH! Oh fuck I love how nasty you are baby, Jesus,\" Daisy gasped, forgetting all about Faye's needs as her two lovers lapped at her clenching holes. She found it all a little overwhelming and she slumped against Faye's soft belly as she felt the pleasure mount. Feeling Rick's tongue nudging it's way into her gripping ass just as Faye sucked on her clit, her tongue buzzing on it, was too much for Daisy to handle. She came with a sudden gasp, lurching up and pressing back against Rick's invading tongue. Faye moaned as Daisy's pussy pulsed visibly above her, her muscles clenching with orgasm. \"Oh, oh god, you two...\"\n\n\"Maybe I'm not the only one wound up,\" Faye said with a laugh.\n\n\"I've been thinking about this all day,\" Daisy admitted, rolling off of Faye and laying out on the bed extravagantly. \"And I think business deals get me hot.\"\n\n\"That's an outstanding trait in a salesman,\" Rick said, looking at Daisy's flushed face and smiling.\n\n\"Salesperson,\" Daisy corrected.\n\n\"Not that that wasn't very sexy, but I'm the one who needs satisfying after the day I had,\" Faye said, spinning about on the bed so Rick now stood between her thighs. She grasped his cock and pulled him close, scooting to the edge of the bed and rubbing him against her. Faye's pussy was trimmed close but not shaved: soft, bright red hair dusted her chubby pussy lips, shining in her moisture as she spread herself open for his cock.\n\n\"She's right Rick. All day she's had girls between her thighs, teasing her with their fingers and tongues. How many girls licked your pussy today Faye?\" Daisy was kneeling beside the redhead, her hand taking Rick's cock.\n\n\"Four,\" Faye said, her eyes still on Rick. \"And it's great, don't get me wrong. But it just winds me up. I need a nice hard fucking to get over it.\"\n\n\"Hear that Rick? She needs a good hard fucking.\" Daisy guided his head to her hole, pulling him closer and easing him into her hot pussy. \"Give her one.\"\n\nRick pulled Daisy close and kissed her desperately as he slipped inside of Faye. Faye moaned as he slid into the hilt on the first thrust, her pussy so wet that it hardly resisted. Rick groaned as he felt her squeezing on him, and he filled his hands with Daisy's ass as his tongue invaded her mouth aggressively. He was feeling incredibly grateful to her just that second, never thinking that a woman could be so sexually amazing and still be a real person.\n\n\"Fucking hell Daze...\"\n\n\"I know baby,\" she said with a soft grin as she pulled away. Laying beside Faye, she pulled a giant puffy nipple between her lips and attacked it with her tongue, bringing more moans to Faye's mouth. Daisy glanced up at Rick and indicated her other breast with her eyes, her lids drifting closed as Rick leaned down, pulling Faye's other throbbing tip into his mouth.\n\n\"Oh, oh god guys, Christ, mm...\" Faye murmured, throwing her head back as the two lovers focused their attention on her overheated body. Her nipples were terribly sensitive and she absolutely adored having them sucked on. But having each one in a teasing, sucking mouth, it was like each nipple was wired directly to her clit. Rick had yet to thrust in her, his fat cock just resting deep inside. She gasped when she felt it jump inside her, looking down and catching Rick grin at her.\n\n\"Like that?\" he asked as he returned to suckling at her breast, flexing his cock again and again deep inside her.\n\n\"Mm, god that feels good, but I need you to fuck me plea- oh yes, yes like that,\" Faye grunted as Rick's hips slowly began to thrust against her, her thighs wrapping lightly around his middle. \"Daisy, baby, rub my clit while he fucks me?\"\n\nDaisy didn't answer, only sliding her hand down Faye's soft belly, through her soft bush to her hard clit, slowly rubbing in lazy circles as Faye tensed under Rick, her hands clenching the sheets. Faye squeaked suddenly, her arms gripping at Daisy and Rick as her orgasm blasted through her. Rick grunted as he felt her clamp down on him. He maintained his pace, Daisy's hand going into overdrive on her clit as she panted franticly.\n\n\"Oh shit, shit shit shitshitshit,\" Faye muttered, her orgasm just exploding again and again, her whole body bowing tight as it crested suddenly. Rick grunted as he felt her juices flooding over his pumping shaft, his thrusts now becoming much easier in her gripping heat. Daisy finally released Faye's tender tit, looking down on the girl as she moaned and panted her way through the last shudders of her orgasm. \"Oh, oh wow. Mm, god that was nice!\" Faye said with a laugh, relaxing grandly.\n\n\"Looked like it,\" Daisy said, sliding her hand all along Faye's sweaty front. Rick was still slowly thrusting against her, and Daisy was amazed how turned on she was watching her boyfriend fuck this little slut senseless. She toyed with Faye's stupendous nipples some more, enjoying her moans and gasps at the slightest touch. \"And I thought my nips were sensitive.\"\n\n\"Oh god you don't even know,\" Faye laughed, reaching up to tease the other one. \"Just nibble them a little and I- Oooo, baby,\" she crooned as Daisy did just that.\n\n\"God, you two...\" Rick said with a grin, still slowly pumping against the moaning redhead. She was incredibly active, constantly shifting and shimmying, her hips thrusting, her long legs wrapping around him to pull him tighter, harder against her. Daisy took a moment from suckling Faye's puffy tit to kiss her hotly, their tongues battling. Slowly separating, the two women turned to Rick, their gaze mysterious. \"What?\"\n\n\"This isn't a scene. She's not just some hole you're fucking Rick. She's a person. A woman. Treat her right, please,\" Daisy said softly, indicating Faye with a tilt of her head. Faye said nothing, her eyes challenging. Rick's hips stilled as he eyed Daisy questioningly. She nodded, and Rick leaned close and pressed his lips to Faye's. They kissed softly for a moment, slowly building in intensity as Rick's hips resumed their thrust. Rick pulled back slowly, his eyes moving cautiously to Daisy.\n\n\"Kissing's nice too,\" she said, her eyes dancing as she leaned close to plant one on him herself. Faye joined in, and the three lovers shared a long, playful three-way kiss. Rick's hips began picking up speed as she moaned against Daisy's lips.\n\n\"Mm, gonna cum again,\" she hissed, her pretty face grimacing, her cheeks flush. Rick picked up the pace, pounding against her hard. Faye's breathing turned harsh as her hands went to her own breasts, clawing at her nipples hard. \"Oh, oh here it comes...\"\n\nDaisy suddenly shoved Rick back, burying her face in Faye's bush and practically attacking Faye's cumming pussy. As Faye cried out in surprise, her orgasm hit her hard, and her cry turned into a grunting moan. One hand held Daisy's head tight as the other pinched at her nipple repeatedly. Faye convulsed once, hard, before slumping back against the bed in a shivering heap. Daisy followed her down, kissing her pussy lightly as she pulled away.\n\n\"Holy shit,\" Rick grunted. He stood as if struck dumb, his cock hard and wet in front of him, bouncing with his pulse. He was rapt: It had been the hottest thing he'd ever seen in his life.\n\n\"Liked that?\" Daisy said, her grin huge. Her lips and chin were shining with Faye's cream, her chest heaving. Her dark nipples were enormous peaks, her piercing catching the lamplight.\n\n\"You are the sexiest thing on earth,\" Rick gasped, pushing Daisy back on the bed. \"Goddamn I love you.\"\n\n\"Aw!\" Faye laughed, still panting from her explosive orgasm.\n\n\"C'mere,\" Daisy said firmly, enjoying being in charge. \"I think it's my turn now.\"\n\nRick didn't resist as she pushed him back against the pillows so he was half-sitting, his legs stretched out in front of him. Daisy stood astride his hips, lowering herself till she was pressed against his sticky cock. One hand reached down and wrapped around him. Rick was surprised to find her hands slick with lube on him.\n\n\"You close honey?\"\n\n\"I'm alright. Why?\"\n\nDaisy didn't reply, only smiling as she shifted about till she was facing his feet. Her hands took hold of him, lining him up as she pressed down against him. Rick grunted as she realized she was pressing him to her ass, and Daisy gave a sharp cry as he slipped inside.\n\n\"Oh fuck, I didn't know you were into anal,\" Faye said absently, watching as Daisy slowly worked her way down on him, groaning and relaxing against him when her ass pressed against his belly. \"Fuck girl.\"\n\n\"Daze, fucking hell,\" Rick grunted, gripping her tight. She leaned back to kiss him hard, her hips beginning to roll around, spreading her open. As Daisy's breathing started to deepen, she relaxed against him and began to slowly pump against him. \"Babe, are you-\"\n\n\"I'm so fine,\" Daisy husked, looking down past Rick's legs their satiated bedmate. \"I wasn't into anal until recently,\" she explained, her breath harsh. \"Then I begged Rick to fuck me in the ass and I fucking loved it.\"\n\n\"God that looks hot,\" Faye said, crawling closer till she took up position between the couple's thighs. \"You cum like that?\"\n\n\"You must have seen, unh, ass fucking before,\" Daisy gasped, still slowly bouncing on him.\n\n\"Well yeah, but that's, like, work,\" she said, frowning. \"I don't think you shoot an anal gangbang because you really love butt sex, you know?\" she asked with a laugh, Rick laughing a bit with her. \"C'mon. You cum like that?\" Daisy shrugged, nodding. \"Well you sure will tonight.\"\n\nDaisy cried out when Faye's lips first made contact with her pussy, but Rick held her tight and began to thrust against her as Faye slowly attended to her weeping pussy. Daisy went into overload, shivering and shaking in Rick's arms. Her hands didn't know what to do: They moved from her breasts, to Faye's hair, Rick's arms.\n\n\"Mm, I wish I'd bought my strap-on,\" Faye said, slipping two fingers into Daisy's flooded pussy and searching for her g-spot. \"How about that Rick? Want to make a Daisy sandwich?\" Daisy cried out again, her ass and pussy clamping down on their invaders. \"Mm, like the idea of that, huh Daisy?\"\n\n\"Faye, Jesus,\" Rick grunted as he looked down his girlfriend's belly to the mound of red hair between her thighs. Daisy was going crazy in his arms, becoming completely unglued. Pounding against her, feeling her hot ass gripping him, listening to her growing moans, Rick bit her shoulder as he began to fuck her ass faster.\n\n\"Oh, oh god just like that, just like that, oh dear lord...\" Daisy felt like her skin was burning, her heart threatening to pound out of her chest. It felt like everything in her body was tightening into a fiery ball somewhere deep inside her. Her panting went into overdrive as she started to feel it, her hands digging into the quilts as her orgasm struck.\n\n\"Daisy, fucking hell,\" Rick grunted as her ass clamped down on him hard. She groaned at him to keep fucking her as the fireball starting pulsing in her belly, Faye's fingers stoking it.\n\n\"Oh, oh fuck!\" she grunted, her whole body clenching as the tight ball of fire exploded. She flopped violently, crying out as it her orgasm snapped through her. She felt a sudden flood, heard Faye cry out in surprise and knew she had squirted against the bed. \"Oh, oh god, Faye, stop, stop I can't...\"\n\n\"Daisy, Jesus, I'm, god,\" Rick pounded against her, chasing his orgasm. He gasped as he felt Faye stroking his balls and that was the last straw. He groaned as he came powerfully, flooding her ass with his cum. Daisy, in her hyper-sensitized state, gasped with each shuddering pulse, Rick's arms squeezed her tight against his front, shivering as their orgasms slowly waned. \"Honey, that was amazing.\"\n\n\"You ain't kidding,\" Faye said, biting his inner thigh gently. Daisy said nothing, humming quietly as Rick moved them away from the massive wet spot. Faye scooted over with them before standing on the side of the bed. \"Take her to the bathroom and I'll make the bed.\" At Rick's laughter, she blushed and swatted at him playfully. \"Go on! You both need it, you perverts. Go on.\"\n\nRick scooped Daisy off the bed and padded off to the bathroom. True to her word, Faye began stripping the sheets. Reaching the bathroom he deposited a very kissy Daisy as he fired up the shower and hopped inside. He stood under the stream for a moment, feeling the hot water pelt him.\n\nIn less than six months my life's totally changed. He boggled at the scale of it: New girlfriend, new job, new career, new insane sex life that includes the occasional threesomes with porn stars. As he soaped up, he wondered where he'd be in another six months. He heard the flush and then Daisy was in the shower with him, her hand rubbing over his chest as she snuggled.\n\n\"I told you Faye was great.\"\n\n\"I can't believe she's making the bed.\"\n\n\"Well that's just considerate,\" she giggled, her soapy hand slipping over his cock. \"And I know you have another go in you.\"\n\n\"Daisy you're... seriously?\"\n\n\"She's sleeping over. No pressure,\" she husked, her wet body rubbing against him delightfully. They kissed for a few minutes, enjoying the moment of privacy. \"I'm glad your second threesome was more fun.\"\n\n\"I don't need a third one you know, I... I only need you Daze.\"\n\nShe looked up at him, her dark eyes endless pools. A small smile pinched her lips. She kissed him softly, her hand stroking his face.\n\n\"Agreed. But company's fun once in a while?\" Rick, shrugged, not disagreeing. Their eyes stayed locked for a long moment and Rick smiled as he reached a decision.\n\n\"I, uh,\" Rick began, suddenly nervous. \"I've been meaning to talk to you about something. My timing may not be too great though.\"\n\n\"Well, I'm listening,\" she said, shifting around in the shower so the water flowed down her back and ass.\n\n\"Well, I was thinking, uh, with the business and all, that we could save a big chunk of our budget, uh, well, salaries, if we shared rent costs.\"\n\nDaisy's brow scrunched in question.\n\n\"Share rent costs? What, like renting the office space? The company will pay for tha-\"\n\n\"No I mean like a place to live.\" Daisy's eyes widened, but Rick just kept talking. \"I mean, I know Lilly needs her own room, but I was looking on craigslist and found a few three bedroom places, which would be more than enou-\"\n\n\"Are you asking me to move in with you?\"\n\n\"I, well yes.\"\n\nDaisy slumped against the shower wall, her face surprisingly calm. Hanging her head in the stream, she closed her eyes and let the hot water pour over her head That's something I've never done with a guy. Who knew that I had so many virginities left! She immediately thought of waking up in bed with Rick every morning, and immediately put that in the pro column. What would Lilly say? She knew that her sister kind of adored Rick, so that was another pro. But so soon? They had barely been dating six months.\n\nBut that it had been the best six months with a guy she'd ever had. They'd been nearly inseparable since the firing. Starting Duke Security had been an insane amount of work, but she and Rick had found a pretty good working relationship, especially since Daisy had discovered her skill at sales. She actually enjoyed her job, and not just because she was fucking her partner.\n\nIt wouldn't even be that much of a change. Between work and dating, they were already practically living together. This was her second night in a row sleeping at Rick's. She knew she could trust Lilly, but she was leaving her on her own way too much. It would be nice, she thought, having the two people she loved together in the same house. I love him. And just like that she knew what she would do.\n\nThe silence stretched, and Rick's heart dropped as he worried he pushed too fast.\n\n\"Look, it's okay, you don't have to-\"\n\n\"Shut up Rick.\"\n\nIt's only been six months and I know I love him. Holy cow.\n\n\"Lilly would need her own bathroom too, I think,\" she said, her grin spreading. Rick was smiling too, went to pull her close. \"But she gets veto power over the whole thing. Three bedroom?\"\n\n\"Home office. Get a tax break on it.\"\n\n\"So it makes good business sense.\"\n\n\"My point exactly,\" Rick said, nodding.\n\nDaisy put her finger on her chin, thinking on it.\n\n\"Okay. But like I said-\"\n\n\"Lilly gets final say. I understand. Are you sure?\"\n\nDaisy kissed him quickly before pushing him to leave the shower.\n\n\"I think it's worth a shot.\"\n\n~~~~~~~~~~\n\nSix months later\n\n\"Yeah Sal, I know. There will be three guys for floor security, plus another guy as a runner and for go-withs. Marco'll be your man on the scene.\"\n\n\"Oh yummy.\"\n\nIt was said with a giggle, but Daisy knew she was half serious, and made a gagging noise.\n\n\"Oh fuck off, you know he's hot. And you should see him with the girls, he turns into this mumbly schoolboy.\" Daisy laughed and Sally stuck up for him. \"It's cute! He's a gentleman.\"\n\n\"I'll have to take your word on that one, honestly. But he's your AE now, so you and he will have to stay in constant contact.\"\n\n\"I'm sure. But this is all good. Oh I've been meaning to... our Christmas party's coming up on the 22<sup>nd</sup> and I...\"\n\n\"Oh that's great, how many guys are you going to need?\"\n\n\"What for?\"\n\n\"Uh, hello? Security?\"\n\n\"No, I want you and Rick to come. Y'know, like as guests. Because you guys are our friends\"\n\nDaisy laughed. \"Oh! Awesome. We'll talk about it when you get back from Vegas.\"\n\n\"Right on. Talk to you in a few days.\"\n\nDaisy hung up and grabbed a few scattered items as she got ready to close up. Her cell phone buzzed and she slipped her earpiece in as she bustled around finishing up for the day.\n\n\"Hey babe.\"\n\n\"What's up Daze. I'm swinging by the center to pick up Lilly, then heading for home and then-\"\n\n\"And then you're at the Lyceum for the Bison show. Be sure to grab your ear plugs.\"\n\n\"Right. So I'll be home... Threeish?\"\n\n\"Wake me up, I won't mind. Oh and we got invited to the Slambros Christmas party.\"\n\n\"Awesome. No sitting on Santa's lap though. Something tells me that suit'll be pretty grodey,\" Rick laughed. \"And here's Lilly now. Oo!\"\n\n\"What?\"\n\n\"She's talking to some boy.\"\n\nDaisy paused. \"Really? What's he look like?\"\n\n\"Glasses, a little gawky. Want me to scare him off?\"\n\n\"Tormenting my sister is my job. Just honk. Can't wait for you to wake me up honey.\"\n\n\"Any suggestions?\"\n\n\"I'm not putting any bottoms on,\" she teased. \"I'm gonna put on that lace nightie you like because it doesn't cover my ass.\"\n\n\"Your cruel, sending me off to a late job with a hard on.\"\n\n\"Love you. Night babe.\"\n\n\"Night.\"\n\nShe was just locking up the safe and wrapping up as she took off her earpiece. Although it had been close at times, Duke Securities was surviving. They had opened their storefront a few weeks earlier, but they did still find themselves scrambling for accounts.\n\nJust as she was about to lock up and leave, the phone rang.\n\n\"Fucking inconsiderate pieces of shit... Duke Securities Solutions, Daisy speaking.\"\n\n\"Um, hello,\" the voice was male, and nervous. \"I was looking at your website. You do, uh, private investigation?\"\n\n\"Yes we do!\" Daisy said, immediately coming back around the desk and grabbing a message pad. She was the one who had come up with the sideline of investigative work for the business, and if she was desperate to finally make some money with it.\n\n\"It's uh, I think my... I'm sorry, is Mr. Duke there? I'd much rather speak to him.\"\n\n\"Ah, no, it's actu-\"\n\n\"Oh! I'm sorry. Are you Mrs. Duke?\"\n\nDaisy had to smile. Daisy Duke and her adventure into porn felt like a lifetime ago. Every once in a while she was reminded of it, and it always brought a smile to her face. She wasn't embarrassed: Daisy Duke was definitely a part of her, and she loved that bitch.\n\n\"It's just a name.\"\n\n~~~~~~~~~~~~~~~\n\nAnd that's it! Comments and votes appreciated!"
    ],
    "authorname": "svenjolly",
    "tags": [
        "anal sex",
        "threesome",
        "menage a trois",
        "porn star",
        "story"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pushover-ch-06"
}