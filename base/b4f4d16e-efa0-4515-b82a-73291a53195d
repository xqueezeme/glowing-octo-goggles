{
    "title": "A World for the Taking Ch. 09",
    "pages": [
        "This is the final chapter of this story. Hope you enjoy it. I'll be heading back to work on Monday and I do not know when I will get time to write more. Maybe I'll get another one done before the end of the year. In the meantime if you have questions or observations please go to the forum thread I created for this series.\n\nhttp://forum.literotica.com/showthread.php?t=1346444\n\n*****\n\nA World for the Taking\n\nChapter 9\n\n\"Damn it,\" Yoshi swore softly. \"Doesn't match up. I thought this stuff would match. I mean, there are only so many ways to make a transceiver.\"\n\nF`reet `du Hom knelt beside him scowling at the cable ends as if she wanted to tear them from the console. Yoshi felt much the same. His frustration made it difficult to concentrate and the impending arrival of the Dusig multiplied the stress a thousand fold. Tammy had been gone for more than an hour already. When were the Dusig coming? He had to get this done. They had to send the message.\n\n\"The power leads went together easy,\" he grumbled, nervous sweat dripping off his nose. \"All we had to do was make connectors to fit the ends and...\"\n\nYoshi froze, his thoughts racing. Connectors. The power lead connectors were designed to transfer the energy with limited resistance. When he crimped them in place it did not matter if one lead was thicker than the other or if one was wide and flat while the other was round. The connectors with their built-in boosters or resistors carried the load smoothly from Human tech to jZav` tech. He needed something to carry the signal from the transceiver to the antenna the same way.\n\n\"That's it!\" he cried. \n\nF`reet `du Hom jerked back, startled. Yoshi was too intent on his idea to notice and sprang for the bulky fabricator, grinning like a maniac. \n\n\"It should be simple. Not easy. Simple. They aren't the same. My dad says that all the time. Simple. Keep it simple.\"\n\nThe jZav`Etch pilot sat beside the transceiver blinking without comprehending as the boy rattled on. His fingers flew over the controls and his gaze focused entirely on the screen.\n\n\"It's like a tiny transformer.\" He keyed something into the controls. \"It's the same sort of thing the CP gear does when it receives and decodes the signal from an alien made communications array. Only I have to make it tiny. Tiny and simple.\"\n\nF`reet `du Hom rose and crossed to him, careful to not distract him from his task. Her head snapped up to look at the door in trepidation, but Yoshi did not notice. His lips were pressed together in concentration.\n\n\"There!\" he barked. \"That's what I need. Vespan to CP transfer link. The CP side is fine.\"\n\nHe set his pad on the reader atop the fabricator and keyed the link before scrolling through the jZav`Etch component data he had entered. It took a little time to calculate the necessary parameters but seconds later the fabricator hummed and began creating a connector.\n\n\"This is it!\" Yoshi cried happily, his stress dropping as he plucked it from the dispenser. He held it out to show F`reet `du Hom but she wasn't there. She wasn't anywhere. \n\nYoshi glanced quickly around and wondered what had happened until he heard shots being fired somewhere outside the tower. His guts turned to ice. The Dusig had arrived. He rushed back to the transceiver and began making the connection. A quick test showed the design worked and he rushed to have the fabricator make more. The machine hummed again and spat out a handful of the small devices and the boy rushed back to the transceiver. His fingers moved with dexterous accuracy, crimping one connector in place after another. He made a splice without even needing to think about it. Three cables were joined into one and fed into the powerful antenna. It took him a few minutes to come up with a modification to mate a hard line to a pulse cable and ended up using a compact little transformer capable of decoding the jZav`Etch information and reformatting it for the CP equipment. \n\nMore shots were fired outside, sounding much closer. Yoshi's hands were shaking, but he kept himself focused. It was easier to think about the job at hand than to think about the fighting outside. Only when he thought about Jean did he stop in the grip of fear. But that was her rifle going. If she was shooting, she was alright. He redoubled his efforts.\n\n\"That's the relays,\" he croaked, swallowing hard and wiping sweat off his brow. \"Power and relays are done. Now I need to do the controls. I need to figure this out. What does what?\"\n\nYoshi looked at the contacts and the ports. Nothing made sense. He couldn't recall which plug went where. He had watched carefully as F`reet `du Hom had disconnected the transceiver, but that was days ago. The pile of salvaged jZav`Etch cables and connector lines was as mysterious as the inner workings of a Twentieth Century stereo system with all of its weird bulbs and tubes. He hadn't had time to make notes. He hadn't even shot any video. Besides, the controls had all been torn out of the pilot's ship. He had no frame of reference.\n\nSuddenly the shooting stopped. Yoshi looked up. The door stood open, letting in the cool evening air. The suns were dropping towards the western hills and all was quiet outside. Were the Dusig creeping up on him even now? They'd probably toss a grenade or something in and blow him apart. He reached for the shotgun and got to his feet. Many footsteps outside came rushing towards the opening. Yoshi hummed a distressed, high pitched little noise and brought the weapon to his shoulder.\n\nJean hurried through the door with a steelie following close behind. Shaking with nervous reaction, Yoshi lowered the gun and cried aloud in relief. Jean shot him a worried and frightened glance, letting go of the steelie's lead strap.\n\n\"Yoshi?\" she asked, rushing to him\n\n\"I thought...\" He trailed off and hugged her tight.\n\n\"I'm okay,\" she said in a strained voice, returning his hug fervently. \"I'm okay. I don't know what happened to Tammy. Her radio isn't transmitting.\"\n\n\"She probably dropped it,\" he said lamely. \"Oh thank God you're okay!\"\n\nJean kissed his cheek and stepped back.\n\n\"I have to get the steelies under cover,\" she said and went to gather up the lead strap. \"They tried shooting them. Can't let them get killed.\"\n\nYoshi now recognized Tinkerbelle as the girl led her across the small room to the dining area with its table and chairs. Jean darted out again, returning a moment later with Little Gertie followed by Boudi. Last came Duchess, the oldest of the mares. She glanced around and snorted as if not pleased to be inside. Jean dumped the remaining feed on the floor and the steelies began munching happily. The room soon filled with the scent of the beasts punctuated with the occasional flatulent expulsion. Yoshi wrinkled his nose.\n\n\"I gotta get back outside,\" said Jean, giving him another brief hug.\n\n\"I need the pilot's help with this,\" he said, gesturing at the transceiver on the floor. \"I don't know what to do about the controls. She needs to show me what needs to be done.\"\n\n\"I'll tell her,\" Jean promised and was gone.\n\nOutside at the lip of the hill she found F`reet `du Hom crouching among the bushes overlooking the northern face of the hill.\n\n\"Yoshi needs you,\" Jean told the pilot.\n\nF`reet `du Hom looked uncertain for a moment and then nodded. She placed a gentle hand on the girl's cheek and asked, \"jZeen` okay?\"\n\n\"I'm okay,\" Jean confirmed with a nod. \"Yoshi.\"\n\nBrushing her cheek on Jean's, F`reet `du Hom left. Jean did not watch her go. She took out her binoculars and scanned the slope in front of her. There were only very small heat signatures, rabbits, squirrels and the like, frightened into stillness by the firefight that had ensued. One signature was not small, though. It was already cooling. She had shot that one in the face. Jean turned her binoculars away, not wanting to get any better look at the corpse. She saw no sign of any living Dusig. That worried her.\n\n\"What would Pa do?\" she wondered aloud.\n\nJean did not realize it, but she was not as unnerved after the firefight as she had been after killing her first Dusig when they had gotten to the tower. Certainly her nerves were alive and adrenaline was still coursing through her veins, but the horror of the experience was less. She was able to think.\n\nAfter several minutes of consideration she decided her father would not sit and wait the way she was doing. He wouldn't go rushing down to confront the enemy, but he wouldn't just passively wait for them to come get him either. He would be doing something. She had to take a risk and decided to have a look at the sensors in the flyer.\n\nWhen she brought up the image of the area around the tower she was relieved to find her sister was still out there. Jean gasped and whimpered in relief, saying a quick, thankful prayer to whatever god was watching over them. Tears welled in Jean's eyes and her fingers brushed lightly through the holographic map where Tammy was represented as a green blip. She could not dwell on her sister's fate, though. Tammy had told her to protect Yoshi and F`reet `du Hom. She had said the message was the most important thing. \n\n\"I'll try,\" the girl whispered and forced herself to look at the rest of the map.\n\nThe sensors showed her there were Dusig moving through the trees along the slope of the hill, heading westward where the terrain was less steep. She counted three in that direction. Those had to be the survivors from the attack. Two more were moving towards the tower across the bottom of the valley. Four others were grouped in the cut near the big oak where she had spotted the enemy soldiers earlier and none of them were moving.\n\n\"What do I do?\" she worried. \"I'm all alone. What do I do?\"\n\nAs she worried she noted she would have some time at least. Even if the three moving along the slope turned to come up the hill it would take them several minutes to get in range where they could fire on the tower. What could she do in those minutes to prepare? She couldn't dig a hole to hide in.\n\n\"I guess I could use the explosives to blow a hole.\" \n\nThat thought stopped her. The explosives. Tammy had made a bomb and thrown it at the three that had been chasing her. It had done nothing, though, because it had not been contained or directed. She knew that much from what her parents had taught her when blowing stumps or boulders to clear an area for construction. A quick inspection of the hilltop showed her there were a number of large rocks in the cleared area surrounding the tower. If she put explosives by one of those, she could send it hurtling. Her father had once used too much Pugh 36 and sent a stump flying over their house to crash through the canopy of the family spinner. A small, sad smile crossed her face at that memory of her father trying to explain it to her mother. She wanted to be home. She wanted to be in bed and reading or watching a show. This was such a bad place.\n\n\"Get it done,\" she reminded herself. \"Get it done and we can all go home.\"\n\nLaunching a boulder at the enemy sounded like a good idea but Jean wasn't foolish enough to think it would hit anything. She recalled Yoshi's description of the weapon from Ancient Earth used during that war before the North American Event. She had always thought a claymore was a kind of sword. Well, they called laser guns and gauss guns rifles and there was no rifling involved. She shook her head. It didn't matter what that old weapon had been called. She understood the principle of the thing and she had the means to replicate it.\n\nTwenty minutes of running around like a wren building a nest resulted in four piles of small stones at the bases of four large rocks. Jean tore bunches of grass, roots and all, from behind the large rocks and planted them in front of the piles to hide them. Her last detonator went into a small lump of the Pugh 36 she placed beside the doorway of the tower. As with the other charges, she piled small stones in front of it and disguised the whole thing with a clump of grass.\n\nChecking the sensors again showed her the Dusig had worked all the way around to the western approach. Her heart beat a little faster when she realized they were on their way up, but she was also glad they had not gone any further. If they came directly up to the tower they would walk right into her explosives. She calculated it would be at least another half an hour before they came in range. The suns would be setting by then and she would have the light in her eyes. That would be bad, but not as bad as it might be if she had not prepared. What else could she do to even the odds?\n\n\"I don't have any more bombs,\" she mused, worrying her thumbnail between her teeth. \"But they don't know that!\"\n\nWith a small amount of hope she sprang from the flyer and began gathering more small stones. She tried to make the piles match the ones she had already made. These would not have explosives but if the soldiers hesitated because of them, it would give her more time to react. It might even convince them to break off their attack. Maybe. She didn't really believe it, but there was a better chance with the decoys than without.\n\n*****\n\nThe suns were setting behind the western hills and night was creeping rapidly across the valley below. Already the river and Big Lake were cast in darkness. Jean looked through her rifle scope and saw the Dusig on the slope below her, moving among the trees. She licked dry lips, sighted in on the one in the lead and pulled softly on the trigger. The rifle shoved back into her shoulder with the frizzling crack she had become so accustomed to. Her target jerked backward and rolled down the hill with a keening cry. The others went to ground. All she could see were their heads and gun muzzles. To her surprise they did not return fire. Weird calls came to her faintly and she understood they were talking to one another. The soldier she had shot continued to keen in a pleading voice. Finally the uninjured two opened fire. They shot wide of her, tearing rents in the soil and smashing saplings. Jean waited as calmly as she could. The one on the right dashed for the wounded one and she squeezed her trigger. The 9mm bullet struck his breastplate under his left arm and sent him tumbling. He rose again and she fired, sending another round into his leg. Again he fell and again he rose up. Her rifle wasn't powerful enough to smash through the armor plates. She fired and missed and suddenly a gout of soil and smoldering grass exploded next to her head. Jean rolled away behind the lip of the hill and crawled south in a half panic, fully intending to start shooting at them again, but as soon as she got to where she could look down the slope, more viridian bolts chewed up the grass and soil around her. \n\nJean shrieked in panic and rolled away. Scrabbling along on her belly, her rifle dragging in the grass by its strap, she made for the open door of the tower.\n\n\"Yoshi!\" she screamed and got up into a bear crouch, rushing along on all fours. She was crying and panting, nearly hyperventilating and when she saw Yoshi appear in the doorway she surged to her feet with her arms outstretched.\n\n\"Are you hurt?\" he asked, wrapping his arms around her protectively.\n\nJean was about to answer when F`reet `du Hom shoved both of them out of the door and let loose with her alien rifle. Sizzling bolts burned long, black furrows through the grass and tossed up geysers of smoldering earth at the edge of the hilltop. Jean could only gape and weep as Yoshi pulled her inside the tower and dragged her across the floor to safety.\n\n\"I was so scared!\" she cried and clung desperately to him.\n\n\"Stay down!\" the boy said, and pushed her hands off of him. Taking his shotgun he went to the doorway and began firing.\n\nJean watched as her boyfriend and the alien pilot blasted the lip of the hill clear of grasses and weeds. A figure rose up briefly amongst the carnage and sent a bolt at the tower. It flashed through the doorway and exploded against the ferrocrete* of the wall, filling the chamber with the stink of ozone and scorched limestone. Jean ducked down and put her head in her hands.\n\n\"Jean?\" Yoshi asked softly.\n\nThe girl looked up and hugged him desperately. The shooting had stopped. She didn't know how long she had been cowering on the floor but the sky outside was black and star specked.\n\n\"Are you hit?\" he asked fearfully.\n\n\"I'm...\" She looked at herself. Her clothes were filthy, but they had been filthy for a few days. She saw no blood and shook her head. \"I'm not hurt. I'm so sorry, Yoshi! I wanted to protect you. I'm supposed to protect you. I just... When they shot at me... I...\"\n\nYoshi wrapped his arms around her and kissed the top of her head.\n\n\"It's alright,\" he said gently. \"We took care of it.\"\n\n\"They're dead?\" she asked.\n\n\"I don't know,\" he admitted. \"I only saw one. I tried to shoot him. Pretty sure I missed.\"\n\n\"Where's F`reet `du Hom?\" she asked, pulling away from him to look around.\n\n\"Outside,\" he said. \"The suns set a few minutes ago. I don't know what she's doing.\"\n\n\"What about the message?\" she asked.\n\n\"We were working on the controls when you called for me,\" he told her. \"She helped me hook up a spare screen to the transceiver. I'm still trying to figure out how to link my pad so it will change the transmission bands. I think I've got it figured out.\"\n\n\"You aren't finished?\" Jean asked, sounding distressed and plaintive, even to herself.\n\n\"We stopped working when you called me,\" he said.\n\n\"Finish it, Yoshi! Finish it! I want to get out of here!\"\n\n*****\n\nTammy heard movement. A lot of movement. Many feet were rushing through the undergrowth, trampling rotted leaves and old sticks. Whoever it was, was not trying to be quiet. They were in a big damn hurry.\n\nShe tried to sit up and have a look, but her body protested. All of her muscles were tight and sore and her left arm was numb and cold below the elbow. She blinked and only then realized it was night. How long had she been wherever she was? She cradled her injured arm with the other and hissed in discomfort.\n\n\"Fuck me,\" she growled softly and winced as pain shot through her scalp.\n\nThe rushing feet were drawing closer and she tried to lie still. Maybe they would pass her by. She was sunk in a hole, after all. Surely they wouldn't see her. But what was she doing in a hole? She had been jumping through the trees, hadn't she? Did she fall?\n\nTentatively she touched her scalp and found a large lump and a lot of crusted blood and matted fur. The whole right side of her face was matted and stiff. She shooed away some flies, too hurt and groggy to worry about them or even be grossed out. They buzzed away, slow from the chill in the air. Her fingers explored the cut, it seemed it had stopped bleeding while she had lain unconscious.\n\nWhoever was making the noise was definitely close and getting closer. She felt for her rifle and found it in the hole at her side, its sling still about her. With her left arm all but useless, she would be unable to shoot properly. She checked her holster and sighed in relief. Her pistol was a welcome weight in her hand. She held it close to her breast and tried not to breathe too loudly.\n\nAfter several minutes of lying there quietly, listening to the approaching footfalls she was able to more or less localize them. They passed some thirty meters from her and seemed to be making their way along the valley floor. There was at least half a dozen of them. Might be more. When their noise faded Tammy put her pistol away and felt along her belt for her medical kit.\n\n\"What the hell did I do with it?\" she grumbled and searched more agitatedly. Her search became almost desperate when she failed to find it in any of her pouches. \"Did I drop it somewhere?\"\n\nWith a soft groan Tammy forced herself to sit up. She began digging in her pocket for her pad to use its light when her fingers brushed something hard and smooth and cool to the touch lying on the ground beside her.",
        "\"There you are!\" she hissed, snatching up the small box. \"Oh thank God! Thank God!\"\n\nShe was so glad to find the compact device she actually kissed its case before opening it and scanning her clearly broken arm.\n\n\"Jesus!\" she swore an instant later. \"Both bones? How...\"\n\nShe did not finish the question. Her mind had finally begun recalling the events leading up to her falling into this hole.\n\n\"Jean!\" she cried and immediately clamped her mouth shut. If the enemy turned back and caught her, her sister and the others would be much worse off.\n\nEverything inside of Tammy wanted to run up to the tower and make certain her sister was safe. However, she was in no condition to run anywhere. She probably couldn't even walk just then. Her back and legs were burning from over use and her broken arm had to have some attention before she could risk trying anything as dangerous as standing up.\n\nIn the faint light from the med-kit's screen she saw her arm was swollen to the point where her flannel shirt sleeve was stretched like a sausage skin. Her fingers actually resembled furry sausages and she could barely move them. An injection sent pain relievers and anti-inflamatories into her system. She felt the effects immediately, but there was no instant reduction in the swelling. The med-kit recommended a splint and immobilization. That could wait until she had checked her head wound.\n\n\"Not so bad. No concussion,\" she said, reading from the screen once she had run the scanner over her scalp. \"Wish I had something to wash it with.\"\n\nThinking of washing her wound made her thirsty. She took a drink from her canteen and felt better. After a minute she decided to drink again. She took small mouthfuls and allowed the water to wash into her slowly. When her canteen was empty she felt a lot better. Even her head did not throb as much. By then her arm was showing signs of returning to normal size, though she guessed it would still be a while. The pain of the break was far less, at least and she felt all of her muscles relaxing. With only mild discomfort Tammy sat up and took a look around her, searching for a stick or branch.\n\n\"You should work,\" she said and picked up a long stick. \n\nIt was in decent shape. The bark was mostly gone, but as far as she could see, the wood was still sound. She took her knife from her belt and cut the stick down to size. It was awkward at first, but when she used her feet to hold it steady against the dead white pine the work went faster. Carefully she braced the stick in the bottom of the hole and held its base with the toes of one foot and the handle of the knife with the toes of the other while she rapped on the back of the blade with the piece of stick she had cut off. Once the knife started into the wood it did not take long to split the stick in two more or less even pieces. The real challenge came when she had to apply the bandages to hold the splint in place. Thankfully, by the time she was ready, the swelling in her arm was way down and she could move her fingers almost normally, though it made her injury ache fiercely. Tammy improvised a sling by tearing a slit in her haversack and shortening its strap to allow her arm to rest with a ninety degree bend at her elbow. Another dose of pain killers and she felt ready to try standing.\n\n\"Well, I'm not dizzy,\" she said to herself. \"Hungry, though.\"\n\nAmong the contents of her haversack were a few rations she now distributed in her pockets. A thick strip of freeze dried venison satisfied the worst of her hunger. She was tempted to eat another, but given her situation, thought better of it. When was she likely to get more food? Water wouldn't be much trouble. Streams were common enough around this area. Early spring meant there would be no nuts or berries. Even stealing eggs from nests was out since the birds had not begun laying yet. Fish might be a good option.\n\n\"Worry about that later,\" she told herself. \"Call Jean now.\"\n\nShe took her data pad from her pocket and her heart sank. The pad had been designed for use in extreme conditions but it was not invulnerable. Probably during her fall through the branches it had struck something hard enough to bend it. Nevertheless, she touched the power button, hoping it would still work. Nothing happened.\n\n\"Fuck,\" she swore softly.\n\nTammy had no idea what to do. It was night and the forest was dark. What was there to do? The moons had not risen yet. Looking up through the trees she saw stars and a few clouds illuminated against the darkness.\n\n\"Not long until moonrise, then,\" she whispered to herself. \"Up hill. You can feel your way. When the moons come up, you'll be able to see. Just go up hill.\"\n\nWorn, battered and sore Tammy collected herself and began her cautious trek south and up.\n\n*****\n\n\"Come on, Mr. Vemmo,\" said Roy, turning aside from the game trail. \"We need to check their position again.\"\n\n\"Roy, I'm tired,\" the petite Vespan said, trudging after him.\n\n\"Me too. Come on.\"\n\nRoy broke through some scrub, ignoring the pain in his side. It wasn't a really bad pain, not like it had been at first, but it was more than an ache. Until it got so bad he couldn't think straight he did not want to stop to check the scorched gouge in his side. Every minute lost was a danger to his friends and the girl he loved. After realizing what the Dusig might be up to, Roy and Vemmo had decided to press on through the night. They had been forced to stop for a couple hours' rest around dawn. Since rising Roy had pushed and pushed, driving them forward out of sheer stubborn will. Somehow Vemmo had kept up. Gamble brought up the rear with his head bowed and steps plodding, but he had not tried to wander off. He was a good steelie and Roy did not fear losing him in the forest.\n\n\"Look,\" said Roy, sounding slightly more energetic. \"See? That big boulder should do.\"\n\n\"No. I do not have NVGs.\"\n\n\"Right,\" Roy sighed. He was getting punchy and forgetful. Until the moons rose there was only starlight to see by. \"Sorry.\"\n\n\"It is alright. Think you will be able to see anything?\" Vemmo wondered halfheartedly. \"Last time there were too many trees.\"\n\n\"I don't know,\" Roy admitted. \"According to the map, the trees thin out in places down below. Maybe we'll see them. Maybe we won't.\"\n\n\"How much farther to the tower?\" asked Vemmo. He stumbled over a root and fell on his face. Roy turned and gave him a hand up. \"Very nice of you, Roy, but I am a male, in spite of what I look like to you.\"\n\n\"Whatever,\" snorted Roy. He hauled the Vespan to his feet and got back to climbing. \"If I fall over, you damned well better help me up.\"\n\nVemmo chuckled dryly and did his best to follow the teen. A moment later he walked right into Roy's back and stumbled again. Roy caught him by the arm and steadied him.\n\n\"Sorry, Roy.\"\n\n\"I see someone moving below us,\" Roy whispered.\n\n\"Just one?\"\n\n\"Yeah,\" Roy said. He took out his binoculars and handed his NVGs to Vemmo. \"Down slope about a hundred meters. Moving slow. I don't see anyone else around.\"\n\n\"I do not... Wait!\" Vemmo said tensely. \"Yes. I see them.\"\n\n\"See any others?\" asked the teen, peering intently at the lone figure.\n\n\"No,\" said Vemmo. \"Will you shoot him?\"\n\n\"It's not a him,\" Roy breathed. He dropped the binoculars from his eyes, shivering with reaction. \"That's Tammy. And she's hurt!\"\n\nBefore Vemmo could stop him Roy bounded down the slope through the trees in a wild dash. Beyond hope he had found Tammy and he was not going to let her go again. Not ever! Blindly he smashed through undergrowth and shrubs. Thorns tore at him and branches whipped him, but Roy pressed on. Small animals sprang from his path. He careened off a tree, fell and sprang up to continue his mad rush. There was movement ahead and he slowed to orient on it.\n\n\"Tammy?\" he called.\n\n\"Roy?\" she called back and suddenly there she was. He could barely see her in the starlight, but he found her.\n\n\"Tammy!\" Roy cried and hugged her fiercely. \"Oh God, Tammy! I love you! Oh God!\"\n\n\"Roy!\" she gasped and kissed him fiercely. \"I love you, Roy!\"\n\nThe young lovers embraced and kissed and held each other, thankful for the strange chance that had brought them together again.\n\n\"Hush!\" hissed Vemmo from behind them. \"We do not know where the enemy is!\"\n\nAbashed, Roy relaxed his grip on Tammy and set her down.\n\n\"Oh Roy,\" Tammy sighed. \"I was scared. I didn't know what had happened to you and I had to kill a bunch of them and they shot at me and I fell and my pad is broken and I couldn't call and...\"\n\n\"Ms. Mackey!\" Vemmo scolded. \"Please!\"\n\n\"He's right, Tammy,\" Roy said, taking her gently by the shoulders. \"We need to be quiet.\"\n\n\"I don't think we need to worry much,\" she said, slumping to the ground. \"They ran by me about... I don't know. It was a while ago.\"\n\n\"You are injured, Ms. Mackey,\" Vemmo said, coming up to them. The shape of Gamble loomed in the darkness behind him.\n\n\"I broke my arm and hit my head,\" she said and began chuckling weakly. \"I took some meds and I'm high as a kite right now.\"\n\n\"Let me see,\" Roy said, going to a knee beside her.\n\n\"Get out of my way,\" Vemmo ordered him. \"Get the box off of Gamble. I think we are going to need more than a simple kit to treat this.\"\n\nRoy did as he was told and minutes passed while the Vespan examined Tammy's injuries.\n\n\"Let me wash this blood off,\" Vemmo said. \"Lay your head back.\"\n\n\"Blood?\" demanded Roy, stepping closer.\n\n\"From a scalp wound,\" said Vemmo. \"Give me a canteen.\"\n\nUsing disinfectant soap from the medical kit and a sterile sponge Vemmo cleaned Tammy's scalp.\n\n\"Does not look too bad,\" he pronounced. \"Why did you not treat this properly?\"\n\n\"Because I have broken arm?\" she replied a little sarcastically. \n\n\"Oh,\" he said. \"Of course. Forgive me. With all of your fur I cannot put a plaster on it. I am afraid synthaskin* will have to do. And a compress.\"\n\nTammy waited patiently with Roy holding her good hand while Vemmo applied the dressing to her scalp. \n\n\"Now let me have a look at your arm.\" The Vespan removed the makeshift sling and ran the medical scanner over the injury. \"The splint helped. And you have already taken anti-inflamatories. I am going to replace your splint, though. This will probably hurt. Try not to cry out.\"\n\nTammy braced herself and squeezed Roy's hand. Vemmo was quick and his fingers gentle as he inspected the break. From the medical kit he took an inflatable cast and applied it to her arm. Sealing the fastener he depressed the button on the side that released the catalyst. Almost instantaneously the gasses in the cast became a rigid solid. Tammy hissed at the increased pressure and all but crushed Roy's hand. He said nothing and gradually she relaxed her grip.\n\n\"That's better,\" she sighed. \"We really need to get going.\"\n\nRoy was about to reply when a distant explosion rang through the valley. All three looked up towards the tower where it stood clearly against the lightening sky.\n\n\"Oh shit,\" swore Roy.\n\n\"Was that a demolition charge?\" asked Vemmo.\n\n*****\n\n\"They're coming!\" screamed Jean, dodging back through the door. She spun and fired half a dozen rounds through the opening. Figures in the darkness beyond dropped to the ground and returned fire. Viridian bolts slapped against the tower wall outside and a pair slashed through to splatter vividly against the interior ferrocrete*. \n\n\"Get down!\" Yoshi yelled and tackled the girl to the floor as more bolts screamed past. F`reet `du Hom darted to the side of the doorway and fired, matching bolt for bolt with the attacking Dusig. \n\n\"Did you send the message?\" Jean asked, rolling away from Yoshi.\n\n\"Yes,\" he gasped and ducked as another volley of shots flew by. \"And she did something, too.\"\n\n\"Something?\" Jean demanded and scooted closer to the wall.\n\n\"She sent a message, too,\" he said, following her. \"I don't know to who. She got on as soon as I was done. Actually talked to somebody.\"\n\n\"Did you get a reply?\"\n\n\"It'll take a couple of minutes to reach the company's outpost,\" he said, dragging his shotgun closer. \"I sent a burst. Just text. I included as much as I could think of. Kept it short.\"\n\n\"That's good,\" Jean said. She brought her rifle to her shoulder and fired into the night. \"What do we do now?\"\n\n\"Get out of here if we can,\" he said. \"Did you disable the flyer already?\"\n\n\"Main power linkage,\" she said. \"Tore it out. Threw it into the woods down the slope.\"\n\nThe shooting from outside ended and F`reet `du Hom chanced a quick look. A bolt skimmed past her head and she returned fire, screaming something.\n\n\"Blow one of the bombs!\" Yoshi shouted over the noise.\n\nJean pulled out her pad and pressed the icon for the first detonator. A loud slapping crack sounded from outside and all the shooting stopped again. F`reet `du Hom fired a few more times and then dodged across the open doorway to the opposite side. She looked out. No shots came.\n\n\"Can we go now?\" Jean asked tensely.\n\n\"I don't think we're going to be able to,\" said Yoshi. \"I think we're trapped.\"\n\n\"What do we do?\" she asked, a fresh quaver in her voice. When Yoshi didn't answer, she demanded a little more desperately, \"What are we going to do?\"\n\nThey were both startled by the sound of the heavy door slamming shut. Looking up they saw F`reet `du Hom turn the manual latch and set the dogs to seal it. She thumped it solidly with the edge of her fist and snorted before walking over to the teens on the floor and motioning them to follow her.\n\n\"Come on,\" Yoshi said hesitantly. \"Let's see what she has in mind.\"\n\n*****\n\nIt seemed to take forever, even moving as swiftly as they could. At first they had been reckless in their urgency. As they drew closer to the tower, though, caution had reasserted itself. Now Roy, Tammy and Vemmo along with Gamble stood less than two hundred meters from the tower. Coming up the long spur their climb had not been overly arduous, but short rations, injuries and days without enough rest had long since tapped their reserves. Gamble, as big and strong as he was, gave up and lay on the ground in a patch of old leaves, his head drooping. Roy did not have the heart to rouse him in order to remove the saddle and other tack. He left his old friend where he was.\n\n\"Thank goodness the moons are up,\" Tammy whispered a little breathlessly. She was feeling winded and lightheaded after their long, hurried trek.\n\n\"There's the flyer,\" Roy said woodenly and found a stout tree to lean against. \"Service hatch is open.\"\n\n\"Maybe Yoshi or Jean disabled it.\" Tammy bit her lip, hoping her sister was okay. \"See anyone?\"\n\n\"No,\" said Roy, getting his binoculars out. \"Where's the door?\"\n\n\"On the west side,\" she said. \"Can't see it from here. Should we try calling them?\"\n\n\"Use my pad,\" Roy said and handed the small device to her.\n\n\"Jean?\" Tammy whispered into the mic. \"Jean? It's Tammy. Are you there?\"\n\nA tense minute went by and Tammy was about to call again when a small, frightened voice came over the speaker.\n\n\"Tammy?\" Jean asked. \"Where have you been? I tried calling and you didn't answer.\"\n\n\"I lost the little radio and I broke my pad,\" Tammy explained. \"Are you alright?\"\n\n\"So far,\" said Jean. \"We're closed up inside on the second platform. Where are you?\"\n\n\"A couple of hundred meters east of the tower in the woods,\" Tammy told her. \"Where are the bad guys?\"\n\n\"On the western slope, we think. We fought them off and closed the door,\" said Jean. \"F`reet `du Hom got us all up on the service platforms, even the steelies.\"\n\n\"Well, that's something,\" commented Roy.\n\n\"We heard an explosion a while ago, Jean. What was that?\" asked Tammy\n\n\"A bomb,\" the younger girl said. \"Like what you and Roy used. I packed little rocks all around some Pugh 36. There are a few more. Tammy, I want to get out of here and go home.\"\n\n\"I know,\" Tammy said. Her ears lay out to the sides of her head and her tail drooped to the ground. She looked beseechingly up at Roy. \"We're working on it, baby sister.\"\n\n\"If they cannot tell us where the enemy is, how will we find them?\" asked Vemmo, gripping Roy's large pistol.\n\n\"Have to scout them out,\" said Roy grimly, taking another look through his binoculars. \"There are all kinds of little hot spots over there. I'm guessing that's from the gun fire. I don't see any of the soldiers.\"\n\n\"Good thing it's not the middle of summer,\" Tammy said. \"Forest fire would be a bitch right now.\"\n\n\"Have they sent the message?\" Vemmo wondered.\n\n\"Jean, did you send the message?\" Tammy asked immediately.\n\n\"Yoshi did,\" said Jean. \"And we think F`reet `du Hom did, too.\"\n\n\"Good. Hang on,\" said Tammy with considerable relief. She muted the mic and said, \"That means sometime day after tomorrow the relief force will get here. How do we get them out of the tower?\"\n\n\"I don't know,\" said Roy. \"The group we were following, the one that ran past you in the dark, was about eight soldiers. And they were pretty good. Not like the first group we ambushed. That's why I got shot.\"\n\n\"You got shot?\" she demanded. Roy hadn't mentioned any wounds.\n\n\"I patched him up,\" Vemmo assured her. \"His wounds are no more severe than yours, I think. Perhaps not even as bad, considering your head injury.\"\n\n\"It isn't important right now,\" Roy cut in, grumpy and impatient. \"We've got to think of a way to route those fuckers and get the others out of the tower.\"\n\n\"Where will we go when we do?\" Vemmo asked. \"Perhaps we should simply try to get ourselves into the tower.\"\n\n\"What?\" Tammy and Roy asked in unison.\n\n\"We know the reaction force will be here in less than two days,\" Vemmo began. \"If we could hold the tower against the Dusig until that force arrives, they can send a rescue party.\"\n\nTammy looked up at Roy, uncertainty plain upon her face. Roy licked his lips and wiped sweat from his brow, smearing dirt and grime.\n\n\"I don't know,\" he said after a while. \"I mean, Steve knew we were coming here. He'll have told somebody by now. Maybe someone is already on their way to help, but that doesn't mean we can hold the tower. It isn't a fortress.\"\n\n\"It is better than being out in the open,\" argued Vemmo.\n\n\"Not if they bring in more troops with explosives to blow the door off,\" Roy countered. \"Hell, those rifles of theirs might do the trick. We just don't know. Or what if they get one of their shuttles up and running? They could blast the tower with their cannon. With us trapped inside, we'd be dead.\"\n\n\"You do have a point there,\" Vemmo conceded grimly.\n\n\"We could try luring them away,\" suggested Tammy. \"We still have Gamble. Have you still got explosives?\"\n\n\"Some,\" Roy said. \"Gamble is in no shape to keep moving, though. He needs rest. We all need rest.\"\n\nThat was true. Tammy had never felt so weary in all her life. And how was she supposed to fight with a broken arm? She couldn't go jumping through the trees in her condition. And Roy was right about Gamble. The big stud was snoring softly behind them.\n\n\"A cup of coffee would be great about now,\" she said, smirking.\n\n\"I do not know how you people can drink that stuff,\" snorted Vemmo disgustedly. \"Brown and bitter, or too sweet when you add that creamer and sugar. Tea is far better and yet not particularly palatable.\"\n\n\"Mr. Vemmo, you don't know what's good,\" Tammy chided him. \"Sugar does ruin it, though. I'm just too tired to think straight.\"\n\nRoy dug in one of the pouches on his belt and took out his med-kit. He applied it to his arm and there came a soft hiss of an injection. He fiddled with the controls and pressed it to Tammy's shoulder. Before she could pull away she felt the brief sting of an injection followed by renewed energy and wakefulness. Vemmo backed up when Roy made to inject him too, but Roy caught hold of the petite Vespan's arm and dosed him.\n\n\"Roy!\" snapped Vemmo. \"I did not wish a stimulant!\"\n\n\"Sorry,\" Roy apologized, not sounding particularly sorry. \"We all need to be awake and alert. Now, let's think this through.\"",
        "*****\n\nThe suns were rising. The big one was just cresting the top of the hills to the east. In another minute it would be casting long shadows across the valley and seconds later the smaller one would add its lesser light. Tammy fidgeted, brushing a stick out of her way so she could set her knee on the ground more comfortably. \n\n\"Suns are just about up,\" she said tensely into Roy's pad. \"You remember what you're supposed to do?\"\n\n\"I set off the bombs when you say,\" said Jean over the link.\n\n\"I open the door when the last one goes off,\" said Yoshi.\n\n\"And all three of us come charging out, making for the wood line by the big walnut,\" finished Jean.\n\n\"And you're sure F`reet `du Hom knows what's going on?\" Tammy demanded.\n\n\"As sure as we can be,\" Jean replied.\n\n\"And you've got Boudi?\" asked Tammy.\n\n\"Tied her lead to Tinkerbelle's saddle,\" confirmed her sister.\n\n\"Alright,\" sighed Tammy. \"When I...\"\n\nFrom way up north in the valley thunder rolled. There were no clouds overhead and Tammy's eyes snapped to the sky above Waimea. She could not see the town from her hiding place, though.\n\n\"What was that?\" Jean asked urgently.\n\n\"I think it's one of their ships,\" Tammy said immediately.\n\n\"F`reet `du Hom is saying something,\" Yoshi cut in. \"She seems scared.\"\n\n\"We should go, Tammy!\" Jean insisted, clearly frightened.\n\n\"Not yet!\" Tammy snapped, afraid her sister would panic and go before they were ready.\n\nSeconds dragged past and the noise from down the valley grew. Tammy's tail flicked uncertainly. All the fur down her back was on end. She looked up into the branches of the big black walnut tree at the edge of the tower clearing to be sure Roy was where he was supposed to be and saw him looking back at her. She couldn't make out his features in the pre-dawn dimness but she could see he had the rope ready to hand.\n\n\"Tammy?\" Jean squeaked over the pad.\n\n\"Just a few more seconds, baby sister,\" Tammy replied, heart in her throat. \"Almost time.\"\n\nThe big sun was half way over the valley rim and the upper edge of the small one was showing. The noise to the north was definitely getting louder. Tammy waited until the shadows had washed down, driven off by the coming light. She put the pad to her mouth and silently counted ten.\n\n\"Now, Jean! Now!\" she barked into the mic.\n\nEven before she said her sister's name the explosives went off in one mighty crack. Bits of stone sliced the air and shrieks of alarm rang from the woods not a hundred meters to her north. There were a couple cries of pain mixed in, thankfully. That would mean fewer Dusig to deal with. Roy began firing into the woods with deliberate regularity. More cries of pain came to her and then she saw the door of the tower swing open. Tammy stuffed the pad inside her shirt and took up her rifle, scanning the woods for targets.\n\nFrom the tower's door burst Jean, F`reet `du Hom and Yoshi upon their steelies. The animals charged at full stride for the walnut tree. Blinded by the rising suns the Dusig fired wildly at the fleeing fugitives. Tammy saw movement in the trees and fired. One Dusig pitched over backwards, tumbling down hill through the underbrush. Another rose up with his weapon aimed and dropped instantly. Roy had put a round through his skull. The fugitives were nearly to the trees, not slowing when a viridian bolt struck Yoshi. He screamed in agony and pitched from Little Gertie's back. F`reet `du Hom yanked back on her reins, spun Duchess around and went back for the boy. Roy's fire became more intense as he tried to suppress the Dusig. The jZav`Etch pilot leaned out of her saddle and hauled Yoshi up and across the pommel with one arm. He was screaming and thrashing weakly the whole time. That meant he was alive, at least.\n\nAs soon as the fugitives were in the woods Vemmo waved them down the path and rushed to follow them to where Gamble was waiting. Roy and Tammy continued to fire into the Dusig position, but the enemy soldiers had finally recovered from their surprise and were now pursuing with a semblance of order and discipline. They moved from cover to cover, not exposing themselves for more than a second or two.\n\nTammy was hampered by the need to support her rifle across a tree limb, but she still hit one plumb in the chest. The big 12mm bullet split the armor plate and threw the soldier off his feet. Another one was slapped to the ground by one of Roy's bullets. The Dusig were firing back now. They peppered the walnut with a dozen bolts, sending small limbs raining to the ground. Roy fired off another quick spray of bullets and took the rope in his strong hands. Tammy increased her fire rate to cover her lover as he swung down through the forest shadows. A few bolts pursued him, none coming close. Once Roy was out of their line of fire Tammy became their target. She tried to give as good as she got. There were simply too many of them and she was driven from her hiding place.\n\nAs nimble as most Humans with four good limbs, the cat girl slipped down the steep slope between the trees, dodging bolts. She turned and fired her rifle one handed just to keep the enemy's heads down. Vemmo chimed in with Roy's pistol, sending half a dozen rounds whizzing over Tammy's head. Someone scream in pain and the small, logical and temporarily nearly useless part of her brain was surprised he had hit anything. She darted past the Vespan, motioning him to follow. With a last flurry of shots he did, scampering lithely behind her.\n\n\"Are we ready?\" she demanded as soon as they joined the others. \"Where's Roy? How's Yoshi?\"\n\n\"Yoshi's dead!\" wailed Jean. She was still on Tinkerbelle's back, sobbing, tears flowing down her face.\n\nTammy's gaze darted to F`reet `du Hom on Duchess. Yoshi was bent over her saddle and she was using the jZav`Etch medical kit on his wound.\n\n\"Oh shit!\" gasped Vemmo and he leapt into action. \"Let me see!\"\n\nUnable to think what else to do Tammy turned her attention back up the slope. They had to get away from the Dusig. Suddenly she realized the sound of the ship was definitely getting closer. Worse, it sounded as if it was moving faster. The Dusig were coming! They were going to blow them up! They'd all be killed! It was so unfair. Where was Roy? If she were going to die she wanted to be with the man she loved.\n\n\"Tammy!\" Roy called, stumbling through the trees. He was using his rifle as a crutch.\n\n\"Roy?\" she cried, leaping to his side to support him. \"Are you hit?\"\n\n\"No,\" he croaked, grimacing in pain as he took a hurried step towards Gamble. \"Twisted my ankle. Stepped on something. Rolled out from under my foot.\"\n\n\"You clumsy dolt,\" she sobbed and kissed him. \"Yoshi's dead.\"\n\n\"He's dead?\" Roy demanded, his own injury forgotten.\n\n\"No he is not!\" Vemmo said. His hands were working on the boy's wound. \"But we all will be unless we get out of here. She had the wound stanched and I have given him something for pain. We must go! That ship is getting closer.\"\n\nSounds from up the hill told them the Dusig were closing and Roy hauled himself into his saddle. Tammy all but threw Vemmo onto Little Gertie and then bounded onto Boudi's back. She spun her mount around and took out her pistol.\n\n\"Go on, Roy!\" she said urgently. \"I'll bring up the rear.\"\n\nRoy didn't argue. He thumped Gamble in the sides and rushed down the deer trail deeper into the woods. The big stud had been able to rest for several hours between the time they had found the tower and their dawn attack. He was much refreshed and a mild dose of stimulants, enough to have killed several Humans, had fully roused his senses. The other steelies, seeming glad to have the stud back among them, followed eagerly. \n\nTammy held Boudi back, sent a few pistol rounds at the first Dusig she glimpsed through the trees and then dashed after her friends. All the while the sound of the powerful engine grew until it overpowered all other sound in the valley. A massive report blasted above the trees. It was followed almost immediately by a shower of debris. Tammy ducked her head and raised her good arm, guiding her mount with her knees as pieces of the transmission dish showered down around her. She almost lost her seat when Boudi leapt a two meter wide gully that cut the trail. She held on and centered herself even as Boudi bounded up and over a large stone. She wanted to know where the Dusig were, but dared not look back for fear of taking a tumble.\n\nIt sounded as if the enemy ship was right overhead. Any second she expected to be blasted to perdition. Hope and fear warred within her breast as she desperately tried to catch up to her friends. She had no time to weep or even regret her choices. If this was the end, she simply wanted to be with Roy. And there they were! On the trail ahead she saw them milling about as Vemmo tried to climb back on Little Gertie. He had dead leaves clinging to his clothes and the crest of short feathers atop his head. Apparently he'd fallen from the old steelie.\n\n\"Roy!\" Tammy called, trying to be heard through the all oppressing sound of the ship's engine. \"Roy!\"\n\nTammy reached them just as Vemmo remounted. She pulled back on her reins, stopping next to the big red haired young man and leaned out of her saddle to hug and kiss him, perhaps for the last time. The enemy ship was almost directly over them now and they could all feel the waves of anti-gravity washing across them. It began to drop, sliding from side to side on the column of artificial gravity. The pressure from all those tons of ship began to weigh heavily and looking up they could see the turret on the chin of the huge shuttle rotate to bring the cannon to bear.\n\n\"I love you, Tammy,\" Roy roared above the noise and kissed her deeply.\n\nTammy held on and hugged him tight, expecting to be disintegrated any second. It had almost worked. At least they had gotten the message out. That was something. Their families would be rescued. There was a chance of that which there would not have been if they had not made this decision.\n\nSuddenly there was a change in the sound of the enemy ship. It grew much louder for an instant and then it was streaking away at high speed leaving the fugitives stunned to be alive.\n\n\"What happened?\" wondered Vemmo. \"They left.\"\n\nLooking up Tammy saw the shadow of the ship was gone. She felt no pressure from the gravity field. What had happened, she wondered silently. She looked to F`reet `du Hom only to see the pilot was as perplexed as she was. The answer came in the form of a trio of sleek black shapes slicing through the air kilometers above the valley. Bright flashes from their tips sent lances of viridian light through the clear sky. Distant cracking snaps came to their stunned ears and then the black shapes were out of sight somewhere to the north. F`reet `du Hom let out a throaty, wild cry of triumph that startled everyone. She rose up in her stirrups, her fist raised above her head like a statue of victory incarnate. \n\n\"What's going on?\" Jean asked weakly. She had drawn Tinkerbelle up next to Duchess and had her hand on Yoshi's back.\n\n\"I believe we have just won the war,\" said Vemmo. \"Never mind. We must find a place where I can tend to Yoshi's wound properly. Somewhere flat would be best.\"\n\n\"Those soldiers are still out there,\" warned Roy. \"Jean, take them on down the trail. Find a good place. Tammy and me will lag back here and make sure you aren't followed.\"\n\nJean did not argue. She reached out and tried to take Duchess's lead strap. F`reet `du Hom stopped her, though. She shook her head and lifted the unconscious Yoshi onto Jean's mount, settling him gently across the cantle of her saddle. Jean leaned over and kissed the jZav`Etch on the cheek before turning Tinkerbelle down the trail and trotting quickly away. Vemmo followed, apparently intent on saving the off-world boy's life.\n\n\"Well, we did it,\" said Roy into the silence.\n\n\"They did it,\" Tammy replied, indicating the younger teens disappearing between the trees.\n\n\"I guess so,\" he agreed, smiling.\n\n\"Roy,\" she said. \"Let's get married.\"\n\n\"Married?\" he asked, smiling. \"I like the sound of that. You sure you want to be the wife of a clumsy dolt?\"\n\nShe leaned over and kissed him deeply.\n\n\"I might be the only one in the valley who can keep you from breaking your neck,\" she said when their lips parted.\n\n\"What's your pa going to say?\" he teased.\n\n\"Probably that he's been expecting it,\" she snickered and kissed him again.\n\n*****\n\nEpilogue\n\nTammy was sitting in the infirmary beside Roy on an examination table. Roy's wounds and his broken ankle had already been attended to and now it was Tammy's turn. The settlement's surgeon, Dr. Alice Connelly, had already replaced the emergency splint on the girl's arm with a real cast. With proper rest and some good food Tammy's arm would heal in a few days.\n\n\"I'm not sure how much of a scar you're going to have,\" Dr. Connelly said judiciously, examining the wound on Tammy's scalp. \"I've got the splinters out and got everything sealed up. Your fur will hide it, regardless. Thankfully there was no fracture to your skull and no epidural hematoma. You got lucky.\"\n\n\"Good thing I have a thick skull,\" joked Tammy.\n\nThe doctor snorted, amused.\n\n\"What about her ear?\" asked Roy.\n\n\"Again, I don't know,\" said the doctor. \"I think we'll be able to fix it. Probably will have a scar, but I doubt anyone will notice.\n\n\"I'll be fine,\" Tammy said and glanced at the window onto the hall. \"What about Yoshi?\"\n\nYoshi was undergoing surgery across the hall. Jean was hovering outside the operating room with Deborah holding her hand. Bob and Mike were out helping with recovery efforts. A lot of people were going to have to rebuild after what the Dusig had done to the community.\n\n\"Can't lie,\" Dr. Connelly said. \"I wasn't sure he was going to make it. Mr. Vemmo did well with that emergency kit. I guess company training pays off. Anyway, it looks like the shotgun saved his life.\"\n\n\"The shotgun?\" Roy asked, surprised. He'd seen the hole through the weapon's barrel.\n\n\"Yep,\" the doctor said and began wrapping a bandage around Tammy's head. \"It absorbed some of the energy and spread the physical impact of whatever those alien guns shoot. Scary stuff. I've never heard of anything like them.\"\n\n\"I guess it's a good thing those guys couldn't shoot worth beans,\" Roy said. He frowned and glanced at the window. \"Maybe I shouldn't say that.\"\n\n\"It's a very good thing,\" agreed Dr. Connelly. \n\nThey all looked up when the door cycled open. Two tall female jZav`Etch entered the examination room and paused, glancing from one Human to the other before settling their gaze on the girl.\n\n\"F`reet `du Hom!\" Tammy said in greeting, pleased to see her friend.\n\n\"T` Emmi Car`tovah,\" replied the jZav`Etch pilot with a wide smile and vibrating whiskers. She looked to the jZav`Etch beside her.\n\n\"I am Tel `Ett Lofetar,\" she said with a thick, purring accent. \"I am specialist of communications on San`do Cla`veen. Ship that come to fight Dusig.\"\n\n\"You speak English,\" Roy said, surprised.\n\n\"I am learning,\" Tel `Ett Lofetar said, smiling pleasantly. \"I translate for Pilot. She wants to tell things she has learned.\"\n\nF`reet `du Hom held up a hand sized device with a small screen and crossed to the examination table so Tammy could see it. On the screen was displayed the image of a female jZav`Etch that looked a lot like Tammy except her fur was a little more yellow and the tips of her ears were white instead of brown. F`reet `du Hom said something. Tammy took hold of the device and looked intently at the image.\n\n\"Pilot says this is your mother,\" said Tel `Ett Lofetar. \"Her name was Casz` Car` Besk. Navigator on exploration ship, T`eomo Ra`Heth. Ship no report many years ago. Lost. jZav`Etch do not know what happen to it.\"\n\n\"This is my mother?\" whispered Tammy, her voice thick with emotion.\n\nDr. Connelly stepped away to busy herself with something and Roy put a comforting arm around his girl. Tammy leaned into him, tears starting from her eyes to wet the fur on her cheeks. F`reet `du Hom laid a gentle hand on the girl's cheek and spoke again before pressing a button on the device to reveal another image. This one was of three jZav`Etch, Tammy's mother, a large male and a baby, posed like a family portrait.\n\n\"The male is your father,\" Tel `Ett Lofetar said softly, seeing the girl's reaction. \"Captain of T`eomo Ra`Heth. Name was jZem` Bok`tovar. A good captain.\"\n\n\"And the baby?\" Tammy asked, already knowing the answer.\n\n\"Is you,\" Tel `Ett Lofetar said with a smile.\n\n\"Where did she get these images?\" Tammy asked, tears rolling down her cheeks.\n\n\"Found data card in pouch on belt,\" said the communications specialist. \"Not military card. I think your word is 'personal' data. Maybe 'private' data.\"\n\n\"This was in the belt?\" asked Tammy, surprised. \"That little flat thing in with the food bars?\"\n\n\"Yes,\" said Tel `Ett Lofetar. \"Pilot say she find and keep to give you. Had no machine to show before. You keep this machine. Captain say it permissible. Say good for you to have.\"\n\nTammy threw her arms around F`reet `du Hom and wept as only a lost child could. She hugged the pilot and F`reet `du Hom hugged her back. Roy sat quietly beside his girl, a hand gently stroking the fur on the back of Tammy's neck. Gradually, when the shock of emotion passed, Tammy collected herself and released her hug.\n\n\"Thank you, F`reet `du Hom,\" said the girl, her words thick with emotion.\n\n\"T` Emmi Car`tovah, okay?\" the pilot asked, smiling down on her.\n\n\"I'm okay,\" Tammy said, nodding. She looked to the communications specialist and asked, \"What does Car`tovah mean?\"\n\n\"I do not know translation for English,\" said Tel `Ett Lofetar. \"Is your name. T` Emmi Car`tovah. T` Emmi is child name. Name for when mother or father talk to child. Not full name. Only parents allowed to use. jZav`Etch not the same as Humans.\"\n\nF`reet `du Hom spoke and glanced at the specialist.\n\n\"F`reet `du Hom says she has told my captain you will stay here,\" Tel `Ett Lofetar said. \"Captain does not like. Does not think it is good. He says you can come with us. Come back to Hegemony. Be with our people. Come home.\"\n\nTammy pressed her lips together and her tail flicked hard. After the briefest of pauses she leaned hard into Roy and kissed his cheek before turning back to the specialist.\n\n\"This is where my people are,\" she said firmly. \"Thank your captain. Tell him I am already home.\"\n\n*****\n\n\"She remains?\" Captain Aka`Tem`al asked from his chair by the console in his cramped quarters aboard the light carrier San`do Cla`veen.\n\n\"She will remain,\" replied F`reet `du Hom. \"She has found a mate.\"\n\n\"A mate?\" he asked, scowling. \"Among Humans?\"\n\n\"A brave and courageous mate, Captain,\" she said. \"He bears the scars of battles and toil, though he is yet young among his people.\"\n\n\"Does he, indeed?\" Aka`Tem`al murmured thoughtfully. \"You have been among these Humans. How do you find them?\"\n\nThe pilot considered, recalling all she had been through with the young Humans and T` Emmi Car`tovah.\n\n\"They are brave,\" she said. \"The ones I was with were brave, at any rate. Even the least of them. A youngster, hardly more than a child, thought of the plan to call for aid. He was at times trying. However, when claw met flesh, he was brave. He now bears his own scars.\"\n\n\"Are they honorable?\" asked the captain seriously.\n\n\"I judge them by their actions,\" she replied without hesitation. \"T` Emmi Car`tovah's parents raised her as one of their own. Her adoptive father, Bob Mackey, rescued her and saw to her mother's burial. Can we judge them by other standards than that?\"\n\nCaptain Aka`Tem`al looked thoughtful for a time, his tail flicking uncertainly. He scratched at an old battle scar above his left eye and nodded slowly.\n\n\"Thank you, Pilot,\" he said, finally. \"You may go to your quarters. I imagine you need a good deal of rest.\"",
        "\"Captain,\" she said and waited for him to look up. \"What will we do now?\"\n\n\"We?\" he asked.\n\n\"The Hegemony,\" she clarified.\n\n\"I do not know,\" he said. \"Our duty is done. The rebels have been captured, thanks to you and Navigator Qel'ta Nhem. He gave his life to disable the weapons aboard your ship. I am submitting him for special recognition. Perhaps one of the new scout vessels will be named for him. The Conglomerated Planets ships are due here soon. We have already exchanged information with them regarding this incident. It is the politicians who must decide what occurs. I do not believe there will be war. Not over this.\"\n\n\"I am glad,\" she said, relaxing considerably. F`reet `du Hom had no wish to make war on these people. She had come to care for some of them almost as if they were jZav`Etch. She felt Humans would be troublesome subjects, if it came to that. Certainly they would be more dangerous than the Dusig.\n\n\"Tomorrow we will begin recovering the shuttles,\" Aka`Tem`al said, breaking into her thoughts. \n\n\"That will be a serious undertaking,\" she observed. \"Have we learned how the Humans were able to damage them?\"\n\n\"The Dusig left the cargo ramps down,\" the captain said, leaning back in his chair. \"Apparently the Humans loaded one of their light aircraft with explosives and remote piloted it up into the bay. When it detonated the shuttle's drive core breached. Fortunately the failsafe systems locked it down. Regardless, the damage was severe enough to send the ship careening into to the other shuttles, disabling all three with a single attack. Very resourceful of them.\"\n\n\"It seems to be a prime characteristic of the species,\" F`reet du Hom said with a pleased flick of her ears.\n\n\"Indeed? I wish to hear more of them,\" he said thoughtfully. \"We will discuss the Humans at length and in private after the recovery is complete. Do you understand?\"\n\n\"Of course, Captain.\"\n\n\"Go and rest, Pilot. I must consider things.\"\n\n*****\n\n\"There it is, Fuzzybutt,\" Bob said as the old escape pod was lifted from the bottom of Big Lake. \n\n\"Papaaaa...\" whined Tammy, though she smiled at the familiar old nickname. They stood upon the slope where her mother was buried and watched the salvage process.\n\nSilt and water grass slid off the pod's battered hull to reveal dull white paint beneath, green with algae. The jZav`Etch recovery vessel held it just above the surface, allowing the water to drain from the interior before hoisting the pod into its cargo bay. \n\n\"You kept your promise,\" she said and put her arm around her father, sighing happily. \"Thank you.\"\n\n\"I tried,\" he said and stretched up to kiss her cheek below the bandage wrapping her head. \"Sorry I couldn't arrange to let you have a look inside. The jZav`Etch wouldn't allow it.\"\n\n\"It's okay,\" she said with a little shrug and a flick of her ears. From her pocket she took the small device F`reet `du Hom had given her and opened the file with her family portrait. \"I know what I need to know.\"\n\n*****\n\n*synthaskin - A synthetic material used to seal shallow wounds.\n\n*****\n\nAN: I normally do not like deus ex machine but in the old days when westerns ruled the silver screen there were a lot of movies where the cavalry came in at the last second to save the day. My cavalry just happen to look like jZav`Etch fighter craft."
    ],
    "authorname": "RipperFish",
    "tags": [
        "adventure",
        "cat",
        "furry",
        "sci-fi",
        "survival",
        "forrest",
        "multi-chapter"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-world-for-the-taking-ch-09"
}