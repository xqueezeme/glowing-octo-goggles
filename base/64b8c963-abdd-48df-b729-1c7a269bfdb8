{
    "title": "Firestorm Pt. 01",
    "pages": [
        "Ellie: You up? \n\nI stared at the message on the screen. I knew it was from her before I'd even picked up my phone. No one else ever texted me this late at night... Per usual, I froze up before replying to her. \n\nI let my eyes linger on the three dots that were appearing and disappearing. I wondered what she was typing and deleting. I didn't even really need to answer her question. She already knew I was still awake, the little 'Read' had surely shown up on her end by now. Could this finally be the night I actually exercised self-control? Was I going to be able to resist her? Break the hold she had on me? \n\nOf course not. The fight was lost as soon as I'd heard the familiar text chime and picked up my phone from the nightstand. I groaned as I kicked off my blanket, annoyed at myself and my unfaltering predictability. I rubbed the sleep out of my eyes. Of course I was going to see her... But I'd at least keep my promise to myself and not let her touch me. \n\n\"Yay for small victories,\" I sarcastically remarked in my empty room. \n\nMe: On my way. \n\nI replied, my fingers only pressing on three letters while autocorrect finished the job. I covered myself up with just an extra-long hoodie that reached halfway down my thighs. I slipped my sock-clad feet into my pair of slides. I didn't bother with my purse, but I made sure my keys were in my front pocket before leaving. I looked like a mess and I was definitely not dressed to be in public, but it was fine, the commute to my destination was a short one.\n\nActually, it was only going to take one elevator ride and sixteen steps. \n\nShe sent back a red heart and I rolled my eyes. I'd gone to her place like a hundred times by now, but every single time I rode the elevator to hers, my skin still heated up and butterflies still filled my stomach. I'd never felt like this about anyone else. Before her, I didn't even know it was possible for someone to have had this much of a hold over another person. \n\nI caught my reflection in the mirror as the elevator shot up. I didn't even take the time to fix my dark brown hair. I'd convinced myself that these little acts of 'not making an effort' anymore meant I was slowly but surely getting over her. The digital floor number rose higher and higher until the metal doors opened to her floor of our shared apartment building. \n\nI made the sixteen steps to the familiar wooden door, which I'd recently come to regard as the gate to my own personal heaven and hell. I pressed on the buzzer and I felt my mouth dry up. My brain had already let my body know what was coming, and as usual, I was no longer in control of either my heart rate or breathing. \n\nFor fuck's sake, I hadn't even seen her yet, but I already felt like I could've melted away at any second. I drummed my fingers against the back of my phone. I truly wasn't sure if I was ever going to get through one of these nights without feeling like a bumbling idiot.\n\n\"Hi,\" Ellie greeted me as she let me in her home. She planted a quick kiss on my cheek. It burned. \"Sorry, I know it's like super late, but I just couldn't sleep.\" She shrugged. The playfulness in her bright, blue eyes told me she wasn't really sorry. She stood in front of me, smiling as she took in my appearance from head to toe. \n\nFor a split second, I regretted my ultra-casual outfit choice, especially since she was wearing another one of her expensive silk robes. Her golden blond hair neatly flowed past her shoulders. As always, she looked like an angel. Well, an angel whose matching lacy underwear was peeking out and making it even harder for me to form words.\n\nOnce again, I wondered how someone could look so perfect. My eyes took in her features greedily. As if I hadn't already committed every single thing I knew about her to my memory. \n\n\"Hey, no problem,\" I replied. I was trying my best to make my smile reach my eyes. \"So... Where do you wanna do this tonight?\" I looked around her dimly lit living room. I knew that if we kept eye contact any longer, I was bound to say something stupid. I was about to step toward the L-shaped couch in the corner when she grabbed my arm.\n\n\"Are you okay, babe?\" The term of endearment felt like a stab to my heart. \n\n\"I'm fine.\" I bared my teeth in a grin, hoping it made me seem more convincing. I rubbed the back of my neck and looked into her eyes again. \"Just had a long day at work.\"\n\n\"Well, if you're tired\u2014\"\n\n\"Ellie, I'm already here, aren't I?\" \n\nI covered her hand on my arm with my own before removing it. She opened her mouth to say something else, but I crashed my lips against hers before she could. I didn't want to talk to her anymore. \n\nI blindly led us to the couch. My lips never left hers. It was easy to do since I'd memorized the path already by heart. I could've probably walked forward or backward to any of our 'sex spots' in her apartment even if it was pitch black. Which was a good thing since her place was full of expensive furniture and decor I couldn't afford to replace. \n\nI sat her down on the couch. I climbed on top of her and kissed her into the dark gray faux suede cushions. Our kiss was deep and our movements were rushed. Well, my movements were rushed. I felt her try to slow the pace a couple times, but I wouldn't let her. I tore open her robe and slipped it halfway down her shoulders in one motion. My left hand swiftly reached for her boobs as my right one slipped under her panties. \n\nShe wasn't wet enough for what I really wanted to do to her, so I pumped the brakes, deciding instead to play with her for a while. I kept kissing her as I did, loving the feeling of her breathing getting more and more shallow as I teased her. My muscle memory when it came to what she liked was incredibly sharp. \n\nIn minutes, I felt her juices flowing freely. I continued my efforts. Alternately playing with her nipples the way that she liked with one hand, while my other one soldiered on to make sure she was more than ready for the quick and hard fuck she was going to get. \n\n\"Mm\u2014\" She murmured against my lips before finally breaking the kiss. \"Really not in the mood for foreplay tonight, huh?\" Her cheeks were flushed pink and her eyes were sparkling. \n\nI knew I could've made her come in a bit just by rubbing her sex some more, but if I did that... I would've still wanted to fuck her nice and deep. And I was really trying to limit the night to one orgasm given how late it was. I also wanted to spend as little time around her as possible. \n\n\"Nope.\" I popped out the word at the same time as I smoothly slipped two fingers inside her. She was absolutely dripping. I bit the inside of my cheek to stop myself from expressing out loud how I'd never get tired of fucking her like this. I'd always found her tightness and wetness so hypnotic. It was as if my only choice was to surrender to her, to give her what she wanted, every single time we had sex. \n\nI cut myself some slack and stared at her for a few seconds. I allowed my eyes to take in the sight of her flawless face scrunched up in ecstasy. How her eyelids were shut tight. How her white teeth were sinking into her pink bottom lip. \n\nWhen it started to hurt to look at her, I pressed my lips onto her neck and collarbone. I covered her ivory skin with kisses as I pumped in and out of her. Really deep and fast. I knew she wasn't going to last very long. I thought about slowing down, about making it last just a little bit longer. But then a little voice in my head reminded me I wasn't even supposed to be there in the first place. So, I sighed and let my thumb join in the fun, rubbing circles around her clit as I continued to thrust my fingers into her.\n\nShe came undone in no time and I fought the urge to look at her face again. I didn't stop touching her. I let her ride out her orgasm for as long as possible before gently pulling out of her. Instinctively, I stuck my fingers in my mouth, relishing her taste. \n\n\"Fuck me,\" she sighed out. Her breathing was heavy. But she looked relaxed, serene. \n\n\"Just did,\" I quipped with a grin before sliding backward and away from her. She reached out for me, but I just pulled even further away. I made a show out of standing up and stretching my arms above my head. \n\n\"Hannah\u2014\" She sat up and readjusted what she was wearing. Everything was disheveled, but at least her clothes were still on her. We were both fully clothed. \"What's going on?\" \n\n\"Nothing's going on,\" I said lamely. \"Like I said, work was a bitch and I'm super tired, so I guess I'm just not in the mood.\"\n\n\"Then why'd you even come over?\" She didn't even bother to hide the fact that she was annoyed at me. \n\nI shook my head. \"I meant I'm not in the mood to get off... Seriously, I'm fine,\" I explained. I then looked her straight in the eye. \"But Ellie, I'm always in the mood to fuck you.\" The way I said it made it sound lighthearted, casual, but it was one of the truest truths I'd ever known.\n\n<center>. . .</center>\n\nEllie: Thanks for last night... Really needed that. \n\nI was thankful that technology made it possible to just react to text messages. I gave Ellie's little thank-you text a quick thumbs-up instead of an actual reply, clearly 'not making an effort.' Unfortunately, last night was the exact opposite of what I'd needed... Neither emotionally nor physically. As further evinced by the fact that I couldn't keep my eyes open in the office despite the numerous cups of coffee I downed. \n\nEllie wouldn't let up until I was out her door last night. She'd asked me again and again why I was being weird. And I just repeatedly told her I wasn't being weird. I kept denying that anything was amiss. I knew she didn't believe me, but what could I have possibly said to her? \n\n\"Oh, well, you see... I know I said I was cool with this set-up of ours, but apparently, I caught real feelings for you. And now, everything hurts way too much. My bad!\"\n\nIf I told Ellie that\u2014if she found out... She would've surely wanted to end things. And despite all my promises to myself that I was going to stop being her little plaything, I knew it would've absolutely destroyed me if she completely cut me off. I wasn't ready for that yet. I was still holding out hope that my confusingly painful feelings would miraculously go away or at least fade into something more tolerable. And I could've gone back to just blissfully fucking around with my smoking hot goddess of a neighbor. \n\nI wished and hoped that my brain would somehow rewire itself into thinking: 'Hey, actually, you know what... This isn't so bad!' \n\nIt wasn't completely outside the realm of possibility... At the start, sex with Ellie was always so fun, so intoxicating. Being with her used to feel like I was in the earliest stages of a great high, knowing that I was definitely heading toward a peak that'd ignite every single one of my senses. \n\nI thought back to how things first started, back to how we met. If I knew then that all of this was going to end up hurting me so goddamn much, would I still have opened my mouth in the elevator? Yeah, probably. Because if I didn't, I would've missed out on all the amazing things, too.\n\n<center>. . .</center>\n\nEight months earlier...\n\nI frowned at the sight of two women blocking the entrance to my apartment building. They were clearly in the middle of some argument. I paused the music I was listening to. I planned to say a polite 'excuse me,' so I could get home. Right before I found my voice, the blond-haired woman abruptly turned and stomped into the building. She just left the other woman angrily staring at her. \n\nIn moments, I found myself in the same elevator as 'Little Miss Abandoner.' I tried to bite my tongue. I should've bit my tongue. I didn't bite my tongue. \n\n\"Girlfriend troubles?\"\n\n\"What?\" She sounded curt, but I couldn't blame her. She was clearly riled up by whatever I'd witnessed outside. Her blue eyes landed on me and everything seemed to get just a little bit warmer. \"She's not my girlfriend.\" \n\n\"Oh.\" I hid my smile by looking away. \"I'm sorry, I just thought\u2014\" \n\n\"Apparently, she did, too.\" The pretty woman rolled her eyes. \"Why are the hot ones always so crazy?\" The little drama show outside made me think she was gay, but I was glad for the confirmation. \n\nHer statement had me chuckling. I looked at her, taking everything in. Her shoulder length blond hair, her impossibly blue eyes, her porcelain-like skin. She was maybe two to three inches taller than my 5'4\". There was something about her. I knew from the jump that she would've been able to stand her ground anywhere, against anyone. It was the way she carried herself. \n\n\"If that's true, then you're probably batshit bonkers, huh?\" I flirted shamelessly before tucking some of my hair behind my right ear. Could anyone blame me? I just found out she was probably single... Nothing ventured, nothing gained, right? \n\nShe grinned in response before finally really looking at me. \"Hi, I'm Ellie.\" She extended her right hand which I shook. The contact was brief, but it was at least long enough for me to notice how soft her skin was. \n\n\"Hannah. I\u2014\" I introduced myself before getting cut off by the elevator doors sliding open to my floor. \"This is me...\" I disappointedly stepped out. \"I guess I'll see you around.\" \n\nShe gave me a quick wave goodbye and I silently cursed at how short our time together was. \n\n<center>. . .</center>\n\n\"Hey, you.\"\n\nI looked up from my phone and directly into blue orbs. Ellie was getting on the elevator, a couple of grocery bags in her arms. Despite being neighbors, it'd taken more than two weeks before we ran into each other again. \n\n\"Hannah.\" I reminded her what my name was. \n\n\"I remember, silly.\" She laughed and I couldn't help but grin back like an idiot. She remembered me. \"You're the girl who said I was batshit bonkers.\" \n\n\"I feel like context is really important here,\" I replied. I wondered if my smile could've gotten any bigger. \"Just don't forget when I called you crazy, I was also calling you hot.\" I knew I was being a lot more forward with my flirting this time around, but she'd unknowingly taken up a lot of my thoughts since I first saw her.\n\nShe tilted her head. Her expression was equally playful and amused. She didn't seem bothered at the slightest by my blatant flirting. I bet people hit on her all the time... She was seriously gorgeous. I was about to say something else stupid when she swiped my phone out of my hands. She did something then quickly handed it back to me.\n\n\"What\u2014\" Before I could finish my question, the elevator doors slid open to my floor. I sighed at the fact that our conversation was getting cut short yet again. My obvious disappointment seemed to just add to her amusement. \n\n\"Just text me.\"\n\nI stepped out and she gave me another quick wave. I looked at my phone's screen and saw that she'd added herself to my contacts under 'Ellie (Hot but Bonkers).' To answer my earlier question... Yes, it was apparently possible for my smile to get even bigger. A lot bigger actually. \n\n<center>. . .</center>\n\nEllie and I had been texting on and off for about a week. I'd learned that she wasn't just a pretty face. She was also quick and witty (and oh so funny). The more I talked to her, the more my crush on her grew. Whenever she said something flirty, it was as if my cheeks were set on fire. Every interaction I had with her always left me feeling giddy. \n\nMy phone chimed and I grinned when I saw who the message was from. \n\nEllie: What are you up to tonight?\n\nMe: Nothing much, just staying home. \n\nI'd hesitated before sending the last text. It was a Friday and I was worried that my non-plans made me seem boring. I was by no means a 'homebody,' but work had been gruesome, so I'd declined my friends' invites to grab a drink to celebrate the weekend. Opting to just get some rest. When I didn't get a reply, I double texted. \n\nMe: You? \n\nIt took quite some time for her to write back, but when she finally did, I didn't like what I read. I felt a pang of jealousy then a pang of sadness in quick succession. I shook my head. I reminded myself that I had no business feeling either of those emotions. \n\nEllie was just a friend. A new friend. We didn't even really know each other.\n\nEllie: On a date. It's not really going too well. \n\nI locked my phone without replying and ignored it for the rest of the night. Even if her date wasn't going well, I didn't need to hear about her being with someone else. I got ready for bed and tried my best to not think about her.\n\n<center>. . .</center>\n\nWhen I woke up the next day, I saw that I had two unread messages from the woman I'd tried (and failed) to stop thinking about the night prior. For the briefest of moments, I thought about just ghosting her, cutting my losses before I had any more unwarrantedly intense reactions. \n\nEllie: You up?\n\nEllie: Talk to you tomorrow then. \n\nThe second text had come in a lot later and it had a red heart at the end. I groaned. I knew it was futile, there was no way I was going to stop talking to her just because I got irrationally jealous. I liked talking to her, I liked how I felt when I was talking to her. I was definitely attracted to her, but that didn't mean I couldn't be friends with her, right? \n\nMe: Hey, sorry. I passed out. How was the date? Did it get better? \n\nHer replies came immediately and I found myself sitting up straighter on my bed. \n\nEllie: No. It was supposed to be dinner and drinks, but I bailed right after dinner.\n\nEllie: Still wanted that drink, but the friend I was planning to invite apparently passed out. \n\nThere was a winky face in the mix and I felt my heartbeat getting faster. I couldn't understand why I found everything she said so electric. No, that wasn't the right adjective... Her words were\u2014incendiary. Every interaction we had seemed to be a precursor to something explosive. \n\nMe: What's wrong with this friend of yours? Who in their right mind would turn down a chance to spend some time with you?\n\nI played along, sending out a heart-eyed smiley. \n\nEllie: Mm, not sure, you know what they say about the hot ones... \n\nI dropped my phone onto my bed before burying my face in my pillow and groaning. I felt crazy. I couldn't stop smiling. It was too early in the day to be as giddy as I was. I replied with an equally flirty message then forced myself out of bed. I needed to go on a nice, long run to clear my head. \n\nI brushed my teeth, washed my face and then stripped off my sleeping clothes. I took a moment to examine myself in my bathroom mirror. My tanned skin had a golden glow, my brown eyes were larger than average, my straight dark brown hair was nice and thick. I was okay. I compared my features to Ellie's. Her boobs were definitely bigger than mine, but based on the little I'd seen, I assumed I was a bit more toned than her. There was no contest though. She was leaps and bounds hotter than I was, leaps and bounds hotter than anyone else I knew. \n\nAnd yet, she thought I was hot, huh? \n\nIt wasn't that I thought I was unattractive or ugly. I knew I did my best to take care of myself. It was just that the compliment had come from Ellie, so it was kind of like Einstein calling someone else smart. \n\nMy whole run was plagued with thoughts of everything I liked about her. \n\n<center>. . .</center>\n\nI really shouldn't have let Ellie order us a fourth round. It was a Tuesday night. But she'd somehow convinced me it'd be a good idea to go with her to a lesbian bar within walking distance of our apartments (despite my reservations and excuses). I'd never really been much of a drinker, so the three drinks I'd already had were more than plenty. Combine the alcohol with whatever effect she naturally had on me, it felt like my entire planet was spinning... Well, the planet was always spinning, but it was spinning\u2014Faster? In reverse? I was wasted and I knew it.",
        "Ellie knew it, too, but she seemed to be enjoying the show, which was why she was actively contributing to my already evident intoxication. \n\nEach time I caught her staring at me, I had to look away. She was so pretty and stylish. The short navy-blue dress she was wearing looked perfect on her. I picked up a paper napkin to dab at my face. The heat from the alcohol in my veins compounded with the inexplicable warmth I felt whenever I was around her was verging on uncomfortable. I downed more of my cold water before quickly standing up. The room spun even more. \"Bathroom.\" \n\n\"Wait, I'll come with\u2014\" \n\n\"No,\" I declined. I left my purse on the table, hoping that the responsibility of watching over our things would've been enough of a deterrent against her following me. \"I'm okay, just need to pee,\" I rushed out.\n\nIt was really 50/50 as to whether or not I'd also puke, and in case I did, I didn't want her to see or hear that. I did my business (thankfully, I didn't hurl) then washed my hands at the sink slowly. I took deep breaths, inwardly giving myself a pep talk to keep it together while also berating myself for being so messy. I didn't want to be shit-faced around her. She was so perfect, pretty, elegant.\n\nShe was... Behind me. \n\nI locked eyes with her in the mirror and her clear concern made my legs feel even more like jelly. She had both our purses with her, one on each shoulder. She looked so prim and proper as if the drinks had no effect on her at all. I wondered if she drank a lot. Maybe her tolerance was really high? \n\n\"You okay, babe?\" \n\nThat little word at the end caused a new wave of spins. I squirted more soap onto my already very clean hands, restarting the whole process. \"Fine,\" I squeaked out, unsure if she'd caught the first leg of my impromptu hand-washing marathon. I finally turned off the faucet and my hands felt all pruney. She gave me a couple of paper towels then grabbed my left hand after I was finished drying both of them. \n\nAs if things weren't bad enough, now it probably felt like she was holding hands with a clammy geriatric. It was strange, the mix of embarrassment and elation I was feeling because of her touch. It was the most physical contact we'd had thus far and although it was so innocent, I felt my skin heating up even more. There was no way I could've drunk the fourth vodka martini on our table. I no longer cared if she found out I couldn't keep up with her. Looking weak was preferable to making even more of a fool out of myself. \n\nTo my surprise, she didn't lead me back to our table. She led me out of the dark bar and I welcomed the feeling of the cold night air. It was refreshing. \"But what about\u2014\"\n\n\"I settled the bill and asked the waiter to send our drinks to these two cute girls as soon as you left for the restroom,\" she explained without looking at me. She tugged me along toward our building. I tried to pull away from her at the mention of 'two cute girls,' but she didn't let me. Instead, she held on even tighter. Her thumb was drawing small circles on the back of my hand as she led us home. \n\nJust how cute were these two girls?\n\nI tried to recall if I saw anyone particularly good-looking, but then I realized there was no point since I only had eyes for Ellie while we were there. If there'd been a crime and I was asked by the cops to describe the perpetrator, I probably would've conjured up the likeness of 'Casper the Friendly Ghost.' I noticed that she was still carrying my purse, so I took it away from her despite her reassurance that she could hold on to it for me. I looked helpless enough. \n\nI wanted to say something. I wanted to explain to her that I wasn't always this... Game-less? I didn't exactly know how to describe myself in that moment. But I knew for sure that I wasn't acting the way I wanted to act around her. I wanted to be as fun and flirty as I was whenever we texted back and forth.\n\nI wanted to be as engaging as possible in the hopes that she'd find me even a fraction of how attractive I found her. She was so, so out of my league and that thought made my stomach turn. We were heading into our building before I knew it and for the first time ever, I was a little glad we were parting ways.\n\nShe didn't press the elevator button for her floor though. Instead, she followed me out before asking me if she could come inside for a bit. My skin was suddenly on fire. Did she want to..? I looked at her, opening and closing my mouth. Unsure whether or not I wanted to make up some excuse and ask for a raincheck. The way we spoke to one another was extremely flirty, but neither of us had made any concrete moves. I mean, I definitely wanted to, but I didn't think I wanted to like this.\n\nNot like this.\n\nI wasn't the type to casually sleep with someone. I liked to get to know a person before hooking up with them. I thought back to the woman (whose name I didn't know) who Ellie was arguing with a couple of months ago. The woman who was clearly into Ellie but was not Ellie's girlfriend. \n\nEven if I were, against my better judgment, willing to hook up with Ellie tonight because I was pretty sure a big part of me wanted to jump at the chance, I didn't trust myself to perform very well. I was still very drunk. And the thought of disappointing her in bed was an even bigger disincentive than my MO of not having random, meaningless sex. \n\nHm, but sex with her could've never been random or meaningless, right? Maybe random in the context that sex wasn't originally on the table tonight, but she wasn't a random person I'd just met... We'd known each other for around two months. We'd hung out a bunch of times. We texted on an almost daily basis. And I could've never found anything I did with her meaningless. \"I don't\u2014\"\n\nShe cut me off. \n\n\"Don't worry, no funny business, I promise.\" She squeezed my hand. Her gaze was both playful and reassuring. Just like that, the decision had been made, I let her in. \"Your place is so cute,\" she gushed, finally letting go of my hand to walk around the small rented space. I immediately frowned at the loss of contact. \"I love this...\" She commented, pointing at a small framed watercolor portrait of me on the wall that an ex-girlfriend had made.\n\n\"Thanks,\" I replied, not really sure what else I could've said in return. \"I'll be right back. Make yourself at home.\" \n\nI escaped into my bathroom. The only room in my little studio apartment with four solid walls. What were we doing? Why was she even here? I looked at my face in the mirror and noted that my makeup was a mess. I decided to just take it all off and wash my face. Might as well get ready for bed while I was in there... I grabbed the black shirt and girl boxers that were hanging on a hook. I dressed up and brushed my teeth, wondering what she was doing outside. \n\nBy the time I was done, I realized I was a lot more tired than I'd first thought. I placed an unopened disposable toothbrush on my sink (just in case). When I emerged, Ellie seemed surprised by my sudden outfit change, but she didn't say anything about it. I studied her in her formfitting dress and low strappy heels. She was really nice to look at. \n\n\"So...\" I said, my eyes remaining glued to her. My reduced inhibitions made me feel like it was no longer a top priority to hide just how much I liked staring at her. \n\n\"So...\" She mimicked before plopping down on the edge of my bed. \"Sleepy already?\"\n\nI shrugged and nodded at the same time, probably confusing the hell out of her. \"I don't usually drink that much,\" I added as if that little fact wasn't already blatantly obvious. Before I lost my nerve, I crossed the room to grab her a clean, loose shirt from my wardrobe. I handed it to her and told her about the toothbrush I'd left out.\n\nThe ball was in her court. \n\nShe excused herself to go to the bathroom. I slipped under my sheets on my usual side. I was impatient. I wanted her to fill the empty space beside me already. \n\n\"Come here,\" I whispered out as soon as she was back. I decided to finally take a more active role in what the hell it was we were doing. I watched as she neatly set aside her folded dress. The air I was breathing in became a lot more charged once she was under the covers. She was so close. We were as close as could be without actually touching. I used an app on my phone to turn off the overhead lights before switching on my bedside lamp. I made sure to keep the lighting dim. She was way too pretty to be in a completely dark room. \n\n\"Well, I'm here.\" She broke the silence first. But I was the one who touched her first, reaching out to cup her cheek. Her skin was incredibly soft. In my twenty-four years of life, I'd never wanted to kiss anyone as much as I wanted to kiss her. Not even remotely close. \"No funny business remember...\" She reminded me when my eyes darted to her lips.\n\n\"Then what are we doing?\" I questioned confusedly. Did I misread what was going on..? My head was swimming. I pulled my hand away, instantly regretting my earlier invitation for her to join me in bed. \"Maybe you should\u2014\" She cut me off by reaching out and easily pulling my whole body to her, hugging me as tightly as she could. \"Ellie...\" Even if she was wearing my shirt, I could still smell her perfume. She smelled expensive. The scent was so intoxicating. I felt exactly like I did when I'd finished my third martini earlier in the night. \n\nI didn't think it was possible, but I was even more confused by what was going on. Ellie held me, tight then tighter, cuddling into me until all of my senses were full of her. If the warmth I'd felt earlier was like a match flame, then this was like a full-on forest fire. She pressed her face in the crook of my neck, wrapping both of her arms and one of her legs around me. \n\n\"Drinking always makes me want to cuddle,\" she told me softly. The information gave more sense to the earlier 'babe incident' and all of the hand-holding that followed. She was a touchy-feely kind of drinker. \"Is this okay?\"\n\n\"Yeah,\" I breathed out. I felt like she knew she didn't even have to ask. I felt like she knew I would've let her do anything to me. \"Good night, Ellie.\"\n\n\"Good night.\" I felt her lips touch the skin on my collarbone ever so lightly before I drifted to sleep.\n\n<center>. . .</center>\n\nAs someone who enjoyed having time to herself, my constant need to be around Ellie surprised me. Even in previous romantic relationships, there were days when I'd needed to be alone and just realign for a while. I never felt that way when it came to her. As long as she wanted to see me, I did my best to make my way to her. \n\nMy attraction to her was so palpable at times, it physically hurt for me to think that we were just friends. I knew she knew that I found her attractive. It was impossible for me to hide it. I was just glad that she didn't seem to mind. If our constant flirty state was anything to go by, I think she enjoyed me having a crush on her. \n\nI enjoyed crushing on her, too. I'd grown to crave the feeling of warmth that spread through me whenever she was around. I'd quickly become addicted to how my body and mind responded to her presence. I was just so reactive to her, everything about her had me enamored in a way I'd never experienced before. So much so that every time she brought up something she was passionate about, I couldn't help but feel envious of whatever topic was able to pull so much raw emotion from her. When she believed in something, she believed in it wholeheartedly. When it came to her core beliefs, there was really no way to make her join the other side. \n\nAn example of these core beliefs were her nihilistic views on relationships and monogamy. For her, all relationships were destined to fail, so what was the point of chasing 'happily ever after?' I wasn't sure who / what made her adopt such a bleak outlook on love and marriage. I was incredibly curious. But when she'd ignored the question the first time I asked her about it, I didn't bring it up again. \n\nI really wanted to change her mind though\u2014or at least expand her viewpoints. I'd once asked her to imagine how rewarding a real relationship could be, how nice it'd be to come home to someone every night who you knew loved you. But she just kept shutting me down. Over and over again. When it came to our relationship views, we were clearly at an impasse. I dreamed of having one person to love who'd love me in return for the rest of my life, while Ellie dreamed of a life full of 'self-love' (which according to her, consisted of a lot of love from strangers aka one-night stands). \n\nIt made me sad to think that at only twenty-seven, she'd already written off the possibility of ever finding true love. I couldn't stop wondering about what made her so pessimistic, so anti-relationship. Perhaps my sadness about the whole thing was to some extent the consequence of my attraction to her... But most of it had resulted from the idea that Ellie (who was hands-down one of the most amazing people I'd ever met) was going to spend the rest of her life hooking up with women whose names she wouldn't be able to remember in three years' time. \n\nSpeaking of, one topic I hated hearing her talk about was dating. It annoyed me to no end whenever she'd bring up the many, many dates she constantly went on. How she met some cute girl in some place, blah, blah, blah. Those conversations I tended to mostly tune out. Each story ended with her usual rant about how annoyingly clingy Miss A, Miss B or Miss C had become anyway. \n\n\"I mean, why can't things ever just stay fun?\" She grumbled. \"On the first date, I made sure to explain to her that I'm not in the market for anything serious,\" she recounted. \"And yet, here I am again, having to 'break up'\u2014 \" She used air quotes, which I found adorable. \"With someone who told me we were on the same page with the whole no-strings-attached thing!\" \n\n\"I don't know, Ellie... Can you really blame her for wanting more?\" I asked before taking a sip of my warm coffee. I was looking right at her. \"I mean, she'd be dumb if she didn't at least try to lock you down.\"\n\n\"Always such a sweet talker, Hannah.\" She grinned at me before reaching across the caf\u00e9 table to grab my free hand. I felt sparks. \"Having a friend like you is so good for my ego.\"\n\nFriend.\n\nShe'd called me her 'friend' so many times at this point, it barely stung anymore. She was always going on and on about how much she loved having a 'girl friend.' As someone who'd only had girlfriends and guy best friends, she made it a point to tell me how glad she was that I was in her life. She'd told me that ever since, it was just easier for her to make friends with dudes. Probably because she grew up in a house with three brothers. She'd said that friendships with guys tended to be a lot less complicated and since I (a girl) was friends with her (a girl), I wholeheartedly agreed. \n\nI'd never brought it up to Ellie, but she confused the fuck out of me. Whatever we were doing made my head spin without fail. What we had may have been platonic, but never had I ever had a friend like Ellie. It seemed like whenever we were together, her hands were all over me. If we were out in public, she'd either hook her arm through mine or hold my hand. If we were alone, she'd cuddle with me for as long as possible. She never touched me inappropriately, but she was constantly touching me. She pulled me to her as often as she could. Her fingertips were always caressing as much of my skin as she could reach. None of it may have been sexual, but it still set my entire body ablaze. \n\nHell, I was pretty sure that she'd touched me more in the few months I'd known her than some of my earlier girlfriends. It boggled my mind how easily she'd set up camp in my life, becoming such a large part of it in such a short amount of time. Since we met, no day had passed where she didn't plague my thoughts. It seemed as if she was always, always on my mind.\n\n<center>. . .</center>\n\nEllie: Wanna grab dinner or something after work tonight?\n\nI bit my lower lip. I wanted to. I knew I would've preferred having dinner with her than the person my friend had set me up with. First dates were always so awkward, it would've been so much easier to just hang out with Ellie. I knew I would've enjoyed it more.\n\nBut ever since I met Ellie, I'd neglected basically everything else in my life. And unlike her, I wasn't going out every weekend to do god-knows-what with god-knows-who. So, for the sake of my own sex life, I had to ignore her tempting offer and do the right thing for me. Because if I didn't start going on dates again, I'd never date anyone... I'd remain celibate, continuing to fall down my 'Ellie rabbit hole' ad infinitum.\n\nAnd as infatuated as I was with Ellie, I knew we wanted completely different things. \n\nMe: I can't... Have a date. \n\nI was nervous about sending her the message. I wasn't sure why... She talked about dating other people all the goddamn time. I didn't know why I was stressing over telling her I was going on one date. \n\nEllie: Ooh. Is she hot?\n\nI rolled my eyes. Based on the pictures I'd seen, my date was good-looking for sure, but 'hot' had become such a relative descriptor for me. It was hard for me to describe anyone else as hot since the benchmark had become Ellie. I wasn't going to tell her that though.\n\nMe: Definitely. \n\nI typed out my reply and placed a fire emoji. I watched the three dots appear and disappear. Not for the first time, I wished I knew what she was typing but hesitating to send. I was startled by my phone suddenly ringing, 'Ellie (Hot but Bonkers)' flashing on the screen. I picked up but kept my voice low.\n\n\"Hotter than me?\"\n\n\"What? Um... No,\" I conceded softly, my cheeks burning at the admission. \"Why are you calling?\" I asked quietly as my eyes darted around my office space. \"I'm still at work.\"\n\n\"What are your plans?\"\n\n\"Just dinner.\"\n\n\"Then?\"\n\n\"Uh...\" I paused. \"Home?\" I answered unsurely. \"Ellie, I have to\u2014\" \n\n\"Hers or yours?\" Her tone was clearly playful, teasing even. I wished I could see her face. At the start of the call, I thought there might've been a chance that her interest in my date was motivated by jealousy, but her tone reminded me that it was probably just Ellie being Ellie. She couldn't have been jealous because she didn't want me like that.\n\nI scoffed, feigning offense before laughing. \"It's our first date... I'm going home to my apartment alone,\" I stressed the last word. \n\n\"Good.\" With that, she hung up. I blinked at my phone's screen.\n\n<center>. . .</center>\n\nThe date went well. She was smart. She was cute. She was nice. For the most part, I was able to keep my attention on her. But there were some slip-ups here and there where Ellie's face had popped into my mind. My date was a catch and I definitely would've been interested in getting to know her better if I didn't feel so guilty about secretly comparing her to my blond-haired, blue-eyed neighbor.\n\nWe hugged and bid each other a polite goodbye after the meal. I was glad she didn't bring up a second date. It saved me the trouble of coming up with an excuse. I made my way home and thought about Ellie. \n\nLater in the night, she texted me. \n\nEllie: So...\n\nMe: Hi. \n\nI smiled at my phone. It was insane to me how my body reacted way more to the one-word text from her than it did during the two-hour date I'd gone on earlier. I was just way too responsive when it came to her. \n\nEllie: Home already? \n\nMe: Yup. \n\nMy phone rang and I answered her call immediately. \n\n\"How was it?\" She asked. \n\n\"Good.\"\n\n\"Good enough for a second date?\"\n\n\"No,\" I answered honestly. \"She was great and all but... There was just no spark.\" I blushed. I was so glad she couldn't see me. I wondered if I'd ever feel a spark with someone else again... And if there was one, would I even notice it?",
        "One spark seemed so hard to observe, especially given how whenever I was with Ellie, there were 'fireworks.' \n\nIf she became the ruler I used to measure everyone I met, then I'd be screwed. \n\nThankfully, she dropped the subject without further inquest and started telling me about her day. We just spent hours talking on the phone, about anything and everything. I wished I knew how talking to me made her feel. I hoped it made her even a quarter as happy as talking to her made me feel.\n\n<center>. . .</center>\n\n\"I hate my job,\" I complained as I approached Ellie. \"I'm so sorry I'm late.\" I sat down on the seat in front of her. I felt super bad because I was almost an hour late for our dinner plans. I looked around the packed restaurant we were in. I knew full-well that I would've hated being the one who had to sit there all alone. \n\nEllie looked completely comfortable though. She was more than capable of just sitting by herself and drinking a glass of wine without feeling self-conscious. \"No worries at all.\" She handed me a menu before placing her hand on top of mine. \"I suggest their ravioli 'cause it's like my favorite thing in the world, but you should check out what else they have tonight first.\"\n\n\"No, I'm good, I'll just have what you're having,\" I replied, making no moves to open the menu or pull my hand away from hers. She easily got the server's attention and ordered for us. I caught the guy glancing at our clasped hands on the table. I wondered if he thought we were a couple, like all the other ones in the room. The establishment we were in was apparently a prime date spot. \n\nHow many women has Ellie brought here? How many women has she ordered ravioli for? How many women has she held hands with, on top of a table, in full view of any passerby? \n\nI sadly reminded myself that the answers to all of my questions were none of my business. \n\nEllie didn't let go of my hand until our food came. As we ate, she told me all about her day. She brought up anecdotes about her colleagues as if I'd meet them someday. Like always, I was perplexed by what we were doing. I knew that I wasn't her girlfriend, but the way she spoke to me as if she'd been waiting all day to give me her rundown of events was such a 'girlfriend-thing' to do. \n\nI wanted to ask her about us. I wanted to gain better insight into how she'd describe what we were doing. But I was afraid that if I did, she'd begin to act differently. I was probably just placing too much meaning in her words and actions anyway. I needed to constantly remind myself that I was an anomaly when it came to her friendships. Maybe since having a girl friend was so new to her, the only way she knew how to treat me was like a girlfriend. \n\nI didn't really mind, to be honest. Sure, there were things I secretly struggled with. Like the knowledge that she was still going on non-platonic dates with potential girlfriends (albeit short-term ones) who could 'sleep with her' in a way that I couldn't. But I knew I meant more to her than the warm bodies she picked and discarded without much thought. \n\nHer conduct may have fucked with my head non-stop, but that was a small price to pay in the grander scheme of things... I loved being the one she could talk to about the little things. I wanted to be a constant in her life. I knew she had other friends, but I was pretty sure that she wasn't as candid with them as she was with me. I knew in my heart that she was comfortable enough to tell me anything.\n\nI wanted to be her person. The one she could always run to. I wanted to be right by her side as she navigated the world. \n\nWhen the bill came, I grabbed it and paid despite her repeated protests. I knew she made a lot more money than I did, she had an actual career while I had a job. But I wanted to pull my weight when it came to us. I didn't want her to think I was spending time with her for any reason other than the truth. I just loved how she made me feel.\n\n<center>. . .</center>\n\n\"There's no way you're not tired right now.\" Ellie panted, bending over slightly as she tried to catch her breath. I glanced at her ass. What? I may have accepted that she wasn't into me, but I was human and she was too sexy not to admire. It was basically like appreciating art. \"How are you not tired?\" She demanded with an amused smile. I knew she caught me looking.\n\n\"I told you not to come,\" I reminded her with a teasing grin of my own.\n\nShe looked so cute in her little workout outfit, it was killing me. With her matching teal running shorts, tank top and shoes, Adidas should've seriously cut her a check. I glanced at her chest which was still rising and falling. Her sports bra was showing a bit. Suddenly, I felt like I was overheating even though I wouldn't have classified what we just did as a 'run.' It was more like a 'warmup' for me. \n\nBut I ran all the time and although Ellie was incredibly fit, she had no chance of keeping up.\n\n\"I should've listened,\" she conceded with a laugh. \"No regrets though...\" She let her words hang in the air for a bit. Her blue eyes danced wickedly as they darted up and down my body. \"I really enjoyed the view.\" \n\n\"Ellie...\" I looked away. My face was on fire. \n\n<center>. . .</center>\n\nI wasn't surprised to see Ellie standing on the other side of my apartment's door, takeout bags in hand. We had no plans but planned or unplanned, it seemed like we always ended up spending time together. I let her in and gave her a quick hug before going back to my laptop on my bed. I had to finish sending out some work emails. She'd been over often enough anyway to know where everything was. \n\nOnce I was done with my computer, I looked across my apartment and just watched her. I really should've helped out, but I was enjoying looking at her too much. She moved around so comfortably, she was so familiar with everything, like it was her home, too. \n\nFor a moment, I lost myself in a fantasy of domestic bliss with Ellie. Going home to her at night, waking up to her in the morning. The sight was too sweet, too idyllic. It couldn't have been anything but a dream. \n\n<center>. . .</center>\n\nLike everything else we did with each other, the semi-regular platonic sleepovers were just seamlessly integrated into our routine. Unlike our very first sleepover though, we were at Ellie's place, on her bed. Her apartment was a two-bedroom unit that was exquisitely decorated by a paid professional. Being surrounded by all those nice things always made me feel like she was slumming it whenever she came over to mine. \n\n\"I'm so horny,\" Ellie complained without warning, burying her face in my neck. I knew it was a bad idea to let her polish off almost a whole bottle of wine (I only had two half glasses), but she'd been upset because of something that'd happened at work... So, at the time, it'd seemed like a great way to help her take the edge off. \n\nAnd to be honest, I liked drunk Ellie a lot. Drunk Ellie could never keep her hands off me. Even more so than normal. \n\nI felt my heart begin to race. I knew the scandalous comment was just Ellie being Ellie. She had no filter around me anymore. She just blurted out whatever was on her mind. She was horny... Well, it made sense. We'd started spending most nights together, catching a movie, grabbing a bite to eat, going out for ice cream. And since she was always with me, that meant she wasn't out looking for a random and meaningless encounter to satisfy her urges.\n\nCome to think of it, I couldn't even remember the last time Ellie had told me she was going on a date. She didn't sleep with every single person she went on a date with, but she usually had multiple dates a week. Something about not liking being home alone at night. During that specific conversation, I'd struggled to keep my mouth shut. I'd wanted to volunteer to keep her company every night. \n\nI usually didn't pay her little outrageous comments too much attention. But being so tightly wrapped up in her and also being pretty tipsy... I apparently had no filter either. \n\n\"Same,\" I said, clearly surprising us both. She pulled back a bit to look at me. Her already striking eyes shone even more at my admission. \"What?\" I shrugged, trying to play it cool. \"I get horny, too.\" \n\n\"I'm sure you do.\" She grinned. Her straight, white teeth on full display. She was enjoying the conversation a lot more than I was. \"You just haven't brought up your sex life before, so now I'm all ears.\" \n\nApparently, this was what we were going to be doing. \n\n\"Well, there's nothing to bring up,\" I replied, losing myself in her eyes for a few seconds. \"I haven't had sex since I broke up with my last girlfriend, like ten months ago?\" I acted as if I didn't know the exact date when my last relationship had ended. I remembered... Heartbreak, even the smallest amount of it, was never easy to forget. \n\n\"Wow, I can't even imagine.\"\n\n\"I'm sure you can't,\" I said pointedly with a teasing smile. \"I don't know, I just haven't met anyone new I wanted to date.\" I shrugged my shoulders again. It was a lie. There was someone I wanted to date and she was basically on top of me.\n\n\"I don't think we're discussing dating right now,\" she countered. \"Just sex.\"\n\n\"Well, for me, those two things go hand-in-hand,\" I reminded her and she broke eye contact. \"I mean, I'm not judging you for how you live your life, I swear.\" I guided her face, so she was looking at me again. \"I'm totally cool with it. But sex with strangers just really isn't for me.\" \n\nI watched curiously as her perfect smile reappeared. Her blue eyes became even brighter. \"If sex with strangers isn't your thing...\" She began and I knew right away what she was going to say next. \n\nI thought I was done with my 'fire phases.' I thought I'd reached a stage in my friendship with Ellie where I didn't run the risk of exploding in her presence anymore. I was wrong. Suddenly, with no warning whatsoever, I was set ablaze by all the possibilities I'd already categorized as impossibilities. \n\nJust like that, sex with Ellie was apparently back on the table. \n\n\"How about sex with me?\"\n\nNow that the question was out there, there was no way for either of us to take it back. A look of uncertainty flashed on her face at my stunned silence, but she just shook it off. She was waiting for me to say something. \n\nSex with her? Ellie with her sexy body, Ellie with her divine smile, Ellie with her oceanic eyes, Ellie with her intoxicating scent... Ellie, Ellie, Ellie.\n\n\"I don't think that'd be a good idea.\" \n\nActually, sex with Ellie was a really, really bad idea. Like catastrophically bad. It was like skydiving into an active volcano without a parachute. I would've been basically volunteering to drown in a pool of lava. \n\n\"Why?\"\n\n\"What do you mean why? We're friends,\" I stressed. \"We can't have sex... I can't do that with you, no.\"\n\n\"Can't or won't?\" She challenged with a raised eyebrow and I pulled away from her. She was too close and the conversation was hard enough without her glitching my brain. \"You don't hook up with strangers? I'm not a stranger,\" she said as if she found a case-winning loophole. \"We're friends,\" she repeated.\n\n\"Yeah, we're friends,\" I echoed again. The title was starting to sound stupid since we were saying it so much. \"Which is why we can't. I don't wanna ruin our friendship.\"\n\nEven as I was making my case against sex with her, I knew my resolve was crumbling. Swimming in lava started to sound more and more appealing the longer I looked at her. I knew I could never have all of her... But here was a chance for me to have so much more of her than I'd originally allowed myself to hope for. Here was a chance for me to play out some of my Ellie-related fantasies, the R-rated ones at that. Why was I even hesitating?\n\n\"Hann, that's not gonna happen,\" she reassured me. And even if I knew she was jumping into this thing as blind as I was, it irrationally made me feel better. \"If fucking turns out to not be our thing, then I promise we could just go back to cuddling.\" To emphasize her point, she grabbed me again, pulling me in, close then even closer. \n\n\"Okay,\" I agreed softly. \n\nI shouldn't have yielded so easily. Saying yes to Ellie's request was tantamount to me turning my back on a personal maxim I'd always held. I should've given everything more thought, taken some more time to evaluate the pros and cons. But on paper, she was right... Sex with her wasn't going to be sex with a stranger. She was the furthest thing from being a stranger to me. \n\nAnd I was dying to know how sleeping with her would play out. Like, for real, my body was already so reactive to her 'innocent touches.' I was curious about just how badly she was capable of ruining me for all the ones that'd come after her. You know... For science. \n\nNot once in my life did I ever want to enter into a friends-with-benefits situation, but again, never had I ever had a friend like Ellie. \n\nMy heart was hammering inside my chest. I wasn't really sure if the deal we were making had any terms and conditions... Were we supposed to set guidelines? All I knew was that I would've regretted it more than anything if I passed up on the chance. \n\n\"But not tonight,\" I blurted when she angled her head to kiss me. \"Tonight, just cuddles... If we're gonna do this, we're not gonna be drunk the first time we have sex.\"\n\n\"But I'm not drunk,\" she argued, pouting at me. She was very much drunk. Her eyes locked on my lips. I almost caved. Almost.\n\n\"Well, I am,\" I half-lied. I wasn't drunk on the wine, but I was very much drunk on her. \"Not tonight,\" I repeated and she begrudgingly relented. Once again, I remembered feeling her lips against my skin before I drifted off. \n\nSince I already felt fire around Ellie while we were fully clothed, I imagined sex with her was going to be like flying into the sun. \n\n<center>. . .</center>\n\nI took my sweet time getting ready. I planned everything meticulously. I agonized over what I'd be wearing, whether or not the black lingerie I chose was good enough, or if I needed to make a quick stop at the mall. I sniffed all my perfume bottles, trying to figure out which scent Ellie would like on me the best. I stared at all of my eyeshadow palettes, wondering which color combination would make my eyes pop the most. \n\nAlthough my eyes were never going to come close to how striking Ellie's blue ones were, I was still going to give them a fighting chance. It was the most effort I'd ever exerted in looking good for someone. Honestly, everything I was doing to get ready was pretty excessive, but I just desperately wanted her to want me.\n\nI knew she probably already did to a certain degree... I mean, she had to, right? We wouldn't have been doing what we were doing if she didn't find me even kind of physically attractive. But I wanted her to enjoy it, to enjoy me. I wanted to show her that sex could be so, so much more than a meaningless hookup. I also didn't want her to regret having sex with me. \n\nAnd more than anything, I didn't want it to be a one-time thing.\n\nPartly because I was 100% sure I'd want to sleep with her again afterwards, but also partly because, like I'd told her, sex and relationships went hand-in-hand for me. And I didn't want my one and only 'one-night stand' to be with Ellie even though she was goddamn amazing. So, I wanted her to enjoy our time together enough to need it to happen again (and again, and again, and again if possible).\n\nI rode the elevator up to her floor and I felt butterflies in my stomach. The feeling was so strong, I made a dark joke to myself about how if the elevator suddenly plummeted, the invisible butterflies in my tummy would've been strong enough to carry me to Ellie's. My skin was already burning, my body was well-aware of what was to come. I absentmindedly counted the steps from the elevator to her door. \n\nSixteen steps.\n\nI rang the buzzer and when the door swung open, I lost my ability to breathe. Ellie stood in front of me, wearing an impractical robe that covered basically nothing. She was pretty much naked and I still felt underdressed in front of her. She led me to her bedroom. It was crazy to think that we'd woken up wrapped in each other's arms in that very same room earlier. And now, here we were, at night, about to be wrapped up in one another again but in a very different way. \n\nEverything was about to change. I should've been worried. I should've asked her some questions. \n\nMy desire for Ellie eclipsed everything else though. I'd lost all capacity to think, all rhyme and reason. Sure, tomorrow was full of uncertainty, but here and now with her? I was certain that if I didn't kiss her, I would've gone insane. So, I grabbed her face with two hands. My thumbs stroked her cheekbones. I stood on my tiptoes to press my lips against hers. The change in heat was instant and intense.\n\nKissing Ellie was a firestorm that was consuming me whole.\n\nShe deepened the kiss, and I lost myself even more in the feeling of her lips and mouth on mine. She set the pace and I willingly obeyed. All I could do was hold on to her as her hands ran rampant, wildly squeezing at all the parts of me she'd never touched before. She pinched my ass and I whimpered into her mouth. \n\nShe somehow laid me on her bed and removed my clothes. Leaving me in nothing but my lingerie while I was silently pondering why her tongue tasted so good. My brain was struggling to keep track of everything that was going on. My system was going completely haywire and I didn't know what to do. I wanted to be more present. I wanted to give as good as I was getting, but the onslaught of sensations was making it hard. \n\n\"Hey...\" She kissed my cheek before pecking my lips softly over and over again. \"Stay right here,\" she whispered in between kisses. She probably misunderstood the reason for my panicked expression, but that was okay... I found her light kisses calming nonetheless. \"I just want to make you feel good, babe.\"\n\nI nodded my head. I couldn't speak. I already felt amazing, so her promise to make me 'feel good' made me nervous. She kissed her way down my body, licking the exposed parts of my boobs before expertly removing my bra. The look of hunger in her dazzling eyes made me feel weak. Her tongue poked out of her lips before swiping at one of my already hard nipples. I groaned.\n\nI reached down to touch myself, but she intercepted my wandering hand. She clicked her tongue before shaking her head. She placed both of my hands above my head and told me to keep them there. I was struggling with the order, so I gripped her headboard in the hopes that having something solid to hold on to would make it easier for me to obey her. \n\nI squeezed my thighs together. I was delirious with need. She spent even more time (way too long, in my humble opinion) on my boobs, kissing, nipping and licking them. I was so desperate for her to fuck me in earnest. She'd teased me enough. It was merciless. I started grinding myself on any part of her I could reach, dragging my drenched panties over her skin out of pure, wanton need. \"Please,\" I begged with closed eyes. \"Please, babe, fuck me.\" \n\nFinally, I felt her lips move lower. She trailed kisses down my abs and I spread my thighs wide. I looked absolutely desperate for her to touch me. Thankfully, she didn't waste any time before removing my soaked underwear. I was expecting the loss of the garment to make me feel even a little bit cooler but... Nope. Every single part of me was still very much on fire. \n\nEllie licked the entire length of my pussy, from bottom to top and I moaned. If she started teasing me again, I might've just died. So, I dug my nails into her bedspread and I began moving my hips to hump her face. I needed to get off. After that, it was a flurry of movements, she grabbed my hips and buried her face even deeper into my cunt. She coaxed out orgasm after orgasm out of me. And when I thought I couldn't come anymore, she did something with her tongue and I lost it again.",
        "\"That\u2014\" I shook my head in disbelief. \"Fuck,\" I cursed, smiling stupidly. I was struggling to regulate my breathing. She crawled up my body before settling on top of me. She looked extremely pleased with herself. She leaned in to kiss me and I tasted myself all over her. As soon as I could breathe normally, I was going to show her smug ass that I was more than capable of going head-to-head with her in the bedroom. \n\nI was many things but a pillow princess was definitely not one of them.\n\n<center>. . .</center>\n\nEllie: Wanna come over? \n\nSticking to my usual pattern when it came to Ellie, I came running whenever she wanted to have sex with me. Every single time she looked for me, I'd be there as long as I wasn't busy with work (sometimes, even when I was busy with work). All other social events were back-burnered. \n\nMy top priority was sex with Ellie. \n\nWhatever doubt I had about her wanting to sleep with me again after the first night we'd spent together had dissipated instantly. It seemed like she couldn't get enough of me, too. I'd quickly memorized how she wanted to be touched. I'd made sure to take note of everything I did that could reduce her to a quivering mess. I'd mapped out her magical body, paying close attention to all the spots that made it impossible for her to do anything but moan out my name.\n\nShe was absolute perfection in my eyes. I really couldn't see one flaw on her. I'd told her that out loud once, right after she climaxed. In response, she'd begun listing all the things about her body that she didn't like. And I'd just gawked at her. How could someone who looked like her feel insecure about anything? Once she was done, I'd spent more than an hour going through that little list of hers, worshipping all of its contents. I'd hoped that each one of my licks and kisses could've erased whatever self-doubt she had.\n\nShe was the closest thing to an angel on this earth. \n\n<center>. . .</center>\n\nEllie: What are you doing?\n\nMe: Super busy with work stuff, big presentation tomorrow... I rather be doing you though. \n\nI placed a broken heart at the end. I wished I could've spent every second with her, but alas, I still had to keep a roof over my head. And to do that, I had to play my part as a little cog in the big corporate world. I rubbed my tired eyes. \n\nEllie: Can I come over? I promise it'll be quick. \n\nI really should've denied her request. I really needed to keep working. I really didn't have the time to do whatever it was that she wanted to do... But my resolve when it came to Ellie was nonexistent. So, within five minutes, she was in my apartment, kneeling in between my legs and eating me out as if she'd been dying to do so the whole day.\n\nThe sight of her so absorbed by what she was doing made me feel happy. I wanted to come badly, but I was doing everything I could to hold off. I found the view of her feasting on me while on her knees so erotic. I wanted an extended cut of the show. But there was no way I could've lasted very long. Not with the way her adept tongue was drawing circles around my clit, licking my folds then pushing into my opening. Over and over again. \n\nI came faster than I'd wanted to, but the quick release of endorphins definitely helped with the stress I was dealing with. I pulled her to her feet and kissed her deep then deeper, reaching between us to unzip her pants. She stopped me though, pecking my lips once, twice, thrice before pulling away. \n\n\"Come here,\" I whispered. I reached out for her. My need to touch her was so intense. It was making me dizzy. \n\n\"No. You have no idea how much I want to... But you need to get back to work.\" She gestured toward my desk where my laptop was displaying a blank slide. \"I just really wanted to do that.\" She pointed at my pussy and I blushed before hiking up my fallen shorts. \"Now, go finish your kickass report, you can just make it up to me next time.\"\n\nI was obviously disappointed by Ellie's early departure. But she was right. I would've had nothing to show my supervisors in the morning if she'd stayed. I made a mental note that I needed to make her come again and again, until she begged me to stop, the next time we saw each other. As a thank-you for the much-needed stress relief. \n\n<center>. . .</center>\n\nI was so glad we were at Ellie's. The way I was screaming as she took me from behind would've definitely caused my next-door neighbors to like me a lot less. We were always a little bit too loud during sex but tonight was... Extra. I couldn't stop yelling. Believe me, I tried. She wasn't holding anything back. She was fucking me frantically, uninhibited by anything. Her movements were rough and carnal, as if she was powerless against whatever force it was that was making her dominate me. I loved it. \n\nI was completely hers for the taking. \n\nWhen Ellie first brought out the strap-on, I shook my head and told her we didn't need toys. I wasn't very into the idea because in the past, the sex I had using one with other partners was lackluster at best. I had experience being the giver as well as experience being the receiver, and I preferred using my mouth and fingers during sex way more. \n\n\"I know we don't need toys,\" she agreed before dropping the sex toy on her bed. \"But this will be fun...\" She climbed on top of me and began kissing my neck. Her tongue was licking its way up and down my throat. She wasn't wearing anything, but I was too distracted by her proposal to immediately start ravishing her like I usually did. I let her do what she wanted while I stared at the light blue toy. \"Fuck,\" she breathed out against my skin. \"Okay, forget the toy, I really don't care if we use it or not. But can you please just be naked already? You're so sexy.\" \n\n\"Huh?\" I finally looked at Ellie's face. Her blue eyes were so dark. I felt like I could've drowned in them if I wasn't careful. \n\nShe was gripping my shirt, trying to tug it off me. I raised my arms, so she could strip me. In seconds, I was as naked as she was. Even as she licked and kissed my entire body, I couldn't stop envisioning her eyes and the animalistic look she'd sent my way. No one had ever looked at me like that before, with so much unbridled lust. Like she wanted to claim me, like she wanted to consume me whole. And if that was what she wanted, I was more than willing to let her.\n\n\"Babe...\" I only ever called her 'babe' during sex. She looked up at me from where she was licking at my thighs. \"Put it on.\"\n\nShe grinned and I thought she'd grab it immediately. But she didn't. She stayed where she was and continued what she was doing. She teased me until I begged her to move her mouth to my pussy. She then teased me until I begged her to make me come against her lips. \n\nAfter I'd climaxed, she finally put our little blue friend on and I would've been lying if I said I didn't get wetter at the sight of it jutting out from between her thighs. She was so sexy. Everything about her turned me on so much. Maybe strap-on sex wasn't my favorite thing in the world, but if fucking me with one was something she wanted to do, I was happy to oblige. \n\nShe placed a pillow under my butt then positioned herself between my legs. Her right hand guided the rubber dildo to my opening. She smeared my juices around with the tip. I was wet enough, but I still asked her to go slow. I watched, transfixed by the view of it slowly disappearing in me, inch by inch. I bit my lip, it felt foreign and I felt full, but I didn't dislike it. I gave the toy that was buried inside me a little squeeze, noting just how much of a tight fit it was. \n\nI finally looked up and I saw Ellie staring right at my face.\n\n\"You're so sexy,\" she repeated her words from earlier. My blush deepened, which was quite a feat since my skin had been flushed since I entered her bedroom. She reached out with her thumb to play with my clit. I squeezed the toy inside me again, this time involuntarily. I opened and closed my mouth. I wasn't sure why she wasn't moving. I wanted her to start moving. \"Mm?\"\n\nThe light circles she was tracing around my clit felt good, but I knew I was ready for more. She knew I was ready for more... And yet, she wasn't moving. I moved my hips, hoping she'd get the message, but she stayed still. \"Babe,\" I squeaked out, jerking my hips more noticeably. \"Can you?\"\n\n\"Can I?\" Her blue eyes were full of mischief and I finally figured out she was toying with me. I found it wicked, torturous\u2014I found it so hot... Instead of getting annoyed, I moaned loudly and uncontrollably at the realization. I was more than willing to be her little plaything. In response to the desperate sound I made, something snapped inside her. She scrapped whatever she was planning to do. She probably was going to make me beg her for it. Make me tell her just how much I wanted her to fuck me. How desperate I was to come with her inside me. \n\nBut the thing was... I didn't need to say anything. My entire body was begging her to fuck me. We both could see it, plain as day. She kissed me deeply then finally started rolling her hips. Her strokes were short at first to let me get used to the feeling. I mistakenly thought I was going to have to act like I was enjoying myself, but there was no acting necessary. I was loving it. \n\nShe began fucking me harder and I moaned out loud, over and over again. She didn't ask me to keep quiet. She let me scream at her ceiling as she plowed into me deep and hard. I wrapped my arms around her and dug my nails into her back. As I moved my body to meet her thrusts, I begged her not to stop, I begged her to go faster. \n\nWhen I was coming around the silicone cock, I wrapped my legs around Ellie, too. She lost her balance and dropped her full weight on me, burying the toy as deep as possible in our current position. I closed my eyes, loving how good it felt to be completely underneath her. I moaned in her ear. \n\nToo soon, she readjusted herself on her forearms, lifting herself back up but not pulling out. She studied my face as she gently started moving her hips again to see if I could keep going. I was pretty sensitive, but if she wanted more, I wanted more. I gave her a slight nod, and she began thrusting in and out of me again. Her pace was slow at first, but it became progressively rougher. I saw the telltale signs of an upcoming orgasm forming on her heavenly features. \n\n\"Wait\u2014\" I interrupted her. I asked her to pull out, so I could get on my hands and knees. I turned around to look at her. \"Okay, come get me,\" I rasped out. I felt my juices starting to drip down my inner thighs and I really needed to come again. And by the looks of her face, she really needed to come, too. \n\n\"Fuck, Hannah\u2014\" She shook her head, sporting the biggest smile. She bent down to lick the full length of my slit. She gave my left butt cheek a quick kiss with her lips before repositioning the toy at my entrance. She frantically pushed into me from behind and I squeezed my eyes shut. Unlike earlier, she didn't start out slow. \n\nHer hands gripped my hips tightly. She pulled me to her in time with each one of her thrusts, going deep then even deeper. Her thighs were slapping against my ass and I was screaming at the top of my lungs. I felt so full. Her pace was brutal but in the best way possible. The pressure and pleasure building inside my body were coming together, creating an inferno that I knew I wouldn't be able to withstand. I came apart, losing myself in a monumental orgasm that shook me to my very core. \n\nAmazingly, I managed to keep myself up until Ellie could come. She pumped in and out of me in a rush before burying the strap-on all the way inside me, as deep as it could've possibly gone. I choked at the feeling. She then ground her hips against my ass to ride out her high. \n\nAs soon as she pulled out, I collapsed and fell into a state of oblivion on her bed. \n\n<center>. . .</center>\n\nMe: Hi, lunch?\n\nI texted Ellie. We had no plans to see each other, but I was already walking toward the direction of her office. I just wanted to see her and figured a quick lunch would've been as good as an occasion as any. Once I could see her building, I decided to call her. It rang and rang and rang... She didn't pick up. I almost texted her again to tell her I was basically downstairs, but I stopped myself.\n\nShe was probably busy. It was a work day and I was being really presumptuous showing up unscheduled. I turned around. For some reason, the disappointment I was feeling was so tangible. I was so gutted that I wasn't going to be able to see her. Which was irrational since it wasn't like we'd made any plans. She didn't let me down or flake on me. I'd gone there on my own volition without an invite.\n\nSo, basically, my disappointment was my fault. \n\nI grabbed a croissant and coffee on my way back to work. \n\nEllie: Hey sorry, just saw this now.\n\nShe replied long after my lunch break was over. \n\nMe: It's okay. \n\nIt didn't feel okay. \n\n<center>. . .</center>\n\nI released a contented sigh. I stared at my ceiling and blinked away the stars in my eyes. Everything about sex with Ellie felt way too good, like my body was an instrument she'd mastered a long time ago. Like all our parts just made sense together. I thought I'd had mind-blowing sex in the past, but sex with her was something else. It was earth-shattering, galaxy-imploding... I wondered if she felt the same way about how well we fit together. I really hoped she did. \n\nI used my hand to comb my sweaty hair away from my face before sitting up. I smiled at Ellie. She was lying on my bed, spent. Clearly, she was as worn out as I was. \n\n\"You hungry?\" I asked. I didn't really want to leave our little sex fort, but I knew we needed to eat something. \n\n\"Starving.\"\n\n\"Hmm, I have nothing...\" I admitted, seeing that my fridge was more or less empty. I wasn't able to pick up groceries like I'd planned because Ellie was rushing me home after my run. I eyed the well-used stack of delivery menus but decided against ordering in. It was still early enough to go out, we could've even saved time getting ready by showering together. \"Wanna eat dinner out tonight?\" \n\n\"Can't we just order pizza again?\" \n\n\"I mean, we can. But there's this new restaurant that just opened and I wanted to try it out. Someone at work said their\u2014\"\n\n\"Oh, I can't go out-out tonight.\" She didn't even let me finish. I turned around to see her getting dressed already. \"I'll just heat up some leftovers in my place, but you should definitely go out for dinner.\" She suggested it so casually. Her tone almost made the statement seem reasonable despite how ridiculous it was. \n\n\"Alone?\" I scrunched up my eyebrows. \n\n\"Invite another friend or something.\" She kissed me on the cheek, already fully dressed. I suddenly felt like I should've been wearing clothes, too. \"I'll see you soon, okay?\" She squeezed my arm before grinning at me. \"Thanks again, I really needed that.\" She gestured toward my rumpled bed. \n\nFor the first time in my life, a thank-you made me feel dirty. I sat down on my little couch once I was fully clothed. I kept replaying my conversation with Ellie. It then dawned on me, ever since we'd started having sex, it seemed like we did nothing else but fuck... It was always about the 'benefits' of our 'friends-with-benefits' situation. We no longer did the things that we used to do when we were just plain vanilla friends. And that realization really upset me. \n\nI thought back... Before we started hooking up, she used to always make me go out with her. Hell, one time we even went to a mall just to look for cute stickers. Since we'd started fucking though, all of our plans had been limited to going to one another's apartments. I enjoyed sex with her (so, so much), but I missed being with her in other ways. \n\nEllie and I used to have these really deep conversations, we flitted from one topic to another without pause. I treasured our talks because they allowed me to learn more about her. After our little arrangement had started though, most of the words between us were exchanged in bed. And although I was a big fan of our dirty talk and pillow talk, I couldn't help but miss how we used to converse. She was so intelligent, I felt lucky whenever she'd share with me her ideas and how she saw the world. I stared at my bed. Even though she was just here, I missed her so much. I wrapped my arms around myself. \n\nI felt cold. \n\n<center>. . .</center>\n\nI never used to mind being alone. I liked having the space and time to recharge, away from everyone else. But being alone never felt as lonely as it did whenever I ended up by myself in my bed after having sex with Ellie for hours. Each time we parted ways after a hookup felt like a bad comedown to me. \n\nShe was so blas\u00e9 about everything, which made things so much worse. I really wanted to be like her, but we just weren't wired the same way. Every single time she left my apartment or hinted that it was time for me to leave hers, I felt a crack form on my willpower. Why did I ever think I could go through with this? The pain was so subtle at first, I didn't even notice it. Especially because of the constant barrage of pleasure Ellie sent my way.\n\nBut as time passed, and the old Ellie and I had faded more and more, the pain inside me grew. The dull ache had become excruciating. I couldn't even deny it to myself anymore. She was using me. This thing between us which started out as something so sexy and fun had morphed into something I'd describe as torture. I needed it to stop, but I also needed it to continue. Even if fucking around with her was breaking me slowly, I kept at it because ending things with her would've surely torn me apart, too. \n\nI'd caught feelings, feelings that were so real and palpable. I knew if Ellie ever found out just how badly I'd fallen for her, she would've dropped me without second thought. Time and time again, she told me she didn't believe in relationships. She wasn't looking for love. \n\nLove? Was that what this was? Why did it hurt so much? \n\nI shook my head and bit back the tears, I wasn't going to cry. \n\n<center>. . .</center>\n\nEllie pumped two of her long, nimble fingers into me. She kept her gaze on my face as she fucked me on my couch. I was close. So, so very close. But my release was elusive. She didn't seem to mind though. She happily kept at it, maintaining a great pace. I was dripping, primed and ready to come, but for some reason, I couldn't topple over the edge. I leaned up to kiss her and she kissed me back without hesitation, without delay.\n\nI blindly reached out for her other hand which was playing with my nipples. I wordlessly brought it up to my neck. I guided her to wrap her fingers around my throat. She broke our kiss, ready to refuse. \n\n\"Please, I'm so close,\" I begged. I didn't let her pull her hand away. Instead, I covered it with my own and squeezed. She wasn't choking me. I was basically just using her limp hand to choke myself, but it didn't matter. I came hard. \n\n\"Hannah...\" She whispered out once I was no longer shaking. \"Is that really something you want me to do to you?\" She asked, her thumb was tracing random shapes on my collarbone. I could feel her staring at my neck. \n\nI shrugged my shoulders. I refused to look into her eyes after sex anymore. I felt too vulnerable. I felt like she would've been able to see everything I was hiding from her if I didn't avoid her gaze. The asphyxiation-thing was neither here nor there for me. I just knew it was going to help push me over the edge, so I did it. It was getting harder and harder to let her fuck me. Too many things were constantly swirling in my mind. \n\nI was so wrong when I'd assumed sex with Ellie wasn't going to be meaningless... It was. It was hot and exciting, but at its core, it was just a means to an end for her. She liked to have sex\u2014a lot of it. She'd never hid that fact from me. If I were no longer in the picture, she'd probably go back to getting off with randoms.",
        "And the idea of her reverting to her routine of picking up girl after girl made me absolutely sick to my stomach. The thought of her with anyone else but me twisted me in knots. So, even if I lost a part of myself every time she used me, I allowed it. I allowed her. As far as I was concerned, I preferred her using me to her using someone else. It was the lesser of two evils. \n\nThe contrast between who we were now and who we once were was so stark. I felt like the two sections of our relationship were completely disjointed from one another. I couldn't even get her to hold me anymore. Whenever I would try to cuddle with her after sex, she just ended up pulling away long before I was ready to let go. Eventually, I'd just stopped trying. \n\nCall me dumb all you want, but I was so starved for how things used to be, I would've gladly traded an entire night of orgasms for ten minutes of cuddling. Five minutes even. I figured I was now only a sex tool in her eyes. Her little toy that she could bend any way she wanted. I wondered how much longer we had left until she broke me. \n\n\"Hann...\" She called out. I finally let myself look at her. She seemed so concerned. \"What's wrong?\"\n\nI wanted to tell her everything was wrong. I wanted to tell her nothing was right anymore... But was I ready to do that? Was I ready to end things? No. I had to keep going. \n\n\"What are you doing this weekend?\" I asked my question without answering hers. I knew I shouldn't have even bothered, but I still did. \"I have to go to this wedding and I was wondering if you wanna come with me? You know, like as my date...\" I tried so hard to be blithe, to act as if I couldn't have cared less if she went with me or not.\n\n\"Oh, I can't.\"\n\nEven if I'd expected the refusal, it still hurt. Did that make me a masochist? I knew that there was no way Ellie would've gone to the wedding with me and yet I still asked her. I asked her even when I knew it was going to cause me pain. The only time I ever saw her anymore was in my apartment or in hers. It was our new normal. \n\n\"I figured as much.\" I sat up and reached for my discarded top on the floor. \"You should go.\" \n\n\"Okay... But I'll see you when you get back.\"\n\nI didn't even look at her before heading inside my bathroom to shower.\n\n<center>. . .</center>\n\nAfter seeing how happy my newlywed friends were in their wedding, I finally accepted that I couldn't keep seeing Ellie. It was a tough pill to swallow, but I knew that I needed to break it off with her. The longer I let things between us carry on, the longer I would've been staying in the godforsaken state of limbo I was in. Pining for someone who'd never want the kind of life that I wanted to live with her. I got back to town and I texted her that we needed to talk. We didn't end up talking though...\n\nI let her inside my apartment and because I was weak, I let her inside me. \"I missed you so fucking much,\" she told me in between wet kisses to my throat. She fucked me with her fingers until I came, against my door. She then sunk to her knees to lick up the mess she'd made. \n\nLast time\u2014I promised myself quietly. I buried my fingers in her golden hair and pulled her against me. I began moving my hips. I rode her tongue. My pace was unforgiving, but she let me roughly fuck her face without complaint. She looked up at me. Her eyes told me she was enjoying what I was doing. \n\nI held off my orgasm for as long as I could. I wanted it to last. I wondered if she would've done anything differently if I'd actually told her it was the last time I'd let her touch me. I came against her lips, and the sensation was equal parts pleasure and torment. \n\n<center>. . .</center>\n\nBack to the present...\n\nI shook my head, snapping out of my trip down memory lane and returning to reality. It seemed like so much time had come and gone since the early days of our arrangement. Everything was so much easier before I became aware of the depths of my feelings for Ellie. I would've given anything for things to be as carefree as they once were, but I couldn't go back. \n\nThe five friends I'd talked to about my situation all told me what I already knew. They'd said that what I was doing was very out of character. None of them understood why I was letting this happen to me, but none of them knew Ellie or how she made me feel. They'd told me it wasn't worth it because I'd probably just get hurt in the end... I didn't tell them that I was already hurting and things between us hadn't even ended yet. \n\nEllie: Wanna come over? \n\nLike a moth to a flame, I headed over to her place right after work. She tried again and again to top me, but I refused to let her. Then she changed tactics by trying to get me to top her, but I didn't let that happen either. I really didn't want to be touched by her anymore. I couldn't let her touch me anymore. My mind was at least made up on that front. \n\nEven if I wasn't strong enough to break things off completely yet, I'd at least be strong enough to not let her keep fucking me. I really wasn't the kind of person who was okay with meaningless sex and I was so tired of acting like I was. I allowed myself to still touch her though, to still make her feel good. That was 100% different.\n\nEverything I did to her had meaning, everything I did to her was my way of showing her how much I cared about her without words. She was so, so important to me. I could see the confusion in her eyes. She didn't understand why I kept rebuffing her advances. Everything was changing, we both felt it. She studied me as I went to work. Her expression was pleading with me to explain to her what was going on. \n\nI said nothing, but I did my best to comfort her with my tongue.\n\n<center>. . .</center>\n\nSurprisingly, Ellie was the one who snapped first. \n\nAlthough we'd never discussed it aloud, she knew not to touch me anymore. She knew I didn't want her to, so she hadn't done so in more than two weeks. Even if I could tell that it was incredibly hard for her, she was keeping her hands and mouth off me. \n\nEvery time she beckoned to me, I still came over to her apartment. But it was usually for a quickie where I made her come once (sometimes, twice) before I rushed back to the safety of my own home. I'd begun to see myself as someone akin to a home-service massage therapist or maybe even a plumber, I did my job then I went home. Simple. Sure, I didn't make any money from what I was doing, but I regarded the time I spent with Ellie as my payment. \n\nI was still basically an addict and she was my drug of choice. I knew that continuously choosing to be around her was self-destructive, but I kept at it. True to the definition of insanity, I kept repeating the same actions over and over again, expecting different results.\n\nShe already came twice. I should've stood up from where I was in between her thighs. I should've left already, placed some much-needed space between us. But I couldn't. I wanted more of her. I waited for her to be less sensitive before diving back in, kissing and licking the deepest parts of her I could reach. I loved how she tasted.\n\nI looked up for a fraction of a second and saw her looking at me. I knew she was enjoying what I was doing, but her eyes still looked sad. I wanted to keep going. I wanted her to come on my face one more time. One last time tonight before I headed home to take a shower and wash her off me. But she pulled me to my feet. \n\nShe brought my hand to where my mouth was and I began to fuck her slowly with my fingers. She leaned against the wall behind her. She used both hands to keep my face exactly where she wanted it, right in front of hers. The eye contact between us was intense and I would've looked away if she let me. It had been a while since I felt the fire. I thought it had been extinguished completely by all the hurt. I was wrong. It was still there and, in that moment, it was consuming me. \n\nAs Ellie got closer to the edge, she tried to kiss me. She pulled me toward her to get my lips on hers. I turned away at the last second though. My lips crashed into the corner of her mouth instead. I didn't want to kiss her on the lips anymore. \n\nI still devoutly brought her off with my fingers before sucking off the juices on my hand. I knelt down one more time to lick up what I could from the source itself. I made sure to keep my movements gentle since she just came. I pulled her underwear and shorts back up to her hips before placing a chaste kiss on the right side of her waistband. My movements were so precise, dripping with devotion, cleaning her up almost resembled an act of worship. \n\n\"Is there someone else?\" She asked softly once I was back on my feet. \"You can tell me, you know that, right? It's not like you'd be cheating on me or whatever, we're not even together.\" The way she said it was so nonchalant. It exuded indifference. \n\n\"There's no one else,\" I croaked out. She was totally unaware of the waves of pain she just sent my way with her words. I was struggling to breathe. The walls were closing in. I hugged myself, but it was useless, I was coming apart at the seams. It had to end now. \n\n\"Then what's going on?\" She glared at me. For weeks, she'd given me what she thought I wanted. But the frustration on her face told me she was done being patient. \"I've tried to understand... None of this makes any sense though, you won't let me kiss or touch you,\" she griped. My little stunt earlier had obviously hurt her more than I thought it would. \"But you still come here to have sex with me, do you know how ridiculous that is?\"\n\n\"You're right,\" I agreed. \"It's ridiculous.\" \n\n\"What do you mean I'm right? Hannah, can you please just\u2014\" \n\n\"I can't have sex with you anymore.\" \n\nNow that the statement was out there, there was no way for either of us to take it back. A look of panic flashed on her face at my declaration, but I just shook it off. She was waiting for me to say something else. \n\nI was letting her go? Ellie with her sexy body, Ellie with her divine smile, Ellie with her oceanic eyes, Ellie with her intoxicating scent... Ellie, Ellie, Ellie.\n\n\"Look, I'm sorry I pushed. Can we please just forget I said anything?\" She tried to backtrack. \"Whatever you want to do, I'm okay with all your new rules. Everything's fine.\" She forced out a chuckle. It was far from convincing. She was visibly agitated, but I couldn't be the one to calm her down. I was on the verge of coming completely and utterly undone. \"Now, let's just drop this, do you want\u2014\" \n\n\"Ellie...\" After months and months of keeping them at bay, my tears finally fell. No matter how much I told myself to quit crying, they wouldn't stop flowing. She finally held me again, just like she used to before our goddamn arrangement began. The still-welcome hug caused my heart to break into even smaller pieces. \n\nShe brought me to her room and carefully laid me on her bed. I was grateful because I knew my legs were about to give out at any moment. I covered my face with my hands and just sobbed, hard then harder. My entire body was shaking. Everything hurt\u2014everything hurt way too goddamn much. She joined me on her sheets, pulling me to her. \n\n\"I can't be around you- I can't, I can't\u2014\" I struggled to get away and she just shook her head, no. \"I thought- I thought I could do this, but I was wrong...\" My voice cracked. I was so worked up, I started coughing. She refused to let me go though, she just rubbed my back, doing all that she could to console me. \"I was so fucking wrong,\" I repeated again and again. \n\nI squeezed my eyes shut and finally hugged her back. I let her hold me. I was too tired to fight. \n\n\"Please stop crying.\" She pressed blind kisses on whatever part of me her lips could reach. \"I'm sorry.\" She was clinging on to me so tightly, like she was afraid I'd disappear. \"I'm sorry, Hannah, please stop crying.\" \n\nThe heat I felt was a new one. It was far less intense than a firestorm. Like heat from smoldering charcoal on the last leg of its journey to become ash. \n\nEllie held me for a long time. She held me until the tears stopped. She held me until I found my voice again. She held me until I asked her to let me go. \n\n\"You know how you said earlier 'we're not even together'..?\" I repeated her callous words that had served as the catalyst for the end of us. She opened her mouth to apologize. She clearly felt guilty about the offhand remark. \"I know we're not...\" I swallowed. My lips were still trembling, but I had to power through. \"But I can't have you in my life anymore, Ellie.\" \n\n\"Hann\u2014\"\n\n\"It just hurts too much.\" I finally rolled out of her bed. I shook my head defeatedly when she tried to make me stay and return to her arms. She kept saying that she didn't understand what was going on. She claimed that whatever was wrong, she could fix it. She said that if I wanted, we could even act like strangers meeting for the first time. She told me that she was willing to do anything, I just needed to tell her what I needed from her. \"There's nothing you can do.\" \n\n\"What do you mean?\" She demanded. The hurt was so evident on her angelic features. It was by far the most upset I'd ever seen her. Her pain tugged at my damaged heartstrings. \"Please just talk to me... Why can't we fix this?\" \n\n\"Because I'm in love with you.\" \n\nShe took a step back, a step away from me. As if I'd just insulted her instead of telling her I loved her. The leftover fragments of my heart disintegrated into nothing. I turned my back on her and walked away."
    ],
    "authorname": "SpaceFirefly",
    "tags": [
        "friends with benefits",
        "love",
        "attraction",
        "oral",
        "hookups",
        "dildo",
        "toys",
        "orgasm"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/firestorm-pt-01"
}