{
    "title": "Warrior Queen",
    "pages": [
        "I hope I'm not screwing up, I'm writing a much longer story that will go into a different category. In that story I created a character that fascinates me. But in the other story she has a relatively minor part. But I think she deserves further exploration and as a result this is a long story but all in one piece. Thus it's posting in Novels and Novelettes Category where it could also go in Non-Erotic. \n\nAs my sub-consciousness' want is to have stories knock on the door of my mind as I lay in bed crawling awake some mornings. This is one, but the much longer story I'm writing is 20 chapters long with each chapter being 15 to 20 thousand words each. But it's not finished and I've invested a lot of time and effort into it. So I hope writing this one doesn't reveal too much of the other ones plot, thus screwing up. \n\nBut this character fascinates me and this story knocked on my mind somewhat forcefully. Plus, it's a custom fit for this character. She's a damaged character yet a very unique one. A powerful charismatic individual in spite of herself, yet one you can't help feeling a certain amount of empathy for. She's a shy retiring introvert who's also a Warrior Queen, both in the boardroom and out. At least I hope I can show that in the story because it's what she pounds into my head some mornings. \n\nThis story starts out somewhat slow with all the heavy action in the second half. It's also close to 60,000 word count, so if you want a quick read, this isn't it, also no sex. But have patience because it should be an action-adventure with a very interesting heroine. \n\nTime Heading which heralds forward or backward movement of the stories time line. \n\nHard time Heading is the time of action and violence. \n\nWhen the font is italicized like this introduction then it indicates a foreign language. \n\nDouble curly brackets {{ }} indicates a special internal mental conversation. \n\nStandard disclaimer. \"Characters in sex scenes are eighteen years old or over. All characters are imaginary, any resemblance to persons living or dead is coincidental.\" \n\nAgain with my disclaimer indicating this story as being total fiction. I'll make some mistakes in police procedure, existing laws, and in the history of Japan and Japanese weaponry. I've tried not to but I know I will. Plus I took some literary license in the method of naming individual swords and their heritage. I hope these errors will not affect your enjoyment of the story. \n\nNo sex in this story but lots of action, graphic violence, some female nudity and foul language, plus a small incident of rape and subsequent justice. \n\nIncluded are lots of Japanese swords, machine guns, karate, lots of action, lots of death. No sex... PG-13?, didn't I say no sex? Just like family movie night in Any town, USA. \n\nDeath and violence but no sex equals family movie night? And we wonder why kids are shooting each other in schools. Conflict resolution by extreme prejudice as taught by public mass media every single day. \n\nEnough soapbox rant. \n\nI'm not the least bit hypocritical... really I'm not. \n\n'Man's infinite striving to be the best is his duty. It is its own reward.' Mahatma Gandhi \n\nSo please enjoy Betsy the Warrior Queen, Sword Bitch, Wife and Mother. \n\nTime is at the beginning and the end. \n\n(Sensei Taji Toiguchi:) \n\nThe first time I saw her was out of the corner of my eye and everything stopped! ... my mind instantly focused and my adrenaline spiked. I do not mean that all physical motion stopped because it did not. Just things inside myself stopped... and I froze. That part of me that is the instinctive animal reflex. Freeze... don't move in the presence of danger and hope it does not see you. If it does... RUN! \n\nBut looking at her with my eyes as she stood in the front entryway of my dojo. I could not understand why my body had instinctively reacted like that. Her stance and body language screamed timidity. With head bowed her downcast eyes roamed the entire dojo seemingly focused at floor level. Yet somehow I 'knew' that she saw everything. \n\nAlthough I didn't understand I had... even in those first few heartbeats. I had realized the ultimate paradox that is her. \n\nBecause as she moved again, my body snapped tight and my nostrils flared to scent the predator. But now my eyes and my mind can see why. It was in her movements, the difference between the movements of a lioness and a gazelle. Both are powerful, and elegant in their own way and graceful yet completely different, but she moved like them both. \n\nThere was a special economy, power and grace to her movements. Highly trained precise body mechanics that could not move that way accidentally, or even naturally. \n\nIt had been a long time and half a world away since I had seen someone move like that, and he had nearly killed me, Yakuza scum. Son of my skill, pupil of my heart, betrayer of my soul and dead by my hand... scum, just Yakuza scum. \n\nI have not always been this old dojo owner teaching pudgy children to punch, kick and not fall over. Trying to teach obnoxious older children to swing a stick and not stab each other or themselves with it, teaching them the traditional words and beautiful movements. While they stand there on one foot in white canvas pajamas and colored belts... and try not to fall over. \n\nBut here I stand as a glorified babysitter watching a lioness stalk my domain hidden in plain sight. Yet I feel more alive than I have for the last 30 years. Strangely somehow I do not think she has spotted me yet. \n\nSo I'm content to watch her as she wanders in among my little charges and their Katas. The surprise that is not a surprise happens when she corrects the movements of a young girl into the correct form and motion. Proof she's been trained in the Bushid\u014d, the Way of the Warrior. Even squatted down she towers over the young girl, she has to be six foot six or more. \n\nThe young man that I had been could see her remarkable beauty. Old man I was knew beauty could freeze a man long enough to provide for his death, if she wished to take it. Yet aesthetically old man that I am could appreciate the unique beauty of her too. Faced with that beauty why am I thinking of danger and death? \n\nBut I am, and I have no reason to except her movements, those highly trained precise movements. You cannot just train movements like hers. You have to start with something exceptional in the mold. Then you become a blacksmith on a very young child who doesn't understand. Almost beat it, temper it, and forge it into that truly exceptional warrior. \n\nBut the danger she radiates comes from within and can in no way be taught. \n\nAlthough I was born and raised in Japan, and my wants and sense of what is beauty in a woman was imprinted on me then. I have lived in America long enough to know her beauty is much more than common beauty. \n\nThere are a lot of common everyday women who are beautiful; they are feminine and beautiful to men. Especially to their men; to their significant other, to the man that loves them. To their parents, siblings and children they are special and beautiful. \n\nBut... There's that one in ten thousand... no... Hundred thousand that's something... something more. One whose features are more symmetrical, more ethereal, even somewhat surrealistic; whose body is just several levels closer to aesthetic perfection, whose carriage and movement become close to the dance of life. Most of all they have something... something that says they are 'other' then we are. They are almost alien to us, with an internal power and presence that we can see but never emulate. \n\nShe could be that professional beauty like the ones in magazines or movies, that .0001%. Even the ones that walked the catwalks... except for that height, she is just too tall. \n\nAesthetically was the only way I could appreciate her. The like of her would never be for such as I. All men eight to eighty look at a beautiful woman and wonder or want to have her. It is just part of our DNA, part of Homo sapiens cycle of life. Some just do it a lot more bluntly than others, but we all wonder... if. But this one... this one few could have, certainly not me. \n\nIt is not only my age that sets us apart. I am short, slight and full blood Japanese. She is tall, very tall, with porcelain white skin and raven dark hair that falls to the small of her back. It is so thick and falls in flowing waves. That resting on the back of her neck it looks to be 6 inches deep. Her apparel speaks of class, money, and yet comfort. Her face speaks of the verdant green hills and rainy isles of Ireland. \n\nI slowly realize that I have no fear of her harming any of my charges. But in that paradox of her... she 'is' a lioness and danger, but a mother lioness. One such as her would be far above harming pudgy little children. \n\nI fear that sometimes, fear one of my charges will be hurt or kidnapped. The deterioration of this neighborhood makes that a real possibility, especially with that gang of animals moving in. So the parents of my little charges I require that they come pick them up in their cars immediately when classes are over. \n\nExcept the little ones of the neighborhood that I let come in for free. It is not much, but I try to give them what reason I can to leave the streets and the gangs. Learning 'kung fu' is cool and powerful, but the internal discipline they learn can give them strength against peer pressure and the temptations of drugs and alcohol... against the temptation of the gangs. \n\nI have thought about moving the dojo to somewhere safer. But I have had this little dojo for over 30 years. I have built a lot of it with my own hands; I live in the back and teach in the front. It is my world, granted it is a small world, but it is mine and animals will not chase me away. \n\nI decide to move and let her know that I am watching, and to let me stop all this useless wondering about her in my mind. Yes, something about her trips my danger triggers so I should talk to her and find out why. Maybe quit being that foolish old man that I seem to be becoming, bah stupid old man. \n\nYet that decision to move and a half step that I have just barely begun brings her bow of respect immediately to me. A head down rush of small steps brings her before me. As in correct formal manners and courtesy she holds her bow, at the proper angle, with lowered eyes and waits for my acknowledgment. \n\nBy that I know that she 'had' always seen me. It was just her courtesy and manners that let me think I was hidden, humoring an old man. That flusters me, so when I welcome her I make a mistake and do it in Japanese. \n\n\"Honored Lady, please be welcome to my humble little dojo.\" I say with the proper bow. \n\n\"Thank you Shihan Sensei, anyplace that teaches the correct arts to children need not be humble.\" As she correctly continues holding her bow. \n\nI had a hard time holding in my expression and my amazement. She not only answered in Japanese but in the correct manner and with honorable titles, Shihan means Master Instructor. Sensei means honored teacher or first teacher. \"Thank you Honored Lady my humble self tries to honor the old ways. But with little children sometimes one's patience is tried, but it is always worthwhile. If I may respectfully ask, what can my humble dojo to for you Honored Lady?\" \n\nAgain I'm staggered by this woman. When she raised her face and looked into my eyes, I do not think... no I know I did not contain my amazement. Her eyes... Her eyes were Majyo Majikka (witch magic). The Iris was a dazzling blue around its outer rim but very white close to the pupil. The look was startling... intensely beautiful. But they also seem to glow dimly from within. I once saw a dog that they said came from Alaska whose eyes looked very similar, a husky dog. \n\n\"My Koei chichi (Honored Father) has gifted me with his wisdom and his desire that I should learn Kenjutsu (the Way of the Sword). \n\nKoei chichi started me on learning the Bushid\u014d when I was but a child. Karate, aikido, judo, tae kwon do and other things, even some Israeli Krav Maga used by the American Marine Corps. Plus the Greco-Roman wrestling that's in the Olympics, and the boxing of the British and Americans, the Capoeira of Brazil, Escrima stick fighting of the Philippines, plus several others.\" \n\n\"Koei chichi shows much wisdom, even in that which breaks with the old traditions. But sometimes the old ways are wrong, nowadays daughters are trained in the Bushid\u014d almost as much as sons. Has your father no sons?\" \n\n\"No, Koei chichi has one son, Elder Brother. He was trained just the same as I. Object you on the training of women?\" \n\n\"Non... No, one ancient as I did not understand why all who wanted trained could not be. But in my youth the Shihan of that time used the even older traditions that excluded females of all ages. But even though I am as old now as they were then, I still do not believe in those teachings. So Honored Lady I would have no trouble teaching you what my humble self has learned from others.\" \n\n\"Koei chichi has told me that he talked to you and bought me lessons and a bokken (practice sword) of hardwood.\" \n\n\"Ah, Koei chichi would be Mr. Daniel Teague then?\" \n\n\"Hai.\" \n\n\"A small question of understanding, if I may? Does your Koei chichi want you to learn Kendo or Kenjutsu... there are differences. Simply put Kendo would be the modern way of learning the 'Way of the Sword' while they often refer Kenjutsu to as the ancient way?\" \n\n\"Is there more differences than modern or ancient?\" \n\n\"Yes, Kendo has acknowledged national and international chapters. They compete for points, belts and Dan rank. While sparring they wear heavy cotton armor and helmets with faceplates. Their bokken (practice sword) have blades of bamboo stick bundles to lessen the blow, also to hear the clacking of them when they make contact.\" \n\n\"Kenjutsu has no recognized organization, so there are no awards of belts or ranks. It leaves the structure of the training to the Shihan and the student. The bokken is used to learn the structure of the movements while the forms or Katas are with the naked steel blade and no opponent.\" \n\n\"Kenjutsu Sensei, I have no want of belts or rankings. I quit the quest for such as I was still a young girl. Plus I have great respect for the wisdom of the ancients and their traditions.\" \n\n\"Well, children's practice time has run out. Let me dismiss them to their parent's cars then we can have some tea and you can tell me of yourself Honored Lady.\" \n\nAfter dismissing the children's class I led her to a small alcove with a low table and cushions for seating. I made this alcove years ago. Just for a purpose like this, the one to one private conversation with the customer. \n\nIt had small appropriate paintings and tapestries on the walls. Also some small weapons and ancient knickknacks, such an American word knickknacks, or is it British? Plus a small door in the alcove led right into my tiny kitchen. So I had hot water and tea ready shortly after she sat down. \n\n\"If you would not mind Honored Lady, please tell me of yourself. Your Koei chichi only referred to you as Betsy but somehow I do not think that is your name. So please tell this humble one some of your story.\" \n\n\"In my Honored Father's house I was Elizabeth Ann Teague. My father is Daniel Neal Teague and my mother was Assanna Einin O'Lanigan, in her father's house. But Mother died of cancer when I was a young woman. Elder brother is Donald Barrett Teague and is my elder by two years.\" \n\n\"I'm 36 years old and married with two children, a boy and a girl. My daughter Michelle Jeanette is two years older than my son Jonathan Daniel. My husband's name is Robert David Williamson. He's a commission artist who does portraits, but will do anything the customer desires and his own imaginings too.\" \n\n{{ 36... 36! I thought she was a student in her early 20s and a disciple of fitness. Definitely not a married mother of two! }} \n\n\"I'm a lawyer by trade but I never get into a courtroom. My specialty is in corporate law but what I really do is called a corporate negotiator or sometimes I'm even a court-appointed arbitrator. I get involved when companies want to merge, or one company wants to buy out the other. But my worst cases are those of corporate raiders who try to stage hostile takeovers of other companies. So if we get into Kenjutsu training sometimes my work takes me away for weeks at a time, yet sometimes the reverse is true as well.\" \n\n\"How is it that Koei chichi trained you and Elder Brother in so many ways of the Bushid\u014d?\" \n\n\"My honored parents were great planners, but neither of them came from families of wealth or influence. So they made plans to better themselves early in their life. They married while they were still in high school yet immediately split paths upon graduation. \n\nMother went into a nursing college and Father went into the Marine Corps and sent his pay back to mother for her education. After Father left the Marine Corps she worked in the hospital to help pay for Father's college education, with the help of the money he earned from the G.I. Bill. Those two money sources got him through college and into married life. \n\nAfter graduating with dual degrees in mechanical and electrical engineering Father built his own company, Einin Microsystems. Because of three inventions and the company he formed Koei chichi became very wealthy.\" \n\n\"When he was in the Marine Corps Father met a Sergeant who gave him a 'Way' or a path to live your life. Much like the Bushid\u014d is the 'Way of the Warrior', this might be called the 'Way of Life'. It involves all three parts of a person; body, mind and the soul of life. They could call it 'The Glory Road' because it's a way to live your life so that those three parts will become the absolute best they can be and bring glory to that person.\" \n\n\"In fact a lot of the parts of it reminded me very much of the Bushid\u014d. But the main area that they differ is in their attitude toward violence. Honored father's 'Way of Life' isn't completely passive, but teaches violence as a last resort and then only for defense.\" \n\n\"The section of Father's Way, that body, mind and soul we must consider here today, is the body element. That element's divided with the first part called the Temple part, the Temple of your body. \n\nIt deals with dietary issues and the things of that nature. Things you need to moderate if you use them, or the things that you need to exclude from the Temple of your body. But I won't get into that today.\" \n\n\"The Sgt. that told Koei chichi of this way of life was obsessed with car analogies, so your body is the car you drive around in. Thus the second part of the body element is his 'car care system'. Simply put his car care system is large doses of physical training and discipline. That discipline is of course the hardest part because his is so very rigid.\" \n\n\"Each and every single day, every... single... day you do a large amount of physical training. No days off, no vacations, no sick days, not even a Sunday off. Plus he was Marine Corps through and through. So physical training was the Marine Corps Way. Each day started with calisthenics in the morning followed by a long run, then weight training in the afternoon. Of course the next day was the same, and kept repeating endlessly. Also in the 'Sergeant's Way' training started early in life, at about 10 years old. Continuing the rest of your life, every single day, and I still continue.\" ",
        "\"Honored Father soon realized that this endless repetition; of calisthenics, run, weight training was a major flaw in the 'Sergeant's Way', especially for children. Because of the boredom... human beings are not cows and we can't eat grass for every meal. Even in regards to physical training. So Honored Father's solution was a variety of course. \n\n\"Plus the imperative for the mind section of the 'Sergeant's Way' was education. Learn-learn-learn and like the physical training it's each and every single day for life. Learn anything you wanted, anything you could, and everything you possibly can. So learning new forms of physical training fit right in the plan.\" \n\n\"The library in my father's house must hold several thousand books on a wide variety of subjects and I've read them all, some multiple times. He even had a structural engineer come in to reinforce the floor because of the weight.\" \n\n\"My father's house has a television in it that's seldom used.\" \n\n\"So to provide variety he would add or replace into the training regime anything that met the physical requirements. Of course the martial arts were one of the first to be added, but the martial arts also remained throughout our lives.\"  \n\n\"But it wasn't only the martial arts that were added. Almost any kind of individual sport you can imagine; swimming, tennis, golf, gymnastics, track and field, even dancing came into the training regime. Then he would trade out with something different to learn. The martial arts, running, and weight training are the core ones that have endured throughout our lives.\" \n\n\"Of course the Sgt. that told Honored Father of this life plan was at least a minor participant in the Bushid\u014d. However I think he was much more into Krav Maga of the Marine Corps than the Bushid\u014d. But there was another member of father's squad that was a practitioner of tae kwon do and aikido. He taught Honored Father what he knew and then they worked out in practice together. Sometimes the Sgt. would come and join in, teaching them the Krav Maga that he knew.\" \n\n\"Being the man that he is, Honored Father found the martial arts much to his liking. After he left the Marine Corps, he continued to expand his knowledge by learning with the University clubs and the dojos around town. Then when Donald and I became the age of ten we were put on the Sgt's Plan.\" \n\n\"So I started physical training and the martial arts at age ten. Neither the Sergeant's plan nor my father does anything halfway. 'Man's infinite striving to be the best is his duty. It is its own reward.' Was a quote from Mahatma Gandhi my father was fond of using.\" \n\n\"The path on the Glory Road is to make you the absolute best you can be, and as honored father always said, striving for perfection continuously is the only way to attain it. I remember my first run at age 10 was 5 miles long and at whatever pace I could do as long as it was my best.\" \n\n\"Long ago I realized that I had to be honest with myself, yes the Sergeant's plan was hard. Very hard to start and keep going for a 10-year-old girl. But in being honest with myself I must admit that I wouldn't be alive today if I hadn't been on the plan.\" \n\n\"Both father and I are the victims of malignant children.\" \n\n\"As you can see my eyes are very unusual but they're not as unusual as my father's. Mine are a white-blue, but similar. My father's are not, he has one white-blue eye similar to mine. But his other eye is bright green so you can imagine the bullying and teasing that he got as a young boy.\" \n\n\"In the eyes of other children Father and I are freaks that need shunned and eliminated from their sight. I don't think that anyone who hasn't gone through it can understand the impact on a child's psyche.\" \n\n\"The constant poking, prodding, shoving, and hitting that never relents, the teasing, taunts, and constant, constant belittling that's endless. The teachers never participated of course. But by the mere omission of the effort to stop it, they condoned it.\" \n\n\"Honored Father's growth pattern and mine were identical; at least that's what he tells me. We were small bodied children until we had a growth spurt and then grew tremendously, even painfully. I can attest that the term 'growing pains' is very real. Also that growth was totally uncoordinated. I can remember not being able to walk across a bare hardwood floor and not trip or fall, much to the ridicule of anyone around me, including myself.\" \n\n\"Koei chichi is taller than I am and much, much heavier muscled. He's between 6 foot eight and 6 foot nine and weighs well over 250 pounds, running an 8% body fat ratio. But like me as children we were under average size for our ages.\" \n\n\"His growth spurt started the summer into his freshman year of high school. Being female mine started much earlier. At the end of the sixth grade I was 6 foot and still growing. Having been in the sergeants' plan for two years already, my strength was increasing. But height, strength and my eyes were the source of my ridicule rather than a benefit. Honored Father described his early years as being hell on earth... he said mine were worse.\" \n\n\"Boys get into fights, scream and yell at each other, then go play ball. Girls don't fight like boys, but they can hurt each other in the mind and that cuts much deeper, more permanent. They can hurt men in this same way too, in the mind and heart. But women can hurt other women even worse, no matter what their age may be, woman or child.\" \n\n\"Because of my eyes I was a lonely abused child with no friends, except for my father. When my growth spurt started of course malignant children got worse. But what became even more damaging was that I started to hate my father. After all, he was the one that gave me these eyes and made me grow so damn tall with feet that couldn't walk. I was growing up to be just like him and I didn't want to be! I'd rather be like Mother.\" \n\n\"Mother was petite, beautiful and a friend with everyone, and everyone was friends with Mother. There were a lot of adult parties at Honored Father's house and Mother was always Hostess, she loved that role and people loved coming to Mother's parties. I sat in a dark corner and watched, wished and dreamed.\" \n\n{{ She loved her mother very much. She talks of Father with much respect and attention. But just now her face and her mind dropped into a beautiful dream a thousand miles away, just at the mere thought of her mother. }} \n\n\"It's not like Father didn't have friends it's just that his friends were few and friends he'd had for a long time. Father is large and intimidating, add in the way his eyes look and it's needless to say he doesn't make friends easily. It's no wonder I had the same problem.\" \n\n\"When my growth spurt started I felt my life couldn't get worse. The guilt I felt over starting to hate my father, my intense desire for someone... just anyone to love me. The depression and loneliness multiplied in my own mind. No one besides my father or mother cared for me, or even wanted me to exist. They 'had' to, they're my parents, it's their duty to raise and care for me.\" \n\n\"But no one else did.\" \n\n(Betsy:) \n\n\"You're probably sitting there thinking that this was a classic case for teen suicide, and you'd be right. I thought a lot about it, after all no one wanted me...\" \n\n{{ Oh my God Betsy, what are you doing!! Why am I sitting here telling this little old Japanese man about the worst parts of my life... because he asked?? God why! I'm a very private person, why am I spilling my guts to a man I just met?? }} \n\n\"... at least not the gangling giant of a girl that I was. The thing about it was that I couldn't blame them either. I hated myself worse than the malignant children did...\" \n\n{{ Why am I confiding in this old man? Shut up Betsy, you are not this type of woman. You don't even have a best girlfriend who's a confidant. Those thoughts of suicide you haven't even talked to Robert your husband about, or even Father. }} \n\n\"... but I did more than think about it, I planned it. In the middle of the winter my seventh grade year, I decided I was done. Mother and Father loved me because they had too; Elder Brother had his interests and didn't care about me. At school not one... single... child or teacher cared about me, except to ridicule me. I was done, and that night would be the night...\" \n\n{{ But as I watch him... this little old man, I can see that he's doing something that I had to learn, the art of listening. He's actually... physically... listening to what I'm saying. Because I had to learn the technique I can now see it in him, that focus, that concentration it takes to really listen. The art of listening cannot be done in the 'I' mode, the id, the 'me' must be set aside to truly hear with the ears. }} \n\n\"... that I left this hateful, hurtful world. I already had my route planned and all the necessary doors unlocked, ready for me to leave, to leave my house, home and life in the middle of the night. There was a tree on a small hill behind our house that was my friend. I often went and talked to it while gazing over the valley...\" \n\n{{When you're not 'listening' it's hard not to judge whatever the other person is saying to you, at the same time as they're talking. It's hard not to judge how they say it or the words they use. If you're not 'listening' you're probably already planning your response to what they haven't finished saying yet. Already judging the person for what they are by what they haven't finished saying yet. }} \n\n\"... of houses and lights, of the mountains far off in the distance. That night it was cold out and would get much, much worse. But I didn't mind the cold in fact sometimes I liked the solitude and quiet of it. Somewhere I'd heard of what it felt like to freeze to death, and I didn't think that would be so bad...\" \n\n{{ To really listen you must be totally involved in understanding what they're telling you. To really listen whether you believe it's right or wrong. Your focus must be totally on what they're saying to you, on 'understanding' what they're saying. \n\nIf you're 'listening' correctly, who you're listening to can only feel your concentration, your total focus on them. What that feels like to them, is that it matters what they say to you, that 'they' matter to you. \n\nI guess that underneath it all I'm still that little girl who wants anyone... everyone to like her. I'm wondering if this little old man might end up becoming a friend. }} \n\n\"... to sit at my tree and listen to the quiet. To shiver for a while and then go to sleep... and... be... forever free!\" \n\n\"That night after supper father sat with me on the couch and put in my favorite movie. We watched it and talked of normal things, how my day was at school, if my workout went good. It wasn't unusual that he did this, but this night he put his arm around me and stroked my hair. Somewhere in there I fell asleep and woke up in my bed the next morning.\" \n\n\"I didn't go to school that morning or any of that day really. Mother and Father took me to an office where I met Dr. Kerry for the first time. Dr. Kerry and I would talk a lot over the next four years that she was my therapist.\" \n\n\"But when you're first starting out therapy helps only when they're talking to you. You still have the time between appointments to deal with your life. That is where the 'Sergeant's Plan' or the Bushid\u014d helped save my life.\" \n\n\"The things that Dr. Kerry was teaching me caused a lot of frustration in me. She was convincing me that it wasn't my fault for the malignant children's actions. My frustration came from the word 'fair', it wasn't fair what they were doing to me. That made me mad, but I was also mad at myself. I didn't understand why I couldn't fight back or retaliate.\" \n\n\"I never fought back; it was almost like I couldn't. While it was happening thoughts of retaliation eluded my mind. I would just sit there dumbfounded and in pain. Thoughts of retaliation came much later and caused a lot of my frustration with myself. I still had thoughts of suicide, but now they were because of my disgust of myself.\" \n\n\"Dr. Kerry asked me of my self-image... a giant Quasimodo with tits was my reply.\" \n\n\"Quasimodo, what is this Quasimodo?\" \n\n\"Quasimodo is the hunchback of Notre Dame. A deformed and extremely ugly person who's mostly deaf and can only hear the ringing of the colossal church bell of Notre Dame Cathedral when he was standing right underneath it.\" \n\n\"Ah, a tragic figure in literature.\" \n\n\"Yes, a very tragic figure, but here's where the Bushid\u014d came in to help me. When I would get too frustrated with myself, I would go to our gym and the weight bags that we had for boxing and karate. We had several types; a heavy bag, a speed bag, a reflex bag on a flexible pole, and a double suspended striking bag. I would use them all, but mostly the heavy bag and the double suspended. Plus the several striking dummy's we had.\" \n\n\"When my frustration level was too high, I would try to beat those bags and myself into submission and exhaustion. But I learned I had to be careful too. Koei chichi grounded me away from them for a time. Because I didn't take care my hands and had beat them all bloody and torn. He felt this was too much for a 13-year-old girl. So I learned to wear heavy gloves, and it helped some.\" \n\nAt this I showed him my hands, all rough skin, scars and heavy knuckles. Appearance showed a fighter's hands, not a woman's, but a boxer who'd fought for years. The only thing feminine about them was the proportions that I'd been born with. The long fingers and the narrow palm of a woman, but I also had the heavy knuckles and thick skin of a fighter. \n\n\"The Bushid\u014d and the 'Sergeant's Way' wouldn't let me just flail away at the bags. Both are the driving quest for perfection and I couldn't let that drop. So it was multiple instructors, Katas and learning until I got it perfectly correct in muscle memory. Then when frustration overcame me I attacked those bags with all the power I could deliver until exhaustion dropped me.\" \n\n\"Like I said, father and I were freaks to be shunned. So I had no friends, no after-school activities. I spent all my time... alone... in physical fitness, martial arts training and buried in books.\" \n\n{{ Ah, now I understand, she forged and tempered herself. She was the blacksmith of her own childhood. }} \n\n\"Dr. Kerry was getting me to realize that I was the one that allowed malignant children to hurt me. That I also was the one who had control of myself and whether or not I let that treatment affect me. She was also getting me to know myself, the pieces and traits that make up the 'I' that is me. I am a passive introvert, an introspective empath that's concerned too much about others. But even though I have studied the Bushid\u014d and many others of the warrior arts, I am not a warrior...\" \n\nAt my denial of being a warrior the little old man shakes his head vigorously. \n\n\"That's not right beautiful lady, I felt the warrior in you at your first step through my door. I felt your power and your presence even though your head was bowed. You may not have had to fight yet, but you are a warrior, a dangerous warrior.\" \n\n\"But Sensei, I don't even spar in practicing the arts of the Bushid\u014d. The only thing I strike at is a weight bag or striking dummy. Honored father's way is not the 'Way of the Warrior.' We do not practice the arts to learn how to vanquish an enemy. In Father's house there is no enemy, only the desire to make the body the absolute best it can be.\" \n\n\"Then why does Koei chichi train his children in the Bushid\u014d?\" \n\n\"Hum... I asked him that question once. I asked him why we didn't just do aerobics as an exercise if we weren't going to use karate to learn to fight. He answered me with a question, 'what do you have left when your aerobic exercise is finished? And what did you learn?' I didn't have an answer for him, other than the knowledge of performing aerobics.\" \n\n\"Koei chichi said that when the aerobics exercise was finished, all was done. But when the martial arts exercise finished you were left with the knowledge of how to defend yourself if you needed too. Plus that included the discipline and the meditation that are part of the Bushid\u014d. Plus the Bushid\u014d contains a lifetime of learning. That's why we were trained in the Bushid\u014d.\" \n\n\"But why learn Kenjutsu, the 'Way of the Sword' is combat? In ancient times when two sword Masters would contest. It seldom lasted more than a few heartbeats and always ended with the death of one master. Sometimes both were severely injured, and the winner determined by which was left alive. Kenjutsu has almost no defense; its primary defense is attack.\" \n\n\"Yes, I and others will teach defensive moves, sometimes even whole sets of moves as a defensive counter. But, in mortal combat there's little time for defense and it's seldom used. Kenjutsu is a fight to the death. So why does Koei chichi wish you to learn Kenjutsu?\" \n\n\"I don't think that Koei chichi is even thinking of that. Someone important to him gave him a 400-year-old Katana named the Strike of Truth for Christmas. With a note admonishing him to try something new, so he is. In learning Kenjutsu he thought I would enjoy learning it too, and because of a genetic gift of mine I would be superb at it.\" \n\n\"Genetic gift what might that be?\" \n\n\"Ah, well Father told me I should warn you of it. Sensei please guard your teacup.\" \n\n\"My teacup?\" \n\n\"Yes, your teacup please, guard it. Are you guarding it?\" \n\n\"Yes, why do...\" AND my teacup vanished into her hands!! I had not even seen her move! \n\n\"Koei chichi and others have said that I have the fastest reflexes and hands that they have ever seen. Many have tried to beat me at games of speed but none have. Some Sensei of other disciplines would constantly test me. All of my muscles seem to be a predominance of fast twitch type. I am not the fastest runner, but very close to it. In plain body movements I am very, very fast. But in reflexes and hand movements I am unbeatable, at least so far.\" \n\n\"Ah yes, there is an old Japanese story of a much celebrated sword master who was taught humility by a extremely fast farm boy and a staff of wood. \n\nMany an accomplished Sensei has had his head thumped by a first time young student with nothing but exceptional speed. In some types of physical contests only tactics and much experience have been able to beat truly exceptional speed, and sometimes even that does not work.\" \n\n\"The soft headed old Sensei that I am always analyzes all new students before putting my head in danger. But yes, Koei chichi is entirely right, in Kenjutsu speed is king. Even as unromantic as it may seem to be. In all those ancient sword contests of heartbeats often speed was the deciding factor, and decades of training, discipline and skill mattered for naught.\" \n\n\"Might I have my teacup back now?\" \n\n\"Oh sorry, yes Honored Sensei... certainly.\" As she deeply bowed over the table. \n\n\"Taji Toiguchi.\" \n\n\"Pardon...?\" \n\n\"That is my name... Taji Toiguchi. Please call me Taji when it is just you and I... Betsy if I may?\" \n\n\"Of course Sen... Taji, and Betsy is fine. They have called me that since I was a young girl.\" \n\n\"But I would prefer the use of Sensei when the young children are around, please.\" \n\n\"Yes Sensei always, young children need to learn discipline and respect most of all.\" \n\n\"Well, aside from scheduling lessons, one task remains. I am sure you noticed that when I dismissed all the little ones their parents were here in cars to take them away immediately. The neighborhood around my dojo has been deteriorating. This was a nice place with many good neighbors. They have gone and now I find that animals are moving in.\" ",
        "\"Mara Salvatrucha or 'MS 13 gang' are what police tell me they're called. They are the criminals that are moving into this neighborhood and claiming it for their own. Either I have come to a small understanding with them somehow, although I know not how. Or they regard this old man as irrelevant, but so far they have not bothered; me, my students, or the dojo. \n\nHowever, I know not how long that will last. So honorably I can only warn anyone who will come to my dojo.\" \n\n\"The police tell me they are a very brutal and violent gang, along with being a particularly bloodthirsty one. They're very conscious of their reputation. It's important to them and they'll brutally avenge it. So I warn everyone to leave them alone and to get out of this neighborhood as rapidly as they can.\" \n\n\"Ah yes, but the parking here is terrible. I had to park in a pay lot about six blocks up and walked the rest of the way.\" Taji only shook his head at the casualness of my remark. \n\nSo began my tutelage in Kenjutsu, the ancient 'Way of the Sword' with Shihan Sensei Taji Toiguchi. Taji became one of the things that I value most in life, a good friend. I worked with him for over ten years and they were good times. Taji was a kind and gentle man yet also the heart and soul of a warrior. \n\nTime only flows out truth. \n\n(Betsy:) \n\nTwo months after we first started training, Taji laughed at me. But he also showed his knowledge of sword craft. I brought him the package that Father had sent me for my birthday. I was grinning from ear to ear like a happy young girl with a new present, not the 37-year-old mother of two that I am. That's why he laughed at me, but the package held wondrous things. \n\nFather had not sent me a single sword like he said he was looking for, instead he sent me a Diasho, meaning big and small, a set of two swords plus mine had a third that's considered a long knife. Thus being the three-piece set of a Samurai noble; the Katana, the Wakizshi and the Tanto. In English they would call this; the long sword, side sword and long knife of a perfectly matched set. \n\nTaji easily read the end cap for the name of each. The Katana was Shirasagi which meant White Heron or Egret; the bird that fishes with a long stabbing beak. I thought it an excellent name for a sword. The Wakizshi or shorter side sword was Tsubame which meant Swallow, the small extremely agile, fast bird that takes insects from the air in flight. The Tanto or long knife was Sashimasu which meant simply 'Sting'. \n\nTaji told me of the symbolism of the White Heron, it could mean; purity, or fidelity, or even longevity. Those things were very much a part of me and my values, and thus emotionally keyed the sword into my life. \n\nSensei also told me that the White Heron dance of modern times celebrated moving the capital of Japan to Edo, which was re-named Tokyo. \n\nHe told me that my swords were of the style made in the Edo period of around 1600 to 1867. Taji also showed me the small maker's mark, that neither of us could read, it had taken some small damage. However the fact that all the swords had taken the same damage told him more. He said sometimes that when a sword smith has been shamed or declared an outlaw. Owners of the swords he'd made would strike out the small maker's mark, so they too were not shamed. There's a larger maker's mark and other information on the bare tang but neither of us wanted to strip the sword down just to read it. \n\nFurthermore, he told me that my sword set was very unusual... very. Most samurai were not rich nobles. They were more of a soldier/warrior hired in service to the Shogun or Lord. Most would start out being able to buy a sword, a Katana. Then later when their wealth increased, they would buy the Wakizshi. \n\nSeldom would those two swords match or be forged by the same smith. To have the same fittings, windings and wrap match too is even more remarkable, then adding the Tanto that matches increases that uniqueness of my set even more. Plus during the Edo period when my sword was made, the Tanto had fallen out of favor and was little used or even made. The only reason he'd heard of a set like this being created was as a gift set. To be used as a means to curry favor from someone much more powerful. \n\nWhen I described father's sword to him he said it was probably made in the Muromachi period of 1392 to 1573. Which would make it older than we thought it was. We had assumed father's sword was 400 years old, but if dated to the Muromachi period that could put it close to 600 years old. \n\nTime for toil is endless. \n\n(Betsy:) \n\nMy international work load is increasing and I'm not sure of why that is. But I won't complain because so much of my business depends on reputation and word-of-mouth. This trip I'm in D\u00fcsseldorf Germany for the merger of an old generation Foundry works. To a Japanese steel manufacturing firm, just not one of the major ones though. The word-of-mouth for my company has not shouted that loud yet. Ga Ry\u016b Hagane is more of a specialty steel producing company. \n\nIt's not a merger in the usual business sense. Eisen Haus or Iron House is an extremely old Foundry works company. Their company literature states it was founded in the 1300s and has been in continual operation ever since. \n\nIt's more than an assumption that's what the Japanese company desires, that reputation of antiquity and perseverance. So to the Japanese company it's more of a public relations acquisition than an actual merger. This merger's difference is in the size of the companies too. Ga Ry\u016b Hagane (Reclining Dragon Steel) is multiple times larger than Eisen Haus. \n\nPart of the reason they selected my company was my ability with languages, and that I spoke both German and Japanese fluently. So I'd be a negotiator that spoke to both parties and understood the nuances of both languages and cultures. I've mediated in three negotiations between German and Japanese companies before. \n\nBoth companies were bringing four delegates, plus all the supporting staff. So I decided to bring four employees too; one of my best accountants, a junior partner for writing contracts and an entry-level IT technician, who will also work in data entry. \n\nI had my IT technician preset-up two desktop systems on rolling carts with large dual back-to-back monitors that split screen and also tied in with my laptop. The desktops had our accounting programs on them and our basic forms for writing contracts. I had him set up one desktop with one side in German the other side in English. The other desktop was set in Japanese and English. Each desktop updated by English data entry and then translated that entry into the other language automatically. \n\nEach desktop also had its own wireless address, so each individual of either group can link in and see the figures and changes in both their own language and English. I also had my laptop which was set up with a projector. I wanted it to be switchable to show the same information in each language. \n\nMy junior contract attorney and my IT technician would man these terminals. \n\nIn doing my usual pre-negotiation research I found that there was a commonality between myself and the leaders of each delegation... Swords. \n\nHelmut Reinhardt of the German delegation is involved with preservation work and study of medieval German weaponry. \n\nHis research into his own genealogy shows him to have ancestors in the Teutonic orders and the 'Knights of the hospital of the Blessed Virgin of Jerusalem.' He's also a contributing fellow to the Wurttembergisches Landesmuseum in Stuttgart where they maintain a large collection of medieval swords and weaponry. \n\nShijo Komori, the lead Japanese delegate has much the same interests and martial heritage as Herr Reinhardt. \n\nHe's also a member and a contributor to NBTHK, the Nihon Bojutsu Token Hozon Kai. That's a Tokyo-based organization and Museum for the preservation of Japanese swords, weaponry and their history. \n\nHopefully their common interests will make my job somewhat easier and more enjoyable. \n\nEven though we're in D\u00fcsseldorf where the offices of Eisen Haus are located, I'm still doing my usual and acting as host, at least to the Japanese delegation. When I do these mediations between international companies, I'd choose a neutral location and host both companies. However both delegations wanted the negotiations held in Germany. \n\nI'll still be hosting both the lunch and dinner at a private dining room within the hotel, also an informal open invitation breakfast at the hotel's restaurant each morning. \n\nThe hotel I've chosen is both formal and elegant with an old world ambience and historical buildings. I selected it partially because of the Japanese interest in the antiquity of Eisen Haus. It didn't hurt that I loved its beauty and elegance too. I love to provide that exceptional experience for my clients. Especially since I believe that's part of what makes my company so successful. \n\nI know this hosting of both meals and lodging increases the cost to the client. But it frees up their staff by having us handle the minor details. Plus it allows my staff to do some shopping and negotiation of services allowing a slightly better profit margin. Plus like now, I can specify criteria such as the style of lodging or in this case its antiquity. But just a more satisfied client by having them feel pampered during what could be a trying time. \n\nTime passed is only a memory. \n\n(Betsy:) \n\nIn the formation of my company I was very fortunate. Or to put it bluntly, just plain damn lucky, luckier than anyone has a right too, or deserves to expect. Lucky in both the opportunity and timely manner that it happened. But I also had a high and sudden learning curve in both how to run the business, and my position within that business. \n\nThe cascade of opportunities that presented me with sole ownership of that company, plus in having it successful and profitable at such a young age. Just three years after my University graduation was what's so extremely lucky. \n\nThat time of my life turned out to be the most stressful and jumbled period of my adult life, yet one of the most satisfying periods. Even though this period was so successful parts of it still generated a great deal of guilt. My usual messed up emotions seem to not handle success easily. \n\nI've heard it said that the universe seeks a balance. My early life was so emotionally destructive that suicide was a little devil that sat on my shoulder whispering into my ear constantly. \n\nThe pendulum of the universe started to swing the other way for my life right after I graduated from the University. That shift started by getting the opportunity of joining this firm, then finding Robert the love of my life. The birth of my daughter Jeanette and then my son Jonathan. Then the growth of my company, brought those years of my life from one high point to another... to another. Seemingly in scant few years, and that trend started with the creation of this firm. \n\nOf course, life always has its trials. The low point in these years of my life was the death of my mother from cancer. Then the immediate emotional crisis that almost took my father from us. My father has such an indomitable physique and dynamic personality that even a broken heart couldn't break him. \n\nNot physically, but mentally we came so very close to losing him. Not to death, suicide or insanity, but into the pathways and remembrances of my mother Annie within his own mind. My brother and his daughter found Father wandering those pathways totally catatonic in the real world. Only to be brought out of that state and dragged back into life by his ten-year-old granddaughter Katie. To help her, she formed a little group of friends. That group became known as their 'Coterie' and they formed it of six 11-year-old girls and one forty-nine-year-old man. \n\nOf course my mixed up psyche created some guilt along with the good times of this part of my life. It created the worst sense of guilt when my father retired from his company. As part of that retirement Father gave most his company over to Donald and myself, he retained less than a quarter. \n\nSo suddenly becoming the joint owner of an international, multimillion dollar, technical manufacturing company... because my mother died. Becoming financially set for life... because my mother died, created that complexity of guilt within me. \n\nI had a singularly good relationship with one of my law professors that was also a mentor for me. My accelerated graduation and passage of my bar exams coincided with a plan of his and one of his old schoolmates' to start their own firm in contract and corporate law. They offered me the opportunity to join that new company, and I jumped at the chance. I was 24 because of that early graduation from university and law school. \n\nBecause of financial help from my parents I was able to 'buy in' and become a founding partner in that firm. They even let me name the company, Einin International. My father's company was named Einin Microsystems. Einin was Mother's middle name. \n\nWith both partners being older and more experienced than I was. It was understood that I would be a learning partner as the company became established. But sadly that was not to be. \n\nAt less than two years into our company my old Professor started making noises about returning to academia. \n\nUnfortunately his friend's marriage started to implode at the same time. His wife's main contention seems to be in the amount of his travel and time away from the marriage. Women won't have to guess why she distrusted me. I was a too young coed that traveled internationally with her husband. I'd guess her trust in her husband was insufficient too. Regardless of his reassurances, mine or the Professors' her suspicions of me never changed. \n\nA thief always thinks that everyone else is trying to steal from them, were my suspicions of her. However, that was none of my concern and I left my suspicions un-said. Also because they were just that... suspicions \n\nSo barely into my learning curve both partners wanted out. With the Professors' reputation and Stephen's experience the firm was profitable and growing rapidly right from the start. Regardless, they both still expressed desire in wanting out of the firm. \n\nI consider myself a shy and retiring introvert, and my conduct shows that. Surprisingly though I also have that proverbial, 'mile wide stubborn streak', and I wasn't ready to give up. When Stephen caved into his wife's demands he wanted to sell out to the Professor and me. But the Professor wanted out too and was reluctant to increase his investment. \n\nHaving taught law at the University level for so many years the Professor had a lot of contacts in our profession. He contacted numerous people looking for someone to buy into the firm. Even though the firm's growth was rapid and profitable. It was too new to be worth what we felt it should be, or even what we needed to break even on our investments. \n\nNeither the Professor nor I were willing to 'bargain basement' out the sale just to return some portion of our investment. Stephen just wanted out, even at bargain basement prices, he'd already moved on. \n\nIt was barely a year later when he caught his wife with a lover and divorced her. But because of financial aspects of the divorce he didn't even try to buy back in. \n\nIn our firm the Professor was our contract attorney, that's what he'd taught for years. His friend was the 'salesman', the negotiator and the only one with some language skills... besides myself of course. My knowledge of languages was why I was traveling with Stephen to learn negotiation skills. But with Stephen bowing out because of his personal problems. We needed someone with Stephen's talents and experience. \n\nI'd been training for that position, but I wasn't ready to assume it. Because of my demeanor and shyness my efficiency in that position would be hampered. But I had the language skills necessary to continue with our international clientele, even to expand into clients with other languages. Languages along with my 4.0 GPA and my early graduation were why they'd asked me to become part of the company. \n\nOn Father's 'Glory Road' that he learned so many years before from his drill sergeant. The imperative for the mind portion of that; body, mind and soul was to learn as much as possible each and every day of your life. I spent more time on my individual studies than I ever did in school work, even at the University. \n\nLanguages always fascinated me and also came so easily. So even as a young girl I'd studied languages and cultures, mostly just for fun. \n\nFather likes to brag about me though; he'll tell people that I can speak eight languages. But that's not exactly right. I can cuss in Russian and that's somewhat handy and fun. I can understand quite a lot of the language but I can't speak it fluently, at least fluently enough to use it in business, yet. It's the same for Hebrew although its cussing can be more creative. That can be said for any Arabic language though. \n\nI spoke English of course; Japanese, German, Latin, Chinese, Spanish and Modern Standard Arabic are the languages I can speak fluently. With some languages that are close to those main ones. Such as Portuguese, Castilian Spanish, Dutch or some minor Arabic dialects are ones that I can function in. \n\nSmart money or just plain good sense, told me to take what investment I could recoup from selling the firm and count the lesson of starting this firm as a learning experience. Even Father told me that would be a sound business decision. But nobody ever said that stubborn streaks are logical or even made good business sense. \n\nSo came the only time in my life that I played my 'Daddy's Baby Girl Card' and got him to loan me the money I needed regardless of his concerns. I bought out the professors friend Stephen at a 'somewhat' bargain basement price. \n\nI then made an agreement with the Professor to buy out his portion of the firm at a better price, only with a one year delay in the understanding that he would continue training me for that one year. \n\nThen in his wisdom and source of contacts, the Professor arranged for me to consider Madeleine DeVoe as a consultant and trainer. In some ways this proved to be an invaluable step in the success of my company. \n\nMadeleine DeVoe was a seventy-two-year-old woman who'd been a pioneer for women in the law profession. She had done it all; from a clerk, to legal aid, to senior partner, plus her time at three different levels of the judicial bench. The Professor said that she'd even been considered for a Supreme Court Justice position. \n\nBut she'd squashed that rather rapidly. Her comment was that she loved life too much, meaning her own quality of life. \n\nEven retired at seventy-two she was an elegant, sophisticated lady who radiated power and beauty. The evening that the Professor first talked about her, first suggested hiring her. He described her as 'a ball busting bitch that kicked men's asses.' \n\nYet, she left them with their tongues hanging out as they watched her beautiful backside sway as she walked away with the prize. 'But' the inebriated professor said: 'she'd never have given them even that clich\u00e9d 'time of day.' There'd never been the hint of impropriety about her, no one dared. \n\n\"Bernard, I thought you said you were bringing me a very tough case to tutor.\" Were the first words I ever heard her say. \"This girl will be amazing... purely amazing. With the assets she has she's going to be invincible. You men! I swear you really can't see can you! You can't even look beyond the obvious concerning style and power. Sure, she looks like a puppy that's about to be kicked. If I wasn't such a good judge of character, I'd think that was an act. But it's not is it Ms. Teague?\" ",
        "\"No ma'am, I was quite abused and bullied throughout most of my formative years, by all the other children and some adults too. I've never gotten over that time of my life and have always been introverted.\" \n\n\"Well Ms. Teague, you must've been really traumatized because I don't think 'you' even know who or what you are. Why am I sensing danger? I can't really understand that. When you and Bernard were approaching me the way you walked caused me to think that Bernard had brought me a lioness I would have to tame.\" \n\n\"But here standing in front of me is a diminutive puppy waiting to be kicked. But feeling that danger and looking at you. I think that if I'd tried to kick you I'd pull back a stump without a foot. Why is that Ms. Teague, what makes me think that you're so dangerous?\" \n\n\"I'm not dangerous, or even assertive! I never retaliated against those children that bullied me. But my father is responsible for what you're seeing. \n\nWhen he was a young man, Father was taught a way of life... A philosophy much like the Bushid\u014d that samurai practiced. Except his is non-violent, he even calls it the 'Glory Road' and quotes the 'Golden rule'.\" \n\n\"Part of that philosophy includes an extreme amount of physical fitness. Father included the martial arts as part of that fitness. So for me that martial arts and physical fitness training started at age 10 and it's a lifelong commitment that I still continue.\" \n\n\"Well, that explains some of what I'm seeing. I can't see much of the detail of your figure or musculature through the bulky and drab clothing that you're wearing. But I would guess that your physique is quite intimidating, certainly your height is. Plus you move like that lioness I first saw. But Sweetie, just like you 'can' train salesmanship or teach charm. You 'can't' teach charisma... you can't teach someone how to radiate instinctual fear, but you have both.\" \n\n\"I've met martial artists before, even some of them that were recognized champions. They might've been some of the most physically dangerous people in the world, but they didn't radiate danger. I've had 1% bikers; Hells Angels come before my bench and not radiate danger. Yet I had a diminutive accountant come before me that I almost asked the bailiff to stand beside me for protection!\" \n\n\"But whatever... we might delve into that some more later. I imagine you and Bernard have discussed me and what I might do for you. I'd like to have you tell me exactly what you hope to accomplish from my services.\" \n\n\"Prof. Higgins and Stephen Carson started this law firm and in spite of my youth they graciously let me join them. The firm was set up to provide services in contract writing and also legal negotiation and mediation services. As you know Prof. Higgins, you're aware that his specialty is in contract law. Stephen Carson was our negotiator and because of his language skills we have international clients.\" \n\n\"Because of some personal problems Stephen Carson has left our firm and sold me his rights to our firm. I've negotiated with Prof. Higgins and I'll buy him out in a year, he wants to go back to teaching. During that year he's consented to continue training me. But he felt that there were areas needed for my development that he wasn't suited to train me for. Consulting with you was the idea he came up with.\" \n\n\"With my ability in languages, the World Court and European Union courses I studied in college, and my grade point average. It would seem like I'd be well suited to handle the international negotiation part of our business. But both the Professor and Stephen told me that I'd have to change my demeanor and personal presentation to do so, I'm very aware of that fact too.\" \n\n\"With my presentation remaining as it is I'm severely handicapped as a lead negotiator in any language. As I acquire total ownership of this firm, that position is my logical option. But as things stand right now... I'd fail.\" \n\n\"I need the ability to step into a conference room and immediately control that meeting, and do that definitively yet respectfully. In addition, I would need to learn how to use all my 'assets' as you call them. I need to learn how to use them as a woman, an ethical and honorable woman.\" \n\n\"Well Sweetie, there's quite a wish list behind those few simple statements. Here's what I see going forward... if you retain me. There's two main things we'll have to do. First is training you to adopt an additional persona. Not acting, not make believe, not putting on Superman's cape to intimidate the criminals.\" \n\n\"You must learn how to 'be' Superman. How to have both a Clark Kent personality and a Superman personality...\" \n\nSuddenly I realized Justice Madeline DeVoe had slowly slid into a very casual Maddie. Her speech and mannerisms differed completely from my first impressions. \n\n'Maddie' looked like she'd be perfectly comfortable in a county farm kitchen chatting with the neighbor ladies over coffee. Despite standing there in front of us in her very proper business suit. \n\nThe first clue was when she called me 'Sweetie.' Incredulously I realized all the little changes she made to arrive at 'Maddie'. As I realized that and my jaw started to drop open, a twinkle and a wink appeared in her eye and a curtain disappeared. Leaving Justice Madeline DeVoe standing there so regally intimidating. She didn't even say a word and you just knew... that Maddie had left. Yet in the next instant she returned. \n\n\"Yeah Sweetie, I was born on a mid-western dairy farm. Rubber irrigation boots and wading in cow shit before the crack of dawn to get first milking done. Only when that was finished, plus our other morning chores. Were we allowed to head for school... after prayers and breakfast of course. Third milking was done right after-school. Then dinner and homework plus a few hours sleep, and we started the next day in the dark and rubber boots again.\" \n\n\"I've been an Attorney and a Judge for far longer than I've been that mid-western farm girl I was born as, so much so that I don't really know which one is the real me anymore.\" \n\n\"You'll have to learn how... How that persona can become so much of you... which one is real? Don't know... But you'll have both and they'll be switchable as you need.\" \n\n\"Second thing we'll do is craft that persona. To teach it how to walk, talk, and look real... no, not look... be real. Teach it the body language and mechanics that says a polite, 'Don't fuck with me' attitude. To aggressively broadcast poise, elegance and sophistication that say. 'I'm beautiful, admire but touch at your own risk!' \n\n\"Plus Sweetie we'll work on those clothes too. But always remember Sweetie that fashion, style and makeup are like wearing Superman's cape. It won't impress 'all' the criminals all the time, but BEING Superman 'will' impress them all... all the time.\" \n\n\"Putting Superman in the sharpest tuxedo around will impress everyone... even you. With the right clothes you'll feel sharp, sexy and powerful and your confidence will show that to the world.\" \n\n\"I'll teach you how to release your inner goddess... no, wait a minute... that's not right. You're... not just a Goddess, you're... Athena! Yeah that's right! Athena the Warrior Goddess. Right now you're the Warrior Princess training to be Queen.\" \n\n\"Huh, that's funny. That's what my dad calls me sometimes, an Amazon Warrior Queen.\" \n\n\"Well there you go. That's what we'll turn you into, a Warrior Queen. With your assets Sweetie that will be easy-peasy.\" Maddie was obviously fully present. \"With those intense white-blue eyes, that height and that oh so impressive physique. Add in your natural beauty and intelligence. The moxie and presentation we'll teach you, plus that sense of dangerous you radiate. Then that Amazon Warrior Queen won't even have to say a word and she'll own the whole conference table and everyone on it! Then, it'll be up to that grade point average and your intelligence to keep them bound to you.\" \n\nMadeline DeVoe cost me a lot of money. But she was worth every penny. I don't think my company would even be half as successful as it is without her training. \n\nBut in retrospection, many years later, as I looked back on this time and Madeline DeVoe's training. I'm not totally sure that she helped me more than the problems she caused me. \n\nThose problems came from my ability to hold two completely different personas. Then the internal tension and conflict those two forces created when they competed within myself. \n\nBut like everything else in my life those problems weren't financial, business oriented, or with my personal relationships. They're all within my own emotions, mind and my ultimate view of myself. I seem to have always been my own worst enemy... Also my harshest critic. \n\nTime only allows one first. \n\n(Betsy:) \n\nBAM... it wasn't so much that I'd slapped down on the table hard. I slapped like they had taught me to fall in judo with cup hands and rocking wrists. That's what made it such a loud concussive noise, causing everyone at the table to jump... \n\nWell, everyone jumped at the table except Herr Reinhardt. He turned to look at me but he reacted as I thought he might. By reacting much less than all the others. So maybe my suspicions had some basis after all. \n\n\"Well on that note gentleman even though it's a little early I'm calling lunch. But let's return at our normal time, just hopefully more relaxed and constructive. If Herr Reinhardt and Komori-san will remain with me for a little while, I would appreciate that. So gentleman we'll see you after lunch.\" \n\nIt lost some effect that I wanted when I slapped the table as I had to say that small announcement in both German and Japanese. \n\nI realized even before the start of these meetings that many people know at least some English. Even to the extent that those who can't speak it will still be able to understand if it's spoken to them. \n\nBut I'd decided before the start of these meetings to use each of their native-languages for greater precision and understanding. There're so many nuances in the spoken language. If I used that native-language I could also use those nuances to get a more complete understanding from each delegation. \n\nTime a memory within a memory. \n\n(Betsy:) \n\nThis wasn't the first time I'd asked to meet with Herr Reinhardt and Komori-san separately. Our first meeting was the evening before the negotiations started... \n\nI set that first meeting up to be theatrical and symbolistic. I had brought my Katana with me on this trip and I would use it to show that symbolism. Also to show both men the common interest we shared... swords. \n\nFor the theatrical part I staged my entrance and clothing to be just that theatrical. I was showy and dressed to impress just like Madeline DeVoe had taught me so many years ago. In fact my outfit was just a new model of one that she had set up for me. \n\nThat evening I sent both men directions and the number of a meeting room within the hotel. I watched for their entrance from a partially closed door across the hall. Fortunately they arrived very close to each other time wise, with Herr Reinhardt arriving last. \n\nLetting a full minute lapse before I stepped into the room after Herr Reinhardt. I didn't slam the door shut, but it was with enough sound to draw both men's attention sharply to me. Pausing a few seconds I just stood there to let them take in my appearance. \n\nI wore a cream colored silk blouse that was custom fitted so it bordered on not being business appropriate. The blouse was of a style that sometimes women wore under a blazer in summer's heat. It was sleeveless plus it also left most of my shoulders and some of my back open, and yet still had a high collar that buttoned up almost to the chin. Its style did as I intended it to, and left some of my upper body musculature visible and intimidating. \n\nThe dove gray blazer I wore with this suit was folded over my left arm, and I held my Katana in my right. The matching skirt of this suit was again fitted and again bordered on the edge of not business appropriate. \n\nThis left a lot of that musculature in my very long legs visible, plus the charcoal gray 4 inch high heels that I wore. When Madeline had set this outfit up for me I really question her about using these 4 inch heels, I'd never worn high heels before in my life. Wearing 4 inch high heels at my 6 foot 6 height put me approaching 7 foot tall. \n\nShe said that there were two reasons; the first being to increase the intimidation factor of my height. But mostly for when I changed shoes, either later that day or the next day, into flats. Then I would subconsciously seem to become more approachable and friendly. But that intimidating first impression would be already set in their minds. \n\nAs I took the several steps necessary to greet both men, I let the clack of my heels sound out. I also passed my Katana back and forth between hands as I put on the blazer thus changing from a somewhat casual appearance to a more formal business appropriate. I approached Komori-san first because he was eldest. Then changing into my diminutive 'Clark Kent' persona... \n\n\"Konbanwa (good evening) Kowori-san may I present myself as Elizabeth Ann Williamson. If I may be allowed I will be your mediator for these proceedings.\" I'd bowed deeply to the correct 45\u00b0 angle with my eyes lowered and I had my Katana presented horizontally across my palms. \n\n\"Just as the Bushi (samurai) did to their Shogunate in your culture's history. I symbolically present my sword to you to signify that I will be working for your benefit at these coming meetings. \n\nRising to stand I swept my arm toward Herr Reinhardt. \"If I may be allowed Kowori-san, I wish to present to you Herr Helmut Reinhardt who will be the leader of the German delegation and the contract signing representative of Eisen Haus.\" \n\nSliding into my Superman persona, yet a respectful Superman persona I said. \"Guten Tag (Hello) schwertbruder (sword brother) Herr Reinhardt.\" As we both reached out to shake hands, I bypassed his hand and clasped his forearm in the movie theatrical ' Warrior's Handshake.' \"I wish to introduce myself as Elizabeth Ann Williamson and I will be the mediator for these proceedings.\" Then prefaced by; \"What I said to Kowori-san. I then reiterated in German what I'd said to Kowori-san... somewhat paraphrased. \n\nThen I continued saying, \"like the Japanese samurai the Teutonic Knights also took a knee and presented their sword to Von Edlers (male nobles) or the clergy they were to serve. So I'm symbolically presenting my sword to you as well as Kowori-san. I'm using my sword for more than just its symbolism though.\" \n\n\"The three of us have a common interest in swords. Just as you are a contributor to Wurttembergisches Landesmuseum. Kowori-san is a contributor to NBTHK, the Nihon Bojutsu Token Hozon Kai. Which is dedicated to the preservation of Japanese swords and weaponry?\" \n\n\"Just like you have an ancestry in the Teutonic orders, Kowori-san has an ancestry in the samurai ruling class. As his past ancestors were the Daimo's of the Mori Han province. \n\nUnfortunately my ancestry is not as illustrious; we're just poor Irish farmers. However, I've been training with master level instructor Taji Toiguchi in Kenjutsu for several years.\" \n\n\"Herr Reinhardt I wish to introduce you to Shijo Komori-san the signing representative of Ga Ry\u016b Hagane (Reclining Dragon Steel) and the leader of the Japanese delegation for these proceedings.\" \n\nThen I turned to Komori-san and reiterated what I had just told Herr Reinhardt. But as I was doing so I thought that maybe I'd made a mistake in thinking to retain using their native-languages because of the back and forth 'tennis talking' necessary to translate for both sides. \n\nSoon after my introductions and other small administrative discussions that we had to make. We started to get acquainted as individuals with a common interest. They both can speak what I guess would be called broken English, but as we tried to talk in that broken English along with the different syntax and phrasing between languages. Different nuances and emphasis of speech cause me to realize that I hadn't made a mistake. Then again I took over the task of translating... tennis fashion. \n\nTime and task continues. \n\n(Betsy:) \n\n\"Gentlemen, I called an early lunch asking you to remain with me rather than going to lunch with everyone else. Because I have a very grave concern.\" Turning from Herr Reinhardt I said that sentence in Japanese to Komori-san. Continuing in Japanese... \n\n\"I require a high degree of professionalism from both myself and my employees. Naturally the most important facet of that professionalism is to remain completely impartial in these negotiations. \n\nI regard my role as a facilitator in these meetings as important as being mediator or negotiator. I believe that my company's duty in these negotiations is to provide some legal structure for reasonable discourse and the exchange of ideas leading toward a purpose. I believe my company's duties all fall within the framework of the meeting itself.\" \n\n\"Of course that changes after the agreement has been made between parties. Then it is the duty of my company to write up the contract that legally specifies that agreement.\" \n\n\"But having said that, part of the impartiality that I require of myself and my company is in the parity of abstention, what I mean by that is that we take no active participation in whether negotiations succeed or fail.\" \n\n\"That is solely up to the participants, especially to what happens outside the meeting parameters. I am neither Judge nor jury in a court room of fair conduct. Polite conduct yes, the old clich\u00e9 of 'buyer beware' applies to both delegations in these meetings.\" \n\n\"Having said that I don't know if I can stomach continuing to do that in this case.\" \n\n\"Komori-san I have received information a Ga Ry\u016b Hagane Corporation jet has returned to the airport and is being fueled and resupplied. Have you decided on leaving the negotiations? If so, when is your expected departure time?\"  \n\n\"Williamson-san we have not 'completely' made that decision yet. But it will be made either this evening or very early in the meeting tomorrow. If we choose to depart, it will be before the midday meal tomorrow.\" \n\nWithout turning away from Komori-San, and with my back to Herr Reinhardt I asked. \"Would you watch Herr Reinhardt for me Komori-san? Then switching to German... \"Herr Reinhardt would you please tell Komori-san your wife's name? When there was no response for several seconds I asked again, louder. Herr Reinhardt will you tell Komori-san your wife's name? Again when there was no response... \n\n\"It is as I suspected Komori-san; Herr Reinhardt is losing his hearing and has not heard the insults and racial remarks his compatriot has been muttering. So I guess we should try to not be too critical of him. I'm sorry Komori-san that it has taken me this long to realize this disability.\" \n\nThen I turned to face Herr Reinhardt and reiterated to him in German everything I said to Komori-san. Until I got to where I'd talked to Komori-san about the arrival of their corporate jet then I paraphrased in German... \n\n\"... I got information this morning that a Ga Ry\u016b Hagane Corporation jet has returned to the airport here in D\u00fcsseldorf. Due to my grave concern I asked Komori-san what their departure time was. He indicated that unless things change, they will depart before lunch tomorrow.\" ",
        "\"WHAT... Why are they leaving...? We have not finished the negotiations yet!\" \n\nI like Herr Reinhardt, it's not in his manner but in some other ways he reminds me of my father. He's a big strong man that's also the salt of the earth. But unlike my father Herr Reinhardt is a loud, boisterous and jovial man. Who has a 'hail fellow well met' pat on the back for everyone he meets. I just didn't associate the volume of his voice to hearing loss. But I guess Edsel Dillof knew of his hearing loss and took advantage of that fact. \n\n\"Herr Reinhardt how long have you been losing your hearing?\" \n\n\"Losing my hearing... What do you mean, and what does that have to do with anything?\" \n\n\"Because any agreement between your two companies stands on the edge of a cliff and one man is trying to push it over. He's been using your hearing loss to keep you unaware of what he's been doing.\" \n\n\"I meant what I said about the professionalism I try to attain with my company. That means being completely neutral between delegations. I also don't participate in any part of the member selection of either delegation.\"  \n\n\"I've been in some negotiations where I 'suspected' that there has been industrial espionage going on, or other kinds of skullduggery. That type of conduct has sometimes tested my resolve for that professionalism. But if I don't have proof of anything illegal happening I stay completely out of that.\" I turned and looked over toward Komori-san and asked in Japanese. \n\n\"Komori-san I suspect that Michio Sanya can understand German, am I right?\" \n\n\"Yes Williamson-san, it is rudimentary but he can get the just of what's said.\" \n\nTurning back to Herr Reinhardt... \"I just asked Komori-san to substantiate my suspicions. Being that Michio Sanya of his delegation can understand some German. Edsel Dillof plausibly suspected that someone in the Japanese delegation would understand German, it makes sense.\" \n\nTurning to Komori -san... \"If you please Komori-san will you convey my apologies to your delegates. Also would you commend them on their stoicism in the face of these insults and the abominable conduct they've been subjected to. That they retained their professionalism in the face of these insults is 'highly' commendable.\" \n\n\"Please take no insult Komori-san, but if I may be allowed to continue talking to Herr Reinhardt by myself, I would greatly appreciate that.\" \n\n\"Hai.\" Komori-san bowed politely, turned and left the meeting room. \n\n\"Mist, (shit or animal dung) why is he leaving? We're not done with these meetings so he shouldn't be leaving.\" \n\n\"He's leaving because I asked him to. I wanted to talk to you about some things that he need not hear. Herr Reinhardt, I've never actively influenced a merger to succeed or fail before. But I'm trying to convince myself that I'm not doing that even now. What I'm actually trying to do is stop an injustice perpetrated by one man for personal gain, especially when his desired outcome, for these negotiations, is totally opposite of everyone else.\" \n\n\"Also because I abhor the manner that he's using to sabotage these negotiations, racism is one tool he's using. Cultural slurs, innuendo and insulting conduct to Japanese culture are some things he's been doing \n\n'Yellow monkeys' is one term Edsel Dillof has muttered loud enough for Michio Sanya to hear, but there have been other insults voiced as well. But he thinks he's saying it too softly for us here at the head of the table to hear, especially you because of your hearing loss. However my hearing has always been exceptional.\" \n\n\"Why Bemot Herzfeldt, who's sitting right next to him and can obviously hear those insults. Has not made you aware of what Edsel Dillof is doing is entirely your concern, not mine.\" \n\n\"Some of the insulting conduct to Japanese culture he has been doing takes a more than a passing knowledge of proper Japanese business conduct. So I suspected that he's receiving some coaching. So with the insults he muttered on the first day and my suspicions. I hired a German private investigator to follow him.\" \n\n\"Both the second night of the negotiations and last night that private investigator followed him to two different restaurants where he met with employees of two major real estate brokerage firms. \n\nI'm sure you're aware of the appraised value of some Eisen Haus holdings. With the longevity of Eisen Haus properties that were acquired many, many years ago are now very desirable...'very-very' desirable!\" \n\n\"I suspect some of those properties are actually worth several times the assessed value. That's because of their desirability to different types of businesses. Inner-city properties in a major metropolitan area like D\u00fcsseldorf are extremely rare. Such a location to a hotel conglomerate would cause the value of those holdings to skyrocket.\" \n\n\"With the use of a mini-parabolic microphone that private investigator was able to listen in on parts of the conversation Edsel Dillof was having with his fellow conspirators. I called them that for just that reason, conspirators, because that's what they're doing.\" \n\n\"The private investigator wasn't able to get all the details. But what they're doing is trying to force the failure of these negotiations. Edsel Dillof will use that failure to in some way take control of Eisen Haus. I don't know how they're going to accomplish that, again that's your concern.\" \n\n\"After that's accomplished certain of those valuable properties will be sold to those brokerage firms, undoubtedly for less than they might be worth, but also undoubtedly with some commission going to Edsel Dillof.\" \n\n\"Another example of Edsel Dillof's racism was a comment that the private investigator recorded. I'll let him know to release those recordings to you. But that recorded comment was: 'the Heritage of Eisen Haus should only be kept in the hands of 'true' 'pure' Germans.' I cringed when I heard those words. Because I think that we all know when and who used those words before.\" \n\n\"Personally I detest racism! It's inconsequential if it's black against white or white against black, or even yellow against green. I think the color of a person's skin has nothing to do with their intent, intelligence or ethics. AND I think those matter a great deal more than skin color or even the color of the shirt you're wearing. I think racism is just as ridiculous as judging a person by the color of their shirt. But I guess there's people that'll even do that.\" \n\n\"Well, back to the matter at hand. I understand and agree with the Japanese delegations feelings of alienation and disparagement, my own are similar. It's such a shame that one man's greed and bigotry can affect things so drastically.\" \n\n\"Once I realized your hearing loss and that you're unaware of what Edsel Dillof was doing. I felt that I ethically had to make you aware of that before these negotiations completely collapsed. Since I've now done that as we Americans put it. 'The ball is in your court' and you and the board of directors of Eisen Haus have some decisions to make.\" \n\n\"Until someone has made those decisions, I feel it is of no purpose to continue meeting. So I will inform all the others that our afternoon session will be canceled and we'll start again in the morning. Guten Nachmittag (good afternoon) Herr Reinhardt.\" \n\nTime past always affects the future. \n\n(International phone call to Japan:) \n\n\"Konbanwa.\" (A Good Evening telephone greeting.) \n\n\"Eight-nine-three.\" (Ya-ku-za) The worst possible hand in Oicho-Kabu card game. \n\n\"Hai.\" Buzz... click... click... blank noise... \"Hai... Kakuho shimasu.\" (Secure) \n\n\"Message to the Oyabun (head boss) Dojin-Kai clan (Yakuza crime family) from Dai Kuroki at Ga Ry\u016b Hagane negotiations.\" \n\n\"I believe I have seen the Katana from the set that those cursed Tekiya bastards (thieves and peddlers sect) gave to the Emperor Go-Y\u03cczel during the 16th century talks that allowed them honors to start carrying Katanas like samurai and then banned us Bakuto (gamblers sect) from the same honors.\" \n\n\"Then when the same smith made swords for us he was outlawed and the Emperor had the gift set struck and the smith executed. Yet still allowed those Tekiya bastards sword honors.\" \n\n\"Yes, I remember that legend. I'm sure that the Oyabun will want them. You know how he is about swords. A sword with Yakuza history? He'd wet himself to get it. Can you get them?\" \n\n\"Not easily, I'm not sure that the other two are with her. I also have no way prepared to get them back to Japan.\" \n\n\"Her? A woman has it? Just slap her bottom and take them from her. It can't be that hard to take them from a woman.\" \n\n\"You haven't seen this woman! She is a giant witch and sword trained with Akuma Shisen. (Daemon eyes) Plus if we take the Katana now we might miss being able to get the other two.\" \n\n\"Stupid superstitions! Just slap the bitch and take the damn sword! Ah... Wait a minute, maybe you're right. Hai, better to get them all at once. I'll talk to the Oyabun and let him decide.\" \n\n\"He'll have to decide later. The negotiations are done and we're leaving this morning. That's why I won't be spotted making this phone call. I'll send him all the information I have on her then he can decide what to do about the American daemon bitch.\" \n\nTime can be good even in its passing. \n\n(Taji:) \n\nI can hear the laughter of the little children, but then I also hear the silver bells of her laughter. Betsy and I had just finished working out with her Wakizshi and Tanto in tandem. I had went back to start water heating for tea because we took a few minutes after each lesson and workout to converse and drink tea. Often some children of the neighborhood would come early to see her practice. Then they would run around and play on the floor of the dojo while we talked. \n\nThat was obviously that had happened, but what I found when I stepped out onto the practice floor was unusual. The cries of the children were happy, yet wanting has they danced around her. They wanted her to 'make it hum, make it hum Lady'! AND she was, and I wouldn't have thought it possible. She had her bokken spinning above her head so fast that the hardwood of the blade was picking up a vibration as it spun though the air! \n\nIt was vibrating enough to thrum as it went through the air. A solid shaft of hardwood was vibrating internally! She had enough control to make the sound oscillate. \n\nOn the Discovery Channel I had seen a show about the Australian aborigines. They used a small piece of wood or bark at the end of a rope. To make a noise, a whirring thrum that could 'talk' over great distances, especially at night. They called it a bullroarer, and she was doing much the same thing with her practice sword. \n\nThe bullroarer's cord was sometimes 6 feet or more in length. Betsy's bokken was a little over 3 feet. The speed at the end of a 6 foot rope should be faster than a 3 foot practice sword. That she could get a solid piece of hardwood spinning fast enough to vibrate amazed me, but entertained the children. Her laugh, that chime of silver bells, is what entertained me. She laughed nowhere near enough. \n\nI unintentionally taught her a new game that the children love. I envision it as a lesson and a training aid. A lesson in Katana maintenance and the training aid to add precision to her incredible speed. \n\nThe lesson in maintenance was to improve her skill at maintaining the edge of her Katana. I had bought several boxes of hard rubber balls, just slightly larger than a fist. As a training aid I would throw one or more for her to cut into pieces with her Katana. \n\nBut I soon discovered that one old man is not equal to several small children in being a training aid with rubber balls. Betsy started bringing sacks full of rubber balls for the children. Throwing accurately or correctly is not always a skill small children have, which increased the difficulty of the training. Plus excited children often throw more than one, or faster than they meant too. \n\nAfter the first round of balls thrown the pieces picked up just got smaller and harder to hit. She taught them what size was too small. When they pick up one too small they had to dispose of it in the box or they couldn't play the game again. \n\nThat way we had less to sweep up after the game, but we didn't mind. \n\nTime is all past... present is but an instant, future yet to be. \n\n(Taji:) \n\nD\u00e9j\u00e0 vu is what hit me in the face when I saw him. Oh, I recognized him right away even though I've never seen him before. Even from across the room I could see the faint glint of one white-blue eye and one green on a very large man. Honored Father, Mr. Daniel Teague has come to show me his sword. D\u00e9j\u00e0 vu... him standing in the entryway of my dojo just as she had, but he wasn't danger like she had been. Honored father didn't move like she did, but for a big man he still moved with the ease of a dancer. \n\nHe was Karisuma-Tekina kojin no chikara, full of 'Charismatic Personal Power'. He was a mountain of it that had nothing to do with his size. His presence drew the eye as naturally as a magnet drew metal. That presence was larger than life with roots that went down into the bones of the earth. Here was a man who did what was necessary, no drama, no fuss, just what was necessary, 'when' it was necessary. \n\nYes he was a big, heavily muscled man that filled any room he was standing in. But he didn't look as big as I thought he would have. Nor did he look anywhere near the age that he should have. \n\nLooking less than huge was because he didn't look stout or heavy even though his shoulders looked like he had football pads on. That his biceps looked larger than my thighs, his hips and waist looked tiny for those shoulders and his legs were long, with thighs that approached the diameter of my waist. \n\nHis appearance was one of those that left you puzzled. I knew in my mind about what his age should be by knowing his daughter's, but standing there he looked many, many years younger. Yet if I had to guess his actual age from his appearance... I could not. He had an eternal look that said in a 100 years he would still look the same as he did right now. \n\nThere was a smile and laugh lines on his face. But that was for the two women who followed him. The 'Lady' as the children called her and one that could only be her daughter, Michelle Jeanette, who I had never seen before either. \n\nI bowed welcome before him and said the greeting in Japanese... \n\n\"Honored Sir, Mr. Teague welcome to my humble dojo.\" \n\n\"Thank you Sensei Toiguchi, even though I didn't understand what you said, because unlike Betsy I don't speak Japanese. Betsy is the only linguist in our family, and that's because it comes so easily to her. Eight languages she can speak, eight...isn't that amazing?\" \n\n\"But thank you Sensei Toiguchi for letting us into your home and dojo in spite of our rude arrival. But Betsy assured us that you wouldn't take offense to our arriving unannounced.\" \n\n\"Please forgive me Mr. Teague for my errant assumption.\" As I bowed deeply. \"I will keep all further conversation to English. But your arrival is neither rude nor unwanted, and as I have previously told Betsy, that my home is her home and to come and go as she pleases. Even though I did not say the words, I meant that to include any guests that she wished to invite.\" \n\n\"My small home is doubly honored by your arrival. It is said that a parent can only be truly judged by their offspring. You are a very wise and illustrious man Mr. Teague. Not only is your daughter a joy to be around. But she is also the student that all teachers desire. A truly gifted and diligent pupil that makes their instructor seem at least competent.\" \n\nThis man, this honored father is a great deal more than just wise and illustrious. In some small ways a parent can be said to mold their offspring. This man has molded a masterpiece of grace, power and dignity. In this sense he's made a pure athlete who at 43 is still at her physical peak. Although she does not compete in any sport, she's holding at that physical peak ready for anything. But mostly just for life itself. \n\nForty-three years old and still at the peak of physical conditioning... unbelievable. \n\nHonored Father started her training at age 10 and now her physical power is immense. Yet her muscle dexterity and flexibility is without equal and pure speed that is unbelievable. \n\nHer muscle development is equal to that of any bodybuilder it's just not made of bulk and only slightly less cut or chiseled... more womanly. \n\n\"See, I told you Father that he has a golden tongue.\" \n\n\"Ah yes, what was that you said: 'that humbleness drips from words as beautiful roses.' Well I have a saying too, one used by Texas Cowboys, 'I need my boots because it's getting deep in here'. (LOL)\" \n\n\"Okay enough, Taji I wish to present my daughter Michelle, and you've heard me speak of this man many times Michelle. I wish to introduce you to Sensei Taji Toiguchi my very good friend and teacher.\" \n\nMichelle's hand was soft and had none of the heavy knuckles like her mother's. Her eyes were a beautiful, bright, luminescent blue but with none of the oddity of her mother's or grandfather's. Hair, skin and beauty were so very much like her mother's, but softer and more feminine. \n\nBut she had none of her mother's or grandfather's internal power or charisma, fitness yes but charisma... no. \n\nStanding here with them it almost made her seem washed out. But without them present, I knew she would shine like a star among others. She was very tall to me but less than her mother or grandfather. In my mind I knew that she had not had the tortured childhood of her elders. In my mind was the amazement of that being a detriment to her, she was just that much less. In my heart was sadness for her. \n\nBowing over her hand caused a golden smile to blossom on her face. That beautiful face turned into more... a golden morning sun that rose from that wondrously beautiful smile. Then I realized that she had her own kind of power, the power of a beautiful woman, a beautiful woman who's happy and contented within her own skin. \n\nDown through the ages of mankind beautiful women have held an enormous power over men, if and when they chose to use it. That was Michelle's power, and thus every mans' desire was to keep that beauty smiling and happy, it even might not have anything sexual about it. The world looked better with the smile of a beautiful woman in it, and down throughout history men have died to keep that smile alive and glowing. \n\nEven the old man I am, I still felt the tug of want to keep that smile glowing. \n\n\"It's such an honor to meet you Sensei Toiguchi; Mother has talked so much about you. Enough so that I feel like I already know you. But I realize that you probably know little about me. Hopefully someday we can rectify that... I would like too. Almost enough to sign up and take lessons from you but I'm nowhere near as warlike as Mother and Grandfather. I have no desire to learn the combat of Kenjutsu and I feel that I have enough training in the martial arts already for what I desire.\" \n\n\"But I do have an idea and I think it's one that Mother will like too. Mother, on the nights that I am home from college, and it's cuisine night, please invite Sensei Toiguchi to join us.\" ",
        "\"Oh...\" \n\nWith that single syllable Betsy's face paled and fell. Then she dropped into the deepest, most formal bow I've ever seen her do. It was almost a debasement. Painful Japanese stuttered and stammered out the most formal, deepest apology possible. \n\nShe was begging for forgiveness and demeaning herself as the stupidest imbecile ever born. Declaring the slight and disrespect as totally unintended. \n\n\"Taji, that I accepted the hospitality and inclusion to your home and did not reciprocate to you my dearest friend is totally inexcusable. This darkens my face and eyes with unforgivable shame.\" \n\nHere I broke with Japanese customs and culture. I reached in and cupped Betsy's chin and lifted her eyes to mine. \n\n\"My dear friend, my life and my house differ from yours. I'm an old man and a bachelor. When I offer hospitality to my home, I have no one else to consider, you do. So to you the Spanish term, 'Mi Casa Es Su Casa' is not yours alone to grant. So I perceived no insult or slight.\" \n\n\"No Taji, my family would be honored with your presence. Of that I am certain, so I say to you, 'Mi Casa Es Su Casa'.\" \n\n\"So Taji you have to say yes and come to our house for International Cuisine Night. It's something that Robert and the children started years ago. We pick a country or region from anywhere in the world. \n\nThen as a family we prepare a meal from there. Then talk about that region; its history, culture and even its cooking. We gather everything together once a month if we can work it out. Sometimes work gets in the way though.\" \n\n\"An even better idea is you attending all cuisine night dinners, not just when Michelle is at home. So Taji you now have a standing invitation to International Cuisine Night at the Williamson's home, and I will let you know when and what the menu is.\" \n\n\"Yes Lady, I would be much honored to dine at your home. It would replace something that's has been missing in my life. This neighborhood used to be full of my friends, but they have all left. We used to exchange dining between homes, and to have street parties of dancing children and couples.\" \n\n\"But now animals roam those streets that once held dancing, and people hide. I don't hide but in turn I have few opportunities to socialize outside of my dojo. So yes lady, I would be much honored to attend your dinners.\" \n\n\"Yes Taji please come, with the children away it's just Robert and I. So sometimes we pass on International Cuisine Night, just because it's too much trouble for just two people. Having a third person as a guest would give us more reason to continue the tradition.\" \n\n\"But if I remember correctly you have classes this afternoon. I'm sure you've already guessed why we've come. Yes, Father brought his Katana for you to look at. I told him of your easy knowledge when you examined mine. So yes, he would very much like you to examine his and tell us what you can learn about it.\" \n\n\"It would be my very great pleasure and honor to examine your father's Katana. The craft, foraging and the history of Katanas are one of my primary interests. I'm excited to take 'any' opportunity to see new Katanas and further my knowledge. So by all means let's see this marvel.\" \n\nHonored Father removed the Katana and Saya (scabbard) from its shoulder slung, linen carry bag. Then I knew where Betsy had got the idea for her carry bag from. \"This sword was given to me by a person who's very important to me. It has caused me a little heart ache and a lot of joy. We were told that it was made in the 1600s. Of course, none of us could read the end cap. So we sent, not the sword, but just an image of the end cap to a professor of Japanese antiquities for him to read and possibly tell us the name of the sword. He said that the closest he could determine was either; Truth or the strike of Truth. Maybe you can give us a better read on that, also maybe a better determination of its age.\" \n\nWhile he'd been talking, I'd been holding the sheathed Katana and rolling it over in my hands. Yes, I could tell him a lot about this Katana and a beautiful Katana it was. The craftsmanship of the Tsuka (handle) and Saya was as exquisite as you'd expect, and I could barely control my desire to unsheathe the blade. The character on the end cap was beautifully done and historically significant. \n\n\"Shinjitsu ichigeki irumire-shon kakureta omoi.\" \n\n\"All of that's not on the end cap of my sword!\" \n\n\"No, it's the first line of an ancient Japanese stanza. That's probably only a little older than this Katana is. 'Truth's stroke illuminates the hidden mind', that's the closest translation to the stanza's first line. The first two words of the stanza is the name of the Katana, 'Truth's Stroke'. Your professor just had his syntax incorrect, and a very understandable mistake between stroke and strike, plus the possessive on the word truth.\" \n\n\"This is a very famous Katana, well not this specific Katana, but the group is and they're said to be cursed.\" As I unsheathed the Katana, I found what I expected to find, the small maker's mark. AND it was the name that I had expected. \n\n\"This is the small maker's mark, and it's the mark I thought I would find. Muramasa Sengo is probably one of the two best and most famous of all Japanese Katana smiths. To reveal the true maker's mark the Katana would have to be stripped of its Tsuka (handle) to reveal the bare tang. There more information would be revealed, possibly even the name of its true maker... if it is other than Muramasa Sengo.\" \n\n\"People that have been studying Katanas and Katana smiths have concluded that there is possibly ten Muramasau smiths. Muramasa Sengo was the first and most famous; they called him the mad smith. \n\nThey said that he was almost completely insane. But one form of his insanity was in his perfectionism, along with his violence, hallucinations and insane religious fervor. Nowadays he would probably be diagnosed as a major manic-depressive with a severe case of OCD... Obsessive Compulsive Disorder. \n\n\"Legend has it that he prayed over his Katanas in the night impugning them with spirits. So the spirits of the Katana would fill their wielders with bloodlust and powers like the berserkers of Viking fame. It is said in legend that a Muramasau blade must drink blood or taste flesh before it can be re-sheathed. Or it will force its holder to cut or kill himself. The legend has become so prevalent that even video game designers have included the 'Devil Blade' in some of their games.\" \n\n\"Another legend is about the amazing quality of a Muramasau blade. It was said that you could plant a Muramasau blade upright in the bed of a gentle stream. Then throw leaves into the stream and those that flowed onto the blade were cut in half without disturbing or slowing their path through the water.\" \n\n\"This Katana was definitely made during the Muromachi period. 1392-1573 is generally the accepted time frame for that period. The curvature of the blade, pattern of the temper line and its grinding scroll pattering are consistent with that time period. Those three criteria are what everyone uses to date Katanas.\" \n\n\"The generally accepted time frame for Muramasa Sengo's working lifetime is from 1380 to 1450. A lot of those old smiths lived into their 90s and 100s with possibly an 80+ year working lifespan. Although in their later years most of the heavy work was done by apprentices.\" \n\n\"So if Muramasa Sengo actually made this Katana it would be between 550/600+ years old. But the possibility exists that whoever sold this blade was able to look at the markings on the tang, thus determining that this blade was made by a later Muramasau smith. Myself I find that doubtful, the windings, braiding and the shark skin wrap of the grip look to be authentic and undisturbed. If you received any paperwork or certification with the Katana, it should have told you that, but you obviously did not. Old man that I am means I am not familiar with any of the technologies that could image the metal underneath the windings. Although I know there are some. Another possibility is whoever sold this Katana did not understand what they had. They had a Katana they could sell for a lot of money. If they didn't get a lot of money for it, they're baka. (fool) \n\n\"But the short of all our wonderings here is... if this is an actual Muramasa Sengo blade it's much older than you thought. But it is also a very valuable blade. A lot of museums would break their yearly budget to have this blade. There are some unscrupulous collectors who would commit murder to gain this blade for their collection. Just on the possibility that it might be an actual Muramasa Sengo blade. In short it's worth a lot of money, along with a lot of more intangible values.\" \n\n\"Well, it's not for sale or donation, whether it's an authentic Muramasa Sengo blade or not. Because it isn't for sale what I would like from you Taji, is your silence. I have no wish to be inundated with offers to buy it. Let alone have people trying to break into my house and steal it, or to kill me. Or kidnap members of my family with it as ransom. I almost wish that I'd never even brought it to you.\" \n\n\"This was given to me as a gift from someone I love very much. At that time I thought it was a last gift. So it immediately became very precious to me. Not necessarily for what it is, but both for what it is and who gave it to me. When she was 12, I gave her a child's toy plastic ring for a little game we played. She still has it, and it's one of her most prized possessions. I will not sell her gift to me for all the money in the world.\" \n\n\"As a solemn vow on my word of honor, no one will hear of this from my lips.\" \n\n\"Good enough Taji.\" \n\nTime home can be peace. \n\n(Taji:) \n\nIt was four months before we got everything arranged for an International Cuisine Night. It was Indian night, as in India. Curries, rice then other traditional foods. A Vindaloo, different Masalas and a Biryani... I liked the Biryani. Layers of rice, meat and vegetables with some layers seasoned very differently from others. But all assembled in one pot. \n\nTheir house is really unusual, at first I almost laughed but that would have been terribly impolite. The house was like her, a dichotomy within opposites. It wasn't a large house, but again that dichotomy, for just the two of them it was much too big. Betsy said that it had been designed by an architect and he had played with the concept of small spaces set within large spaces. \n\nThe theory, Betsy told me, was that sometimes humans like to be in a small enclosed space. It can make them feel safe and protected. The bed and covers that the child hides inside of to keep the night monsters out. \n\nWe're looking into what she called a reading nook. It was a large exterior bay window enclosed by three interior walls and a low ceiling. The nook can be entered only by a large circular opening. \n\nInside was a small daybed that just fit the interior, wall to wall, and an end to end bed, with the opening near its foot. It had sheets and blankets, a heavy quilt and pillows of numerous sizes and textures. The window seat of the bay window extended like a prow almost 2 feet outside the exterior wall and was part of the mattress of the daybed. \n\nThen some soft indirect lighting that would be perfect for night reading, or the light coming in the window for during the day. At night that indirect lighting was down casting and lit the room with soft reflected light. \n\nBut again with the dichotomy, the ceiling was left shadowed and painted a deep indigo blue. Clusters of tiny LED lights simulated stars in the nighttime sky. So the nook became a miniature room that held the night sky and a field of stars, inside and out. \n\nThere're other concept spaces made in the home. One was a kitchen table room made right in the kitchen itself. It was only big enough for a tiny table for three, no cabinets, no side table. Nothing more than 3 chairs and table, and an entrance and exit opening that had no doors on them. \n\nAs Betsy had said the architect was playing with the concept of small spaces inside large spaces. That was true because the rest of the house was almost all open floor plan. The front room, formal dining table, kitchen and two small tucked in alcoves were all one open space. \n\nThose alcoves were outset on each side of the great room. One was a small TV/Media room that might sit 3 to 4 people, four if they're very friendly. The other was a semi-private conversation room, with a small loveseat combination. \n\nThose alcoves had an 8-foot ceiling. Your first step back out into the great room put you under a ceiling that started at 12 foot high and peaked much higher at its center, almost 30 feet high. Three of four bedrooms were part of that concept too. The two bedrooms that the children had used had a sleeping nook arrangements much like the reading nook that we'd looked at. The guest bedroom was set up in a very traditional style. The master bedroom showed as the tie-in conjoining the concept of small within large. \n\nThey built the king-size bed in the middle of the large room and it was actually part of the buildings structure. Four large timbers were the vertical corners of the bed and went into the ceiling structure and tied into the beams up there. But with horizontal curtain rails between the posts and a fabric top made it a canopy bed, with the addition of heavy velveteen curtains that could completely close it off. \n\nPlus each bedroom had its own en-suite that was quite unusual. The master bedroom en-suite's shower was literally a river rock enclosure. It reminded me of pictures I had seen of a densely packed climbing wall in a modern gym along with its 12 foot ceiling. That shower room was large enough for several people, with multiple types of shower heads both in walls and ceiling. \n\nBetsy laughed saying she would show me the most expensive room, and they weren't using it. The house had been built with a panic room and a state-of-the-art security system, now a storage closet. The door of the panic room was boxed honeycomb steel at least 8 inches thick. \n\nWhen the sliding door was closed, it was almost impossible to distinguish from the end wall of the hallway it was built as. The only thing unusual was a keypad and intercom in its center. Betsy said the walls, floor and ceiling of the panic room had the same steel arrangement as the door. \n\nThe panic room had its own ventilation systems, both heating and cooling. It also had an isolated water system complete with a toilet and waste system. It included a separate phone line with an Internet connection. It had two CCTV monitors switchable to multiple cameras. \n\nBetsy said most of the interior cameras died or were even gone, but some outside ones were still working. The panic room even had an underground escape route, but it was tight. Practically just a tube... a cement tube that was a crawl tunnel with a flat floor. That escape tunnel exited behind a small outbuilding some 250 feet away. \n\nBut the large spaces were what made the house dramatic and expressive. It was a timber frame house, constructed of large timbers and posts. It reminded me of some Shinto Temples of my homeland, they too were constructed of massive timbers with carpentry fitted joints secured by large wooden pegs. \n\nRobert took over showing me the house and how it was constructed while Betsy went to the kitchen to keep preparing her part the meal. It was the first time I got to interact with Robert one on one. \n\nLike everything else with Betsy, Robert is that dichotomy within opposites with her. At first blush you would think they were very similar, with Betsy's downcast eyes and mild manner. Robert is mild, soft-spoken, highly creative, and intelligent with soft brown eyes and light brown hair. I don't think it would take much effort for Robert to just disappear into a crowd if he wanted too, and not a large crowd either. Even though his height is slightly more than Betsy's. \n\nEven at her most retiring and demure appearance Betsy couldn't disappear in a crowd of any size. If you got to know Betsy at all you'd come to realize that her demure affectation was a mask that she'd worn for far too many years. \n\nRecently I've come to think of Betsy as having a 'Big Man' phobia. That being someone like her father in size and strength. Who feels it's necessary to be excessively gentle to compensate for the danger of him hurting others. \n\nI think at a very early point in her life Betsy realized what she was capable of. Not as a big man would in fear of his strength and size hurting others. But of things inside herself such as; aggression, power, and yes even violence. I saw that danger that possible violence in her the first time I looked at her. I see it every day, even more now that I've become familiar with her training and movements over the years. \n\nBetsy can show a nontraditional sword dance routine exhibiting beauty and grace possible only in a few. These routines the children love to watch. Yet when she does a training Kata, it's done with power, speed, and a barely restrained violence that's scary... even to me. During a training Kata, the speed of her bare blade shearing the air... I'm amazed that it doesn't whistle. But you 'can' hear its passage through the wind of its own making. \n\nHer worst enemy is facing the kata's violence and she's obliterating them. She's replaced numerous of our striking dummies and bokkens because they couldn't withstand her. Even though their design is advertised to last for years. \n\nSmall animals and young children have an instinctive fear of violence. Young children won't watch her Katas for very long, but they love to watch her sword dances. \n\nThe children of the neighborhood come early to watch her dance. Then laughingly play with Lady and her sword. Sometimes I think that's one of the few times she's truly happy. \n\nWith that instinctive fear of violence young children have. I believe a very young Betsy made a decision... subconsciously. In that dichotomy that is Betsy I think she realized that if she ever retaliated she might not stop until those children were seriously hurt. Hurt a great deal more than they could ever hurt her, and that was her decision. To not retaliate... and allow the hurt to herself rather than risk doing a great deal of damage to them. Then she donned that demure affectation that is her mask still. \n\nI sometimes think that in her early childhood she might have retaliated once. Seriously hurting that child, and in doing that Betsy scared herself. Then she blocked out all of her memories of that incident. She's done it so long now I don't think she could even remember it if she wanted to... if it even happened. \n\nThe reason that demure mask still works for Betsy is her unbelievable apparent age. The first time that I met Betsy she told me she was a married mother of two and thirty-six years old. I thought she was in her mid-20s, a student, and worked out a lot. She's trained with me seven years now and her appearance has hardly changed. \n\nTo most women the mid and later 30s are hard years on their appearance. Few women in their late-30s can look like a college girl. Maybe one in 1000 women in their early 40s can still somewhat resemble a college girl. Betsy is that one in 10,000 that can walk into a college classroom, sit down and never raise an eyelash because of age. Although that demure mask would never be believable on a forty-year-old woman, it still works on Betsy. ",
        "While Michelle is a great deal like her mother in beauty and looks, Jonathan resembles Robert. Even though I've only seen pictures of Jonathan, but the resemblance is there. \n\nAs Robert continues to explain how the house is constructed, I begin to see how special this house is. Robert explains that the timber frame is an English style construction. That the crossbeam sections are what's called a Hammer Beam Truss System. \n\nHe said this same system was used in old English churches to span as much as 60 feet, with no interior posts. They also used it because the English countryside was running out of long timbers. They saved the long timbers that were left for the shipbuilding industry. A Hammer Beam truss system uses shorter timbers in an upside down step design. \n\nPrimary elements are a vertical post, a horizontal beam, and a 45\u00b0 knee brace making an inverted L-shape with an inner brace, also in a left and right configuration. The first level horizontal beam fastened into the primary wall post and held aloft by the knee brace. Those primary members extend in toward the center line of the building, but coming nowhere near reaching it. The second level vertical post is mounted on top and almost at the end of the first level horizontal beam. That post with its other two members makes the second level step of the truss. Then it's just a simple matter of how many levels are needed to make up the span and height you desire. \n\nBetsy and Robert's house only had two levels, and then a tie beam went between the rafters and sat on the two upper posts of the hammer beam. Two queen posts rose from that tie beam to another shorter tie beam higher up. A king post rose from the center of that and tied the two rafters and the center purlins together. But even at that the ceiling height at its apex was 28 feet. The wall height started at 12 feet but the first level Hammer Beam height was 10 foot. \n\n\"Robert, the more I'm around these ceiling fans the more I'm impressed with them. Their uniqueness is amazing, and surprisingly something simple as ceiling fans most people consider just functional. But these add so much beauty and style to the room, and color... those amazing colors. That they're in those large Maple and other tree leaf shapes, plus in such bright fall foliage colors fits so well in this room.\" \n\n\"Yeah, they are unique aren't they? But they're that way for a purpose and not surprisingly that purpose has to do with their unique airflow. Most vertical shaft ceiling fans have their main thrust of air pushing downward. \n\nWhere these fans have paddles on both ends of the long horizontal shaft they push air in two full circles, and this house really needs the airflow. The large paddles in slow rotation just seem so stately and peaceful. But with the type of heating system and how tight the whole house is it needs airflow to remain fresh.\" \n\n\"Another wonderful thing about the ceiling fans and their color is that it can be changed. Those leaf shapes are only a framework that surrounds the colorful fabric. So all that's necessary to change colors is the fabric, it could even be changed by seasonal colors if you wanted too.\" \n\n\"Haven't you noticed that there's no air conditioner running yet the house remains cool? Notice the depth of the window casings and how deep they are. That gives you an idea of the thickness of the wall. In this house there's three parts to the exterior wall. An inner wall followed by an airspace and then an outer wall. Both the inner and outer walls are somewhat unique when used in conjunction as they are in this house.\" \n\n\"The inner wall is what's called a SIP wall, a Structured Insulated Panel. While the outer wall is an Insulated Concrete Block wall. Neither material is really an exotic for housing construction. It's just in their joint usage that makes this house's wall construction unique. With the addition of that dead airspace between them, I think that only a serious engineer could figure out the R factor or insulation value.\" \n\n\"Those SIP panels are a full 10 inches thick, then add in the 6 inches of dead air space. The concrete block outer wall is 8 inches thick, 4 inches of concrete with an inner and outer skin of 2 inch thick polystyrene foam. That's what's inside the SIP panels too, polystyrene foam. Their inner and outer skin is 7/16 oriented strand board. So there's no inner studs to the wall construction. In standard construction with 2 x 4 studded walls, those studs can act as a thermal passage to the interior of the house.\" \n\n\"With the wall thickness and the insulation factor of this house the soundproofing is amazing too. I think you could actually have a gun battle inside this house and never wake up the neighbors. Of course that also means any outside noises are never heard inside. So not only is this a very comfortable house it's also a very peaceful house. With the radiant floor heating system there's no furnace noise of any kind.\" \n\n\"The boiler that feeds the radiant floor is over sized by quite a bit. That boiler then also feeds all the hot water systems in the house. So you can run at least a couple showers continuously. \n\nThe only really mechanical noises in the house are, of course, those ceiling fans. You've already heard how silently they run. Then the other possible mechanical noise is the fresh air makeup system, and it's designed for silent running too.\" \n\nAt that we stopped because Betsy called us for dinner. \n\nHard time can lead to fundamental changes. \n\n(Betsy:) \n\nTaji and I ended up working out too late and drinking tea too long so it was dark when I left the dojo. I'd had to park out in the pay lots and walk in as I often did, so my car was about eight blocks away from the dojo. The streets had an eerie, entirely different feel to them from the daytime hours... an ominous hidden feeling. It keyed me up and I knew it, and that's the only reason I think that I heard it. \n\nRabbit, was the first irrational thought that hit my mind. Young, scared, and hurt was the voice that made me think rabbit. But I knew it wasn't a rabbit... it was a young girl's voice. I stopped and froze... even my breath because I hadn't located it yet. \n\nThe sound of a slap preceded the second cry and I placed it immediately. The alleyway across the street and up from me still echoed with fear. I wasn't worried about myself as I had my Katana and the bokken practice sword with me. \n\nAt that thought I slid both from their shoulder slung carry bag, then separated the Katana from the Saya (wooden scabbard). Stowing the Saya back in the carry bag as I was crossing the street. \n\nThe unlit alleyway had only reflected light from each end to illuminated it. Plus the buildings on both sides were tall enough to block direct light from getting to the ground. But in its darkness I can see the shadows of men moving. \n\nTwo, three, no there are four... and... and one of them is laying on someone else and humping them, well okay fucking them. I can see the shine of her white T-shirt and hear the grunts of the man on top of her. \n\nIn my eternal remembrances of this day my shame often overwhelms me. \n\nI HESITATED... I knew they were MS 13! I knew those four men had and would continue to rape then kill this young girl! MS 13 always kill their rape victims! AND immediately my mind wants to flee from involvement? Do I want to involve Taji or my family in this? I hesitated... to my eternal shame... \n\nMy desire and conditioning against retaliation and my abhorrence of violence left me frozen! \n\n\"Ah shit, I'm done. Damn that's some good young pussy. Fuck boys, who's next? Plenty of this young cunt left to go around, and it's sweeeet shit.\" As he stands pulling up his pants. \n\n\"Heh, heh, heh... My turn-my turn.\" As a different guy drops to his knees between her legs. \"Stay still bitch!\" Again the sound of a slap rings throughout the alley, and rabbit's pained cry follows. \n\nMy body had made the decision for me, and I was running as fast as silent feet could fly. Before I'd even made up my mind... I was almost there. A small jump... And the thought went through my mind that eyes hadn't looked in my direction to see me coming. A fast scissor kick to build power and speed in my leg, Heron in-flight to one side and bokken to the other. \n\nThe ball of my foot strikes the heavy part of his jaw right below his TMJ joint. \n\nThe man on his knees... head jerks and violently twists. In my hyper awareness I imagine I can hear and feel the bones of his neck grate as they twist apart. \n\nA pumpkin breaking 'whump' and the crack of my bokken shattering as it hits the man who's standing at her feet pulling up his pants... striking him right above the ear and dead on his temple. \n\nHeron in-flight lets me feel a small tug, and a roll of my eyes shows me its passage through the soft throat of the man standing over her head. \n\nThe scissor kick and the weight of my strike on the kneeling man make my landing less controlled than I wanted it to be. An explosive grunt turns my eyes toward the fourth man. Thinking, 'damn he's fast,' as I can see a gun in his hand already rising toward me. \n\nHe must've already been holding it! But I don't even pause Heron's flight and continue it looping around and down on the gun and hand before they can rise enough. Sparks fly... gun and pieces of bloody fingers fall. A huge indrawn breath is started so he can scream, as I step forward fast. \n\nA hard uppercut drives the stub of my broken bokken into the soft flesh under his chin, stopping the scream before it can sound. My broken bokken doesn't stop until it hits the heavier bone of his skull... on the inside. \n\nReleasing the hilt and letting him fall, I twist around looking to see if any of them are moving. But none are, except rabbit as she's trying to crawl out from underneath the kneeling man who'd fallen on top of her. \n\nSo I step over and squat down to help her get free of him. But her eyes flash wide and 'BEHIN...' starts from her lips! I'm already spinning faster than I've ever moved before! I hear an echo off to my left but I pay it no attention. \n\nBecause there's a fifth man who I'd never seen in that first look at shadows! He must have been guarding the other end of the alley or hiding in the darker shadows. His arm's fully extended and pointed, and his finger is already pulling the trigger on the gun that's nothing but a huge round hole to my sight! I can do nothing! but my body instinctively throws up my arms to cover my face! My mind knows it's useless but my arms are already moving. \n\nThe explosion fills... EVERYTHING! \n\nI know the bullet has to have hit me! I pause trying to feel where and how serious it is. He's not even 10 feet away from me, he can't miss! But it seems in my deluded and terrified imagination that White Heron has come alive... hearing its screech and its effort to jerk out of my hand and fly away from my death. But I need it!! So I try to hang on with anything I can; hand, palm, fingers, fingernails... anything! \n\nExplosion roars through my world again! \n\nAND my panicked hallucination hears its scream again and feels its jerk. Fingernails and hope are all that holds it now! The rule of a gun or knife fight is if you're too far away to engage... run! If you're too close to run... attack! I'm too close and I'm going to lose my grip on the White Heron!! \n\nHowever bad I'm hit is not stopping me from thinking, moving, or fighting. So I will until I drop, in fact I feel nothing... no pain at all! Adrenaline must be covering it up! \n\nIn my effort to hang on to it I let the White Heron continue on behind me and I try to bring it around in a big loop as I'm standing up. Then as a fast pitch, softball pitcher I fling it at him underhand with every ounce of strength I have! \n\nRipping fingernails as the bare thought of loosening my grip jerks it out of my hand! Anything... anything to get him to step aside or bat it away to give me another half second to get closer before he fires again! \n\nOne big jump step toward him and I skid to a stop... stunned! \n\nMy gaze flits between his eyes and the gun that's hanging upside down and inert from his trigger finger... His eyes are wide in shock as the life fades from them. In pure unconscious luck, Heron's short flight ended up buried to tang guard deep in his chest. Grabbing the grip I jerk it out as his body falls backwards. \n\n\"The Warrior Queen has awoken and five animals died in that baptism, and one young one is saved.\" That fluid Japanese can only come from one man. \n\n\"Taji?\" I can just barely see him in the shadows where he is standing, with his Katana in his hand. My mind replays the sound I'd heard as I spun to face the gunman... it was Taji. \n\n\"The Warrior Queen runs too fast and strikes too quick for this old one to help her. Are you uninjured?\" \n\n\"Yeah... ah... at least I think so. Taji, what are you doing here?\" \n\n\"No names! the night and the young one have ears!\" Harsh Japanese spits out as scalding liquid. \n\n\"An old man's pride sends him out to follow you to your car when you leave close to dark like this. But after your lessons lately I've been wondering if I should just go to bed and leave the animals to their miserable fate. My Queen, I have not much left to teach you and with your speed, power and fitness. Few would even try to match you, so all I have left to teach you be wisdom.\" \n\n\"You must leave Warrior Queen and quickly. The police are coming and they must not learn your name. If the police know it, the animals will learn it, and they will come after you. You might not fear for yourself but do fear for your family. Gather your broken bokken and flee, even before the young one can see more of you. I will stay in the shadows watching her until the police are close then I will flee too. Leave... for your family's sake leave now!\" \n\nI left. \n\nI didn't run to my car, I knew better than that. But I went through another cross alley and skipped two blocks over and then casually strolled up to the pay lot where my car was. I also tried to be casual as I drove out of the pay lot. Speeding or doing anything to attract attention was what I definitely didn't need to do. \n\nI didn't drive very far though, in less than 5 miles the shakes started and I had to pull over. Sitting there trying to get a hold of myself didn't work too well either. Barely a minute later I explosively lost everything in my stomach. Fortunately I was able to get the car door open fast enough. \n\nHalfway home I had to stop and do it again, the shakes and the vomit. ME who had never struck in anger, ME who had never sparred even in practice... Me who had considered karate to be nothing more than aerobic exercise, who had considered Kenjutsu a dance with a sword. \n\nHAD JUST KILLED FIVE MEN! \n\nWhen I got home the house was dark except for the light in the master bedroom. But I crept through my own home on quiet feet to the reading nook and crawled in through the opening. Backing in to sit in a corner I pulled my knees up tight to my chest and wrapped myself tightly in the quilt. The shakes continued to rack my body and tears fell, but I made not a sound. \n\nIt wasn't long before I could hear Robert going through the house searching for me, and I still made not a sound, I couldn't. Sometimes he would call out my name and by that I could follow his progress through the house. But I still couldn't answer; I couldn't make a sound. Just outside the reading nook was one place he called from, and his head followed the sound in through the opening. \n\n\"Betsy??\" Was the soft inquiry, until he saw me wedged into the corner and my wet face. \n\n\"BETSY!!\" and his body flew through the opening and to me. \"WHAT'S WRONG...? WHAT HAPPENED??\" His eyes bored into mine as he tries to see inside my mind. I knew I couldn't lie to him... \n\nWe'd never lied to each other. \"I killed five men tonight Robert!\" \n\nAt that my body and my emotions broke. I howled, wailed, and cried so hard that the sound inside that small nook hurt, and Robert just held me cradled in his arms until I ran down to soft sobs. He never moved or loosened that cradle of his arms and was the rock that my emotions and grief spent themselves on. Grief for the woman I had been but could never be again. \n\nI had killed. \n\n\"Here Betsy love, lay down here and tell me all about it. It sure doesn't sound like you. But I know if you did it that you had a perfectly good reason too. So let me hold you here and tell me what happened.\" \n\nRobert eased me down onto my back on the bed. Tucked a pillow under my head and wrapped us both up in the quilt. With his arms holding me and his leg laid over on top of mine. In the little reading nook wrapped in Robert and love, with the covers pulled up to my chin I felt as safe as I could get. So then I was able to start talking about the horrors of my night. \n\n\"Taji and I had stayed too late talking, and it was dark when I left. I was nervous on the street when I first heard the noise. 'Rabbit' was what I called it in my head, because it was young, scared, and hurt. It was also a girl's voice so when I identified where it was, I had to see what was wrong. I saw four shadows, four men that were raping a young girl!\" \n\n\"OH GOD ROBERT, I THOUGHT ABOUT LEAVING HER THERE. I THOUGHT ABOUT NOT GETTING INVOLVED. How could I even think about that, leaving a young girl there getting raped! All because I was scared of violence? How... How could I do that!\" \n\n\"Betsy... Betsy calm down... please calm down. You say that you killed five men, so you obviously did something. Is she okay Betsy?\" \n\n\"Yes, I think she's okay.\" \n\n\"You 'think' she's okay?\" \n\n\"Yes, Taji was there, and he said he'd watch her until the police got there. Then he made me leave before the police got my name. He said that if the police knew my name that the animals soon would too.\" \n\n\"So Taji was there, did he jump in and try to stop them then you helped him? But you said you killed five men. But you only mentioned seeing four. Was there more men? I guess I'm confused so maybe you better start again.\" \n\n\"Taji wasn't there until it was over. I was hesitating like I told you. But just after I got there they were switching men. The next guy slapped her and made her cry out. I think that triggered me and before I knew it I was running and was almost there. I was at a dead run with my bokken and Katana in my hands swinging from each direction.\" \n\n\"Number two guy that had slapped her was on his knees between her legs. Number one guy that had just finished was standing at her feet pulling up his pants. Number three man was standing by her head. Number four man was standing to the left and somewhat behind number one man.\" \n\n\"As I got there, I gave a jump and kicked the man between her legs in the heavy part of his jaw as hard as I could. His neck snapped around and broke. Simultaneously swinging my bokken and Katana, I hit number one man in the temple and shattered my bokken, and I guess his skull too. My swing with the White Heron cut open the throat of number three man.\" \n\n\"I almost stumbled on landing and the fourth guy was bringing a gun up to shoot me. So I chopped down on his hand and gun with my Katana then stabbed upwards under his chin with the broken bokken, it was long enough to go up into his brain. So they're all dead, four men dead in as many seconds!\" \n\n\"God Robert, what kind of monster am I becoming? I didn't tell them to stop, I didn't warn them, and I just ran in and killed them! Four human beings and I ended their lives in seconds! Oh God... Oh God!!\" ",
        "\"BETSY... Betsy try to calm down! You have to calm down Betsy. You'll make yourself sick and have a nervous breakdown if you don't calm down NOW! \n\nThink Betsy think, just stop and think! I'm assuming that these men were MS 13 gang members? So you know they were probably armed, probably with both their ever present machete and a gun. If you think about it instead of just reacting, you'll realize that if you had called on them to stop. All that would have happened is that you'd have been shot four times.\" \n\n\"Or shot in the leg once and raped four times then killed. To think these men would've stopped and waited for you to call the police, or even stopped and left quietly... Is insanity. Taji calls these men animals and when we talked about it and read up on them, they 'are' animals. You know Betsy... know that MS 13 never ever leave their rape victims alive. Everything we've ever read about them always says that same thing. They never leave their rape victims alive... period.\" \n\n\"Once those men grabbed that young girl she was dead. She was going to be raped as much as they wanted to then killed when they tired of her. She was already dead no matter if she was still breathing or not.\" \n\n\"When you got there you became her one chance for survival! The only, I repeat 'only' chance she had of getting out of that alley alive was you.\" \n\n\"When you looked into that alley you had three options. The first being just turning away, not getting involved and leave her to her own fate of rape and death. The second one was to call the police and report it, and then wait for them to arrive, or just leave before the police arrived.\" \n\n\"But you know Betsy, that by the time the police got there they might have been done raping her, and she'd already be dead. Or when they heard sirens, they would kill her and disappear into the alleyways before the police could arrive.\" \n\n\"Remember that article we read Betsy, the one about the police that responded silently to a robbery in progress alarm. Only to find out that the robbers were MS 13 and as soon as the police gave the notification that they're required to. They're met by a hail of gunfire and a battle to the death. The first two dead from the gun battle were the clerk and the store owner.\" \n\n\"So even if the police had been called, and they arrived in time, her survival was still questionable. The rapists would've fought with the police and the first to die would've been the girl. So I'll repeat you were her one chance for survival.\" \n\n\"I already told you what I thought would happen if you'd notified them of your presence and told them to stop, you'd have both been killed. I think you did the only thing possible that left both of you alive.. In a situation where four, or was it five, armed men with guns against one woman with a sword. I think the only safe and sane way was what you did. Putting them down hard and fast, making sure they stayed down.\" \n\n\"But what about this number five man?\" \n\n\"I never saw him until he was behind me. The young girl saw him first...\" \n\n\"How did you miss him...? How did he get behind you?\" \n\n\"Somehow in that first look into the alley, I'd missed him. I thought there were four men not five. When the four men were down, I looked to see if any were still moving. The only thing moving was the girl, and she was trying to get a dead man off of her. So I squatted down to help her. She saw him first and when she did her eyes went wide I knew someone was behind me.\" \n\n\"Here's where things get really weird in my mind. I don't know if it's because I thought I was going to die. Or just the shock of finding him there so close and ready to shoot that made my mind hallucinate.\" \n\n\"You thought there was a chance of you dying? You were that scared... so scared that you were hallucinating?\" \n\n\"I was sure I was going to be shot or killed. He was less than 10 feet away and already squeezing the trigger when I spun around and first saw him! There was nothing I could do; instinctively my hands flew up to cover my face.\" \n\n\"Here's where it gets really weird, I don't see how it's possible, but somehow he missed, completely missed me. Not once, but twice from less than 10 feet. The first time he shot it seem like my sword, the White Heron, came alive screaming like a bird and tried to fly away! In my delusion it didn't change shape or anything, it was still a sword. But I heard it scream, and it tried to fly out of my hand!\" \n\n\"The second time he shot it did the same thing, and I ended up barely hanging onto it with just my fingernails! I knew I was going to lose it, so as it was trying to fly away behind me. I let it continue and tried to turn it in a big loop and throw it at him underhand. I didn't count on it doing anything; I just wanted to distract him enough to get close to him before he pulled the trigger again.\" \n\n\"I got it looped around before I lost grip on it. Just the thought of releasing it rip it out of my fingernails and tore some. I was already moving when I let go, trying to get closer before he shot again.\" \n\n\"But I stopped before I got there. The sword had struck him point first in the middle of his chest and sank all the way in to the tang guard. The gun rotated on his finger and I watched his eyes as life and light faded from them.\" \n\n\"Oh God... Robert, I watched a man die, watched his soul leave his eyes!!\" \n\n\"Hang on Betsy and try to calm down. It doesn't do any good to get upset about it, it's done already. As I said before, you really had no choice but to do what you did. The other choice you had was to walk away avoiding getting involved. The decision to get involved forced your actions to save the girl's life. \n\nMS 13 men were the ones that had the choices. But all they made were bad ones, and because of you they paid for those bad choices. But the innocent victim didn't have to pay with her life.\" \n\n\"How did Taji get involved in this too, and where's your sword and your broken bokken? You didn't leave them there did you?\" \n\n\"Oh God, I left them in the car... I'll have to go get them and clean them!\" \n\n\"No Betsy, leave them there I'll get them later. You need to stay calm, maybe even get some sleep. So how did Taji get involved?\" \n\n\"Unknowingly Taji has been escorting... shadowing me to my car whenever I leave and it's close to dark, that's what he was doing. But he said I run too fast and strike too quick so he never had time to help me. \n\nHe also said something about a Warrior Queen being born and five men dying in the baptism. What is it about men that makes them want call me a Warrior Queen? Father calls me an Amazon Warrior Queen, Madeleine called me a Warrior Goddess, and now Taji is calling me a Warrior Queen. They haven't said it to my face, but I've overheard men at my negotiations call me that, what's up with that?\" \n\n\"I guess I can kind of see why they're calling you that. Even though I know you advocate nonviolence. Remember, people have always told you about your aura of danger. So you as a warrior, yeah I can see that too. With your musculature and obvious strength, your fitness and the way you move with such ease and power, yeah I can see that.\" \n\n\"A Warrior Goddess, an Amazon or an Amazon Warrior Queen all draw the romanticized vision of a beautiful, strong woman. One who's not afraid to fight, physically fight, when needed for her beliefs or for the defense of others.\" \n\nShe doesn't necessarily have a man to help her, or doesn't need or want one. So yeah, I can definitely see why they would call you that. I also see it as a sign of respect, the respect of a woman willing to step forward and fight. To fight as other women wouldn't even consider. A man would see her as a helper, in a physical sense, an equal not needing protection.\" \n\n\"I know your non-violent Betsy, and you've never had or even wanted to fight before. That you're shy and introverted, but you still give off a sense of danger, an aura of power, plus a sense of moral responsibility. Those led people to think you'll do whatever's necessary. Your father emits that same feeling... That same solidity of character that will always do what's right.\" \n\n\"I suppose the respect isn't bad, but a Warrior Queen... I don't like it, I hate it! I've just killed five men and if that's what a Warrior Queen does... I hate it! Fighting and violence I've avoided, it's not part of me. I abhor killing and want nothing to do with it! If killings required to be a Warrior Queen, I want nothing to do with it! I was violently sick twice on my way home. So I'm obviously not Warrior Queen material and I don't want to be!\" \n\n\"Okay... Okay, just calm down Betsy. How about we do this? You got some blood on you so... \n\n\"BLOOD... I've got their blood on me, on my clothes! OH GOD, Robert get it off me... get it off me NOW!\" \n\n\"Stop Betsy, just stop and calm down! There, close your eyes and I'll lead you. Hold my hand and follow me and we'll go to the laundry room and get rid of your clothes, then you can take a shower. After that we'll get ready for bed and see if you can sleep some. I think you might surprise yourself and be able to once your emotional level drops.\" \n\nEyes squeezed tight shut I let Robert lead me by the hand and then strip me naked. I thought I did okay until I felt him trying to scrub my hands and forearms with a rag. I knew they weren't, but the image hit my mind of my hands and arms covered in blood up to my elbows. \n\nMy stomach rebelled, and I gagged and almost threw up on Robert, but he jumped away. I managed to stop myself as the taste hit my mouth. Then I let him lead me to our bathroom and the shower. \n\nBut I just stood there with the image of blood on my hands and not wanting to open my eyes and see it, or touch the shower's keypad. \n\n\"Turn the water on Betsy.\" \n\n\"I can't touch it.\" \n\nFeeling the pressure change as the shower door opened and Robert reached in and set the temp control on the shower. Hearing the bypass valve kick on and gurgle. Then when the water got to temperature, the shower valve switched and flooded my body with warmth and clean water. With my hands and arms up in the water's stream I turned in slow circles to let it flood every part of me clean, even before I thought about opening my eyes. \n\nChanging from the ceiling mounted rain head to the wall-mounted nozzle shower. I turned the temperature on the water up as high as I could stand it. Using the harsh soap that Robert has to help get his hands clean from the paint and chemicals he uses in the studio. I scrubbed myself several times trying to get the feeling of being clean back. \n\nA clean towel and my heavy, hooded terrycloth robe that reaches clear to my feet were waiting for me when I finished. I felt a huge swell of emotion because of Robert's care and concern for me. I resolved to make sure I told him that and to repay him in kind as soon as I could. \n\nComing out of the en-suite I found Robert already in bed with three sides of the canopy closed. \n\n\"Come to bed Betsy, I know that you think that you won't be able to sleep but I think you will. As soon as your emotions drop I think you'll find you're a lot more tired than you realize.\" \n\nI didn't say anything, I just stepped up onto the raised platform of the bed and let my robe slide from my shoulders and drop to the floor. Even through the horrors of the night Robert smiled at the sight of my nude body, and that gave me a feeling of love and normality. Then I crawled on my hands and knees naked into cool sheets and slid up to the warmth of Robert. Reaching back I pulled the last curtain release to flood the bed in the deep purple of its enclosure. \n\nI thought about crawling up onto Robert and asking him to make love to me. Desperately needing to feel life... to be alive. But making love... no... I'm still unclean... covered in death. \n\nLying on my side I slid backwards into Robert who turned and took me into his arms. So even at 6 foot 6 I was the little spoon and a woman. I wanted to turn off my mind and go to sleep for a while, may be a long while. So I let a meditative breathing pattern start and tried to get my mind into my breath... \n\nAnd fell down into the land of nod... \n\nFrom Breakfast on through all the day, \n\nAt home among my friends I stay. \n\nBut every night I go abroad, \n\nAfar into the land of Nod. \n\nAll by myself I have to go, \n\nWith none to tell me what to do. \n\nAll alone beside the streams, \n\nAnd up the mountain-sides of dreams. \n\nThe strangest things are there for me, \n\nBoth things to eat and things to see. \n\nAnd many frightening sights abroad, \n\nTill morning in the land of Nod. \n\nTry as I like to find the way, \n\nI never can get back by day. \n\nNor can remember plain and clear, \n\nThe curious music that I hear. \n\n(Robert Louis Stevenson.) \n\nI felt my mind slowly become aware, and I realized that Robert was no longer in bed. Pushing the curtain aside I stepped out and not even bothering with my robe. I went looking for Robert, but unlike him I did it silently. I found him in front of the fireplace, and he had one of our plastic tablecloths that we use on the deck picnic tables. It was spread out on the floor with my sword lying in the center. Some bowls were off to one side with some used cleaning supplies. \n\nThe White Heron was clean and shining, and Robert was setting up to start a fire. In the kindling lay the pieces of my broken bokken. He was just getting ready to light the match... \n\n\"You didn't want it did you?\" A cocked eyebrow amplified the question he asked. \n\n\"No go ahead and light it. Did you get up just to take care of this stuff?\" \n\n\"No, I couldn't get to sleep. Too much wandering through my mind and I couldn't get it to stop. I could tell by your breathing that you used a meditative pattern. You know I've never been good at that, well enough to make a difference. Besides, I needed to work some things out in my mind. That you were shot at has really thrown me for a loop.\" \n\nSnapping and crackling started as the kindling ignited. \"With all your martial arts training and skill, your strength, speed, plus our lifestyle I didn't think that I would ever lose you except to something like an airplane crash, car accident or a major illness. To realize that there are other ways that I could suddenly lose you is hard to deal with.\" \n\n\"For a little while I was somewhat angry about you putting yourself in danger. But I also realize there was no way you'd abandon that girl. That's just not who you are, and to be honest I wouldn't want you to be otherwise. So I've been trying to sit here and let my unreasonable anger go, and it's been working.\" \n\n\"But you didn't have to get my stuff and clean it up; I was going to do that.\" \n\n\"Well, I think better with something in my hands. I didn't want to sit here and just brood. That wouldn't have left me thinking clearly. Plus, you didn't react well to the blood you had on you. So I thought I'd save you the stress of having to clean these up.\" \n\n\"Sorry I'm being such a wuss Robert. But I been knocked for a loop too. I'm not dealing well with something so opposite from what my life had been. But go ahead and burn that stuff then we'll go back to bed.\" \n\nAt breakfast the next morning Robert plopped the newspaper down by me. I looked at him very questioningly; he knew I didn't read the newspaper, I like the online services. \n\n\"Check out the front page.\" \n\nAfter I turned the paper over the headline read, 'Super Heroine in our city?' \"Oh my God, what the hell is this?\" \n\n\"Well, you probably should read the article. There might be a couple of points you didn't include in your story last night.\" \n\n\"What do you mean Robert? I told you everything that happened last night.\" \n\n\"Just read the article and I'm sure you'll see what I'm talking about.\" \n\nAt parts of the article I almost laughed. \"Well there's one good thing here, if the police believe this article they'll never find me because this description isn't even close. 'A giant dark Angel with a flashing sword of lightning that swats away bullets with her sword.' Well if they got this description from the young girl, it's either purposefully misleading or she reads too many fantasy books.\" \n\n\"Don't think too bad of her, later in the article it explains that she's a high functioning, 'special needs' girl that got lost and wandered into where she shouldn't have been.\" \n\n\"But think about it Betsy, last night you said you didn't know how those bullets missed. Then you thought you were hallucinating, and described your sword's actions as coming alive and taking flight. Ding, ding wake up...\" \n\n\"But Robert, that's impossible, I'm fast I know that, but no one is that fast, no one is faster than a bullet.\" \n\n\"Well love, I pretty much believe you could even walk on water. But I'm not saying that it was done on purpose... Although the odds of it happening by accident are astronomical even once... for it to happen twice, to the same person just seconds apart. Then the odds become something that's in a different galaxy.\" \n\n\"Thinking of those odds I'd almost rather believe that you 'are' faster than a bullet. It would be easier to believe, maybe even easier to believe then divine intervention. But I suppose that could be one explanation.\" \n\n\"Maybe this thought, instead of being faster than a bullet and moving your sword in front of the bullet. Your mind saw the gun and knew where the bullet would be 'after' he pulled the trigger. Then subconsciously put your sword where the bullet would be after the trigger was pulled.\" \n\n\"Oh Robert, this is just hypothetical fantasy dreams. When you cleaned the sword did you see anything on the blade?\" \n\n\"No, but then I wasn't really inspecting the blade. Getting the blood off the blade was easy. By the way the blade is nicked where it must've hit the gun. Taji might show you how to work it out without damaging the sword. Getting blood out of the grip is almost impossible, and that's what I spent my time on. I think there'll always be blood and DNA there.\" \n\n\"I'm not really worried about that Robert. I don't think I did anything wrong or even illegal. I've already decided that if the police come to me and ask if I did this, I'll answer them truthfully. So having blood on the sword that I'll admit using is irrelevant. But let's go look at the sword blade and see if there's marks on it.\" \n\nOH MY GOD there was, it wasn't much but you can definitely see marks on the blade. One was a foot up the blade, the next was four inches farther up. It looked like something was scuffed or layered on the sword blade. Rather than metal being taken from the blade. I decided one thing, the sword was going for testing at a metallurgy lab. I wouldn't even use it for practice if there was a chance of it breaking. There's too much history in these swords to risk losing one. \n\n\"Robert, I really didn't swat bullets out of the air with my sword, in fact I think I might have even had my eyes shut. No matter what the paper says Robert, I'm not a superhero.\" \n\n\"Betsy love, I really wish that you 'could' swat bullets out of the air. It would be just one more thing that would keep my love safe. That this man shot at you scares me clear down to my soul. But I also know that you wouldn't and couldn't leave that girl to her fate. That's just not who you are, so my Warrior Queen will charge into the fray and hopefully come back to me.\" \n\nHard Time adds to our experience of change. \n\n(Betsy:) \n\nI stayed away from the dojo and Taji for two weeks. Then I got the contracts for the Shelton/Ruiter job in the south of Holland. Including the international travel back and forth and the time spent in negotiations. That took almost a month of work. I usually travel with the bokken and I really miss it. Three smaller contracts came through too and that took another month of time. So it's been 2 1/2 months since I seen Taji. "
    ],
    "authorname": "JayDiver",
    "tags": [
        "katana",
        "bullied",
        "guns",
        "martial arts",
        "heroine"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/warrior-queen"
}