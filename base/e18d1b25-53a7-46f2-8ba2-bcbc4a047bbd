{
    "title": "Eva Pt. 20",
    "pages": [
        "Author's note: We're coming to the end of this story of Eva and Jon and their family. This part, leading to the ending, takes place in the future. My story, my rules. No Covid in this world of my creation. And this will be the end of the saga. I hope you'll like what I came up with. I loved writing Eva and Jon's lives, from beginning to the end. I think I gave them a pretty great life overall.\n\nSorry this has taken a while to finish, but I was under the weather for a while and then had some writer's block issues. So here it is, part 20 of 'Eva'. The final part. Thanks for taking the ride with me. Rabbitman55\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nAfter staying with Connor for a short time, the doctor, Commander Jefferson, told us we had to leave his ICU room, where he was in a medically induced coma after his wife, Leigh, shot him in the gut. He wouldn't be conscious for a few days, at least, and before then they planned to send him to a bigger hospital in Jacksonville, Florida. We had no idea what happened between Connor and Leigh but it must have been a hell of an argument.\n\nOutside his room, in the waiting area, were the other officers and a few of the enlisted men from Connor's boat, the USS Galveston. Included was his Executive Officer Lt. Commander Aiello, whose wife was watching over Oliver while all this was going on, and he offered to take us to his home so we could see our grandson. Since we couldn't see Connor again for a few hours at least, we followed Lt. Commander Aiello back to his house on the base.\n\nWhen we got there, Oliver immediately ran into Eva's arms. He was fifteen now and he was a good eight inches taller than she was, but he seemed so small as he cried in her arms and she cried with him. Then he came to me and I hugged and kissed him like no one mattered more in the world. Then he hugged Vince and Maria, technically his aunt and uncle, but they were only three and one years older than he was, respectively. And he was very close with Maria since there was only the one year between them.\n\nWe tried to ask him what happened, but he was too emotional to talk about it then. As we had coffee, the base police called us and said they had a few questions they needed to ask us, so I made plans to meet them at the brig, the police station in Navy parlance, two hours later. In the meantime, I got calls from both Rachel and Cammy and we all coordinated to meet at a Quality Inn not far from the base. And Cammy told me no one should talk to the police, including Oliver, without her there. That was good enough for me. I told her to meet us at the base jail.\n\nWe thanked the Aiello's for their help and kindness and headed over to the brig. Eva and I sat with two investigators and the detectives from the Camden County Sheriff's office. They informed us that Leigh, before she lawyered up, admitted shooting Connor during a fight where he asked for a divorce because he loved another woman. But she said it was self-defense, that Connor was advancing on her and she feared for her safety.\n\nThe Naval investigator and the sheriff's deputy wanted to ask us questions but I told them none of us were answering anything until our family lawyer arrived in the next hour or so. in the meantime, we just kept quiet. Then Rachel and Tony arrived, which meant more tearful hugs all around.\n\n`\n\nRachel held me tight, and I did the same to her. \"Daddy (she hadn't called me that in years), is he going to be all right? What do you know?\"\n\nI had to be honest with her. \"Your brother is in a medically induced coma and they're very worried about a massive infection. They're going to transfer him in the next day to a large hospital in Jacksonville where they can give him the best treatment in the area. They just have to get him stabilized before they can move him.\"\n\nRachel cried, turning to Tony, really as it should be, though I instinctively wanted to comfort my daughter. Instead, I hugged Eva as she hugged Oliver. It was getting crowded in the small lock-up and more Grossman's were on the way, so I offered to rent one of the smaller conference rooms at the Quality Inn. The police accepted simply because there really was no way to question us all, and we agreed to all meet there three hours later so we'd have a chance to go back to the hospital, check into the hotel and clean up and eat something.\n\nThat's what we did; there was no change with Connor and the plan was to move him the next morning. We all stayed there for an hour; me, Eva, Oliver, Rachel, Vince and Maria all took turns visiting by his side. Oliver was particularly upset and he went in with Eva, the closest person there to being his mother (who was in the county jail). Then we checked into the hotel and went to clean up before we went to a nearby coffee shop for lunch. We asked Vince to room with Oliver and for Maria to help keep him company the rest of the time.\n\nEva and I were alone, finally, for a little while in our room. She went and used the bathroom without saying a word, which I put down to being very tired and hungry. When she came out I used it, washing up, then came back out to the bedroom. She was crying, and I knew how she was feeling, seeing our son so seriously wounded. I went to her and put my arms around her from behind. But instead of accepting my hug, she violently shook me off her.\n\n\"Don't touch me, Jon! I'm so angry with you, I don't even want to talk to you!\" She turned and I could see she was furious and it was directed right at me.\n\n\"Angel, what the hell?\"\n\n\"Don't call me Angel either! Don't talk to me!\" She hurried out into the hall without even changing clothes. I was shocked and distressed. I had no idea why she was so angry and she wouldn't even talk to me about it. Maybe later that evening. Maybe she was just having an irrational reaction to seeing Connor is such serious condition. People didn't always handle it well at first.\n\nIn front of our kids and family, Eva was back to the matriarch of the group. You couldn't tell she was angry with me except for the fact that she didn't talk to me at all. No one else seemed to notice it over lunch, but I sure did. Then Cammy, Kyle and Anna got there and there were more tears and more hugs. After we filled them in on Connor's condition, they had lunch with us before we went back to the hotel to the room I rented for the interviews.\n\nObviously, none of us were suspected of doing anything illegal; the detectives were just trying to find out who knew what before the shooting. And aside from Eva, Oliver and me, no one else had a clue that there were problems between Connor and Leigh. Most of the interviews were five minutes or less. Even for Eva and me, it didn't take very long to confirm that we knew Connor was having an affair and Leigh may have been having one as well. We didn't even know there was a gun in their house, though I guess we shouldn't have been surprised with Connor being a Naval officer. But Oliver may have seen and heard a lot recently. He wasn't a suspect but no way were we going to allow our fifteen year old grandson to talk to them without counsel. In case they thought otherwise, Cammy the Bulldozer was there to protect him legally and from having his emotions toyed with. Whatever Leigh may have done to our son, for whatever reason, Eva and I didn't want our grandson to be used against his mother. That would be a terrible pain for him to bear. We didn't want him to lie, certainly, but we didn't want him used either. But there might have been no choice.\n\nOliver and Cammy sat with the police for an hour and a half, and the police still wanted to ask more questions, but my sister cut the interview short. That didn't make the police any happier, but that was their problem. Ninety minutes was too long for an emotionally hurting teenager.\n\nAs they all came over to where the rest of us were waiting, Oliver turned to Cammy and said \"Aunt Cammy, when can I see my mom? I need to talk to her.\"\n\nCammy touched him on his shoulder and kissed his cheek. \"I don't think it's a good idea to see her right now, Oliver, honey. You should stay with us, your father's family, while some things get straightened out.\" He was sniffling at that news.\n\nThe cops turned to each other and one of them said \"He can talk to his mother if he wants. We wouldn't have any reason to stop him.\"\n\nCammy shot them very dirty looks, then she told Oliver to join us and either go to me and Eva or to hang out with Anna and Maria and Vince. Then she took the cops aside and dressed them down good. When I asked her later what she was chewing them out about, she said \"I told them from now on not to talk directly to any members of the family, and that included Connor unless she was present. As far as they were concerned, Connor was represented by counsel.\"\n\n\"But what could happen if Oliver talked to his mother? I'm not exactly a fan of her right now, but I'm more concerned about how this is affecting Oliver.\"\n\n\"You don't get this, Jon. I don't know what Oliver might say. What if he incriminates his father? What if he incriminates HIMSELF? I doubt that's the case, but I'm not taking a chance. From now on no one\" -she had everyone's attention- \"no one talks to the police, any police, without me representing you. Or another lawyer I approve for you. And for right now, Oliver can't talk to his mother, whatever the police think. They can listen to their conversations. If Leigh did this while feeling threatened and Oliver heard it, their conversation could give her a defense. Now, maybe in that case she would be deserving of a defense. But I don't know, and I don't want Oliver used by either side. Not right now. He might have to talk later. But not for now. Jon, let me protect Oliver and Connor. Let me do my job.\"\n\nCammy was thinking like a lawyer, not just an aunt. I rarely got to see her in her power lawyer role. Getting a glimpse of her like that made me very grateful she was on our side.\n\nBefore we could leave a woman showed up from the Georgia Department of Family and Children's Services. The police had called her in. It turned out we couldn't take Oliver back to the hotel with us. He had to go into emergency foster care. The police didn't want to take any chance that we'd question him on our own or influence any statements he would make. Objectively I understood that. But as his grandfather, I was royally pissed off. He needed to be with people who loved him, then more than ever. And as angry as I was, Eva was ever more furious.\n\nShe turned to Cammy and through her tears, she begged her sister-in-law to stop this from happening. I mean begged. She clutched at Cammy's blouse. \"Please, Cammy, don't let them take my grandson away! He needs to be with his family right now!\"\n\nCammy looked uncomfortable, a very unusual look for her. She was always one of the most confident people I knew. But this situation was incredibly different. She also wanted to protect him by keeping him with us, but until she could get before a judge, or get a local lawyer to go before one, we couldn't stop this. I got into a hell of an argument with one of the detectives but my sister restrained me before I ended up locked up for taking a swing at a cop.\n\nWe gave Oliver a very tearful goodbye and Eva and I promised him we'd see him when we could; we were staying as local as we could while trying to keep near Connor as well. It wasn't going to be easy but they both needed us. It tore our hearts apart to watch him be led away by the woman from Family Services. Overall, it was the worst day our family suffered since I had been shot over twenty years before.\n\nWe were a very dejected group that went back to our rooms. We agree to take naps for a few hours and meet in the lobby at 6 to find someplace for dinner. When Eva and I got into our room, instead of the cold fury she showed me earlier, she fell into my arms and cried and cried. And I joined her. We let out the entire days' sorrow and pain out and we needed each other. We laid down on the bed, hugging tight and crying. Our son was critically wounded and our grandson was with strangers for at least a few days and there was nothing any of us could do about it. Even Cammy, with her legal skills, couldn't help Ollie right then (Eva and I still called him that when we were alone).\n\n\"Jon....Bear....I am so sorry about how I treated you earlier. I never should have said that or pushed you away. I can't get through this without you. I'd be so lost without your love.\" She was sniffling, her hair and makeup were a shambles, and her eyes and nose were all red. And she was the most beautiful woman in the world, especially on this terrible, bleak day.\n\n\"Shhhh Angel. You never have to apologize to me about anything. I know the pain you're in because I'm in it as well. Sometimes people say things they wish they hadn't. I'm not forgiving you because there's nothing to forgive. I couldn't bear this without you either. It would be unendurable without you.\"\n\nWe held on close, just rocking in each other's arms. And then something totally instinctual took over. We were kissing wildly, pulling each other's clothes off with an urgency we hadn't felt in a long time. Soon we were naked and Eva rode me, no extra lubrication needed. It was hard and raw, not loving at all. We clutched at each other, kissed almost hard enough to be painful, scratched and clawed almost hard enough to draw blood....and we came furiously. When the climax was past, we held each other again, crying again, but softer.\n\n\"Angel....what the hell was that? Is something wrong with us? You're the psychologist here.\"\n\n\"It's not uncommon, Bear. In times of great emotional pain, a lot of people seek something that feels pleasurable. It's the mind trying to ward off the feeling of heart aching pain. It sure as hell feels like it's wrong, but it's not. We needed it. Jon... I love you so much. I need you in my life, whatever happens.\"\n\n\"Eva, I need you too. Always and forever, right?\" I kissed her gently, with all my love for her. \"We always get through everything by doing it together. Connor will recover and Ollie will be with us within a few days. Cammy the Bulldozer will make sure of it.\" We smiled a little. My sister was going to do some research in her room to see if she could represent Oliver or the rest of us in a Georgia Family court or if she needed to find a lawyer here and which ones were good ones. Money wasn't an issue. We could hire whoever we needed and Cammy's firm had connections all over the country.\n\nWe went around to the other rooms to check on Rachel and Tony, and Vince and Maria, hanging out together with Anna. We didn't interrupt Cammy; when she was deep in work mode, she could keep almost everything else out of her mind. Kyle was used to it (as was Anna) and he was trying to organize the younger members of the family to go to a nearby swimwear store to get bathing suits so they could all swim in the hotel pool. It was a good idea; it was brutally hot, and the 'kids' would get bored without something physical to do. Kyle always was a good man.\n\nWhile they were gone, we learned that Connor would be moved two days later, early in the morning, by helicopter, to Jacksonville. Then Cammy told us she found a local lawyer to help us with an expedited motion before the Family Court judge. The lawyers' name was Denise Horn and when Cammy introduced herself over the phone, Ms. Horn knew of my sister by reputation since Cammy was one of the most powerful and successful female lawyers in the country. She agreed to meet with my sister along with Eva and myself for an emergency appointment that night at our hotel.\n\nWhen we sat with her, she agreed to make an emergency motion in the morning in Family Court. but she explained if a judge agreed to give us custody of Oliver, we would have to agree not to question him in any way about the shooting and that included Cammy. My sister couldn't represent Oliver and represent Conner in the same case; it would be a conflict of interest. So, figuring the potential for criminal exposer was greater for Connor than Oliver, and since Ms. Horn was an expert in Family Law, we decided she would be hired to represent Oliver. If it turned out Connor needed criminal representation, God forbid, we'd hire him an expert in criminal law. Cammy could represent him in the initial stages. The hard part would be not questioning our grandson about what happened that day. It also meant we had to discourage him from talking to us about it if he chose to.\n\nThe next morning, Cammy and I were allowed to travel on the helicopter to Jacksonville with Connor, still in an induced coma, while Eva and everyone else stayed behind in case Oliver was released to our family. Rachel and Tony drove down separately and met us in Florida since there wasn't enough room for all of us to ride in the helicopter. Eva, Kyle, Anna, Vince and Maria stayed in Georgia for Oliver.\n\nOver the next couple of days, there were a lot of phone calls back and forth. Ms. Horn was effective at her job, getting Oliver released to our family under the court order that no one but his lawyer and the police could talk to him about the shooting. And two days after that, Connor was brought out of his coma. Cammy and I were by his bedside (only 2 visitors at a time) when he was brought out and, though he was slow initially at making the connection, he did recognize both of us in a couple of minutes. Cammy and I cried tears of relief.\n\nConnor managed to say in a raspy, dry voice \"Where's Oliver? Where am I?\"\n\nI told him where he was and then the doctor asked him questions. Did he know his own name, what did he do for a living, did he know why he was in the hospital? He remembered everything except why he was hospitalized. At least at that moment, he had no memory of the shooting.\n\nThe doctor gave the four of us fifteen minutes to talk to him. We all kissed him, even Tony, Rachel, Cammy and I all hugged him as close as we could without causing him pain. I promised I'd call Eva as soon as I got out of the ICU (no phones in there) and tell her he was conscious. Then Cammy asked the rest of us to leave her alone with her nephew/client so they could go over a few things as lawyer and client before she had to leave as well.\n\nI called Eva and she cried with relief when I told her Connor was awake. Then she told me Oliver was with his family and I closed my eyes and thanked the powers that be. Oliver was glad to be with Eva and the others, but he was upset that he couldn't see his mother or his father, not for the moment. None of us were really inclined to bring him to see Leigh and we had to get permission from the court to take him out of state to see his father. Until that permission was given, we'd be split into two groups for a while.\n\nEva and I talked on the phone for a long time that night. That was tough in itself; we were unaccustomed to spending our nights apart from each other. With the circumstances...it was just damned hard.\n\nAfter we talked, filling each other in on our other children aside from Connor, we were silent for a moment or two. \"Angel, I love you, more than ever before, I think. hate being apart like this, for any reason. We are so much stronger together.\"\n\n\"I'm missing you terribly, Bear. I hope the judge lets us bring Ollie to Jacksonville in the next day or so. I need to see Connor, desperately. But I need to be with you too. You give me so much strength.\"\n\n\"Like you give me.\" I paused, then said \"Eva, Connor says he doesn't remember anything except having an argument with Leigh that afternoon. He couldn't be lying, could he? He wouldn't have threatened her in any way?\"\n\n\"Jon.. I just don't know. I know how we raised him. I know he was so honorable when he went into Annapolis, it was almost a pain in the ass.\" I could sense her smiling, a weary, dejected smile. When you've been together this long, you know without seeing each other. \"But when he told us he was having an affair, I knew something had changed in him. Honestly, I don't know what he could be capable of now.\"",
        "I let out a long, painful sigh. Eva put into words what I had been feeling since we found out Connor was shot. I don't think either of us would have been completely shocked if we found out our son provoked his wife. He was a completely different person than the one we raised.\n\nThankfully, kind of, the next day Eva was informed that the investigators had determined that Leigh shot Connor while he had been seated at the kitchen table. He couldn't have been threatening her, physically, when she shot him from the doorway. This would be much worse for Leigh, legally, and ultimately a few months later she took a plea bargain and was sentenced to 8 years in prison. When she confessed in court, she denied having an affair herself and instead told how she felt emotionally abused by Connor's affair and neglect. They had a huge argument, the last of many, and she couldn't take any more. She got service sidearm from the lockbox and she shot him while he did some paperwork. Legally she was culpaple and she served 5 years, getting out in 2027. Objectively... I had to think she was provoked by my son. To say I was disappointed in him was a massive understatement.\n\nThe judge let us bring Oliver down to Florida to see his father. When Connor was well enough, about a month later, we were able to bring them both home to North Carolina. Rachel was on her off season break and she came as well with Tony, but Cammy and Kyle had to go home to Pennsylvania. Connor was still technically in the Navy, still getting paid. His and Olivers' personal things were packed and sent shipped to us and we had most of it put in storage. Connor and Oliver stayed with Eva and me, with Oliver bunking up with Vince until Vince went back to Georgetown two weeks later.\n\nWalt had flown to Florida and told Phyllis what happened to her grandson. It was terrible for her, especially since she was not able to travel to Jacksonville or then to us. It was decided that she would move to California to be near Walt and Will and their families. She just couldn't be left to live away from all her family anymore, even in assisted living. That Summer of 2021 turned out to be a terrible time for our family.\n\nTo keep Connor and Oliver together, Eva and I paid for Connor's physical therapy. They really needed to be together and Connor needed help at home. He was depressed over being shot by his wife, the almost certain end to his career in the Navy, and what his future held for him. He barely talked to either of us and honestly, we didn't know what to say to him. We were so disappointed in him and the way he messed up his life. We enrolled Oliver in the Durham Academy, at least for the coming school year. It would take Conner a while to get his health back.\n\nAbout a week before school started in mid-August, Eva flew out to California to see her mom. She took Oliver with her so he could see his great-grandmother and I stayed home alone with Connor. I was also hoping to get some time to talk to him one on one. Maybe I could find out what changed for him and what he thought about his future. He was 38 and had a lot of life ahead of him. And he had a son that he had to be a full-time father to.\n\nOne night while we sat in the library listening to music and sipping scotch together, I brought it up. I asked as gently as I could what he thought drove him to seek out another woman, which was how the whole thing started.\n\n\"Dad, I don't know if I have an answer. Jessica...well, she's beautiful of course, but it's more than just looks. Leigh's a beautiful woman as well. I started seeing Jessica when I got my command. It was something I wanted since I was 14 and told you and mom what I wanted to do. And in truth I love the engineering part of the job. I have a lot of talent for it, got a few commendations for getting repairs done earlier than expected. Maybe I should have stuck to reactors and turbines and not bothered with the command track. Because, to be honest, I'm not good at it.\"\n\nMy son looked uncomfortable and upset. I just kept quiet, refilling our drinks, as I let him talk in his own time as he explained that he made a couple of errors as Captain of his boat in terms of decision making. \"Dad, a Captain of a navy vessel can be wrong, but he can't be indecisive. And I hesitated on certain decisions, things I can't talk about specifically (they were classified), and my junior officers noticed. I lost respect, especially from my first Exec, Commander Lee. It's a bad position for a commanding officer to be in, Dad. I felt like I was being undermined.\" He was crying silently, tears rolling down his cheeks. My confident, self-assured son was suffering inside, and it hurt both of us. I let him go on without saying a word.\n\n\"When I was home on leave, I was sullen around Leigh and Ollie. Bitter and angry. And when I met with my squadron commander, he told me he was 'concerned' about the things he was hearing about my boat. He gave me another tour at sea to get my act together, and I did it. I requested a new Executive Officer, Aiello, who you met. I got strict and I didn't hesitate when I gave an order and sure enough, my reviews improved to a perfect rating. But I felt like a fraud. And then on my next rotation at home, I met Jessica, who worked in a men's clothing shop. I guess you know the rest.\"\n\nI leaned forward and held his hand in mine. \"Connie, I can't imagine what that was like for you. Loss of confidence as a commanding officer...that can be fatal under combat conditions. I don't know how you functioned like that. I think you're a lot stronger than you give yourself credit for.\" We talked more about the rest of the year, how he kept seeing Jessica and how Leigh got suspicious. They started having huge fights, sometimes in front of Oliver. His life at home became almost intolerable. \"Connie....why didn't you seek help? The Navy has psychologists.\"\n\n\"Dad, they tell us to get help if we feel we're having problems and they say it won't be held against you. But that's bullshit. The docs can't talk to the Brass about specifics of our problems, but it's known that you're even seeking help. And if you are, the implication is you're weak. I had just gotten past the suggestion that I was a weak Captain. Getting psychological help...I would have been done as a line officer. I would have lost my command and I would have lost my security clearance and I would have been put in some bullshit job without any hope for further advancement. So I cheated on Leigh, my life fell apart, and I still ended up ruining my career. And my wife is probably going to go to prison and it's all my damn fault...\" He started crying harder, openly bawling, and I sat next to him and held him as he cried out all that pain and shame.\n\nI let him cry for a long time, until he had no more tears to shed. \"Ollie is going to hate me, Dad. I hurt his mother and she's going to be taken away from him for who knows how many years. He'll hate me and I don't blame him at all!\"\n\n\"Your son does NOT hate you. He's hurting now, very badly. He was scared you might die, and his mom is in a lot of trouble. So, when he gets home this weekend, you two need to have a long talk together. it may be angry at times and he may resent you for a while. But the two of you are going to go for therapy. Together and individually. You can both live here as long as you want and need to. Resign from the Navy if you have to. Nothing is more important to your mother and me than getting your life back together. You don't have to rush into what will come next. Take time and figure it out. You can stay here as long as you want, you and Oliver.\"\n\n\"Dad, I don't know what to say.\"\n\n\"You don't have to say anything. The only thing you have to do is get better, physically and emotionally. That's all your mother and I want from you.\"\n\nWe hugged, closer than we had in years. It was going to take him some time to get better, but he would heal. Ollie too. Even Leigh. When she got out of prison, Connor made peace with her and gave her money to start her life over. She was the mother of his son, after all.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nEva and Oliver came home that Saturday night. Maria and Connor insisted on coming to the airport with me to pick them up, even though he had to walk with a cane. He hugged and kissed his mother as close as he hugged me that night during the week. She was deeply touched to feel like she was getting her son, the sweet boy we raised for all those years back.\n\nOn the ride home Eva told me we needed to go to California to see her mother as well as her brothers. Phyllis was doing poorly, and she got the feeling this might be her last holiday. Chanukah was too early in 2022 to go then (it started November 28) but Christmas was doable, and Cammy could easily make it. Rachel would be iffy, being in the middle of concert season. But we'd ask.\n\nThat night, after Connor, Maria and Oliver went to sleep (Vince was already back at Georgetown), Eva and I were alone in our bedroom. She changed into a long t-shirt and after taking off her makeup, she wearily crawled into bed with me. I cuddled with her, just enjoying her proximity and her warmth. We hadn't done much of this over that summer.\n\nShe snuggled on my bare chest and my hairs tickled her cheek. There was something else we hadn't done that summer and my body was responding to the feeling of my wife on my body. She felt my erection on her leg and she looked up at me questioningly.\n\n\"Really Jon? I'm exhausted tonight. I've been travelling all day and I'm just beat.\"\n\n\"I know. It's not like I planned to seduce you tonight. But with all that's gone on this summer, we haven't made love or had sex in almost two months. My body is enjoying feeling you next to me. We don't have to, Angel. But I don't want us to forget about loving each other.\"\n\n\"I know. It's been a terrible summer for our family. And I'm very aware we haven't been intimate in some time. But please, not tonight. I don't have the energy to even give you a handjob.\" She smiled at me, a very tired smile. But it was still a nice smile.\n\nI moved my head so I could kiss her, a few short kisses that were still very loving. \"I understand, Angel. We still have a week before we have to start school. Maybe in a day or two. Maybe a few times this week.\" I winked at her and she giggled.\n\n\"I really would like that, Bear. It has been too long. I'm very lucky I have a husband who still gets very excited for me. You're still a very sexy man. There's just been so many distractions.\"\n\nI rolled Eva gently on her back so I could kiss her properly. \"When you feel up to it, honey. You're very worth waiting for. You always have been.\"\n\n\"You never had to wait very long in the past. Except after my pregnancies and my heart surgery. You were infinitely patient with me.\"\n\n\"I'd have been a real asshole if I wasn't. Imagine if I told you you'd better put out, heart surgery notwithstanding.\"\n\nShe laughed lightly. \"Yeah, you'd have been a first-class asshole if you did that. But I would never have married a first-class asshole. I think. I hope.\"\n\n\"I hope so too.\" We kissed again. \"I really do miss you, Angel.\"\n\nShe looked up at me, those warm blue eyes full of love. I hadn't seen that level of love since Connor was shot. Love was always there, of course. But like this... \"Bear, suddenly I want you. A lot. It's been a long time for me too.\"\n\n\"Honey, are you sure? I feel like I'm kind of guilting you into this.\"\n\n\"Nonsense. You've never, ever done that to me and you're not doing it now. I looked up into your sexy brown eyes and your handsome face and I realized how much I've missed you. So, if you're still willing and wanting me, I want you too. I want to make love to my husband.\"\n\nWe kissed and embraced, rubbing our bodies together like we had so many times over the decades. We were together over 40 years`, and we still wanted each other over anyone else in the world. We kept kissing and touching in the ways that time had proved got us incredibly arousing to each other. I pulled up her shirt and kissed her neck and her shoulders, and Eva emitted long and low moans of building lust. I lightly bit her neck and then I whispered, \"Are you SURE you're up to this tonight?\"\n\nShe kept moaning as I lightly plucked her stiff right nipple. \"Tomorrow is Sunday. We'll sleep late. I didn't realize how much I've been missing you, sexy Bear.\" She tilted her head and kissed me full on the lips and her tongue took a lazy trip through my mouth. Then \"Just not so slow tonight. We can take our time another night. Just take me tonight.\" She sounded like her fire was stoked. I know mine sure as hell was.\n\nWe moved naturally together, so comfortably in sync with each other. We were a little out of shape; we hadn't played tennis together all summer and we even had barely used the pool since June. But some things still come naturally with decades spent together. Her legs spread as we kept kissing, hot, deep, passionate kisses. She may have been tired 15 minutes before, but that was forgotten as our desire consumed us. My cock was more than ready; it was ready since we got in bed 20 minutes earlier.\n\nI used my fingers to tease her lips and clit and I applied a small amount of lube all over her pussy to make sure she was nice and slick. We kept kissing as she grasped my cock and gave me a few strokes for fun, then she guided my cock inside her slippery pussy as I mounted her. I groaned out loud as her pussy molded around me and I grunted as I held very still when I was all the way inside.\n\n\"Angel, I've missed this so much. I've missed YOU so much.\" I was just moving my hips in a small circular motion, just enough to put some pressure on her clit.\n\n\"I've missed you too, Bear. I'd forgotten just how wonderful you feel, how great we feel when we're connected like this. And I don't mean our genitals. Our true connection, Jon.\" I dipped my head down to kiss her, short and tender kisses. Her nipples were scraping my chest hair and her inner thighs were rubbing my cheeks and hips. We were joined as one in the most amazing ways imaginable. At that moment, we felt like we were back in our 20s, the most active and lusty time of our lives.\n\nThen I started moving, lifting my hips, withdrawing my cock from her wet, warm pussy, then thrusted back in again. I wasn't moving quite as fast as I did thirty or forty years before; time did have its effects on us both. But we were still feeling incredible waves of pleasure, like they were flowing back and forth between us. Eva grabbed me tighter in her arms and her legs wrapped around the back of my thighs. Her heels kicked me lightly when she wanted me to move a little faster, like you would with a horse. It was sexy and fun, even if I was breathing a little harder than I used to.\n\n\"You're still the sexiest woman in the world\" I growled in her ear before I tugged her lobe with my teeth.\n\n\"And you're still my stud Bear. You know just how to fuck me right\" she said with a lusty giggle.\n\n\"Feel like trying to cum together, my dirty Angel?\"\n\n\"Oh, always! Go for it, sexy Bear!\"\n\nI grabbed her ass in my hands as I lunged in and out. She didn't quite have as much muscle control in her pussy as she used to, but Eva still knew how to give me a great time in bed and I was clearly doing the same for her. We fucked harder, faster, and soon my cock was swelling inside her snug cunt. \"Almost there...\" I grunted as the bed squeaked under us.\n\n\"Cum, Jon! Cum inside me and fill me up, Bear!\" I tensed and my cock spasmed in coordination with my deepest thrusts. My climax, pulsing on her clit, set Eva off and she came just after me as her nails clawed at my back and my ass. I lifted my head and stared into her eyes. I saw the same deep love there I was feeling for her. We kissed tenderly, sweet and kind. Then I moved to lay next to her and we both giggled as the release of sexual tension eased from our bodies and minds. \"You're still a very sexy man, Jon. I'm so glad I found my second wind tonight. We've forgotten how important this is in our lives.\" She kissed my chest and then my lips.\n\n\"We didn't forget, exactly, Eva. We've had a lot of worries this summer. We still do, I guess. But Connie's getting better, both he and Oliver will get some help...and I think we have to take Ollie to see his mom, even if we're feeling ill disposed towards her. I don't want to hurt our grandson any more than he's already been through the last few months.\" Leigh was out on bail by then, working on a plea bargain, but she couldn't leave the state of Georgia. Oliver was missing her and really the only question was who in our family would take him. It would probably fall to me. Leigh's sister had been in touch so we could try to work out a visit and I had been dealing with her. The plan was to go the following weekend, before Eva and I had to start getting school ready.\n\nBut for the rest of that night, all our troubles were pushed aside. Eva and I held each other and kissed each other in our familiar romantic ways. We cuddled and we were playful in our touches. And when we finally said goodnight, said our I love you's, we slept better than we had in many weeks. And we slept until almost 10:30 the next morning. That was pretty great in itself.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nWith all that went on that summer, the trustees understood why we didn't give them an answer regarding our future beyond the next two school years, but with the new year starting, they needed an answer. Eva and I talked it over and we gave them our decision. They should start looking for our replacements. We were ready to retire in a little less than two years, in May of 2024. If they wanted to find someone(s) from our staff, we'd be glad to make recommendations. The trustees were disappointed, especially Dr. Kellman, but in light of recent events, they understood. The summer took a lot out of us. Two more school years and we'd be done. The school would be on a strong footing. Besides, we didn't develop quite the attachment to Durham Academy like we did with Wayne Upper Day. We loved living there, we made a lot of close friends and we loved the house, but we never felt like it was our 'other family'.\n\nSchool started up again with one unplanned new student, Oliver Martin Grossman, 14-year-old eighth grader. He was a smart young man, and he made the adjustment from public to private school. But he was also in a lot of pain that school year, 2022-2023. His life had been upended, his mother was going to prison for shooting his father, and the kids at Durham Academy heard things. If Eva and I hadn't been his grandparents, it would have been even harder on him. But he did make a few friends as the year went on and it helped him make the social adjustments.\n\nHe and Connor started going to counseling together and Connor also had to do physical therapy. What he couldn't pay for, Eva and I took care of. I took Oliver to Georgia three times to see Leigh that Fall before she was sentenced to 8 years that November.\n\nThe biggest factor in keeping Oliver from falling off the deep end was Maria. Technically his aunt, she was three years older and a senior in school, four years ahead. She looked after him more in the way a big sister would over her younger brother. She and Vince had both turned out to be great young adults, like Connor and Rachel had been years before. Vince was headed for a good career in government service, but he was kind of shy around new people. Maria, however, was turning out to be someone very special.\n\nShe was popular and a natural leader. She was elected her Class President in her senior year, and she was popular with boys and girls. She loved her nickname \"Grease Monkey\" which she got from her love for working on cars, a very unusual hobby for a woman, even in the 2000's. Eva and I thought she would be headed for a career as an engineer of some sort. But she kind of surprised us a week before Thanksgiving.",
        "Eva and I were enjoying a rare quiet night, no paperwork (all done on our laptops anyways), just streaming a documentary in the family room. Maria came in while Connor and Oliver were out at a UNC basketball game. \"Mom, Dad, do you mind if we talk for a few minutes?\"\n\nEva hit pause on our Roku streaming device. \"Sounds serious. You know we'll always have time to talk to you. So what's on your mind?\" We both leaned forward as she sat across from us on a leather chair.\n\n\"I've decided where I want to go to college, preferably. I want to go to Duke or NC State. Pratt (Duke's engineering school) and State are pretty much tied for the best engineering schools in the state. But I don't want to be an actual engineer.\"\n\nEva and I looked at her, not quite getting it. I asked her \"So if you don't want to be an engineer, why do you want to go to school for it?\"\n\n\"I actually want to double major, in engineering and business. I want to work on cars for a few years, learning as much as I can about repairing and rebuilding them, even designing them, and then I'd like to open my own repair shop. Maybe I'd end up owning a chain of repair shops. The point is, I want to own my own business, and this is what I'm interested in. I don't think it's that big a surprise overall.\"\n\nEva took her hand first. \"Maria, if that's what you want for yourself, then your father and I will help you out like we helped all our children to whatever degree they've needed and still need us to do. If you put in the hard work, then we'll do what we can to get you started.\" Maria looked at me to make sure her mother was speaking for us both and I slightly nodded my head, showing I was on board as well.\n\n\"Just one thing, sweetheart\" I added. \"You know you're probably going to take a lot of grief when you go for a job, when you get out of school. Owners aren't going to want to hire you, and even if they do, some of the men in those shops are going to go out of their way to harass you in all sorts of ways. Emotionally and sexually. You have to know what you'll be getting into.\"\n\nMaria smiled at us. Our blond, 5'5\", 120 pound daughter, who was in so many ways a real girly girl, was also notoriously thick skinned and tough as nails. People tried to push her around at their own peril. \"Dad, you know I can handle myself with just about anyone. I've loved taking care of my car- your old car- and I enjoy repairing my friend's cars. They gladly pay me to get it done cheaper than it would cost them to bring it to a garage. Guys and gals. I feel like this is what I was born to do.\"\n\nIf she wanted to go to Duke, it wouldn't be a problem getting in. Her grades and extracurriculars were excellent and Eva and I had deep connections with the school, formed over the last year. We were still doing the Shabbat dinners every Friday night and we were going to do a single Chanukah party, just a few days after Thanksgiving. It was exhausting, one right after the other, but we enjoyed doing it, especially for the small children.\n\nRachel couldn't join us for Thanksgiving, but she cleared a week to join us all for Christmas in California. Phyllis was living in an assisted living facility there, just a few minutes from where Will was living. The facility was expensive, and she was well cared for there, but when we all saw her in late December, it was clear time was running out for her. She needed oxygen 24 hours a day and she needed a scooter to get around as well as a full-time aide. Will and Walt took care of her expenses and they saw her a few times a week. Her mind was still sharp, but her body was failing.\n\nRachel's career was in full swing. Tony retired from being a stockbroker to manage her career full time. That enabled him to travel with her across the country and internationally as well. They were happy, very much in love, and they let us all know she was pregnant and due in June! They never married, had no plans to do so, but they were both happy, and it was their lives to live. Her first child, a second grandchild for Eva and me, and another charm for her bracelet, which was in a display box in our bedroom, a daily reminder of our ever- growing family.\n\nVince told us about a young man he was involved with, Kevin, Vince's first love. They had to be reasonably discreet since Georgetown is a Catholic University, but as long as they weren't too obvious, they were left in peace. Eva and I told him we hoped to meet Kevin someday soon and he'd be as welcome in our home as any of his sisters or brother's girlfriends/boyfriends had been over the years.\n\nCammy and Kyle came, of course, with Anna, who was in her first year at Penn (and she looked just like Cammy did at that age, beautiful). Cammy and Kyle were enjoying her retirement, playing golf a few days a week in the warm weather, traveling a couple of times already in those first few months. And they still talked about opening a Bed and Breakfast...in a few years, maybe. They were enjoying having time alone together when Anna was at school.\n\nConnor was slowly getting better, and he and Oliver were getting close. That had been a problem during Connie's years serving on submarines. The two of them never developed a very close father-son bond. It was terrible that it took such an awful event for them to start to build that bond, but it came at a horrible cost, Oliver's bond with his mother. There were times he was in awful pain, missing his mother. Eva stepped in as best she could and Maria was amazing with him, but he missed his mother. Between the two of them, after a while, Oliver also began to heal.\n\nAs for Eva and myself, our second year in Durham was a huge success. Enrollment for the second year went up to 94%, we raised money to stabilize the endowment fund and put it in the black, SATs and ACT scores improved 12% and acceptances at the top universities improved significantly. By March we were at full enrollment for our third year, starting August 2023, the last year of our contract. We earned our bonuses and then some.\n\nJust as important, we were enjoying our lives. We were back to playing tennis a few times a week, we met other couples through Duke and through our tennis club and had a nice social life. There was a vibrant theatre and music scene in the Research Triangle, great restaurants and bars. We visited Asheville to the west and Cape Hatteras and the other Barrier islands to the east. We visited Memphis and Charleston for long weekends. Maria was old enough to look after herself over a weekend her senior year and our third year, she matriculated as a freshman at Duke. Eva and I got the picture of what our life would be in retirement, and we liked what we saw.\n\nOur love life also picked up again, especially after Maria moved out. It wasn't quite as frequent as when we were younger, but we were good for once or twice a week. The newfound privacy gave us free run of our house for the first time since we had been newlyweds in our first house back in Flushing, over 40 years before. There were times, especially on the weekends, when we made love or got kind of wild whenever the mood struck us, wherever we were in the house. And I sang to Eva more often, including playing the guitar like I used to. It was like falling in love all over again.\n\nOne night we were sitting in the library. It must have been winter because we had a big fire going, nice and warm, warm enough that we were sitting on the carpet, sipping wine in just our underwear. I had a pair of red boxers on, and Eva was wearing a matching set of a peach lace bra and boy shorts. I was playing the guitar, I think some James Taylor, Carolina in My Mind and Handy Man. Eva was smiling, as lovely as I could ever picture her. Then her foot started rubbing my leg in a very teasing manner. After a couple of minutes of that playfulness, I put the guitar aside and took her foot in my hand and massaged it.\n\n\"MMM That feels wonderful, Bear. You can keep rubbing my feet...and more. You can rub anything you like, in fact.\"\n\nI moved my hands slowly up along her calves, and Eva closed her eyes with a deeply contented smile on her lovely face. \"You like this, my sexy Angel?\"\n\n\"Uh huh. All day and all night long.\"\n\n\"What about this?\" I asked as I moved up behind her knee and then up her thighs. Her legs were tanned and toned from years of tennis and swimming. We were both 61 and Eva looked no older than 50. And so damned sexy. Especially when she purred as I stroked her legs. \"How do you like this?\"\n\n\"I think you know how I like this, my sexy man. You're getting me nice and wet. Like no lube needed wet. Wanna get freaky with me tonight?\"\n\n\"Let me think about it. Yes.\" We both chuckled as I moved next to her, and we kissed with both love and lusty passion. My hands cupped her tits in her bra before Eva reached behind her to unsnap it.\n\n\"You want to suck my tits, don't you, my wicked Bear? Suck them until they ache?\"\n\nI already had my lips and tongue busy on her stiff pebbles and she laid back in front of the fire as she pulled me with her, not letting me free. \"Suck them, bite them, Jon. I want to be dirty with you tonight like we haven't been in a very long time.\"\n\nI pulled my mouth free and kissed her cleavage between her slightly sagging tits. \"You're going to suck my cock, aren't you?\" I swirled my tongue around her pink points.\n\n\"Yes I am. I'll suck your dick better than I ever did before.\"\n\n\"And you'll let me soak my face in your pussy, right?\" I rubbed her gash over her panties, pressing the lace crotch onto her oozing hole.\n\n\"Yes! Dammit, Jon, get to it already! Suck on my cunt and I'll devour your hard dick! Just stop toying with me!\"\n\nI turned around as quick as I could move (a little slower than I used to) and I licked her sweet snatch through the gaps in the lace. The rough material was scraping on her lips and my tongue. as I kept licking. Eva pulled my boxers down, just past my balls and she licked and kissed my shaft, head and balls, all over. Her tongue was flicking at my thickness and I thrust my hips at her face. We were on our sides in 69, using our tongues and lips more aggressively than we had in some time.\n\nThe fire was hot, we were hot, our flesh and our craving for each other. I tugged her panties down and worked my tongue all over her lips and her swollen clit. Eva raised her hips, arched her back and moaned loudly all over my cock. The vibrations from her moans were radiating pleasure waves from my cock throughout the rest of my body, head to toes. In return I hummed as I sucked her clit and Eva's legs wrapped around my head, squeezing, smothering me in her folds and soaking my face in her slippery juices. I alternated between sucking her clit and lips and licking in circles, while she licked my balls and cock and then switched to sucking me deep so the head of my cock slipped into her throat. Things we hadn't done in a long time, or at least hadn't done while making all the noise we wanted in a room besides our bedroom.\n\nI stopped for a moment and said \"I love it when you're my dirty cocksucking slut, my Devil. My nasty Devil. I've missed this so much!\"\n\n\"So have I, my wicked Bear! You do such amazing things with your mouth! But I really want you to fuck me. Hard. Dirty. Like we used to. Think you can fuck me like that?\" She was smiling in a way that was so enticing.\n\nI grinned back at her as I got up on my feet, then pulled her up with me. \"Very dirty, my sexy slut. You'll beg for mercy!\" I reached behind her and smacked her ass with a resounding SPANK, and then another.\n\nShe giggled, enjoying the feel of my palm smacking her cheeks. \"That will be the fucking day! We'll see who begs for mercy!\" She pushed me down, so I fell into a cushioned chair near the fireplace. She knew I couldn't get behind her doggy style, not on a hard surface. My knees couldn't take that anymore. But she could sit on my cock, on my lap, and ride me hard while I used my hands to play with her body. And that's what we did. She sat down, facing away, and she bounced rapidly on my hard, hot cock as one of my hands held her hip and the other tugged on her thick nipple. Then I pulled her hair, just hard enough to pull her head back as my other hand swatted the side of her ass.\n\n\"Fuck me, my Devil! Fuck my throbbing dick! Don't you fucking stop!\"\n\n\"And don't you cum yet, you nasty Bear! I love fucking you like this! Oh god, I'm so fucking close..\" Eva closed her eyes, grunting as she kept riding me, her ass slapping my thighs. my hand smacking her flank, both of us enjoying our nasty nature. \"Dammit, Jon, I'm going to cum!\"\n\nMy balls were tight and the head of my dick swelled. \"Cum on, Devil! Cum on my cock now!\" I tried to hold out, enjoying the way my wife's muscles gripped my cock, fairly strong even after all these years. Somehow, I kept control of myself; I wanted to give Eva a special treat, and she could sense it.\n\nAfter she rode through her climax, Eva hopped off my lap and knelt at my feet. She jerked my shaft as she furiously licked at my glans. I grabbed the arms of the chair, gripping the padding tightly as my legs shook. \"Eva, I'm cumming...\" I cried as streaks of my semen landed on her tongue and on her cheeks. She licked as much as she could, eagerly swallowing my essence. My body slowly relaxed and I kind of went limp all over in the chair.\n\nEva climbed onto my lap sideways, and we cuddled as we caught our breath. We were naked but nice and warm with the fire slowly burning down. I kissed her lips, then her cheeks, sucking up the strands of my semen that landed there. She giggled when I did that, even though I had been sharing my seed since we began as sexual partners long ago. \"I always have been impressed when you do that, Jon. I doubt most of the men we know do that.\"\n\n\"You never know for sure, Angel. What goes on in others bedrooms. It's not something we share really.\"\n\n\"No, I guess not. And by the way, thank you, Bear. That was amazing. I love making love with you, the way we share most of the time. But when we do these very naughty things together...you make me feel incredible. I love both sides. And I want to keep doing this while we still have it in us.\"\n\n\"Over 40 years, honey. You still make me burn for you. I hope we can keep going this way for a while yet. It would be a shame to lose this wild side just when we've finally got our privacy. I love when our kids visit, mind you...\"\n\n\"Yeah, but I love our time alone now. I love it when they come, but I also enjoy it when they go home. Does that make us bad parents?\"\n\n\"Nope. It makes us normal adults. We've had children living with us a lot longer than most parents do.\" I was touching her softly along her back and arms, and she was touching my cheek and chest. \"Since Cammy, just a couple of years after we got married until Maria left a couple of months ago, we only had those few months between when Rachel left and when Vince and Maria came into our lives to live alone. I'm not complaining at all; I'm so glad we adopted them and brought them into our family. They've been as much a gift to us as Rachel and Connor...and Cammy. But it's time for us to have our lives. Speaking of which...\"\n\n\"Yes, I've been thinking about it too. We have just a few months left to work. What are we going to do next year? I'm kind of nervous, thinking about our retirement.\"\n\n\"I don't know, Angel. We don't have to rush into anything. We can take a few months, even a year, and just rest and relax and enjoy ourselves while we figure things out.\"\n\n\"For now, let's go upstairs and keep cuddling in bed. Maybe you'd like to sing to me some more?\"\n\n\"Only if you sing with me. We can sing our song. Tupelo Honey.\" I smiled at her with all my love.\n\n\"Deal. But I get to use the bathroom first!\" She got up and headed upstairs while I killed the fire and gathered our discarded underthings, then I turned on the alarm before I followed my bride up to bed, where we sang and kissed and hugged. We also managed to find the strength to make love, slow and beautiful. It really was like we fell in love, all over again, not that we ever fell out of love in the first place.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nConnor got a job in February of 2024, teaching and doing research at NC State in nearby Raleigh, and he found a small house for him and Oliver. They were close enough to see them whenever we wanted to get together while also having a healthy distance apart as Connor put his life back together. He even took Oliver down to Georgia a few times a year to visit Leigh. He did it for the good of his son. He even started dating here and there, though he told me once he never wanted to get married again. Time would tell.\n\nVince brought a new man in his life, Jamaal, to meet us over the Easter break that year, a nice young man who seemed to love our son as much as Vince loved him. His family was from Boston and after spending a few days with us, they drove up there so Vince could meet them. Eva and I were happy for them; maybe it would last and maybe it wouldn't. For the time being, they were a happy couple.\n\nRachel took two years off from touring, one so she could take it easy during her pregnancy and then she'd have a year to bond with her baby. She and Tony refused to tell us the gender, if they even knew. They did tell us they had a due date of June 8th, perfect for our schedule as well since school ended May 14th. But bad news came before the good.\n\nOn March 23rd, Will called us to tell us Phyllis died in her sleep the night before. Even though it was pretty much expected at some point (and she lasted more than a year beyond what we expected), it was a terrible blow for the entire family. Eva cried for hours, regretting that she hadn't gotten to say goodbye to her mom. I was pretty distressed myself; Phyllis had treated me like her own, especially when my own mother died all those years ago. But I needed to be strong for Eva and our kids (and Ollie, Phyllis' great-grandson).\n\nHer funeral was in New York, so she could be buried next to Harold, but no one lived in New York anymore. So after the burial, the whole clan flew back to North Carolina to sit Shiva at our home for a few days, then Walt and Will and their families returned to California to sit a few days there so they could receive their friends. It gave us all a few days together to comfort each other, including Cammy and her family. Phyllis and Harold had been very good to her as well those first few years.\n\nRachel was almost 7 months along by then and looked it. She reminded me of her mother when she was pregnant, petite, beautiful and all belly. She was recording music, classical and jazz, while she was home in Chicago. Seeing all our children and our grandson at the same time was the one good thing to come from Phyllis' passing. The entire family together at once happened very rarely by then.\n\nMaria was enjoying college, living on campus at Duke (class of '27!) and coming home every few weeks to visit us. She fit right in there, just like she did at Durham Academy. She was a leader of her freshman class and she made friends easily. She loved college life.\n\nOne Saturday afternoon in April she came to visit us. We always enjoyed when any of our kids came to visit and due to her proximity, we saw Maria most often. Eva and I were getting ready to retire; we were gradually packing away books and papers we had accumulated over 33 years. It was a sad process and any excuse to see our children cheered us up.\n\nAfter having a light lunch with Eva and I, Maria asked if we could all talk for a bit. We sat in the family room with warm sunlight filling the air. We sipped iced tea as Maria came to the point of what she wanted to talk about.\n\n\"Mom, Dad, you know, I love school. I'm having a great time there and I've made a lot of friends, male and female. But I'm sure you've noticed I haven't brought around anyone special since I've been there.\" We knew what she meant by 'special'. She was talking about a boyfriend. In high school we knew each of her boyfriends, as they were also students in our school. It was a little unfair for Maria; it may have scared off a couple of potential dating opportunities.",
        "\"Yeah, now that you mention it...\" I said in jest.\n\n\"Mom's right, you can be an ass, Dad\" she said giggling. I didn't take it as anything other than light teasing from her. \"Seriously, I've been...well, I've been exploring who I am. You know. Sexually.\"\n\nIt was the kind of discussion that could make most parents uneasy, especially fathers in terms of their daughters. But I just listened with Eva as Maria got this burden off her chest. We'd always encouraged our children to be open with us, as much as was reasonable. Eva asked \"Are you unsure about something, sweetheart? You know we'll always talk as openly as we can.\"\n\n\"No, I know what I'm interested in. I'm what you used to call bi-sexual. I like men and women and I've had relationships with both since I've gotten to Duke. Nothing serious. I'm learning about myself. But the thing is, something has gotten serious, and I don't know how you're both going to feel about it.\" She actually looked uncomfortable.\n\nI leaned forward and held her hand in my own. \"Maria, if you're saying you think you love another woman, you know your mother and I will support you all the way, just like we have done with Vince. Your happiness is all that matters to us.\" Eva held her other hand.\n\n\"That's not it, Dad. Not quite. The thing is...I've been invited to live with a couple next year. Me with another woman and a man. A thruple as we say nowadays.\" She scanned our faces, and I admit, Eva and I were both taken by surprise. We were even shocked.\n\nEva spoke first. \"Maria, are you sure you want to do this? That you're comfortable in this kind of relationship?\"\n\n\"I think so, Mom. I love both Carrie and Al...that's short for Alejandro... and we have great chemistry together. I won't go into details, and I doubt you'd want me to, but we click together, all three of us.\"\n\nI got my wits about me and my brain caught up with my hearing. \"Sweetie, I have to admit, I don't think neither your mother nor I was expecting something like this. You've never even mentioned such a relationship possibility before. Were Carrie and...Al?... a couple already when you met them?\" She indicated that they were, they were both 21 while Maria was 18, and the two of them had been together over a year before she met them. \"I guess I worry then in any sort of argument or other conflict of opinion, you'll always be the odd man out. They'll almost always automatically side with each other opposed to you.\"\n\nEva then added \"I also am concerned they might be taking advantage of someone less experienced and more naive. That they'll have their fun with you for a while and then move on, leaving you very hurt. They're both juniors now, right? What would happen to you when they graduate next year, assuming you're all still together?\"\n\n\"They're both planning to stay here. Al wants to go for his Master's degree at least in Chemistry and Carrie plans to go to medical school. Both are excellent students. We all care for each other. We're happy in this relationship.\"\n\nI sighed, a big sound from my chest. \"We can't stop you; you're over 18 now. And we would never hold back from paying for you to go to school, any more than we'd hold back our love for you.\"\n\nEva agreed, then added \"We just want you to be very sure before you do this. We know it's a different world than the one we grew up in. We want you to make the choices in your life that will make you happy. But this is just something so different to us. And you know, if somehow this all worked out long term, you couldn't all get married. Someone would be left out legally. It's your father and my job to look after your interests and safety. We always want to protect you.\"\n\n\"Mom, I don't know what the future will be. You couldn't have known how the future would turn out when you and Dad got engaged. You didn't even know that you'd end up getting married just a couple of months after. And you're still happy and sickeningly in love 44 years later.\" She smiled and she was right; Eva and I were still madly in love all these years later. After talking it over with her some more, and with some natural reservations, we gave Maria our conditional blessing, but we wanted to meet them before we made it official. Cassie was from Ashville and Al was from Florida, and they were both going home to their respective families the following week for Spring Break, and assumedly to explain to their parents about their future living situation. Maria said she'd bring them over the weekend after everyone got back to school.\n\nThat night when we were getting ready for bed, alone in the house (Maria went back to campus that evening after getting a homemade dinner, of course), Eva and I were atypically quiet. Usually, we talked about all manner of things at that point in our day, little, trivial things and big events, and Maria's bombshell certainly qualified as the latter. But it was so big it had us stunned almost silent.\n\nWe got in bed and kissed goodnight, including our shared I love you's. But otherwise, there was no pillowtalk. I reached for Eva's hand under the blanket and we gripped each other lightly. Normally we fell asleep fairly quickly, but that night we were staring at the ceiling for a long time.\n\nFinally. I said \"Angel, I think we have to talk about this. About Maria.\"\n\n\"I know what you were referring to, Jon. I guess we do, if we want to get some sleep tonight.\" She leaned over her side and turned on her lamp, then turned back to me and into my arms. \"Jon, why are we so sad about this? I mean, this isn't a lifestyle I would choose for any of our children, but it's not an occasion for grieving either.\"\n\n\"I don't really know either, Honey. We're definitely living in a different world than the one we grew up in, even the one Connor grew up in. I think I'm mostly worried about her being the third wheel in that relationship. I just think the two of them are going to gang up on her in any conflict.\"\n\n\"I agree it's a possibility, though I don't think it's as serious an issue as you do. I know Maria can take care of herself. She's a tough girl, despite her slight appearance. It's why I'm not concerned about her working in a garage, or owning one for that matter. I guess with me, and this is going to sound so damn stupid...how did that sweet girl turn out to be such a sexual wild thing?\" There was a smile, cute and a little sad, on Eva's face.\n\n\"As I said, it's a different world out there. Things that were once condemned are looked on as normal now. Thankfully for Vince's sake. There's less harassment for Gays these days than not all that long ago. When we were his age the abuse could be terrible. And I want Maria to be who she is like I want all of our kids to be themselves. If this is what she wants in her life, then I want to be supportive. But it's damn strange to me.\"\n\n\"Bear, when we were younger...did you ever fantasize about a threesome? With another woman or another man. Was that ever something you wanted?\" She leaned on her elbow so she could look me in the eye.\n\n\"I guess when we saw it in some of the movies we used to watch, the thought crossed my mind. What it must be like to have sex with two women, whether they were into each other or not. But I never seriously considered it. I never would have asked you about it. You're my wife, the love of my life. There was zero chance I ever would have suggested something like that.\" I kissed her with a loving press of our lips. \"What about you?\"\n\n\"Well, I did wonder about having two men touching me and even sucking one while the other fucked me. Of course, you would have had to be one of those men. But I also never would have suggested it. You're too important to me to have even chanced it. However, I did also consider another woman. I mean, it was a long time ago, more than thirty years. I was kind of curious. And I know you wouldn't have been quite so offended about another woman\" she chuckled. \"I don't know if I could have gone down on another woman. And I honestly don't know how I would have reacted if she went down on you, or when you fucked her. I was curious. But I'm also very possessive about my very handsome Bear. 44 years later and I still find you incredibly sexy.\"\n\n\"Funny, I was about to say the same thing about you. You're still the sexiest woman I've ever known in my life. Like you, I would have been curious about another woman with us. But not nearly to the point I would have risked our love and happiness. Besides, you've always turned me on more than any other woman or women could do. You still do. Sex with you has always been amazing. From the first time I touched your ass to the last time we had sex last week.\" I kissed her, longer and deeper than before.\n\n\"Last week? It's been that long, has it? We should do something about that, Bear. Big, sexy, handsome Bear.\" She crawled back into my arm's and we kept kissing, pecks and hot kisses, all over each other's faces.\n\n\"We should do something right now, my hot as hell Angel. Devil. Whatever you are tonight. I love sex with you. Especially impromptu, like now.\"\n\nOur bedclothes came off quickly and our bodies responded just as fast. One of the best things about not needing Viagra is it makes spur of the moment sex possible. No waiting for 20-30 minutes for the blue pill to take effect. I'm very glad the pill exists for those who need it, and I would have gladly gotten a prescription if that became an issue for me. But at 64, I was still able to get my own erections. Maybe that would change sometime soon. But still, that night, I was good to go and so was Eva.\n\nShe rubbed the head of my cock along the lips of her pussy, giving us both a nice charge. She needed a little lube still like she usually did, but she still got incredibly turned on. We were kissing and moaning as our desire for each other kept rising. My Angel rolled on her back, bringing me with her and I entered her smooth as silk. We fit together like we were custom made for each other. Her hips rose as the base of my cock pressed against her clit, sending a pleasant jolt through her body. I kissed her neck and chest, including the now very faint scar from when she needed the stent put in more than ten years before.\n\nI lifted up on my hands so we could look into each other's eyes. Love, desire, lust were what I saw, and I hoped my own eyes were showing her the same. \"Angel, I never needed another woman. I've got the most incredible lover right here. Another woman would have just been superfluous.\"\n\nShe laughed through her moans. \"Superfluous? You wouldn't have loved to have another woman licking your balls while you fucked me? Or me sitting on her face while you fucked her? Be honest, my sexy Bear.\"\n\n\"There's no other woman out there who could make sex with you better. Except maybe Michelle Pfeiffer.\" We both laughed at that old joke between us, my supposed 'dream girl'.\n\n\"As long as I get Sly Stallone. Hey, maybe we should call them both and see if they're available for a foursome!\" We both laughed harder, hard enough that I almost lost my rhythm and my erection. Not quite though. We got a little more serious after that and fucked each other to delightful orgasms, hers hitting her maybe a half minute before mine came. Eva milked me, draining every single drop of my cum as we kissed over and over. I rolled over and pulled her on top of me and we rested just like that for a while.\n\n\"I love listening to your heartbeat, Bear. Any time at all, but especially after we love each other. It's so soothing.\"\n\n\"That's because it's beating with all my love for you. Which is an infinite amount.\"\n\n\"My heart beats the same way for you, sweetheart. It's just incredible. I love you so much, Jon.\"\n\n\"I love you too, Eva. And I don't think we should worry so much about Maria. She's very smart and level-headed. And like you said, she's tough. We're here if she needs us.\"\n\nWe kissed a couple more times before shutting the light and going to sleep. We were right; Maria could take care of herself.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nA couple of weeks later we had Carrie and Alejandro over for dinner on a Sunday night. They were a very nice couple, soon to be a part of a thrupple with our daughter. We felt better from that brief meeting. Time would tell, of course. Maria was capable of making her own decisions for her life. The only thing Eva and I suggested was to not tell them about the money she would come into when she turned 21, the almost 80K from the trusts we set up for her and Vince from the state money sent each month for their care, and, much more importantly, the almost $2.5 million she and Vince were also due from the settlement from their parents' death. We didn't want her, or Vince, to be used for their money. Vince would get his that coming August, his 21st birthday.\n\nThe next month went by incredibly quickly. The trustees had hired Mrs. Washington, the debate/English teacher, and Ken Dawes, one of our assistant principals, to take over as co-principals, and most of that last month was spent getting them ready. We cleared out our offices of over 30 years of accumulated personal knick-knacks and awards, framed pictures of our family and friends, and other memorabilia. In addition, we had to do evaluations and get ready to graduate our last class of seniors. We were being torn in different directions by our emotions.\n\nThe night before that last graduation, Eva and I were lying in bed, unable to sleep, even after we made love. We were just too on edge. Our offices were emptied, and we just had to do the graduation and a final meeting with our teachers as well as a meeting with the trustees. By 4PM the next day, we'd be retirees.\n\nMay 19, 2024. Our last day as principals anywhere. It was a beautiful, if humid, North Carolina day. We dragged our tired bodies to our last day at Durham Academy, travel mugs of coffee in hand. We got to the field where the stage and chairs were all set up at 9:30, a half hour before the ceremony was to begin. Already half the seats were taken in the guest area, and students were assembling at the back of the audience. We worked with teachers to organize the students- graduates- into their assigned groups, 110 young men and women, like Eva and me, getting ready to start the next stage of their lives. For almost all of them it would be college. For us it would be retirement.\n\nWhen we got to the front, ready to climb onstage, we noticed to our right some extra seats, and then Maria, Vince and Jamaal, and Connor and Oliver came from a somewhat hidden area to take those seats. They came for our last day, for moral support. Rachel and Tony couldn't travel; she was weeks from her due date and air travel was out of the question. However, a laptop was set on a chair with a live stream so they could join us that way. We hugged our family that was there with us, and we told Rachel we'd be in Chicago by June 1st to help out and be there when our grandchild was born. Just having them there with us made us both feel a lot better.\n\nAt 10 promptly, we got the ceremony started, and Eva and I gave short speeches. We told the audience how this was a bittersweet day, that we were proud of our graduates, as always, and we were both happy and sad thinking how this was the last time we'd be graduating a senior class. The Salutatorian and Valedictorian both spoke well, including a thank you to Eva and myself for helping to keep the school going. Then Dr. Kellman spoke with his own thank you to us for turning things around and for leaving a much healthier school than the one we came to three years before. We were holding hands and our eyes were wet. We came back to the podium, told the grads to flip their tassels, and we congratulated our final class as they burst into cheers, throwing their mortarboards high in the air. That was it, our last acts as principals.\n\nWe hosted a luncheon for the staff, all the staff from teachers to administrative assistants to janitors and groundskeepers. Eva and I thanked them, making sure they knew that it took all of us to change the culture at Durham Academy and they were all as responsible for the improvements as we were. It took a while at the end to say goodbye to everyone, and we were a half hour late to the final meeting with the Trustees. Dr. Kellman, as usual, spoke for the group when he thanked us for the job we did. He said they regretted that they didn't offer us the five year contract we had hoped for, but the school was back on the track for success, for itself and for the students.\n\nWe told them that we were proud of the work we did there and that while we were looking forward to our retirement, to traveling and seeing our family and friends, we'd always miss being educators and helping to shape the minds of young people who would grow up to be leaders some day. We thanked the Trustees for their faith in us and for giving us those last few years to keep working. Then they presented us with the bonus's we were promised as well as matching his-and-hers stainless steel Rolex watches. That really touched us, and we went around, hugging everyone with tears in our eyes.\n\nDr. Kellman was particularly effusive in his praise for us. He couldn't thank us enough for \"righting the ship\", as he put it. Eva told him we were grateful for the opportunity, and we thoroughly enjoyed our three years in Durham. She didn't tell him that it never quite felt like home, like our many years in Wayne did; it really was an unfair comparison. But we did enjoy our short time there. Now we felt ready for retirement, which we didn't when we got there.\n\nWe drove home in near silence, but it was a good silence. We were ready for this, mostly. And our family, minus Rachel, were waiting for us at the house with a nice gift of their own, a large Baccarat crystal vase overflowing with flowers. Then they took us out to dinner (the only time we ever let them pay for us) before Connor and Oliver went to their home in Raleigh and Maria and Vince, with Jamaal, came back to the house. Our youngest were living at home for the Summer. She would be moving into her unorthodox situation come August and Vince and Jamaal would be separated for the Fall semester while Vince went to Jordan for a semester abroad. That would be a real test to see if they were built to last. We hoped it worked out; they made for a very loving couple.\n\nSince we had the three young people in the house, Eva and I had to celebrate that night in a somewhat subdued manner. But celebrate we did. We took a long time, teasing and being playful while we were as quiet as we could manage. I guess it's possible they might have heard a few noises. We couldn't help it; we'd gotten used to being ourselves when we had sex and at 63 we were still very hot for each other. 44 years of marriage and we still had it, and we were looking forward to using it as much as we could.\n\nThree weeks later, June 4th, Rachel had her baby, a little girl she and Tony named Samantha Christie Garza. She had wisps of red hair, like her father, but she had the blue eyes of her mother and grandmother. Another grandchild for us to love, another charm for Eva's bracelet and another heart for Cammy's necklace. And a reason to visit Chicago every chance we could.\n\nWe took to retirement like a duck to water. We continued to play tennis a few times a week, we took day trips and long weekends. We went to Pennsylvania to visit Cammy and Kyle (who were enjoying their own empty nest while Anna was in Penn and living in Philadelphia year round). While there, we also got to visit Larry and Gina as well as Patty and Jeff. We didn't see either of them much while we continued to work but now we had time to visit whenever we wanted. When we were up there in the Fall, we were tempted to stop by Wayne Day School, but we resisted the urge. There was still some deeply hurt feelings from the way we were let go.",
        "Over the next two years Eva and I traveled a lot. Long trips back to England and Scotland, France and Italy, three weeks to Australia and New Zealand, a month in Argentina, Chile and Brazil. We went a couple of times to visit Will and Walt in California, they came to us a few times, and we took a vacation together, with Cammy and Kyle as well, to Costa Rica. Eva and I loved traveling, and we still had this affinity for hot sex in hotel rooms. Of course, what we considered hot sex at 65 was not quite the same at hot sex at 20. But we did all right. There was a lot of pleasure and joy, and a lot of loving affection.\n\nOne night near the end of our trip to Costa Rica, we were just cuddling in bed. It had been a long day; we'd gone zip lining, all eight of us. It was a lot of fun and absolutely terrifying at the same time. We were recounting the experience and laughing at ourselves. We hadn't expected to have sex that night, but the more we relived the fun and the fear, the hornier we got. Before I knew it, Eva had crawled down between my legs and was having me for a midnight snack.\n\nWe didn't have oral sex as frequently as we did when we were younger, but we still enjoyed it and honestly, we were still good at it. I guess that comes from the pleasure we each got from giving pleasure.\n\n\"My sexy little Devil still gives such good head\" I moaned lustily while I stroked my fingers through her hair.\n\n\"'Good?' I only give 'good' head now? I thought I used to give you GREAT head!\" she replied with a smile and a pout.\n\n\"I stand corrected. You do give GREAT head\" I said with a big, happy smile as she licked me lazily across my glans. Then she kissed down the shaft to my balls, which hung a little lower after all those years. She sucked them one at a time before she lifted my sack and teased my ass with the tip of her tongue. Her hand slid up and down as she poked my anus with her tongue, then she switched, sucking my cock as her finger toyed with my anus. It really was GREAT; my sexy Devil knew well which of my buttons to push and when.\n\nI moved quickly to sit up (as quick as I moved those days) and I attacked her, pulling her up to me as she laughed with excitement. We kissed a number of times before she climbed up to straddle my face as she grabbed the headboard. I went after her pussy with gusto, letting my tongue wander all over her folds. I knew her most sensitive spots well, like she knew mine and I touched and sucked them all in turn.\n\n\"My naughty Bear. Still so sexy after all these years. And such a delicious lover.\" Eva ground her hips down hard, smothering my face with her tasty pussy. She had some areas that sagged and showed some wrinkles here and there, just like I did. But we were still young in our lust for each other and still teens in our love. There hadn't been a single day when we weren't madly in love.\n\nAs she got closer to her climax, she moved down and, while she kissed me passionately, Eva slid her pussy down on my cock until we were completely locked together. She rocked back and forth as I touched her tits and tweaked her nipples, she raked her nails through my chest hair, and we stared at each other with the deepest love and desire. \"Fuck me, my sexy Devil. Don't you stop!\" I gripped her ass and lifted her hips up and down.\n\n\"Not a chance, Bear. Not until you fill me with your warmth. I love when your cum fills me. it always....oh God, Jon, I'm cumming!!!\" Her eyes went big and wide as her orgasm washed through her, and I wasn't far behind. My cock twitched a few times as my seed filled her for the umpteenth time.\n\nEva fell against my chest as we both caught our breath. We were touching and sharing small kisses, the way we always loved to do since we became lovers so long ago. \"Not bad for two senior citizens, Bear.\"\n\n\"Hey, we're pretty good for two teenagers!\" We giggled and snuggled, keeping each other warm in the air conditioned room. It was April 2026, and it was almost two years since we retired. We were loving our lives, our very active retirement. We saw Connor and Oliver a couple of times a month (when we were home), Maria was happy in her unconventional relationship and doing well in her classes, And Vince and Jamaal were thinking about marriage. We thought life was almost perfect\n\nThere were a number of good times ahead for us. We were healthy, our kids were happy and living their lives. 65 isn't old these days, even if you start collecting Social Security, which we did. Between that, our pension, and our investments, we were living a good life without having to touch our principal. We had another five great years. And then the bottom fell out.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nFrom 2026-2031, when we turned 70, life continued to be great for Eva and me. We kept traveling to Spain and Portugal, Mexico, Greece, Israel again, South Africa and many more. We loved it, loved seeing the world and we loved each other, even keeping up a very good sex life.\n\nCammy and Kyle traveled with us sometimes, other times her brothers went with us, friends we made in North Carolina and from Pennsylvania. Other times we went by ourselves. A few times we took our family, our kids and grandkids. It was expensive but so what? We enjoyed being with them.\n\nConnor made a reasonable peace with Leigh when she got out of prison and he gave her enough money to live comfortably so Oliver could visit her. She was still his mother and Oliver wanted a relationship with her. Connor continued to teach at NC State and eventually met a woman, Nancy, a few years younger (he was 41 and she was 32), a professor in the French Lit department. They got married in '29 and had a baby boy a year later, Charles Richard Grossman. More grandchildren for me and Eva.\n\nOliver went to NC State in '27, taking advantage of the big discount for the children of faculty (though we would have paid for him to go anywhere he wanted), to study chemical engineering. He got that from his father, the science brain.\n\nRachel resumed playing live when Samantha was a year old. At first she just stayed in Chicago, playing solo or with the symphony, and we visited her and her family a couple of times a year. She and Tony were happy and even got married in a small ceremony with just family and a few friends. Of course, her family was almost 30 people so it wasn't quite so small. But it was joyous and Samantha, who was 2 years old, was the Flower Girl for her parents. It was a very happy day and Eva and I were secretly glad they finally tied the knot. The next year she started touring again, with Tony and Sam, as she was called. That little girl saw quite a lot of the world by the time she was 4.\n\nVince and Jamaal got married in '28 and his mother and I threw them a big wedding in Washington, where they were living. He had a job with the government that he couldn't talk much about while Jamaal went to law school at Georgetown. When he graduated, Cammy helped him get some interviews and he ended up in a big firm working long hours. They were as happy as any of our kids.\n\nMaria, my secret favorite (she was the most like me), did eventually tire of the thrupple relationship with Carrie and Alejandro. As Eva and I worried would happen, she kept feeling like a third wheel when there were the inevitable conflicts. We welcomed her home to finish college, and with her double major in Engineering and Business, she had no trouble finding a job working in a shop that specialized in building racing engines and transmissions. She was the only woman in the shop, but after a brief time where she took a lot of shit, the men there came to respect her natural talents, especially in designing and building transmissions. The owner, Carl, was getting on in years and talked about selling the shop some day. She let him know she'd be interested when that time came. Maybe she'd get her dream. For the time being, she was single.\n\nIn 2030, Eva and I celebrated our 50th anniversary and Cammy insisted on throwing us a huge party. \"After everything you did for me when I was young and needed you, I'm finally getting to do something to pay you both back!\" She hosted it in a very fancy French restaurant that closed to the public that Saturday night. We had over 100 family and friends, friends from Durham and from Philly, champagne flowed and Eva and I renewed our vows for the fourth time. That was the best part, declaring our love everlasting in front of all those people we loved. We exchanged gifts the night before, for our Golden Anniversary. I gave her a gold ring with teh Hebrew letters for Chai, the symbol for 'To Life', in diamonds set in the base. She gave me a Patek Phillipe gold watch. Very lovely gifts. Then our kids pitched in and treated us to a 'honeymoon', ten days in Hawaii.\n\nWe made love almost every night, as if it was our real honeymoon. One night Eva was on top of me, moving around in incredible circles, still able to squeeze me with her muscles at 69, though not quite as tight. It felt great to me as I let my hands explore her with both curiosity and skill. She bent down and kissed me, then she whispered \"So Bear, any regrets? Want to trade me in for a couple of 22 year olds?\" She giggled as she said it, an old joke between us.\n\n\"Are you kidding? They'd kill me if I even tried! Not to mention what YOU'D do to me if I tried that!\" We were smiling and loving and laughing, happy and so deeply in love. I held her close as our hips moved in sync with each other, bringing wonderful pleasure to each other. Maybe we didn't move quite as vigorously as we used to, but we still knew how to bring out the lust and love in each other.\n\nAfter we came, we were lying together, her head on my chest, playing with my hairs there as my fingers tickled up and down her back, the way we had been doing for over 50 years. I said, softly, \"Remember when we had to use my Ford to be alone? We used to park in that little cut-out that was barely big enough for 3 cars.\"\n\nEva laughed lightly. \"Of course, Bear. I remember that, I remember when we used the football field a couple of times. I remember the hotel and motel rooms. All of it.\"\n\n\"Remember when I rented that really cheap motel room near the airport? It was such a cheap place we broke the bed?\" We started laughing out loud at that memory.\n\n\"That was the first of two beds we've broken. The other one at my brother's house when Connor was still a boy and I was pregnant with Rachel?\" We were laughing ever louder as we kept remembering.\n\n\"Will and Tania (his fiance at the time, now his wife)... Cammy was there and she put Connor back to bed when he wondered what was going on. Tania had to come in and help me up and to get my robe. She saw my penis and smirked at me. We still managed to cum even as the bed broke!\" We were now laughing uproariously.\n\n\"My brother called me an animal and then he told Walt the next day! I thought I was going to die from embarrassment!\"\n\nWe kept laughing and then we settled down. \"Then a few months later, when you had to go on maternity leave. Those kids at school threw you a going away... well, not a party. Those sketches that were funny without being disrespectful. The songs and the flowers. Speeches. That's when I knew that we belonged there, that we were with 'family'.\n\nEva cuddled closer to me. \"You know what I remember most of all? The way my Bear sang for me in front of the entire school. The only time you've ever sang in front of an audience for me. Then others joined in. You sang so beautifully, Bear. You still do.\" She kissed my chest and my neck. It was sexy and so romantic.\n\n\"I wish I brought my guitar, Angel. But still...\" I started singing, like I still did from time to time, and I sang Tupelo Honey. Still our song, and Eva sang with me, something she only occasionally did. When we got to the line \"She's an Angel, in the first degree\", we both started crying tears of perfect happiness. I stopped the song and said \"You're forever my Angel, Eva. Always...\"\n\n\"And forever.\" She completed it like we often did. Always and forever, how we defined our love for each other. \"We've led a good life, Bear. Wonderful children, jobs that were important. We took care of Cammy when she needed us. We adopted Vince and Maria. We invited people into our home to celebrate Shabbat and Jewish holidays. Fifty good years together. More, actually.\"\n\n\"All because you lost out on being Valedictorian and I sat down when you were sad. It's amazing how life can turn out from simple beginnings. Angel, how about we go to New York in a few weeks, maybe in April? Before it gets hot there. See a few shows. Stay at the Plaza.\" We smiled at each other. \"Go to Marco's.\"\n\n\"I love that idea, Bear. Just the two of us. Another romantic trip. I love the idea about Marco's. And maybe, just maybe that little cut-out is still there? Think we could relive our glory days?\" She tickled me along my inner thigh, and I flinched as I Iaughed with her.\n\n\"If it's there, we'll go for it. My dirty little Angel. Or is it Devil? I can't decide.\" I rolled to my side and kissed Eva's neck and we got naughty for a second time that night. Hotel rooms got us every time.\n\nSix weeks later we were in the backseat of a rental SUV (more room) in that old empty space we first fucked around in over 50 years before. We were amazed it was still there after all those years. I was on top of my sexy wife, lunging in and out of her very excited pussy. The situation had us turned on bit time. Eva experienced a few small orgasms as she squeezed me between legs that were even stronger than when we were 18, from years of tennis. \"This is so fucking hot, Bear! Harder! Fuck me harder!\"\n\nI thrust as hard as I could, just as turned on as she was. No other cars were there and we felt free to be as lusty as we wanted. My balls were slapping her ass and I leaned down to suck her nipples, still nice and stiff. Then we were staring in each other's eyes as we were approaching our climax's. For a moment, I saw something in her eyes and on her face, something I didn't think I'd ever seen before, a blank kind of look. It lasted a few seconds before it was replaced by her pleasure again, and then we came, laughing and kissing. \"This was a great idea. My wicked wife!\"\n\n\"My wanton Bear. You're an animal!\"\n\n\"Bears are animals, Angel. You do bring it out in me. You always have.\" I kissed the side of her neck and she giggled. \"Eva, was anything wrong, a few minutes ago? I thought I saw a look on your face...\"\n\n\"No, Jon, nothing was wrong. Everything is just fine.\" She smiled warmly and kissed my chest. \"I think we need to get dressed and get out of here before someone calls the cops on us. Can you imagine having to explain getting arrested for this to our children? I'd rather rot in prison!\" We laughed heartily as we got ourselves together, then headed back into Manhattan for a late drink in the hotel bar. Another great memory made.\n\nThe next night we drove back to Queens to go to Marco's for some great chicken cacciatore. The woman who had been the waitress and then the co-owner with her brother was gone. We asked and were told she died, her brother retired from the kitchen, but the next generation was running things. It was still the family place it had been for over 60 years, and the food was still amazing.\n\nWe held hands after dinner as we sipped our coffee. \"Bear, this has been a wonderful trip. I loved coming back here...last night and tonight.\" Her smile was still beautiful and perfect. \"We should come back here every year, even if just for a weekend, come here for the chicken. Maybe we'll still want to go to our clearing.\" Her smile reminded me of the teenagers we were when we started.\n\n\"Deal. Same time, every year. Marco's and making out.\" We laughed a little louder, drawing a few stares from other diners. Who cared? We were having a great time, looking forward to more great times ahead. Next year at Marco's again!\n\nUnfortunately, it was not to be. This would be our last trip to Marco's or to New York, for that matter.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nDuring that Spring and Summer, Eva experienced some changes, small at first. They had to do with her memory and cognition. One day not long after we got home, she went to put our tennis clothes in the wash and she couldn't remember where we kept the detergent. That was a big warning that something wasn't right. There were other things as well. We'd be talking about various friends and she couldn't remember a name. Even scarier was when she couldn't remember Samantha's name one day when she was on the phone with Rachel.\n\nEva handed me the phone and walked to the kitchen very frustrated. I got on the phone and Rachel sounded alarmed. \"Dad, what's with Mom? She couldn't remember Sam's name and there have been other things recently. Have you taken her to the doctor? Maybe she had a stroke or something.\" The 'or something' was left undefined.\n\n\"She won't go. Whenever I bring it up, she just shuts me out. There are things about her that I don't even understand sometimes. She gets these blank expressions on her face in the middle of a conversation... Connor and Maria have noticed as well. We don't get to talk to Vince so much but when we spoke to him last week, she lost her train of thought. It's been getting worse almost daily.\" I had a tone of mild despair.\n\n\"Dad, she has to go to the doctor. You have to find a way to get her there.\"\n\n\"I'll try, Rachel. I'll try.\"\n\nThat evening, Eva was cooking a chicken. I let her do it because she gave me a nasty look when I tried to take over. All of a sudden she screamed in terrible pain. I rushed into the kitchen and she was crying, her hands shaking in front of her, the chicken, roasting pan and grease all over the floor. She tried to take the piping hot pan out of the oven without putting on mitts first. Her palms were scalded and she was frightened as hell.\n\n\"Jon, what is wrong with me? What's happening to me!\" She was crying, in fear as much as from pain.\n\n\"I don't know, honey, but I'm taking you to the hospital right now!\" I helped her step through the grease and brought her upstairs to change quickly from her spattered pants. Then I took her to the ER, leaving the mess on the floor of the kitchen. While we drove to Duke Medical, I called Maria and told her what happened and asked her to go to the house and clean up the kitchen before she met me at the hospital. No problem, she dropped whatever she was doing and went to clean up.\n\nAs we pulled into the parking lot for the ER, Eva was crying again. \"Bear, I'm so scared. What's happening to me?\"\n\n\"I don't know, my Angel, but we're going to find out. We're going to get to the bottom of this tonight.\"\n\nThey took her back right away; her hands were blistering and she was in mild shock. I sat down to wait for God knows how long. An hour later, Maria got there, and then we both called Connor, Rachel, Vince and Cammy. Connor drove up right away, getting there in little more than a half hour with Nancy. Cammy and Kyle made arrangements to come down in the morning, while Vince and Rachel needed a day to get a few things worked out but would be there in two days.\n\nAfter 3 hours, a doctor came out to talk to me. By that point my stomach was in knots, with no thoughts at all about my missed dinner. Connor and Maria stood there with me as the doctor told us that Eva's hands were burned, wrapped in bandages, but they would heal in a few weeks. \"There is something more serious going on, Mr. Grossman. Your wife is showing signs of some sort of dementia. We don't know if it's from a stroke or from something organic. We're going to keep her overnight, maybe a couple of days, and run some tests. We have excellent neurologists here and they'll figure out what's going on. If the four of you want to go back and see her for a few minutes, you can. She's been given a sedative because she was very agitated.\"",
        "We thanked the doctor and went back to see Eva. My wife, their mother and mother-in-law. Loved by us all. She was very quiet, even when she saw us, though she did say hello like she was in a haze.\n\n\"Hi Angel. How's my love?\" I kissed her head and then her lips.\n\n\"Jon. I'm ok. Not scared now. I'm too sleepy.\" She smiled at me and for a minute I saw my wife, the woman I was still madly in love with. I couldn't hold her hand due to the burns but I held her wrist instead. Connor and Maria talked to her briefly, then we had to leave to let her rest while they found a room for her.\n\nIt was late August and the night was sticky. You could see the small gnats swarming around the sodium lights and in that moment my heart broke. I knew what she was suffering from was no stroke. Dementia. The doctor used that term, and I knew he was right. I had seen the changes in Eva for months, slowly taking away the woman I loved more than anything in the world. I cried as if she was gone.\n\nMaria, Nancy and Conner hugged me and they cried as well. They had seen the changes coming over their mother for months like I had. They knew the news would be bad. No, it would be devastating.\n\nThey came back to the house with me. Maria had cleaned up the kitchen so it was spotless. My Little Hero. We all sat and talked but we made no plans until we were sure what we were dealing with.\n\nCammy and Kyle got to us around noon and met us at the hospital. There weren't the usual hugs and kisses; these were sad and scared. Cammy made sure I knew if I needed any legal work done, either she would do it for us or she'd get someone locally for me. I could always count on her and her level head. Especially in bad times.\n\nThe next day Rachel arrived without Tony and Sam; he was watching her at home. The hospital is no place for a 2 year old child. Then Vince and Jamaal came to complete the group (aside from Oliver and Anna, who were both at school and would come if we needed them). Walt and Will were coming at the end of the week, in two days. They had things at work they had to deal with.\n\nEva slept a lot. She was kept on a mild sedative because she got very agitated when they took her off the drugs. We sat with her in shifts but there wasn't much to say.\n\nThe third morning, two doctors on the neurology team came to see us, Dana Morrison and Edward Kantor. They sat down with the whole family that was there (except Eva, who would be told a little later). Morrison spoke first. She was the senior doctor and the leader of her team. \"Mr. Grossman and family, we know what is wrong with your wife and mother. It wasn't a stroke, her brain shows no signs of that kind of lesion. The other tests we did shows she has Alzheimer's Related Dementia.\" We all gasped and grabbed the hands of the nearest family member; for me, it was Connor and Maria. \"We know this sounds like the worst news possible, and we won't lie. It's very serious. Her long term prospects are not good, perhaps 3 years. There are new drugs we can prescribe for her which will improve her memory and cognition in the short term. But honestly, unless there is some sort of therapeutic miracle, after a short period where she'll feel better, her mind is going to slip pretty rapidly. Her disease is a rare, fast moving form. Now, you can bring her home today and I would suggest never leaving her alone. Sometimes the patients can slip out of the house and go missing for hours. You might want to hire aides round the clock for the immediate future. But within a year, maybe less, you're going to need to look into a nursing facility for your wife. We're sorry to give you this terrible news. We wish it was better. In the meantime, surround her as much as possible with people she knows and loves, the music she knows and so on. She told us she loves music. Play her favorite songs and albums. Anything familiar.\"\n\nThey offered to answer our questions, but I think we were all in too much shock to ask more than a couple of questions. I then met with a social worker who gave me the names of a few agencies that provided aides and she also got the paperwork going for Medicare and our private insurance to pay much of the bills that were going to pour in. That didn't worry me; I could pay whatever I had to. I had too many other things to worry about.\n\nCammy helped me as our kids got Eva ready to go home. The doctors gave me a couple of prescriptions for her, the new med to improve her memory and cognition as well as an anti-depressant. Then we went to her room to break the news to Eva. She took it remarkably well. Maybe it was the sedative still in her system, but I believe she already knew what was happening to her and why. She was such a smart woman, always, all her life. That's probably why she avoided seeing a doctor; who wants to hear that diagnosis?\n\nWe left the hospital, a dejected group. No one cried in front of Eva, and she didn't cry either. Not until we got home. Cammy and our kids worked on getting something together for dinner while Eva and I had some time alone in our bedroom. Then she fell into my arms as we sat on the side of the bed and she just fell apart while I cradled her shaking body.\n\nBut instead of what I expected, a series of exclamations about how unfair this was, Eva kept saying \"I'm so sorry, Bear. So sorry\" over and over. Finally, when she settled down, I got to speak.\n\n\"What are you talking about, Angel? What are you sorry for? You didn't do anything to cause this.\"\n\n\"I'm sorry because I'm going to be leaving you alone. And soon. I'm going to be leaving my love, the only man I've ever loved, the only man I've ever wanted....\" She started crying deep, mournful tears.\n\n\"You're the only woman I've ever loved. And I'm not giving you up without a fight. I'm going to take the best care of you that I can. And despite what the doctor said, I'm not putting you in a nursing home. No way. I'll hire whomever we need to help care for you. You're staying her in your home. With me.\" I started crying with her and we rocked each other side to side as we sobbed.\n\nWe stayed like that for a long time. The shadows grew longer through the blinds and our family let us alone for as long as they could. We both appreciated the privacy. We'd have time to talk with all of them. We needed this time to ourselves. Just the two of us. I even sang to her, our song, of course. Tupelo Honey.\n\nEventually Rachel came up and knocked on our door. \"Hey, Mom and Dad? We have dinner ready. Do you want to join us? Please?\"\n\nMy Little Angel. We had to start considering how all this was affecting our children. They were hurting too, not to mention our grandchildren, Cammy and her family. And we still had to call her brothers and tell them what was happening to their sister. They'd be in North Carolina Friday night.\n\nWe tried to talk casually, as if we hadn't gotten the most awful news imaginable. But we couldn't ignore what we knew. Cammy cried first and then we were all shedding tears, some of us harder than others. Dinner was mostly uneaten.\n\nThat night in bed, Eva and I tried to talk, but it wasn't easy. Between our grief and her mixed thoughts and emotions, the best we could do is hold each other affectionately. We weren't ready to discuss the big decisions.\n\nFor the next two weeks, into early September, Eva was not doing well. She was confused and at a loss for words, losing her train of thought easily. Then she had a rapid improvement as the new meds started taking effect. It was like a miracle took place. We played some tennis, went out with friends for dinner (no alcohol for her). Life felt good again.\n\nWe did have to make some decisions while she was lucid. The doctors told us the improvement might last as long as six months or as short as two. We were determined to enjoy every good minute we had. But we signed various papers giving me Power of Attorney over her affairs. We hired one of the services to provide aides when we needed it. A hundred other things.\n\nOur private insurance refused to cover things like the Alzheimer's medication, which was expensive, over four thousand a month. We could afford it, but that wasn't the point. I actually enjoyed fighting with them over their decision. It felt like I was doing what I could to fight for my wife. And I won; they covered the amount that Medicare didn't cover.\n\nIn early October, Cammy and Kyle insisted we come visit for a week. It seemed like a long time to be away under the circumstances, but they were insistent, and besides, who knew how much longer we'd be able to travel? A big trip was out of the question, but this was to familiar surroundings with very familiar people.\n\nWe spent the first few days visiting old favorite places, including good Chinese food (still Cammy's favorite), seeing Larry and Patty and their spouses, separately. Then on Wednesday, Cammy said they had a surprise for us. They told us to dress nicely, as nice as we could. Eva was having a good week, and we looked forward to whatever my sister and her husband had in mind.\n\nThey drove west on Lincoln Highway, towards Bryn Mawr and Vanderbilt and Valley Forge...and Wayne. We approached the school and Eva and I grasped hands. We hadn't been back there in almost ten years, since we were let go. Then Kyle pulled into the right lane, the turning lane to enter the school grounds.\n\nI said, not all that happy, \"Kyle, what the hell are you doing?\"\n\nHe kept turning and Cammy turned around from her front seat with a big smile. \"This is your surprise. Look ahead.\" We saw the football field had the stage that we used for graduations set up and a hell of a lot of seats set up into the length of the field, filled with adults of various ages.\n\n\"Cammy, what the hell is going on?\" I was curious, annoyed...I don't know. Eva looked a little worried but she was smiling, too.\n\n\"It's Eva and Jon Grossman Appreciation Day! What they should have done when you would have retired. They're going to unveil your portraits, to be hung afterwards along the hall where the other portraits are.\"\n\nEva and I hadn't even thought about this since we left. We of course knew about the other portraits but we tried not to think about it over the years. We of course kept track of the goings on after we left. The Horvaths were not invited back after their five years; enrollment had taken a huge hit during their tenure and they were unpopular among the students and parents, except for a small group of deeply Conservative types. Maitland and his group were voted out, more traditional members were voted to the Trustees, and they hired new principals that were more like me and Eva were. Things were better now, thankfully.\n\nKyle said as he parked the car \"They had to hold a raffle for tickets to this. You wouldn't believe how many of your former students wanted to come. They could have filled those seats four times over, at least. So many people love you both.\"\n\nEva looked nervous as he shut the engine. \"Jon, I don't know if I can do this. I'm terrified of speaking. What if I lose my concentration? I'll look like an addled old woman.\" I held her a moment, then gave Cammy a dirty look.\n\n\"You should have warned us, Cammy. I don't know if this is a good idea.\"\n\n\"They wanted to surprise you, Jon. You don't have to speak if you don't want to; they know Eva has been sick. But they wanted to honor both of you and I thought it had to be now, while you're doing better, Eva. I know, I probably should have asked. But they wanted to make this very special for you both.\"\n\nWe looked at each other. \"We're here, Angel. We should let them do this. It's for our former students as much as it's for us. I can speak for both of us.\" I hugged her and she nodded in agreement.\n\nWhen we got out, Burt Voigt greeted us, even though he was retired from sitting on the Board. We were introduced to the new members, almost all of whom were students during our tenure at various times. We were led to the stage and I helped Eva up the steps. We were greeted with thunderous applause. We met the current principals, a nice young couple, James and Krista Silver. They led the ceremony, Burt spoke a few minutes, a couple of our former students spoke to represent all the students over the years. Then Jackie Allen, now Jackie Kent, spoke. She had been 16 when she was abused by that teacher and now she was in her early 50s. She spoke movingly about how we got her through a terrible time in her life. She brought us both to tears, and we weren't the only ones. Jackie spoke about her family, how happy she was, and how Eva and I were largely responsible for her success as an adult. That brought a standing ovation as many of our former students cheered.\n\nThen Burt took over again and unveiled our portrait, a nicely done painting of Eva sitting at her old desk while I stood behind her with my hands on her shoulders and one of her hands covering mine. We both cried as the applause broke out again and Burt asked if we wanted to say something. \"Jon, I can't\" Eva said softly through her tears, and I understood. I held her hand and kissed her before going up to the microphone.\n\n\"This was an unexpected surprise. When my sister Camilla told us as we turned into the school grounds earlier, I was almost angry with her. I guess you all know Mrs. Grossman and I didn't leave here under the optimal circumstances. But we've always thought of this place as a home, and all of you, students and staff, as our 'other family'. We loved our time here, almost every minute. Eva can't speak to you; I know you know why. And this warm, loving reception tells us that we can't be upset with Cammy, as we call her. We can't be upset about anything to do with Wayne School. We had a wonderful time here, we raised our family here. The memories we have... we'll cherish them for as long as we can. And we'll cherish each and every one of you. Thank you. This has been an amazing experience, today as well as our years here. Love to you all.\" I couldn't go any further, I was a mess by that point. Eva came to me and kissed me in front of everyone, an incredibly loving kiss. I loved and adored her with all my heart.\n\nAfter a brief luncheon (in the cafeteria lol, catered of course), we toured the school one last time. Eva didn't say much; she was worried about how she might come across. Then we watched as our portrait was hung up next to the dozen or so others. Right next to Lenny Moskowitz. We owed his soul a huge debt of gratitude. If it hadn't been for his recommendation, we never would have come to Wayne Upper Day School.\n\nBack and Cammy and Kyle's, we had a Zoom call with our children, all of whom knew about the celebration and who all signed off. They all thought it was good for us, especially for Eva, and she was happier that night than I'd seen her for a long time. Then in bed later, Eva rolled sideways to me and kissed me. Staring into my eyes, she said \"This has been such a great day. Do you want to make it perfect, Bear? Do what we haven't done for a while now?\" She was clearly talking about sex. I hadn't been able to touch her that way since before her diagnosis. Honestly, I'd been afraid to.\n\n\"Eva, Angel. I don't know if I can. I'm scared, kind of.\"\n\n\"You think I'm not? I know you're frightened of...I guess of hurting me somehow. But I'm not physically weak. And I've been feeling good lately. And tonight I feel great. I want to be loved by my husband and I want to love you back. Who knows how much time we'll have, Jon? I want to share our love as long as we still can. Don't make me beg.\" Her eyes were pleading with me.\n\n\"What if I like it when you beg?\" I smiled and put my book down before shutting off the bedside lamp.\n\n\"If you really want me to...\"\n\n\"No. I don't want you to ever beg for my love. Never again.\" We embraced and we kissed over and over. We touched each other as we hadn't for months and soon we were both very excited and Eva welcomed me inside her. We moved slowly, savoring each other like it might be the last time. For all we knew it might have been. Each stroke, each shift of our bodies was special. And every kiss was amazing. When we came, we cried, not sad tears, but very joyful tears. However much time we had, we were going to cherish each moment. Each and every one.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nThe next couple of months were great. Eva was feeling good almost every day. Neighbors came to visit, we went out to dinners alone or with friends. Our kids came to visit in a kind of rotation. Of course we saw Connor and Maria more often since they both lived nearby. Vince and Jamaal came for Thanksgiving, and everyone traveled to Cammy's for Chanukah/Christmas, which fell out at the same time that year. It was a good time and Eva and I loved being around our family. We even toyed with the idea that maybe the medications would keep working indefinitely.\n\nNew Years was quiet at home. Maria stayed with us with her fiance Max; they'd gotten engaged just before she went up to Philly with us for Chanukah. She was going to convert to Judaism; her years with us gave her a love for the culture as well as the religion. She was a believer in a way Eva and I never were. They didn't have a date yet.\n\nThat night, after we went to bed a little after midnight, Eva and I were making love. We'd gotten pretty regular about it, a few times a week. We were enjoying life in every way we could.\n\nWe were moving together, she was on top of me, shifting around to bring us both lovely pleasure. Then, suddenly, she got this blank look on her face like I hadn't seen since the Fall. I got scared, but not nearly like Eva did. She screamed \"Who are you! Where's my Bear? Jon, JON!! HELP ME, someone's in my bed!\" She didn't even recognize me. I immediately rolled her off me gently and tried to comfort her.\n\n\"Eva, Angel, it's me, Jon. Your Bear. Eva, my love it's me!\" She was crying, almost hysterical. She was back, but scared half to death. She clung to me while she bawled.\n\nMaria was pounding on our door. \"Mom, are you all right? Can I come in?\"\n\nI cried out \"No! Don't come in, Maria! Give me two minutes.\" I turned on the light, my wife still crying with fear. I got our bathrobes and helped her on with hers, then I put on my own before telling Maria to come in. She burst into the room with Max right behind her. She hugged her mother who was still deeply upset.\n\nMax asked me what happened and I told him, as discreetly as I could. He shuddered at the thought. Eva thought for a minute she was being attacked by a stranger. She didn't recognize me, her husband of over 50 years, in the middle of our lovemaking. That would turn out to be the last night we ever did make love.\n\nShe was shaken up all the next day, then the day before my birthday we called the doctor and they got us into the office as an emergency. Eva had a few small episodes during the time between when she had that terrible scare and when we went to the doctor on the 3rd. She did some tests, asked Eva some questions and her diagnosis was what we all feared: the meds were no longer working and Eva would start to rapidly decline. Things had gone well for so long we ended up deceiving ourselves that somehow she would keep doing well. Dr. Morrison was sympathetic; she'd seen this before. It was the cruel side of remission, the false hope.\n\nWe drove home in distressed silence and as soon as we got there, I called the agency to arrange for aides to come around the clock. I wanted someone there all the time in case I couldn't keep an eye on her.\n\nEva didn't argue; she didn't say much of anything. She was too depressed, knowing it was a matter of time before she lost herself and, to her thinking, everyone that mattered to her. Connor came over after work and then Maria did as well (She owned two gas stations/repair shops then and was thinking about buying a third.) Connor wanted to take time off from work, take the upcoming semester to be around his mother as much as possible but I refused. Eva and I had talked about that possibility and she had let me know she wanted our kids to live their lives, kind of how my mother had reacted a long time ago. Connor wasn't happy about it, but then his mother let him know she was adament about it. We could afford to take care of her and we would do just that.",
        "Then Maria said something that touched us both deeply. \"Mom, Dad, Max and I were talking the last couple of nights. We want to get married right away. While you're still having good days. We were thinking February 17th, your anniversary.\" My Little Hero. It was even a Sunday, perfect. \"We don't need a big wedding. We want to do what you did, about 50 people in a restaurant. I want my mom to see me get married. And Max agrees 100%.\"\n\nEva cried in her daughters arms. \"I'm taking away your most cherished day, Maria. You shouldn't do this for me.\"\n\n\"Mom, listen to me. When you knew Dad's mother was dying, you did the same thing. You wanted her to see you and Dad get married. And that's what I want. I want my mother there with me on my special day. You and Dad gave me such a great life. If it wasn't for both of you, God know's what would have happened to Vince and me. I love you both more than anyone, except Max. Maybe. This is how I want to get married, I want it to be on your 51st anniversary. And you're going to help me plan it as best as you can.\" She was adament. Our amazing daughter. I would never admit it to anyone, but she was my favorite. A little bit.\n\nI hugged her and I whispered \"I'm so proud of you, sweetie. Thank you. And you make sure you send me every single bill.\"\n\nOver the next six weeks, things changed a lot. We had a rotation of aides living in one of the guest rooms. Eva didn't always need help, but she did need it sometimes. Getting cleaned up, dressed, helping me get her to appointments. I installed little bells on all the doors leading outside so if she tried to wander off, we'd know it and we could go after her.\n\nRachel canceled her concert tours that year. I hated that she had to do it, but she wanted to come visit every other weekend with Sam and Tony. Vince couldn't come quite as often, but he came at least one weekend a month with his husband. And Cammy. Cammy and Kyle practically moved down, renting a house to be near us as much as possible. \"She's my sister and kind of like my mother, Jon\" she explained to me. I want to help her and just be around you both as much as possible.\"\n\nWhen I told Walt and Will when Eva got bad again, they both told me to send them the bills for her aides, for her medications, everything related to their sister's care. I told them it wasn't necessary, that we could more than afford it, but they were insistent. \"We never did anything to repay her for being a great big sister to us when we were young\" Walt explained to me. \"She was great, even when we gave her a hard time. So were you, Jon. We love you both, but especially our sister. Please, let us do this for her?\" I gave in; I was in no condition to argue. I had enough on my plate.\n\nWe got ready for a fast wedding. Maria found a simple white gown, she asked a couple of girlfriends (yes, our Grease Monkey had girlfriends still) to be bridesmaids and she asked Rachel to be her Maid of Honor, which greatly pleased her big sister. Connor and Vince would be ushers as well as Max's brother. And Maria told Eva and I we were both going to walk her down the aisle. \"I couldn't leave Mom out from that special honor. No way!\"\n\nThe wedding was held at the same restaurant Cammy hosted our 50th anniversary party at exactly a year before. 50 people for a Sunday brunch wedding, so they could be ready for dinner service that night. It came together fast with a lot of help from her family, me included. Some days Eva could give her input, but others she just couldn't. She was really losing her battle very quickly. It was frightening.\n\nAt night I held her in bed, and even on her good days, the nights were usually bad. It's called 'Sundowning'. The efforts of the day tire the patients out and the exhaustion takes away whatever good days they had. I sang to her every night, often during the day, but always at night in bed. Simon and Garfunkle, Dylan, Clapton, The Dead, of course. The music she knew best. It comforted her and sometimes she sang along as best she could.\n\nI brought her roses for Valentines Day, more for her birthday. She was having good days and she loved the flowers. \"Thank you, Jon. I still love you. I love you.\" She had a habit of repeating herself when she was unsure. Her mind was going so fast. It was breaking my heart.\n\nOur anniversary, Maria's wedding day. Maybe it was a force of her will, but she woke up sharper that morning than she had been in weeks. She knew it was Maria's wedding day (though a couple of times she said it was Rachel's) and she had the aide get her ready early, getting her hair done by her hairdresser, who came to the house every other week for her. Cammy helped her with her makeup, and Eva looked like the woman I loved with all my heart, so beautiful in a blue dress the women found for her. Her body was changing, she was thicker around the middle as she got less exercise (I did too; I wasn't taking great care of myself). But to me, Eva was perfect.\n\nWe got to the restaurant early for pictures, and my girls, Eva, Cammy, Rachel and Maria all looked beautiful. Anna actually looked sexy, 26 now, with a date on her arm. Vince and Jamaal, Connor and Nancy with Oliver, now 22. Will and Walt with their extended familys. A beautiful family of Grossman's, Glazers, Garzas and a Walker (Jamaal) and now a couple of Liebers (Max's last name). When I look at the large family portrait of that day, I am both happy and sad. We all knew it would be the last happy occasion we would all celebrate together before the inevitable happened.\n\nEva and I both walked Maria down the aisle to the chuppah and when we got there, before we handed her over to Max, I lifted her veil and Maria gave me a huge hug and kiss, thanking me for being her father. Then she turned and held her mother like she would never let her go. Eva held her just as tight and whispered something I couldn't hear. Something private between mother and daughter. All I know is Maria started crying softly, then Max stepped down to take Maria's hand and they went to get married as Eva and I took our seats. I looked at my wife and saw her eyes were clear and she was leaking her own tears. For that day, she was almost herself.\n\nDuring the party, I dance a couple of slow dances with Eva, and Maria and I dance to that awful song, Daddy's Little Girl. I danced with Rachel, with Anna, and with Cammy. My best friend besides my wife. It was a wonderful day.\n\nIt came at a cost. Eva was beyond exhausted when we got home, and as the aide and I helped her get undressed and washed up, she didn't know where she was or whom she was with. The wedding took everything out of her. She stayed that way for three days, and it scared the hell out of me. Thankfully, the following day she was back, at least part of the way.\n\nOver the next six months, Eva got harder to handle. She got more agitated when she didn't recognize someone or remember their name. She wasn't able to take care of some of her most basic needs and the aides, all women, were having trouble helping her. I wasn't exactly a kid anymore and I was having trouble with her. I was also having trouble coping emotionally. I went to support groups her doctor recommended, but they only helped so much.\n\nI sang to her, told her I loved her all the time, reminded her of who I was, but it kept getting worse and worse. She didn't recognize our children when they visited. My own doctor became concerned about my health. I gained 30 pounds, my blood pressure was getting dangerously high and I looked like I aged 10 years in the last 8 months. She told me I had to face reality. Taking care of Eva was killing me. If I didn't put her in a nursing home and start taking better care of myself, she might outlive me.\n\nConnor and Maria came over that night and we talked to Rachel, Vince and Cammy via Zoom. Just the six of us. No spouses. I told them all what my doctor told me as well as telling them how difficult it had gotten taking care of their mother/sister-in-law. They all agreed, unanimously. It was time to get her into a professional facility. The next stage in my heartbreak.\n\nThankfully money was no object. Even if I couldn't afford it (and I could), Will and Walt insisted on paying for her care. To be blunt, they were filthy rich, a couple of Silicon Valley billionaires. I agreed to split the cost with them.\n\nConnor and I went around to a few homes that were recommended to me through my doctor and some friends. The third one was the best. It was ten minutes from home, the residents were all well cared for, clean and there were some activities. You could pay extra for individualized care during the day, which was recommended for dementia patients.\n\nThe next step was bringing Eva. We walked around, and she realized why we were there and she started to cry. \"Jon, I don't want to be here! Please, take me home! Don't leave me here, please!\" Over and over. Maria helped me calm her down and the woman in charge of patient care also sat with us and helped. She'd been through this dozens of times, maybe hundreds.\n\n\"Mrs. Grossman, we're going to take good care of you here. The food is good, the people are nice, the people who work here are very kind. We have a nice private room for you. I promise, you'll be very happy here.\"\n\nEva was inconsolable. And the worst thing, in my thinking, was the fact that by nightfall, she probably wouldn't remember what happened. Maria helped her mother sit down and console her while I went with Mrs. Rogan (the person in charge) to sign the necessary papers and leave a check. Like I was going to deliver Eva for Cash on Delivery or something. It felt cheap.\n\nThe next day I took Eva to her favorite park, where we fed the birds in the lake and walked around quietly. Then I spread out a blanket and we had some sandwiches and iced tea, and then I brought out my guitar and sang for my love. Please Be With Me by Eric Clapton, My Love by Paul McCartney, Sailing by Rod Stewart. Maye one or two others. But I couldn't sing Tupelo Honey. I just couldn't. I didn't think I could ever sing it again.\n\nWe spent our final night together with Connor, Nancy, Oliver, Maria and Max. Cammy checked in by our smart phones, then Rachel and Vince took turns. It was all very tech, modern and sad. After everyone left, after our aide, the last one we'd need at home, went to lay down, I sat with Eva, quiet. \"Hey, Angel. How are you feeling?\"\n\n\"Is my name Angel? I thought it was something else. But it sounds....I don't know. You're.....\" She couldn't remember my name or her own. I wanted to fall apart but I couldn't, not then. I wanted Eva to be able to get some rest.\n\n\"I'm Jon, Eva. I'm your husband. Your Bear. Remember? We met in high school?\"\n\nShe brightened up then. \"You sat next to me. You cheered me up and we dated.\"\n\n\"Yes honey. We fell in love that Spring and Summer. And we got married fhe next February. We've been married 51 years. And a half.\"\n\n\"We have? I think I remember...\" Eva then cuddled next to me, like it was the most natural thing in the world. like we had done almost every night for almost all our adult lives. Tears were falling down my cheeks and she noticed. \"Why are you crying, Jon?\"\n\nShe remembered my name! It wasn't unusual during the day, but at night, it hadn't happened in months. \"It's nothing, Angel. Just I'm kind of emotional tonight. Would you like me to sing you a song? Something special.\"\n\n\"Sure. You sing, don't you?\" She was smiling, as best she could.\n\n\"Only for you. My love.\" I kissed her softly before I picked up my guitar and this time I sang Tupelo Honey. Our song. Eva listened quietly, getting lost in the song, and when I came to the chorus, \"She's as sweet as Tupelo Honey, She's an Angel in the first degree..\" she sang with me, out of tune, but to me it was such a beautiful sound. It was heaven in my mind.\n\nWe went to lay down afterwards and Eva slept while I was awake almost the whole night. The morning would the end of the very best part of my life. I took her to the nursing home in the afternoon and stayed as long as they let me, until evening.\n\nI went back every single day, usually with my guitar, even after she couldn't remember who I was, who Cammy was, who are children were. Over the next year we all became strangers to her.\n\nEva died on May 4, 2033 in her sleep, age 72. We buried her two days later back in our beloved Wayne, PA. I moved back a few months later to be near her, so I could visit her whenever I want. Sometimes Cammy comes with me, and my kids and grandkids come when they visit. It's a pretty spot near a big tree and one day I'll be buried next to her.\n\nFriends sometimes offer to set me up with a divorcee or a widow, nice women around my age. I go for the companionship, but I don't pursue anything more than the occasional dinner or movie. I'm not interested in sex with any of them or to live with anyone. I had my great romance and I'm just not interested in anyone else in that way.\n\nI travel and see my kids, I love seeing my grandchildren. Rachel is still a concert pianist who travels the world, but likes to stay home most of the year to be near Sam and Tony. Connor and Nancy moved to Washington state, where they teach at the U there. Oiliver is in grad school there for chemical engineering and Charles is in 5th grade and doing well. I go there once a year and they come East once as well each year.\n\nVince and Jamaal adopted a boy last year, a four year old named Gregory. I love him like I love all my grandchildren. And Maria and Max have two children, a girl (Laura) and a boy (Daniel), plus they adopted another girl, Lena,who's not quite one yet. They own the two auto shops and have a good life, as all my children do. They're all a testament to my wife, the amazing job we did together in raising them. When I see them or talk to them, I feel Eva with us. She'll always be with me. Through good times and bad.\n\nI love you, Angel. Always and forever, right? Like we always said. Even though neither of us believed in God, I somehow hope we'll be together again some day. I can dream, can't I? Love, your Bear.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nI hope you all enjoyed this long story. I enjoyed writing it, even though the ending is kind of sad. As always, I appreciate your votes and comments."
    ],
    "authorname": "Rabbitman55",
    "tags": [],
    "category": "Romance",
    "url": "https://www.literotica.com/s/eva-pt-20"
}