{
    "title": "The Agency Ch. 08",
    "pages": [
        "*Author's notes: This is a work of fiction, hopefully that is not a word you struggle with. It is a story of fictional, consenting adults who enjoy power exchange, lingerie, heels and the like. It's in the transgender/crossdressing category for a reason, if that scares you please back away slowly. For the rest of you, please enjoy!\n\n~~~~~~~~~~~~~~~~~~\n\nTuesday was almost as big a blur for Michelle as Monday had been. She was thankful she'd chosen an easily removable dress, as Ms. Allison called her into Her office no less than five times. With each entry to Ms. Allison's office, Michelle removed her dress, hanging it on the back door quickly followed by her servicing the dildo hanging above her dress, then awaiting instructions from her Boss. Each trip to the office was different, two involved normal conversation between Boss and employee, the second of which happened over lunch. Another trip into the office had Michelle squatting deeply to deep throat another dildo, while on another occasion Michelle willingly bent over the desk while begging to be fucked. On the final trip into the office, Michelle lovingly serviced Ms. Allison's strapon, relishing in the compliments of how she'd improved her blowjob abilities. While Michelle expected to be \"too tired\" to play at home, after all she'd worked a dildo down her throat no less than twelve times that day, a call from Babette quickly changed that.\n\n\"Hi sweetie!\" Michelle answered cheerfully.\n\n\"Hello there,\" Babette's voice was warm and inviting, \"what are you wearing?\"\n\n\"Nothing fun.\" Michelle responded.\n\n\"Well, I have pictures to share,\" Babette teased, \"but you may need to have something fun on to view them!\" \n\n\"Are they on the website yet?\" Michelle could feel her excitement building quickly.\n\n\"Nope!\" Babette giggled. \"I'm giving you a sneak peek, but you can't be under-dressed for this!\"\n\n\"Oh, you are quite full of yourself tonight, aren't you?\" Michelle quipped. \n\n\"Deservedly so,\" Babette chuckled louder, \"I did spend a couple hours with a horse tail butt plug up my ass to make these happen you know!\"\n\n\"What!?!\" Michelle almost dropped her phone in response. \"You didn't!\"\n\n\"There are more,\" Babette teased, \"call me back when you're ready to see them!\"\n\n\"Oh, that bitch!\" Michelle rolled her eyes as she looked at the now disconnected call. \"Fine, I'll play her game,\" Michelle grumped, \"but she won't see what I have on, all I need to do is tell her what I supposedly have on!\" Michelle's phone beeped. \"Fucking bitch!\" Michelle blurted upon seeing the text from Babette. \"Pics needed, no cheating!\"\n\nRushing off to her closet, Michelle quickly dug through to find something Babette would deem acceptable. Selecting a pair of black opaque thigh highs, with chiffon ruffles and white bows, Michelle stepped into her highest pair of black patent heels as well. She then pulled on a black teddy with white lace and ruffles which made it appear like a maid uniform. The teddy came with a ruffled choker and wristlets, which Michelle put on as well. Applying a dark red lipstick, Michelle placed her phone against her nightstand, propping it up so she could see most of herself on the screen. Everything but her shoes could be seen.\n\n\"This will take some creativity!\" She said to herself. Rushing to hit the button and get back into position, Michelle lifted her foot, kicking it behind her, to bring it into frame. Unhappy with that one, Michelle attempted three more before settling on a picture to send Babette. \"That should do it!\"\n\nA moment later Michelle's phone rang again. \"Nice ass!\" Babette gleefully exclaimed. \"Pull up your tablet and I'll send you the file!\"\n\n\"Okay, you got it!\" Michelle responded sitting on her dilapidated couch and pulling up her tablet. \"I'm ready.\"\n\n\"While it downloads, you'll have to tell me about work today!\"\n\n\"You know, the usual,\" Michelle giggled, \"fucking, sucking and in general being my Boss' plaything!\" \n\n\"Soooo, the typical work day then huh?\" Babette laughed loudly. \n\n\"Yeah, pretty much.\" Laughed Michelle. \"Okay, the file is open, where do I start?\"\n\n\"Just click on the first one,\" Babette gleefully said, \"and we can go from there.\" \n\n\"Well look at you!\" Michelle's legs squeezed together as she looked at Babette's picture. \"That's a cute outfit.\" They slowly looked through pictures together, as they went along pictures got more and more risqu\u00e9. \n\n\"Holy crap!\" Michelle blurted. \"There's my little pony!\"\n\n\"Ha, ha,\" Babette replied, \"very funny.\" \n\nBabette was covered head to toe in hot pink latex, with a strange looking pair of white knee-high boots made to look like hooves and a pink tail that almost reached the floor. The outfit was topped off with a white corset, arm binders and bridle. Michelle was scared but also incredibly turned on by the sight.\n\n\"Go to the next grouping!\" Babette instructed, obviously excited to share these with her friend.\n\n\"Holy shit!\" Michelle gasped. \"I mean, holy shit!\"\n\n\"I know, right?\"\n\nBabette was in a flesh toned latex catsuit, with one glaring difference to all the others. The catsuit came complete with a bright red sheath that covered her definitely erect cock and balls. The face had large cat-like eyes as well. A following picture showed Babette's erection tucked away.\n\n\"What was worse,\" Michelle teased, \"getting your cage off or having to put it back on?\"\n\n\"Definitely putting it back on!\" Babette replied. \"It definitely wasn't easy.\" \n\n\"Oh, and they don't stop there!\" Michelle felt herself getting even more excited as she started slowly scrolling through bondage pictures. \"Was the photographer a guy?\" \n\n\"It was.\" \n\n\"How long did he have you all tied up and helpless like that?\" \n\n\"Only until I ached!\" Babette chuckled a bit sheepishly as she answered.\n\n\"What did you do!?!\" Michelle demanded.\n\n\"I may have given the photographer,\" Babette paused momentarily, \"a bit of a tip when we were done!\"\n\n\"Wait, you gave him one?\" Michelle could barely contain herself, laughing through the rest of her thought. \"Or he gave you one?\"\n\n\"Keep scrolling slut!\" Babette replied.\n\n\"Ohhhhhh that's more than the tip he's giving you!\" Michelle clicked quickly, feeling her cage choking her cock. \"And he had a friend!?!\" Babette was moved through several positions, all while wearing cuffs and rarely in a position to defend herself and even more rarely without at least one cock inside her. \"Wow! I mean just wow!\"\n\nSetting the tablet aside, Michelle was now sitting in the most unladylike way, stroking her sore balls with one hand while scrolling back through the pictures with the other. Her hips were moving slowly in time with her hand, she was practically humping herself while watching her friend in action.\n\n\"Guess what?\" Babette teased. \"Those two will be your photographers as well!\" Michelle gulped at the thought realizing suddenly that her mouth was watering. \"Lunch tomorrow?\"\n\n\"Sounds good to me.\" Michelle replied.\n\n\"Don't forget to dress up for Brenda tomorrow,\" Babette teased further, \"and enjoy your dreams tonight!\"\n\n\"No kidding! Dick dreams!\" Michelle chuckled unable to take her eyes from the picture of Babette. \n\nA chill shot up Michelle's spine as she pictured herself in Babette's position. She was on her knees wearing elegant white lingerie with red accents, a satin bustier, wide lace top stockings and a long curly deep brown wig. Behind her a well build stud had one hand tightly gripping her hip while the other held her shoulder, his crotch pressed into her ass, obviously buried deep inside her. In front of her was another muscular stud, a sharp contrast to the build of Babette. One hand on the top of her head, fingers wrapped around the back holding her head in place, while his soon to be empty balls rested against her chin. Babette's throat bulged slightly to accommodate the shaft inside her.\n\n\"Dear God,\" Michelle huffed, \"I need to get fucked like this!\" \n\nHer face blanched at her words, but they were accurate. A couple months ago getting fucked meant something completely different in that apartment. In reality it was only life that had been fucking Michael, now Michelle wanted what Babette had, or to be summoned into Ms. Allison's office. Her body yearned to be slutty, ached for it. Her ability to say no was quickly diminishing. Michelle hustled to her bedroom, grabbing the two dildos along the way. She quickly found herself in her new favorite sexual position, pinned between two large dildos on her knees in the door frame, all the while imaging she was Babette between those two studs. Michelle remained there until her urge was sated enough for sleep. Stepping out of her heels, she simply climbed into bed still dressed as she'd been almost two hours ago.\n\nMichelle's alarm clock went off earlier the following morning, waking slowly, she felt a bit sore. \"That damned Babette,\" Michelle grumped while tugging the crotch of her teddy downward a bit, \"getting me all horny before bed.\" The slight headache was nothing compared to the two aches she felt as she sat up. \"I blame the two of you again!\" Michelle said looking at the two dildos still lewdly hanging from the door frame. \"Fuckers!\"\n\nChuckling, Michelle slid off her stockings and removed the teddy before plodding past the dildos and into the bathroom. Emerging a few minutes later in a pair of black yoga pants with sheer cut outs and a matching sports bra, Michelle set up her yoga mat in her small living area while her coffee brewed. While Michael had never enjoyed any kind of workout, Michelle had started to really love them. She could see the subtle changes in her body that a proper diet and active lifestyle brought about. Her butt was more shapely, her stomach flatter and toned, and her legs more shapely and defined. Michelle may not have been much to look at when she was a guy, but she was becoming a hot girl! The positive results pushed her to work harder as well. Michelle made her way back to the bathroom, carrying her morning coffee with her and delicately balancing it on the tiny vanity.\n\n\"I have to ask Babette when I can move in over lunch!\" She said to herself as she stepped into the shower.\n\nThe morning regimen had been a slight nuisance at first. Shaving, exfoliating, moisturizing, then the makeup had seemed to be just too much. Michael could stumble out of his apartment 30 minutes after waking up freshly showered with a full stomach, for Michelle it was more like an hour not including her workout. But, Michael was happy in thrift store jeans and a t-shirt he'd had since freshman year in college. Michelle stepped out of the shower, padding herself dry before rubbing cocoanut body butter over her skin. She loved the smell of it, and after all this time using it her skin was now incredibly soft. \n\n\"If yesterday was any indication,\" Michelle said to herself as she walked to her closet, \"I'm going to need to go with a dress and just deal with taking it off for Brenda this morning.\" \n\nMichele's eyes lit up as she looked through her closet. She immediately picked the perfect dress for the day, and knew exactly what lingerie to pair with it! Grabbing a dark gray satin and black lace ensemble with black stockings, Michelle started to get dressed. The dark gray satin panels were strategically placed in the middle of the high cut panties and bottoms of both bra cups, while lace adorned the rest. All three had small bows in the middle, the lace and bows looked elegantly feminine bringing a smile to Michelle's face. She added her favorite perfume, and adjusted her wig before putting on the belted black dress. For safety sake, Michelle placed a small pin in the somewhat plunging neckline of the dress. It would stay there at least for her commute as her cleavage was not passable under close inspection. The dress fit perfectly, moving just enough with her while remaining snug enough to show off her hard fought figure. Stepping into a pair of black sling back heels, Michelle made her way to the door knowing Fred would approve of her outfit this morning. \n\n\"Good morning.\" A rather dull female voice said from behind Michelle in the hallway.\n\n\"Good morning Cindy.\" Michelle's voice was far perkier than the sandy haired blonde from down the hall. \n\n\"You look nice this morning,\" Cindy's voice had a hint of envy as she was certainly not dressed to Michelle's level this morning, \"any word from your ex?\"\n\n\"Oh, Mike?\" Michelle smirked, \"Not since he moved to warmer climates no,\" Michelle relished in the fact that the woman who'd shunned Mike was now asking about him, \"although he did invite me down to visit.\" \n\n\"Where is he again?\" Cindy's envy grew exponentially.\n\n\"He bought an island owned by that guy,\" Michelle couldn't believe how catty she was being, but she couldn't help herself, \"the one that has his own airline. You know, big house on a small, private island.\"\n\n\"Oh,\" Cindy replied flatly, \"sounds nice.\"\n\nCindy was normally more cheery than she was acting, although not when Mike was around. She'd always treated him with disdain or simply ignored him. Michelle was rarely this heartless, but felt more justified considering Cindy wouldn't be giving Mike the time of day or asking about him if he hadn't \"won the lottery\". \n\n\"I may head down next month,\" Michelle continued as the elevator door opened, \"just to see what I can do about getting rid of my tan lines.\" Holding the door for Cindy, Michelle stepped into the small elevator remembering the time Cindy had elected to wait for the next one rather than ride with Mike. \"White sands and crystal clear blue water sound good right about now.\"\n\n\"I can imagine.\" As the elevator door opened, Cindy uttered, \"Shit, I'm in no mood for him.\"\n\n\"I've got you covered.\" Michelle said confidently stepping off the elevator walking directly toward Fred. \"Good morning Fred!\" Michelle felt a rush of power as she approached the building manager, who was only in the hallway to check her out on her way to work. \"I've got great news,\" Michelle didn't wait for him to respond and kept going, \"I'm moving out at the end of the month, please let the land lord know.\"\n\n\"What?\" Fred blurted.\n\n\"You heard me,\" Michelle adjusted her path slightly, taking Cindy by the arm and heading to the door, \"if they care to ask why so suddenly, tell them it's because some creepy asshole sits in the hallway every morning waiting to leer at us on our way out!\" \n\n\"Holy shit,\" Cindy's shock was evident in her voice, \"what did you ever see in that dolt Mike?\"\n\n\"If you must know,\" Michelle turned to stare Cindy in the eyes as she spoke, \"have you ever orgasmed so much or so hard your stomach muscles cramped?\" The way Cindy's jaw fell open the answer didn't need to be said. \"Yeah, and that was only part of it!\" Feeling an even greater rush, Michelle leaned forward lightly pressing her lips to Cindy's. \"Have a great day!\"\n\nMichelle never turned back to see if Cindy even moved from her spot. She wanted to relish the looks of shock from both her and Fred! On top of everything else, she'd have to talk to Babette about moving in soon. Michelle giggled at how easy leaving that place would be, everything that she hadn't gotten since starting at the Agency would go into the dumpster! That was mostly the furniture as it was, which would make moving incredibly easy. Before she knew it, Michelle was entering the Dr.'s office with coffee in hand a full 25 minutes before her appointment.\n\n\"Good morning!\" Brenda called out from behind the desk.\n\n\"Good morning to you!\" Michelle replied with a big smile.\n\n\"Someone is in a great mood this morning,\" Brenda said as she opened the office door allowing Michelle inside, \"what have you got going on?\"\n\n\"I don't even know where to start!\" Michelle tittered in response.\n\nWalking into the exam room, Michelle pulled up a seat on the table while Brenda sat on the stool. Over coffee Michelle told Brenda the details of her morning, as well as the back stories on both Cindy and Fred. Brenda intently listened, showing surprise and support for Michelle. It was odd how comfortable Michelle felt with Brenda, sharing these details seemed far too easy. The time seemed to fly past as the Dr. was soon heard entering the office.\n\n\"Oh shit, look at the time!\" Brenda was slightly panicked as she quickly stood. \"I need you to get into the robe quickly!\" Grabbing the robe from behind the door, Michelle stood remembering to first undo the small pin hiding her cleavage. \"Let me help you with that.\" Brenda stepped very close to Michelle, deftly undoing the belt in front of Michelle's dress. \"I was so enthralled in your morning I lost track of time!\" Looking up, their eyes met momentarily. \"No time for that!\" Brenda said pulling the belt free.\n\n\"Time for what?\" Michelle's head was spinning again. Was she flirting with her?\n\n\"Never mind,\" Brenda said as Michelle slid the dress off, \"for as much as you look like a girl you still think like a boy!\" Brenda leaned in close, her hand quickly sliding around Michelle's torso as she unclasped Michelle's bra. \"Hurry up, he's almost here.\"\n\n\"Sorry.\" Michelle replied letting the bra fall off her arms and quickly pulling on the robe.\n\nThe two of them felt like kids who'd just gotten caught doing something wrong by their parent. Thankfully the Dr. seemed oblivious to it, but Michelle couldn't stop thinking about Brenda's comment. What did she mean that Michelle though like a boy? She had to be flirting with Michelle! But what could she ever see in a cross dressing submissive that she didn't see in Babette? Michelle's head spun trying to understand it. Sitting with the robe bunched around her waist, Michelle finally came back to reality as the Dr. began the next round of saline injections. She could feel her skin stretch somewhat, not an uncomfortable amount, but still her small breasts were definitely getting larger.\n\n\"And I'll see you again on Friday.\" The Dr. said before getting up and walking out of the room.\n\n\"I'm sorry,\" Michelle said as Brenda approached with the cream, \"I just don't understand why or even if you're interested in me.\"\n\n\"You do realize I've been flirting with you since the beginning right?\" Brenda said making eye contact with Michelle, conveying her sincerity, \"Like really flirting with you.\"\n\n\"I just don't get why though,\" Michelle replied, \"I mean, look at me.\"\n\n\"Do you think I don't know?\"\n\n\"That's it,\" Brenda responded warmly, \"I do know, I just find you to be special.\" Michelle blushed deeply, it was the first true compliment she'd received from a woman. \"There's just something about you.\"\n\n\"My fashion sense?\" Michelle giggled in response.\n\n\"Oh you definitely have that going for you!\" Brenda replied. \"And your taste in lingerie is amazing!\" Michelle blushed at the compliment. \"I just find myself attracted to you,\" Brenda admitted, \"and while I can't put my finger on why, it's undeniable.\" \n\n\"I don't know what to say,\" Michelle felt tears welling in her eyes, \"other than thank you.\"\n\n\"Say you'll go to dinner with me tonight!\" Brenda exclaimed.\n\n\"Okay.\" Michelle responded quickly then immediately questioned it. \n\n\"Here's my number,\" Brenda said as she pulled a yellow post-it note from her scrub pocket, \"text me and we can figure out where and when.\"\n\n\"I will.\" Michelle replied looking at the phone number with awe. \n\n\"Put that away before the Dr. sees,\" Brenda whispered somewhat sharply, \"let the cream dry and then you can get dressed again.\"\n\n\"Okay, thanks.\" Michelle responded while wondering where to put the post-it. \"I'll text as soon as I get downstairs.\"\n\n\"I'll reply as soon as I can,\" Brenda responded as she walked to the exam room door, \"somewhere casual so you don't look better than me though, okay?\"\n\n\"Okay.\" Michelle replied feeling her face burning brightly. \"I have a date,\" she said to herself as she stepped into the hallway, \"with a girl!\" Michelle's tone was pure disbelief. \"As a girl!\" Now it turned to confusion. \"What the fuck am I getting myself into here?\" ",
        "Michelle descended the stairs to the office on pure autopilot. Mike had never been asked out by a woman, and could barely have gotten the attention of someone like Brenda on his own. Mike was a wingman at best, and a pretty shitty one at that! He was an introvert with little going for him. Michelle was the polar opposite of Mike, and it was apparently paying off for her! Walking into the office, Michelle barely had time to put her bag down before being paged to Ms. Allison's office. Quickly making her way down the hall, Michelle entered the office, dutifully removing her dress while servicing the dildo behind the door 10 times with her mouth.\n\n\"Multi-tasking I see!\" Allie called out from behind her desk. \"That's My girl!\"\n\n\"Thank you Ms. Allison,\" Michelle replied after letting the dildo slip from her lips, \"how are you this morning?\"\n\n\"I'm very well,\" Allie replied motioning for Michelle to sit, \"and how was your appointment today?\"\n\n\"It went well Ms.,\" Michelle was slightly uneasy in her chair as she spoke, \"the Dr. was pleased with the progress, but I have to tell you something odd that happened.\"\n\n\"Go ahead.\" \n\n\"The nurse, Brenda,\" Michelle's throat felt dry as she tried to get the words out, \"well, she kind of, I guess, asked me out to dinner tonight.\"\n\n\"Really?\" Allie was honestly surprised by this revelation.\n\n\"I hope that's not a problem Ms. Allison,\" Michelle hated the idea she'd have to text Brenda and tell her no, \"I was shocked when she asked and just said yes without thinking. Please tell me You're not mad at me.\"\n\n\"Oh not at all muffin,\" Allie smiled warmly at Her nearly panicked employee, \"tell Me exactly what she said.\"\n\nMichelle started by describing the seemingly less that subtle flirting Brenda had done, the coffee date suggestions up to this morning and her comment about not looking better than her somewhere casual. Allie nodded and smiled while wondering what Brenda could be up to with Michelle? She'd known of Brenda for years, but only met her a couple times. Of course, Allie had sent over 20 girls to the office since Brenda's arrival, and she'd barely paid any of them any attention. What was it about Michelle? She had to admit, Michelle was quite passable as a girl and looked the part. Maybe it was that, or her sweet demeanor? Allie would have to investigate this eventually.\n\n\"I want you to go on the date,\" Allie finally said after a moment of silence, \"it will be good for you.\"\n\n\"Really?\" Michelle couldn't try to hide her shock at the response.\n\n\"Yes baby,\" Allie's tone was warm and caring, \"you don't think My girls have friends that are girls outside of their jobs?\" Michelle shook her head, feeling silly now for asking. \"She obviously knows your limits when it comes to certain intimate moments,\" Allie continued, \"but I want you to have fun, you should enjoy being a girl to it's fullest extent.\"\n\n\"Thank you, Ms.\" Michelle happily replied. A look of panic quickly returned to Michelle's face, \"I don't know what I'm supposed to wear though. What counts as casual?\"\n\n\"Oh I'm sure I can help you with that,\" Allie smiled, \"while I think about your wardrobe why don't you come here and bend over the desk with your panties off.\" Immediately responding and reacting, Michelle's panties were off in a flash and delicately laid on the desk as she bent over, exposing her bare ass to the windows behind her. \"You have a pair of Capri pants don't you?\" Ms. Allison asked as She stood, revealing Her strapon.\n\n\"Yessss, Ms.,\" Michelle cooed at the sight of the thick phallus, \"they're a dark tan color.\"\n\n\"Very nice,\" Ms. Allison said as She let Her fingers glide over Michelle's body while making Her way behind Her submissive, \"those with those wedge sandals you bought a couple weeks ago.\"\n\nMichelle's body trembled as she felt the lubed head of the shaft rubbing against her opening. It took far less concentration at this point for Michelle to relax, she'd become so used to being penetrated, her body seemed to ache for it now. \n\n\"I know the one's Ms.,\" Michelle moaned slightly as the head slowly penetrated her body, \"the one's with the floral print and open toe.\"\n\n\"Yes sweetie, those,\" Ms. Allison looked proudly down at Her charge as She slid easily inside her ass, \"and that adorable bohemian top with the white crochet at the bottom.\"\n\nMichelle wanted to respond, instead she let out a long groan as the entire length of the shaft penetrated her body in one slow push. Typically, Ms. Allison gave Michelle time to adjust every few inches, but not this time. The feeling was odd yet still enjoyable making Michelle feel weak in the knees. She even felt her eyes flutter just before feeling Ms. Allison's hips pressing into her bare ass.\n\n\"Very nice sweetie,\" Ms. Allison said proudly, \"you took that amazingly well.\"\n\n\"Thank you, Ms.!\" Replied Michelle as she struggled to get her bearings about her. \"This one feels, um, bigger.\" \n\n\"Maybe just a bit,\" Ms. Allison pulled back slowly, easing the pressure inside Michelle's body, \"it's the biggest you've enjoyed to this point. What do you think?\"\n\n\"Ohhhhhh,\" Michelle groaned again as Ms. Allison pressed forward, using Her weight to hold the phallus in place, \"it's definitely rearranging organs to it will fit!\"\n\n\"But you don't hate it do you?\"\n\n\"Noooooo Ms.!\" Michelle exclaimed as Ms. Allison pulled halfway out. \"It's fucking amazing!\" \n\n\"Good girl,\" Ms. Allison praised before thrusting into Michelle, \"not everyone takes this one so well the first time.\"\n\n\"Thank you!\" Michelle grunted as Ms. Allison began to fuck her in earnest. \"Ohhhhhh fuck!\" she groaned loudly.\n\nAllie gripped Michelle's hips tightly, pulling Herself into Michelle's ass again and again. She hadn't been exaggerating when She'd praised Michelle, it was very rare that a girl took to this size cock the first time. Michelle was all but begging for more already. It was a very promising sign in Michelle's development.\n\n\"That's My slutty sissy,\" Ms. Allison exclaimed loudly, \"tell Me what you want!\"\n\n\"Oh please fuck me! Fuck me harder!\" Michelle blurted as her body trembled. \"You own me!\"\n\n\"Would you like to know a secret baby girl?\" Ms. Allison asked as She pulled Michelle up to an almost standing position without letting her escape the shaft. Seeing Michelle nod, Ms. Allison continued, \"This is a model of your first dates actual cock. He makes sure you're ready for clients.\"\n\n\"Ohhhh gawd!\" Michelle suddenly felt light headed as Ms. Allison thrust into her several more times, lifting her heels from the floor slightly.\n\nLowering Michelle's torso back to the desk, Allie carefully slid the shaft out of her body, leaving her hole gaping and sore. With Michelle's body slack against the desk, Allie retrieved a weighted plug, easily slipping it inside Michelle. Walking to the bathroom, Allie removed the harness, depositing it in the sink, before returning with a glass of water for Michelle. Setting the glass on the desk near Michelle's face, Allie sat at Her desk watching Her sissy slowly recover.\n\n\"Thank you, Ms.\" Michelle said before taking a sip of water. \"Is he really that big?\"\n\n\"Yes he is sweetie,\" Allie smirked before continuing, \"but you're more than able to accommodate his size already.\" She paused momentarily as Michelle took another sip. \"The biggest difference,\" She said turning back to Her computer, \"is when he's done you'll have an ass full of his cum to enjoy too!\"\n\nNot surprisingly Michelle visibly shuddered at the thought. The feeling of a spasming cock was the one thing Allie could not prepare her for prior to her practice date. By that point though, Michelle would have progressed far enough in her training that she would not hesitate when presented a cock. She was already at the point that her mouth watered at the sight of a dildo, and was probably also feeling a twinge of want in her ass at the sight too. Having an employee freeze or worse yet, balk on a date was disastrous for everyone, as a result Allie took careful and calculated steps to ensure it never happened. For what Her clients were paying, Allie's girls had to be classy and smart when out and wanton sluts in private. Michelle was well on her way to fulfill those requirements.\n\n\"That would feel amazing.\" Michelle replied as she slowly raised herself from the desk. \"May I go clean up Ms.?\"\n\n\"Go right ahead.\" Allie replied feeling quite proud of Her newest girl.\n\nStanding up in her 4\" slingback heels took a bit of extra focus, still, Michelle managed to make her way to the bathroom. Michelle cleaned herself, then cleaned the toys Ms. Allison had left in the sink. Holding the dildo in her hand, Michelle found it hard to believe something that big had slid so easily inside her! She couldn't imagine what the man who had this stuffed into his pants could look like, but he obviously got a workout any time he needed to relieve himself!\n\n\"I could use two of these instead of pink dumbbells' in the morning!\" Michelle giggled while feigning a curl motion. \"Oh I am quite a sight,\" she said catching a glimpse of herself in the mirror, \"thank goodness the essentials are always well stocked in here!\"\n\nMichelle's hair was slightly matted to her forehead, her lipstick was a bit smeared, and her eyes needed a touch up. All of which she could easily do without having to leave the bathroom. She had to admire herself a bit in the mirror as well, particularly the full length mirror on the door which was to her side. As she leaned forward, seemingly to touch up her mascara, Michelle arched her back and pulled back her shoulders before looking at the full length mirror. Standing like that, her cage hidden by her thigh, Michelle saw the reflection of a hot girl looking back at her and smiled proudly.\n\n\"Okay, back to work.\" She said shaking her head and refocusing on cleaning up. Michelle reentered the office to find Ms. Allison sitting on the side of Her desk, waving Michelle to her usual chair. \"Where would you like these Ms.?\"\n\n\"You can put the harness in the top drawer of the cabinet there,\" Allie smiled warmly as She spoke, \"the dildo you can hold onto for now.\" Watching as Michelle complied, Allie continued, \"Before you sit you can put those sexy panties back on as well.\"\n\n\"Yes, Ms.!\" Michelle replied.\n\nPlacing the harness back into the cabinet, Michelle then retrieved her panties, using the table to brace herself as she stepped back into them. She was then left with the conundrum of what to do with the large phallus. Sitting in the chair, Michelle wasn't sure whether to hold it in her hand, or leave it lying on one of her legs. She didn't want to rest the bottom on one leg and hold it in her hand as it would look like she were fondling it rather than being respectful to her Boss. Finally, Michelle placed it across her leg and held it in place with one hand. \n\n\"How does your pussy feel sweetie?\"\n\n\"A bit sore and tingly Ms.,\" Michelle blushed deeply at the question, \"thank you.\"\n\n\"It's obvious you've taken your training to heart,\" Ms. Allison's voice conveyed Her pride in Michelle, \"which obviously made this easier today.\" Michelle lowered her head, unsure of how to react to the compliment. \"I would honestly say you are ahead of most of the girls I've hired to this point,\" Allie was truly proud of how well Michelle had taken to her role, \"there's still a way to go, but, it's very positive.\" Allie smiled further as she noticed Michelle's fingers moving slowly over her new toy, nothing overtly sexual, but a slow loving touch. \"Later tonight I will email you the outfit I want you to have on tomorrow.\"\n\n\"Yes, Ms.\" Michelle replied wondering why Ms. Allison would be directing specifically what she had on the following day.\n\n\"You can head back out to your desk now,\" Allie said returning to Her computer screen, \"from what I understand you're going to lunch with Babette today?\"\n\n\"Yes, Ms. Allison,\" Michelle replied as she got to her feet, \"I hope that is okay.\"\n\n\"Very much so,\" Allie's smile was warm, \"it was My hope the two of you would hit it off, it's easier when you have a mentor to help you through this process.\"\n\n\"She's been great Ms. Allison,\" Michelle replied genuinely, \"I would be lost without her.\"\n\n\"Just keep in mind how she is with you when it's your turn to mentor your replacement.\"\n\n\"Yes, Ms.!\" Michelle was excited at the idea of helping a new person become like her.\n\nWorshiping the dildo hanging from the door with her mouth, Michelle then put her dress back on to return to her desk. As she walked down the short hallway, Michelle tried to figure out how to hide such a large phallus. She had a good size bag with her, but, it was across the entry way to the office.\n\n\"It sounded like someone met Little Mikey today!\" Babette called out from one of the guest chairs.\n\n\"Little Mikey?\" Michelle asked quickly moving her hands behind her back.\n\n\"Yes sweetie!\" Babette teased, \"You don't think I was on the receiving end of Little Mikey when I was in your position?\" Michelle shook her head answering no. \"He's quite a beast,\" Babette said as she approached her friend, \"but Big Mikey is even better.\"\n\n\"Big Mikey?\"\n\n\"The guy who sports the beast you've got hidden behind your back,\" Babette replied, \"he's the sweetest man you'll ever meet, but you will not feel like one in his presence!\"\n\nMichelle chuckled to herself, she was wearing lingerie, perfume, makeup, heels, and a dress. How could she possibly feel like a man at this point? Her body was shaved and moisturized, her eyebrows shaped, she was getting breast injections. There was no way to feel manly. Even as Mike she barely felt \"manly\".\n\n\"Um, have you looked at me?\" Michelle practically jeered, \"How could I feel manly when this is how I look every day?\"\n\n\"Oh it's possible to feel less manly!\" Babette replied. \"He's built like a god, and I'm not just talking about his cock!\" \n\n\"Wow!\" Michelle replied unconsciously squeezing the phallus behind her back. \"Like action movie star built?\"\n\n\"Yes! Exactly!\" Babette slid forward, touching her chest to Michelle's before continuing, \"But don't worry, he's so gentle you won't want him to ever stop!\" \n\nBoth girls felt a rush up their spines at the thoughts. Babette, remembering her night with Big Mikey, and Michelle imagining it. Michelle realized she was clutching the dildo now with both hands.\n\n\"Okay, let me hide this thing and we can go to lunch,\" Michelle said stepping away from her friend, \"I have so much to tell you!\"\n\n\"Feel free to start now!\"\n\n\"Well, I have a question first,\" Michelle said returning with just her pink wallet, \"when do you close on your new place?\"\n\nOn the way out of the building Michelle told Babette the story of her morning and telling Fred she was going to move out. Babette was not only thrilled Michelle was moving out of \"that dump\" but seemed very excited about her moving in. While Babette would still be in the apartment another month or more, her professional life was getting busier and she had more than a couple trips away planned already. \n\n\"So should I pay rent? Kick in towards rent and utilities? How do you want to work this?\" Michelle asked as they walked down the street.\n\n\"Oh don't worry your pretty little head about that,\" Babette replied taking Michelle's arm in hers, \"we can work something out!\"\n\n\"That sounds rather ominous!\" Michelle giggled. \n\n\"Rent is all set for the next two months,\" Babette replied, \"most of the utilities are already included in the rent, and I'm not worried about food. Buy what you like!\"\n\n\"Okay then.\" Michelle felt reassured and excited about her new living arrangement.\n\nTurning into the restaurant, they only had to wait a minute for their booth to be ready. With their drinks ordered, sweet tea for Michelle, cosmopolitan for Babette, Michelle decided to go to the next topic.\n\n\"So what is the deal with you and nurse Brenda?\" Michelle asked after a long sip of her sweet tea. \"I get the feeling she's not a fan of yours.\"\n\n\"Probably not.\" Babette replied looking somewhat ashamed. \"Okay, so before I became the gorgeous piece of ass you see before you,\" Babette said with a smile, \"I worked on Wall Street.\" \n\nBabette explained that she'd been a stock broker, and a very successful one at that, but gotten caught up in the market and over extended herself before things went south. Way south. Almost overnight Babette had lost everything, then she'd applied for a job at The Agency. Adjusting from being a big fish in a cut throat business to being a sweet, submissive girl wasn't exactly easy for her. In spite of the fact Babette was coming in for breast augmentation, she saw Breda as her former self would have viewed her, and it had gone horribly wrong. \n\n\"Well, you're going to be shocked to know this,\" Michelle said, wishing she was having a cosmo too, \"but I'm going to dinner with her tonight.\"\n\n\"You're fucking kidding me!\" Babette hissed. \"How in the world did you pull that off?\"\n\n\"Honestly, I didn't do a thing!\" Michelle replied earnestly. \"She's been hitting on me from the beginning!\"\n\n\"What did Ms. A say?\"\n\n\"She helped me figure out what to wear,\" Michelle replied, \"and told me to have fun!\"\n\n\"Well then, I hope you have fun too!\" Babette replied, reaching across the table and squeezing Michelle's hand. \"I mean that you know,\" she continued, \"but how would that ever work out?\"\n\n\"I don't even know!\n\n\"I hope your oral game is on point!\" Babette chuckled.\n\n\"I've been working on it several times a day to the point my throat is sore.\" Michelle quipped.\n\n\"I don't think she has one of those silly,\" Babette chuckled a bit more, \"I was talking the internal plumbing kind of oral skills.\"\n\n\"Oh, OH!\" Michelle replied. \"Well I doubt that would be a first date thing with her.\"\n\n\"If she was the one that suggested it,\" Babette smiled, leaning forward and squeezing Michelle's hand again, \"then there will be more than one! Just don't be a jerk.\"\n\n\"That's pretty easy for me.\" Michelle giggled in response.\n\nLunch with Babette was relaxing and enjoyable, her soon to be roommate offered to create space for Michelle to bring her clothes and other essentials. Babette suggested burning the furniture in Michelle's apartment, and possibly the entire building, but Michelle said she'd simply donate it somewhere. Back in the office, the remainder of Michelle's work day flew by. While she somewhat wanted to be called back into the office again, she was thankful not to be bent over the desk just yet. Tomorrow though was another story.\n\nTaking the train home, there was no sign of Fred upon Michelle's return. She was rather proud of herself, finally managing to overcome the incredible distraction of having a plugged ass on the subway. No doubt, she was still bordering on mind numbingly horny, but over her time working at The Agency she'd learned to live with it.\n\n\"Okay, where are those Capri pants?\" Michelle asked herself as she walked through her apartment door and stepped out of her heels. \"No wonder so many women on the train wear sneakers!\" She said walking in her stocking feet to her bedroom.\n\nSoon the dress was lying on the bed, quickly followed by the stockings and garter belt. Digging through the closet, Michelle found the Capri pants folded neatly on the shelf. She quickly stepped into them, pulling them into place as she walked to the bathroom.\n\n\"The things I do to look good,\" she grumped while stepping onto the side of her tub to try to see her reflection in the mirror, \"oh that just won't do!\"\n\nThe flat front of the Capri pants left little to the imagination when it came to Michelle's cage. Carefully stepping down from her perch, Michelle walked back to her bedroom while undoing her pants. Removing those, and the sexy bikinis she'd had on all day, Michelle retrieved a more sliming undergarment.\n\n\"It's not much to look at,\" Michelle said as she pulled up the nude, floral embossed bottoms, \"but they'll keep you hidden!\" With the bottoms almost in place, Michelle tucked her cage and balls inside before pulling them up. \"Ohhh those are gonna hurt later,\" Michelle said with a deep exhale, \"fuck, I should have taken that damn plug out first! Power thong is right!\"",
        "Slipping back into the navy blue Capri pants, Michelle ran her hand down the front, feeling nothing noticeable. She removed the bra, putting on a nude demi bra, before selecting a white ruffled bohemian style top with crochet flowers making up the bottom 5 or so inches. The top ended just above Michelle's hips, which would also help to hide any kind of bulge. Michelle lightened her makeup, preferring a coral lip gloss against the darker color she'd had on at work and even managed to pull her hair back without an issue the first time. She was quite proud of her quick transformation as she stepped into the open toe wedge sandals that had small yellow flowers over a navy blue background. As she walked to the bedroom door, Michelle grabbed a few delicate silver bracelets and a pink Swarovski crystal heart pendant. As if it were perfectly timed, Michelle exited her place just as her phone beeped.\n\n\"Oh that's a cute place!\" Michelle said locking her door and reading the text.\n\nThe trip to the bistro went incredibly quick for Michelle, in part because she spent all of it texting Brenda. She'd even decided to splurge on a cab rather than brave the subway in an open toe heel. Arriving at the place, Michelle opted to wait outside as Brenda was only a minute away. With her being so preoccupied on her phone and excited about her date, Michelle was oblivious to the occasional stare or look of passing men. In truth, the looks probably would have made her feel more self-conscious and wonder whether her power thong was doing its job in the front. In reality, it wasn't the front most of them were focusing on!\n\n\"Oh you look adorable!\" Brenda said before giving Michelle a warm hug.\n\n\"I honestly had no idea what to wear,\" Michelle said with a deep exhale of relief, \"so I asked for help.\"\n\n\"I would have gladly helped!\" Brenda replied before opening the door to let Michelle in.\n\n\"I'll text you next time,\" Michelle replied, then just realizing how different the hug felt with her slowly blossoming breasts, \"I promise!\"\n\nInside they were led to a tall pub table near the corner. Sitting took a bit of adjustment for Michelle, but she eventually managed to find a comfortable way to place her body on the stool. The power thong was not only holding her cage and balls snugly out of view, it was also a source of constant pressure on the plug. Sitting required Michelle to find a way not to crush certain parts while not adding pressure to others. Eventually, she was lost in conversation learning all she could about Brenda. Michelle focused more on sharing her pre-Michelle life, which didn't take up that much of the conversation. Three large sangrias each and a meal with a shared dessert later, neither could suppress their yawns much longer.\n\n\"I can't believe we've been here this long,\" Brenda smiled warmly at Michelle, \"I think our waiter hates us.\"\n\n\"We'll give him a good tip and it will be fine.\" Michelle replied finding herself easily lost in Michelle's eyes. \n\n\"That's a plan,\" Brenda answered sliding off her chair, \"do you need to use the ladies room?\"\n\n\"Um, yes,\" Michelle responded all of a sudden feeling very anxious again, \"are you okay with me going in there with you?\"\n\n\"Of course!\" Brenda responded, then placed her hand on Michelle's thigh giving it a squeeze. \"Plus, those two guys at the bar have been checking you out for a while,\" she continued while moving her eyes toward the bar and back several times, \"I think if I leave you alone you're going to get hit on!\"\n\n\"Oh Christ.\" Michelle hissed. \"I'm not ready for that!\"\n\n\"Don't worry,\" Brenda said reassuringly, \"just hold my hand tight and we'll walk right past them!\"\n\n\"Okay.\" \n\nMichelle felt her insides twisting as she got to her feet. There was something helpful about holding Brenda's hand though. Her confidence seemed to flow into Michelle as they walked toward the rest rooms. Of course, they had to pass the bar to get there, but Michelle was feeling empowered as they approached the men. Looking up, she saw a rather handsome looking man who made eye contact with her. When he smiled, Michelle couldn't help herself, she not only smiled back but winked at him immediately regretting both decisions.\n\n\"Ohhhhh shit, shit, shit, shit, shit!\" Michelle hissed as they entered the bathroom.\n\n\"What's wrong?\"\n\n\"You would think after all the times women failed to acknowledge my existence I'd be good at it!\" Michelle braced herself on the vanity feeling sick to her stomach.\n\n\"Oh boy,\" Brenda replied placing her hand on Michelle's back, \"what did you do sweetie?\"\n\n\"The second guy smiled at me,\" Michelle took several deep breaths before continuing, \"so I smiled back.\"\n\n\"That's not bad.\" Brenda replied.\n\n\"Yeah, then I winked at him.\"\n\n\"Well it's not like that binds you to producing his first born.\" Brenda giggled while still rubbing Michelle's back. \"But it's probably best you're in here rather than standing at a urinal next door.\"\n\n\"He'd probably pee on my shoes!\" Michelle replied feeling slightly better.\n\n\"You really wouldn't want that in those!\" Brenda replied.\n\n\"Thank you for that,\" Michelle turned to face Brenda, \"I'm still very new to all of this.\"\n\n\"It's okay,\" Brenda gave Michelle a tight hug, \"but honestly, I have a question.\"\n\n\"Go ahead.\"\n\n\"What is the deal with you?\" Brenda stepped back but took both of Michelle's hands in hers. \"I mean I all but throw myself at you to get your attention and you almost blow me off,\" she paused for a moment then continued, \"then you wink at a guy, are you gay?\"\n\n\"I think that's far more of a conversation than we can have in a ladies room.\" Michelle replied, although she wasn't sure she knew if the answer was that black and white.\n\n\"You have a point, and I'm about to burst.\"\n\n\"Me too!\" \n\nQuickly letting each other's hands go, they each headed to a stall. Michelle silently cursed the crocheted flowers which now seemed to be capturing her fingers as she tried to undo her pants. Brenda had worn a cute sundress, why hadn't she? With everything finally out of the way, Michelle sat and tried to relax.\n\n\"You okay over there?\" Brenda giggled as she asked.\n\n\"Um, no,\" Michelle giggled too, \"I'm trying to pretend you're not right there listening to me pee!\"\n\n\"Same goes for me!\" Brenda giggled louder.\n\n\"There's a lot of constriction on my end I have to deal with too you know.\" Michelle laughed.\n\nThe two sat in separate toilet stalls both bursting into laughing fits. When they finally stopped laughing, they both had relaxed enough to start relieving themselves which only caused them to start laughing again. Finally emerging from their separate toilets, both had to wipe tears from their eyes from laughing so much.\n\n\"Oh that was a new experience!\" Brenda said as she leaned forward to check her mascara.\n\n\"Stick with me,\" Michelle giggled imitating Brenda's actions, \"there will surely be plenty more!\" Out of the corner of her eye Michelle watched Brenda step back and look at her butt, she then sheepishly looked away and at Michelle who'd obviously caught her. \"Were you just checking out my ass?\"\n\n\"No! Well, maybe. Okay, yes.\" Brenda crossed her arms defiantly then overtly looked at Michelle's ass again. \"It's such a cute ass!\"\n\n\"Well thank you,\" Michelle replied turning her bottom to face Brenda, \"I've been doing more squats than anyone can count trying to get some shape to it!\"\n\n\"I think it looks great,\" Brenda replied, \"and I'm sure the guy you winked at and his buddy checked it out thoroughly as you walked past them!\"\n\n\"Oh them,\" Michelle groused, \"what do I do about them?\"\n\n\"This time just follow me,\" Brenda said taking Michelle's hand again, but this time interlocking her fingers with Michelle's, \"and don't make eye contact.\" \n\nBefore Michelle could answer, Brenda ushered them through the restroom door. It was all for nothing as they guys at the bar were already gone. Still holding hands, they walked to the table, where Michelle happily picked up the check. The total would have given Michael a panic attack, instead, Michelle grabbed the cash out of her wallet with one hand not wanting to let Brenda go just yet. Simply rounding up, Michelle was fairly positive the waiter would be pleased with close to a 30% gratuity.\n\n\"All set!\" Michelle said as she started to lead Brenda out of the restaurant.\n\n\"Well thank you for dinner,\" Brenda's voice expressed her confusion, \"but I invited you out so I should have paid. Or at least helped.\"\n\n\"You can pay next time.\" Michelle replied as they walked through the door to the cool night air. \"Which way are you going?\"\n\n\"East.\" Brenda replied.\n\n\"Great! Let's share a cab!\" Michelle answered knowing full well she was heading in the opposite direction.\n\nWaving down a cab, Michelle held the door as Brenda slid in, taking note of how Brenda got into the car while wearing a mid-thigh dress. Following her into the cab, Michelle sat close, putting her hand on Brenda's bare knee as he asked where they were going. Brenda gave the address, placing her hand on top of Michelle's. Maybe it was all the sangria, maybe it was the shared laughing fit in the restroom, or maybe they just hit if off. As calm as Michelle looked, it was completely different in her mind, her heart was racing so fast she could almost hear it!\n\n\"Give me just one moment if you could.\" Michelle said as the taxi driver pulled up to the curb.\n\n\"It's your meter.\" The cabbie replied as Michelle slid out of the cab.\n\n\"Is that your door?\" Michelle asked feeling her stomach flipping anxiously again. \n\n\"Yes.\" Brenda's voice warbled slightly as she responded.\n\n\"I had a great night,\" Michelle said facing her date, taking both hands in hers, \"I can't thank you enough for everything.\" \n\n\"I did too.\" Brenda responded. \"Do you think we could have breakfast together Friday morning at the coffee shop rather than the Dr.'s office?\"\n\n\"I'd really like that.\" Michelle responded.\n\nIt took every ounce of nerve Michelle could muster. As Michael she'd read every situation with the opposite sex completely wrong, and flat out missed when he'd gone in to kiss a date goodnight. As he went to kiss one, she turned and walked into her building, locking the door behind her. The only thing keeping Michelle from having some kind of accident was the tight fitting bottoms and plug, which until that moment she'd almost forgotten about. Much to her amazement, Brenda leaned forward too. Their lips met briefly, but the kiss transported Michelle to another planet. Brenda's lips were so soft against hers.\n\n\"Thank you for a great night.\" Michelle whispered.\n\n\"Thank you Michelle,\" Brenda replied, \"sweet dreams.\"\n\nMichelle almost felt tears welling in her eyes, \"Thank you.\" She couldn't think of a time anyone aside from her mother had ever said that to her.\n\nWith that, Brenda disappeared into the building, letting the door slowly close behind her as she slowly ascended the stairs. Michelle couldn't help but watch that was until the cabbie honked his horn. Snapped from her trance, Michelle still floated on air into the back seat, giving the cabbie the address.\n\n\"You know that's in the opposite direction of where I picked you up right?\"\n\n\"After seeing her, can you blame me?\" Michelle quipped.\n\n\"You have a point.\" The cabbie replied as he made a daring U-turn across three lanes of traffic. \n\nIt was all Michelle could do to sit still in the cab. Everything was bugging her, on top of that, she couldn't help but continue to think about her kiss with Brenda. Sure, her kisses with Babette had been far more intense, but there was something special about this kiss. When the cab pulled up in front of the building, Michelle glanced at the total, handing the driver the first bill in her purse that would cover it.\n\n\"Keep the change!\" Michelle said as she quickly exited the cab.\n\nBehind her the driver started to ask if she was sure, then simply said thanks before speeding off. Even before Michelle was on her floor she was already undoing the top of her Capri pants. As she opened her apartment door, she undid the fly, letting them fall free as she turned to lock it. If only that had offered relief! Quickly, yet cautiously, removing her top, Michelle tossed it aside before slipping her fingers into the waistband of the power thong. It peeled off her like a second skin, finally releasing her package which had spent hours crushed inside.\n\n\"Oh that's divine!\" Michelle then did the most unladylike thing, spreading her legs and squatting to air out her suffocated boy parts. \"Next time wear a fucking skirt!\" She hissed. Looking to her small table, Michelle spied Little Mikey lying there. \"Horny slut!\" She chastised herself.\n\nWalking with a purpose across the small apartment, Michelle picked up a bottle of lube with one hand while removing the weighted plug from her ass with another. Dropping the plug into the sink, Michelle poured a liberal amount of lube onto the shaft, before picking it up and stroking it with both hands.\n\n\"So fucking horny,\" Michelle grunted to herself as a line of precum hung from her cage to the floor between her heels, \"what are the chances Brenda has a cock?\"\n\nSlamming the suction cup base against the chair, Michelle mounted the chair backward grabbing the back with one hand as she lowered herself. Little Mikey found Michelle's ass, guided by her other hand, sliding into her snug canal easily. \n\n\"Ohhhhhhhhhhh fuuuuccckkkk!\" Michelle groaned loudly as she impaled herself on the fat shaft. \"Fucking fat BEAST!\" She grunted as she took the entire phallus inside her. \"Make me your fucking bitch!\"\n\nMichelle wildly rode the fat cock filling her ass, not caring how loud she was or how much the chair slammed and slid across the floor. In the reflection of the window, she could see the outline of herself, her hair flying wildly as her body violently bounced up and down. Not sure what spurred it on, Michelle released the chair back with her right hand before smacking her ass with it, leaving a stinging red mark behind.\n\n\"OHhhhhHHH GAWWWDD!\" She cried, as she surprised herself with the intensity of her spank. \"Another one of those and I'm going to lose my shit!\"\n\nLooking out the window, the reflection still pounding away on the chair, Michelle wondered how many prying eyes could see her defile herself in her darkened apartment. Surely, if there were any, they were stroking themselves to the vision of Michelle riding her new toy! A couple more firm spanks and Michelle's ass was burning red.\n\n\"OH FUCK!\" Michelle's body shuddered, she raised her feet off the floor, forcing herself onto the shaft with the entire weight of her body. \"FUUUUCCCCKKKK!\"\n\nCum dribbled from Michelle's caged and aching cock coating the seat in a white pool as Michelle collapsed forward. Her false breasts resting against the chair back, Michelle struggled to catch her breath. As sore as her ass was from her latest round with Little Mikey, Michelle needed a few minutes before she could move. Eventually, she was able to find her legs and slowly stand, letting out a long groan as she came free from her phallic tormentor. Quickly grabbing the weighted plug from the sink, Michelle staggered to the bathroom. Instead of being capable of getting ready for bed, Michelle simply stepped out of her heels, left the plug in the bathroom sink, shucked off her bra and breasts letting them fall on the floor, and tossed her wig aside collapsing on the bed with only her cage on."
    ],
    "authorname": "Ms_Allison",
    "tags": [
        "men in heels",
        "men in lingerie",
        "femdom",
        "sissy slut",
        "strapon play",
        "forced fem",
        "forced feminization",
        "anal training",
        "cross dresser",
        "cross dressing"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-agency-ch-08"
}