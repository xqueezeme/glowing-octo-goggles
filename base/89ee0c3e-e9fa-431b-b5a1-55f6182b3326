{
    "title": "Pleasure Island",
    "pages": [
        "This is a sort of literary experiment. All I ask is that you keep an open mind. It's fairly short, so you don't have to keep it open for that long.\n\n\"Aye,\" said he, \"she was a snapping piece. The wife of the late guv'nor, it turned out. A high-bred woman.\"\n\n\"High-bred?\" said I. I poured him another tot of rum from the bottle. \"And you the captain of a pirate ship?\"\n\n\"In those days, aye.\"\n\nThat part, at least, was not hard to believe. He was a man of fifty or more years, his beard grizzled, his clothing twenty years out of fashion, his eye dulled by age and drink but still with that glint of command. We had been sitting in the Duck's Head Inn, Squire Connor, the solicitor Batterton, and myself, waiting for a fourth player to walk through the heavy oaken door. One glance at this man us that he was probably not the gentleman that we required, but we politely inquired whether he was interested in joining us.\n\n\"Ye'll not likely be gettin' many for a game like that, gents,\" he said with a croak of a laugh. \"Ye be new to the Duck, I'll wager.\"\n\n\"We are in town for a meeting with the Board of Trade,\" Connor said.\n\n\"Aye,\" said he with a nod. \"This be largely a seafarers' house, ye see? Per'aps a little rougher around the edges than you gents are accustomed to. We tend to play more dice than cards. One of the ladies will likely give you a game, though.\"\n\nHis use of the term \"ladies\" had us looking from one to the other. None of our usual haunts allowed \"ladies\" who came independent of gentlemen. Yet, as is oft the case with men, we were all of us loath to admit that perhaps we had stumbled into the wrong establishment. \n\n\"Take a chair, sir,\" Batterton offered. \"Let us offer you a drink.\"\n\n\"Would ye be havin' a tale, then?\" he asked.\n\n\"A tale?\" Connor asked.\n\n\"Aye. A story of the sea. From me days as captain of a pirate boat in the Carib sea.\"\n\nHe pulled a watch from the pocket of his coat and carefully laid it on the table.\n\n\"It's exquisite,\" Connor said, picking it up. \"Quite pure, if I'm not mistaken.\"\n\n\"The gold? Aye. More pure than what ye'll find on the inside, I wager, though not half so exquisite.\"\n\nConnor had passed the watch to me for my inspection, and I took our guest's remark as an invitation to open the watch. I nearly dropped it on the floor.\n\nThe old man chuckled.\n\n\"What is it, Doctor?\" Batterton asked me.\n\nI was reluctant to hand it over to him. Inside the watch was a pen-and-ink drawing of an absolutely ravishing woman. She was naked, with long, flowing hair, an exceptionally fine bosom, and a mons pubis completely free of hair.\n\n\"It is indeed exquisite,\" I finally agreed in a choked voice. Batterton and Connor reacted no less strongly.\n\n\"We found her a-floatin' in the wreckage of a British frigate,\" he said after his brief introduction of her which I have quoted at the beginning of my story. \"She'd come to grief on the Wallbern Shoals, which any mariner ought to have known about. Takin' the new Guv'nor to Grenada.\"\n\nHe nodded toward the watch, which Connor had returned to the table without closing its cover.\n\n\"She was the only one what had the sense to tie herself to a piece of wood. Still, she was a sorry little waterlogged rat when we first seen her.\"\n\n\"She must have been relieved to see you,\" Batterton said.\n\n\"Aye, to a point. Until she learned she was on a pirate ship. And that her presence there made her subject to our agreement.\"\n\n\"Agreement?\" I asked.\n\n\"Between me and the crew. On dividing the spoils.\"\n\n\"But surely you can't have meant that to include a woman of character and birth!\" Connor protested.\n\n\"It be the law of the sea, mate,\" the pirate said, fixing his eye on Connor. \"A different law than you gents have here, to be sure.\"\n\n\"So you allowed the crew of the ship to . . . \"\n\nConnor found himself unable to finish the sentence.\n\nThe pirate chuckled again.\n\n\"Nay. She was too fine a pearl to let that lot have her. I bought her meself.\"\n\n\"You bought her?\" Batterton asked.\n\n\"Aye. Bought their shares of her out, I did. And a damned poor bargain it seemed at first. She was a wildcat, gents, and no mistake. Spat at me, tried to claw me eyes. I had to lash her in a hammock each night to prevent her from killin' me with me own sword.\"\n\nHe shook his head and poured himself another drink.\n\n\"As I can well imagine she would,\" Connor said with his typical fastidiousness.\n\n\"Per'aps so,\" the man said with a shrug. \"Still, she came around.\"\n\n\"Oh?\" Batterton asked with as much ease as he could muster.\n\n\"Aye,\" the man said. \"Well, ye be knowing women.\"\n\nNot our lawyer friend. The poor man had loved only two women and them from afar. He had never approached either one to my certain knowledge, and was about to pass into his fourth decade with his life unsullied by romance. I decided to save Batterton from having to make further inquiry.\n\n\"Come, man,\" I said. \"You can hardly expect us to settle for a tale that incomplete in exchange for your rum.\"\n\nHe smiled.\n\n\"'Tis a fair point, lad. One day we be out mendin' sail. I gave her the freedom of the cabin on those days, after removin' all the weapons, o' course.\n\n\"The lookout spots a ship, far away, ye see, so I returns to fetch me glass. From the cabin. And what do I find in there but her ladyship, her skirts raised to her hips, her bloomers dropped to her knees, a-workin' her hand in and out o' her cunny.\"\n\n\"A woman?\"\n\nBatterton was shocked. Connor and I traded looks. The pirate simply chuckled again.\n\n\"Do ye believe, laddie, that only men have the fever?\" \n\n\"Of course.\"\n\nBatterton apparently was quite willing to expose his ignorance.\n\n\"Ye'll just have to take my word for it then, son,\" the man said before continuing.\n\n\"She be workin' herself into a right state, you see, and she don't notice me at first. So I walks toward her like, just watchin.' And I get to no further away than I am from you gents, and suddenly she opens her eyes and sees me and lets out this little shriek. Not a scream, mind you, just this little 'oh!'\n\n\"'Afternoon, yer Ladyship,' I say. \"Don't let me keep ye from your needs.\"\n\n\"'I need it, so badly,' she says. Her voice like a whisper.\"\n\n\"By now, I was standing right in front of her. She takes her one free hand and starts rubbing the front of me breeches. \"\n\n\"'Ye be wantin' what's in there, miss?' I ask.\"\n\n\"She just nods, her eyes sort of glazed over. Meanwhile, she's rubbin' the both of us. So I reaches forward and pulls her hand away from herself, wet with her oils, and put it with the other hand.\n\n\"'Well, yer Ladyship, you take care of my needs first, eh? And then we'll see about yours. After all, the ship only has one captain, eh?'\n\n\"She can feel how hard I am by now, and her hands are desperately searching for the buttons.\"\n\n\"'Yes, captain,' she finally says with this sort o' whimper. She grabs me breeches by the waist and then she drops to her knees before me, pullin' em down as she goes.\n\n\"She groans and I feel her lips around me. Suckin' at my root, gents, like she'd never tasted anything better in her life.\"\n\n\"All two and twenty years of it?\" Connor whispered with a groan of his own. He looked down again at the open watch on the table.\n\nThe man looked over with a wink.\n\n\"She was five and twenty then. Those young red lips, boys, that long, wet tongue. I swear ye never felt its like, gen'lemen. I thought sure she'd suck me spendin' right out o' me. Right down her gullet.\n\n\"And then while I was just on the edge, so to speak, she stands up and pulls 'er dress right over 'er 'ead. Drops her shift, drops her bloomers and there she is, stark naked in front of me.\n\n\"Now me, cabin, gents, 'as a window in the door what looks out on deck. And she leans against the door and pushes that arse back at me.\"\n\n\"'Take me, captain,' she says. 'Take me while I watch your crew. So I ain't about to say, no, am I, like? So I steps up behind her and plunge my prick into her cunny, all tight and wet and grasping, don't you know? It's like she 'ad muscles there could grab hold of it and milk it all by themselves. She starts buckin' back and forth like a 'orse.\"\n\n\"So I just grabbed me a-hold o' them magnificent breasts o' hers -- you can see 'em in the drawing, gents -- and held on for the ride. And damme if that didn't just set her off even more. I finally has to grab on to her hair -- you can't tell from the picture, but it was a flamin' red, just a beautiful red or maybe copper-like -- and use that to keep us in what you might call a proper rhythm.\"\n\nHe sat there for a while, staring off into space.\n\n\"Thanks for the tale,\" Batterton grumbled.\n\n\"That's not the whole, o' course.\"\n\n\"Figures,\" Connor said.\n\nThe old man paid him no mind.\n\n\"I was smitten, ye see, and she was equally taken with me, for reasons best known only to herself. But we sat there together afterward, eatin' of the feast that me steward fetched in, restoring us after our labours so to speak.\"\n\nHe cocked his head to look at us.\n\n\"She brought out the poet in me, gents. I ain't even known there was one there. But I sat there a-tellin' her all the places in the Caribbean I was going to bring her. 'Aruba, Jamaica,' I says, 'ooh, I want to take you. Bermuda, Bahama, come on pretty mama. Key Largo, Montego.'\n\n\"She just sat there, this twinkle in her eyes.\n\n\"'Why don't we go?' she asks.\n\n\"'Jamaica,' I goes on. And then I starts to explain to her about this one island I particularly like, off the Florida Keys. There's a place called Kokomo. 'That,' I tell her, 'that's where you want to go to get away from it all. Bodies in the sand, tropical drink melting in your hand. We'll be falling in love to the rhythm of a steel drum band down in Kokomo.\"\n\n\"A what kind of band?\" I asked him. He was too far lost in his memories to answer.\n\n\"'Ooo,' I says, 'I want to take you down to Kokomo. We'll get there fast and then we'll take it slow.'\n\n\"That pleased her, in course, gents,\" he told us. \"Nothing a woman likes better than taking it slow. At least when you're a startin' out. Then you can pick up the pace, like.\n\nWe all nodded. Here was a man who had learned the wisdom of the ages. We all glanced at the drawing once again as he continued.\n\n\"'That's where we want to go,' I says. 'Way down to Kokomo.'\"\n\n\"She has a few ideas of her own it turns out\" he told us with a wink. 'To Martinique, that Monserrat mystique?' \n\n\"I give her hand a kiss. 'Whatever you like, my darling,' I tells her. 'We'll put out to sea and we'll perfect our chemistry. By and by we'll defy a little bit o' gravity. Afternoon delight; cocktails and moonlit nights. That dream look in your eye,' I says, 'give me a tropical contact high way down in Kokomo.'\n\n\"'Port au Prince,' she yelps, gettin' all caught up in me poetry, ye see. 'I want to catch a glimpse.'\"\n\n\"Now hold on,\" Connor said sharply. \"I've never heard of a cocktail. Or a steel drum band. This is just another sea story, boys. We've been done out of the price of a bottle of rum.\"\n\n\"But in a most entertainin' way, you gents must admit,\" the old man said, draining the last of the bottle.\n\n\"And what became of her?\" Batterton asked.\n\n\"Became of her?\" Connor scoffed. \"There was no 'her.' This fraud of a pirate made her up.\"\n\n\"She fell in love with that big, fat cock and married it,\" said a sultry voice from behind Connor. We looked up. She was ten years older perhaps, but with hair just as flaming red and a bosom just as proud as she had when she had posed for the drawing.\n\n\"Darlin',\" the old man said, nodding at her. \"Just having a last drink with me friends.\"\n\n\"Well, now it's time for you to come home and have a cocktail with me.\"\n\n\"So there is such a thing?\" I asked.\n\n\"As a cocktail?\" she said. She gave us all a lascivious smile. \"I'll let you look at the tail on the way out. The cock is mine, I'm afraid. Goodnight, gentlemen.\"\n\nWe stood as she and the old man left the Inn.\n\n\"All right, Marsh,\" I hear you crying, amidst your other tears. \"What the fuck was that?\"\n\nThat, friends, was the result of a literary challenge on another site from an author, Stultus, who had written Juvenal's version of \"Little Surfer Girl,\" or Puellula Veniliatrix as he called it. He dared the rest of us to attempt something similar. What you just read was Robert Louis Stevenson's version of \"Kokomo.\" Am I aware of the anachronisms? Of course. But in the interest of fidelity to the lyrics of the Beach Boys, I deliberately left them in. Thanks for reading. You can kill me now. The voting buttons are just below. "
    ],
    "authorname": "MarshAlien",
    "tags": [
        "pirate",
        "island"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/pleasure-island"
}