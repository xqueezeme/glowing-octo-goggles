{
    "title": "The Jenna Arrangement Pt. 10",
    "pages": [
        "ALL CHARACTERS ARE AT LEAST 18 YEARS OF AGE OR OLDER\n\n-------------------------------------------------------\n\nThe week dragged by. Jenna was busy with classes and shifts at the diner, while my job kept me occupied as well.\n\nWhen I wasn't working, I found myself spending extra time at the gym. Some nights I did my usual routine, others I just took advantage of the pool, hottub, and / or tanning booth. I hadn't been working out all that long really, only a few months before I met Jenna, but was finally starting to see some results beyond my first few pounds of initial weight loss.\n\nWednesday morning I texted her to wish her luck on her art project. About an hour later she replied, \"Thanks. Will do.\ud83d\udc8b\"\n\nI was just sitting down to dinner Wednesday night when Jenna called.\n\nShe filled me in excitedly. \"I can't talk long, gotta get ready for my shift at the diner, but I wanted to let you know the art project went great! I think Trish and I both did really well on it!\"\n\n\"Awesome. Great job. I'm glad it went well.\"\n\n\"Thanks again for your help,\" she said. \"I know things got...out of hand...later, but you really did help us both so much.\"\n\n\"You're welcome,\" I replied, \"I'm happy it helped.\"\n\nThere was an awkward silence for a few moments before Jenna spoke again. \"I'm off Friday night. Can we get together and talk?\"\n\n\"I'd like that,\" I answered genuinely.\n\nI wasn't comfortable with the idea of getting together at Jenna's place any time soon in case I ran into her roommate again, so we made plans for me to pick her up and find somewhere quiet to eat and talk.\n\nWhen I pulled up in front of her dorm Friday night, I texted Jenna to let her know I'd arrived. I was too afraid to knock in case Michelle was there.\n\nJenna texted back: \"Still getting ready. Michelle is here. She'd like to talk to you. Come to the door, she'll let you in. It's okay, promise. \ud83d\udc8b \"\n\nI practiced my breathing exercises for a few moments to ease my tension, then made my way to the door.\n\nIt opened before I could knock. Michelle was standing there. Thankfully, she was smiling.\n\n\"Tom, right? Come on in.\" Noticing my hesitation, she laughed. \"Don't worry, I won't bite, I promise.\"\n\nOnce inside, Michelle invited me to sit. I didn't want to sit on the couch, afraid it would stir up memories of the last time she saw me seated there, so I opted for one of the single chairs. Michelle took the other chair across from me.\n\n\"So I wanted to apologize for the way I treated you that night,\" she began. \"Jenna explained everything to me, and assured me you had nothing to do with it. We had a little chat about rules and boundaries when it comes to male guests in the house, and we're cool now. Sorry if I came off as a psycho bitch.\"\n\n\"Thank you,\" I said gratefully, \"but you have nothing to apologize for. Your reaction was completely understandable given the circumstances. Jenna and I are going to have our own chat about rules and boundaries tonight.\"\n\nMichelle looked at me solemnly. \"Good.\"\n\nShe looked like she wanted to say more but was stopping herself. I'm sure it was probably a question about how I'd met Jenna, or the age difference, or both. I could read it in her eyes.\n\nBut she didn't ask. Instead she stood. \"I'll go check on Jenna.\"\n\nI'm sure you're probably wondering at this point, so I suppose I'll just confess and say that yes, I did check her out as she walked away.\n\nMichelle was tall, with legs that seemed to go on forever. She appeared to be of Filipino descent, with long, straight black hair that fell halfway down her back.\n\nHer hips and ass were incredibly curvy in her skin tight yoga pants. I tried not to stare too long, but my will was weak and my gaze never left her until she disappeared down the hall.\n\n\"Put your eyes back in your head, old man,\" I chided myself silently. \"Last thing you need is to be caught staring at her. By either of them.\"\n\nJenna came out a few minutes later, and as usual, she was stunning.\n\nHer outfit was adorable in its simplicity; form fitting, high waisted denim shorts with brass buttons that ran down each side of the oversized pockets, and a black, sleeveless top with a loose fitting, lacy turtle neck.\n\nHer hair was swept back and held in place with a shiny rainbow colored butterfly clip.\n\nHer black, low heeled pumps added a few inches to her height, with gold buckled straps that criss crossed around her ankles.\n\nHer make-up was similar to what she'd worn that night after our date at the lake, and as her emerald eyes met mine, she smiled hopefully.\n\nI stood to greet her. \"Hey. Wow! You look...great,\" I stammered nervously.\n\nI was debating on whether to go in for a hug or kiss when Michelle came up behind her. I decided to save any displays of affection for later.\n\n\"Thank you,\" said Jenna. She looked nervous and self conscious, as if not sure how to act at the moment either.\n\nMichelle looked at the two of us just standing there shuffling on our feet and laughed. \"Oh go on, hug him,\" she prodded Jenna, \"you know you want to.\"\n\nJenna hesitated, looking at me, still unsure.\n\nI stilled her fears by taking her in my arms and giving her an affectionate (but very chaste) kiss, then hugged her close. \"It's good to see you,\" I said softly.\n\nI could feel Jenna's tension melt away in my arms. She hugged back, then pulled away.\n\n\"Okay, okay,\" said Michelle, \"you kids get going, have fun.\" There was a notable amount of sarcasm in her voice as she said it, and I saw her dark brown eyes glance in my direction. But her face was full of good natured humor, so I tried not to take it personally.\n\nJust as we reached the door, Michelle called out, \"Wait. Just one more thing.\"\n\nWe turned to face her. \"I don't want you to think you're not welcome here,\" said Michelle, addressing me. \"You are. Any time. I'm usually at my boyfriends on Friday and Saturday nights, if you prefer some...privacy.\"\n\nTo Jenna, she said, \"Just make sure you let me know if he's coming over when I'm here. If I'm at Dave's, text me. I'll make sure to call or text you if I'm coming home. If all you're doing is hanging out, I don't mind coming home to that.\"\n\nShe paused, then grinned slyly. \"But if anything ELSE is hanging out, just do me a favor and limit that to your bedroom.\"\n\nI flushed furiously and pretended there was something incredibly interesting on my shoes while Jenna blushed and nodded. \"Will, do, I promise.\"\n\nI was glad to be out of there.\n\n-------------------------------------------------------\n\nWe tried three different restaurants, all of them packed on a Friday night, before Jenna suggested getting some Chinese takeout and going back to my place.\n\nAfter an internal debate about just how clean my apartment was or was not, I decided to risk it and agreed. We needed to have a serious talk, and it would best be done in private anyway.\n\nWe caught up with general chit chat as we ate, and Jenna seemed in good spirits.\n\nWhen we finished, Jenna spent some time admiring my assortment of Star Wars and Marvel stuff. \"You've got quite a collection,\" she said as her eyes roamed my shelves and displays.\n\n\"Thanks,\" I said. \"I was hoping you didn't mind dating a middle aged geek.\"\n\n\"Haven't you heard?\" Jenna grinned. \"Geeks are cool now.\"\n\nWe sat on the couch, sipping on some ice tea. I'd considered having a beer, but wanted to remain clear headed for the conversation ahead.\n\n\"So we need to talk about what happened,\" I started, \"but before we do, I just want you to know: I'm not angry. At least, not anymore. And I don't want you to feel like you're on trial here or anything. I just want to be able to discuss things openly and most importantly, honestly, okay?\"\n\nJenna nodded, offering a tight smile.\n\n\"So I guess I wanna start with what made you get Trish involved, and just how involved was she?\"\n\nJenna lowered her head as if ashamed, and was about to speak when I stopped her. Lifting her chin, I turned her face towards mine. \"Hey, you don't have to feel embarrassed or guilty. We're done with that, okay? I just want to talk about it.\"\n\nHer smile brightened at that, and she looked more relaxed.\n\n\"Okay,\" she began.\n\n\"It really did just start as a way to help her practice. She called me after you left that night after the movie, and she was actually the one who suggested it. I was surprised, but the more I thought about it, the more I figured it could work both ways. It would be a legitimate way to help Trish, but also maybe a fun way for you to, you know, indulge your fantasy a bit. So I told her yes.\"\n\nI nodded. \"I appreciate your intentions. But you really should have asked me first.\"\n\n\"I know,\" Jenna conceded. \"But I honestly didn't start out with intentions to, well, tease you, get you worked up. Although we did talk about the possibility. That you might get an erection, how we'd handle it, you know.\n\n\"We were both surprised you DIDN'T get hard, actually. Trish even commented on it when you took that bathroom break. She seemed almost disappointed.\n\n\"I guess that's when I first got the idea to try and tease you into it. I was kinda warming to the idea of, well, showing you off. Plus, the wine was kicking in,\" she grinned sheepishly.\n\nI took this all in carefully. I suppose I understood it. Jenna knew of my...fetish? fantasy?...of being naked and aroused in front of a woman, how I'd talked about it being liberating and freeing, and assumed I'd be thrilled to be able to do it around Trish.\n\n\"Was Trish aware you were gonna tease me like that? Try and get me going?\" I asked.\n\n\"Well, yeah. She kinda suggested it. Well more like hinted around at it. After dinner, when you were in the bathroom again, she said something like 'I'm surprised you haven't gotten his motor running yet.' That's when I decided to...take off my panties.\" Jenna blushed heavily.\n\nI had to try hard, really hard, not to think back on that moment.\n\n\"So Trish was consenting, and even goading things along a bit. I suppose I'm okay with that. She seemed to be having fun with it, and if I'm being honest, so was I. So I can't really be mad at that, but still, in the future we should at least talk about it first, so I'm aware everything is consenting, and what the boundaries are.\"\n\nJenna nodded in agreement. \"Of course. I suppose I should tell you this as well: Trish and I...well...she used to come over and watch guys on Omegle with me sometimes. We'd get tipsy or smoke some weed and tease the guys mercilessly all night. So it wasn't exactly her first time watching a naked guy get a boner.\"\n\nMy eyes went wide. \"Really?\"\n\n\"Yeah. We always stayed dressed of course, but sometimes we'd...make out, on cam. Not our whole faces, but enough that the guys could figure out what was going on.\" Jenna was still blushing, but didn't seem embarrassed to admit all this. \"We even felt each other up a few times. Over the clothes,\" she added quickly.\n\nJenna must have seen something in my face, because she giggled softly. \"Hey, don't get any ideas, cowboy. We were just goofing around.\"\n\nI gave a \"Who, me?\" shrug, and we both laughed.\n\n\"Well I'm glad that Trish was aware enough of what was going on and had agreed to participate. And if I'm being honest, I wouldn't be against doing something like that again, only if you're okay with it. And in a more controlled environment of course.\"\n\nI paused for a moment, then continued. \"Now let's talk about Michelle. I don't wanna harp on this too much, and I'm glad you patched things up with her.\n\n\"But I want to be clear that's not what I'm looking for. I'm not some pervert looking to flash unsuspecting women. I know in porn the women swoon when they walk in on some guy jerking off, but that's not reality. Reality is what happened that night, or worse, having the cops called on you.\n\n\"I appreciate that you've embraced my little fantasy, but I just want to make it very clear I'm not interested or excited by the idea of exposing myself to a woman without her consent, okay?\"\n\n\"I understand, completely,\" said Jenna. \"The more I thought about it, the more horrible I felt. Because I knew if the roles were reversed, and I was the one naked and exposed to someone unwillingly, I'd be more than a little upset too.\"\n\n\"So we're both in agreement there; no more non-consensual participants. \"\n\nNow that we'd ironed all that out, I figured maybe we could lighten the mood a bit.\n\nI was about to suggest watching a movie or something when Jenna spoke up.\n\n\"So...so you said earlier you wouldn't mind doing something again with Trish,\" she began. \"I...I think I'd like that.\"\n\n\"Really?\"\n\nJenna laughed at my obvious surprise. \"Really. I was a little nervous about it at first, because I thought I might get jealous even though I told you I wouldn't. But once you got hard, and I could tell Trish was enjoying looking at you, well...I was enjoying showing you off, and...it was a turn on.\"\n\n\"Wow,\" I said, a bit stunned. \"What made it a turn on for you?\"\n\nJenna looked a little flustered. \"I dunno. I guess I started imagining what Trish might be thinking, wondering if she was getting horny looking at your cock, if she was imagining doing things to you. Wondering what you were thinking, whether you were hard for me, or for Trish, or both of us.\"\n\n\"That's...fantastic, actually.\"\n\nIt was Jenna's turn to look surprised. \"Really? Thought you might think that was weird.\"\n\nI tried to explain. \"There's nothing weird or wrong about it. And I want us to be able to share these kinds of things openly and without judgment if we're going to explore them. I like being watched, you like watching. And now we're both enjoying the idea of having another person involved. As long as we're both okay with it and discuss boundaries beforehand, I don't see why it's something we both can't enjoy. \"\n\n\"Well one boundary I wanna set right now that I don't want Trish touching you,\" said Jenna. \"She can look all she wants. She can even flash or tease you if she wants to...\"\n\nJenna's hand was suddenly hovering just above my zipper. \"...but only I get to touch this, okay?\"\n\nThe sexual energy in the room had just gone from zero to one hundred in the space of about three seconds.\n\nJenna leaned in close enough that I could smell her light jasmine perfume, and her eyes fixed on me with her sexy yet somehow still innocent gaze.\n\n\"I am still allowed to touch this, right?\" Jenna purred. Her fingers were dancing in the air mere centimeters from the bulge that was rapidly expanding in my jeans.\n\n\"Of...of course, darlin',\" I stammered. \"Anytime you want.\"\n\n\"Good,\" Jenna grinned wickedly, \"because I definitely want to.\"\n\nHer hand closed the distance, her palm now resting on my cock as it struggled, trying to escape the confines of my jeans.\n\nJenna helped it by undoing the button then slowly pulling down the zipper.\n\nHer head rested on my shoulder, and her soft, sultry voice was in my ear.\n\n\"So was it seeing my pussy that got you so hard that night?\"\n\n\"Y..y..yes,\" I stammered.\n\nJenna's fingers were running lightly over my boxer briefs, torturing my cock still confined beneath the cloth. She kissed my neck, nibbled my ear, then whispered into it.\n\n\"And you liked showing it off for Trish, didn't you? I saw you looking at her, you were so excited you were practically dripping.\"\n\nJesus, I had forgotten Jenna could be this seductive.\n\n\"Yes,\" I groaned, \"I liked that she was looking, that she could see it. I was wondering what she was thinking, if she was getting turned on from it.\"\n\nJenna's hand gripped my shaft over my boxers. It was pulsing in her hand.\n\n\"You wanted to jerk off for her, didn't you?\" Jenna purred.\n\n\"Oh God, yes.\" I was so fucking turned on I could barely breathe.\n\n\"And I ruined that for you,\" she sighed. \"But I know how to make it up to you.\"\n\nSuddenly Jenna was tugging at my boxers, pulling them down along with my pants. She had to drop to the floor to take off my shoes, then finished removing my jeans and underwear.\n\nShe came back up over me, kissing me lustfully, then lifted my shirt up and over my head.\n\nTossing it aside, she then stood, pulled out her phone, and started scrolling. I was about to ask what she was doing when the music started playing.\n\nIt was a sultry, R&B style song that I didn't recognize. Jenna put her phone down on the arm of the couch and began to dance.\n\nShe started simply enough, with a wiggling of her hips as she swayed her body provocatively.\n\nHer hands went to her waist, caressing herself over her shorts, then moved slowly up to her breasts, squeezing them gently as her body continued gyrating.\n\nHer eyes met mine. \"What are you waiting for? Jerk it for me, cowboy.\"\n\nShe was so sexy and confident. I immediately obeyed, taking my throbbing shaft in hand.\n\nJenna gave me a sexy grin, then went back to dancing for me.\n\nI'm gonna be honest: she wasn't the best dancer I've ever seen. But what she lacked in skills she more than made up for in personality. She was just having fun, and of course, so was I.\n\nJenna slowly began lifting her shirt, exposing her toned belly. It crept higher and higher as she swayed before me. She then turned her back to me and pulled it up over her head.\n\nOr at least tried to. Her shirt got stuck and she struggled with it for several seconds before finally managing to get it over her head.\n\nJenna laughed. \"I really didn't think this outfit through when I decided to do this,\" she giggled.\n\n\"So you planned this beforehand?\"\n\n\"Well, not really. At least not the striptease. But I did pick out what to wear under my clothes on purpose.\"\n\nJenna turned as she spoke, her hands over her breasts, then slid them away to reveal her bra.\n\nIt was a sheer turquoise mesh that left nothing to the imagination.\n\n\"You like?\" Jenna asked.\n\n\"Oh yes,\" I moaned, feeling my cock swell in my hand at the sight of her perky breasts, nipples clearly visible through the mesh.\n\nJenna smiled, found the rhythm of the music, and again began to sway her hips.\n\nUnsnapping her shorts, she slowly worked them down. Again turning around, she continued to lower the shorts inch by tantalizing inch, revealing the matching turquoise panties beneath. They were just as see-thru as her bra, showing off the creamy smooth skin of her adorable little ass.\n\nJenna lowered her shorts to her ankles, bending over as she did so. Even the gusset was mesh, and I had a full view of her tight butthole and the plump folds of her vulva pressed together snugly under the almost invisible fabric.\n\nJenna almost tripped as she struggled to get her shorts over her shoes. Once she finally managed to kick them off, she straightened up and turned her head over her shoulder towards me with a frustrated sigh. \"Sorry, I'm not very good at this. Maybe I'm not cut out to be a stripper.\"\n\nI smiled at her reassuringly. \"Don't worry about it, darlin', I think you're amazing. I'm certainly enjoying myself, can't you tell?\"\n\nJenna's eyes found my cock, my hand stroking it with a firm grip, and grinned.\n\nThen she turned to face me fully, and my jaw dropped.\n\nHer panties were just as see-thru in the front as they were in the back. My eyes fixed on them, admiring every detail they revealed.\n\nI'd caught glimpses of Jenna's auburn bush before, but now I saw it fully in all it's natural but neatly trimmed glory.\n\nIt framed her vulva perfectly, plump and fair and coming together at her cleft, revealing only a hint of her delicate pink labia. Her clitoral hood jutted prominently from the top of her slit.\n\nThis was the most exposed Jenna had ever been in front of me, and I had to stop masturbating for fear I'd cum far too soon.\n\n\"Hey,\" Jenna smirked, \"my eyes are up here.\"\n\nI met her humor filled eyes and finally managed to speak. \"Jesus, that's sexy. You're so fucking beautiful.\"\n\nAs a second song now played from Jenna's phone, she once again started swaying to the music, making her way to me slowly.",
        "Jenna took both my arms and put them along the top of the couch. \"No touching,\" she purred, \"me, or yourself.\"\n\nI guessed what she had in mind, and nodded in agreement.\n\nJenna may not have been a very good stripper, but she was an incredible exotic dancer.\n\nStraddling my lap, she dangled her breasts in my face, bringing her nipples within centimeters of my lips, then pulling back. Meanwhile her hips hovered just above the tip of my madly twitching cock, occasionally brushing up against it, torturing me with the heat of her pussy just barely separated from full contact by the ultra thin panties.\n\nJenna stood on the couch, then spun and thrust her ass in my face, again so close I could have licked her asshole if it wasn't against the rules. Her apple bottom cheeks swayed left and right as she moved to the music. The scent wafting from her clearly damp vulva filled my nose. I desperately wanted to taste her, but again restrained myself with great effort.\n\nJenna straightened, turned again, and now her pussy hovered just above my nose. It was the closest I'd ever been to it, and I took the moment to simply drink in the pure beauty of her most intimate treasure.\n\nHer vulva parted slightly to hint at the sweet pink treat they concealed. Her pussy lips were slick with a glistening, creamy sheen, and her clit was now poking out from under its protective hood, engorged from her arousal.\n\n\"Can you keep your tongue in your mouth, cowboy?\" Jenna's voice came from above.\n\nI looked up. Jenna was gazing down at me lustfully. Her arms braced her weight on the wall behind the couch, and she was leaning downwards, her small but perky tits hanging just above me.\n\n\"Yes, ma'am,\" I grinned. If Jenna was determined to play this out like a real lapdance, I'd continue to go along with it.\n\n\"Good boy,\" she purred. With that Jenna inched her hips closer, and suddenly her pussy was directly over my nose.\n\nThe scent was intoxicating. I'd smelled her pussy before, from her panties, but to now inhale her directly from the source was beyond belief.\n\nJenna brushed her clit across the tip of my nose, and I'm not sure who gasped louder; me or her. I could feel a drop of warm moisture left behind as she pulled away, continuing to buck and sway her hips to the music, teasing and torturing me as she playfully rocked her sweet cunt back and forth over my face.\n\nHer pussy was so close above my face that it was all I could see, so I was surprised when my view was suddenly interrupted by the hand she'd slid inside her panties.\n\nI watched fascinated as her fingers gently parted her slick labia, spreading them like butterfly wings, revealing the entrance of her vagina.\n\nShe slipped two fingers inside, knuckles deep, wiggling them around inside her tight hole. Then she pulled them out and placed them before my lips. \"Lick,\" she demanded.\n\nI greedily sucked her fingers, tasting her nectar, drunk with her flavors. I wanted more, but she denied me.\n\nInstead her fingers again slipped inside her panties, now finding her clit.\n\nShe rubbed it in slow, steady circles, moaning as I watched her masturbate directly in front of my face.\n\nI couldn't help it; I started to reach for my aching cock.\n\n\"No,\" yelped Jenna. \"Hold out for me a few minutes longer. I promise, it'll be worth it.\"\n\nMy hand returned to the couch as her hand continued to work her now sopping wet cunt; the more her arousal grew, the stronger her scent, and my nostrils flared madly, inhaling her.\n\nI didn't know how much more I could take.\n\nJenna suddenly tensed and let out a loud squeal of pleasure.\n\nI could literally see her orgasm as it happened; rivulets of cream leaking from her convulsing slot, her vaginal muscles tensing and contracting with each wave that ran through her.\n\nJenna's squeals and gasps subsided slowly as her orgasm wound down. Then she lowered herself to her knees, again straddled over my lap.\n\nAs we kissed passionately, Jenna forced her sticky fingers between our lips, and we shared in licking the gooey remnants of her orgasm from them.\n\n\"You were a very good boy,\" Jenna whispered, \"you've earned your reward.\"\n\nPushing herself off me, Jenna stood and, with a wicked grin, reached around and unhooked her bra, tossing it aside with an exaggerated flourish.\n\nThen she shimmied out of her panties and threw them at me playfully.\n\nJenna was completely naked. For the first time since I'd met her, I was seeing her fully exposed. She was breathtaking.\n\nJenna dropped to her knees between my legs, and her innocent emerald eyes met mine, then lowered to take in my cock, now inches from her face. It was as swollen and throbbing as you could imagine after such a prolonged teasing.\n\nShe looked back up at me. \"I'll try and go slow, but if you gotta pop, it's okay.\"\n\nHer eyes never left mine as she took my cock in her tiny hand, pointed it towards her lips, and planted a soft kiss on the very tip.\n\nHow I kept myself from exploding right then and there I have no idea.\n\nJenna ran her tongue playfully over my swollen head, then flicked the sensitive underside like a kitten lapping up milk.\n\nMy body was trembling uncontrollably. \"Oh my fucking God,\" I gasped.\n\nJenna grinned, then turned on her innocent little charm. \"What do you want from me now, daddy?\"\n\nMy eyes went wide with surprise, then understanding. \"I want you to suck my cock, princess,\" I commanded.\n\nJenna finally ended my torture and wrapped her soft full lips around the tip of my cock and slowly sucked me in.\n\nI was in heaven.\n\nJenna's tongue danced over my shaft as her head bobbed up and down, her hand gently jerking me in time with her movements. Her other hand found my balls and began brushing over them with light, ticklish strokes. I groaned even louder at the sensations.\n\nMy cock escaped her lips with a wet plop as she grinned up at me. \"See, daddy? I remembered how much you liked that.\"\n\n\"Good girl, princess,\" I said, breathing heavily, \"but please don't stop sucking me.\"\n\nJenna immediately continued, taking me deeper this time. She paused at the halfway point, tried to go further, then gagged and pulled back.\n\n\"Sorry, daddy, I can't swallow it all,\" she pouted.\n\n\"Just do your best, princess,\" I said, \"I'm so damn close, so close...\"\n\nJenna took me in her mouth yet again, sucking the upper half of my cock as deep as she was able while stroking the lower half with her hand.\n\nHer lips formed a perfect seal along my shaft, covering her teeth and creating a tight suction. I could feel her tongue slide over the swollen vein along the underside of my cock; soft, warm and generously wet with saliva.\n\nJenna kept a steady, even pace, breaking her rhythm occasionally to pop my now sloppy cock from her mouth and twirl her tongue around the head repeatedly while continuing to jerk the shaft with a twist of her wrist. After a few moments of playful licking, her lips would once again embrace my cock and fall back in synchronous movement with her hand.\n\nI put a hand on the back of her head, but didn't push, simply rested it there, enjoying the feel of her silky hair.\n\nHer pace quickened as she felt my balls tighten and my cock swell in her mouth.\n\nHer eyes stayed locked with mine as she sucked greedily, bringing me over the edge and beyond.\n\nJenna never stopped her suck and jerk even as my first blast erupted into her throat. Then another blast. And another.\n\nI howled with pleasure.\n\nJenna slowed her pace as the last few spurts ebbed from my tip, coating her tongue.\n\nPulling my only slightly deflated cock from her lips, she opened wide and stuck out her tongue, showing me the gooey mess I'd left there. Then her mouth popped close and she swallowed my cum with an exaggerated gulp.\n\nHer face beamed as she grinned up at me. \"Did I do good, daddy?\"\n\n\"Oh yes, princess. That was wonderful. Thank you darlin'.\"\n\n\"You're so very welcome,\" said Jenna, dropping her 'princess' voice.\n\nShe stood and sat herself on my lap, put her arms around my neck and kissed me softly.\n\nWe sat like that for a while, just holding each other.\n\nJenna sat up suddenly. \"I just realized there's something else I should probably tell you; I hope it won't upset you.\"\n\n\"I think it will be difficult to upset me right this moment after that, but okay; what is it?\"\n\nJenna gulped. \"I wound up telling Trish everything. I told her how we met, about the ad and what we did. She kept asking questions and I decided I didn't want to lie about it.\"\n\nJenna seemed surprised when I laughed. \"It's okay, darlin'. I kinda figured you'd told her at least some of it. That night at the lake she mentioned she was curious about us; I told her if you wanted to talk about it with her, you would.\"\n\nJenna looked relieved. \"Thank you for understanding. I don't have a lot of friends, so it was nice to have someone to confide in about it.\"\n\nI kissed her nose playfully. \"It's good to have someone to talk to. And at least now we don't have to worry about making up stories, at least with her. As long as she's not the gossiping type.\"\n\n\"Oh, she won't tell anyone else, I promise. She's a little nosy, but she knows how to keep a secret. I trust her,\" Jenna assured.\n\nWe were both getting dressed when Jenna's phone chirped. I couldn't help but pause from dressing myself to admire her as she stood in just her panties, checking the message. I loathed the idea that this view would soon be lost to me once she finished dressing.\n\n\"Shit,\" Jenna muttered.\n\n\"What's wrong?\"\n\n\"Michelle just texted. Her boyfriend is staying at our place tonight.\"\n\n\"That's a problem?\" I asked.\n\n\"Well, no. But yes. He's stayed overnight before. It's no big deal I suppose. Except they tend to be...loud.\"\n\n\"Ah,\" I nodded, understanding.\n\nI hesitated before offering my suggestion. \"You...you're welcome to stay here tonight. If you wanted.\"\n\nJenna looked concerned as she considered my offer. \"We could pop some popcorn, watch a movie. I'll take the couch tonight, no problem,\" I added quickly.\n\nJenna smiled. \"That sounds nice. Thank you. I'll text Michelle, tell her I'm staying. I'm sure she'll be happy to have the place to herself...and Dave.\"\n\nJenna sent her text, then turned her attention back to me. \"Since I'm staying, do you have anything, um, more comfortable for me to wear?\"\n\n\"I'm sure I can find something.\" I headed off to my bedroom, and came back shortly with a plain white undershirt and a pair of boxers with some candy canes on them.\n\n\"Got these as a gag gift at a Christmas party last year, never wore them. They're probably a bit big for you but they're clean and should be comfortable enough, unless you'd prefer a pair of sweatpants or something.\"\n\n\"Those should be fine,\" Jenna smiled appreciatively, \"it's warm enough in here. I'm gonna use your bathroom, freshen up a bit, okay?\"\n\nShe returned from the bathroom after only a few minutes, dressed in the clothes I'd given her.\n\nIt was a completely different look from the lingerie she'd worn for me earlier, but still somehow just as sexy.\n\nShe hadn't bothered putting the bra back on, that much was obvious, and her panties were in her hand, meaning she was naked under the baggy, loose fitting boxers.\n\nWe gathered up the clothes she'd stripped off earlier and I put them on the dresser in my bedroom. I paused before heading back to the living room, considering her panties sitting on top of the pile. I couldn't resist picking them up and holding them to my nose. They were still damp and fresh with her scent.\n\n\"Can't get enough of me, huh?\" Jenna was standing at my bedroom door, grinning at me.\n\nI flushed a bit at being caught, but I could tell she wasn't mad. \"Guilty,\" I said, \"but can you blame me?\"\n\nJenna just shook her head playfully. \"Come on, you promised me popcorn and a movie.\"\n\n-------------------------------------------------------\n\nI let Jenna pick the movie, and she went with \"The Truth About Cats And Dogs.\" I'm not usually into romantic comedies but it was actually pretty good.\n\nJenna sat snuggled up next to me, munching her popcorn and laughing, and I couldn't help but think how lucky I was.\n\nAs the credits rolled, I looked down to discover Jenna had dozed off. I shook her awake gently, then guided her to my room and into bed. \"Sorry,\" she mumbled sleepily, \"guess I tired myself out earlier.\"\n\nI kissed her cheek. \"Don't worry about it. Get some sleep.\"\n\nI turned to leave when she spoke again. \"You don't have to sleep on the couch. Stay with me, okay?\"\n\nI turned to look at her; eyes half closed, with a content smile on her lips, blanket pulled up to her chin. \"Of course,\" I said softly.\n\nHer smile widened. \"Good,\" she sighed.\n\nI went to my side of the bed and stripped off my clothes, then hesitated. I usually slept nude, but didn't want to make Jenna uncomfortable. So instead I slipped on the baggy sweat shorts I usually bummed around the house in, then crawled into bed beside her.\n\nShe lifted her tired head enough to meet my lips with hers, then plunked back down on the pillow. \"Goodnight,\" she yawned. Moments later she was fast asleep.\n\nI lay next to her, listening to her soft, rhythmic breathing. And it was at that very moment I knew I'd ignored my warnings to myself not to fall in love with her.\n\n\"Goodnight, princess,\" I whispered. \"Sweet dreams.\"\n\n-------------------------------------------------------\n\n Authors Afterwards\n\nThe hardest part of writing this chapter was the striptease and couch dance. Trying to describe something so visual with only words was tricky. I hope it at least painted enough of a picture to let your mind fill in for my literary shortcomings.\n\nAs I've mentioned before, I have at least several more chapter ideas outlined in my head; some involve further CFNM / Exhibitionist / Voyeur aspects, others a more standard progression of their relationship; sexually and emotionally.\n\nTom's admitted to himself he's falling in love with Jenna. And I honestly can't blame him.\n\nWhat remains to be seen is if she's feeling the same way.\n\nStay tuned. "
    ],
    "authorname": "Djmac1031",
    "tags": [
        "cfnm",
        "exhibitionism",
        "voyeurism",
        "striptease",
        "lapdance",
        "masturbation",
        "blowjob",
        "panties"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-jenna-arrangement-pt-10"
}