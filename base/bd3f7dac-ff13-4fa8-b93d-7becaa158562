{
    "title": "You're In My Seat Pt. 03",
    "pages": [
        "Thank you to everyone who is being patient with me. I'm learning to write better and I'm having a hard time determining how long each part should be. It looks longer on my computer than it does once it's posted. I hope this chapter is better than the last two.\n\n*****\n\nAlly\n\n\"You're in my seat.\"\n\nI don't look up. \"No, I'm not. Your seat is up there. Besides, you don't want to have anything to do with me, remember?\"\n\nCarter's voice is full of remorse, \"I'm sorry. I'm an idiot, can you forgive me?\"\n\n\"I don't know. Why should I?\" I respond petulantly, focusing on my book.\n\n\"If you've really liked me for as long as you say, then I think one fuck up is forgivable.\"\n\nI look up at him and his adorable pouting face, bottom lip sticking out making me want to bite it, \"Carter, shut up and sit down.\"\n\nHe slides in next to me, close, so close, \"Did you talk to Paul?\"\n\nI give a big sigh, \"Yes. He came clean. We broke up.\"\n\nCarter brightens up visibly, \"Really?\"\n\n\"Yes, I told him I would stand by him if he came out, but I wasn't going to help him fake it anymore. We both deserve to be with someone we really care about,\" I explain.\n\nAfter thinking for a second, Carter brings up our conversation from the morning, \"Ally, did you mean it? Have you really liked me for years?\"\n\n\"Yes. You never knew?\"\n\n\"No, I mean I might have suspected years ago, but I am pretty clueless. Why didn't you ever say anything?\"\n\n\"Why should I? Look how much you cared when I told you.\" I'm kind of teasing but still smarting a little from before school.\n\n\"It was just a surprise, so I tried to protect myself. I mean look at you compared to me. How did I know you weren't playing me?\"\n\n\"What's that supposed to mean?\"\n\n\"I'm just a geek and you're...\" he waves his hand up and down towards me, \"you know you're hot.\"\n\n\"That's a load of crap and you know it. You've always been attractive. Besides, I'm a geek, too.\" Honestly how could he not see how his lanky form was tight in all the right places?\n\n\"If you are, you're a geek undercover,\" Carter says looking me up and down. \n\n\"I'd like to get under your covers,\" I said giving him a coy look and running a finger in circles on his knee.\n\nCarter groaned, \"Stop teasing me, Ally.\"\n\n\"I'm not teasing Carter. I full intend on following through,\" I whispered in his ear, my voice low and husky. \"Don't get off at your stop. Get off with me.\" Double entendre completely intended. I felt him shiver next to me he grasped my meaning, I smiled at him sweetly, then I resumed reading my book.\n\nHis stop came and went without him even twitching towards the open door, and I tingled with anticipation. I read the same sentence over and over as I tried to steal a peek at Carter. He kept shifting uncomfortably in his seat, probably because his cock was primed and keeping it contained must have been painful. I could see the bulge. My pussy was definitely wet with my juices and I could almost smell my musky-sweet aroma. Our stop couldn't come quickly enough and I was getting antsy too. Finally the bus pulled up to the top of my street. \n\nI pulled Carter by the arm to the door of my house and wrenched it open as soon as I finished fumbling with the lock. Entering the narrow front hall, it suddenly got awkward. I was so sure he was into me, but I could feel his nervous energy just keeping him on edge.\n\n\"Uh, nice house,\" Carter swallowed and I watched the dipping of his adam's apple along his throat. Ours bags dropped to the floor with a resounding thunk, emphasizing the silence between us.\n\n\"Thanks. Do you want a drink or something?\"\n\n\"Sure.\"\n\nI led him into the tv room, offering him the remote and a seat on the worn couch while I went and got us a couple of pops.\n\n\"We only have diet, I hope that's okay?\" I called from the kitchen.\n\n\"Yup.\"\n\nThe next little while was incredibly awkward. We sat next to each other on the couch and I really wanted to touch him, but Carter seemed off compared to the easy conversations we've already had.\n\n\"Carter, what's wrong?\" I finally ask.\n\nHis eyes look down and he fiddles with a hole at the knee of his jeans, pale skin peeking through, \"Um... Ally I'd really like to kiss you, but...well, I've never done it before.\"\n\n\"What do you mean?\"\n\nHe peeks up at me through a veil of bangs, his head slightly tilted,\"I've never kissed a girl, aside from spin the bottle in seventh grade.\"\n\n\"Why not? I mean, Carter, you have to see that you're attractive, right?\"\n\n\"Maybe I am now, but for a few years there...\" his voice trails off as he turns towards me fully.\n\n\"You've always been attractive. I know you had bad acne, but-\"\n\n\"But nothing. I looked like shit and I felt like crap, too. No one in their right mind would have kissed me.\"\n\n\"Well then, let's make up for lost time.\" \n\nI put my hand on top of the one on his knee, stilling his nervous movements. His fingers intwine with mine and his slightly calloused skin spreads waves of heat through me. He stares at our interlocked hands for a second, then moves closer, his lips dampened as his tongue darts out and wets them slightly and his eyes lower to my lips.\n\nThe first kiss is tentative, gentle and soft, unsure and like a light caress. The scent of his skin, the slight stubble of his face, all of it is Carter. My chest is tight and my lips are tingling as he slowly pulls away. His hand moves to my cheek, looking for assurance. My eyes flutter closed as I dive for his delicious lips and I can feel his hand moving further back, behind my neck tilting my head into him. \n\nThe second kiss is deeper, harder and insistent, full of longing and want. My mouth opens to him and I breathe him in, suck him in, run my tongue across his lips then delve inside. Carter groans into our joined mouths, then penetrates my mouth sending my head spinning. This kiss is unlike anything I've experienced before and I want to melt into him. Instead, I take his hand still in mine and I place it on my side, prompting him to touch me, his fingers to explore.\n\nCarter groans again as he shifts his hand up and down my side, playing my ribs, grazing the edge of my breast. Electric shocks spark to my nipples and I push myself against him as my breasts tighten with the contact, tingling with excitement. With my free hand, I mimic his gestures, circling with pressure, kneading his back through his shirt. His firm, trim but muscled torso is amazing and I want more of him, all of him.\n\nOur lips separate as Carter runs his nose along my jawbone, then nuzzles my ear, blowing into it slightly. \"Ohhh, Carter,\" I moan, panting. His one hand tugs at my hair to position my neck for his mouth, his other has my breast firmly in hand and is massaging my tit.\n\n\"Oh fuck, Ally. You have no idea how long I've wanted this, wanted you,\" he groans into my ear, nibbling my lobe. I jerk away from his lips to keep from dissolving into giggles due to his ministrations to a ticklish area.\n\n\"What? What do you mean?\" I breathe as I suck the flesh at his collarbone, breathing in the linen fresh scent of his shirt which I've pushed aside.\n\n\"You're not the only one with a secret crush, I've always had a thing for you. Always, since we first met.\" He reclaims my mouth with renewed vigour, his kisses deep and possessive, one hand moving down my back to the clasp of my bra, the other tweaking my nipple.\n\nHis admissions send me reeling. \"I need you, Carter. I need to touch you, see you, taste you. I want to be your first everything.\" \n\n\"I want that too, Ally, but\u2014\" his speech is halted by the sound of the front door opening. But what, I wonder, what? Paul's face is flushed as he and I straighten out our rumpled clothes. His lips are swollen from our kissing and I've left a hickey at the base of his neck.\n\n\"Hello?\" my mom calls from the front hall, as I groan in frustration. \"Ally?\" There's a loud stumbling sound and a muffled curse word, \"What have I told you about leaving your bag in the front hall? You know I'm not..\" My mom walks into the room and stops mid lecture when she notices Carter. \"Oh, hello there.\"\n\n\"Mom, this is Carter Winters, we go to school together. Well for a few more weeks anyway.\"\n\n\"Hi Mrs. Patton, nice to meet you.\" Oddly enough, Carter doesn't try to get off the couch to shake my mom's hand\u2014I can't imagine why.\n\n\"You too, Carter. So are you off to school in the fall?\"\n\n\"Mom!\" She hated that Paul wasn't going to University, so I'm assuming she's got some sort of checklist as to whether or not Carter is suitable for me to date.\n\n\"Yes, actually I got early acceptance into Engineering at Western.\"\n\n\"Really?\" I look over at him, surprised.\n\n\"What?\" he sounds a bit defensive.\n\n\"Ally's going to Western, too,\" my mom explains.\n\n\"Yeah, but I'm taking journalism,\" I add.\n\n\"That's great, Ally,\" Carter says, giving me a big smile, and I'm not quite as worried now about his unfinished 'but' from when my mom interrupted.\n\n\"What are you doing home, Mom?\"\n\n\"You have a dentist appointment, remember?\" my mom turns to take her grocery bag into the kitchen.\n\nDisappointment and frustration courses through me. \"Shoot, I totally forgot. Do you want a drive home?\"\n\n\"No, it's okay, I can walk. I'll see you later Mrs. Patton.\" Carter stands, adjusting himself and I get a fleeting look at the bulge in his pants. Damn, I want more. \n\nFollowing him to the front hall, I bend suggestively in front of him to pick up his messenger bag, flashing him a little skin and I hand it over.\n\n\"Will you call me later?\" I ask him. I pull out my phone to get his number.\n\n\"Of course,\" and then he leans against me for a last kiss, tongue darting into my mouth and nibbling my bottom lip before he turns and walks down the driveway. Leaving me wanting so much more as I watch his pants hug his sexy ass getting farther away.\n\nCarter\n\n\"Well?\" Kevin presses me for information. I stopped at his house on the way home from Ally's and we're playing some CoD.\n\n\"Well what?\" I am being obtuse as I shoot a random soldier on screen.\n\nKevin pauses the game, \"What happened? Did she talk to Paul or what?\" \n\n\"Yeah. They broke up.\"\n\n\"So are you in there?\"\n\n\"I think so.\" I lift my arm to scratch my neck and Kevin laughs.\n\n\"What?\" I eye him suspiciously.\n\n\"Looks like you're more than in there, man.\"\n\n\"What?\"\n\n\"You've got a giant hickey.\"\n\n\"Shit.\" Stupidly I try to rub it off, then pull my hand away feeling foolish.\n\n\"So are you guys going out or what?\"\n\n\"I don't really know.\"\n\n\"Just fuck buddies then?\" He makes fucking gestures with his hands.\n\n\"Shut up.\" I roll my eyes and punch his arm, then we go back to our game.\n\nBy ten o'clock I've almost talked myself out of calling her. The feel of her firm tits in my hands and her lips on mine is so unbelievable it's almost like a dream\u2014except I've been taking shit for this hickey all evening. First Kevin, then my younger brother when I got home. My dad gave me a knowing grin and my mom raised her eyebrow before asking if I had anything I wanted to tell them. Even though I met Ally's mom today in the biggest cock-block possible, I'm just not sure I want to tell my family about her yet until I know this is for sure real. \n\nFinally I just man up and do it, laying back on my bed while I wait for her to answer. \"Hi Carter,\" Ally answers breathlessly, \"I was waiting for you to call.\"\n\n\"Really?\" I know she told me to call, but I'm still surprised.\n\n\"Yeah, I'm sorry my mom interrupted us.\"\n\n\"Me too.\"\n\n\"What were you going to say right before she came home?\"\n\nI hesitated for a second, then take a deep breath and lay it out there, \"I was going to say 'I want more than just a fuck.' I mean you said you didn't really have feelings for Paul, but you were with him. I don't want to be used like that.\"\n\nAlly considers this for a beat or two and I'm worried I made her angry. Finally she admits, \"You're right. I was using him too, just not the same way he was using me. And it was stupid, Carter. I was stupid. I want you for more than just someone to be with. Like I said, I've always wanted you.\"\n\n\"Do you want a relationship? Is it too early to talk like that? I mean we'll be at the same school in the fall...\" I feel like a total fucking tool, but I have absolutely no experience in this kind of stuff. I just know I want more than to be a diversion.\n\n\"I want to be yours if you'll have me.\"\n\n\"Of course I want you, Ally,\" I admit way too quickly to be cool, then add chuckling to cover my embarrassment, \"I think you could feel how much I want you.\"\n\n\"Yes and I can't wait to see it and have you inside me,\" Ally says huskily, almost whispering.\n\nShe sounds turned on and my cock stiffens in response, \"I want that too, I want it all. I want all of you.\"\n\n\"All of it?\" she purrs. \"You want to feel how wet I get?\"\n\n\"Yes\" Oh. My. God. I've never understood the appeal of phone sex until now. I am sure she is touching herself and I am stroking my cock lightly just thinking about her. I hope to god I am reading her right because I don't want to feel like a total perv for touching myself while she talks to me.\n\nMore breathy whispers, \"Do you want to feed me your cock?\"\n\n\"Ohhh, fuck yes.\" I stroke a bit harder, my head a shiny purple from the rush of blood. I am sure she is trying to get me off, and it is fucking working.\n\n\"You want me naked on my knees while I suck your cock?\" Ally's voice is strained and gruff and incredibly sexy.\n\nI can just see her kneeling, plump lips around my thick shaft, \"uuuuuuhhhhhhh, god yes.\" I can't stifle my groan.\n\n\"You want to put your hands on my head and fuck my face?\" she pants.\n\n\"yeeeessss\" imagining it just like I pulled her hair today, dark strands wrapped in my hands while I thrust down her throat. Holy. Fuck.\n\n\"You want me to take you deep while I finger my pussy?\"\n\nGod I want her pussy, I want to make her feel good. \"Finger yourself now, finger yourself for me, Ally.\" My mind is full of dirty images of Ally, all of them fuelling my stiff prick.\n\n\"I already am, Carter.\" Her admission makes me groan and stroke faster. \"My fingers are deep in my cunt while I feast on your fucking cock. Your thick veiny cock. Your precum tastes amazing,\" she moans. I can tell she's close and so am I. My eyes are closed trying to imagine what she is doing right now and how good it will feel when we do it together.\n\n\"Play with your clit for me, Ally,\" I want to hear her, need to hear her, the pressure is building in my dick and I can feel my balls tighten, pulling closer to my shaft.\n\n\"Shoot your load in my mouth, Carter. Fill me with your cum. I want to swallow you. Please.\" She's panting and begging and it sounds so fucking amazing.\n\n\"Fuck Ally, that's so hoooot.\" I'm trying to hold my load until I hear her cum, but I'm so close.\n\n\"I'm-I'm going to cum for you Carter,\" Ally's breathing is ragged, \"can you cum for me?\"\n\n\"What are you doing with your hands? Tell me,\" I hiss, begging for her release.\n\n\"I'm rubbing my pussy, I'm dipping my fingers in my hole and playing with my clit. I'm so wet\u2014I want you filling me, pounding me. I'm naked for you Carter. My tits are out and the cold air has made my nipples hard like pebbles. I want your mouth on my tits while you fuck me. I want you to suck my nipples so hard I can feel it all the way to my pussy. Fuuucccck meee, Caarrrttter,\" and I can tell she's so close that it sends me over the edge.\n\n\"Oh fuck, Oh fuck.\" A thick strand of cum shoots from the slit of my cock, splaying across my shirt and hitting my shoulder.\n\n\"Shoot your load for me. Please give me your cum. Please, I want it Carter. I want it. I want it. I waaaannnt ittttttt.\" Her begging becomes unintelligible as she reaches her sweet release. Her moans mixing with mine as I cover my shirt with cum.\n\n\"Aaaaaaahhhhhhhhhhhh.\"\n\nWe breathe heavily, together for a minute or so, recovering from our mutual pleasure.\n\n\"Carter?\" her voice is more relaxed now, she sounds sleepy and totally adorable.\n\n\"Yes?\"\n\n\"I want to do all of that with you.\"\n\n\"Me too, Ally.\" I'm sure I have a grin from ear to ear.\n\n\"Does it bother you that I'm not a virgin?\" she asks hesitantly.\n\n\"No. Does it bother you that I am?\"\n\n\"Of course not, but you'll be my first,\" she tells me, then adds, \"god that sounds whorish. I've only had sex with two people.\"\n\n\"It doesn't matter, in fact I'm happier knowing that one of us will know what to do,\" I chuckle.\n\nWe spend the next hour or so on the phone just talking until I realize that my shirt is stuck to me so I need to do a load of laundry and have a shower. Ally and I say our good nights and promise to see each other in the morning.\n\nAlly\n\nAfter getting off the phone with Carter I can't believe how much more I want him. Listening to him jack off while I frigged myself was more amazing than I could ever have imagined. He was so sweet when he kissed me and I want to make sure that I do whatever I can to make his first time better than mine was. The problem with losing my virginity at Brett's prom was that he was drunk and I was nervous, so the whole thing kind of sucked. And because he was leaving for university at the end of the summer, he never really took the time to ensure I enjoyed it. I'm pretty sure that Carter will care a lot more sex and everything, and I know I do. \n\nI smooth my dark wavy tresses down quickly just before the front door opens. A blonde middle-aged woman in a business suit answers the door. \"Hi Mrs. Winters, is Carter home? I'm here to pick him up for school.\"\n\nShe gives me the once over and I'm glad I dressed kind of conservatively today\u2014at least where it's visible. \"Oh, and you are?\"\n\nHmm, obviously Carter hasn't mentioned me. \"Sorry,\" I say, blushing, \"Ally, Ally Patton. Uh, Carter and I go to school together,\" I offer my hand, and she shakes it warmly.\n\n\"Come on in. I'm not sure Carter's ready yet, but he'll be down in a minute.\" She leads me through the orderly house to the kitchen where a younger, slightly cooler version of Carter is sitting at the oblong wooden table. \"This is Teddy. Teddy, Ally.\" She gestures for me to take a seat. \"Would you like a coffee or some toast?\"\n\n\"No, thank you Mrs. Winters.\"\n\n\"Are you the one who gave my brother the hickey?\" Teddy asks bluntly, while slurping down his cereal.\n\nMrs. Winters stifles a laugh and nearly snorts coffee from her nose. \"Carter! You might want to get in here,\" she yells towards the stairs as she coughs.\n\n\"I'm coming, I'm coming,\" Carter's gravelly morning voice precedes some quick thumps, and then, there he is, standing in the doorway looking completely adorable in his Darth Vader shirt and yet another pair of really sexy jeans that cup his package just so. His hair is damp and disheveled, a few strands falling in front of his storm coloured eyes. Carter's mouth falls open in surprise for a second when he sees me sitting, but he quickly recovers and with a cheeky grin states, \"You're in my seat.\"\n\n\"Good heavens, Carter, no she isn't. There are three other chairs, pick one.\" Mrs. Winters chides, but I can't help but giggle when Carter slides into the chair next to me.\n\n\"Carter, is she the one who gave you the hickey?\" Man, Carter's brother is persistent.\n\n\"Shut up Teddy.\"\n\n\"I guess she has to be, it's not like Carter's ever had any other girl around here,\" he mumbles into his cereal.\n\n\"So Ally, are you a senior, too?\" Carter's mom asks brightly, trying to ease the tension. Before I can answer, Carter cuts in.\n\n\"Mom! Yes, she's a senior, she's going to Western for journalism, we've known each other since seventh grade,\" Carter says, obviously exasperated, then turns to Teddy, \"and yes, she's the one who gave me the damn hickey.\"\n\nThe room is suddenly so quiet you could hear a pin drop, \"uh, yeah, sorry about that,\" and I'm pretty sure my face is as red as my bra and panty set that I wore especially for Carter today. I look down and start to pick at my fingernails nervously, wanting to bite them, a habit I gave up long ago.",
        "\"No, Ally, I'm sorry, I'm just not used to this kind of attention. I mean Teddy's right, you are the first girl that I've ever had at the house,\" and he reaches over to still my hands. It's a sweet gesture and his touch spreads warmth through me. \"Sorry Mom,\" he adds.\n\nShe lets out a sigh, \"It's okay, Carter.\" Then she turns to me, \"You're welcome here anytime, dear, just ignore Teddy,\" Mrs. Winters says kindly.\n\n\"Thanks Mrs. Winters, but I think we should get going to school now. We don't want to be late,\" I say, still feeling somewhat awkward.\n\n\"Of course.\"\n\n\"So your car's fixed?\" Carter asks, looking at my hand-me-down Civic.\n\n\"Yeah, it was done yesterday, actually. I just wanted to sit with you again,\" I admit with a grin.\n\n\"Sneaky. I like it.\"\n\nCarter opens the car door for me and as I slide past him, he gives me a kiss on the cheek. He hasn't shaved today and his faint stubble tickles my cheek.\n\n\"That's sweet, and for what it's worth I'm really sorry about the hickey, Carter.\" I bat my eyes at him, then lower them to his crotch seductively, \"Next time I'll just have to suck somewhere lower down.\"\n\n\"No, it's okay, um, I mean, by all means suck farther down...\" he's obviously flummoxed, but aroused, too.\n\n\"Just get in and buckle up. Let me take care of you,\" I say with a smile. \n\nWe hold hands all the way to school and I crave his touch, especially since he keeps running his thumb over my skin, driving me crazy. \n\n\"How do you want to do this?\" Carter asks, nervously as I pull the car into a parking spot.\n\n\"What do you mean?\"\n\n\"I mean I didn't handle the attention well and that was just my family. I'm kind of used to being invisible.\" \n\n\"You've never been invisible to me,\" I say gently, giving him a soft deep kiss, tongue darting into his mouth. Pulling away, I unbutton the top two buttons on my black sleeveless polo shirt, \"look what I wore for you today.\" I shift my shirt to the side so he can see the top of the red lacy cups of my bra.\n\n\"Fuck, Ally,\" he groans.\n\n\"Later,\" I bite my lip suggestively, \"if you want to.\"\n\n\"Tease.\"\n\n\"You love it.\"\n\nWe get out of the car and walk into the school holding hands, ready to test the waters, Carter's messenger bag hanging in front of his stiff prick.\n\nCarter\n\nWalking through the halls holding her hand is an odd feeling for me. I mean I'm thrilled that we're together, that she wants me as much as I want her, but I'm still expecting something bad to happen. It's one thing to want me where there's no one else around, but will she still want me when her friends become involved? Plus I have the problem of my cock still half erect from the car. The red lace against her creamy cleavage is a picture I am going to replay in my mind all day, which means I'm going to have to be careful not to be hard all day. She's so amazing, and her showing up to get me this morning was fantastic.\n\nAlly kisses me quickly outside the door at her class then I run to mine, dropping into my seat next to Kevin just at the bell.\n\n\"I'd ask if you had a good morning, but judging by the lipgloss I'd say yes.\"\n\nEmbarrassed, I wipe my cheek, \"I guess you could say that. Ally drove me to school.\"\n\n\"Have you driven her yet?\" he asks, suggestively.\n\n\"I don't kiss and tell, Kevin.\"\n\n\"No, normally you don't kiss at all. Honestly Carter, I'd tap that as hard and often as possible.\"\n\n\"Shut up, Kevin.\" Although his suggestion is sounding pretty good.\n\nAfter eating lunch with Ally that leaves me with blue balls, I make my way to history, the class I have with Paul. I don't sit near him, nor have we ever really talked, but today I'm nervous. I know people have noticed Ally and I together and I know a few of Ally's 'friends' have made comments to her. Paul has to be upset that people might discover his secret and I hope he doesn't take it out on me. I'm on edge for the whole class.\n\n\"Hey.\" Paul approaches me at the end of the period.\n\nI shift nervously in my seat, looking around the room as my classmates file out. \"Uh, hi.\"\n\n\"Are you with Ally now?\" Honestly, I think this is the first time he's ever spoken to me, I don't even know how he knows who I am.\n\n\"Yeah.\"\n\nHis voice lowers, and his eyes look away, \"Do you know about...\"\n\n\"I overheard you and him,\" I say discreetly not mentioning Greg's name. \"I won't say anything.\"\n\nHe looks relieved, \"Treat her nice man, she deserves it. I really fucked up.\" I know he's not going to beat the crap out of me, so I stand up and we move towards the door.\n\nConsidering how nervous I am of people finding out that I'm just in a hetero relationship, I can't imagine how hard it would be to in his position. I mean some people are progressive but there's an awful lot who aren't, and he can't help who he likes. Besides, Greg's really great. \"No you didn't. Treat yourself nice, what you want and need isn't always the easiest path, but it's supposed to be the most rewarding.\" It's a saying I borrowed from my mom, but it seems to fit the situation.\n\nPaul smiles at me, \"Thanks man.\"\n\n\"Carter.\"\n\n\"Thanks Carter.\" We shake hands and I breathe a sigh of relief. Paul really is a decent guy, but for my sake, I'm glad he's gay.\n\nMy fourth period teacher doesn't watch at the end of class, so I'm able to slip out and meet Ally outside the door of her English room. When the bell rings, she comes right up to me and gives me a hug, leaning in to tease my ear, giving it a quick nibble. \"Ready to go?\"\n\nLike a dog in heat, my cock stands to immediately. \"Let's get out of here.\"\n\n\"Ally!\" A screech rings out in the hall. \"What the hell?\" It's Megan, a girl I really can't stand. She's the popular type that cuts people down to make herself look more impressive. In all honestly whatever looks she has can't make up for her nastiness. Storming right up to us she stamps her sandal clad foot. \"You dumped Paul for, for, this non-entity?\" She looks me up and down, taking note of my geeky shirt and snorts in derision. I fight the urge to slink away, but I know my face is red.\n\nAlly stands her ground and holds my hand defiantly, tightly, knowing I am feeling vulnerable, \"His name is Carter, Megan, and he can hear you. And what happened between Paul and I is really none of your business.\"\n\n\"I don't give a shit what his name is. You can't be serious, hanging out with him\u2014it's social suicide.\" There's a small group around us now, enjoying the post-class show, and Megan is feeding off the crowd's attention, her eyes darting from person to person.\n\n\"If that's what it takes to be with someone with some depth of character, than so be it, but I don't think I'll feel the loss,\" Ally responds, eyes blazing.\n\n\"You realize you've fucked our prom plans, right? Because he's not coming with us.\" She points her thumb at me like I'm a piece of trash.\n\n\"I could care less about prom plans, and Carter and I wouldn't go with you now if you paid me. I'm sure you can find some other mindless followers to take the spot in the limo.\"\n\n\"Oh I know I can find some better people, and I'm sure Paul can find a hotter date.\"\n\nAlly ignores the Paul comment. \"Carter is a far better person than you'll ever know, he's totally hot, and he's smarter than you'll ever understand. So if you'll excuse us, I'll leave you to your petty little world.\"\n\nI think Megan realizes she's losing this battle so she tries one last dig, \"You won't be anything without me.\"\n\n\"No Megan, I'll be exactly who I want to be, and right now I want to be with my boyfriend.\" I can't stop a wide grin, I mean I know Ally wants me, but for her to tell Megan flat out that we're together is an amazing feeling. She turns to me, \"I mean if that's okay with you?\"\n\n\"Of course it is.\" I know I have a goofy grin on my face. \"Let's go.\" Leaving together, the crowd dissipates and Megan is huffing and stamping behind us, looking every bit as ugly as her personality. I can't get over how dirty girls fight, all harsh words and cutting remarks. Guys would just punch each other and it would be over.\n\n\"How could you stand being friends with her?\"\n\n\"I've done some things I'm not proud of, and mostly it was being a follower. She's not always awful, but when she is...It's been bothering me for awhile\u2014all that phony stuff. I'm smarter than that now, and I know what I want.\"\n\n\"What's that?\"\n\n\"To have something real, to make my own decisions, to be with you,\" she says, simply. \"Please, let's go to my house. I know my mom won't be home for a few hours.\"\n\nAlly\n\nPushing him onto the couch, I lift my skirt enough so that I straddle his lap and he reclaims my mouth. My shirt is already a puddle on the floor and my tits are pressed against him, still in their bra. His light stubble tickles my cheeks and I can feel his cock straining against his jeans, my wet red lace panties rubbing along his length. Both of us moan with desire, urging each other on. Carter's hands are at my hips and began snaking up my body, burning a path until he grazes the underside of my breasts, making me quiver. My hands are fisting his hair, keeping his mouth with mine, sucking his tongue deeper.\n\n\"Oh god, yes. Grab my tits, Carter.\" Groaning, rubbing my pussy harder against his denim-clad erection, his hands start massaging my globes.\n\n\"Ally, I'm...oh, ah, fuck.\" Carter's voice is strained and his body is arching, cock pulsing beneath me. \"Oh, my god, I'm so sorry,\" his disappointment is evident.\n\n\"Did I make you cum, baby?\" I pant, biting at his lip.\n\n\"Yes,\" he said, ashamed. \"I couldn't help it, you're just so fucking hot, you were rubbing against me, and I've been hard all day.\"\n\n\"I don't care\u2014it happens, I just want to taste you Carter. Let me clean you up.\" I slide off his lap, pull my skirt off, then when resting on the floor kneeling between his legs, I see what I did to his pants.\n\n\"Looks like you aren't the only one who messed your pants,\" I point to the patch of damp my pussy created along his fly. \"See how wet you make me?\"\n\n\"I don't care about my pants, Ally. I don't care what happens if I get to have you.\" Carter cups my breasts through my bra, running his thumbs along the top of my cleavage and squeezing gently.\n\n\"Take off your shirt, Carter. I need to see all of you.\" Removing his hands from my tits, he quickly yanks his shirt off. Although he's not overly muscled, there is definition to his arms, shoulders and chest, with a tight stomach. Little patches of chest hair define his small red nipples and a smattering of light freckles across his shoulders looks like sprinkled sugar. I roll his nipples in my fingers and he groans in response. \"You're so fucking sexy, Carter.\"\n\nReaching down, I unzip his jeans, giving his cock a bit more space. His pole is still semi-erect in his plaid boxers and I lean down to inhale his meaty and slightly sweaty aroma. The dizzying scent fills my nostrils fanning the flames of my arousal. \"Mmmmmm\" Putting my mouth where his cock head is, I suck at the wetness through the thin layer of cotton and get a first taste of his salty treat. His cock grows with my ministrations, fully rising to the occasion, straining against the fabric.\n\n\"Oh fuck, Ally, please,\" he groans and squeezes my tits harder, now popped from their restraining lingerie, running his thumbs across my taut nipples. \n\nI shudder at his touch but I want to take care of him first. \"Please what?\" I tease, tracing the length of his shaft with my finger.\n\n\"Please suck me, please take me in your mouth,\" he begs huskily.\n\n\"You want to feed me your cock, Carter? Just like we talked about last night?\"\n\n\"Please...\"\n\n\"Patience Carter, let's get your pants off first.\" I grasp his jeans and boxers and back away, pulling them down. He lifts his ass from the couch briefly so that I can get his pants off, and that movement waves his delicious package right by my face. I moan when I finally see his engorged member, which snaps back from the boxers and makes a heavy 'thwack' against his firm belly, leaving a wet spot from the fluid seeping from his tip. Carter has a light treasure trail, wispy hairs leading from his navel, thickening around the solid root of his cock, and sticky with the load he already released. His head is purple and shiny and big, so big\u2014looking like a mushroom, and his cock is anvil shaped, wider at the top, tapering down over the length, which I'm guessing is about eight inches. The dark veins running down his dick are so fucking hot and it is by far the largest dick I've ever seen up close. \n\n\"Fuck, your cock is gorgeous,\" I groan, my mouth watering. I start at the base and clean the hairs, sucking off the cum, then run the tip of my tongue up the underside of his cock, tickling the bottom of his mushroom top. It seemingly grows even more as I lick.\n\n\"Holy shit, Ally, please don't tease me,\" Carter says with throaty longing. \n\nI look up to his face, his eyes full of want\u2014the way I've dreamed of him looking at me for so long, then I engulf the head of his prick with my mouth, sucking him in with a slurp. His head is so wide that I can't take him too deep, but he tastes so fantastic I want him as far as I can handle. His skin is smooth and so soft in contrast to the rigid pole it coats. He groans again, and grabs my head, hair wrapped in his hands.\n\nOne of my hands works his shaft, slick with my spit, and the other I use to cup his plum sized nuts. I grasp them firmly and tug on them just the littlest bit. He responds with a deep groan that drives me wild. I love that I'm giving him pleasure, that I'm in control of his release. I try taking his head deeper again, but as much as I try to swallow him down, I am gagging on his oversized head. Pulling back a bit, I swirl my tongue all around his head again, making sure I run it over his slit, too. His sac begins to tighten, pulling his balls back towards his cock and I know he's going to cum. I suck a bit harder and squeeze my hand on his shaft to mimic the contractions of a spasming pussy.\n\n\"Oh Fuck, Oh fuuuuuuuuccckkkk, uuunnnnggggghhhhh,\" Carter cries out as his cock pumps salty shot after shot into my mouth, his body stiff with his orgasm, his cock throbbing against my tongue. I love the taste of his cum\u2014it's salty, for sure, but also thick like cream and slight sweet-bitter taste, and I can't get enough of it. Drinking down his load I look into his flushed face and grin.\n\n\"Well?\"\n\n\"You didn't have to swallow.\" \n\nHe seemed a little on edge about it, so I set his mind at ease, \"I wanted to, besides you taste amazing.\" I give his cock head a little lick for good measure, cleaning up the last little bit that seeps out.\n\n\"Fuck, Ally, that was amazing, better than I ever imagined.\" He closes his eyes for a second, resting his head on the back of the couch while I rest my cheek on his thigh. I love that I can make him feel so good, the power that I have over his cock. \"That's so hot.\"\n\n\"Yes, I am. What are you going to do about it?\" I rise to stand between his legs and put my hand under his chin, tilting his head to look at me.\n\n\"Umm, can I take off your bra and panties?\" he asks, tentatively.\n\n\"Please do. Carter, I'm so wet. Feel it?\" Taking his hand, I pull it to my cunt having him touch me over the soaked fabric.\n\n\"Holy shit, Ally, you're drenched.\"\n\nI lean forward and whisper in his ear, full of longing, \"What are you going to do about it?\"\n\nCarter's hands move to my hips, grasping at the lace and slowly slides my panties down, revealing my trimmed bush and slick pussy. I step out of the wisp of fabric and hold it out to Carter. He looks at me with lust then takes the panties in his fist and brings them to his nose, breathing in my scent. So incredibly amazing, his action is ridiculously hot and makes me groan.\n\n\"You smell sweet and salty\u2014like a peach pie or something.\"\n\nReaching behind me, I undo my bra, releasing my tits fully, massaging my c-cups, and teasing my nipples. \"And I repeat, what are you going to do about it?\" I growl, need coursing through me.\n\nCarter's eyes are full of desire, but also nervousness, \"Lay down.\" He gently pulls me down to the couch then kneels between my legs, with one of my feet resting on the top of the couch, the other on the floor. \"God, Ally,\" he looks me up and down, his gaze searing into me, \"you're completely amazing. Is it okay if I touch you?\"\n\n\"I'll have to kill you if you don't.\" I need him to touch me.\n\n\"Please tell me if I do something wrong, okay?\" he says with a note of anxiety.\n\n\"Just touch me, please Carter. Plea...aaahhh\" Carter interrupts my begging by slipping his finger into my pussy. His thick digit feels different than mine, thicker, longer, rougher, and I grip it tight in my wet hole, while my toes curl.\n\n\"How is it so tight? Can I even fit my cock in there?\" Carter is fascinated and totally turned on at the same time. I can see his cock growing from the semi-flaccid state to another impressive erection.\n\n\"Fuck me with your fingers, Carter. Play with my pussy.\" I need him, I need something before I just jump on his prick.\n\nHis eyebrows raise and he licks his lips, \"What if I want to fuck you with my tongue?\"\n\n\"Ooooohhhhh. Are you sure?\" I am excited but also nervous.\n\n\"It's only fair,\" he says with a wicked grin as he lowers his head between my legs and pulls his fingers away from my hole, leaving me hollow and empty.\n\nCarter takes a deep sniff as he moves his nose all along my lips. I moan as I feel the air rush by my dampness, making me thrust my pussy towards him. \"God, Ally. It's my first time and I want to savour the moment.\"\n\n\"Well, it's my first time, too. No one's ever gone down on me before, no one's ever tasted my pussy.\"\n\n\"Really?\" Carter's bangs fall in front of his eyes and he flicks them out of the way looking so fucking hot between my legs.\n\n\"Except for me,\" I shrug.\n\n\"What do you mean?\" I know he's fascinated, so I show him.\n\n\"This.\" I dip my finger into my nectar then lick it clean. \n\nCarter's expression changes from surprise to total lust, then he put his lips down to my pussy lips, slowly parting them with his tongue. I can't believe how amazing it feels\u2014totally different from fingers or a cock, soft yet muscular, hard yet yielding and so very...intimate, like the deepest, sexiest kiss ever. I groan under his mouth as he dips his tongue into my hole and his nose prods against my clit.\n\n\"Do you like that Ally?\" He tilts his head and studies me, his chin and cheeks shiny with my juice. \n\n\"God yes, Carter. More, please, more.\" He licks his lips and moves his head back down to my clit. My lips spread, his tongue laps at my clit, sending thrills through me. I am panting and bucking and grunting with his ministrations. \"F-f-fingers in my hole.\" I manage to say as my own fingers work my nipples, squeezing and rolling the tender buds.\n\nCarter works his fingers back into my hole, first one, then two, dipping and thrusting into me. He crooks his fingers and rubs the inside of my pussy walls, his tongue grinding into my clit. I am pitching and writhing under him, his strong arms holding my legs open as I try to wrap my legs around his head, pulling him closer and tighter and harder to me. My head is spinning and my chest is pounding and my breathing is ragged, then suddenly I pitch over the edge into my orgasm.\n\n\"I'm gonna, gonna, ccuuuuuummmmm.\"\n\nMy pussy floods with juice as I spasm around Carter's fingers, and I'm sure I heard screams, and I know they're mine, but I don't even remember. My eyes are rolled back into my head and back is arched trying to get closer to the source of all that pleasure. Waves and waves roll over me and I'm shuddering as I come down from the sheer strength of my release. Relaxing back onto the couch, I am totally overwhelmed. There are tears, I'm so flooded with emotion.\n\nWhen I open my eyes, Carter is still perched between my legs studying my body, slowly stroking his stiff rod. \"Are you okay, Ally?\"",
        "\"More than okay, Carter. That was amazing.\" I give him a lazy satisfied grin. \"Do you want to...\" I motion to his gorgeous cock.\n\n\"Uhh,\" he looks embarrassed, \"can we wait until tomorrow? It's getting late and I don't want your mom walking in on us again.\"\n\n\"Yeah, I guess today would look a little bit worse than yesterday, wouldn't it?\" I wink at him, \"plus it smells like sex in here.\"\n\nAfter we get dressed, we cuddle on the couch, kissing and just enjoying each other's company, the tv playing something.\n\n\"Carter? Are you sure it was okay? I mean you wanted to stop before we...\"\n\n\"Ally, it was amazing. I just know it would take awhile since I've already cum a few times and I don't want to get caught.\" Carter thinks for a second, then gets a wicked grin on his face, \"I can tell you one thing though, if Greg gives better head than you then Paul's a lucky guy.\"\n\nI giggle and give him a playful bite on the arm. \"You'd better not ask him for a demonstration.\"\n\n\"Never. He's not really my type,\" Carter jokes giving me a quick kiss.\n\n\"Seriously, Carter. Are you okay with everything?\"\n\n\"I have you, how could not be okay?\" Then he thinks for a second, \"Except for one thing. If I can find a way, would you like to go to the prom with me?\"\n\n*****\n\nOkay, this is longer, has more story and hopefully there is just one part left to write."
    ],
    "authorname": "JaneSaysIt",
    "tags": [
        "high school",
        "mutual masterbation",
        "cum swallowing",
        "oral sex",
        "romance",
        "male virgin",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/youre-in-my-seat-pt-03"
}