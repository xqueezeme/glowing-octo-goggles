{
    "title": "The Irishman at the End of the Bar",
    "pages": [
        "The story is the continuation from my previous story, The Sorority. If you have not read that, I recommend you do for continuity. \n\n---\n\nFriday - December 12, 2025\n\n-Chase Kramner-\n\nA body was found on the roof of an eight-story condominium complex by the cleaning crew about to work on the windows in the early morning hours. The body is positioned face down, arms straight back and to the sides. It is not in a perfectly flat position, the buttocks very slightly elevated as if the torso slumped down upon death. The face is against the gravel on the roof, facing left with the left eye still open. The right eye exploded when the bullet fired at a downward angle into the skull of the victim exited. Everything in my head is screaming execution.\n\nHer driver's license we found in her pocket -- which is very strange -- gives a few pieces of information to work with. Willow Goldberg. Female, age twenty, Caucasian. Willow was rather plain looking, and that always sounds mean to say, but that is how I categorize them. Her short dyed black hair is not on her driver's license which shows a long-haired blonde girl, and neither is the neck tattoo. Her skin is unmarked when she had this picture taken two years ago when she turned eighteen. Now she has a neck tattoo of a crow with extended wings, viper fang piercings, a nose ring, and four piercings on her left ear.\n\nAwfully big change for just the two years.\n\nThe lab techs are doing their sweeps, starting with the crime scene photos of her body and the surrounding area. The blood spray is in front of her body, starting thick then becoming more like mist as it widened. The pooling of the blood spread under the gravel, creating the illusion of large rocks in a lake of red.\n\nJill is not leading the charge today, as she had her twins a few months ago, and will be on maternity leave for at least an additional month. Her and the Chief had twin girls; Piper and Lydia. Poor bastard. I have missed her expertise, but her lackies have been doing an admirable job.\n\nThe techs also dust the doorknob to the roof, and then down the railings a full floor. Not much in the prints department. Her body has not decayed much, and they chock that down to it being December, and cold as fuck up here. Not much birds or bugs to eat away at her. There was no missing person report on her, and that could mean it was a relatively recent time of death.\n\nOn the physical evidence side, I do not think we will find much. There is no shell casing that we have managed to find. We could get lucky and find the slug in the gravel, but it might have ricocheted off the roof entirely or the angle of trajectory is straight off. If this was an execution, that means it was likely a person not prone to leaving the police much evidence. Which makes the driver's license even more peculiar. There are no injuries on her body, not even defensive wounds, which means she very well could have known her killer and accompanied them willingly.\n\nI double check her driver license again, this time looking at her address. It is outside of the city, but still within the metropolitan area. It is likely her parents' home. I guess that will be my first stop after I wrap up interviews here.\n\nI send the uniformed officers on a scavenger hunt with her picture to see if anyone had seen her recently. They start at the top two floors, then move onto the first floor and begin interviewing the employees of the building. I get a radio call to come to the first floor and talk to one of the doormen. Or doorwoman I should say.\n\n\"I'm detective Kramner, I was told you recognize her?\" I ask, showing her the picture again to refresh her mind. \"Name?\"\n\n\"I don't know her name....you meant mine. Daphne Mason,\" she replies, and I pull out my small black, leather bound notebook. Daphne appears to be in her early twenties, and likely works here part time. I see a college textbook on her desk open with a laptop and notebook next to it, meaning she is a student working while going to school. I can see her potential testimony falling apart from a half decent defense lawyer just bringing up the fact she could be easily construed as distracted and non-observant.\n\n\"Date of birth?\"\n\n\"August 17, 2004.\" Damn I am good.\n\n\"Number and address?\" I ask. She provided me a dorm room at the University and her cell phone.\n\n\"You recognize her?\" I ask again.\n\n\"Yes officer,\" she starts. I am a detective, but I will let that slide. \"She lives here. I don't know what floor, but I see her come through the lobby every day. At least every day that I'm here. Using the door fob to get to the elevator,\" Daphne says, pointing at a sensor residents place a device next to that opens the door to the elevators.\n\nWillow was a resident here? That is rather shocking to believe. Willow was younger than Daphne, and was living here? Perhaps she did not live here alone. \"What does the rent here look like?\"\n\n\"None of these are rentals. Buying the condo, roughly four hundred,\" Daphne explains. Why did she know that off the top of her head? Whatever, she must have looked into it due to boredom.\n\n\"Was she ever with anyone?\" I ask.\n\n\"Not that I can recall. I have never held a package here for her either. She was typically just through the lobby and into the elevator,\" Daphne says.\n\n\"How long has she been here?\"\n\n\"I started here at the start of the semester, and she'd been here the entire time. So at least August of this year,\" Daphne replies. I thank her for her information and leave her my card in case she remembers anything.\n\nWillow's license said she lived in the suburbs, but she could have in fact lived in the building. It is an old license, scheduled to expire on her twenty first birthday in two months. Willow very likely lived with her parents when that license was issued to her. I am definitely talking to them next.\n\nI walk out of the condo and see an officer parked just outside on the street. News media is already outside -- fucking vultures -- but thankfully my Shield is clipped to my belt and under my suit jacket. Rubbernecking is already happening with horns blaring at people down the street to not gawk at the media and police presence. Across the street people are standing around, just watching the scene.\n\nI walk through the shot of a reporter and straight to the officer who rolls down her window.\n\n\"Detective,\" she says.\n\n\"Sergeant Hill,\" I say, leaning against the roof of the car.\n\nPatrol Sergeant Lauren Hill who commands the uniformed officers in patrol zone two. Strawberry blonde with hair pulled behind her head in a tight bun with glasses over her metallic blue eyes. Beautiful without makeup, and the outlines of her body even under her uniform are apparent. Let me spell it out, big o titties with other curves to match. Athletic curves, not that body positivity with a side of diabetes nonsense.\n\nGreat looks and body aside, she is a Sergeant, and she likes to remind others at every opportunity. Sergeant Hill is a dedicated and decorated officer and has been for the last seven years. Some of the more senior guys tell me she reminds them of Jill when she was in uniform. The same no-nonsense attitude and by the book procedural officer who still knew when to lighten up just enough to form relationships and network. She even took the detectives exam a few days ago and the precinct is eager for the results.\n\n\"Need something?\" Sergeant Hill asks.\n\n\"Address lookup,\" I say and hand her my notebook. She runs her finger down the leather binding with a smile, then looks at the address from Willow's license.\n\n\"Give me a sec,\" Sergeant Hill says, typing in the address on her squad car's computer, then hands the book back to me.\n\n\"Address is the claimed residence of Clifford and Savannah Goldberg,\" Sergeant Hill says once the results come in. \"Willow Goldberg their daughter?\"\n\n\"Looking like it. Didn't want to waste my time before I drove there. Thanks,\" I say, tucking my book into my jacket inner breast pocket and walking toward my car. I look over my shoulder, and I can see Sergeant Hill is leaning over to watch my ass leave.\n\nI call up Detective William Kaiser to let him know I am at the car waiting for him. The Kaiser comes out of the condo a few minutes later, him wearing his badge over his neck on a lanyard, and he is immediately swarmed by the press.\n\n\"Detective, what can you tell us about the murder upstairs?\"\n\n\"Who is the victim?\"\n\n\"Are there any suspects?\"\n\n\"When will the police department make an official statement?\"\n\n\"I am not authorized to answer questions at this time, if you want information contact our media liaison office, thank you,\" The Kaiser says and pushes his way past them and quickly ducks into my car. I pull away from the curb and merge with traffic, and the media disengages once we do.\n\n\"Fucking vultures,\" The Kaiser says, mimicking my opinion of them. He then tucks his shield into his shirt. \"Now I know why you wear it on your belt.\"\n\n\"That address, should we take eastbound or go north first?\" I ask, reaching into my pocket and handing him my book.\n\n\"East, you'd have to drive through a few bumble fucks otherwise.\" The Kaiser replies. I make my way to the interstate, hoping the snow does not flurry up to horribly on the drive.\n\n--\n\nThe drive to the suburbs -- a nice little town called Blue Valley -- takes us a little less than a half hour before we pull up to a quaint two-story house with a small porch and a snow-covered lawn. When we were halfway, I had The Kaiser call up the local police so they could be present when we tell them. When I must leave the city to investigate, I also give the locals a heads up. It is just the polite and professional thing to do.\n\nA squad car is already outside of their home when we arrive, and we all exit our vehicles at the same time.\n\n\"Detective Kaiser?\" He asks me, but I shake my head and The Kaiser introduces himself. He shakes his hand then turns to me. \"Sergeant Haskell.\" A portly officer with a rather impressive moustache. Maybe I will grow mine out.\n\n\"Detective Kramner.\"\n\n\"Thanks for letting us know you're here, city don't normally give us a heads up when their officers are around,\" Sergeant Haskell says. I am a Detective.\n\n\"Just so you're aware, we're informing next of kin,\" I say, and he nods in understanding.\n\n\"Worse part of the job.\"\n\n\"Aint that right,\" The Kaiser says, and moves toward the porch of the house first. He walks across the shoveled driveway and then cuts across the walkway. Three steps up the porch and then he rings the doorbell. We all stand quietly at the door for less than a minute before we see eyes peer through the window on the side of the door.\n\nI hear the chain slide off and a deadbolt snap. The door is opened by a middle-aged man dressed in a long-sleeved button up shirt that is tucked into his jeans without a belt. I will let Sergeant Haskell start the conversation.\n\n\"Evening Mr. Goldberg, these two detectives are from the city?\" Sergeant Haskell begins.\n\n\"What did she do?\" Clifford asks before he says anything.\n\n\"Is your daughter Willow Goldberg?\" I ask.\n\n\"Yes, what did she do?\" He asks again. Clifford does not seem the least bit surprised officers are here to discuss his daughter. This may not even be the first time.\n\n\"May we come in?\" I ask, and Clifford nods while looking almost annoyed and leaves the door open as he walks inside. I let The Kaiser in first and follow in behind Sergeant Haskell. I close the door behind me, and hear Clifford offer us water or coffee. We all politely decline.\n\n\"If she needs to get bailed out, I already told her I am not going to ever do that. I'm not funding her behavior,\" Clifford says, assuming we know anything about what she was like before. \"Is it drugs?\"\n\n\"Sir, I'm not a narcotics detective. I'm a homicide detective,\" I say, and his entire demeanor sinks. He looks between all three of us, pausing on his local officer for the longest, before Sergeant Haskell nods to him.\n\n\"Did she kill someone?\" he asks. What makes this question worse, is that it was his best-case scenario. If she killed someone, it meant she was still alive at least.\n\n\"No,\" I reply, and I know I do not have to finish that statement. \"Sir we're here to inform you, she's dead.\" We are told not to euphemize when we inform next of kin.\n\nClifford opens his mouth to speak but tries to breathe at the same time and gasps. His hand jumps to his mouth, and now I can hear his breathing. His eyes turn red trying to hold back his tears, and a few drops escape when he blinks. He looks away from all the other men in the room and leans against his table.\n\n\"How?\" Is all he can muster to ask.\n\n\"Gunshot,\" I reply.\n\n\"Do you know who?\"\n\n\"We have no suspects as of now, and this is still an active investigation. I am already bending rules of disclosure,\" I say, just to let him know we are not withholding from him and we are taking it seriously. Quite frankly I have nothing to withhold from him.\n\n\"If you're able sir, we need to ask you a few questions regarding your daughter,\" The Kaiser says, and Clifford does not seem to be getting himself under control. He leaves the room and I hear what I will assume is a bathroom door shut.\n\n\"I hate this part,\" The Kaiser says, inhaling deeply and releasing a hard exhale.\n\nIt takes a half hour for Clifford to compose himself. He calls his wife and asks her to come home but does not explain why. He just tells her to get home as fast as possible. We wait to begin formal interviews until Savannah Goldberg arrives as well. When she arrives and sees police officers, her first assumption was like her husband's; Her daughter must have gotten into trouble. One look at her husband shattered that assumption. We had to wait an additional twenty minutes, and even then, Savannah excused herself because she could not handle it at this moment.\n\n\"When we arrived, you ask what your daughter did. Why? You didn't seem surprised a police officer showed up,\" I start, Clifford looking at the table and nodding.\n\n\"She was a good kid,\" Clifford said, already choking up again. He had an emphasis on the 'was' that caught my ear.\n\n\"When was the last time you saw her?\" I ask.\n\n\"About a year ago. Last Christmas actually. She needed money. She always needed money. Every month, then every week. I finally had to say no. Savannah would give her something, but I had to stop her as well. We needed a united front,\" Clifford said, then looked up at us.\n\n\"What did she need money for?\" I ask.\n\n\"Drugs,\" Clifford bluntly replies.\n\n\"When did she start using and what?\" I ask.\n\n\"Cocaine. I can't be sure when though. Not long after she met him,\" Clifford replies, as if we know who 'him' is.\n\n\"Who did she meet?\" I ask.\n\n\"I never knew his real name. That's what every father wants. His daughter to come home with a guy named 'Screwball',\" he says, shaking his head. Just thinking of that guy made his fist curl and his lips purse.\n\n\"You think he got her hooked...\"\n\n\"...I know he did,\" he interrupts, \"He looks the part.\"\n\n\"Description?\"\n\n\"White, tall, six feet and change. Leather vest with tattoo arm sleeves. Piercings. He looked like a punk,\" Clifford summarized.\n\n\"Any tattoos stand out. Distinctive?\"\n\n\"All arm sleeves look like a blob of shit,\" he says, so I drop that.\n\n\"Do you know where Screwball is?\" I ask.\n\n\"I haven't seen my own daughter in a year,\" he says, now getting angry.\n\n\"Sir, I need you to answer the question,\" I say, and he breathes and nods.\n\n\"Sorry. No. No I don't,\" he answers after calming himself.\n\n\"What did your daughter look like last year?\" I ask, and he looks rather confused. \"Her driver's license looks unlike the way we found her. What did she look like when you last saw her?\" I do not say how she looked. I do not influence his answer by telling him what I now.\n\n\"She had cut her hair short, and had dyed it black,\" he replies.\n\n\"Tattoos, piercings?\"\n\n\"I don't recall a tattoo, but she had a nose ring she didn't have previously.\" I believe he would mention the viper fangs. Her dyed hair is a year old and the tattoo is more recent than that.\n\n\"Did you have any sense your daughter was at risk?\" I ask.\n\n\"Every damn day. Not like this though,\" he says. Clifford had not spoken to his daughter in a year and when he did, she had a drug problem, a boyfriend named 'Screwball', and always had a need for money. Of course he was worried. \"I was almost glad when you showed up. Maybe I'd get to find out where the hell she was.\"\n\n\"Do you know where she met Screwball?\" I ask. That is a question I never thought I would ever ask someone.\n\n\"The city. Willow is very...was...\" Clifford starts, and I hear him suck through his narrowly open mouth. He swallows down his grief long enough to continue. \"Was...was, um...very into theater. Musicals she had a particular interest in.\" I can tell using past tense words in sentences describing his daughter is taking its toll. I want to stop here, but I need to push him a little more.\n\n\"Her junior and senior year she played the lead roles in her school drama productions. Sandy in Grease and Tracy in Hairspray. They actually put her in a fat suit for the role,\" he says with a tearful laugh. \"She said it was weird she got the part of Tracy because she herself is a lyric-soprano and the role should have gone to a mezzo-soprano. I just nodded because I had no idea what she was talking about.\" Neither do I.\n\n\"They're singing voice categories based on octave ranges. If she could do both of those roles, that would put her range roughly between A three and D six. That's a four-octave range,\" The Kaiser explains, and I cannot believe he just did.\n\n\"Is that good?\" I ask, more out of a weird curiosity.\n\n\"That's Freddie Mercury good,\" The Kaiser says, and her father smiles a little.\n\n\"She was a very good singer. When she graduated, she went to the city to study theater,\" Clifford says, then his smile dissipates, \"Shorty after is when she met Screwball.\"\n\n\"What school?\" I ask.\n\n\"Ester Heminges Academy of the Arts,\" he replies. Never heard of it, but I do not need to in order to investigate it.\n\nAll I wanted out of this conversation was a few leads, and I feel that has been accomplished. Screwball is obviously a street name, and it is possible the gang database could have information on him. I will have to ask Narcotics as well, see if the name rings a bell.\n\n\"If you can think of anything else that may help, regardless of how remotely, give me a call,\" I say, handing him my card which he takes with a nod. We all stand up from the table at the same time, and Clifford escorts us to the door to see us out.\n\nThe Kaiser, Sergeant Haskell and I walk back in our previous footprints to the cars on the street.\n\n\"I'll have some of the local officers ask around the neighborhood, see if anyone has seen suspicious activity around the family,\" Sergeant Haskell says, and I thank him for offering to do that. Willow's killer could have come around to gather information. I have seen smaller details break cases.\n\n\"Have a safe drive Detectives,\" the Sergeant says before leaving in his squad car. The Kaiser and I take our seats in the car, and I turn the heat on to warm ourselves up.\n\n\"How did you know that?\" I ask, and The Kaiser looks at me.\n\n\"Know what?\"\n\n\"About singing,\" I specify.\n\n\"Oh. Becky put Ursula into music lessons. When I get her for the weekend, I have the pleasure of listening to her practicing the entire time,\" The Kaiser explains. Becky is his ex-wife who divorced him a few years ago and Ursula is his ten-year-old daughter.\n\n\"What's her octave range?\" I tease.\n\n\"If nails on a chalkboard is an octave, ten, one for each finger.\"\n\n--\n\nIt is a little after one in the afternoon when The Kaiser and I return to the precinct. The condo has already provided us the security recordings for the building's lobby and the exteriors. There are no other cameras. They also provide the window cleaning schedule which is done once a week on Fridays, and the records of deliveries made to residents.",
        "The cleaning crew called the police at eight in the morning and had not been to the roof since eight in the morning on the previous Friday. There was minimal decomposition, and no one reported any gunshots. Traffic below combined with elevation and the soundproof windows of the building could explain this, but I am still surprised not even a report was filed. The use of a silencer is not an explanation, because silencers are not silent. They only lower the decibel of the shot to below what causes hearing damage. All in all, a gun with a silencer still sounds like a gun. They are more accurately called suppressors.\n\nThis will be a difficult timeline to build. I start with what I can confirm; Friday to Friday. Big timeline, but we will get there.\n\nI task the officers with cross referencing the list of tenants with firearm registrations. Other officers I assign to sit with the video footage from the last week to let me know who was coming and going, and more importantly, if they can identify Willow as one of them. My job for now will be to learn something about Screwball. To conduct that I must utilize our local and state gang database.\n\nThere are five known gangs in the city, and three of them are street gangs. We are host to a chapter of the Latin Kings, another rival Latino gang with Venezuelan roots called the Caracas Conquistadors, and a biker gang called the Fat Bastards. They are literally a bunch of fat guys riding motorcycles, though they are more of a nuisance than a threat. They are only on our radar because one of them was rolled up for dealing marijuana, but that was more likely a private entrepreneurial effort. The other two groups are not classified as street gangs because we do not know enough about them, and they do not make any overt claims over what their territory or turf is. These two behave more like the gangs of old and have links with more organized criminal enterprises like the traditional mafia or mob. The group with Greek roots called the Argonauts, and The Irish group simply known as The Bar.\n\nI spell Screwball with and without a space, and come up with a partial match for Screwy, Screw You -- personally I think this was a cop being a dick and just writing the response to the question 'do you have a street name?' -, Screw Top, and my personal favorite Screwg McFuck. No Screwball however.\n\nJust because he is not gang related, does not mean he is not drug related. Time to talk to Narcotics on the sixth floor.\n\nI stand up and look around to see what everyone was working on. The Kaiser is digging through Willow's credit history, or lack thereof, and trying to make sense of her accounts. Sergeant Leonard Sweeney is the acting Lieutenant for Homicide Department seeing how Lieutenant Queen is now Captain Queen and running the entire Division of Investigations. Leo is doing whatever it is Lieutenants do, maybe I will figure that out one day. I have one officer watching video and another going through delivery logs of the condo. Everyone is busy and I should be too.\n\n\"Will,\" I say to The Kaiser, who turns to me from her finances, \"I'm going up to Narcotics, see if the name Screwball is on their radar.\"\n\n\"Okay, but we need to talk about her finances when you get back,\" he replies.\n\n\"Why, what's up?\"\n\n\"I crunched some numbers and a mortgage for one of those condos, is about eleven hundred a month give or take a few hundred. Her finances had to have been very liquid or someone else was keeping the lights on. That's a big cost for a college student.\"\n\nI lean down and watch him point several things out to me. Firstly, her current account that we know about has never had more than five thousand in it and is only a year old. There is no history to suggest a mortgage sized monthly bill. Her last activity on it was a month ago.\n\n\"We need to find out who was paying her bills, because she sure as hell wasn't,\" I say, and The Kaiser nods to agree. \"And to do that we need to know which condo she lived in. Anything on that?\"\n\n\"The uniforms are still interviewing people, but they should be done in about an hour. Go talk to Narcotics we'll compare notes when you get back,\" he replies.\n\nI walk out of the homicide department office and step into the elevator just before it closes. I press my keycard to the sensor and press six. The doors open on the sixth floor a brief time later, and I step off to see a directory immediately on the wall across the hall from the elevators. Narcotics and Violent crime were on this floor. Violent crime investigates all other violent crimes that are not homicides like rape and gun related offenses. Narcotics was to the left, so I pivoted and started down the hall.\n\nNarcotics office is nicer than homicide and had three doors to choose from. The department in general, and a private office for both the Lieutenant and the Sergeant. I would not mind my own office. This is not really a question to bug the leadership with, so I take the door for the department and enter the main office for Narcotics.\n\nNarcotics department has a massive whiteboard at the end of the room that nearly takes up the entire wall, nestled between two windows. I love whiteboards. Four desks are in the space, each with a laptop and monitor, and all were immaculate. I feel like if I used a measuring tape, their distance from each other and the walls would be perfectly uniform. Three are for the detectives and another is for the officers.\n\nThe room was also empty. What the hell?\n\n\"Can I help you?\" a voice says, and I turn to see a woman behind me. I see her detective shield on a lanyard, and that she is the department Sergeant. The woman is half a head shorter than me with short curly hair that moved like brown springs experiencing gravity. Low cheek bones that seemingly push her mouth out, giving her a semi-permanent pucker and making her lips appear bigger than they really are.\n\nBusiness casual was the look she is going with. Her makeup routine is a little foundation and some eyeshadow. White pearl earrings with a matching pearl necklace that hangs above her breasts. Her jacket is a black and white, ashy colored herringbone knit. I am normally good with brands, but I am also admittedly better with mens clothing. Under the jacket is a white Kobi Halperin top with no collar or buttons. Capri styled black pants from Express. Her shoes are the most economical piece of her wardrobe; a pair of London Rebel black block high heels.\n\n\"I am hoping to talk to someone in Narcotics,\" I start, and remember her shield says Sergeant. \"Sergeant.\"\n\n\"Cut that Sergeant shit out,\" she says, holding her hands in front of her and shaking them a little. \"Helga's fine. Detective Texada is the fanciest I go.\"\n\n\"Detective Kramner. Or Chase,\" I reply, and we shake hands. A good solid grip, but it does not feel exaggerated.\n\n\"You're the one who got stabbed a while ago, right?\" she asks.\n\n\"Unfortunately, yes,\" I reply. That really sucked.\n\n\"The rest of my guys are at the range, but come on in,\" Helga says, leading me to her office across the hall and keeping the door open. Her office is just as clean as the other one. Neat file organization, no clutter, in and out box is under control, a lovely pot with four sunflowers is on the corner of the desk, and the room has the welcoming scent of vanilla from something I cannot immediately see.\n\n\"How can Narcotics help you?\" Helga asks, putting her jacket on a coat rack in the front corner of her office near the door before sitting on her chair. I remain standing and lean against the chair in front of her desk. I can now smell a mixture of sulfur and gun oil immolating from her jacket, overtaking the vanilla. She did just come from the range.\n\n\"I need help in identifying a potential suspect, and all I have is a street name. Screwball,\" I say, and she laughs a little.\n\n\"Description?\"\n\n\"Caucasian, over six feet, punk rock looking with piercing and tats...\" I begin.\n\n\"...Garfield Booth,\" she interrupts. Damn, that was easier than I thought.\n\n\"Wait, really?\"\n\n\"Garfield Booth, street name Screwball. He's a known dealer with a revolving door of arrests. I've booked him twice myself,\" Helga explains.\n\n\"How does he keep getting out?\"\n\n\"He's not stupid. He always gets a lawyer and there is always a discrepancy somewhere. We didn't read him Miranda Warning, warrantless search, you name it. If you got time, I know a few of his deal spots,\" Helga offers, and I nod.\n\n\"He's my suspect, anything to find him,\" I say, Helga rising from her chair and grabs her coat from the rack. \"Can I borrow your desk phone real quick?\"\n\nHelga says I can, so I dial in The Kaiser's desk and wait for him on the other end. \"Homicide, Detective Kaiser.\"\n\n\"Hey it's me. If you get the call from the officers at the condo before I'm back, just go without me. I got a lead on Screwball that I'll be investigating with Sergeant Texada from narcotics,\" I summarize so I can get moving.\n\n\"Okay, I'll let Leo know,\" he says, and we both hang up.\n\n\"Let's do it,\" I say, and Helga leads the way.\n\n--\n\nScrewball's first two deals spots are a bust. The first just around the corner from a half-way house on the westside, and the second was a dilapidated church a few blocks from there. Our third stop is where a majority of the homeless in the city stay in the southside. A few fires in steel drums were lit with several people gathered around each. The area is the square between three abandoned buildings, roughly half the size of a football field. There is what was likely a basketball court, but even the polls had been taken and the fence encasing it was largely destroyed.\n\nWe exit the vehicle and stroll to the square, several homeless leaving as we approached. Some just evaded our eyes and others did not even seem to notice us. I am scanning around the area for my suspect, and it turns out he is here today. Screwball is finishing a transaction, his customer pocketing what I will assume are drugs. I cannot see his arms sleeves because of his jacket in the cold, but I can see them on his neck and his piercings are notable.\n\n\"Got a minute Garfield?\" Helga asks, and he looks up to see the two of us approaching him. He pauses for a moment, and then bolts.\n\n\"God dammit,\" I mutter and chase after him. Screwball cuts into the alley and dumps trashcans in my path as he runs. I jump over them rather easily and start to gain on him before he exits the alley and starts cutting through traffic.\n\nA car slams on the brakes to avoid hitting him, and I dart around the back end to cut him off. He sees me doing it, so turns and runs the opposite way, so I pivot and pursue. Screwball looks over his shoulder as he runs to see me and does not see Helga pull the car in front of him. Before Screwball can react, the hood takes his legs out and he slides across and crashes to the pavement on the opposite side.\n\nHelga steps out of the vehicle and squats next to Screwball, tilting her head to look at him directly. \"Was that really necessary?\"\n\n\"I didn't do nothing,\" Screwball says, before I cuff him on the ground and shove him to the side of the car. I search his pockets and find several individual bags for methamphetamine and more for cocaine.\n\n\"Possession with intent to sell is nothing?\" Helga asks, and he sighs and bangs his head against the hood of the car. \"You have the right to remain silent. Anything you say can and will be used against you in a court of law. You have the right to an attorney. If you cannot afford an attorney, one will be provided for you. You can decide at any time to exercise these rights. Do you understand your rights as they have been described to you?\"\n\n\"Yes, and fuck you.\"\n\n\"I knew you would. Surprised you haven't gotten them tattooed on your face,\" Helga replies, before throwing him into the back of the car.\n\n--\n\nScrewball asks for his lawyer immediately, so now we must wait for the public defender to show up. A woman finally arrives, briefcase in hand and walks into the interrogation room I unlock for her. By law the cameras and microphones are turned off, so I have no idea what they are talking about.\n\n\"You weren't kidding, he lawyered up fast,\" I say to Helga as we wait for the lawyer to be ready for questions.\n\n\"Like I said, he's not stupid,\" Helga says.\n\nFive minutes later they are ready for questions. I enter the room, undoing the button of my jacket before I sit, while Helga crosses her arms and leans against the door. Is she really trying to play bad cop?\n\n\"I have been made aware my client was needlessly harmed in his apprehension,\" the public defender begins.\n\n\"Fleeing police is a crime, and he ran into my car. Want the dashcam footage?\" Helga asks. Her car does not have a dashcam, but I understand the bluff.\n\n\"I would love it,\" the public defender replies. This might be bad, a public defender who will fight a little. Normally they just start cutting deals the moment they arrive.\n\n\"My client was minding his business when he was approached by police who failed to identify themselves as police. In that neighborhood you could never be too careful.\"\n\n\"Garfield, did you really not know who I was?\" Helga asks, getting frustrated and moving to take the seat next to me.\n\n\"He is under the advisement of his lawyer to not answer that question.\"\n\n\"Hey, lawyer. He's got a rap sheet the length of my arm and I am the arresting officer for four of them. I think he'd remember the cop who arrested him four times.\"\n\n\"He is under the advisement of his lawyer to not answer that question.\"\n\n\"Front flipping fuck, are you capable of saying something else?\" Helga asks.\n\n\"Yes,\" the lawyer replies, very matter of fact. She is good. That is a perfect answer. We are not dealing with a just graduated lawyer. She is experienced, and she knows what she is doing.\n\n\"Like what? What can you say?\"\n\n\"Frankly detective, I am not the one you're interviewing. I will not answer questions directed at me and I will advise my client to answer, or not answer, as the questions come.\"\n\nThis lawyer is playing Helga like a fiddle. Before she says anything more, I touch her arm. She turns to me, and I let her know she should tag me in.\n\n\"Let's be real for a moment. There is no dashcam,\" I say, and Helga looks like she wants to punch me. Her body language does at least, her expression does not change. \"But you fled two detectives, one of whom there is evidence it is more than reasonable you knew her as being a police officer. Good luck claiming excessive force with no wounds, and really good luck claiming warrantless search to make the quarter pound of meth and cocaine inadmissible.\"\n\n\"Are you going to ask a question?\" The lawyer asks.\n\n\"No. I am just telling you, innocent is not your ideal plea. Especially when you're likely to draw Judge Gilreath. He's very by the book and lost a son to drug gang violence,\" I say, and watch the lawyer. Now she is the one who is nervous. She was hoping to make us drop the charges by ramming through a few complaints and minor technicalities.\n\n\"If you tell me what you know about Willow Goldberg, we'll drop most of the charges, but you plead guilty to possession for personal use of cocaine.\"\n\n\"What about the meth?\" Screwball asks, and I swear I saw his lawyer's eye twitch holding back a scream. Thank you for admitting to possession of meth dipshit. That is why the fifth amendment is your best friend.\n\n\"What meth? You found it in a bush and I believe you. Like I said, cocaine, and Willow Goldberg.\"\n\n\"Why do you want to know about Willow?\" Screwball asks. His lawyer not sure yet if he should or should not answer. By that I mean, not sure if he should even confirm he knew her at all.\n\n\"Because she was shot in the back of the head,\" I reply, and his eyes widen in shock. He did not know a thing. His lawyer snaps.\n\n\"I need a minute with my client.\"\n\n\"Of course. That offer is on the table from now and until I come back,\" I say, and leave with Helga, closing the door behind us. Helga paces for a moment, trying to form words, her mouth opening twice and closing, before she finally says something.\n\n\"Are you a fucking lawyer or something?\" Helga asks.\n\n\"Almost. I was even accepted to Yale Law,\" I reply.\n\n\"Bullshit,\" she says, and I smile. \"You're for real. Damn. Garfield wins the public defender lottery and I get an almost lawyer. I think he might take the deal. You'd be the first cop to ever get him on anything.\"\n\n\"I just want information on my murder victim,\" I clarify.\n\n\"You get me a conviction on Garfield, and you can have whatever you want,\" Helga says, not trying to hide her enthusiasm of finally nailing this guy. Lock that enthusiasm down, act like a detective please.\n\n\"Detectives,\" the lawyer says from the door, and then we all enter the room and sit down again.\n\n\"My client agrees to the plea deal. He is aware the quantity of the illicit substance found on his person is a third-degree felony and carries a maximum sentence of eighteen months. However, he will say nothing else until someone from the District Attorney's office meets to make this deal in writing,\" the lawyer says.\n\n\"Understood. Is your client aware failure to uphold his agreement of providing information to aid in a murder investigation will terminate the agreement and leave him at the mercy of the courts with full charges?\" I ask. I want him to be painfully aware of what giving me bullshit will do.\n\nScrewball looks at his lawyer and nods, and she turns back to me. \"He is aware.\"\n\n\"I'll get a DA representative here as soon as possible. Can I get either of you a beverage?\" I ask.\n\nGarfield leans over to his lawyer and whispers into her ear. \"Coffee...\" he leans back and whispers more. \"...cream, no sugar.\"\n\n\"We'll be back,\" I say and stand to leave. Helga joins me, and we leave Garfield alone with his lawyer again. \"Technically he's a Narcotics arrest, you want to call the DA?\"\n\n\"I got it, you get the coffee,\" Helga says, and she pulls out her phone to call the DA and I head to the nearest breakroom to get coffee for this asshole.\n\nWithin the next hour, one of the assistant DAs is hammering out the details of his agreement, which includes a reduced sentence with no prison time. Twenty-four months of probation with monthly drug tests. If he violates his probation, he will be in prison for no fewer than two years. Helga could not even be in the room because she is so giddy, maintaining a professional demeanor was impossible. After he signs the deal, he is ready to talk about Willow.\n\n\"When did you meet Willow Goldberg?\" I ask, Screwball waving off his lawyer and then looking at me.\n\n\"About two years ago, but I haven't seen her for months,\" Screwball replies.\n\n\"Give me your best dates,\" I ask. His eyes roll to the side and look at the ceiling. Looking up is recalling information, so he is trying to remember.\n\n\"August of twenty-three is roughly when we met, and I haven't seen her since February of this year.\"\n\n\"Where did you meet?\" I ask.\n\n\"Theatre school. We were both students at Heminges Academy,\" Garfield says, and I find that interesting. Garfield Booth was a thespian?\n\n\"I wouldn't peg you as someone there for a love of theatre,\" I say as an indirect question.\n\n\"I actually did like some of it, but I was mostly there for all of the impressionable barely legal pussy, and there was plenty of that.\"\n\n\"She was the new, vulnerable freshman to take advantage of?\" I ask.\n\n\"Vulnerable is not a word I would use to describe her. It was her 'I have nothing to learn' attitude that made the school so difficult for her. Thought she already knew everything there was to know. Vocally she was unmatched, but when she was given a side role, and then put on reserve to supervise production, she had a fit and was kicked out. That was when I offered my services. I had never seen someone take to powder with such gusto.\"\n\nWillow had something of an attitude problem if he was to be believed, and I think he is to be believed. She was the kind of person that could piss someone off. Could she really piss someone off so much they take her to the roof of her condo and put a bullet in the back of her head? It could be drug related, but debts would not typically be handled this way because how would you get paid?",
        "\"Were you just her dealer?\" I ask.\n\n\"Complicated. What do you call someone who snorts a line off your dick before you nut in her mouth?\" Screwballs asks. Too much information asshole.\n\n\"You tell me. You met her folks.\"\n\n\"So we could rob them,\" he specifies. I probably should have seen that coming. Also thanks for admitting to theft. \"Around February, I found her stealing my stash, not for personal use. That's when I sent her out on her ass. She started getting supplied on the south side, which is Irish territory, and eventually her habit costs more than she could bring in.\"\n\n\"Irish?\" I ask.\n\n\"Yeah, The Bar. Pretty little thing like her, they put her ass to work to pay it off,\" Screwball says, with a tone of 'if you know what I mean'.\n\n\"If you stopped contacting her in February, how would you know?\" I ask.\n\n\"When I saw her on the corner, I had to pay for my hour. I even paid extra to bring a few friends. All of us came in every one of her tight little holes at least twice.\" His lawyer twitches again when he confessed to soliciting prostitution.\n\n\"What a gentleman,\" I say sarcastically.\n\n\"Bitch stole from me, so I got my money's worth.\"\n\n\"Do you know who would want her dead?\"\n\n\"A client, some of the Irish, hell if I know. I'm not glad she's dead, honestly I kind of liked her. I at least liked fucking her tight ass, but not happy she's dead,\" Screwball says. He is a guy I would beat the shit out of under normal circumstances, but I do not believe he is lying.\n\n\"When you say the Irish, is that some monolithic enterprise?\" I ask.\n\n\"Not really. The Bar is four big families. The Donnelly's, McCoy's, Lafferty's, and the Flannery's.\" Our database does not have this information.\n\n\"Which one did she owe?\" I ask.\n\n\"When you found her, did she have a tattoo of a bird somewhere on her. Likely her neck?\" He asks.\n\n\"A crow,\" I reply, and he laughs. \"What?\"\n\n\"It's not a crow. It's a Raven. She was the McCoy's pussy,\" he explains.\n\nThankfully I think I got what I need so I can finally stop talking to this dickhead. I do not consider him to be a suspect, and I have such a wide time of death window asking him to verify his whereabouts is almost meaningless.\n\n\"I'm done with him, he's all yours,\" I say, and leave the interrogation room so Helga can get what she needs out of him. I suppose she did not need anything more herself because she followed me out. He was now at the mercy of the DA.\n\n\"Congratulations, you metaphorically hammered shit to a wall,\" she says.\n\n\"I don't think he has anything to do with my case, but I think I am on the right track now,\" I say, and she shrugs.\n\n\"Good luck with the case, and thanks for letting us finally get that slimy shit. Homicide ever needs a favor, Narcotics will answer.\"\n\n\"I'll remember that. Nice working with you,\" I say. We shake hands and I walk to the elevators and ride back up to my floor.\n\nLeo is in the lieutenant office, doing lieutenant things, and The Kaiser is at his desk looking over some information on Willow.\n\n\"Anything?\" I ask.\n\n\"I got tired of waiting for something to happen, so went to her theatre school. Found out she got kicked out in less than six months because she was kind of a bitch, but nothing more than that. The officers think they found which condo was hers, and I'm just waiting for the judge to get back with the warrant so we can verify that,\" he says, and his laptop pings. \"Warrant approved.\" He says, pulls the warrant off the printer and begins putting on his jacket. \"How'd Screwg McFuck go?\"\n\n\"I would pistol whip him if I wasn't a cop, but he's not our killer. Turns out Narcotics had a raging hard on to get him on something for years, so now they're licking our sack in gratitude. His information was interesting though. I'll fill you in on the ride over.\"\n\nI give Leo a heads up on where we are going as I put my own jacket on, and The Kaiser and I leave for the condo.\n\n--\n\nFriday -- December 12, 2025\n\n-William Kaiser-\n\nWhile Chase is running down a different lead looking for this Screwball guy, I continue to dig through Willow Goldberg's financial history. There are so many red flags in it I do not know where to begin.\n\nFirst, she has almost no credit history at all. She scores in the two hundreds and has only had one credit card for a few months she maxed out and never paid. Her account has more cobwebs than money, and the billing address is her parent's house, not the condominium. None of her addresses are the condominium.\n\nI have done the math on the average monthly payment for the estimated value of the condos, and her account shows nothing like a monthly transaction for a mortgage payment. She would not be able to make a single payment with her current funds. There is no evidence of a transaction of any payment. Not car, insurance, cell phone, cable, or internet. Nothing.\n\nWillow Goldberg clearly had a benefactor of some kind. A sugar daddy perhaps. The condo probably will not be in her name.\n\nThat is not even including her arrest history. About eight months ago she was arrested for possession of cocaine. Lawyer must have gotten her off because the charges were dropped, and I doubt she could afford the lawyer. Her mugshot looks identical to how we found her today with her short-dyed hair and tattoo on her neck.\n\n\"Detective, I think I got her,\" I hear from a desk over. One of the officers watching surveillance footage of the front lobby calls me over. The officer is maintaining a running log of lobby entries and exits as he watched. I asked them to start from today's footage and work backwards, so we can close the window of time of death as accurately as possible. On the screen paused is a figure matching Willow's features passing through the lobby and to the elevator at 13:30 on Wednesday the tenth.\n\n\"That's her,\" I say and see she is alone and does not loiter in the lobby. She is straight through and in the elevator. I see she gets in alone, and I try to see the number above the elevator doors. It is too blurry.\n\n\"You logged everyone coming in between time of discovery and here?\" I ask to clarify.\n\n\"I have to finish the day, but that is what I have been working on. However, something weird happens on Thursday night,\" he says, and opens a folder on the desktop and plays the footage from yesterday. He scrubs the video, and I do not see what he sees.\n\n\"What am I looking at?\" I ask.\n\n\"Look at the time stamp,\" he says and plays it back again. The time stamp on the top right of the video abruptly jumps from 19:34 to 19:57.\n\n\"The hell?\" I ask.\n\n\"Twenty-three minutes of footage is gone. I called over to the facility manager, they had to run a software update which knocked out the security system when it rebooted.\"\n\n\"That's a hell of a coincidence,\" I say, and I am not sure if it is or is not. Why then?\n\n\"It might actually be one. They perform this update every Thursday night because it is the lowest traffic time of the week usually. Compared to Friday and Wednesday, so far that is holding up. Thursday averages roughly twenty percent less foot traffic.\"\n\nI will go off the idea the killer knew this for now. Under this assumption our window of murder went from a week to twenty-three minutes. This only leaves one question; how did the killer know about this software update?\n\nMy desk phone rings as I watch the video again, but I leave the screen after two rings and answer. \"Homicide, Detective Kaiser.\"\n\n\"Detective, this is Sergeant Hill at the condo, we think we know which one belonged to the victim,\" her voice says over the phone. Awesome.\n\n\"What do you got?\" I ask.\n\n\"Unit 804. The occupants of 801 and 803 identified her as their neighbor. Do you have further instructions?\" She asks.\n\n\"Keep a presence to secure the crime scene and the apartment until we can get a warrant pushed through,\" I say, and write down the unit number to write it up and get it to a judge as soon as I can.\n\n\"Isn't there a crime scene exception for fourth amendment?\" Sergeant Hill asks. Valid question.\n\n\"The roof is the crime scene, not the condo, and I have no reason to believe she is the legal owner of the condo itself,\" I respond, and she understands.\n\nI finish writing up the warrant using a shell document. I am rather broad in the specifications of what we are searching for, because I will not know until I get there. Evidence that the condo was the residence of Willow Goldberg is my starting point. Leo signs off on it and now I have to find a judge who can sign it. My options are Judge Gilreath, Judge Davenport, Judge Rook, and Judge Bergman. In the past I have typically used Judge Rook first, so call over to her office and get in touch with her clerk.\n\n\"Judge Selene Rook's office,\" her clerk says when I call. A male with a younger voice, likely his first clerkship.\n\n\"This is Detective Kaiser, is the judge available to review and sign off on a warrant?\" I ask, getting straight to the point.\n\n\"One second, can you hold?\" He asks, and I inform him I indeed can. I get a static sound for about a minute before I hear a connection click.\n\n\"William?\" I hear Judge Rook say.\n\n\"Afternoon Judge, can I request for a warrant sign off?\" I ask.\n\n\"You certainly may. Send it to our inbox like always, I'll review it and give it you by within two hours. While I'm waiting for it, what case is it?\" She asks.\n\n\"Willow Goldberg murder case. We have good reason to believe she lives in the condominium, and we need to search her apartment to continue the investigation,\" I inform her. She says she understands, and she'll try to get it back to me within two hours. She is taking the warrants as they come in and cannot just move mine to the top of the stack.\n\nWe exchange pleasantries and hang up, officially leaving me with nothing to do. Chase is running down his lead and I have exhausted mine for the time being. I guess while I am waiting, I could head over to the theatre academy and asks some questions. I think I will as a matter of fact.\n\n--\n\nI decide to not call the academy before I show up. I would rather give them no warning and simply arrive. The academy is a three-story building wedged between an apartment building with metal fire escape balconies and a five-story office space. The entrance of the building is blocked by a red brick wall and a more shiny than rusted gate. To the right of the wall is a metal plaque that says 'Ester Heminges Academy of the Arts' and to the right between the gate and the plaque is an intercom with a digit pad and black domed camera.\n\nI press the intercom and see my breath hanging in the air as I wait for a reply.\n\n\"Do you have an appointment?\" a voice asks from the other side.\n\n\"Police, I need to ask a few questions to someone in charge,\" I reply, and wait a few seconds again.\n\n\"Put your badge to the camera,\" the voice says, and I comply. I hear a buzz at the gate, pull it open, and cross a small courtyard to enter the academy. The entrance is two heavy wooden doors that took a considerable amount of effort to push open. The door opened into a small atrium where a man sits behind a desk with a laptop and a book next to it.\n\n\"Hello officer, purpose of visit?\" the man asks and turns a logbook toward me to sign. It tracks visitor's names, reason of visitation, time entered, and time departed. I fill out the required information and he turns it back.\n\n\"Investigation regarding a former student. I don't think the school is relevant, just due diligence,\" I say, and he closes the logbook. \"Who can I talk to about a former student?\"\n\n\"Ms. Heminges should be at the stage at the end of the hall through the double doors. She's your best bet,\" he says and pulls his book open and starts reading again. \"You can hang your coat there.\"\n\nI turn and see a line of hooks on the wall next to the door, so pull of my coat and place it on the hook furthest from the door. Once dressed down a layer, I proceed to the end of the hall, looking at the details to my left and right along the walls. There are placards next to each door, showing what class is currently in session or was most recently taught. 'Shakespeare Allegories', 'Playwriting', 'The Meaning of Wardrobe', 'Of Course He/She's the Villian', and lastly 'Story Through Music'. I am sure the second and third floors have more.\n\nThe double doors at the end of the hall are propped open and I hear echoing voices from within. I enter a small theatre with a stage at the end of the room. The space is open, the black chairs in stacks against the walls. People are interacting on the stage and see me approaching, then return to talking to each other, paying me no attention. They do not notice me again until I ascend the stairs to the right of the stage.\n\n\"I am looking for a Ms. Heminges,\" I start, and suddenly a woman starts talking over me.\n\n\"Places, we are going to go over 'Everyone's Got the Right', but this time the reprisal,\" she says, stepping onto the stage from the back and the people all start taking their places. \"You, what are you doing?\" She asks me.\n\nThe woman is middle aged and has not gone over the hump gracefully. Her forehead has clear indications of Botox and I recognize cosmetic surgery when her neck skin is not the same age as her face. My daughter is older than her breasts, and her style of dress is just plain tacky; tight red leather pants and a black blouse with the button undone to show those tits I just mentioned. Hooped gold earrings and a ring for nearly every finger topped off with silver sparkle on her fake nails. Her voice is commanding though, and she could still carry a tune if I had to wager.\n\n\"You already have the prop, love the dedication,\" she says, pointing to my gun. \"Are you my Byck or my Hinckley?\"\n\nI pull out my Shield and show it to her. \"I'm the police. Are you Ms. Heminges?\"\n\n\"Everyone, take five,\" she says to the cast, and they slowly start to scatter out of the room. \"Why is a detective disrupting my rehearsals?\"\n\n\"A former student of yours was found dead. Willow Goldberg. Does that name ring a bell?\" I ask.\n\n\"Certainly does, biggest diva I ever had the misfortune of trying to teach. Unfortunate to hear about her passing regardless,\" Ms. Heminges replies.\n\n\"She was a bad student?\"\n\n\"Willow was barely a student. She refused to be taught and strutted around like she owned the place. I have handled some entitled performers in my day, but she was ridiculous. You don't show up to the Globe and expect to play Lady Macbeth on your first day. She could sing, damn that girl could sing, but she was a rather horrid actress.\"\n\nWillow sounded like a genuinely unlikable person. I have a feeling her father saying she was a good kid is just something a father is blinded to say. Hated so much she gets murdered though?\n\n\"Was she friends with anyone at the school?\" I ask.\n\n\"She was very popular with the boys. Too popular. More than one occasion her and a different boy would be late to class with obvious wardrobe malfunctions. She seemed closest to another former student. Garfield Booth. It was a shame to have to expel him for dealing drugs, because he was a good actor and a well enough singer. To think, I had a man named Booth to play John Wilkes,\" she says with a laugh. \"You probably don't know what I am talking about.\"\n\n\"Assassins,\" I reply, and she lights up in delightful surprise.\n\n\"I apologize for assuming,\" she says, and I return the smile. \"I kicked her out of the school in December, bout this time two years ago, shortly before I expelled Garfield. Haven't seen either since.\"\n\n\"Thank you for your time,\" I say and extend my card to her. \"If you think of anything else, please give me a call.\"\n\n\"Will do detective,\" she says with a cougar on the prowl grin. Time to get the hell out of here.\n\nGarfield Booth, I might have to investigate that name, because he is likely the drug dealer who got her hooked. He might be 'Screwball' is what I mean. The facts about Willow are currently this; she was kind of a bitch. She was kind of a slutty bitch. As I leave I examine the walls and see framed posters for various musicals, and see one that Ursula was singing last weekend. Into the Woods. Just then I have another question.\n\nI walk back toward the stage and ask, \"Do you have any youth programs?\"\n\n--\n\nFriday -- December 12, 2025\n\n-Chase Kramner-\n\nThe Kaiser and I depart the elevator of the eighth floor of the condo and immediately see two uniformed officers and Sergeant Hill at the door. The CSI team is on standby downstairs, waiting for our all clear before they enter. All the officers look at each other, everyone getting on the same page. Nearly in synch, we all draw our service weapons and stack on the door, the three officers on one side with The Kaiser and myself on the other.\n\nI take a deep breath and pound on the door. \"Police! We have a warrant! Any occupants, you have five seconds to respond!\" Five seconds pass. I nod to the officer who kicks at the lock mechanism, the door swinging inward hard. I pivot into the room and move left across a living room. An officer follows me and moves right. \"Corner one clear!\"\n\n\"Corner two clear,\" the officer shouts, and so on and so forth until the room is clear. Sergeant Hill and I stack on a bedroom door while The Kaiser and another officer clear the second room. All clear. Bathroom, all clear. Condo, all clear.\n\n\"Clear, send the techs up,\" I say into my radio and holster my weapon, the other officers doing the same.\n\nBefore the CSI team arrives, I take a good look around the condo to make my assessment. A little piggy lives here. The living room is littered with trash and dishes, the bedroom floor is nearly fully covered in clothing. The bathroom is disgusting. The dishes in the sink are about to tip over, and the trashcan is buried around several trash bags that were never taken out. I also see cocaine residue on the coffee table. Willow was definitely staying here. Shame she did not take care of the place, because this is some prime real estate.\n\nCSI techs arrive and start doing their thing, but the state of the place makes that incredibly frustrating. They hate when there is this much trash because they have to go through all of it. The uniformed officers leave to keep the perimeter at the elevator, stairs, and the door, while The Kaiser and I keep walking through but not touching anything. A second CSI team is still on the roof doing a second sweep, but they are about to wrap it up and come help down here.\n\n\"Right now, besides the cocaine stains on the coffee table, nothing else would be relevant,\" one tech says to fill us in on the progress about an hour into it. The still shivering second team arrives, and I see Heath who waves me over to him in the hallway.\n\n\"Got something?\" I ask, and he shows me an intact bullet in a baggy. \"Is that?\"\n\n\"Looking like it. It went through the gravel and embedded itself in the roof about an inch deep, but it stayed in one piece. Three fifty-seven before you ask. The gravel tore away a little bit of the rifling, but not too much. Angle of impact is consistent with height of victim from a kneeling position,\" Heath explains, and I thank him for finding it in the cold. \"Anything in here yet?\"\n\n\"Cocaine on the coffee table, that's about it,\" I say to fill him in before we both return to the condo and continue the search. I start in the bedroom this time, looking for more confirmation this was where Willow was living. On a small table next to an unmade bed I see a wallet and a cellphone still on the charger.\n\n\"Hey, Will!\" I shout, and a moment later he enters the room. \"We found the victims license on her, right?\"\n\n\"Yeah,\" he replies.\n\n\"Why is her wallet here then?\" I ask, then call for a tech to start on the wallet so I can examine the contents. The center slip behind a cover of transparent plastic where a license would usually go is empty.\n\n\"What the hell?\" The Kaiser asks, looking at it himself. \"Did the killer plant her license on her?\"",
        "\"No idea, and her cellphone is here too,\" I say, and have them complete prints before I even touch it. An older iphone, I think an eight, with a six-digit passcode or a fingerprint biometric lock.\n\n\"Imagine you're a coke snorting twenty-year-old girl. What's your passcode?\" I ask The Kaiser.\n\n\"One through six or one six times,\" he replies, and one through six opened the phone. \"I was fucking kidding.\"\n\n\"We'll bag this and look over the phone tonight, let's finish this place up and get out of here,\" I say, and we resume the search to find nothing else except for about twenty ounces of cocaine taped under the sink in the kitchen. \"Check the bathroom sink too.\"\n\nA tech lays on her back and shines the flashlight up into the underbelly of the sink. After a moment, she announces she found something else. Taped to the bottom of the bathroom sink was an even older cellphone. An ancient flip phone with a four-digit code, and neither one through four nor one four times worked.\n\nWe have plenty to work with now, so The Kaiser and I leave the condo to the techs who will have the spend the night literally digging through trash. I do not envy that job, and I also do not expect them to find anything of value. I request one of the techs leave with us to immediately begin an electronic examination of the phones. The flip phone is of greater interest to me because of where it was found and how out of place it is today.\n\nIt is nearly eight at night when we get back to the office, and I do not expect anything from the techs on the phones until early tomorrow morning. We do not have much records to search through anymore, so we have hit the wall until we can analyze the phones.\n\nThe Kaiser checks his phone as he sits down at his desk, and yawns before placing it into his pocket.\n\n\"Go ahead and head home. I'll see if anything from the techs comes in, and I got one more lead I want to check out,\" The Kaiser says to me.\n\n\"What lead?\" I ask.\n\n\"You mentioned the tattoo is likely a gang marking, right?\" He asks, and I did mention that when I filled him in on the drive to the condo. \"Maybe violent crime has seen it before. I'll see if someone is working late as well.\"\n\nThat is a good idea. Running off the claim the tattoo marks her as a prostitute for a crime family, the department that handles prostitution might know it. Focusing on the McCoy family is our next logical step if those cellphones do not turn anything up. We could even do the gang database a favor by filling in the missing pieces.\n\n\"Alright, try to get some sleep though,\" I say, and he nods, informing me he will.\n\n--\n\nI am not too tired when I exit the elevator and move toward the door to my new apartment. Once the lease was up at the last place, I could not move fast enough. There was no way I could live in that place anymore, especially when Marlene moved so fast. She left nearly half of her belongings, which was mostly her nautical themed decorations I dumped immediately.\n\nMy new place has the same problem as my last one before Marlene moved in; It was too apparent a single man lived there. All I had in my living room was a coffee table -- a new one because I threw the last one - , a couch, a chair, and television stand and television -- also new, because the coffee table was thrown at it - , and a small bookshelf for my books.\n\nThe kitchen was a few pots and pans and enough dishes for four people at most. My bedroom was just the bed and dresser, but my closet had slowly been progressing. At least once every two pay cycles I get a new suit, and I had thrown away all but a few of my polos.\n\nThe second bedroom was the office, where I kept the rest of my books. I try to keep my desk as clean as possible by wiping down the top and the computer at least once a week. My Sunday is cleaning day usually, and I love how my entire apartment is hardwood floors because I hate how carpets hold odors.\n\nIt will be awesome to come home to a clean apartment after that condo I just walked through. I unlock my door, push it open, and turn on the light next to the door. Instead of silence, I am greeted with a loud, \"Surprise!\"\n\nI jump back, as everyone in the apartment laughs at my reaction. Like every year, I forgot it was my birthday. The guests I immediately see is my brother Quentin and his wife Victoria, and never too far out of frame from him is Noelle, his assistant on her phone. Sergeant Nathan White, one of the SWAT team leaders is here, along with Leo who I only now realized was not at the office when I left. I guess Sergeant Hill from patrol left right after we did, because she is here in jeans and a boobalicious shirt. Jill Whitaker, the chief of the CSI lab is here, likely enjoying her first night off since she had her twins.\n\nSo much for a relaxing night in.\n\nLeo immediately hands me a beer as I toss my keys into my key bowl and start mingling. My lieutenant, acting or otherwise, just handed me a beer during an investigation. That just happened.\n\n\"There is no way I was missing my little bro's dirty thirty,\" Quinten says and wraps me in a hug, and I hug Victoria a moment later.\n\n\"Where are the boys?\"\n\n\"With my mom, we're just here for the night so we knew they'd just be napping the entire time,\" Victoria replied. Could not bring his kids, but his side bitch -- pardon me, assistant -- gets to come for the ride. He really needs to figure that out.\n\n\"Chief gonna be here?\" I ask Jill who shakes her head.\n\n\"Nope. He gets daddy daughters time,\" she says with a grin. I found the plural funny for some reason, and chuckle. \"My first day off in months. Breast feeding and pumping is done so this is my first drink in over a year.\" She downs two back to back shots, shivers a little from the impact and exhales hard. \"Number one mom!\"\n\n\"You've earned it,\" I say and tap by bottle to hers, because of course she also has a bottle, and meet Nathan next.\n\nSergeant Nathan White is one of the SWAT team leaders, and also runs the departments combatives course, along with me and another detective from violent crime, Sergeant Detective Abigail Tor. If it was him in that room where I got stabbed, he would have torn them to pieces, and yet people think I handled it above average.\n\nNate is former Air Force, special parachute commando or something. I keep forgetting what he says. It does not role off the tongue the same way Special Forces or Rangers do. I am sure he will remind me when I mess it up again.\n\n\"My favorite paratrooper,\" I say as we bro hug. Bro hug, a small intimate hug where we barely touch with only a soft tap to the others back with a fist.\n\n\"Paratrooper is Army, I was Pararescue, for the fiftieth time,\" he says, though his tone his playful. I knew he would remind me.\n\nI give thanks and pleasantries to everyone until I finally reach Patrol Sergeant Hill at the end. My greeting for her is a firm kiss she returns. We prefer this to not be well known, but we have been dating for a few months now. She was unsure if I would have a party at all, so she gave me my present in advance; the black leather-bound notebook.\n\n\"Happy birthday,\" she says, and we spend the night floating around the apartment entertaining together like a normal couple. She is not living with me yet, but that is more of a matter of formality at this junction.\n\n\"Any major developments?\" Leo asks.\n\n\"Victim was not very well liked, had a drug problem that led to prostitution, but nothing as to why that ends with getting shot with a magnum in the back of the head,\" I say, and Leo digests that. \"The Kaiser is running down one more lead before calling it a day.\"\n\n\"I'm sure the Captain will come by tomorrow to ask for an update, so be ready for that. Queen doesn't come in swinging a dick like Whitaker, but you know firsthand he can grill a guy when he wants to,\" Leo says, and sees Jill has heard her husband's name. \"No offense on the swinging dick.\"\n\n\"None taken, it's a good dick,\" Jill says, and we all laugh. \"I should check in, make sure he's not overwhelmed.\"\n\n\"I'm sure he's fine,\" Leo says, but Jill still steps away to make a call. I think she is masking how much she underestimated she would miss her babies. I am betting she will leave within the next ten minutes.\n\n\"Bro,\" Quin says, and gesturing to pull me aside to my bedroom.\n\n\"What's up?\"\n\n\"Come here,\" he says, and I follow him into my bedroom where he has a garment bag on my bed. \"It's your birthday present.\" He got me a suit? \"I called your girl, ask her what you've been up to for a present, and she informed me you have been updating your thread game.\"\n\n\"I have,\" I say, handing him my beer so I can open the bag to see what he got me. I am glad I handed him my beer, because I would have dropped it. \"Brioni?\"\n\n\"Neiman Marcus actually, but I did look at the Brioni's as well. I figured if I spent too much you'd never wear it, and suits do not belong on hangers. It's less than a grand, but only just less.\"\n\nThat is about five hundred more I would have been willing to spend. He is right, I would never wear something over a grand I might have to run in later. As usual, Quin feels the need to win the birthday gift contest, and he is in the running. I love the notebook Lauren got me, and I will use that every day, so she wins. Hard to compete with a birthday blowjob. The Neiman Marcus, navy blue, three piece with the two button front, and made in Turkey suit is a pretty close second.\n\n\"From my donors, to you,\" Quin says.\n\n\"You know I'm a cop, right?\" I ask.\n\n\"Joke, happy birthday bro,\" Quin says and I hug him again. \"Let's drink.\"\n\n\"Not too much, I got a case right now,\" I say to temper his expectations of my threshold tonight. Quin, liquor and I, have a long and sorted history. Most of my worst drinking decisions were made with him.\n\nAs I predicted Jill leaves within ten minutes, followed by Nate and Leo. Soon it is only Quin, Victoria, Noelle, and Lauren at the apartment with me. Victoria and Lauren are gossiping on the couch, Noelle is doing political assistant things in the corner, while Quin and I step out to my balcony to share a cigar.\n\n\"You gonna figure some shit out with your assistant?\" I ask, and he shrugs. \"Dude, you are one October surprise away from losing next year after you've jumped this far. Granted if your constituents knew you don't believe half the shit you say nowadays.\"\n\n\"What's that supposed to mean?\" Quin asks.\n\n\"You know what I mean. You don't believe in gun control, you think climate change is overblown, you're more hawkish on foreign policy than even dad. You're not a Democrat man. Not saying that's a bad thing.\"\n\n\"Maybe congress needs another moderate,\" he suggests.\n\n\"Then be honest about your policies,\" I reply.\n\n\"Bro, this nation was founded to be a democratically elected Representative Republic. Ideally, I should have no opinion other than those I represent. Pandering to the base is kind of the point.\"\n\n\"My issue is, the you I see on the news, is not the person sharing this cigar with me,\" I say, take a few puffs and hand it back to him\n\n\"Thanks for the picture by the way. I jumped eight points after that and got the endorsement of the police union. You may have single handedly given me the primary,\" he says. I let him take a picture of him being a normal dude checking in on his working-class police officer brother wounded on duty.\n\n\"Noelle could collapse that lead,\" I say, and he sighs.\n\n\"Victoria knows,\" he says.\n\n\"What?\"\n\n\"She's being really Jackie Kennedy about it. She just keeps smiling and waving, while I sleep in the guest room,\" Quin says, and offers me another puff which I do not take. He dabs the cigar on the side of my building and leaves it on the table next to my chair on the balcony. I like to read out there with coffee some weekends.\n\n\"We need to be heading out,\" Victoria says to Quin as we come in. He checks his watch and nods, agreeing it is time for them to go. Noelle stands up from the seat and follows them out after I hug to see them off. Now it is just Lauren and I finally.\n\nUnder normal circumstances this would be the best part of my night, however, I am currently on a case. I can tell it annoys Lauren I do not have sex when I am on an investigation. Not anymore.\n\n\"It meant a lot to see you using the book,\" Lauren says after we curl up in the bed, her naked and me still in my boxers.\n\n\"It's a good book, of course I am going to use it. Really ups the professional look ante,\" I explain, and she smiles and burrows her head into my shoulder. \"What would your first department pick be?\" She must have received the results from the detective's exam by now.\n\n\"What picks do people who failed get?\" Lauren asked, and her voice tells me she is not joking. When I tilt my head to look down at her, she digs her head deeper.\n\n\"You failed?\" I ask, and she nods into the pocket of my shoulder.\n\n\"I know the information, but I am a bad test taker. Always have been,\" she says, and a memory flashes past my mind, and I do not want to share. In college I always busted my friend's nuts when they did bad on tests. He told me he thought he was smart, but always struggled when it was time to find out what he knew. The thing is though, Lauren is smart.\n\n\"I feel so stupid. You know what I mean?\" The lowest test score I ever received in my academic career was a ninety-three. No, I do not know what you mean.\n\n\"When can you take it again?\" I deflect.\n\n\"Next quarter. The test is hard, right?\" I do not have the heart to tell her I received one of the only two perfect scores in the history of the precinct. In twenty minutes. For a test scheduled for an hour and a half. No, the test is not hard.\n\n\"It can be challenging in some parts,\" I clarify with intentional vagueness.\n\n\"Do you ever feel like, if five answers in a row were B, then one of them is wrong?\" She asks. No.\n\n\"It feels weird I guess, but they might just be trying to trick you.\" They are. The test intentionally does that to see if testers will have their instincts override their intelligence and clear evidence to the contrary. The last four answers being B, has no bearing on the next answer being B.\n\n\"Would you change your answer if that happens?\" Why would I change a correct answer because of other unrelated questions?\n\n\"Probably not,\" I say, uncommitted to my true answer of 'fuck no'.\n\n\"I hope I do better next time. I would have liked to have some fun to get my mind off things, but my boyfriend doesn't have sex during an investigation,\" Lauren complains, and begins rubbing her hand over my boxers. \"Don't want the distraction?\"\n\n\"It's not that,\" I say.\n\n\"Then what?\"\n\n\"I just don't anymore,\" I say, not wanting to talk about it. I do not want to ever talk about Marlene again.\n\n\"Anymore?\" She asks. Shit. \"So you used to?\"\n\n\"Then something happened, and now I don't,\" I say, hoping to drop it finally.\n\n\"What happened? Did fucking during a case let a murderer walk or something?\" I ask. As a matter of fact, kind of.\n\n\"The last person I slept with during an investigation, ended up being a suspect,\" I say, and she pushes up to look at me more directly.\n\n\"You're serious?\"\n\n\"Wish I wasn't. In fact, the last two. My ex slept with me the night before a murder, and another slept with me during...\"\n\n\"Wait a second, another? Two suspects?\" I might as well.\n\n\"So long story short, I believe my ex conspired with two other people to kill someone. I found the two other people, the fucker who stabbed me as a matter of fact and shot his ass. The accomplice found and fucked me for information a week later while I was on drugs and recovering. Afterwards I am ninety-percent certain my ex then strangled her to death, put her neck in a noose and then threw her off a hotel balcony to stage a suicide. She got off Scott Free because she was careful and fucking me the night of the initial murder turned me into a walking alibi.\"\n\nThat is why I do not have sex during an investigation.\n\n\"Forget I asked,\" is all Lauren can reply with.\n\n--\n\nFriday -- December 12, 2025\n\n-William Kaiser-\n\nI receive a text message as I sit down at my desk when Chase and I return from the condo. Lauren is letting me know everything is set up at the apartment for his birthday party. It is a little off putting to have it right at the beginning of the investigation, but his family bought plane tickets and I would hate to screw them like that. Not like his brother can't afford it, but it's the principle. Knowing Chase, he'll drink two beers and call it a night by eleven. I let Lauren know he is on his way after he leaves.\n\nBefore I do anything else, I call my ex-wife to let her know I probably can't take Ursula for the weekend. As much as I would like to, and believe me I want nothing more than that, I can't. This case isn't straight forward and will likely take the entire weekend to identify a suspect, if we even get that far. It's amazing how hard finding a suspect can be sometimes. Unfortunately, we often don't. Becky does not take it well, because she had plans.\n\n\"Of course, you do this when I actually had plans,\" Becky says in frustration. Sorry I disrupted your plans without your daughter, maybe this wouldn't be such an issue if I could see her without your fucking permission. I totally meant to have a woman murdered this morning. Sorry for not running that by you first. Apply sarcasm.\n\n\"I don't decide when people get killed,\" I say in my defense, not like I should have to defend myself.\n\n\"Whatever, but you better take her for Christmas,\" she says. I will make sure your daughter doesn't ruin your vacation with your boyfriend. I can never hang up on her fast enough.\n\nTime to get back to work. I send another text message, but this time to my contact in violent crime. My phone chimes a minute later, and she lets me know she is still in the office. It is a little past eight thirty when I board the elevator and select the sixth floor after scanning my security card. It arrives in seconds and I follow the sign to Violent Crime. I don't need the signs, since I have been here often enough.\n\nThe only detective working late tonight is the Sergeant for Violent Crime, Abigail Tor. A few years older than me in her mid-thirties, but damn is it a good look on her. Shiny brown hair cut to a bob which does not curl inward. It hangs like a curtain over her ears with straight cut bangs, forming a near perfect square to frame her freckled face. I met her during a combatives training she taught with Chase and Sergeant White from SWAT several months ago, which is why her body is stupid tone and thin as a rail.\n\nSimilar to our office area, only the Lieutenant has their own private office. The desk for the sergeant is amongst the open floor plan, though freer floating than the other desks that are pressed together. I keep hearing Narcotics is where you want to be a Sergeant for. The office feels lived in, not dirty or crowded. Case files fill inboxes, there is some clutter on desks, but mostly just office supplies. There is a whiteboard keeping track of all the running cases and who is running them in the back near the Lieutenant's door. What stands out here is that they have their own conference room, but they happily share it with Narcotics down the hall.\n\nSitting at the slightly isolated Sergeant's desk is Abigail Tor, typically the only one here this late. She tends to take cases personally and gets more invested in their resolution than even Chase does with his cases. I don't think he ever fully rebounded from the Hopkins murder. Especially after Marlene. That would have been the nail in the coffin for a lesser detective. Thankfully Chase isn't lesser in any regard.\n\nAbigail hears me come in and smiles as I approach. She places her open case file on her desk and closes it, letting me know she is putting it away for a moment to talk to me. I want to jump straight into the Goldberg case, but it is evident she has other plans as she looks down the hall and quickly moves to the conference room. I suppose I am not in too much of a hurry.",
        "The door closes, the blinds shut, and her lips are pressed to mine before I even turn the locking mechanism. She starts undoing my belt as I reach under her pencil skirt and tug her panties to her knees. By the time my pants and underwear hit the ground, I am already hard enough to start. She steps one foot out of her panties, licks her fingers to moistens herself before sitting on the edge of the table. She pulls me between her legs, and I slip into her slick pussy with ease.\n\nWhen I stay late at the office, do not feel too sorry for me. This is far from our first time. After the days we have, we both need a good release to help us sleep at night. Her day is usually worse than mine. I deal with dead people while she has to work with survivors.\n\nI grip with my fingertips on the waist of her skirt, and I can feel her rocking forward to maximize the impact of my thrusts. I lean down and kiss her again, her returning it with tongue, then pushing me back so I can truly focus.\n\nAfter roughly five minutes I announce my orgasm, and start spurting inside of her, the pulsation of my dick making her orgasm as well. We breathe deep for a minute before composing ourselves and resume being detectives. These little quickies are keeping us sane.\n\n\"You mentioned a tattoo?\" She asks after taking a Kleenex and wiping myself out of her. We exit the conference room, her disposing the tissue before sitting at her desk in front of her computer.\n\n\"Yeah, a crow, or a raven,\" I say, and she thinks for a second.\n\n\"On a prostitute?\" She asks.\n\n\"Allegedly.\"\n\n\"That's the Irish. They are pretty prolific at 'branding' their girls,\" Abigail says, using finger quotes around the word 'branding'. \"We think we know which family does which tattoo.\"\n\n\"We had a source say she was the...I think...the McCoy's,\" I say, having to really think about what Chase told me.\n\n\"That family I know. The point of the brand,\" Finger quotes, \"Is to remind the Johns that hurting them is not a good idea. I've handled a few possible felony assaults likely because someone didn't heed the warning. Didn't give us a name of course, claimed they fell down the stairs or something.\"\n\n\"Naturally, otherwise they're admitting to a different felony,\" I say, and she begins clicking through a few folders with some pictures of tattoos on prostitutes. They must have begun to keep a database once they realize several prostitutes had the same one.\n\n\"This it?\" She asks, and shows me a tattoo I recognize as the one on Willow.\n\n\"That's it. How many of these have you seen?\" I ask.\n\n\"We have identified two different tattoos, both bird themed. The Raven,\" she says, pointing at the one currently on the screen. \"And a canary.\" This girl had a yellow canary tattooed on her neck at the same location.\n\n\"Canary?\"\n\n\"Lafferty's, another Irish family. One of the big four,\" Abigail explains.\n\n\"Why only two?\"\n\n\"Only two of the families operate in prostitution, that we know of. The Donnelly's and the Flannery's don't. Flannery's keep it old school with basic racketeering and union thuggery, and the Donnelly's are the drug dealers. Moving back to the bird theme, their drugs are stamped with a white Swan.\" She shows a picture with several bags of confiscated cocaine where the package is stamped with the white swan.\n\n\"Flannery's use birds too?\" I ask.\n\n\"They certainly do,\" and she shows me pictures of businesses across the south side where an ornament of some kind shaped like an owl is hanging outside the door. \"Owls. These places pay money to the Flannery's for protection, the ornaments let would be robbers know who they are really stealing from. Not only that...\" She says, and pulls up a newspaper article about the city's Truckers Union. The president of the union is at a podium of a benefit dinner of some kind for scholarships. \"Notice something?\"\n\nI look really hard for nearly a full minute but cannot see what she wants me to. She then zooms in a little, and points to his shirt lapel. On the collar of his jacket is an owl pin.\n\n\"Holy shit,\" I say.\n\n\"Holy shit indeed.\"\n\n\"How the fuck is this not a federal investigation? The DOJ should salivate at the most clear-cut RICO I've ever seen,\" I say.\n\n\"Agreed, but they don't. Too small time maybe. They don't extend their influence outside the city. Who knows, but the FBI doesn't care, and we've asked them. I can't even get state prosecutors to help. DAs office and the chief are tracking though, but we're keeping it as decentralized as possible.\"\n\n\"Why?\" I ask. This in theory should be a department priority.\n\n\"Because shit within the precinct vanishes the moment we start building a case. We barely have anything in the gang database on them because someone removes it, and cyber forensics can't smoke them out. They got a cop somewhere.\"\n\n\"Fuck,\" I say, and she nods. A dirty cop could be screwing with this investigation. Chase is going to be thrilled.\n\n\"I'll forward you what we have on the McCoy prostitutes for a start, maybe a former girl knew her.\"\n\n\"Thanks. You gonna head home?\" I ask.\n\n\"I probably should, Helena is probably pissed,\" Abigail says, Helena being her thirteen-year-old daughter. Both of us having girls was the basis of our first conversation that later led to our after-hour sex routine.\n\n\"She gets it more than she doesn't,\" I say to give Helena some credit.\n\n\"She does, but holiday season is when I shot her dad and sent him to prison,\" Abigail says with a sigh.\n\nTwo years ago, Abigail was in a horribly abusive marriage. Her ex-husband would beat and rape her, and she was reluctant to get help. Mostly because her husband was a cop as well. The neighbors called the police several times, but her husband smooth talked the responding patrol officers, or was drinking buddies with them. What finally snapped her to action was when his attention shifted to their daughter, and she saw all the clear signs of grooming she was trained to identify. The day after Christmas she shot him when he attempted to rape their eleven-year-old daughter.\n\nThere was some retaliation from officers in the precinct who thought she lied and shot him for other reasons. Even though the evidence was overwhelming. The person who shut that down was Captain, now Chief of Police Whitaker. He personally ripped the badges off three officers who harassed her afterwards so efficiently even the Police Union wouldn't go to bat for them. The aggressive support she received from the Chief of Police is the only reason she didn't resign.\n\nHelena does not know the whole story, and we believe some of the grooming is still there. All she knows is dad yelled a lot and mom shot him for a reason she isn't ready to know yet. How do you tell your daughter her mother shot her father to stop him from raping you? As soon as we figure that out, I guess.\n\n\"I have information to look over now. I was planning stuff with Ursula, but someone needed to be a dick and shoot someone,\" I say, and she touches my shoulder in understanding. I walk her to the elevator and get off at my floor, kissing her before she continues down to the first floor.\n\n--\n\nSaturday -- December 13, 2025\n\n-Chase Kramner-\n\nI get into the building at eight in the morning, sipping coffee from my tumbler as I wait for the doors of the elevator to close. Just before the doors touch, a hand from outside swipes through the middle, making the doors open again. I step aside to let a woman in and watch her hit every button below my floor. What the hell? Now it really sucks that Homicide moved from the second to the fifth floor a few months ago.\n\n\"Morning?\" I ask, a little confused at the behavior. The woman is a full head shorter than me, Japanese if I had to guess, with long black hair she wore in a ponytail over her back. Her clothing is more casual than my suit, a simple blouse tucked into her jeans with a belt. She has running shoes instead of heels.\n\n\"Morning Chase,\" she says, and now I am slightly concerned.\n\n\"I'm sorry, but who are you?\" I ask.\n\n\"Lieutenant Jennifer Ito, Internal Affairs,\" she says, offering me a handshake and a business card. It is way too early for this. I shake her hand and take the card, still confused. \"Can I ask you a few questions?\"\n\n\"About?\" I ask. What could IA possibly want from me?\n\n\"Sergeant Texada from Narcotics,\" she says.\n\n\"What about her?\" I ask. How do they know I was working with her yesterday?\n\n\"Did she do or say anything that may have concerned you? Borderline illegal even?\" Jennifer asks, and I am silent as the elevator door opens and closes on the second floor. \"Not crossing her T's or dotting her I's?\"\n\n\"Have you seen narcotic's office?\" I ask, regarding how immaculate it was. That hardly seemed to be a space occupied by people with no concern for detail.\n\n\"It is very orderly to her credit. Just do me a favor and keep your eyes and ears open if you talk to her again,\" Jennifer says, and the elevator opens on the third floor.\n\n\"What is IA's interest with Sergeant Texada?\" I ask, the doors closing.\n\n\"That is IA's business, but let's just say she has always played fast and loose with the rules. Not the first time her name has been through our office,\" Jennifer says, and I look at the elevator numbers.\n\n\"Here is what happened yesterday. She helped me cross off a murder suspect and that guy also happened to be a person she had wanted to arrest for a good minute. Everyone wins.\"\n\n\"I heard she hit the dude with a car.\"\n\n\"You heard wrong,\" I say, the elevator opening on the fourth floor, one floor below mine, and I step off the elevator.\n\n\"Isn't homicide on the fifth floor?\" Jennifer asks.\n\n\"I just decided I would like the exercise. Nice talking to you,\" I shoot back, and watch her as the doors close. There was something unnerving about her cheeky grin, and kind of sexy. The unwavering bravado letting me know she is a shark that can smell blood in the water. I look at her card for a moment, tempted to toss it to the ground, but I place it in my wallet.\n\nTaking the last floor through the stairs, I walk down the hall and turn into homicide where I see The Kaiser has put the whiteboard to use.\n\nWillow's picture is on it, as well as Garfield's, with a note ruling him out as a suspect. A zoomed in picture of her tattoo along with a few others are present, so I will assume he made some headway on that lead last night. The window of her time of death is now significantly narrowed. The earliest we see her enter the condo on the surveillance video is Wednesday, meaning she did not leave her condo for over a full day. Kaiser is running off the theory the murder happened during a camera blackout of twenty-three minutes.\n\n\"What I miss?\" I ask, The Kaiser turning over his shoulder to look at me. \"Anything with the phones yet?\"\n\n\"The iPhone transcripts for text and internet browser history are on your desk. I already poked through them, nothing of value, but feel free, maybe something will jump out to you.\"\n\n\"What does a coked-out prostitute Google between hand jobs?\" I ask, putting my coat on the back of my chair.\n\n\"Mostly lyrics to Irish folk songs,\" The Kaiser replies, and I see that as I scroll through. Lyrics for 'Come to the Bower', 'Jug O' Punch', 'Black is the Color', and 'Willow Tree' are amongst her most recent searches. \"Looks like she never stopped singing.\"\n\n\"The flip phone is still being processed. They're having some issue with it,\" The Kaiser explains as Leo leans out from his office and looks at us.\n\n\"Look sharp, Captain is coming for a progress briefing,\" Leo says, and I gesture to The Kaiser if he wants to take it, considering he has been up with it more than I have at this point. He is the logical leadoff hitter to fill in Captain Queen.\n\nThe Kaiser spends about ten minutes going over some notes before Captain Queen arrives, looking disheveled as always. No matter what he does, his beard just makes him look homeless. Do not let him fool you though, he is still a veteran detective, even if he looks like a hobo in a suit.\n\n\"Willow Goldberg, where are we?\" Captain Queen asks, sitting in a chair while Leo leans out from his office door. The uniformed officers sit as well, pulling out their notebooks.\n\n\"Sir, since discovery of the body, we have narrowed down the time of death from a window of a little over twenty-four hours, to just twenty-three minutes...\" The Kaiser begins, before Captain Queen interrupts.\n\n\"Important part first. Suspects?\" Captain Queen asks.\n\n\"Not a specific one,\" The Kaiser says, \"But we do know she was connected to the McCoy Irish crime family through a tattoo on her neck. It's a form of branding for their girls.\"\n\n\"Any known associates of the McCoy's have prior charges?\" Captain Queen asks.\n\n\"That's part of the problem, our database for these families is limited. Very limited, we didn't even know all of the families that make up The Bar until last night.\"\n\n\"The Bar?\"\n\n\"An unofficial name for four Irish crime families who work jointly.\"\n\n\"Motive?\" Captain Queen asks, seeing how our suspect list is thin.\n\n\"Possibly drug or prostitution related, but nothing concrete. To make that worse, she was kind of a bitch. Aside from her parents, not a single person we spoke to about her, held her in a high regard. Hated so much she gets murdered though, I kind of doubt it.\"\n\n\"Any other clues still in development?\"\n\n\"We found an old cellphone hidden under her sink,\" The Kaiser says.\n\n\"Old how?\"\n\n\"Flip phone, no touch screen.\"\n\n\"Let me know what that reveals. You were saying about time of death?\" Captain Queen asks.\n\n\"The last time we see her enter her condo, is around one thirty in the afternoon on Wednesday. However, on Thursday night, the camera system rebooted, causing a twenty-three-minute black out,\" The Kaiser explains, and Captain Queen is curious.\n\n\"Is this reboot normal procedure for the building?\"\n\n\"It is, but if the killer knew about this, and used it, that shows a familiarity with the building and the victim who had no defensive wounds.\"\n\n\"It also shows premeditation, so murder one is a guarantee,\" Captain Queen says, satisfied that a murder one charge is possible. \"Focus on known members of the McCoy family and take a deeper look into property holdings in the condo. She was found on the roof of her own home, so lean more on the drug side than the prostitution side of this.\"\n\n\"Yes sir,\" The Kaiser says, and I say it after he does.\n\n\"Before we all get back to work, I have two announcements. Sergeant Sweeney has been filling in as acting Lieutenant for a few months now. We got the official word this morning, so give me that Shield, you've outgrown it,\" Captain Queen says, and Leo pulls his Shield from his belt and hands it to Captain Queen, who then hands him a Lieutenant shield.\n\n\"And just like that, a Sergeant position is available,\" Captain Queen says, and tosses me the Sergeant Shield. \"Sergeant Kramner.\" Holy shit. \"Paperwork is already in, this isn't acting Sergeant, this is Sergeant.\"\n\nI try to speak for nearly ten full seconds before I finally just say thank you. I pull my Shield from my belt and toss it to him. Captain Queen puts us back to work, and I look over at The Kaiser who inhales deeply and sighs, before sitting at his desk. He is trying not to show it, but he is pissed. When it becomes too much, he leaves the office, turns down the hall, and I hear the door to the stairs open and shut.\n\nI look over at Leo to see what he will do, and he looks at me, wondering what I am going to do about it.\n\n\"What do you do, Sergeant?\" Leo asks with a smile, then returns to his office. Fucking asshole.\n\nThis is the third time The Kaiser has been passed up for a promotion. It makes no sense. His case closure is high, his fitness and marksmanship are good, he is decorated, and puts in the hours. Why does this keep happening to him? I remember what Chief Whitaker said to me when he offered me this promotion during the summer. That The Kaiser was a sexual harassment lawsuit waiting to happen.\n\nThat confused me, because I looked for it after he said that. He has jokes like anyone else, but no behavior that stands out. He is cordial to female officers. This does not make any sense.\n\nAfter a moment of hesitation, I follow The Kaiser to the stairwell, where he is pacing on the landing next to the door.\n\n\"Congrats, really. I just...yeah,\" The Kaiser says, extremely frustrated, and not wanting to take it out on me. \"No matter what, that incident just hangs over my fucking career like a fucking storm cloud.\"\n\n\"What incident?\" I ask. The Kaiser takes a deep breath to calm himself, then exhales it loudly.\n\n\"So about seven years ago now, when I was still with patrol, I pull this chick over. Routine traffic stop. She tries every trick a woman does. Bats eyelashes, cry, you name it, she fucking tried it. Her hail marry, was offering to blow me.\"\n\n\"Did you?\" I ask.\n\n\"I was married at that time, so no, I didn't, and even if I wasn't married, I wouldn't have. I arrested her for propositioning a bribe to a police officer. Judge gives her like, fifty-hours community service. She turns around, and files a criminal sexual assault charge against me. I am immediately suspended pending investigation.\n\n\"Crazy thing, my body-cam was on, so her case was torpedoed. The department doesn't lift my suspension, because Chief Zorn throws me under the fucking bus when the local news takes hold of it. We're talking twenty-eighteen, peak hashtag me too bullshit. He only lifts the suspension when the Union damn near riots and they leak the body-cam footage to the press. The DA doesn't charge her for filing a false report, so I spend my own money to fuck her up in civil court, and I win. She never paid the restitution, and the legal fees caused more strain with Becky and I until she finally divorces me.\"\n\n\"If it was so obviously bullshit, why is this stopping you from getting promoted?\" I ask.\n\n\"Because the way our records are kept. When you go through my file, you see I had a sexual complaint against me, but not the resolution. You have to dig for that. But if you're the Chief of Police and you're looking through a hundred files to promote ten people, how deep do you actually go?\" The Kaiser asks, and now I get it. \"I file a letter for statement of reasons every promotion cycle, doesn't matter.\"\n\n\"That sucks man,\" I say, unsure of what else I could possibly say.\n\n\"It does. You deserve to be a Sergeant, just know that. I know you're hesitant, but don't be. Let's just get this case moving again,\" he says and leaves the stairwell, but I stay on the landing as the door shuts.\n\n--\n\nSaturday -- December 13, 2025\n\n-Derek Whitaker-\n\nI come into my office much later in the morning than I normally would. My routine is usually stepping off the elevator and walking past my receptionist Jared's desk by six in the morning. Jared himself arrives and briefs me on my schedule by seven thirty. After that briefing I sit down and approve or disapprove outgoing press reports. On Tuesday and Thursday, I meet with the Mayor Oliver Maxwell to talk budget and pending high profile cases. When I get back from that meeting, I debrief my deputies on our priorities.\n\nSaturday's are normally pretty quiet, and I am home by four in the afternoon. Part of the reason I am in so late is because Jill was out later than her usual. It was her first chance to get out since our twins were born, and she has certainly earned a night with no crying babies. I needed the extra sleep, so I come in at about nine in the morning. When I step off the elevator, I see Jared at his desk, and Detective Kramner sitting on one of the several chairs against the wall my appointments sit in. I am in late because of his birthday party, and I find it a little ironic he is my first appointment.\n\n\"Morning Detective,\" I say, and he stands up at attention quickly. \"Or should I say Sergeant Detective. Link let you know right?\"",
        "\"About an hour ago sir. If possible, can I talk to you. Open door policy, I already ran it through both Lieutenant Sweeney and Captain Queen,\" He says, and I look over at Jared. Open door does mean open door, but there is still a chain of command and all attempts to keep things at the lowest level. You do not just jump to the Chief of Police, and I know he would not do that. Chase is scared shitless of me, so this is the last place he ever wants to be.\n\n\"Do I have five minutes?\" I ask Jared who nods. \"You have five minutes.\"\n\nI lead the way into my office and move straight for my desk after hanging my coat on a hanger. I sit down and Chase starts talking as he is sitting.\n\n\"You need to promote Detective Kaiser,\" he says, and I am flabbergasted.\n\n\"You were promoted an hour ago, and you think you can tell me what to do now?\" I ask, and he sinks into his chair. \"Want to try that again?\"\n\n\"That came out way too aggressive...\"\n\n\"...Damn right it did.\"\n\n\"But it needed to be aggressive. Detective Kaiser is more qualified than me, with two more years of experience as a detective,\" he explains.\n\n\"Kaiser has a record...\"\n\n\"...It's bullshit,\" he interrupts, and I swallow back my anger for a second. I have not worked sixty to seventy-hour weeks for fifteen years for a guy who just turned thirty to interrupt me in my office. However, Chase is acting uncharacteristically right now.\n\n\"How is it bullshit?\" I ask. I will let him explain this before I decide whether or not I fuck him up.\n\n\"Does his record show what his offense was and it's resolution, or only that he was accused?\" He asks, and I think back. Okay, I'll bite.\n\n\"Detective Kaiser was accused of sexual assault by a woman he pulled over. How did it end?\" I ask.\n\n\"The charge was dropped because Kaiser was wearing a body-cam that found her to have filed a false report. The DA, wanting to avoid a me too debacle, didn't file false report charges, and he sued her, and won in civil court. Do you remember about seven years ago the Union damn near lynching Chief Zorn over a cop getting thrown under the bus?\" I do remember that as a matter of fact. I don't remember the officer involved, but I certainly remember it. I think I even signed the petition. \"That was over Kaiser being left to twist in the wind.\"\n\n\"Why hasn't he, himself, come forward to clarify this with me?\" I ask.\n\n\"Because the last Chief of Police took a giant shit on his career,\" he says. He has a point. Kaiser lost faith in his command, and that faith has been slowly eroded with every subsequent promotion cycle.\n\nI do not like his lack of tact, but I am happy Chase did this. Honestly, I appreciate his lack of tact this time. This is calling something what it is; Bullshit, and calling out the person who unknowingly was perpetuating it.\n\n\"I will look into it. When I say that, I mean I am going to look into it, I'm not just getting you out of my office,\" I say and stand up, reaching to shake his hand which he returns. \"Thank you for bringing this to my attention. You had apprehensions about this promotion, and within an hour you are taking care of your people.\"\n\n\"Thank you, sir,\" Chase says.\n\nChase often stutters and stammers when talking to leadership. He did not stutter even once. He is becoming more confident.\n\n\"Before I change my mind about scuffing you up, get out of my office,\" I say, and that does the trick to make him beeline out. Chase enters the elevator which closes, and I peer out at Jared.\n\n\"Get me the record for William Kaiser.\"\n\n--\n\nSaturday -- December 13, 2025\n\n-William Kaiser-\n\nChase left to get more information on the status of the flip phone and asked me to take a second look at her phone transcripts. He suggested I look closer at her search history and phone apps that allow communication. WhatsApp, Kik, things like that.\n\nApparently, cocaine makes you Google song lyrics. The lyrics for Irish songs are one of her most frequent searches. Nothing else stands out besides a few locations she searched for, but they are nearly all restaurants. The only thing that is interesting is her WhatsApp message log. Kids today communicate in emojis, and it is looking like prostitutes are not any different. The choice of emojis are plainly obvious.\n\nSnowflake is obviously code for cocaine, but something is off. Willow was not asking them if they had cocaine; they were asking her. The drug angle just shifted, because she may have also been a drug dealer. Perhaps dipped into her supply and made her distributor upset?\n\nWillow's most recently sent and received texts that seemed to not be drug dealer related were loving exchanges between someone saved in her phone as 'Babe'. Likely a boyfriend. How they were days away from getting out. Then on Thursday night, 'Babe' is sending a series of worried texts and missed calls. No voice mails.\n\n'Lass, pick up.'\n\n'Lass?'\n\n'Getting worried.'\n\nMy desk phone rings, and I place the transcripts down and roll my chair closer. \"Detective Kaiser, homicide.\"\n\n\"This is Jared from the office of Chief of Police. Do you have a minute to speak with Chief Whitaker?\" Jared asks. What the hell?\n\n\"Sure, I guess. I'll be up in five minutes,\" I say and start to hang up the phone.\n\n\"He will not be in his office. He will be waiting for you in the lobby on the first floor,\" Jared says. I say I understand and hang up. Why the hell does the Chief of Police want to talk to me in the lobby?\n\nI take the elevator down, and when I exit, I look both directions to see if he has arrived yet. He has not, so I make my way toward the precinct Wall of Heroes. All of the retired badges and shields that no other officer will ever wear. We often recycle badges, but many officers who die in the line of duty or had exceptionally valorous service will have their badge retired.\n\nAs I often do, I stop in front of one badge in particular. Michael Kaiser, killed in the line of duty August 11, 2002. My father died when I was eight years old. It was not a fire fight or anything like that. Michael Kaiser stopped to assist a couple with car trouble, and then some drunk dickhead came onto the shoulder. My father pushed the wife out of the way and took the impact himself.\n\nMy mother had died of brain cancer when I was five, so I was orphaned when my father died. I went to live with Jacob and Marlowe Kaiser, my paternal grandparents. Jacob Kaiser was also a police officer. I am a third-generation cop.\n\n\"Hey dad,\" I say, this as much a grave marker as his burial lot next to mom. \"I got passed up again. Still made it further than you though.\" My father was awaiting his detective's exam results when he was hit.\n\n\"Thank you for coming,\" I hear a voice say, and I see Chief Whitaker approaching me.\n\n\"When the Chief calls, you answer,\" I say, and shake his hand after he starts to extend.\n\n\"Your father, right?\" He asks, pointing to my father's badge. \"Grandfather was a cop too. That makes you legacy.\"\n\n\"It does.\"\n\n\"Unfortunately, not many officers were alive when their badge was put here. I'm married to one of them,\" Chief says, then directs my attention to his wife's shield. Detective Jill Simpson.\n\n\"CSI Chief?\" I ask, and he nods. I did not know Jill was a detective.\n\n\"I don't want to keep you because I know you have a case right now,\" He begins, \"Someone, not important who, brought something to my attention. Our promotion process is not perfect, and often we select cosmetically. I understand because of the actions of prior leadership, or should I say inaction, is likely why you did not talk to me yourself.\"\n\nI do not know what to say. This was without a doubt Chase, but he is right. I did not think talking to him would have made a difference. Another reason I did not is because of when he did make a difference. He fought for Abigail like a real leader, and with that history, perhaps me arguing the charge against me was a crock of shit was not smart. It might not matter the charge was bogus.\n\n\"My leadership did not have my back when I needed them to,\" I say, and he nods. \"Not you though. I'm friends with Sergeant Tor, and I know what you did for her.\"\n\n\"So you think because I back a legitimate complaint I will back a false one? Detective, my ex-wife claimed she was scared of me to win custody. I examine the claim, not the sex of the person making it.\n\n\"I am not Chief Zorn. I have no stomach for politics, and good cops will have the full support of this precinct,\" He says, and I believe him. \"There is nothing I can do about this promotion quarter, that ink is already dry. However, next quarter, if a Sergeant position opens, it's yours.\"\n\nI try to speak, and my voice cracks a little. I clear my throat and say, \"Thank you sir.\"\n\nChief Whitaker shakes my hand, gives me a good slap on the arm in approval, and boards the elevator to return to his office. This day just drastically improved from the shit it started in.\n\nMy cellphone chimes, and I read a message from Chase telling me to come to the CSI lab in the basement. I send him a reply and board the elevator, stepping off seconds later to the reception desk. The woman buzzes me through, and I see Chase in the lab leaning over a desk while one of the techs is going over something with him.\n\nOn the desk in front of the lab tech is the flip phone with a cord running from it to a laptop. Chase turns and waves me over, and I stand next to him.\n\n\"I just talked to Chief Whitaker. He promised me the next Sergeant slot. You know anything about that?\" I ask, and he grins a little.\n\n\"I have no idea what you're talking about,\" he replies, and I smack his arm to say thanks. \"Explain this thing again Frankie.\"\n\nFrankie looks up from her glasses, sighs a little, and turns her laptop.\n\n\"Fuck this thing,\" she says. Well, that is not helpful.\n\n\"Why?\" I ask.\n\n\"So look at it, it's old, right?\" she asks, and I nod. \"The shell is old. The stuff in it, not so much.\"\n\n\"What the hell does that mean?\" I ask.\n\n\"Someone gutted an old Motorola and stuffed it with new components. Ten gigabyte memory, 4-G LTE which is kind of dated, but certainly not for this phone. And this thing is encrypted. I have ripped my share of phones, I can't dent this thing,\" she explains, and points to her program which has the texts and call log, but it is all jumbled and illegible from what I will assume is the encryption. \"It's using a one-time pad encryption.\"\n\n\"What the hell does that mean?\" I repeat.\n\n\"In simpler terms, it's also known as a perfect security because it is generally uncrackable without the key,\" Frankie explains, and does not explain at the same time. I do not understand any of this.\n\n\"Can you brute-force it?\" Chase asks. Is he just asking or is that an actual term?\n\n\"You got a quantum computer we can use somewhere? That wouldn't even be a guarantee. It is mathematically unbreakable,\" Frankie replies.\n\n\"English,\" I say, and they both look at me.\n\n\"Long story short, I cannot break this phone without the key,\" Frankie summarizes. Thank you.\n\n\"Who does this to a shitty old phone?\" Chase asks.\n\n\"Beats me,\" Frankie replies. \"I can forward it to the FBI, see if they can do anything with it. Unless you want that back sometime this year.\"\n\n\"Can you ping it?\" I ask, and she shrugs, types a few things, does some mouse clicks, types again, and pings the phone. Which is apparently in Turkmenistan. \"The fuck?\"\n\n\"It geo-spoofs its coordinates...\"\n\n\"...English.\"\n\n\"It makes you think the phone is somewhere else.\"\n\n\"This is some CIA shit right here,\" I say with a chuckle, and I look at Chase for his reaction, to see a lightbulb go off in his eyes. His brain works different than most people, so even the smallest things connect to him.\n\n\"Maybe not CIA,\" Chase says, and then looks at me, \"But maybe more like CI.\"\n\nWillow might have been an informant? For who exactly? One of our departments? Who is even authorized to run informants besides special investigations? Narcotics is the only one that comes to mind.\n\n\"Confidential informant?\" Frankie asks, and Chase nods, looking back to her now. \"I don't know anything about how we run informants.\"\n\n\"Who can even run them?\" I ask.\n\n\"SI and Narcotics, but even Narcotics has to run it through SI first. There are some FISA issues when it comes to running informants,\" Chase answers. Why does he know that? Ivy league almost Yale, that's why. \"Can we take the phone to go talk to them about it.\"\n\n\"Bring them here, I am not risking chain of evidence on your hunch. The chief will kill me,\" Frankie replies and returns the phone to a baggy, putting gloves on before doing so.\n\nChase and I look at each other, knowing she is right even if it is inconvenient. We say we will come back with someone and start walking to the exit of the lab. We board the elevator and lean against opposite walls while we wait to arrive on the seventh floor where the Special Investigations and SWAT offices are. Chase walks past Sergeant Nathan White on our way down the hall who bumps fists with both of us. Nathan then quickly cuts back and lunges in front of Chase.\n\n\"Sergeant? When the hell that happen?\" Nathan asks.\n\n\"This morning, later, busy,\" Chase says and keeps walking. Nathan understands and says they will have to get drinks to celebrate later.\n\nSpecial Investigations encompasses more sensitive threats related to terrorism and our liaison office for federal agencies. If the FBI, CIA, DHS, or whomever needs to investigate in the city, Special Investigations run point assisting them. Their door at the end of the hall is the only door on this floor that is locked with a keypad. The same kind of sensor on the elevators, but we know our security badges won't work on this door.\n\nThere is a buzzer like doorbell next to the keypad which Chase presses and we wait for a reply.\n\n\"Name and purpose?\" A voice says from the other side. Self-important asshole by the sound of him. This cloak-and-dagger shit is unnecessary.\n\n\"Sergeant Chase Kramner, detective William Kaiser, homicide. We have a few questions,\" Chase says, and we wait.\n\n\"Stand back from the door.\"\n\nThe door opens from the inside a few seconds later, and a woman welcomes us into their super-secret, normal looking office. It does not look any different from ours. I am sure they have a few nicer bells and whistles somewhere in here.\n\n\"How can we help?\" she asks, and then shakes hands, \"Lieutenant Eastland.\"\n\nShe is young for a Lieutenant, but she could just look good for her age. Chestnut brown hair rolled into a bun and pulled high on the back of her head with a pin and pencil holding it. A full plump face, but there is not an ounce of fat on her. Same height as Chase with a stocky frame underneath slacks and a jacket. She is propped up on three-inch heels.\n\n\"How much can you tell me about confidential informants?\" Chase asks. That's pretty direct.\n\n\"You shitting me? Like nothing, because we do not talk about our undercovers,\" she replies, like I expected her too. \"Why are you asking?\"\n\n\"We found a phone in a murder victim's apartment. An old Motorola flip phone but gutted and stuffed with more modern specs. It spoofs coordinates, and is one-time pad encrypted. Sound familiar?\" He asks. Okay, now I know why he started so direct. I know Chase does not understand half of what he just said, but damn did he make it sound convincing.\n\nThe Lieutenant's expression changes. She knows exactly what that is. It also concerns her a little, because that would mean a CI is dead, and they did not know yet.\n\n\"Victim's name?\"\n\n\"You first. Does the phone sound...\"\n\n\"...Yes,\" she replies. \"We issue phones to the handler and the informant. That phone has a twin, and that twin is literally the only phone that can receive anything from its sibling. Victim's name.\"\n\n\"Willow Goldberg,\" Chase says, and the Lieutenant tries to think.\n\n\"I don't know that name,\" She says, and her face looks even more concerned.\n\n\"Who would?\"\n\n\"No one should but me and the handler, I run the CI program. I have never seen a single sheet of paper with that name on it. If I haven't heard that name, she wasn't a CI. Not a legal one anyway,\" she explains. \"Give me the serial number for the phone.\"\n\n\"Call down to CSI, ask for Frankie,\" I say, and she tells us to follow her. She has her own office at the end of the space and dials on her phone down to Frankie.\n\n\"This is Lieutenant Eastland with Special Investigations...\" she begins and starts talking to someone I will assume is Frankie. She writes a few things down, and hangs up, then starts typing it into her computer. After a few more clicks and types, she waits for something to pop up, and when it does, she says. \"Shut the door.\" I push the door shut. \"That phone is still in our inventory. But we know that isn't true, now don't we?\"\n\n\"What happened then?\" I ask.\n\n\"Someone fudged something, on accident or on purpose, but this got through inventory inspections somehow,\" she explains. \"I'll run this down, I'd recommend checking your victim's arrest record. A cop pulled her in at one point and made her a CI off the books. You find that arresting officer you might find your handler, pending if that paperwork exists.\"\n\n\"She was arrested eight months ago for cocaine possession,\" I say, and the Lieutenant looks for her record on her computer.\n\n\"Arresting department was Narcotics. Detective Helga Texada,\" she says, and I look at Chase, and see pure rage flash across his face. He spent the day tracking down Screwg McFuck with Helga yesterday.\n\n\"Excuse me,\" Chase says and leaves her office quickly, and I catch the door before it can hit the wall.\n\n--\n\nSaturday, December 13, 2025\n\n-Chase Kramner-\n\nI exit the elevator on the six floor and move swiftly down the hall and see Helga's door at the end. It is open and I see her at her desk when I enter. I slam the door shut behind me. She jumps from her desk chair but does not stand, and looks up at me, ending her phone call by placing it down on the receiver.\n\n\"Detective...Sergeant, congrats,\" She says, her voice sounding confused, either by my entrance or my presence.\n\n\"Willow, Goldberg,\" I say, slowly, and watch her face. She does not even budge in the slightest.\n\n\"Who?\"\n\n\"My murder victim. Does that name sound familiar?\" I ask and watch her face again.\n\n\"Besides you saying it yesterday in your interrogation with Garfield, no. Awesome job cracking that shit he....\"\n\n\"...You arrested her eight months ago for cocaine, stop lying to me,\" I say, and really watch her face this time. It wrinkles into aggravation.\n\n\"Do you have any idea how many people I have arrested?\" She asks.\n\n\"This morning, I got ambushed in the elevator by IA, asking questions about you,\" I say, and I finally see it. Her not having a poker face yesterday, was her real poker face. She is truly concerned, but not surprised, IA is poking around.\n\n\"What did you tell them?\" She asks.\n\n\"Nothing, because I had nothing to tell them. All they said was you have a habit of playing fast and loose with the rules. I also found a phone in Willow's condo that SI issues informants and their handlers, but SI has no record of her being a CI...\"\n\n\"...Not like they'd tell you...\"\n\n\"...you,\" I say loudly to talk over her. \"Were her arresting officer shortly after that phone's record of inventory is forged. The same person IA told me, plays fast and loose with the rules.\" The phone record forgery is a bluff, but I have a feeling she will bite on it.\n\n\"What are you saying?\" she asks, still acting innocent.\n\n\"This morning, I had nothing to tell IA and shrugged them off. Give me one fucking reason why I don't have something to tell them now?\" I ask.\n\n\"You're going to tell on me?\" she taunts.\n\n\"This isn't fucking middle school!\" I shout, slapping the palms of my hands down on her desk. \"Yesterday morning I found a twenty-year-old girl dead on a roof because a cop couldn't be bothered to file some fucking paperwork!\" I watch her absorb that, and watch her face drop the charade entirely."
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "detective",
        "drama",
        "mystery",
        "police",
        "romance",
        "straight",
        "crime drama",
        "thriller",
        "suspense"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-irishman-at-the-end-of-the-bar"
}