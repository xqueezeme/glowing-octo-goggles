{
    "title": "What You Wish For Pt. 02",
    "pages": [
        "Introduction\n\nAll right, here it is, the second part. Second of six, if I didn't already mention it.\n\nAs usual, it is my fervent hope that you will all read this and comment on it. Comments really are helpful, and I do listen to them. Remember, this story is my reaction to the comment that I don't really cover the female characters very well.\n\nI suppose, now that I've got you snagged at least into reading part two, that I should tell you there isn't a ton of sex in this story. There's a scene in this chapter--and a pretty good, if odd, one that was a lot of fun to write. Still, this is a story about interactions.\n\nAnd that's what I'm telling you all now, so be forewarned: If you've read my past Loving Wives submissions--at least the past two, Goin' Back Home Again and The Bar and Grill--you know that these are not the typical stories you find in this genre. They do have, at their center, a cheating wife. I prefer to explore the implications and outcomes of the cheating for all parties involved. That's what's going to happen here. I'm not telling you whether there will be revenge or (God forbid!) reconciliation. You'll have to read it all to find out. Just be forewarned as you read it.\n\nAgain, please take your time to comment, and make your comments as detailed as you feel comfortable with. Yes, I like the comments that tell me the story is great. I really, really like the comments, though, that tell me what is either good or bad about it. What is and isn't working. In other words, the comments that will help me as a writer.\n\nThanks again!\n\n*\n\nIt was almost two in the morning by the time I drove my rental into Grant City. Since Dad wasn't answering at home, I drove straight to the hospital.\n\nDad, Benny, and Benny's wife Maureen were all in the waiting room.\n\nThey all rose upon seeing me, and we all hugged in turn.\n\n\"It's a stroke,\" Benny said as we hugged.\n\n\"How bad?\"\n\n\"Don't know yet,\" Dad said. \"They're running a bunch of tests now. We won't know for awhile yet.\"\n\nI nodded, then turned to Benny and Maureen. \"Where are the kids?\"\n\n\"My sister has 'em,\" Maureen said. \"She'll keep 'em until we know what's happening.\"\n\nAnd that was it. I couldn't think of anything else to say and neither could anyone else. We were all just plain scared, and no one wanted to give voice to their fears.\n\n* * * * *\n\nAt a little past four, a doctor strode into the waiting room. He was youngish, maybe a few years older than me at most, and he looked dog tired.\n\n\"How is she?\" Dad said, getting to his feet with a burst of energy.\n\nThe doctor's look was grim. \"It was a stroke,\" he said. \"A serious one.\"\n\n\"What's that mean?\" Benny said. \"Is she gonna be all right?\"\n\nThe doctor looked at all of us. He sighed. \"She'll live. But it's going to be a long, hard road.\"\n\n\"I don't care,\" Dad said.\n\nThe doctor looked at him. \"She's going to have some serious physical impairments. Paralysis on the right side of her body. And speech. She'll need a lot of therapy, both speech and physical.\"\n\n\"But that'll fix it, right?\" Dad said, the fear in his eyes.\n\nThe doctor shook his head. \"Not totally. I'm afraid a lot of it's going to be permanent.\"\n\nDad looked like a balloon that had been pricked with a pin. He just slowly sagged back into the chair.\n\n\"Don't get me wrong,\" the doctor rushed in. \"She's still sharp as a tack. And she'll regain her speech with time, though it won't be as fast as it used to be. And she'll be able to walk again. It'll just be with a limp.\"\n\nDad looked up at him, his eyes pleading.\n\nBenny put his hand on Dad's knee. \"She'll get better, Dad.\"\n\nI put my hand on his shoulder. \"She's a fighter.\"\n\nDad tried to laugh through is pain and fear. \"She is that,\" he agreed. \"She'll get better. You just watch.\"\n\nThe doctor's face said he doubted that, but he had the sense and compassion to just nod.\n\n* * * * *\n\nTwo days later, Benny, Maureen, and I were sitting around the dining room table, drinking our morning coffee. Dad was already at the hospital, making the arrangements for Mom to go to a care facility for the initial--and we were told very intense--physical therapy.\n\nI caught Benny and Maureen shooting glances at me and then at each other, Maureen raising her eyebrows and nodding her head toward me.\n\n\"What?\" I said, looking at her. \"Just say it.\"\n\nBenny cleared his throat. \"Uh . . . well . . . Ty-- \"\n\n\"Someone's gonna have to stick around here for awhile,\" Maureen said, flustered with Benny's attempt to state the obvious that had been hanging over our heads for the past two days.\n\nI nodded. \"I know.\"\n\n\"Dad can't really take care of himself,\" Benny added.\n\n\"Can't cook for shit,\" I agreed.\n\n\"And probably has no clue how to run a washer or dryer, either,\" Maureen added.\n\n\"And he's gonna be real busy going to and from the therapy center and all,\" Benny piled on.\n\n\"Guys,\" I said, \"you don't have to convince me. I know.\"\n\n\"Well,\" Benny started, then stopped, unsure how to continue.\n\n\"I've got a lot of time off coming,\" I said.\n\nThe relief was evident in his face.\n\n\"Don't worry,\" I continued. \"I'll stick around for awhile.\"\n\n\"You always were a lot better in the workshop,\" Maureen said.\n\n\"The workshop?\" I said.\n\n\"Yeah,\" Benny explained. \"Someone's gonna have to keep the orders filled, right? It's not like Dad can just drop everything. At least, I don't think they've got that much saved up.\"\n\nI hadn't really thought about this part of it. Made sense, though. Someone had to make the cabinets and the occasional custom tables and chairs, dressers and bookcases. And they were right. Benny would lose fingers within a week. A complete klutz.\n\n\"You're right,\" I said.\n\n* * * * *\n\nWhen Dad came home that night, we went out back to the pole barn that served as his workshop--and the rest of the cabinetmaking and woodworking business, for that matter.\n\n\"You'll need to keep orders filled,\" I explained on the way out.\n\n\"Yeah,\" he sighed, not really caring.\n\n\"So why don't you show me what's in the hopper and I'll start first thing tomorrow?\"\n\nHe stopped, turned, and fixed me with a stare. I had his attention, that's for sure.\n\n\"You even remember how to do any of this? How to work with your hands?\"\n\n\"It'll come back,\" I promised.\n\nHe moved his mouth, grinding his teeth as he thought it over.\n\n\"I'll stay home tomorrow,\" he said. \"Go over everything and keep an eye on you. See if you've still got it.\"\n\nI smiled. \"Fair enough.\"\n\n\"Benny and Mo can be with your mom.\"\n\n\"She'll like that. Get you out of her hair for awhile.\"\n\nHe nodded.\n\nAnd we proceeded to the workshop and went over the orders that needed to be filled, the plans that needed to be completed, the billing that needed doing, and all the other things that go into running your own little business.\n\nAfter more than six years dealing with far larger figures, the business end of things didn't really intimidate me much.\n\nLooking at some of the pieces sitting around in various stages of completion, though, left me in awe. The tight joinery and sculpted flow of the furniture started me sweating, and the hand cut dovetails on the drawers and casework scared the shit out of me.\n\nI hadn't done a hand-cut dovetail joint in more than seven years, but I remembered how long it took me to originally master the art.\n\nMaybe we could just hire someone? I thought.\n\n* * * * *\n\n\"Sam,\" I said into the phone, \"I'm gonna need some serious time off.\"\n\n\"What?\"\n\nHe was apoplectic, as I knew he would be. Sam Runyon was the Senior Vice President/Bonds at McDaniels Smyth, and the thought of time off was contrary to the fiber of his very being.\n\n\"It's my mother,\" I explained. \"She's had a stroke.\"\n\n\"She okay?\" he said, still gruff.\n\n\"No, Sam, she's not okay. She's pretty fucked up.\"\n\n\"She's not going to die or anything, is she?\"\n\n\"No, she's not going to die,\" I said.\n\n\"Then what's the problem?\"\n\n\"My dad,\" I explained. \"He needs someone around for awhile until she's out of inpatient therapy.\"\n\n\"Like how long?\"\n\n\"Like a month.\"\n\n\"A month,\" he wailed, half sorrow, half unbelieving.\n\n\"Maybe more,\" I said.\n\n\"More than a month,\" he bemoaned.\n\n\"It's not like-- \"\n\n\"I don't know, Collins. Really. You're asking a lot here.\"\n\nThat pissed me off. I'd given my everything to these pricks, and now they're pissed off I needed to take care of my folks? You're fucking kidding me, right?\"\n\n\"Sorry,\" I said, biting my tongue. \"I can't really get out of this.\"\n\n\"I'm gonna have to run it by the higher ups,\" he said. \"It's not that simple. I mean, you need a week, sure. You got it. Two weeks? Yeah, we should be able to cover. But a month? I mean-- \"\n\n\"I'm not asking you, Sam,\" I said, my voice getting firm as I struggled to keep from exploding. \"I'm telling you, okay?\"\n\nHe paused, undoubtedly surprised that anyone would so blatantly challenge his authority.\n\n\"Do you know what you're saying?\" he said. \"That maybe you're giving up your current position? You want that?\"\n\n\"I don't really have a choice,\" I said. \"This is my parents we're talking about here, not some goddamned sick dog or something.\"\n\n\"And what are we supposed to do while you're gone? Who's supposed to cover for you?\"\n\n\"That's not my problem.\"\n\n\"It sure as goddamned hell is your problem, Collins. This is your department. You answer for it.\"\n\n\"So I should what?\" I exploded. \"Just say, 'Hey, sorry Mom and Dad. Can't help out here. Hope you don't lose everything and all. Be sure to write at Christmas. Oh, and Mom? You get well, Sweetie.' Huh? Is that what you're sayin' I should do here?\"\n\n\"I don't really give a shit what you do, Collins,\" he snapped, his voice getting harder. \"I'm just sayin' it's not my problem. Not McDaniels Smyth's problem. Got it?\"\n\n\"Loud and fucking clear, Sam,\" I said before I'd even thought about it. \"And bonds isn't my problem right now, either.\"\n\n\"What's that supposed to mean?\" he demanded.\n\nI thought for a moment before answering. These bastards had already gone a long way toward destroying my marriage--granted with plenty of help from Kristin and me. And they'd demanded hours that slaves would revolt over in pursuit of the almighty dollar. Now they wanted me to just abandon the only family I had left?\n\n\"That means two things, Sam,\" I said. \"First, it means I resign. Effective immediately.\"\n\nI heard him suck in his breath, then he got control of himself.\n\n\"You said two things,\" he said slowly.\n\n\"The second thing is my severance package,\" I said. \"I want two fifty.\"\n\n\"You're fucking nuts,\" he exploded into the phone. \"You're quitting on us. We're not firing you. And you're doing it with no notice. And we should pay you for this?\"\n\n\"Read my employment contract, Sam,\" I said. \"We're nine months into the fiscal year. And I've accrued sixty days in vacation that you can't really deny me. So you're going to pay me for the vacation time I've earned, and you're going to pay me a quarter mil on top. As severance pay.\"\n\n\"And if we refuse?\" he said, knowing better than to bluster his way into a corner without the full threat before him.\n\n\"Two things. First, I'll just take my sixty days of vacation, and there ain't shit you can do about it. Then I'll come back for the last thirty days and resign the second the fiscal year is up. In which case you'll still owe me my bonus. Second, I'll call Carl Stepford over at Midlands Financial. I'll tell him all about leaving you guys and why and I'll snag them for someone else.\"\n\n\"You wouldn't dare,\" he gasped, genuinely amazed at my complete prickishness.\n\n\"The fuck I wouldn't,\" I said. \"You owe me at least one ninety for the bonus, and you'll be making money off Midlands long after I'm gone.\"\n\n\"Let me get back to you,\" he said.\n\nTwenty minutes later, my cell rang.\n\n\"That didn't take too long, Sam,\" I said.\n\n\"It's not Sam,\" a measured baritone voice said into a speakerphone on the other end. \"It's Bertram MacReynolds.\"\n\n\"Oh, Mr. MacReynolds,\" I said, surprised the head of McDaniels Smyth himself was calling.\n\n\"There seems to have been an unfortunate misunderstanding, Tyler,\" he said.\n\n\"How so, sir?\"\n\n\"I think Mr. Runyon may have jumped the gun a bit, Tyler. Maybe been a bit too harsh.\"\n\nI smiled, deciding to say nothing in response.\n\n\"Are you still there?\"\n\n\"Still here, sir.\"\n\n\"What I'm saying, Tyler, is that you have sixty days of vacation coming. Sixty days you've broken your back to earn. And if you need to take that time to be with your family, then we're all for it. Your job will be waiting when you get back, okay?\"\n\n\"I don't know, Mr. MacReynolds,\" I said, knowing how I was going to play this. \"I mean, he seemed awfully sure about the firm's position.\"\n\n\"I speak for this firm, Mr. Collins,\" MacReynolds thundered. There was a pause, and when he spoke next his voice was more gentle. \"We're really sorry to hear about your mother, son. And we don't turn our back--I don't turn my back--on our valuable employees in their times of need. So if you need to take the time, then please take it.\"\n\n\"Sorry, sir,\" I said. \"I'm not coming back.\"\n\nI could picture poor Sam Runyon sitting across from MacReynolds at this very moment, shrinking from the glare that was undoubtedly scorching his skin.\n\n\"But here's what I'm willing to do, sir,\" I continued. \"You approve the severance package I asked for, and I'll make sure you keep Midlands through the transition.\"\n\nLet's face it, folks, Bertram MacReynolds didn't give two shits about me or my Mom. He wanted to keep Midlands.\n\n\"All right, Tyler,\" he said warily, \"we're listening.\"\n\n\"You appoint my replacement. Then you send him--or her--and Sam up to get me in Chicago. I'll go with them to Midlands and introduce everyone all around. I'll stick to the sob story of why I'm leaving despite your best efforts to help me out. And I'll ease the transition. I'll make sure they think you guys are still golden.\"\n\nThere was some hissed whispering on the other end, then MacReynolds spoke again.\n\n\"I'm not so sure Mr. Runyon is the right person to accompany you,\" he said. \"We're afraid there'll be-- \"\n\nI knew what he was going to say, and I decided to let Runyon off the hook. He'd always been good to me. Even if he had worked me half to death for six years. He'd kept up his end of the bargain, but he was a company man. I knew how he'd react to my requested time off. I just didn't know it would kick me in the ass to move on with my life for good.\n\n\"Mr. MacReynolds,\" I interrupted, \"Sam Runyon is the best damned boss a man could have. I'm not mad at him, and I bear him no ill will. He's great at his job, and our earlier . . . er . . . disagreement has nothing to do with why I'm leaving.\"\n\nMacReynolds cleared his throat. \"Oh . . . well . . . . Tyler.\"\n\n\"Sir?\"\n\n\"You sure you won't be changing your mind about this?\"\n\n\"I'm sure, sir.\"\n\nThere was some more hushed whispering on the other end.\n\n\"We'll get the vacation pay direct deposited into your account by close of business today,\" he said. \"And we'll e-mail you a severance agreement to review. If it meets with your approval, we'll pay you the two fifty at the end of the trip to Midlands, okay?\"\n\n\"Half now, half at the end,\" I said. \"And a guarantee that the trip is scheduled within forty-five days.\"\n\n\"Smart boy,\" he chortled. \"And done. We've got a deal?\"\n\n\"It's a deal, sir,\" I said.\n\n\"And Tyler?\"\n\n\"Sir?\"\n\n\"We really are sorry. Both about your mother and to see you go.\"\n\n\"Thank you, sir.\"\n\nTwo weeks later, I spent a Thursday and half a Friday in Minneapolis securing the Midlands account for my former employers.\n\nBy the following Monday, the balance of my severance package was in my bank account.\n\n* * * * *\n\nSo what the hell was I going to do? Not a clue.\n\nThat little phone call insured I wouldn't have to worry about money any time soon, though. With my savings, stock options, and--even after taxes--the severance pay and vacation pay, I had a tidy little nest egg of almost seven hundred grand. Maybe not enough for the high life in West Palm Beach, Florida, but more than enough in Grant City, Illinois.\n\nIn the land of the blind, the one-eyed man is king. And things were a whole lot cheaper in Grant City than in West Palm.\n\nSo I had plenty of time to figure out what to do with my life. And how to get my stuff from West Palm to Grant City.\n\n* * * * *\n\n\"Susan?\" I said, calling the only person I really knew in Florida. It helped, too, that she had the key to my apartment.\n\n\"How's your mother?\" she asked.\n\n\"Better,\" I said. \"A stroke. Pretty bad one, too. But she's getting better now, thanks for asking.\"\n\nI could her the exhalation that told me she actually gave a shit about the mother of a man she'd only spent two nights with.\n\n\"I was wondering if you could do me a favor?\"\n\n\"The book?\" she said.\n\nI paused, having forgotten all about it. \"No. It's a little more important than-- \"\n\n\"I don't think anything's more important than getting it published,\" she said, her voice getting excited. \"Jesus, Tyler, it's fucking brilliant.\"\n\n\"You read it?\"\n\n\"Of course I read it,\" Susan said. \"You think I'm gonna just pawn it off without seeing if it was any good?\"\n\nI chortled, pleased with myself. \"And you liked it?\"\n\n\"Loved it,\" she said. \"And I've already sent it along to my friend. She should be getting it today or tomorrow.\"\n\n\"Well . . . uh . . . thanks,\" I said. Both the praise and her keeping the promise I'd totally forgotten about were more than I'd expected. If I'd even remembered about the book, that is.\n\n\"So,\" she said, \"you called.\"\n\n\"Yeah. Listen, I'm gonna be moving up here for awhile.\"\n\nSusan was silent. Disappointed? I couldn't tell.\n\n\"Mom's in a rehab center,\" I said after a moment. \"Dad's got his own business, and he needs help running it right now.\"\n\n\"What about your brother? Bobby or whatever his name is.\"\n\n\"Benny,\" I corrected. \"He's married. Kids. Lives four hours away by car.\"\n\nShe was silent again.\n\n\"And I need some help getting my stuff up here,\" I continued. \"You have my key and all. I was just thinking.\"\n\n\"Sure, Tyler,\" she said, her voice soft. \"You know that. What do I need to do?\"\n\n\"Let me make a few calls,\" I replied. \"See who I can hire. Once I get someone lined up, I'll give you a call. You can probably just drop the key off with 'em or something.\"\n\n\"Sure,\" she said, trying to project a chipper mood. \"No prob. Anything.\"\n\n\"What's wrong?\" I said.\n\n\"Nothing.\"\n\n\"Come on, I can tell. You . . . I don't know . . . I mean . . . .\"\n\n\"Yeah,\" she sighed.\n\nJust that. Yeah. Said it all. She was interested in me. Cared for me. Maybe wanted to make a go of trying to date me.\n\n\"Sorry,\" I said. What else could I say?\n\n\"Don't be.\" She tried laughing, but failed. \"Shit happens, right?\"\n\n\"Guess so,\" I agreed.\n\n\"And it was only a few days, right?\"\n\n\"Maybe the first time,\" I said, sadness overwhelming me. \"Not the second time, though.\"\n\n\"So there could've been more?\"\n\n\"I told you. You're special. Smart, nice, beautiful.\"\n\n\"With a career.\"\n\n\"And a thousand miles away,\" I added.\n\n\"So you've quit?\" she asked. \"Your job?\"\n\n\"Uh huh.\"\n\nThe silence lingered. Ten seconds. Twenty.\n\n\"Get me the number,\" she said. \"Whoever you hire. I'll make sure it all gets back to you, okay?\"\n\n\"Thanks, Susan.\"\n\n\"And be looking for a call from an agent, okay? Her name's Natalie.\"\n\n\"I will.\"\n\n\"And Tyler?\" she said. I could hear her sniffling, like she was about to cry if she wasn't already.\n\n\"Yeah, babe.\"\n\n\"You take care of yourself, okay?\"\n\n\"You, too.\"\n\nShe hung up.\n\nCHAPTER SIX\n\nTwo weeks later, mid-June, my car, furniture, and all personal belongings were safely delivered from Florida. All but the car, my clothes, and my computer were safely put into a storage garage until I could find a place of my own, which wouldn't happen until after Mom came home from rehab.",
        "A quick online search netted me the address of Susan's employer--I'd never gotten her home address--and I sent her a set of diamond earrings for all of her help. She called to protest, but I wouldn't hear of it. She'd been there when I needed her, which was far more than I was entitled to expect.\n\nI was working twelve hours a day in the workshop, sometimes with Dad, but usually alone. My woodworking skills had returned--mostly. With Dad's occasional help, I was keeping up with the orders and putting out high quality furniture and cabinets. Dad only had to fix a few glaring blunders, but what did he expect? If nothing else, he was getting far better quality than he was paying me for, which was zero.\n\nIt was mid-morning, and I decided to take a break from some dovetails on a set of drawers for a Queen Ann lowboy I was making out of quilted maple. Sipping coffee, I pulled out my cell phone and saw a voice mail message.\n\n\"Mr. Collins,\" a husky woman's voice said, \"this is Natalie Jagodzinski. A . . . uh . . . a mutual friend of ours has passed along something you wrote. I've read it, and I'd like to meet with you to discuss some things. Please give me a call at your earliest opportunity.\"\n\nShe gave a number, so I called her back.\n\n\"South Beach Talent,\" a chirpy voice answered.\n\n\"I'm returning Ms. Jagodzinski's call,\" I said.\n\n\"May I tell her who's calling?\"\n\n\"Tyler Collins.\"\n\n\"One moment.\"\n\nThirty seconds later, the husky voice came back on the line.\n\n\"Tyler,\" she said, her voice loud and cheery.\n\n\"Yes, ma'am.\"\n\n\"Natalie,\" she said. \"Call me Natalie.\"\n\n\"Okay,\" I replied. \"Natalie. You called? Wanted to meet with me?\"\n\n\"Like yesterday.\"\n\n\"So you've read Long Gone?\"\n\n\"Read it and loved it,\" she gushed. \"It was wonderful.\"\n\nShe stretched out the n in wonderful. It came across as 'wonnnnn-derful.'\n\n\"Thanks. So you think . . . maybe someone . . . . You think I can get it published?\"\n\nShe laughed. A phlegmy, coughing laugh. A laugh coated in cigarettes and scotch.\n\n\"No, darling,\" she said. \"You can't get it published. But I can.\"\n\nI smiled. \"Okay. Then what do we do?\"\n\n\"Well, the first thing we do is sign you up. To our agency.\"\n\n\"And how do we do that?\"\n\n\"You have a fax? Internet connection?\"\n\n\"Both,\" I said.\n\n\"Give me your e-mail. I'll send along the standard agent's agreement. You look at it, make sure it's kosher, then sign it and overnight it back to me. Okay?\"\n\nI thought about it. My research had told me what agents charged, but I wasn't a lawyer. I wouldn't know what half the damned thing said.\n\n\"Can you copy Susan on it?\" I asked. \"On the e-mail?\"\n\n\"Susan Karapova? Of course, darling,\" she said. \"Good idea. She gonna be representing you from now on?\"\n\n\"Don't know. I'll have to ask her.\"\n\n\"Consider it done,\" she said.\n\nAt least she didn't seem set on screwing me. If she was, she'd have probably tried to talk me out of the whole lawyer thing, but her compliance had been immediate and perfunctory.\n\n\"You met with any other agents yet?\" she continued.\n\n\"No.\"\n\n\"Good,\" she gushed, the relief evident in her enthusiasm. \"Then, if you don't mind, I'll start shopping this to some publishers.\"\n\n\"Before we're signed up together?\" I said.\n\n\"You gonna screw me, Tyler?\" she asked.\n\n\"No.\"\n\n\"Then I'm not gonna screw you, okay? And we need to get moving on this. We can have it out by Christmas, which is perfect.\"\n\n\"So you think it's good?\" I asked again.\n\n\"No, Tyler. I think it's absolutely, one hundred percent brilliant. I think it'll be a bestseller. Maybe even win a few awards. So the sooner it's published, the better.\"\n\nI was amazed. I mean, sure, I'd killed myself writing it. But still, it was my first book.\n\n\"Of course,\" Natalie said, interrupting my thoughts, \"you'll need an editor. There's some places that need some work and all. But that's common. The editor will know where and what to do.\"\n\n\"An editor?\"\n\n\"The publishing house usually assigns one,\" she said. \"They always do.\"\n\nI hadn't thought about that. Apparently even brilliant first books still need work, the work of a more professional eye.\n\n\"Well,\" I said, \"whatever you think is best, I guess. I mean, I'm new to this and all.\"\n\n\"Okay,\" she said, pausing before continuing.\n\n\"What?\" I said. \"What're you-- \"\n\n\"Well,\" she said, drawing it out, \"there's a freelance editor near you. In Chicago. We could hire her, then get reimbursed.\"\n\n\"That's kosher?\"\n\n\"There's a chance they won't agree to reimburse, in which case you'd have to pay it from your share of royalties. Maybe as much as ten for fifteen grand.\"\n\n\"But it'll get the book out sooner, right?\"\n\n\"In time for Christmas,\" she said.\n\n\"Then it'll be worth it, right?\"\n\n\"Probably.\"\n\n\"Then do it.\"\n\n\"I'll get right on it,\" she sighed. \"Okay, you get that e-mail opened, printed. Go over it with Susan or whoever you hire. Sign it and get it back to me. I'll get to work getting this published, okay?\"\n\n\"Okay,\" I said, then thought again about the message. \"Do we need to meet, though?\"\n\nBut she'd already hung up. I guess meeting with me wasn't in the cards.\n\nWhich was fine.\n\nI didn't want to go back to Florida just yet.\n\n* * * * *\n\nEarly the next afternoon, Susan phoned. The proposed agent agreement was fine, she said.\n\nSo I signed it.\n\nI somehow felt more like a real writer. C'mon, I had an agent, right?\n\nCHAPTER SEVEN\n\nThe Fourth of July that year fell on a Friday. Therefore, Thursday night became the busy bar night with old classmates and friends and family all flying in from out of town to see their long lost loved ones.\n\nAnd I was tired of writing nights, even though the new outline was cruising along well and almost done. Though it had originally come faster than the original story, I was now making it more complex, adding additional layers to the story.\n\nSo, I figured, what the hell. Dad was visiting Mom, and he'd grab a bite to eat on his way home. It was almost seven-thirty, and I was in the mood for some companionship. A few beers at the Bar and Grill sounded perfect. So by eight, I was showered, shaved, dressed in clean shorts and golf shirt, and pulling into the overflowing parking lot of the Bar and Grill.\n\nThere are three types of people in Grant City. Those that go to the Bar and Grill; those that go to The Hitching Rail; and those that go to the other bars. Combine all the other bars, though, and they don't do nearly the business as either the Bar and Grill or The Hitching Rail. That's mostly because of the food at the two hot spots, though. The Bar and Grill definitely has better food. Hell, everyone knows that and pretty much agrees on that. Still, sometimes you're just in the mood for a really good, greasy burger with a pile of skinny, salty fries, and that's when The Hitching Rail comes in. Also, The Hitching Rail has live bands a couple of times a month, and you can still see some of the fellas from General Beauregard dropping by when they're not touring or in the studio. So, like I said, they both have their adherents.\n\nI'm a Bar and Grill guy. I like the food because it's lighter and--okay--a bit fancier. Definitely not your normal pub grub. Mostly, though, I prefer the ambience. It's got a juke box, to be sure, but it's rarely blaring too loudly and the tables are spaced enough to give you some room. I prefer a quieter joint where the bartender leaves me alone if I want to be left alone.\n\nThe place was packed to the rafters tonight, though. Just as I knew would happen, there were a ton of classmates from different years standing around tables, sharing pitchers of beer, and catching up on their families and careers or just talking old times. The dining room was full, too, and I was quick to put my name in for a table.\n\n\"Need some company for dinner?\" a voice behind me said.\n\n\"Allie,\" I said without turning around.\n\n\"The same,\" she said, leaning over my shoulder and pecking my earlobe with her soft lips.\n\nI turned and took her in.\n\nAllisyn Palmer, Kristin's cousin. The prettiest of the Palmer girls, and there were a lot of pretty ones. Everyone in Grant City had been saying for years that old Grandpa Palmer should've been put out to stud because all the female progeny in his line were such incredibly beautiful specimens of the female form.\n\n\"You look great,\" I said, staring at her smiling face and twinkling hazel eyes. \n\n\"You, too, handsome,\" she said, taking a sip from her bottle of Corona, but keeping her eyes on me the whole time.\n\n\"Still single?\"\n\n\"Uh huh,\" she said. \"And fishin' for a dinner date.\"\n\nI smiled. \"There'd be a damned line in here a mile long if that were the case.\"\n\n\"I'm giving you first shot,\" she said, her eyebrow raising at the invitation.\n\nI kept smiling, but my mind started churning a mile a minute. Back a couple of months and I'm facing my ex-wife's cousin trying to snag me. Don't get me wrong, she was drop dead gorgeous, but this just didn't seem like a really good idea.\n\n\"You're single,\" she said, pushing her attack. \"She left you, not the other way around. So that means you're available and free to go out with anyone you want.\"\n\n\"Yeah, but your father. Her father.\"\n\nShe laughed, flashing straight, impossibly bright teeth as she did so. And she had Kristin's dimples when she smiled, I noticed.\n\nAnd Kristin's . . . look. The Palmer girl look. A look of sexual invitation that was hard to resist.\n\n\"I'm not asking you to a family reunion, Tyler,\" she said, holding her beer out to me.\n\nI took a gulp, closing my eyes and enjoying the ice cold, lime-tinged beer as it chased down my throat. This wasn't a really good idea.\n\n\"Sure,\" I said. \"I'd love to have dinner with you, Allie.\"\n\nWe chatted easily, both while waiting for our table, then over dinner.\n\nIt was easy. After all, we'd known each other most of our lives. We'd been at the same Christmas parties, Thanksgiving dinners, picnics, family reunions, and cookouts for nearly a decade. She was only a year behind me in school, and we'd pretty much run around with the same crowd. So we had plenty to talk about.\n\nThank God she waited until after dinner--while we shared a bowl of cherries jubilee over vanilla ice cream--to bring up the ex.\n\n\"She's miserable, you know.\"\n\n\"Who?\" I said.\n\n\"Kristin.\"\n\nI didn't say anything.\n\n\"They're stuck in this crappy little two-bedroom condo over on Adams,\" she continued. \"His from before they got married. It's small and crappy and she's home alone with the baby all day and nothing to do. Not enough money and all.\"\n\n\"Her problem,\" I said. \"She made her bed.\"\n\n\"She said you were ignoring her,\" Allisyn prodded. \"You were gone all the time. On business. Working forever. And she was always home alone with no friends and nothing to do.\"\n\n\"Then she should've gotten off her ass and gotten a job,\" I said, trying to restrain my anger.\n\n\"You're right,\" Allisyn agreed. Then she sucked on a cherry that was on the tip of her spoon, her eyes on me the whole time.\n\n\"I'd rather not talk about her,\" I said, mesmerized by her pouty lips sucking on that poor, innocent little cherry. Okay, that lucky goddamned cherry.\n\n\"Just thought you'd wanna know,\" she said, sucking the cherry into her mouth and chewing on it. \"She screwed the pooch, and she damned well knows it.\"\n\n\"Good.\"\n\n\"So,\" she said, scooping another cherry onto her spoon and looking at it before looking at me, \"now that you're back and all. Now that you don't have that high pressure job a thousand miles away.\"\n\n\"Yeah?\" I said, urging her to finish the thought or start sucking on the cherry. Either would do.\n\nShe flicked the tip of her tongue over and around the cherry, her eyes telling me she was enjoying my rapt attention.\n\n\"Well,\" she said, \"you thinking of maybe trying to win her back?\"\n\n\"You're kidding, right?\"\n\nShe raised her right eyebrow in a mixture of surprise and joy.\n\n\"Not a chance in hell,\" I said. \"She's married now. With his kid. So like I said: She made her bed.\"\n\n\"So if she was married, but it was your kid?\"\n\nI stared at her. \"What's the difference? It's not. And she already found her knight in shining armor. They can have each other.\"\n\nShe started sucking on the cherry again, and I just as quickly forgot the conversation.\n\nWith a quick flick of the tongue, she rolled the cherry into her mouth and chewed on it. Slowly.\n\n\"I've got an idea,\" she said.\n\n\"I'm all ears.\"\n\n\"What say we mosey on up to the bar. Maybe have a few more drinks.\"\n\n\"Sounds great,\" I said, wondering how much the bartender would charge me for a dish of maraschino cherries. Now I wanted to know if she could tie the stem with her tongue.\n\n\"Then,\" she said, leaning in closer, \"we can go back to my place for awhile.\"\n\nHere it was. The moment of decision. The second where I can either do the smart thing or I can accept her invitation.\n\n\"Sounds like a plan,\" I whispered.\n\n\"You sure?\" she said. \"Because you don't sound so sure, Tyler.\"\n\nI smiled. \"Positive.\"\n\nWhat can I say? I'm a man, right? Flesh and blood.\n\n* * * * *\n\nAllie had a small home on Polk Street, over on the north side of town. She taught English at Grant City High, so she didn't make a ton of money. Then again, she'd never been married and had no children, so she only had herself and her home to spend her money on.\n\nThe home was neat, tastefully decorated, and loaded with pictures of the many generations and branches of the Palmer clan. Just looking at the pictures of all those beautiful female cousins would get a dead man hard.\n\nWhat got me hard, though, was Allie's actions the moment we walked in the door.\n\nShe led the way, me following close behind until I ran into her in the dark living room.\n\n\"I've wanted this for a long time,\" she said, snaking her arms around my neck and pulling me in for a kiss.\n\nIt was a long, soulful kiss. The kind that say we've got all night, so let's take our time. You know the type: Lips brushing then pressing, the tip of a tongue tracing around the lips then slowly seeking out another tongue, heads tilting back and forth as the passion heats up. A barnburner kiss, the kind that turns a half hard pecker into a full-blown diamond cutter.\n\nWe kissed for ages. It could've been ten minutes, could've been ten hours. I was lost in her passion and my need. She looked so much like Kristin, but I kept that out of my mind. This was Allisyn, sweet little Allisyn, and she'd wanted me forever. Said so herself. That seemed good enough, and it was far different from the others I'd spent anonymous evenings with over the past year or more. All except Susan, but I banished her from my mind and concentrated on the excitement of the now.\n\nAllie's hands moved down my back, her fingertips firm and feeling, and her hips melded with mine. Pressing, grinding slowly.\n\nThen one of her hands was on my ass, and I felt the other take my wrist and guide my hand from her shoulder to her breast. Her breasts were bigger than Kristin's, more firm, and I could feel her taut nipple through the thin fabric of her cotton shirt. When I squeezed, she moaned into my mouth and her hips picked up the pace against my own.\n\n\"So long,\" she whispered.\n\nI kissed down to the side of her neck, my hand squeezing her entire breast while the other went to her ass and squeezed while pushing her even harder to my cock.\n\n\"I want you,\" she mumbled as I licked and gently sucked on the hollow near her clavicle.\n\n\"How?\" I asked, unsure as I always was the first time.\n\n\"However you want,\" she whispered into my ear, opening up worlds of possibilities.\n\n\"I want you to tell me what you want,\" I managed to say as my mouth moved to her cleavage while my hand unbuttoned the top three buttons of her blouse.\n\n\"Just do what you want,\" she said. \"Anything.\"\n\nAllie's breath was coming in gasps now as I sucked hard on the insides of her breasts, kissing then sucking.\n\n\"The bedroom,\" I mumbled into her breasts. \"Let's go there.\"\n\nHer moan told me she didn't want me to stop, but she needed to get this to the next level quickly.\n\nThen she pushed back and grabbed my hand, tugging me down the hallway to the door at the end. I followed her in as she flicked on the light.\n\nSweeping my eyes around the room, a broad smile came over my face.\n\n\"Somebody's a naughty little girl,\" I said, looking from her face to the nightstand.\n\nShe turned with my eyes, saw the toys and the small bottle of lube, and blushed. When she turned back to me, she fought to meet my eyes.\n\n\"You said anything, right?\"\n\nShe nodded, trying to fight through her embarrassment.\n\n\"Good,\" I said, pulling her close and kissing her again.\n\nWhile we kissed, I walked her toward the bed until her legs bumped the mattress. She froze, but I gently led her down to the mattress.\n\n\"This headboard seems perfect for what I have in mind,\" I said, breaking the kiss and looking around the room.\n\nSpying what I needed, I broke away and walked to the chair in the corner.\n\n\"You're going to . . . .\"\n\nI turned around and saw excitement mingled with trepidation.\n\n\"You said anything,\" I challenged.\n\nShe fell silent under my raised eyebrow and the bathrobe sash in my hand.\n\nSeeing her acquiesce, I smiled and walked back to the bed. I gently pushed Allie back and raised her arms above her head. Then I tied her hands together with the sash and tied the other end to the headboard.\n\n\"I've never-- \" she started.\n\n\"You'll like it,\" I said, leaning in and kissing her. \"I promise.\"\n\nShe nodded, licking her lips and excitement flashing in her eyes.\n\nI leaned in and unbuttoned her shirt, kissing her belly and down to the top of her shorts as I did so. While doing that, I flicked open her front-clasped bra, then pushed my hand underneath and brushed my hands over her wondrous breasts, squeezing her nipples and occasionally kneading her full breasts.\n\n\"Oh my God,\" she moaned after four or five minutes of my ministrations. \"Tyler, I'm so hot right now.\"\n\n\"Just wait,\" I said, kissing her deeply while my hands moved down and unbuttoned and unzipped her shorts.\n\n\"Please,\" she said.\n\n\"Please what?\"\n\n\"Touch me there.\"\n\n\"We'll see,\" I said, sucking her nipples into my mouth and gently nibbling.\n\nHer arms went taut against the sash tying her to the headboard, and her hips rose and tried to push against my hand over her mound.\n\n\"Somebody's a bit anxious,\" I teased.\n\n\"Please,\" she said, her eyes hungry and excited.\n\n\"But what about me?\" I said.\n\n\"Anything,\" she said. \"Just please touch me there.\"\n\nI stood and quickly shed my clothing, standing next to the bed and watching her as I did so. Once I was naked, her eyes never left my cock.\n\n\"You've got to do something for me first,\" I said, getting on the bed and straddling her breasts, the tip of my pecker inches from her lips. \"Lick it, Allie.\"\n\nHer eyes bore into mine as she leaned her head forward and darted her tongue between her lips, flicking against the tip of my cock. Then, her eyes staying on mine the whole way, she started a long, slow, tantalizing journey around the head then down the sides before coming back up along the bottom.\n\nI bit my lip with the tingling sensations running through my body, turned on by the look in her eyes as she slowly parted her lips and engulfed the head and started sucking. Not bobbing or moving her lips. Just a powerful sucking that was soon joined by a slow twisting of her head in a circle around the head of my cock.\n\nKeeping my eyes on her, I reached my hand behind me and traced my fingertips down to her panties, finding the juncture of her legs. When I brushed over the top of her slit, I watched her eyes close and felt a slow moan around my shaft. Her hips rose to join my fingers, trying to force more pressure. Then her eyes opened, and they were begging for more.\n\nI smiled, and backed away from her mouth before I exploded too soon.",
        "\"Okay,\" I said, \"time to play.\"\n\n\"What're you going to do?\" she said, watching me with big eyes as I picked up the vibrator and the tube of lube.\n\n\"You'll like it,\" I promised, squirting some lube over the vibrator before coating it thoroughly with the palm of my hands.\n\nI leaned in and kissed her, and she returned the kiss a thousandfold.\n\n\"Someone's getting anxious,\" I teased.\n\nShe said nothing, but her anxious face and pleading eyes spoke volumes.\n\nAnticipation. That's the key word, fellas. Don't just go with the wham-bam-thank-you-ma'am. Let it build. Create sexual tension and suspense. Chicks dig it. Trust me.\n\nI walked to the foot of the bed and stared up at her exposed, helpless body. It took my breath away.\n\nI leaned over and slowly tugged her panties down her long, slim legs. They were wet, and I could smell her arousal.\n\n\"So what do you want?\" I said, turning the base of the vibrator until I felt the low hum.\n\nI traced the vibrator up the insides of both legs, stopping every time a mere millimeters from her soaking sex. Her efforts to push down and create the needed contact were frustrated by the sash binding her to the headboard.\n\n\"Please,\" she finally pleaded.\n\n\"Say it,\" I said. \"What do you want?\"\n\n\"I want you to touch me there,\" she said, her eyes now afire and her nostrils flaring with her arousal. \"Kiss me there.\"\n\n\"A kiss?\" I said. I leaned in close, shimmying between her legs until I was face to face with her perfectly trimmed pussy.\n\n\"Like this?\" I said. I leaned in and gave her a peck right on top of her clitoral hood.\n\n\"You know,\" she said, frustrated at my teasing.\n\n\"Maybe like this?\" I planted a trail of kisses on her inner thighs and over the swollen lips of her vulva.\n\nHer hips started a slow grind, trying to force her closer to my face.\n\n\"Maybe like this?\" I said. I spent a few minutes--maddening for her, judging by the reaction--flicking my tongue in little white hot darts over her pussy and clit.\n\nHer breath was coming in a combination of low, throaty moans punctuated with sharp yelps and panting gasps. She was almost there.\n\nFeeling her heat building to maximum level, I moved the vibrator in closer. Then, just as her frustration was about to lash out again, I touched the vibrator to her pussy, full on the lips, and gave a gentle nudge. At the same time, I centered my tongue on her clit, which was now hard as a little pebble.\n\n\"Oh yes,\" she gasped. \"Oh yes, Tyler, just like that.\"\n\nI continued my oral ministrations while nudging the vibrator in and out, going a bit deeper with each penetration. Allie was going wild, and her hips were gyrating crazily.\n\nJust as I thought her excitement was too much for my face to keep contact with, though, I was roughly reminded that her legs weren't tied down. I found this out, of course, when her legs locked behind my head and kept me locked in place.\n\nOkay, folks, we might as well just agree on this now: There are a whole lot worse ways to die than suffocating between the legs of a thrashing woman in the throes of orgasm. You at least go out knowing your last act was to provide orgasmic bliss, know what I mean?\n\nAs Allisyn's orgasm subsided, so too did her lock on my head. Gasping for air, my face covered in her juices, I slowly pulled the vibrator from her pussy.\n\nShe was laying back, her eyes closed, a huge smile plastered on her face.\n\n\"Fucking wow, Tyler Collins,\" she said.\n\n\"It was okay?\"\n\n\"Okay?\" She laughed, then lifted her head and looked at me. \"It was more than okay. A lot more.\"\n\nI smiled, kneeling between her legs. Then I hopped off the bed, reached into my pocket for a condom, and sheathed up.\n\n\"I'm safe,\" she said.\n\n\"So am I,\" I said. \"Still. It's a good idea, don't you think?\"\n\n\"Just so long as you get that thing in me, I don't care if it's wrapped in aluminum foil.\"\n\nI rubbed the head slowly up and down the length of her slit.\n\n\"So how you want it?\" I said.\n\n\"In me. Now.\"\n\n\"In you where?\" I said, nudging down a little lower.\n\nHer head looked up, startled at first. Then a slow smile crept over her face.\n\n\"You're looking for the whole kinky experience, aren't you?\" she said.\n\nI shrugged.\n\n\"You put it wherever you-- \"\n\nHer last word was cut short as I adjusted upward and pushed into her molten core in one slow, steady push. Allie's head went back, and a low moan escaped her lips as I bottomed out and held there, grinding my pelvis against her for added friction on her clit.\n\nShe was drenched and on fire, the moist heat noticeable even through the thin latex of the Trojan. And her hips were grinding against me, trying to increase the friction.\n\nI reached down and grabbed her legs, lifting them up and putting them in front of my chest.\n\n\"This feel good?\" I said, looking at her.\n\nShe nodded, biting her bottom lip and watching as I withdrew and pushed back more forcefully, soon getting up a steady rhythm.\n\n\"You're so . . . it's so . . . . You're filling me up,\" she moaned, turning her head to the side and clutching the sash binding her wrists.\n\nI kept picking up the speed, knowing I wasn't going to last for long but wanting her to peak at least one more time before I did so.\n\nShe didn't keep me waiting long, either. After little more than a minute, her ass was up off the mattress and her body was taut as she gasped repeatedly with another orgasm.\n\nAs she came, I reached up and freed her hands. She frantically tried to help me through her sensations, and we managed to free her as her orgasm subsided.\n\nHer hands immediately went to my ass and tried to pull me in deeper with every thrust, and she came again moments later.\n\nThat was the one that set me off, and I felt my backbone melting with my own, incredibly extended release.\n\nThen we melted into each other, kissing and murmuring, stroking and hugging.\n\n\"What the hell was she thinking?\" Allie whispered into my ear.\n\n\"Let's not talk about her right now,\" I said, enjoying the feeling of her heartbeat through her sweaty breasts.\n\n\"I've never,\" she started, then started over again. \"No one's ever gotten me off like that, Tyler. No one.\"\n\n\"It's been awhile,\" I said. \"I wanted it to last. To be good for you. Because I knew I wouldn't last very long.\"\n\nShe grabbed a handful of my hair, pulling my head back until we were looking at each other.\n\n\"So you're probably good for at least one more round?\"\n\nThe look on her face was a mixture of pure glee and raw hunger.\n\n\"At least,\" I promised.\n\n\"Then let's see how long it takes me to wake this little soldier up again,\" she said, sliding down the bed and surrounding my soft soldier with her warm, moist, velvety mouth.\n\nIt didn't take her long.\n\n* * * * *\n\nI spent the night at her house, snuggling close in her bed and enjoying the feeling of a warm soft body to wake up with in the morning. And she was up before I was, which was a reversal of roles for me. I'm usually up with the sun, which comes up pretty early in July.\n\n\"Breakfast?\" she said from the doorway.\n\nI'd been awake when she'd slipped out of bed, but I just wanted to linger for a few minutes more.\n\n\"Eggs? Pancakes?\"\n\nI smiled as I opened my eyes and saw her standing--in a short t-shirt and nothing else--in the doorway.\n\n\"Oh no,\" she said. \"Not that, Tyler.\"\n\n\"Come on,\" I pleaded. \"I was there for you when-- \"\n\n\"I'm gonna be walking funny as it is,\" she said. \"You gave it quite a workout last night.\"\n\nI pouted, to which she smiled. Then her smile turned into a grin. Then the right eyebrow went up and she lost the shirt as she strode toward the bed, picking up the bottle of lube as she neared.\n\n\"Okay,\" she said. \"But we're gonna have to explore a different opening if that's okay with you.\"\n\nI sat up straight and snatched the lube from her hands.\n\n\"Thought you'd never ask,\" I said.\n\nI had to use lots of lube, first on my fingers and then on the vibrator, to loosen her up. After that, though, we were off to the races.\n\nAnd a half hour later, I'd been introduced to the best way in the world to start your day.\n\n* * * * *\n\nTwo days later, I was in the Piggly Wiggly, looking at watermelons, when I heard her voice behind me.\n\n\"Was screwing my cousin supposed to be some sick, twisted way of getting back at me?\"\n\nI didn't bother turning around.\n\n\"I'm talking to you,\" Kristin said.\n\n\"And I'm shopping here,\" I said, picking out a watermelon and placing it in the cart. \"Good to see you. Have a nice day.\"\n\nShe had a little boy with her, not even a year old. He was cute and chubby with blonde hair and striking blue eyes. He looked at me in befuddlement, and I smiled at him in return. A smile broke across his face, and spittle dribbled at the corners of his mouth.\n\n\"Hey, handsome,\" I said softly. He flailed his arms in response, and the smile got bigger.\n\nKristin looked from me to her son, then back and forth between us a couple of times.\n\n\"Well?\" she insisted.\n\n\"I don't know what you're talking about,\" I replied, waving goodbye to the toddler before turning to my car and pushing it toward the bakery section.\n\nShe followed me.\n\n\"She couldn't wait to tell me,\" Kristin said. \"And Cilla, for that matter.\"\n\n\"And? That's my fault how?\"\n\n\"Jesus, Tyler, she's my cousin,\" she said as I picked through the loaves of french bread, looking for one slightly stale. Tomatoes were coming in early this year, and I wanted a tomato, basil, and bread salad, drizzled with a fruity extra virgin olive oil, for dinner. It goes perfectly with beer can chicken on the grill.\n\n\"So?\" I said, putting a loaf of two-day old bread in my cart before wheeling toward the meat aisle.\n\nStill she followed, getting exasperated by my nonchalance.\n\n\"You stay away from her,\" Kristin said. \"There's plenty of single women in Grant City for you. I think you can stay away from my family, for Chrissakes.\"\n\n\"No,\" I said, looking at the chickens.\n\n\"What?\"\n\nI picked a chicken, put it in my cart, and turned to face her.\n\n\"I said no.\"\n\nShe glared at me, but I kept my face impassive.\n\n\"You gave up the right to tell me who to date,\" I said evenly. \"It's not your business, so stay out of it.\"\n\n\"But Allie made it my business,\" Kristin fumed. \"So now it's out in the open.\"\n\nI shrugged. \"Bound to happen sooner or later, I guess.\"\n\n\"And you think this is cute? Rubbing it in my nose like this?\"\n\n\"I'm not rubbing anything in your nose, Kristin,\" I said, placing my hands on the cart and wheeling toward the checkout lanes.\n\n\"Tyler,\" she said behind me.\n\nBut I ignored her.\n\nI had chicken to grill and a tomato bread salad to make.\n\nAnd Allie was coming over for dinner."
    ],
    "authorname": "Rehnquist",
    "tags": [
        "bondage",
        "cunnilingus",
        "toys",
        "divorce",
        "blowjob",
        "anal"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/what-you-wish-for-pt-02"
}