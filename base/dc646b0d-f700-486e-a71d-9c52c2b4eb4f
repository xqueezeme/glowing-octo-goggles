{
    "title": "The Sculptor Ch. 01",
    "pages": [
        "NOTE: The narrator of this story is not a self-insert. He's a character I came up with in a dream, and he's a very flawed person with too much power. He's pretentious as hell, he's a narcissist, he can't conceive of the idea that other people's opinions matter, he's at least a little sociopathic, he's a creeper, and of course he's a huge perv. I, the author, do not like to think any of those things apply to me. Except the first one and the last one. Just wanted to set the record straight.\n\n*****\n\nPROLOGUE: A BEAUTIFUL MOMENT\n\nMidday Saturday in late July finds me sitting on a bench in Central Park. This is my favorite place to go on a summer day - the weather is impeccable, and I am surrounded by beautiful scenery and happy people. People here are just so more alive than anywhere else in the city. I have a book with me, but I am barely paying attention to it - the real reason I'm here is to practice my art. Park benches are a great studio for me, because all I have to do is sit and wait for inspiration to strike.\n\nAnd here some is now. A pair of pretty girls, probably in their late teens, walks by hand in hand, enjoying the day, giggling conspiratorially together about some teenaged intrigue or other. I smile. Ah, to be young again. Perfect subjects. I wave my hand, the world seems to bend for just a second, and then everything grinds to a stop. My two adorable subjects freeze in their steps, those goofy smiles still plastered on their faces, mid-stride. And they're not the only ones. Everyone else here, everyone else in the world as far as I've ever been able to tell, has stopped right where they are. A pigeon has paused midway through taking flight, its fluttering wings frozen in air. Even the water droplets springing from a nearby fountain have ceased in their trajectory. Everything is perfectly still and silent. This moment is just for me.\n\nI take a moment to enjoy the beauty of this single moment of bustling city life extended for eternity. Even after all this time, even after all these moments I have taken for myself, it never fails to take my breath away. I like to paint when the world is like this, just me. I'm quite pleased with the output I've gotten this way - I'm able to extract an immense amount of detail and meaning from a single frozen moment when I can take as long as I want to observe things. But my abilities have allowed me a truer, deeper art. You see, I'm a sculptor, of sorts. Of clay, yes, but also of women.\n\nThis moment will last as long as I want it to. Once, on August 14th, 2014, at 3:35 PM, I decided to simply stay in a moment for as long as I could. I walked around New York, then around Westchester County, then around Connecticut. I got as far north as Maine before turning around and walking home, then walked on toward Philadelphia and Washington. I never got tired, never got hungry. I never do when time isn't moving - I just keep walking as long as I need to get where I'm going. I walked, and I sketched, and I painted, and I sculpted, and then finally when I decided it was time to continue my life as I had known it before, I walked all the way back to the same park bench where I had first frozen that one immortal moment in the first place, and I let the moment go. It had felt like a year or more for me, although it was hard to tell since I never tired and the sun never moved, but as the newspapers and my phone informed me, it was still 3:35 PM, August 14th, 2014. Everyone around me went on just as they had when I'd started, unknowing - or knowing, just a little bit - the changes I had made while they slumbered.\n\nPresently I rise, leisurely, amble over to my two beautiful muses, and begin setting their belongings aside. One stands about 5 foot 6 in her summery wedge sandals and sundress, auburn hair a bit past shoulder length framing a pretty, tastefully-made-up face. Her driver's license, in the small purse I glance through to find it, names her Amber O'Brien, just 18. Pretty girl, pretty name. Her friend, whose state ID card in her shorts pocket identifies her as the 19-year-old Haley Gutierrez, stands a bit shorter at 5 foot 5, though this is probably largely due to the Converse sneakers she is wearing in lieu of heels. Haley is dressed a bit more casually than Amber, although she is still prepared for the heat of the day in a short white T-shirt and high-waisted shorts, leaving just a bit of midriff and most of her legs exposed. Her dark brown hair is short, in the \"pixie-cut\" style favored by girls of her generation of a particular political stripe. I reluctantly disentangle their interlaced fingers from each other, though it pains me to destroy this beautiful gesture even if only for a moment, and begin pulling Amber's sundress up over her hips and off her body. Time to see what I'm working with.\n\nAmber surprises me with a beautiful pair of huge youthful breasts under her dress, but the effect is nearly spoiled by her ugly, well-worn underwear. A body like this, and she chooses to disgrace it with this old, ill-fitting bra and these extremely unflattering cotton Hanes panties. Such a shame. I tut disapprovingly as I divest her of this ugly crap. Amber must not have an older sister to instruct her in these things. Once these distasteful garments are off her body, I carry them to a trash can on the other side of the park and deposit them inside. She's better off without them. Haley surprises me a little by having stronger underwear game than Amber, perhaps due to how tight her shorts are. A black thong - no lace, Calvin Klein brand - frames her tight little ass, and her small breasts are not restrained by a bra at all. Though it is fairly basic in style, I am pleased enough with the underwear to place it on top of the pile I make of Haley's clothes on the ground beside her, rather than in the trash. She is putting in at least a little effort with her underwear, so she is allowed to keep it.\n\nOnce the girls are naked - Amber's heels remain on her body, but Haley is barefoot - I carefully re-lace their fingers together, with relief. Friendship restored. I pace in circles around the two frozen nude beauties, sketching and taking in their subtleties. Amber's stomach has a bit of potbelly to it, like many girls as blessed as she in the chest department. Amber's breasts, though huge and well-shaped, show a bit more sag than she'd probably prefer. Meanwhile Haley's breasts, though quite firm, are also quite small - a small B or large A, I estimate - and though her butt is firm as well, without any clothing to shape it it appears small, almost squarish. She is lithe and athletic, but not very shapely. I imagine this causes quite some insecurity for her. I know what I have to do.\n\nI close the distance between myself and Haley, pressing myself flush against her front, and snake my arms around her. One hand finds its way to her ass, the other to her hair. As I sway back and forth, slow-dancing with the frozen girl, I begin to caress her firm cheeks and stroke her short hair, and she begins changing. My left hand kneads her buttocks like clay, and as I squeeze and pull, they are reshaped. Sculpted. They become rounder, and they expand a bit further from her body. My right hand strokes and tugs at her hair, and it begins growing. Her chosen hairstyle does not suit her at all. I can only imagine she's trying to repel male attention for some reason. Well, with the changes I'm making she'll be able to live like a queen off male attention. I respect her personal choices enough to stop her hair growth at about collarbone-length, though. I step back and begin styling her hair with nothing but my hands and my powers, and soon enough she has a gorgeous face-framing bobcut. Beautiful. She should have come to me in the first place. I expand Haley's hips just a bit to match her new bigger ass, contour her flanks just a smidge to give her the classic hourglass shape, and this stage of my work is complete.\n\nI step around behind Haley, press myself against her naked back and newly-expanded ass, and reach around her body to cup and fondle her small breasts. I breathe some of my power into her, and they grow. I'm not going to give her huge melon tits like Amber has. Every beautiful woman has her own unique type of beauty which I do my best to bring out, and Haley is a wiry athlete, not a bouncy bombshell. She needs something to work with, that's all. I stop when her boobs are manageable C-cups. They look beautiful, but even thinking the word \"C-cups\" makes me frown anyway. Haley did not need to wear a bra over her small, perky pre-sculpting boobs; I need to make sure that my gift of larger breasts is not also a curse of additional necessary underwear.\n\nI hate bras, honestly. Women don't like wearing them; men don't like dealing with them. Really, when it comes down to it, everyone would prefer if they weren't necessary. When I sculpt a woman, I make a habit of freeing her from the tyranny of the brassiere for good. I make no exceptions. Every outfit, from the most casual to the most elegant and elaborate, is only improved by removing the bra from the equation. I step around in front of Haley, and work some more at her breasts. Shifting them, pulling them, shaping them more firmly, supporting them with her chest and back muscles. Improving them. When I am done, her breasts are still soft and pillowy and will still bounce fetchingly when she jumps or runs, but they naturally hold their own impossibly-round perky shape and their bouncing will cause her no pain or even discomfort. They, and she, are a work of art. I astonish myself sometimes.\n\nI turn my attention to Amber. She is a bit closer to my aesthetic feminine ideal to begin with, but I still have gifts to give her. I run off to the closest cafe, borrow a chair, and sit in front of her to turn my full attention to her midsection. I really take my time with this. Beautiful stomachs are underrated. Slowly and with much concentration, I reshape her body subtly to direct some of her belly fat to more suitable locations (meaning, of course, her tits and ass) and burn off the excess, then repeat the process with her thighs and upper arms. I contour her abdominal muscles so that just a tiny hint of them shows through, leaving her with a toned, flat stomach. As long as she continues taking care of herself to the extent she already does, her body should keep the shape I'm giving it with a surprising amount of resilience. Just to see if I could, I once spent hours sculpting a 250-pound woman down to a very bouncy and generous 145 pounds, and kept checking in on her periodically to see how long the effects lasted. Her body took to my changes to some extent, but her personal habits were still bad enough that she ended up gaining about 30 pounds back over the next several months. I'm not a miracle worker.\n\nOnce I'm done with this process, Amber has already transformed from a pretty, busty girl into an absolute knockout. I could stop right here, but why would I do that? I stroke at her pretty red hair, growing it down to her waist but also increasing its luster and body and strength - I understand that the downside of long pretty hair is the amount of upkeep it requires to stay pretty, and it'd be irresponsible of me not to help her out with this. I firm up her nice round ass just a little, and reshape her big tits into beautiful, perky, supernaturally-round orbs, so that she need never even think about that awful bra she'd been wearing ever again. I even shade her lips and eyes a bit so that she doesn't need to spend as much time on makeup as she does.\n\nNow, it is time to consider the question of body hair. Both girls have full, untamed bushes of pubic hair covering their crotches - Haley has shaped hers a bit to allow her to wear the underwear she does, but that's all. I understand fully - proper pubic-hair maintenance can be tedious and arduous, and if you're the kind of girl who'd, say, hack all the hair off her head to spite men, it can feel like an insult to have to repeat this process so often for the sake of others. That's why I'm here. I rub my hand slowly along Haley's groin and mound, and the hair falls away. I work meticulously, getting my fingers everywhere hair can grow, and it is gone. When I'm done, Haley's crotch is as smooth and soft as anywhere on her body. It will never grow hair again. No muss, no fuss. That curse is lifted from her as well. I repeat the process with Amber, leaving her just a tiny patch of close-cropped red hair directly above her smooth slit as proof of her natural hair color - the carpet can't match the drapes if there's no carpet, after all. I allow myself the slight whimsy of shaping it into a little heart. Adorable.\n\nI'm not worried about how the girls will react to their changed bodies when time resumes, because women's minds actually go out of their way to accept the changes I make. My changes just sort of slide off of their brains. They'll invent their own rationalizations for me if they have to.\n\nI could say pretty certainly, for example, that Amber and Haley will probably accept their new completely hairless pussies without consciously even noticing anything has changed. If they do notice, or if someone else points it out, they'll just conclude that they themselves must have decided to shave, and that they like it. They'll probably never notice that they don't need to keep shaving to maintain them, but if they do, they'll just conclude that they must have just shaved already at some point in the recent past. Haley probably won't cut her hair short again, for a while at least. She'll think that she herself decided to grow it out. Amber will probably realize she doesn't need to wear a bra anymore and just stop doing it, but I can't really say with certainty how her mind will accept my decision to remove her panties. She might grasp my intended message that old, ugly panties are beneath her and make a habit of only wearing nicer, more flattering ones; she might interpret it more bluntly and stop wearing panties altogether; there's a small chance she'll get nothing out of it and just go home and put on another pair of old worn french-cut Hanes without a second thought. It varies on a case-by-case basis. But she definitely won't suspect that someone else has been supernaturally meddling with her underwear preferences or pubic-hair status. I once healed a horrible burn victim, and nobody questioned it. When someone eventually did ask, she said \"I got better,\" and everyone was satisfied.\n\nBack to Amber and Haley. I rub my hands along their legs and armpits to permanently stop hair growth there as well - you're welcome, ladies - and then step back to peruse my finished work. It's breathtaking. The two nudes, beautiful beyond belief, strolling in the park, holding hands, smiling conspiratorially to each other. I simply MUST paint this. I walk all the way back to my apartment, retrieve a canvas, easel, and paint set, return to the park, and set to work. As I produce my artistic tribute to female beauty, I reflect that mental changes are so much harder to direct than physical ones. I could give a flat-chested woman H-cup tits and her only reaction would be to go shopping for new clothes the next day, but if I were to, say, start the world moving again with Amber and Haley naked and embracing in one of their beds, I can't say exactly what would happen. They would accept that nothing supernatural had occurred, but without more context that's all I really know. They might finish having the passionate mind-blowing sex their minds assumed they were in the middle of, or they might simply giggle at how silly they were being before getting dressed again in a few seconds. Maybe Haley would be really into it but Amber would be horrified she had apparently gone this far with her platonic friend and run away. Part of me wants to try it on the off-chance they'll stay in bed together and I can paint that moment, too, but in the end I decide that's not for me today.\n\nSoon enough, I am satisfied with my painting of the two beautiful naked girls. I'm sure I'll be able to sell this. If anyone asks me about the models, I'll just say I found them in Central Park. It's true, after all. I carefully carry the canvas home so that it will start drying when I start the world up again, return to the park once more, and begin reluctantly dressing the girls. Goodbye, my beauties. You'll never know what gifts I have given you. I step back when they are again fully dressed. I have left Haley barefoot - it is such a hot day in the park, after all, and her sneakers must be much more comfortable dangling from the fingers of her free hand, the yellow striped socks balled up inside. I find myself staring at their clasped hands again. It's beautiful, and yet I can improve this too. I shift them a bit closer together, crook Haley's arm around the small of Amber's back to rest her hand on Amber's far hip, and tuck Amber's hand into the far back pocket of Haley's shorts, subtly cupping her new, juicier ass. I tilt Haley's head a bit to rest on Amber's shoulder: the final touch. That'll do it. I settle back onto my bench, and the world begins again.\n\nThe two girls finish their giggle, finally, but their conversation lulls for a second as they walk toward me. They both appear lost in thought - trying to figure out what's different. It's not an unpleasant expression, because my changes are never unpleasant. They feel a little different, a little more liberated, a little more confident. Sexier. They can't say how. Haley's top and Amber's dress cover their breasts a little less thoroughly, but they don't notice, at least not consciously. Amber has a new appreciation for the day's slight breeze, wafting under her skirt to caress her in a way she's never felt before. But the moment passes as their minds accept my changes, and by the time they pass directly in front of me they are giggling again. I watch them walk off, snuggled together the way I left them. Haley's free hand snakes around Amber's front to meet its mate, and Amber's hand delves just a bit deeper into Haley's pocket. I knew they'd love that. I raise my water bottle to them in salute, and sit back to await the next beautiful moment I can prolong and improve. If only true artists weren't always so unappreciated in their own time.\n\nPART 1: A HORRIBLE MOMENT\n\nIt's Wednesday evening in late September, and I am strolling through a Central Park that is frozen in time. Sometimes I let my muses come to me, and sometimes I choose a moment at random, take it for myself, and see what stories it has to tell me.\n\nThe story I see right now is not a happy one. A young woman, perhaps in her mid-20s with pale blonde hair, sits crumpled on a bench, her face in her hands, sobbing, a suitcase on the ground beside her. This can't be good. I sit down next to her and, though I know she can't feel it, I rub her shoulders soothingly as I shuffle through her purse to find her ID. Erika Larsen, age 24. What on Earth happened to you, Erika? I brush her hair back behind her ear and lean in, resting my forehead against hers, and recall.\n\nSometimes I can judge a moment entirely on its own merits, but even for the most gifted of artists some additional context is sometimes necessary. For this, I have the power of Recall. I replay the last five minutes of Erika's life, through her eyes.\n\nI am waiting on this park bench. A tall woman with short black hair arrives, and my insides clench up with despair. This woman has wronged me. I trusted her, and she took everything from me. Her face betrays no emotion other than a vague discomfort with having to be here at all, like she just wants to get this over with. She approaches me and hands me the suitcase. \"Katie -\" I begin, but she just mumbles an insincere apology, turns, and stalks off. I drop the suitcase on the ground, tear at my hair, and weep.",
        "It's hard to get the FULL context of a situation without living someone's entire life, of course, but I gradually peek back further and further in Erika's history to find that Katie had been her best friend for years. On a shockingly large number of occasions, I can see that Katie had clearly been emotionally manipulative and abusive toward Erika, but Erika never really caught on. Erika had even forgiven Katie for stealing her college boyfriend, in front of her, when they were both 20 years old. Yikes. There was no turning back from what she did this time, though.\n\nErika had recently gotten engaged to a nice young man named Michael whom she loved very deeply, and drunkenly confided in Katie that he stood to inherit millions of dollars from some relative or other. Soon after, Michael started growing colder to her, with little explanation, until finally one night he exploded at her, hurling accusations of all sorts of horrible things he was apparently convinced she had said behind his back, or thought about him, or done without his knowledge. None of it was true, but he was beyond listening. At the end of the night, he forced her out of their shared apartment. She's spent the last few nights at her sister's place.\n\nIt all made sense when she discovered that Katie was no longer returning her calls, and heard from mutual friends that she was living with Michael now. The cold-hearted bitch had been poisoning him against her ever since she heard there was money to be gained. She was sleeping in Erika's bed with Erika's fiancee within 24 hours of him kicking her out. Erika agreed to meet Katie here today to pick up some of her stuff, but hoped to talk to her, to find out why she had done such a thing, and maybe get her to convince Michael to listen to her again. No such luck. The stuff in the suitcase wasn't even all of her stuff, just what Katie hadn't decided she wanted for herself. Typical.\n\nI watch every minute of this entire drama, in real time. I am disgusted with Katie. I skip back in Erika's memories - if I spend enough time in a woman's head, getting to know her memories, finding relevant ones gets much easier - and I find almost a decade of nothing but emotional abuse. Katie is the goddamn devil. Katie is the worst person I have ever known. And I feel I do know her now, and it doesn't make me hate her any less.\n\nEventually I can't stand to see another second of it. I exit Erika's head and stand up, frowning. I walk off in the direction Erika remembers Katie going. That bitch is going to pay.\n\nKatie hasn't been gone long, so it's only a few minutes before I find her on the sidewalk a couple of blocks outside the park border. I recognize her instantly from Erika's memories. I snatch her clutch purse from her resentfully and find her driver's license, more out of habit than because I care about the details of this awful woman's life. Katie Connor, also age 24. The devil herself. I drop the purse on the ground and really enjoy myself kicking it into a storm drain.\n\nI stare at Katie's awful, evil visage for a few seconds. So I have her. What am I going to do with her? I've only used my talents for petty revenge a few times in my life. My go-to if someone really pisses me off is to steal their wallet and throw it somewhere they'll never get it back, but I've already done that to Katie. Once a young woman cut me off in traffic, so I froze time, stole all of her clothes, rolled down her driver's-side window, dangled her left leg out of it, and got back in my car to watch her reaction. That was fun. I usually try to stay positive, though - if a man makes me angry, I freeze time and wander off, sculpting as I go, until I feel better; if a woman makes me angry, I sculpt her the way I'd sculpt any other woman, and usually when I'm done not only will I be more calm but she will be more pleasant. But I can't simply sculpt someone who's done the things Katie has done. She needs to be punished, and Michael may have been manipulated by her but anyone who'd believe such lies about his own fiancee still doesn't deserve to have one of my masterpieces to himself.\n\nSo what should I do? Deform this poor wretched soul? Ruin her whole life? Would having something like that on my conscience solve anything, or even make me feel any better? No. I'm better than that. But am I above a little sexual humiliation? Absolutely not.\n\nI strip Katie naked. It takes a while; her fall outfit is complex and multi-layered. Jacket, sweater, blouse, tweed skirt, heeled leather boots, pantyhose, expensive bra, blue bikini-cut panties, jewelry. All of it comes off. All of it goes in that same storm drain except the panties and pantyhose, which I have plans for. I also keep the jewelry. I decide that should go in Erika's suitcase. Even if it's not actually hers, which it probably is, she deserves a little bonus. About a half-block ahead of where Katie is frozen mid-stride is one of those huge gross puddles of brackish standing New York water from some recent rain, a bit past ankle-deep at its center. Pedestrians are doing their best to give it a wide berth. Katie will be doing no such thing. I place her so her feet are about an inch deep in it, facing the center, and tie her panties in a firm, secure square knot from one ankle to the other.\n\nIt's still missing a certain something. I wander the streets for a while until I find a handy sex shop, duck inside for a second, and help myself to the largest clear plastic buttplug I can find. I walk back to Katie and spend the next several minutes from my perspective working the plug all the way into her ass. It takes a while, but I have plenty of time. It would probably be quite painful if she were aware of it. I use some puddle water for lube.\n\nFinally I decide to sculpt her just a little. I'm not going to leave her a grotesque hulk, even if it's what she deserves. Instead, I stand in front of her and place one hand between her legs, on her mons. She is already clean-shaven, but I decline to give her the gift of a permanently hairless pussy. Instead I close my eyes and concentrate.\n\nRecall isn't my only new trick. My skills at manipulating women's bodies have improved over the past few months: I can go beneath the surface to tweak their nervous systems. I've been practicing. Usually my goal is the opposite of what I'm doing now, of course. I locate Katie's clitoris and G-spot, shrink and dull them just a tiny bit, then slow the flow of her vaginal fluids. She'll still have a sex drive, and she'll still be able to orgasm, it'll just be frustratingly hard now, whether she's alone or with a partner, and she'll have chronic trouble getting wet. On a whim, I move some nerve endings to her asshole. Playing with her ass will be her best bet for cumming from here on out, but the stuck-up bitch will probably never let anyone put anything back there long enough to notice. The plug I've stuffed her with will have to serve as enough of a hint. From there, all that's left is for me to shrink her boobs down to A-cups, give her a more pronounced gag reflex, and I'm done.\n\nI walk to the other side of the puddle, facing Katie head-on. I take out my phone and, at the same moment that I restart time, I begin recording video.\n\nIt's every bit as glorious as expected. Katie tries to take the step she'd been about to take when I first stopped time, but her feet are tied. That haughty bitch look is still on her face as she starts to go down, but by the time she lands face-first in the puddle it's gone. She tries to scream, but gets a mouthful of muddy water and ends up choking instead. She's trying to get up, but with everything that's happening to her she can't even really process the idea that her feet are suddenly tied together, so in effect she just ends up thrashing around aimlessly in the water for a good fifteen seconds. Once she figures out what the problem is with her ankles, getting her soaked, tangled panties untied with her panicky hands takes maybe another thirty seconds. The entire time, she's very drenched, very filthy, very humiliated, and very naked in public. Thanks to the clear plastic wedged in her asshole, if the angle is right you can see right into her. A crowd has gathered to watch, chattering to each other excitedly at this novelty, but no one is helping her up. No one wants to get that close to the naked girl splashing around in dirty water on the street. By now I'm not the only one taking a cellphone video, I note with satisfaction.\n\nEventually Katie gets one ankle free and staggers to her feet. She glances around, terrified, like a cornered animal, then slips and falls back in. I try not to laugh. It'd shake my camera. Soon she manages to escape the puddle, on all fours to keep her footing. She clambers to her feet on dry land, and flees around a corner, covering herself with her arms as best she can. I stop recording. Eventually I can send Erika this video anonymously; that should make her feel much better.\n\nErika. That poor girl. She's still sobbing on that park bench. I've been so focused on getting my revenge - I mean her revenge - that I forgot all about her. I didn't even sculpt her. I sigh and freeze time again. I'll get to her in a second.\n\nI fish Katie's panties out of the puddle and walk around the corner to find her fleeing form, bewildered panic on her face. She's still trying to cover herself. That won't do. I grab her arms from their protective positions over her crotch and now-tiny boobs, gather them behind her back, and tie them securely in place, each wrist to the other elbow, with her pantyhose. When I'm done she can't even lower her arms enough to cover her plugged ass. The sodden panties go into her mouth, tied off behind her head to make a makeshift cleave gag. Satisfied, I give her a final smack on the ass and turn to leave. She's on her own now. How her mind will manage to rationalize what has just happened to her is anyone's guess. From what I know about my powers, there's a decent chance she'll end up with some serious bondage and exhibitionism kinks, but there's no guarantee. At any rate that's between her and the new buttplug that represents her best chance at ever getting off again. I have more important things to worry about.\n\nErika is still on the same park bench where I left her, still sobbing her little eyes out. Poor thing. I pull her frozen form to a standing position, do my best to move her face into a more neutral expression, and wipe her face clean of tears. I throw my arms around her, cradling her motionless head on my shoulder. I can't make this right, but I can do something else. I'm going to give her the works. I'm going to sculpt this girl all to hell and back.\n\nShe is dressed for comfort only, like you'd expect from someone going through a bad breakup. Mets hoodie, old jeans, tennis shoes, shoulder-length pale blonde hair pulled back into a ponytail. Her bra and panties are old and unflattering, which again is understandable given the circumstances, but still I can't in good conscience leave this trash on her. It goes in the garbage. I inspect her naked form. Honestly, this girl is nothing special just yet. She's cute, but she probably has to put in some serious effort to qualify as beautiful. I've got work to do.\n\nI start with her face. She's got a sweet, genuine face, but she is a bit mousy. I adjust her nose to make it a touch smaller and daintier, then push in her cheeks and pull out her cheekbones and chin just a little to give her round face more of a diamond shape. A fine start. Her brown eyes are pretty, but the Scandinavian goddess I'm creating should have ice-blue eyes to match her platinum-blonde hair. I carefully rub at them until the color is right, then expand them until they command the right level of attention. This part always makes me uncomfortable, but I power through. I'm a professional. From there I plump up her lips just a bit, give them and her eyelids a bit of natural tint, and tweak her eyelashes for a permanent mascara effect, and she's glam as hell. Her face is done. Perfect.\n\nErika is definitely not fat, but she could stand to lose fifteen or twenty pounds. Hey, who couldn't? I spend a while kneading, pushing, and burning her excess fat away from all the various places her body keeps it. Her butt is a decent size, so I leave it alone for now. Soon enough she's in the best shape of her life. But I'm not a personal trainer, I'm an artist. I can do better than that. She's still stocky. Broad. I can make her slender. I lay her naked body out flat on the ground, perch over her with one leg on either side of her hips, and begin the slow, arduous process of changing her body shape. This part is kind of like stretching pizza dough. Enough time running my hands over her flanks, exerting just the slightest pressure each time, and her frame narrows until she's shaped like a fashion model. Her waist is very slim; her shoulders and hips are wider, but not as wide as they were before. She could make any outfit out of any high-fashion store targeting 90-pound 16-year-olds look great right off the rack. But of course I'm still not done yet. I haven't even gotten to the really fun parts.\n\nErika's boobs are on the modest side of average - either a large B or small C; I could have the exact measurement if I'd managed to look at her awful bra long enough to find it before throwing the thing out, but it's not relevant anymore anyway. I sit on the bench, sit her in front of me between my spread legs, and reach around her to caress them larger. As I knead and rub, they swell to fill my slightly-cupped hands. I cup my hands further and keep going, and they grow more. By the time I'm done, she has a really impressive rack. On her old, pre-sculpture frame, they'd probably be double-Ds; on her new, slender body, she'd probably need an F-cup bra to really fit them well. But she'll never have to do that, because for her bras are a thing of the past. I firm her tits into as round a shape as possible, then work on her chest and back muscles until she'll never have to get sized for a bra again. Erika's ass, as I find out when I lie her face-down over my lap, is perfectly sized and shaped already, but it could use some firming. I thoroughly enjoy caressing and massaging her to turn some of her cheek-fat into glute muscle.\n\nFrom here, a little detailing is all I need and I'm done with the externals. Erika appears to make a habit of shaving her crotch completely, but has sort of let it slide over the past week or so. Again, understandable. And her skin is good enough that I'd pay it no mind on any other girl, but she's getting the works. I rub her all over, exploring every nook and cranny, until all of the skin on her entire body is smooth, soft, hairless, and of a completely flawless classic peaches-and-cream complexion. I pull her hair out of its rough ponytail, grow it to midback, and give it the kind of texture, gloss and body it'd normally take a woman $500 and a day at a beauty salon to pull off, and the exterior is finished. She could be a covergirl with no airbrushing, Photoshop, or really any makeup required.\n\nThe final step is the subtle interior quality-of-life changes I've been practicing lately. I move her back into a seated position in front of me on the bench, close my eyes, run my hands over her new-and-improved body, and try to get a good overall image of the way her nerves are set up within her pleasure centers. Her clit is about average size and sensitivity, which of course means I have to give it a little boost to both. Her G-spot is not very prominent at all - I'd rate it as unlikely that she's ever had an orgasm from penetration alone. By the time I'm done with it it's so huge and responsive that it'd be hard for a dick to miss that thing on purpose. Once this part is done, I have a good feel for what exact arrangement of nerves produces the best sexual pleasure response in her, which makes it really easy for me to duplicate in all sorts of fun places - her asshole and her nipples, of course, but also places likely to come up in foreplay, such as her asscheeks, her lips, her tongue, the back of her throat, and even a little smattering on her neck and lower earlobes. Every sexual encounter this girl has for the rest of her life will be quite an experience. I just barely remember to suppress her gag reflex - that thing causes so many problems - and that's it. I'm done.\n\nI stand her on her feet and behold her. A work of art. The best work I have ever done in my life. It would be irresponsible of me not to immortalize her for the world. I'm so excited that I dash at top speed all the way back to my apartment to get my painting supplies. I bring Erika to a bridge overlooking a pond, with some skyline just visible between some trees, and pose her in a faux-demure posture that of course hides nothing, her eyes smoldering at me over a bitten lip. The resulting painting is not only the best I've ever done, but the best I've ever seen. This is my Mona Lisa. I could sell it for quite a hefty sum... but do I really want to? I'll decide later. I bring it back to my apartment to dry.\n\nErika's old clothes no longer fit, so I dress her from a nearby high-fashion boutique I often find myself shoplifting from for this same reason. Finding stuff here that fits her is extremely easy - she's now built like a model, after all. Finally there's nothing left to do but wake her up. I've done all I can.\n\nI hesitate. Have I done all I can? When I start time, she'll be beautiful beyond measure, well-dressed, and primed for some explosive sexual experiences, but she'll still be heartbroken, betrayed, and homeless. There has to be something else I can do for her. God, but she's beautiful.\n\nI typically never talk to my subjects after I'm through with them, unless I'd already been talking to them before I started. I find it unprofessional. But I have to talk to Erika.\n\nPART 2: PYGMALION\n\nWhen time begins moving again, Erika is once again bawling her eyes out, but she is surprised to find that she has apparently thrown her arms around my neck and is sobbing directly into my shoulder. \"Sssshhh,\" I attempt to soothe her. \"It's okay. Everything's alright.\" She stops for a second and pulls back, confused. She has no idea who I am. I start us off on the right foot. \"What's your name, ma'am?\"\n\nIt's hard to predict exactly how someone's mind will fill in the blanks when my powers place them in an unexpected situation, but there are ways to prompt them toward a desired conclusion. In this case, if I act like I just sat down, minding my own business, and Erika threw her arms around me and started sobbing into my shirt, there's a good chance that's what she will think happened.\n\nShe claps her hands to her mouth, embarrassed. Guess it worked. \"Ohmigod. I'm so sorry! I'm Erika. Sorry. I - I just...\"\n\nI hold up my hands disarmingly. \"It's okay! Don't worry about it. You've obviously been through a lot today. We've all been there, right?\"\n\nShe rubs her hands over her eyes and face, clearing her long hair out of her eyes without a second thought about it, even though a minute earlier it had been shorter and tied back in a ponytail. \"Not like this. God.\"\n\nI smile wryly. \"That bad, huh?\" She winces and nods. \"Well,\" I continue, \"talking about this stuff always helps. I'll tell you what. Why don't you let me buy you a cup of coffee and you can tell me all about it?\"\n\nErika raises an eyebrow and looks at me appraisingly. I smile at her. I know I look good - I have allowed myself the vanity of sculpting myself, just a little bit - and anyone I use Recall on as much as I've used it on her will feel a certain instinctive trust and empathy toward me, too, but there's no way I believe that'd be enough by itself. I seize the moment before she decides she needs to be alone, and when it's over, she's at the counter of the nearest Starbucks with me, looking at the menu to decide what she wants.",
        "Another trick I use to manipulate people's decisions with my powers is to take advantage of the moment of hesitation. If a person is taking some time to decide whether they want to do something, and then suddenly find themselves doing it, they tend to conclude that their final answer must have been yes. So, instead of apologizing one last time and walking back to her sister's place to cry more and sulk alone on the couch with a quart of ice cream, Erika is here having coffee with me and telling me everything.\n\nI already knew it all, of course. The whole sordid tale of ruthlessness and betrayal. I've seen it as clearly as Erika herself, through her own eyes. But I'm pretty good at pretending to learn things for the first time. And really the more important point is that she gets to say it aloud, to share it with someone else. Someone she trusts, even if she doesn't know why she does. It's not easy for her to relive it. More than once, she starts crying again. But now when she suddenly finds herself sobbing on my shoulder again, she doesn't pull back. She lets it all out. I sway her back and forth a little, patting and rubbing her back, whispering soothing little nothings into her ear as the other patrons politely pretend not to see her.\n\nTalking about it does help. By the time we're done with our initial lattes and the following two cups each of decaf - it's getting late, after all - Erika is done crying, and has sorted out her feelings. She's done with Michael. And she's done with Katie, too. Not a moment too soon, I reassure her, sincerely. And she's started making plans for things she can do to help get her life back together. This girl is remarkably strong, I realize - even if some of this is just short-lived bravado, she's made incredible progress in a couple of hours. I'm also taken aback by just how smart she is. She's an engineer by trade, and she has a Master's degree in physics. A side effect of never fraternizing with my subjects is that I often lose sight of their inner life, seeing them only as the art I can make with them rather than human beings with their own wishes, dreams, skills, and quirks. But talking to Erika is blowing me away.\n\nMost of the time seeing one of my finished works in motion again is extremely bittersweet to me, because watching something I more or less created come to life and fly away is an amazing feeling, but usually it also means I'm saying goodbye to a person I feel I've come to know intimately. Most of the time, when I let go of a moment I've shared with a woman I've sculpted, I never see her again. The sheer size of the city means that no matter how many women I sculpt, seeing one of them again is an extremely rare occasion. Erika is not only the most beautiful sculpture I've ever made; she's also an exceptional, intelligent woman. I find myself not wanting to let go of her just yet. So I get a little carried away.\n\n\"Y'know what you could use?\" I find myself asking when she's done explaining her professional goals for the next year. \"You, my friend, could use a drink. Why don't we each go home and change into something nice, and meet up again so I can take you to dinner?\" She beams at me, flattered. We have hit it off fairly well, after all. But I know if I give her enough time to come to a decision herself, she'll say no, and if I'm very lucky, just give me her number to perhaps pick this up at a later date. And when time is moving, I am not a patient man. So the next thing she knows, she's wearing the sluttiest dress, highest heels, and tiniest thong she owns, done up in makeup and jewelry, and sitting at a table at a nice gastropub I know in Brooklyn. Her mind accepts that she must have said yes, and we're on a date.\n\nThis part was pretty tough for me to pull off, actually. I had to use Recall to figure out where her sister's apartment is, and carry her and her suitcase all the way there. The door opened for me easily - locked doors never seem to keep me from where I need to go when the world has stopped. When we got inside, I found that Erika's sister (Astrid Larsen, age 28) and her roommate (Sarah Braverman, age 26) were getting ready to go out somewhere, so naturally I had to put Erika on the couch for a little while and sculpt both of them. I needed to make sure there was still a family resemblance between Erika and Astrid, after all, and once I was done with her I couldn't just leave Sarah out; that would have been heartless. When I was done, I searched around for some sexy clothes belonging to Erika only to remember that most of her clothes were gone. All she had were some necessities in a duffel she'd hastily packed when Michael kicked her out, and whatever Katie had deigned to give back to her in the suitcase from earlier today, which wasn't much. So I had to go to Erika and Michael's old place.\n\nKatie still wasn't back, thank God. Michael was in the middle of talking to someone on the phone; he didn't look happy. Good. I tossed his wallet out the window and gathered up a bunch of Erika's clothes to take back to Astrid's place. When I got there, I tried to put Erika's sexiest little black dress on her only to remember it wouldn't fit her anymore. None of her old clothes would. So I threw most of them out as well as all of her bras, carried her to the store where she'd gotten the dress according to its tag, and kept putting different sizes of it on her until one of them fit. Then I had to carry her all the way across the damn bridge to Brooklyn. Then I had to get her to the gastropub, find a middle-aged couple who had just sat down, move them to a perfectly fine pizza joint next door, and take their table. It was a lot of work. But seeing Erika sitting across the table from me in that dress, smiling coquettishly at me, makes it all feel worth it.\n\nThe date goes really well. We finish our dinner, and order another round of drinks. Then another. I really don't want to say goodbye. So I get even more carried away. I ask her if she wants to go back to my place for a nightcap, and the words are barely out of my mouth before she finds herself sitting on my couch with some soft music playing and me mixing her a White Russian.\n\nWhen I'm drunk and horny, I tend to use my powers a bit more indiscriminately than I should. I get an idea of something I want to happen, and I freeze time and maneuver things so that when I'm done, that thing is happening. But Erika must be drunk and horny too, because each and every time I skip some time she responds extremely well.\n\nShe's sitting on my couch laughing at something I said. Then, suddenly, she finds herself straddling my lap, her dress hiked up to her waist and her arms around my neck, and her response is to bring her mouth to mine and kiss me with all of the fire and passion I could see within her since the coffeeshop.\n\nMy mouth on hers and my hands on her bare ass are doing strange and unprecedented things to her for reasons she cannot understand. Then, suddenly, her dress is on the floor behind her, and her response is to push her big round F-cup tits into my face, purring and dry-humping me through her thong.\n\nShe is completely surprised when my mouth on her nipples, my hands on her ass, and her clit on my crotch are enough to bring her to an extremely forceful orgasm. Then, suddenly, she finds herself kneeling on the ground in front of me with one hand on my zipper and the other in her thong, and her response is to take my cock out and stuff it as far into her hungry sucking mouth as she can, her free hand playing with her pussy.\n\nHer body continues to surprise her by building most of the way to an orgasm just from sucking my cock and playing with herself. Then, suddenly, she is taking me all the way into her throat more easily than she ever has before, and her response is to cum explosively, again, and keep taking me into her throat over and over until I do the same, filling her stomach with my first load.\n\nShe's sprawled on the floor, gasping for breath and trying to make sense of all the things she has just learned about her body. Then, suddenly, she is handcuffed and lying facedown over my lap on my bed getting spanked, and her response is to mewl, squirm, call me both \"Master\" and \"Daddy,\" and beg me to punish her.\n\nShe's falling deeper into subspace than she ever knew she could under my stern hand. Then, suddenly, she's tied to the headboard of my bed by all four limbs, her soaked thong stuffed in her mouth and her quivering pussy and asshole on full display for me, and there's not much of a response she really can have to that other than to look at me pleadingly with those big blue eyes I made myself until I relent and force myself into her.\n\nThe changes I've made to Erika's body bring her unimaginable pleasure each second my cock is in her. Sex has never been like this for her before. She doesn't even know how to process it at this point. A mortal man would probably last two minutes at most in a body like Erika's and still manage to bring her off like a firecracker two or three times. But I've just sculpted myself permanently hard and boosted my balls to many times their original semen-producing efficiency, so there's nothing keeping me from going for hours. I fuck her savagely, her eyes rolling back in her head under the force of the sensations she's experiencing. I periodically pull out, crawl up her body, and pull the thong out of her wailing mouth just long enough to fill it with a big healthy load of jizz, then move back down to repeat the process. Over and over.\n\nI fuck her ass too. The way her eyes bug out the first time I do it, I'm pretty sure it's the first time she's ever had it done. But she's cumming again within seconds, nothing even touching her pussy. That's what happens when a woman has an asshole like the one I've given her. I'm the best at what I do, whether it's sculpting a woman or fucking her.\n\nEventually my lust is sated, and after I pull out of her mouth this one last time I sculpt my cock soft again. I am completely exhausted. I wouldn't even have the energy to untie Erika if I couldn't stop time. By the time I'm done and the world starts up again, Erika is already unconscious. I guess she's earned a rest. I collapse to the pillow beside her and fall asleep.\n\nThe next morning I'm woken by the squealing teakettle. Erika must have started breakfast for me. How sweet! I smell eggs, but I think they're burning.\n\nI go out to the main room to find her standing naked in front of a painting, the burning eggs and boiling teakettle all but forgotten. The painting she's staring at is my masterpiece. It's the one I did of her at the park.\n\n\"That's me,\" she says, as if in a trance. She turns to face me. \"When did you have the time to paint this? We were together all night. Did you paint this while I was getting changed for dinner?\" She pauses, furrowing her brow. \"How on Earth did you paint this in that much time? It couldn't have been more than an hour, maybe.\"\n\n\"Uh. I can explain,\" I stammer, trying my damnedest to think of an explanation that would satisfy her.\n\n\"Have you been... spying on me?\" She squints at the painting again. \"No, that can't be right. I only changed my hair after Michael kicked me out. ...wait.\" She spins her head back toward me, her sex-hair flying wildly. \"How did I grow my hair out that much in two days?\"\n\nI gulp audibly. No one I've sculpted has ever logically defeated their own rationalization before.\n\nHer eyes narrow. \"You... changed me.\"\n\nShit.\n\nPART 3: IT WASN'T A DREAM\n\nOf course my response to this is to stop time. I don't like being in this moment any longer than I have to, but I need time to think up how I'm gonna get out of this. I can't believe I forgot to hide the painting.\n\nFinally I pick Erika up, carry her and her clothes all the way back to her sister's place, and leave her naked under a blanket on the couch with her eyes closed and her clothes strewn haphazardly around the room. Let her think she staggered home drunk from the gastropub and dreamed the whole thing. She doesn't know where my apartment is since time was frozen when I took her there, which suits me just fine. The sooner this entire episode is behind me, the better.\n\nI note with satisfaction when I note that Astrid isn't around, and Sarah is asleep stark naked in her bed with a gentleman caller sleeping next to her. My gifts got both of them laid. Feels nice to accomplish something good. I leave Astrid's apartment and stalk back to my own, trying to shake off what just happened.\n\nA couple hours later I'm back at my apartment on the phone with the owner of a small local gallery I know when there's a knock at my door. I open it absent-mindedly, and there, with the same sex-hair as this morning and in the same little black dress as last night, is the most beautiful girl I've ever seen. \"It wasn't a dream!\" Erika exclaims triumphantly. \"I knew it wasn't a dream!\"\n\nWell, shit. Erika pushes past me into the apartment. \"Jim, I'm gonna have to call you back,\" I say as I hang up. What am I gonna do, carry her back to her sister's couch again so she'll think this is a dream too? Fuck. First things first. \"Hi, Erika. How do you know where this place is?\"\n\nShe is pacing manically around my main room. Luckily I had the good sense to put the painting somewhere else by now. \"Goooooood question! You see, I didn't know where it was, until I checked Maps on my phone this morning while you were asleep. And it's like, why didn't I know where I was before then? I always text Katie the address when I go home with a guy, just in case - well, I guess I would have texted Astrid this time, because Katie's a fucking snake now, but I didn't text her either. Why wouldn't I do that?\" She finally comes to a stop and whirls to point at me. \"What did you do?\"\n\nGoddammit. Of course she checked her phone. Why didn't I think of that? Just my luck that the first woman to even suspect that I might have changed her is smarter than me. \"Erika, I'm gonna need you to calm down -\"\n\n\"Or what?\" She waves her hands wildly in the air. \"Are you gonna turn this into a dream again somehow like you did before? What was that? What the fuck are you? Some kind of wizard?\"\n\n\"I'm an artist,\" I mutter.\n\n\"Nothing makes sense anymore! I'm wearing this dress again because none of my other clothes fit, and I tried to think about why none of my clothes fit, and I couldn't! I couldn't think about something! It was hard enough for me to think about how I couldn't think about it!\" She rounded on me again and grabbed me by the upper arms. \"You need to make shit start to make sense again. Now. Talk to me.\"\n\nI sigh. \"Fine, we'll talk in the park.\"\n\nShe frowns. \"No, we'll talk right here.\" But this is an empty protest on her part, because a second later we are in the park. Erika is lying propped up on her side on a picnic blanket, wearing a pink string bikini, sunglasses, and a floppy sun hat. I'm sitting next to her on the blanket, hugging my knees, fully dressed. I admit I'm just showing off now.\n\nIt's a bit late in the year for park sunbathing, but nobody pays us much mind. Erika tips her sunglasses forward and looks around nervously. \"Okay, fine, we're in the park. Now tell me what's - wait.\" She stops and rubs her forehead under the hat. \"I didn't even want to go to the park. But I guess I got changed into a bikini anyway. That doesn't make any sense. But if I try to think about why I'd do that, I can't. The thoughts just slip right off my brain. This is getting old.\" She looks down at herself. \"I've never even seen this bikini before. I think I bought it, but I don't remember where.\"\n\nI shrug. \"None of your old ones fit anymore, remember? That one's much cuter than they were anyway.\" She starts to interject something about how that doesn't answer anything, but I stop her with a raised hand. \"If you keep asking questions over and over I'll never be able to answer them. Now calm down and I'll tell you everything.\"\n\nAnd I do. She deserves some answers at this point, and honestly my earlier panic was probably an overreaction. What's she gonna do, tell the police that some guy with superpowers gave her unsolicited magical plastic surgery? No one will ever believe her if I just tell the truth. So I tell her I can stop time, and make changes to women which their minds twist around themselves to accept as the way things are and should be. I even tell her I can read memories and open locked doors.\n\nShe lies on her back, looking up at the sky, taking all this in. \"So... the way I look...\"\n\nI nod. \"Yeah, I gave you a pretty complete makeover. You still mostly look like you did before, but much more attractive. But people will still recognize you, and they'll rationalize away the changes themselves.\"\n\nShe shades her eyes with her hand. \"That makes sense. I'm pretty objectively super fucking hot, but if I think about it, my childhood and romantic history aren't the kind a super hot woman would have had.\" She pauses contemplatively, trying to think of her next question. \"Why me?\"\n\nI shrug. \"I saw you crying on that park bench and I felt bad for you. Then I saw your memories of what Katie and Michael did, and I got attached to you. But I sculpt women all the time, basically at random. Usually at least two a day on average. I usually don't talk to them afterward. Or take them on dates. Or, y'know, anything else we did.\"\n\nErika is gobsmacked. \"Holy shit. All those women... thousands of them. You walk up to them on the street at random, you strip them naked, you touch them everywhere... you mold their bodies however you see fit... you make them into fffucktoys... then you walk away and they never even notice you did anything.\" Her words are harsh, but she doesn't sound angry. She sounds... breathless. She unconsciously raises a hand to her midsection and strokes her bare skin a bit before catching herself.\n\nI cough. \"I usually think of it less like 'making them into fucktoys' and more like 'making them effortlessly beautiful and letting them enjoy sex more,' but otherwise, yeah, that about sums it up.\"\n\nErika rolls onto her stomach, resting her chin on her hand and kicking her bare feet into the air. Her eyes behind the sunglasses are intense. She's really into this, the idea of me, and the questions start coming out quickly. \"How did you get your powers?\"\n\n\"I don't know.\"\n\n\"How did you learn to use them?\"\n\n\"I have to figure it out myself. I learn new capabilities all the time.\"\n\n\"When did they first show up?\"\n\n\"I made time stop for the first time when I was twelve. I used it to steal candy and draw pictures of girls without them knowing. I didn't realize I could sculpt women until art school.\"\n\n\"Can you sculpt men?\"\n\n\"Uh, yeah, in theory, but I've only ever done myself.\"\n\n\"What did you do to yourself?\"\n\n\"Minor tweaks. Next subject, please.\"\n\n\"Has anyone ever realized you've changed them before?\"\n\n\"As far as I know, you're the first.\"\n\n\"Could you kill someone?\"\n\n\"Sure, I guess.\"\n\n\"Have you killed anyone?\"\n\n\"No.\"\n\n\"Have you hurt anyone?\"\n\n\"Only their pride.\"\n\nHere she pauses. \"...Did you hurt Katie?\"\n\nI grin. \"Only her pride.\"\n\nShe puts a hand on my leg. \"Can... can you show me?\"\n\nI fish out my phone. \"I took a video. Are you sure you're ready to see it?\"\n\nShe scrambles up onto her knees and drapes herself over my shoulders to get a view of my phone so quickly I wonder if she stopped time. \"Yes! Let me see it!\"\n\nErika squeezes me tightly and holds her breath as she watches the video. Katie, stark naked on the street, falling flat on her face into a giant stagnant puddle because her legs are tied together with her own underwear, flopping around with no dignity for a very long time, finally struggling loose and fleeing around a corner. Soaked, filthy, nude, and utterly humiliated.\n\nErika's nipples are practically poking holes in my back by the time the video's over. \"Was there something in her ass?\"",
        "\"Yeah. A buttplug.\"\n\nErika shivers. \"Holy shit, that's hot. What... what if she liked it, though?\"\n\n\"The buttplug?\"\n\n\"The whole punishment.\"\n\nI smirk and raise an eyebrow. \"Why do you ask?\" Kinky girl.\n\nShe just blushes and changes the subject. \"Did you do anything to Michael?\"\n\n\"Not directly, but trust me, their relationship is not long for this Earth.\"\n\nShe nods, satisfied. \"That's really all I want out of him, I guess.\"\n\nThere is a pause while she absorbs the knowledge of her betrayer's comeuppance, until I break the silence. \"Do you have any other questions, or...?\"\n\n\"No,\" she says dreamily. \"I think that's all I can think of for now.\"\n\nI dust myself off and rise to my feet. \"Well then, I guess we're finished. Hope that answered your questions. Maybe I'll see y-\"\n\n\"WAIT!\" She grabs my pant leg. \"Don't disappear on me! Please! I... I want in on this!\"\n\nThis is way off-script for how I pictured this interaction going, but I guess it has been ever since she saw that damn painting. \"What do you mean?\"\n\n\"I want to see. I want to see you work. I want to see what girls you pick, and what you do to them. I want to learn more about how your powers work, and what you can do with them. I want to... be your assistant, I guess?\"\n\nI frown down at her. \"Why?\"\n\nShe pauses, marshaling her words. \"Two reasons. One, I can't learn about something unbelievable like this and then just go on with my life like nothing happened. I need to learn more. I need to understand it. And two, I...\" She blushes and beckons me to sit down next to her again so she can murmur this next part discreetly. \"I had a really great time with you last night, even if you don't count the incredible kinky sex. And if you do count it... holy shit, it was incredible. I've never felt like that, ever. It was partly your changes, I guess, but not all of it. I loved how you manhandled me, and... spanked me, and pushed me down on your cock, and tied me up, and made me swallow your cum again and again... I think to be in a position where I spend time with you and where you make me your little slut all the time, I have to be in on this part of your life too. So I'm in. If you'll have me. Please.\" God, but she's beautiful.\n\nI'm still hesitant. This is a very private part of my life she's asking me to let her into. I've never even told anyone as much as I've already told her. \"What's in it for me?\"\n\nShe rises into a straight-backed kneeling position, hands on her thighs. \"You need someone like me,\" she says in what is probably her job-interview voice. \"You need an engineer. You need someone to be thinking about what the boundaries of your powers are, how to understand them, and how to push them. You said you're learning new capabilities all the time. I bet I can make the process go much faster. Also, you need a confidant. Your world must be lonely.\" She leans forward to whisper directly into my ear. \"And you need a girlfriend... who thinks the things you can do are super fucking hot.\" She licks my earlobe, slowly. \"One condition, though,\" she continues breathily, leaning on me. \"I want you to promise to use your powers to surprise me. Mess with me. In public. Do stuff to me like you did to Katie. But make sure nobody records it, and save me from getting into serious trouble if you have to. Other than that, anything's fair. Please.\"\n\nI turn to her and kiss her, softly. \"I think you've convinced me.\" I pull a full picnic basket full of charcuterie and cheeses and a bottle of Chianti apparently from nowhere. \"How's this for surprise number one? A park picnic date.\"\n\nErika beams and kisses me back. \"That sounds wonderful.\" She sits back on her haunches as I begin to unpack lunch, completely unaware of my second surprise: her bikini's gone. I hid it under the blanket. If she hasn't noticed she's completely naked by the time we're done with lunch, I'll tell her, but until then, she's on her own. She's right. This will be fun."
    ],
    "authorname": "Ringabel",
    "tags": [
        "body modification",
        "mdom",
        "fsub",
        "revenge",
        "anal",
        "transformation",
        "time stop",
        "humiliation",
        "cmnf",
        "public nudity"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-sculptor-ch-01-1"
}