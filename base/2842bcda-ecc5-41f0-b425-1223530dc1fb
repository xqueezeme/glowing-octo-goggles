{
    "title": "New Horizons Ch. 19-24",
    "pages": [
        "Chapter 19\n\n\"You're an idiot.\"\n\n\"Thank you, Court,\" Alex responded as she picked up her bourbon from the coffee table in front of her.\n\nWhen she asked Courtney to have a drink with her after her friend's Saturday night show, she purposefully made sure to keep it at her apartment. She didn't want any of the awkward run-ins that inevitably happened in the theater district.\n\n\"Sorry, but it's true,\" Courtney responded, taking a sip of her own red wine.\n\nAlex threw her head back onto the couch dramatically and sighed. \"I don't know what to do.\"\n\n\"For starts, I think you need to apologize for being an asshole.\"\n\n\"I texted her,\" Alex said helplessly.\n\n\"Texted her what?\"\n\n\"That I was sorry things ended like that and that I hoped her meeting was going well.\"\n\n\"Her fake meeting, you mean. Did she text you back?\"\n\n\"No,\" Alex replied sullenly.\n\nCourtney looked at her friend for a moment.\n\n\"Let's review the main points again. You asked her not to sleep with anyone else. You brought her back here and had sex. And then the next morning when she made a throwaway comment about you being a player, you snapped back in the usual, Alex Anders way. Did I cover everything?\"\n\n\"That sums it up.\"\n\n\"Alex, she wasn't wrong. You are a player.\"\n\n\"You know why,\" Alex said back, but not in a biting tone.\n\nShe felt so defeated that she didn't have the energy to be that offended by Courtney's harsh tone.\n\n\"But she doesn't know why. Part of dating people is intimacy. You have to open up. It's not fair to ask her to be exclusive just to push her away when she tries to get close.\"\n\nAlex looked over at her friend helplessly. She knew Courtney was right, but she hadn't tried dating in years. She was used to being more of an acquaintance to people than a friend. More of a fuck buddy, than a lover.\n\nBut Quinn changed all that. She did want to date Quinn, even with the complications it brought.\n\n\"I don't know what to do,\" she said to Courtney.\n\n\"I have an idea.\"\n\n\"No.\"\n\n\"You haven't even heard it.\"\n\n\"Nothing good has ever come from you saying I have an idea.\"\n\n\"Except that day that you were so hungover you wanted to die and I convinced you that a little trip to a festival show would help cure your misery. Good thing I had that idea or you never would have seen Quinn's show.\"\n\n\"And then I'd be just hungover today. Not worried about what some actress thinks of me.\"\n\n\"Is this really fun, Al?\" Courtney asked as she sat up and set her glass down on the table. \"Playing video games alone with a glass of bourbon in your overly expensive apartment? Having a casual fling every now and then that you usually regret? Because I guess I don't really get it.\"\n\n\"Damn. Don't hold back on how you feel,\" Alex replied sarcastically.\n\n\"This is me, Al. I don't hold back. Not with you. And you don't with me. But I don't think you can honestly tell me that you're happy. And I know you think this promotion will be the thing to change that, but what if it doesn't? And what if Quinn can?\"\n\nAlex set her own glass down on the table and put her arms on her knees so she could rest her head in her hands.\n\n\"Court, I hardly know her.\"\n\nAlex said the words, but in her heart, she knew that wasn't true. She may have only met Quinn recently, but somehow, she did feel like she knew her. The immediate intimacy she felt with the other woman was part of what scared her.\n\n\"So, get to know her without being an ass. And while you're at it, listen to my idea without being an ass.\"\n\nAlex couldn't help but smile at her friend. She knew earlier when she called Courtney that the woman wouldn't hold back on her opinions of how Alex handled things\u2014 she never did.\n\nBut that's also what Alex appreciated in their friendship. They were always honest with each other and held each other accountable.\n\n\"Ok, Stella. What is your damn idea?\"\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\n \n\nQuinn got to the rehearsal room way earlier than she needed to, but she was too excited to get started with Diego to just sit alone in her apartment.\n\nShe had done enough of that over the weekend. She hated lying to Mikey, but she knew he'd be able to tell something was bothering her if they talked and she just couldn't bring herself to tell him about what happened with Alex.\n\nMaybe if everything hadn't gone to complete shit by the end of their breakfast, she would have spent the entire weekend there in Alex's bed and not alone in her apartment avoiding calls from Mikey and Claire. Maybe then, she'd tell Mikey about what happened.\n\nBut now that seemed pointless. It was clear that Alex had some things to work out. Quinn had more than one moment over the weekend thinking she made a mistake by just walking out. But Alex's snapping tone reminded her so much of Jenna at the end and Quinn wasn't going to do that to herself again.\n\nBeing with Alex often felt like whiplash. One moment the woman couldn't keep her hands off of Quinn and the next she was explaining all the ways it was impossible to be together.\n\nShe knew she needed to talk to her. No matter what, they were going to be in this theater together for the next two months and Quinn didn't want it to be awkward every time they bumped into each other.\n\nBut she was resolved not to sleep with Alex again until the blonde figured out her baggage. The beginning of a relationship should be fun and light and sexy. Not filled with fear that a woman's dad would throw a hissy fit over his daughter's relationship.\n\nQuinn also knew it might be hard to maintain that resolve now that she knew what Alex is like in bed. But she didn't want to be another random woman to Alex. She'd fallen for her too much. If Alex couldn't open up to her and trust her, then she couldn't be with her, even just physically.\n\nAs she sat in the rehearsal space, distractedly going through her script while really just thinking about Alex, her phone rang. She could see it was Mikey's number and knew she couldn't keep ignoring him so she answered the call.\n\n\"Dominos. We're out of thin crust. What can I get you?\" she asked in her best masculine voice.\n\n\"Like I would ever call a Dominos,\" he scoffed. \"Do people even call for pizza anymore?\"\n\n\"I don't know but way to ruin the bit,\" Quinn said back as she closed her laptop.\n\n\"So sorry about that. I've been trying to reach you all weekend. Where have you been?\"\n\nQuinn's thoughts raced to come up with a viable excuse for not answering her phone.\n\n\"I was nursing a hangover. Opening night party and all,\" she lied.\n\n\"For Death of a Salesman? I didn't realize it would get so wild. You didn't do anything I'm going to hear about did you?\"\n\nQuinn stretched out on the bench she was sitting on as she continued to talk to Mikey. She wasn't going to tell him what she really got up to after the party\u2014 she wasn't in the mood for a lecture. But she also didn't like lying to him.\n\n\"You mean besides the keg stand I did in front of Simon Anders?\" she asked, deflecting with her usual humor.\n\n\"I hate you sometimes,\" he said back with a sigh.\n\n\"No, you don't. Especially when I tell you that I met your future husband.\"\n\n\"I'm absolutely positive that you didn't. But please, elaborate.\"\n\nQuinn smiled into the phone and it was the first time since she left Alex's apartment that she felt somewhat uplifted. She probably should have called Mikey immediately\u2014 messing with him always made her feel better.\n\n\"At Janet's post-dinner thing I met a guy who's on the board for Horizon. He's rich, beautiful, established, and he loved me. So, kind of the perfect fit for you.\"\n\n\"You mean Tim Delvin?\"\n\n\"You know him?\"\n\n\"No, but I know of him. He's a big-time investor in the theater scene. And he's completely out of my league.\"\n\n\"Nobody is out of your league, Mikey. I mean, you may be a little uptight, but you're a catch.\"\n\n\"Thanks...I think?\"\n\n\"I'm going to set it up.\"\n\n\"Please don't.\"\n\n\"I'm going to.\"\n\n\"Quinn. I can get my own dates. Worry about your own lack of a sex life.\"\n\nQuinn's stomach dropped at his last comment and guilt settled in its place. Mikey may be her manager, but he was also her best friend. She should tell him. Maybe he'd even be able to talk some sense into her to strengthen the resolve she'd been working on all weekend.\n\nBut before she could say anything to him, there was a knock on her rehearsal room door and it was suddenly opening. Standing in the doorway was the exact person that had been monopolizing all of Quinn's thoughts.\n\n\"Alex,\" Quinn said, staring at the doorway that the blonde was tentatively standing in.\n\n\"Alex? You're sleeping with Alex?\" Mikey asked into the phone.\n\nQuinn sat up straight on the bench, suddenly flustered by the phone in her ear and the woman standing only feet away.\n\n\"No. I mean, yes. I mean, Alex just came into the rehearsal room. I need to go.\"\n\n\"And it sounds like we need to talk,\" he replied. \"I'm coming over when you get home from rehearsal.\"\n\n\"Fine,\" Quinn sighed into the phone. \"I'll see you then.\"\n\nShe set the phone down on the bench and looked up at Alex, who was still standing in the doorway like she was slightly lost. Only half of her body was even entering the room.\n\n\"Alex,\" Quinn said again dumbly.\n\nShe figured she would need to go find the theater manager today at some point but she didn't think Alex would come to see her. Her mind was also racing with the fact that she just accidentally revealed the truth to Mikey. She'd have to deal with that later.\n\n\"Can I come in or are you busy?\" Alex asked and Quinn noticed that the blonde wore the same pained expression she had on her face when Quinn left her apartment on Saturday morning.\n\n\"You own the room. I suppose you don't need to ask,\" Quinn replied, opening up her laptop again. \"Though, Diego will be here soon, so we should make this quick.\"\n\nAlex moved further into the room and turned so she could gently shut the door behind her. Now that she was fully in the room, Quinn could see her better and couldn't help the flip her stomach gave at the sight.\n\nAlex was dressed down today. In just a pair of blue skinny jeans and a fitted, white t-shirt, it was the most causal Quinn had ever seen her look. And now she really knew that it didn't matter what the blonde wore. She always looked hot and that insight was not exactly convenient when Quinn was trying to hold on to her anger from Friday.\n\nAlex stood there awkwardly not saying anything and Quinn didn't know if she should stand or stay seated so she opted to just stay on the bench.\n\n\"Did you need something or are you just checking on the room?\" Quinn finally asked.\n\n\"I brought you these,\" Alex said, holding something out for Quinn.\n\nWhen Quinn didn't move off the bench and just continued to stare at Alex, Alex tentatively moved closer to her.\n\n\"They don't bite,\" she said. \"I mean, at least I don't think they bite.\"\n\nWhen Quinn just continued to sit there, staring at her, Alex moved all the way over to the bench, sat down and sat the package next to Quinn. Quinn looked down to see what she put there and raised an eyebrow at Alex.\n\n\"You came here to bring me Swedish Fish?\"\n\n\"Well not only that. But I thought this might be a way for you to eat fish without actually eating fish. And I'm Swedish.\" Alex put her hand on her forehead for a moment and let out a shaky laugh. \"And this is really starting to feel like a bad idea now.\"\n\nThey both sat there in an awkward silence for what felt like a full minute before Quinn reached down to the bag, opened it and popped a fish into her mouth.\n\n\"Luckily for you, I didn't bring snacks today. And I love snacks.\"\n\nAlex let out a small, nervous laugh. It was clear she didn't really know how to proceed with the conversation so Quinn decided to take pity on her, even if she didn't really deserve it.\n\n\"I'm guessing you didn't just want to bring me fish though.\"\n\n\"No,\" Alex said back quickly and put her hands on her thighs, moving them up and down like she was trying to dry off sweaty palms. \"I wanted to talk. And apologize again for Friday.\"\n\n\"Look, Alex\u2014\" Quinn began to say, but Alex cut her off before she could continue.\n\n\"No, please. Let me.\"\n\nSuddenly Alex stood up from the bench and walked towards the other side of the room where there was a mirror covering the whole wall, before she paced back towards the bench. She looked anxious and agitated and if Quinn wasn't annoyed, she probably would have found it slightly endearing.\n\n\"I'm so bad at this Quinn,\" she finally said as she stopped a few feet from the bench, a look of pure defeat crossing her features.\n\n\"Bad at what, Alex?\"\n\nAlex looked like she didn't know how to get the next words out. She almost looked as if she had swallowed something bitter.\n\n\"Intimacy,\" she said quietly and if she hadn't been standing so close to the bench, Quinn probably wouldn't have even heard it.\n\nQuinn looked at the woman for a moment before answering. She could tell that this was hard for Alex and she wished she knew why. But she also wasn't going to put herself out there again and try to get to know Alex, just to be shot down when it gets too personal. She put her laptop down on the bench since she didn't need to pretend anymore that she was working.\n\n\"You got overly defensive when I brought up a pretty benign topic. I don't want to be with someone who snaps at me like that.\"\n\n\"I know. And I'm so sorry I did. And how I let you leave.\"\n\nAlex took a deep breath and sat back down on the bench, this time sitting closer to Quinn than before.\n\n\"I meant what I said at the party, Quinn. I like you. More than I've liked anyone in a long time. And sometimes I can be an idiot. Just ask Courtney.\"\n\nQuinn couldn't help but let a small smile cross her face briefly at Alex's self-deprecating comment. But she wasn't ready to let things go. Alex Anders was one big, walking red flag.\n\n\"I need to know why though. Why did that comment set you off so much?\"\n\nAlex looked down at her hands for a beat before she brought her eyes back up to Quinn's. Even in her anger and confusion, Quinn admired the blue of her eyes, which right now looked stormy. The freckles that sprinkled her nose seemed to come out stronger when she looked pale like this and the juxtaposition was beautiful.\n\n\"Because it's true. And I was embarrassed that you already thought that of me.\"\n\n\"Why is that so embarrassing for you?\"\n\nQuinn could tell that Alex was slightly uncomfortable but she also noticed that the blonde didn't move to get up and seemed to want to continue the conversation.\n\n\"You're right. I do have baggage. And I'd like to open up to you about it. That morning...I guess sometimes I over analyze things, especially when it comes to this place,\" Alex said as she waved her arms around the room. \"I knew I liked you before you came over that night, but I had no idea what it felt like to be with you. And I panicked.\"\n\n\"You don't need to tell me everything all at once, Alex. I just want to know we're moving towards opening up to each other. Otherwise, I don't really know what this is.\"\n\n\"I want to date you. And I'm sorry if I haven't made that clear. That's why I'm here.\"\n\nQuinn looked around the room and then back to Alex with a small smile on her face. \"Alex, sharing candy on a bench in a rehearsal room doesn't really count as a date.\"\n\nAlex let out her first real laugh since entering the room and Quinn couldn't deny the way she relished in hearing the sound. She knew she needed to tread lightly with someone as closed off as Alex, but she also couldn't lie to herself. She wanted to date Alex, too.\n\n\"I'm not that clueless,\" Alex said back and moved her hand so her fingers were closer to Quinn's on the bench.\n\nQuinn assumed Alex wouldn't make the first physical contact so she slid her hand over and casually picked up Alex's hand so they could intertwine their fingers.\n\n\"It's honestly hard to tell. So far you've really bombed.\"\n\nAlex laughed and nodded. \"I definitely have. But I think maybe I can make it up to you.\"\n\n\"Hmm. And how do you think you can do that? You've already ruined New York bagels for me.\"\n\nAlex let out a small gasp at Quinn's comment. \"No! I promise I'll make you enjoy those again too. In fact, I'll just stay silent as you eat.\"\n\n\"That suddenly feels like food porn. You can speak if you behave,\" Quinn said as she moved closer to Alex's body.\n\n\"I promise, I will,\" Alex replied, crossing her fingers over her heart. \"Will you go out with me then? On a real date? So that I can show you I'm not the worst?\"\n\nQuinn immediately felt butterflies in her stomach at Alex's words. She paused to look down at their hands before bringing her gaze back up to the blonde. She knew what she was going to say, but it couldn't hurt to make Alex sweat it out for a moment.\n\n\"You brought me candy and now you're asking me out. Will I get to wear your letterman jacket on the date?\"\n\n\"No letterman jacket, but I do have a cape from when I was Little Red Riding Hood in Into the Woods from like, 18 years ago. You could wear that if you want.\"\n\nQuinn couldn't help the full laugh that escaped her lips at Alex's ridiculous suggestion. Suddenly their banter felt like it did before their weird moment on Friday and she wanted more of it.\n\n\"That may be the nerdiest thing I've ever heard. Please keep the cape at home with your chess set.\"\n\n\"I already told you, it's on the computer. I don't sit there with a chess set.\"\n\nQuinn continued to laugh when she saw the offended look on Alex's face. \"But really, why do you still have the cape?\" she asked.\n\n\"You have rehearsal soon. Will you please answer my question?\" Alex asked in a mockingly stern voice.\n\n\"I see it doesn't take much for you to get bossy again,\" Quinn teased. \"But yes, I will go on a date with you. When?\"\n\n\"Tomorrow?\" Alex asked and Quinn thought she looked adorable with her face scrunched up in such a hopeful expression.\n\n\"You don't waste any time, do you?\"\n\n\"I just wasted a whole weekend.\"\n\n\"Smooth,\" Quinn replied as she narrowed her eyes at Alex. \"But fine, tomorrow it is. What are we doing?\"\n\n\"It's a surprise. I can pick you up at your apartment after your rehearsal. Would 5:00 work?\"\n\nThe small smile that had slowly been growing on Quinn's face finally broke out. She couldn't help being charmed by Alex and there was no way she was going to miss out on a real date with this woman.\n\n\"I'll text you my address,\" Quinn said.\n\n\"I could technically just look it up in your artist profile.\"\n\n\"Nerdy and creepy? You're really winning today.\"\n\n\"Hey, I brought you candy,\" Alex said in a pout that Quinn didn't buy. Alex clearly couldn't pull off a pout.\n\n\"That was your only redeeming quality today.\"\n\n\"I'll have to tell Courtney. She said to bring something sweet.\"\n\nQuinn pulled Alex's hand into her lap and scooted so their legs were completely pushed against each other's.\n\nTheir heads were close enough that they didn't need to speak above a whisper and it wouldn't take much leaning in to be kissing Alex. Even the memory of what those lips felt like made her yearn to do just that.\n\n\"You told Courtney?\" Quinn whispered, roaming her eyes over Alex's face.\n\n\"I called her two minutes after you left.\"\n\nAlex moved her hand up so she could bring her fingers gently down Quinn's face and lightly graze them over her lips. Quinn's lips parted slightly and she closed her eyes for a moment at the feeling.\n\n\"I feel like I should be honest and tell you that she helped me plan the date because if I don't, then Courtney will. She thinks the plan will help you think that I'm 'less of a monkey's ass'. Her words. I would never say that.\"\n\n\"I knew I liked Courtney,\" Quinn smiled back and leaned in even closer to Alex's face. \"I'll have to send her a text and thank her. Depending on how you do on the date, of course.\"",
        "\"I have a feeling the two of you texting could be very dangerous for me.\"\n\n\"Scared?\" Quinn asked and they were so close she could almost feel the other woman's lips against her own.\n\n\"A little,\" Alex said back as she closed the small distance between their lips.\n\nQuinn responded immediately, putting her hand up so she could cup Alex's face as they kissed. Alex didn't waste any time slipping her tongue into the other woman's mouth and their lips moved together seamlessly, as if they had been kissing for years.\n\nBut they didn't get the chance to fully allow their mouths to explore each other's. At the sound of a new knock on the rehearsal room door, the two women jumped apart. Quinn looked at Alex who was standing up from the bench at lighting speed and she looked paler than Quinn had ever seen her.\n\n\"Where is my star?\" a voice boomed into the room suddenly.\n\nQuinn thought she could literally hear a sigh of relief come out of Alex's mouth when the blonde saw the man who accompanied that voice.\n\n\"Diego,\" Alex said with a warm smile before moving over to him.\n\nQuinn was still trying to calm her heart rate from their sudden kiss and it took her a moment before she also stood up and moved over to her director.\n\n\"I was just checking on Quinn before you got here. How was your trip in?\"\n\nAlex's words helped to remind Quinn of the reality of their situation. They could banter and kiss all they wanted when they were alone, but inside the theater walls, Alex Anders was still clearly off limits.\n\n\"Fine, fine,\" he said with a dismissive wave of his hand, leaning in to give Alex a quick kiss on the cheek. \"But I want to know how you are, you gorgeous specimen,\" Diego said looking at Quinn.\n\nHe moved over to her, lifted her off the ground and spun her around. She couldn't help but let out a squeal as he did it and when he put her back down, Alex was looking at them with a small smile on her face.\n\n\"Well. I see you don't need the likes of me lurking around,\" Alex said as she moved to the door.\n\n\"You are always welcome, mi dulce,\" Diego called over to her as she got to the door.\n\nBefore leaving, Alex turned and made eye contact with Quinn. \"Speak soon, Ms. Collins,\" she said and left, closing the door behind her.\n\n\"Now, it's you and me,\" Diego said in his heavy accent as he moved to a desk and put down his bag.\n\nQuinn felt an onslaught of emotions. She wanted more time with Alex, but she was also more than anxious to start her rehearsals with Diego. She steeled herself to focus on what was important and waited for Diego to settle in.\n\nAs she watched him put his things on the desk, she noted that he was younger than she expected him to be, or he just had a baby face. But she also knew he had been directing in New York for a long time.\n\nHe moved what looked like a script out of the bag and Quinn's stomach dropped when she realized it was her script. Diego turned back to her with a wide smile on his tanned face.\n\n\"Model Behavior, by Quinn Collins. Ready to bring this to life?\"\n\n\"Fuck yes,\" Quinn responded with her own smile.\n\nChapter 20\n\nRehearsal with Diego went better than Quinn could have ever imagined and she was more inspired about her show than she had been since she first wrote it. But she was also hungry and the gross, healthy concoction Mikey was calling dinner was not going to cut it.\n\nAll she had eaten all day were the Swedish Fish Alex had given her and she could feel her stomach grumble as she reached into her cupboard for some bread and peanut butter. It might not be a proper dinner, but it was better than Mikey's.\n\nShe walked back into the living room with her peanut butter sandwich and took an exaggerated bite when Mikey looked up from the takeout he brought over.\n\n\"You are so dramatic. It wouldn't kill you to eat something healthy for once. You are getting older,\" he said.\n\n\"If you can tell me what it is that you're even eating, then I'll try it.\"\n\n\"Fine,\" he said putting his fork down and sliding it over to her. \"It's an acai bowl.\"\n\n\"Nope, I don't think that's a thing. That sounds fake.\"\n\n\"Do you need me to pull up Google? It's a thing. A popular thing, actually. It's mainly just fruit. Try it,\" he said as he pushed the bowl closer to her.\n\nQuinn scrunched her nose up before shoving the last of her sandwich into her mouth, which was actually a lot of sandwich. She put up her finger to indicate she couldn't talk. Mikey rolled his eyes and waited for her to swallow some of the bread that was filling her mouth.\n\n\"Sorry, can't,\" she said with her mouth still half full of sandwich. \"I'm so full now. Want to watch something?\"\n\n\"No, I have a date. I just came to bring you food, which I guess was a waste of time and money.\"\n\n\"One, you knew I wouldn't eat that. You literally brought me fruit for dinner. Two, I know you just wanted to see my beautiful face. And three, who is the date with?\"\n\n\"You don't know him. We met at Janet's event last week.\"\n\n\"I bet he's not as cute as Tim Delvin,\" Quinn said as she stretched out on the couch and hugged a pillow into her stomach.\n\nMikey put the rest of his bowl, plus Quinn's uneaten one, back into the bag they came in and moved to the kitchen so he could throw them away. When he came back into the room, Quinn could see a small smile on his face, despite the effort he was putting into not reacting to her.\n\n\"I told you, he's out of my league,\" he said as he sat back down on the love seat he was occupying.\n\n\"I see that smirk Michael Rubio. You can't hide from me. I will find you and that smirk anywhere in the world.\"\n\n\"Ok, calm down, Carmen Sandiego. And tell me why Alex Anders stopped by today.\"\n\n\"She's the manager of the theater. I assume that's common occurrence.\"\n\nQuinn knew too late that her mistake was not making eye contact with Mikey when she said it. He could sniff out a lie from her way too easily for a rookie move like that.\n\n\"I heard your voice when she came into the room. Are we lying to each other now?\"\n\nMikey's words cut Quinn deeper than he probably meant them. But she had felt bad about lying to Mikey since she met Alex. Alex may need to keep this quiet, but Quinn wasn't ready to continue to lie to her best friend. She sat up on the couch and looked at her friend.\n\n\"No, I don't want to lie to you. We slept together.\"\n\nMikey let out a sigh, but he didn't look as annoyed as Quinn expected.\n\n\"I guess I figured that would happen. You haven't looked at anyone like that since Jenna. Just...I don't know, Q. Just be careful. I know how much this show means to you. And I also know what hell Simon Anders will make if he finds out you're sleeping with his daughter.\"\n\nQuinn threw her head back onto the cushion behind her and let out a groan.\n\n\"I'm so fucking sick of hearing that man's name in association with my sex life.\"\n\n\"I'd get used to it if you're determined to go down any road with Alex.\"\n\nThere was a beat of silence and Quinn could see the look in Mikey's eyes shift from stern to tender. Mikey might be hard to relate to sometimes, but ultimately, he loved Quinn and always showed that.\n\n\"Is it just sex?\" he asked.\n\n\"No,\" she responded quietly. \"I like her. And when she's not being a self-sabotaging ass, I think she likes me too.\"\n\n\"Just be careful for me?\"\n\n\"She's not Jenna.\"\n\n\"I know she's not. I can see that already. But I don't trust her dad. From what Janet has told me, Simon is only loyal to Simon.\"\n\nMikey looked down at his phone to check the time and stood from his seat.\n\n\"I have to go, Q. The banker awaits.\"\n\n\"Ew, a banker?\" Quinn asked as she got up from the couch so she could walk him to the door.\n\n\"What do you think Tim is?\" he laughed.\n\n\"Tim's a banker?\"\n\n\"He's in wealth management. Same thing.\"\n\n\"Then I already know he's your type.\"\n\nBefore Mikey could leave, Quinn pulled him in for a tight hug, which she was thankful he returned just as fiercely.\n\n\"Have a good night. Be good,\" he said as he pulled back from their hug and gave her a warm smile.\n\n\"'I'm not the one with the date. You have a good night. Be safe. Sexually, I mean. Be safe sexually.\"\n\n\"And that's my exit,\" Mikey said, rolling his eyes dramatically at his friend before leaving the apartment.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nQuinn was lazily scrolling through channels on her TV, not really able to settle on anything, when she heard her phone buzz on the table in front of her. Even from where she was sitting, she could see Alex's name pop up onto the screen and her stomach gave its now familiar flip at the sight.\n\nAlex: You never told me if you liked the Swedish Fish.\n\n \n\nA smile broke out onto Quinn's face as she read the text and she knew something so simple probably shouldn't make her body thrum with giddy excitement. This isn't the first text she's gotten from a beautiful woman, and it's not even the first text she's ever gotten from Alex. She took a minute before responding\u2014 Quinn didn't need Alex knowing just how strongly she reacted to her text.\n\nQuinn: The lame excuse of why you brought them was my favorite part. But yes, they were delicious. Best fish I've ever had. Though not as good as my favorite Swede...\n\nQuinn's fingers were obviously working faster than her mind and as she reread what she just sent, she felt a rush of embarrassment. She started to type a follow-up so they could move past her cheesy comment when Alex texted back.\n\nAlex: I would hope not.\n\n \n\nQuinn smiled at the response before another text from Alex came in.\n\nAlex: What are you doing? Finding Nemo marathon?\n\nQuinn: How would that even work? There's only one movie. \n\nAlex: I assumed you just watched it on repeat.\n\nQuinn: And what are you doing? Fighting off a dangerous computer foe?\n\nAlex: I wish. I'm on my way back to the theater. I have to take an investor to the show tonight.\n\n \n\nQuinn: Pixar &gt; Arthur Miller\n\n \n\nAlex: In this instance, I would have to agree.\n\n \n\nQuinn moved off her couch and to her kitchen. She may have told Mikey that she was full, but the sandwich didn't really suffice for dinner so she grabbed some leftover pizza from the fridge, a beer and went back to the couch.\n\nMikey was probably right and one day she should start to eat like an adult. But after so many years of being told what she could and couldn't eat, sitting on the couch and eating cold pizza felt liberating. And she wished all the old \"nutritionists\" her agency made her see when she was modeling could be there to watch her in her carb-loaded bliss.\n\nShe picked up her phone as she took the first bite so she could resume her flirty banter with Alex.\n\nQuinn: Are you going to tell me what we're doing tomorrow?\n\nAlex: Not a chance.\n\nQuinn: Then will you at least tell me what kind of attire I should wear?\n\nAlex: Dress casual.\n\nQuinn smiled at that. She knew Alex had money and could probably set-up a fancy date with the snap of her fingers. But Quinn liked the idea of doing something more casual so she could try to get to know the woman better. Being wined and dined wasn't really Quinn's style anyway.\n\nQuinn: I can do casual.\n\nAlex: I have a feeling you'd look good in anything.\n\nQuinn: If this is another push to get me to wear your cape, it's not happening.\n\nAlex: I just know how much you like the color red...\n\nQuinn put the rest of the pizza back on the plate and scooted back into her couch cushions. She's not that surprised their easy flirtation was suddenly dripping with sexual tension. The way they kissed in her rehearsal room made it clear both women's bodies were still very much charged by each other.\n\nQuinn: Actually, I'd say you're the one most affected by that color.\n\nQuinn could see that Alex was typing, but then the chat bubbles went away. They reappeared a moment later and Quinn smiled at Alex's indecision. Somehow, she found it impossibly cute when Alex Anders was flustered.\n\nAlex: I wish I was there and not here.\n\nQuinn: And what would we be doing if you were here?\n\nAlex: I'd finish that kiss from before....and then I'd teach you to play chess.\n\n \n\nQuinn: Not where I thought that was going...\n\n \n\nAlex: Ms. Collins, I am a lot more than just a body.\n\nQuinn: Duly noted. I'll learn chess if you learn my favorite game.\n\nAlex: I already know how to play Go Fish, sweetheart.\n\nAlex's use of that term of endearment sent a bolt of arousal right to Quinn's pussy as she remembered all the ways the blonde used that same term on Friday night as they were fucking. \"Sweetheart\" had become so much more than simple pet name\u2014 it's use now alluded to something more sexy than sweet.\n\nQuinn also loved seeing this sillier side of Alex since the woman was often wound so tight. Quinn wondered how many people outside of Courtney even knew Alex was funny.\n\nQuinn: I was referring to War, but we can play Go Fish too. \n\n \n\nAlex: ...War...as in the card game you're taught in Kindergarten?\n\n \n\nQuinn: Don't judge. I'll have you know I'm a War champion.\n\n \n\nAlex: It's a game of luck, chess is a game of strategy.\n\nQuinn: What if my strategy is that I play naked?\n\nQuinn smiled at her phone when Alex didn't respond right away. She tried to picture what Alex's face looked like in that moment. She couldn't see her but she had a feeling there was a slight blush rising up those perfect cheekbones.\n\nAlex: I'm trying to remind myself that I can't ditch out on this investor or I'd be coming over tonight to win my championship.\n\nQuinn wanted to ask Alex to just come over when she was done, but she also wanted to stick to her earlier resolution to get to know Alex better without sex. If they had sex again, she would just feel more than she already did, and she wasn't ready to do that unless Alex was willing to open up to her more. Before she could decide how to respond, Alex sent another text.\n\nAlex: I wish we could keep texting but I just got to the theater and need to go meet with Mr. Money Banks.\n\nQuinn: I sincerely hope that's his real name. But I understand. I hope you had some coffee to keep you awake during the show.\n\nAlex: I have plenty of thoughts to keep my mind busy. Kissing you again being the main one.\n\nQuinn tried to steady her breathing until she remembered that she was alone and didn't need to. Alex had a way of getting her heart rate up with even the simplest of statements.\n\nInstead of respond to Alex's last text, Quinn turned on her photo app and took a quick selfie on her couch, making a kissing face to the camera. It wasn't the best shot that she'd ever seen of herself but she had a feeling Alex wouldn't care. She sent the photo with a quick follow-up message.\n\nQuinn: Hope this helps.\n\nAlex: This helps very much. You're beautiful, Quinn.\n\nQuinn was grateful nobody was there to see the stupid smile on her face as she looked down at her phone.\n\nQuinn: See you tomorrow?\n\n \n\nAlex: Counting down the seconds.\n\nAlex added a kiss face to the end of her text and even that caused a swirl of butterflies to fly around Quinn's stomach.\n\n \n\nQuinn stared at her phone after they finished texting and she wished Alex didn't have to go into a show. Somehow texting with Alex had become one of her favorite activities. She considered calling Claire, but she knew she couldn't lie to her sister and telling Mikey was probably enough before she even had a real first date with the woman.\n\nA first date that was tomorrow she reminded herself. Quinn got off her couch and moved to her bedroom so she could start to go through outfit options. She had a feeling she would need at least a day for that kind of decision without the help of her gay best friend.\n\nChapter 21\n\nAlex couldn't remember the last time she stood in front of her closet with such panic. In fact, there was probably never a time that Alex panicked about fashion. She generally had a pretty set style and didn't veer much.\n\nShe glanced over at the clock on her bedside table to see it was already 4:00 and she needed to be at Quinn's in an hour. Luckily, she had showered and done her make-up quickly. But what to wear was still eluding her.\n\nShe moved over to her bed, picked up her phone and dialed the only person she knew would help her. Even if it would be slightly painful.\n\n\"What the fuck do I wear on a first date?\" she said into the phone without so much as a hello. When there was just silence on the other line, she pulled it away from her face to make sure she had in fact dialed a number. \"Hello? Court?\"\n\n\"Sorry, I had to check and confirm it was you calling. I didn't believe it for a moment. I don't think you've ever called me about fashion. Or a first date.\"\n\n\"That's because I don't go on first dates. Now help me?\"\n\n\"Ok, ok. What vibe are you going for?\"\n\n\"I told her to dress casual.\"\n\n\"So...dress casual?\"\n\n\"Court, in what? She's already seen me in my one casual outfit.\"\n\n\"Skinny jeans and a white t-shirt?\"\n\nAlex put her hand over her eyes and sighed. \"Am I that predictable?\"\n\n\"No, just to me. But stop freaking out. I'd say I could come over and help but my call time at the theater is soon and some annoying theater manager won't get me an understudy.\"\n\n\"Your role doesn't warrant an understudy,\" Alex said as she plopped down on her back with the phone still in her hand.\n\n\"See, that was mean and here I am helping you.\"\n\n\"You haven't helped.\"\n\n\"But I'm about to so don't be an ass. Wear your skinny jeans and that cute, red and grey plaid shirt you wore to the Horizon pub crawl last month.\"\n\n\"You said I looked like a lumberjack in that shirt.\"\n\n\"Yes, but a hot lumberjack. With a, 'hey girl, want me to cut your wood for you?' kind of vibe.\"\n\n\"You're so weird,\" Alex said but she couldn't help the smile that broke out on her face. Courtney always had a way of doing that.\n\n\"You love me.\"\n\n\"I do. Are you sure about the shirt?\"\n\n\"Al, Quinn already likes you. I'm pretty sure you could show up wearing just a Playbill wrapped around your body and she'd still want to jump your bones. So just relax. Go have fun. Don't fuck it up again.\"\n\n\"Gee, thanks,\" Alex laughed back.\n\n\"Seriously, though. Have fun, ok?\"\n\n\"Thanks, babe.\"\n\n\"Oh, and by the way, Paige wants to go on a double date soon. So, tell your lady friend.\"\n\n\"How about we see if I can get through the first date and then maybe we chat about that.\"\n\n\"You're going to be great. Besides, I have so many good stories for her. We need to double date.\"\n\n\"No dorm stories,\" Alex said as she moved to her closet to get the shirt Courtney recommended.<br >\n\n\"That is an unfair and ridiculous request.\"\n\n\"Court.\"\n\n\"Al. She needs to see the real you. Not this overly serious, analytical, snappy version of you. Getting to know your best friend would help with that.\"\n\n\"I really couldn't ask for a better ego booster than you.\"\n\n\"I think the fucking world of you and so will she if you let her experience the you that I know.\"\n\n\"I think the fucking world of you too. Thanks, Stella.\"\n\n\"Any time, Blanche. Text me with updates.\"\n\nAlex hung up her phone and pulled the shirt out of the closet. She knew her brief fashion freak out was ridiculous. She had slept with Quinn already and this wasn't the first time she'd be alone with her.\n\nBut this felt so different. She wanted to show Quinn that she was worth dating, even if there were certain complications that they couldn't get around right now. Because she knew that Quinn Collins was worth it.",
        "~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nAs Alex arrived at Quinn's apartment, she immediately started to worry about the plan she made for them. Quinn didn't seem like the type to want to be in a fancy, stuffy restaurant on their first date, but maybe Alex had read her wrong.\n\nAlex wanted to do something personal. Something that could show Quinn that she wasn't an emotional statue. And the plan she had for them would certainly do that. In fact, the night's plan was partly what was scaring Alex. Revisiting memories from her past wasn't something she was used to doing.\n\nBut more than anything, she desperately wanted to see Quinn again. She had been looking at the photo the woman sent her last night over and over again.\n\nShe could probably trace the entire photo from memory at this point. She had seen dozens of shots of Quinn's modeling work, but the photo she now had in her phone felt more personal. And she considered it far sexier than any polished photoshoot image.\n\nHer desire to be in Quinn's presence was enough to override any other nerves she was feeling and as she walked up to the apartment door, she took a deep breath and knocked.\n\nQuinn appeared in the doorway a moment later and Alex felt an instant rush at seeing the beautiful face in front of her. Quinn had on a pair of black jeans, a cashmere gray sweater and a black beanie. She looked so fucking cute that all Alex seemed to be able to do was stand there and smile at the other woman.\n\nAlex didn't judge women who wore make-up\u2014 in fact, she herself did every day\u2014 but she also loved how natural Quinn kept her face. She obviously didn't need anything to enhance her features and as Alex stood there staring, she again thought Quinn looked like an elegant ballerina. As if she opened a music box and there she was.\n\n\"You look really cute in that shirt,\" Quinn said as she opened the door wider for Alex to enter.\n\nAlex managed to tear her eyes away from Quinn's face so she could urge her body to move into the apartment, but the entryway was small, and suddenly she was standing closer to the woman than she was expecting to.\n\n\"I was just thinking the same thing. You look cute in a hat\" Alex said as she reached up to pull on the end of Quinn's beanie. \"I'd kiss you hello, but then I don't think we would leave.\"\n\nAlex wasn't sure why she was whispering, but the dark, small hallway carried her voice regardless and Quinn's close body seemed to be drawing the air out of her lungs.\n\nQuinn let out a dramatic gasp. \"You promised me a date, Ms. Anders. I will not be deterred by your insane sexual magnetism.\"\n\nAlex gave a low laugh and moved into Quinn so that they were almost flush against each other. Their faces were so close that she could feel Quinn's breath on her own.\n\n\"I'm sorry. My what now?\"\n\n\"Just kiss me,\" Quinn breathed, pulling on Alex's collar so she could bring their mouths together.\n\nAlex didn't hesitate to kiss the woman back. She moved both hands up to gently hold Quinn's face and took control of the kiss so she could move their lips together. She lightly brought her tongue to graze Quinn's own but didn't deepen it past that.\n\nWhile her body was vibrating with the need to feel the sexy brunette under her again, she also wanted to show Quinn a different side of her. She didn't want this to become about just sex, as much as she wanted that sex again.\n\nShe gently moved Quinn's face away from hers but left their lips so close that they were almost still touching.\n\n\"I did promise you a date. And I'm going to deliver on that promise. So, this\u2014\"\n\nAlex didn't finish her sentence as she brought her lips back into Quinn's for another searing kiss. This time, their tongues didn't hesitate to slide against each other's and Alex's hands moved into the brunette's hair so she could anchor herself as they swayed together. She broke them apart again but didn't let go of Quinn's head. They stared at each other, both their breathing heavy.\n\n\"\u2014this will need to wait,\" she finally finished.\n\n\"You think I'm going to sleep with you on the first date?\" asked Quinn in a whisper, but her hands lightly pulling on the bottom of Alex's shirt, betrayed her intent.\n\n\"Who said anything about sleeping?\" Alex replied with a slight quirk to her lips.\n\n\"Are you going to tell me now where we're going?\"\n\n\"Nope. Are you ready?\"\n\nQuinn pulled away so she could move into the hall closet to grab a coat and the loss of her body heat made Alex instantly regret saying that they should go.\n\nAfter riding the elevator back down to the ground floor and leaving the building, Alex moved towards the car she had waiting for them. When she sensed that Quinn had stopped walking, she turned around with a question in her eyes.\n\n\"You said casual,\" Quinn said as she saw the vehicle they were taking, parked right outside her apartment. \"Is it even legal to park there?\"\n\n\"There's a driver,\" Alex said and she could feel a slight blush creeping up her neck. \"I don't drive. But I promise this is the fanciest part of our date.\"\n\n\"I've had trouble picturing you on a subway train since I met you. Now I know that I'm right. You don't take public transportation.\"\n\nQuinn didn't pose it as a question and Alex could do little to correct her.\n\n\"Not often. But we can forgo the car if you'd rather take the subway,\" Alex said with a scrunched nose as she looked back at the SUV.\n\n\"I want to go on the date you planned. Please, whisk me away in your sexy, luxury car.\"\n\nAlex gave the other woman a small smile as she held out her hand.\n\n\"In that case, sweetheart, your chariot awaits.\"\n\nQuinn placed her hand in Alex's outstretched one and the blonde didn't miss the way the Quinn's eyes darkened slightly at the use of her favorite pet name.\n\n \n\nChapter 22\n\n\"Ocean Parkway?\" Quinn asked as the driver turned off the freeway and towards an exit.\n\nThe drive so far had been quiet, but not uncomfortable. Quinn thought she could sense Alex's mood shift the closer they seemed to get to wherever they were going.\n\nTheir flirty teasing from the apartment was over, but as Alex gently held Quinn's hand in her own as she looked out the window at the passing traffic, Quinn didn't mind the change. She had a feeling that wherever they were going was somehow important for Alex.\n\nAlex didn't respond to Quinn's question, but did look over at the brunette with a soft smile. She gently squeezed her hand and even that small gesture made Quinn's stomach flip. She was drawn to Alex's sudden intensity and squeezed her hand back, deciding not to ask any more questions.\n\n\"Here is fine, thanks,\" Alex said to the driver after a few more minutes and he pulled the car over on a fairly busy intersection.\n\n\"Wait,\" Alex said as she put her hand lightly on Quinn's arm.\n\nA moment later, she was on Quinn's side of the car and was opening the door for her. Quinn was so distracted by the lights and noise around her that she couldn't even focus on how sweet Alex was being.\n\n\"Are we in Coney Island?\" she asked Alex as she looked around at the people passing by.\n\nThere were more people than she would have expected to be about this close to November, but the weather was mild tonight and she could see a wide array of families, couples and others milling about the area.\n\n\"Have you been?\" Alex asked as she moved closer and took Quinn's hand back in hers.\n\n\"No, I've always wanted to, but I never have. I almost forgot about it. You don't hear about Coney Island much these days.\"\n\nAlex looked around the street and gave a smile before she nodded her head to the right and gently pulled Quinn so they could begin walking.\n\n\"It feels a little forgotten. But it was my mom's favorite place. She loved New York. Everything about it. But this place was her favorite.\"\n\nQuinn moved in closer to Alex to avoid bumping into the people passing them on the street. Her eyes darted around to as many things as they could, while she let all the noises and sounds sink in. She could see colorful murals peppering the walls around them and in the distance, there were some shut down rides.\n\n\"Did you come here a lot with her when you were younger?\" she asked Alex.\n\n\"I did. All the time actually. It was our secret getaway. It always felt so different from the rest of the city. I think part of why I loved it so much was that it was ours. My father never came with us. Hot dogs on a boardwalk isn't really his style. So, it was just my mom and me.\"\n\n\"Hot dogs? I love hot dogs.\"\n\n\"I'm glad to hear that,\" Alex said as she stopped walking and pointed up ahead. \"Because that's what we're getting. Nathan's. Have you heard of it?\"\n\n\"Isn't that where they do the hot dog eating contest?\"\n\n\"Why am I not surprised you know that random fact? But yes, they do. On the other side of the building there's a huge sign about it actually. There are other Nathan's around the country now but this one is the original.\"\n\n\"Only the best for Alexandra Anders,\" Quinn teased.\n\n\"It's still just a hot dog. Sorry if you were hoping for French cuisine,\" Alex replied with a playful smile that indicated she didn't really think Quinn needed that.\n\n\"This is perfect, Alex,\" Quinn said as she pulled the blonde in for a quick kiss. \"And I'm starving. I may eat two.\"\n\n\"I would expect nothing less, Nemo.\"\n\nAnd Quinn wasn't kidding. As they left Nathan's with their hot dogs, Alex couldn't help but chuckle at the sight of Quinn trying to balance two hot dogs, plus her lemonade, in her hands.\n\n\"I won't be able to handle your sad face when you drop that, so please, let me help,\" Alex said as she reached over and took one of the hot dogs from Quinn.\n\n\"I'd be careful. A girl could get used to this kind of treatment. First a car door, now you're carrying things for me? What's next, pulling out my chair before we eat?\"\n\n\"We're going to the boardwalk to eat these and there's only benches there. But I could try,\" Alex said with a wink, leading them down a quieter street.\n\n\"I don't know what I was expecting with tonight, but hot dogs on the beach wasn't it,\" Quinn said. When she saw Alex's furrowed brow, she immediately followed-up her statement. \"I love it. Thank you for showing me something that's important to you.\"\n\nShe wanted to be holding hands with the woman again, but it was too hard with a drink in one hand and hot dog in the other so she just followed quietly as Alex led her onto the boardwalk and to a bench next to a closed down arcade.\n\nThey both sat down and Alex handed Quinn her second hot dog. She put her own hot dog on her lap and looked over at the brunette with another shy look. The Alex Anders Quinn was seeing tonight was so much more tentative and softer than she was used to and she just wanted to know more about why Alex wanted to come to this place tonight.\n\n\"I hope you weren't planning to challenge me to a game of pinball,\" Quinn said as she pointed over to the closed arcade.\n\n\"I wouldn't do that to your ego on the first date,\" Alex said with a smile as she opened up her own hot dog and took a bite.\n\nQuinn stared as she watched Alex close her eyes for a moment, completely forgetting about her own two hot dogs in lieu of watching the blissful expression on the other woman's face.\n\n\"Oh god. That takes me back,\" Alex said as she looked at Quinn's unwrapped hot dogs. \"You have a lot of hot dog to get through. I'd start. This is only stop number one.\"\n\nQuinn smiled as she opened her hot dog and took a bite. She could feel Alex's eyes on her but couldn't stop the loud hum that came out of her mouth on the first mouthful.\n\n\"That really is good,\" she finally said.\n\nThey both ate in silence for a few minutes. At least Alex at in silence. Quinn could never help the sounds that came out of her when she ate. And the way Alex was looking at her, she didn't seem to mind anyway.\n\nQuinn had only gotten through three bites of her second hot dog when she put it down on the bench next to her.\n\n\"Ok, I admit defeat. I can't handle anymore.\"\n\nAlex let out a low laugh as she scrunched up the foil that used to hold her hot dog.\n\n\"I'm in awe of your effort. You would have done my mom proud,\" she said as she reached over and added Quinn's wrapper to her own pile. \"I used to sit right here with my mom. She'd order two hot dogs too. And after we ate, we'd play skee-ball in this arcade.\"\n\nAlex looked around at the closed arcade and gave a smile and shrug as she turned back. \"It was a lot bigger and more glamorous when I was a kid,\" she said.\n\nQuinn reached her hand over so she could interlace her fingers with Alex's.\n\n\"Will you tell me about her?\"\n\nAlex looked down at their fingers for a moment. When she looked up at Quinn, her blue eyes were so clear and deep that they reminded Quinn of the ocean and she felt like she could get lost in their waves if she stared too long. They weren't guarded in the way they were the other night and she felt like she could truly see Alex.\n\n\"Walk with me?\" she asked Quinn.\n\nAs Alex stood up and held out her hand, Quinn couldn't miss the difference between the sweet way Alex was asking versus the commanding tone she usually used when making requests.\n\nQuinn stood and put her hand into Alex's. They were quiet for a moment as they walked down the boardwalk and it gave Quinn a chance to absorb the stores and closed down stands scattered all along the boardwalk. She didn't mind that Alex wanted to walk as they talked\u2014 she knew this kind of conversation wasn't easy for the other woman.\n\n\"I haven't really talked about this much outside of Courtney,\" Alex said as they walked slowly, hand in hand. \"I don't really like thinking about the end much. She was so much more to me than the frail woman I said goodbye to.\"\n\n\"Then tell me what she was like before she got sick,\" Quinn said softly, squeezing Alex's hand lightly.\n\n\"She was so vibrant. When she walked into a room, she just seemed to pull the energy to her. And not in the way Janet just takes attention. My mom had a way of drawing people into her orbit. And she was very social. She loved having parties and lunches and hosting events. But she didn't do it politically like my father does. My mom just loved people. She had this laugh that boomed out of her. She could just be sitting there and then this thing just came bubbling out. I always knew when she was in the theater watching one of my shows because of that laugh.\"\n\nAlex stopped talking for a moment and seemed to be lost in thought.\n\n\"I'm glad you had one parent who supported your passion for acting,\" Quinn said.\n\nAlex slowed their walk so they could move over to a rail and look out at the long beach and ocean, which was becoming harder to see with the setting sun. Alex dropper Quinn's hand but moved so their bodies were pressing against each other as they looked out at the view.\n\n\"My mom said her favorite thing was to see me on stage. The only times I ever saw her really fight with my father, was when they were arguing about my desire to become an actor.\"<br >\n\n\"Why didn't he want you to be on stage if you loved it?\"\n\n\"He always claimed that he was doing me a kindness. Because he knows what it takes to make it in this business.\"\n\n\"Implying you don't have the talent? Because I've seen first-hand that you do.\"\n\nAlex turned her head and gave Quinn a small smile before slowly moving her pained expression back to the ocean.\n\n\"He didn't just imply it. He told me it. He said I was smart enough to be successful in something else. Which I think he thought was a compliment. Now, I know he just didn't want me to take the spotlight. This whole city bows down to the man and somehow I seemed to threaten that.\"\n\n\"Did your mom love him?\"\n\nAlex didn't respond for a full minute and Quinn started to think that maybe she went too far with her questioning. Finally, Alex responded in a low, quiet voice.\n\n\"I know she did. She loved me too, fiercely. But sometimes I think she didn't know how to do both. She was an amazing mom, but she wasn't perfect. I was alone a lot. I gave up everything to be there with her at the end. And I guess I convinced myself that she let me do that because she believed him and knew NYU was a waste of time. That I just wasn't good enough.\"\n\nAlex turned to Quinn and her blue eyes were the most clouded Quinn had ever seen them. There was the hint of wetness in the corners, but not enough for tears to fall.\n\n\"I've never told anyone that,\" Alex said in a whisper.\n\nQuinn moved her hand up to Alex's cheek and gently caressed her face with her thumb. She then moved some of the blond hair behind Alex's ear before bringing her hand down so she could hold her hand.\n\n\"Is that way you've given up acting? You don't think you're good enough?\"\n\n\"No. Not really. Not anymore. It's just too painful. I don't know how to separate what I feel on stage with the loss of my mom. They just became linked somewhere along the way.\"\n\n\"Don't you miss it?\"\n\n\"Yes. But I also love what I do. I get a rush watching the opening curtain rise on a show that I produced or discovered. Just as much as I did when I was walking out on stage. But one hurts less. Does that make any sense?\"\n\nQuinn had seen Alex on stage and couldn't imagine a talent like that going to waste. But she wasn't going to push Alex on something that caused her pain. She knew as well as anyone that having a talent for something didn't mean you had to do it. She could have extended her modeling career into different areas of the fashion world, but it didn't make her happy.\n\n\"I do understand that. And I may be biased, but I happen to think you're also very talented off the stage.\"\n\nWhen Alex quirked her eyebrow in a suggestive way, Quinn lightly smacked her arm.\n\n\"I meant in the theater. Get your mind out of the gutter,\" she said but with a smile so Alex knew she enjoyed the teasing.\n\nShe was happy to see Alex's eyes clear up and a small chuckle escape her lips at the light banter. But as she continued looking at Quinn, her face became serious again. She looked out at the water, which was hardly visible now, and then back to Quinn's eyes.\n\n\"My mom used to call things that she thought were perfect\u2014 you know, things that could never be replicated\u2014 lighting in a bottle. It was her favorite phrase. She called Coney Island that. The last show she ever saw of mine was Streetcar and she said it about that too. And when I was a kid, she would always say that about me when she would kiss me goodnight.\"\n\nAlex moved closer so she could put her hands around Quinn and bring them up her back. Their faces were close together, but Quinn could tell Alex wasn't done talking so she just waited, even though all she wanted to do was kiss the other woman. Her heart rate was faster with their sudden closeness and she couldn't help but hold her breath at the intense look Alex was giving her.\n\n\"Her words were the first thing I thought of when I saw your show. The first thing I thought of the second the stage light came on and you were sitting on that stool. Before you even said a word, I knew. I knew that you were special.\"\n\nAlex didn't wait for a response before bringing their lips together and Quinn was glad because she had no response. Alex's words were the most romantic thing anyone had ever said to her and she was glad that the blonde moved their lips together in a passionate kiss because that's all she could manage to do in that moment.\n\nThere were so many things in Quinn's life that she could look back on and the path to how she got there was obvious. But standing on a boardwalk next to the ocean as Alex held her in her arms and kissed her like that\u2014 that's something she could never have predicted. And more than any other moment they had shared, she knew that when she looked back on tonight, she would be able to identify this as the moment she really began to fall in love with Alex.",
        "When their lips finally parted and Quinn was able to look into Alex's eyes, she could tell that the other woman was just as affected by the moment as she was. Alex brushed her thumb across Quinn's lips as she smiled.\n\n\"This was an amazing first date, Alex. Thank you for sharing this with me,\" Quinn said quietly.\n\n\"You thought I was just going to take you to get a hot dog and tell you a sad story? I have more game than that, you know.\"\n\nQuinn let out a quick laugh and pulled back so she could see more of Alex's face.\n\n\"The date's not over?\"\n\n\"Not even close. But we should go or we'll be late,\" she said as she let go of Quinn's body and checked the time on her watch.\n\nQuinn loved how classic Alex could be. When most people would pull out their phone to check the time, Quinn noticed that Alex always looked at her watch.\n\nAlex pulled Quinn's hand back into her own and moved them along the boardwalk in the same direction they had been walking before. After only a few more minutes they stopped in front of a large structure. Quinn looked up at it curiously until her eyes landed on a sign and she let out a small gasp.\n\n\"We're going to the aquarium?\"\n\n\"Is that ok with you?\"\n\nQuinn let go of Alex's hand so she could jump up and down like a child. She grabbed Alex into a hug, but the other woman was so surprised by the sudden contact that her arms just hung limply to her side.\n\n\"I guess that's a yes,\" Alex laughed out, finally bringing her arms up to hug Quinn back.\n\nQuinn pulled back and she knew her face was red and her hair was probably a mess, but she didn't care. Alex kept outdoing herself and the anger she felt all weekend towards the blonde was as good as gone.\n\nAs they walked through the gate leading from the boardwalk to the aquarium entrance, Quinn tried to keep pace with Alex and not walk too quickly. As they neared toward the entrance though, she noticed that the ticket lines were empty and the place seemed deserted in general. They were the only people in the vicinity.\n\n\"Is it closed?\" she asked with a small frown on her face.\n\n\"Not for us,\" Alex said as she pulled out her phone and seemed to text someone.\n\nQuinn had never seen such a young, gleeful look on Alex's face and she knew her own smile matched.\n\n\"What do you mean? We have the aquarium to ourselves?\"\n\n\"Not the whole thing, but we'll be able to wander the inside exhibits alone.\"\n\nQuinn felt speechless for a moment. She knew the Anders family was well-connected but being treated to a night alone in a city aquarium seemed like a stretch even for them.\n\n\"Alex, how did you do this?\" she asked, taking a step closer to the other woman.\n\nAlex just shrugged her shoulders casually like it wasn't a big deal at all.\n\n\"It really wasn't as hard as it seems. Larry Westin is retired now, but until recently, he was one of the most successful exhibit curators in the city. He worked for the Guggenheim full-time, but also had his hands in some other places. The aquarium is one of them and he still holds some influence here,\" Alex explained. \"He's a really close family friend so I pulled a favor. He'd kind of do anything for me I think,\" she added with a shy smile.\n\n\"Westin?\" Quinn asked.\n\n\"As in Rick Westin's husband.\"\n\n\"Isn't that dangerous for you? If Rick's husband knows you're taking me here?\"\n\nAlex closed the distance between them and slid her arms around Quinn again.\n\n\"Not with Larry. I didn't tell him who I was taking, but Larry is a bit like Janet. He was close with my mom and he would never betray my trust if he thought it would make things difficult with my father.\"\n\nQuinn smiled as she moved her lips closer to Alex's. \"Sounds like I'll like Larry,\" she said as she lightly let their lips touch.\n\nBefore they could deepen the kiss, Quinn heard a soft cough behind her. She pulled away from Alex like she was a teenager getting caught against the lockers with her crush. But the man looking at them had a soft smile on his face and he didn't look put off by the sight.\n\n\"So sorry to interrupt you two,\" he said and Quinn was instantly drawn to his quiet and soft demeanor.\n\nWhile Rick was polished and fit the stereotype of the typical New York theater director, Larry was the opposite. Short in stature and small framed, his simple style and disheveled, thinning red hair, implied he didn't spend the same time on his appearance as his husband.\n\nBut his face was open and sweet and Quinn couldn't help but smile at the man even before she was introduced.\n\n\"Hey Larry, you're not interrupting anything,\" Alex said as she moved over and hugged him.\n\nQuinn couldn't remember a time she had seen Alex initiate a hug with anyone, even Courtney. Alex seemed as comfortable with Larry as she was the first time Quinn saw her with Janet.\n\n\"This is Quinn,\" Alex said to Larry as she introduced the brunette.\n\n\"I've been told you're the man who made tonight possible. Thank you so much. I can't tell you how excited I am,\" Quinn said as she moved to hug Larry, who seemed receptive to the sudden display of affection and hugged Quinn back.\n\n\"It's really no problem. Alex is family. Unfortunately, I could only get you 90 minutes before the security team needs to do a final sweep and close things up.\"\n\n\"That's more than enough time,\" Quinn replied quickly and when she looked over at Alex, the woman was beaming at her.\n\n\"Shall we?\" Larry said as he turned and led them to the entrance.\n\n\"Ready to see Nemo, Nemo?\" Alex said with a wide smile on her face that was so opposite to how she looked only moments ago when she was talking about her mom.\n\nQuinn nodded and together they followed Larry in hand in hand and she couldn't remember ever being on a better date than this one.\n\n \n\nChapter 23\n\nAlex felt lighter than she had in years and she could count the reason for that on one finger. Quinn Collins.\n\nVisiting Coney Island again, and retracing steps she had taken with her mom so many times, didn't feel as emotionally taxing as she would have predicted. In fact, talking to Quinn about her mom was probably the first time she didn't feel like her heart was being torn out at the same time.\n\nTalking about it actually felt good with Quinn and she couldn't deny that her feelings had grown in the course of the evening with all the intimate moments they had shared.\n\nCourtney had urged Alex to let Quinn see more of her. And the biggest influence on her life was her mom. She was glad she listened to her friend's advice.\n\nBut while Courtney may have helped with the first part of the date, calling in an incredibly last-minute favor to Larry to get access to the aquarium was all her. And as she watched Quinn's eyes light up as they entered the first room, she was beyond happy that she did. It wasn't even as hard as she thought it would be.\n\nWhen she called Larry, she thought it was a long shot, but the man came through just like he always had. They may only have access to a few of the exhibits, but she was grateful he made it happen. And she knew that she could trust Larry not to tell Rick or her father. Larry just wasn't like that.\n\n\"What exhibits can we see?\" Quinn asked Larry as they got into the main room, but she wasn't looking at him when she asked. Her focus was solely on the large tank near the right wall of the room.\n\nLarry looked over at Alex and gave her a warm smile. It was hard not to be drawn to Quinn's enthusiasm as she pointed at different fish and bounced on the balls of her feet.\n\n\"You'll go through the Conservation Hall there,\" Larry pointed to the end of the room. \"And you'll be able to see the reef room. Then you'll go through the exit there to the shark and spineless exhibits.\"\n\nQuinn spun around on the spot. \"Did you just say spineless?\"\n\n\"It's what the exbibit is called. That's where things like jelly fish and octopus are,\" Larry said as he handed Alex something. \"I've added a line to the map so you know where to go, but there will be a security guard that can show you if you get lost. Once you're done, he can help you to the exit. Now, I must get home. That husband of mine gets antsy without his dinner.\"\n\nQuinn and Alex both moved over to give Larry a hug goodbye.\n\n\"Thank you again, Larry,\" Alex said. \"I owe you one.\"\n\n\"Just lunch. I'll call you next week. Quinn, it was lovely to meet you. Good luck with your show,\" he said with a wink and left them alone in the lobby.\n\n\"I can't believe we're alone in an aquarium,\" Quinn whispered as she moved back over to the tank on the far wall.\n\nAlex knew they didn't have much time, but she also didn't want to rush Quinn. The woman looked almost like a child seeing wildlife for the first time. The blue from the tank was lightly reflecting off the glass and onto Quinn's face and Alex had to take a deep breath as she stared. Finally, Quinn turned around and gave her a shy smile.\n\n\"Sorry. I know I'm excited, but this is amazing. It's so quiet in here.\"\n\n\"Don't apologize. I love seeing you like this,\" Alex said and her stomach gave an involuntary flip at her use of the \"l word\". Even if she wasn't saying it directly to Quinn, she knew that she was starting to feel it for the woman.\n\nLuckily Quinn didn't seem to bat an eye at Alex's word choice and simply walked over to the blonde, grabbed her hand, and led her through the Conservation Hall.\n\nAs they made their way into the reef room, Quinn dropped Alex's hand in lieu of running to the closest glass window and peering in.\n\n\"Alex, come look at how beautiful they are,\" she said excitedly.\n\n\"What kind of fish do you have in LA?\" Alex asked as she joined Quinn at the tank.\n\nShe tried to ignore the tightening of her stomach at the sudden reminder that Quinn wasn't based in New York and would eventually be leaving.\n\n\"They're all angel fish. I had another small species in there, but there was a rumble and it wasn't pretty.\"\n\n\"A fish rumble? Did they have to agree on weapons?\"\n\n\"I don't think the Ninja Turtles made it all that fair to be honest. They came out of it unscathed.\"\n\n\"That's brutal,\" Alex said in a serious tone as they continued to look at the fish. \"Do you have a favorite fish?\"\n\n\"I love the ones with bright colors. Mandarin fish are really beautiful so maybe those. But I guess I just love them all. I love the quiet way they glide through the water. So quiet and regal and so sure of their place in the ocean. There are tens of thousands of different species, but they co-exist in this ecosystem so much more seamlessly than humans do. The vastness of the ocean has always scared and fascinated me.\"\n\nAlex was no longer looking at the fish. Her eyes were trained on Quinn's perfect profile as she spoke. Alex loved Quinn's silly side, which seemed to come out more often than not, but she also craved these moments when the woman was soft and introspective. It made Alex want to crawl under some covers with Quinn and just listen to her talk.\n\n\"Did you spend a lot of time by the ocean as a kid?\" Alex asked, just wanting to hear Quinn talk more.\n\n\"A lot of time. My parents are really into boating. We would spend childhood vacations boating through the San Juan Islands. My sister and I would try to find as many different kinds of sea life that we could and we had this shared diary that we would journal our discoveries from. I think maybe my love for fish comes from that time. Before modeling, when it was just Claire and me against the world, also known as my parents.\"\n\n\"It must have been nice to have a sister you're so close to growing up. I was always envious of people with siblings.\"\n\n\"It was,\" Quinn said softly, looking at a particularly colorful fish swimming in front of them. \"I wouldn't have survived my parents and their extremely high expectations without Claire.\"\n\n\"And does she share your same love for fish?\" Alex asked.\n\n\"No. In fact, when I was younger, I asked her to feed my fish when I was away for a week at camp. And when I got home, two of them had died. She only fed them once that whole week.\"\n\n\"Your sister killed your fish? Suddenly siblings don't sound as great.\"\n\n\"That was one of her only transgressions,\" Quinn said back with a small laugh.\n\n\"And how do you feel about sharks?\"\n\n\"Let's go see them and find out,\" Quinn replied as she slipped her arm through Alex's and led them out the exit that would take them to the exhibit in the building next door.\n\nThe temperature had dropped significantly since they entered the museum and Alex used it as an excuse to pull Quinn in closer to her.\n\nEven Alex had to admit that the coral reef tunnel in this part of the aquarium was pretty cool to see with no people around rushing you. Quinn simply walked back and forth from one end of the tunnel to the other with her head pointed up at the ceiling so she could see everything.\n\n\"Did you have any pets growing up?\" Quinn asked with her eyes still looking up. \"Somehow that doesn't seem like the thing your dad would allow.\"\n\n\"And you're right,\" Alex said as she leaned against a wall and watched Quinn skip down the tunnel. \"No pets. My house was a bit like a museum. One that didn't go with dog hair on the furniture.\"\n\n\"That sounds stuffy,\" Quinn said as she finally stopped skipping and came over to lean against the wall with Alex. \"And lonely. Not just because of the lack of dog, but also what you've told me in the past.\"\n\n\"It was at times. My friends at the private schools I got sent to didn't really understand why I preferred getting in costume and pretending to be Hamlet over talking about boys. I guess I never really felt like I connected with anyone until I met Courtney. It probably helped that she did not want to talk about boys.\"\n\n\"I understand that kind of isolation. I felt very similar before I started modeling and met some more like-minded people. And gay ones,\" Quinn added with a small laugh. \"Mikey was my Courtney.\"\n\n\"You two are really close,\" Alex said but it wasn't a question. She had seen the easy comfort the two seemed to share.\n\n\"We are. He's my best friend. And the person I tell everything to, outside of Claire.\"\n\nQuinn's brow furrowed suddenly and she lost the gleeful expression that had been a constant there since they had entered the aquarium.\n\n\"Are you ok?\" Alex asked.\n\nQuinn opened her mouth to say something, only to close it again. After a beat, she finally spoke.\n\n\"I told Mikey about us. Actually, he guessed it. But I feel like you should know.\" She looked fearful when she said it and Alex felt an instant rush of guilt at seeing the expression on the other woman's face.\n\nShe had been the one to set so many boundaries so she could understand why Quinn was scared of crossing them. But she also didn't want Quinn to think she was ashamed of their relationship, or connection, or whatever it was.\n\n\"That's fine, Quinn. I don't want you to have to lie to anyone you love. I wouldn't ask that of you. Not now. We just need to be careful at the theater.\"\n\n\"We can trust Mikey,\" Quinn said, but the worried expression remained on her face.\n\nAlex pushed her fingers lightly into Quinn's brow so she could smooth out the worried lines.\n\n\"I know. Thank you for telling me. Now, are you ready for whatever this spineless exhibit is?\"\n\n\"That's the one I've been most excited to see,\" Quinn said quietly as she looked at Alex. Her brow was no longer furrowed, but Alex could tell her mood had shifted slightly.\n\nThe spineless exhibit was close to the sharks and they didn't have to be outside for long. As they entered the exhibit, Quinn put her arm back into Alex's and led them to a bench by one of the tanks.\n\nAlex could tell something was on the other woman's mind but she didn't want to push Quinn to talk so they both sat in silence, looking around at the room full of tanks for a handful of minutes.\n\n\"The other night you mentioned a scandal of mine from LA,\" Quinn said in a low voice, but the room was so quiet without people, Alex had no trouble hearing her.\n\n\"Quinn, I am so sorry for saying that. But just so you know, I don't actually know anything about what happened and you don't need to tell me until you're ready. I should never had said that in the first place.\"\n\nQuinn looked over at Alex and took her hand. \"Maybe you shouldn't have said it how you said it. But you weren't wrong. I did have a situation in LA. Mikey was the first to know about that too. And he was also the one that helped clean up my mess. I guess I'm just thinking about it now because I want you to trust him.\"\n\n\"Quinn,\" Alex said, sliding closer to her on the bench. \"I trust you, so I trust him. And I hope that soon, the theater situation won't even matter.\"\n\n\"I want to tell you about Jenna,\" Quinn said softly.\n\n\"Only if you want to,\" Alex said as she lifted their joined hands and placed a small kiss on Quinn's. \"And it doesn't have to be tonight among jelly fish.\"\n\nQuinn gave a small laugh at that. \"I think the jelly fish might actually help. But it's ok, Alex. I'm over her and what happened. I just feel like you should know since it comes out eventually with a simple Google search about me. Which by the way, I can't believe you haven't done yet.\"\n\n\"I'm old fashioned,\" Alex shrugged with a smile.\n\n\"You're a classic,\" Quinn said back with her own smile before turning to look at the tank again.\n\n\"Jenna is pretty connected to the fashion industry. She started out as a model when she was younger and had a lot of ties to brands and designers. She ended up doing a collaboration with a designer and I was in his show at an LA Fashion Week a few years ago.\"\n\n\"And that's where you met?\"\n\nAlex didn't want to ask too many questions since Quinn seemed determined to tell Alex this story. And she really didn't know much outside of who Jenna Matthews was, which wasn't saying much since most people knew who Jenna Matthews was.\n\n\"Yep. We met at a party after the show. I was fairly established in the industry by then and she approached me like she knew who I was. And she was pretty aggressive in her intention towards me. At first, I resisted. I didn't even go home with her that night when she asked. As far as I knew, she was married. But she got my number from a friend that night and just didn't let up.\n\n\"That doesn't sound very attractive,\" Alex chimed in.\n\n\"I guess with most people it wouldn't be. But Jenna wasn't really like anyone I had ever met. And I guess it felt good to get the attention from someone like that. You know, someone everyone fawned over. Does that sound terrible?\"\n\n\"No, it doesn't to me,\" Alex replied.\n\n\"We hung out a few times, but nothing romantic happened. I wasn't interested in falling for a married woman. Once she convinced me it was over with him, then I was just scared about being a rebound. Turns out both fears were valid.\"\n\n\"So, what made you go for it?\"\n\n\"Jenna. She was charming and beautiful and incredibly persuasive. And we had a chemistry I couldn't deny. One day I was over at her house and there was an envelope on the counter. She told me it was her divorce papers.\"\n\n\"It wasn't?\"\n\n\"I actually don't know. I assume now that it was a script or something. All I know is that they never officially got a divorce, though I know they were separated for a time while we were together since I spent almost every night at her place.\"\n\nQuinn stopped talking for a moment as something large that Alex couldn't identify, but looked like some sort of jelly fish, floated slowly by them in the tank up ahead.\n\n\"Slowly our dynamic changed,\" Quinn continued. \"We were together, but we couldn't go anywhere together. She said she would eventually come out, but I think part of me knew she never would. She was hyper concerned about her image. And after months of that, you'd think I'd be the one to pull away, but I had gotten in so deep and I was so in love with her that I just clung on harder. She may have been the one to pursue me, but slowly, I became the one texting her and asking her where she'd been all night.\"",
        "\"And she was with him?\" Alex asked, already knowing where the story was going.\n\n\"Yes. But I guess sneaking off to his house wasn't enough to get him back. One night while we were at a private party, we were photographed kissing and the photos were leaked to the media. It was the next day that Max came back crawling for her and she left me in a heap of media attention. Turns out she was the one to leak the photos in the first place.\"\n\n\"I'm so sorry, Quinn. You deserved better than to be treated like that,\" Alex said quietly when Quinn finished talking.\n\nQuinn didn't seem sad though. She told the story almost as if she was reading it about someone else's life. Her voice was the most detached Alex had ever heard it.\n\n\"She sounds like an even bigger asshole than I am,\" Alex added with a small smile on her face.\n\nQuinn laughed and Alex loved being able to make her smile after she had just revealed such an emotional story.\n\n\"She would never have done something like this,\" Quinn said, waving her hand around the room. \"Or taken me to get a simple hot dog because that's what she did with her mom.\" Quinn put her fingers under Alex's chin so she could lift her face to her own. \"You're not an asshole, Alex. Actually, you're pretty sweet.\"\n\nAlex took Quinn's hands from her chin and brought them to her lips. She lightly kissed the end of two of her fingers.\n\n\"Don't tell anyone that. It will ruin the reputation I've taken years to build,\" Alex replied against Quinn's fingers.\n\n\"You should let people see the real you.\"\n\nAlex could only take so much vulnerability in one night, so she attempted to move the conversation back to Quinn. She was also invested in the story by now and wanted to know more about Quinn's past.\n\n\"What happened after she went back to him?\"\n\nQuinn narrowed her eyes at Alex briefly, clearly aware the blonde was deflecting. But she answered the question instead of push Alex for more.\n\n\"There was a messy media storm for a couple of months. She ended up doing an interview where she was asked about me and the photos. She said she's never been queer and only dabbled because she was so heartbroken. I was basically painted as a lesbian predator.\"\n\n\"Did you try to put the truth out there?\"\n\nAlex could see Quinn's jaw clench and she knew she had hit some kind of nerve.\n\n\"No. My team thought it would just make me look like 'the other woman'. Some disgruntled model trying to ride the coattails of Hollywood's elite. I quit the two agencies I was with. I felt like people were whispering everywhere I went, even if they weren't. After a while of watching me mope around my apartment and drink myself to sleep, Mikey called Claire and her husband, Will. And they had the idea that I go spend some time with them in Washington. It was during that time that I wrote the play.\"\n\n\"Have you heard from her again?\"\n\n\"Only to tell me not that she'd stick her lawyers on me if I included anything about our past in my show. But that was through her team and they reached out to Mikey. So only indirectly.\"\n\n\"Thank you for telling me,\" Alex said when Quinn was quiet again and looking at the tank.\n\nQuinn suddenly turned her head to Alex and smiled. \"I think there's a first date rule that you're not supposed to talk about exes. I really broke that one.\"\n\nAlex laughed and put her arm around the back of the bench so she could pull Quinn in closer to her.\n\n\"I'm glad you told me. Besides, we slept together before our first date, so I think we already broke a rule. And who made these rules?\"\n\nOut of the corner of her eye, Alex could see a security guard come back into the room and she knew their time was almost up in the aquarium.\n\n\"I think we need to go,\" Alex said, nodding to the guard in the corner. \"But I can help you break the rules and tell you my own story. If you want to come back to my place with me. We can just talk.\"\n\nQuinn glanced over at the security guard before moving her body in to Alex's. Alex shifted so that her own body was blocking them from the guard's view.\n\n\"You don't have to tell me everything in one night, Alex. This has been perfect. And frankly, I don't want to talk anymore.\"\n\nAlex could almost feel the small space between their bodies heat up. Quinn's lips were close enough to kiss, but she didn't want to embarrass Larry and give the security guard a show, so she resisted moving in.\n\n\"Take me home,\" Quinn whispered.\n\n\"Let's go, sweetheart,\" Alex said as she pulled Quinn up and led her out of the aquarium.\n\nChapter 24\n\nEvery minute that Quinn spent with Alex, she was more and more impressed by the other woman's control. As she sat on the blonde's couch, sipping her drink, she couldn't understand how Alex was sitting back looking so calm. Quinn knew she was an overly excitable person, but after the night they just shared, that was to be expected.\n\nAlex had unbuttoned her shirt slightly and Quinn could see the skin near her throat. As Alex sat back with her bourbon, looking so sexy and confident, Quinn had the urge to lean over and kiss the exposed skin. Alex had put her hair up in a messy bun when they had gotten back and it gave Quinn the opportunity to appreciate how delicate the lines of her face were.\n\nQuinn couldn't even recall at what point in the night her pussy started throbbing so hard against her pants. It was somewhere in between leaving the spineless exhibit and getting back into Alex's apartment. Mix that sensation with how full her heart felt from the date itself, and she was ready to show Alex just how much she wanted her.\n\n\"You're staring,\" Alex finally said and Quinn realized her drink was held in midair and she was definitely staring at the blonde.\n\n\"I've wanted to rip your clothes off since the aquarium, and yet, here you are sitting so calmly, like you don't have a hot ex-model to seduce.\"\n\n\"Seduce?\" Alex said with a quirked eyebrow. \"What do you think the aquarium was?\"\n\nQuinn laughed and put her drink on the coffee table in front of them. She then moved closer to Alex so she could lift the bourbon from the blonde's hand and set it next to her own.\n\n\"In that case, we don't need to dance around things, do we?\" Quinn asked as she moved to straddle Alex's lap.\n\n\"Definitely not,\" Alex said and brought both of her hands up so she could grip the thighs that were now straddling her.\n\nQuinn bent her head so she could take Alex's mouth in the kiss she had been wanting to place there since the woman surprised her with the aquarium visit.\n\nAnd she put everything she could into the kiss. Her hands moved so they were behind Alex's neck as she deepened it, trying to explore all of the woman beneath her. She switched between sliding her tongue against Alex's to swiping her tongue against the blonde's lips. She allowed her lips to press into Alex's with no tongue, before nibbling on those same lips. When she heard a sexy, low moan emit from the other woman, she repeated the act.\n\nAs they kissed, she tried to show Alex what the night meant to her and just how sexy she found the other woman's vulnerability. And in the process, she herself forgot about Jenna. She forgot about the complications with Alex that she still didn't fully understand. She forgot about the fact that she was only in New York until her show was done. Right now, it was just Alex. Alex's lips and body and their shared hunger.\n\nIn the back of her mind, Quinn was also aware that Alex was allowing her to guide the kiss. She kept her hands firmly on Quinn's thighs, tightening her grip with each minute that passed, but she didn't make a move to take things further. She simply allowed Quinn the exploration her mouth was so obviously craving.\n\nQuinn finally lifted her head from Alex's\u2014 partly because she wanted to get the woman's shirt off, and partly because she needed to breath at some point. But she didn't pause to catch her breath and immediately moved her hands so she could start to unbutton Alex's shirt.\n\nBut in her heightened state of arousal, her fingers wouldn't cooperate and she swore as she fumbled with the buttons.\n\n\"Let me, sweetheart,\" Alex said in a low voice.\n\nQuinn sat back in Alex's lap as she watched the woman slowly take off the shirt and throw it onto the couch next to them.\n\n\"You seem a little too excited for buttons, and I think clasps may be worse, so let me do this too,\" Alex said with a cocky smile on her face as she slid her arms behind her back to release her tits from her bra.\n\nThe cocky look was erased the moment Quinn lifted her own shirt off her body and quickly added her bra to the pile of clothes next to them. Alex's blue eyes seemed to cloud over in a second as she was faced with Quinn's bare tits in her face.\n\nQuinn could see Alex's darkening eyes roam her tits and she knew what the woman wanted. But Quinn's own need to touch Alex was too strong to let that happen yet. She slid her body so she was on the edge of Alex's lap and bent her head so she could take Alex's left breast into her mouth. With her hand, she put Alex's right nipple in between her two fingers and pulled lightly.\n\nAlex laid her head back onto the couch as she let out a long sigh. She brought one hand up and laced her fingers into Quinn's hair as Quinn moved from her left tit over to her right. She mirrored her movements from before, sucking on one tit and pulling the other tit's nipple.\n\n\"Fuck, sweetheart. Your mouth feels so good,\" Alex breathed out.\n\nQuinn looked up at Alex's flushed face when she heard her words and slowly moved her body so she was between Alex's legs.\n\n\"It can feel even better on your pussy. May I please taste you?\" she asked, looking up into Alex's eyes.\n\nQuinn could tell that her use of the word please caused some sort of reaction in Alex. Her eyes immediately darkened and her lips parted slightly. The chest that was already rising and falling in rapid breaths increased slightly.\n\nAlex didn't respond, but gave a slow, small nod and Quinn took that as the consent she needed to move her hands up and undo Alex's pants.\n\nAlex helped her take them off and didn't wait for Quinn to remove her panties, quickly discarding them herself. Even with Quinn driving things forward, she knew that Alex was the one who was ultimately still in control. Her submissive position was just one more reminder of that.\n\nDespite the fast pace Quinn's libido was setting, she had to pause as she looked up at Alex's naked body. Obviously, this wasn't the first time she had seen her, but as she sat back on her heels, looking up at Alex leaning back into the pillows with such arousal painted on her face, she couldn't believe how lucky she was to witness such perfection.\n\n\"You are so sexy, babe. I can't tell you how much I want you right now. Let me show you,\" Quinn whispered up to Alex as she slowly moved her lips down to the blonde's thigh so she could place a soft kiss there.\n\nAs she repeated the action of kissing the other thigh, she could smell Alex's arousal emanating from her pussy and knew she wouldn't be able to tease this out very long.\n\nAs if she could hear Quinn's thoughts, Alex pushed her body forward so she was sitting closer to the edge of the couch and put her hand on the back of Quinn's head.\n\n\"No more teasing,\" Alex said in a dark voice that caused a shiver to roll down Quinn's spine.\n\nAlex gently put pressure on the back of Quinn's head to guide her mouth to her waiting pussy. The feel of Alex's demanding hand on the back of her head, caused a gush to erupt in Quinn's own panties. But she could do little to relieve the throb as her mind began to focus itself on the wet folds in front of her.\n\nAt the first taste of Alex, Quinn let out a deep moan against Alex's pussy lips and she could feel the blonde lightly lift her hips off the couch to gain more traction. Quinn slid her hands under Alex's ass so she had a better anchor to lick and suck as she wished.\n\nKnowing that Alex didn't want to be teased, Quinn didn't waste any time bringing her tongue up the length of Alex's pussy so she could roll it in circles over the hardening clit. As she felt it harden more under her light strokes, she brought her tongue down the length again so she could get more wetness on the tip.\n\nShe repeated the movements over and over\u2014 bringing her tongue all the way up Alex and then staying on her clit so she could flick it back and forth before moving back down for more lubrication.\n\n\"Fuck, yes, fuck,\" Alex panted above her. \"Add a finger, sweetheart,\" she husked out as she strengthened her grip on the back of Quinn's head and pushed her further into her own pussy.\n\nQuinn let out another moan, but this time it sounded like more of a growl. Alex was so wet that she had to lick in fast stokes to make sure she could lap up all the juices and still have enough friction to flick her hard clit.\n\nShe knew she didn't need to moisten her finger so she simply slid one into Alex's opening and pushed in deep. Alex let out her own loud moan at the feeling of Quinn finally entering her.\n\n\"Add another,\" Alex cried out as she lifted her hips again to get Quinn's finger in deeper.\n\nQuinn moved her fingers out for only a moment before driving two fingers back inside of Alex. She brought her tongue back up to Alex's clit and started an unrelenting flick against it.\n\n\"I'm going to come. Don't stop,\" Alex breathed out as she pumped her hips up and down.\n\nQuinn was having trouble keeping her tongue on Alex's clit as the woman writhed above her, but she didn't care because she could tell Alex was close. She licked every spot she could as she pumped her fingers in and out as deep as she could get them.\n\nShe felt Alex's orgasm hit before she heard the woman moan out loudly above her. Quinn could feel Alex's pussy clench tightly around her fingers as she called out that she was coming. She wanted to see Alex's face as she came but didn't dare let up her thrusts and licks since Alex seemed like she was still climaxing.\n\nFinally, Alex moved her hand off Quinn's head so she could gently push the brunette's mouth from her pussy, indicating that she couldn't handle anymore without words.\n\nAlex tasted so good that Quinn had trouble stopping her mouth from taking more, but she also knew how sensitive her own clit was after an orgasm so she stopped and rested her head against Alex's thigh as the woman above her seemed to catch her breath.\n\n\"Take your pants off for me, sweetheart,\" Alex said and her voice sounded strangled as if she hadn't fully come down from her orgasm yet. \"I can't wait to touch you.\"\n\n\"It won't take much,\" Quinn whispered, placing a wet kiss on Alex's thigh. \"I felt like I was going to come just licking you.\"\n\n\"Which was amazing by the way,\" Alex said.\n\nQuinn took the fact that Alex couldn't seem to fully open her eyes as a good sign for how intense her orgasm just was. Quinn pushed off the couch so she could stand and moved her pants off her body. Her pussy was so sensitive by this point that her pants and underwear were becoming increasingly uncomfortable. She needed them gone.\n\n\"Stay there,\" Alex said as she pushed off the couch and came to stand next to the now naked Quinn.\n\nAlex came to stand behind Quinn and lightly dragged her hands down her bare arms before bringing each hand up to cup Quinn's tits. With her thumb, she lightly grazed each nipple as she brought her lips to the brunette's ear.\n\n\"That felt very good, sweetheart. But now I'd like to return the favor,\" she said as she flicked her tongue out to lick Quinn's earlobe.\n\nQuinn couldn't hold back the moan she felt bubbling from her throat the moment Alex's hands were on her tits.\n\n\"Mm. Yes please,\" Quinn said in a breathy voice.\n\n\"I love when you say please to me,\" Alex said, licking her earlobe again. She increased the pressure on Quinn's nipples as she nibbled on her lobe. \"Get on your knees on the couch, with your hands on the back of it.\"\n\nQuinn was now leaning back into Alex and let her head fall back onto the blonde's shoulder. She could feel how hard her nipples were under Alex's fingers and she wanted her to pull them harder.\n\n\"Now, sweetheart,\" Alex said as she gently pushed Quinn off her body and to the couch.\n\nQuinn loved the dichotomy between how gentle Alex's touch was, mixed with how commanding her voice sounded when she made demands. She moved onto the couch and she could already feel a wetness coating the inside of her legs, most of which probably pooled there when she was fucking Alex.\n\nWhen Quinn was situated on the couch, with her hands gripping the back, Alex moved so she was behind her again. She resumed their earlier position and brought both of her hands around Quinn's body so she could begin to pull on the brunette's nipples again.\n\n\"Does that feel good?\" Alex asked in the low, husky voice that Quinn was coming to associate with sex.\n\n\"Yes, babe. So good,\" Quinn cried out.\n\nShe knew she was being much louder than Alex had when she was eating her out, but she couldn't do much to quiet herself. She felt like she might combust from arousal at any moment.\n\nAlex moved her body in so her tits were pressed against Quinn's back at the same time as she brought her hand down from the woman's nipple to her pussy. She quickly swiped one finger through Quinn's immense wetness, before bringing it back up her folds and onto her clit.\n\n\"What do you want, sweetheart?\" Alex asked as she licked up the length of Quinn's neck, ending at her ear. Her fingers began a very light circle on Quinn's clit.\n\n\"Fuck me, please. I'm already so close,\" Quinn said as she let her elbows drop onto the back of the couch, no longer able to hold herself up with her hands.\n\nAlex seemed to understand Quinn's lack of body control and brought her left arm around the brunette's front so she could help hold her up. Alex moved her other hand off Quinn's clit so she could bring it around to her backside and plunge two fingers inside the woman's dripping pussy.\n\nAlex began to push her fingers in and out at a tortuously slow pace as her other fingers moved their way up Quinn's body so she could play with her nipples again.\n\nQuinn let out a low moan at the feeling of being filled by Alex, but knew it wasn't nearly enough. She needed more of the blonde above her. She pushed her body back onto Alex's fingers, not able to use her voice anymore to ask for what she needed.\n\nShe could hear Alex let out a chuckle above her, but it did nothing to temper her need for more of those talented fingers and she pushed her body back again.\n\n\"I've got you, sweetheart,\" Alex said. \"I know what you need.\"\n\nAlex removed her two fingers only for a second before entering again with three. This time she didn't take things slow and pushed into Quinn so her fingers were as deep as she could get them. As she repeated the motion over and over again, pumping in and out, she moved her fingers from Quinn's nipples down to her clit so she was fucking her from behind with her fingers, but flicking her clit from the front.\n\nShe moved her fingers in circles over Quinn's clit and Quinn could feel her orgasm climbing fast by the way her walls were clenching around Alex's fingers. She pushed down onto her elbows so she could give Alex more room to pump her fingers into her, which Alex wasted no time in doing.\n\nQuinn could hear Alex's own ragged breaths above her as she relentlessly fucked Quinn's pussy and the sound only added to her own fast approaching climax.\n\n\"Babe, I'm going to come. Harder, please,\" Quinn cried out.\n\n\"Come for me,\" Alex said, bringing her fingers out so she could pump them back in with a fourth added.\n\nQuinn heard Alex's words at the same time that she felt the additional finger enter her and she fell forward onto couch as an intense orgasm rolled through her body. Alex moved with her, not letting her fingers come out of Quinn's pussy and the brunette could feel herself clenching around Alex's hand.",
        "Alex didn't move the hand inside of Quinn but did move the one flicking her clit and brought it up so she could move the hair off Quinn's back and kiss the top of her spine. When Quinn's breathing finally stopped coming out in gasps, Alex gently removed her fingers.\n\nWith the adrenaline leaving her body, Quinn had absolutely no strength to hold herself up so she fell fully onto the couch in an ungraceful heap. Her mind was in such a fog of sensations that she almost didn't notice Alex move onto the couch so she could spoon Quinn from behind.\n\nOnce their naked bodies were pressed together again, Quinn could only sigh and push herself back while Alex brought her arms around her front. The last thing Quinn remembered before drifting off was the feel of Alex's lips on the back of her neck.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nThere was no way Alex could sleep after the date and night she just had, but she also didn't want to disturb Quinn, so after they fell onto the couch, she let the woman sleep for a bit.\n\nBut once the arm she had under Quinn felt like it might fall off from being pinned there, she figured she would gently wake the actress up so they could get into her actual bed. Alex kissed the back of Quinn's head and patted her shoulder lightly.\n\n\"Wakey, wakey, Nemo,\" she said in a soft voice.\n\nWhen Quinn didn't budge, she shook her a little harder and let out a laugh at the sound of Quinn's childish groan.\n\n\"Please don't call me mommy and ask for five more minutes,\" Alex joked.\n\nQuinn turned around so she was facing Alex, but the position wasn't comfortable with the small amount of space they had. But that didn't matter when Alex saw the adorable, sleepy look on Quinn's face.\n\n\"I fell asleep,\" Quinn said, yawning widely.\n\n\"I did notice that,\" Alex said with a warm smile. \"Shall we get you to bed?\"\n\nQuinn nodded and moved off the couch. She held her hand out to Alex to help her up.\n\n\"Can I borrow some sweats or something? And a toothbrush?\" Quinn asked as they went down the hallway to Alex's room and adjoining bathroom.\n\n\"There's some sleep wear, a toothbrush, and a towel ready for you in the bathroom,\" Alex replied as she moved over to her bed.\n\nQuinn turned around once they were in Alex's room and looked at the blonde with a quirked eyebrow.\n\n\"And how did you know I'd be spending the night?\"\n\n\"I don't know. Maybe it's my insane sexual magnetism, as you put it,\" Alex said with a wink.\n\n\"I'd say you're cocky, but the fact that you have things ready for me is just another example of how sweet you are. I'm telling everyone,\" Quinn said as she turned around and walked into the bathroom.\n\nAlex could only roll her eyes at the naked, retreating form.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nAlex pushed herself against her pillows as she waited for Quinn to finish up in the bathroom and get into bed with her. She had used her guest bathroom so Quinn had some privacy.\n\nThe night could not have gone any better than she could have hoped and she couldn't wait to call Courtney the next day to tell her.\n\nShe felt giddy and younger than she had in years. She may have seen something special in Quinn the first time she laid eyes on her, but she could have never predicted a night like this. She couldn't have known how much Quinn would mean to her so quickly.\n\nAnd while it still scared her, she was determined not to drive Quinn away because of that. Quinn was so different than any woman Alex had ever dated and she craved an intimacy with the woman she had never allowed in recent years. Talking about her mom tonight and hearing about Quinn's past didn't feel heavy. It just felt like one more step to falling for the brunette.\n\n\"I've officially stolen the leggings and shirt you gave me last time to wear home. They're too comfy to give back. And I may steal these too,\" Quinn said as she came back into the room from the bathroom.\n\nShe was wearing a pair of Alex's shorts and a large, soft t-shirt from NYU. Alex had never been one to care that much about a woman in her clothes, but Quinn was quickly changing that.\n\n\"Next time we should go to your apartment. I didn't get to see much of it earlier,\" Alex said as she leaned back against her headboard and watched Quinn crawl into bed.\n\n\"Is that your way of asking me for a second date? Inviting yourself into my bed? Smooth.\"\n\n\"Maybe it's not about you at all. It's just my way of getting to sleep on Michelangelo's face.\"\n\n\"Understandable,\" Quinn said with a smile before her brow furrowed suddenly. \"Wait, how do you know I have Ninja Turtle pillows?\"\n\nAlex realized too late what she just admitted to Quinn and no amount of improvisation training in her acting days could have gotten her an adequate response fast enough. Quinn's smile broke out as she watched Alex trying to think of something to say.\n\n\"Is someone following me on Twitter?\" Quinn laughed as she jumped on top of Alex so she was straddling her and poking her in the stomach.\n\nAlex laughed as she attempted to grab Quinn's poking and tickling hands. She was finally able to grab both hands and flip them over so she was on top of Quinn and pushing her body into the one under her.\n\n\"No, I'm not. But Courtney is. And you're one to talk. You stalked me on YouTube before we met.\"\n\n\"Guilty. Mad about it?\" Quinn asked, looking up at Alex's face with an innocent expression.\n\n\"Not at all, sweetheart,\" Alex said as she leaned down and gave Quinn a slow, lazy kiss. \"Besides, I've never had a stalker.\"\n\n\"I take back every nice thing I said tonight. You are a monkey's ass.\"\n\n\"I knew I was going to regret telling you that,\" Alex said as she moved Quinn's hands so they were pinned above her head and Alex was pushing into them.\n\n\"If I stop calling you that, will you continue whatever it is you're doing right now?\" Quinn breathed out as Alex moved her lips down to kiss up Quinn's neck.\n\n\"Honestly, you could keep calling me that and it still wouldn't deter me. I want you,\" Alex said as she leaned in for Quinn's lips for a quick, but intimate kiss. \"I can't help how much I want you,\" she said against her lips before taking them again.\n\n\"Then don't stop,\" Quinn panted out as she pushed her body up into Alex's. \"Please don't stop.\"\n\n\"Never,\" Alex said back, taking Quinn's lips with her mouth so neither of them could speak\u2014 they didn't need to anymore.\n\nAlex had a feeling this was going to be a long night. And she had no complaints about that.\n\n \n"
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "drama",
        "girl on girl",
        "lesbian",
        "lesbian drama",
        "lesbian novella",
        "lgbt",
        "new york",
        "romance",
        "slow burn",
        "theater"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/new-horizons-ch-19-24"
}