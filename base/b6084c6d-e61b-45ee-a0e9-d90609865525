{
    "title": "Lucky Man Ch. 11",
    "pages": [
        "Kelly\n\nMolly ushered Kelly over to the bar and began to show her how to mix the drinks that everyone ordered, though none were very hard to make.\n\n\"I think we can change clothes into something a little more revealing in about thirty minutes,\" Molly said. \"Then we can see if we can get a rise out of these fellas!\"\n\nKelly chuckled at the obvious joke but in truth the prospect excited her. She picked up three drinks and walked over to the table. Drake was sitting next to Gus. On the older man's left was Jarod, Duncan followed him, and he was followed by Freddie and finally Derrek. As she came around the corner and stopped at Freddie, he smiled at her and nodded his thanks. Stopping at her husband, she slid the drink to him as he ran his hand over her supple buttocks. Winking, she moved past him and stopped at Jarod, who was lost in conversation with Gus about something. Setting his drink down, she turned and started to walk back to the bar when she felt a hand on the small of her back. Spinning back around, she saw him smiling at her. \n\n\"Thank you,\" he said, and turned back to the table. She smiled sweetly at him in response before heading back to the bar as Molly finished serving Gus, Derrek, and Drake and headed back. \n\n\"Anyone want a cigar?\" Molly asked, glancing back over. Gus, Drake and Duncan all raised their hands for a moment and she pointed to a humidor at the far end of the bar. Kelly reached over and retrieved the cigars, cut the ends and handed them to her friend.\n\n\"Watch this,\" Molly said, winking. Turning, she walked over to the table and stopped at Duncan's seat. She smiled and popped one of the cigars between her teeth and clicked on the lighter, spinning it and lighting it as if she'd done it a thousand times. Puffs of smoke wafted from her lips as she ensured it was lit and then she passed it to him.\n\nHe chuckled at her and took it as she began to do the same to Drake's. He paid her back with a quick kiss and a slap on the rump before she moved past him and stopped at Gus's chair. \n\n\"Mind if I light this for you?\" she asked.\n\nGus smiled and nodded. \"Only if I get to swat you on the rear like he did!\" He laughed loudly at his own joke, and Kelly couldn't help but find it amusing at how funny he thought it was.\n\nMolly was feeling very playful however, and as she finished lighting it, she turned and presented her rump to the old man, causing him to laugh even louder. He didn't swat her though, and she pouted.\n\n\"Well, that's no fair. He didn't give me my payment,\" she said, pouting at Kelly. \n\n\"Well, shit I'll pay for him!\" Freddie said as she passed his chair, reaching out and slapping her hard on the rump. A loud thwack echoed through the small room and for a moment everyone was shocked, staring openmouthed.\n\n\"Ouch!\" Molly said, turning and laughing. She swatted at his head playfully for a second.\n\n\"Dude, go easy on my wife's ass,\" Drake said, smiling widely. This caused more uproarious laughter, and Kelly began to feel more at ease.\n\nThe girls went to stand behind the guys as they finally settled in and started playing. They played a few hands and kept the betting light early on as Kelly moved around to refill drinks as needed. At one point, she happened to be standing behind Derrek when he drew a lucky hand and took the pot. She glanced over and saw that Jarod needed another drink and moved to go get it for him.\n\nDerrek immediately protested, however, saying, \"Hey now! You're stealing my good luck charm!\"\n\nJarod, a very nice and soft spoken man, shrugged. \"Come on now man, you've gotta learn to share the good luck.\"\n\nKelly blushed and leaned over to pick up his glass. She knew that her top was loose enough for the people opposite the table to see down to her breasts, possibly even her nipples and rings.\n\nShe looked up and saw Drake and his brother both looking.\n\n\"Busted,\" she said, pointing a finger and grinning, drawing a round of laughter from the group.\n\n\"Dirty old men,\" she admonished, waggling a finger.\n\nMolly ushered her over and quietly indicated that she'd like to go change. Kelly smiled and nodded.\n\n\"Alright boys, behave yourselves. Kelly and I are going to go slip into something a little less comfortable.\"\n\nThe guys laughed and cheered for a second. As Molly left the room, Kelly heard Freddie ask Drake, \"Dude, what's going on with them?\"\n\nAs she closed the door behind her, she heard Drake's voice. \"They get like that, friendly competition between girls. Molly will probably try and outdo Kelly next. We just get to be the beneficiaries.\"\n\nMolly had stripped down out of her dress and had selected a modest negligee that didn't reveal too much. It was black, and had a silk wrap that served to hide more of her. It showed plenty of cleavage though, and she knew it too. As she slipped it on, she turned and cupped her breasts together with her arms.\n\n\"What do you think?\" she asked.\n\n\"I think you look like you're ready to get down and dirty,\" Kelly said, eyeing her amble bosom.\n\nKelly reached for her next outfit. It was an intricate lace number that didn't reveal much more than her dress, but had several bare spots scattered across where Kelly's pale skin was showing through. It was light blue with boy shorts for panties and made Kelly feel very, very sexy.\n\nMolly finished helping her get dressed and the ladies did one final look before exiting. They walked through the house, their heels clopping loudly, until they reached the poker room and entered again. Thick smoke hung in the air with its alluring cigar aroma. Kelly had always thought it had a unique, almost interesting smell. Duncan rarely partook, but he occasionally smoked when he drank.\n\nShe smiled as Molly entered first to catcalls and wolf whistles. She hesitated for a second but then Molly turned and pulled her in. More cheering ensued and the men around the table smiled widely at them.\n\nThey made another round and refilled drinks before coming back to stand behind a random guy. Kelly chose Duncan, just to be close to him for a bit. He slid back and allowed her to sit on his knee. She could feel a palpable air of excitement in the room. The scantily clad ladies had a marked effect on everyone's mood. Kelly could sense six sets of eyes alternating between her and Molly. In truth, they seemed to stare mostly at Molly's breasts and her monster cleavage.\n\n\"Why do you have so many Kings, Baby?\" she asked, drawing a chorus of groans and chuckles. \"Oh I'm just kidding,\" she said. \"I'm not that naive about the game!\"\n\nShe could feel her husband's warmth seeping into her. She turned her head and kissed him deeply. Molly seemed okay to follow her lead and sat down in Drake's lap.\n\n\"Hey now, you can't give your husband the good luck charm!\" Freddie called, looking next to him at Kelly's alluring form in Duncan's lap. \"I thought we were sharing!\" His jovial face and wide smile made her laugh.\n\n\"So you want me to come and stand near you for good luck?\" she asked.\n\n\"I'll take what I can get,\" he said. \"I'm a single man, and I'm a short fucker too. I can't get laid to save my life. Just seeing a couple of foxes like you is enough to tide me over for a month!\"\n\n\"Aww,\" Kelly said. \"Honey, he's been neglected.\"\n\nDuncan chuckled. \"Sounds like it. You might have to go and sit in his lap for a bit. You can see if you can cheer him up.\"\n\n\"Well that sure would cheer me the hell up,\" Gus cut in. \"You ladies might give me a damn heart attack!\"\n\nKelly and Molly both laughed.\n\n\"How fair would it be for me to go be Freddie's good luck charm and not the other guys?\" Kelly asked Duncan, looking at him demurely.\n\n\"Probably not fair at all,\" he admitted. \"You might have to just attend to everyone.\"\n\n\"Well there's only one of me to go around,\" Kelly said. \"I'll bet that Molly is just as good a luck charm as I am.\"\n\n\"Probably true,\" Freddie remarked. \"But that's still only six to two.\"\n\n\"He's got a point,\" Derrek agreed. \"I think we need to work out a system to share these good luck charms.\"\n\n\"Hrm,\" Drake said, scratching his chin. \"We could always pay them for their time,\" he said.\n\n\"Great, now my husband is calling us prostitutes,\" Molly said, looking at Kelly.\n\n\"Thanks Drake,\" Kelly deadpanned. \n\nHe grinned widely. \"Well, y'all started this. I was just trying to be fair.\"\n\n\"How about every few hands, we move to a different chair,\" Molly said. \"That way, everyone has a chance to grope us,\" she said, adding, \"I meant totally \"have some good luck.\" Freudian slip I guess.\"\n\nKelly snickered at her.\n\n\"There, it's settled,\" Drake said. \"Let's get back to playing some poker!\"\n\nEveryone laughed at his demeanor. He was always more serious about playing than anyone else, but in truth he looked pretty relaxed.\n\nMolly stood after a few minutes and turned. \"Does the groping/luck thing include your brother?\" she asked. \"Does he get some good luck and/or groping?\"\n\nDrake laughed and shrugged. \"That's up to you two. Y'all are the ones it's going to be weird for.\"\n\nDerrek grinned and shrugged. \"I think I'll be able to manage, especially if I get a closer look at those cannons,\" he remarked.\n\nMolly looked at Kelly and rolled her eyes. \"Well what do you expect?\" Kelly asked, grinning. \"You're the one that picked out that outfit.\"\n\n\"True,\" Molly said, giggling. She slapped him playfully on the chest and slipped down into his lap.\n\nKelly leaned over and quietly moved her lips up to Duncan's ear. \"No regrets?\" she whispered.\n\nHe squeezed her hip gently and kissed her lips softly. \"Not a one,\" he answered. \"Have fun.\"\n\nShe smiled and stood then, looking first at Jarod and then Freddie. \"Decisions, decisions,\" she said. \"See, if I follow protocol, Molly is going counter-clockwise which means I should go counter-clockwise, and that puts Jarod next. But Freddie was the one that was whining about getting some good luck.\"\n\n\"Fuck protocol,\" Freddie said. \"Me next!\"\n\nKelly giggled but shook her head. \"You'll just have to wait your turn. We don't want to have a traffic jam.\" She turned then and quickly checked to make sure no one needed a refill before she slid towards Jarod. \"Would you like for me to sit in your lap?\" she asked.\n\n\"Is that even a question?\" he asked, smiling. \n\nGrinning, she slowly moved between his legs and lowered herself down. Memories of the party here before when Ed and Mark had taken liberties with her flashed in her mind. She vividly remembered how turned on she'd gotten at the mere suggestion of misbehaving around her husband.\n\nShe felt Jarod's warmth immediately as she sat down on his leg. His long arms came around her then, one grasping his cards, the other his glass of whiskey. \n\n\"Do you like my outfit?\" she asked, glancing up at his eyes as she turned slightly.\n\n\"You look pretty spectacular,\" he replied, smiling. \"I can totally see down your dress,\" he said, chuckling.\n\nShe snickered quietly and leaned back to whisper in his ear. \"That's kind of the idea. Do you like what you see?\"\n\nHe smiled again and nodded, turning to whisper in her ear. \"I can't see much, but I've got a vivid imagination, and right now, you're the star attraction.\"\n\nShe laughed easily and relaxed back into him. After a few seconds, she wriggled playfully in his lap for a moment and then turned to watch the game. He was a perfect gentleman though, and she found herself a little disappointed that he hadn't taken any liberties with her. He hadn't even touched her leg or waist, though she could tell she was having an effect on him from the bulge poking her in the butt.\n\nMolly seemed to be moving every 10 minutes or so, but she and Derrek looked to be quite comfortable for the moment. She was turned sideways so that he could get an eyeful of her spectacular breasts, sitting on one leg with her arm around his neck. He was only half paying attention to the game, and was more concerned with speaking to her and ogling her goodies.\n\nTheir conversation seemed to reach a stopping point and she stood then. \"Okay, where's my payment?\" she asked, turning and sticking her rump out. Derrek smiled, slightly embarrassed and gave her a halfhearted swat on her butt. She smirked and rolled her eyes. \"Drake, you've gotta teach him how to spank a bad girl,\" she said.\n\nShe stood and moved towards Freddie, who had his arms wide and looked up with a goofy look on his face. She laughed and covered her mouth for a second at his antics and took a seat in his lap.\n\n\"I'm guessing you want a look at my girls too?\" she asked, cupping her breasts with her hands and jiggling them a little bit.\n\n\"Well shit, if you're offering,\" he said, and slapped his face directly down into her cleavage, drawing raucous laughter as she rolled her eyes and pulled his head up.\n\n\"Listen here, you can look but you can't touch,\" she said.\n\n\"Well, you see she mentioned earlier about this being a groping/good luck thing,\" he replied, grinning widely.\n\nShe turned and looked at him briefly. \"Well shit, you're right,\" she said, and pulled his face down into her cleavage again, grinning at Kelly. More laughter followed at the two of them.\n\nKelly stood then and turned, heading towards Gus. She briefly wondered if he wanted her to sit or stand next to him, but he pulled out from the table and slapped his leg twice.\n\n\"Come on now, Red, Ole' Gus has a seat all ready for ya!\"\n\nKelly smiled at the older man and assumed her seat. She felt his warm hand cupping her butt cheek as she sat down but didn't move it. She was guessing that he was trying to get a rise out of her, by surprising her with a hand on her ass, but she wasn't playing along. He wormed his hand slowly out from under her as she smiled at him.\n\n\"You didn't have to move,\" she whispered, drawing close to his ear. He smiled and cleared his throat, seeming nervous all of the sudden. She decided not to press him.\n\nThe game played a few more rounds. Molly and Freddie seemed to be talking as much as she and Derrek had. Eventually she looked up and saw Molly indicate that she was going to go change outfits again. Kelly stood and quickly followed.\n\nThe two frisky women headed to change and came out wearing the last outfits they had selected. Kelly emerged first wearing a lacy white corset complete with garters, stockings, long lacy white gloves, and a pair of g-string panties. The diaphanous material was super thin, and her nipple rings atop her erect nipples were straining outwards against the fabric. Her areola were clearly visible through the material, and the slightest hint of her red thatch of pubic hair could be seen at the top of the minuscule panel of fabric between her legs. The men were briefly taken aback as she came around.\n\n\"Well what do you think?\" she asked. She suddenly became acutely aware of six men staring at her hungrily. She felt her pussy grow squishier.\n\n\"You look gorgeous, baby,\" Duncan said, breaking the stunned silence.\n\nDrake agreed quickly, \"Good lord Kelly, Gus might have a heart attack!\" \n\nThe chuckle from the group seemed to break the nervous atmosphere and she moved forwards toward the elder brother. Feeling delightfully naughty, she leaned over the table before she retrieved his glass to refill it and gave him a spectacular view of her pale rump. The g-string slid down the crack of her ass and pressed delectably against her pussy. She knew he could see practically everything. Hearing him groan behind her, she stood up and smiled.\n\n\"Shit, you might give me a heart attack,\" he said.\n\nMolly emerged then, and the group smiled widely at her. She was wearing a number in the same style as Kelly's, but hers was a sinful red color. The brunette came over to Duncan and presented her rump towards him. \n\n\"I need my payment if you're going to be getting a refill.\" She nodded towards his glass sitting empty on the table in front of him.\n\nDuncan chuckled in response and playfully swatted her rear. Smiling, she leaned down and kissed him on the cheek before gathering up a few of the glasses and refilling them.\n\nThe girls quickly finished refreshing drinks and stood by the table for a moment. Kelly decided to take the initiative and slid in front of Drake again. He opened his arms and legs for her to take a seat, but she slid backwards, bending forwards and sliding her butt down his chest and to the conspicuous bulge in his pants.\n\n\"Molly, I think your husband may have a gift for you later,\" Kelly said, grinning.\n\nMolly came around to Duncan's side and turned towards him, pushing him back against the chair and running a hand through his hair. Kelly saw her slide forwards, placing her legs over her husband's so that she could get her crotch as close as possible to his. \"I think you can see your husband's gift from over there,\" she remarked, looking down.\n\nDrake did his best to concentrate, but ended up folding. Tossing his cards into the middle of the table, Kelly felt him grasp both of her hips and pull her down into his lap. She felt his cock push against her buttocks for a second and then slide between her cheeks. She pushed backwards, causing him to groan and lean forwards until his forehead pressed into her red locks of hair.\n\n\"See, Derrek,\" she said, turning and pointing at the cards he'd tossed. \"I'm not a good luck charm after all.\" He laughed in response.\n\nShe glanced up and saw Molly leaning forwards, grinding gently against Duncan as she leaned her head against his neck. Eventually the two women stopped gyrating and Molly turned around to actually watch a few hands. Drake was definitely taking a few liberties with Kelly, his hands gently cupping her ass cheek, or moving across her midriff to slide deftly down between her legs and rub her thighs as closely to her pussy as he dared. Her panties grew even damper. \n\nThey switched one hand later and Kelly slid down into Derrek's lap. She felt his warm hands immediately pull her closer, and felt the delightful bulge pressing into her ass. She felt his hands trying to squeeze beneath her leg to adjust his dick, so she lifted up slightly to assist him. Sitting back down, she briefly closed her eyes as she felt a new sensation pulse through her. His tented pants pushed the g-string she was wearing aside and across the folds of her soaked pussy. Her eyes fluttered open as she tried to focus on the game. Gently she began to gyrate forwards and backwards, her pussy slowly and surreptitiously massaging his cock. She glanced up at Duncan and saw his knowing smile and wink.\n\nLeaning back, Kelly reached behind the younger brother and laid her arms around his neck. The movement arched her back and drew her breasts upwards and outwards. Her areola peeked out above the top of the bra for a moment. Derrek must have felt brave at that moment, because he reached up and briefly pulled at one of her rings through the fabric of her lingerie. He covered it by mentioning something about always wanting to see some.\n\nShe smiled and stood then, glancing briefly at Molly as she spoke quietly with Jarod across the table. \"Would you undo the bra for me?\" she asked, glancing down at Derrek.\n\nHe swallowed visibly and nodded, reaching up as he glanced at Duncan. Duncan's wide smile seemed to reassure him as he unclasped the garment. Kelly glanced down as she spun, brushing a stray hair away from her pale skin and presenting her nipple rings.\n\n\"What do you think?\" she asked, looking up at him. Derrek smiled and reached up. Stopping before he got there, he looked at her inquisitively. \"May I?\" he asked.\n\nKelly smiled and nodded. \"Of course!\" she said. \"I love when people play with my piercings.\"\n\nHe reached up and lifted one ring and then the other, pulling briefly and making a show of examining them. \"So I guess they make your nipples erect a lot?\"\n\nShe shrugged. \"Not necessarily. I've always had nipples that protruded like this. In high school I had to wear thicker bras so that I didn't inadvertently give the boys a show. Now, though, I don't mind when people notice so much.\" She reached up and tweaked them herself once, pulling roughly at the rings and jiggling her breasts seductively.",
        "\"Well, they look spectacular,\" Derrek said with a wink.\n\n\"Your brother loves them too,\" she said, turning and smiling at Drake.\n\n\"Damn right I do,\" he said, watching the two. He briefly reached over and gave one a playful tweak.\n\nKelly grinned and turned to sit back in Derrek's lap. She glanced back to look at him and then cast her eyes down towards his crotch, waiting. He smiled widely as he understood what she was indicating before recovering and trying to maintain a normal expression to cover up his youthful exuberance. Reaching down he pushed his cock downwards so that she could resume their previous position.\n\n\"Is this how you want me?\" she asked demurely, leaning back and nuzzling his cheek.\n\nHe chuckled. \"Oh I definitely want you,\" he said, inhaling against her cheek and drawing in her perfume.\n\nMolly and Jarod were speaking across the table and drew Kelly's attention just then. Molly seemed to be talking about her breasts. She stood suddenly and removed her bra, letting her breasts fall free. Both hands came up and she jiggled them, and indicated how they'd begun to sag slightly after childbirth. She bounced up and down for a second sending them jiggling once more.\n\n\"Well, I think they're spectacular,\" Jarod said as she resumed her seat in his lap.\n\nKelly felt a warm hand on her hip as Derrek pulled gently backwards, drawing his cock up her slit and across her clitoris. \n\n\"You're being awful naughty with my husband watching us aren't you,\" Kelly whispered. \"I bet you'd like to have your cock in me right now, wouldn't you? Such a naughty boy.\" \n\nShe felt his erection swell against her pussy and felt his arm snake around to capture her in a half hug, nestling gently against her midriff. She absolutely loved the way her naughty talk was affecting him and quickly decided to play it up.\n\n\"Yeah, I think you'd like to stand me up and bend me over this table right now, wouldn't you?\" she asked. \"You could grab a hold of my long red hair and use it to help you fuck me while everyone, my husband included, watched us. Such a naughty boy,\" she said, nuzzling his cheek again.\n\n\"Or is it a blowjob you're wanting?\" she asked, her tongue snaking out to glance his earlobe. \"You're thinking about having my warm tongue rubbing across the tip of your cock, aren't you? That sounds like some yummy fun,\" she said. \"Which is it? Would you prefer to shove the cock I'm rubbing against into my tight little pussy, or would you like to feel my lips wrap around it?\" She turned and kissed his cheek, waiting for a response. \"We'll just have to see where the evening leads us, I guess. I sure do hope my husband lets me play with you!\"\n\nDerrek groaned in response. The hand ended then, and Molly stood to go sit in Gus's lap. Kelly stood and turned towards Derrek as he pouted playfully. \"Thanks for keeping me company,\" she said, licking her bottom lip seductively.\n\n\"Shit, anytime,\" he said, reaching up to tweak her nipple one last time. She turned then and saw Freddie's wide smile and jovial face.\n\n\"Come on gorgeous, I've got a thing for redheads!\" He slapped his leg once for effect, drawing a laugh.\n\nKelly moved over and stood in front of him. Bending forwards slightly, she ran her buttocks backwards and down his torso. She felt her pussy lips against the fabric of his shirt for a moment, the sensation startling and exciting her at the same time.\n\nAs she sat, she felt again the telltale bulge at his crotch that Drake and Derrek both had. None of them had been nearly as large as her husband, but they all had nothing to be concerned about, she figured. Leaning back, she reached down and grabbed one of Freddie's free hands and moved it up to her breast. \"If you're going to be using me as a good luck charm, the least you could do is play with my tits,\" she said. The word felt odd to her, almost foreign. She never referred to her breasts as such, but she knew that men would find it alluring coming from her.\n\n\"Damn,\" he said, following her lead and gently pulling at the ring.\n\nShe moaned softly as she looked up at Molly. Gus was playfully jiggling her breasts for a second before he took a drink of his whiskey. The game seemed to resume then, even Freddie taking a renewed interest. Kelly playfully tried to distract him, sliding forwards and backwards across his bulging pants as he leaned his head forwards. She even turned around and tried to block his view with her boobs, but it was to no avail. It was a big pot by the end of the hand and Drake took it.\n\nThe round ended and Gus stood, Molly moving to the side.\n\n\"Well guys,\" Gus said, glancing at his watch. \"It's time for this old man to hit the road.\"\n\nHe turned then and shook hands with everyone as Drake counted him out and gave him his cash. Kelly stood and moved over to give him a kiss on the cheek. \"Are you sure you have to leave? Things were just getting fun.\"\n\n\"I appreciate the gesture, Red, but I'm too old to stay out too late. Plus, if either of you two ladies get anymore friendly with me, you really will give me a fuckin' heart attack!\" He guffawed loudly and slapped her roughly on the rear, drawing a smirk from her. \"Thanks again Drake, we'll see ya.\"\n\nFreddie stood as Gus was leaving and announced that he had to get going as well. After a few protests, Drake saw that it was no use and counted him out too.\n\n\"You sure?\" Kelly said, drawing a hand up to pull at one of her own rings.\n\n\"No, but I gotta work super early tomorrow,\" he said. \"Goddamnit.\"\n\nKelly giggled and stopped tormenting him. \"Okay,\" she said, sauntering over. \"I'll just have to take care of you another time.\"\n\nFreddie took special care to shake Duncan's hand. \"You've got a beautiful wife and you're a lucky man!\"\n\n\"Thanks!\" Duncan replied. \"I'm glad you could come.\"\n\n\"Yeah man, it was a blast. I'll catch you guys later. Ladies,\" he said, nodding at Molly and Kelly.\n\nAfter Molly walked the two out, she came back with a pout. \"Did we scare them off?\" she asked, crossing her arms.\n\n\"Who cares, let's keep playing!\" Derrek said with laugh.\n\n\"You have two free seats now, and Kelly and I don't have any money to join you,\" Molly said. \"How about you let Drake count you guys out and you guys can watch Kelly and I dance for you for a bit.\"\n\nEveryone immediately agreed without hesitation. Kelly saw Drake turn and wink at Molly, who returned his smile. Kelly took a second to come over to her husband then, and kissed him deeply. His warm smile and affectionate touch told her that he was still very much okay. She spun and followed Molly into the den.\n\n\"Refill your drinks and join us in the den,\" the brunette said. \"Don't keep us waiting or we might just have to entertain ourselves.\"\n\nThe two ladies disappeared from the room and the men quickly gathered up their cash, refilled drinks, and followed them.\n\nMolly quickly pulled four wooden chairs together, back to back, and bade the men sit down. Duncan and Drake were on opposite sides of each other with Jarod and Derrek on either side of them.\n\nKelly moved over to her husband as Molly moved towards hers. Sliding forwards the redhead reached down and gently stroked her husband's erection. He reached up to pull her down for a kiss, but she shook her finger at him admonishingly. \n\n\"You're not allowed to touch the girls, sir,\" she said playfully.\n\nDuncan raised his arms defensively and laughed. \"My apologies,\" he said.\n\nKelly giggled and came forwards. She smiled at Jarod as he turned to watch. Slowly, she began to gyrate and wiggle on her husband's lap. She was certainly no expert at lap dances, but it didn't seem like any of them cared. Molly stopped long enough to put on a song before they resumed as Kelly slid roughly against her husband's cock, pushing the large organ forcefully against her squishy pussy. \"What about you? I'll bet you're a naughty boy too, aren't you?\" she asked, nuzzling against his neck and letting her long hair splay out over his chest and face.\n\nDuncan didn't respond, but Kelly could tell that he was enjoying it. \n\n\"You'd like me to suck your cock, wouldn't you?\" she whispered. \n\nMolly switched sooner than Kelly had anticipated, but she followed suit, stopping briefly to kiss her husband and whisper, \"I guess you'll have to wait for that blowjob, naughty boy.\"\n\nHe smiled widely at her and turned to watch her. Moving around, she came to Jarod and slid down onto him. Looking up, he smiled as she thrust her breasts in his face. Seemingly unable to stop himself, he leaned forwards and nuzzled against her nipple. Giggling, she reached down for a hand and pulled it up so that he could grope her breasts.\n\n\"I guess it's okay to touch,\" she said. \n\nShe glanced up briefly at her friend and smiled. Molly was gyrating on her brother-in-law, his head placed directly between her breasts. Their eyes met briefly and she could tell that this was definitely a turn on for her. Despite the fact that she was fooling around with another man, she was doing it with her husband's own brother. Kelly giggled.\n\nJarod softly pulled at a nipple ring, causing Kelly's eyes to flutter briefly and a small gasp to escape her lips. Her attention directed back to him, she ground involuntarily downwards, the black man's erection sliding up the front of her g-string and pushing across her pussy. Moaning, she slid back down and thrust forwards again. She saw Molly starting to move again, sliding towards Duncan. She leaned down and kissed Jarod on the cheek. Just then, the cell phone in his pocket buzzed.\n\nHe chuckled and pulled on her ring once more before she slid off, pouting.\n\n\"My wife,\" he explained. \"I've gotta run... unfortunately.\"\n\nKelly sighed as the guys stood to shake hands with him.\n\n\"I'll call you soon,\" he said, clapping Drake on the back.\n\nSeemingly determined to not let the party end there, Drake turned and looked at his brother and then Duncan. \"Y'all wanna move to the couches where we'll be more comfortable?\"\n\nDuncan stood and immediately began to help moving the chairs out of the way. They moved to a set of couches that Molly and Drake had set up in a quiet part of their den as she switched the music to something less stripper-ish.\n\nDuncan fell back into a seat as Kelly came over to join him. He smiled and kissed her, but she was yanked up by Molly. \"I haven't had near enough fun with your husband yet,\" she said grinning.\n\nKelly giggled and stood, saluting playfully. \"Yes, Ma'am!\" Turning, she saw Drake and Derrek and moved towards the two to get them to make room for her. As she approached, she sexily flipped her hair back over her shoulder with a flourish.\n\n*****\n\nDuncan\n\nDuncan smiled at how brazen and sexual his wife was being. He couldn't have been more aroused or proud of her in that moment. She sauntered sexily over to the two brothers and casually flipped her hair over her shoulder.\n\n\"Got room for me?\" she asked.\n\nThey immediately shifted to make room and she slowly sank into the couch beside them. Immediately the two men scooted closer to her, causing her to smile.\n\nMolly oozed into his lap, her perfect breasts brushing his cheek for a moment before she slid completely down into him. Her warmth and softness was alluring and very exciting, his erection was threatening to burst through his pants if it didn't get any attention soon. He gingerly ran a hand from her stomach up to her breasts, playfully rubbing them for a moment before drawing her chin to his in a tender kiss. She whimpered softly as his tongue pushed briefly into her mouth. Her hand began to slowly undo the buttons on his shirt as she kissed him again, her tongue slowly finding his once more. She tasted wonderful, almost like strawberries. Her soft lips parted again and her tongue rubbed slowly along his lips before diving in to find his own, again. A soft moan wafted across the room, drawing them from their reverie. Breaking the kiss, the two looked back across the room. She leaned down and gently nibbled his ear.\n\n\"I think we should watch your wife play with my husband and his brother, and then we can play while they watch us.\"\n\nDuncan smiled and nodded, caressing her and lowering his face to her breasts to draw in her nipple, erecting it swiftly and letting it drop into his hand. His fingers began to pull gently as she moaned softly, her lips finding his ear to gently nibble. Turning, he watched his wife raptly.\n\nBoth men were affectionately kissing her. Derrek was at her neck, kissing along her collar bone and upwards towards her ear. Drake had gone straight for her breasts, and was gently pulling at one of her nipples with his lips and tongue. Kelly was breathing heavily, her eyes closed for a brief period. Opening them suddenly, she looked directly at him then with an intensity in her eyes. Drake began to kiss lower, pulling her lingerie aside when he needed to get to her flesh. As he moved lower, Derrek turned her face and kissed her softly, his warm tongue pushing in as Duncan watched.\n\nMolly had worked the buttons on his shirt open and was gently caressing his chest muscles and running her fingers through his chest hair. The two were still watching the three across on the other couch as they affectionately played.\n\nDrake moved lower, his fingers finding the sides of Kelly's g-string and pulling gently as his lips worked lower and lower. \n\n*****\n\nKelly\n\nShe hadn't ever felt this much attention on her body. Both men were seemed to worship her skin with their mouths, tongues, and teeth. Every place they touched was electrified with pleasure, sending rivulets of energy racing through her body. She kept glancing up at Duncan and Molly across the room, her eyes filled with arousal. They were fondling each other and kissing while they watched her being made love to. The knowledge that she was being so intimate with someone other than her husband and that he was in the same room was driving her crazy with lust and excitement. She felt a sudden urge to throw one of the brother's down and start fucking him like crazy, but she stopped herself, determined to make this last.\n\nDrake began to work her panties down, causing her to grin in anticipation. His lips and tongue were rubbing affectionately across her lower stomach, moving lower until he'd made it to the small thatch of red pubic hair that she'd kept. His gentle kisses on her skin made her pussy quiver in anticipation. She whimpered softly as she felt his warm breath across her skin.\n\nShe moaned audibly as Derrek lowered his head and took one of her nipples in his mouth. She looked at him hungrily as he pulled the ring with his teeth. The feeling sent a wave of pleasure racing through her and elicited another moan. He smiled and released it to kiss her again.\n\nDrake had freed her pussy from its confinement and was slowly pulling her panties down her legs. He briefly glanced back at Molly but quickly turned his attention back to Kelly. Lifting her feet, he slipped the g-string off one leg at a time and brought them to his face, inhaling deeply. Kelly smiled then, and grew a little nervous as he moved forwards slowly. He began to slowly kiss, alternating from one leg to the other and moving inevitably forwards. Her breathing grew heavy in anticipation as Derrek continued kissing her.\n\nDrake moved across her knees, kissing one and then the other as she watched, his lips like fire on her skin. He began to move faster, seemingly unwilling to delay, and kissed up one leg, all the way to the left crease of her hip, mere centimeters from her pussy. He switched though, kissing one side and then the other as she shook softly in anticipation and chewed at the corner of her bottom lip. \n\nThen all at once, it happened. She felt Drake's warm tongue wash over her lips and push gently into her folds. He pushed the tip of his tongue deeper for a moment before he flattened it out and slid completely forwards. His hands immediately went around her buttocks and pulled her forwards on the couch so that her pussy was more easily accessible to him. She looked up at Duncan and saw the smile and recognition on his face of the threshold they'd just passed. Her heart soared as she sighed in pleasure.\n\n\"Oh fuck,\" she moaned. Derrek pulled gently on the nipple ring in his teeth before replacing them with his fingers so he could watch. Drake's warm tongue pushed deeply into her again and he moaned in excitement. Methodically, he began to devour her tender pussy, his tongue moving deliberately through her folds and up, across her clitoris, erecting it and causing it to protrude from its hood. The excitement was too much for her, and as soon as he sucked the small organ into his mouth, she began to cum, orgasming hard as he continued to suck and lick at her tender parts. Her pussy convulsed and contracted down on nothing, and she briefly wished it was his cock instead of his tongue that he was using on her in that moment. \n\nQuickly releasing her clit, he pulsed his tongue against the organ as she affectionately rubbed his bald head. Unable to stand any more attention for the moment, she pulled his face up and kissed him, her juices mixing with their saliva as they abandoned pretense and devoured each other. Derrek seemed content to watch for the moment as passion overwhelmed the two. Pulling him to her, she quickly began to fumble with his belt. She was determined to pay back his oral attention.\n\n\"Whore!\" \n\nKelly couldn't have agreed more with the thought in that moment, and it drove her excitement higher. Pulling him to a standing position, she looked up at him demurely, waiting, and slid to the floor. Placing her feet flat on the floor, she sat her buttocks directly down on them and glanced up at him seductively.\n\n\"Would you like me to suck your cock?\" she asked.\n\nDrake moaned and swayed forwards uncontrollably.\n\n\"Such a naughty boy,\" she admonished. \"Your wife is watching me and everything. You want to stick your cock in my mouth, don't you?\" she asked. \n\nHis eyes spoke volumes, almost pleading, practically begging for it. \"You'd like to feel my warm tongue rubbing across the tip, wouldn't you? I'll bet you want to fuck my face with it. You're such a naughty boy,\" she said, shaking her head. \"You haven't even pulled it out yet! How can I suck it if you don't pull it out for me?\"\n\nHer words had a marked effect on him, moans slowly escaping his lips as he reached down to unzip his pants. Dropping them quickly, he reached for his underwear, but she stopped him with an upraised hand.\n\n\"Honey,\" she said, looking over at her husband. He had Molly's breast in his mouth at that point, but the two were still avidly watching. \"Would you like to see me suck Drake's cock?\"\n\nDuncan smiled. \"Of course, my love.\"\n\nShe turned back to Drake, her hands moving up to his underwear. \"Did you hear that? My husband wants me to put your cock in my mouth.\" He moaned and swayed forwards again. His penis was fully erect, but it wasn't nearly as impressive a bulge as Duncan was sporting. Kelly raised her hands up then to grasp it.\n\nHe groaned in pleasure as she began to stroke him through his underwear, the mushroom head of his cock oozing pre-cum that stained the fabric confining it. Groaning again, he involuntarily thrust his hips forwards toward her. She giggled and stroked, pushing him back a little.\n\n\"Naughty boy, I don't even have your cock out and already you're trying to fuck my mouth.\"\n\nHer words caused him to groan again as she continued to jerk him off slowly, using his own underwear. She let go with one hand and moved it to his balls, cradling them as she continued to stroke with her left.\n\n\"What about these? Do you like having your balls sucked, or are you more of a deep throat kind of man?\"\n\nHe nodded, clearly not thinking straight and not actually answering her question.\n\n\"I can't quite deep throat my husband yet, but he says I'm getting better. I just need more practice,\" she said, stroking up and down. Her movements caused the tip of his cock to slide out from the hole in his boxer-briefs.",
        "\"Well, look at that!\" she said, smiling. \"Your friend wanted to come and meet me.\" \n\nHe groaned and thrust forwards involuntarily again, the movement sliding more of his dick out. He looked average size to Kelly, but again she was no real judge of that. Her view of normal had been definitely skewed.\n\n\"Such a naughty boy, trying to get me to suck your cock without even asking,\" she said, looking up at him demurely. \"I'll bet you want to feel my warm mouth on the tip don't you. You wouldn't be able to control yourself, you'd probably cum right then and there,\" she said, giggling.\n\nHe groaned again, fighting to maintain his stance and not thrust forwards.\n\n\"Tell me what you want me to do,\" she said, her hand moving to his bare cock and stroking. She smiled at the warmth, and how different it was from Duncan's. It looked like she could really give Drake some pleasure with her mouth, him being smaller than Duncan. She licked her lips in anticipation.\n\n\"God, Kelly, you're driving me crazy,\" he groaned.\n\n\"Tell me,\" she said, continuing her stroking.\n\n\"Please,\" he begged. \"Please suck my dick.\"\n\nKelly grinned and looked to her left to where her husband and Molly were watching. \n\n\"Molly, would it be okay if I sucked your husband's cock?\" she asked.\n\n\"Absolutely,\" Molly answered, her mouth open and her chest rising with labored breathing. Her hand was slowly moving up and down in Duncan's lap, stroking his cock through his pants and she was clearly very turned on.\n\nKelly grinned and turned. Sliding her hands up, she gripped the edges of his black underwear and began to slide them down. His cock slid back inside briefly before slapping back upwards.\n\n\"My, you are definitely hard for little ole' me,\" she said. She looked up at him again and flashed a wicked smile. \"I want you to watch me put your cock in my mouth. Would you do that for me?\"\n\nShe felt herself getting wetter as he nodded vigorously. She knew the anticipation of her mouth around his cock was driving him insane. To tell the truth, she'd been having to fight not to suck it into her mouth much earlier in their play time.\n\nShe glanced back over at her husband as she took this other man's cock in her hand. Slowly, she stuck her tongue out and flattened it, moving forwards as she pulled down on his dick and pointed it towards her open mouth.\n\nThey both moaned audibly as her warm tongue finally made contact with his hot flesh. The oozing pre-cum leaking from his cock coated her tongue as she licked up the tip. Again she licked, and then a third time, causing him to twitch. To her left she saw Derrek slowly stroking his own cock. She giggled and looked at him briefly, still rubbing her tongue across the head of Drake's cock.\n\n\"You'll just have to wait for your blowjob,\" she said, a naughty smile on her lips.\n\n\"Slut!\" She didn't even try to disagree with the thought.\n\nShe turned back then and pulled him fully into her mouth. Drake moaned in absolute pleasure as she took his painfully erect prick in and rolled it around with her tongue. Reaching back, she gripped him by his buttocks and pulled, determined to see how far she could get him into her mouth.\n\nHe hit the back of her throat, and she looked curiously at his cock. She still had a few inches to go. Determined to push herself, she pushed gently forwards. He groaned again as her warm lips sucked hungrily at him, pulling him out and then thrusting forwards again. She looked over at Duncan and saw the look of excitement and pride on his face. She winked and turned back. She couldn't believe how much this was turning her on, and all she was doing was giving a blowjob. She felt her pussy quiver as the thought entered her head. \n\nYou're married, and you're sucking another man's cock, you filthy slut! Your husband can see you, and he knows how much you're enjoying this!\n\nDrake groaned again and she felt his hand on the back of her head. She giggled and popped him out.\n\n\"Looks like someone really does want to fuck my face,\" she said, looking up. \"Okay Mr. Impatient,\" she said. \"Fuck my face, then.\" She looked up at him innocently, her mouth open and waiting as she put her arms behind her back. Her long red tresses spilled out behind her and tickled her feet as she looked upwards at him. \"Go ahead,\" she said, playfully. \"I promise I'll be a good girl and won't interfere.\"\n\nDrake glanced over at Duncan for a second for the go ahead, but he was grinning too widely to respond though, so he took that as a confirmation. Reaching up, he gently took Kelly's head in one hand and his cock in the other. Smiling down, he rubbed the tip across her lips.\n\n\"You're going to have to let me know what you want me to do,\" she said, not opening her mouth.\n\nHe grinned down at her and rubbed the tip across her lips again, and then again, spreading his pre-cum and eliciting a low moan.\n\n\"Open your mouth,\" he said finally, grinning down at her as she tried to look up at him innocently.\n\nKelly obediently followed his orders, and he wasted no time in thrusting deeply into her mouth as she moaned in excited pleasure. Her moan was echoed by four other sighs of released anticipation and pleasure. The strange cock easily slid to the same point it had been earlier, deep in her mouth before he pulled back and repeated the move. She moaned as she felt the warm flesh of his cock sliding slowly into her mouth, and the sensation made her want to keep sucking on him, to keep giving this other man pleasure.\n\nShe couldn't believe how much she was enjoying sucking Drake's cock. She briefly wondered what the hell she'd been afraid of before seeking Marie's blowjob help, and lamented all the times that she could have gone down on her husband and had missed an opportunity. \n\nKelly yelped softly, playfully at him as she looked up after he pushed a little harder than before, her hands still behind her back. He stood over her lap as he thrust again, his cock pushing deeply into her mouth. She winked at him as he began to pull, the sides of her mouth turning up into a half-smile as he pushed further, his cock forcing the tip deeper, almost into her throat. She fought a brief urge to gag, but he was nowhere near as intrusive as Duncan had been, so she easily suppressed it.\n\nHe pulled out then and wiped the tip of his cock across her face, saliva and pre-cum coating her lips and cheeks. Thrusting again, she obediently opened her mouth and sucked forcefully down as he bottomed out, the head of his cock pushing past her mouth and into her throat. She sucked so hard that a schluuuck came from her throat, sounding as if she were at the bottom of a soft drink and the straw was only the remnants. They both groaned loudly at the lewd noise, but Drake suddenly shook his head and pulled out.\n\n\"Goddamn you are good at that,\" he stammered. He wasted no further time speaking though, and quickly pushed his cock back in to her mouth. Again and again he fucked his shaft back and forth into her hungry lips, her tongue loving devouring every inch she could get. The effect it was having on the other three was visible. Molly was practically dancing in her seat as she stroked Duncan. They must be wanting to put on a show once she was done with Drake and Derrek. She smiled at the thought.\n\nAgain and again, Drake thrust his cock into her mouth, the tip forcing its way into her throat repeatedly. She finally got the entire thing in and leaned forwards, bobbing up and down on him, her lips pressed tightly against his pubic hair, her throat gurgling and making the same schluuuck sound it had before. He groaned and shook his head again, quickly extricating his cock and stroking the shaft. Kelly reached up though and squeezed the tip, shoving his hands away forcing his orgasm back down. \n\n\"I'm definitely not done with that thing yet,\" she said. \"You don't get to cum until I say.\"\n\nHe grimaced uncomfortably, but nodded. \"Fuck. Yes Ma'am.\"\n\n\"I guess you need to relax a little and let me take care of your little brother,\" she said, pushing him to his original seat. She resumed her demure position on the floor, hands behind her back, and her red hair splayed seductively down her back and looked expectantly back at Derrek. \n\n\"Well?\" she asked. \"Do I have to beg you to come stick your cock in my mouth?\"\n\nHe smiled widely and stood, briefly glancing at Duncan but seeing him occupied.\n\n\"Your brother just fucked my face, I think it's safe to say that it's okay for you to take your liberties with me as well,\" she reassured him.\n\nHe nodded nervously and moved over to her front, but kept his hands behind his back.\n\nKelly looked up playfully at him. \"Aww, are you shy?\" she asked. \"Would you like me to take your cock out for you?\"\n\nHe nodded, his hands shaking. Kelly giggled at his obvious nervousness and quickly stripped him out of his jeans and underwear as he pulled off his shirt.\n\n\"Now, would you like me to put my hands back where they were?\" she asked, looking up at him.\n\nHe smiled and nodded.\n\n\"I guess you're like your brother, huh,\" she said as she slid her hands back behind her back and clasped them together. \"A fan of face-fucking...\" She looked up at him slowly, her eyes smoldering and her gorgeous fiery hair flowing sexily down her back to her feet again.\n\nHe shrugged. \"I guess so,\" he stammered.\n\n\"Oh Honey, don't be so nervous,\" she said playfully. \"You can't hurt little ole' me. You go ahead and get as rowdy as you need to, Sweetie. I'm a tough girl! I can take it.\" She raised an arm and flexed to prove her point, drawing a smile from him.\n\nStill nervous, probably because her husband was watching the two of them, he slowly slid forwards and gripped his cock, but he didn't seem to want to reach forwards for the back of her head like his brother had.\n\nShe leaned forwards, licking the tip of his cock and sending a shudder through him. It jerked briefly when she did it again, and then again, bringing a smile to his face.\n\nKelly grinned and leaned forwards then, her hands still obediently behind her as she wrapped her soft lips around the tip of this stranger's erection. He moaned loudly as her warm mouth enveloped him and sent pulses of pleasure shooting through both of them. His pre-cum coated her tongue and she whimpered in pleasure as the unfamiliar taste excited her.\n\nSmiling, he finally reached forwards and began to cradle her cheek, softly pulling as he pushed forwards. She giggled and reached up to move his hand around to the back of her head.\n\n\"There, silly,\" she said playfully as she popped his cock out of her mouth. \"Now you can fuck my face if that's what you want to do!\"\n\nHe moaned again and she saw Drake come over to stand next to his brother.\n\nDerrek pulled softly, still seemingly unsure of himself or worried that he was going to hurt her, or that Duncan was going to somehow suddenly take offense that some stranger was shoving his cock into his wife's mouth. She felt his cock push briefly against the back of her throat before he stopped and withdrew. She reached up with a free hand and began to gently stroke Drake's cock as his brother fucked her face slowly.\n\nBoth brothers groaned then, causing Kelly to giggle. She felt Drake's hand on the other side of her face then as he turned and pushed his cock into her lips. She sighed happily and accepted his new offering into her mouth, obediently sucking and slurping at the renewed pre-cum that had oozed from the tip.\n\nDrake quickly released her face and she quickly turned back to Derrek, forcing her lips around his cock as he pulled her face forwards. He groaned loudly as she pulled him out and switched back to Drake, taking the older brother's cock into her mouth again. He pulled briefly and forced the tip of his cock through the back of her mouth and into her throat where she bobbed up and down for a few seconds, her lips pressed firmly against his pubic hair.\n\nShe heard herself making the delightful gluck noise that she'd heard Amy making the other night and giggled, causing her to gluck again. She turned and quickly took Derrek's cock in her mouth, deep throating him as she had Drake and causing a few more gluck sounds. Desperately needing to keep at least one of them in her mouth, Kelly switched between the two repeatedly, but didn't hesitate very long during the switch.\n\nPulling him out, she sat back and began to stroke both brothers at the same time, her small hands gripping their ooze covered shafts tightly and slowly sliding back on forth as she smoldered at their feet. Drake once again took the initiative after a cursory glance at his wife and Duncan, who were still enjoying each other on the chair next to the couch they were on. Reaching down, he took Kelly's hand and pulled her up, leading her towards the couch. She pouted briefly as her toys were taken away, but then she saw that she would get them back rather quickly and felt her pussy thrum in anticipation.\n\nShe smiled and waited for him to indicate where he wanted her as Derrek came up on the other side of her. Drake nodded to the couch and led her to sit between him and his brother. She immediately reached for both of their cocks and began to stroke. Unsatisfied with simmering between them only being allowed to stroke them, Kelly quickly leaned over and took Drake into her mouth. Her tongue rolled over the head of his cock and he groaned, gently putting pressure on the back of her head and she whimpered in pleasure. Popping him out of her mouth, she quickly leaned over and took his younger brother into her mouth, sucking forcefully and pursing her lips tightly as she slid them slowly down his shaft, not stopping until he had gently pushed past her throat muscles and was fully inside her. She moaned loudly, feeling how much pleasure she was bringing to these two men. She quickly extricated him when she felt the two beginning to move on the couch. She moved to her knees as she felt Drake beginning to guide, and Derrek slid backwards towards his end of the couch. Kelly followed, lowering her face down into his crotch again swiftly and pulling his succulent cock back into her mouth as quickly as she could. Moaning, she lowered her face down into his crotch, drawing his manhood deeply into her mouth and obediently sucking as forcefully as she could eliciting gasps of pleasure from the young man. She couldn't believe how powerful the need to pleasure these two men with her mouth was. She felt like she absolutely had to have one in her mouth at that moment. One of her hands was around the base of his cock, squeezing and helping her to pull more of him into her mouth. She reached up then with the other hand and cradled his balls gently. He moaned repeatedly as she deep throated him, once, twice, and then a third time and fell back into the couch. She leaned forwards, determined to have his cock back in her mouth as soon as possible. She felt Drake's hands behind her then, and his warm digits gently entered her. She moaned audibly around his brother's cock and began to bob faster and faster down on him. Gluck, gluck, gluck, noises filled the room as the cock she was sucking pushed repeatedly down the back of her throat. She felt Drake shift behind her and saw him move to his feet out of her peripheral vision, and grinned in anticipation.\n\nKelly suddenly realized her situation and briefly considered stopping him. Had she gone far enough? Was she ready for full penetration from a man other than her husband? She shook the questions away and smiled internally.\n\nPopping her lips off of Derrek's cock, she turned and looked at Duncan. \"Honey,\" she said, as Duncan looked at her lovingly. \"I think your friend is going to try and fuck me while I'm busy sucking his brother's cock. Is that something you'd like to watch?\"\n\nDuncan was too turned on to speak coherently, gurgling a reply and nodding in response. Molly was still slowly stroking his cock, though she'd actually freed it from its confines. \"He said \"Hell Yes,\" Molly relayed, grinning as she stroked.\n\nKelly arched her back then, splaying her buttocks out and flipped her hair back over her shoulder as she looked back at Drake. \"So are you going to shove that beautiful cock in me or not?\" she asked. The look she cast at him would have made a dead man hard, and she turned back as she felt the warm tip of his cock pushing across her pussy as he maneuvered into position.\n\n\"Molly, are you watching? Your husband is about to fuck me,\" she said, lowering her mouth quickly down onto Derrek again. She squeezed her hand down on the base of his cock, pushing any potential orgasms back so the two of them could enjoy her blowjob skills some more.\n\n\"I haven't stopped watching, you little succubus,\" Molly called. \"You guys need to hurry up so I can take advantage of this beautiful erection your husband has. It's taking all of my willpower not to fuck him right here and now!\"\n\n\"God, how have you not sucked your brother-in-law's dick before?\" Kelly asked lewdly. \"I'd do this every day if I were you. She lowered her face and continued swallowing the young man's cock.\"\n\n\"I think it's something I might have to try,\" Molly said, spitting on her hand and stroking it across Duncan's cock.\n\nKelly winked as she briefly turned to look towards Drake. Behind her she felt him grip both of her hips. The sensation of his warm hands tightly gripping so private an area on her, an area only previously having been touched by the only man she'd ever had sex with, sent a thrill racing from the point where their warm flesh was touching, to every other part of her body. She felt him shift his hands forward's a little bit and pull against her softly, his strong fingers gently pushing into her tender, pale flesh. The move caused her to sway forwards slightly and then back. He'd done it so he could rub his cock along her slit and then slide it forwards so that it was poking into her thatch of red fur. He was incredibly erect and poking upwards enough so that all he had to do was slide it back and find her entrance. The feeling of his pubic hair against her pussy, his thighs flat against the back of her legs, this strange cock where her husband's should rightfully be, hit her harder than she'd expected just then. It excited and terrified her at the same time. Looking up, she saw the man that she loved so much, smiling directly at her. Sensing her sudden trepidation, he blew her a kiss and mouthed, \"I love you\" at her. The terror dissolved and she mouthed back, \"I love you\" back to him.\n\n\"You ready?\" he asked, gingerly slapping her on the rump.\n\n\"This is it, the point of no return,\" she thought. The knowledge that she was about to cross another threshold made her happy, and knowing what was about to happen made her pussy quiver with anticipation.\n\n\"Drake, if you don't stick your cock in me, I'm going to have to start fucking your brother firrrrr...\" she began, but \"first\" quickly turned into, \"Fuuuuuuck,\" as she felt him suddenly pull back and slide deeply into her, his cock fully sliding into her, until that moment at least, unsatisfied pussy. It latched down on him hard as she gasped in pleasure, her mouth quickly closing over Derrek's cock again and moaning as she fought to suck his cock and be fucked at the same time. She felt Derrek shift upwards to stand, half on the couch, half off. He seemed to lose his timidness then, and she felt the familiar sensation of a hand on the back of her head.\n\nShe felt the power she had over these two men in that moment, and felt very vulnerable at the same time. Drake slowly slid out of her after allowing her to adjust and began to pull methodically forwards establishing a peculiar kind of rhythm for the three. He wasn't nearly as intrusive as Duncan normally was, but there was something special about his dick that was doing incredible things to her drenched cunt.",
        "\"You can talk dirty to me if you like, or pull my hair, spank me,\" she murmured, caressing the tip of Derrek's cock with her lips and tongue.\n\nDrake immediately spanked her hard on the rump with a resounding thwack!\n\n\"Molly loves to be spanked,\" he said, grinning as she looked back at him. The impulse of pain shot immediately to her pussy and caused her to whimper in a sadistic mixture of pleasure and pain.\n\nThwack!\n\nAgain Drake brought his hand down on to her pale buttocks, his cock sawing deeply into her hungry pussy. This time it was on the other side, but it had the same effect and caused her to moan loudly.\n\nHe reached up then, and grabbed two handfuls of her long red hair and pulled backwards. The movement arched her back and caused Derrek to have to stand up a little taller to reach her. She fought to get her lips back around him, giggling for a moment before she finally latched on, groaning in pleasure as she pulled him deeply into her mouth, her body jolting forwards every few seconds from Drake's thrusts. Her hands went to his buttocks then and pulled until his pubic hair was tickling her cheeks and his skin was pressing her nose flat.\n\nDrake thrust deeply again and again, his cock driving her pussy into a quivering mound of pleasure impulses that rocketed through her body. His dick was driving pleasure from every cell in her pussy, and it felt like it had finally quenched its thirst after it had been absolutely craving his cock.\n\nKelly began to moan, long and high pitched as she began to cum on his cock. His hands still full of her hair and his hips slapping noisily against her thighs, Drake groaned in pleasure and began to thrust faster. Her muscular pussy rippling down on him in waves, Drake gasped and began to speed up.\n\n\"Fu... uu... uu... uu...ck!\" Kelly groaned around Derrek's shaft. \"Gah,\" she said, unable to speak as Derrek briefly pulled out and let her orgasm without having to concentrate on sucking him off. She yelped softly, repeatedly as Drake hammered into her, his cock shuddering and threatening to explode.\n\n\"Fuck,\" he moaned, pulling out as she gasped and fell onto her back on the couch. He came up to her then and furiously stroked his cock as he bent low and aimed for her stomach. Her hand dove towards her own pussy and she began to furiously scrub it, drawing out her own orgasm. With a final cry of pleasure, he began to cum, a long rope of alabaster blasting from the tip and shooting across her stomach and up to her breasts.\n\n\"Guh,\" he groaned, continuing his stroke and slinging his seed across her stomach. Above her, Derrek was stroking his cock as he watched the pale form beneath him being slowly coated with sticky cum. Kelly furiously rubbed at her pussy, excited beyond words to be treated like she was merely something to be fucked and cummed on. Another orgasm began to work its way through her as Drake finally stopped spraying her down with his seed. She looked up then as Derrek cried out. Coming around, he knelt down close to her breasts as she quickly cupped them together for him. Jerking his shaft furiously, he let out a tremendous groan as sweat dripped from his face. His head expanded then and another rope of sticky cum shot out and arced across her chest. One of her nipple rings got hit with the spray, and the other got it on the second blast. Again and again the young man cried out, his cock spraying forth and dumping the contents of his balls onto her breasts. She continued scrubbing furiously at her pussy as her orgasm finally wound down.\n\nThe two brothers collapsed onto the couch, gently lifting her head and feet up to cradle them in their laps as their chests heaved from the effort they'd just put forth in fucking her senseless.\n\n\"Jesus Christ,\" Derrek moaned, leaning down and softly kissing her on the lips. She briefly thought about warning him that she probably still had pre-cum on her face, but he didn't seem to notice or mind and then the thought was lost in the jumble of emotions she was feeling.\n\nMolly stood briefly to go get each of the three a towel to clean off with. Bringing them back, she handed one to each person. The two brothers wiped their faces of sweat and then their cocks clean before turning towards Kelly to attend to her. As they wiped their collected cum off of her pale skin, she grinned widely, her chest still heaving in pleasure and exhaustion.\n\nShe grinned widely, covering her mouth as she erupted into giggles. Looking down for a moment, she saw that they had finished cleaning her of their seed and were sitting there looking stunned, trying to recover. She stood then and immediately and exuberantly ran over to Duncan to hug him.\n\n\"We did it!\" she said, grinning widely. She desperately wanted to kiss him, but knew that it wouldn't be right with what she'd been doing.\n\n\"We sure did baby,\" he replied, smiling and looking deep into her eyes. \"You guys were incredible,\" he said. \"All of you. Thank you guys, for being so tender and sweet for my wife's first time outside of our marriage. I really appreciate it, and I know she did too.\"\n\nDrake chuckled. \"I never thought I'd hear the day that one of my friend's thanked me for fucking his wife.\"\n\nDuncan laughed then as Kelly moved back to sit between the two, still completely naked.\n\n\"Honestly,\" Derrek said, \"your wife was incredible. Jesus Christ, you're a lucky man.\"\n\nDuncan grinned and winked at her. \"I've known that since the day she said yes!\"\n\nDrake finally began to catch his breath as Molly moved towards Duncan's chair again and slid down into it.\n\n\"It's still early,\" Kelly said, looking at the clock on the wall. \"We still need our show, you guys. Come on, y'all got yours!\" she snapped her finger playfully at them. \"Unless of course you aren't ready,\" she added.\n\nMolly turned and smiled. \"Oh we're very ready,\" she said. Turning, she immediately stood Duncan up and began to work his jeans off.\n\n*****\n\nDuncan\n\nHe smiled as he thought back to the time in the club when he'd been so close to Molly before. He thought that he could have very easily fallen for such a beautiful woman. He didn't give a damn that she didn't have a flawless body. Every inch of her was pure sex to him. Nothing had changed since that night, except that she'd gotten more attractive and alluring to him.\n\nDuncan smiled as she knelt on the floor in front of him. Apparently she had no intention of being the demure little innocent thing that his wife had portrayed. She looked hungry, and she was damn well going to get her snack.\n\nShe fumbled briefly with the snap of his slacks before sliding the zipper down and pulling his pants and underwear down at once. She immediately took his cock in her hand and began to stroke it, bringing her other hand up and joining it a few seconds later.\n\n\"Oh my God,\" she said, smiling as she brought her face up to it. Pressing her lips up against the bottom part of the shaft, she laid it across her face up to her forehead.\n\n\"It's as big as my damn head,\" she said, glancing back at Kelly. Duncan laughed, the noise drawing Derrek's attention.\n\n\"Jesus Christ,\" he said.\n\n\"Yeah,\" Kelly said, smiling as she leaned over and started to idly stroke his cock again. \"My husband has a ridiculously big dick.\"\n\n\"No shit, right?\" the young man said. \"I mean, I'm straight as an arrow, but that's one damned big pecker. Jesus man, I'm a little scared of that thing now.\"\n\nDuncan laughed as Molly stood and posed sexily with it, flopping his cock down in one hand and looking at Derrek like she was surprised at the size.\n\nThe three fondling each other on the couch laughed at the sight.\n\n\"Careful now Molly, that thing might fuckin' bite you,\" Drake said with a laugh.\n\n\"Don't worry,\" she said, stroking him as she returned to her knees and rubbed her thumb across the tip to spread his pre-cum. \"I'll fuckin' bite it back,\" she said with a wink at Duncan.\n\nHe groaned as she ran her tongue across the tip and grinned upwards, her mouth opened sultrily as if daring to shove his cock in. As if in answer to his thought, she quickly moved up and wrapped her lips around him, both hands still slowly stroking him towards her mouth as if she were hoping to coax his cum out of his cock and down her throat. She locked her lips around the tip and began to swirl her tongue around it. The sensation was different, but definitely pleasurable. The warmth of her mouth sent a shiver down his spine as she began to bob slowly up and down on him, her mouth sucking as she closed her eyes and going as deep as she could. It was true that she couldn't go very deep, but Duncan didn't see why she thought she wasn't any good.\n\n\"God,\" he moaned, closing his eyes and looking up at the ceiling. At his crotch, Molly moaned and swallowed, pulling him as deep into her mouth as she could manage. Her tongue rolled the head of his cock around inside again, her lips sucking him hard and drawing another moan from the both of them.\n\nHe glanced over at Kelly and saw her watching him. Her hands were on the two brother's cocks again and she had them half hard as the three of them watched. Derrek leaned over and gently pushed his fingers into her pussy then, eliciting an eye-fluttering whimper.\n\nDuncan felt Molly gently bite down on his dick as she looked up at him. He grinned at the new sensation and her subsequent smile and sensual eyes.\n\nShe turned back to his cock then and went deep. He felt her throat push back against the wide head of his cock and felt her briefly gag as she extricated him. Her hands immediately went to the tip of his cock as it emerged and began to coat his entire length with her slobber and saliva. She quickly locked her lips around the tip of his cock and began to stroke him forcefully, her hands squeezing tightly as they coursed over his length and filling the room with a schlick schlick schlick sound.\n\nHe groaned and smiled down at her. \"You liar,\" he said. Drawing a look of curiosity from her.\n\n\"You're really good at sucking cock,\" he explained.\n\nShe rolled her eyes then and went back to stroking and sucking steadily.\n\n\"I told you,\" Drake said from the other couch. Duncan watched as Kelly briefly lowered her face into Drake's lap, taking his cock into her mouth for a moment and then rubbing her palm over the tip to get it coated in the saliva and pre-cum mixture that was there. Turning, she repeated the move on the other brother before turning back and smiling at Duncan.\n\nMolly looked up at him then. \"I have to say, I've been wanting to suck your cock and fuck you for a really long time. Longer than you probably realize, actually.\"\n\nDuncan looked down at her inquisitively.\n\nShe smiled and took him into her mouth for a moment, moaning softly and rolling her eyes back briefly in a show of pure pleasure.\n\n\"I can't tell you how much this makes me happy, to be sucking you off right now,\" she said, popping his cock out and stroking it as she rubbed her tongue along her lips, seeking his pre-ejaculate. \"I think it's been said by my husband that I have a thing for you.\"\n\nDuncan smiled and gently caressed her cheek. She sighed happily and drew him quickly back into her mouth, sucking forcefully and stroking his cock as if she were trying to suck the cum right out of his balls.\n\n\"I told my husband that I was going to swallow your load tonight. But... I can't decide if I want to actually do that, or if I want you to cum in my pussy instead.\"\n\nHe groaned as he watched her, both hands returning to his cock and her lips locking around the tip as she began to suck and stroke again. Unable to take anymore, he moved quickly to his knees and then to the ground. Molly smiled then as he moved her into position and resumed sucking on his cock.\n\n\"God damn you have a beautiful cock,\" she said, lowering her face and taking him deeper than she had been able to before in this new position. Duncan groaned at the new sensation and hungrily pulled her drenched pussy down to his waiting lips. \n\n\"Duncan is really good at eating pussy,\" Kelly said, leaning over to suck Drake's cock back into her greedy mouth. Her hair bounced sexily as she bobbed up and down before pulling him out and looking back up at him. \"She's really going to enjoy this.\"\n\nHe pulled Molly's legs over his shoulders then, and ran his hands along her thighs to her gorgeously sexy ass. He couldn't see Kelly anymore, but he could still hear the telltale sound of her wet hands stroking the two brothers punctuated by the occasional whimper or moan from her. One or both of them was obviously still fingering her.\n\nHe ran his tongue up Molly's pussy then, causing her to groan in excitement and pleasure as she briefly popped his cock out of her mouth. \"Jesus, don't tease me,\" she pleaded.\n\nHe grinned and pulled her ass cheeks towards his face again, drawing her pussy completely into his mouth as he pushed his tongue deeply inside her for a moment before pulling it out and running his tongue up her slit towards her anus. She let out a low guttural moan and enthusiastically began to suck him in as she safely could without hurting him. Duncan groaned in response, eliciting yet another from Molly. The two devoured each other as they sixty-nined, both hungrily sucking and licking. She pulled on his side then and they spun so that she was on the bottom. He propped himself up for a moment so that he wouldn't choke her, but she quickly pulled him down as he lowered his face to her cunt again, his tongue finding her clit and lathering it down with his saliva. She tasted different than his wife, but it wasn't unpleasant. He never found eating pussy distasteful and Molly's was no exception. She pulled down on his buttocks forcefully and drove his cock deep into her mouth, pushing into the back and causing her to gag slightly. He tried to pull back, but she held him tight, forcing him to gag her again.\n\nExtricating him quickly, she gasped as he pulled back the folds of her pussy to get at her clitoris. Tonguing it for a second, he quickly wrapped his lips around it and sucked, his tongue caressing and rubbing against it.\n\n\"Oh my God,\" she moaned, wriggling underneath him. He could sense that she was about to cum and gingerly sucked on her clit again. \"Oh fuck, yes!\" she moaned around the tip of his cock. \"I'm fucking coming,\" she moaned softly, her stomach tensing and pussy convulsing under his tongue. At least that's what she said, it actually came out sound like, \"Ugh, fug, yeth...I fukig comig,\" as she tried to articulate with his cock still in her mouth.\n\n\"Gah,\" she moaned around his shaft, her muscles finally releasing as the orgasm washed over her and sent her to another plane of existence.\n\nDuncan grinned and slid off of her as she swatted his hands away from her pussy. \"Ugh, fuck... don't... fuck... touch... me yet... please...\" she stammered, obviously still coming. Duncan pulled back a bit, his cock falling into her hair as she slowly worked her way down from the orgasm.\n\n\"Fuck,\" she moaned, sitting up and leaning over to kiss him. \"I'm sorry about that,\" she said. \"I just can't be touched sometimes when I have an orgasm from that,\" she explained.\n\n\"I figured,\" he answered. \n\nHe glanced up and smiled. Kelly was in Drake's lap, slowly bouncing up and down, facing the two lovers on the ground. She had Derrek standing next to her, his cock in her mouth as they intermittently watched the two of them. She smiled and moaned softly, only half paying attention. He smiled when he saw his wife's pussy lips sliding over this other man's cock, coating it with juice from both of their bodies and then repeating again and again. She had one hand between her legs, gently massaging her clit while she repeatedly gagged herself on the other cock, gluck sounds filling the room as she moaned and slithered her hips back and forth sexily. The sight made him smile at how much fun she was having and how much she looked like she really enjoyed what she was doing. He was glad that the trepidation he'd seen earlier had been dissolved completely. He chuckled though, as their plan seemed to have been abandoned.\n\n\"Here we are trying to give them a show and they don't even have the decency to watch us.\"\n\nKelly popped Derrek's cock out of her mouth for a moment. \"Can you blame me with these two handsome studs playing with my pussy? I couldn't help it,\" she said, pouting demurely.\n\nMolly grinned and pulled Duncan to his feet as Kelly bounced slowly up and down on Drake. He had his hands on her hips and was slowly guiding her up and down while Derrek rubbed his cock across her lips and ran his fingers through her hair.\n\nNot to be outdone, Molly took Duncan by the hand and led him over to the coffee table and proceeded to kneel down on all fours.\n\n\"Duncan, Honey, I want you to fuck me so hard I pass out,\" she said, looking back over her shoulder at him.\n\nHe grinned. \"Are you sure? Kelly said I feel bigger in this position. I wouldn't wanna hurt you.\"\n\nMolly reached back and spanked her ass for good measure. \"I can take it, Baby. Get that beautiful cock inside me. I've waited much too long for this.\"\n\nHe needed no other urging and quickly moved forwards to rub the tip of his cock across Molly's soaked pussy. Pushing the head in slightly, he stopped and moved it upwards and then down, across her clitoris and then back again, drawing a frustrated moan and a backwards thrust from her. Kelly giggled at his teasing but quickly began to suck diligently at the cock that was presented in front of her.\n\n\"Kelly,\" she moaned. \"Duncan won't fuck me,\" she cried, frowning pitifully.\n\n\"Duncan Thomas, get your cock in that poor woman, right now!\" she said, pointing her finger at him.\n\nHe chuckled and saluted. \"Yes, Ma'am!\"\n\nGripping both of her beautifully broad ass cheeks, he thrust forwards into her hungry cunt. He felt her pussy stretch briefly to accommodate him as a high pitched yelp of surprise echoed in the room. Molly turned and covered her mouth, a look of mild alarm on her face.\n\nHe smiled and gently patted her rump. \"You asked for this, remember,\" he said. He didn't move though, as he felt her incredibly tight pussy adjusting to him. Gently he thrust a tiny bit forwards, but saw her grimace briefly. He looked down and marveled at her beautifully feminine form as he waited for her to accommodate his size. He didn't understand guys that liked scrawny girls with small asses. A big ass was beautiful, and Molly's was damn near perfect. It wasn't fat, but had a nice womanly curve to it that left plenty to hold on to and use as grips. Not to mention how very, very spankable it looked.\n\nShe finally felt like she was ready for more, and glanced back at him, although there was still a hint of fear in her eyes. \n\n\"I had no idea it would feel that fucking big inside me,\" she moaned, closing her eyes. \"Jesus Kelly, how do you handle this fucking monster?\" \n\nShe groaned and slid gently backwards, pushing his cock deeper before slowly coming to a stop. \n\n\"God,\" she whispered, reaching back and grabbing his hand for support.\n\nKelly didn't seem to hear her at first, intent as she was on pleasing Derrek and sucking on the tip of his cock. The young man had his hand's cradling Kelly's face and was methodically sliding his cock in and out of her mouth as she whimpered in ecstasy. Drake was still slowly sliding Kelly up and down as she moaned softly, her face a mask of pleasure. Duncan figured she was cumming for the umpteenth time and smiled happily. It was odd, that was for sure, seeing his wife with two other men, but it wasn't bad. It definitely turned him on, seeing her in such pleasure. It was like watching a porno starring the love of his life and getting to make love to a beautiful woman while he watched.\n\nMolly slid backwards again, her pussy shivering along his cock as his pre-cum desperately tried to lubricate her passage.",
        "\"Jesus, you feel good,\" he groaned, leaning forward and bracing himself on her back. She pushed backwards yet again and he felt himself completely inside of her. She paused there for a moment and then turned and nodded at him.\n\n\"I fucking love your ass,\" he groaned, spanking her and drawing a low rumble of approval from her. Slowly, he pulled his monster cock out of her pussy, her lips greedily drawing out along with it and hungrily trying to slurp it back in. Her juices flowed steadily now, coating his cock as a long line of pussy drool oozed from her. He pulled completely out and then slowly pushed back in.\n\n\"Oh... my... fucking... God,\" she moaned, her head dropping. \"He's going to make me come so fucking hard.\"\n\nDuncan felt her pussy squeeze and relax several times and finally felt the lubrication starting to do its job. Sliding deeply into her, he looked up and watched Kelly as she looked at him. She smiled around the cock in her mouth as Derrek pulled her hair up out of the way with one hand and pulled her against his crotch with the other. Drake gently pulled her down again, and then back up as his cock pushed deeply into her and then re-emerged.\n\n\"Goddamn you look so fucking sexy, Baby,\" Duncan said. \n\nShe popped the cock out of her mouth briefly and smiled. \"I love you,\" she said, before the cock pushed its way back into her mouth again.\n\n\"I love you,\" he replied. Molly was yelping softly, her head coming back and then falling forwards in time with Duncan's powered thrusts.\n\n\"Fuck, you're fucking destroying my pussy,\" she moaned. \"You're going to make me come so fucking hard.\" Her voice raised in pitch until her yelps were high pitched whimpers of pleasure. She tried to say something but apparently couldn't find the words as Duncan's enormous cock sawed methodically in and out of her. \"Grrgng,\" she moaned, her head lolling forwards as he pulled back. It swung back up, her eyes glazed over as he tenderly thrust in. Again and again the process repeated, her yelps filling the room. Finally, her pussy had endured enough and began to convulse almost violently down on him. He had to stop for a moment for fear of hurting one of them it was so intense. She seemed unable to make a sound for a long moment until something finally released and she gasped in pleasure, her eyes opening widely. He felt her push backwards forcefully and began to fuck her faster and faster. \n\nHis hips slapped loudly against the back of her thighs, his cock sawing in forcefully and back out as her pussy clenched down on him hard. Ripples of muscle pulsed up and down on his cock as she practically staccato screeched in pleasure. A huge smile found its way to her face as she reached back for his open shirt in an attempt to use the ends to pull him forwards harder. Duncan took the cue and thrust deeply, throwing her head forwards before he pulled out and did it again, and then again, and again.\n\n\"Fuu... uu... uuu...ck!\" Molly moaned. Eventually he slowed as she came down from the mountainous orgasm she'd had. She stumbled to her feet and he caught her, lifting her easily into his arms and standing. He leaned into her and kissed deeply on the lips as she whimpered quietly into his mouth. Turning, he smiled and backed up, sliding into the chair they'd occupied earlier. She shook her head and raised a finger. \n\n\"You have to cum,\" she said. \"Just give me a minute.\"\n\nMovement on the couch caught his eye then, and Duncan saw Kelly moaning as another orgasm coursed through her body and she briefly stopped fucking Derrek's cock with her lips. He saw a smile in her eyes as she glanced briefly at him before her attention was drawn back to the cock slowly pushing into her cunt and the one pushing into her mouth. She moaned softly again and began to bounce in their peculiar rhythm.\n\nDuncan smiled, hoping she had a dozen more orgasms before the night was through. He tenderly cradled Molly while she caught her breath and came down off of her orgasm.\n\nShe opened her eyes then and drew his face down to a kiss. \"Thank you so much,\" she smiled. \"I've been wanting that for so long.\"\n\nDuncan kissed her tenderly, his tongue dancing with hers for a moment. \"When did you first want to make love with me?\" he asked.\n\nShe blushed briefly in his arms and leaned into his chest, trailing a finger affectionate across his chest and through the modest amount of chest hair he had. \"Well, when we went camping that time, right out of college. You had just started dating Kelly, and Drake and I were a thing, but not engaged yet.\"\n\nDuncan nodded as he remembered. \n\n\"So... do you remember that we only had the one shower in the cabin? Well, you didn't ever see me, but I walked in on you while you were showering and I saw how beautiful your cock was. That was it. That was when I knew I wanted it.\"\n\nHe chuckled. \"That's a long time to wait.\"\n\n\"I told Drake about it eventually. He kept saying that maybe one day we could arrange something.\"\n\nDuncan nodded and idly played with her breasts. \n\n\"I think he just wanted a chance with your delectable wife,\" she said, leaning back to kiss him again.\n\n\"It's probably true,\" he said, smiling as they broke the kiss. \"But eight years is still a long time to have to wait. I'm sorry.\"\n\nMolly pouted. \"Eventually I resigned myself to the fact that I would probably never get to feel that beautiful thing inside me, filling me up and fucking my goddamn brains out.\"\n\nHe laughed then, causing her to laugh. She turned and drew him up out of the chair.\n\n\"I think we all need a shower,\" Molly said. \"Come on. Drake installed a huge one in our bathroom.\"\n\nKelly pouted briefly, but Molly came and grabbed her by the hand.\n\n\"They're coming too, silly, you can keep fucking them in the shower.\"\n\n\"Oh, goody!\" Kelly said, grinning. She stood then and reached for both cocks that she'd been servicing. \"Come on you naughty boys,\" she said, giggling and leading them down the hallway in front of Molly and Duncan.\n\nFive naked bodies felt like entirely too many before the water was turned on in their shower. It looked like it was two or even three showers, with faucet heads on three walls and one in the ceiling. Duncan smiled widely and briefly admired the construction work.\n\nDrake came over and the two exchanged an awkward look. They were still naked and standing awfully close to another naked man. Duncan laughed at the absurdity of the situation and moved a little bit away. There was a look of acknowledgment between the two that told them both that they were still good.\n\nMolly stepped into the shower and turned the water on. \"Well, we definitely don't want it cold, do we?\"\n\nDerrek excused himself to go and use the other bathroom then, leaving Kelly pouting. \"One of my naughty boys ran away,\" she said with a playful pout.\n\n\"There we go,\" Molly said, beckoning everyone in. She immediately reached for Duncan and leaned in to kiss him. Kelly took the cue and pushed Drake up against the wall, her fingers beginning to gently stroke his cock as she leaned in and kissed him.\n\n\"I'm so glad you guys could be our first real swap,\" Molly said.\n\n\"I know,\" Kelly replied. \"I'm so glad! It wouldn't have felt right with anyone else.\"\n\n\"I couldn't imagine a better scenario,\" Duncan agreed, pulling Molly into another kiss.\n\n\"Goddamn, when can we do this again?\" Drake asked.\n\nDuncan broke off the kiss and looked over as Kelly methodically stroked Drake's cock.\n\n\"You're looking after my wife on Wednesday and possibly Thursday,\" Duncan said with a wide smile. \"I expect by the time I get home, she'll be pretty sore.\"\n\nKelly shook her head playfully at him as her mouth dropped in mock shock. \"Rotten man, you're terrible,\" she said.\n\nDrake drew her face back to him and kissed her again before she slowly slid down and took his cock back into her mouth with a satisfied moan. Standing again, she turned and looked over at her husband.\n\n\"Baby, I'm so glad you convinced me to start trying blowjobs again. I really think it's my favorite sexual activity now.\"\n\n\"Goddamn I like hearing that,\" Duncan said, grinning widely.\n\n\"If I get to play with something like this, I might find myself loving blowjobs too,\" Molly said, stroking him and kneeling down. Kelly quickly followed suit and took Drake into her mouth as Molly took Duncan into hers.\n\nBoth men high-fived as the water flowed over them, the two women at their cocks sucking and slurping greedily at them.\n\n\"I could definitely get used to more blowjobs, especially from you two,\" Drake said. Kelly grinned up at him then and drew him back in to her soft, warm mouth. Duncan heard him moan and felt Molly's hands on his buttocks, drawing him further in and gagging her.\n\nHe watched Kelly turn and look back for a moment, and then, seeming to take the noise Molly made as a challenge, turned back and immediately deep throated Drake again. He groaned and raised his head back as the stream coursed down his body. Kelly glucked repeatedly as she forced his cock deep into her throat. Extricating him quickly, she gasped for air and quickly pulled him back in.\n\n\"God, you're going to make me pop if you keep that up,\" Drake said. Duncan grinned.\n\nKelly immediately pulled him out and squeezed the tip of his cock, the other hand gently squeezing his balls. \"You don't get to cum again until you fuck me, at least once more,\" she ordered.\n\n\"Fuck,\" he groaned. \"Yes, Ma'am,\" he answered quickly. \n\nDuncan chuckled again as Molly wrapped her satin lips around the tip of his cock and began to methodically stroke with both hands as she looked up with eyes that screamed, \"Cum in my mouth!\" at him. Loud slurping noises echoed in the small space until Duncan felt a familiar feeling building. Her hands squeezed tightly as she stroked, almost as if she were trying to pull the skin of his cock off. If she hadn't wet it down so thoroughly with her saliva and his pre-cum, it might have been uncomfortable. The effect it was having on him though, was incredible. It felt like she was trying to pump the cum directly out of his balls. \n\n\"You want me to cum?\" he asked, looking down at the beautiful brunette. She nodded enthusiastically, never taking her mouth off of his cock or slowing her stroking.\n\n\"Oh fuck,\" he moaned, his cum bursting forth from the tip of his cock to fill her mouth. She coughed briefly, whimpering in mild alarm before swallowing as another spurt filled her mouth. Another whimper and swallow were followed by a low groan of pleasure deep in her throat. An involuntarily shudder coursed through him as she hungrily slurped the cum from his cock, the thick ooze sliding into her mouth as she moaned and stroked him faster and faster. She lovingly swallowed the load as her tongue curled and pooled another spurt of it. He felt her draw it back into her throat and groan in unmistakable pleasure as his thick cum slid down it. Again, a spurt of warm cum filled her mouth, and the whimper and swallow followed, echoed by a pleasurable groan. She squealed in pleasure then as he finally slowed and then stopped, though she hadn't stopped swallowing his seed. Raising her arms in victory, she lovingly slurped all of the remaining cum from the head of his cock, running her tongue across the tip and slurping the final drips as they emerged from the hole. Breaking her lip-lock, she ran her tongue across her lips seeking more of his spunk to swallow. She'd obviously thoroughly enjoyed devouring his load.\n\n\"I'm so glad I was able to bring you off with my mouth,\" she said, squeezing him tightly and slurping noisily as she started to stroke him swiftly, as if she were trying to bring him off again. She looked up as her tongue slathered over her lips desperately seeking any remaining semen for her to swallow. \"That was fucking yummy,\" she said, leaning forwards and nibbling his chest. \n\n\"Honey,\" she said, turning and looking at Drake. \"The more you let me do that with Duncan, the more I'm going to learn to love it,\" she said, smiling.\n\n\"Well, shit,\" he said, grinning. \"You free tomorrow, Dunc'?\"\n\nDuncan chuckled weakly and stepped back into the water stream. A knock on the door drew their attention back to Derrek.\n\n\"My shower was too lonely, so I figured I could see what mischief I could get into in here.\"\n\n\"I'm sure we could find some trouble together,\" Molly said as she opened the door and ushered him in. Duncan stepped out of the way as she leaned back into the stream and let the water wash all the excess saliva and cum away.\n\nDerrek moved past her, or tried to before she stopped him.\n\n\"Honey,\" she said, looking over at Drake. \"If you let me fuck your brother, I'll see if Dana will let you fuck her.\" She grinned wickedly at him.\n\nDrake rolled his eyes then and looked over at her. \"My love, if you want to fuck my little brother, you can go right ahead.\"\n\n\"Do you not want to have sex with my sister?\" she asked, looking over at him with an \"Oh no you didn't!\" look on her face.\n\n\"Well, she looks like you, acts like you, has bigger boobs than you... yeah I pretty much do want to nail her.\" He grinned widely at her as she splashed water at him. \"In all seriousness though, little brother, if you're too uncomfortable with it, you certainly don't have to put up with my wife's advances.\"\n\nMolly stuck out her tongue and flipped him off.\n\n\"On the other hand, I can speak from firsthand experience, and I know my brother from another mother Dunc' here can attest to the fact that, my wife is one devastatingly hot piece of ass in the sack, if you know what I'm saying.\"\n\n\"I think it's pretty clear that you're saying I'm one hot piece of ass in the sack,\" Molly said, looking at him like he was an idiot. \"You big idiot.\"\n\nHe shrugged in response. \"I've got my dick in someone's mouth that is really good at giving head, and it looks like Duncan has you turned on beyond words. You can't expect me to know what the fuck I'm saying.\" Kelly giggled at his knees as she sucked him off.\n\n\"Seriously bro,\" Drake said. \"I'm cool with it, and I know that Molly thinks it's kinky and in her current state, you really don't want to miss being with her. I know you want to, so go for it.\"\n\nDerrek smiled and turned to him. \"You sure? I don't want to fuck up Christmas.\"\n\nDrake laughed. \"If this goes like I think it will, Molly will be very well fucked during the holidays.\"\n\nGiggling, Molly clapped excitedly. \"God I hope so,\" she said, reaching out for her brother-in-law. \"I could definitely get used to being fucked through the holidays. When one of you Taylor boys gets tired, I'll just swap you out for the other one. God, I might never stop having sex,\" she joked.\"\n\nKelly was still slowly bobbing at Drake's cock, her warm lips greedily slathering saliva and pre-cum across its length. Duncan took a seat in a raised tile corner and found himself as a happy spectator. Molly pulled Derrek out of the shower and reached over to the light switch to turn on the heater. \n\nOpening the doors, the three in the shower turned to watch. Kelly moved to the front of Drake and bent forwards, wiggling her rump in his crotch.\n\n\"Come on, fuck me already,\" she said, turning and smiling at him, \"or I'll have to tell my husband on you.\"\n\n\"She's damn near insatiable,\" Drake said, raising his eyebrows at Duncan and laughing easily.\n\n\"You'd better do what she asks before she breaks your dick off with her pussy,\" he said, drawing a laugh from the two of them.\n\nShe moved forwards, lowering her head to Duncan's cock and drawing him into her warm mouth. She popped him out of her mouth briefly, though, and looked up. \n\n\"I'm unsure of the rules of swinging, am I allowed to suck my own husband's cock while we're swapping or is that like a penalty?\" she asked.\n\n\"That's totally a penalty,\" Molly said. \"Your punishment is that you have to suck his cock.\"\n\n\"Goody!\" she replied, grinning and leaning forwards to suck Duncan lovingly back into her lips.\n\nKelly moaned softly as Drake entered her from behind again. Duncan felt her lips slide slowly back down his shaft and then felt her body slide forwards as his friend began to slowly fuck his cock in and out of her pussy. A pulse of electricity raced through him, sending rivers of pleasure crashing through his body. He put one hand on the back of Kelly's head and felt her move her hands away so he could control how she was sucking him off. He began to slowly push her head down before letting her bob back up, his cock pushing again and again to the back of her throat and causing her to gluck loudly each time he did so. She moaned and began to squeeze his thighs, whimpering in pleasure as another orgasm hit her. Drake groaned behind her, trying to stave off his second orgasm of the evening without having to stop fucking her.\n\nDuncan looked into the bathroom and saw Molly slide close to Derrek. \"What do you think about fucking your brother's wife?\" she asked, causing Derrek to smile and blush slightly.\n\nDuncan laughed, but it turned into a moan as Kelly lovingly swallowed as much of his cock as she could in that position. She was being thrust forward methodically as Drake sawed his cock in and out of her pussy, bouncing her forwards on the bulbous head and causing her to moan in pleasure. Drake gripped both of her hips and began to power into her, his cock thrusting deeply before emerging and plunging home.\n\n\"Is my wife enjoying getting fucked?\" Duncan asked her, before turning to watch Molly.\n\n\"He's fucking me so good, Baby,\" Kelly moaned. \"I've lost count of how many times I've cummed on his cock. Do you like watching him fuck my tight little pussy?\" she asked, groaning and sucking at the head of his cock.\n\n\"I really do, Baby,\" he said, smiling.\n\n\"Good, because I love being fucked while you watch, Baby.\"\n\n\"Good,\" Duncan said, pushing her face back down to his cock and grinning at Drake. She giggled and hungrily swallowed him back down, her lips sliding slowly and tightly up and down his shaft.\n\nThe other two seemed to be taking their time, even though they were both naked. Derrek was idly groping her breasts while she looked up at him demurely, her hands secretively rubbing the tip of his cock every few seconds.\n\n\"Would you like to fuck me first, or should I suck your cock,\" she asked him sliding to her knees.\n\nHe smiled. \"I'll let you choose, whatever would be less weird.\"\n\nShe giggled. \"Derrek, I'm going to fuck your brains out before we're done. It's not going to be weird for me at all.\" She went completely to her knees then and leaned forward to suck his cock into her mouth. She immediately pulled him as far in as she could, her lips sliding wetly back as she withdrew him and started forwards on him.\n\nDerrek looked like he was going to faint then, staggering as she sucked the tip into her mouth and groaning in pleasure.\n\nDuncan smiled, turning his attention back to his softly whimpering wife. \"Does our little slut feel good?\" he asked, looking up at Drake.\n\nThe bald man laughed then and slapped her on the ass, sending her head back and moaning as an orgasm hit her. \n\n\"Fuck, she's got a wonderful pussy,\" he groaned, clearly fighting his orgasm. \"I can't wait until you let us fuck her again.\"\n\nKelly stopped attempting to suck his cock then and simply let herself be fucked. He looked like his cock being ground down by to a stump by her latest powerful orgasm.\n\n'Fuck, Baby,\" Kelly said, grasping at Duncan's hands and squeezing hard. \"He's making me cum so fucking hard. Ungh... God...\" she groaned. Her face looked like she was in pain, but Duncan knew better.\n\nMolly turned and looked up at him then, seeing that his erection wasn't being used. Derrek had moved around behind her and was sliding his own dick up and down her pussy, eliciting moans and soft yelps from her.\n\nBeckoning him over, Molly pulled him down to his knees and immediately started to suck his cock into her hungry mouth. \"God damn, do I love sucking this cock,\" she said. \"I could really, really get used to this.\"",
        "Behind her Derrek thrust into her, causing her to moan again.\n\nFuck... I could definitely get used to this too,\" she said, turning back and reaching for his hand. \"I don't care if you are my husband's brother, you can fuck me whenever you want,\" she groaned, pushing back as he began to slide his cock in and out of her.\n\nKelly had finally opened her eyes and recovered from her mind-erasing orgasm and looked up. \"Bitch,\" she said, splashing water at Molly. \"You stole my other cock!\"\n\nMolly giggled and pulled Duncan out of her mouth. \"You weren't using it at the time, you hussy.\"\n\nDeeply she sucked Duncan's cock in again, the tip pushing into the back of her throat and gagging her a little. Moaning in what looked briefly like pain, Molly began to orgasm then as Derrek continued fucking her cunt, her throat eliciting more gagging noises punctuated by excited moans of pleasure. Saliva dripped from the head as he pulled out, which she hungrily slurped into her mouth before wrapping her lips around him again to thrust methodically in and out of her pussy. \n\n\"Guh, guh, guh,\" she said, unable to speak as Duncan pushed his cock into her mouth and her pussy convulsed down on her brother-in-law. Duncan saw her body tense up briefly before she relaxed. Turning, she glanced back at Derrek and grinned wickedly.\n\n\"Do you have another round in you?\" she asked. \"I want you both to cum on my tits.\"\n\nDuncan shrugged with a grin and pointed her face back to his cock, rubbing it across her lips again as Derrek rubbed his across her pussy again. \"God, fuck...\" she moaned, pleasure spilling out from their touch.\n\n\"I'm good to go,\" Derrek said, nodding.\n\nDuncan glanced back over and saw Kelly facing Drake as he sat on the tile bench that he himself had been on earlier. Her leg was up on the shelf and Drake was pushing his still painfully erect cock down so that it stuck straight out. Doing this allowed Kelly to thrust her hips gently forwards and push his dick deeply into her throbbing pussy. Her head lolled back and her eyes stared at nothing as she whimpered softly, thrusting again and again. She seemed lost in an ocean of pleasure. Drake turned to look at the group on the ground and smiled at his wife.\n\n\"God, I want you both to cum so bad,\" Molly groaned. \"Please don't stop fucking me Derrek, I'm going to cum agai...\" she started, but was unable to finish as yet another orgasm hit her. Derrek groaned, clearly fighting his own. Molly was unable to speak or move, her body rigid from her current state, her muscles locked tight and her lips squeezing down around Duncan's thick shaft.\n\n\"GAH!\" she said, her lips fluttering around his cock. She weakly looked up, her eyes briefly rolling back and forth in her head as Derrek was able to suddenly begin his thrusting again, rocketing her orgasm to another level and turning her into jelly. Duncan felt her weakly try to suck at his dick, so he cradled her face in both of his hands and began to thrust into it. He felt the back of her throat and pushed gently. She was too spent to resist, and he slid in for a moment before her brain took over and realized how far he'd gotten into her throat. Stretched to the limit, she began to move her face again as her orgasm finally subsided. She didn't extricate him though, but pushed her face harder against him, a flat gagging sound emanating from her throat as she fought to maintain her current position on him. Finally, her need for air won out and she hurriedly withdrew his cock as she gasped and her chest heaved, crying out in pleasure as Derrek continued to slam into her from behind. The young man quickly yanked his cock out and began to quickly stroke his shaft as a spray of cum erupted from the tip and arced across Molly's back. Again and again, stream after stream shot across his sister-in-law as her own orgasm seemed to subside.\n\nShe glared up at Duncan then, taking his cock back into her mouth and seemingly ignoring Derrek as he blew his seed across her gorgeously curvy ass and the small of her back.\n\n\"Fuck,\" she moaned as she renewed her efforts at his cock, still glaring up at him. \"Who the fuck... gluck... so fucking good,\" she moaned. \"Who the fuck... gluck... do you... gluck... think you are...gluck... using me like... gluck... gluck... gluck... I'm some common... gluck... streetwalker... gluck.\" As she spoke her broken sentence she forcefully pushed forwards onto Duncan's cock and gagged again and again, his groans of pleasure filling the small room. \n\n\"If you keep gluck... treating me like... gluck... I'm just... gluck your own personal... gluck... gluck... gluck... whore... gluck..., I might just... gluck... cum again... gluck... gluck... gluck.\"\n\nFinally, she managed to stop sucking him off and laid down on the tile floor as Duncan began to stroke above her. She couldn't help herself though, and reached up to pull his cock down into her mouth once again. Duncan obliged her and leaned forwards so that he could more easily fuck her face.\n\nHe glanced over at the shower as Drake turned off the water. Kelly slid down to the floor as he shut the doors behind them and knelt down on all fours again. Obediently, Drake slid in behind her and grabbed a handful of her hair as he began to fuck deeply into her, thrusting and sending ripples of pleasure coursing through her body. Duncan couldn't have been happier for her. She looked thoroughly pleasured and the scene before him renewed his own excitement. He felt Molly's warm lips enveloping him and trying to draw him deeper into her mouth. He slid his hips downwards for her as she reached up and curled her hand around the base of his cock so she could stop him if he started to choke her too much.\n\nHe didn't have to wait long though, the exciting new position and the way Molly's lips felt around him were intoxicating and entirely too exciting for him to last long. With a great cry, he began to cum, briefly trying to pull his cock out so that he could cum on her tits as she had asked him earlier. Molly seemed to growl at him then as he felt her swallow, her lips and tongue tightening around his shaft as he pumped another stream into her hungry mouth. Squealing in pleasure, he felt her swallow his thick load, crying out in pleasure as she lifted her head to slide her lips tightly up and back down his shaft, forcing more and more cum to flow into her greedy mouth where she swallowed again and again, whimpering in pleasure each time she did so.\n\nFinally, he stopped dumping his thick cum into her mouth as his orgasm ceased. She continued to scrub her lips up his shaft and then sucked forcefully as she withdrew downwards, almost as if she were trying to pull even more cum from the large organ. Duncan finally pulled his cock out of her mouth, much to her disappointment. She spun over quickly and hurriedly took the tip back into her mouth, seemingly almost frantic in her attempt. She playfully spilled some of his warm spunk over the head of his cock so she could play with it.\n\n\"You're cum is so fucking delicious,\" she moaned as the cum oozed around her mouth and around his head, her tongue slathering thick gobs of it across the tip and into her moaning and quivering mouth where it was eventually swallowed.\n\nHe groaned in continued pleasure and looked down at her again. \"You said that you wanted me to cum on your tits.\"\n\nShe giggled and shrugged.\n\n\"I couldn't help it,\" she said, swallowing the last big portion of his cum. \"I felt that first spurt of your yummy load hit my taste buds and I wanted to swallow it. The rest was a forgone conclusion. I don't know how the hell I'm going to be able to stand to be around you without wanting your cum my mouth.\" She turned and looked at Drake as he powered into Kelly. \"Did you hear that Honey?\" she asked. \"I think Duncan has gotten me addicted to swallowing cum.\"\n\nDrake smiled. \"My own little cumslut!\" he exclaimed, his smile widening. She smiled back and nuzzled against Derrek for a moment before switching back and nuzzling Duncan.\n\n\"A girl could get used to this much attention,\" she murmured.\n\nKelly began to moan again as another orgasm slammed into her, her high pitched yelps of pleasure filling the bathroom as Molly snuggled up against Duncan and Derrek.\n\n\"You gonna cum again, Baby?\" Molly asked, looking at her husband. \n\nHe shook his head, slowing his thrusting as Kelly finally opened her eyes and glanced back at him, pouting. \"Why not?\" she asked.\n\n\"It's certainly not your fault, Princess,\" he said, swatting her rump playfully and thrusting briefly in. She squealed in pleasure for a moment, her eyes fluttering.\n\n\"It's just that I think my balls have said good night, even though my dick won't seem to quit,\" he said, sawing into Kelly once more.\n\nShe moaned softly and swayed forwards.\n\n\"Well it looks like my wife could definitely stand some more fucking,\" Duncan said, grinning. \"You up for it Derrek?\" he asked.\n\nThe young man chuckled and shook his head. \"I really wish I could raise my dick from the dead, but I fear that he's finished for the night.\" Drake seemed to be done too, though, and sat back onto the tile floor, Kelly falling back against him.\n\nThe reality what had finally occurred that evening seemed to hit everyone at once and silence filled the bathroom.\n\n\"Holy shit,\" Derrek said, echoing everyone's thoughts. \"That was one hell of a poker game!\"\n\nEveryone looked at each other and began to laugh heartily, thoroughly enjoying the experience they'd shared and understanding how important it had been for both couples. Their smiles were broad on their faces as the five of them relaxed and caught their breath.\n\nMolly was the first to try and stand after a few minutes of rest, and moved to shaky legs before she turned back towards the shower. \"I think we need another washing,\" she said, \"though I definitely think we need to behave ourselves in there this time.\" She steadied herself on the counter before she entered. \n\nThere was an affectionate groping this time as the five of them showered, but nothing of the caliber of the first time around. This was just a cursory washing, followed by a little fondling during the toweling off phase.\n\nDerrek retreated eventually and reappeared dressed. He slapped his brother on the shoulder and went to hug Molly and then Kelly.\n\n\"Thanks for coming man,\" Drake said. \"I'm glad you could fuck my wife.\"\n\nDerrek laughed and turned to Duncan. \"Thank you so much. I mean it. Your wife is amazing.\"\n\nDuncan nodded and smiled at him, unsure of how to respond but did shake his proffered hand. Kelly wasn't unsure of how to respond, and came up to fondle his cock one last time.\n\n\"I sure hope this wasn't the last time we get to play,\" she said, looking up at him naughtily. \"I'm sorry you didn't get to fuck me with that beautiful cock, naughty boy.\"\n\nHe smiled and kissed her briefly before he turned and left.\n\nDuncan glanced at the clock then, and groaned. It was a little past midnight.\n\n\"No, you guys don't need to leave yet,\" Molly said. \"We should talk. Let's go get in our bed. It'll fit all of us.\"\n\nDrake nodded in agreement. \"Hell yeah,\" he said. \"Y'all are probably too fucked up to drive right now anyways.\"\n\nDuncan chuckled. In truth his legs were a little shaky. He glanced at Kelly and pulled her to him for a brief kiss. They both agreed to stay a little longer and turned to follow Molly as she led the four of them down the hallway to their bedroom and their gargantuan bed. \n\n\"Can you guess which side is mine?\" Drake asked.\n\nDuncan chuckled, seeing one side with around a dozen pillows and the other with one.\n\n\"Hrm, let me see,\" he joked.\n\nBriefly disappearing, Molly got the group some much needed water bottles from her fridge and passed them around before sliding into bed as she reached for Duncan.\n\nKelly slid into bed and reached for Drake. She sighed happily as he slid in behind her and kissed her on the shoulder. Reaching for some pillows, she stuffed them underneath her head as Molly caressed her exposed breast. Duncan smiled and leaned over to kiss her before sliding back in behind Molly and spooning up next to her.\n\n*****\n\nKelly\n\nDrake reached down and pulled a thin sheet over the two of them, Duncan following suit and doing the same for himself and the gorgeous brunette he was snuggled up against.\n\n\"Man, I'm so glad you guys were the ones we shared with,\" Kelly said, echoing Molly's statement from earlier. \"It's so awesome that our first time was so much fun!\"\n\nMolly smiled and nodded. \"I feel like I could sleep for a week,\" she said. \"But you're right. I don't think Drake and I have been this worn out from sex since we were in college.\"\n\nKelly grinned. \"Can you imagine if we started doing this back then?\"\n\nMolly grinned and the four of them laughed easily for a bit.\n\n\"God, we'd be two very happy women,\" Molly said, \"not that we aren't already.\"\n\nThe couples began to softly talk about the session, what they liked best and what concerns they had.\n\n\"I really enjoyed having two men to play with at the same time,\" Kelly said. \"It was all so... just... so much to take in. You know?\" she asked, looking at Molly.\n\nThe brunette nodded. \"I know. I couldn't concentrate on one at a time and it was just this jumble of pleasurable things in my head. One was stimulating my pussy and I was getting immense pleasure from sucking the other. It was like the two sensations were feeding into each other.\"\n\n\"Exactly!\" Kelly said, smiling.\n\nMolly turned and looked at Drake then. \"Baby, I'm serious about wanting to suck your dick more. I don't know what it is, but being with Duncan has actually initiated a change in me.\"\n\nKelly felt him smile against her shoulder.\n\n\"I'm glad, Baby,\" he said. \"I really enjoyed watching you have all that fun.\"\n\n\"I'm just so glad that none of us has any jealousy issues,\" Kelly said, looking around at the smiling group. She caught a look in Drake's face though, and turned to face him.\n\nHe smiled at her before she glanced back at the other two. They seemed to have engaged in a private conversation and was talking closely with each other.\n\n\"What is it?\" Kelly asked. She snickered when she felt his fingers brush against her pubic hair, pushing lower and beginning to gently rub her clitoris. \"Mmm,\" she moaned.\n\n\"I'm just a little concerned is all,\" he whispered. \"I've never made Molly cum that hard,\" he said. \n\nKelly nodded, but kept quiet to let him finish.\n\n\"I mean, I've never had an impressive cock... and I'm not jealous of the time she and Duncan shared, I'm glad they did. I'm really glad... I just...\" he sighed, still absentmindedly rubbing her pussy. She parted her legs slightly to let him push deeper, and moaned softly as his strong fingers slid into her. Turning onto her back, she looked up at him and smiled.\n\n\"Duncan's cock is big, and it's intimidating,\" she agreed. \"But I'll tell you something that I probably shouldn't. Even though you aren't as big down there as he is, yours was just as much fun for me to play with.\"\n\nDrake turned and looked at her, genuinely surprised.\n\n\"That's not just catering to your ego, either,\" she said. \"With Duncan, I've got to work to get his as far into my mouth and throat as possible. He's such a fan of deep throating me, that it's hard to give him a blowjob without it. Doing that on his dick is hard on my throat, and I can't do it for nearly as long as I would be able to with you. With you, it's not as hard. I can deep throat you many more times that I can him, and easier. It's easier on me, easier on my throat, which means I can do it more. Bringing pleasure to other people and doing things for them is what brings me pleasure. Seeing how much I was able to excite you and your brother; seeing how much you were enjoying me sucking your cocks, it was all so exciting for me. I loved it.\"\n\nHe gently plunged his fingers into her pussy again, eliciting another weak moan.\n\nShe cleared her throat and tried to focus. Shaking her head, she looked back up at him.\n\n\"I guarantee that Molly is more than satisfied with what you have, she's specifically told me before. So what if it's not as big as my husband's. Do you know how many times you made me orgasm tonight?\" she asked. \"I sure don't because I lost count!\"\n\nDrake chuckled then and nodded, leaning down to kiss her soft lips. She whimpered into him and wrapped a hand around the back of his hand to pull him down to her.\n\n\"You're amazing,\" he said, breaking the kiss.\n\nShe smiled and shrugged. \"I love my husband, and that's never going to change, just like it's never going to change for you and Molly. But goddamn if it's not fun to fuck you two.\"\n\n\"Likewise,\" Drake said, his fingers sliding in and out.\n\n\"In fact, I had so much fun sucking that cock you have and fucking it, I'll do it again. Anytime you want a blowjob, I'll definitely be happy to give you one. That's how much I like your cock. You don't have to be huge to make a woman happy, and Molly is living proof of that, so be happy with what you have. You are an incredible lover, Drake, and I can't wait until Wednesday.\"\n\nHe smiled and pushed her over to her stomach, sliding his legs over her buttocks and reaching down behind her to slide his cock into her tender pussy. She smiled and moaned in pleasure as she felt his delicious cock slide into her again. They glanced over at Duncan and Molly and saw the two of them kissing deeply, the cover thrown off and Molly's legs spread wide to accept Duncan's thrusts.\n\n\"We're just a bunch of incorrigible little sluts aren't we,\" Kelly giggled.\n\nDrake grinned and thrust into her again. Molly turned on her side, pulling Kelly out from under Drake and pulling her into a tender kiss as both men adjusted their positions and entered the girls again.\n\nBoth women gasped and moaned into each other's mouths, the cocks now present inside them drawing them further into their throws of passion. Kelly gently pushed Drake off once again, cocking her finger for him to follow and switched her head to the other end of the bed. Leaning forwards, she put her face close to Molly's pussy as her husband plunged his huge cock in and out of it slowly, methodically.\n\nMolly moaned as Kelly leaned forwards and ran her tongue as far as she could across her pussy. Kelly moaned in turn when she felt Molly pull her own pussy up to her face and plunge her tongue into it. Both girls fell into a sixty-nine position, and began to devour each other, tongues lapping hungrily at each other's cunts. Kelly pressed her lips and tongue deeply into Molly, pulling hard on her ass and lovingly slurping at her friend. Both girl's juices were flowing from sopping pussies, drooling into each other's mouths as they slathered their tongues across each other's cunts. Kelly moaned in pleasure as she slurped her friend's juices, the strange taste exciting her and pushing her closer to an orgasm as she rolled the flavor around in her mouth, her tongue pulsing forcefully against Molly's clitoris. She felt and heard Molly slurping and slathering at her own pussy, her friend's warm tongue diving in to retrieve her juices before swallowing them down.\n\nDuncan and Drake seemed to have the same idea at the same time, because suddenly her husband's cock was in her mouth. She moaned happily and accepted it, slathering her tongue over it and whimpering in lust. She felt Drake's cock push past her pussy and felt Molly's mouth open to accept it, her moan filling the room just after.\n\nSmiling to herself, Kelly reached up and pushed Duncan's cock into Molly's pussy as she did the same to Kelly. More moans filled the room as all four of them felt pleasure beginning to swell in each of them.\n\nSliding onto her hands and knees as Molly moved to her back, Kelly moved to a doggy style position as Drake slowly began to fuck her again. He was gently sliding into her this time, not the hurried, pussy pounding sex from earlier or the slow and sloppy sex in the shower. He was methodical, deliberate. Duncan positioned his cock at Molly's entrance and Kelly helped him push his cock deeply into her friend. She felt Molly's warm tongue on her cunt then as Drake fucked in and out of her thoroughly drenched mound. She began to cum then, her muscles grinding down hard yet again on Drake's cock.",
        "Molly slid down until she was underneath Kelly's breasts and Kelly was above hers. Both women began to lovingly lick and suckle at each other's nipples, driving their excitement even higher. Duncan gripped Molly's fleshy, womanly hips and began powering down into her, his cock thrusting again and again as another orgasm slammed into the brunette, this one sending her body rigid again.\n\n\"Fuck,\" Duncan groaned, feeling her pussy clenching tightly down on him. Kelly knew the sound in his voice and knew he was about to cum.\n\n\"Fucking cum inside me,\" Molly begged. \"God, please fucking fill me up,\" she moaned, her pussy still clenching down on him as wave after wave of endorphins slammed into her.\n\n\"Oh God, oh God, oh God,\" she moaned. Kelly saw Duncan cumming then, filling her friend's cunt up as he groaned in pleasure, his cock still plunging in and out, with white rivulets of his seed spilling out and running down the back of Molly's pussy.\n\nDrake gasped then as she glanced back and he began to pull out. Kelly shook her head and fucked backwards onto his cock again, the first spurt shooting deeply into her pussy.\n\n\"Fuck,\" she moaned, loving the feeling of his cum filling her up. She yelped softly as he slammed into her again and again, a stream of warm cum filling her pussy each time he did so. \n\n\"I can fucking feel you filling me up,\" she moaned. \"Oh my fucking God,\" she moaned, her orgasm reaching a new height as her cunt clenched down on the cock inside of her.\n\nAll four moaning and gyrating figures in bed finally began to slow down, eventually coming to a stop and collapsing into bed. Chests heaved in exhaustion as they lay strewn across the bed, desperately trying to catch their breath.\n\nSilence enveloped the quartet, the room only filled with the sound of their labored breathing.\n\nDrake is the one that eventually spoke first. Turning up on an elbow, he reached out and grasped his wife's hand.\n\n\"I think we actually just fucked our brains out today. Holy shit.\"\n\n\"Jesus Christ,\" Duncan said, a laugh escaping his lips. \"I couldn't agree more man. I feel like I've been beaten.\n\n\"God,\" Molly moaned. \"My poor pussy is going to be so sore tomorrow,\" she said.\n\n\"Mmm,\" Kelly said nodding. \"Mine too.\"\n\nBoth men began to stammer an apology but the girls snickered. \n\n\"Oh men,\" Kelly said, sighing, \"you guys are really naive sometimes.\"\n\n\"Our vaginas tend to get sore after sex sometimes, but don't worry, it's a good sore,\" Molly explained. \"It's something that women just have to deal with. Don't worry though, we heal quickly and are fuckable again before you guys ever have to know about it.\"\n\nThe four laughed and lay there for another few minutes before Duncan and Kelly finally got up and got dressed.\n\nDrake and Molly threw on some cotton robes and walked them through the house to the front door.\n\nKelly leaned in and kissed Molly deeply, the two women sighing and almost melting into each other before sliding apart.\n\nDuncan reached out and shook Drake's hand warmly. \"I appreciate you treating Kelly so well,\" he said. \"I was worried that her first \"other guy\" would be rough with her.\"\n\nDrake smiled and clapped his friend on the shoulder. \"Likewise man. I couldn't have asked for a better first swap partner for Molly. This is going to be one fond memory.\"\n\n\"One for the history books,\" Kelly said, sliding over and kissing Drake as he wrapped her in a hug. Beside them, Duncan pulled Molly to him and kissed her deeply, his hand moving up to caress her cheek.\n\nShe looked up at him sweetly then. \"Thank you for being my first,\" she said, smiling, a single tear coming to her eye.\n\nHe smiled and moved his lips up to kiss it away. \"You okay?\" he asked.\n\nShe nodded. \"Don't worry. They're good tears,\" she said.\n\nEventually, the two couples parted. \"We'll see you guys soon,\" Duncan said, smiling and waving.\n\n\"Take care,\" Drake called.\n\nKelly grinned and waved at the two as Duncan pulled her door open and lifted her into the truck. She scooted immediately over to his side of the truck and latched onto him.\n\n\"I wonder if we'll make it to work on time tomorrow,\" he said, chuckling. \"I think we might have to make it a half day for the both of us.\"\n\nKelly smiled. \"I'm okay with that,\" she said quietly, nuzzling his arm affectionately.\n\nAs they drove home, she continued clutching at him, the smile never leaving her face. As they pulled into the drive and he cut the switch off, she slid out behind him and pulled him into a hug as they gazed up at the millions of stars in the Texas sky above them. She drew his face down then and kissed him on the cheek.\n\n\"We did it,\" she said, smiling.\n\n\"We did,\" he agreed.\n\n\"No regrets?\" she asked.\n\n\"No regrets,\" he answered.\n\n\"I love you,\" she said.\n\n\"I love you.\" he replied.\n\nTheir exchange finished, they stood in silence, enjoying each other for a moment in the cool night air and then finally headed inside. Once there, they quickly brushed teeth and showered off quickly again before sliding their thoroughly exhausted bodies into bed. Both were asleep in minutes.\n\n*****\n\nDuncan\n\nDuncan woke the next morning to light streaming through the window. He groaned and felt Kelly stirring beside him. He looked at the clock. It was 9 am. He sighed and slid over to spoon up against his wife.\n\n\"Mmm,\" she murmured, half awake. \"What time is it?\"\n\nHe kissed her neck gently and nuzzled her for a second before answering. \"It's just after 9.\"\n\nShe sighed and turned, her mouth quickly finding his as they kissed deeply, passionately.\n\nDuncan looked down at her and smiled. \"If I were a younger man, I would definitely reclaim your pussy as mine right now,\" he said.\n\nShe giggled. \"You're such a sweet talker,\" she said. \"My poor pussy couldn't take your big dick right now, my love.\"\n\nHe nodded. \"I know, I just wanted you to know that I haven't forgotten that we need to connect with each other as soon as possible.\"\n\nShe smiled and nuzzled his chest. \"We will, my love. I promise,\" she said, looking into his eyes and kissing him.\n\nHe smiled in response.\n\nThe two of them snoozed and spoke quietly with each other for another thirty minutes or so before finally rousing and showering again and dressing for work.\n\nTrudging off to their jobs, they both zombied out for the rest of the day before they came home and fell into bed for a nap right after they got home.\n\nThe nap was only around 30 minutes, but it seemed to renew their energy a bit. Duncan packed what he needed for the trip and they had a quick meal before they slid into bed to talk and watch a movie. Around 9, they fell asleep again.\n\nIn the morning, they awoke at the same time and gently began to kiss each other. He felt Kelly reach down beneath the sheets and begin to fondle his cock.\n\n\"Are you sure you're physically okay for this?\" Duncan asked her.\n\n*****\n\nKelly\n\nShe smiled and nodded, loving his concern for her well-being. She kissed him again and moved down under the sheets to reestablish her mouth's relationship with her favorite piece of flesh. Sucking his cock into her mouth, she whimpered as he moaned. Her lips sucked lovingly at his shaft, sliding up tightly and slathering the saliva and pre-cum around on his shaft. Deeper and deeper she pushed him, knowing how much he loved deep throating her and pushing her throat to its limits. This was her time to reconnect with her the love of her life and she wasn't going to half-ass it.\n\nHe groaned in pleasure as she ran her tongue around the tip of his cock. Pulling his dick out, she moved lower, drawing one of his pendulous balls into her mouth and sucking on it gently. She moved his testicle softly around on her tongue, moaning quietly in time with his gasps of pleasure before she switched and sucked the other one in with her lips and tongue.\n\n\"Oh, God,\" he moaned, but she didn't slow, her lips moving back to slide slowly down his cock and tightly suck as she slid the magnificent organ back out of her lips.\n\n\"Fuck,\" he moaned, \"I think you've improved since last night.\"\n\nKelly grinned and pulled him free for a moment. \"I've had a little practice since we were together last.\"\n\nHe chuckled and pulled her hips towards his face. Excitedly, she slid her thigh over his head and whimpered on his shaft as she felt his warm tongue slide against her slit, her juices beginning to flow into his beard. Duncan groaned hungrily between her pale thighs as she pushed his cock deeper into her mouth, stretching it and eliciting a gluck from her throat. She concentrated, relaxing her throat and breathing for a second as her tongue wiggled around his shaft before she pushed him gently deeper. He slid further into her throat than he'd ever been before, and she excitedly tried to go further, but only succeeded in gagging herself. Extricating him quickly, she twirled her tongue around the long line of slobber, saliva, and pre-cum that hung between it and the tip of his cock as she caught her breath. Recovering quickly, she dripped the string of drool and seminal fluid on to the tip of his cock and lowered her lips to it again, slathering the juice down across his shaft as her lips tightly embraced him and slid forcefully downwards, lovingly massaging his shaft as she went. She was determined to make this her most pleasurable blowjob yet.\n\nHe groaned, momentarily losing his focus on slurping at her cunt, but quickly renewed his efforts. She wasn't going to last long as he worked his powerful tongue across her clit and pushed it deeply in before settling into a pulsing rhythm up and down her pussy. She whimpered softly and returned her lips to his cock quickly, pursing her lips and lovingly sucking the tip for a second before she began to slide lower and lower, her lips scrubbing down his shaft and spreading their ample juices further down his manhood. She reached the back of her throat with his cock and swallowed again, pausing for a moment to breathe before she tried to deep throat him. She relaxed her throat once again and slowly pushed. His cock seemed to slip in easier, but this time she controlled her excitement and continued to push lower, his massive organ stretching her throat to its limit. Deeper and deeper she forced him, his cock sliding tightly between her lips. His moaning and wriggling told her that he was thoroughly enjoying her efforts. Finally, something in her throat seemed to relax a little more, and she slid him completely inside of her for the first time.\n\n\"Oh my fucking God,\" he groaned, pulling upwards on her butt cheeks for a moment as he reveled in the feeling of his cock completely down her throat.\n\nKelly's excitement swelled and threatened to burst as she fought to keep him as deeply as she had him now. Her lips pressed into his pubic hair as she wriggled them lower and lower, millimeter by millimeter. Finally, her need for air won out over her need to suck her husband off and she quickly extricated him, gasping for breath even as she began to methodically stroke his saliva drenched cock.\n\n\"Goddamn,\" he moaned. \"You did it!\"\n\nShe giggled in response and pulled him back into her mouth, forcing his cock into her throat again as her lips massaged and sucked him until she'd pressed her lips into his pubic hair again. \n\nHe groaned loudly.\n\nBetween her legs, he returned to slurping expertly at her cunt, his hands reaching around her thighs to pull her legs apart slightly as his tongue scrubbed her pussy. She moaned and ground her pussy downwards across his face, eliciting another moan from both of them. Finally, she couldn't stand it.\n\n\"I've got to have you inside me,\" she said, spinning around and turning over to her back as she pulled him on top of her. Spreading her legs, she accepted him between her thighs as he leaned down to kiss her. She tasted her own pussy on his lips and in his beard and moaned in excitement as their tongues wrestled in each other's mouths.\n\nHer eyes widened briefly for a moment, as he pushed into her, her pussy hurting briefly before it adjusted to his size. Smiling, she moaned softly as he began to slide slowly in and out, her pussy sliding and clinging to him as it plunged in and slid back out methodically. She wrapped her feet around his legs, drawing her hips upwards and forcing him to fuck down into her spread legs. The sensations she was feeling in her pussy changed as his position changed, and she knew that she was going to cum soon, and it was going to be a big one.\n\nHe groaned and shook his head, squinting his eyes and trying to fight off his orgasm.\n\n\"Oh, fuck, Baby,\" she groaned. \"I'm going to cum. Cum with me,\" she begged. He began to thrust faster as he heard her words, his cock sliding deeply into her again and again as he continued to fuck her to paradise. \n\nShe felt her orgasm crest then and shoved her tongue back into his mouth as they clutched at each other, seeking to draw the other as close as they could. Kelly felt him shudder and heard him gasp as the first warm spray erupted from the tip of his cock, firing deeply into her pussy. She moaned as a wave of contractions rippled down her muscles against his cock as it plunged down in to her again and again. He groaned in ecstasy as he continued to dump his load into her, filling her up and pounding it deeply into her.\n\nShe arched her back then, unable to control her muscle spasm as her brain elevated to a high plane of pleasure, everything seeming to go numb for a moment and every cell in her body tingling. Her eyes rolled back in her head as he continued hammering into her, splaying her arms out on the bed as he came again and again, his warm seed filling her up.\n\nFinally, he slowed his frenzied thrusting and collapsed down onto the bed beside her. She was too full of his thick, sticky cum to just lay there, though, and quickly reached for a towel next to the bed, slipping it between her legs to catch his oozing seed.\n\nQuickly, she headed to the bathroom to let him ooze out of her, as much as she could, before returning to bed and sliding up against him. He was still breathing heavily, as was she. Sighing contentedly, she kissed him on the lips and laid her head down on his chest.\n\nThey lay there for a short time, catching their breaths and enjoying each other. Kelly rolled over then, intent on getting out of bed and getting ready for work, but something came over her, and she pulled him back towards her. He slid on top of her easily, his still erect cock sliding gently into her and drawing her nipple and ring into his mouth.\n\nShe moaned as her tired pussy accepted him again, but she pulled his chin up to look him in the eyes. \"I want you to know something, Duncan,\" she said, her eyes fluttering as he slid into her again, slowly picking up speed.\n\nHe slowed at her words, but didn't stop, his cock still tenderly pushing into her.\n\n\"You mentioned yesterday about reclaiming my pussy after we'd shared ourselves with another couple.\"\n\nHe nodded. \"I think it's important to reconnect.\"\n\nShe nodded. \"It is. I just want you to know something.\"\n\nHe looked at her, still slowly pushing in and sliding out of her pussy.\n\n\"You are the best thing that's ever happened to me,\" she whispered. \"You're the love of my life. I know that if for some reason I lose you tomorrow, I will never find anyone else like you. I'll never betray your trust, or hurt you intentionally. I would do anything for you.\"\n\n\"I know baby, and you know the same goes for me,\" he said, kissing her.\n\nShe smiled, \"I know.\" He kept stroking deeply into her. \"I'd do anything for you, Duncan,\" she said. \"Absolutely anything, anytime, and anywhere. You are everything to me, and I'm planning on making sure you know how much you mean to me, every day of our lives together. I know there aren't a lot of men that would be able to share the love of their life with someone else, and I know how lucky I am.\"\n\nHe chuckled. \"I'm just as lucky baby.\"\n\n\"I love that you want to reclaim my pussy as yours after we fool around, and it turns me on that you consider it yours. Let me tell you though,\" she said, drawing his face to hers for a moment. \"You will never \"need\" to reclaim my pussy after we share ourselves. My pussy is going to be yours forever, my love. No matter who we let play with us, you will never have to reclaim me. My pussy will always belong to you, Duncan. I might as well get a tattoo down there that says Duncan's with an arrow pointed to it.\" \n\nHe chuckled at her humor then, kissing her.\n\n\"What's more,\" she said, \"if there ever comes a time that you're tired of sharing me, I'll be happy to stop and just share you with other women, or stop altogether and it'll be just us.\" She reached up with both hands and pulled his face up again. \"My pussy is yours, you never need to reclaim it, though I won't ever stop you from doing so... unless I physically can't handle it like last night.\"\n\n\"You know that I'm the luckiest man in the world, right?\" he asked, kissing her again.\n\nShe shook her head, playfully disagreeing. \"I'm the luckiest woman in the world.\"\n\nHe kissed her again, still slowly stroking into her.\n\nGlancing at the clock, she turned and looked up at him again. \"My Love, as much as I'd love for us to stay in bed and let you fuck me through our mattress and into the floor today, I need to get ready to go to work and you need to catch a flight.\n\nHe sighed and conceded the point, sliding deeply in one final time and drawing a resigned moan from her before he slid out. Sliding off the bed, he stood for a second to get his balance, his cock still proudly erect and demanding attention.\n\nKelly giggled and thwapped it down a few times with her hand. Duncan smirked at her, and then headed to the bathroom to take a cold shower.\n\nAs he finished, Kelly stepped in and got cleaned up. After a quick shower and getting what little makeup she wore on, she left the bathroom and saw him getting dressed.\n\n\"Am I dropping you off?\" she asked as she started to get dressed too. Pulling on some black panty hose and then smoothing out her tight skirt, she caught him looking and smirked.\n\nHe nodded. \"Yeah, I don't want to leave the truck up there. Will you be okay to drive it today?\"\n\nShe nodded. \"Of course.\"\n\n\"The company is flying us up in their private jet,\" he said, smiling.\n\n\"Wow,\" she replied. \"They must really want y'all's business!\"\n\n\"They do indeed. They're a smaller company, but we're pretty sure they can handle the manufacturing load we have in mind for them. Snagging us as a business partner would be a huge win for them.\"\n\nKelly smiled. \"Well, I hope it all goes well.\"\n\n\"I'm sure it will. They just want the opportunity to schmooze us a bit,\" he said, pulling on a sports coat. He turned and watched as she ran her hands up the hose and smoothed them out. They finished getting dressed then and got ready to leave\n\n\"So any idea what Drake and Molly have planned for you tonight?\" he asked.\n\nShe grinned uncontrollably for a moment as they headed to his truck and he tossed the luggage in the back.\n\n\"Honestly, probably just dinner and relaxing. They might not be recovered from our fun time yet,\" she said.\n\nHe pouted at her for a moment. \"Well that's no fun. I was hoping that they were going to keep you... happy... so to speak, while I was gone.\"\n\nShe smiled and shook her head admonishingly. \"You're terribly rotten, but you're very good for my endorphin levels.\"\n\nHe laughed and pulled onto the highway, heading towards the airport.\n\n\"So you want me to get used and abused by our friends again?\" she asked, sliding over to him.\n\nHe smiled and nodded. \"I do. I'd like to know that my wife is off having fun while I'm working hard.\"\n\n\"Working hard?\" she said with a laugh, \"You're going to be getting a blowjob the entire flight up and back, and Kara is probably going to fuck your cock right off of you.\"",
        "He guffawed loudly at that, causing her to grin. Calming his mirth, he turned and shook his head at her. \"I can't really argue with that, now can I?\"\n\n\"No you can't. I know how that little redheaded slut gets, especially when she sees our big friend here,\" she said grinning at him and nodding at his crotch.\n\nHe chuckled.\n\n\"So you want me to suck Drake's cock, is that it?\"\n\nHe smirked and nodded. \"You're really enjoying talking dirty to me now, aren't you?\"\n\n\"Yes, I am, now shut up and let me finish. I don't have a whole lot of time before your flight.\" She scowled at him briefly.\n\nHe smiled widely but shut his mouth.\n\n\"How much can I suck Drake off?\" she asked. \"Because if you want, I can drop to my knees and start taking his cock into my mouth as soon as I see him and not stop until Molly makes me. I'm sure she's letting Dana keep Payson again, so I don't think there will be much reason to stop.\"\n\nGrinning, he pushed her a bit. \"I think that you should indeed. In fact, if you don't suck him off as much as humanly possible, I'm going to get angry, and you wouldn't like me when I'm angry.\"\n\nShe rolled her eyes and snickered at him but continued her naughty banter.\n\n\"Would you like a picture of his cock in my mouth while you're away? It could be a reminder of what your slutty little wife is up to while you're \"working\" so hard.\"\n\n\"Ooo,\" he said, turning and grinning. \"I actually really would like that. Make sure you get Molly or Drake to take lots of pictures for me so you can send them to me. I loved watching you fuck.\"\n\nShe smiled. \"Speaking of that, what about fucking me? Would you like to see him fucking my naughty little pussy? I could even make it a video so you could play it for Kara and Mark.\"\n\nDuncan groaned and glanced down at his crotch before looking at her. His pants were tented, his erection very obvious.\n\n\"I think that someone really likes the thought of another man filling his wife's pussy with his sticky, sticky cum.\"\n\n\"I think someone does,\" he said as she began to stroke the front of his slacks.\n\n\"I'll be sure to send a picture of my wicked little pussy full to the brim with another man's load of sperm so my naughty husband can enjoy the thought of his wife being used like the red-headed slut she really is.\"\n\nHe grinned as she continued to rub, his obvious erection straining upwards.\n\n\"Mmm,\" she said, stroking him. \"You really do like the thought of me being naughty. Oh,\" she said, snapping her fingers. \"Maybe Derrek will be there. Maybe I'll send you a picture of both of them taking advantage of my poor little pussy, or sucking both of their cocks. You'd like that, wouldn't you, naughty boy.\"\n\nHe groaned again, but her banter had gotten a little too off-kilter and they began to laugh at the situation.\n\nShe smiled and leaned into him. \"I love you so much,\" she said. \"I'm really getting the hang of talking dirty, aren't I?\"\n\n\"I love you more,\" he replied, causing her to swat his arm. \"And you're getting really, really good at pushing my sexual buttons.\"\n\nShe grinned. \"That's because I'm a redheaded slut!\"\n\nHe arrived at the airport a few minutes later and hopped out of the truck as she slid over to take the wheel. Kissing her deeply, he closed the door. Kara was waiting on the curb with her bags and started to walk over, waving when she saw them.\n\n\"Don't worry, Babe,\" she said, coming up to the passenger window. \"I'll take care of your husband for you.\"\n\nKelly smiled. \"During this trip, he's your husband. That means that I'm leaving his sexual satisfaction in your hands, so if you don't take care of him, I'll know and I'll make you pay, you little slut,\" she said, grinning as Kara looked at her in mock shock.\n\nHer expression changed quickly though as she grinned and clapped excitedly. \"So I guess that gives me permission to have my way with him for the entire trip?\"\n\n\"Fuck his brains out!\" Kelly said, grinning widely.\n\n\"Goddamn I love this woman,\" Duncan yelled, pulling his suitcase from the back of the truck.\n\n\"Love you,\" Kelly yelled back, giggling. He came around to the driver's side again and got a final kiss before waving and walking to the curb.\n\nAs she pulled off, she glanced back and saw Becky pull up and drop Mark off. That taken care of, she headed to the office to get started on the day's work. The busier she kept herself, the faster time would go by and the sooner she would have her husband back. She didn't mind him playing while she wasn't there, of course. She just knew for sure that she was going to miss him.\n\nShe drove to work and went in but the office was quiet since it was early. She went to her desk and started on the pile of work she still had from yesterday. The start of the day seemed to drag until she got a text from her favorite new little sex vixen, Molly.\n\n\"Drake, Derrek, and I are taking you to dinner and dancing tonight. Look spectacular,\" Molly sent.\n\nKelly texted back a widely smiling emoji and a simple \"Yes, Ma'am!\" in response.\n\nDanielle came in on time and looked nervously around for Marie.\n\nKelly sighed and beckoned her over. \"What's going on, sweetheart?\"\n\n\"I... I was needing to talk to Miss Sanderson, Miss Thomas,\" she said haltingly.\n\n\"She had an appointment this morning but she should be here pretty soon.\"\n\nDanielle nodded, her face dropping. \"Oh... alright then,\" she said, her voice low.\n\n\"Sweetie,\" Kelly called. \"You can call us Kelly and Marie, it's really okay.\"\n\nDanielle nodded. \"Okay Miss Thom... Kelly,\" she corrected.\n\n\"Danielle, come here for a second,\" Kelly said, scooting her keyboard forward and her chair back. \"Let me talk to you for a second.\"\n\nDanielle looked worried for a second, but came around the desk.\n\n\"Don't look so scared, you aren't in trouble,\" Kelly said, smiling comfortingly at the nervous eighteen year old. She patted the cleared space on her desk and nodded at her.\n\n\"First,\" she said as Danielle hopped up on her desk. The young girl was wearing a tight skirt that rode up. Kelly couldn't help herself and glanced between the young girls legs. To her surprise, she wasn't wearing any panties, but she didn't indicate that she'd noticed. She was apparently a natural blonde, though. That was something she knew for sure!\n\nLooking back up at the naive young woman, Kelly cleared her throat.\n\n\"First,\" she repeated, \"you're doing a wonderful job here, so don't worry so much, okay?\"\n\nDanielle nodded. \"Thank you... Kelly,\" she said, smiling tightly.\n\n\"Second, if Marie's foolish behavior is bothering you, I can put a stop to it,\" she said.\n\nDanielle blushed and shrugged. \"I... I actually...\" she stammered.\n\nKelly sighed and stood, reaching up and pulling the timid girl into a hug for a moment.\n\n\"You aren't in trouble, and you don't have to worry about me judging you. Take a deep breathe, okay, Sweetie?\"\n\nDanielle nodded and inhaled deeply, closing her eyes for a moment and holding still. She opened her eyes and nodded at Kelly. \"I feel better,\" she said. \"I just get really nervous when I'm talking about uncomfortable subjects.\"\n\nKelly nodded. \"Take your time,\" she said, smiling comfortingly.\n\n\"I've always been a really nervous person, and I don't think it's going to stop anytime soon. Marie isn't bothering me when she... you know...\" Danielle said. \"I... I actually kind of like the attention.\"\n\nKelly smiled. \"Well good,\" she said. \"Marie is a really good person. She wouldn't do anything to hurt you.\"\n\nDanielle brushed a lock of hair from her face, still nervous. \"I've really been trying to do what she asked for my boyfriend. She's been coaching me on how to please him better.\"\n\nOf course she has..., Kelly thought.\n\n\"There's nothing wrong with that,\" Kelly said. \"She helped me... in that area too.\"\n\n\"I just... something happened last night with him and I wanted to ask her about it. It's been bothering me.\"\n\nKelly turned a concerned look towards her. \"Well, you can ask me if you like.\"\n\nDanielle nodded, her hand shaking. Kelly reached up and squeezed it comfortingly and caused the girl to smile and breathe deeply.\n\n\"I'm not here to judge,\" Kelly said. \"Just take your time.\"\n\nShe nodded again. \"When I was... giving Conner... my boyfriend, a... you know...\"\n\n\"Blowjob?\" Kelly asked. She got a nod in response.\n\n\"When I was... blowjobbing him,\" she started.\n\n\"Blowing,\" Kelly corrected.\n\n\"Right,\" Danielle said, looking up. \"When I was blowing him, he really seemed to like it. I guess he really liked it because... he... uh...\"\n\nKelly smiled.\n\n\"He... went... in my mouth.\"\n\n\"You just have to learn to watch for the signs,\" she said. \"Men have certain things they do when they are about to achieve release,\" she explained. \"At least the ones I've been with do.\"\n\nAll two of them, she thought, giggling internally.\n\n\"But...\" Danielle stammered, a tear coming to her eye. \"When he went in my mouth, he... went too deep... and I choked and... I accidentally... threw up on him...\" she said, wiping away the tear.\n\n\"Oh sweetie,\" Kelly said, standing and hugging her. \"That's nothing to be worried about. He was probably feeling awful that he caused that to happen.\"\n\nDanielle nodded, brushing more tears away. \"I just... it was so embarrassing. He kind of just... stammered an apology and left.\"\n\n\"He was just as embarrassed as you were, Sweetie,\" Kelly said, lifting her face and wiping the tears from her eyes. \"Shh,\" she said, pulling her head close. \"Here I was thinking that I was going to have to beat Marie off of you with a stick, and you're having actual boyfriend problems.\"\n\nDanielle giggled at that, and Kelly quickly realized that it was the first time she had heard or seen any emotion other than nervousness coupled with a kind of borderline terror from the pretty young girl.\n\n\"What do I do?\" the girl asked. \"I mean, I know he's just a boyfriend, but I like him. I don't want him to hate me.\"\n\nKelly smiled and brushed away another tear. \"Sweetheart, Marie was actually right. You just need practice. I'm absolutely sure that you can fix the situation with him. All that happened was that one of you pushed too deeply into your mouth. You gagged and it was a natural response. If you practice, you can learn to control that reflex.\"\n\nDanielle looked up, hope in her eyes. \"You can?\" she asked.\n\nKelly nodded. \"Of course! All you have to do is practice.\n\nShe couldn't believe she was agreeing with Marie, but her advice was sound.\n\n\"Did she give you one of her toys?\" Kelly asked.\n\nDanielle blushed and slowly nodded, as she turned her face downwards in embarrassment or shame.\n\n\"Good,\" Kelly said, lifting her chin up with a single finger. \"Whenever you find yourself alone, you can practice with that. Start slowly and push it until you can feel your throat begin to resist. Hold it there for as long as you can and then keep doing it. Eventually, you'll be able to take him in completely.\"\n\n\"I will?\" Danielle asked, her innocent eyes wide.\n\nKelly nodded. \"I speak from experience.\"\n\n\"She does indeed,\" Marie said, coming in behind the young girl and pulling her chair over. Kelly quickly caught her up in the conversation.\n\n\"Oh Honey, that wasn't your fault,\" she said.\n\nDanielle smiled at that, but still looked like a frightened fawn.\n\nMarie looked up and laid a hand on Danielle's. \"Do you mind if I ask... how big is your boyfriend?\"\n\nDanielle looked up and shrugged. \"He told me that he was 8 inches, but it looks more like 6 and a half to 7 inches to me,\" she said.\n\nMarie laughed. \"Younger men and boys can be like that. They're easily threatened and try to overcompensate because they think we won't like them based on how big their dicks are. It's ridiculous nonsense. I mean unless he's sporting a jelly-bean down there, chances are that we'll get some enjoyment out of it.\"\n\nDanielle laughed quietly at that, covering her face in embarrassment.\n\n\"Sweetheart, it's no wonder you gagged, though. The average man has around 5 and a half to 6 inches. Trust me, Sweetie, I speak from experience.\" Marie smiled and nodded sagely at her. \"Your boyfriend is pretty gifted in that area, you're a lucky girl.\"\n\nKelly smiled as she realized that Marie had taken a different tone with the upset girl. Gone were the highly sexualized overtones, the cutesy names and the hints of flirtation. She'd sensed that Danielle was actually worried and had changed her approach.\n\n\"Damn, she's smooth,\" Kelly thought.\n\n\"Can I ask...\" Danielle started, but shook her head and stopped.\n\n\"Go ahead, Honey,\" Kelly said. \"You can ask us anything.\"\n\nShe smiled again and nodded. \"I was just curious... how... how big your... you know... husbands...\" She stopped, her face turning red.\n\nMarie smiled. \"Well, my Ed has a nicely size 7 inches, but Kelly is the really lucky one. Her husband is around 9 and half inches and at least as thick as your wrist.\"\n\n\"You've seen it?\" Danielle asked.\n\nMarie smiled. \"I have. Our parties can get a little crazy sometimes,\" Marie replied. She winked at Kelly knowingly.\n\n\"And you both can... you know... without getting sick or gagging?\" the young girl asked.\n\nKelly smiled and nodded. \"We both can. All it takes is practice, like Marie said. Plus, any other boyfriends you have in the future will definitely enjoy how good you are, the more you're able to practice.\"\n\nDanielle smiled widely then. \"Is 9 and a half inches rare?\"\n\nMarie nodded. \"It's very rare. What you might have seen in a porno is the exception. A lot of that is camera tricks or fake penises. There are of course, some men that are very large, but they are most certainly a rarity. In the real world, you might never encounter a man with more than what your current boyfriend has. Then again,\" she said, smiling at Kelly.\n\n\"Does it hurt?\" she asked, looking at Kelly. \"I can't imagine...\"\n\nKelly shrugged, amused at her innocent curiosity and realized that she was just as naive a few months ago. \"If he's not careful, it will. A guy as big as my husband has to take his time and let you adjust to accommodate him. Once you do though, it's very pleasurable.\"\n\nKelly began to feel like the conversation was getting off track, but the questions the endlessly curious eighteen year old was asking were relatively innocent.\n\n\"9 and a half inches?\" the naive girl asked again. \"I'd like to see that,\" she said, and immediately covered her mouth. \"His penis I mean, not you having sex!\" she corrected, and then covered her mouth again. \"I didn't mean...\"\n\nKelly and Marie both laughed easily and comforted the young girl.\n\n\"Don't worry, Duckling,\" Marie said, switching back into seductress mode. \"If you ever get to hang out with Kelly and I after work, you'll probably get a chance to see it.\"\n\n\"You're making her think we just have sex all the time or he walks around naked. Danielle,\" Kelly said, turning back to the blushing girl, \"Whenever anyone, and I mean anyone, hears that my husband has as big of a dick as he does, they naturally want to see it.\"\n\n\"Really?\" she asked, visibly relaxed but still obviously embarrassed.\n\n\"Chances are, you'll see it sometime,\" Kelly replied, smiling at her.\n\nThe door to the office opened, and Marie's boss walked in, talking with Kelly's. The young girl hopped off the desk quickly and headed to her own. Stopping halfway, she turned and said a quick, \"Thank you,\" as Marie rolled back to her desk.\n\n\"No panties,\" Marie whispered over at Kelly. \"That was my doing!\" She shushed her and dove back into her work. She received a call from her husband at lunch to let her know that they had landed and had just finished checking into the hotel. He told her he loved her and that he would call her later.\n\n\"Send pics!\" Kelly said\n\n\"You too!\" he replied.\n\n\"Love you,\" she said.\n\n\"Love you,\" came the response.\n\nKelly grinned. She realized how blessed she was just then. She was truly a very lucky woman.\n\nShe glanced up at the clock. In the back of her mind, the night's coming activities was still simmering, causing her to grow excited in anticipation. Five o'clock couldn't come fast enough."
    ],
    "authorname": "Mentalcase",
    "tags": [
        "hotwife",
        "slutwife",
        "exhibitionism",
        "voyeur",
        "threesome",
        "blowjob",
        "cumshot",
        "wife",
        "husband",
        "swallow"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/lucky-man-ch-11"
}