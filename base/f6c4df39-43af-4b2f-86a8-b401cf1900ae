{
    "title": "Conjugal Gifts 4 U",
    "pages": [
        "\"Jimmy, get your lazy butt up and look for a job today!\" His mother yelled from the hallway. \"You will not spend your summer break doing nothing. Jimmy, do you hear me?\" she yelled even louder.\n\n\"Yeah, mom,\" he yelled back, \"I hear you.\" And so can the rest of the neighborhood, he thought to himself. Geez, it's only Monday and she's all over my ass already. Give me a break! I've been up for an hour anyway. It's not that he had anything against working, but he had finished his exams only three days ago and had only been home one day since returning from college. At least she could give him a couple of days to relax.\n\nHe wandered down to the kitchen where the classified ads were already spread out on the table for him. Jimmy glanced at them for a second before he fixed himself a bowl of cereal. Sitting down with his cereal and juice, he browsed through the ads, especially the ones that his mom had circled. Most of the ones circled were fast food jobs and he had worked in enough restaurants to know that he wanted nothing to do with them for a very long while. It's not very much fun seeing rats as big as house cats rummaging through the garbage behind restaurants, especially seafood places. His eyes scanned the page looking for anything that looked remotely interesting. Jimmy turned the page and saw that his mom had circled an ad in red ink for him, effectively catching his eye.\n\n\"Fast moving company seeking energetic individuals in our research and development department. No experience required. Must be self-motivated and eager to please. Insurance and fringe benefits. If you fit these qualities, call 555-6969 for an appointment.\"\n\n\"That doesn't look too bad,\" he said casually, aloud. He picked up the phone and dialed the number. It was answered on the second ring.\n\n\"CG4U, this is Monique, how may I help you?\" she purred over the line.\n\n\"Hi,\" Jimmy said, \"I'm calling about your ad in the classified section.\"\n\n\"Ooh, the research and development opening,\" she cooed. \"Would you like an appointment?\"\n\n\"Yes, ma'am,\" he said.\n\n\"We have an opening at ten o'clock. Would that be okay with you?\"\n\n\"That would be fine,\" he answered.\n\n\"Your name?\" Her voice was seductive and sweet and Jimmy was getting excited just listening to it.\n\n\"Jimmy.....er, James Slonaker,\" he replied, consciously deepening his voice.\n\n\"James,\" she sighed, \"that's such a pretty name.\" My God, Jimmy thought, she almost sounds orgasmic. \"I have you down for ten. Please bring a valid picture ID card and your social security card along with you, James.\"\n\n\"I will, thanks.\"\n\n\"Oh no, James, thank you.\" The emphasis on \u2018you' was very pronounced.\n\n\"Where are you located?\" he asked quickly before the connection was broken.\n\n\"We're at 69 S. Peckerton, oops, I mean Pickerington. Silly me, I get that mixed up sometimes,\" Monique giggled.\n\n\"69 S. Pickerington,\" Jimmy repeated.\n\n\"Yes, James.\"\n\n\"Okay then, I'll be there at ten.\"\n\n\"I can't wait,\" she said breathlessly before she hung up.\n\nJimmy glanced at the clock. It was a few minutes before nine and he would have to hurry to make the appointment on time. Feeling slightly horny from the receptionist's sexy voice and missing his girlfriend, Jimmy ambled up the stairs to his room to get ready.\n\nJimmy arrived in the lobby of CG4U a few minutes early. He found that the company's full name was \"Conjugal Gifts 4 U\", but he had no idea what their business was. He would need a dictionary for that. He was greeted by an overly perky blonde whose bra size vastly overwhelmed her IQ.\n\n\"You must be James Slonaker,\" she said sweetly when he came to her desk. She was wearing a pink blouse that had a plunging neckline and left little to the imagination. Jimmy couldn't help but look down into her velvety cleavage. When he looked up at her face, she was smiling. \"Don't worry, everyone looks at them. I don't mind. If you get hired, maybe we can be partners sometime and you can see them without that silly bra. I hate clothes!\" she pouted. \n\n\"What?\" he stammered.\n\n\"Here,\" she said, thrusting a pen and paper at him. \"Fill out this application and bring it back to me.\"\n\n\"Okay,\" he said warily, not really knowing what was going on with her.\n\nHe took the pen and application and sat down in one of many chairs. There was no one else in the small lobby as he looked around. He saw advertisements on the walls, one saying \"Conjugal Gifts 4 U, special gifts for special couples\". Others on the walls said basically the same thing and Jimmy was beginning to realize what their business was all about. A true Rhodes Scholar material, he was.\n\nHe tried to concentrate on the application, but found it difficult with Monique staring at him and blowing kisses. He smiled back a few times, but this only encouraged her. It was a standard application, one that Jimmy had filled out many times before. After several minutes of intense concentration to avoid looking at Monique, he finished and brought the clipboard and pen back to her.\n\n\"Finished already?\" she asked. \"My, you must be really smart. It took me over a half hour to finish it.\" That doesn't surprise me a bit, Jimmy thought. \"You know, you're cute and I'm not wearing any underwear right now.\"\n\n\"What?\"\n\n\"Just have a seat and Sonia will seen you in just a little bit.\" Monique went back to writing something in a black book.\n\nJimmy looked at her and was beginning to wonder if he was going crazy. Anyway, he sat down and waited. Monique looked at him from time to time and even licked her lips on occasion when she caught his attention, which was often. He was just beginning to read a magazine when an attractive brunette, dressed in a sharp business suit, called his name.\n\n\"I'm Sonia,\" she said, extending her hand to him as he approached her. He took it and shook it lightly before releasing it. \"Let's go to my office where we can chat for a bit.\"\n\nShe led him to a brightly lit office with many plants and flowers scattered about. \"Have a seat, James,\" she said, indicating with her hand the chair in front of her desk. Jimmy sat down and inhaled her musky perfume, sweet and not overpowering.\n\nShe looked over his application and smiled approvingly. \"You seem to be a bright person, James. We're basically looking for someone to fill a full-time position, not someone who only wants a summer job. Perhaps we can work something out.\"\n\nJimmy shifted in his chair. \"I wouldn't mind full-time work. I would have to adjust my schedule a bit, though, when school starts again.\"\n\n\"We'll see,\" she said, scanning the paper once more. \"Do you know what \"Conjugal Gifts 4 U\" is all about?\"\n\n\"I have an idea.\"\n\n\"We are a multi-national company with locations in Hong Kong, Brussels, Paris, London, and Kiev. We have over twenty locations in the United States. We provide marital aids and other sexual apparatus to couples everywhere. This is one of five locations where we do our research and development and our R & D team are very important to us, probably the most important aspect of our company.\"\n\n\"I see,\" Jimmy said. \"And where would I fit in with the research and development?\" His major was history and he wasn't seeing the correlation between sexual aids and the Renaissance. \n\n\"Why, you would try out our new products and give us feedback as to what works and what doesn't,\" she smiled sweetly.\n\nJimmy blanched for a second before he regained his composure. \"I don't think this is what I had in mind,\" he said, \"thanks anyway.\" He started to get out of the chair.\n\n\"No, James,\" she said quickly, hating to lose a good prospect, especially a young and well-built man. He certainly could have the stamina necessary. \"Wait a minute. Maybe I can change your mind. Let me give you a tour of the R & D and you can decide afterward.\" This was usually a good selling point for her.\n\nAgainst his better judgement he said, \"Okay, I'll take the tour.\" What could it hurt?\n\nSonia led him out of the office and down the hall, her hips swaying sexily through her dress slacks. Jimmy wouldn't have minded getting his hands on them sometime. They came to a door which had a keypad lock on it. She punched in a seven digit combination and a bell rang. Sonia turned the knob and opened the door quickly as it unlocked for her. They went through the door and down a corridor before they came to a glass door with \"Research and Development\" stenciled on it. Sonia rang the door bell near the handle and a few seconds later, it was buzzed open for them.\n\n\"We will be going past rooms where our employees will be trying out different products. They know that they are being watched and being filmed. This is how we film our instruction videos for each piece in our line of products.\"\n\n\"Of course,\" Jimmy said.\n\nThey came to the first room and saw an attractive blonde getting her brains screwed out by a skinny, long haired greaser with tattoos all over his body. Her small breasts were bouncing crazily and her nipples looked like they were the size of small marbles. \"They're trying out different types of our famous ribbed condoms,\" she explained. Jimmy's penis hardened quickly as he could see that the girl was obviously enjoying the ride she was being given. \"It being tested for pleasure and durability. What good is a rubber if the girl doesn't like the feel of it in her or if it isn't strong enough to withstand a good fucking?\" she said vulgarly. The girl was moaning and writhing on the mat, Jimmy noticed, and he was immensely turned on.\n\nSonia nudged him and led him down the hall to the next room. On a thick mat, a girl was lying on her back, her legs wide open as she was jamming something into her vagina. \"Damn it!\" Sonia hissed as she unlocked the door and stepped into the room with Jimmy following.\n\n\"Bernice! How many times have we told you that you can only use the vibrators on your clitoris? You are not allowed to stick them into your vagina! That's what the dildos are for.\" Bernice didn't move, staring intently at Jimmy.\n\nSonia leaned over at Jimmy and whispered into his ear. \"Whatever she says or does, don't let your dick get near her! There'll be nothing left of it once she's finished with it!\" Jimmy nodded, his jaw dropping slightly in wonder. What was wrong with that girl?\n\n\"Bernice!\" Sonia said sharply, \"Take it out and use it properly.\"\n\nBernice, a petite brunette with wide, blue eyes, obeyed and pulled the vibrator out as instructed. She saw Jimmy again and licked her lips. \"Ooh, a man. Can I have him? Can I play with him for a little bit? Please?\" She used her right hand to wipe away a bit of drool that had appeared in the corner of her mouth.\n\n\"Now, Bernice, you know what happened the last time we let you play with a man.\"\n\n\"Yes, ma'am,\" she said sadly. \"I remember.\" She looked down in embarrassment.\n\n\"We been accident free for over two months now and we wouldn't want to mess that up, would we?\"\n\n\"No ma'am.\"\n\n\"Now, go back and play with the vibrator the right way and tell us how it feels. You know how to do that.\"\n\n\"Yes ma'am.\"\n\nSonia nudged Jimmy again as he was staring at Bernice. She led him out of the room, but he looked back at Bernice again. Bernice saw him gawking, so she opened her legs as far as she could and began to masturbate furiously with the vibrator, smiling gloriously at him as she did so.\n\n\"What's wrong with her?\" he asked when the door was shut.\n\n\"Oh, nothing really. She's actually one of our best when it comes to dildos and vibrators. We just can't let her have a real dick.\"\n\n\"Maybe I shouldn't ask, but, why?\"\n\n\"Well,\" Sonia said, \"she has amazingly strong vaginal muscles and when she gets really excited, orgasmic you might say, well, men tend to get injured when they're inside of her.\"\n\n\"Ah,\" Jimmy said, \"I see.\" He didn't know what to think. This was getting weirder by the second.\n\n\"Anyway,\" she continued, \"we don't let men get near her and we don't have to send anyone to the hospital.\" They continued to walk down the hall to the next room. \"If you ever come across her,\" Sonia warned, looking at him in the eye, \"do not take your dick out. She can be very persuasive at times and will promise you the world. Don't fall for it!\" Sonia looked down at his crotch and could see a nice bulge pushing through his pants. She smiled and went to the next room.\n\n\"This couple,\" she pointed to a man and a woman making love on a weird looking contraption, \"is trying out our love swing.\" The woman was situated in a sleeve type seat with her legs held open by ropes. She was holding onto suspended ropes as the male was busy thrusting in and out of her. \"They can make love doing it the traditional way or by moving the ropes, they can be more adventurous and try different positions. It gives the woman a bit more freedom and it's easier on her hips and back,\" she explained.\n\nJimmy was very interested by now and his penis was straining against his pants, hoping to find an escape route.\n\n\"We can look at more rooms if you like or we can go back to the office and discuss the job,\" Sonia said.\n\n\"I'd like to look at a few more rooms, please,\" he replied.\n\n\"Okay,\" she said, smiling knowingly. \"There's one more room that I think you'll enjoy.\" Sonia led him to a room where he saw one of the most beautiful women he had ever seen in his life. She was on her knees giving a blow job to a well hung stud of whom Jimmy was quite jealous. She was licking and slurping, obviously enjoying the huge dick that was in her mouth. Jimmy had to consciously keep himself from playing with his own dick through the cloth of his pants.\n\n\"She's taste testing our scented love oils. She's our best. Whatever she's liked has always gone on to be a best selling product.\" Soon, the guy couldn't hold back any longer and shot rope after rope of gooey, white globs of sperm all over the woman. She didn't seem to mind as she began to clean herself off. She looked over at Jimmy and smiled sweetly, and he would never forget the sight of a dollop of sperm hanging for dear life from one of her precious nipples. He almost creamed his pants then and there.\n\nEventually, they made their way back to her office and she offered him the same chair in which he had sat before. \"So, what do you think, James?\"\n\n\"I think that I could be very happy working here,\" he replied, thinking to himself that college might have to wait for a while.\n\n\"Good, good,\" she said, \"let's discuss salary. We'll start you at $12.00 an hour and you should get about 20 hours per week for now and see how it goes for you. If you recommend a product and it does well, you will receive \u00bd percent of all profits. You will be required to have blood tests done once a month, paid for by us, just as a precaution. Any questions?\"\n\n\"Blood tests?\"\n\n\"Oh, come now, James, don't be naive about this. Although part of your job will be to test condoms, sometimes you won't be wearing one, so we must take precautions. You understand, don't you?\"\n\n\"Yes, I'm beginning to understand. You mentioned insurance. When does it start and how much coverage?\"\n\n\"Well, since you won't be a full-time employee for a while, we cannot offer it to you. You must prove that you are worthy of being a full-time employee first. Once you attain that position, we offer full medical and dental insurance for a nominal cost.\"\n\n\"That sounds reasonable,\" Jimmy concluded. He couldn't believe that he was going to be paid to have sex with some gorgeous females, all in the name of research and development. \"How do I get picked for a product and do I pick a partner or does someone do that for me?\"\n\n\"We first start you out on simple things, like oils, lotions, and things like that. Then, you get to try more complicated things like our love swing or something else along those lines. Your partner, if needed, is picked at random, but, if we find that you work well with a certain someone, well, we try our best to keep our employees happy.\"\n\nSonia looked at him expectantly. \"Well, what do you think?\"\n\nJimmy looked at her and smiled. \"I read something about fringe benefits. What might those be?\"\n\n\"I thought you'd never ask,\" she said seductively. She dialed her phone and said, \"Monique, please come in.\"\n\nThe door opened within seconds and Monique came through. \"You wanted to see me?\" she asked, looking at Sonia.\n\n\"James was asking about our fringe benefits, but,\" she looked at James, \"you must show us your assets first. We don't even know if our condoms will fit you, do we?\"\n\n\"I, uh...\"\n\n\"Monique, perhaps you could help James relax. He seems to be a little tense right now.\"\n\n\"With pleasure, Sonia,\" she sighed happily.\n\nShe moved in front of Jimmy and smiled. \"Just relax, baby, and enjoy your fringe benefit.\" Monique climbed up on the chair in which Jimmy was sitting, her hands were placed on his shoulders for balance and her knees were on each thick arm of the chair. With her right hand, she flipped her flimsy pink skirt over his head and he was face to face with the most beautiful shaved pussy that he had ever seen. Monique gave him no time to think about it as she pushed the back of his head into herself and shuddered with delight.\n\nJimmy did what came naturally and began to lick and suck on her puffy, full lips. Monique gasped with pleasure and began to squirm as he found her shrouded clit. Just as he was about to explore that region, he felt a tugging at his belt as it was pulled apart and discarded. Jimmy thought that it had to be Sonia doing the work, so he relaxed and went back to business. His pants were unbuttoned quickly and his zipper was brought down to it's origin in a jiffy.\n\nSonia reached into his boxers roughly and pulled out his stiff prick, reveling in it's size and contour. \"Oh,\" she purred, \"this will do very nicely.\" She pushed her mouth down onto it, savoring it's taste. Slowly, she began to lick it up and down like a candy cane, loving every inch of it. There was a little click behind her but she paid no attention to it.\n\nJimmy continued his assault upon Monique's sensitive little nub as she continued to grind her pelvis against his face.\n\nA lithe, quick body entered the room as everyone was too busy to notice. She scanned the scene and her eyes opened wide at the sight of Sonia licking Jimmy's long, stiff penis. She licked her lips and wiped the drool from her mouth as she moved closer to get a better look.\n\n\"Oh baby,\" Monique moaned, \"lick me, fuck me, you hot stud! I want you to mount me and fuck my brains out!\"\n\n\"IT'S A DICK!!!! IT'S A DICK!!! Bernice screamed, as she rushed forward, unable to control herself anymore.\n\nSonia looked up in surprise as Bernice came behind her, grabbed her, and threw her to the side. Monique toppled off of the chair in a heap, tits over ass, as Jimmy looked at her in surprise and horror.\n\n\"Don't let her have your dick!\" Sonia screamed as Bernice mounted his lap quickly and began grinding herself onto him furiously, hoping that his dick would find her vagina soon.\n\n\"I gotta have a dick! I gotta have a dick!\" Bernice yelled. She had a wild look in her eye as she bounced all over Jimmy's lap, trying to find that elusive penis that she was begging for.\n\n\"Get her off of me, get her off of me.......\"\n\n\"Jimmy, what in the hell are you yelling about?\" his mom yelled again from the hallway. \"I swear to God, I'm going to come in there and drag your ass out of bed if you're not up in five seconds! Do you hear me? Do you hear me? ANSWER ME!!!\""
    ],
    "authorname": "Tony155",
    "tags": [
        "research development",
        "sonia looked",
        "jimmy thought",
        "blood tests",
        "fringe benefits",
        "love swing",
        "bernice",
        "mom yelled",
        "jimmy looked",
        "jimmy smiled"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/conjugal-gifts-4-u"
}