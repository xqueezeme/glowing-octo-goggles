{
    "title": "Adventures of Hollywood Jim Ch. 54",
    "pages": [
        "Authors note-Thanks for your patience everyone, new stories and adventures are coming soon for Hollywood Jim\n\n*\n\nThe beach was so beautiful on this morning. The fog was slowly rolling in and I loved the feel of the sand between my toes as I walked the beach. In the distance I could see a solitary figure casting a huge fishing pole into the surf. He stuck the pole into the sand and sat down on a beach chair and puffed on a cigar. The ocean breeze felt great and the fog slowly lifted somehow and revealed a beautiful, but confusing sight. An elegant white Rolls-Royce with a crisply attired chauffeur at its side was parked on the beach near the fisherman.\n\n\"Who parks a Rolls on the beach?\" I said to myself\n\nI was somehow drawn to approach the man who puffed on his cigar. As I got closer, the driver tipped his cap to me.\n\n\"Heyyyy...Hollywood!\" the fisherman said as he saw me approach.\n\nIt was Chris, my old friend and business partner. \n\nThe partner who'd...oh, no...\n\n\"Great morning, huh?\" he said looking around at the empty expanse of beach and ocean \"I hope the fishing's as good.\"\n\nI was too stunned to speak, but he seemed to know why I reacted to him the way I did.\n\n\"Aw, you don't have to worry...this ain't like the last time I saw you.\" He said referring to the dream I'd had after the O'Brien shooting \"Things have changed, and for the better.\" He continued as he stood \"I told you that things would work out. I knew you'd be okay, in fact, you're better than OK, man.\" He said with a chuckle.\n\nI was still unable to speak \n\n\"You're gonna be fine, Hollywood. You'll always be fine, man.\" He reassured me as he looked at his gold watch \"Whoa, I got places to go.\" \n\n\"You take care of yourself, partner.\" He said as he shook my hand\n\nHe went back to the Rolls and the driver elegantly opened the door for him\n\n\"Don't worry about a thing, Jim.\" He now said \"Big things are gonna keep happening for you, my friend. It's your destiny, don't ever doubt it.\"\n\nThe door closed and the Rolls silently proceeded down the beach and disappeared into the mist.\n\nI was alone on the beach.\n\nMy eyes popped open and I was now in bed. The sheets were a silky white and I could hear the ocean outside, the breeze billowing softly through the curtains and faint bits of sunlight coming through. I turned over and looked up at the ceiling fan as I ran my fingers through my hair.\n\n\"It was a dream...my god, it was a dream.\" I said in a raspy voice\n\n\"What is it baby?\" a sleepy woman's voice with a distinct Latin accent said.\n\nHer light brown skin contrasted beautifully with the white of the sheets. And the curve of the sheets showed she was naked beneath them, as was I.\n\n\"Um, strange dream...a very strange dream.\" I replied\n\n\"Oh, baby... was it a bad dream?\" she said in a soft voice as she held me close to her\n\n\"No, just...very strange\"\n\n\"Awww...go back to sleep baby...shhhh...go back to sleep\" she said softly as she held me and stroked my head. \"You can tell me all about it later...shhhh...sleep baby.\"\n\nHer breasts were soft and warm and I could still smell her perfume from the night before.\n\nIt almost made me forget I'd just had a dream about a dead man. \n\nBut I certainly remembered how I got here...\n\nOne thing I never wanted to become was jaded. It always astounded me that people who worked in the entertainment field, even on the fringes, like I did, could become so blas\u00e9` about who they saw or met in Hollywood. So I always went to work every day with the attitude that I was part of the greatest business in the world. I considered it to be a privilege to be amongst those on the way up, those at the top or even those perceived as on the way down. And those few that allowed me into their private worlds, all the better. I still had to pinch myself sometimes to be sure that I was really here. That's how I always knew I hadn't become jaded by my work. It was like Mr. Gump's box of chocolates. \n\nIt was close to year's end and on this morning as I went into Chuck's office, I found him on the phone speaking Italian. It surprised me to say the least.\n\n\"Where'd you learn Italian? You can barely speak English sometimes.\" \n\n\"Like everyone else, Rosetta Stone.\" He said as he hung up the phone \"best twenty bucks I ever spent.\"\n\n\"Twenty bucks, how'd you ever get it that cheap, that usually sells for like 300 hundred.\" \n\n\"Chinese garage sale, you find the most amazing things there.\"\n\nI couldn't help but chuckle to myself, maybe he got a counterfeit version and he'll insult more Italians than charm them. That might be rather amusing to watch!\n\n\"You ever heard of a guy named Pompeo Posar?\" he now asked me\n\n\"Sounds familiar.\"\n\n\"It oughta be, he's been photographing centerfolds for the better part of thirty years.\"\n\n\"Whoa! And I thought I had a pretty good job.\"\n\n\"Well, my friend, you do\" he said with smile \"that's why I'm giving this one to you.\"\n\nUh-oh. That could mean something bad or...\n\nJust then the double glass doors to his office opened and accompanied by our second in command Jeff Murphy strode a Latina beauty in wearing black jeans and a purple t-shirt topped off with a Nike jacket.\n\n...Or something good!\n\n\"Ahhh! Good morning Chuck!\" she said in a buoyant tone \n\n\"There's our star!\" He said as he stood up and she gave him a quick kiss on the cheek. \"Jim, meet Sofia Vergara.\" \n\n\"Oh! Wonderful! We've met before, hello again, darling.\" She said as she offered me a well manicured and soft hand and an electric smile. \n\n\"You've met before?\" Chuck said, surprised\n\n\"Yes, I met him on his first day here, he looked so nervous.\"\n\nEveryone laughed at that.\n\n\"So, let me get down to business.\" He began \"We have a big photo shoot we'd like you to do in conjunction with her Pepsi campaign. Pepsi has already done the print ads but they'd like some additional shots for other markets.\" \n\n\"Really? What markets?\" I asked\n\n\"Mine, where else?\" Sofia answered with a laugh\n\n\"Exactly, Pepsi really wants to give this a big push in the Latin markets. We'll be filming a TV commercial too. So the photos will be a nice bonus for their website, kind of a behind the scenes setup.\"\n\n\"I did a TV ad for them long ago, so they think it would be fun to have me do a...how do you say...come back?\"\n\n\"That's a good idea, like that Cindy Crawford ad, right?\" I said\n\n\"You've got a good memory, Jim.\" Jeff said\n\n\"Yes, that's the idea.\" Chuck said \"So, how does a weekend in Villa Del Sol sound?\"\n\n\"Sounds like a working weekend to me.\" I replied\n\nEveryone laughed, especially Sofia.\n\n\"I like this guy!\" she said with a beaming smile.\n\n\"See why we hired him?\" Chuck said \"OK, pack your bags Hollywood, we'll see you Friday morning.\"\n\n\"Hollywood?\" Sofia said looking at me with a confused, then smiling look on her face. \"Why do they call you Hollywood, baby?\"\n\nI could only shrug my shoulders in response. I didn't have a snappy answer at the ready, wish I did. No matter, she laughed and breezed out of the office with Jeff and Chuck. \n\nDid she know the \"secret meaning\" of it? Nah!\n\nVilla Del Sol was an ultra-exclusive retreat usually reserved for the executives of Pepsi and other companies. Unfortunately I wouldn't get to see much of it. I was there to work and in a way I was happy for that. I was flown down on their private jet, and like I'd said before, this was something I still couldn't get used to. The shoot would be pretty quick as Sofia had to be back in L.A. to resume filming on \"Modern Family\", so I'd be doing my shots as she filmed her Pepsi ad. To my surprise, the commercial was being directed by Mark Stein, whom I hadn't seen since the Triple Threat Tour where he'd done all the video production for the shows. Mark had to be the most efficient director I'd ever seen. He should be doing films, not just commercials, I thought. I stayed in the background and snapped photos of Sofia as she went through the paces of being on the beach, seductively sipping her can of Pepsi through a straw. \n\n\"OK, thank you, Sofia!\" Mark called out \"Let's do the wardrobe change!\"\n\nSofia started to walk toward a camper that served as a wardrobe trailer before noticing me with my cameras.\n\n\"Ah, Mister Jimmy, taking lots of good photos of me?\" she purred\n\n\"Oh, absolutely!\" I replied \"It's hard to get a bad one of you.\"\n\n\"You'll get better ones of me.\" She said with a big smile as she walked away\n\nMark was standing by me now\n\n\"You'll have to tell me your secret.\" He said\n\n\"What do you mean?\"\n\n\"You can't tell?\" he said, surprised \"the ladies love you, pal.\"\n\n\"Nah, they're just being nice, that's all.\"\n\nHe looked at me with a smile\n\n\"Oh, sure...\" he said with a chuckle as he went over to his crew.\n\nNot much later, Sofia returned wearing a white robe, her dark hair thick and beautiful. Mark met with her briefly to go over the script. All she had to do was walk down the beach as the waves lapped at her feet.\n\nSeems easy enough, I thought.\n\nThen she took off her robe and I think there was an audible gasp from everyone.\n\nSofia had on a gorgeous white bikini that showed off a body the likes of which I had never seen anywhere. Damn, her tits were enormous!\n\nSofia noticed me now and could see my reaction.\n\n\"See I told you there'd be better pictures.\" She giggled as she went to her spot on the beach.\n\nDiscipline, Hollywood, discipline I kept telling myself as I got my camera ready.\n\nIn this ad, she'd be filmed from the back and there'd be many stunned faces as she walked past them before the camera slowly turned around to show her from the front. Mark filmed Sofia repeatedly walking to her spot on the beach and saying the commercials tag line in Spanish, I have no idea what it was but it sounded cool. And I also think Mark was getting a lot of takes of her just for his pleasure, and filming everything in slow motion too. Though it had been awhile since we'd worked together, it was clear he hadn't changed a bit. Sofia was incredibly patient with each take. And since Mark did numerous takes, I was getting incredible photos. \n\nFinally, Mark could see that he was losing the perfect natural light he'd had all day.\n\n\"OK, everyone that's a wrap!\" he called out\n\n\"Thank you everyone!\" one of the Pepsi reps called out.\n\nSofia hugged Mark as I snapped off a few more shots.\n\n\"Oh, Jeem...always going click-click-click.\" She joked \"you're like a paparazzi you know.\"\n\nI shrugged my shoulders in response, what was I supposed to say?\n\n\"But you're better looking baby...\" she said as she kissed my cheek\n\nI think I felt an electrical charge from her lips, I could even smell her perfume too. We were all happy to have finished so quickly and the Pepsi people quickly gathered around Mark complimenting him on his efficient production.\n\n\"I can't wait to see your photos.\" Mark said to me as he quickly passed me. \"I might want to do some, uh, further inspection of them.\"\n\n\"Oh, yeah, sure...\" I said in the same wiseguy tone he'd used on me before.\n\nAs if on cue, I could see the skies darkening above us. Mark was losing his perfect natural light to a rainstorm that soon began. \n\nI'd said before that I saw this as a working weekend, and I quickly packed up my stuff for the trip home. Sofia and her people had already left for L.A. since she had to get back to work on \"Modern Family\". As I went out to the transport with Mark and the crew I looked around and wondered if I'd ever get back here.\n\nI got my answer sooner than I expected.\n\nNew Year's Eve was soon upon us and amidst the party plans there was still work to be done. Jeff and I narrowed down 3 particular photos we thought were best to show the Pepsi guys when they came into the office not long after I returned. Sofia was with them and she loved all three photos. The meeting was brief but it included invitations for us to a weekend New Years bash they were throwing at Villa Del Sol, so it looked like I'd get to experience this place after all.\n\nI couldn't have asked for better weather than what I saw when we arrived. When I looked out on the ocean, I couldn't help but think of the frozen tundra of Connecticut, and how glad I was here and not there!\n\nHow different this New Year's Eve looked to be compared to the last one. Man, what Chris would've thought of all this.\n\n\"I miss you, man.\" I said to myself as I looked out on the ocean. \n\nI was heading for the bar that night when a pretty blonde standing outside the bar caught my eye. She looked rather nice in a short white dress with a gold belt. It looked almost Greek-like now that I thought about it.\n\n\"Hi, are you part of the party here?\" I asked somewhat nervously.\n\n\"Oh, yes...but I'm waiting for someone\" she said \"Ah, here he is.\" She quickly said and went off with a well dressed gentleman wearing a stylish white tuxedo. I wasn't all that disappointed, but still curious about her outfit, not to mention his. They went into another room where music was playing and a rather large doorman quickly closed the doors as they entered. \n\nI don't know why but the look of their outfits intrigued me, probably just coincidence, I thought.\n\n\"Forget it, Hollywood\" I heard a voice say beside me \"She's not in your league.\"\n\nI turned to the slightly diminutive woman standing beside me.\n\n\"Oh, really and why is that?\"\n\n\"Well, let me put it this way, hon.\" She replied in her Texas accent \"she's built for comfort...\" then adding a sly smile \"but I'm built for speed.\"\n\n\"That makes sense, and you've got the Corvette to prove it, right?\"\n\n\"Bright boy, there's hope for you yet.\"\n\nI was in the presence of Laura Austin. I'd met her in the midst of the O'Brien lawsuit and she'd been a welcome surprise during my recovery from the effects of the shooting that happened when his case was dismissed. We didn't see one another all that much, she seemed to \"turn up\" when I least expected it. Her work kept her in the same circles as me, but she went in a much different direction, one that I was not privy to. And her work was for a price. Tonight, she was dressed to thrill in a similar low cut white tunic dress with a sparkly gold belt, black stockings and matching heels. Not to mention other generous features on display thanks to the dress.\n\n\"Like the outfit?\" \n\n\"Yes, very stylish given the location and all.\"\n\n\"Looks like something out of Caligula, huh?\" she said with a smile added\n\nHer response took me aback somewhat. But then, as she had once told me, she was from Texas and they got to the point down there, so a response like that wasn't out of the ordinary for her.\n\n\"Interesting comparison, but yes it does. I guess you've seen the movie.\"\n\nI hated to admit I had too. It was, well, something.\n\n\"Have I seen the movie?\" she replied looking thoughtful before chuckling to herself \"Yeah, I guess you could say that.\" She said slowly\n\n\"So, what's with the white outfits on everyone going in there?\" I asked as I gestured toward the room I'd seen the blonde lady enter.\n\nLaura smiled at me\n\n\"I'd tell you but...\" she began\n\n\"You'd have to kill me?\" I responded\n\n\"No\" she replied with an understanding smile \"I'd be violating rule number one.\"\n\n\"Uh-huh...and uh, what's that?\" I said moving in a little closer as she smiled \n\n\"A good escort...\" she began, looking up at me (she was rather short, remember)\n\n\"...never tells her secrets.\" We finished in unison, making her laugh\n\nI could only roll my eyes in response, which only made her giggle\n\n\"OK, I was asking for that. But let me ask you this\" I started \"Who's the lady that's built for comfort?\"\n\n\"Her name's Judy, she goes to parties with me sometimes. But that's all, where her work ends, mine begins.\"\n\n\"My, you're rather witty tonight.\" I said as we got glasses of wine.\n\n\"It's what you get when you study journalism in college.\" She said as she took a sip \"I better not drink too much of this.\"\n\n\"Let me guess, you're on the clock tonight?\"\n\n\"Very funny.\" She said wryly \"I'll remember that.\"\n\nOur glasses clinked together\n\n\"Until we meet again.\" She said before taking a final sip of wine. I could only watch as she went off across the room to meet a well dressed older gentleman who took her into the same room as Judy and followed two other couples as the doors were slowly closed.\n\nI was reminded how exclusive this place was, how corporate-types were usually the guests here. Whatever goes on at places like this were the kind of things that didn't make the front page of the Wall Street Journal. Perhaps the \"Caligula\" comparison wasn't as far-fetched as I thought.\n\nBut at the moment, I was alone in the large atrium. I'd had some fun with Laura before, and I knew that we'd meet again as she said. She'd kept her promises in the past and if our paths crossed, and when the time was right, we'd have more fun.\n\nIt was time for me to have my fun, though. \n\nThe Pepsi guys commandeered the bar and restaurant that night. Mark Stein was there and we got caught up, he had plans to direct a film next and he'd need a photo guy. Just like Mark, always working business into any discussions. He really hadn't changed much. \n\nJust as I went back to the bar for another beer, Sofia strolled in and immediately caught my eye, and everyone else's. She was a knockout in a silky blue dress that looked like the one I'd seen in her TV ads for Pepsi. Her thick brown hair looking gorgeous as usual.\n\n\"Ah! Mister Jimmy! There you are!\" she said as she floated over to me and hugged me \"Are you having fun, honey?\"\n\n\"Oh, uh...the time of my life.\" I said with a casual smile\n\n\"Ahhh...that's good baby.\" She purred \"Come on, let's get a drink\" \n\nSofia and I headed for the bar and she quickly ordered white wine for both of us.\n\n\"Cheers, baby\" she said as our glasses clinked together \"Here's to...\"\n\n\"A good time?\" I said finishing her thought\n\nSofia's face lit up\n\n\"Yes! Yes! That's perfect!\" she said excitedly as she took my hand \"I see everyone else over there, let's go baby.\"\n\nIt was clear that Sofia was controlling things, and I had no problem, she had such a bigger than life, over the top personality that it seemed pointless to do otherwise. The best thing to do was just enjoy the ride. It was bound to be a wild one!\n\nEveryone there wanted photos (guess who took them, again!) and autographs from her and she eagerly posed and signed. Once that wave of fandom had left we all settled in for dinner and a lot of conversation.\n\n\"Mister Jimmy, where you from baby?\" she asked as she sipped her wine\n\n\"Oh, me? Connecticut.\" I replied\n\n\"OH! You're kidding!\" she said excitedly \"that's where my son is, he goes to school up there, ohhh so beautiful there.\" Now adding that electric smile \"just you like you baby...\" she said as she flirtatiously stroked my cheek and laughed.\n\nAll I could do was blush.\n\n\"I think I need another drink.\" I said trying to avoid any more embarrassment. But inside, I loved every minute of it!\n\nAt the bar I got another glass of wine and looked over the scene. The bar looked out onto the ocean and was lit with lanterns and neon. Amidst the Latin music playing, Sofia could be heard chatting up seemingly every person there and I could hear little shouts of excitement from her. When she spotted me at the bar, her eyes lit up again.\n\n\"Mister Jeem! You need to be here!\" she yelled to me with that electric smile\n\nHow could I resist?\n\nAs I returned to the table she immediately stood and with her arms raised began to shimmy to the music.\n\n\"Come on baby...we have to daaaaance!\" she said as she pulled me to the small dance floor.\n\nNow, I will be the first to admit that I ain't no dancer! And with someone like her it probably looked more like she was holding me up or trying to keep me from running away. But I gamely kept my hips moving and tried not to step on her toes as she boogied to her hearts content around me before taking my hands and moving me back and forth in time to the music. It probably looked, no, it DEFINITELY looked ridiculous. I saw Mark off to the side with the little Nikon camera I'd been using earlier, he was using the video feature and could barely hold it still; he was laughing so much. ",
        "\"Don't mind him, baby\" she said to me \"you're having fun\"\n\n\"Aw, I don't care about him...you're right, I'm having fun.\"\n\n\"Oh, no baby...we're having fun.\" She said with that classic smile of hers\n\nThe Latin music was replaced by a slower song, Eric Clapton's \"Wonderful Tonight\" and now Sofia softly draped her arms around me. We could really see one another close now. She had such beautiful dark brown eyes that accented her hair color.\n\n\"Ah, I like this song, it sounds so romantic.\" She said\n\n\"Yeah, the old classics are always the best.\"\n\n\"Old? How old is this song?\" she was surprised \"I've never heard it.\"\n\n\"It's like mid-seventies.\"\n\n\"Wow, I can't believe that.\" She said \"oh, what the hell, it's good, that's what matters most, right?\"\n\n\"Si, it matters the most.\" I said, making her laugh\n\n\"Ah, Mister Jeem, you are trying to charm me, huh?\"\n\nI could only shrug my shoulders\n\n\"Well, uh, if I am I must be doing a good job.\"\n\nSofia nodded\n\n\"Yes, you are, baby.\" she said leaning in close to me.\n\nI didn't know if I should kiss her at this moment or what, her eyes and smile seemed to be telling me what to do, we were so close to one another. It was such a beautiful feeling at this moment, but my nerves were getting the better of me.\n\n\"Maybe we should...get another drink?\" I finally said\n\nShe nodded\n\n\"Good idea, honey.\" She said \"we've got plenty of time.\"\n\nPlenty of time, what could that mean?\n\nWe went back to the bar and she immediately ordered two shots of tequila.\n\n\"Two shots of Cuervo, please.\" \n\n\"Whoa, gettin' out the big guns, huh?\"\n\n\"What do you think?\" she said with a sly smile as our glasses clinked\n\nI looked at the powerful concoction for a moment\n\n\"Well, I'm heading into uncharted territories...again.\" I thought\n\nSofia and I knocked back our shots simultaneously and I heard myself yell out \"Yeeeeahhhhhhh!\" through gritted teeth as the tequila hit me. It was almost like that scene in \"Easy Rider\" when Jack Nicholson took a swig from his flask and dedicated it to D.H. Lawrence. \n\nSofia laughed boisterously\n\n\"Ahhh, that means you lovvvve it, baby!\" she laughed \"Two more!\"\n\nTwo more tequila shots went down the hatch before we rejoined our party.\n\n\"OK everybody gotta do the carry okay!\" she called out to everyone\n\nMark and I looked at each other wondering what she meant\n\n\"I think she means karaoke.\" Mark finally said\n\n\"This should be interesting.\" I said as I saw her looking through the songbook\n\n\"Mister Jeem! You need to pick the music!\" she yelled\n\nMark looked at me with a wiseguy smile.\n\n\"The ladies love you, Jim.\" He said with a smirk.\n\n\"I'll get you for this one, you know.\" I said with a smile of my own\n\nSofia commandeered the karaoke system and was soon belting out \"Twist and Shout\" and Lady Gaga songs to our amusement. \n\nOnce we'd all had our laugh, she had me go through the song book with her.\n\n\"Oh! You have to do this one! I want to hear you sing now.\" She said\n\nI looked at the lyrics come up on the screen and it was \"Wonderful Tonight.\"\n\n\"Oh, geez, I'm being setup here.\" I said as she laughed boisterously.\n\nBut I did my best at maintaining my composure, knowing that she was right next to me, her soft hand casually caressing my arm as I sang, or tried to, given the atmosphere. Out of the corner of my eye I could see her sexy smile as she watched me. And my eyes kept drifting downwards to that incredible chest of hers. At the end, everybody cheered my \"performance\" as it were.\n\n\"Do another one, Jim! Do another one!\" Sofia cheered to me\n\n\"I need a little liquid courage first.\" I said as I went back to the bar\n\nI went back to the bar amid lots of back slapping from the other partygoers.\n\n\"2 more shots of Cuervo.\" Sofia said to the bartender \"he needs some courage.\" She laughed\n\nAnd just as before, 2 shots of Tequila produced the desired effect. It seemed like Sofia was immune to any effects of the tequila. \n\nWe all went back and forth showing off our karaoke chops as the night wore on. Seeing Sofia sing Adele's \"Rolling in the Deep\" had to be seen to be believed, I wonder if Mark got that on his video camera. Soon it was getting close to midnight. Bottles of expensive looking Champagne now appeared at all the tables and everybody got close to their significant others as the countdown started.\n\nSofia was, naturally, close to me (though why I had no clue)\n\nWe were all counting down the seconds\n\n\"10...9...8...\" Sofia was close to me \"7...6....5...\"\n\nCloser now, I could feel her hand on my ass\n\n\"4...3...2...1...HAPPY NEW YEAR!!!!\" We all yelled out as the clock struck midnight and cannons spit out confetti and streamers\n\nSofia turned to face me and we kissed but they quickly became deeper kisses and my hands went down to caress her ass. She gave no resistance and I felt her grinding onto my crotch\n\n\"Ohhhh...Mister Jim...mmmm\" she purred into my ear \"...we'll have lots of fun later, baby...lots of fun.\"\n\nThe smile she gave me said it all as her hand cupped my crotch.\n\n\"Later on, honey...\" She purred into my ear. \"...later on.\"\n\nMy crotch reacted accordingly to her touch. By the look on her face, it was just what she wanted.\n\nWe continued to drink as the night wore on, the band came back out and Sofia had everyone salsa dancing with her. I tried to keep myself steady. I couldn't remember the last time I drank any tequila, but it was clear I was an amateur in that department. I went for a Sprite hoping that might level things out for me.\n\n\"Mister Jeem! You need another champagne, baby!\" Sofia said as she dangled her glass as signal she was the one who really wanted the refill\n\n\"How can I say no?\" I said to her as I headed back to the bar.\n\nAs I waited for the bartender to bring our drinks, another woman came up beside me.\n\n\"Fun night for you?\" she said\n\nI turned to see Laura had returned\n\n\"Uh, yes, very good. What about yourself?\"\n\nShe smiled wistfully, her hair seemed a little mussed but she still looked the same as I'd seen her earlier.\n\n\"Pretty good time for me, too.\"\n\nI got another look at her white dress and finally got up the courage\n\n\"OK, I've gotta ask this\" I started \"What's the deal with the outfit? Every person I saw going in that room was wearing white, is it some kind of themed party?\"\n\nLaura giggled as she sipped her wine\n\n\"You really wanna know, huh?\" she replied sensing my interest\n\nI nodded, which made her beckon me with her finger\n\n\"I'll never tell.\" She whispered seductively in my ear before laughing\n\n\"I guess I got my answer.\" I said sheepishly\n\n\"It's just a fancy party, that's all.\" Laura said between giggles\n\n\"Mister Jeem! I want my champagne!\" I heard Sofia yell from across the room\n\nWe both turned towards her voice \n\n\"You better keep her happy, Hollywood\" Laura said as she started to leave before giving me a hug and whispering in my ear \"She has nice boobs too, too bad I can't join you...Happy New Year, Jim\" and adding a sweet kiss on my cheek.\n\nWe were all getting tired now and people began drifting away as it was close to 3 AM. Even Sofia's energy level was dropping.\n\n\"We should have one more drink, no?\" she asked me\n\n\"Sure, why not?\" I replied \"New Years Eve only comes once a year, or every night if you buy the DVD.\"\n\nSofia laughed heartily as she caught the reference to her movie \"New Years Eve\".\n\n\"Oh, my god! That is sooo funny!\" she laughed \"You're a funny guy Jim, you know that?\"\n\n\"Must be all the tequila.\" \n\nSofia and I headed for the bar\n\n\"Let's get a bottle to go.\" She said\n\n\"To go? Go where?\" I was confused\n\nSofia smiled at me, there was no need for explanation\n\n\"Okay, yes...good idea.\" I said hesitantly \"Uh, can I get a bottle of champagne to go?\" I said to the bartender, I looked at Sofia and her smile told me I made the right choice.\n\nSofia Vergara had her arm wrapped around mine as we walked (or was it stumbled?) down the hallway towards the elevators. As we neared them, I felt her hold me a little tighter.\n\n\"Come here, Mister Jim...\" she said as she pulled me into a slightly dark corner. Her kisses were instantaneous and deep. Her hands felt so soft and caressing, I was overwhelmed by her. \n\n\"You kiss me so good, honey.\" She purred\n\nI couldn't say anything in response, I guess my smile said it all.\n\nThe elevator doors opened and we calmly got on with another couple. Sofia stood close to me but I could feel her hand on my crotch, casually caressing it, clearly enjoying the growing hardness she could probably feel within. She looked at me with a naughty smile, she seemed so oblivious to how this looked. I just hoped no one turned to see us. Once the other couple got off, Sofia and I giggled. But as soon as the doors closed and we were alone, she immediately wrapped herself in me.\n\n\"Aren't you afraid there might be cameras here?\" I said remembering how my last \"elevator tryst\" with Julianne Hough was stopped by her thinking security cameras might catch us in the act. \n\nSofia didn't seem to care.\n\n\"Oh, baby...\" she said as she caressed my face with her finger \"I don't think we're the first people to do this in an elevator.\" She purred as we kissed \"besides...I love to kiss...I love to be kissed...and...I love to be touched.\" \n\nHer words sent an electric charge through me.\n\nJust then, the elevator doors opened and we were on our floor. We both couldn't help but laugh at how we kept getting interrupted.\n\n\"Okay, Mister Jim...let's go.\" She said with that big smile of hers.\n\nWe made our way down the hallway, or in our case, stumbled. Finally we reached what seemed like her room and she fumbled around for her keycard, which promptly dropped from her hand onto the floor.\n\n\"Clumsy.\" She said\n\n\"Allow me.\" I said as I knelt down for the card which lay at her feet. She had beautiful black stiletto shoes on and her legs looked super smooth. I slowly stood up, making sure to be close to her as I ran my hand up her soft leg until it began to go under her dress and was just short of her ass. Now I was the aggressor as it were, kissing her deeply against the door, only making her moan.\n\n\"Do you think we're the first to do this?\" I asked\n\n\"I don't know...\" she purred \"but I like it.\"\n\nSofia slowly inserted the card and the door snapped open\n\n\"Let's go inside, baby.\" She said with a look of pure seduction on her face.\n\nWe were kissing one another heavily as we made our way inside her suite. Sofia's kisses were beautifully romantic, but I think she knew what I was really interested in. I now boldly (but softly) touched her beautiful tits, felt their softness in my hands. \n\n\"Oh Jim...sooo nice...ohhhhhyyyesssss baby...\" she purred\n\nUp against the wall, I was kissing and fondling the lovely Sofia Vergara. The lust I felt was equaled by the voice inside me saying \"is this really happening?\"\n\nHer little moans and gasps told me it was. It really was!\n\n\"Ohhh Jim, baby...\" she said as our lips finally parted \"let's get a little more comfortable...I'll be right back, honey.\"\n\nI could only nod in response as she quickly went into the bathroom.\n\nI looked around the suite, though it was still dark out, I could tell its windows had a view of the ocean and there was wicker framed furniture throughout. The bed was large and had a sheer canopy hung from it. I took my jacket off and loosened my tie, stuffing it into the pocket of the jacket.\n\nBehind me, I could hear movement. I turned to see Sofia standing in the dimly lit hallway, dimming the lights somewhat and slowly making her way towards me. \n\n\"Hello, James...do you...like what you see?\" she said as she came closer to me.\n\nEven in the dim light, the closer she got to me, the more I could see that the robe was sheer and she was naked underneath. She embraced me and I truly felt her against me, her perfume was so soft and fragrant.\n\n\"I like what I'm seeing...v-very much.\" I said softly as we kissed.\n\n\"Ohhhhyessssss...\" she moaned as our lips parted \"Ohhh baby...so nice\"\n\nSofia bashfully looked down at her bountiful chest, then up at me with a sexy smile.\n\n\"I know what you like, baby...they're all yours honey...all yours.\"\n\nHer sheer robe was tied near the top with a thin pink ribbon. I gingerly reached for it and it began to loosen ever so slowly, until it parted. I looked up at her, then just as gingerly reached for her shoulders and slowly drew the robe down her shoulders until it dropped to the floor.\n\nSofia Vergara was naked in front of me. Her tits were, well, unreal! Beautifully large, her areolas the size of quarters, the nipples already erect. \n\nSomething else was erect as well.\n\nI touched her tits, they felt even softer than before as their size filled my hands. I leaned in to kiss her as I fondled them and she reacted with a low, sexy moan.\n\n\"Ohhhhbaby...so nice...\" she moaned as I kissed her neck \"Baby...ohhhhhyesss...I want to make you feel...feel good too...\"\n\n\"Oh, and how would you like to do that?\"\n\nShe smiled widely\n\n\"Let me show you, honey...\"\n\nShe began to slowly rub the crotch of my pants\n\n\"Ahhh...I think there's something nice in there...ooooo...something VERY nice.\" She said with her eyebrows raised and beaming smile \"Let's see what it is.\"\n\nThe zipper on my pants went slowly down, I knew I might just explode right then and there the way she was sweet talking me. I could feel her soft hands inside my pants and rubbing my underwear.\n\n\"Ah, so nice...so very nice.\" She purred \"let me get these off you...we'll have a little fun, no?\"\n\n\"Oh yes...w-w-we'll have some fun.\" I somehow said as she loosened my belt and unsnapped my pants. They were loose enough that they easily slid down and onto the floor, leaving me in just my underwear. And there was definitely a bulge there that she loved the looks of.\n\nSofia knelt down, and looked up at me as she slowly lowered my briefs so that my dick revealed itself to her before jumping up and outwards.\n\n\"Ah! Yessss...just like I hoped it would be.\" She beamed as she caressed my dick. \"Ahhhh...so beautiful, baby...so beautiful...\" she said as she looked up at me before slowly and seductively licking her lips.\n\nThe look in her eyes told me exactly what was next. I felt a slick tongue on the head of my dick then a rush as it slid into her mouth, I breathed inward sharply as I felt her lips and tongue work their magic. I looked at the mirror on the wall and even in the dim light I could see her head moving up and down on my dick, her ass looked beautiful too.\n\n\"Oh baby...you have a beautiful dick...I love it...oh, I love it.\" She said between licks. \"So nice...\"\n\nSlick from her licks, she began to slowly jerk it before sounding excited\n\n\"Oh! I see it got bigger\" she said excitedly \"Ooooo this is gonna be nice, baby...\"\n\nMy hands softly caressed her head as she bobbed up and down on my dick. As it slowly came out of her mouth, she licked its full length ever so slowly as she fondled my balls.\n\n\"So beautiful...so beautiful, baby.\" She said in a soft voice \"Oh, let me do something even nicer.\"\n\nSofia took her beautiful tits, wrapped them around my dick and began moving it up and down between them.\n\n\"Ohhhh...feels soooooogoooood baby\" she moaned, then giggled \"it looks so cute!\" \n\nIt all felt unreal! I loved what she was doing but I didn't want to have it end before I wanted. \n\n\"Th-this feels so unreal\" I somehow gasped\n\n\"Ah, good...I knew you'd love it, baby...I love it too...\"\n\nI could hold back no more.\n\nI exploded onto her tits as she screeched in excitement before she eagerly grabbed my dick and jerked it before licking it clean.\n\n\"Ahhhh, Mister Jim...that was so nice.\" She said as she stood up. She dabbed her finger onto her tits and licked the tip of it. \"Mmmmm you taste nice baby.\"\n\nI was still breathing heavily from climaxing but more from the amazing show she'd put on for me, and me alone. Sofia knew how good she'd made me feel, she was clearly excited by what we'd done, and we both knew round two was all but certain. \n\n\"Come with me baby,\" she said as she gently took my hand and led me to the bathroom. The bright lights were a little jarring at first but seeing Sofia in all her naked glory looked incredible. She took a washcloth and began to softly clean herself off, so simple but yet so erotic! In the mirror she could see me close by, and gave that smile of hers.\n\n\"You can look, baby...I know you like what you see\" she said looking into the mirror with a giddy smile \"Here, make yourself useful.\" She casually said as she handed me the cloth, the water on it still warm. I softly touched her breast with the cloth and began to softly clean her, going between watching my hand and looking into her beautiful eyes. \n\nShe liked what I was doing.\n\nMy hand went from one breast to the other, gently swirling my hand over her nipple, making her breath inward before softly moaning as the feeling came over her in gentle waves of pleasure. I stood closer and we kissed as I did this. \n\nAs if it had a mind of its own, my hand now moved down her stomach as she stood against the vanity and instinctively opened her legs slightly, she knew where this was going.\n\n\"Yessss...oh yesss, baby...yessss...\" she moaned\n\nHer hips were also moving instinctively, like they had a mind of their own. My hand, still holding the warm cloth brushed over her perfectly smooth pussy and she breathed inwardly before exhaling a long slow moan.\n\n\"Oh yessss...do that honey...that feels good...mmmm...\"\n\nMy hand gradually made slow round circles around it and she was so close to me. Her breaths were so erotic. The cloth fell from my hands and now my finger began to touch her pussy, her breaths became even more pronounced. Her pussy was so wet and my finger easily entered her. Sofia threw her head back, her long hair so sexy.\n\n\"Oh! Oh! Oh, my god baby...that feels so good.\" She moaned before deeply kissing me. \"So good...ah, it's your turn baby...I want to feel good now.\"\n\nI turned her around and sat her up on the vanity, she spread her legs and I saw her pussy up close, it was beautifully pink and smooth, like she'd had whatever procedure was done especially for me. Like she knew what we'd be doing on this night of nights. \n\nHer skin was perfectly smooth and very warm as my lips and tongue began to feel their way around her, and drew closer to her beautiful pussy. I kissed it ever so softly, then again. She breathed in sharply, giving an equally erotic exhale.\n\n\"Yes, baby...oh yesssss...\" she said softly\n\nMy tongue now licked around the folds of her pussy, she was very wet to the touch and tasted nice too. My tongue now probed inside her and I could feel her hand gently caress my head the more I licked her. I looked up and could see her softly touching her breasts, her eyes closed, teasing the nipple. \n\nI felt her tap my head. I looked up and she was smiling.\n\n\"Let me have a little, honey.\" She said\n\nSofia reached down and with her middle finger, dipped it into her pussy, then licked the tip of it.\n\n\"Mmmm...I taste good, don't I?\" she said with that sexy smile\n\n\"You certainly do.\"\n\n\"Then, honey I'm ready for you. I want to feel all of you now.\"\n\nI looked down and my dick was hard again, it was ready too.\n\nSofia was seated on the large marble sink, her legs spread apart. I got up close to her, I was nervous for some reason. Doing this with someone like her, I wondered if I'd be OK, would I be alright.\n\nThere was only one way to find out.\n\nMy dick was super hard now, I could see how wet her pussy was. Her enormous tits looked amazing in this light. I took my dick and rubbed it a little on her pussy, then slowly and effortlessly I slid it inside her.\n\n\"Ohhhhhh baybeeeeee...yessssssss...\" she moaned as she felt it inside her.\n\nIt felt so warm being inside her, and she loved it too. She put her arms around me and held me close as we began to fuck.",
        "\"So good baby...uh-huh so good...\"\n\nWe kissed as we fucked, our tongues merging in the same way as we fucked. Her legs were interlocked with my arms. I probably could've picked her up if I tried, but not this time. I wasn't pounding into her by any means, she deserved a good steady fuck, make the moment last.\n\n\"Oh baby...honey...let's go in the bedroom, it'll be more comfortable for us.\" She said breathlessly.\n\nI nodded\n\nSofia slowly got off the counter and was a little wobbly as she stood.\n\n\"That felt so good, baby...but I like the bed better\" she said as she brushed my cheek \"...is more romantic.\" Adding that classic smile\n\nAgain, I could only nod\n\nWe returned to the bed and she pulled back the bedcovers. We got into bed at the same time and lovingly embraced. She was right it felt much better, not as cold and hard as the counter. And her soft body only added to the feeling. Sofia kept up a steady series of moans and soft breaths.\n\n\"Oh yesss...kiss me Jim...so good...I'm yours baby...oh, I'm yours...\" she said in such a beautiful voice. For some reason, her accent didn't seem as pronounced, but then everything sounds great in the throes of pleasure. I went for her tits and she was immediately turned on as I sucked on her nipples\n\n\"Mmmmm...yessss baby...suck my boobies...oh I love it!\"\n\nI loved how I was turning her on, hearing her breaths and feeling her hand caress my head. My tongue made little circles around her nipples before sucking them.\n\n\"Mmmm...baby, watch this.\" She said\n\nI looked up and she gripped one of her tits and brought it up to her mouth and gave it a little lick of her own \n\n\"You like that?\" she giggled\n\nI nodded \"very sexy\"\n\n\"Thank you baby\"\n\nWe kissed deeply again, as our lips parted, the look she gave told me she was ready for more.\n\nI moved my body down and slowly parted her legs, her pussy looked so nice and I could see it was glistening, even in the dim light of the room. I held my dick and slid it softly and I lay atop her. She moaned softly and smiled as she felt all of me inside her. My hips started to do their work, she was loving every move I made as we fucked. Her eyes were slightly closed and I could see she was smiling, then she looked straight at me.\n\n\"Oh, baby...fock me...fock me good!\"\n\nNow her accent returned!\n\nI fucked her harder and wrapped my arms around her back, she did the same and I could feel her manicured nails.\n\n\"Ohhhh...baby...baby...oh god...oh god...OHHHHHGGGODDDDDD! I'M CUMMMMING...OH FUCK BABY!\" she cried out \"Keep focking me! Keep focking me!\"\n\nSofia let out a guttural moan from deep within, her body tensed up and she gripped me closer to her as she climaxed. Her breaths were quick and sharp, then slower and softer in my ear as she relaxed. I slowed down my fucking until I was motionless atop her. \n\nWe were both breathless.\n\n\"Oh...so good...so good...\" she said softly \"did you come too?\"\n\n\"No.\" I gasped\n\n\"Good...I want to do everything with you Jim...you make me feel so good.\"\n\nMy dick popped out of her pussy as she rolled me over onto my back. She didn't seem to mind, she had other ideas. She wrapped a hand around it and let it slide through.\n\n\"Very slippery, huh?\" she said with a naughty smile \"I wonder how it got that way?\"\n\nShe seemed to like the way it felt, I was more afraid of exploding onto her again like before. Before it was possible, she swung a leg over me and I saw my dick slowly make its way back into her pussy, she loved the feeling.\n\nI was now presented with an incredible sight. Sofia Vergara was atop my dick, her incredible breasts heaving upwards as she breathed, her thick dark hair still cascading around her. \n\nAnd she was with me!\n\nShe was now rocking on my dick, moaning and gasping as we fucked, holding her tits, letting them bounce as she bounced atop me. I held her hips as she leaned backwards, I could see my dick as it slid in and out of her perfectly smooth pussy. With each movement, I heard a beautiful moan from her.\n\n\"Ohhhhgoddddd... soooo good!\" she moaned as she sat up straight and looked down at me \"Oh fock yeah!\"\n\nShe leaned down and we kissed deeply before she fed me one of her 36DD's. I accidentally bit on the nipple making her squeal with delight, it wasn't something I normally did. And in this case, it provoked accidental pleasure from her, lucky me.\n\nI guess apologies weren't necessary in this case.\n\nShe continued to rock and bounce atop my dick, and I felt her body tense up again. Her breathing was getting more rapid, so was mine.\n\nI quickly sat up and held her close, I could feel it coming\n\n\"Ohhhhbaybeeee....uh-huh...ohhhhhgodddd...YES! YES! YES!\" she screamed out as she threw her head back, and almost threw us off the bed.\n\nWe climaxed together.\n\nI could feel myself exploding into her pussy with ferocity again and again. The release made me groan out loud as I exploded into her. I lay back on the bed in exhaustion. Sofia looked so sexy as she breathed deeply and sat back up again before leaning down to my level again. We embraced and kissed.\n\n\"This is so good...oh my god...I h-h-haven't felt this good in so long...mmmm I love it.\"\n\n\"B-been a long t-time for me too.\" \n\n\"So good baby...so good...\" said in a voice that grew softer\n\nWe slowly lay back on the bed, facing one another and kissed. She drew the sheets over us.\n\n\"That was so good, Jim...Happy new year, baby.\" She said softly with that smile of hers.\n\n\"Thank you, Happy New Year to you, too Sofia.\" I replied\n\nShe rested her head on my chest and the sounds of the ocean lulled us to sleep.\n\nI began to dream of a beach...\n\nI don't know how long we slept, but I awoke with the customary souvenir of a new year's party. I looked at my silver Timex watch (the \"Fauxlex\" as I called it, since it looked like a fake Rolex, hence the name). It was after nine in the morning. I had to see what the view was like from here and hoped my Nikon was still in my jacket pocket. I turned and saw Sofia was still asleep. I needed to get up and at least splash some water on my face since I was in her room and not mine. I slowly got up from the bed and made my way to the bathroom. The cool water felt good on my face. The face that looked back at me from the mirror though showed that it had been quite an evening. But I smiled and just hoped I could remember it all. \n\nGreat, the camera was where I'd left it. I went to the large sliding doors that led to a small balcony and the ocean view. I was right, the view was spectacular. Inside, I could hear Sofia breathe in and turn over, her eyes opened and she saw me with my camera.\n\n\"Click-click-click, that's all you seem to do.\" She said in a sleepy voice as she held a pillow close to her head and smiled at me.\n\nAll I could do was shrug my shoulders\n\nSofia got out of the bed and I felt her embrace me from behind as we were on the balcony. Imagine what the tabloids would think if they saw this naked goddess. And the geek she was with.\n\n\"Mmmm, what a wonderful way to start the new year.\" She said as she kissed my cheek.\n\n\"Uh, the view or me?\" I replied\n\n\"What do you think, baby?\"\n\n\"I think it's the view\"\n\nShe giggled and kissed me again\n\n\"Let me see that camera.\" She said \"You take pictures of me, it's my turn now.\"\n\nShe eagerly took the camera and quickly framed one of me\n\n\"OK, lovvve the camera dahling...you vant to be ravishing, don't you?\" she said in an even more exaggerated accent, never mind the fact she was stark naked while she did this! I couldn't help but laugh, making her laugh even more. She finally fell into my arms and we kissed, still laughing, before getting back into bed.\n\n\"Good morning, baby...\" she said in a soft voice\n\n\"Morning\" I said as I kissed her\n\n\"No more bad dreams?\" she asked\n\n\"No, only good ones.\"\n\n\"Good! I'll be right back.\"\n\nShe went off towards the bathroom and it gave me an idea. I was curious to see whatever photos were on the camera, I remembered Mark had used the video feature, but never saw what he filmed. As I clicked through each one I saw it was different shots of us with partygoers, in various stages of New Years Eve. Sofia returned, still naked and joined me on the bed.\n\n\"Oh! Let me see, let me see!\" she said excitedly\n\nI showed her each one and she was intrigued.\n\n\"Let me see if the video he took worked.\" I said as I clicked on the button\n\nSure enough, there we were, slow dancing to \"Wonderful Tonight\". She held me close as we watched.\n\n\"Aw, we look so cute there!\" she said happily \"look at you, such a good dancer.\"\n\n\"Oh, please! I look like a mannequin.\" I replied, making us both laugh\n\n\"You're a cute mannequin.\" She said as she kissed my cheek\n\nI stood up to get the case from my jacket. Sofia continued to examine the camera.\n\n\"You like taking pictures, huh?\" she asked\n\n\"Uh-huh, I suppose if you're gonna have a job it should be something you like.\"\n\n\"You do all kinds of photos?\"\n\n\"Pretty much, why?\"\n\n\"Just curious...do you ever do any, um, sexy photos?\"\n\n\"Well, uh...\" I was pretty tongue tied\n\n\"I mean...nude photos for like the Playboy, you know?\" she said in her accent\n\n\"Uh, no...I've never had the privilege.\"\n\nShe looked at me with a sly smile\n\n\"Would you like to?\"\n\n\"Like to, what?\"\n\n\"You know...do...um...photos of me.\"\n\nI was, well, speechless.\n\n\"There's a first time for everything, you know, it'll be my first nudes. I might as well have someone I know take them.\"\n\nBefore I could reply, she handed me the camera and stretched herself out on the artfully unmade bed, lying on her side, fingers through her hair, looking sultry. The classic centerfold shot.\n\n\"I'm ready for my close-up Mister Jim.\"\n\nHow could I resist?\n\nI took a deep breath and snapped a photo, then another, and one more. She made subtle changes, but the beautiful nakedness of her body was there, alright. She sat up and held her tits, bringing one up and licking it as best she could, then fell backwards, laughing. I got on the bed and took some of her as she lay flat on the bed. She looked up at me and licked her lips. Then sat up on her knees, legs spread and stuck her hands on her hips, looking super confident and super sexy all at the same time.\n\n\"Ok, Lemme see!\" she said excitedly\n\nShe took the camera and looked through the photos I'd taken. They were sexy alright!\n\n\"You know, someone could make a lot of money with these\" she said with a slightly raised eye, like she was implying something.\n\n\"Uh, not if they stay on the camera.\" I replied \"or they're safely tucked away somewhere.\"\n\n\"Good idea.\"\n\nJust then the phone in the room buzzed. She answered it and I took that as my cue that her \"centerfold shoot\" was over and I should start to gather my things. \n\n\"You have to go, huh?\" she said as she hung up the phone\n\nI nodded\n\n\"I've got an early flight out, there's a film project I'm committed to.\"\n\nSofia looked a little sad at my news\n\n\"Well, we can at least get some breakfast with the others, how about that?\" she said\n\n\"That sounds good\" I said as I dressed \"We can see who looks the most hung over.\"\n\nShe laughed boisterously at that\n\n\"Oh, Mister Jeem, you're a great guy.\" She said as she embraced me\n\n\"And, uh...you're a great lady.\"\n\nThat elicited a very peaceful smile from her, not the kind the public saw, but the kind she gave someone in private, someone who was special.\n\nAnd that someone was me."
    ],
    "authorname": "hollywoodjim",
    "tags": [
        "beach",
        "big tits",
        "oral sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/adventures-of-hollywood-jim-ch-54"
}