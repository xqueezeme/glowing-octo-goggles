{
    "title": "The Cherry Poppers Ch. 28",
    "pages": [
        "Chapter 28 -- The contest finally ends -- Part 1 \n\nAuthor's note -- Thanks for reading The Cherry Poppers story and being patient as I finished the book. I tried hard to get the end to you quickly. Part 2 is done as well and will be posted right after this. I appreciate all the kind words about this story. I hope you all enjoyed it as much as I did writing it.\n\n***\n\nIn the morning, Jason woke first. Initially, he wasn't sure where he was but quickly realize. He looked for Beth and found her sleeping with Haden. The realization that he had probably missed a hot scene of the two women together bothered him. He cursed himself for falling asleep and missing their sensual girl on girl lovemaking. \n\nHe didn't bother disturbing them. He wrote Beth a short note to come to the swim meet and then dressed. He headed straight for the pool. He planned to shower there before getting into his swimsuit. He didn't have long before the meet started. Fortunately, it was a home meet or he would have needed to be at the pool much earlier for the bus. \n\nJason ran into Brad in the locker room. He was already in his suit and headed to the pool. Jason joined him after a quick shower. The team warmed up a little as did the competing teams. The meet would be against two other teams not from their conference but both excellent programs. How Jason's team fared would be an indicator of their strength in the east. \n\nEach team convened before the meet in the locker rooms to discuss strategy. Jason's coach laid out the strategy and the swimmers for each of the medleys and relays. The order for most of the other races had been set by mid-week. Jason was seated first in the 100 and 200 breaststrokes and butterfly with Brad third. Both would swim legs in the medleys too. Jason would even do the 400 meter individual medley. \n\nOne of the other teams was especially strong in freestylers and they jumped out to an early lead in the meet. Jason won the 100 meter breaststroke with Brad two seconds behind him. Those points moved Jason's team in second temporarily. \n\nWhen Jason got out of the water, he could hear some yelling louder than most. He had spotted and waved to Beth earlier. Haden had come with her. Jason looked to the stands and saw them clapping and yelling loudly. He smiled and waved to them. \n\nWhat Jason didn't notice was a gray haired man in a suit sitting off alone not far away. He eyed Jason and noticed Beth and Haden clapping for him. When Jason rejoined his other teammates, the man discreetly moved over behind Beth and Haden. They didn't even notice despite the fact that the stands were only half full. \n\nIt was a close meet until Jason excelled in the end. He won the 200 meter breaststroke in record time, breaking the school record and conference too. Brad came in second, just below Jason's best time from the prior year. Jason won the 100 meter butterfly too and Brad came in second again. In the 200, he won with a school record time. Each time he won, Beth and Haden could be heard cheering above all others. \n\nThis time when Jason waved to them, he did notice the black suited man sitting directly behind them clapping too. It looked odd that he was seated so close to them since there were plenty of open seats to either side of Beth and Haden. They were kinda sitting alone, higher up in the bleachers. \n\nJason's team won the meet, but it was close. His four wins had carried the team. Brad's individual three seconds and one third helped too. Jason and Brad were congratulated after the meet by their coaches and teammates alike. Even some of the competitors came over to congratulate Jason. Some were guys he knew from high schools near his home town that he had competed against. A reporter for the local paper stopped Jason on the way to the locker room. He asked Jason several questions while a cameraman filmed it. \n\nAfter showering and dressing, Brad and Jason walked out of the jovial locker room to find the waiting Beth and Haden. They were all smiles and Beth ran to give Jason a huge kiss. Haden was standing there when they broke the kiss and she kissed him too. Jason introduced Brad to Haden and Brad got hugs from both girls as well. Jason offered to buy everyone an early dinner and they all agreed. However, as they were leaving the black suited man stepped forward from the shadows and asked to speak with Jason. He wanted to speak alone. \n\nJason was a little skeptical but agreed. The other three said they would wait for him outside. The gray haired man led Jason further down the hall, away from most of the activity around the locker room. The rest of the pool was quiet for a Saturday with the meet going on. \n\nOutside, Beth was curious about the gray haired man and asked Brad. \n\n\"Who do you think that guy is?\" \n\n\"Maybe a scout for a bigger school,\" Brad suggested. \"Or maybe he's a US Olympic Committee guy.\"\n\n\"Could be,\" Haden said. \"He asked Beth all sorts of questions.\"\n\n\"He did? When?\" Brad queried.\n\n\"Yeah, in the stands,\" Beth said. \"He was friendly enough but he asked a lot of questions about Jason.\"\n\n\"What kind of questions?\" Brad asked.\n\n\"Things like how did I know him and was I his girlfriend.\"\n\n\"Why didn't you ask him why he wanted to know?\"\n\n\"He was smart the way he asked us questions,\" Haden said. \"Something like you'd expect from a lawyer or someone. Simple questions at first, that got more specific as Beth answered.\"\n\n\"Really?\"\n\n\"Yeah, he started casually at first, by asking if we knew that boy that just won the race when Jason won the 100 meter breaststroke. He asked like anyone curious and just making conversation would. He talked about how good he was and really acted friendly. He talked to us a lot throughout the meet,\" Beth stated.\n\n\"Hmm,\" Brad wondered aloud. \n\n\"We didn't think anything of it at the time, just a swimming fan or something. We asked if he had a son swimming but he didn't,\" Haden explained. \n\n\"Curious,\" Brad admitted.\n\n\"Yeah, what's with the secrecy and pulling Jason aside to talk? And what's taking him so long? What could this guy be saying to him?\" Beth questioned.\n\n\"I don't know,\" Brad agreed.\n\nJason came out a few minutes later. Beth immediately asked who that guy was. Jason just smiled and waved them off. He kept walking towards the frat encouraging them to follow. Haden, Beth, and Brad all looked at each other curious that he seemed not to want to talk about it or to dismiss it. They wanted more information but Jason was already twenty steps ahead and calling for them to hurry as he was hungry. \n\nJason led them to his room first so he could put on better clothes. He still had on the clothes from the day before. He had them wait outside the room while he changed but Beth insisted on coming in. They were in the room for several minutes which gave Haden and Brad time to get to know each other. \n\nWhen they came out of the room and they all started walking out the back of the frat to Jason's car, Haden and Brad whispered to Beth. \n\n\"What did he say?\"\n\n\"He claims the guy is a reporter for another paper,\" Beth said.\n\n\"Yeah?\" Brad replied.\n\n\"But, you don't believe him?\" Haden asked reading her roommate's face. \n\n\"Course I do,\" Beth said, but again Haden knew better.\n\nThe gray haired man forgotten for a while, they had a fun dinner. Haden and Brad seemed to get along great. They went to an Italian restaurant and afterwards, Jason proposed they go bowling. Everyone agreed, argued when he offered to pay again, and settled for paying for their own shoes. It was eleven when they dropped Brad at his dorm. When Jason drove the women to their dorm, Beth invited him up. Jason jumped at the idea, remembering the night before. \n\nIn the room, the women wanted to get more comfortable. Jason thought he was in for another tremendous show until they grabbed their pajamas and both went to the bathroom. Alone, Jason thought about the day's events and the contest. \n\n'God, how can I do this?' Jason fretted. 'Caulfield's lawyer wants the log book back tomorrow. I've only got one more chance and tonight is it. He says they have the cards from the clinic. How do they have the cards? I personally helped Dr. Clark pack them up for storage. How is it they have access to them?'\n\nJason was deep in thought as the two beauties returned in their pajamas. Even in PJs they looked hot. He tried not to smile despite the fact that they both had hard nipples poking out their tops, probably a result of the cool bathroom and hallways in these dorms. Jason was shoeless, had the TV on again, and lay across the middle of Beth's bed with his back to the wall. His plan worked as the two women took spots on either side of him to watch the TV. Having accomplished that, Jason wondered, 'how can I make this work? Time is short.'\n\nHe thought they were just going to settle back and watch TV but Beth had other ideas again. She leaned into him and kissed his cheek.\n\n\"My hero,\" she said.\n\n\"What?\"\n\n\"You were awesome at swimming today.\"\n\n\"You're not so bad yourself,\" Jason said, returning the praise.\n\n\"I've not broken a conference record yet,\" Beth stated with her hand again on his thigh.\n\n\"You will.\"\n\n\"Thanks, but I think you have more talent than me,\" Beth claimed, her hand squeezed his leg.\n\n\"Nonsense.\"\n\n\"It's true. Isn't he great, Haden?\"\n\n\"Unbelievable,\" Haden said and smiled warmly at Jason.\n\n\"Haden had fun with Brad today. Did he say anything to you about her?\"\n\n\"No.\"\n\n\"Well, he's nice and cute too,\" Beth said. \"Right, Haden?\"\n\n\"Yeah,\" Haden said smiling.\n\n\"Jason?\"\n\n\"What?\"\n\n\"Were you okay that Haden and I slept together last night?\"\n\n\"Sure.\"\n\n\"You sure?\"\n\n\"Yeah...definitely.\"\n\n\"Good...watching you cum in Haden's hands got me so hot and you fell asleep right away. Haden was hot too from touching you. Weren't you?\"\n\n\"Yeah,\" Haden said with a furtive glance at Jason.\n\n\"Did you like her touching you with me here?\" Beth asked.\n\n\"Ah...it was okay,\" Jason stated, unsure if that was a trick question.\n\n\"You liar!\" Beth shouted with a smile. \"You loved it.\"\n\n\"I said I liked it,\" Jason defended himself.\n\n\"Haden loved it. Didn't you,\" Beth said to her.\n\n\"Yes,\" Haden declared and smiled at Jason.\n\n\"She's like to do it again, wouldn't you, Haden?\"\n\n\"Yes.\"\n\nBeth's hand had found his growing bulge in his pants as they talked. She squeezed it again like the night before. Her fingers found the covered head and rubbed it menacingly.\n\n\"Ah,\" Jason moaned. \n\n\"Open his pants, Haden,\" Beth stated.\n\nHaden looked at Jason to see if he might protest, seeing none, she moved her hands to his belt. She got that open and the rest too. Beth helped her pull his pants down and off. Jason still had his boxers on and his half hard cock began to tent the front. The ceiling light was on tonight along with the TV. \n\n\"Get that side, Haden,\" Beth said, pulling on one side of his boxers. They soon joined his pants on the floor.\n\nJason's eyes darted from Beth's smiling face to Haden's intense stare at his cock. Feeling her eyes on him again made his cock twitch incessantly as it continued to stiffen. \n\n\"Isn't it beautiful, Haden,\" Beth proclaimed.\n\n\"God, yes,\" Haden said.\n\n\"Look at it pulse. He likes us watching it. Don't you, Jason?\"\n\n\"Yes,\" Jason groaned. \n\n'Haden must not be a total lesbian if she likes my dick,' Jason thought.\n\n\"I knew it. I knew you liked it. I told Haden you'd love it if she touched it again. I don't mind either. I think it's hot watching her feel your big dick,\" Beth announced. \"Touch it again, Haden.\"\n\nHaden didn't have to be asked twice. Her hand enclosed around the nearly hard shaft making Jason moan. Her other hand wonderfully played with his balls. Last night they had been tight to his shaft already. Now she was able to really move the sack around and feel the nuts inside.\n\n\"Tease it here again,\" Beth said, pointing to the spot under the head.\n\nHaden did as she was told by removing her hand from his balls. Jason watched intently as her finger played across the sensitive grouping of nerves under the head.\n\n\"Argh,\" Jason growled as pre-sum formed on the head.\n\n\"He likes it, Haden. Look...see,\" Beth said, pointing to the pre-cum.\n\nHaden remembered last night and smeared the drop around the head. In the greater light of the ceiling lamp, Jason's cockhead glistened with the wetness. He was completed hard now and Haden started stroking the shaft lightly.\n\n\"Oh, geez,\" Jason moaned.\n\n\"Jason?\" Beth asked.\n\n\"What?\" Jason croaked.\n\n\"Haden and I were talking today. She'd like to try some more things. Is it okay if we try something new?\" Beth questioned.\n\n'Yes,' Jason gasped to himself. \"Okay.\"\n\nJason wasn't sure what Beth had in mind but he hoped Haden wanted to sit on his cock. He had one more night to score his last virgin and Haden was his only hope. He had to play this cool though because of Beth's feelings. He wanted her to be encouraging of this interaction with Haden like she was now. If she knew he wanted to fuck Haden to pop his twentieth cherry, she might get jealous and withdraw her consent to this threesome play, even if the result was him getting another million dollars for them. Haden might also get cold feet if she knew he was hoping this would happen instead of him being a mildly coerced or willingly participating male. \n\n\"Remember what we discussed,\" Beth said to Haden.\n\nHaden was hesitant a second, but instead of climbing up on his cock as Jason hoped, she leaned over and licked another drop of pre-cum that had formed. She pulled back a little to taste the watery fluid. Apparently satisfied, she leaned down and licked more. She swirled her tongue around the head driving Jason nuts. He looked at Beth and she smiled broadly at him but then looked at Haden again. \n\n\"It's great, isn't it, Haden?\"\n\nHaden didn't stop but nodded her head while simultaneously licking up and down the top of the shaft above her hand. Jason felt like he was having an out of body experience. It was almost like watching a porno movie except he was the one feeling every flick of Haden's wet tongue. He couldn't pull his eyes from watching Haden give her first blowjob. Just once or twice to look at Beth to be sure she still approved. Her broad smile, encouraging words to Haden, and look of lust in her eyes instantly confirmed she found it almost as erotic as him. \n\n'Oh, god. Nothing can compare to this,' Jason thought. \n\n\"See...isn't it fun?\" Beth asked Haden.\n\nHaden only nodded as Beth added, \"She's had to listen to me tell her for over a year how much I loved sucking dick, especially yours. She never could understand the fascination. Now, she can experience it for herself.\"\n\n'God, if Beth keeps talking like this while Haden blows me, I'm going to cum for sure,' Jason reasoned, as he fought off his quickly rising need. \n\n\"How's she doing, Jason?\" Beth questioned.\n\n\"Just fine,\" Jason more groaned than spoke. \n\n\"Take the head in your mouth now, Haden,\" Beth instructed.\n\n'Oh, fuck,' Jason gasped internally as Haden's hot mouth enclosed over his cock. \n\n\"Swirl your tongue around it and slide your lips up and down. Try to take more into your mouth,\" Beth encouraged. \n\nNot to be completely left out of the action, Beth slid her fingers along Jason's thigh and helped Haden by massaging his balls. The combination of attention was almost too much to bear. Jason's balls were already firm to his body and he could feel his orgasm simmering to a boil. \n\nHaden started bobbing on his cock of her own initiative. Her hand moved in conjunction with her mouth on the shaft too. Either Beth had given her pointers earlier or she had seen enough video blowjobs to know what to do. Jason's cock felt like a steel bar he was so turned on. He watched as Haden gagged a little trying to get over half of his cock in her mouth. He could feel his cockhead working at the back of her mouth. \n\n\"Go, Haden,\" Beth encouraged, seeing her roommate take Jason as deep as she could. \n\n\"Oh, fuck,\" Jason said aloud this time.\n\n\"Getting ready to blow, babe?\" Beth asked with amusement. \n\n\"Yes,\" Jason growled in response.\n\n\"Haden?\"\n\n\"What?\" Haden asked as she reluctantly came of his dick.\n\n\"You ready for the part we talked about?\"\n\n\"I think so,\" Haden answered.\n\n\"Go for it, girl. Jason tell her when,\" Beth requested.\n\nHaden's hot mouth returned to sucking Jason's cock. She had a good rhythm going again quickly. She still had a lot to learn about sucking dick though and Jason hoped Beth would want to continue this idea of using him for instruction. \n\n\"Squeeze a little harder with your hand and go faster,\" Beth said.\n\n\"Shit,\" Jason muttered as he immediately felt the change.\n\n\"He's close now, Haden. Aren't you, babe?\"\n\n\"Yes,\" Jason gasped.\n\nBeth's fingers still playing with his balls was even more incentive for him to cum. He could feel his cockhead expanding as if a bubble about to burst. His balls churned with hot sperm ready to fire up his cock any second. He wasn't sure Haden was ready for what was to come, but at that second his bliss outweighed reasonable thought.\n\n\"Fuck,\" Jason roared.\n\n\"Get ready, Haden,\" Beth said.\n\nBeth's words nearly coincided exactly with the first volley of cum. Having never experienced a discharging cock in her mouth before, and only seeing one for the first time the day before, Haden was ill prepared for the onslaught. It didn't help either that Jason was really blowing a huge load from all the eroticism of the moment. \n\nHaden gagged and choked as the first blast painted her tonsils with a huge load of cum. She tried to maintain her lips sealed around Jason's cock as Beth had instructed, but the force and amount quickly overwhelmed her, especially as the second mega blast joined the first. Beth and Jason watched in amazement as cum dripped from Haden's nose and escaped around his cock in her mouth. It coated her hand and Jason's cock in sperm.\n\n\"Oh, god,\" Beth moaned, watching the erotic scene unfold before her. \n\n\"Argh,\" Jason growled as his pleasure shot from his dick into Haden's waiting mouth in wonderful bolts of bliss. \n\nBeth felt concern for her roommate as Haden tried hard to contain Jason's cum. The next few pulses of cum from Jason's cock were not as strong but still plentiful. Haden found her mouth starting to fill as she managed to reseal her lips around the throbbing and pulsing shaft. Fortunately for her, the worse was over, and the next few amounts were smaller. Haden collected it all in her mouth as best she could. When she thought he was done, she pulled off. A string of cum briefly connecting her lips to Jason's cock until she pulled away enough for it to break. \n\n\"Good, girl,\" Beth praised. \"What're you going to do?\"\n\nJason listened to Beth but couldn't take his eyes off the side of Haden's pretty face as she pulled back with a mouthful of his cum. It was so erotic; his cock remained hard despite the heavy orgasm he had just experienced. Traces of cum still bubbled in Haden's nose as she tried to breath and her lips were coated in milky sperm. Her cum coated hands still held his shaft below the glistening red head. \n\nBeth and Jason watched transfixed as Haden got up the nerve and slowly swallowed. At first, Jason thought she would run for tissues or something, but he was amazed at her resolve to do this right. At least, Beth must have told her that guy's always prefer if you swallow. Most girls didn't care though and instead pulled off or spit. Beth must have expressed how much she liked it.\n\nWhen Haden had clearly swallowed and her expression became normal, not pained with the look of someone eating raw oysters for the first time, or brussel sprouts, Beth asked what she thought. Beth's expressions and questioning intrigued Jason and made him smile too as she looked like a teacher or chef getting someone to try something new for the first time. ",
        "\"Well?\" Beth queried.\n\n\"God, it came out my nose,\" Haden complained and pinched her nostrils together. \"Yuck!\"\n\n\"I know. It can do that. It happened to me the first time I sucked Jason too.\" Beth said, remembering the airport and slapped Jason's leg as if mad at him.\n\n\"What?\" Jason replied with a big grin. \"I couldn't help it.\"\n\n\"It was a lot more than you said too. Plus the first one tried to go down my throat,\" Haden complained.\n\n\"I told you to be ready for it to shoot out,\" Beth declared.\n\n\"Yeah, but not like that.\"\n\n\"What about swallowing it? You did it. Impressive.\"\n\n\"It's kinda thick and salty,\" Haden said, making a face.\n\n\"Yeah,\" Beth agreed. \"But would you swallow it again?\"\n\nJason was so enthralled with this conversation his cock still had only lost a little of its hardness. A huge drop of whitish sperm had gathered at the tip too. Haden still held him as if she couldn't let go.\n\n\"I suppose,\" Haden replied.\n\n\"Now's your chance,\" Jason said, indicating his cock. \n\nBoth women looked at the big drop on the head of his dick. Haden then looked at Jason with a smile on her face, her tongue still licking her lips clean. Beth's eyes were on him too.\n\n\"What about you?\" Haden asked with a mischievous wink. \"How'd I do?\"\n\n\"Very impressive for your first time like Beth said,\" Jason responded.\n\n\"Good,\" Haden said and surprisingly leaned down and sucked the end of his cockhead. \n\nWhen Haden pulled back the cum was gone and she quickly swallowed it. Beth smiled at her and Jason too.\n\n\"It's not only salty but has an aftertaste,\" Haden said with a frown. \n\nBeth and Jason laughed and Haden joined them as they all shifted back onto the bed. The TV was still going but a different show was on now. It was getting late but Beth was too horny to sleep. She curled up under Jason's arm and took over for Haden playing with his cock. \n\n\"Can you go again soon?\" Beth whispered to Jason even though Haden probably could still hear as she sat close on his other side. \n\nHis cock was mostly stiff in Beth's hand with her expert manipulations. So saying no would have been untrue and selfish. Besides the fact that he still didn't get what he wanted, even though having Haden give him her first blowjob had been an incredible turn-on. He still needed to fuck her, but he also couldn't deny wanting sex with his wonderful girlfriend that had already made many of his fantasies come true. \n\n\"Anything for you, babe. Suck it a little and I'll be ready to give you a great ride,\" Jason proclaimed.\n\nBeth didn't need to be asked twice. She kissed his cheek and immediately bent down to take his cock in her mouth. Jason would have expected Haden to just watch but instead she twisted around on the bed to watched Beth and play with his balls. 'Oh, god,' Jason mused. 'Could I get both? Can I last that long? Will Beth let me fuck her?'\n\nJason looked from Beth's expertly sucking mouth to Haden's smiling face and was even more surprised when she leaned up and kissed him. He could still taste in her mouth the results of his cum deposit there earlier. Haden's tongue danced inside his mouth and his cock stiffen like a board between her passionate kisses and Beth's sucking. He was already hard enough to fuck Beth. He broke the kiss with Haden long enough to squeeze Beth's shoulder.\n\nShe got the hint and stood up, stripped in seconds, and got on her knees on the bed. She swung her leg over him and settled above his cock. Haden and Jason watched her position him at her entrance. She settled down slowly. Despite being super wet and horny as she could be, Jason's cock was still a lot for any woman to just drop down on. Her pussy needed time to stretch and accept the big dick. \n\n\"Oh, geez,\" Beth gasped as the head popped inside her sweet tight pussy. \n\n\"Ah,\" Jason groaned also as Beth descended on his dick.\n\nHaden had stopped kissing Jason to watch his cock enter Beth. She looked from Beth's straining face to the dick entering her and back. Jason observed her and hoped she was taking mental notes for her own soon to be cherry popping.\n\n\"Mmm...I feel so full of cock,\" Beth mused aloud. \"Jason's cock feels unbelievable inside me, Haden.\"\n\n\"God, it's hard to believe that big thing fit in you,\" Haden claimed.\n\n\"Fits great, doesn't it, big boy?\"\n\n\"Sure does,\" Jason agreed.\n\n\"Oh, fuck,\" Beth said as she quickened the pace.\n\nJason's hands migrated up to play with Beth's pretty nipples and her pert tits, as they jiggled erotically as she fucked up and down on his cock. Soon Beth was in a steady rhythm and moaning her pleasure. She felt like she could ride him all night until Jason got into the act.\n\n\"Play with her clit, Haden,\" Jason said.\n\n\"What?\" Haden replied.\n\n\"What?\" Beth did too.\n\n\"Play with her clit while she rides me,\" Jason said.\n\nHaden looked at Beth to see what her response was but seeing no objections; she slid down lower on the bed. Her right hand found the top folds on Beth's pussy lips as she bounced up and down. It didn't take Haden but a second to find the little nub and rub around it. \n\n\"Oh, fuck,\" Beth howled with her head back. \n\n\"Shh,\" Jason cautioned amused. \"It's late.\" \n\n\"Oh, god, that feels so good,\" Beth claimed.\n\nWithin a few minutes, Beth was moaning like crazy as she could feel her orgasm racing onward. She quickened her bouncing on Jason's cock and leaned forward to maximize the pressure to her clit from Jason's cock and Haden's fingers. Jason's hands further tortured her breasts and nipples as they pressed down into his two hands. Beth's orgasm crested as she bucked on his dick and wiggled her sweet ass. \n\n\"Fuck,\" Beth yelled, again a bit too loud.\n\n\"Shh,\" Jason cautioned, still not ready to cum. \n\nBeth never stopped fucking Jason's cock. She rode him to another orgasm, and then a third before she collapsed on his sweaty chest, panting with him. Haden finally removed her exhausted fingers from the cramped space between their groins. Jason still hadn't cum. He had been close just before Beth's last climax. Her pussy had clamped down on him and she stopped moving to let the waves of bliss wash over her. Her stopping prevented Jason's release despite her incredibly tight pussy and the strong muscles. \n\nFinally, Beth rolled off Jason, allowing his cock to come free. It still stood iron bar stiff and ready for more. Haden noticed he hadn't cum and told Beth.\n\n\"Oh, god, you didn't get off?\"\n\n\"Not yet.\"\n\n\"Haden, play with it for him. I'm too tired,\" Beth said, curling up on the bed. \n\nHaden placed her left hand around Jason's dick and stroked it up and down. She was right handed but that hand was still too tired. \n\n\"What should I do?\" Haden pleaded.\n\n\"Whatever you want,\" Jason said.\n\n\"No, I mean, Beth. What should I do?\"\n\n\"Go ahead, Haden. Do what we talked about.\"\n\n\"But you need to help,\" Haden beseeched.\n\n\"You don't need me. Jason is the important one. Besides, he did me. He can help even better than I,\" Beth said. \"I'll be right here for you though.\"\n\n\"But...but\"\n\n\"Go ahead, Haden. It's okay with me like I said,\" Beth claimed.\n\n\"Go ahead with what?\" Jason asked, hoping he knew the answer.\n\n\"She wants you to fuck her,\" Beth explained. \n\n\"She does?\" Jason asked.\n\n\"Yes, tell him, Haden.\"\n\n\"Oh god, I can't,\" Haden professed nervously. \"He's too big anyway.\" \n\n\"Yes you can,\" Beth declared. \"Jason, fuck her will you. She wants to try it with you and I said it was okay with me.\"\n\n\"You sure?\" Jason questioned, but certainly didn't want her to say no. He even regretted saying it in case she backed down. \n\n\"She's my best friend and you're my guy. I can't think of a better way to permanently bring us all closer together,\" Beth said. \"This way we will always have something special together.\"\n\n\"Wow...good idea,\" Jason agreed and could barely hide his glee.\n\n\"Yeah...I thought you'd like it,\" Beth said with a little sarcasm.\n\n\"I don't know if I can go through with it,\" Haden claimed.\n\n\"Yes you can. Jason, help her will you,\" Beth said and then lay back down again. \n\n\"Don't go to sleep,\" Haden requested of Beth.\n\n\"I'll be right here. I won't miss it.\"\n\n\"I don't know,\" Haden said.\n\n\"Come on, Haden,\" Jason encouraged, not wanting the chance of a lifetime to slip through his fingers. \"It'll be fine.\"\n\n\"I'm scared,\" Haden admitted.\n\n\"Everyone is the first time. It's not that bad. Most girls even enjoy it,\" Jason proclaimed. \n\n\"What do I do?\" Haden queried.\n\n\"Well, we'll need to start with you getting undressed,\" Jason said a little teasingly.\n\n\"Oh, right,\" Haden said and even smiled weakly. \n\nShe stood up by the bed. He had seen her twice before naked but still Haden moved slowly as she contemplated the reality of actually going through with this. Beth had offered Jason to her and Haden wanted to but she was still nervous. She admitted to herself she wasn't keen on pain. \n\nJason watched Haden undress with great interest. The quick glances he had only heightened his desire to see and feel her naked body. He told himself that this was his last other woman for the rest of his life. He better enjoy it, because after this it was just Beth and he forever. \n\nHaden seemed to make up her mind to proceed. She stripped off her clothes quickly once she had. Jason watched as each new area unfolded. When she was fully undressed, she stood before him modestly covering her breasts and pussy.\n\n\"What now?\"\n\n\"You have some KY or lube Beth and you might use?\" Jason asked.\n\n\"Oh, good idea. Ah...I have some baby oil?\"\n\n\"That'll work,\" Jason said. \n\nHe watched intently as Haden walked to her dresser and retrieved the baby oil. She looked great, as he knew she would. His cock lurched uncontrollably as he stared at her tight ass, shapely long legs, and brown hair, which dropped just below her shoulders in the back. As she turned and walked back, Jason looked, but then quickly glanced away. He didn't want to be caught checking her out but he catch her brown muff again and those smallish but nicely shaped tits. Her silver dollar sized brown nipples looked good enough to eat. He could only thank his lucky stars that this babe had not been touched before. He said a silent word of thanks to the girl that seduced Haden in high school.\n\nBack at the bed, Haden said, \"Okay, here.\"\n\nJason took the baby oil and instructed her to sit. He pulled her to him and kissed her. Haden felt tight in his arms but relaxed more and more as they kissed. Jason put as much passion into his kisses with Haden as he dared with Beth propped up on one elbow and watching. Her eyes were heavy, but the excitement of watching them together was holding her back from sleep. \n\nJason guided Haden's hand back to his cock. As she curled her fingers around him, he reached for her breasts. Haden flinched slightly at his initial touch but then relaxed. Jason couldn't help now and stared at her cute tits. Beth's were bigger; a true B to a maybe small B, equally shapely, but the color difference was the most striking thing. Beth's tits were deliciously pale white, dotted with a few cute freckles in between, and crowned with smaller pink nipples. Haden's were creamy white also but topped with sweet looking larger brown nipples that begged to be sucked. They reminded Jason somewhat of Pam's sweet nipples. \n\n\"Mmm,\" Haden moaned. \"That feels good.\"\n\n\"Nice,\" Jason praised.\n\n\"They're too small,\" Haden protested about her own boobs.\n\n\"Nonsense,\" Jason claimed. \"I think they're cute and I love these nipples he said given them both a tweak at the same time. \n\n\"Ahem,\" Beth muttered.\n\n\"Yours are incredible, babe,\" Jason immediately extolled with a purposeful giggle.\n\nBeth's cum on Jason's cock gave Haden some moisture to work with but Jason quickly added some baby oil to the top of his cockhead. It ran down to Haden's lightly stroking hand as it moved over his steely shaft. Pre-cum leaked from his tip too, adding more lubrication. \n\nJason poured some baby oil on his hand and applied it to her pussy. He let his fingers caress the puffy lips on either side of her slit before working a finger along the tight gash. He made a point to find Haden's clit and lightly massage that. He got the reaction he hoped for when she moaned and quickened her hand movements to his cock. Next, he found her tiny entrance and teased around outside. He applied even more baby oil before capping off the bottle.\n\nHaden was still on her knees beside him and started to grind her cunt into his hand as Jason's fingers played deliciously with her pussy. Jason couldn't help but stray from her snatch long enough to get a quick feel of the tuft of hair above. Haden's pubic hair reminded him of pictures he had seen of oriental women. Upon returning to her sex, he found more slickness there than just the baby oil. \n\nHaden's kisses were hot and full of tongue now as Jason probed two of the main erogenous areas of Haden's body. His fingers, slick with oil, squeezed the turgid nipples of Haden's tits. His other hand found her clit again and moved around it. \n\n\"Oh...ah,\" he heard Haden moan. \n\n\"Okay, I think we're ready,\" Jason said. \"Get on top of me like Beth.\"\n\n\"Aren't you supposed to be on top the first time?\" Haden questioned.\n\n\"I could, but not necessarily,\" Jason explained. \"This way you can control the situation more. I thought you might like that.\"\n\n\"Oh, okay.\"\n\nHaden moved above him like she had watched Beth earlier. She aligned Jason's big dick with the entrance to her sex. Jason's strong hands on her hips settled her until he was probing her hole. \n\n\"Ready?\" Jason asked.\n\n\"I guess,\" Haden said. \"Don't hurt me too much, Jason, please.\"\n\n\"Let's start with you doing the lowering down and see how far we get that way.\"\n\n\"Really?\" I thought you had to do something to break through.\"\n\n\"Let's see first. Just drop down slowly until you feel pain.\"\n\n\"Okay,\" Haden concluded and tried settling a little more over him.\n\nJason felt his big cockhead pressing apart the lips of her pussy. Surprisingly though, Haden got the head lodged pretty well before she felt much pain. She stopped with him poised at her entrance and actually partly inside. Jason felt the obstruction but it wasn't as complete as others he'd touched. He decided to take over and he thrust up once.\n\n\"Oh,\" Haden groaned as Jason's cock sunk a good two inches inside her. \n\nThere had been a slight sharp pain but it quickly passed and she could feel him lodged what seemed a mile inside her. Just as she was barely used to that feeling, he thrust again.\n\n\"Oh, geez,\" Haden groaned louder. \n\n\"You okay?\" Jason asked. \n\n\"I guess so,\" Haden said. \n\n\"How's it feel?\"\n\n\"It doesn't hurt much but you feel like you're pushing something huge inside me,\" Haden claimed.\n\n\"I am,\" Jason mused. \"You broke easy.\"\n\n\"Is it over?\"\n\n\"The hard part definitely,\" Jason said.\n\n\"But it didn't hurt that bad,\" Haden said.\n\n\"You must have played around down there a little hard once,\" Jason proposed. \"You stick your fingers inside you?\"\n\n\"Well, not really, but maybe something else,\" Haden bashfully admitted. \n\n\"Argh,\" Haden responded when Jason sunk another two inches into her. \n\n\"Oh, god...it feels like I'm sitting on a steel rod,\" Haden moaned.\n\n\"Almost there,\" Jason claimed.\n\nAnother thrust brought another moan from Haden but this time his cockhead touched up to her cervix. He was lodged almost completely inside her. Over seven inches of cock probed deep into Haden's body core.\n\n\"Oh fuck, Jason. It feels like you're splitting me in two.\"\n\n\"We'll let it sit there a second,\" Jason said. \"When you feel like it start wiggling your ass around a little.\"\n\nHaden hardly waited at all before her ass started gyrating around slightly. The wonderful sensations of his cock deep inside her made Haden gasp with delight. She was amazed there was so little pain. The fullness feeling was even become comfortable and she moved some more. \n\n\"Like what you feel?\" Jason asked.\n\n\"Yes,\" Haden gasped.\n\n\"How's this feel?\" Jason asked as he pulled back a little and pushed in.\n\n\"Oh, shit,\" Haden growled. \"Oh, fuck, Jason.\"\n\n\"Good, ha,\" Jason mused as he repeated the process.\n\n\"Mmm,\" Haden moaned.\n\nJason settled into a rhythm where he lengthened the speed and depth of his stroke. It wasn't long before Haden was groaning like crazy and riding his cock like an experienced woman. Jason guided her hips for a while until she caught the rhythm too and then he returned to her magnificent nipples. He tweaked those as he pounded her pussy.\n\n\"Oh, my god,\" Haden growled as her first fucking climax approached like a freight train gone wild. \n\nHaden had never felt pleasure this wonderful. Her high school friend had given her some great orgasms and Beth too, but nothing like this. Her whole body seemed like it was on overload. Her clit pulsed with delicious waves of pleasure and her nipples tingled from more than Jason's assaulting hands. It happened before she even realized and she threw her head back and howled.\n\n\"Argh,\" Haden yelled as thunderclaps of bliss seemed to explode in her head. \n\nHer body shook, yet went rigid at the same time, as if that could be. Her nails scratched along Jason's tummy as she lost complete rational thought. Her normally active brain seemed to freeze up as storm surges of pleasure crashed over her like a tsunami. Haden's pussy throbbed and ejected her womanly cum to soak Jason's groin. \n\nJason watched the fabulous brunette cum. Not only was he thrill to be drilling his twentieth virgin and breaking the record, but just watching Haden enjoy his cock with such wild abandon made Jason's balls tighten even more. He had calmed down a lot between Beth and Haden but that was all lost now. Her squeezing, tight pussy was driving him crazy. Watching Haden cum pulled the sperm from his balls like a vacuum.\n\nSudden surprising clarity made Jason realize he couldn't cum inside her. 'Fuck...shit...fuck,' he howled to himself. He wanted to go until he let her feel the heat of his cum inside her but that wasn't meant to be. He couldn't risk getting her pregnant as that would screw everything. He gasped and fought back his rapidly rising cum to make this, his last fuck other than Beth, last a lifetime. \n\nHaden didn't seem to care about anything, least of which was his cum. She rode his cock like a banshee, amazing even Jason with her wildness. He believed he had awake a sleeping dynamo in Haden's sexual desires and he jealously envied the next guy to mount this wild mare. He was in for the ride of his life just like Jason was getting now. \n\n\"Fuck,\" Haden screamed, way too loud for two in the morning.\n\nShe was obviously cumming again and he could feel himself losing control too. He glanced to the side to find Beth watching with wide eyes. Her face turned from watching Haden ride his cock like a cowgirl on steroids, to staring at him. The look on her face told him this would never happen again. \n\n\"Fuck,\" Jason screamed this time and tore his cock from deep inside Haden with a strong push, lifting her up.\n\nIt seemed Haden hardly noticed as she convulsed in his strong hands like a ragdoll. Jason's cock immediately started spewing cum in geyser-like projections onto his chest, even coming close to hitting himself in the face. By the time he was done, he was covered in his own sperm. He realized his arms were burning from basically holding Haden above him. He let her down right onto his cum covered chest. Her erect nipples poked his chest as she continued to writhe on top of him. She didn't stop cumming for another few seconds.\n\nJason slowly turned his head and looked again at Beth. She was still watching him. Their eyes met for a long moment and then she tore a corner of the bedcovers loose on her bed and crawled underneath. She curled into a fetal ball as Jason realized her possible regrets. He gathered his strength and picked Haden up off him. He carried her naked to her bed and placed her on it. She opened her eyes and tried to sit up.",
        "\"Jason,\" she said.\n\n\"Shh,\" Jason said. \"Go to sleep.\"\n\nHaden looked at him with curious wonder. He helped her get under the covers. Her body equally covered in drying cum just like his. When she was tucked in, he went to rise. Her hand gently grabbed his arm.\n\n\"Thank you,\" Haden whispered sweetly.\n\nJason's conflicted mind just said the obvious, \"Your welcome.\"\n\nHe rose and crawled into bed with Beth. He tried to nudge her so they could sleep side by side but she wouldn't move. He knew she couldn't possibly be asleep but he gave in and dropped under the covers on the other side. As tired as he was, it took him ages to fall asleep. 'He'd won, but had he really lost!' Those thoughts kept him awake until he was sure he heard Beth's quiet breathing as she slept. \n\nBeth was up, showered and dressed before Jason or Haden even stirred. She was sitting at her desk reading when Jason suddenly bolted awake. \n\n\"What time is it?\" He asked hurriedly.\n\n\"Ten...why?\" Beth answered.\n\n\"I have to meet that reporter at eleven,\" Jason said furthering the deception of who the guy was. \n\n\"Where?\" Beth asked.\n\n\"Back at the frat,\" Jason replied and swung out of bed. \n\n\"Okay.\"\n\n\"I'll call you later,\" Jason said as he pulled his clothes on.\n\n\"Okay.\"\n\n\"Beth?\" Jason said, kneeling by her desk chair, \"I love you more than anything. More than the air I breathe, more than water, more than swimming, more than sex, more than life.\"\n\nBeth turned and looked at him. Her normally gorgeous blue eyes became watery with tears. She touched his face as she looked into his eyes. \"Me, too,\" she said.\n\nJason kissed her with every ounce of passion he had. Her tears ran from her eyes, down her cheeks, and he kissed both cheeks, and tasted her salty tears. \"I love you,\" he whispered.\n\n\"I love you too, Jason,\" Beth proclaimed.\n\n\"Let's go out later, just the two of us. Let's do dinner and a movie.\"\n\n\"I'd like that.\"\n\n\"I'll call you this afternoon after I get a swim in,\" Jason said.\n\n\"I'll be here,\" Beth declared.\n\nHe kissed her one more time and hurried out the door. Fortunately, Haden never woke. He was glad too, as he thought about the awkwardness that might have presented. \n\nJason dashed back to the house and before showering even, pulled out the log book from where he'd hid it in his desk. He marked the twentieth entry as Haden Walters and closed the book. He put it back before showering and dressing. At exactly eleven his cell phone rang. Jason met the gray-haired man in the lobby and invited him down. He had a suit on again. Jason was glad that Chad was off somewhere. \n\nThe man introduced himself as Lawrence Markley. He was one of Douglass Caulfield's personal lawyers. He got direct to the point and asked for the log book. Jason fetched it from his desk. Jason couldn't help but add.\n\n\"I made it.\"\n\n\"Excuse me,\" the man said.\n\n\"I made it to twenty,\" Jason stated.\n\n\"That's nice. All this will be verified before next Saturday's dinner. Please make sure everyone arrives promptly to the dinner,\" Mr. Markley said.\n\n\"Okay,\" Jason replied.\n\n\"Everyone should be in suit and tie too.\"\n\n\"Okay.\"\n\n\"Nice to meet you, Mr. Robinson,\" the attorney said extending his hand.\n\n\"Same, Mr. Markley,\" Jason replied. \n\nAs the lawyer headed for the door, with book in hand, Jason asked, \"Mr. Markley, will we be getting the checks at the dinner?\"\n\n\"No, you'll be getting a call this week from my secretary, but I can tell you now what it will be about, and you can prepare the others too. We'll be asking for your savings or checking account numbers at your bank. The monies will all be wired into your various accounts before the close of business next Saturday. We'll make all the arrangements with the banks. At the dinner, you will only received a certificate that looks like a check from Mr. Caulfield. Good day, Mr. Robinson.\" \n\n\"Good day,\" Jason replied. \n\nHe immediately called Mark and explained what had just happened. Mark agreed to get the word out to the various brothers. He had many he could e-mail. \n\n\"I did it!\" Jason shouted in the phone.\n\n\"What?'\n\n\"I got twenty,\" Jason effused.\n\n\"No way! How the fuck did you do that?\"\n\n\"Haden!\"\n\n\"You fucked your girl's roommate. Are you nuts? Beth is surely going to find...\"\n\n\"She let me,\" Jason boasted. \n\n\"Jason, you didn't break the number one rule and tell her about the contest did you?\"\n\n\"Absolutely not!\" It just happened,\" Jason said, leaving out the part about finding Haden and Beth together. \n\n\"You're fucking amazing. Congratulations, Little. I knew you had greatness written all over you,\" Mark said jokingly.\n\n\"Thanks. I told Caulfield's lawyer but he didn't seem too impressed,\" Jason added. \n\n\"I'll let Caulfield know,\" Mark offered.\n\n\"Thanks. Let's go together Saturday, ha\"\n\n\"Absolutely. I'll come by and pick you up,\" Mark offered.\n\n\"Great...see you then.\"\n\nThey hung up and Jason was on cloud nine as he walked to the pool. He had called Brad earlier and they met there to practice together. Brad talked incessantly about Haden but Jason seemed disinterested in pursuing the conversation. Brad eventually dropped it, but not without a strange look showing he didn't get his friend's lack of interest in talking about Haden. "
    ],
    "authorname": "BlewWater69",
    "tags": [
        "virgins",
        "cherries",
        "hymens",
        "frat",
        "contest"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-cherry-poppers-ch-28"
}