{
    "title": "Phone Sex Party",
    "pages": [
        "After reading some of the stories here, I felt that the readers would appreciate hearing about something that happened during my junior year at college. I went to school in Southern California and lived in an on-campus two-bedroom apartment. Me and my friend Tara shared the larger bedroom, and another friend, Courtney, had the smaller one. My boyfriend, Trevor, went to school in Arizona which isn't that far away. As a result, we'd see each other probably every month, but in between, there were a lot of late night, erotic calls to keep us from getting too lonely.\n\nOne night there was a party at another apartment in our complex. My roommates went to it as did most of the other students living in the complex. I had to work on a paper that was due the following week, so I had to pass. I finished my research and outline about midnight and then grabbed a Smirnoff Ice from the fridge thinking I might join the party. I quickly finished the bottle and then grabbed a second one and dialed Trevor. He didn't answer so I hung up and started to change for the party.\n\nA minute later, my cell rang and it was Trevor. He saw that I had called. He, too, was at a party in his dorm building. He sounded pretty buzzed, and I was jealous thinking about him having a good time drinking with all his friends while I was cracking away at the computer. We talked for about 10 minutes and I grabbed another Ice, feeling relaxed a bit. He went outside to have a smoke and was standing with some friends that I knew as well from all of my trips out there. They were all pretty buzzed and all wanted to talk to me, so Trev put his phone on speaker. I did as well and continued to get dressed for the party.\n\nThen Spence, one of Trevor's friends, asked if I was lonely and did I want him to tell me a \"good night\" story. They laughed, and then another one asked, jokingly, what I was wearing and if I could describe it to them. They were all laughing when I said that I wasn't much at all except for a thong. This shut them up. Remember, I was changing for the party and was just picking out some jeans while standing in my thong, so I was actually telling the truth. They didn't believe me so they forced me to tell them the color, etc.\n\nThis became fun so I started to play it up telling them how lonely I was and if there was anything they could help me with. Kyle then said that Spence had already gotten a hard on and that I should stop before he blows. I told him that would be ok, and maybe, if they didn't mind, I could blow as well. This totally got them going.\n\nTrevor asked if I was drunk, too, and I said that I had had a few drinks and was feeling good. He then took me off of speaker and stepped away from his friends where it was quieter and asked me if I was serious. I told him that I didn't mind and I would say a couple of sexy things to help his friends get their rocks off if it was ok with him. He said sure, remember, that he is drunk, and he said that they would go back to his dorm room which was like a 5 minute walk.\n\nAfter I hung up, I got another drink. Now, I'm no lightweight, but having not eaten since having a salad at lunch, I was getting pretty buzzed myself. I also thought this would be kind of fun.\n\nTen minutes later, Trevor called. He asked if I was still up for it, and I told him yes, and that I wasn't really going to do anything that would embarrass him. He understood and then put me on speaker. I also put my phone on speaker so I could still do my make-up for the party.\n\nI won't bore you with all of the details, but the guys kept asking questions to which I would give them the standard phone-sex reply. They were so drunk that they soaked it all up. They finally asked me to touch myself. I told them I was already massaging my breasts and nipples, but wouldn't talk about it unless they stripped. There was a pause, and then Spence told the others to get out unless they were willing to as well. I could hear him pulling off his jeans as he said this. I couldn't believe it. They were actually going through with it. I asked if everyone had a hard-on, and they all laughed and shouted at the same time. Yep, they were ready to go.\n\nI pretended I was squeezing my breasts and tweaking my nipples as I applied lipliner and finalized my lipstick. These poor horny boys, I almost felt sorry for them.\n\n\"More, more,\" they demanded. So I described me sliding my fingers, oh so softly, down my stomach to the band of my thong. I kept my hand outside of it, but continued to push down to my lips which were so swollen and pushing out against my tight panties. This got them going, and I mean going. Kyle said he was almost at his climax and he wasn't even touching himself. I pictured this and, to tell you the truth, it made me hot. All this talk of sensual touching did make my body respond. As I was continuing to tell them how I was teasing myself, I, in real life, pulled my jeans back off and looked down at myself. I began to feel the poutiness of my lips through my thong and I immediately felt how damp I already was. Wow. I began to think, just for a second, about actually having \"some fun\" while on the phone with these guys.\n\nI walked across the room to my bed which is against the wall. I laid down and began to really feel my way around. Yes, very aroused. There was no mistaking that. I slipped my right hand under the waistband and down through my lips. When I got to the bottom, my finger slid inside just a tiny bit, but enough to have a rush of juices come pouring out. Damn, this was good. I instinctively pulled my finger back up, splitting my lips and spreading the hot moisture all over my pleasure zone. I got up to the top and circled my bud a couple of times, feeling the electric shocks that it sent through me, and then slid it back down to start its journey over again. Mmmmmmmm. This was good. I was actually doing it. The thought of those boys standing there horny as hell with their raging hard-on's listening to me, and fantasizing about me, was such an incredible turn-on.\n\nI was explaining all of my movements to them over the speakerphone and they were dying. They asked me to take off my thong, and I said I only would if they first explained what each of them was doing on their end. Kyle went first and gave me detail about his hard-on and how he had had so much pre-cum come out, that he wiped it all over his shaft and it was making sloppy sounds. I asked to hear them, so Spence took the phone and put it next to Kyle's stroking hand. I could totally hear it -- so hot! He said he had to stop, though, because if he kept stroking, he would cum for sure -- he was already that close.\n\nSpence was next, and was just starting to give me some juicy details when I closed my eyes and fantasized about being there, watching them. I now had two fingers from my right hand inside of me while my left was massaging my whole area including my clit. Damn, this was getting real good. I could feel my climax starting to build and wondered if I'd even be able to wait for Trevor before I came. Part of me just wanted to explode while the other part of me was trying to hold on. I was in this sort of battle when I heard a shriek come from the doorway. It was Tara, and she was there with a beer in her hand and a look of shock on her face.\n\n\"Why didn't you lock the door? I am soooo sorry, Chels.\" I flipped over onto my tummy, but what was done was done. Tara has seen me naked a million times and I'm sure has occasionally heard me masturbate late at night when I thought she was asleep, however, this was something else entirely. Talk about being embarrassed.\n\nThe cell phone was on the nightstand and you could hear the guys screaming and asking what was going on. This confused Tara even more and kept her from leaving. \"Who's on the other end of that?\"\n\n\"Tara?\" it was Trevor. \"Is that you?\" After she said yes, he said, \"Well, leave, because we were all just ready to cum, so unless you are willing to join, take off so we can finish.\"\n\nTara just looked at me, buck-naked on top of my bed, laying face down but looking at her with a face totally red from a combination of sexual excitement and embarrassment. I gave her a grin that said, \"Oops, you caught me. Now what am I suppose to do?\"\n\n\"Ok, I'll let you finish. Sorry guys.\" And then she backed out the door and closed it behind her. I rolled back over and was trying to compose myself when the boys kept yelling and asking if she was gone. Kyle was screaming for her to stay and join. I was wondering what to do. I didn't think I'd be able to get that feeling back given what has happened, so I thought about what I was going to tell them. Just then, the door opened again and Tara stepped inside and closed the door behind her. She then walked over to the cellphone and put it on mute.\n\n\"Thinking of what's going on in here, is making me go crazy hot. So I thought, if you didn't mind, I would rather be in here than taking care of myself in the bathroom. Is that ok?\"\n\nI was still naked on the bed. This really changed things. I don't know if I could really get into it if Tara was here in the room as well. I'd be nervous and insecure. However, as I was walking through my thoughts, Tara took the phone off of mute, and then told the boys that they would be having an extra player join the game. With that, she pulled off her shirt and undid her bra. Her jeans were next, and then she jumped on her bed. She looked at me and shrugged her shoulders. \"So what's next, are we playing Truth or Dare?\"\n\n\"Group Phone Sex,\" said Spencer. We tell you what to do, and then you tell us what to do.\" This wasn't exactly how we were doing it, but I didn't say anything. I was still too shocked about what was happening. \"So we will get you caught up,\" Spence continued. \"First of all, what are you wearing.\"\n\nThey went back and forth with Tara for the next ten minutes having her tease herself and turn them on. Then she started asking them questions and it seemed that each of them had regained their hard-on's. I was just listening and occasionally sneaking a peek at Tara as she laid in her bed caressing her boobs and sex. \"C'mon,\" she said to me. I'm not going to do this by myself.\" She lifted her butt off of the bed and pulled off her panties, flipping them onto the floor with her toe. \"I know you were getting pretty close when I barged in. Let's see if we can give these boys a good time.\" With that she started telling the boys to do different things. She had already been told by them that Kyle had been dripping pre-cum, so she had him squeeze some out and then lick it off of his hand. She promised that she would do the same with her juices...and she did! Ok, so I was back in it. My hand had drifted back down to my clit, but when I saw her taste herself, I started moving my fingers with purpose. \"Taste yourself, too, Chels,\" she pleaded.\n\nI started to get into it, and not only tasted my two fingers after pushing them deep inside myself, but I used my best bedroom voice when I told the boys, and Tara, \"It's so hot and sweet. Mmmmmmm.\"\n\n\"I'm gonna cum,\" Kyle announced. Stick your fingers inside yourselves, girls, and I'll shoot my load. Just tell me when you do.\"\n\n\"I'm inside, Kyle. So hot,\" I said. Tara screeched and moaned, \"I've got three fingers in. I want to cum, too, Kyle.\"\n\nWith that, Kyle moaned very loud and the other two guys cheered him. Then they yelled at him for spraying too much and hitting Trevor's desk.\n\n\"Who's next?\" Tara asked. Spence spoke up saying that he was not far behind. Tara, said she was close, too, and wanted to cum with him. She said that he had to do exactly as she said, though. She was having him stroke and getting close while she was working herself with two hands. I was surprised at how turned on I was. This was just so sexual and explicit. I was, at this point, just looking straight at Tara, not even pretending to not stare. She had Spencer close, and everyone knew it. Then she told him to take a finger from his left hand, lick it really good, and then ease it into his ass. If he did, she would do the same and cum together. And just like that, Spence was saying the right things and sure enough, Tara moved her left arm so it was underneath her, and her middle finger from her left hand was massaging her butt hole. \"Yes, yes, make me cum, Spence. Make me cum,\" she screamed as she rubbed her clit with her right hand and banged her butt hole with her left. Spence started screaming, and then Tara did too -- at the top of her lungs. I had never seen another girl cum in real life before, and it was amazing. I'm sure she was playing it up due to the circumstances, but it was beautiful. This got me even closer.\n\n\"Now it's your turn, Chels\" Tara said and she rolled over on her side to face me. I was still on my back and told her and the phone that I was very close after seeing her explosion. \"How about you, lover, are you close?\" I asked Trevor.\n\nYou give me the word, Chels, and I'll shoot all over your tits.\" I tried to think of something sexy to tell him, when Tara took over. \"Ok, Trev, your lady here is all over herself. She has one hand deep inside her, and the other is circling her love button. She's so wet that everything is sparkling.\" She kept detailing my every moves and the sound of her voice describing my sexual technique was too much. I started heaving, and told Trevor that I wanted him to come on me. Shoot his hot stream on my chest. With that, he moaned just like he does when we make love, and that did it. Crescendo. I was bucking my hips with both of my hands between my legs. It lasted for over a full minute. Amazing.\n\nWhen I started to come down, I looked over at Tara who was just reaching her own climax, Number Two! She then looked over at me and just smiled. We didn't tell the boys about that one, or the other ones we both did under our covers as we went to sleep an hour later. We kept those just to ourselves.\n\nAs you can imagine, I replay that night again and again when I have \"special time\" with myself. I hope now that some of you may as well.\n\nKisses,\n\nChelsea"
    ],
    "authorname": "hblocalgrl",
    "tags": [
        "phone sex",
        "mutual masturbation",
        "dare",
        "coed",
        "college"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/phone-sex-party"
}