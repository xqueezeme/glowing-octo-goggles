{
    "title": "Haunted by Love",
    "pages": [
        "Welcome dear readers to this, my erotic lesbian romantic ghost story and entry for the \"HALLOWEEN STORY CONTEST 2015\".\n\nI hope you will enjoy reading it but I feel I should warn t you that it is a lengthy story -- for those who have read some of my other work I hope this means you'll think \"Oh goody!\" and not \"Oh no, not again!\"\n\nMy thanks, as ever, to my wonderful editor Winterreisser, especially for his speedy efforts that allowed me to still meet the deadline after taking far longer writing this than I expected. Thanks also to Kat for her kind words and encouragement.\n\nAs this is a competition entry, do please take a moment to cast your vote at the end; comments and feedback are also always very welcome.\n\nThis is now a slightly updated (or updated, updated) version with an extended Chapter 11 and a few corrections.\n\nHappy reading and Happy Samhain!\n\nSue\n\nCopyright \u00a9 ScattySue 2015\n\n===========================================================\n\nChapter 1: Creative Meeting\n\nI push my hair back and gather my things -- pen, paper and notes -- push back from my desk and stand. Then I notice that, as usual, I've forgotten to lock my PC just as the reminder for the meeting pops up: \n\n<blockquote>10:30 am (2 hour) <br> MM&M CREATIVE MEETING<br> Invitees: Mystery, Myth & Murder Research Team, Mystery, Myth & Murder Writers, Rick Ripley, Marcus Thompson</blockquote> I drop everything so I can click the DISMISS button and then perform the three finger trick to lock the screen. Damn, I'm late now, which serves me right for leaving it until the last minute to leave I guess. I know why it is: I don't really want to see Rick after... it, last Saturday. Nor Marcus for that matter.\n\nI pick up my stuff once more and kick the chair under the desk. I'd always considered myself ambitious but the truth is that my career hasn't exactly been meteoric and, at thirty-one, I'm still stuck as a researcher on, okay granted, a successful and popular BBC TV programme. Basically, my career has stalled and has been so for several years. Actually, the same can be said for my life as a whole really, with no boyfriend, let alone husband, disappointingly few friends that I can socialise with and a flat that is both small and dingy and at the same time, overpriced owing to its location. Still, however frustrating and disappointing my life is, I didn't think that I was the sort of woman to do anything to get ahead but it rather seems I might be. Today I find out if it's been worth it.\n\nI head down the corridor to the lifts and press the call button to go up. I can still recall word-for-word Marcus's words to me when he came to speak to me two weeks ago. \"Do you enjoy working on 'Mystery, Myth and Murder' Bethany?\" he asked, bending over me as I sat at my desk working through an analysis of viewing figures for the recent episodes. Dull, dull, dull work when what I really wanted to be doing was the writing and scripting.\n\n\"I... do. I mean, I like doing the research I guess, though...\"\n\n\"Though you'd like not to just be just stuck in the office finding out and confirming a few facts in between admin tasks,\" he said smiling. I suddenly worried that my thoughts were scrolling across my forehead in luminous green pixels as I nodded. \"What's your ambition, Bethany?\" he asked as his finger rubbed the stubble on his tanned face with a soft rasping sound. His tan silently boasted of the three weeks holiday in the Seychelles that he and his partner Blake had recently returned from.\n\n\"I'd like to write, Marcus; I want to go out and find and research stories and then script episodes of the show. I think I deserve the chance to try.\"\n\n\"Hmm. You know, Rick and I have always thought you rather... cold and standoffish.\" Knowing what Rick's language could be like I was a little surprised.\n\n\"Is that really what Rick said?\" I asked and Marcus gave a little chuckle.\n\n\"No. He said that for an intelligent, pretty girl you can't half be a snooty little bitch sometimes.\" I bit my lip; where was this going? \"So, you do have some ambition in you... which means you want to be a part of the next series?\"\n\n\"Well, obviously. I mean, you did get that proposal for a story that I emailed, didn't you? The Purdew Manor Hotel haunting?\"\n\n\"Yes... though we'll have to see if there's any interest when we discuss it, probably at the next creative meeting for next year's series, the week after next...\" He left that hanging as he straightened up. \"Just remember, it always pays to be a team player,\" he added before leaving me to get back to the viewing figures.\n\nSo, as the lift doors open for me, I wonder whether paying attention to Marcus had been either wise, moral or worth it. To my shame, I find that I'm more concerned that what I did ends up being worth it for my career than whether it was wise or moral. What kind of slut does that make me? \n\nI enter the meeting room doing my best not to catch either Rick's or Marcus's eyes without seeming to ignore them. I manage it but more because the two of them are leaning in close together having a sotto voce conversation. Of course, I immediately worry that it's about me, that Rick is giving all the prurient details, and when Marcus nods and smiles I'm convinced of it. I bow my head trying to hide my embarrassment as I slip into my seat and shuffle my notes and papers.\n\nMoments later Marcus calls the meeting to order and first on the agenda is the schedule for the next series. \"Well, we're doing well with work on the next series and this was going to be a chance to look over that and look at planning the series episodes... However, we have something rather special to announce.\"\n\n\"What's that?\" Janice asks, the beads braided into her hair clicking softly as her head jerks up.\n\n\"It's only a bleedin' Christmas Special,\" Rick exclaims. \"When the scandal of you know who broke, they cancelled 'is shown at Christmas and offered the slot to us!\" Rick's distinctly London accent always startles people when they meet him in real life as it's such a contrast to the rather more polished accent he adopts on-screen.\n\n\"However,\" Marcus continues, \"as it's already October, we've only six or seven weeks to get ready for broadcast,\" he glances to Rick, smiling.\n\n\"Yeah, we're goin' to 'ave to get our arses in gear!\"\n\n\"Will it be on Christmas Day?\" I ask in surprise.\n\n\"Nah, the day after, on Boxing Day evening.\" Wow, this was a big deal. The schedulers didn't put anything on over the Christmas holidays they didn't think was successful.\n\n\"So you could have a Christmas theme in all the stories!\" chips in Gavin. He's a junior assistant and is basically there to take the minutes so I flinch inwardly at his comment. I want to find a way to gently suggest that, in his position, he is much better not to speak unless he has a really good idea. Colin, however, ever keen to prove he should be given Janice's job as Assistant Producer, rips into him.\n\n\"Yeah, fab idea Gavin and hardly trite at all; what did you have in mind? Some brutal Christmas Day murder? Perhaps some haunting by a woman looking for her baby who died on Christmas Day? Or, yes, of course, Rick could do a cutting expos\u00e9 of how Father Christmas isn't fucking real!\" Gavin cowers before the tirade and I flinch, not least because I'd almost asked a similar question as to whether they were considering a Christmas theme. In my case though, it had been to check that they weren't because, and I had to agree with Colin here, it was a naff idea. Janice, however, comes to Gavin's defence.\n\n\"Okay, Colin, give the guy a break. Remember this is a creative meeting so we don't go ripping each other's ideas apart.\" An evil grin appears on her dark lips, \"We save that for the editorial reviews!\" \n\nIt occurs to me that old David Attenborough needn't be jetting off to Africa or South America, he could do an entire series here at the BBC: \"Here we see the alpha female being challenged for her position by a junior male... but he is no match for her and he retreats, beaten for the time being.\"\n\n\"Okay, boys and girls. No, Gavin, there won't be a Christmas theme. What we need are really good stories or, even better, one story that can fill the episode.\" Marcus pauses. \"Right,\" he says, \"this seems like a good point to look at the feedback from the previous broadcasts. Bethany, you've been looking at that.\" My name jerks me to full attention, triggering butterflies in my stomach and I quickly pull the copies of the summaries from my stack of papers and hand them around.\n\n\"Um, yes. Well, the basic figures are on the sheet you have, summarising how the focus groups responded to each episode. I, er, I then classified the stories in each episode as 'Murder', for the unsolved crimes and, well, murder stories; 'Myth' for those that covered legends and 'Mystery' which are, eighty percent of the time, basically ghost stories.\" I look up and I'm startled to see polite interest in what I think is very dull stuff. \"Anyway, the mysteries tend to be the most popular followed by the unsolved murders and finally the legends stuff, though the Loch Ness Monster piece was very well liked. However, what viewers really seem to like are when stories cover more than one area, like say, that story in the first series, of the stolen painting that was linked to the ghostly figure that seemed to appear over where they found the painting.\"\n\n\"Hmm, interestin'\" Rick comments. \"So we want more stories like that, definitely.\"\n\n\"Indeed and it's certainly something to bear in mind for the Christmas special.\" Marcus agrees, \"So, with that in mind, let's look at what stories and leads we have so far...\"\n\nThis is the cue for Janice, Colin and Terri, as the people mainly involved in writing and researching, along with Marcus and Rick to begin listing possibilities, thoughts and Ideas. I will occasionally make comments or suggestions but these never seem to do much raise my status within the team, even though I know that some have been really good and turned a mediocre episode into a good one; it always seems to be one of the others that get the credit in the end. I sit listening for Marcus to present my Cornish ghost story, probably without even crediting me.\n\nAs the meeting drags on I'm starting to wonder if he's not even going to mention my suggestion, meaning the work I did on it would be for nothing, when he suddenly says, \"Actually, Bethany seems to have a rather interesting possibility. Perhaps you'd like to tell us about it, Bethany?\"\n\n\"Oh, er yes... well, my parents holidayed in Cornwall over the summer and they, er, they stayed at a small hotel on Bodmin Moor, the Purdew Manor Hotel which, they told me, fails to live up to the grandeur of its name and is rather run down and dilapidated. However, knowing my job, Mum recounted a tale she was told there of mystery and haunting linked to the hotel.\" I pause, pleasantly surprised that they are all listening with quiet interest. I know I need to pitch this well and make it a good story but also be succinct. \n\n\"Before it was a hotel,\" I begin, \"it was Purdew Hall and, in in the mid-nineteenth century, home to Sir Lovell Blyth and his beautiful wife Lady Rosalind. Sir Blyth was, of course, a wealthy landowner but had a reputation as a violent, vicious man. He had been an officer in the Navy where even there, incredibly, his violent temper had been remarkable. \n\n\"In time, they eventually had a child, a son whom they called William. However, far from the strapping infant Sir Blyth wanted, the child was always sickly. Despite this, young William grew and Lady Blyth employed a governess to care for him, a young, educated woman who lived nearby. All was well until William was nearing his tenth birthday when Sir Blyth, feeling that his mother and the Governess were making the boy soft and weak, dismissed the Governess and declared that his son would soon go to boarding school to toughen him up and make a man of him.\n\n\"Shortly before the boy was due to leave for school, something happened and one morning he was found dead just inside the door of his bedroom. Some said it was a seizure or a fever, others that it was the fear of being sent away to school. There were a few that suggested his father had beaten him and caused it or even that it had been Lady Blyth, poisoning her son rather than have him suffer the pain of separation and bullying at the boarding school.\n\n\"Both mother and father were distraught, Lady Blyth crying and wailing in grief for the loss of her beloved, precious child. For Sir Lovell, it was the loss of his heir and the end of the family line that upset him. \n\n\"They buried the boy two days later but something happened that evening and Lady Blyth fled Purdew Hall in the middle of the night, across the moors. One of the maids saw her leave but feared to go to the master, with his uncertain temper, so she roused the Housekeeper who, in turn, decided it should be the Butler who must tell Sir Lovell. The maid had been right to be afraid for Sir Lovell was incandescent with rage at the news, striking the butler and cursing him for not securing the house against his wife's escape. He immediately set off in pursuit thinking he could guess where she went.\n\n\"Neither Sir Lovell nor Lady Blyth were ever seen again. Some said that both drowned in one of the many bogs on the Moor, others that Sir Lovell murdered his wife when he found her and buried her body before fleeing or foundering in a bog himself. However, since then in Purdew Hall people have sometimes reported hearing a child crying, pleading for his mother, or encountering a pale lady roaming the house, lost and dejected. Meanwhile, on the Moor, night travellers claim to have seen a dark shape, some seeing a man searching or dragging something or in pursuit, while others meet a ghostly woman running and fleeing over the desolate Moor in terror.\"\n\nI look around, waiting for someone to say something.\n\nTerri is the first to speak. \"You are an unexpectedly engaging storyteller, Cooper,\" she says grudgingly, though as usual her pronunciation and accent would put members of the Royal Family to shame. I give a nod of thanks but, while it's nice to be complimented, I do slightly resent the note of condescending surprise in her voice, not to mention the use of my surname, as if I'm her inferior.\n\n\"Okay, so... first question, Bethany: are there locals down there who claim to have seen the ghosts?\" Marcus asks.\n\n\"I'm not sure,\" I reply. \"The way Mum told me suggested that the woman who told her, one of the owners of the hotel, had seen something, but I don't know for certain. She'd probably love the advertising so...\" I left the implication that she'd probably say anything for publicity just hanging there. The nods confirmed they all understood.\n\n\"Bodmin Moor,\" Janice says musingly. \"It's a very atmospheric place and there must be loads of ghost stories and mysteries from down there. There used to be all sorts of pirates and smuggling in Cornwall.\"\n\n\"There were ship wreckers too, luring ships onto the rocks to kill the crews and steal the cargos,\" Colin chips in, \"and wasn't there The Beast of Bodmin a few years back? Some big cat or the like going around killing sheep and scaring farmers?\"\n\nA quiet \"Hmm,\" from Rick pulls my gaze reluctantly to him. \"There might be enough for a whole episode from Cornwall, maybe even two with some other stories. What do you think Marcus?\"\n\n\"I think you might be right,\" Marcus agrees, \"thinking about it I'm surprised that we've never done a story from Cornwall in either of the first two series. Perhaps we should send someone down there for a week to dig around.\"\n\nJanice nods but with a slightly concerned look on her face. \"Might be a problem for the next few weeks though, because I've got those two stories from Scotland to work on and I've tasked Colin with working on the first stories from Europe -- the ones from Sweden and Denmark, trying to play off the success of the Scandinavian thrillers like 'The Girl with the Dragon Tattoo'. These are the obvious ones to use for Christmas as we've made a start on them. We could use, what was it, Purdey Hall in the next series to replace one of them. I guess we could have Terri make a start on it, doing some general research...\" \n\nMy heart sinks. Fucking golden girl Terri, as usual, with her first class honours degree from Durham University, her perfect skin, flawless elocution and, above all, her cast iron boarding school confidence.\n\n\"How about Bethany?\" Rick asks. \"She found the story, after all, an' she did a good job tellin' it too.\" Janice looks doubtful and is about to reply when Marcus speaks.\n\n\"Yes, why not? It'll be more responsibility that she's had before but let's give Bethany a chance. She can keep us regularly posted on her progress,\" he adds in answer to Janice's suspicious look. \"We can send Beth down there for a week or so and give her a chance to show what she can do.\"\n\nYes! In your face, Terri! \n\n\"Yeah. And Beth: don't mess up and don't think that we might not use your story at Christmas, right?\" Rick smiles at me and I try to hide my shock; was he serious?\n\n\"Yes, absolutely Rick: I can do this, I promise.\" I feel so happy but one glance at Janice, Gavin and, especially, Terri tells me I've not made any friends here this morning.\n\nThere isn't much left to discuss and Marcus distributes actions to each of us. Mine are to finish up or hand over the things I've been working on and to sort out going down to Cornwall \"as soon as practicable and ideally next week.\" No pressure then! As the meeting breaks up I hang back; I have to thank Marcus for giving me this chance. Rick hasn't moved to go either so, when it's just the three of us, I say my thanks.\n\n\"No problem, Bethany,\" Marcus replies, \"I meant it when I said you deserve this chance. I also mean it when I said not to fuck up.\" My throat constricts at his words and all I can do is nod. \"Right, I must get on,\" he concludes and quickly gathers his things, leaving me with Rick.\n\n\"Thank you too, Rick,\" I tell him. \"It was good of you to be so positive about my idea.\"\n\n\"Beth... I said what I did coz your idea sounds really promisin' and not coz of last weekend or anything.\" He hesitates and then adds. \"Beth, I'd like to see you again sometime, if you're alright with that?\" I recalled some of what happened on Saturday and, more, of Sunday morning. It had been pretty good, hadn't it?\n\n\"Yes, Rick, that sounds very nice,\" I reply. \"I'd like that.\"\n\nChapter 2: Starting Out\n\nAny sane person would know that setting out to drive down to the West Country is not best done late on a Friday afternoon, even a Friday in late October, by which reckoning I am completely insane. In my defence, I had planned to go on Wednesday but Colin, currently out in Denmark, had some research and information he needed urgently. Given it was now over three weeks since I was told to visit the Purdew Manor Hotel \"within a week,\" I really felt I had to go before the weekend.\n\nThe traffic on the M25 motorway was its typical semi-gridlock, especially around the London Heathrow Airport exits, but didn't get much better heading south to the M3. I had already abandoned the idea of using the M4 after hearing that there were long delays already, due to roadworks, and besides, the M3 route did appeal as I recalled that it would take me past Stonehenge.\n\nEventually, Gumdrop (okay, I name my cars; don't hate me for it) and I made it onto the M3 where the traffic was still busy but at least moving. However, it is now half past five and, at a conservative estimate I have at least four hours of driving ahead of me so I should get to the hotel at... around nine thirty at night, which is late but not ridiculously so.\n\nI settle into driving as the traffic calms down a bit and, as usual, my mind wanders. Inevitably it settles on Rick. Marcus's little chat to me about friendliness and my career did leave me wondering what it was about but didn't have to wait long. The next week Rick asked if I'd join him for dinner. I almost automatically said no before I remembered Marcus's comments. \"Um, okay, thank you,\" I replied, not wanting to harm my career but thinking that Rick had asked Marcus to speak to me exactly for this reason. Still, I was committed now.",
        "Saturday came and I duly, if very apprehensively, presented myself at the very nice restaurant. Rick had offered to pick me up but I declined, partly because my flat isn't exactly the height of style and opulence, partly because I didn't want Lucy, my annoyingly nosey neighbour, meeting Rick but mostly because I thought it would be easier to decline any \"let me take you home\" offers and the possible subsequent, \"May I come in for a coffee/a pee/a fuck?\" type requests.\n\nAs it turned out, it wasn't Rick who was the problem, I was. Rick was courteous and charming, friendly and very open as we talked. I, on the other hand, was a bundle of nerves, worried about where this would end up and, basically, if this evening would make or break my career. And so I did what many people do in such a situation: I drank rather too much. Oh, I wasn't falling down drunk by any means but I had got to that state where sound judgement was for other people and tomorrow didn't matter. This was not a good state for a single girl whose only sex in the last few months had been self-administered and who was now in the company of a satisfactorily handsome, rather charming and attentive man!\n\nI'm sure you can guess what happened... yes, I slept with him.\n\nThe following morning, waking up alone in Rick's bed, I felt like a complete slut who'd whored herself out for the sake of her career. I expected Rick to want me out as soon as possible, having got what he wanted and leaving me to wonder, as I did, whether it had been worth it. However, I was alone only briefly because he came in carrying a tray with fresh-brewed coffee. \"I thought you might need a pick-me-up after last night's er, drinking,\" he said with a slight smile.\n\nI sat up, pulling the duvet close around my otherwise naked body, and thanked him as he poured the coffee, trying to piece together exactly what had happened last night. The recalled image of him on top of me pretty well confirmed we'd had sex and I was fairly sure that, the shame and awkwardness I felt now notwithstanding, I had enjoyed it at the time. The memory of an orgasm surfaced.\n\n\"I guess you'll want to be getting home,\" he said, his voice neutral. I couldn't tell if this was said in concern for my happiness or if he was dismissing me, which I have to admit I was half expecting. Whatever his meaning, I went with just a brief and rather awkward thank you. \n\nThe evening after the creative meeting we did the usual hour or two in the pub. I was in a good mood and so stayed later than I normally did. Rick was there and so was Terri. Indeed, she seemed to be determined to be the centre of things, always directing the conversation. Nevertheless, I had quite a good evening and went home still buzzing with the happiness of my new opportunity.\n\nWork returned to normal, well, normal-ish. I had quite a lot of work to sort out and hand over to Gavin before I could swan off to Cornwall, so the 'go down there next week' deadline passed. I still felt rather awkward about having slept with Rick. However, despite what he said at the meeting, he didn't ask me out again. I felt both relieved and disappointed: relieved that perhaps this meant that the chance I'd been given wasn't because I'd let him fuck me but disappointed because, however plain and ordinary I generally think myself to be, I didn't want him not to fancy me!\n\nIt was rather a surprise, therefore, when a week and a half after the creative meeting, he invited me out on a second date. \n\nThis time we went to see some half-baked rom-com and then to a little Italian restaurant, where I insisted on paying the bill. However, I moderated my drinking this time and we got along quite well. As we left the restaurant his arm slipped around my waist and he said, \"You know, I was furious when Marcus told me what he said to you, about being friendlier. I bet you thought I put him up to it when I asked you out?\" he said and I nodded. \"I just 'appened to mention to 'im in passing a couple of months ago that I thought that you was attractive but that I didn't think you'd be, you know, interested...\"\n\n\"Um, actually, if he hadn't said anything I probably wouldn't have said yes,\" I confessed.\n\n\"Is that a fact? Well, looks like I'll 'ave to forgive the meddling gay bastard!\" he chuckled and looked down as his hand took mine. \"Do you want...to er...\" he began and I knew what was coming. What should I do I wondered? I did quite like him, he'd been charming and good company this evening and it didn't seem like he was trying to pressurise me now so I could just decline... However, he had given me the chance to speak at the meeting and he could really help to get my career moving... I wasn't being mercenary, I told myself, which was fairly true: I did like him, much more than I thought I would.\n\n\"We could spend the night together again; I mean, if you'd like that.\" I remember grinning at the happy look on his face.\n\nI return from my reminiscences as ahead I see the sign for my junction and pull into the left-hand lane. Then, a little further on, the sign on the gantry spanning the road confirming that this lane is for the A303 to 'The South-West, Salisbury and Andover'. As I leave the M3 another sign in the failing twilight tells me that it's 117 miles to Exeter as I turn Gumdrop's headlights on.\n\nDespite it being my second visit to Rick's house, I was probably more nervous as this time it was without the anaesthetic of excessive alcohol. However, Rick led me indoors and upstairs. \"I'd like to undress you,\" he said and my nervousness spiked: I've always been rather awkward about being naked, my figure being what it is. I know how to dress to emphasise the good bits and flatter the rest but nudity does not allow such trickery. Even though we had slept together already and despite the relaxation afforded by a couple of glasses of wine with the meal, there was no way I could just stand and let him peel away my camouflage.\n\n\"We can undress each another in bed,\" I replied, thinking that I'd make sure the light was off. Upstairs he didn't object to climbing into bed with just the streetlight from the window and the light spilling around the bedroom door that stood ajar. With much fumbling we stripped one another until, naked at last, we slipped into each other's arms. His body was not particularly muscled but he was thin and wiry, dark hair on his arms and chest. I raised my lips to his and we kissed deeply.\n\nI could feel my nipples hardening as they pressed his chest. His hands caressed my back and my bum but gradually worked round until his thumbs settled on my nipples, rubbing them gently. It felt so good. \n\nI reached down and felt the hard length of his cock that gave a twitch as my fingers made contact and wrapped around it. I pushed gently, sliding the foreskin back; the emerging head, wet with pre-cum, brushed the inside of my wrist. Rick moved and rolled me onto my back as he knelt between my legs and I thought he was impatient to slip his cock inside me, as is usually the case in my experience. However, before I could say anything he moved down. Moments later I felt his mouth on my pussy.\n\nI've had a few guys go down on me in my time, some have been good, while others... well, I suspect they didn't enjoy it any more than I did. Rick was definitely one of the better ones, his tongue exploring and delving, parting my ever-moistening folds and depths. I found myself wishing I had been less out of it the first time we made love. His tongue slithered up, seeking the tingling nub of my clitoris. Once he'd found it I was never going to last long and my orgasm, when it struck, was wonderfully intense.\n\nHe climbed up beside me and moved to kiss me but hesitated. I could smell my sex on his lips and lifted my head to kiss him; I've always found tasting myself on a lover a wonderfully erotic experience. When he felt my enthusiasm he responded just as excitedly. \n\nI lay back, raising my knees and spreading them wide, opening to him. He edged forward and I felt his cock pressing against my very wet and very willing lower lips. With a slight groan of pleasure, he slipped inside me, gently plumbing my depths. He pulled back and thrust again, quicker and more firmly this time. He built a rhythm and I began rocking my hips in counterpoint, making his member rub my g-spot inside.\n\nTime seemed to float away; there was just his weight between my thighs, the rolling of my hips and the feel of him inside me. There was a hesitation and his thrusts became slower and harder as he threw his head back, gasping. He came, his hot cream jetting into me. \"I'm so close,\" I gasped, not wanting Rick to stop as his orgasm made his movements erratic. He reached down between our sweat-glazed bodies and his thumb traced its way through my pubes.\n\n\"Oh yes!\" I gasped as the questing digit found my nub and made my hips buck. I hadn't lasted long after that; I was so close anyway. As usual, my second orgasm was less intense than the first but good nonetheless. With a final gasp he rolled off me and we dozed, cuddled together.\n\nReality reasserts itself and I become aware of several things: the first is a signpost to Andover and Salisbury while the second is that the traffic has slowed somewhat and, finally, a distinctly gooey feeling between my legs. Perhaps daydreaming about my night with Rick wasn't such a good idea whilst driving as I cannot do anything about the consequences! I just hope I haven't made too much of a mess of my knickers.\n\nAs I take the second exit on the roundabout the traffic slows further, becoming a crawl as the two lanes of the dual carriageway converge to a single lane. I think this must be the section past Stonehenge but, as I look out I'm disappointed when I realize that I'm not going to be able to see the stones in the darkness. The traffic crawls on. \n\nThere are vague shapes out across the field to the right; so much for seeing Stonehenge. For some reason, this disappointment makes the crawling traffic even more frustrating. All I want now is to reach Cornwall.\n\nEventually, the road becomes dual carriageway once more and the traffic speeds up until I'm cruising along at seventy-five miles an hour and I feel I'm making up for lost time, a little anyway. However, the sat-nav on my phone has moved my ETA back from 21:33 to 21:59. When it changes to 21:58 I give a little cheer, \"Come on Gumdrop!\"\n\nDespite running late I have to stop: I need the loo, to stretch my legs and I'm desperate for a coffee. In the Ladies I take the opportunity to check my knickers: well, it could have been worse but there's a noticeable damp area and a definite scent of wet pussy. I'm briefly tempted to bring myself off but when I hear someone else entering the toilets I know I cannot. I wonder what I'd think if I heard the soft noises of a woman fingering herself in the adjacent cubicle? I'd probably admire her courage. I could join in alongside her and then, as we both left, the secret shy smiles, both knowing what we'd each been doing... Stop it! God, what's got into me? I'm not normally this randy so I guess that it's Rick's fault.\n\nAs I head back to the car, my phone beeps to signal a text message. I don't recognise the number and open the message expecting some on-line dating or 'have you had and accident' lawyer's spam. What I see is a shock:\n\nSO YOU THINK YOU CAN WHORE YOUR WAY IN YOUR CAREER DO YOU COOPER, YOU UGLY COW? REMEMBER THAT YOU'RE NOT THE ONLY ONE PREPARED TO OPEN HER LEGS IF THAT'S WHAT IT TAKES TO GET WHAT SHE WANTS. WHEN YOU FUCK THIS ASSIGNMENT UP I'LL MAKE SURE YOU'RE GONE FOR GOOD.\n\nAt first, I can barely take in what I'm reading but, as I re-read it, a determination settles over me. Though I can't prove it, not right now, this has Terri's venom all over it, including the use of my surname. Well, I'll show her, the bitch!\n\nSuitably relieved, stretched and coffee-filled I get back under way, fired with a new determination to succeed at this assignment. The road now alternates between winding roads and stretches of dual carriageway, some of these so short it makes me wonder why they bothered. Still, at least it all helps to keep my mind from wandering down sensual memory lanes to last Tuesday night with Rick (which had been good, but not quite as good as our second night) or to imagined scenes of retribution I'd like visited on the bitch Terri!\n\nThere is a long run of fast road as I approach Exeter, looping south of the city on the motorway for a short while before turning off onto the A30. I've kept to schedule, even making up the time I lost drinking coffee, but the weather seems to be deteriorating and it's growing misty outside as the road runs along the edge of Dartmoor. I press on, a little slower, still heading west and south.\n\nThe outside temperature displayed on the dashboard shows it's growing colder as I cross from Devon into Cornwall. Actually, the temperature is dropping like a stone and within a mile or so it has dropped seven degrees to a chilly four degrees Celsius. I guess this is what they mean by a 'cold front' on the weather forecast. The sat-nav instructs me to take the next turn and I find myself in a winding country lane. I should have remembered this about this sat-nav app: it seems to like backways and little roads, ignorant of the fact that, while the speed limit is, in theory, fifty or sixty miles an hour, the chances of meeting an oncoming car or something agricultural in the road mean that only a maniac would attempt it. When the first squall of rain lashes across the windscreen, even forty miles an hour feels too fast.\n\nI notice a road sign that indicates I'm driving through a village with the improbable name of Polyphant. \"A polyphant must be a giant parrot with a trunk, tusks and big, flappy ears!\" I think to myself, smiling. The road continues its meandering and I pass through another village, the pub being the main building seemingly. I drive on until the sat-nav tells me to turn left and then, in its usual hesitant way, \"In... two... point eight miles... turn... right.\" Just then, the phone rings and the screen changes: it's Rick. I reach out and press the answer button on the screen. \"Hi, Rick!\"\n\n\"Beth, 'ow's it going?\" his happy voice emanates, tinny and with a hiss from the hands-free speaker.\n\n\"Not too bad; I'm in Cornwall at least, on some tiny road off the A30. I should be there soon. The weather's crap though.\"\n\n\"Well, at least you're not there on 'oliday. I was goin' to say I might be...\" His voice fades out abruptly.\n\n\"Hello? Rick, can you hear me?\" There's a bleep and the call ends. Damn, the mobile must have lost the signal. Perhaps he'll call back in a few minutes. \n\nThe road continues to twist and the rain increases so that even with the wipers on full speed, the visibility is atrocious. What I can see outside shows that the road is no longer a winding lane between hedgerows but is running across open country. I can't say why, perhaps it is just the weather, but I feel nervous and jumpy. I try to peer through the black rain as the wind-contorted shapes of stunted trees loom in the headlights. I speed up, anxious for this journey to be over, but my sense of foreboding increases; perhaps I fear an accident out here in such a remote place so I slow down again. It doesn't really help.\n\nLet me think: it had been two point six miles to the next turn on the right, no, left. I glance at the sat-nav for confirmation and to my horror, the map is gone, replaced by a little spinning circle thingy. \"Shit!\" I curse, realizing that the phone must have lost its data signal too. \"Fucking useless technology!\" I shout at the phone. It occurs to me that, even if I knew where I was, there isn't actually a map in the car.\n\nI see a turning on the left; good, there can't be too far to go now. I make the turn and the road climbs gradually. I notice the temperature outside is even lower here, just two degrees above freezing.\n\nI notice that there is grass growing in the middle of the road between the tyre tracks and I begin to suspect I've gone wrong. A couple of hundred metres later and there is no road, just a track, and my suspicion becomes a certainty. Suddenly something large and dark dashes across in front of me and I break hard. Gumdrop skids on the muddy track and lurches sickeningly as the rear of the car twists to the left; I'm terrified the car will spin and crash.\n\nGumdrop slews to a halt; my right leg is locked in panic, pressing the brake pedal hard to the floor, my hands grasp the wheel in a death-grip and I sit there, motionless and panting as my heart races. What the hell was that? Colin's comment about 'The Beast of Bodmin' comes back to me... but, no: whatever it was, it didn't move like a big cat.\n\nMy hammering heart slows and I have that shaky feeling that comes after a near-miss. Whatever it was, I don't want to be here. In my panicked braking I stalled the car; don't you fail your driving test for stalling during an emergency stop? I put the car into neutral, turn off the engine and then back on. There is a low whine and a half-hearted cough from Gumdrop and the headlights dim and flicker. \"Come on, Gumdrop, don't be a bitch!\" I mutter as I turn the headlights off and try again; this time the result is even more feeble and I'm acutely conscious of the darkness pressing in around me and of the slight shaking of the car as the wind batters against it.\n\nI grab my phone, pulling it from the mount stuck to the windscreen that held it so I could use the treacherously useless sat-nav. There's still no signal and I give a shiver that isn't entirely due to the cooling of the car now the heating is off. What to do?\n\nI look around but can see nothing in the dark. Maybe I can get a signal outside the car, not surrounded by metal. I reach around and grab my jacket and begin awkwardly pulling it on, the cramped space and steering wheel hampering my movements. The jacket won't be nearly enough on a night like this but it's better than nothing. Finally, grasping the phone tightly, I open the door and my cheeks are immediately stung by icy raindrops. I stand up against the buffeting wind, pushing the door shut behind me. I try to let my eyes adapt to the dark and peer around. The dwindling road is faintly visible ahead while, to the left, I sense more than I see the ground rising in a moderate slope. \n\nI look at the phone, the glow of the screen dazzling after the darkness. \"Oh... fuck!\" I curse. My head snaps up as I think I hear a shout or call but after the glow of my phone, I can see nothing. It's probably a sheep's bleating, carried and distorted by the wind. Whatever it was, I can't stay here all night. Height, that's what I need; if I can get higher then maybe I can get a signal on my phone and call someone, anyone. \n\nHesitantly, I head off the road and onto the tussock-strewn grass. I try to use the screen of my phone as a torch but the light that seemed too bright when I looked at it, now seems little more than a firefly's glow as I struggle up the hill. I try to peer ahead to keep a straight course but the ground is treacherous underfoot and I have to peer down or risk a fall. I am soaked through and very cold but at last the ground levels out. I check my phone but there is still no signal, not even the tiniest of the four bars. I am desperate and close to tears as I turn, scanning the darkness for a light but can see nothing.\n\nThere, what was that? I spy a deeper shadow in the rain-drenched night that I instinctively take a step towards. \"Please, can you help me?\" I call out. The dark shape seems to shift, to grow and suddenly I am filled with dread: this is not anyone to rescue me. I back away; I don't know what, if anything, is there but I sense a violent malice and know that this is nothing I want anything to do with! \n\nThe shape shifts again and I cannot help thinking that it -- whatever it is -- has become aware of me. Terror floods me and, trembling, I stagger backwards, two steps, three, four, before I turn and run. In the dark I am running blind, downhill, away; that's the key, just get away. I am moving as fast as I dare but I know it is not enough: the malevolent dark thing is behind me and closing in, I'm sure. The biting wind and the stinging, icy rain are nothing by comparison.",
        "The ground changes underfoot. It becomes soft, a layer of water over soft, cloying mud. Thinking it is a puddle I manage a half step, half jump forward but as my right foot lands, there is more mud... just soft, bitterly cold, liquid mud into which my leg plunges. I scream in panic and fear, desperately throwing my weight to the left, terrified of disappearing into the bog that is swallowing my leg. I land heavily with a splash but, mercifully, do not sink, not instantly anyway, although the ground is oozing beneath me, flowing sickeningly into my clothes.\n\nI reach out, grasping and pulling at whatever I can touch, anything to stop my sinking, to help me escape. I catch hold of something, reeds I think, and haul. I realise that I've lost my phone, dropped into the mire, but I don't care just as long as I can survive. I think it's working but the reeds start to pull out. I flail out and snag something thorny and sharp. I force myself not to let go but pull harder, despite the pain as the palm of my hand is lacerated.\n\nThere are agonising eternal moments as the pull of the mud is balanced by the strength of my arm. I recall the... the thing, the shadow, and the fear of it fires my muscles. Slowly at first and then suddenly, my legs slither free. I drag myself and then crawl as the ground becomes firmer. Still panting I manage to get back on my feet. I have no idea where my car is. It is irrelevant because all that matters is the fear. Stumbling and shivering with panic and cold I blunder on. I hear whimpering, moaning sounds and it takes a few moments before I understand that the sounds are mine.\n\nI am lost; where I am and what I am an impossible mystery. Who am I? What am I? All that I have is the terror of what I'm fleeing and an aching sense of loss for something I cannot recall. My body is numb but at least the shivers have stopped.\n\nSomething... there... some glimmer lies ahead, through the swaying, stunted trees. It might be a figure, faintly glowing as if carrying a light, a lantern or torch perhaps, moving. I have no idea who it might be out on a night like this; all that matters is that it is no terrifying shadow. I try to call out but my voice is a feeble noise in the wind and rain lashed dark. I struggle on, desperate not to lose this person.\n\nI stumble, putting my arms out as I pitch forwards, in mortal fear that another muddy sinkhole is lurking ready to swallow me. Thankfully, the ground is solid and I hurriedly scramble to my feet once more. However, the flitting illuminated figure is gone and I give a cry of despair. I try to hurry to where I think the figure last was but exhaustion and cold sap my strength as I push through clawing, tearing branches and then stumble on.\n\nI look up and there, a little way ahead is a faint, rectangular glow that cries out to me as shelter, as sanctuary. There is a gate... what's a gate for? It's in the way. I stumble forwards and half climb, half fall over the wide farm gate. Lurching to my unsteady feet once more I reel drunkenly forward. I can see a soft, flickering glow through the windows of the building before me.\n\nI almost fall against the door and bang feebly. \"Please, open,\" I croak, \"Help me...\" I'm so tired... I try to bang on the door again, my strength almost entirely gone. \n\nSuddenly the door opens a crack and I look up into a pretty face, lit by the faint glow from inside as she tucks her dark hair behind her ear. Shock crosses her face as she sees me.\n\n\"I'm here...\" I sigh.\n\nChapter 3: Mysterious Morning\n\nWarmth: it's nice to feel warm and dry. And safe too, especially after that weird dream of cold, wet, terror. I drift, floating between sleep and wakefulness, the occasional soft sound of rain against the window no doubt the trigger for my dreams.\n\nThe mattress below me is firm but comfortable, the covers are soft and the person, Rick obviously, snuggled against my back wonderfully warm. Something nudges my drowsing brain, a sort of 'What's wrong with this picture?' puzzled thought. My eyes open slowly and focus. I sit bolt upright, stiff muscles complaining, my right hand bandaged and sore. \"Where am I?\" I exclaim as I take in my surroundings. It is a large kitchen that simply has to be called a 'farmhouse kitchen'. However, it is a kitchen being worked on as I notice wires protruding from holes in the walls and ceiling and patches and lines of fresh plaster. There is also a row of modern, albeit suitably styled, kitchen cupboards being fitted along the wall under the window, with a large Belfast sink in the middle.\n\nIn front of me is an old but solid looking table with three chairs while to my left is a large, black cooking range with a pile of smouldering ash in the grate. The room is tidy and swept clean but the paintwork and walls are patchy and peeling in places. The mattress is just that: simply a mattress laid directly on the stone-flagged kitchen floor. This is nowhere that I recognise.\n\nI turn apprehensively and beside me it isn't Rick but an attractive, dark-haired woman, opening her eyes to look at me, a nervous half-smile on her face. \"You're... you were in my dream!\" I gasp. If she's here and real then it wasn't a dream. She half sits, propping herself with her elbows behind her, making the covers slip from her and revealing enough to show she is topless. Now I'm really worried.\n\n\"Please, don't be afraid; you're quite safe,\" she tries to reassure me, my fear obviously showing. Her voice is gentle, calming and with a very slight West Country accent. \"You turned up on my doorstep in the middle of the night. Proper frozen you were and wetter than a fish. All you said to me was 'I'm here,' and then you fainted.\" She looks a little awkward. \"I, er, I had to warm you up so I took your wet things off and put you into bed. I got in with you to help heat you up a bit: You were so cold you weren't even shivering and I know enough first aid to recognise hypothermia and, besides, I haven't anywhere else to sleep.\"\n\n\"Thank you.\" I can't think of what else to say, sat here in just my bra and knickers, even if it sounds like this woman may have saved my life. I can see my left hand is dirty, although my right has been washed beneath the bandage, and my hair feels matted... so my memories weren't a dream, even if I can't be sure how much was real and how much was panic-induced imagination.\n\n\"So, what were you doing out on the Moor at night? You didn't much look like you were dressed for walking.\"\n\n\"No, I wasn't walking... well, I was but only because my car broke down and I couldn't get a signal on my phone so I tried walking up a hill, to see if that helped.\"\n\n\"I bet it didn't; can't use a mobile phone around here more'n ten percent of the time. I have one but it's more use as a clock than anything, when I can charge it. So, what happened?\"\n\n\"There was something...\" No, I can't tell her I was chased by some evil shadow; she'll think I'm on drugs or some kind of escaped lunatic. \"It was the dark and I... I guess I panicked. I fell into a bog and nearly sank. I was so scared...\" My voice cracks as the terror of last night comes flooding back and I'm sobbing. I feel the woman's arms around me, warm, safe and comforting, and it helps as I strive to control my crying. \n\nI look over her shoulder at the door to the outside, nervous as if at any moment it might fly open and the darkness from the Moor flood into the room. The door remains reassuringly firmly closed and the fear passes, as do my tears. \"I'm sorry,\" I tell her, \"I'm not normally like this and certainly not with someone I don't even know the name of.\" Her arms carefully release, as if she expects me to dissolve into tears again at any moment. I don't and, after her hands give my shoulders a final, reassuring squeeze, she lets me go. \"I'm Bethany, by the way, Bethany Cooper.\"\n\nShe straightens up, raising her chin. \"Good morning to you, Bethany Cooper, Programme Assistant at the BBC,\" she says very formally, despite the fact that the covers have fallen away and she's sitting there topless. A silver pendant glints where it hangs between the top of her breasts. \"I'm Ruth Penrose and welcome to Trehalow Farm. Would you like some tea?\" she adds before smiling.\n\n\"I'd love some,\" I reply earnestly, \"but how did you know where I work?\" She stands, clad only in knickers, and reaches behind me, taking a woollen jumper from the chair stood there and pulls it on. It is baggy and long, virtually a dress on her. I notice what seem to be my clothes hanging muddy, stained and dishevelled from the back of the chair; I doubt the pale jeans will ever recover.\n\n\"Well,\" Ruth says, as her head pops up through jumper's neck, \"I suppose I ought to tell you that I come from a long line of Cornish wise-women and witches.\" She looks at me and makes mysterious gestures with her hands before smiling and giving a little laugh. \"Or I could admit that your work pass fell out of the pocket of your jeans.\" She bends and picks up a couple of lumps of wood from the basket beside the range and, swinging opening the grille, carefully places the wood on the faintly glowing embers before blowing gently. A yellow tongue of flame licks up the wood and she closes the door. \n\nI watch as she picks up a small kettle and walks over to the old fashioned sink to fill it from the brass tap before replacing it on the hob of the range, right above the fire. She moves with an easy grace that I can only envy, even more since she seems several years older than I. She is quite slim and her straight, dark hair hangs down her neck to below her shoulders. I notice she often reaches up to tuck the hair back behind one ear or the other.\n\nShe looks up and sees me watching her and bows her head. \"I'll see if I can find you something to wear because your clothes are still wet; back in a moment.\" She leaves the room and I'm left on my own.\n\nI take a deep breath. \"Well, Beth, you didn't expect this!\" I mutter. I take stock of myself and my situation. I stretch and the aches in my arms and shoulders and the pain in my bandaged hand bring back all too vividly my struggle in the muddy, sucking bog. Yes, that was definitely real. What about the dark shape that so terrified me? I don't know but I put it down to an overactive imagination in a strange and scary situation. \n\nAnd what about being here now, with this woman, Ruth? She is, in all likelihood, quite literally my saviour. I have to find some way to thank her when I get myself sorted and so the first thing I need to do is to get back to my car. This, of course, presents the challenge of actually finding it; I was lost when I broke down and I'm even more lost now. \"You're not going to win any prizes for fashion I'm afraid, Bethany.\" Ruth's voice floats through the doorway. \n\nIt's odd, but I don't feel lost; no, somehow it feels right that I should be here. I can't help giving a little chuckle and shake my head. I might work on Mystery, Myth and Murder but I've always thought all the spooky supernatural stuff was just, well, bollocks, frankly. And here I am being chased by eerie shadows across Bodmin Moor to arrive at a place where I feel I belong. \"Get a grip, girl,\" I mutter under my breath, \"or it'll be Tarot cards and Ouija boards next, and then it's a slippery slope to mystical jewellery and too many cats!\" I smile to myself.\n\n\"What's so funny?\" I look up as Ruth returns carrying an armful of clothes and see she has also slipped on a pair of leggings and thick socks.\n\n\"Oh, nothing really,\" I reply. \"I was just thinking that I have never been more lost in my life and yet I don't feel lost. Does that sound weird?\"\n\n\"Well, a bit, I suppose. I mean, you do know that you're not actually lost, don't you Bethany?\" she asks and she drops the clothing on the bed. \"There you are. Hopefully, they'll fit, more or less.\"\n\n\"I know you know where we are but I don't, so I feel lost. And I have no idea where my car is... and I've lost my phone, too, in that bog.\" My litany of complaint is interrupted by my body sending increasingly urgent signals. \"Um, is there anywhere I can wash and, er, I need to use the loo.\"\n\n\"Oh, of course. There's no running hot water, I'm sorry to say, but the toilet and the cold tap in the cloakroom work. If you want to use that, it's just through there,\" she points out through the door to the hallway. \"In the meantime, I'll get the bowl I use to wash ready in the sink here. Is that okay? It is a bit primitive, I'm afraid.\"\n\nI return, my bladder feeling much relieved, to find a gently steaming bowl of water in the sink, with soap and a flannel beside it. She helps me wash so I don't wet the bandage on my right hand. It's not anything like a shower but at least the mud on my face, hand and arms is gone.\n\n\"Thanks so much, Ruth; this is so kind of you.\" I go over to the clothes on the bed and find a baggy t-shirt, jogging trousers, a hoodie and a pair of socks similar to the ones she's wearing. Ruth goes and checks the kettle and moves about while I start dressing. My aches complain but, with my bandaged hand, I'm glad that the clothes have no buttons. They're a little small and smell slightly musty but they cover me up and are warm. \"How do I look?\" I ask.\n\n\"Um, is there a style called 'Refugee Chic'?\" she asks in reply and I shake my head. \"That's a pity now because you're spot on for it.\"\n\n\"I do feel a bit like a refugee,\" I say and see a look of disappointment on Ruth's face. \"But one who has found a safe place to be,\" I add hastily.\n\n\"Good. Right, would you like some porridge for breakfast?\" she asks as I stand stiffly. I suddenly realise how hungry I am.\n\n\"Oh god, yes please!\" I tell her. \"Thank you so much for all this, Ruth. Is there anything I can do to help?\"\n\n\"Certainly: can you add some wood to the fire? Not too much, mind.\" I stoke the fire, carefully, as instructed, as Ruth mixes the oats and water in a saucepan that goes on the hob beside the kettle. She hands me a wooden spoon. \"You can be on stirring duty,\" she instructs.\n\nIt takes a while but eventually the porridge is cooked and the tea made and we sit down together. I take a sip of the tea and I'm surprised by the taste, not unpleasant but, \"Hmm, this tea tastes... different. Is it an unusual blend?\" \n\n\"No, just ordinary tea bags; it's probably that the milk is goat's milk,\" she explains and I nod. \"So, what does Bethany Cooper do as a Programme Assistant at the BBC and what brings her to Cornwall?\"\n\n\"Okay, well I'm a researcher and, hopefully, a writer on a TV programme, Mystery, Myth and Murder...\" I pause, waiting for her to nod or smile or say 'Oh wow,' but she just looks blank.\n\n\"Sorry, but I don't have a telly,\" she says apologetically, \"what's it about?\"\n\n\"Well, it does stories, sort of dramatizations I suppose, of mysteries; like reports of strange events such as sightings of ghosts, of myths and legends and of unsolved or infamous murders.\"\n\n\"And is that why you're here? Are you researching, what, the Beast of Bodmin?\"\n\n\"I am researching but it's a ghost story, a haunting at Purdew Hall; it's now the Purdew Manor Hotel, do you know it?\" She nods.\n\n\"I know of the Hotel; it's a couple of miles from here but can't say I've ever visited it. So what's the story?\" she asks interestedly and I tell her, relating the story as I had at the creative meeting. She sits, elbow on the table with her chin resting on her hand and she listens intently, taking the occasional spoon of porridge or sip of tea.\n\n\"And since then at Purdew Hall people have claimed to have heard a child crying, begging for his mother, or a woman roaming the house, lost and dejected and, out on the Moor, a dark shape has been encountered, a woman fleeing or a man running and chasing. Um...\" Last night comes back to me.\n\n\"What is it, Bethany? What's the matter?\"\n\n\"It's... no, I'm being silly.\" I do not actually believe in ghosts, I tell myself.\n\n\"Was it something on the Moor last night?\" she asks with disturbing insightfulness. \"Come on, you can tell me...\"\n\n\"Alright, there was something... something and nothing really, but it felt very real at the time. I climbed a hill beside where my car broke down to try and get a signal on my phone and there was something up there: dark shape, sort of human-like but... strange.\" I take a deep breath. \"It was also completely, fucking terrifying!\" I blurt out and I am trembling as I recall what I felt. Ruth's hands enclose mine reassuringly. \"Sorry. I guess it was my overactive imagination on a dark and stormy night in a strange, unnerving situation. I'm not some mad woman, really.\"\n\n\"I'm sure you're not,\" she replies with certainty, \"but don't assume it was just imagination; perhaps you really did encounter the spirit of Sir Lovell.\"\n\n\"Oh come on, Ruth, surely you don't believe ghosts are real... do you?\" She nods.\n\n\"I didn't but I... I think this house is haunted,\" she admits. \"People around here think it is too.\"\n\n\"Really? Why, have you seen something?\"\n\n\"Mostly it's feelings, fear mostly but sometimes,\" she looks a little shy, \"just a couple of times, it's been... love. There have been noises and, just once, I came into this room,\" she gestures towards the doorway and the hallway beyond, \"and I saw a woman clad in grey bending over something pale just inside the back door over there.\" There is complete conviction in her voice. \n\n\"Were you scared?\" I ask, fairly predictably given recent experiences.\n\n\"No, not at all, strangely; I could feel fear and sadness but, you know, they weren't mine. D'you understand me?\"\n\n\"I think so... the fear and sadness belonged to the woman, the ghost. Do you know who the woman was?\"\n\n\"I don't know but there are tales of a woman who lived here being found dead in 'strange circumstances'; maybe it's her.\" She looks at me. \"Another story for your programme?\" she asks.\n\n\"Perhaps. Would you want to tell your tale on TV?\"\n\n\"Oh, probably not,\" she admits and I smile, finishing the last of my porridge.\n\n\"Thank you, that was delicious. You've been very kind to me Ruth; what can I do to thank you?\"\n\n\"Can you milk a goat?\"\n\n\"What?\" I wonder if I heard her correctly. \"Why?\"\n\n\"Because Nancy and Mabel are in the shed and they need milking, obviously!\" she laughs, standing and taking the bowls to the sink.\n\n\"Oh yeah, obviously. I should have known, obviously, because all my friends have goats in their sheds!\" I find her laughter is infectious or perhaps, after last night, I just need to laugh.\n\n\"Well, if you want me to help with finding your car, I need to get them milked.\"\n\n\"Why keep goats?\" I ask, \"Why not just buy milk and keep it in the fridge?\"\n\n\"In part because I like the taste of goats' milk but mainly it's because I don't have a fridge.\" I look at her in amazement. \"Don't worry, 'Buy a fridge' is on my list of things to do, right after 'Get the electrics in here sorted'! In the meantime, there are Mabel and Nancy. So, are you coming?\" \n\nI watch Ruth carefully sterilize a bucket and then apprehensively follow her outside. I feel safe in the house but outside is, after last night, a scary place. The day is unexpectedly bright but cool, with a gusty breeze that keeps the high clouds moving. Ahead is Bodmin Moor, undulating and rising, grey-green, russet and brown. I give a shiver that isn't just the breeze cutting through my borrowed clothes. Ruth turns right and walks around the farmhouse, which is larger than I imagined but also more dilapidated, until I find myself in a shed that's large enough to be called a small barn and is full of the smell of, fairly obviously, goats.\n\nShe sets up and washes the goat's udder and a few minutes later I'm standing watching Ruth milking Nancy. She works with an easy confidence that makes the job look simple, though I'm pretty sure it's not. I suspect that I'll get my chance to find out shortly. \"So, do I get to learn more about who Ruth Penrose is? What does she do, apart from milk goats, and what brings her to this, please excuse me, very run down farmhouse?\"",
        "\"Well, my family were from Cornwall, St Austell in fact, and I liked coming here on holiday. As to why I'm here, in this 'very run down farmhouse',\" she gives me a hard stare of disapproval, \"well I suppose my experience wasn't too different to yours: I got lost.\" she sighs. \"It was last year and my life was not going well. I worked for a big finance company in the City of London, BJK Investments; a massive salary, true, but insane pressure, stupidly long hours and colleagues, mostly young blokes, who seemed to think sexism was obligatory. I was a big disappointment to my parents,\" she adds with a chuckle and I look at her in surprise. \"They're very socialist in their outlook, hippies in most people's eyes probably, and to them, it was as if I'd sold my soul to the devil by choosing to work for BJK. I was good, though I say so myself, but the work, well, it wasn't exactly illegal but more and more it made me feel... dirty, d'you follow me?\"\n\n\"Not exactly illegal but definitely immoral you mean?\"\n\n\"That's it. Anyway, I was down here on holiday and I wanted to drive to Tintagel, on the north coast, and tried to get clever taking a short cut across Bodmin Moor. I'd planned it all on a map but then left the map in my room. That was daft of me but not as daft as thinking I could drive the route from memory.\"\n\n\"I'd have said not using a sat-nav was daft, but look how that worked out for me,\" I smile. \"Not that I'm much good at map reading either.\"\n\n\"Anyway, I ended up here and it was like, I don't know... there was something about here, this house. I suddenly had the strongest feeling that this was where I belonged.\" To my surprise, she is blushing and she looks up at me awkwardly. \"You're the first person I've ever admitted that to.\" I am touched by her confidence. \"I did some searching and found the place was for sale, it had been for years but no one had ever wanted it, which amazed me. However, I did get told the place was haunted or possibly cursed, at least according to one old boy in the nearby village pub. It looks like the haunting bit is true, but I've never felt it's cursed; I always feel very safe here. That's strange, isn't it?\"\n\n\"Well, I guess if you said you felt safe living in a haunted house to most people then they would think it a bit peculiar but you're right, it feels very safe in the house,\" I tell her, remembering how secure I felt earlier. \"I'm sure when you've fixed it up it'll be a lovely place to live.\"\n\n\"Thank you, Bethany. It feels so nice to finally have someone who agrees with me! I've a local builder and his mate working on the rest of the house, the plumbing and electrics mainly but also general repairs and plastering and stuff, and they hate it, saying the house gives them the creeps.\"\n\n\"They've probably been listening too much to your old man in the pub,\" I tell her and she nods.\n\n\"You're probably right. I, on the other hand, didn't believe him, or maybe I didn't care if he was right because I'd already decided: I quit my job and bought this house. A crazy woman, right?\"\n\n\"No, you're not crazy; hopelessly romantic and idealistic perhaps, but not crazy. I wish I had your courage just to follow a dream.\"\n\n\"What dream's that?\" Ruth asks, intrigued, tucking her hair behind her ear as she looks up at me. \n\n\"Oh no,\" I chuckle, \"I didn't say I had a dream but that if I did I'd want the same courage as you have to just go for it.\" \n\nShe nods as she pats the goat on its rump. \"Right, that's Nancy done. Now it's your turn with Mabel.\" She looks at the apprehension on my face. \"Don't worry, Mabel is very placid and I'll help.\"\n\nRuth does the cleaning and set up but before very long I'm sat squeezing a goat's udder with my unbandaged left hand. I get a real sense of achievement when, after many failed attempts, a thin stream of milk squirts out. \"Wow, I did it!\" I exclaim.\n\n\"Well done. Now next time see if you can get it in the bucket instead of down your trouser leg!\"\n\n\"Oh, you're so fussy!\" I complain. \"You know, when I set off from London yesterday afternoon, sitting in a barn wearing -- what did you call it? -- 'Refugee Chic' and trying to milk a goat wasn't exactly what I had planned for today,\" I tell her, as this time the milk hits the inside of the bucket. \"Mind you, getting lost, breaking down, nearly drowning in a bog and wandering in terror over Bodmin Moor, weren't on my to-do list either.\"\n\n\"What were you expecting?\"\n\n\"I don't know: a lie in, a big cooked breakfast and starting my research, probably...\" It occurs to me that I've not exactly made much effort to leave here so far this morning and return to normal life. I feel at ease here, almost as if I'm on holiday. \"I'm sort of glad I'm here instead and I'm very happy to have met you.\"\n\n\"That's very sweet,\" she replies, \"and I'm glad your getting lost brought you here.\"\n\n\"Even so, I need to find my car... and then get a new phone and call Rick, I suppose.\" I've started to get the knack of milking and work steadily in silence for a while until Ruth touches my shoulder and tells me to stop. She squats beside me and bumps the udder with her hand before milking it a little more and then stopping. \n\n\"That's it, all done,\" she says as she wipes the teats dry. We both stand and I pick up the half-full bucket of milk, anxious to do as much as I can to help, and we head back inside. \"Here, come with me and we'll find a map to help locate your car,\" she says and, as we move from room to room, I suspect that this is in part an excuse to give me a tour of the house. The rest of the rooms are in various states of renovation, some just needing decorating and the completion of the electrical work as wires sprout from walls and ceilings. The bathrooms have a way to go, with no tiling and unfinished plumbing.\n\n\"You're not changing much are you,\" I observe. \"Are you keeping a tight budget?\"\n\n\"No, not really; as I said, my job paid silly money so I've plenty saved. I actually don't see any need to change much and, in fact, it's only the en-suite bathrooms upstairs and the cloakroom downstairs that are alterations.\"\n\n\"You needed your en-suite bathroom then?\" I tease, wondering at the same time why she'd need one given she seemed to be on her own.\n\n\"Yes, absolutely!\" she replies, a little defensively. \"Anyway, I've thought of maybe offering Bed and Breakfast in the future, just a couple of rooms, so I'd really need it then, don't you agree?\"\n\n\"Ruth, you don't have to justify your choice to me. Besides, I'd do the same in your position.\" She relaxes and we conclude the tour as we arrive back in the kitchen. \"Um, weren't you supposed to find a map?\" I ask.\n\n\"Oh yes!\" She walks over to the dresser and pulls a couple of maps off a shelf and a pen. \"I, er, just remembered they were here,\" she explains sheepishly. She spreads out the first map; it's an Ordnance Survey map that takes me back to school geography lessons with its colours and symbols (is that square with a cross on top a church with a tower of one with a spire?) and the faint pink contour lines winding and curling sinuously. \"Right,\" Ruth says confidently, \"Now we're... here.\" Her finger points to a spot on the map beside a narrow double black line: 'Other road, drive or track' my glance at the legend informs me and she uncaps the pen to mark the spot with a little blob. \"So, Bethany, you came down the A30 and turned off where?\"\n\n\"Oh god, I'm not sure. Let me think... Polyphant, the home of the elephant-headed parrot! I drove through a place called Polyphant.\"\n\n\"Okay.\" Ruth is laughing as she scans the map until her index finger stabs down. \"There's Polyphant so, from the A30 you were probably coming along this road...\" she traces a little yellow line. \"Did you turn off?\"\n\n\"Um... yes... the sat-nav made me turn left, but not immediately. It was, I don't know, maybe two or three miles on? I drove through another village I think, one with a pub\" her finger tracks the road.\n\n\"Hmmm, that might have been Tregunnon... so left could be... here? No, you'd have ended up too far to have walked here. Hmm... was it much beyond Tregunnon you turned left?\"\n\n\"I'm sorry, Ruth, but I'm not sure. I turned left and then it told me to turn right but I don't know if I got the right turn, you know, the right right turn.\"\n\n\"Okay, maybe we need to try something different. What do you remember about the road you broke down on?\" This is getting harder because part of me doesn't want to remember the scary walk up the hill in the dark.\n\n\"Yes, there was that hill beside it. Fairly steep but not, like, mountainous. I climbed it to see if I could get a signal on my phone.\" Ruth pores over the map intently for a minute or two, eyes scanning.\n\n\"You said... Ahhh, there, look.\" She points and there is another 'other road drive or track' that's so 'other' that it becomes dotted and, as it follows the contour line of a hill, just stops. I nod, remembering what I'd seen. \"And there, up the hill and if you came down this way,\" her finger moves, \"you come to an area of marsh that I'm guessing you fell into, you poor girl. From there, in this direction for about, what, a mile and a half at least, more if you didn't follow a direct route... you come to here, Trehalow Farm. So I reckon your car must be roughly... here.\" She draws a neat little cross. \"Do you want to go and get it?\"\n\n\"I do, though I don't much fancy walking on the Moor again.\"\n\n\"Don't be daft, Bethany, Mr Bump can take us.\" She carefully refolds the map.\n\n\"Who is Mr Bump?\"\n\n\"Oh, he'll be my car.\"\n\n\"And he has a big dent?\" I ask smiling.\n\n\"We'll he did, and on the day I bought him too, though the accident weren't my fault!\" she protests. \"He's also bright blue, like the Mr Men character, so the name was inevitable really. You probably think I'm a bit soppy giving my car a name.\"\n\n\"Of course it's soppy,\" I tell her, \"Anyway, I'm sure Mr Bump will be very happy to meet Gumdrop, when we find her.\"\n\n\"Gumdrop?\" she asks, with a quizzically raised eyebrow. \"Really?\"\n\n\"Yes, really; and I'm not taking any teasing from a woman with a car called Mr Bump!\" I check my clothes but my jeans are still too damp to wear so I fish my keys from the pocket. I also take my jacket, even though it too is still damp I know I'll need it. Hopefully, at the hotel, I can get it cleaned.\n\nWe leave through the hall and out by the front door. There is what might once have been a garden to one side, extremely overgrown, and a driveway in which sits a small, turquoise blue Peugeot: Mr Bump. Ruth leads the way to the car and before I get in I turn and look back at the house just as weak sunlight breaks through momentarily. I have a sudden vision of this house as it might once have looked, tended and cared for with bright white walls and flowers in the garden. For some reason, my imagination also furnishes the scene with a woman in a long, grey dress standing in the front doorway as another woman in a pale crinoline dress approaches holding the hand of a child.\n\nI blink in surprise and the vision vanishes, even as the sunlight fades once more. A little confused I climb into the car, reluctantly taking my gaze from the house.\n\nChapter 4: Back to Reality\n\nI had feared that Ruth was going to expect me to navigate but, mercifully, the map remains folded on the dashboard and she seems confident about where she's going. '\n\nI try to concentrate on the route we're taking and memorise landmarks, something I've never been terribly good at, as Ruth points out places or sights. It's almost as if she's trying to convince me that Cornwall is a lovely place, something I can see for myself. However, I am apprehensive of returning to the hill that had scared me so badly.\n\nWe turn right and I'm surprised by a sense of d\u00e9j\u00e0 vu until I realise that we've arrived from the opposite direction and we're now on the road on which I broke down. Mr Bump bounces along the increasingly narrow and uneven road until, at last, there is my car looking very forlorn and abandoned with one wheel on the grass where I slewed on the track. \n\nI look nervously up the hill as we pull up behind Gumdrop but it is just a hill, covered with grass and dotted with clumps of gorse, a stunted, wind-sculpted tree near the top that I hadn't seen in the darkness.\n\n\"It's just a hill, Bethany,\" Ruth's voice speaks my own thoughts but, somehow, the fact that she says it helps.\n\n\"I know, but it was so scary last night.\"\n\n\"Come on,\" she says, opening her door and climbing out. I do the same and she walks around the car and takes my hand. She starts to lead me up the hill but I hesitate. \"Beth, it's okay, we'll be fine,\" she promises and, reluctantly, I allow her to lead me. \n\nThe climb is much easier in the light and as we reach the top the view is amazing: the Moor lies open and it falls away in front of us to rise again in hills and tors in the distance. Releasing Ruth's hand I step up onto a half buried boulder and take in the vista. The breeze is strong and cold but there is nothing scary, not now. \"You're right, Ruth: this is just a hill and the Moor is just wild and lonely, not evil,\" I admit. \"It was just that the shadowy shape seemed so real last night.\"\n\n\"Perhaps last night it was. You know, for a woman who works on a programme about ghosts and mysteries, you're very, I don't know, not cynical but... humdrum and prosaic.\" I look down to see her looking up at me and notice again the silver glitter of the pendant around her neck, hanging inside her jumper and the checked shirt she's wearing underneath. I hadn't paid much attention earlier, given she was sitting topless, but now, without thinking, I reach down to gently pull the jumper's neck opening a little wider to see the pendant better.\n\n\"A pentacle?\" I exclaim, surprised. I wonder if it's just an ornament of if whether she wears it for a reason.\n\n\"You're wondering if I'm a witch or a pagan, aren't you?\" she asks, an amused look in her eyes and I nod a little awkwardly, suddenly feeling that I might be trespassing in something very private and personal. \"I suppose I am a bit,\" she admits, \"but... not properly, not really. Mum is pagan so I grew up with it, though she never tried to indoctrinate me. She gave me this just after I started working at BJK and said it was to remind me never to forget that the important things in life weren't a career or money and that life in a big city wasn't real life. At the time I thought she was just finding another way to criticise my choice of career.\"\n\n\"But now you think differently?\" I ask and she looks out over the wild moorland as the wind whips her hair.\n\n\"Yeah, she was right and you know living here, on the Moor, it's not difficult to feel the earth and sky and wind and rain as spiritual forces. I'm not a witch though!\" she adds firmly.\n\n\"I never suggested it,\" I assure her, \"though I'm sure you'd be stunningly brilliant at it if you chose to be one.\"\n\n\"Thank you,\" she smiles as we walk back down the hill. \"Well, here's your car.\"\n\nI reach into my pocket and draw out the keys. \"I wonder if she'll start,\" I say as I open the door and slip into the driver's seat. I turn the key in the ignition expecting nothing and wondering how a breakdown truck will be able to retrieve it. To my surprise, it starts perfectly. \"I really didn't expect that,\"\n\n\"Hmm, it looks like your Gumdrop has been a mischievous girl!\"\n\n\"I think you're right. Still, I won't tell her off too much.\"\n\n\"Good. Now, we'd better get going. I'll lead the way to the hotel and you follow, alright?\" I agree and Ruth returns to her car. There is a distressingly long drive in reverse before the road broadens enough for us each to turn our car around.\n\nI follow Ruth and Mr Bump and discover where I went wrong: at a junction on a bend, I went straight on instead of following the road around as it curved right. Ruth's navigation is faultless, however, and fifteen minutes later we pull into the Hotel's car park where I draw up alongside her and get out.\n\nI look across at the hotel: a bleak, dark grey stone building that is, as Mum had said, rather down at heel and shabby. It also exudes an air of brooding malice, almost malevolence, which reminds me somewhat of the shadow on Moor and makes me shiver.\n\n\"God, what an unpleasant place!\" Ruth exclaims, echoing my thoughts.\n\n\"Perhaps it's nicer inside,\" I reply, trying to convince myself. The look on Ruth's face shows that she too thinks that the unpleasant aura has nothing to do with the state of repair of the place. I'm rather disconcerted that the word 'aura' found its way into my thoughts as if I'm some kind of New Age spiritualist. This is a cheap, backwater hotel but one that has TV, phones, hot running water and Wi-Fi I remind myself. I feel a slight pang as I turn to Ruth. \"Well, I guess it's time to say goodbye. Thank you so much for all you've done,\" I tell her. \"For taking me in and warming me, for bandages and 'Refugee Chic', for tea and porridge and goat milking and... well, just everything.\"\n\n\"Bethany... Beth,\" she ventures the diminutive and I don't mind, not from her, \"you're very welcome: it was all my pleasure. I feel very happy to have met you.\"\n\n\"Me too oooph!\" I have the breath squeezed out of me as she wraps me in a startlingly firm hug that, once I recover from the surprise, I return. \"If you ever get your bed and breakfast going then...\" She pulls back, an offended look on her face.\n\n\"Don't you dare!\" she says. \"I'm not having you say you might come back as a paying guest one day.\" She relaxes slightly. \"You're down here for a while so there should be time to drop into the farm again; you need to bring these clothes back at least.\"\n\n\"I'm sorry, I didn't mean I didn't want to meet up again... I know, why don't you come over to the hotel here so I can treat you to dinner one evening? What about Monday or Tuesday? Or Sunday lunch tomorrow even.\" She looks at the Hotel warily but nods.\n\n\"Okay, let's say lunch tomorrow,\" she agrees. \"Well, you probably want to get in and have a bath and get changed and log on and... whatever.\"\n\n\"Yes. I ought to contact Rick.\" I suddenly realize that some sixteen hours ago I was suddenly cut off mid-sentence; he'll be a little worried I should think. However, first I have to say goodbye to Ruth and there seems to be some awkwardness in doing this; perhaps it's the intense indebtedness I feel for her unstinting kindness and friendliness, not to mention probably saving my life. \"I'll see you again tomorrow. I hope those builders of yours don't give you any hassles and get on with the work to your lovely house.\" It's such a feeble comment but I'm unsure what else to say.\n\n\"They're not coming over today but don't worry, I can keep them under control. I'm not such a hippy that I'm not looking forward to electricity and hot water! I'll see you tomorrow.\" She bends forward and kisses my cheek. \"You be safe in there,\" she adds glancing at the Hotel.\n\n\"I'll be fine,\" I promise, returning her kiss before she returns to her car and, with a final wave, backs out of the parking space and drives away. I open the boot of my car and take out my suitcase, feeling somehow that a rucksack would have been more appropriate. I lock the car and make my way into the hotel. Crossing to the reception desk I hear a man's voice calls out, making me jump.\n\n\"Mornin' Madam. Can I help you?\" he asks with distinct Cornish twang. He is in his fifties, dark hair turning grey and thinning on top.\n\n\"Oh, yes. I'm Bethany Cooper and I was supposed to be here last night but I, well, my car, broke down and I lost my phone.\"\n\n\"Oh, I'm very sorry to hear that. Still, you're here now and you look... er...\"\n\n\"I look a right state I know, but if you knew the night I've had you'd understand! What I really need is a hot bath and, yes, some food would be good. Do you serve lunch?\" ",
        "\"Well, let me just get you signed in and you can go up to your room for a bath and the restaurant opens in just under an hour at twelve thirty, if that would do you?\"\n\n\"Perfect,\" I reply. \"And can you tell me what the password for the Wi-Fi is, please?\"\n\nMy room is at the front of the Hotel overlooking the driveway and small car park. The room doesn't have the sinister feel I got looking at the Hotel but it's a pretty depressing place none the less, with tired, worn d\u00e9cor in muted colours. The bed is a double, but only just, and there is a bedside cabinet with a lamp that has the most hideous shade -- a domed contrivance of Paisley fabric with a fringe of tatty tassels around the bottom that makes it look like some psychedelic jellyfish. Finally, there is also a desk in the room on which sits an old, battered telly, the miniature kettle with a single cup and a pot containing sachets of tea, coffee, sugar and tubs of milk.\n\nFirst things first: I use the toilet and begin filling the bath before starting my laptop and connecting to the Wi-Fi. There are four emails from Rick that show he's becoming increasingly worried about me until by the final email, sent a couple of hours ago, he is desperate:\n\n<blockquote>Bethany, where the hell are you? You're still not answering your phone. I called the hotel and they said you hadn't checked in last night. If I don't hear from you by midday I'm calling the police to report you missing. Rick</blockquote> The clock on the laptop shows 11:44 so I quickly send him a brief reply saying I'm okay. I then write a slightly longer email explaining about breaking down, losing my phone, becoming lost on the Moor and finding Ruth's cottage that, alas, had no phone or even electricity. I decide to leave out mysterious, scary shadows, waking up in bed with Ruth, milking goats and 'Refugee Chic'; apart from not wanting Ruth or me to sound weird, somehow last night and this morning was something special, a time apart from my normal life that I'm not ready to share, not even with Rick and certainly not in an email. I do ask him to send me his phone number as I can barely remember my own and, apart from my parents' home phone number, I have to rely on my phone's contacts all the time.\n\nI click SEND and return to the bathroom where I strip, finding my knickers are rather stained and pungent, and climb gratefully into the bath for a long, cleansing soak. I take the bandage from my right hand to prevent it getting wet and look at the damage for the first time: there are several cuts where thorns, or whatever they were on the plant I grabbed, sliced into my palm and fingers. However, the cuts are clean and already much less painful than they had been when I awoke. I must compliment Ruth on her first aid skills.\n\nMuch as I wanted to just float and relax, I find that I'm agitated and feel that I should be getting on with the research I'm supposed to be doing. I also need to sort out a replacement phone and so after just twenty minutes and barely wrinkled at all from the water, I'm back in the bedroom towelling myself dry and dressing in deliciously clean clothes. When I check my email again I can see Rick has replied, much relieved and begging me to call him. I hesitate over whether to re-apply the bandage to my hand; however, as the cuts are still rather tender, I do, though tying the bandage is challenging and the result is much messier that Ruth's neat original.\n\nSince, rather bizarrely, there's no phone in the room, it's a trip down to reception to use the pay phone in the foyer. As I make my way downstairs I count out the change I have on me, worried that I won't be able to speak for long. However, the cold draught that flows around me from the half-open front door (why the hell is it open, and in late-October too?) makes a long chat a decidedly unappealing option, however much I want to talk to Rick.\n\n\"Rick Ripley.\"\n\n\"Hi Rick, it's me!\"\n\n\"Bethany, thank god you're okay. I was so worried after you got cut off last night. What 'appened?\"\n\n\"Well, at that point nothing; it's just that mobile phone reception around here is crap so my phone lost the signal. It also meant that the sat-nav stopped working and I got lost and then I broke down and...\"\n\n\"'Ang on Beth, that doesn't make sense,\" he interrupts. \"The GPS system the sat-nav uses isn't linked to the phone signal.\"\n\n\"Isn't it?\" I ask rather indifferently. \"Well, the sat-nav stopped working anyway,\" I point out, \"and so I got lost and then Gumd... my car broke down and I ended up wandering on Bodmin Moor in the freezing rain. I lost my phone when I almost sank in a bog: I got out but the phone didn't.\"\n\n\"Bethany, that terrible! Not the phone, I mean you in a bog. So, where was you, after the bog?\"\n\n\"Completely lost. Well, I was lost before that, but, anyway, I was just walking and stumbling in the dark until I came across this house. The woman who lives there, Ruth, she took me in. She thinks I was suffering from hypothermia so she put me to bed and warmed me up. She also cleaned and bandaged my hand where I'd cut it. She was so kind. This morning she found me some dry clothes and fed me and then she helped me work out where my car was left before driving me there and then she guided me here. She's just amazing.\"\n\n\"She certainly sounds it,\" Rick comments and the dryness of his voice makes me realize that I've been gushing perhaps a little too much about Ruth.\n\n\"Sorry, but it was such a horrible night and Ruth did so much; I wouldn't be here talking to you now if it wasn't for her.\" \n\n\"You're right Bethany. I shouldn't be envious but I missed you and I was worried. You need to be more careful and not do foolish things like wandering on the Moors in future. Now what...\" The front door suddenly slams shut cutting off the chilling air flowing off the Moor. It makes me jump and I try to tell myself it was just coincidence but there was something in what Rick just said that made me feel uncomfortable. I wonder if it's not simply that Rick sounded like some villainous character from Scooby Doo: 'Don't you kids go visiting the creepy valley, if you know what's good for you...' as he tries to scare people away from his secret diamond mine.\n\n\"...then you need to see if there's any factual evidence about the people in your story: that always helps make the thing seem more real.\" Rick has been speaking while I was distracted and I hope I didn't miss some beautiful, romantic words, though he now seems to be talking work.\n\n\"Yeah, I thought I might check the library in Bodmin: deaths at a nearby manor house must have been commented on in any local newspapers and there might be books written locally too.\"\n\n\"Sorry, I'm telling you 'ow to do your job, aren't I?\" he admits. \"I have a good feeling about this story and I want it all to go well, not just for the show but for you too.\"\n\n\"Aw, thanks, Rick. I love you,\" I tell him in an upsurge of affection.\n\n\"Yeah, me too.\"\n\n\"Oh crap, my times almost run out and I've no more change,\" I tell him as the warning beeps sound in my ear.\n\n\"Bugger! Get yourself a new phone, Bethany, you can bung it through on expenses as you lost yours when you were working.\"\n\n\"Really? Thank you, Rick. Bye for now, I'll message you.\"\n\n\"Okay. Bye Bethan...\" The line cuts off as my time runs out. I replace the phone handset in the cradle. Why do the guys I fall for always seem to have such an issue with the words 'I love you'?\n\nLunch is indifferent: a rather lack lustre chicken salad that does not auger well for lunch with Ruth tomorrow. Perhaps as Saturday lunchtime is quiet they don't make much effort so I'll see what this evening is like and then decide.\n\nI head up to my room and make a start going through the notes I have, checking some things on the Internet and making a to-do list:\n\n<blockquote>Check local newspapers - Royal Cornwall Gazette & poss. Falmouth Packet Visit Bodmin Libraryfor above and also books Explore Hotel. See if there is a plan or pictures of Purdew Hall. Buy Ordnance Survey map of the area! Sort out phone. Should I buy a proper camera?</blockquote> This last comes from seeing Marcus and Janice produce shots of locations that look too good to have come from a phone's camera. After a moment, I delete it: I've got to get a new phone so I'll ask about how good the camera is before I choose. I sit and think. There might be all sorts of next steps but until I see what I can find to begin, it's hard to think about what comes next. I hesitate before adding another item:\n\n<blockquote>Buy boots and clothing for walking on the Moor.</blockquote> Somehow, I feel that at some point I may need to go out there and, if I must, I'm going prepared this time! I do an internet search for mobile phone stores and there are several in Bodmin, including a branch of the one from which I bought my old phone. Perhaps I should drive into Bodmin and sort it out but, to be honest, I don't have the energy to face the driving or finding my way around a new town. Perhaps I'll explore the Hotel instead. Thoughts of my phone remind me that I ought to email Mum and Dad, so I drop them a brief message saying that I'm here safely but I've lost my phone, that the hotel is okay if a bit manky and asking how they are.\n\nI leave my room and try to explore, visiting the bar and the residents' lounge but other areas of the old building lie behind doors that are locked or marked 'Staff Only' or both. I extend my exploration to a brief foray outside as I attempt a circuit of the grounds. However, it starts to grow gloomy as the afternoon wanes and the clouds build. When the first raindrops fall, I head straight indoors because I've had enough rain for this weekend. Anyway, it'll be dinner time soon and the bar should be open and a gin and tonic is a very appealing thought.\n\nI wake suddenly from a deep sleep, my disorientation a mix of unfamiliar surroundings and a couple too many gins and tonics. I listen: I hear the wind moaning around the building making the window rattle from time to time. It is disconcertingly dark without the customary city gleam of yellow street lighting edging between the curtains.\n\nThere is a thin, high cry, \"Ma-aaaa!\" and my blood runs cold. Silence returns and I begin to wonder if I had imagined it or if maybe it was just the wind. \"Maaa-maa!\" This new cry is no less chilling. There is something strange and unearthly about the cry, which is at once all around me yet seeming distant and, turning my head as I lie here, I cannot locate the direction from which it comes. I grab the other pillow from beside me, pulling it under the covers to hug it for comfort. I suppose it helps, a little, until I see the pale shape by the bedroom door. My body tenses in alarm and then in horror as I realize, almost instantly, that this is not a real person for there is an uncertainty in the shape and a blurriness in the details. However, the form is nonetheless that of a woman in a pale robe, her hair falling down her back in vague, grey ripples. \n\n\"Bear-aaaa... Maamaa...\" The sound is one filled with fear and I cannot help shivering. \"Maaaamaaaaa! Bea-aaaaa! Heeelll meeeee!\" The terror in the sound is almost painful to hear. The ghostly -- there, I've used the G-word -- the ghostly woman also seems to react to the sound: her hands rise as she seems to beat on the door and though there is no sound her desperation is palpable. Her form appears a little more definite than at first.\n\nYet, though the sights and sounds leave me trembling, I feel no threat to me in the cries or from the woman and there is a tiny part of me that feels an urge to go to the source of these cries because nothing should suffer like that. \"MAAA-MAAaaa! Maaa... Bea-aaa... M-Maaa...\" The cries are fading, becoming weaker and more broken even as the ghostly woman's hammering against the door becomes frantic, the thrashing of her head making her hair dance and sway. \"Maaaa...\" this cry is little more the sighing of the wind now. \"Mama!\" The ethereal woman slumps, sliding down the door to lie crumpled at its base, face buried in her hands...\n\n\"No!\" I sit up sharply. Quiet as this last sound had been there was something distressingly final in its abrupt ending. I can feel my cheeks are wet with tears; the sound was, I'm sure, that of the boy, William Blyth. The woman's head lifts and turns towards me and my heart clenches in fear: indistinct as they are, her features are a mask of loss and devastation. It has to be Lady Blyth whose head tips back in a thin, distant-sounding scream of loss and I empathise with her pain.\n\nThat thought, that I might have just heard a young boy's death, even if only the echoes of it, is truly grotesque and one that would distress anyone. Yet, from this building, all I sense is an underlying feeling of hardness and callousness, malice almost, as if it is inured to such suffering; there is no one coming to comfort the fading shade of the grieving mother.\n\nI lie there, my trembling and fear and weeping all slowly easing but I'm unable to sleep as I half dread, half hope at any moment to hear that plaintive, desperate cry of 'Mama!' once more. If the horrible wailing comes again then I didn't just listen to the child die... The wind grows stronger and louder and now there is the rattle of rain against the window panes. I worry that the sound of water will be another distress after recent events but I am warm and dry and I imagine myself back in the bed at Trehalow Farm, safe and protected and cared for, as I cuddle the pillow...\n\nChapter 5: Getting Started\n\nI wake late, the broken night's sleep and perhaps the alcohol combining to make me sleep later than usual. As consciousness fully returns, I remember the cries in the night and the ghost at the door and wonder did I really hear and see them or was it just a dream? I roll over and my hand brushes the pillow in the bed beside me. The memory of cuddling this tells me that, while I still might have imagined it all, it wasn't a nightmare or dream. Somehow, I cannot believe that I simply imagined the sound of the suffering child and the desperate figure of his mother.\n\nOf course, it might actually have been a real child crying and that worked on my overwrought imagination; there don't seem to be many other guests here at present but it's a possibility I need to check. The answer is to talk to the owners, Kenneth and Alison Curnow. Actually, what I've seen of Mr Curnow suggests he's a bit of a grumpy bastard and Mum said it was Mrs Curnow who told her the tale. Therefore, it looks like I'll have to do something I've not done much: I'll need to go all roving reporter and interview people.\n\nHalf an hour later I'm sat down for breakfast. I flex my right hand that feels unexpectedly naked without the bandage. It's still a little sore and the skin tight but the cuts are closed and I think being open to the air will be better than being under an increasingly grubby bandage.\n\nI'm pleased to see that it is Alison Curnow waiting on the tables, rather than her husband or one of the few staff they employ, and I say a friendly hello when she comes over. \"Hello, my dear. You were the lady who got herself proper lost on the way here, aren't you? What can I get you?\"\n\n\"Oh, I certainly did!\" I reply as I glance over the short menu. \"That'll teach me to depend on sat-nav in this part of the world. I think,\" I say in response to my growling stomach, \"it has to be the full English breakfast and a pot of tea, please.\" She nods and bustles off. If I recall, it was Samuel Pepys who said, 'A man might dine well in England if he breakfasts three times a day'; I'm hoping his axiom extends to a woman at the Purdew Manor Hotel, which has been a distinct culinary disappointment so far.\n\nThere are only three other guests: an elderly couple and a middle aged chap, so no young children. When Mrs Curnow returns with the pot of tea I ask her if the Hotel is busy at the moment. \"Oh no, not really my dear: this is it actually,\" she replies, gesturing to the other guests. \"We'll be a little busier next when the schools are on half-term holiday.\"\n\n\"But not as busy as in the summer I guess?\" She shakes her head in confirmation. \"My parents stayed here during the summer; they're the reason I'm here actually.\"\n\n\"They liked it then, even though the summer wasn't very good?\"\n\n\"They did enjoy it,\" I assure her. \"Mum particularly liked the story of the haunting you told her.\"\n\n\"Oh, the tale of Sir Lovell and Lady Blyth and their dead son, yes; it's such a sad story. And people have seen things here and on the Moor you know? Some people think Ken and I just made it up to attract the spiritualists and ghost hunters but we didn't. I...\" she hesitates, \"I'm sure I've seen the ghost of Lady Blyth, one night on the landing. Proper scary it was.\" She looks at me, keen that I should believe her so I nod.\n\n\"I can certainly believe you did. Mrs Curnow I should tell you,\" I glance around and lower my voice not wanting to be overheard, \"I work for the BBC on the 'Mystery, Myth and Murder' TV show?\" Her eyes go wide.\n\n\"Oh, I love that programme!\" she exclaims, \"And that Rick Ripley is quite a dish. Are you here to do a story about our ghosts?\"\n\n\"Well, we're certainly considering it Mrs Curnow.\"\n\n\"Oh no, you must call me Alison, Miss Cooper.\"\n\n\"I prefer Ms actually but, please, my name is Bethany.\" Just then there is the ding of a bell and she excuses herself, returning moments later with my breakfast: a large plate with bacon, sausage, a fried egg, grilled tomato, baked beans and fried bread that is daunting in its scale.\n\n\"I'll leave you to eat, Ms, I mean Bethany,\" and she moves off. I tuck in and, despite my fears, the food is surprisingly good but also very filling. I eat only half of it, conscious that I promised to treat Ruth to lunch and I know how awkward it is dining with someone who has no appetite. \n\nThe other diners finish their meals and leave and I am left on my own. Alison comes over and sits beside me and I ask her whether she has much information on the family or about what the house was like before it became a hotel. \"Well, there are a couple of old paintings of Sir Lovell and Lady Blyth and a watercolour of Purdew Hall as it was then. I'm sure I've seen a whatchamacallit, a plan of the old house at some point. It might have been part of the deeds when we bought the place so I'll ask Ken.\"\n\n\"That would be brilliant, Alison, thank you. Um, could I see the paintings at some point?\" For some reason, much as I want to see them, it is a scary prospect.\n\n\"Of course; give me half an hour to get sorted in here and I'll meet you in the front hall. Would that suit you?\"\n\nI tell her that would be perfect and drink the last of the tea before walking out into the hall. The grandfather clock opposite says it just past nine thirty and I wonder what to do for half an hour. I see a painting on the wall near the clock that I haven't noticed before and walk over to examine it. As I suspected, it is the water coloured etching of Purdew Hall, the one that Alison mentioned. I can see the artist did their best but there is no doubt about it: this has always been a grim, foreboding looking place.\n\nI jump as two slightly chilly hands slip over my eyes from behind. I give a little squeal as Ruth's voice asks, \"Guess who?\" and I laugh. My laughter here sounds out of place, inappropriate, almost like a giggle at a funeral, and I cut it off.\n\n\"You clown!\" I say, turning to her and the sight of Ruth's smiling face is unexpectedly comforting. Actually, given what I'm sure I saw and heard last night, maybe it's not so unexpected. My eyes register her clothing: a good quality outdoor coat that's unzipped to show a jumper beneath, waterproof trousers and, strangely, her feet just in thick, woollen socks. She glances down, following my gaze.",
        "\"Oh, I took my boots off and left them in the entrance so I didn't walk mud across the floor; it wasn't so I could sneak up on you, I promise!\"\n\n\"You walked here?\" I ask in amazement. \n\n\"Yes, I walk a lot on the Moors. It's quite safe as long as you're sensible about the weather, dress appropriately and know where you're going.\" \n\n\"You mean don't go out there in the middle of a storm at night wearing only a thin jacket with no idea where you are, I suppose.\"\n\n\"Yes, I suppose I do,\" she smiles.\n\n\"I'll bear that in mind. I don't suppose you'd be willing to act as a guide if I do go out there again would you?\"\n\n\"It would be my pleasure, Bethany. Are you okay? You look tired.\" \n\n\"You won't believe the night I've had,\" I tell her as I grab her hand and pull her to the Guests' Lounge that is, as I'd hoped, empty. I urge her into an armchair and draw another one up so I can sit close, facing her.\n\n\"You too?\" she asks as she sits. \"I had to come over early to see you because of my night!\"\n\n\"Why? What happened?\"\n\n\"No, you go first.\"\n\n\"Okay. Well, something woke me up in the night. At first, I thought it was the wind but it was a child crying. It was calling 'Mama' and something else... 'Baya' or 'Bear-ra'; something I couldn't make out properly.\" I see the look on her face. \"No, Ruth, before you suggest it, there are no guests with children here, I checked.\" She nods in acceptance. \"Anyway, the child's cries woke me up but then I saw a woman. Shit, Ruth, it was a ghost. That sounds so corny sitting here but it's true. It was a woman and she was at the door, banging on it like she was trying to get out.\"\n\n\"Oh god!\" she exclaims. \"Were you scared?\" I think for a moment.\n\n\"When I first saw her, the ghost, I was bloody terrified. For a moment I thought it was a person in my room but I could tell as I looked that she wasn't real. It was scary but... Ruth, it was just so desperately sad. Hearing a child cry in such fear or pain was horrible enough but the poor woman trying to get through the door to comfort or rescue the child but unable to do so. She was so desperate...\"\n\n\"And you think it was the ghost of Lady Blyth and the crying was her son?\"\n\nI nod dejectedly as I relive the emotions of last night and feel Ruth take my hand to comfort me. I look at her, gazing into the light, golden brown of her eyes that shine with concern. I wish she'd been with me last night.\n\n\"So, what happened to you last night?\" I ask after a few moments.\n\n\"Well, nothing as right scary as you had,\" she assures me. \"I was lying in bed last night listening to the wind when I heard a noise from upstairs, from the main bedroom actually, right above the kitchen. It sounded like soft footsteps but I knew that was silly so I thought maybe it was something banging in the wind. It was really disconcerting so I went up to check.\" I imagine her climbing the stairs, pitch black as she has no electricity.\n\n\"Sooner you than me in the dark!\" I tell her earnestly.\n\n\"Well, I did have my little electric torch. Anyway, I could still hear them, the walking feet, as I came to the bedroom door, which was closed. When I opened the door the sounds were really clear and they were definitely footsteps; I could almost follow where the person was pacing up and down... but there was no one there!\"\n\n\"What did you do?\"\n\n\"I did the same stupid thing most people probably do: I said, 'Hello, is there anyone there?'\" she smiles. \"Of course there was no answer -- it would have really freaked me out if there had been! -- but the footsteps stopped and I got this real feeling of anxiety, almost of panic.\"\n\n\"What were you worried about?\" I ask in concern and she looks a little awkward.\n\n\"Um... you, Bethany; I had the most intense feeling that something horrible was going to happen to you. That's why I came over here sooner than I planned. I'd have come even earlier but...\"\n\n\"But you didn't want to seem like some mad woman?\" I suggest.\n\n\"Yes, something like that. I was so glad when I saw you standing there looking at that picture and nothing terrible had happened.\" Her hand squeezes mine just a little tighter. \"Although...\" That thought hangs between us: something pretty horrible had happened to me in the night. \n\n\"You don't think, maybe, we're getting carried away here?\" Her hand releases mine and she sits up a little, drawing back slightly.\n\n\"What do you mean?\" she asks, a slight edge to her voice.\n\n\"Well, I tell you I met a strange, threatening shadow on the Moor and hear a crying child and see a ghost, while you hear disembodied footsteps, and then there was that ghost you saw at the back door, and we're both just, 'Oh, what was it like and were you scared?' Neither of us is questioning what the other says, we just accept it.\" She relaxes a little.\n\n\"So you're worried we're encouraging each other, like two girls telling each other ghost stories at a sleepover until we're both seeing things?\"\n\n\"More or less, yes.\"\n\n\"Well I know what I saw and heard, and I guess you know how it was for you, right? Maybe my worry for you might have been me over reacting but only because I... I like you and I care about you after what happened the other night.\"\n\n\"I really like you too, Ruth. I, er, I did wish you were there after I saw that ghost last night, I can tell you!\" I laugh and she smiles. Just then I hear Alison calling my name. \"That's the owner; she's promised to show me a couple of paintings they have of Sir and Lady Blyth. Come on.\"\n\nI introduce Ruth and Alison to each other before she leads us through one of the 'Staff Only' doors.\n\n\"This is our part of the house,\" she explains. \"It used to be the drawing room and the library,\" she tells us as we pass a dining room and a sitting room. \"This was the estate office,\" she shows us the kitchen, \"and this room here was the study,\" she says as she ushers us into her bedroom. There on the wall opposite the bed are two portraits that seem to have been painted directly onto the wood panelling. That has to be the only reason that they're still there because there is no earthly way anyone would choose to have the picture of Sir Lovell staring at them and certainly not in bed. I feel Ruth edge closer to me, her arm slipping through mine as we look upon his intense, dark-eyed and malevolent gaze. His nose is crooked, evidently broken at some point, his mouth a thin, hard line that curves upwards slightly in the left corner to become a cold sneer.\n\n\"Fucking hell,\" Ruth murmurs to me, \"I thought a portrait was supposed to be flattering!\"\n\n\"What's even more worrying is the possibility that this is a flattering portrait!\" I whisper back. \"He's not exactly handsome, is he?\" I say to Alison.\n\n\"Oh, I don't know,\" she muses, \"he has a certain rugged appeal...\" Ruth and I exchange a look of incredulity at her comment but tactfully say nothing, edging past to look at the painting of Lady Blyth more carefully. Immediately I know that this was the woman whose ghost I saw last night.\n\n\"Oh my god: it's her,\" I gasp.\n\n\"What's that?\" Alison asks curiously. \"What do you mean, 'It's her'? Have you...\" she gives a little squeak of excitement, \"have you seen Lady Blyth's ghost?\"\n\n\"I, erm, well maybe... I saw something last night...\" I reply awkwardly, embarrassed to admit it to Alison in a way I hadn't been with Ruth.\n\n\"She's got hair like yours, Beth,\" Ruth interjects, \"and blue eyes too; she's beautiful.\"\n\n\"Her eyes are a much nicer blue than mine,\" I smile. \"She's certainly beautiful though. Makes you wonder why she chose matey there.\"\n\n\"The marriage would probably have been arranged between his family and hers in large part. She, Lady Blyth, would have been under huge pressure to marry Sir Lovell, whatever her feelings in the matter I'm afraid,\" Ruth replies.\n\n\"But you saw her?\" Alison insists. I realise that I'm going to have to tell her something, so I simply say that I had seen a ghostly figure at the door of my room that looked like she was trying to get out. \n\n\"I sort of suspected it might be Lady Blyth,\" I admit. \"That was why I wondered if there was an old floorplan...\"\n\n\"Because you wondered if it was her room!\" she finishes as if she has just made some Sherlock Holmesian deduction. However, I just nod. \"Oh, I'll definitely ask Ken about them,\" she assures me as I reach into my pocket looking for my phone to photograph the two pictures.\n\n\"Damn!\" I curse softly as I remember the phone's lost. Ruth guesses what's happened and reaches into an inside pocket of her coat before handing me a little digital camera.\n\n\"Would this help?\" she asks and I smile in acceptance.\n\n\"Would you mind if I photographed the two paintings? To include with my research?\" I ask Alison and she acquiesces happily.\n\n\"Would, I mean if you show this tale on 'Mystery, Myth and Murder' would there be like proper filming with actors 'n' all? And might Ken and I be on TV?\" she asks excitedly.\n\n\"Well, yes and very likely,\" I tell her as I line up the camera to photograph Lady Blyth and then struggle to find the shutter release button.\n\n\"Here,\" says Ruth, her hand brushing the back of mine as she reaches over to guide my finger. I take a couple of photographs of each painting in turn and one of the two of them together, showing them in-situ, before thanking Alison. We make our way back out into the main hall by the Reception, where Alison apologises, saying she must get on with her work.\n\n\"She's going straight to Ken to tell him all about you, the hot-shot TV producer!\" Ruth teases.\n\n\"I'm not a producer, as you well know.\" I walk over to the entrance and through the doors to stand in the porch. Just inside the outer door are a pair of muddy walking boots and a small rucksack, Ruth's I guess. \"Do you think this is a porch or a portico?\" I ask as I stand, looking out. It is raining, again, the staccato patter soft but immense, filling the world with its sound. I have the intense but bizarre urge to slip my arm around Ruth, to hold her and be held. As I feel her shoulder brush mine the urge is almost overwhelming.\n\n\"Do you ever feel like things are happening to you like you're part of a story?\" She asks unexpectedly. \"Like... whenever you do something it seems afterwards to have been part of a script?\" \n\n\"You mean... what? Us meeting? You taking me in the other night?\"\n\n\"Yes, all of that. For instance, why did I take you to milk the goats?\"\n\n\"What?\" I laugh at the unexpectedness of the question. \"They needed milking and you didn't want to leave me sat on my own, I suppose. But Ruth, I loved doing that, I loved that whole morning,\" I confess.\n\n\"Exactly! The goats could have waited and I certainly have never asked a new visitor to come and milk them with me before, so why did I do it with you, a woman who was half-dead with cold?\"\n\n\"I was neither half-dead nor cold at that point; you had cared for me and warmed me up.\" I feel the blush heating my cheeks as I remember the sensation of her warm, almost naked body heating mine as I woke. To my surprise, I see the colour rising in her face too. I give in to the coercive urge inside me and put my arm around her. \"I know I said it before, but thank you.\" After a brief hesitation, she hugs me back. I wonder if the sound of rain will always make me think of her holding me?\n\n\"Listen, Ruth, I really need to go into Bodmin and sort out a new phone,\" I tell her as we move apart. \"Plus, if I'm honest,\" I lower my voice, \"the food here isn't up to much and I did promise you lunch so I thought we could eat elsewhere.\"\n\n\"You're not just after a navigator are you, Beth?\" she asks with a smile and I put my tongue out at her.\n\n\"While I've no doubt I'm forever in need of a navigator, I think spending time with a friend is much more important,\" I reply. \"Anyway, it's not my fault I was never a girl scout or whatever; I bet you were.\"\n\n\"Queen's Guide actually,\" she replies with a touch of pride and I try to look suitably impressed despite having no idea what this means. She obviously senses my ignorance. \"Queen's Guide is like the highest award in Girl Guiding; you have to take on challenges and lead and go on expeditions to gain it.\"\n\n\"So it's like the top Girl Guide badge you can get?\" I ask and she laughs.\n\n\"Yes, I suppose so. Anyway, as a friend and a navigator, I'd love to come with you.\"\n\nChapter 6: Bodmin\n\nThe drive to Bodmin gives us time to just chat and get to know each other: she shares details of her past career in the City, her growing frustration and disillusionment with her work and how finding the farm seemed to offer the chance to reinvent herself. I tell her of life at the BBC, the way it lacks the glamour that people assume it must have, the frustrations of my seemingly stalled career and, to my amazement, even how I came to be sleeping with Rick.\n\n\"So, do you love him?\" she asks. It is a disconcertingly direct question and one that I have been reluctant to put to myself. It makes me think.\n\n\"I... I certainly like him. I mean he's good company and... well, he's good in other areas too.\" I pray that she doesn't ask me to explain that as I feel my cheeks ignite.\n\n\"Okay, so he's good in bed and good company when you go out,\" she says, smiling at my discomfort. \"However, the other important question is: does he love you?\"\n\n\"He cares about me; he was very worried when I told him about getting lost on the Moor and very insistent that I should take more care of myself.\" Though he didn't say he loved me, even after I said I did to him, a treacherous thought reminds me, and even his concern had felt rather domineering. \"We've only been out a couple of times so it's still early days...\" I finish rather lamely and then curse myself: I've just admitted that I've slept with Rick each time we've gone out. I glance at Ruth, hoping she doesn't think me a complete slut, though I couldn't really blame her if she did. \"What about you? Is there any boyfriend or significant other in your life?\" I ask, deciding that we've discussed my love life quite enough.\n\n\"No, not at the moment,\" she admits. \"I guess I don't fall for someone easily but when I did I fell hard but it didn't work out. I'm sure there's the perfect someone for me somewhere and that somehow we'll find each other. Until then I'm going to see where life takes me.\"\n\n\"Like going to Bodmin with the mad woman who banged, half dead, on your door in the middle of the night?\"\n\n\"Yeah, why not? Turn right up ahead there,\" she says and points.\n\nBodmin is unexpected: an odd mixture of old and new with old stone buildings and modern shop fronts. Still, this does mean that there is the very modern mobile phone shop that has all the latest models. Unfortunately, it also has, as Ruth observes, \"The usual patronising, smarmy gits as sales assistants!\" I have to agree because, although I might not be the most tech-savvy woman in the world, I'm not a simpleton either; I have a pretty good idea what I want, which isn't a phone that has a tiny screen, small memory and indifferent camera just because it's available in pink!\n\n\"Look, I had the C4 model, which I really liked, but I can see from the ads on the wall that there's now the C5 and the larger C6 so if you could just show me those and let me know the price and plans available, please,\" I say as I realize that if I let this guy keep making suggestions we'll be here all day. Ruth gives a little nod of approval as he leads the way. \"Oh, and I'll need my old number transferred to the new phone please.\"\n\nThere is some trial and error -- the C6 is very large and feels rather like holding a paperback book to my ear but the screen is amazing and Rick did say I could charge it to expenses-- and rather more internal debating over the very large price and whether I should change my contract but forty-five minutes later we are walking out of the shop.\n\n\"Sorry that took so long,\" I apologise to Ruth.\n\n\"You looked so set on that big phone and the assistant looked so annoyed when you changed your mind at the last minute.\"\n\n\"I didn't mean to mess him around but the big model was just a silly price really. Anyway, he should have told me at the start that the C5 is waterproof. I'm glad I noticed that after what happened to my old phone.\" I hesitate when I see Ruth's expression. \"Being waterproof wouldn't actually have helped my old phone would it?\"\n\n\"Not really, no. Still, you can make calls and take photos in the bath without worrying!\" she teases. \"So, what now?\"\n\n\"Do you mind if we do a bit more shopping? Well, after a cup of coffee, obviously. I could do with your help buying some stuff for walking on the Moor and I'd also like to find the library so I can come back tomorrow and get on with some research.\"\n\nRuth happily accompanies me, advises me and guides me around the town. The library, an amazing old stone building, is of course closed but will be open tomorrow but, I notice from the sign outside, closed on Wednesdays. We move on to visit several shops, some to buy and others just to browse. Ruth's taste doesn't do 'pretty and girlie', preferring practical, simple and, occasionally, elegant. \n\n\"Also comfortable and warm!\" she insists when I make this observation to her. \"No point in wearing something that hurts or means you freeze your arse off! The history of fashion seems to contain quite a lot of things designed to constrict, hamper and possibly humiliate women, corsets and high-heeled shoes to name just two!\" I look at her a little surprised by her vehemence. \"Sorry,\" she adds, more calmly, \"it's a hangover from working at the bank. I got quite a lot of stick in the beginning because I don't wear heels and preferred a trouser suit to the narrow-skirted suits that seemed de rigueur for female staff. Who wants to waddle like some demented penguin?\"\n\n\"Some people would call it a sexy, feminine sashay,\" I suggest, smiling.\n\n\"Well, I think a woman's walk is sexy enough and doesn't need ridiculous exaggeration,\" she says firmly. I wear heels when the situation seems to demand it but, since I've never felt I move with any particular poise or elegance in them, I rather regret not taking Ruth's 'screw you' stance sometimes.\n\nWe head to what I promise will be the last shop and in the light of our last conversation, I find myself watching Ruth walk. She is quite tall and slim, but not skinny. She walks with a confidence and ease in her mud-stained boots and trousers. Is it sexy? I think perhaps it is, or should be: a strong, confident, independent woman should definitely be attractive. Of course, Ruth also has good legs and a nice bum, which helps too. Maybe I should take up hiking because I find myself envying her figure and I have the clothing now.\n\nI suddenly realise we are hours past lunch. \"I'm sorry, Ruth; I promised you lunch and it's getting late so no more shops. What do you fancy to eat? Whatever you like, it's my treat.\"\n\n\"Actually, what I really fancy is a curry and I know just the place. Is that okay?\" \n\nThe meal was very good and very filling, which made our walk back to the car more of an amble but a happy and contented one. \"Hotel or farm?\" I ask as we begin the drive back.\n\n\"Can we go back to the hotel? I'll walk home and we can have a drink in the bar first as you didn't want to drink with the meal.\"\n\n\"It'll be dark; will you be okay walking on the Moor in the dark?\" I ask apprehensively, remembering my own experience.\n\nI'll be fine. I've walked the Moor at night before and I know the way; I also have a torch in my rucksack.\"\n\n\"You're such a Girl Scout,\" I tell her with a chuckle. \"What else have you got in there?\"\n\n\"Queen's Guide, remember! And there's a small plastic sheet that I can sit on or maybe shelter under, a couple of energy bars, a water bottle, a compass, a box of waterproof matches and some kindling, a whistle and a little first aid kit. Got to 'be prepared'! You know, 'Be Prepared' -- the Scout and Guide motto?\""
    ],
    "authorname": "ScattySue",
    "tags": [
        "romance",
        "first time",
        "nudity",
        "oral",
        "haunting",
        "ghost",
        "discovery"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/haunted-by-love"
}