{
    "title": "Jeanie's Lamp Ch. 04",
    "pages": [
        "Music blasted from my car speakers as I sped down the street, the deep bass of the rap song I was listening to shaking the frame of the car around me. I didn't much care for the music itself, but I was unreasonably proud of the aftermarket sound system I'd personally installed and couldn't resist showing it off every now and then with the loudest, most bass heavy music that I could find; especially when I had a guest riding with me.\n\nThe music suddenly changed to some sort of EDM song, and I glanced over to see Jeanie fiddling with the car's touchscreen. \"Hey, hands off the radio!\" I said, shooting her an irritated frown.\n\nShe shot me an annoyed look right back. \"But I want to listen to something good.\"\n\nMy frown deepening, I made a move to switch the music back only to have my hand painfully slapped away. \"Haven't you heard that the driver controls the music?\"\n\n\"So? What're you gonna do about it?\" she asked with a challenge in her voice, and I could only roll my eyes and let her have her way as there wasn't much I could do while driving if I didn't want to kill us both in a violent, fiery crash.\n\nEven more aggravating was the fact that after a few minutes her choice of music had begun to grow on me, especially as I watched her hum and dance along happily in the passenger seat. It was becoming increasingly difficult to keep my eyes on the road and not on her writhing body, her joyously erratic movements putting a soft smile onto my face. Her happiness was infectious, if not distracting.\n\nFortunately we were almost at our destination. I turned into the parking lot of the movie theater and managed to find an empty space right near the front, and once we'd both gotten out of my car Jeanie playfully latched onto my arm to pull me up to the end of the line, damn near skipping in her excitement.\n\nEarlier that week she'd handed me one of the coupons I'd made her for her birthday and all but demanded that I take her to the movies on my next Friday off, and since I'd had nothing better planned for that night, I'd readily agreed. Hanging out with Jeanie was usually a lot of fun, her light-hearted, contagious energy making me smile even when I didn't particularly want to.\n\n\"I'm getting snacks, do you want anything?\" she asked once I'd bought our tickets and we stepped into the crowded theater.\n\nA bit surprised by the offer, I shrugged. \"Just a small Coke. Thanks.\"\n\nShe waved me off and moved to get into one of the concession lines, leaving me standing awkwardly in the middle of the lobby.\n\nI managed to find a clear section of wall to lean against that was both out of the way of foot traffic but still allowed me to watch Jeanie's progress, and while I waited, I used my new vantage point to really take in her appearance.\n\nIt was the nicest thing I'd seen her wear so far, the main part of her outfit consisting of a black lace skirt and a simple, white, short-sleeved crop top. Dark tights led into a pair of black low heeled boots, and a plain black satin choker encircled her pale, thin neck. A short leather jacket completed the look to give her more of an edgy vibe, and seeing at it all together I thought she looked rather cute.\n\nIt wasn't the first time I'd had that thought in recent days. Ever since the night of the party I'd found myself staring at her like this, my gaze unwittingly finding and staying on her anytime she was around, and I was more confused by my sudden interest in her than anything. Until very recently I'd only ever looked at Bobbi (and Margot Robbie, and Pamela Anderson) that way.\n\nAs though she'd noticed me watching her she looked over her shoulder from her position at the front of the line to curiously cock her head at me, and realizing I'd been caught staring, I sheepishly shrugged back. I didn't know why I felt so embarrassed by it, but the warm feeling that had blossomed in my chest stayed even when she'd turned back to make her order.\n\n\"Hey! Frankie!\" a familiar voice called from my left. I turned my head to see Dennis walking up to me with a wide grin stretched across his face. He was flanked by a couple of other kids I vaguely sort of knew from school\u2014Mike and Jonas, or Johnny, or whomever\u2014and I nodded at the three of them as they approached.\n\n\"What's up?\" I returned, hands shoved deep into the pockets of my blue denim jacket.\n\nDennis shrugged his shoulders. \"Not much, just here to see that new Margot Robbie movie. You're probably here for the same, right?\" When I nodded again, he shook his head and laughed. \"I should've known. You and your blondes,\" he joked. \"I bet you're seeing it alone so you can gawk at her without feeling like a complete creep, huh?\"\n\nI didn't know whether to feel annoyed or insulted by the insinuation, even if it did actually sound like something I'd do. \"Well, actually, I'm waiting for a friend.\"\n\nHe looked me over skeptically. \"Yeah? Who?\"\n\nAt that moment Jeanie approached our little group, gluing herself to my side as she warily looked up at the new arrivals. \"Hi,\" she said, smiling hesitantly. Her arms were full with a tub of popcorn and two drinks, one of which I took to help relieve her burden.\n\nAn awkward silence developed while Dennis gawked at the two of us, and I quickly moved to introduce her. \"Uh, guys, Jeanie. Jeanie, guys.\"\n\n\"Oh, are you two on a date?\" he asked with barely hidden disappointment.\n\nJeanie snorted. \"It's nothing like that, he just owes me.\" She seemed to relax some after realizing that they were friendly and allowed her guard to fall a little more. \"What're you watching? If we're all seeing the same thing, we should sit together.\"\n\nI was surprised by the flash of irritation I felt towards her in that moment, especially at how flippantly she'd denied that it wasn't a date. I mean, it wasn't, but she didn't have to sound so certain about it.\n\n\"Yeah, sure,\" I agreed halfheartedly.\n\nDennis's face immediately lit up, and I thought that if he looked any happier he might've actually exploded. \"That'd be awesome! We should hurry up and grab seats before all the good ones are taken.\"\n\nHe led the way to our screening room, chatting animatedly with Jeanie about the characters' backstories, differences from their comic counterparts, and what he hoped to see in the movie. I didn't have much to offer as I wasn't really into the whole superhero thing like they were, and I was seriously starting to feel like a third wheel by the time we'd all taken our seats, Jeanie and Dennis sitting right next to each other while I sat on her other side.\n\nThe more they spoke and laughed together in the dim lighting of the theater, the deeper the pit in my stomach seemed to grow. I knew, intellectually, that it was unreasonable for me to be feeling so put out. I should've been happy that she was making new friends. If she was able to branch out and find other people to hang out with instead of just me alone she'd probably be much better off.\n\nThat didn't mean I wasn't relieved when the lights finally dimmed and the two of them were forced to quiet down once the pre-movie trailers began to play.\n\n\"Want some?\" Jeanie whispered, holding the bucket of popcorn out towards me.\n\nI almost said something snide about being surprised that she even remembered I existed though managed to bite my tongue right before the words could come tumbling out. \"No thanks.\"\n\nIf she noticed the shortness in my tone she didn't show it, instead shrugging and turning the bucket over to Dennis who of course took a huge handful and stuffed it into his mouth. He made such a big show of being grateful for her generosity that it had me rolling my eyes.\n\nI didn't know what I was getting so frustrated for. Jeanie was just my friend, and I'd known for weeks that Dennis had a thing for her. If they happened to get together following this it would've been a good thing\u2014at least that's what I tried to tell myself.\n\nOnce the movie started, not even Margot Robbie's perfect ass could distract me from glancing over at Jeanie every few minutes, my scowl growing whenever they nudged or whispered to each other if a character said an iconic line or made a reference to something that had happened in a previous movie. It made me wonder what I was even there for if she was just going to ignore me the whole night.\n\nWhat felt like hours passed before the final credits finally began to roll, and of course then we had to wait to see if there was something after. By the time we were walking out of the theater I just wanted to get home, though unsurprisingly Dennis wasn't ready to end the night there. He continued to gush to Jeanie and only Jeanie about the movie while completely ignoring the rest of us, his arms flailing about in his exuberance.\n\n\"Look at him go, he's totally into her,\" I heard one of his friends\u2014Jacob, as his name turned out to be\u2014mumble under his breath.\n\nI watched them both pull out their phones to exchange contact information and felt my cheeks burn with annoyance. I'd had enough.\n\n\"I should probably get you home, yeah?\" I cut in, somehow managing to keep my voice even despite the blood rushing in my ears. I could see on Dennis' face that he clearly wanted to argue, and I was more thankful than I cared to admit when Jeanie just shrugged and skipped over to where I was standing.\n\n\"Yeah, I guess it's getting a little late. Nice meeting you guys!\" she said, waving at Dennis and his friends, and as horribly petty as it was I took some small satisfaction in the disappointed frown on Dennis' face as he reluctantly waved back. He might've had her attention for most of the night, but at the end it she was still going home with me.\n\nI felt much more relaxed once we'd gotten away from him and back to my car, though now that it was only the two of us again I began to feel embarrassed. Embarrassed that I'd allowed my anger to get the better of me, and embarrassed that I'd acted so childish when I didn't have any claim to her whatsoever. Jeanie wasn't my girlfriend, and even though we'd fooled around a lot over the past month, she'd set firm boundaries to clearly let me know that we were just friends. '\n\nBarely a week ago our deal had seemed like the perfect arrangement, and I should've been more than happy with how things were going.\n\nSo why was I feeling so dissatisfied?\n\nI started up the car once we were both seated and immediately turned the music up as loud as I could stand, drowning out both my confused thoughts and any potential for further conversation. I didn't quite trust myself to speak to her yet\u2014not while I still didn't understand what was happening in my own head.\n\nEvery now and then she'd try to turn the music down to talk to me, and every single time she did I'd use the controls on my steering wheel to turn it right back up. This went on for a good few minutes until finally she just shut the whole thing off with a huff and shifted in her seat to glare at me.\n\n\"Why're you being so weird?\"\n\n\"Weird how?\" I tersely replied.\n\n\"I don't know. I feel like you've been ignoring me all night.\"\n\nI almost scoffed at her statement, since from every angle that I could see it was the other way around. \"You and Dennis seemed to be getting along pretty well. I didn't want to get in the way of your fun.\"\n\n\"Why would you get in the way? He's your friend, right?\"\n\n\"Is that why you gave him your number?\"\n\nShe looked a bit taken aback by the accusation. \"No, I just gave him my friend code so we can play Mario Kart or something later.\" She paused for a long moment, her electric blue eyes scrutinizing. \"Wait, are you jealous?\" she asked, playfully poking at my shoulder.\n\nI swatted her hand away. \"I'm not.\"\n\nHer smile widened then, becoming impish, and she hummed. \"I think you are, and it's cute.\" She looked so pleased by it all that rather than argue with her I just sighed and rolled my eyes. She could be unwaveringly stubborn when she wanted to be, and once she got an idea into her head it was all but impossible to change her mind.\n\n\"Whatever,\" I mumbled sourly. I pulled up to the curb in front of her house and shifted the car into park.\n\nStill smirking at my expense, she unbuckled her seatbelt and opened the door. \"Thanks for taking me out. It was fun, even if you were being a jealous little baby the whole time.\"\n\n\"Shut up.\" In an attempt to maybe shift the balance of power back into my favor, I put on my most genuine, charming smile, something that I found surprisingly easy to do as I looked at her. \"By the way, I don't know if I said, but you looked really pretty tonight.\"\n\nI watched color flood the lightly freckled skin of her cheeks and felt vindicated by the response. It was the one reaction she couldn't hide, even if she tried to look nonchalant about it. \"Thanks.\" She slid out of the car and then turned to lean down and look at me, her hand resting on the open door. \"Make sure you come over right after work tomorrow, okay? Promise me.\"\n\nThere was something urgent in her tone that didn't leave much room for argument and I felt my curiosity pique. \"Okay, I promise.\"\n\nShe smiled then, albeit nervously, and nodded her head. \"Good. See you tomorrow.\" She slammed the door shut, and I watched her long enough to make sure that she got inside safely. I didn't want to admit to myself that it might've been because I just wanted to see her for a little while longer.\n\n\u2014\n\nI stumbled into work the next morning two minutes before my shift began with bleary eyes and my hair sticking up all over the place. I'd somehow managed to dress myself in an old bomber jacket, a wrinkled white t-shirt and the same ripped jeans I'd worn the night prior, and I'd never been so glad to have a job where it literally didn't matter what I looked like.\n\nAfter getting home from the movies I'd taken a quick shower and gone to bed almost immediately, but that didn't mean I was able to actually force myself to sleep. My mind simply wouldn't let me rest as I worried over Dennis and a girl that I wasn't even dating.\n\nI kept thinking about how well they'd gotten along despite only knowing each other for a few hours, and I honestly couldn't help but wonder if I shouldn't take a step back and let two of my friends potentially be very happy together. They had a lot in common, at least as far as movies and games were concerned, and Dennis was pretty smitten already. I wasn't sure how Jeanie felt about him, but at the very least she seemed to really enjoy his company. I wouldn't have been surprised if she'd developed something of a crush on him too, so perhaps letting them have a go at it would be for the best.\n\nThere was some risk that came along with that plan though, the biggest being that I didn't know how Dennis would react to the fact that Jeanie was trans. I didn't want what had happened at her last school to happen here, and though I doubted he'd ever do something as shitty as intentionally out her, there really was no way to know for sure. We were in south Georgia, and unfortunately we weren't exactly known for our progressive ideals.\n\nI sighed and rubbed tiredly at my forehead. I still wasn't much closer to figuring out what I should do about the situation after hours of sleepless thought, so for the time being I resolved to put it out of my mind. It wasn't like I had to come up with a solution right away.\n\nI quickly clocked in for the day and went into the kitchen to pour myself a cup of coffee. It was one of the few things on our menu that I allowed myself to regularly indulge in, and I literally groaned as the first sip of the scalding hot liquid slid down my throat. I could already feel the caffeine working its magic, the tired tension behind my eyes easing by the slightest amount. A few more sips of the bitter, murky liquid later and I was beginning to feel like something approaching a regular human being.\n\n\"Well, you look terrible,\" Bobbi said. Her hip leaned against the metal countertop next to me, one of her perfectly manicured eyebrows raised as she stared at me. She had her long blonde hair down and hanging around her shoulders instead of up in its usual ponytail, and if I were more awake I might have been curious about the change; as it were, I was barely aware of her presence.\n\nThings between Bobbi and I had been a little awkward ever since the night we'd kissed. I could tell that my reaction\u2014or lack thereof\u2014had confused her. Fuck, it confused me. It seemed like we'd mutually agreed that it hadn't even happened which I truly wasn't sure how to feel about, but I was glad that at the very least we were still friends.\n\n\"Thanks,\" I mumbled, giving her only the barest acknowledgement.\n\nHer brow crinkled with concern. \"Trouble sleeping, Frumpleby? Or are you coming down with something?\"\n\n\"The first one.\"\n\n\"Oh. Maybe you should just take the day off then?\"\n\nI shook my head and let out a tired breath. \"Nah, I'll be fine after five or ten more cups.\" To emphasize my point I poured myself another steaming mug, completely foregoing the sugar this time.\n\n\"I don't pay you to drink coffee, Francis,\" I heard my manager yell loudly from his office.\n\nI fought the urge to roll my eyes, because the only way he could have possibly have seen me was if he was watching us on the security cameras. Even more likely was that he'd been watching Bobbi like the creep that he was while I was just unlucky enough to be standing next to her. I could almost imagine his beady little eyes staring at her ass through his computer monitor; it was probably half the reason our cameras streamed in 4k.\n\n\"And there it is, right on cue. I'll talk to you later.\" I drained the rest of my cup in one long gulp and carried it back with me into the dish pit since I'd have to wash it anyway.\n\nExcept for about a two hour span during the lunch rush my day was relatively light, and following a few more strong cups of coffee and a quick half hour power nap in the backseat of my car I felt like a brand new man. I was practically whistling on my way out the door by the time four o'clock rolled around, and like promised I drove over to Jeanie's after sending her a quick text to let her know that I was en route.\n\nShe met me at her front door in a large t-shirt that came down to the middle of her thighs, the view tantalizing because it was just long enough to where I couldn't tell if she was wearing anything underneath. \"You're late,\" she said as I walked in, closing the door behind me. She headed up the stairs to her bedroom while I followed close behind, trying to take a peek beneath her t-shirt.\n\n\"You do know that I have to actually drive over here, right? I haven't quite figured out the whole teleportation thing yet.\"\n\nJeanie didn't answer, instead only stopping me at her door and rolling her eyes. \"Wait out here for a second.\" She shut it in my face and I stood there bewildered. I assumed she was going to clean or something, but she'd never much cared what her room looked like to me before.\n\nA few seconds after I heard her stop moving around behind the door her voice loudly rang out. \"You can come in now,\" she called.\n\nNow thoroughly curious I twisted the doorknob and pushed it open, and the moment my eyes landed on her I felt my breath leave my body.\n\nShe was sitting on her bed in nothing more than a pair of lacy black boy shorts and matching camisole that revealed her midriff, one pale leg crossed over the other. Her toes glinted with electric blue nail polish, the same as the color painted on her fingernails, and she'd switched out her usual nose piercing for a stud with a blue jewel that was startling similar to the color of her eyes.\n\nShe looked fucking gorgeous, and any thoughts I'd had about allowing Dennis and Jeanie to be together were instantly wiped from my mind as I stared at her slender form in the skimpy lingerie. I spent a minute picking my jaw up off the floor, and even longer putting my eyes back into my head. \"Um, wow. What's the occasion?\"",
        "She stared up at me as though I were stupid. \"What do you think?\"\n\nIt took me a moment, but I was eventually able to rub two brain cells together long enough to understand what was going on. My heart jumped in my chest. \"Today? Now?\"\n\n\"Why not? Come here.\" She held out a hand, and I stiffly walked over until I was close enough to take it. She pulled me forward so that my legs were nearly straddling hers, and then her fingers briefly slid over the bulge in my jeans before going to my waistband.\n\n\"You look amazing,\" I breathed as she slowly pulled down my zipper, her eyes staring up into mine.\n\nShe bit her lip and averted her gaze. \"And you're wearing too much.\" She pushed my pants down my legs while I simultaneously removed my jacket and pulled my t-shirt over my head, sending it flying into a forgotten corner of her bedroom. Her fingers traced the hard lines of my stomach until they reached my chest and then came back down to palm my straining cock through my boxer briefs, drawing a soft groan from my throat.\n\nShe reached her hand in and pulled out my dick, the feel of her cool fingers against the heat of my length sending little shocks up my spine.\n\nI watched her lean forward and take a deep breath, her eyes rolling upwards and her eyelids fluttering shut with pleasure. It still sometimes weirded me out how much she seemed to enjoy my smell, taking every opportunity she could to sniff my neck or stick her nose right into my crotch, but I wasn't about to complain or ask her to stop if she liked it so much.\n\nShe pushed my cock straight up against my belly to place gentle sucking kisses up and down the shaft, taking her time with my dick rather than trying to get me off as fast as possible like she usually did, and after a minute or so of relaxed kissing and nuzzling, she gripped me by the base and stretched her lips over the head. I almost expected her to try to take me straight down to the root as she usually did and was surprised when she instead spent a long while just circling the head with her tongue.\n\nIt felt like she was making love to my dick more than sucking it, and it didn't take long before I began to feel my knees shake under her expert tongue work. When I placed my hand on her head for balance, she moaned and took me in deeper, sliding most of my cock into her warm, wet mouth.\n\n\"Shit,\" I groaned, gritting my teeth hard against the exquisite feeling. My balls were beginning to tighten with the effort of trying not to cum so soon, and right as I absolutely knew that I was going to shoot my load down her throat she slid her lips off of me with a wet 'pop.'\n\n\"Not yet,\" Jeanie teased. She used one of her hands to wipe away the drool that had escaped her lips and hoisted herself further back onto the bed. She then lifted her little butt and began to push her panties down her smooth legs, leaving me to pull them the rest of the way off and toss them over my shoulder.\n\nI unconsciously licked my lips at the sight of her hard, hairless cock. Knowing that she got so horny just from sucking me off never failed to turn me on.\n\nA slippery bottle was thrust into my field of vision and without thinking much about it I took it from her hands. Weeks of fucking around meant that I knew exactly what she wanted, and with a flick of my thumb I opened the cap and poured a small amount onto the smooth stretch of skin between her balls and her ass, allowing the slick, clear liquid to seep into her little pink hole.\n\nI used my other thumb to rub it in further, drawing soft sighs from where she reclined above me, and once I felt that she was ready I slowly slid in my middle finger. It went in much easier than I'd expected, like she'd been preparing herself long before I'd arrived.\n\nShe moaned and cooed quietly as I worked it in deeper, twisting my wrist to make sure that the lube was fully coating her insides. I added a second and smiled when her dick jumped enticingly above me and her pants grew in volume, sticky precum beading on the tip of her cock.\n\n\"Still okay?\" I asked, gently curling my fingers to rub more insistently against her prostate.\n\nShe answered me with another long mewl and shuddered. I looked up over the soft swell of her breasts to see that she'd thrown one of her thin arms over her eyes and felt my chest grow with pride knowing I gave as good as I got. Never let it be said that I was a selfish lover.\n\nThe fingers of her other hand threaded themselves into my hair, and she none too gently pulled me up towards her until we were almost face to face.\n\n\"I think I'm ready,\" she said once our eyes met.\n\nI swallowed heavily and nodded, feeling my dick that had softened while I'd been fingering her surge back to life.\n\nI could sense that she was nervous. It was hard not to notice given the way she was shaking; whether it was with anticipation or fear, I wasn't sure. I carefully positioned myself between her legs, sliding her thighs over mine, and firmly gripped the soft flesh of her hips. I nudged the head of my penis against her opening and stared down into her wide eyes.\n\n\"Are you sure?\" I asked for the final time.\n\nShe slowly nodded her head, smiling faintly, and with a deep, shuddering breath, I insistently pressed my hips forward until she began to open up around me.\n\nI'd barely slid in an inch when she whimpered and squeezed her eyes shut. \"Relax,\" I whispered, stopping to run my hands soothingly up and down her sides. I wasn't sure if it was helping any, but the crease between her eyebrows lessened by the smallest amount.\n\nI waited a little while more for her to give me the go ahead and then pressed forward again, struggling mightily to not shove myself in all at once. I wanted her to feel just as good as I did, even if that meant I'd have to grit my teeth and do long division in my head to distract my brain from thinking about how tightly she was gripping my manhood.\n\n\"You're so fucking tight,\" I groaned, finding it difficult to fit all of my dick inside. It was slow going, but as I continued to ease myself in inch by inch the pain on her face gradually began to give way to something that looked like pleasure until eventually I felt my balls touching the smooth skin of her ass as I bottomed out.\n\n\"Fuck,\" I said, panting with the exertion of holding myself back. It felt fucking amazing inside of her, her slick, warm insides sheathing my cock like it belonged there.\n\nJeanie looked up and met my gaze with a watery smile. \"I'm officially not a virgin anymore,\" she breathed. It sounded more like she was saying it to herself, something akin wonder in her voice. She raised her arms and draped them around my neck, her eyes still glassy with unshed tears. \"Now start moving.\"\n\n\"Bossy,\" I playfully grumbled back.\n\nI began to slowly saw myself in and out of her, giving her the time to adjust and loosen up for me. Though I'd had regular sex a few times with a couple of different girls, none of them could compare to anal and the way her butthole gripped my shaft; the tightness was on a completely different level.\n\nI felt her wriggle impatiently beneath me after a short while and quickly picked up my pace until the sound of our hips slapping together echoed throughout the room. She bit her lip and grunted each time I bottomed out inside of her, her small, perky breasts bouncing in her camisole with the power of my thrusts. The sight was enticing, and wanting to see her tits directly I pushed up her thin, lacy top to latch onto her right nipple with my thumb and forefinger and was immediately rewarded by an especially hard squeeze of her ass.\n\n\"Keep doing that,\" she panted, her jaw falling open with pleasure.\n\nGrinning, I reached over to pinch her other nipple and she squealed, her fingers curling in the white bedsheets beneath her.\n\nMy other hand was still slick from when I'd fingered her, so I wrapped it loosely around her hard, flopping cock. I did what I could to match the strokes of my hand with my increasingly erratic thrusts but quickly realized that it was impossible, the pleasure coursing through me far too great for me to concentrate on anything but the rhythm of my pounding hips. I was quickly reaching the point of no return, and a hazy glance at Jeanie's face showed that she was too.\n\nWith a long, high pitched whimper she came, streaks of white painting the pale skin of her chest and belly. She twisted and writhed beneath me, her eyes rolling up into her head and then closing as she shuddered around my still thrusting cock. Her orgasm made her butthole squeeze my dick even tighter, making it so that I could barely move at all, and unable to hold myself back any longer I shoved myself as deep as I could inside of her and let go.\n\nOnly belatedly did I realize that the low, tortured groan I heard echoing in the room was coming from me as I painted her insides white with my cum. Every muscle in my body seized with the effort of breeding her, and it was only through sheer force of will that I stopped myself from collapsing right on top of her when I was through.\n\nIt didn't take long for my arms to give out, the limbs turning to jelly along with the rest of me. I slid out of her abused asshole and fell over onto my side next to her, draping one of my arms over her sticky, heaving chest.\n\nFor a long while the only sounds in the room came from our combined panting, both of us too exhausted to speak, and eventually it was Jeanie who managed to catch her breath first.\n\n\"That felt awesome,\" she sighed, turning her head to look at me. She shifted around so that we were fully facing each other and her expression turned thoughtful. \"Having cum inside of me feels good. Weird, but good.\"\n\nI cocked a curious eyebrow. \"Good how?\"\n\nJeanie shrugged a shoulder. \"I dunno, just like...satisfying.\" She smiled then, wide and bright, and I felt my chest grow warm with that same fuzzy feeling from the previous night; one that I was beginning to think transcended simple infatuation.\n\nBefore I myself knew what I was doing I was leaning forward to capture her lips in a kiss, the fingers of my hand gently cupping her jaw to pull her mouth more insistently against mine. I wasn't surprised when she didn't kiss me back, and even less surprised when she turned her head to break it.\n\nThe icy glare she leveled me with could've frozen an ocean. \"I told you you can't kiss me.\"\n\nI felt my frustration towards her begin to build, and decided in that moment that I wasn't going to back down so easily this time. Not after we'd had, what seemed to be to me, pretty amazing sex. \"Why not?\"\n\nShe was silent for a long time, her face changing and shifting as she seemed to wrestle with whether or not to tell me. \"Because, if you kiss me like that, I'm not sure if...\" Jeanie paused and sighed, her expression becoming defeated. \"If I can stop myself from liking you.\"\n\nI stared down at her blankly, bewildered by her confession. I didn't know what to say, and more than that, I felt like a fucking idiot for not realizing it sooner.\n\nAll this time I'd stupidly taken her at her word, fully believing that she didn't have any feelings for me whatsoever. I'd let myself be blinded by my own selfishness, ignoring what were, in retrospect, pretty clear signs to the contrary.\n\nIt made sense that she would be protective of her heart. The last person she'd liked had completely shattered it, cruelly shunning her and making her feel as though she were less than. Of course she'd be wary of putting it out there again so soon after she'd managed to piece herself back together\n\nThe more I thought about how scared she must have felt, forcing herself to bury her feelings for the sake of our friendship, the angrier with myself I became. I should've seen it, and maybe the reason I hadn't was because I didn't want to confront what I already knew.\n\nNamely, that I was beginning to fall for her too.\n\n\"Would that be such a bad thing?\" I asked uncertainly.\n\nShe tried to give me a stern look, but I could clearly see her resolve begin to waver. \"We had a deal.\"\n\n\"Fuck the deal.\" I leaned forward and slanted my lips against hers, sliding my fingers into her curly dark hair. She didn't kiss me back at first but she didn't move away this time either, a fact that I decided to classify as progress.\n\nFinally she gave in, and her arms came up to encircle my neck. She pulled me down on top of her to deepen the kiss, our lips moving together in an instinctually perfect rhythm. The intensity of it had my head buzzing with nervous energy, and in that moment I knew I'd never again be able to be without her lips for long.\n\nIt was only when I came up for air that I noticed a tear had escaped to slide down the side of her face. I wiped it away for her with my thumb. \"Hey, what's wrong?\"\n\nShe looked up at me with worried eyes, her demeanor completely different from the Jeanie I was used to. \"I don't want to get hurt again,\" she replied in a small voice.\n\nI felt furious anger flood me all at once; anger at the asshole who'd made her feel like she wasn't worthy of love, and anger at myself for not showing her sooner that she was.\n\n\"I promise I'll do my best not to.\" I didn't know if that was the right answer or not, but the affectionate way she snuggled closer into my chest told me it might have been. I wrapped an arm around her to pull her naked form tighter against me, feeling her now softened dick rubbing against my thigh.\n\n\"So, you like me?\" I asked after a minute, unable to help myself. The idea filled me with a giddiness that I didn't expect and I struggled to keep the smug grin off of my face.\n\nJeanie rolled her eyes. \"I never said that.\"\n\n\"You basically did.\"\n\n\"Whatever. Even if\u2014if\u2014I did like you, the deal's still on. You're not getting off that easily.\" Something must've shown on my face because she gave me a warning look, even as she tried to hide her creeping smile. \"Don't.\"\n\nI feigned an innocent look. \"What? I wasn't gonna say anything.\"\n\n\"Sure you weren't, you twelve year old. How late are you staying?\" she asked.\n\n\"Kicking me out right after sex? Wow,\" I joked. I glanced at the clock on her desk and sighed. Unfortunately I had both homework and chores to do, and after the near sleepless night I'd had I was in dire need of a nap before I could start on any of it. \"I can stay for a little longer, but I should probably get home soon.\"\n\n\"Lame.\" She pouted and entangled our limbs more tightly together, holding me in such a way that made it impossible for me to extract myself without significant effort.\n\nAnd even though I had fully intended to get up and make my way home like I'd told her, between the comforting heat of her body and her soft, rhythmic breathing, I gradually felt my eyelids grow heavy. I yawned widely, blowing warm air over the top of Jeanie's head, and before I knew it I found myself drifting off to sleep.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\n\nI don't know how obvious it is that I'm not at all used to writing sex scenes, but boy was this hard! "
    ],
    "authorname": "dgirlanonymous",
    "tags": [
        "anal",
        "blowjob",
        "romance",
        "trans",
        "transsexual",
        "transgender",
        "transgirl"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/jeanies-lamp-ch-04"
}