{
    "title": "A Tale of Revenge Ch. 15",
    "pages": [
        "Here begins the last chapter. Enjoy!\n\n***\n\n Ch. 15\n\nBefore long Leonid was called away. There was still a question as to his activities in the realm that needed to be answered. He promised her he'd return when he could. In the meantime, there was still Rafia's arrival to prepare for and she had to decide what to do. \n\n\"Who is Rafia?\" she asked, when she was preparing to leave, realizing that she didn't actually know for whom she was waiting.\n\n\"He is sworn to Emera, and she believes he is the one to bring balance back to the kingdom.\" He said this in a tone that implied this was not the first time Emera had gotten ahead of herself.\n\n\"Do you think so?\" Anna inquired. If she did choose to stay, it seemed a lot of what was to come depended on this man.\n\nLeonid shrugged, \"It is possible. What I know of him is only what I've seen and my sister has told me, but he does seem to be a decent man with notions of justice and progress in his head. If Emera thinks he will save her empire, he must be in that line of thinking.\"\n\nAnna nodded, considering everything he'd said. There was much to consider and she needed time. But there were tasks that needed her attention now. \"What should I do about Orlith?\" she asked quietly. She remembered fighting him in the dungeon and leaving him with the jailor. There were parts of the fight that seemed faded, but the rest was mostly there. \n\n\"You could always leave him to rot,\" Leonid suggested. Even without looking to him, Anna could feel his anger as it ran off him. She turned to see if he were serious. \n\nShe was surprised at the pain in his face. He had been in her mind, he must have seen all of the things that had happened to her.\n\n\"Was it very terrible?\" she felt so silly asking him what had happened to her, but she couldn't bring herself to face it. Hearing it from another was a way of disconnecting from it, as if it happened to someone else. \n\nLeonid wrapped his arms around her. \"I was with you every moment of your time here, and you were brave and strong throughout. You fought him every second you could. But he is an evil, twisted soul and, yes, he was terrible to you.\"\n\nShe stayed in his arms. \"It's so odd not to really remember what happened, as if that piece of my mind is just gone.\"\n\n\"It's not gone,\" he sighed, running his hands up and down her back. The gesture was soothing to her, but she couldn't help but feel like he was trying to reassure himself as well, make sure that she was still there and intact. \"I put up a barrier but if you focus, it will fall and you will be able to recall your memories again.\"\n\n\"I can't kill him,\" she said softly into his chest.\n\n\"I will not punish you for it, no one would. If anyone deserves it, it is that man.\" Leonid's voice was harsh but his hands were still gentle. \n\nShe shook her head and drew back. \"I don't want to.\"\n\nHe gave her a sad smile. \"I'm sorry I cannot do it for you. The Five are frustrated with my circumventing their laws here and if I went around killing mortals, it would give them cause to remove me as they did Imonesh.\"\n\n\"For all-powerful beings you seem to have a lot of rules,\" she noted lightheartedly. It drew a laugh from him.\n\n\"You have no idea.\"\n\nShe gave him a small smile. \"I don't want you to kill him either.\"\n\n\"I have no soul to corrupt, no energy to be twisted as a being of the First Level.\"\n\n\"But now you can feel guilt and remorse and disgust as a human does. You do not know the toll of revenge until you have sought it out and found the lack of satisfaction as an emptiness that will not be filled.\"\n\nLeonid raised an eyebrow. \"I doubt I could find an iota of remorse for the end of that particular life.\"\n\n\"What is an iota?\" she asked when she heard the foreign sounding word, interested in changing the topic. \n\nHe smiled, seeing through her tactic. \"It means something very small. If you come with me, I'll show you the place it comes from.\" He took her chin again and placed a soft kiss on her mouth. \"Or you can wait till the end of this life and I will show you then.\"\n\nShe looked away briefly, and then back at him. \"Thank you,\" she whispered. \n\n\"For what?\" he asked.\n\n\"For letting me choose.\" \n\nHe gave her a smile. \"Well, I'd hate to incur your wrath.\"\n\nBefore Leonid left her he brought her clothing from the inn. Gravis had set it aside for her and Dev when they failed to return and Leonid pulled it through space to her. She felt better putting her traveling clothes back on, something familiar and personal. It made her ache with Dev's absence. There was still a lot to do. Leonid assured her he would be back soon, but he too had things to sort out on The First Level. To some degree Anna was a little relieved, she needed time to consider and being close to him was confusing. \n\nShe found Serena and Wreg, still in the main keep where they had spent nearly all of the time while she had been sleeping. Neither had been able to get back to the workroom with the demands of the war council now fully congregated. She masked her form to the others in the room and they quickly came to an understanding that it was time to take a small hiatus from the interminable meetings.\n\nWreg, playing a very convincing version of the king, declared he was visiting his chambers for an hour or two and would return to hear further proposals, but that he was quite unimpressed with the progress of the eastern war. He left with a flourish and Serena followed Evo and him out. She immediately sent Evo to his chambers to sit on the floor until she called for him and the three of them disappeared beneath Anna's magic to make their way back to the tower.\n\nBack in Evo's workroom, Anna was impressed with the progress Rosli and Innis had made. The fire pit in the middle of the room held at least half of the items that had once been stacked against the walls and covering the tables. Innis was sorting through scrolls and books, separating out benign magic from the very dark. Rosli had at least fifteen items floating above her head at any time, some she sent flying into the fire, others she organized neatly into different shelves. Piled on one table was all of the evidence of Evo's plans, spells, recipes, ingredients, even his journals which were sporadically kept but still damning.\n\nSerena and Wreg were also taken aback momentarily by the change in the room. Shutters were open, the fire burned with a natural orange flame. Most surprising of all was finding Rosli and Innis laughing when they arrived, a sound those walls had certainly not heard in some time.\n\nRosli turned her dancing eyes towards the three. The last few days had done wonders for her and Innis and they both looked youthful again, no longer aged so severely by their pallor and dread. Anna took solace in that, a reminder of what she had accomplished in her time in the palace. \n\n\"Where are the others?\" Serena asked, after exclaiming over their improvement of the workroom. \n\n\"Alona is upstairs, watching. Marek and Ian are on their way. We've managed to get rid of a lot the dangerous stuff though we need your help with a few of the spells we can't unravel.\" The two women moved off to a table laid out with various items, boxes, bottles and a cage full of mice. Anna looked at it once, blinked and looked back. Each piece on the table was imbued with various spells like the collars had been, even the animals. While she couldn't tell their intent, she was amazed at the complexity of it. Rosli and Serena were debating the most effective way to remove the listening spells from the mice and Anna realized she had no idea what they were saying. This level of magic, the terms and discipline involved in the understanding were far beyond her own meager education. \n\nAnna cast a glance at the piles of scrolls, books and tomes that lined the walls and covered the tables. She had much to learn if she ever took the time. \n\n\"I'm going to see Alona,\" she said to Wreg and left the workroom. She started up the stairs, which wound around the circumference of the tower's walls. She slowed her steps as she ascended, nearing the attic room where Orlith had held her. Her heart felt tight with anticipation, but the full body terror she expected did not come; the effect of being so close to the room was muted considerably by the lack of clear memories. She took a moment to steady herself, breathing deeply and reminding herself that he was far away, deep under the castle, and unable to hurt her.\n\nShe got up and went to the door, pushing it open and looking in. It was empty; Alona was out on the rampart that ran around the exterior of the tower, the entrance to which Anna ignored in favor of this little room. It seemed so innocuous at first. Some odd dusty room with wooden rafters crisscrossing overhead, the pointed roof disappearing into the shadows as it rose above her. Her eyes lingered on the rope still hanging from the lowest rafter, then to the barrel tub, still half full with water, and finally to the dark stains marking the floor. Her blood, she realized. She walked over, confused and disturbed. She knew she had bled here but she could not remember it. Facing the reality without uncovering the memory was unsettling. Anna crouched down and ran her fingers over the dry clots that had stiffened between the cracks in the floor. Her hand came away clean. \n\nShe turned her head, surveying the room again, waiting for panic or pain or something to resonate inside her. There was a thin mat on the floor by the wall and she stared at it for a long moment. She had no knowledge of that, no clear idea of what part it had played in her time here. The more she stared, the bigger the hole in her memory burned. He had taken from her the knowledge of this as well as the memory, even the emotion tied to it. She felt nothing when she looked at it. The intention behind that nothing was conspicuous\u2014something had happened to her. \n\nAnna fully understood that it was a bad idea, that it was too soon, and given the lengths that Leonid had gone to in order remove any trace of it from her consciousness, this must be much worse than anything else that had happened. But something inside her rebelled. These things had happened to her, they were her memories, and even in their absence they would continue to haunt her. She wanted to face it, needed to reclaim these pieces of herself that had been broken off from her so she could feel whole again.\n\nSo she did as Leonid had instructed, and focused on the mat, on the hole in her knowledge and held that point in her mind, until she felt the wall of his magic begin to crumble. At first it was a trickle, the feeling of lying on it, the hard floor pressing through the flimsy cloth. But quickly the memory took shape and she stayed frozen, as the reason why this particular incident had been so thoroughly erased became ever so clear. \n\nAnna's body reacted before her mind had fully acknowledged the memory. Her stomach lurched and what food was left came up. She remembered it all, his touch, the pain, the pleasure, every moment of it. She choked on her tears as they began to fall, a sob wrenching through her sore throat. Cool hands smoothed her hair back as she retched; Alona's voice was soothing, puncturing the horror the memory had left behind. \n\n\"Perhaps we should go back downstairs,\" Alona said when Anna steadied herself enough to stand. \n\nAnna nodded, though her eyes were still fixed on the dirty mattress in the corner. \"He raped me.\" She needed to say it, to get it out of her somehow and take away some of the burden by voicing it.\n\nAlona took her hand. \"It was an evil act by a weak man,\" she said and paused, sensing that Anna wasn't done. \n\nAnna's eyes blurred with unshed tears. \"I laughed at him when he was done. I prodded his pride and ripped into him as he had done to me.\" She took a deep breath. \"So he killed Dev.\"\n\nAlona grasped her chin and forced her eyes from the offending mattress to her round face. \"Do not let small men who act out of anger at some dreamt up injury make you feel that you are responsible for their behavior. He is responsible for his actions. Weak people will try to redirect the guilt for their actions. They will make you feel as if you could stop them, or that you are the reason they do it at all. It is a most vicious lie.\" Her face was kind but her words were forceful. She released Anna's chin and held her shoulders softly. \"These men will fade from our memories, their deeds will be nothing but shadows in the past.\" Anna could see the pain she felt, her own imprisonment and the acts she must have participated in haunting her lovely eyes. \n\nAnna licked her lips, tears slipping down her cheeks before she brushed them away. \"It is possible to know this will pass without truly believing it. Is it not?\"\n\nAlona gave a halfhearted chuckle at that, \"We are all doing the same thing, Anna. We will all overcome these things with time. For now, I have news of the encroaching army, and a proposal for the others. Let's not tarry too long.\"\n\nAnna let the older woman usher her downstairs. The others had all gathered again, and though they were calmer, the room buzzed with undirected energy. The real questions came now\u2014what were they going to do?\n\nThey all sat around one table, Anna perched herself on a neighboring one, still feeling numb from the memory she'd uncovered. The others spoke briefly about what they had seen and done, most of it amounting to the small freedoms they had just been able to appreciate. Anna smiled at Ian's story at choosing his own food when they ended up in the kitchens. The simple task of loading his own plate was suddenly wonderful and worthy of all their smiles and laughter.\n\nAlona interrupted them shortly though and told them of what she'd seen. Rafia's army, which consisted of at least one third of the standing army in the east, was at least a week away, but the general himself was less than a day from the capital with a sizable fighting force. Rafia, it seemed, had been forewarned and made an impressively coordinated exit from the front lines to advance on the capital. \n\nSo what were they to do? Alona could only track his movements from this great a distance and none of them had heard anything in particular about him beyond being the leader of the eastern army. His intentions for the capital seemed clear: deposing the king would bring an end to the eastern war, which had always been an intractable situation. \n\n\"We have a choice here,\" Alona said. \"The wards on the castle grounds can be either bolstered to prevent him from entering, or they can disappear and no one would be the wiser. Even those members of the court who do know that Evo put them in place don't fully understand their nature, and Rafia as well as most others probably don't know about them at all. So, as I see it, we can dissolve the wards and disappear from the castle grounds, and allow the political theater to play out as it will. Or we can stay, use the wards to keep Rafia out and negotiate the palace for our agenda.\"\n\n\"And what agenda is that?\" Wreg asked.\n\nAlona almost began to speak before she stopped, casting an eye on Anna before continuing. \"I'm not sure. I have no political experience and I don't know how these things work.\"\n\n\"Well strategically it doesn't work. You offer only the castle in return for whatever demands you may make, one which could be surrounded and laid siege to until we give up. And who are we to demand anything? Our position seems rather tenuous for bargaining.\" Wreg said a bit condescendingly, though he was not wrong.\n\n\"I thought some present might appreciate the option,\" Alona grumbled. \n\nThere was a brief pause before Anna realized she was talking about her. \"Oh,\" she said, startled. \"I'm not...\" she stopped. She was the rightful ruler of this kingdom. Somehow talking about it with Leonid had been vague but here, with the rest of them, the idea seemed too real and very absurd. There was no way she was equipped to take on that role. She didn't even know if she wanted it. The room started to feel a bit small.\n\nSerena seemed to understand her sudden loss of words. \"Perhaps, Anna, you'd like to think about this some.\"\n\n\"Why is it up to Anna?\" Rosli asked, not unkindly but certainly confused. \n\nSerena, Marek and Alona looked slightly uncomfortable. The others were somewhere between confusion and annoyance. But none of the others would say what was her secret to tell.\n\n\"I cannot choose for you all. What Alona means is that I may have a political agenda, or at least fear being used in someone else's. I am,\" she paused at the strangeness of what she was about it say, \"apparently descended from royalty.\"\n\nThe room was very quiet. Anna fidgeted. She didn't know how to feel about her ancestry, so she wasn't sure how the others would react. She had no desire to own the mantle of queen, to rule a kingdom and have these people as her subjects. It was too strange an idea for a girl who had seen so little of the world but a few months back and had expected even less.\n\n\"You are a descendant of the banished heiress?\" Wreg asked quietly. Anna nodded. \n\n\"I didn't know until I came here. I set out only to avenge the deaths of my family and my village. I didn't know why the soldiers had come until the king recognized me.\" Her eyes shifted to the platform she had been chained on when he had first realized who she was. That memory was more or less clear in her mind. She looked back at the others and found that they were avoiding her gaze. If she didn't know better, she would think they looked embarrassed. \"What?\"\n\nSerena looked at her meaningfully. \"Evo was the one who set about looking to find your family.\" Anna nodded, she knew that already. She frowned and looked back at the others who were shifting uncomfortably. \"And then he prepared the soldiers that he and the king chose from the prisons, encouraging their brutality with magic.\"\n\nRecognition dawned on her. \"He used you all to do it.\" Her tone held no question and no accusation but only Alona and Serena would meet her eye.\n\n\"He did,\" Alona said, her voice sad. \"I cast the spell to view the kingdom and the others lent their power so that I might be able to see far enough. As for the rest, Evo drew on us to influence the others. We are sorry for the role we played in your village's destruction.\" So that was how Alona knew she was the queen's great granddaughter, she had seen her during Evo's search.\n\nAnna gaped at her. \"Evo used you to cast the spell.\" It was not a question but Alona nodded. \"Were you not just telling me of weak men who would try to make others feel the guilt for their own crimes? How on earth can you expect me to accept an apology for something that Evo did?\" \n\nRosli shook her head. \"If it weren't for our power he never would have been able to find your village, you would be safe.\"\n\n\"And you all would still be collared.\" Anna stated, suddenly very perturbed with this line of thinking. \"I accept no apology and if I could forbid you from giving one I would. This is not any of your doing, just as it is not my family's fault that the lives of the people in our village were lost, or my fault for...\" she stopped. She knew it to be true, but it was still hard to say because she did not truly believe it herself. \"It is not my fault for what happened to my friend.\" \n\nShe slid off the table and wandered over to the window, looking out on the sprawling city below her. Once this was the center of a great empire, a monarchy that built up its citizens instead of using them however it saw fit. Perhaps she was na\u00efve, her perfect version of the past was more likely myth and legend, but it did give them something to strive for. \n\nBut she? A queen? The idea was ridiculous. She was uneducated, a peasant girl who had stumbled into magic. There was no basis for her to rule. She was better off leaving all that to the people who knew about these things. What did she know about courts and politics and the rule of law? She could go do something else now that she was done with her mission. Though the thought once again left her gripped with panic. There seemed to be a big blank in her mind when she tried to think of anything beyond the walls of the palace. Out there was no purpose, nothing to strive for. Without something to do, she felt the uncertainty was too overwhelming. ",
        "She could go with Leonid, flee from all of this, from the complications and the memories. And yet somehow that seemed so distant a choice. Without him there she felt her connection to her home, to other people. Disappearing into the sky seemed too fantastical to imagine. Beyond that, she knew he was right, that she needed time to heal, time to face her past. If uncovering the memory upstairs had taught her anything, it was that she could survive it. She was strong enough. They would have time together, eternity even, and he had promised not to leave her.\n\nShe looked back at the others. Maybe Serena could teach her how to use magic like she did. It seemed like she'd already started with the others. And what would become of them? No one had homes left to go to. Evo had seen to that with all of them. It seemed unlikely that she would be able to make any of this work, but perhaps it was worth a try, at the very least to prevent what had happened to all of them from happening to anyone else. \n\nSerena approached her, \"I know that this is a lot to comprehend all at once, if you choose this path. But I want you to know that I will stay if that is what you ultimately decide.\"\n\n\"Why would you do that?\" Anna asked, genuinely surprised. \"I am no leader. I'm certainly not a queen. How would I ever manage to take that on?\"\n\nThe older woman clasped Anna's arms, her smile wide despite everything. \"You are capable of great things, Anna. We've seen what you have managed in just a few short days. You may not have been raised to take on this challenge but you certainly have it in you. I, for one, would be happy to be a part of that.\"\n\nAnna shook her head. \"That is just magic and dumb luck. At any point along this journey, I could have made a different choice and ended up in a ditch or enslaved to these men. I almost did just that in this very room. You watched me lose control when Dev died.\" She felt uneasy with the woman's admiration. It felt undeserved, just as her accomplishments based in magic felt like she had cheated and was unworthy of the credit for their outcomes.\n\n\"At any point along your journey you could have chosen a different path, an easier one, filled with riches and power. We have all seen the extent of your magic and yet you have barely tapped into the potential for self-gain. You yourself, not your magic, not your mistakes, have lead you here. Your choices have been based in justice for your family and for us.\" Her smile widened and a tear joined it on her cheek. \"You are good Anna, in your soul, and that is why I will stand by you. I believe that you will seek out the same for your people with the same selflessness that brought you back to free us. I know you doubt yourself, which is good because you have a lot to learn. But you should not doubt that you, Anna\u2014not your power, not your bloodline\u2014 are capable of much more than you know.\"\n\nAnna looked away, uncomfortable with the praise, \"I didn't know you were one for speeches, Serena.\"\n\nThe older woman laughed and pulled her into a hug that Anna took a moment to respond to. \"I have dreamt of you for a decade, Anna. And having finally met you, I know my dreams were not leading me astray.\" She released her hold on Anna and stepped back. \n\nThe others stood from their places and Wreg was the first to bow, bending a knee and lowering his head. The others followed, each one accepting her as their queen. Anna's face flushed a deep red. Whatever she had expected, this was not it. When Serena let go of her hand to do the same, Anna stopped her, unable to accept her taking a knee for her. \"Thank you all, but please get up.\" As they complied, Anna tried to still the uncomfortable feeling in her chest at the tangible reality of owning her royal heritage. \"That is incredibly unsettling. Please never do it again,\" she muttered, drawing a laugh from the others.\n\n\"We need to plan for Rafia's arrival,\" Wreg said taking a seat. Anna was fast realizing that he was very well capable and liked to take things in hand, not that she minded given the situation. She found herself hoping he might stay as well. \"The council doesn't have any idea yet that Rafia is on the move, but they no doubt will hear of it shortly, though with too little time to mount any kind of defense. The king's body is concealed in his bed chambers and I think the only time to reveal it would be during the coup when it can be written off to suicide in the face of defeat.\" The others took their seats again. This time Anna joined them, sitting close to Serena, as if she could access the other woman's poise just by sheer proximity.\n\nWreg continued, \"Perhaps we need to position ourselves between the chaos that will be behind these walls, and Rafia's force. Waiting for him to take the palace will leave us with limited options. If we appear to him as allies in his takeover, then we are in a much better situation when the dust settles.\"\n\n\"I will go meet him,\" Anna said. Only realizing afterwards that she had put herself out in front of them again, determined not to abandon them and accepting the responsibility that went with that position. She was scared though, of what that meant, what she would have to do.\n\nSerena squeezed her hand and gave her a knowing smile. \"Not alone.\" \n\n*\n\nSerena, Wreg and Anna entered the temple of all gods as the bells signaled midnight around them. The city was dark and eerily still. The priests and priestesses that normally occupied the temples all day and night were not to be found. The population had been warned of an attack on the capital before the war council had received word. Rafia had given up the element of surprise to protect innocents. But it mattered very little strategically, the council still thought he was days away. \n\nThe stillness in the dark made their intruding footsteps echo off the multitude of statues that lined the walls above them. Anna silenced the noise from any prying ears. She reached out with her sight to be sure that the building was empty and nodded at Serena and Wreg, indicating they were alone. The trio settled down to wait.\n\nAnna took the time in the dark to contemplate her choices. She had found choosing to stay something of a relief, the immensity of the universe Leonid had offered her was too vast and she could not face it yet. But choosing to be queen, that in and of itself was immense, on its own mortal level. Could she really do this?\n\nWithout magic, Anna never would have heard the approaching pair that made their way into the temple from the far side. They had abandoned their horses far enough away so that no one might notice their surreptitious approach. Anna stiffened, looking at the two at her back, assured that they too were aware of the general's approach. \n\nTwo hooded figures appeared within the inner sanctuary and stilled in the great archway that was the only source of light. Anna saw them move to strike a torch, confident the flame would not be seen beyond the windowless room. \n\n\"No lights,\" she said softly, letting the echoes of her voice carry through the round room. The figures stilled. She stepped towards the center of the sanctuary where they could make out her cloaked form in the wisps of moonlight that came from behind them. The taller man approached, his gait confident and steps silent. \n\n\"We are here in response to your message. I am General Rafia, and this is Commander Lavis, we have come to speak terms.\" His voice was steady and deep. With her magic Anna could see his face despite the shadows and judged him a fair specimen of the Far East, given his dark skin and great height. The hair on both sides of his head was shaved in the traditions of the jungle warriors, the crown covered in thick braids that marched back from his forehead to hang behind his shoulders.\n\n\"We are here to offer you the palace without hindrance from the wards your king had placed on the grounds with magic,\" Anna said, watching his face carefully for signs of deceit. \n\nA twitch of his jaw and a flash of frustration he no doubt thought she wouldn't see came across his features. He had suspected, but had no plan for it. \"And what is it you ask in return?\"\n\nAnna assessed the man before her. \"We would know your intentions for the occupants therein and the designs you have on the throne.\"\n\n\"I offer no threat to those who live inside the castle walls, but only for those who would continue to serve this king. His reign must end. The wars he has waged and the methods he has employed are excessive and unfit for this rule and it is destroying our home in this kingdom. We will see him deposed and executed, the main members of his cabinet as well. The prisons must be emptied of his political rivals and corrupt judges weeded out. We seek the restoration of the kingdom.\" His face was alive and animated in the dark, determination in every expression. Anna didn't sense that he was playing at it either.\n\n\"And you will do this by means of a military takeover and placing yourself as a ruler? How can we be assured that these are not simply the tales of a would-be tyrant who knows the art of political rhetoric?\" She saw the insult land but Rafia seemed thoughtful rather than perturbed when he responded.\n\n\"I cannot prove myself incapable of the future you suggest. I have only my past to recommend my actions, that I have not sought this throne for myself but only when the situation in this land began to teeter on the edge of great disaster. It is my home that has been under attack these many months and I cannot see it continue. The war in the East will ruin us if we do not end it, and the only way to destroy the sickness of the kingdom is to root out its cause. Our monarch is a disease all of us are suffering from.\" Anna turned and looked at Serena and Wreg who were just beyond her in the dark. They nodded to her, confirming her assessment that the man spoke truthfully. Wreg, in addition to his fire magic, had a knack for smelling a lie. \n\nAt her signal Wreg lit the oil lamps that lined the wall all at once, bathing the room in warm light. The commander at the gate jumped. Rafia betrayed his surprise only with a widening of his eyes as he looked from Anna to the pair at her back. Anna pushed back the hood of her heavy cloak, so he might see her face clearly when she spoke.\n\n\"We will lower the spell on the palace and allow you and your men to enter. If you have lied, and there is killing of innocents or other criminal acts, we will be forced to act in a less delicate manner.\" Anna spoke softly but fixed the man's warm brown eyes with her darker ones. \n\nHe nodded, \"You will not have to. My men know they fight for the people.\"\n\nAnna gave him a sharp look. \"I find your words well-rehearsed. Are you an actor as well as a general?\" She was still suspicious of him; his words seemed too good. \n\nHe gave her a smile. \"I would make a poor player, my thoughts are often too dour for entertainment.\" He looked at her uneasily, a look she was familiar with since she gained her magic. \"How is it that magic became so commonplace in the castle wall that there are three of you here? I was aware the king had employed but one sorcerer who many rumored to be a fraud.\"\n\nAnna looked over her shoulder at Serena who lowered her chin in consent. \"There are more of us. And it is that sorcerer, with the consent of his king, who brought us all here in chains. We have turned the tables on him and he will be dealt with.\"\n\nRafia's face grew dark with anger at the mention of their enslavement. \"You do not have to deal with that man if you do not wish. He is an offence to this kingdom and will be put to death by the government once installed.\"\n\n\"No,\" Serena said gently from over Anna's shoulder. \"This is a matter we must deal with sooner than you can be prevailed upon to perform it.\"\n\nAnna turned to her, surprised the woman had not accepted the offer and saved herself the pain of taking another's life. \"You needn't take this on yourself. There is no reason for you to blacken your soul by killing him if it can be done through righteous channels.\" \n\nSerena gave her a sad smile. \"This is not a matter that can wait. Many of us have been enslaved to him for years and we will not risk it ever happening to ourselves or someone else again. I will not abdicate this task to anyone else.\"\n\nWreg agreed, \"This is for us to see through.\" He looked at Rafia, \"I'm sure you can honor that.\"\n\nRafia's gaze had not left Serena's face since she had finished speaking, but he nodded to Wreg's words, his braids swaying with the motion. \"I understand.\" \n\nAnna took a deep breath. This was not something she relished doing but it was necessary. She turned back to Rafia. \"There is one more thing.\"\n\n\"Just one?\" he said, a smile touched his eyes though not his mouth.\n\nHer own lips twitched slightly. \"For now.\" She took a breath. \"I made my way here in order to seek justice for those who destroyed my village, only to discover that they had acted on behalf of their king.\" Rafia's face lost its smile. \"The reason the king had for sending his men to commit this barbarism was an attempt to rid this world of my family's line,\" she paused, \"the Royal line.\"\n\nRealization dawned on Rafia, \"The exiled princess?\"\n\nShe nodded. \"My great grandmother. Though I was not aware of the story or my lineage until a few days ago, I am ready to accept the mantle of queen in this land.\" She paused, seeing that Rafia was assessing her in the same way she had him in the dark during her questioning. She wondered if he could see how terrified she was, how unsure and unready she felt to take this on. \"I seek justice and will use this position to ensure it.\" \n\nAfter a moment of his eyes searching her own, she watched as he considered her story and finally came to his conclusion. He took to his knee and bowed his head, \"Your highness,\" he murmured, accepting her as his queen. His captain did the same behind him.\n\n\"For the love of\u2014\" Anna started, her face instantly hot. \"Please get up.\" When they complied, she turned her back muttering under her breath about the futility of bowing and how idiotic the custom was, shooting Serena and Wreg glares as they grinned at her. \"First royal decree is going to be a ban on bowing,\" she said as she stomped past them. Serena laughed and went to follow her with Wreg. \n\n\"Tomorrow we strike the palace,\" Rafia called after her.\n\n\"The barriers will offer no resistance,\" Wreg said as they left together. \n\nWhen the three of them returned to the palace Serena and Wreg, with Anna's help, changed the ebb and flow of the net that covered the palace walls. When the spells against invasions were dismantled or disabled to their satisfaction, they returned to the tower. The sound of violence sent them scrambling into the workroom only to find that Innis was systematically destroying a heavy table inlaid with different types of wood, inserting his power into the wood and exploding it outwards in bursts of dust and splinters.\n\nAnna leapt towards the boy who was sobbing as he worked his way through the wood, but Serena caught her before she could stop him and shook her head. \n\n\"That was the first thing Evo made him do when he collared him over a year ago, take apart the table and put it back together over and over again until Innis stopped fighting. The table was made by his father and was ostensibly the excuse Evo made for visiting the man and kidnapping his son.\" Serena looked at the boy as he pulverized the remnants of the table until they were dust beneath his feet. \"Evo's men killed his parents when they left, so that no one would come looking for him and Evo used the table to taunt Innis whenever the boy got too resistant.\" Tears gathered in her green eyes. \"We will all need to free ourselves somehow. Allow him to go about it his own way.\"\n\nAnna nodded, understanding, but she wished she could offer Innis some comfort all the same. \n\n\"Why is he still out there Serena?\" Innis screamed, his voice hoarse from crying. \"Why is he still out there drinking wine and laughing with the council? All the while I'm here cleaning his charts and destroying all his evil spells.\" He took a gasping breath through his tears. \"How can you just let him walk around as if everything is fine?\" Serena went to the boy and wrapped her arms around him, sinking to the floor as he collapsed into tears in her embrace. \n\nShe whispered soothing things in his ear as she rocked him, his cries gradually subsiding. Rosli approached Anna and Wreg, her eyes red from crying. \"He's going to be okay. He just started talking about going home and he realized there's nowhere to go.\" She said this like someone who understood more than most.\n\n\"I'm sorry for what Evo did to you all,\" Anna said quietly. \"He will not be a problem for much longer.\"\n\n\"No, he won't,\" Serena said from her place on the floor. \"Given the timeline of Rafia's coup, I think now is as good a time as any.\" Anna watched with her sight as Serena tugged on the spell that connected her to Evo's collar. \"The wartime council is meeting in the main keep. Evo will not be missed until it is too late.\"\n\nSerena gathered herself, her face grim and determined. She dusted the wood fragments from her dress and walked towards the door, chin high and eyes set. The others moved to let her pass, all of them various shades of grateful and uneasy. Marek seemed the most hesitant. His nature as a healer made him wary of choices like this one but he knew it was necessary nonetheless.\n\n\"Look to the south if you wish to see it done,\" Serena said, her voice low but hardly soft. And she was gone.\n\nMarek seated himself quickly, denying any desire to witness the act by pointedly ignoring all of the tower's windows. Rosli went to take Innis's hand and held it. Alona and Ian both went to the southern window, their faces set.\n\nAnna hesitated, part of her wanted to be with them during this moment, but she still felt like an intruder. She had not truly been under his spell, and while she had suffered it had been a matter of days, not years. She didn't know if she had a right to be among them, to seek the same comfort in his death that they would. Anna looked around and considered her position. She had just accepted the responsibility of queen and she was already pulling away from those she would rule. She saw Alona and Ian tense at what they saw and she went to them.\n\nFar below she could see Serena standing in the southern yard, waiting. Her sight showed her the magical bond that connected her to Evo, and she saw him fighting it to no avail. It served him right. Ian looked nervous, and fidgeted next to her. Alona was intent on the scene below.\n\nAnna looked up at the man next to her. \"It's alright, Ian. He can't fight her off. He won't get away.\" \n\nIan gave her a half-hearted smile. \"It's not that,\" he said softly. He looked back as Evo appeared at the far end of the yard and made his way towards Serena. \"It's difficult to watch what is happening to him and not feel it as well. I want him gone but the fear, the pain of the spell, it's hard to wish it on anyone.\"\n\nAnna considered him. \"Did the spell hurt you?\" Her experience felt more distant from theirs with every passing moment. \n\nIan nodded, looking back as Serena and Evo mounted the walkway up to the southern wall. That part of the fortifications had been built into the walls of the cliffs above the river, and overlooked the steep fall down towards the water. It was no wonder she'd chosen it.\n\n\"It's not pain like you'd imagine it,\" he spoke softly, still looking out, though his eyes were unfocused. \"It's almost the opposite of what you experience as a person inhabiting your own skin. It takes away sensations, control, everything that makes you who you are except for your mind. It leaves you stranded in a sea of numbness, of nothing. After sometime that begins to hurt, as if your mind could create sensations where there weren't any.\"",
        "Serena and Evo had reached the outer parapet and were making their way up to one of the watchtowers. Serena was walking ahead, Evo exactly five steps behind her. While pretending to be chained these last few days, Serena had followed him exactly at that distance. \n\nAnna couldn't muster up the same sense of empathy as Ian seemed to be. \"He's only experienced it for a few days. His fate should be a relief compared to what he did to you.\"\n\nIan shook his head. \"It is. And I need to see it done. But when I see him I know what he's feeling, how his body won't respond, his mind panics because of the loss of control, the terror that seizes him as his outward appearance so badly clashes with what he is feeling.\" Ian sighed. \"And I was never walking to my death. My pain was chronic and unyielding. But what he feels, that is sharp and powerful beyond what I know.\"\n\nAnna looked over at Ian. He was tall and pale, likely from the same general region as Marek though his accent was more common. He was standing bent over, almost as though he'd forgotten how to uncurl himself from a protective position. His arms were folded tightly across his chest and she saw a shudder go through him. Anna turned to the window again to see Serena and Evo appeared on the flat roof of the watchtower. The wind whipped their clothing and they stood there, Evo slightly behind her. Anna got the sense they were speaking but felt no inclination to intrude and listen.\n\n\"You are too good. You should not be considering his position. His pain is nothing compared to what he's done to others.\"\n\nIan gave her a weak smile. \"Don't think I would consider it if I had a choice. But he had me collared for going on four years now and the feeling of owning my skin is as alien as the loss was initially. I can't help it. None of us can.\" His eyes ran over the pair on the tower. \"And Serena most of all. She made these spells, and she could feel us through them the entire time. She's been carrying our pain and her own for ten years. She will actually feel what his fear is doing to his body, more than my imagination ever could.\"\n\nAnna felt her heart clench. Serena released Evo's body from her command and the man crumpled to his knees, appearing to be begging her. Anna immediately felt disgusted as the man crouched low, bowing to the woman before him. He deserved no pity and yet his magic, even once destroyed, was still sucking it out of his victims. She looked to Serena, and saw the woman look up at the sky and then back at the man at her feet. She kicked him and seemed to shout at him, but they were too far to hear. She tried to push him to his feet and he refused, still trying to prostrate himself before her.\n\nSerena was very still for a long moment. It was hard to tell if she was speaking or not. Finally Evo stood, of his own accord Anna wasn't sure. There was a flash of metal and he stumbled back, grasping at something sticking out of his chest. And Serena took his arm and led him backwards two paces to the wall as he stumbled. And then she let go and he was simply gone, disappeared from sight in an instant, and Serena stood alone on the tower. \n\nAlona had been silent the entire time, never indicating whether she was listening or not to the conversation the other two were having. But when his body disappeared she broke down, great sobs erupted from her. Ian was down on his knee, gathering her in a tight embrace as his own tears fell. \n\n\"It is done?\" Marek said from the other side of the room.\n\nAnna nodded. Wreg had been seated on a bench nearby, and with her confirmation he lay back on the wood and closed his eyes. Marek came over and put his hand on Alona's back as he looked out on the lone woman standing above the cliffs. Innis and Rosli were speaking in hushed voices, huddled near the fire like the children they were. Wreg had fallen asleep; his face was peaceful. \n\nAnna suddenly needed to be alone. She did not feel the great release of his death, because her tormentor was not gone, there was not real relief for her in this room. She disappeared silently and ascended the stairs again. She needed to purge herself as well as she could, and for now the site of her torment remained untouched above her. \n\nThe attic room was the same it had been the day before. Inspired by the boy downstairs, she flung up her hands and a great wave of power shook the walls. The ropes disintegrated, the metal of the tub melted and the wooden parts rotted until they too turned to dust, the water wafting away as steam, the mattress came apart and each thread of it was unwound and dispersed. All implements of torture crumbled to ash. Anna's power pushed the tiny pieces of each offending piece from the windows, the dust cloud dispersing in the windy night air. \n\nAnd then the room was just a room.\n\nAnna felt Leonid's hand on her back as he came up behind her, pulling her body to lean on his as they stood side by side. \n\n\"Are you alright?\" he said, his voice quiet in the suddenly still room.\n\n\"I will be,\" she said, leaning further into him placing her head on his shoulder, accepting the offer of support. They stood in silence for a long moment. \"Serena killed Evo.\"\n\n\"I know.\"\n\n\"She could feel everyone through the collars, even him. She felt what the others felt for years. She's stronger than I will ever be.\" Anna had seen her lead, her compassion and caring. She couldn't help but feel like Serena was the queen they should have.\n\n\"Serena did what she had to do to survive, and she took care of those who were within her sphere of influence. You did the same in your own way, you risked everything for the chance for justice for your family.\" His hand smoothed up her arm in a comforting gesture. \n\n\"You did that for me. You were with me even though you didn't have to be.\" He stiffened and his hand stopped moving. Anna turned and brought her arms around his waist, burying her head in his chest. \"I can't manage my own pain, how can I possibly take on the weight of others?\"\n\nHe hugged her closer, one hand in her hair. \"You don't have to, Anna. This is your time to heal.\" \n\n\"I told Rafia who I was.\" She took a deep breath. \"I told him I would be queen.\" He was quiet after that. For a long moment they stayed that way, clasped together. Anna felt uneasy, like she had pulled away from him by choosing to stay. She didn't want it to be true, she couldn't bear the thought of losing him or driving a wedge between them. \n\nLeonid finally spoke, \"I wish I could say I was surprised,\" he tilted her head so she looked up at him, his face very close to hers, \"but I had a feeling you were heading in that direction.\" He kissed her before she could respond. His lips were possessive and determined. She softened to it, her hands resting on his arms. She needed this, to be reassured. But more she wanted to know that with him she would not have to take on another's pain, that he would care for her, take control and give her respite from all the responsibility that awaited her in the realm of men.\n\n\"I'm sorry to disappoint you,\" she said when he released her mouth. He raised a questioning eyebrow and she continued, \"I know you love to be surprised.\" He chuckled and kissed her again, making her head swim with heady pleasure. Yes, she thought, wanting to beg him for more even as he claimed her lips and stole her breath. \n\n\"I can't say I'm not disappointed you didn't chose to come with me and start spending the rest of eternity in my bed,\" his lips found the sensitive skin behind her ear, causing her to gasp, \"or on my table,\" he kissed lower along the column of her neck making her knees weak with desire, \"and a particular divan I've been hoping to introduce you to.\" Heat pooled in her lower belly, making her ache to be touched. His mouth returned to the skin at her shoulder, his teeth gentle and his tongue promising. She pushed herself into him, her desire growing hot. \n\n\"I would never deny you anything,\" she said between the small sounds he elicited as his hands began to roam her body. \n\nShe found herself pressed against the cold wall. \"Of course not,\" his voice was low and nearly growling. \"You're mine, Anna, no matter what happens here in your realm, your alliances or political marriages, you are mine and I will not let you forget it.\" His eyes burned into hers and she saw his fierce possessiveness. \n\nShe raised her hand to his cheek. \"Always,\" she said in a whisper. He needed it as badly as she did, and she was more than willing to give it.\n\n\"Good girl,\" he ground out and his lips descended once more on hers, sweeping her up in a kiss that made her weak with desire. He hoisted her up, her legs wrapping around his waist and he backed them into the wall once more. Anna hummed into his mouth as one hand came up her side to cup her breast despite the press of their bodies. She pressed into his touch, encouraging it while she clung to his shoulders. \n\nThere was something precarious about the way he held her as if she weighed nothing. But it was enthralling as well, knowing she couldn't fall but still feeling perched on the edge. His mouth traveled down, drawing more sounds from her, her shirt parting to give him access to her chest until his lips closed around an aching nipple. She couldn't help the small cry that voiced her arousal. Once again the feeling of being with him consumed her, as if for the length of their time together there was nothing beyond that interaction, no responsibilities or distractions, no kingdom hanging in the balance.\n\nHe put her legs down long enough to banish her pants and shirt then he scooped her up again, trapping her body between the wall and his chest. Her bare back met the cool stone and she gasped, but he pressed on. He ran his hand up her side, the other supporting her bottom, stroking her tense legs as she hugged his hips to her core. His mouth reclaimed hers as he palmed her breast. \n\nLeonid's tongue ran against hers and she returned it with all the hunger she felt for him. Anna was drunk on his touch. Every time his fingers slid across her skin, stroking her most sensitive parts until she could barely think, she wanted more, desperate for it. But while their last coupling had been about healing, this was Leonid's claiming of her once again. He was aggressive where he'd once been soft, overpowering instead of coaxing. She reveled in it.\n\nShe squirmed against him, trying to press herself against his erection, to give back at least a bit of what she was getting. In response Leonid trapped her hips against the wall and proceeded to grind against her and pull away despite her legs' grip on him and her attempts to pull him harder against her core. \"Please, Leonid,\" she gasped when he ran his hard length against her slit, hard enough to make her weak but not nearly enough pressure for what she wanted. \n\n\"Say it, Anna,\" he growled as he continued his maddening touch.\n\nShe pulled her lust back, understanding the vulnerability behind the demand despite the cloudiness of her thoughts. Her eyes met his and the connection was captivating, his eyes pierced hers and she in turn refused to look away from his intensity. \"I'm yours, Leonid.\"\n\nIt sounded so odd, speaking out loud what they both knew, and yet she could feel the uncertainty in her voice, and in his question. Her voice caught as his hardness pressed against her sending a sharp wave through her body. Why was she his? Because she had sold herself to him? Because he had brought her pleasure? He stilled against her, their bodies tightly fitted together. Her arousal demanded motion but she silenced the need for a moment, gazing back into his face as he searched hers for guile. She looked into his eyes, placing her hand on his chest where she knew he felt the same pull to her that she had first recognized weeks ago in the copse that night. \"I want to be yours.\"\n\nAnd then his mouth found hers, sweeping her up again in a haze of lust. He moaned into her mouth, his own clothes meeting hers on the floor. His powerful body held her up, surrounded her, his muscled back rippled under her fingers, her legs twined around his waist, holding on to him and pulling him in all at once. He wasted no time, moving her up and settling her opening over his length. With a single thrust he buried himself half way inside her. Her mouth fell from his with a ragged cry, the burn delicious as he drew back and repeated the process. \n\nHer nails dug into his flesh as he began to pound into her, the wall digging into her back, his hands strong as they held her up and moved her to meet him, bringing him ever deeper inside her. She tilted her head back, giving him access to her neck, which he lavished with the same intensity as he did the rest of her. \n\nAnna pushed her chest towards him, begging him to attend to the aching buds there. His head dipped, mouth closing over the pert nipple, his teeth grazing it. When he bit down, the spiraling pain fanned the flames inside her to an almost unbearable heat. Her fingers sank into his hair again, feeling the alien way it flowed over her fingers as if made of flexible glass. She pulled herself into him further as he kept his pace, driving her closer and closer to her peak. \n\n\"Leonid,\" she gasped, barely able to form words. He released her breast, facing her as she looked back at him, eye to eye as he held her up. He slowed, drawing desperate sounds from the back of her throat. The drag of his flesh against her still sending shivers of excitement across her skin, the pressure rising ever higher inside her, keeping her climax just out of reach. She needed something from him, some sort of release. He grinned wickedly at her as she looked to him, unable to speak her plea. \n\n\"Yes, Anna,\" he answered her, \"come for me.\" The words were like a match thrown on a bed of dry kindling. The pressure burst inside her, pleasure shot out into her body, hurtling from her core to her extremities, curling up her spine and bursting in her mind as she came, making her feel as if she were miles above her own body. But it was still so brutally tangible, the swell of his cock inside her, the hard wall against her back, the scrapes of the stone to her skin, his lips brushing her neck. \n\nShe felt him increase his speed, his ragged breath matching hers. It was such a rush knowing he felt the same, that she could ignite his passion as much as he did hers. She groaned his name and felt him shudder beneath her fingers, furthering her own sense of power. Anna sank her fingers into his hair and brought her mouth to his as he pounded her, chasing his climax as he felt her grip him again, his pace pushing her to yet another peak. \n\nHer lips fell from his, her forehead resting against his own as she moaned enticingly, her fingers pulled his hair as she became mindless once more. It was too much, his name on her lips, the grip of her channel, the way her body molded to his. He came with her this time, their lips meeting desperately as they both shuddered in mutual ecstasy. \n\nShe relaxed her body into his, allowing him to hold her up as she curled up into his chest. As they came down from their high, he slipped out of her making them both groan. She nuzzled into his neck making her chuckle even as she kissed the skin and made his breath catch. She smiled. \"Seems you might have sensitive places I've yet to discover.\"\n\n\"All in good time, Anna.\" Even after her climax she still felt a shiver when he said her name like that. He kissed her again, sweetly, his lips pressing against hers with the promise of much more to come. The fears of a divide between them faded to nothing. She was his, and he would keep her.\n\nHer unsteady feet met the floor and her raw back scraped the stones making her flinch away from the wall. Leonid saw her grimace and lifted his hand to her back, his magic rumbling beneath his skin but she caught his wrist.\n\n\"If you don't mind,\" she said with a smile.\n\nHe raised an eyebrow. \"You'd like to keep your bruises?\"\n\nShe nodded, her smile widening. He returned it and leaned down to kiss her. She delighted in the soft feeling of his lips contrasting with the sharp ache in her back. There was something satisfying about the marks left over, testament to their passion that she could carry with her. But the cool air trickled in from the windows and her sweat-damp skin quickly turned cold. Anticipating her desires, he reached for her clothes and settled them on her body as his own moved independently to his. He reached behind her, over her shoulders, and pulled a cloak from the air onto her shoulders.\n\nShe jumped a little in surprise, the heavy material settled around her like a warm blanket. \"What's this?\" she asked, her fingers running over the rich fabric.\n\n\"I know how you like to be warm,\" he said with her favorite smirk on his lips. \n\n\"You are too kind,\" she said and placed a small kiss on his cheek in thanks. \"I should get back to the others in the workroom. Serena dealing with Evo has them a little unsteady, and I think they could use a little support.\" \n\n\"I'm glad to see you've already adopted your flock,\" he said, wrapping his large arms around her and bringing her into his body. \n\n\"I don't know what you mean by that,\" she muttered.\n\nHe chuckled at her tone. \"Eventually you will have to accept the title of leader, especially since you've already claimed it.\"\n\nAnna buried her head in his chest. She knew it was ridiculous for her to both claim and resist the position but there was so much she felt stacked against her. How was she to truly become royalty? She knew nothing of what she was taking on and it scared her. But, if she was honest with herself, there was only one thing that truly made her feel unfit. \n\n\"What if I go mad again?\" she whispered.\n\nHis arms tightened around her. \"You won't.\" he said simply.\n\n\"But what if I uncover these memories and I do? Or I'm so damaged I can't function? Or I don't want to anymore because it is too painful to be here?\" She twisted to look up at him. \"How can I take on the weight of the kingdom if I might crumble?\" \n\n\"You won't,\" he said again but he smiled when she gave him a look. \"I'm sure you won't.\" Another look. He chuckled. \"I know I left before, and I shouldn't have.\" She opened her mouth to contradict him but he shook his head and she quieted. \"You will not be alone again, Anna. I have my responsibilities as a god of the First Level but I will never be truly gone from you. I promise you that.\" A warm feeling filled her as she spoke. Knowing it and hearing it were two different things and she had needed him to speak it. \"If you're still worried about my temporary absences and obvious limitations in involving myself in the inner workings of the realm, consider this. Being queen does not mean that you alone have to run the country. You will have Serena and Rafia and the rest of them to help you.\"\n\n\"Do you trust Rafia?\" she asked, curious about his connection to the general.\n\nLeonid sighed. \"My relationship with Emera is complex and she has not always been honest with me, but I believe she wishes to restore the kingdom which means that she's chosen an agent who will work towards those aims. Rafia is probably of like mind and that I do trust.\" He looked back at her. \"You can chose to confide in him and the others, to give them knowledge of your limitations and they can aid you. They know much of what stands in your way and they will help you overcome them.\"\n\nShe rested her head on his chest again, too comfortable in his arms to pull away. \"That seems like a lot of trust for a bunch of people I barely know,\" she was being unkind, considering everything she had been through with them. But a part of her was still wary, still trying to retreat behind a protective shield. \n\nHis hand stroked her back, soothing and gentle. \"It'll come with time.\"\n\n\"I'm noticing a pattern,\" she grumbled.\n\n*\n\nFirst light found Anna looking out over the palace grounds from the outer walk at the tower's roof. The others were asleep in the workroom below her, repurposing the furniture there to make a strange sort of dormitory. She let them sleep for now, unsure what the following days would bring. The wind whipped her dark hair around her, cool autumn air flowing beneath her cloak. She watched as Rafia's forces took their positions and settled to wait for their command.",
        "\"You have not slept,\" Serena came up behind her, surprising Anna. She turned and looked at the woman beside her.\n\n\"A little,\" Anna said, \"though it seems the night has not been as kind to you.\" Serena looked worn out. There was a heaviness in her step that had not been there the day before, but yesterday she had not taken a man's life. \"I hope you are alright,\" Anna said lamely. She wished she could say something better, but she found she lacked the soft touch for comforting that Serena seemed to have in spades. It seemed unfair that Serena was the one left without the benefit of what she provided to so many others.\n\nSerena nodded and turned her gaze out to the dark scene below them as the sky grew ever brighter above. They stood there in silence, waiting for the fight they knew was coming. \n\n\"Did you ever find satisfaction in it?\" Serena asked quietly, eyes forward away from Anna.\n\n\"No,\" Anna said shaking her head. \"I never did.\"\n\n\"Is that wrong considering what evil you have removed from the world?\"\n\nAnna smiled, and turned to Serena, \"I will tell you what a wise woman once told me: Our guilt is what separates us from them. It reminds us that we are human and we can feel remorse, while their lack is their weakness. Our compassion is our strength and it is why we will succeed and they will fail.\"\n\nSerena's lips trembled and a few tears made their way down her cheeks. Anna wrapped her arms around the woman's shoulders, surprised to find that she was much shorter than anticipated. Serena's strength had always made her seem so much more substantial than the smaller woman Anna held now. \n\n\"It may not feel like it will ever get better, but we both know it will,\" Anna said into her warm brown curls. Serena cried into her shoulder, the two women clasped together as the fighting erupted below them. \n\nIn the end Rafia's coup was wrapped up in the space of a morning. She and Serena watched it unfold from their perch. Twice Serena sent spells to whisper in Rafia's ear of traps set by the king's guard. It seemed that Serena could make anything out of magic with the right intention, even the sound of her voice. She wove and built her spells as if they were physical things, something Anna wasn't sure she'd ever tire of watching. \n\nRafia's men disarmed the opposing forces with little loss of life. With the benefit of her perspective, Anna admired his attention to detail and strategy as she watched his men move around below her in well-coordinated attacks. As expected, the king's body was discovered shortly after the fighting began as his forces came to collect him. The duke cursed mightily upon learning of the apparent suicide and the news of it spread, ending what little resistance the king's forces had managed to mount. With no monarch to protect and no champion to lead the charge, the fight was over before it began.\n\nOnce the fighting had ended, Anna and Serena left the others to make their way to the main keep, where Rafia was holding council. Marek chose to join them, intent on being useful. \n\nThey found the men in good spirits. Rafia was seated at a large desk covered in reports and a small group of scribes sat next to him, making out more orders to be carried off by the waiting men. Anna noted how quickly the excitement of battle gave way to endless responsibilities in administration surrounding prisoners, new government officials, keeping the peace so recently won, and so on. She and Serena kept to the back of the room as he finished speaking with two of his commanders about working with the city guards to restore order and assure the population that there was nothing to fear. \n\nIt occurred to Anna that this was the true measure of a leader, one who was willing to take on not only the big, important decisions of governance but also the grueling day-to-day minutia of making sure a country could run. She sighed internally, unsure if she were up to the task.\n\nRafia noted their presence but waited to clear the room to avoid calling attention to them. Both were wearing the uniforms of palace healers they had borrowed when they left Marek in the infirmary so as not to draw undue notice. When it was just Rafia and Lavis in the room, the two women came forward. Rafia stood as Anna approached but, much to her relief, neither man bowed.\n\n\"It is good to see you, your majesty,\" Rafia said in a low voice. Anna gave him a sharp look.\n\n\"For now I believe 'Anna' will do.\" Her tone did little to hide her discomfort.\n\nRafia gave her a kind smile. \"Surely if you intend to take the throne you must be ready to accept the title of it as well.\"\n\nAnna let her eyes fall to his reports to cover how flustered she felt. His words sounded too much like Leonid's. \"You are speaking to a girl who was a peasant but a week ago. It will take some getting used to.\" She looked up in time to see him exchange a look with Serena. \"But I'm sure this is hardly the time to reveal myself, so I fail to see the point in trying it out just this moment.\" \n\nRafia nodded. \"It would be unwise until we have secured the capital at least. Though the longer efforts towards peace in the East and rebuilding the kingdom will certainly be bolstered by a rightful heir on the throne.\" \n\n\"We know you are busy and will leave you to that work but we needed to speak with you about the rather mundane issue of housing. There are seven of us in the North tower and no proper living quarters. Since we have established that I won't be taking up residence in the royal suite for the present moment, we need somewhere that is not a work bench or a cell to sleep.\" Anna gave him a direct look. They both understood the larger issue at work. In a world where magic was largely considered the work of oft-absent gods and the imagination of the superstitious, where did this group of magical individuals fit?\n\nRafia took a moment to think. \"I assume you would like to remain together?\" Serena nodded. \"Then the best place is the newly vacated royal wing and the family suites.\" Anna opened her mouth to counter him but he anticipated her, \"the barracks will be used for my men, the staff apartments are full and will not be disturbed as far as I know, I will not be taking up residence there in order to set the groundwork for when you are revealed. So in order to give your group the privacy it needs, this seems to be the best option.\"\n\nAnna looked over at Serena. The older woman laughed and shook her head. \"Innis and Rosli will love it.\" \n\nAnna smiled back. \"They do deserve a good bed.\" She turned back to Rafia. \"Thank you, we accept.\" Her face darkened considerably though as it became time to address the second point of business. \"I have to beg a private word, General.\" Rafia didn't conceal his surprise but he dismissed Commander Lavis and Anna accepted a quick hand squeeze from Serena before she departed the room as well. \n\n\"Will you sit?\" he asked, gesturing to a chair. \n\nAnna took a seat and Rafia sat across from her. She was nervous to speak to him about what had passed in the days since she had come here. She needed him to understand who she was if he were going to prop her onto the throne she had so recently claimed. He waited patiently while she gathered her thoughts. \n\n\"This is hardly the time to have an extended talk about the affairs of the country but there is an urgency that might not be entirely clear from the onset,\" she began. He gave her a curious look. It occurred to her that her language had changed since she came here, as if she were absorbing the spoken style of those around her. She didn't know if it was her magic or her own skill at mimicking others. Either way, she would contemplate it later. \"But I need to know what place you intend to hold in the new regime.\"\n\nRafia took a moment and nodded. \"Of course,\" he leaned forward on the table, his arms resting on the dark grain that matched his own skin. \"I came here intending to overthrow the king and see the transition to a new government. Admittedly I had hoped for someone of royal descent for the throne but it seemed a minor consideration in the larger scheme. I have little desire to rule as king.\" He looked at her, assessing where the inquiry was coming from on her part and guessing correctly. \"But I did not intend to simply conquer and leave the state to its own devices.\"\n\nShe nodded, grateful at the response. It would have to be enough. Leonid trusted his sister who trusted Rafia, this and her own short acquaintance with the man, would have to be enough.\n\n\"It is difficult to speak of. The last few months have been very strange but I think you should know what has passed here before you decide to back my claims to the throne.\"\n\nRafia sat straighter, \"I have already made that decision. Your identity has been confirmed by several of the soldiers in the King's Guard who were sent to your village and the Duke will be convinced to confirm that you were sentenced to die as a traitor because of it. There should be no difficulty in establishing your lineage with their testimony.\"\n\nAnna shook her head. \"That is not what I mean,\" she hadn't even considered the legality of her claim. \"As I said, I was a peasant, my family farmers, until the king sent his men. I am not educated beyond what I learned from my grandparents who were lucky enough to attend a real school. When I came here I was a prisoner. I have no knowledge of the court or politics or any basics of governance.\" She paused, wondering if she were trying to convince him to back away from his position.\n\nRafia smiled at her kindly. \"I understand your position, though it is a unique one. But everything you mentioned can be learned. None of it is reason for you to step away from your birthright.\"\n\nAnna looked away from him, clenching her jaw before she spoke again. \"The king and his agents killed my family and everyone I'd ever known when they came to my village. I set off after these men with nothing but vengeance in my heart. When I was captured, they spent days attempting to break me down as much as they could, for magic, information, for the simple pleasure of causing pain. They killed the only person left in the world I loved in front of me.\" She didn't look back to him, but it was crucial that the man who would ostensibly be running the country understand that she was not what she seemed. \"I have flirted with the edge of a very dark place and that has not been reconciled.\" She found the courage to look back at him. \"At the very least, it will take time.\"\n\nHis face was serious, as if trying to keep more turbulent emotions from showing. It was a long moment before he spoke. \"My soldiers have seen and done things that will likely haunt them for a long time. I do not intend to compare the experiences but the point remains: if the need to heal were a cause for dismissal we would have no army left. The soldiers who cannot perform or have grown too violent, they must be removed, but in my experience those who know they need to mend usually do.\" He looked at her, his tone was careful but she appreciated his thoughtfulness. \"If you believe that you will heal, then I find my support for you only bolstered by that. This country needs a monarch who will help them do the same. Who better than someone who has personal experience?\" \n\nShe looked at him squarely, choosing against mincing words. \"So you are maintaining your support for a sorcerous peasant queen who may or may not succumb to madness?\" \n\nRafia was still for a moment, his eyes considering her, \"I am.\"\n\nShe stood from her seat and he rose as well.\n\n\"In that case, I must ask your help,\" Anna said, standing as she explained. \"I find myself in a similar predicament as Serena did with the sorcerer who brought us here,\" she paused, somewhat shy at her request. But this would only be the first time she would have to depend on the man before her. She didn't have the luxury of easing into it. \"But I must go the other way and ask that you bring this man to justice when I find that I cannot.\"\n\nRafia rose when she did and he came around the desk as she spoke. She avoided his gaze but she felt him searching her, still assessing how sincere she was, still establishing his opinion of her. She wasn't sure if she should feel insulted by it, considering what she had shared with him; but she decided she'd rather have someone who took their time to form their own opinions. \"It would be an honor, Anna,\" he said her name as if to indicate the title he had left out. \n\n\"Then we should be off to the dungeon,\" she said, turning towards the door.\n\nHe followed her closely, \"The prisons are in the process of being cleared, so let's not waste time if there is someone there who should remain.\n\n\"You won't find him without some help,\" Anna said as she opened door. \n\nThe two of them made short work of the distance between the keep and the prison. Rafia was surprised when she showed him the half hidden staircase in the lower cell. He had thought the torture chamber where they had found one of his commanders had been the worst the place had to offer.\n\nAnna took a torch with her, careful now to contain her use of power. She understood that Rafia intended to be loyal to her but he was uneasy with magic despite his earlier assertion. As she descended the stair, she thought for a moment she could hear the sound of a man speaking but when at last they arrived at the small hidden cell, it was quiet.\n\nLifting up the torch to shed light through the bars, Anna could see a familiar body, lying on her side, facing away from the pair, bearing the marks of several days' work. \n\nRafia started when he saw a woman's form beyond the bars. \"What is this?\" he asked, shock and an edge of anger in his voice.\n\nAnna wanted to turn to him but she found herself unable to take her eyes away. Dread had followed her down here and now, bearing witness to what she had done, it grew more profound.\n\n\"You have not known me long, but trust me when I say this is not as it appears,\" Anna said quietly. She reached for the door and forced her power into the lock, swinging the bars inwards. She wasn't sure where the jailor was but it didn't seem crucial at the moment. Her eyes were riveted on the naked girl lying on her side, bloody welts covering every part of her skin. \n\nAnna knelt next to the body that appeared to be her own. It was deeply disturbing to be confronted with the reality of what she had endured. To see it brought down on another, by her own design no less, made her feel a strange sort of regret. The girl's ribs moved as she breathed and Anna reached out to her, pulling her shoulder so that she fell to lie on her torn back. \n\nA strangled cry of pain emerged from the pitiful body before her and Anna watched as the girl's eyes flickered open. They were all wrong, light blue and yet somehow dark and despairing. Before Anna could react, a dirty hand shot out and closed an iron grip around her throat. Rafia lunged at the pair but Anna regained her composure and held up a hand to still him. She wrapped her grip around the wrist of the offending hand. As she pulled the fingers away, she withdrew the spell covering the man lying before her. \n\nRafia uttered a curse as Orlith's body came into view, the damage still obvious on the flesh revealed underneath her illusion. His face was swollen and distorted, one eye nearly forced closed. Bruises bloomed underneath scrapes and welts and blood and semen caked his inner thighs. The effort it took him to try and strangle Anna seemed to have drained what little reserve he had and she held him easily in her grasp. She looked down into his eyes and saw a broken man. It surprised her more than it should have perhaps, but she had assumed her tormentor immune to such a human fate. It shrank him in her mind so he was not the all-powerful master he had convinced her he was. He was just another human, susceptible to the same pain he meted out on others. \n\n\"This is the king's man, Orlith,\" she said quietly to Rafia. She turned to look at her newest ally, to see in his face the judgment for what she had done to this man. She saw his revulsion at the evidence of torture but when he looked at her, she could not tell if it was directed towards her as well. \n\n\"Orlith Mortok of the North?\" Rafia asked. Anna nodded. Rafia's face closed off, he looked back at the man with a cooler gaze. \"He is wanted for many crimes performed in the name of his king,\" Rafia continued. \"He no doubt deserves this and more if even half of the reports are true.\"\n\nShe turned back to Orlith's prone form, unwilling to see the pity or horror that Rafia might feel on her behalf when she explained herself. But she needed him to understand why she'd done this, and part of her needed to be reminded of what she could not truly recall. \"He has not endured anything that he did not inflict on me ten times over.\" She examined Orlith's wounds with a clinical look, belying the turbulent pit in her stomach. She felt Rafia stiffen at her confession. \n\nShe leaned over Orlith, something like guilt eating at her. Could she find no satisfaction in witnessing him suffer as she had? This was the same justice she had dealt the other men who had been in her village, wasn't it? But she had sentenced and carried out their punishments; for her tormentor she had been too weak to do it herself and so had allowed for his torture and rape by another, wicked though he may be. She was complicit in that evil. \n\nAnna considered the mess of a man before her. In the end he had brought her low, but she would rise above it. No amount of regret could allow her to soften to his circumstances. He had killed her friend, and for Dev justice would be served. \n\n\"I would tell you that I'll forget you now, but we both know that would be a lie,\" she whispered to him. \"So I resolve now to think very little of you and in time, you will fade into nothing. I will go on, and live, and forget to think of you.\" The man groaned through his injured throat. She had not given him the power to speak back. He looked to her as if he wished to say something, but she found she did not care to hear it.\n\nSlowly, so that he might feel every painful moment of it, Anna began to heal his wounds. The man arched off the floor as her magic burned through him, knitting his skin together, mending the numerous broken bones throughout his body. Anna was surprised at the amount of damage the jailor had managed to inflict before disappearing. Perhaps he'd gone to join the fight once it started.\n\n\"You will submit to the justice of the kingdom and admit your crimes when asked. You will not fight or resist.\" She spoke softly, still healing him at an excruciating pace. As the swelling in his face resolved, she was able once again to look into the face of the man who had injured her so deeply. She felt calmer than she had expected; Orlith's all too human condition and Rafia's promise to help gave her hope that she would soon be untroubled by his presence forever.\n\nAnna finished the healing and bound Orlith to inaction against his jailors. She then withdrew her power from her words, knowing that this next part would be true whether she forced it on him or not. \"When you stand upon the executioner's block, your last thoughts will be that I am alive and unbroken despite your best efforts and you will take that failure to your grave.\"\n\nOrlith looked back, hollow and still. She didn't want to look any closer. She stood up and looked at Rafia who was considering her intently. She nodded, and moved away from the man on the floor. Rafia went over and took Orlith's unresisting hands by the chain of his shackles, pulled him to his feet and began marching him up to the prison proper. Anna followed, her steps feeling lighter as she moved back towards daylight. \n\nShe left Rafia in the first level of the prison where he turned Orlith over to his men, who had already captured the massive jailor during the fight hours earlier. With hurried steps she climbed the last flight of stairs and threw herself out into the descending evening. Taking large breaths of fresh air she looked around as Rafia's soldiers moved about, restoring what had been upset by this morning's battle, no doubt with the thought of fortifying the grounds once the other two armies at the front caught up with them.",
        "She moved through the busy courtyard, servants and guards bustling about despite the hour for the evening meal growing close. The turnover was going rather seamlessly given Rafia's small force. The king's assumed suicide and general unpopularity certainly helped. Anna passed a soldier flirting with a laundress who smiled and shamelessly offered to take his clothing for a wash where he stood. The soldier went red and his friends laughed as he stuttered an answer. The laundress winked and sashayed away with her bundle. \n\nAnna approached the infirmary where others dressed in the healer's green uniforms moved to and fro. She peeked in the main door and saw Marek sitting by one of the beds, changing bandages. She could see how he was burning out infections with his magic, encouraging the healing process as he worked while no one else was the wiser. She smiled and moved on. The others would be heading for the royal wing soon, but she would wait to join them a moment longer.\n\nShe found her way into the private gardens behind the royal residence where she was blessedly alone. The grounds were meticulously maintained, rows of towering hedges shielded her from anyone looking from the castle and lined a path that opened onto a small pond where water lilies floated in the dark waters. She walked out onto the wooden dock that extended over the water and stopped at the edge to look out into the scene painted blue with the coming night.\n\nHer feelings were confused during her walk, but now in her stillness and solitude she relaxed, letting the anxiety ebb as she closed out the questions and the complications that plagued her. For a moment she simply felt what her body was telling her without trying to influence it with her thoughts. A great surge of relief, like a font of contentment and joy that had been tamped down for too long, surged in her chest. After everything she had endured she realized she had not only survived but succeeded. The future was no longer a horrible blank space before her but a place full of possibilities and connection. She looked up at the gathering clouds and grinned. \n\nWhen the skies opened up and cool rain began to fall, she reached out her arms, welcoming the storm. She let her relief well up from inside her and escape into the air as a laugh that rippled over the water, releasing the elation she felt into the night. Lightning shot across the sky followed by the crack and rumble of thunder with answering snaps of her power at the ends of her fingertips. Rain lashed her skin, soaked her clothing and ran down her scalp. Tomorrow there would be more work to be done, her friend to mourn, politics and fights. \n\n\nBut for tonight, for this moment, she was allowed simply to be.\n\n\n\n***\n\n So we've come to the end, of sorts. The epilogue will be posted in a few days. Thank you guys for all your comments and support. I hope this end finds you smiling."
    ],
    "authorname": "AmoryParks",
    "tags": [
        "leonid",
        "anna",
        "god",
        "submission",
        "claiming",
        "choice",
        "queen",
        "end"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/a-tale-of-revenge-ch-15"
}