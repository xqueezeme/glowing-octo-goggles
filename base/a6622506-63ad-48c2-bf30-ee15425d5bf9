{
    "title": "The Twelve Tables Ch. 20",
    "pages": [
        "Authors Note: Thank you to everyone left comments or sent me feedback about previous chapters of this story. Thank you again to Margaret who proofread for me. ~ellie\n\n*****\n\nThe Donati triplets were two months old, and Peri now fed them every three hours rather than four. As they had reached what would have been their official birthday at eight weeks they had become more alert and hungry, it seemed, wanting to be fed more often which she had been managing but was feeling a little rundown. It was at that time that they had flown to Melbourne for Maryanne's wedding, and Peri had sat in the church and sobbed claiming they were happy tears but feeling overwhelmed with life.\n\nWhen she had gone back to the hotel suite to feed the babies before the reception Josh had taken control. He had turned to Bridgette and given her several hundred dollars, instructing her to go and buy what she needed to feed the babies for the night as Peri would not be returning until six the following morning. Then he had spoken to her gently.\n\n\"You can't keep this up, and I can't watch you crash and burn. I want my wife back not this zombie woman you have become. You are a wonderful mother and leaving them with qualified, capable nannies for the night, who know them as well as you do, won't make you a bad mother,\" he said in reasonable tones. \"These are my children too, and I know they will be looked after better by the nannies than a stressed out mother who can't even be sure which child she is feeding anymore.\" \n\nShe had tried to argue with him, but he had refused to budge on his stance and for the first time since the birth of her babies, she saw the future leader of the Donati family appear to lay down the law.\n\n\"I love you, but you are going to kill yourself if this doesn't stop. You are not an average woman in an average home who has to do the best she can and run herself ragged. You are my wife and the mother of my children. More than that you are the mother of the next Donati table. We need to be here and show our united strength among the Vitali family. They need to know that the next generation of Donati's cannot be taken lightly.\" He said and pulled her close to his body. \"I love you,\" he repeated, \"but tonight can't be about what we want. Maryanne has married into a family almost as powerful as our own so we will go to the reception, and we will be every inch the future leaders that Papa hopes we can be.\"\n\n\"Put it in terms of royalty, you are about to become a queen, Princess Peri,\" Dante said from behind Josh startling her. Peri realised she was so tired and emotional that she hadn't even noticed Dante had returned to the hotel with them. \"Would any of the royal women let down their king when visiting another country or would they want to put their best foot forward.\"\n\nPeri had pulled herself together immediately. She had said she would do anything Josh asked of her when the decision to make him the next Chair was being made, and she knew life as she knew it would be altered profoundly. She had expressed as much milk as she could and gone to the adjoining suite to change into the evening gown Andie had insisted she take with her despite it being totally unsuitable for breastfeeding. She fixed her hair and applied more make-up covering the telltale signs of her lack of sleep. Satisfied that the dress had hidden the baby fat, she still carried she returned to where the two men talked quietly in the nursery. \n\nThe brothers had become even closer, Peri thought, and though they both went to work in different directions, they spent, even more, time together with Andreas and Joseph. At home, there had been an awkwardness between Dante and Peri over the last two weeks as they worked through their feeling for each other and Josh separately. They both knew that Josh wrestled with the knowledge that they were permanently bound together now and would perhaps take longer to come to terms with it than they might. \n\n\"If she expresses as soon as you get back to the room make sure you refrigerate it straight away,\" Madeline said quietly to Josh handing him a small bag. In Peri's absence, she had packed a bag with her small hand pump and several bottles. \"There are some breast pads in there too which should get you through the reception without any incidents,\" the girl smiled softly.\n\n\"Thank you, Madeline,\" Peri said as she put a smile on her face and walked towards the two men who waited for her.\n\n\"Well that was a transformation worth waiting for,\" Dante said returning her smile.\n\n\"You look beautiful,\" Josh kissed her lightly not wanting to wear the deep shade of lipstick she had applied.\n\n\"Pete said to give you this and not to worry because it is natural and wouldn't affect your milk greatly,\" Josh put an effervescent tablet in a glass of water and watched it dissolve before handing it to her.\n\nThey were staying in the same hotel as the reception was being hosted so after drinking the effervescent liquid, they walked to the elevators. The reception was beautiful and while the babies remained on her mind Peri relaxed and allowed herself to enjoy the evening and the company of her brothers and sisters-in-law. Andie had accompanied Charles and sat at a table with the older members of the family. Unsurprisingly the vitamin supplement Pete had prescribed seemed to take the edge of her fatigue and the brain fog she had been enduring lifted to make her less emotional. Lucia had dragged Dante onto the dancefloor, and Pete had slipped into the seat beside her. \n\n\"How are you feeling?\" he asked softly leaning toward her.\n\n\"I don't know what was in the tablet you gave Josh for me, but I feel great, clear-headed and not as tired as I have been in what seems like forever,\" she smiled.\n\n\"I gave Josh the box. It's just a vitamin complex with a caffeine-based extract. Don't take more than one every couple of days though or those babies will wake up demanding coffee in the mornings,\" he chuckled.\n\n\"They're demanding enough as it is,\" she laughed lightly, \"Their Papa would probably give them anything they demanded so I'll be careful not to overdo it.\"\n\n\"Says the woman who can't bear to leave them alone for more than an hour at a time,\" Josh said in his own defence. \"They're pretty damn amazing though so you can't blame us for doting on them,\" his voice softened, and he took Peri's hand.\n\nPeri found herself enjoying the night but as the evening wore on her breasts began to ache with the unrelieved fullness as she went past the usual feeding time. She found Josh talking with Constantine and Jules and whispered in his ear that she might need the bag Madeline had given him. \n\n\"D. put it in the room where the bride and groom's things are,\" he said looking around and spotting Dante talking to Angelo and a few other men not far away. \n\n\"You stay and chat I can ask him,\" she smiled, \"I won't be long, I'll do it properly when we go back to our room later.\" She kissed him and wandered in the direction of Dante. \"I'm sorry to interrupt gentlemen,\" she said politely to the small group as she came to stand beside him. \"Would you mind terribly if I borrowed Dante for a few minutes?\"\n\n\"That sounds interesting,\" Angelo grinned. \"What are you planning on doing with him?\"\n\n\"Well,\" she leaned forward conspiratorially, \"I'm on a bit of a treasure hunt, and rumour has it he knows where it is hidden.\" She winked making him laugh.\n\n\"Doesn't surprise me, he always had hidden gems around the place, take him if you must,\" Angelo chuckled.\n\n\"This ship is about to spring a leak if I don't find that bag Madeline packed for me,\" she whispered as they walked away from the group arm in arm.\n\n\"You are looking particularly buoyant in that dress, I don't think there's much chance of you drowning,\" he whispered back but led the way to a small side room where the bride and groom would change before they left for their honeymoon. \"I'll stay and make sure no one interrupts you.\" He said leaning back against the door once it was closed behind them.\n\n\"I'll be quick and do a full express when we get back to our suite later. \"Could you undo the zip for me?\" She asked without thinking.\n\n\"Sure,\" he stepped forward as she turned her back to him and swept her hair aside. He slowly lowered the zip and ran his hand back up her back and over her shoulders lowering the dress. He'd fantasised about doing this under different circumstances, but the action was real. Unable to help himself he bent his head to kiss her shoulder and neck as the dress fell from her shoulders.\n\nPeri took a sharp breath and turned to face him holding the dress to her chest. She knew that somehow they would eventually become closer even intimate, and she had thought about it often recently. She reached up and placed a hand on his cheek and smiled softly. \n\n\"I won't betray Josh or do anything behind his back,\" she said softly. \"I understand what is happening and know that we will share a great deal in our lives including Josh's love. I'm not sure we are ready for this,\" she admitted. \"I'm still,\" she looked down at her full breasts lost for words, \"leaky,\" she gave a half smile.\n\n\"The leakiness only makes you more attractive to me,\" Dante said equally softly taking her hand from his cheek and holding it. \"I would never betray Josh either, for better or worse we are bound together now, and I would like that to be more of the better and less of the worse.\" He bent his head to kiss her lightly. \"This is no more than an extension of the mild flirting and affection we have shown each other for months now. Betrayal would include using that playroom he created.\" His eyes betrayed his pleasure in thinking about that. \"Do what you need to do, you are safe with me and always will be.\"\n\nHe watched as she placed the pump to her breast and positioned it before pumping the trigger. Her nipple elongating with the suction as the deep cream coloured milk filled the bottle attachment. He was strangely aroused by the sight and lifted his eyes from her breast to meet hers and seeing her curious look tilted his head.\n\n\"I'm only human Peri,\" he groaned. \"Josh is the one with all the self-control.\"\n\n\"You're doing pretty well in that department,\" she gave him credit with a smile. Picking up two fresh nipple pads she placed them over her elongated nipple before exposing the other breast and filling the other half of the bottle quickly and easily. She placed everything back into the bag and straightened up pulling her dress back to her shoulders and turning sweeping her hair to the side so he could zip it up for her. \n\nHe let his fingers linger on her skin, and she could feel his hot breath on her neck before he kissed her there as the zip was pulled into place. She didn't flinch or take a breath, this time, she merely turned to look at him and accepted their first real kiss. It was soft and tender, but she could feel his desire, and she broke the contact feeling uneasy about her own feelings.\n\n\"We better get back in there before people come looking for us,\" she said breathlessly. She hadn't considered that he would kiss her with the same passion Josh held in his kisses and it both thrilled and unnerved her. \n\n\"You might want to visit the ladies room and freshen up your lipstick,\" he gave a lopsided smile. \"Do I look good in this colour?\" Peri couldn't help but laugh and reached up to brush her thumb over his lips.\n\n\"Thank you,\" he said with meaning, kissing her thumb and taking her hand in his own. \"Thank you for letting down the barrier that had built up between us since Papa's visit.\"\n\n\"We have to go,\" Peri said unable to formulate any words in response to his. He opened the door, and they went back out into the reception watched by several sets of eyes including Josh's. He knew that neither of them would do anything to fracture the relationship growing between all three of them. While he was still not fully enamoured with the idea that eventually they would have a relationship separate from him, he was beginning to let Dante into their intimacy as part of his and Peri's relationship in little ways to stall that separation as long as possible.\n\nHe reasoned that if he did it on his terms, then he would be following the needs and laws of the family, giving Dante the intimacy he craved with Peri and would still maintain control of his wife and her relationship with his brother. He was becoming unemotional about it seeing it as more of a compromise that must be made in exchange for the future he had not thought possible but now craved along with the wealth and power that would come with it. They were the next generation of power brokers and would be a force to be reckoned with and the sooner he took control of this element of his life the happier they would all be.\n\nHis world view had changed in the two weeks since the meeting with his father and uncles. He loved Peri as much as always if not more, and he knew his position had been confirmed and written in stone by her acceptance of who she must become for him to succeed. He knew that without her unequivocal support things might have been different. He had spent part of each day with either Joseph or Andreas over the last two weeks, and he knew they tested him and his knowledge on many levels. What he knew about the true mission of his family had been nothing compared to the small amount he had been told so far. He also knew that a trial was before him, and soon he would be asked to make a decision that would either make or break him as the next Chair if he did not figure out the riddle they had given him and conquer it first. If he failed on both counts, they would make the decision for him.\n\nOnce again he considered Dante and his love for Peri. If he couldn't conquer his fears about letting Dante have an intimate relationship with Peri it could very well break his tenuous hold on the Chair. He knew his other brothers would be told of their roles on the new table in the new year, and he had until the family Christmas to work it out on his own or have them inform him that they had made the decision, and he would have no further choice in the matter. While they had not said that the Chair would be taken from him, he knew that his hold on it came down to how well he handled the outcome of this trial.\n\nThe only clue he had to the trial he was on was a cryptic riddle that seemed very straight forward to him, and he struggled to work out what he needed to do. He walked over to where Peri and Dante stood talking with Vincenzo and Dominic. In his head, he went through the riddle he now knew by heart.\n\n\"Duplicity lies in heart and hearth\n\nTerrifying the mother.\n\nInto darkness and into earth\n\nOne-half must sacrifice the other.\"\n\n\"Hey Dom,\" Josh greeted his cousin warmly. \"I didn't think Zio ever let you off that leaky tub he calls home.\"\n\n\"Yeah, gotta come and get my land legs back now and then. I heard you started a publishing house,\" Dom said. \"I'm considering a change of scenery if you're looking for a hack columnist.\"\n\n\"Seriously?\" Josh asked. \"I'd hardly call being syndicated hack work. I'd love to have you on board if you're interested in the publishing side. I've been super busy with the new family and house so it would be great to have a family member there working with the executives.\"\n\n\"Didn't think it would be that easy,\" Dominic laughed. \"Just for appearances sake do you want me to dust off my resume and come in for an interview with you and, what was that guy's name?\" he asked his father. \n\n\"Rick,\" Vincenzo supplied unsurprisingly.\n\n\"I expect that's probably the more professional option,\" Josh admitted. \"What about Wednesday, say around ten?\"\n\n\"Perfect, I'll have my people call your people to confirm,\" he spoke with a perfectly straight face and earned a disparaging look from his father. \n\n\"I would be his people,\" Dominic's wife Finola shook her head. \"I'll give your assistant a call on Monday and set it up. I can't wait to move back onto dry land.\" She turned to Peri, \"Don't ever let Josh convince you that life at sea is all romantic sunsets and vast horizons.\"\n\n\"It does sound tempting when you put it that way, but I don't think there's any chance of that happening in my near future,\" she laughed. \"Life at sea could get very messy with triplets on board.\"\n\n\"I forgot about that you look so great!\" Finola said earnestly. \"Come and tell me all about them while I find another glass of wine.\"\n\n\"Tell the truth,\" Dante smirked, \"Was it the wife's nagging or did your father finally kick you out of home.\"\n\n\"A little bit of both,\" Dominic answered in a deadpan tone. \"Seems as good a time as any for a change. Have you caught up with Larry yet? I here he is considering giving up the racing leathers to start a custom bike shop.\"\n\n\"Yeah the seconds have corralled a table over in the corner,\" Josh said.\n\n\"That's my cue then,\" Dominic winked and walked over to where they all sat.\n\n\"No good can come of that,\" Dante looked over to where Dominic had joined the table. \"The current table all making an appearance with all of the second sons. Are we trying to make a point or something here?\"\n\n\"Ah there is Manuel, excuse me, boys,\" Vincenzo said and left them where they stood not even acknowledging the question.\n\n\"Peri managed to express okay?\" Josh asked coming back to his reason for coming over to where his brother stood.\n\n\"Yeah I offered to be the pump for her, but she declined,\" Dante teased.\n\n\"You should have, you've been practically obsessed with her tits since she started breastfeeding,\" Josh said quietly taking Dante by surprise.\n\n\"Well, you could have told me that before she got that little pump out,\" Dante made light of Josh's words unsure of how to take them. \"Watching that pump was almost as good, that clear plastic lets you see how the nipple gets stretched out by the suction.\" He waited to see what reaction he would get. He'd teased before but this went slightly beyond that, and he half expected Josh to get mad.\n\n\"I don't think I have ever seen her use the hand pump before,\" he mused. \"Just the electric one at home but its cups aren't clear like that. Maybe I should get more involved in the process,\" he grinned. \"Relax D. this is something we all want right?\" Josh clapped Dante on the shoulder. \"Sometimes you just have to pull the band-aid off fast. I assume this is one of the trials we must overcome before Christmas or have them reappraise the situation.\"\n\n\"The only trial I was given was to try and pre-empt your needs and help you with an enigma that bothers you. The thing is I don't have all of the information, and I think that is the point they were trying to make. The idea that I am supposed to know you as well as I know myself was paramount over everything else I was told. It's my relationship with you and not Peri that matters to the future of the family.\" Dante seemed to think about his words. \"With Lio it was different, we shared everything from the time we shared the same womb. Now I have to find that sense of symbiosis with you.\"\n\n\"I never really had that with Nik. She shared my stuff not because I offered but because she took it,\" he smiled. \"We were close when we were young but never like you and Lio. She needed me to defend her when she was shitty to you all and be that barrier, but I would have done that for any of the girls. The difference was and what you all saw was that she claimed it as her right, and I willingly gave it because we were twins. We never had that symbiotic relationship that you or the Valentine brothers have. Ours was more parasite and host. I was always trying to hang out with you guys when I was younger, but you all had each other, and I had Nik.\"\n\n\"Poor little Wah-wah. The way I remember it everyone was always fighting over who was going to hang out with you because we wanted to not because we had to. There was no drawing of straws or rock, paper, scissors, you dumbass. Get off that pity pony and get into bed with me,\" Dante laughed, \"I'll show you symbiosis.\" Josh cocked an eyebrow at the phrase his brother had used and burst out laughing.",
        "\"Fuck it, let's get a drink and go sandbag the seconds,\" Josh smirked. \"They have no idea what's coming, and I like the feeling of smugness that gives me.\"\n\n\"I say we tell them that Constantine had a secret family of nine sons, and they have come to claim the table as is their right,\" Dante murmured. \"You should be disappointed to find out that there was another set of triplets in the family.\"\n\n\"I'm devastated,\" Josh said sadly. \"I just don't feel special anymore.\" He and Dante walked toward the table where Ben sat with the other seconds chuckling.\n\nJosh was surprised at the speed with which the rumour he and Dante had created sped around the room. Peri had arrived beside him smiling. \"Did you hear that ours aren't the only triplets in the family?\" \n\n\"Really? Gee that's disappointing,\" Josh said pulling her onto his lap. \"Did you hear that D.?\"\n\n\"Yeah, bad luck buddy,\" Dante patted his back and commiserated. Peri narrowed her eyes and looked at the two of them.\n\n\"What's going on?\" She asked realising something was amiss. She saw them shrug almost in unison. She looked across the table at Ben, who was giving his brothers the same narrow-eyed look.\n\n\"I heard the same rumour,\" Dante said with a straight face. \"Seems silly for anyone to believe it as Con is such a playboy and lives to tell everyone about his latest hot model girlfriend but I guess people will believe the strangest things given the right circumstances.\"\n\n\"Don't look at me,\" Josh exclaimed, \"You all know what a dreadful liar I am. I'll go ask the man himself,\" he announced and stood up with Peri in his arms passing her to Dante. \"Here hold this for me I'll be right back.\"\n\n\"It'll be my pleasure,\" Dante cradled Peri gently into his lap. Leaning forward he murmured into her ear, \"I might have to think up some little punishment for the woman who ruined all our fun.\" He felt the involuntary shiver his words sent through her, and he smiled. \n\n\"It's as good as any reason this mob might think up for my presence at this wedding,\" Constantine's loud and cheerful voice sounded from behind where Peri sat a few minutes later. \"How are we ladies and gentlemen?\" There was a murmur in response as he pulled up a chair and poured another glass of wine. \"I believe the bride has gone to change and will be leaving soon. \"You should take the little mother home,\" he said to Josh. \"The babies are surely missing that generous bosom as much as we will when it exits,\" he grinned at Peri who blushed. \"Ah speak of the princess and she arrives,\" Constantine downed the red wine in one long guzzle and stood unsteadily. \"Come on my boy you can prop me up as we farewell the happy couple.\" He stood and put his arm around Josh's shoulder. \"Come on you two,\" he motioned at Dante and Peri.\n\n\"You two are strong men,\" standing between the two young men Constantine seemed to sober slightly as he spoke. \"I do not think I would be as strong if I lost the other half of me as you both have. Being a twin is a double edged sword. I'm proud of the way you have found each other,\" he grinned drunkenly again. \"With the little mother's help of course. The mother always holds the Donati men by the balls.\" He chuckled at some unknown joke, \"Your mother is a scary woman when she wants to be, but I guess I don't have to tell you that.\"\n\n\"Okay Con, let's get you up to the suite,\" Charles's deep voice sounded behind him. \n\n\"What? I was just having a chat with my nephews,\" Constantine swayed a little as he protested his innocence.\n\n\"Yeah, I heard you, as did Andie,\" Charles sighed. \"He loves to show off the fact that he finally got a hot girlfriend,\" he murmured to Josh but left the farewell line he stood in to go with his brother. \n\nPeri turned her head to watch him. The Donati men drank a lot, but she had never seen one rolling drunk before. They got a buzz and became louder and more gregarious, but she knew that like Josh they rarely drank to the point of staggering or slurring. Her experiences with Lucia had taught her to look more closely at anyone who seemed too drunk to care about what they were doing or saying and as she suspected once they were a little way away from the line Constantine straightened and walked normally, laughing loudly as his brother elbowed him in the ribs. Josh saw her watching and looked after the two men frowning. \n\n\"I either need to express here again, or we need to go back to the suite,\" Peri whispered to Josh. \"I'm a bit worried if I hug her I will make her new outfit soggy.\" \n\n\"Why don't you go and tell Mama and Andie that we are leaving as soon as I have hugged Maryanne and wished her well,\" he whispered, \"I imagine she will be a little while yet.\"\n\n\"Okay I will come back,\" she hurried in the direction she had seen Charles and Constantine walk. She saw the two men standing with Andie near where Joseph and Antonia stood with the rest of his brothers and their wives.\n\n\"Baby,\" Andie said seeing her. She moved from the men toward her with her arms out as if to hug her but Peri put up her hands. \n\n\"I'm bursting Mum,\" Peri warned, \"We are going to disappear up to our room for the night as soon as Josh hugs Maryanne and says goodbye.\"\n\n\"Oh, would you like me to walk you up? Josh can meet us there when he's finished here,\" she offered. \"This was the perfect dress, by the way,\" she whispered. You can't tell at all that you're leaking.\"\n\n\"No, you don't have to leave the reception because of me,\" Peri said softly to match her mother's whisper. \"Josh will be ready to go by the time I make it back to him. I just need to let Antonia know as well.\"\n\n\"Charles,\" Andie said reaching out to put her hand on his arm.\n\n\"Wrong again sweetheart,\" Constantine grinned making Peri do a double take and look at them more closely.\n\n\"Honestly, I wish you would stop swapping jackets with him,\" Andie sighed. \"Could you ask Antonia if she can join us, please?\"\n\n\"I live but to serve,\" Constantine gave a mock bow and moved over to Antonia whispering in her hear and making her look and then move towards where Peri stood with Andie. Peri repeated the same story to Antonia, who sympathised and reminded her of the family brunch in the morning. Antonia went back to her place beside Joseph as she farewelled family members who were leaving like Peri intended to.\n\nBefore leaving, she turned to Constantine, who still stood nearby and gained his attention with a hand on his arm. \"Constantine?\" she asked to be sure of who she spoke to. \n\n\"At your service,\" he bowed. \n\n\"So this is Charles,\" she touched the other man's arm who turned to her and smiled.\n\n\"Did you exchange shirts too?\" she asked narrowing her eyes. \"I won't say anything if you can tell me why you were pretending to be your brother and so drunk back there.\" \n\n\"I don't get drunk,\" Constantine chortled. \"What did you do? Try to give Josh a clue to the enigma?\"\n\n\"I was just playing with them,\" Charles answered with a sly smile. \"I might have left little off her title once or twice.\" He shrugged pleased that Peri had caught him out but not showing it. He knew the boys were listening to him, but he worried that he had been too subtle in the clue he left for them.\n\n\"They have been pulling pranks since Constantine landed,\" Andie rolled her eyes at them, but Peri could tell she enjoyed it. \n\n\"I've gotta go,\" Peri finally said. \"I'll see you all at the brunch.\" She kissed her mother's cheek and turned to walk back to Josh her mind twirling around what had been said by Charles. She made it back to Josh and Dante just in time to apologise that it was her first night away from the babies, and she was about to explode when Maryanne tried to embrace her. She kissed Maryanne's cheeks and wished her well instead.\n\n\"I'll grab the bag and meet you at the elevators,\" Dante said and took off at a jog before they could tell him that he didn't have to leave with them. He didn't want to be here without them they were his shield against the sympathetic comments about Lio missing his sister's big day.\n\n\"Do you think we should check on the babies?\" Peri asked as they rode up in the elevator. \n\n\"No, they are perfectly fine. Bridgette and Madeline know them and will look after them just as we would. I'd like one night where I am not left in the bed alone for most it,\" Josh said refusing to back down on his earlier decree.\n\n\"Dante will sleep with you, then the bed won't be empty, and you two have been almost inseparable lately anyway,\" she said hopefully. \n\n\"Only if I can be the little spoon,\" Dante said seriously making Josh raise his eyebrow. \n\n\"Always took you for the big spoon type,\" he nodded as if considering the proposition.\n\n\"Well you're taller than me, so it makes sense. And I am not about to top and tail like Lio and I had to do when we were kids whenever we visited the relatives,\" Dante said reasonably.\n\n\"Nik would just take the bed and make me sleep on the floor, so this would be a step up from that I suppose,\" Josh said sadly.\n\n\"Poor little Wah-wah,\" Dante mocked him.\n\n\"I know right, you have no idea what I've been through,\" he looked at Peri, who was shaking her head at both of them. \"It's late, let's just get a few hours' sleep and you can see the babies first thing in the morning. You don't want to wake Bridgette and Madeline if they have just got the babies settled do you?\"\n\n\"I guess you're right,\" she agreed reluctantly. \"Plus I seriously need a shower. I am soaked and sticky.\" She stepped off the elevator and walked past the door to the baby's room trailing her hand over it and waiting for Josh to move past her to open the door to their adjoining room. \n\n\"I'm still the little spoon,\" Dante announced walking into the room behind them.\n\n\"Fine with me but Peri is usually the little spoon,\" Josh said without even missing a beat. \"She mightn't like you taking her place.\"\n\n\"Good grief, I'm going to shower,\" Peri said. \"Would one of you get my zip?\"\n\n\"I've already had the pleasure, I'll just open this bottle while we wait,\" he pulled a bottle of port from the bag he had carried up. Josh undid her zip, and she walked into the bathroom. Peri turned on the steaming hot water and slipped out of her dress. Stepping into the hot shower, her breasts immediately began to spray jets of milk against the glass wall in front of her. She massaged her swollen and sore flesh until the skin on her fingers pruned, and she felt like there was very little if anything left inside her. Pulling on a robe, she went back into the bedroom to find a pair of panties deciding to give herself a rest from the firm maternity bras for a few minutes longer. \n\n\"That feels better,\" she walked into the small living area of the suite where the brothers talked quietly. \"Josh what's the enigma?\" she asked as she poured herself a glass of water.\n\n\"How did you hear about that?\" He looked at her critically.\n\n\"You forget I am a clever girl and can work things out long before most people. Did they give you a riddle to solve? Some sort of brain teaser?\" She asked.\n\n\"Something like that,\" Josh nodded. \n\n\"I'm supposed to help you with that if you ask,\" Dante said. \"Why didn't you say anything when I told you that earlier?\"\n\n\"They told me not to repeat it to anyone,\" he said confused now. \"How did you find out about it again?\"\n\n\"I can't explain how I knew but I knew that the Constantine, who came to the table and acted drunk, wasn't drunk so when I said goodbye to Andie I asked him why he pretended. Oh, I did say I wouldn't say anything if he told me why but he didn't really because it was Charles who was pretending to be both Constantine and drunk,\" she explained.\n\n\"Wait, why would he do that?\" Josh was looking at her as if she had sprouted two heads and was talking gibberish.\n\n\"I realised it was Charles who had come to the table because he had only swapped jackets with his brother not shirts and there was a wine stain on Charles shirt. Anyway, when I asked Charles why he had pretended to be a drunk Constantine, the real Constantine accused him of leaving you extra clues for the enigma,\" she said as if it all made sense.\n\n\"I don't suppose they told you what that clue was,\" Dante asked as Josh thought about the conversation he had with the drunken version of his uncle earlier that evening.\n\n\"I gather that there is something in it about a mother and that he purposely left the little out of the title they have given me. All of your uncles now call me Little Mama,\" she said. \"He called me the little mother, though. I hope that helps.\"\n\n\"I did notice that,\" Dante said. \"I just thought it was because of the babies. Maybe it's because of who she will become when Mama and Papa retire.\"\n\n\"It would make sense in terms of the riddle I guess,\" Josh spoke quietly. \n\n\"I'm exhausted, and I want to be up early to see my babies, so I am going to bed.\" She went to kiss Josh good night.\n\n\"Wait, don't you have to use that pump thing again?\" Dante asked.\n\n\"No I expressed in the shower,\" Peri laughed at the look of disappointment on his face.\n\n\"Thank you,\" Josh said. \"I love you and will always keep you safe, you know that don't you?\" he asked looking up into her eyes. The words of the enigma about the mother being terrified ran through his head.\n\n\"I know silly,\" she said smiling despite the concern his words conjured in her. He kissed her then. \n\n\"What about me, I love you and will keep you safe, too\" Dante complained.\n\n\"You better kiss him, he's very disappointed that you expressed in the shower,\" Josh said his mood changing, brightening somewhat.\n\nPeri went and bent down to where Dante sat, to brush her lips over his in a light chaste kiss, but he curled a hand around the side of her neck and held her close deepening the kiss. Peri blinked and stood up once he released her.\n\n\"Well that wasn't awkward at all,\" Dante chuckled.\n\n\"Looked okay from here,\" Josh shrugged trying to name what he was feeling. He hadn't hated watching them kiss, but he hadn't exactly liked seeing them kiss that way. \"I'll be in soon,\" he said as she walked toward the bedroom.\n\nPeri fell asleep as soon as her head hit the pillow forgetting to put on a bra to stem the flow of milk that would build up during the long night without feeding the babies. When she woke several hours later, she was sandwiched between Josh, who curled around her back and Dante whose back pressed against her leaking breasts. She lay in a small puddle of breast milk, and she felt embarrassed that it had also covered part of Dante's back.\n\nShe slowly sat up trying not to wake either man but Dante lay on the edge of her robe. She began to shrug out of it thinking to make a quick dash to the bathroom to clean up and put on a bra when Dante rolled and looked at her.\n\n\"That's a perfect sight to wake up to in the morning,\" he whispered and leaned up licking the wet nipple of her breast.\n\n\"I need to go to the bathroom,\" she whispered blushing at the lewdness of his actions. \"Let me up please.\"\n\n\"Let her get up if she needs to go,\" Josh groaned, pulled the covers up and rolled over, \"and leave enough milk in those beauties to feed my babies. I made her wait long enough.\"\n\n\"Fine,\" Dante groaned rolling out of the bed and helping her to her feet. \"I guess I need a shower,\" he looked at the puddle on the bed.\n\n\"I'm so sorry. I forgot to put a bra on before bed last night,\" she apologised. \n\n\"Don't be sorry. That's the best night's sleep I've had in months,\" he whispered as he walked with her to the bathroom and gave her a crooked smile. Unabashed he stripped off his boxers and turned the shower on as she stood by the sink to clean herself up. She couldn't help but look at his reflection in the mirror. \"So do I measure up?\" he chuckled noting her check him out as he did the same to her. She nodded silently, and he reached around her to weigh the heavy, leaking globes in his hands.\n\n\"These really are the most magnificent things to wake up to,\" he grinned as she looked from her breasts to his face in the mirror. He leaned forward and kissed her neck murmuring in her ear, \"I call dibs on any leftovers.\"\n\n*****\n\nJosh continued to limit her night time feeds, and Peri found at her ten-week check-up that the babies were thriving despite not getting up through the night to feed them herself. The babies continued to gain weight and were alert for longer amounts of time. Despite their early arrival, they were reaching each of their milestones, lifting their heads and rolling during their playtime on the floor of the nursery. She had to admit that she felt better and able to enjoy those special moments after a good night's sleep. Josh and Dante both made the time to go with her to every doctor's appointment whether it be for the babies or herself. \n\nJosh asked a myriad of questions during these visits and had reluctantly agreed to a dose of Depo-Provera when she was finally cleared to resume having sex so that she didn't immediately become pregnant again. The doctor explained this would allow her body to heal more completely before risking another multiple pregnancy. \n\nSince the wedding, Dante had slept with them each night and had practically moved into their bedroom. Dante's presence had seemed just to be accepted by Josh, who didn't seem concerned at all that she and Dante were becoming more intimate. Peri felt like he encouraged it at times and this confused her because he had a jealous nature even where the babies were concerned.\n\nIt was after the ten-week appointment with the paediatrician that Peri and Josh drove back to the house by themselves. The babies and nannies travelled in a van with a driver and at Josh's insistence, she travelled with him. It was one of the few times they were truly alone because Dante had stayed in the city to attend a meeting, and she took the opportunity to talk to Josh about how he felt about all the changes in their lives since the babies arrival and the visit from his father and uncles. \n\n\"Now that the doctor is certain that there is no risk of infection, and we can start Umm,\" she hesitated over the words she wanted to use. Having sex seemed so clinical after hearing the doctors refer to it like that and making love seemed strange and not complete enough for what she was referring to.\n\n\"Fucking?\" Josh asked, a small smile curling his lip.\n\n\"Well, yes, that,\" she gave a small laugh. \"I'm a bit worried it won't be the same. I mean three babies came out of that little tunnel, and even my belly hasn't returned to normal after all the stretching. What if...\" she left the words hanging and looked out of the window.\n\n\"You heard the doctor, women's bodies are amazing when it comes to healing after such a trauma as giving birth to triplets naturally. If you keep up with the exercise program the physiotherapist gave you everything will be as it always was,\" he reassured her reaching over and placing a hand on her thigh.\n\n\"Josh what about Dante?\" she asked quietly.\n\n\"He won't notice any difference he's never been there before has he?\" Josh took his eyes off the road to look at her. \"All I've seen is a bit of kissing and fondling, it's hardly what I'd even consider foreplay,\" he chuckled.\n\n\"No, not that far,\" she said immediately defensive.\n\n\"I sense a but in there, it's okay you can tell me,\" Josh said. The truth was that at the wedding he had turned a corner and come face to face with several realities he hadn't wanted to contemplate. One was seeing Dante and Peri in intimate situations. The days following that initial letting down of his guard he had watched them together, even encouraged them to be together and found that he liked the voyeurism it afforded him and the different view of his wife's body and how it reacted to intimacy.\n\n\"It's a little embarrassing but in the mornings when my breasts are so full if he,\" she paused but wanting, to be honest, went on, \"if he licks or sucks a nipple I feel like I could orgasm. Sometimes I'm not sure I don't in a small way if the milk lets down at the same time.\" She rushed the words and blushed looking down at her hands.",
        "\"You should tell him. He would love knowing that,\" Josh chuckled. \"He's obsessed with your breast milk. I think he'd have it in his morning coffee if you let him.\"\n\n\"Josh!\" she looked at him hardly believing the words had come from him. \"How are you so okay with this when you didn't even want to talk about my trial because you couldn't picture me with anyone else?\" The question that had been bothering her the most bubbled its way to the top of her thoughts.\n\n\"It's taken me some time to wrap my head around it. I knew he loved you but would never cross that line before Lio died. It became more obvious after though,\" he took his hand from her leg and scratched his cheek in thought. \"I trusted you both implicitly and knew nothing would come of it but then with Papa's decision and the expectations on three of us; I had to change my thinking.\"\n\n\"Dante's in love with me? I mean I knew he loved me but, in love?\" Peri asked confused. She had assumed that like her, Dante was making the best of the situation.\n\n\"The way he tells it he fell in love with you at that first lunch when you told that story about how we met and started dating,\" Josh said easily.\n\n\"I had no idea,\" she shook her head. \n\n\"Being able to share you is something he has wanted for a long time, that's why he moved into our room the night that we got back from the wedding. Speaking of which we really should look into a custom made bed just for some extra room,\" he mused.\n\n\"I am having trouble understanding how you are so okay with all of this and what happens now. Now that we can resume,\" she paused again and murmured the word \"fucking\" making him chuckle. Now that she had started talking all the difficult questions she had been worrying overcame spilling out.\n\n\"It's taken time for me to be okay with it and if it were anyone but him, even if Papa had told me it was one of the others I mightn't be as okay with it as I am. Dante and I bonded, really bonded over the last six months with everything that's happened. We know each other better than anyone else except possibly you. We lost our other halves and found each other I guess,\" his voice trailed off, and they sat in a few minutes of silence as they each thought about what he had said for different reasons.\n\n\"Would it help to know that I have enjoyed watching you with him,\" Josh admitted. \"I never been much of a voyeur before, even porn didn't hold a great deal of fascination for me because there were always Kept to play with. With you though it's different and the fact that I know he loves you almost as much as I do helps. That first morning, in the suite I could see the reflection in the mirror from the bed. I could see your face and your reactions in a way I can't when I am in the moment with you.\"\n\n\"We didn't do anything,\" Peri said quickly. \n\n\"No, but that was the beginning when the awkwardness seemed to slip away from the two of you, and I saw it. I not only saw it but I liked it in a way I can't explain. D. understands. It's how he's been feeling for a while,\" Josh admitted.\n\n\"You've talked to Dante about it?\" Peri frowned. \n\n\"He talked to me, he doesn't want to push too hard before I am ready,\" he gave a soft laugh. \"He would have left our bed and gone back to his guest suite if I'd asked him to.\"\n\n\"The difference for me is that I'm in love with you, you're my husband and the one I wanted to spend the rest of my life with,\" Peri said with feeling.\n\n\"I know this is more than you expected or wanted when you married me. Even knowing my family, it was not in my vision for the future either but I want you to love him too. I am your husband and always will be, but there is room in our lives to include him. In a way, I am enjoying this three-sided relationship with someone I know will love you and look after you the way I would when I am not there. More than that he will treat our children as his own and any future children will become ours,\" he said surprising her.\n\n\"What do you mean?\" Peri looked at him.\n\n\"The birth certificate of all your children will carry my name and ensure their place at the next table, but if our lives continue as they are, then the true paternity could go either way,\" Josh said sounding far more comfortable with the situation than he was. He knew it had to be and that both Dante and Peri held back from acting on their growing feelings because of him.\n\n\"You're okay with that?\" Peri was incredulous and not sure that she was okay with the idea of it.\n\n\"I have had a different upbringing to the one you and most people we know had,\" he said seriously. \"I've accepted that Dante and I are now inextricably joined both professionally and privately. It is me though who remains in control. I will be the Chair of our family not only in the wider sense but our home as well. You may think of him as a second husband, but it is me that you vowed to love, honour and above all else obey.\" His voice had taken on that demanding tone she knew so well, and she realised that this sense of control over his world and the people in it was how he was so accepting of her relationship with Dante.\n\n\"I understand,\" she said softly. \"I did promise all those things when I chose to marry you and accept everything that came along with you because I love you, and you are mine, forever and always.\"\n\n\"Forever and always,\" he smiled and placed his hand on her leg again, squeezing her thigh. \"I'm glad you talked to me about it. I have been waiting for you to start questioning the new situation.\"\n\n\"You were?\" she looked at him.\n\n\"Yeah, you need to question everything. It's what makes you such a good researcher. It's also how you deal with the things that worry you and keep you awake at night.\" He considered whether this was the right time to bring up a question of his own. \"You haven't had any nightmares to keep you awake for a long time, are you coming to terms with what happened?\"\n\n\"It's in the past, and I barely think about what happened now. With the babies and the house and you and Dante filling my world. It's the quiet times when I have too much time to think that I get scared. It terrifies me that one day she will be released and have twenty or however many years of built up hatred toward me. Worse than that even is what if she goes after one of the children and not me? They won't know who she is or that she would mean them harm,\" her voice rose with her rising fear.\n\n\"She's not coming back Peri, not ever,\" Josh reassured her. \"I promise she will never be anywhere near our children.\" At that moment, he made the decision he had been putting off. He had solved the enigma and was considering his options but hearing the genuine fear escalate in Peri's voice had made him think about the safety of his children. He knew what he had to do now. \n\nPeri heard the tone of his voice and saw the darkness of his expression and let the conversation drop as silence descended on them once again.\n\n\"Josh, will we have to move to the farm when your father hands the table over to you?\" she asked.\n\n\"No, we will create our table our way,\" he said bringing his thoughts back from the dark place they had lingered. \"We will probably stay where we are and wait for some of the surrounding lands to become available. There is no rush Papa won't retire for years yet; this is just the beginning. All of the new table members will need training. No one else has even been told that the time has come to start the changing of seats.\"\n\n\"I guess you will get that airstrip you wanted,\" she said. \"And I will get a bigger and better library if you build an Athenaeum.\" She considered a few of the other things she had spoken with Antonia about recently. \"Then I could turn the library into my workspace at home. I imagine as time goes on we'll be seeing a lot more of Tarsia and her team.\"\n\n\"There's an airstrip not too far away that Papa has been using. I am thinking a helipad,\" he looked at her and smiled widely. \"Let's leave any future planning until after the holidays when everyone has been told that the next table is being formed. Ben still believes he is heir apparent. The twins also have been working toward the Chair and Oracle positions. Romey more so than Jules I expect but I don't want to do anything until they've been informed of their future roles.\"\n\n\"I hadn't even thought of that, I'm sorry, Josh. It will be hard for them, won't it,\" she said thoughtfully.\n\n\"I don't think so, all of the roles are valuable, and honestly I think Ben will be relieved that Emily will stop killing herself trying to have more children. He's a good man, and he will support me wholeheartedly. Jules will too I imagine. Romey may have a bruised ego, but I imagine whoever he works with will manage that,\" Josh voiced his thoughts about how he believed his brothers would take the news of his leadership.\n\n\"What about Carlo?\" she asked. \n\n\"If Carlo can ride horses or drive big cars and bikes he will be happy,\" Josh said. \"They aren't cruel Peri. My brothers will all work to their strengths and interests. It just seems that the biggest control freak won the chair this time,\" he chuckled knowing that was what she used to call him before they fell in love.\n\n\"Then they are definitely playing to your strengths,\" she grinned.\n\n\"Speaking of which now that you are recovering, and the babies are thriving, we will need to look at your feeding schedule again. With two husbands to please and a sassy attitude to correct I don't want you getting to the brink of physical exhaustion again,\" he said. \"We have nannies and housekeepers for a reason and next year you will need to be checking in more regularly with your team at work.\"\n\n\"But I,\" she began to argue and stopped herself as he took his eyes off the road to give her a look. \n\n\"You will be even busier next year, and you know it. You are still feeding every three hours during the day you can't sustain that, not with three of them. Expressing takes a fraction of the time and will ensure your supply remains as abundant as it is now,\" he reassured her, having asked the questions of the doctors. \"I think we should reduce it to three times a day where you take the time to feed them. That doesn't mean you can't have all the cuddles and playtimes you enjoy now just that you have time for the other things we talked about like keeping your husbands happy.\"\n\n\"Husbands,\" she repeated the word. \"I'm only married to one of you. I think you want to marry Dante more than I want a second husband to please.\"\n\n\"That sassy attitude being corrected is another one of the reasons you will need more time away from the nursery,\" he said seriously. \"I think I would enjoy watching D. punish you as much as I enjoy doing it myself,\" he said in a strange voice that made her look at him. \"Just to dispel any further doubts you may have about me enjoying watching you and D. being intimate with each other,\" he picked up her hand and placed it on his crotch. Peri's eyes widened feeling the semi-erect cock beneath her fingers.\n\n\"Maybe,\" she said softly, her fingers beginning to massage his cock through the material of his pants \"We should have a small ceremony, like a handfasting ceremony to make it official then. That way we could show that this is something we want rather than something we just accept. I've felt awkward as if I am betraying you, especially when he sucks on my nipple and makes me want to orgasm,\" she felt his cock jump under her hand at the mention of being with Dante. \n\n\"You don't feel that way now that we have talked do you?\" Josh asked.\n\n\"No, but if you want me to submit to him the same way I do you and accept punishment from him for being cheeky, I think maybe something like that. Remember when we went to the chalet for the weekend, and you gave me the necklace to help me understand what is was that you were asking me?\" She asked knowing that without it, she may not have been as open to everything that happened that weekend.\n\n\"I wanted to put you at ease and have you be open to the lifestyle I wanted with you,\" he explained answering his question at the same time. \"Ah I see,\" he murmured as they crunched up the gravel drive behind the van which turned to stop in front of the house to unload its precious cargo while they continued to the garage.\n\nAroused and not wanting to extend his need to possess her any further he stepped out of the car and walked purposefully around to her side as she stood up and closed her door. His hands curled around her upper arms, and he pushed her back against the closing car door kissing her roughly and pushing his hard cock against her belly. \n\n\"You're mine forever and always, first and foremost,\" he growled as he pushed her down to her knees before him. He fumbled with his belt, and she lifted her hand to undo his fly and take out his cock, as he pants slide down his thighs. She licked out at his cock as he continued to talk in a growl filled with arousal that thrilled her more than scared her.\n\n\"Do not mistake my enjoyment in sharing you with D. for more than what it is,\" he groaned as she sucked the head of his cock into her mouth. \"He may act like a husband and treat you as a husband would, but I am your lawful husband. You are mine to keep and mine to share, and I get to dictate who, where and when. There will be no marriage or handfasting or ceremony to make him equal to me in this.\" He began to thrust his hips making her take more of his cock as she sucked him and listened to his tirade. He suddenly pulled her up by the hair and made her face him. \"Do you understand?\" he kissed her then deeply and passionately as she nodded. All the intense desire and passion that had been missing between them suddenly rushed back.\n\nHis hands found the tie to her wrap around blouse and he spread it open looking in disgust at the maternity bra. He unclipped the small triangles that dropped to expose her nipples and was far more satisfied. His fingers pinched her nipples and his kissed her deeply again and swallowed her whimpers.\n\n\"He can't be equal to me, but if it will help you to overcome the hurdle of letting us enjoy you together we can fashion a new decorative collar. A necklace that can signify your availability to both of us,\" his voice was a murmuring growl in her ear as he kissed down her neck and over her chest to lick at her nipple that dripped readily with unexpressed milk. He wasn't as enamoured with the taste as his brother was preferring to play with the large mounds of soft flesh when they were empty. \"You may have two men who act like your husband, but I am Master of this home and family, and you belong to me.\"\n\n\"Yes, mine,\" she said breathlessly revelling in his commanding voice. His hands slid under her skirt and practically tore her panties from her lowering them down her legs before lifting one leg to his hip. \n\n\"So hot and wet as always,\" he groaned as he entered her slowly being careful even though the doctors had given them the go-ahead to resume their sex life. He could see the worry in her face and kissed her again as he fucked her harder buffeting her against the side of the car. \"Fuck,\" he growled into her ear. \"I've waited too long for this,\" he bit her neck to make her cry out even more and give him the thrill of her pain and pleasure.\n\nPeri became overwhelmed with his need to possess her, hurt her, use her and need to know that she was his in every way possible. Her legs shook so hard with her impending orgasm that the one leg supporting her began to buckle, and his hold on her tightened. She loved his intense passion for her and at any other time his aggressive words would concern her but like this, she knew what they meant to both of them.\n\n\"Cum with me,\" he growled breathlessly, and she cried out as his teeth sank into her neck again. The garage filled with the noise of unadulterated pleasure, and together they collapsed to the garage floor Josh pulling Peri into his arms, looking up at him she placed a hand on his cheek and accepted the kiss he gave her.\n\n\"I get it,\" she whispered, \"I understand now.\"\n\n*****\n\nThe week before Christmas, the Donati triplets had turned three months old. Peri had had to face some hard truths about herself in the last month. Mostly that she wasn't superwoman, and she couldn't do it all by herself, and she didn't need to. Josh had not negotiated his decision to begin dropping the amount of feeding time she spent in the nursery every day. He employed more staff as visits from his parents and uncles were now commonplace, often with them staying overnight in one or both of the guest suites as well as the rooms upstairs.\n\nPeri spent a small amount of time rearranging the library and converting it into her personal workspace, which pleased both Josh and Dante. Dante more so because it meant she was preparing to return to work at least in some capacity next year, and he had missed having her so close during the day.\n\nBoth he and Josh had been handing over the day to day running of their business to the managers they had installed over the last six months or so. Consistent and often impromptu meetings with their father and uncles were becoming draining but using each other for support and as sounding boards, they were determined to do whatever it took to take their places as the leaders of the new table.\n\nOver the last two weeks, Dante had given Josh and Peri the space to renew their intimacy without him being too much of a third wheel. This was not to say that he wasn't still affectionate and engaging in some form of foreplay and teasing with Peri, but he hadn't entered the playroom with them or interrupted a moment of intimacy. In short, he hadn't fucked her yet, and his frustration levels were rising as even the Kept he had seen on occasion to vent that frustration, no longer satisfied his need.\n\nAfter they had been for the babies twelve-week visit to the paediatrician Dante had led Josh and Peri up to Lio's apartment to see what he had done with it while the nannies took the babies to visit Andie and Lucia.\n\n\"I didn't realise you had decided to do anything with it yet,\" Josh said frowning not liking surprises from those he was closest to.\n\n\"Of course, you can redecorate as the children get older, but there is enough room here now for a dozen little Donati's to sleep, eat and play with their nannies when their parents have to be in the city,\" Dante said spreading his arms wide as they walked into the huge apartment. Noting the child-friendly d\u00e9cor and furnishings, Josh and Peri were surprised by his announcement. It remained a fully functioning apartment with kitchen, living room, and bathroom facilities as well as many rooms to be shared by children and nannies.\n\n\"Twelve babies?\" Peri asked in surprise. \n\n\"There were twelve in my family why not ours?\" he asked.\n\n\"More children most definitely but twelve?\" she looked at the two men with wide eyes.\n\n\"You don't have to have all nine at once,\" Josh chuckled. \"I do believe Lio would have liked this. Thank you,\" he embraced his brother patting him on the back knowing it would have been hard for him to let go of Lio's presence in this space. \n\n\"Your home has become mine, and now mine becomes yours, are you ready for the second part?\" he asked excitedly.\n\n\"Lead on,\" Josh chuckled taking Peri's hand and following Dante up the internal stairs to his apartment. The internal layout had changed only slightly at first glance with the enormous living area now in an in an L shape curling around the dining room where an office area had once been. Both apartments were vast taking up the entire floor of the building and both had far more rooms than anyone would need unless from a large family. The d\u00e9cor seemed to have changed slightly as well with some new furnishings and detail to the walls and ceiling, \n\n\"It has a very nineteen twenties Art Deco style to it now,\" Peri said looking around. \"Great Gatsby almost in its splendour. It's amazing,\" she smiled. Dante grinned like a kid showing off new toys and led then down past several guest bedrooms on one side of the hallway. A large bright window stood at the far end of the new hallway. ",
        "The bedroom that they would share here was very similar to the one at the home. With the bed at one end looking out of a glass wall to the end of the lap pool and small patio and beyond that the city skyline. The view was breath-taking and being up so high there was no need for the privacy that the small courtyard afforded them at home. The only people to see into this room would be the ones using the lap pool. \n\n\"Ah yes, this is the type of custom made bed I wanted for us at home,\" Josh said flopping onto it and sighing. Peri turned to look at it properly and realised it was probably as wide as two double beds side by side if not even wider.\n\n\"Being all cosy together is great n winter, but not so much fun in summer,\" Dante agreed. \"So now we have a city home and a country home. Especially seeing as Papa approves of the Athenaeum we have already built here I thought why build another out there when we can live between the two homes. The best of both worlds.\" He watched Josh carefully to gauge his reaction. \n\n\"Makes sense I suppose. For the short term at least before the handover. There will be some difficulties sharing the Athenaeum with Peri's team initially,\" Josh seemed to be thinking it through without fully committing. \"Even if we use this one, it might be good to have a more private formal place out at the country house. That will be where the gathering takes place every year after all. Still, I imagine we will have to be in the city fairly often, so this home is only missing one thing that I can see,\" Josh's lips curled up in a malevolent grin at Peri.\n\n\"Follow me to our secret gentlemen's club,\" Dante smirked. Again in a similar layout to the one they enjoyed already, the bathroom led into a large walk through robe. The space seemed to end there but Dante pressed on a small panel on the wall, and one of the floor to ceiling mirrors slid sidewards to reveal another room.\n\nTwo large burgundy leather chairs with foot stools sat before a fireplace that was beginning to glow with a subtle amber light. It was artificial, but life-like and worked in the space. Each wall was lined with timber panelling and highly decorative display cases. The room was warmly lit with a golden glow from wall sconces that threw the light upward rather than down illuminating the high ceiling that supported a series of ropes and pulleys that had been installed in such a way as to add to the decorative effect rather than detract from it.\n\n\"This is quite an ingenious way to disguise the cross,\" Josh walked to the wall behind the chairs and stroked over the wood noting the notchings but not understanding how it might work. \n\n\"The restraints are retractable,\" Dante said raising his hand up to picture rail above it and pushing a piece between two seams. Josh had to admit was he impressed and went to inspect the display cases before taking a seat in one of the chairs.\n\n\"What other devilish designs do you have in this room?\" he asked looking up at the ceiling. \n\n\"I have some things you mightn't have seen before but first, if I may,\" he came to sit beside Josh and guided Peri to perch on the foot stool in front of him. \"I love you both, and I don't want to cross any lines or risk the bond the three of us are creating in anyway. Josh, I have taken your advice on board and realise that you are being asked to give up a lot to include me so fully in your life.\" He'd rehearsed this little speech in his head for over a week now. He turned to Peri, who watched the brothers as they looked at each other as if they could read the others thoughts.\n\n\"You're at a disadvantage here being that as brothers being placed in a unique situation we have talked about this on occasion. Josh knows how I feel about you and he knows me well enough to trust me with your submission. You don't have that advantage of thirty years of knowing the type of man I am so,\" he stood and took a velvet case from a small draw in one of the display cases. He opened it once he had sat back down and held it up towards her. Peri looked from his face to the dazzling necklace in the box.\n\n\"I'm in love with you, and I crave you. I want you in every way possible but most of all right now, I want your trust and your submission,\" he said earnestly. He watched as her eyes flickered to Josh's and back to his own. \n\n\"If I accept this and wear it, I would obey you instead of ... rather than,\" she fought for the right words.\n\n\"As well as, Josh,\" Dante finished for her. \"He already has your submission. He no longer needs the props and cues. He has your complete trust. Now I am asking you to trust me as well. I want this, more than you possibly know, but I would never force you or take advantage of our unique circumstances.\"\n\nJosh said nothing watching the exchange and the emotions play over Peri's face. He knew she would agree. He knew she had similar feelings. He imagined hers were more curiosity than desire, but it amounted to the same attraction and need for fulfilment. He kept his face passive showing no emotion letting them work through this on their own. He had shown her that she belonged to him first and foremost, and he believed she understood that, no matter what happened between them all now.\n\nPeri knew Josh was watching her and that he wanted this for his brother. She also knew from talking with him over the last week or so that he had developed a real erotic pleasure from seeing them together like this. She slipped from the footstool to her knees and tilted her face up to Dante's.\n\n\"I want this too,\" she said quietly. Picking up the necklace from the box she handed it to him and swept her hair up off her neck. \"I do trust you to keep me safe and protect me from real harm.\"\n\nDante swallowed hard and took the necklace from her fingers placing it around her neck. Keeping his hands on either side of her neck and jawline be brought her face to his and kissed her deeply savouring the moment she gave him her submission as he held her like that for a long time. Finally, he released her and let one hand trail down over her breasts. He reached the bottom of her blouse and lifted it off her. \n\n\"You fed the babies at the hospital before we left,\" he said as if reminding himself and reached around her to undo her bra. \"Magnificent,\" he smiled and caressed the now naked breasts. They weren't leaking but still felt full as he weighed them in his hands. \"I've installed a breast pump in here for if it is ever necessary,\" he turned his head to speak to Josh. \"I imagine you are going to keep her pregnant and breastfeeding for quite a few years,\" he grinned.\n\n\"That's the plan,\" Josh nodded. \"I don't have your fondness for breast milk, though, so the pump will come in handy. Help yourself, though; she told me that she almost orgasmed once just from you sucking her nipple,\" he chuckled as Peri's face flamed with embarrassment.\n\n\"How very interesting,\" Dante looked at her and lowered his head to her breast his fingers idly playing with her other nipple. \n\nThe humiliation of the moment with Josh watching and Dante finally doing more than flirting and petting her all merged to create heat in her unlike any other she had experienced. Her breath shortened and she arched squirming her ass down on the footstool where she sat once again. As if sensing she was highly aroused Dante bit down on her nipple enough to make her feel it and pulled it away from her body stretching it out as he did the same with his fingers on her other breast. She whimpered loudly, and he let them go, lashing out with his hand to slap them before lowering his head to the other nipple while his fingers worked the one still wet from his mouth.\n\nHe enjoyed the taste of her milk and had been craving this opportunity to drink from them properly rather than the quick flirtatious licks or a soft rapid suck in the morning as they woke. Those tempting tastes of her had brought about what Josh referred to as his obsession. It was more of a fetish than an obsession in his mind, though, and he was glad it was a point of difference between them. He hoped she wouldn't lose her milk when she fell pregnant again.\n\nHer whimpers and breath had become ragged as she struggled to sit up before him while he enjoyed taking his time to satisfy his need. He could feel the rush as her milk let down and her body quiver as he continued to suck more of her nipple and breast into his mouth. When he pulled his head back the second time, she came, her body shaking as his arms wrapped around her holding her upright. He kissed her then sharing his breath with her as she came back down to reality. \"That was pretty amazing, I didn't even have to touch that baby maker between your legs,\" Dante murmured hotly in her ear making her smile softly and blush.\n\nJosh chuckled quietly to himself. He needed to let them discover each other this first time, and he had already said enough. His cock twitched as he watched them kiss again, it surprised him how hot he got watching the two of them together. He watched as Dante pulled her slowly from the footstool and turned her around to face it. \n\n\"You've made a mess of my brand new leather, clean it,\" he pushed her head down gently making his meaning clear. He wasn't overly rough and was holding back until he was clear about her limits but knowing Josh as he did and from the talks they had so far, he was fairly sure she was a pain slut. He just didn't know how much of a pain slut she was yet. Pleased that she was doing as he asked he began to remove her skirt and soaked panties.\n\n\"Mmm,\" he groaned slapping her ass as it came into view and noting the way his handprint stained the white complexion beautifully. \"Does she like an ass fucking?\" Dante asked Josh conversationally making Peri whimper.\n\n\"She used to but it's been almost a year, it's probably like virgin territory again,\" Josh chuckled knowing she could hear him. \"Probably a bit early for a double but something to keep in mind.\"\n\n\"Something we can work on together then,\" Dante was enjoying having his brother watch this first encounter more than he had thought he would and Josh himself seemed comfortable with what was happening. Their concern lay with Peri as they always knew it would. He spanked her several more times enjoying the sounds of her whimpers.\n\nDante stood and stripped, it seemed odd even to him at this point, but it wouldn't always be this way, and the object of his most recent fantasies knelt before him. He didn't want to spend the time using any of the specialised equipment in this room when what he wanted right then was to feel her mouth on his cock and how it felt to fuck her.\n\nTaking his seat, he turned her back toward him, and she crawled between his legs willingly seeing what he offered. He stroked her hair and let her explore his cock with her lips and tongue as he watched her avidly.\n\nSurprising herself, Peri moved between his legs with little hesitation. She bent over the thick veiny cock, noting the differences to Josh's smoother more beautiful cock. She used her lips and tongue to explore the hot hard shaft and wrapped her hand around the glistening stalk as he lowered her head further to his balls. She took her time making sure she gave every tiny part of him attention before bringing her head back to the tip. His hands had remained gentle on her head and hair, and she smiled learning the differences between the two men in her life.\n\nKissing the tip of his cock she stretched her lips over the swollen mushroom head and fluttered her tongue softly beneath it making him elicit a groan of pleasure. His hands wound into her hair, and he gently encouraged her to take more, moving her head slowly up and down until he had filled her mouth and she felt like she might gag. \n\nShe tried her best to move with a rhythm and pace that allowed her to breathe and pay attention to the swollen purple glands at the head of his cock while still taking as much as she could of him into her mouth. His cock was thicker than Josh's, and she was grateful that it did not have the same length. Though it wasn't much shorter and she found herself swallowing around just the tip as she pressed her head down taking all of him. Pulling her head back to lick and flutter her tongue under the glands she would look up with teary eyes to find him gazing down at her and a low groan escaping his lips. \n\nHis hand wound tighter into her hair, and his hips began to move, as she began to quicken her pace keeping her tongue flat and her lips tightly suctioning around the thick shaft of flesh. He groaned loudly, and he pulled her head back leaving long strands of spittle hanging between her lips and his cock. Dante took long moments to drink in the sight and compose himself. He lifted her up to straddle his lap her knees brushing against his thighs as he pulled her into position.\n\nPeri was surprised with the ease at which Dante was able to lift and position her from his sitting position. She found their bodies melded together perfectly, and she sank onto his cock slowly relishing the feel of the thick hard shaft penetrating her. His hands went to her breasts, and as she slowly began to rise and fall on him, then he bent his head to suck a nipple into his mouth.\n\nThey moved together totally enthralled by each other and what they were feeling and forgetful of the third person in the room who sat quietly watching them. Neither was aware of the fact that his pants were open, and he fisted his cock as he barely blinked watching the woman he loved in the throes of ecstasy with his brother.\n\nUnable to help himself Josh stood and went to her, turning her head he offered his cock as she whimpered so beautifully from the attentions of his brother. Her eyes focused on it, and she dropped her jaw opening her mouth wide as she gasped for breath. Josh threaded his fingers into her hair and pulled her head forward as he pushed into her mouth.\n\nDante felt the change of pace and saw what was happening his eyes glued to her pretty mouth as she rose and fell on him in unsteady bounces. Grasping her hips, he steadied her pace and thrust up into her as he continued to watch her take Josh to the balls and listen to her gurgling whimpers. Her thighs shook against his legs, and he bent his head to her breast again taking a nipple between his teeth roughly, tasting the milk there and stretching it out from her body. His hands moved to her ass lifting and dropping her onto his cock. \n\nShe came first, her squealing cries muffled as Josh held her head on his cock and savoured the vibrations from her throat. Dante groaned as her cunt gripped and pulsed around his cock. The sight and sound of her mixed with the trembling of her legs and her cunt milking his cock undid him, and he threw back his head and roaring loudly as he pumped his cum into her. Josh lasted only a few minutes longer as she watched the other two topple over the edge into the adrenaline-fuelled highs of new lovers. He thrust one last time holding her head in place and growled, \"Swallow it.\" His voice was hoarse and deep as he groaned and filled her mouth. \n\nPeri drained every drop of the cock in her mouth, feeling the now gentle hands of the man beneath her caress her breasts and ribs tenderly. She smiled as Josh staggered back to his chair and sat heavily still watching her and she turned to look at Dante, who had a bemused look on his face. With great care, she lifted herself off his softening cock and slid to the floor at his feet. Looking up at him through her lashes, she licked out and began to clean his cock with long, broad strokes of her tongue.\n\nDante was in heaven as he watched the woman at his feet caress and suck his cock feeling his arousal grow again. He looked over at Josh with a lazy smile. \"That was amazing, and we haven't even got to the good stuff yet.\"\n\n\"Why don't I have the driver bring the family to test out the city home for the night,\" Josh said returning the slow smile and you can show me how this room really works, breast pump and all.\"\n\n\"That is exactly what I was thinking,\" Dante ran his fingers through Peri's hair savouring the moment he became a real and intimate part of this relationship. They were three now, in every facet of their lives and it felt better than he could have imagined.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "threesome",
        "breastmilk",
        "submission",
        "family",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-20"
}