{
    "title": "Bloodlines Ch.02",
    "pages": [
        "Garth awoke to a world without pain, white ceiling above as if mocking him with memories of the hospital. This time he was in his own bed, no IV or beeping monitors to be seen or heard, just a jumble of thoughts, feelings and memories. Last night was blurry in his mind, the steep learning curve and all the new impressions crashing into his consciousness.\n\nLooking up at the white ceiling, Garth started organizing his thoughts, trying to make sense of all that had happened, all he had learned, and even more dauntingly, all he had yet to learn. His thoughts, however, kept circling back to a pair of green eyes with tiny orange flecks, looking up at him as he came again and again into her mouth.\n\nErica had gone from shy and timid to aggressive and forceful, pouncing on him like some predator as she all but attacked his cock the night before. Garth tried to steer his thoughts back to more productive actions, but then his cock started hardening, joining the argument. Sighing, half in resignation at his own hormones, half in pleasure at what was to come, he drew the covers aside, gripping his now rock hard manhood in one hand.\n\nAs he started pulling the foreskin back, precum seeped out, making his entire head and soon his hand slick and sticky. He tilted his head back a little, closing his eyes and increasing his pace, replaying last night, only this time focusing on Alyssa and Erica, seeing them anew in his mind. He rapidly approached his climax as he remembered the scene from the restroom, the tight sensation as the head of his cock had pushed past Erica's larynx, going all the way down her throat. He grunted and stiffened, cum shooting from his cock in long, thick ropes, hitting his chest and stomach. He sank back down on his pillow; his mind playing Erica's last words on repeat: \"I'll be seeing you!\" Garth could not help but wonder at the implication and unspoken promises.\n\nHalf an hour later, Garth was walking out of his bathroom, toweling his hair dry. He had to cross his living room to get to his bedroom to dress, and distracted as he was, he completely forgot that he was naked. As he walked across the soft carpet, a flash of something caught his attention, half seen off to the side. He turned quickly, seeing the windows of the apartment across the yard, though he could not see anything; the curtains were drawn back but no one was in sight, the room dark. Shrugging it off, he walked into his bedroom, dropping the towel, searching for fresh clothes.\n\nA few minutes later he was almost dressed, though all his pants were used. He had forgotten all about laundry day the day before. Judging his pants from last night to be clean enough, he pulled them on; entertaining the notion they might be lucky with a smile to himself. As he sat down with a simple breakfast of cereal and coffee, he reached a conclusion: He needed to know more. He quickly finished his breakfast and grabbed his coat; it was time to head for the library.\n\nIt turned out The Compact was as much about conspiracy theory as history. Two hours of research and a dozen or so books scattered across his desk had started to form a coherent picture. Though most modern historians agreed it was fiction, the story went pretty much as his uncle had told. The actual descriptions of the powers bestowed on the two brothers varied from source to source, though all agreed it was one mental and one physical. Most sources also noted that this was almost certainly fairytales invented as the stories were passed from person to person over the years; the oldest written source was penned two hundred years after the alleged conflict.\n\nGarth sat back, trying to imagine the effort it had taken to subvert history so thoroughly across centuries. This as of yet nameless organization had apparently gone to great lengths to keep the truth obscured. Quite impressive, he had to admit, and not a little frightening. Luckily he was, if his uncle was to be believed, all but a member already.\n\nJeff had suggested he also look at the various newspapers, both reputable and those less so, looking up certain dates and events. As he scanned through the archives, another hour spent searching, he quickly saw the schism; there were a number of events that regular newspapers reported as accidents, while the seedier ones saw conspiracy and ill intent. Judging from what he had learned over the last day or so, Garth was inclined to believe the tabloids more, seeing the hand of the organization in the mainstream media.\n\nRegardless of the relative wealth of information he found, he was still unsatisfied; there were too many unanswered questions. What could he do, what were the limits? Was there any practical application besides sexual play? He hoped his uncle's books might help illuminate, though Jeff made it quite clear he was to read the 'official' version first. He felt the need to stretch his legs a little and decided to walk the shelves a bit, looking for books that might be useful.\n\nThe library was huge, the biggest in the city by a fair margin, which made sense as it was next to the college and several large research institutions. There were several floors and tens of rows of shelves on each floor. The entrance opened into a massive gallery, open all the way up to the ceiling. Each floor stretched all the way to the back of the huge box-shaped building. This, along with the notoriously malfunctioning air condition led to the popular nickname 'The Oven'. It really did resemble an oven, each floor a baking tray.\n\nCurrently Garth was up on the third floor, where books on history, folklore and the likes were. In between the shelves tables were scattered almost at random, some singly, others in groups, making for study areas all around where one could choose to sit alone or several together. Making noise was of course frowned upon.\n\nAs he browsed the shelves, he came across one such lonely table, the surface covered in large tomes, a young woman scribbling away in a notebook intently. Garth spotted her through an opening between shelves, seeing her from the side a little way behind. She had long, straw-coloured hair tied back in a ponytail, thin-rimmed glasses resting on her nose. He could not see her face well enough to judge if she was pretty or not, but her nose certainly was! And her body; it was spectacular. She looked more like she was going to the gym than a library; tightly fitting sweatpants covered her shapely legs and a loose tank top showed off her sports bra underneath as it hung from bare shoulders.\n\nGarth studied her for a few minutes, looking up and down her figure, quietly enjoying her shape, wondering if she was a student at his college. Tearing his eyes away, he moved stealthily back along the shelves, resuming his search for something interesting to read. He was not sure why he bothered being careful, though he suspected he on some level felt guilty for ogling her.\n\nHe found a few volumes that looked interesting shortly after, bringing them to his own single-table cubby several rows over. As he sat down, he felt a hard lump in his jacket pocket. It turned out to be the box with capsules of powdered St. Johnswort Jeff had given him the night before. An idea forming in his head, Garth smiled as he took a capsule, washing it down with some water.\n\nMarveling at the warmth as it spread through his body, he tapped the power and quested out, again seeing a sea of emotions. Where the night before he had the impression of a sea in full storm, emotions crashing and swirling, today it was a calm lake, shallow and hardly a ripple on the surface. There were a number of people in the library, but they were mostly spread out, emotions subdued. A general sense of Focus and Concentration made up the surface of the lake.\n\nFar off, he could sense a patch of stronger emotions, Lust, Arousal, Desire and what had to be Love, though the complex nature made it harder to read. He got a sense of the direction, judging it to be the single table in the far corner of the fifth floor, commonly referred to as the 'Love Nest'. He smiled and let their emotions feed back to himself, feeling his cock lurch slightly.\n\nShifting his focus, he quested out again, this time searching on his own floor, both immediately around himself, as well as towards the back. He was not quite sure, but he could only feel one other distinct patch of emotions close by, in the direction of the blonde girl. Reading her patch, he felt the same Focus and Concentration as from pretty much all around, but also Frustration, a hint of Anger and Resentment slowly brewing. He guessed she was working on some task that was not very welcome, though obviously important enough to overcome her aversion to it. Looking closer, he dove deeper into her imagined patch of emotions and found others; Boredom, Lethargy and other similar emotions. Below those again, he found what he was looking for; Lust, Desire, Horniness and Arousal flowed slowly, obviously contained beneath the layers of emotion above, but very much present, as Garth suspected he would find in most young students if he looked close enough.\n\nStruck by inspiration and a need to do something other than read dusty tomes, he tried reaching out with his influence, gripping it tightly and squeezing it like the night before. He found it a lot easier to do today, squeezing until only a tiny trickle seeped forth towards her patch of emotions. Pulling as gently as he could, he enhanced her Curiosity and Adventurousness, leaving her more potent emotions alone for now. He slowly got to his feet and walked towards her cubby, trying to not look like he was sneaking, but very carefully not making any sounds.\n\nAs he got closer to her, he saw she was scribbling away more eagerly than before, a look of concentration on her face, what he could see of it at least. He stayed behind her to the left, making sure she would not be seeing him in her peripheral vision, but still able to see her entire side. Being this close, he found it easier to modulate his influence, both reading her and influencing her. He started slowly feeding her Lust and Arousal, pulling and prodding ever so slightly. After a few minutes he could see her start to respond; she was chewing on her pencil, twirling a lock of her hair distractedly and generally fidgeting in her chair.\n\nA few more pulls, Horniness and Desire, and Garth was rewarded with a very obvious pokie as her nipple hardened inside her bra. She was clearly feeling it now, her knees closing and opening slowly, her neck flushed and her breathing noticeably heavier. Pulling more, he watched intently as her right hand put the pencil down started moving along her side. Being on the other side, Garth could not see exactly what her hand was doing, but he imagined she was stroking the side of her breast, maybe even twirling a nipple. Her left hand gripped the table as she leaned a little forward in her chair, chest heaving slightly. Garth looked on, both with his mind and eyes, as her entire being thrummed and responded to his power.\n\nThe feeling of power and control was intoxicating, a heady rush as he fed off her emotions, becoming aroused himself. His cock was visibly tenting his pants, straining against the fabric, precum probably making a wet spot. He entertained the idea of pulling his cock out, jerking off there and then. The thought of explaining to the head librarian why her books had cum stains stopped him however. Instead he moved silently up the shelf, finding a hole between books where he could see more of her face and the front of her body. She was indeed very pretty, delicate features and fair skin, no blemishes and very light makeup. He thought she looked vaguely familiar and assumed he had seen her on campus some time, though he had no idea what she was studying or who she was. As he looked at her, his power pulling her emotions constantly, he saw that her right hand had slipped down between her legs, knees tightly pressed together, trapping it there. She was rocking slightly in her chair, both nipples straining against the fabric. Her eyes were closed and mouth slightly open, and though Garth could not hear anything, he could see she was panting.\n\nHe pulled more; drawing her emotions into himself and feeding them back through to her, creating a rising wave they both rode. Losing control slowly, Garth watched as her hand slipped down the front of her sweatpants, the muscles in her forearm undulating as her fingers moved, back and forth inside her pants. Garth could almost imagine hearing the wet sounds as her fingers raced in and out between her swollen folds, his need and desire rising even more.\n\nWithout conscious thought, he did, something, and power washed from him in a giant wave, grabbing and pulling her emotions up in a cascade of red-hot emotion. A shriek escaped her lips as her left hand jerked, sending books and pencils scattering to the floor, her entire body convulsing. The high-pitched shriek died down to a throaty rattle as she collapsed onto the table, left arm hanging limply while her right was still stuck down the front of her pants.\n\nGarth swayed on his feet, having to grab the shelf for support, lest he fall over. His reserve of herbs was gone, burned away in a flash, leaving him feeling strangely hollow inside and exhausted. He felt a rising surge of panic at the thought of what he had done; his control had been completely gone. Was she hurt? Had he hurt her somehow? His erection shrank immediately, all arousal gone like morning dew beneath the sun, only concern and worry remaining.\n\nHe did not approach her however; he wanted to collect his thoughts first. As he stood there, he saw to his great relief that she stirred in her chair a little; at least she was still alive. After a minute or so, she sat bolt upright, a look of panic on her face. She looked around frantically, and Garth ducked hastily to the side, hoping the shelf covered him enough that she did not see him. Shortly after, he heard her chair screech softly as it was pushed back. Garth slowly inched forward, daring to look back at her through the opening between the books. She was on her hands and knees, gathering her scattered writing materials from the floor. Her back was towards him, and there, between the cheeks of her shapely ass, a large wet patch was spreading across her groin, the fabric clearly folding along her lips. Blood flowed back into his cock, all anxiety gone at the intensely erotic sight before him. In a matter of seconds she had her bag packed and was all but running for the door, library books still scattered on the desk and floor.\n\n\"It's called surging.\" Jeff said, somber, stern eyes regarding Garth as he sat across from his uncle. He had gone straight to his uncle's house from the library, not bothering to call and check if he was home, just hoping he would get lucky. One look at the panic in his eyes and Jeff had ushered him inside. \"What you just did was incredibly stupid, incredibly dangerous and incredibly lucky.\" Jeff's tone left no doubt he was less than pleased. \"While technically neither assault nor rape, what you did is a large part of the reason rumors about us persist. And while the police could not officially charge you with anything, I am sure they would have some stern words for you had you been seen.\" Jeff left the implication hanging for a second. \"You are quite sure she did not see you?\" Garth nodded, subdued by his uncle's obvious displeasure.\n\n\"I think you understand the gravity of the situation, but I must insist that you promise me to never, never, do something like this again! Understood?\" Garth nodded again, slightly optimistic at what seemed to be a lessening of his uncle's anger. \"Surging is a thing all of us can do, regardless of the power, both neuropaths and kinticists. Essentially you consume your herb at a much higher rate, thereby vastly increasing your power. For us neuropaths it is of limited use unless you find you for example need to change someone's emotion quickly and violently. As you have already seen, it can create rather dramatic effects when applied properly to a willing partner.\" He winked, continuing. \"However, it is very much frowned upon to do this without explicit consent. Are we clear?\" \"Yes uncle.\" Garth's voice was subdued, though he figured he was in the clear.\n\n\"Good. Let's leave that at that then. If you were not seen, no major harm was done. One incident like this will hardly have an effect on our general reputation, such as it is, and I'm quite sure she'll keep this quiet. I can imagine she was embarrassed quite enough as it was.\" Garth had left out the part about her soiling herself, feeling it did not contribute to the story, but he chuckled a little to himself at the thought. It had been a rush, even though he felt bad as well.\n\n\"Tell you what,\" Jeff said after a few minutes of both nursing their coffee and private thoughts. \"I've been thinking about hiring a new shop assistant. Why don't you come work for me? That way we can spend quiet spells working on your control, and some of my repeat customers know what I am and might be willing to let you rehearse on them. Sound good?\"\n\n\"I'd love to! I don't have any particular job now anyway, the last one did not sit right with me so I quit last week.\"\n\n\"Excellent!\" Jeff beamed. Why don't you come by tomorrow? I open at 10, be there a little after, ok?\" He scribbled the address on a small note, handing it over. Garth smiled his thanks and finished his coffee. \"See you tomorrow morning!\"\n\nThat night, Garth was sitting in his lounge, watching a movie he had seen a dozen times before, only partly following the action; he knew how it ended anyway, and he watched it mostly because of the lead actress. As one of the mandatory sex scenes in movies of this quality played across the screen, he considered pulling his cock out to jerk off to it; her tits really were quite spectacular. His mind was not quite feeling it, though, and he discarded the notion. He watched her tits bounce as she rode the lead actor, fake moans blaring, when he caught a flash of something light off to his side. Turning he saw that the apartment across from him had the curtains drawn back, but he could not see anyone there. As he was studying the interior of the apartment across, he thought he saw the curtains shift slightly, but he did not see anyone. Shaking his head slightly, he stood up and got another beer from the fridge. When he sat down again, the curtains were closed. Before he could wonder too much at the oddity, the fake orgasm on the screen drew his attention again.\n\nAt precisely three past ten the next morning, Garth got off the tram at the stop closest to the address on the note. It was in a seedy part of town, not slum or anything, just not exactly good quality either. It was in an older part of town, a mix of wooden and brick buildings. As he drew closer to the address, he noticed a building that was noticeably better maintained than those around it, the entire front dominated by large blackened windows. A large red neon sign above the entrance read 'Jeff's Place'. \n\nGarth pushed the door open, noticing the heavy wood and iron reinforcements. He was met with a scent of leather, plastic and something akin to disinfectant, an almost clinical smell. The interior was dominated by dark red and black, an expensive looking hardwood floor of a deep brown, polished to a gloss. Just inside the door to the right was the counter, Jeff standing behind it. \"Welcome to my place!\" He beamed, arms thrusting out as if to draw attention to the interior. Garth let his gaze wander around the shop, noticing row upon row Leather and Latex, dildos and butt plugs, things he could not even begin to guess the use for, and at the far back an entire wall of what had to be pornographic movies. It was a porn shop.\n\n\"I prefer the term Erotic Hardware.\" Jeff said, his eyes twinkling in amusement. \"That way I can say I run a hardware store; makes for a lot fewer awkward conversations.\" He was all but laughing as he said it, the joke apparently an old and well used one. \"Pull your chin off the floor and get inside, no point standing in the door!\"",
        "Garth moved inside, his eyes wide as he gazed around the room. \"Just leave your coat behind the counter for now, I'll show you the back room later.\" Jeff beckoned for him to join him. \"Why don't you spend a couple of hours getting to know the place, it's usually quiet in the morning anyway. Once Dave gets here at noon, we can grab some lunch and I'll fill you in on the details. Sound ok?\" Garth nodded distractedly as he looked around the shop, eyes wide. Starting from the front of the shop, there were seven aisles, each with two shelves, packed with any imaginable sex toy Garth had ever heard about, and plenty he had not. A full two rows were packed with what he could only describe as torture devices; restraints, manacles, whips, canes and all kinds of spiky, unpleasant-looking steel hardware. In the middle of the shop was an open area with mannequins displaying select pieces of clothing, all of it revealing one way or another. In addition there was a section of furniture, though odd looking as it had lots of metal rings, pegs and weird shapes. Garth could only guess at their function, though obviously something kinky.\n\nAs he walked around, marveling and blushing, constantly adjusting his lurching cock, he was struck by the obvious quality of it all. Everything was packaged in expensive looking boxes, many of the price tags making his eyes bulge; this was not some dirty back-street porn shop catering to the local perverts, these were items of quality, the craftsmanship plain as a polished steel dildo. Two hours flew by as he wandered around, looking and trying to not blush too much.\n\nAt noon, a young man in his late twenties walked into the store, going straight behind the counter. Jeff waved him over, and Garth joined them. \"Dave, meet Garth, my nephew. He'll be our new shop assistant.\" Dave met his eyes and nodded amiably, a pleasant if noncommittal smile as he greeted Garth. \"Dave, would you mind the shop for a half hour while we grab some lunch and go through some details?\" Dave nodded affirmative, obviously not a man of many words. \"He's a quiet type until you get to know him, but I'm sure you'll get along.\" Jeff said in a half-whisper.\n\nHe showed Garth to a door behind the counter. It led to a hallway that ran the length of the shop, six doors in a row. \"The first door is the restroom, it's not open to customers usually, but exceptions can be made if you deem it necessary.\" Garth nodded. \n\n\"Next is the storage, it goes quite a way back, you'll get to know it soon enough, though.\n\nThis is the break room.\" Jeff opened the third door with a key, indicating Garth should enter. The remaining three doors seemed to be heavier than the first three; the last one had a plaque reading Private, in bold letters.\n\nThe break room was a small windowless room with bright, warm light. A small dining table sat next to a kitchenette and a long sofa against the opposite wall, all in all a typical break room; functional and pleasant in a utilitarian way, with no wasted space.\n\nJeff opened the small fridge and got out a few bottles of sparkling water and a cling film-covered tray of small sandwiches. \"I get these from a local cafe, they're quite good.\" Realizing he was hungry, Garth helped himself to a sandwich, closing his eyes and enjoying the taste. They ate in silence for a few minutes, not wanting to speak with their mouths full.\n\n\"So what do you think?\" Jeff asked once they had sated their immediate hunger.\n\n\"Well, I can see why you were never a popular topic around the house,\" Garth said dryly.\n\n\"Oh, I'm sure your mother made her best effort to keep it quiet, but it wasn't all black and white. After all, your father came by several times to buy, things. But I guess you don't want to hear about that.\" Garth recoiled a little at the thought of his parents having sex. Logically he knew they must have, but that just was not something he wanted to consider. As he shook his head, Jeff chuckled at the look of aversion on his face. \"We'll cure you of your puritan heritage soon enough, I think,\" He said with a smile.\n\n\"So, here's the deal.\" Jeff began, leaning a little forward. \"I want you to tap into your power at all times in the shop. After all, practice makes perfect. For time being, though, don't influence on anyone's emotions, we'll get to that in due time. For now, you need to learn how to single out an individual well enough that you'll be able to do it without conscious thought. Read the customers' emotions and soon you'll be able to feel how your sales pitch is most likely to succeed.\" Garth marveled at the idea, no wonder his uncle seemed to being doing well for himself; knowing exactly how your customers reacted and reading their unspoken emotions was indeed a potent tool in a sale.\n\n\"Every now and then there will be a repeat customer, and quite a few of them know what I can do. I'll see if I can't get some of them to agree to be test subjects for you. I'll let you know when that happens. I also, sometimes 'help' my customers overcome inhibitions in order to make them more amenable to buying what many consider to be taboo items. Keep your senses on the alert if you see me with a customer, watch what I do and we can start practicing based on that.\"\n\n\"I think that's all we need to cover for now, I'm a big fan of learning by doing. Let's go out front and I'll show you how to ring up sales and what's where out there. You finished eating?\" Garth nodded, wiping away a few crumbs and downing the rest of the water. \"I have a small problem though, Uncle. I don't have any herb; the box you gave me is in my other jacket at home.\" \"No worries, I have plenty, just take what you need from my stash for now, I'll show you how to get your own in time.\" Jeff locked the door to the break room behind them, indicating Garth should go on ahead.\n\nThey spent the next ten minutes going over the basics of how to check the price on an item by scanning the barcode, registering a sale, deleting it again and finally how to ring it up and choose payment method, usually cash, though some select customers apparently had tabs, kept in a small black book.\n\nJeff opened the top drawer, pulling out a key attached via a short chain to a huge black dildo. \"This is the key to the bathroom in case a customer needs to use it.\" He waggled the appendage, making it flop back and forth. \"This is just to make sure they don't forget the key in their pocket.\" Garth grinned, imagining someone walking out the front door with it sticking out of a pocket. \"I'll get you your own key for the toilet, storage and break room later today.\" \"What about the other doors?\" Garth asked. Jeff tapped the side of his nose. \"All in due time, I'll show you when you've had time to settle in, so to speak.\"\n\n\"As for herb,\" Jeff opened the second drawer from the bottom; it was filled by small Ziploc bags with white capsules and vials of powder. \"These are capsules I have a local pharmacy make for me. Each has enough St. Johnswort powder to last about four hours of continuous use unless you surge it. They dissolve in the stomach, though it takes a few minutes; so if you want immediate access to it, swallow a pinch of powder as well. Here,\" He handed Garth two capsules, nodding towards a small fridge with bottled water. \"That should last you well into the afternoon, start burning as soon as you feel it, should only be about five minutes at most.\" Just then, Dave walked back to the counter, joining them. He saw the open drawer and arched an eyebrow at Jeff in question. Jeff smiled proudly, \"Yep, he's like me. Guess you're outnumbered now.\" Dave nodded at Garth, obvious respect in his voice. \"Cool, man.\" Garth nodded back and smiled, not sure what to say.\n\n\"Why don't you go back out and hit the shelves for a while, Garth. Just spend some time memorizing what's where, and if you see anything out of place or anything, make sure it's all nice and tidy. We usually get more customers in the afternoon, se we should be seeing more traffic from now on. Usually peaks around five on weekdays, lots of husbands shopping on their way home or to a mistress. Rule number one is to always be polite and never ask questions unless the customer initiates it.\"\n\nGarth wandered around the shop, looking at shelves, straightening the odd item here and there, blushing a little at some, confused by others. He was standing in what he had jokingly dubbed the torture chamber, inspecting what looked like a meat hook with a bulbous end. No idea what it was for, he was turning it over in his hand when a high-pitched voice broke him out of his pondering.\n\n\"Excuse me?\" Behind him was a short girl around his own age. A cute, doll-like face with just a little too much makeup looked questioningly at him. Her long platinum blond hair was tied in two pigtails, reinforcing the doll-like look. \"Yes, how may I help you?\" Garth said as he tried not to look too much at her broad hips or quite large tits. \"Could you show me the butt plugs please?\" Her straightforward tone took him by surprise. \"Ehm, yes, right this way!\" I hope, he mentally added.\n\n\"You see, my boyfriend got me a gift,\" She began as they walked. \"He bought a butt plug for my birthday, and it's just too big for me! I used lots of lube and tried stretching with several fingers first, but I just couldn't get it in. I don't want to hurt his feelings by trading it, so I figured it was better if I got a set of smaller ones to train with.\" Garth almost stumbled in shock at her quite graphic description. He tried not to imagine her stuffing her own ass with her fingers. He failed miserably, and by the time they were at the correct shelf, he had to angle away from her a little to hide the bulge in his pants. She pointed at the biggest Njoy butt plug, a massive plug the size of a lime made of solid steel. \"That's the one he got me. It's just too big, yet.\" Garth stared in shock at the plug, then at her. That was supposed to go up her butt? It looked way too big for that.\n\n\"Ehm... Well... Ah...\" He stammered a little. \"I suppose we could try to find some smaller ones that you could try...\" He trailed off, looking back and forth along the shelf.\n\n\"Might I make a suggestion?\" Jeff's deep baritone came from behind. At a look from his uncle, Garth tapped his power, having forgotten all about it. There were only a few other people present, making the two of them easy to pick out with his sense. Determination and Curiosity wafted from her, undertones of Lust, Desire, Apprehension and a host of others underneath. His uncle was all Confidence, almost as if he was feeling a single emotion. This was his place where he reigned supreme, almost like a predator in a way.\n\nImmediately a multitude of tiny ripples wafted from him, nudging ever so slightly at her. Trust, Adventurousness, Courage and a host of other tiny manipulations. The changes in her were tiny, a slight widening of the eyes, back straightening just a hair, posture a tad more provocative. Garth was humbled; here was a master at work; dozens if tiny adjustments at once, each on its own almost unnoticable, but the sum more and more obvious. Jeff smiled warmly, her mouth opening slightly, two small nubs poking through her top. \"I think this is what you want,\" He said, stretching past her, his arm just grazing her hip, making her jump a little.\n\nHe brought out a straight metal rod about twenty five centimeters long. All along its length were metal bulbs of increasing size like a series of butt plugs set end to end. The last one, closest to a ring at the end was almost as large as the plug she had indicated. It looked to be a single piece, polished to a mirror finish. \"Use plenty of lube and start slow, give your sphincter time to adjust and I guarantee you'll be taking the whole length in no time. When you can comfortably take all of it you'll be ready for the plug.\"\n\nGarth was shocked at his uncle's dirty talk, all delivered in a perfectly natural tone as if discussing how to tie shoe laces or something trivial. All the while he influenced her increasingly, Lust and Arousal prominent now. Garth was sure she would notice his manipulations by now, but she was buying it all, the sale was no longer in question. His uncle was now just sealing the deal and having a little fun with her, likely for Garth's benefit he figured. He watched as Jeff pulled quite strongly on her Arousal as he leaned in, voice lowering conspiratoriously. \"If you have problems getting it in, try lying on your back, knees pulled up. Then masturbate until you are close to orgasm and hold off as you push it inside slowly.\" He made a slight thrusting motion towards her with the rod, almost touching her stomach. \"I guarantee you'll have the orgasm of your life when the last bulb goes in.\" Her knees shivered as she no doubt saw it in her mind, her tongue wetting her lips.\n\nJeff straightened, a pointed look at Garth, as if saying 'Did you see what I did there?' He eased up on the influence as he led her towards the counter, her knees oddly pressed together as she walked. \"Do you have enough lube?\" He asked. She nodded distractedly. \"Very well, so just the rod then,\" He said with a slight question. She nodded, biting her lip. He smiled and scanned the barcode on the box, wiping the rod down with a soft cloth before putting it inside. As he put the box into a nondescript black bag, he grabbed a handful of small tubes from a bowl on the counter. \"Flavored lube, for your boyfriend,\" He said with a wink. She blushed slightly, handing over the money and accepting the bag. As she walked out the door, Jeff leaned over to Garth and spoke in a half-whisper. \"I hope she makes it home before she tries it, did you see how her emotions flared at the end?\" Garth nodded. \"That was all her, I all but stopped pulling once I saw the sale was made. She's a firecracker that one; her boyfriend won't know what hit him.\" He elbowed Garth in the side to emphasize the joke. Garth grinned sheepishly in response.\n\n\"You'll get over it. Once you've been here a while and met more customers you'll start to realize they're just people, and it's just sex. There really is nothing to be ashamed of; it's all a matter of taste in the end. Some people like apples, others like to drink pee. It's just how the world is. As for us, I trust you watched closely?\" He nodded, still a little awed at his uncle's prowess.\n\n\"I did, that was amazing!\" His uncle actually seemed a little embarrassed by the praise. \"It's really not that hard when you've had time to practice; I'm sure you'll make me look like a novice in a matter of months. But, there's another lesson here, can you guess what?\" Garth searched his mind, coming up blank, which bothered him a little. He shook his head eventually. \"Almost as important as knowing how much and which emotions to nudge, is to know when not to. Emotions are living things, and while it's true that we can modulate any pre-existing emotion or feeling at will, creating a realistic response quite often means letting it grow on its own, even if that takes longer. As I said, patience is very much a virtue.\"\n\nGarth nodded attentively, seeing the obvious truth in his uncle's words.\n\nThe rest of the day became a blur of action as the afternoon rush started. Garth traced the customer's emotions as they came and went, a wide range displaying itself, and while this seemed natural in itself, he did wonder at times. Why would the man buying a huge strap-on dildo be so Angry? Or the woman who only bought a pack of condoms who was so Embarrassed, why was that? By six in the afternoon, Garth was hardly able to stand upright; how could there be so many people buying sex-things on a perfectly ordinary weekday?\n\n\"I think it's well past time for you to go home,\" Jeff told him. \"You look ready to drop if you don't mind me saying. Eat and drink well, go to bed early and all will be well tomorrow. It gets easier, trust me.\"\n\n\"I have lectures tomorrow; I can't be here until after two.\"\n\n\"No problem, Dave has the early shift anyway, and then we can close up together. In any case, the repeat customers usually choose to shop in the evening. On Thursdays I keep the shop open 'till ten, just for their sake.\" Garth got the impression there was more to that statement, though nothing more came.\n\nGarth all but stumbled into his apartment, a paper bag of some takeaway in hand. Just kicking off his shoes and dropping the jacket by the door, he stumbled over to the sofa and fell rather than sat.\n\nHalf an hour and a double portion of egg-fried rice later, he was feeling almost human again. As he stood to grab a beer from the fridge, he looked across the courtyard at his neighbor's apartment. Just then, she pulled the curtains open, meeting Garth's eyes. She froze like a deer caught in the headlights of a car for a few seconds. Garth imagined he could hear her yelp as she jumped back and hurriedly drew the curtains closed again. Strange.\n\nOn a hunch, he tapped his power, questing out in her direction to see what he could glean. Mortification. Embarrassment. Excitement. Humiliation. Arousal? Garth was stunned. Who was this girl? Had he caused that reaction just by being seen by her? He did not even know her name, not to mention anything about her either. She had looked to be a little older than himself, maybe twenty five or so. Short, dark hair in a fashionable haircut had framed a cute face, not quite pretty but definitely not unpleasant to look at. He had been unable to tell much about her body, other than that she was of medium height, maybe on the tall side. Shaking his head, he got his beer and turned the TV on, zoning out to a sitcom of some sort. The curtains remained closed the rest of the evening.\n\n\"And so, we can deduce that intrinsic motivation always will be more potent than extrinsic, as clearly demonstrated by...\" Garth zoned Professor Sands out again. This particular lecture in the Morals and Ethics class was exceptionally boring, though Garth wondered what the professor would think of his Neuropathy and its impact on motivation. Promoted by the thought he tapped his power, deciding to spend the rest of the mandatory lecture doing something worthwhile instead. The sea of emotions spread out before him, the collected pool of two hundred students' worth of hormonal emotions churning all around him.\n\nWhat seemed chaotic and random at first eventually started resolving to his mind's eye. He quickly realized there was a spatial component, as he had noticed at the library and the bar the other night. Seeing Erica's cum-streaked face in a mental flash made his cock jump in his pants. 'Down boy, not now!' He thought to himself.\n\nAs he applied the spatial context, he found it easier to begin separating emotions by people, or at least to a degree. The couple three rows down who were talking with their heads together pulsed with Love, Affection, Desire and just barely contained Arousal. No points for guessing what they would be doing once class was over. Same for the girl to his right who was taking notes at a furious pace; she was all Attention, Focus and Concentration. He kept trying to pin emotions to people based on spatial and visual clues, at times closing his eyes to try and reverse the process; finding emotions and then seeking out the owner. As he did this he came across a patch of emotions that was slightly familiar in an odd way, somewhere behind him, to the right.\n\nHe opened his eyes and turned slowly to appear casual. Garth froze, dropping his power in panic; it was her! The girl from the library! No wonder he had thought she looked familiar; she was taking the same class as him! He realized he was staring because she met his eyes and arched an eyebrow in a silent 'What!?' There was no recognition, no outrage, nothing; she had no idea who he was. Mouthing 'Sorry' and shrugging he turned back to face the professor as he began to wrap the lecture up. Questing out again, he felt for her patch, breathing a sigh of relief to find it the same, save for a streak of Annoyance.",
        "\"I tell you, she had no idea who I was!\" Garth was telling Jeff about his experience at the lecture. He had waited until after the afternoon rush, and Dave had left a short while before.\n\n\"That is good I suppose, though don't take this as a reason to try again, you're not quite there yet, though I'll admit I'm impressed at your progress.\" Garth beamed at the praise but kept his tone serious. \"Of course Uncle, I promise to wait until I know more.\"\n\n\"Good lad! Now go restock the shelf with massage oils and lube, we must have sold a dozen bottles today.\"\n\nGarth was bent forward, placing bottles of lemon-scented lube on the bottom shelf when a hand grabbed his ass from behind. His herb had run out a short while ago, but seeing as it was almost closing time, he chose to go without. \"Hi there handsome!\" A mirthful voice said, sounding familiar. Before he had time to react, another hand grabbed his other buttock too.\n\n\"Hi there handsome!\" Alyssa's dusky voice said.\n\nRising, he turned to them. \"Alyssa, Erica, hi!\" Unsure what to expect, he leaned forward and hugged Erica briefly.\n\n\"What!? No kiss?\" He grinned sheepishly as she drew him in for a kiss, her tongue wrestling his as she drew him close. \"Whoa there, leave some for me!\" Alyssa said from the side. Erica slowly released him, holding him at arm's length to beam at him. Alyssa grabbed his chin, pulling him over and thrusting her mouth at his, just as aggressive. \"Mmm, you still taste good!\" She grinned wickedly and Garth blushed as he remembered Erica with his cum across her face as she had walked off to 'share' with Alyssa.\n\n\"Hey, stop harassing my staff!\" Jeff called jovially from behind the counter. \"Staff?\" Alyssa asked as she arched an eyebrow at Garth. \"Yes, Uncle asked me to come work for him. That way we can train while bonding and all. Say, would you girls be willing to let me try some things?\" Garth didn't know where the sudden forwardness came from, but the girls smiled and nodded.\n\nHe rushed over to the counter, downing a capsule and telling Jeff they had agreed to let him try. \"Good initiative, try to single out one of them today, you'll get better quicker if you push yourself.\" Garth decided to go for Erica; she was obviously the one who was more interested in him.\n\nHe trailed them as they walked around the shop, looking at the shelves talking softly, inspecting the odd item here and there. He got the impression they knew the shop well already, they were just giving him time to work. Studying their emotions he began to get a sense for their unique signatures, their hue he decided to label it. Once he identified this it became easier, and soon he felt he had a clear idea of which patch of emotions belonged to Erica. He started pulling on her already considerable Arousal, not bothering with subtlety as he was trying for isolation today.\n\nErica gasped, her left hand pressing to her groin as she steadied herself on Alyssa's shoulder. \"Impressive,\" His uncle said from behind. \"Impressive indeed. Now try to modulate your influence a little, ease up and try to add one more.\" Garth nodded, sweat beading on his forehead as he concentrated. He imagined squeezing the flow again, reducing it by half. Then he threw out a second wave, Lust, just as strong as the previous one. The effect was compounded; the two emotions fed off one another and flared. Garth was silently very pleased, half hoping for a repeat of the other night.\n\nInstead, however, Erica attacked Alyssa in a whirlwind of kissing and groping, right there in the shop. \"Remember what I said about what we can and cannot control?\" Jeff asked quietly from behind. \"She was attuned to Alyssa today. They had come here to look at some new merchandise, and you only flared Lust unspecifically, but did not make sure you were the target.\" Garth was mortified; not only had his uncle seen through his attempt, it had backfired as well. \"All is not lost, however. Attend!\" His voice rose. \"Girls, shelf two from the back, lower left corner. You can thank me later!\"\n\nAlyssa passed by the counter, Erica clinging to her, a strap-on dildo in her hand, roughly the same size as himself, Garth mused. \"Can we use number one?\" Alyssa asked, holding her hand out towards Jeff. \"Sure!\" He smiled, handing her a key from his pocket. \"Five minutes, then it's on!\" Garth let his confusion show, but Jeff just signaled for him to wait. The girls walked through the door behind the counter, closing it. Jeff locked the front door, turning the closed sign even though it was still only a quarter to eight. He came back to the counter and opened the drawer with capsules. \"Do you need more?\" He asked. Garth shook his head. \"I took a capsule not an hour ago, I'm good.\"\n\n\"Grab another,\" Jeff said with a sly smile. Garth downed another capsule, tapping into his power. The girls' emotions were a roiling mass, like a small pond being whipped to a fury by a passing storm.\n\nAny single emotion was all but impossible to isolate, everything shifting and gliding together in a hot, molten mass. \"I'll take Alyssa, you take Erica,\" Jeff said, nodding in the direction of the back rooms. With great difficulty he finally took hold of Erica's emotions, noticing that Jeff long ago had Alyssa sorted out. \"Now try to copy me, we'll start slow.\" Jeff started carefully increasing Lust, Arousal, Desire and some others Garth just copied by look or feel, he could not quite tell which. They watched as the girls' emotions started boiling, the effect clearly more than their careful pulling. It rolled on and on, the sensations and emotions feeding back to Garth and Jeff, washing over them like a hot wave. Garth made no attempt to hide his rock hard cock, his pants pitched outwards like a tiny tent.\n\nAll of a sudden Pain shot through Erica's emotions, quickly followed by Determination. The Pain receded slowly, being replaced with Accomplishment, Satisfaction and Pride, all the while the other emotions churned around them. Then, as if on some hidden que, everything started rising even higher, pulsing in a rhythmic way, up, up, up. \"Get ready,\" Jeff said, \"On my count, surge your power and give them everything you've got. Three, two, one, go!\" Garth pulled for all it was worth, a massive flare of emotions surging around them. He half expected the waves to wash over the shelves of the shop, tipping them over. A muted scream could be heard, and then his herb ran out and all was silent.\n\nFive minutes later, the two women shambled out into the shop. Both were flushed and breathing heavily, Erica walking funny. \"That. Was. Intense!\" Alyssa's voice sounded raw. She handed the key to Jeff then left without another word, leaving both men standing there. The strap-on was nowhere to be seen.\n\nGarth was still rock hard as he walked into his apartment half an hour later. The tram ride home had been torture, his pants still tenting visibly, though luckily not too many people were around. He held his jacket in front of him, but an elderly lady must have seen, for she huffed in disgust and promptly moved to the other end of the wagon.\n\nHe was on a mission, aching from the need to come, his pants wet with precum that had seeped through. He fell into the sofa, single-minded in his purpose. Almost ripping the button, he shredded his pants off, underwear right behind, leaving it bunched around his ankles. He sighed in relief as his cock sprang out, finally free of the constraining pants. It stood straight up, veins throbbing and precum seeping in a continuous flow from the slit. He grabbed it with his hand, groaning in pleasure as he started pulling the foreskin back, watching as it slid back along his bulbous head. He started masturbating furiously, not bothering with the pleasure of play and just chasing the much needed release. His hand flew up and down, wet sounds filling the apartment. He could feel it approaching rapidly, a pressure building from his toes, up his legs and converging on his balls. His head started thrashing from side to side, moans escaping his throat as he imagined Alyssa roughly ramming the dildo into Erica from behind. \n\nHe reached the point of no return. His hand gripped the base of his cock as it started tensing, preparing for the impending spasm. His head rolled to the side, pleasure making him dizzy as the first spurt shot forth, arcing over his head, hitting the carpet with a wet splat behind him somewhere. His eyes slid open and met her gaze. She was standing in her living room window, looking right at him. Garth froze; this time he was the deer in the headlights. All the while his cock sent spurt after spurt of cum across his sofa, chest and stomach. Her eyes grew wider and wider as he kept spurting, all the pent up excitement seeking release. After what seemed hours, though probably only twenty seconds or so, his cock lurched to a stop and started slowly deflating. Garth held her gaze through it all, past caring now. She mouthed a silent 'Wow' and slowly closed the curtains.\n\nThe next day flew by in a blur, lectures in the morning and work in the afternoon. He was constantly using his power, probing anyone he saw or met; dissecting their emotions, seeing how they mixed and merged, interacting and feeding off each other. He was getting better, he knew, but his uncle's ban on manipulating bothered him.\n\n\"What about the kineticists? Where do they fit in?\" Garth waved his fork towards Jeff. They were sharing a simple dinner after closing the shop. Garth had asked to see those books Jeff had hinted at, wanting to see the other side of the story. Jeff wiped his mouth, putting his own fork down. \"Kineticists belong to the bloodline of the other brother. Simply put, their power is telekinesis, moving objects around, though not simple parlor tricks. A few have made names for themselves as magicians, though that is a double-edged sword. Most professional magicians know how the various tricks work, after all, and so, actual magic would soon seem suspicious. Surprisingly many work as scientists, the really good ones are able to manipulate things on a microscopic scale by using powerful microscopes. For the neuropaths, we tend to go more into politics and leadership, where reading people's emotions become powerful tools. Not all are high profile, we all have different ambitions in life, after all.\"\n\n\"But what happens if someone has blood from both lines, getting both powers?\" Garth asked, the idea one that had occurred to him earlier that day. \"Surely after a thousand years of marriages and such, there would, statistically, be at least some who get both powers.\" \"We work very hard to avoid that.\" Jeff said gravely. \"There have been a few examples across the centuries of people of mixed birth, and it has almost always ended badly. The combination of both powers in one person creates a synergistic effect as the power matures in a person. Simply put, they become vastly more powerful than for example a neuro and a kine working closely together, the two powers are linked, after all.\"\n\n\"What do you mean, ended badly?\" Garth asked, his curiosity up. \"Have you heard the proverb, Absolute power corrupts absolutely?\" Jeff asked. \"No, not really, but it makes sense, when I think about it.\" Garth replied. \"Well, imagine you can manipulate a person's mind, like we can, and then reinforce that manipulation physically, creating physical and physiological responses that complement the mental manipulation. All of a sudden, actual mind control and brainwashing become possible. There was a case some two hundred years ago, a mixed blood avoided detection for years until someone happened to notice some villagers acting strange. By the time the local lord could investigate, he had subverted hundreds of people, essentially making them slaves by conditioning them over years to do his bidding.\" Garth shuddered at the thought, seeing it all to clearly in his mind's eye.\n\n\"So you see; mixed blood people are essentially ostracized for fear of them awakening both powers. Nowadays we have a very good overview of both bloodlines and make sure mixing does not happen.\" Garth wanted to ask how they made sure of that, but decided he probably would not like the answer and left it at that.\n\nGarth spent a couple of hours that evening going through some tomes at Jeff's house, deciding to break it up and read a little at a time, figuring he had years to study it after all. He found accounts of notable practitioners of both powers and some of their exploits, some cautionary tales of power abused, almost always neuro's that started sexually oriented sects, he noted with mixed amusement and trepidation.\n\nHe also found some information about the organization, it apparently had no specific name, just a crest; the two flowers that gave power intertwined, yellow St. Johnswort and blue Bluebellvine. The wrist tattoo the mark of a practitioner. Apart from the tattoos, there were no other symbols for members of the organization, at least not any listed in the books he had been given. Garth decided there probably was more, much more, but that information was being kept back until someone higher up had given the clear, or he passed some kind of approval. He decided to trust his uncle's mentoring and focus on the given tasks for now.\n\nThere had not been another chance to practice on customers, even though Thursday had seen a rush of what was obviously repeat customers judging from the way Jeff greeted them. When he left at eight, the shop was as busy as ever. His uncle had told him to take off, even though the shop didn't close for another two hours. \"Education is just as important as, other things,\" He said pointedly. \"Besides, who do you think did this before you came along?\" His uncle's voice had seemed strange, and when he quested out, Garth found Anticipation pulsing through his uncle. Not wanting to come off as whiny, he did as requested; though Garth felt there was something going on he did not know about.\n\nFriday was free from lectures, and Garth was opening the shop by himself. Jeff and Dave were due at noon, two hours later. He got the shop ready, turned on all the display lights and did a quick survey to check all was in order before unlocking the door and flipping the Open-sign at precisely ten. The first half hour crept by slowly, not a customer in sight. Garth sat behind the counter, looking through some order catalogues for various clothing brands, including a bikini brand with almost exclusively sheer, mesh or crotchless designs. As this was a catalogue designed for wholesale and not retail, the pictures were not censored in any way, all the explicit details on show, some even vulgarly so, to best highlight some design feature or other.\n\nWhile in a way it would have been perfectly understandable to walk around with a prominent erection Garth was reasonably sure his uncle would rather he not. Putting the catalogue down, he instead started looking through the drawers and shelves beneath the counter. He did not find anything particularly interesting, at least not until he opened the bottom drawer. On top were a couple of unlabeled films, the type used in higher end video cameras. The only marking was a small sticker with a date, the more recent from only a week before. Beneath the films was a bag full of pills in blister packs, unmarked, but with a distinctive light blue colour and a stylized V embedded. Very strange. As he was looking at the bag of pills wondering if they could be drugs of some kind, the front door opened. He dropped the bag, closing the drawer with his foot hastily. He needed to ask his uncle what this was all about. Surely not something illegal?\n\nA very distinctive looking woman walked into the shop. Tall and slender, she looked to be in her late thirties, an air of command about her, as if she was used to being in charge. She wore a long black trench coat that almost reached the floor, form fitting black pants underneath and spiked boots with a bit of heel. Garth would never have called her pretty, but she was certainly memorable, bright purple eyeliner with black accents making her dark brown eyes the focal point of her face. Doing a quick count, Garth saw at least ten different piercings in her face. Eleven, he mentally added as she opened her mouth to speak, a thick metal rod through her tongue.\n\n\"Where's Jeff?\" Her tone firm and commanding, though not unkind, more guarded. \"He's not here yet, he'll be in around noon.\" Garth said simply. \"And who might you be?\" Her tone had a slight note of suspicion, Garth's neuropathic sense confirming it. \"I'm Garth, the new shop assistant.\" Blank look. \"Also, I'm Jeff's nephew.\" Her face softened, a little. \"His nephew, eh?\" A speculative note entering her voice. Curiosity blossomed slowly as she regarded him. Shaking her head as if coming to a decision, she took a step towards him. \"Anyway, that does not matter. What matters is I forgot something downstairs last night, would you be so kind and open the door for me?\" \"Downstairs?\" Garth's blank look perfectly showed off his absolute lack of comprehension. Confusion shot through her, quickly followed by Mortification and Apprehension. \"Ah, I see... He must not have...\" She trailed off. \"Forget I said that, I'll come back another time when Jeff is here, it's not that important!\" With a swish of her coat she was halfway out the door before Garth had time to answer. What was going on here? Garth decided he would have to sit down with his uncle and get to the bottom of this as soon as he got in.\n\nTwo hours later Garth approached his uncle in a quiet corner of the shop. \"We need to talk.\" Jeff seemed taken aback by the serious note in his nephew's voice. \"Are you involved in something illegal? I found the tapes. And the pills... And what's downstairs?\" A jumble of emotions flickered through Jeff; Panic, Fear, Apprehension and Consternation. Confidence quickly resurfaced, however, and in a calm voice he said. \"Let's go sit down in the back, I can explain. But no, nothing illegal is going on.\" Garth relaxed a little, Nervousness banking down, as he was sure his uncle had noticed.\n\n\"You remember I said Alyssa and Erica were friends, both privately and professionally? That we were part of a group?\" Garth nodded, thinking back to the bar. \"Well, it would be more correct to say that Alyssa and Erica are part of my group. As you have seen, we have a fairly open relationship where sex is a key component.\" \"Key component sounds about right,\" Garth added with a self-satisfied grin.\n\nJeff relaxed a little, the tension in the room lower. \"Well, simply put I realized a few years ago that being a Neuropath can be very profitable, provided you cater to the right type of people. I approached the organization with a proposal, allowing me to share part of the truth about my ability with select individuals. In short, I host events where I use Neuropathy to heighten the experience for everyone. For a price.\"\n\nGarth was stunned. No wonder his mother had not wanted Garth to be around his uncle. \"Now, this is not something to be discussed openly, you understand? I cater to a very select group, some of which are important people with specific tastes; though central to it all is my ability to enhance their experience, not few are part of the organization as well. We are not many, and the group is quite tightly knit together; this is not some prostitution-thing or such.\" His voice rose a little, the topic obviously a sensitive one. Garth saw his uncle's protectiveness and relaxed; this was not something illegal or shady, exactly. Just not something socially acceptable perhaps.\n\n\"But the pills? What about those?\" \"Ah, those. They are from my friend at the pharmacy, the one who makes the herb capsules. They are a trial batch of a new drug that is coming to the market in a few weeks, all the approvals are in order, they're just organizing the shipment to the pharmacies. It's a potency drug. It's originally meant to help people with erectile dysfunction, but if taken by a healthy person it instead acts as a potency boost. Bluntly put you stay hard for hours...\" Garth whistled slowly. Thinking back to his weekend with Christa, he smiled to himself, thinking that hardly had been an issue for him, though he could see the obvious benefits of such a drug. His head was spinning a little at all the revelations, both those about his uncle specifically, but also about Neuropathy in particular. He saw the potential and all of a sudden he could see all kinds of opportunities in his future. \"And what's downstairs?\" \"Come on, it's easier to show you.\"",
        "The final door, the one with Private on it, slid open on well-oiled hinges. It opened up to a stone stair descending to the basement. Dim downlights illuminated the staircase, iron sconces and a black railing giving it a dungeon-like feeling. \"We call it The Dungeon\" Jeff said, as if he had read his mind. The basement was one, big open room, stone columns supporting the ceiling. The rough stone floor was broken up by big, plush carpets in various chaotic patterns. \"Harder to spot stains.\" Jeff said, seeing how Garth studied the carpets. Garth blushed a little, considering exactly what kinds of stains he would want to not spot.\n\nAll along the outer wall was rack after rack of whips, canes, floggers, manacles, lengths of rope and pretty much all the same things he would find upstairs in the shop. The center of the room was dominated by a huge four-poster bed, all manner of rings and bars all over it. \"This is the center piece, where we play.\" A touch of Embarrassment crept through his Confidence. While Garth did not want to linger on the fact his parents had had an active sex life, he found the same was not entirely true when it came to his uncle. The idea of him being sexually active was more like a friend having sex, and not a parent. Not necessarily something he wanted to watch or anything, but not really a problem either.\n\nOff to the sides of the room were several lounges spread out in groups, some around tables, others around more of the strange-looking furniture he had seen upstairs in the shop. Suddenly he saw how one could restrain a person with ropes in various ways, the handholds and footrests making more sense to him.\n\nGarth estimated the large open room had to be roughly the same size as the shop above. Along the wall to his left were more doors, directly beneath the doors in the hallway behind the counter. Jeff saw his look. \"Those are the private rooms. For when someone wants to be private or enact a certain fantasy; they're furnished as movie sets, more or less, each with a specific theme.\" As if on que, Garth saw some tripods with professional-looking video cameras next to the bed, the kind that would use tapes like the ones in the drawer. \"Yes, we sometimes film each other.\" Jeff said in answer to the unspoken question. \"Not always, and some members never, due to their professional lives. It would not do for a certain sergeant general to have movies circulating of his specific tastes.\"\n\nThey walked around the room for a few minutes, Garth noticing all the various implements and toys spread around the various racks and pieces of furniture. \"How big is this group of yours?\" Garth asked, his shock slowly being replaced by curiosity. \"In total, there are twenty five of us, though usually only ten or so gather at once. We have one gathering at midsummer when all are here, that's when we discuss potential new members, decide upon changes to our rules and so on.\" And have an orgy? Garth did not ask, not needing his uncle to answer.\n\n\"You must understand,\" His uncle said, voice earnest and maybe a little pleading. \"We are a very close-knit group, mutual trust an absolute requirement. I am not showing you this as an invitation to our group; that is not my decision alone to make. I show you first and foremost because you're family, and we need to have trust in each other. If you want to consider joining, I will argue your case with the others, and I don't see why they would decline, but that cannot happen for another six weeks, at Midsummer.\" Garth considered it, was this something he would want? \"I don't know uncle, this is a lot to take in, and I'll need to consider it in any case.\" \"Of course, take as long as you need, and ask any questions you might have, just not where others might hear. Oh, in case it was not obvious; Alyssa, Erica and Dave are part of the group already. I'll let them know what I've told you. Don't discuss it with anyone else unless I say so.\"\n\nSaturday morning, Garth woke late. He did not have any plans for the day, no school and no work. The only scheduled thing was to meet Lisa, Christa and a few more from the gang that evening at Lisa's place a few streets over. She had called the evening before, asking in mockingly hurt tones if he had forgotten about them. Garth had apologized, realizing he had indeed kind of forgotten about them, promising to make amends and join them the very next day. The air in his room was hot, humid and thick enough to be cut with a knife. The curtains were closed and windows closed, but the sun had baked the window all morning even though it now had moved on to shine in at a shallow angle. He stood up, naked as usual, and walked over to let in some fresh air, not entirely sure he was done lounging in his bed. As he drew the curtains aside, his gaze fell on the low-rise across the yard. There, on the narrow balcony across from him, the girl he had been seeing was sunbathing, lying on her back, feet towards him. She looked to be asleep, eyes closed and perfectly still, apparently making the best of the narrow two-hour window where the sun shone directly between the buildings onto the balconies.\n\nGarth studied her sleeping form, seeing she was quite average in body as well as face. Not memorable but certainly not unpleasant to look at either. Garth felt blood start flowing into his member, slowly filling it halfway. The scene was not particularly erotic; the bikini was quite modest, she was not particularly hot, just average and pleasant in a normal way. But something struck a chord in him; he just could not pinpoint anything. On a hunch he downed the final herb capsule, washing it down with the tepid water on his nightstand. Grimacing at the stale taste, he walked back to the window, seeing she had only adjusted her pose a little. He tapped his power, the sea of emotions spreading out all around him. Using his spatial awareness, finding her was done in a matter of heartbeats; he really was getting better at this!\n\nCalmness, Relaxation, Peace and Serenity wafted from her, she seemed to almost be sleeping, which made sense he guessed. Underneath the calm tranquil surface he found more interesting things; Lust, Desire, Arousal, Excitement all churned underneath; not prominent at all, but very much present. Before he could stop himself, he had grabbed hold of her Wakefulness and Attentiveness, pulling on them ever so slightly. He was about to force himself to stop when he saw that he was only feeding her a tiny trickle, his control improved vastly even though he had not influenced anyone for days. His mind seemed to know on its own what to do, and soon he was pulling gently on a dozen related emotions. He saw her start to stir, his influence slowly making her more alert, making her want to look around.\n\nBefore he could talk himself out of it, he walked out into the living room, stark naked, half-erect cock dangling between his legs. See me, he thought silently, tugging a little more forcefully on her Alertness. He walked to the fridge, not looking her way at all, pretending to not notice anything out of the ordinary. He reached the fridge, opened it and got out a bottle of lemonade. As he turned, facing away from her, he was rewarded with a spike of Alarm, Shock and Bewilderment. Arousal, Desire and Lust surged right behind however, taking him by surprise with their intensity. Staying calm was an effort, but he managed to walk back to his bedroom without betraying he knew she had seen him. He could feel her eyes on him all the way, her emotions smoldering like coals. He stopped inside the door, noticing how his cock was rising, bobbing higher and higher with each beat of his heart.\n\nHe saw what made her so appealing now; her intense response to seeing him must have triggered some subconscious response in him, making him want to rouse her desire for him. He felt her emotions bank down as he stayed out of sight, though Arousal only went down a tiny amount, her attention clearly still on his apartment. He started pulling slowly on her Courage, seeking out what he could only describe as Voyeurism, though that was not quite it; it was a multitude of related emotions all telling she should keep watch for him, try to capture his attention. He dressed in slacks and an old t-shirt with a faded band logo, no underwear or socks. As he walked out into the apartment again, he pulled a little more strongly on her Courage, slowly facing to meet her eyes. Panic spiked for a second, but Curiosity and Lust quickly beat it down; she was committed to not run this time. He let his eyes roam her body, smiling suggestively at her to let her know in no uncertain terms he liked what he saw. Desire and Lust peaked with no pulling on his part; she was buying into it, feeding her own emotions as she felt his roaming eyes.\n\nMeeting his eyes and holding his gaze, she slowly rose and walked backwards into her apartment. Garth felt a stab of disappointment, considering pulling a little more strongly. He hesitated as he saw her emotions, however; they were just as intense, maybe even more so. Locking eyes with him, she slowly reached behind her back, her bikini top jerking as she opened the clasp. Garth broke from her gaze as the top fell to the floor, her tits proudly on display. True, they were average in size, nipples dark and on the smaller end of the scale, but their shape was perfect. He grinned at her even wider, licking his lips slowly as if to show how badly he wanted to nibble on them. A tug on her Arousal complemented the grin. Not wanting to be outdone, he slowly pulled his t-shirt off, tightening his core muscles to show off a little, Arousal and Lust pulsing even higher from her.\n\nGarth pulled a little more on her Courage and Excitement. Remembering back to the night at the bar, he tried to emulate Exhibitionism as Jeff had done to the girls. He thought he had it right, pulling on several emotions at once. Her eyes narrowed, a sexy smile creeping onto her face as she leaned a little forward and hooked her thumbs inside the bikini bottoms. Gyrating her hips slowly, she closed her eyes and swayed to a rhythm Garth could not hear, her bikini bottom slowly being pulled down. Just as he could see the top of her pubes, she stopped and opened her eyes, looking straight back at him. Then he felt a surge of Courage that came from her alone and she yanked the bottoms down, exposing her neatly trimmed bush and swollen dark pink lips to him.\n\nThen a spike of Nervousness smothered everything and she leapt into what had to be her bedroom. Garth was a little annoyed that the show had ended so abruptly, but he was quite pleased he had not lost control again, instead pulling slowly and gently, letting her own emotions have time to mature and play off each other. From inside her bedroom he felt a flurry of emotions; Anxiety, Nervousness, Pride, Joy, Arousal, Lust and a host of others flashing by rapid-fire. She was a small vortex of emotions as she no doubt relived the display she had just put on for him. Soon Lust and Arousal started pulsing from her, increasing fast, really fast. In less than a minute her emotions became a red hot blur of what Garth had learned an orgasm looked like emotionally. His own dick throbbed in his pants, but he decided to let it stew, looking forward to tonight.\n\nOn his way over to Lisa's place later that evening, he briefly stopped by the building across, reading the names on the doorbells. Sophia Adams was her name. A perfectly ordinary name for a perfectly ordinary girl. He smiled to himself, excited to see where this could lead.\n\nLisa and Christa met him in the door with hugs and kisses on the cheeks. \"Where have you been!? We missed you!\" They all but shouted together. \"It's only been like two weeks, relax!\" He said with a laugh, slapping Lisa's firm butt, making her yelp indignantly. As he sat down on the couch, beer in hand, he realized he had missed them too. These were the kind of friends who gave you energy instead of taking it away. He promised himself to invest a little more time in them from now on, they really were good friends. Tapping his power was no longer a conscious decision he made, it just was there, like some extra sense he at some level always had had and just recently rediscovered or something.\n\nHe was reading and reacting to their emotions without active thought, probably because he knew them so well already, he decided. Eric and Sebastian made up the rest of the party, though they had been deep in conversation about some geeky new board game for the last half hour or so. The final two members of their little group, Amy and Josh, were due later that evening. \"Amy fell into his bed last week and we have hardly seen them since, except when Amy comes around to complain about his dick making her sore from all the sex.\" Lisa said with exasperation. \"He's not even that big,\" Christa said in a stage-whisper, looking pointedly at Garth's groin. He leaned back a little and thrust his pelvis towards them ever so slightly, their Arousal and Lust pulsing a little.\n\nGarth considered pulling on them but decided against it, at least for the time being, he had promised his uncle, after all. Besides, tonight was about relaxing with good friends, not Neuropathy. Feeling good about his decision, he relaxed, leaving his power active but not really paying attention to it. The talk flowed easily between him and the two girls, the boys still having a nerdgasm over by the table, having moved to another new game, none of them noticing the others at all.\n\nHe found that by not actively listening to his neuropathic sense, just leaving it on in the background, he was able to connect with the girls on a whole different level than before, forging a deeper connection. A sudden stroke of insight told him this must be similar to what his uncle had with his group; a friendship based on mutual trust and respect, not one constrained by social norms. They were just reacting to one another, whether it was sharing a drink or fucking like rabbits, no strings attached and no hard feelings.\n\nAs if summoned by his revelation, Amy and Josh stumbled through the door. Garth looked Amy over, her round bubble butt covered by a short denim skirt, small breasts encased in a padded bra; she had always had complexes about them. \"So Amy, why the wobbly knees, been sitting on them a lot lately?\" Amy blushed crimson at the comment, Josh barking a laugh and fist bumping Garth. Lisa and Christa shared a look, obviously taken aback by his deadpan comment about her thing for sucking cock, which Garth fondly remembered from when he had had her attention last fall.\n\nQuesting out, he looked at Amy and Josh, examining their emotions. Just as he had guessed, plenty of Desire and Lust, but no Love or deep Affection; this would blow over in a few days, both sating their hunger and moving on, no hard feelings. On the verge of his attention, he felt a flare of strong emotions. Looking over at the other girls, he saw them share a look, both feeling a surge of Affection, Lust and a little Arousal, intertwined with Shame and Anxiety. Interesting. He had not known any of them had feelings for other girls, but there was a noticeable spark there. Watching closely he saw lots of small signs too; leaning a little too close, touching each other often, laughing just a tad too much at silly jokes and so on.\n\nTalk and laughter flowed along with liberal amounts of beer and wine, though no one actually got drunk, just tipsy and relaxed. A little after midnight, Eric and Sebastian left, having at least spent the last hour or so talking to the others. Amy and Josh had fallen over on the couch, locked in a sloppy kiss. He pulled her skirt up, fingers trying to worm their way inside her panties, and Garth looked at the two other girls, noticing how they were watching with interest as well. Josh seemed oblivious to anything but getting his fingers inside Amy. She was trying halfheartedly to pull her skirt back down, but she was not really fighting him, and soon she gave up altogether, groping for his fly instead. All resistance gone, Josh grabbed the edge of her panties, pulling them roughly to the side, two fingers sliding in, a groan of pleasure sounding from Amy.\n\nGarth looked at Lisa and Christa. They were watching intently, Christa gripping Lisa's thigh, though none of them seemed to notice. Reneging on his earlier decision, Garth started pulling on them gently, enflaming their emotions. He briefly considered trying to get them to blow him, he had, after all, not come since his little encounter with Sophia that morning. Seeing how they clung to each other, he decided against it; he was quite confident he would be able to find release whenever he really wanted to. Tonight was about them, he decided. Pulling more and more strongly, they felt as if they melded together. Josh and Amy had progressed to a full-blown sixty-nine, her ass towards them. Garth, Lisa and Christa got front row seats as Josh licked her clean-shaven lips from clit to puckered sphincter, his hands spreading her cheeks as if to give them a better view. Almost without active thought, he pulled on the girls, quite strongly too, looking away from Amy's sopping wet pussy only as a grunt came from the girls.\n\nThey had keeled over in a tangle, much as the other two had just a short while ago, tongues playing tonsil hockey and hands all over. Taking his que, Garth silently gathered his things and left, mouthing a silent You're welcome, at the girls as he left.\n\nTuesday morning saw Garth back at the mandatory Morals and Ethics lecture. He had spent the last couple of days just window shopping and spending time outdoors in the fine weather. He had not really done anything of note, just spent time using his power and being around people. No influencing, just looking and feeling. Ok, he had tweaked a little, once; a very cute girl at a caf\u00e9. But only enough to provoke a nice pair of pokies, hardly worth mentioning. He had looked for Sophia several times, never seeing her, but feeling her presence inside, emotions subdued and, frankly, quite boring.\n\nThis time, Garth decided to zone out Professor Sands right from the get-go, just swallowing a capsule right at the start and practicing matching emotions to people and vice versa. The girl from the library was there again, though this time in front of him; apparently not one of those with a favourite seat then. The lecture passed quickly once he found something he would rather do, deciding to do this from now on. The exam was usually just a joke anyway, usually a single written text about some generic situation that could be resolved a hundred different ways, all legitimate so long as you argued your point reasonably well. Garth thought there was a student who had failed a few years ago, he apparently had used the exam papers to make a joint, lighting it up during the exam and setting the fire alarm off. Garth was not very concerned with missing a few classes.\n\nThat evening, Garth was alone in the shop again, his uncle away on an unexpected errand. \"Just shut down everything and lock up, I'll take care of the register before I open tomorrow, just remember to turn on the alarm.\" Ten minutes to eight, Garth was sitting behind the counter, no customers in the shop and likely no more coming before closing time; few people had urgent need of lube or a new dildo at this hour anyway. He was tapping his neuropathy in the back of his mind, not questing or feeling, just keeping tabs on the area around him, the locals a quiet, subdued bunch.\n\nSuddenly a new patch glided into his awareness, the hue familiar, though he was not good enough to recognize people based on a remembered emotional signature, yet. Thinking it likely a repeat customer passing by or maybe doing some last minute shopping, he relaxed and kept reading the catalogue; he was just getting to the crotchless bikini bottoms-section. \"Welcome, let me know if you need any help, we close in about ten,\" He said, not looking up yet. The door clicked shut, and then the lock clicked shut as well, a clattering sound announcing the Closed sign turning.",
        "Garth looked up, the sounds not quite registering, at least not their significance. A long dark coat was crested by a head with copper hair hanging down past her shoulders. Erica turned towards Garth, a playful smile on her lips. \"Hi handsome, watcha' doin?\" Garth did a double take; she wore a mesh shirt, pierced nipples plainly visible as she had no bra on. A short black skirt, not really long enough to properly be called a skirt actually, just covering her groin, though Garth would not have been surprised to see a copper bush sticking out on either side. Bare legs ended in high heels and up top she wore a black collar with a small ring as if for a leash.\n\nShe walked towards him, hips swaying seductively, her entire being radiating Lust. \"I do need your help, since you asked. But I'm afraid ten minutes will not nearly be enough...\" The unspoken promise sent a spark up his spine, connecting with some primal part of his brain, going straight back down to his suddenly raging erection. She leaned forward, seeing his tenting pants. \"Good, you're ready to help me.\"\n\nShe walked towards the back of the shop, Garth trailing her like a rat after the proverbial Pied Piper, not able to resist even if he had wanted to. \"You see, the other day, Alyssa and I were playing. Here in this very establishment, actually.\" She looked pointedly at him. \"We were trying out the new Dominator strap-on, when Alyssa suddenly decided to take my anal cherry.\" She rubbed her ass as if in remembered pain. \"It hurt something awful, though it got better, and then, suddenly, we both came like twin tornadoes; it was quite strange.\" Her mock puzzlement fooled neither of them.\n\n\"The problem is this, I really, really liked it; it just was so painful to begin with. So I figured I needed to train a little, so to speak.\" She walked up to him, her breath hot on his mouth, a sweet minty smell. \"Do you know of any way to help me?\" She asked as she grabbed his cock through his pants.\n\n\"I might think of a way or two\" He stammered, her grip so tight it was almost painful. She kissed him, her tongue gliding across his teeth, then dipping inside to flick his tongue. \"Good boy, I knew you'd help a lady in distress out.\" She turned and walked over to a low bench, dropping the coat beside it. She crawled onto it on all fours, her almost-skirt riding up to reveal a clean-shaven pussy, her lips wet, open and inviting.\n\nShaking from his stupor, Garth attuned her emotions. There was no need to pull anything, at least not yet; she came primed and ready to play. He got a sense she wanted something from her, Vulnerability, or something very close, wafted from her. Did she want him to take control, could that be it? Deciding to experiment, he walked over, slapping his hand down on her ass, not hard enough to make a mark, but with an audible slap. \"So, have you been a bad girl?\" Her emotions flared and she almost purred. Bingo. \"Yes Sir, very bad. Are you going to punish me?\" Her question was no question at all, her entire being craving it. Garth felt out of his depth here, but remembering an old actor's proverb, Fake it 'till you make it, he decided to give it his best shot, he could always use his Neuropathy to guide him should he misstep.\n\n'Slap' His hand connected with her left cheek. \"Punish you? No, this is not punishment; this is for your own good.\" 'Slap' Right side this time. Two red palm prints decorated her ass cheeks. Her back arched, Arousal and a hint of Pain shining through. \"Stay right there, don't move until I get back, or else...\" Walking quickly, he gathered his supplies from various shelves, his uncle would not have to know.\n\nWhen he got back, Erica had turned, facing the other way. She smiled sweetly at him. \"I told you not to move!\" He growled, inspiration causing him to pull a little on her deeply buried Fear. Her eyes widened as he rounded to her back. 'Crack!' The bamboo cane hit hard, harder than he had intended, a red welt across both her cheeks. Pain surged from her, and he almost panicked, thinking he had blown it. Then Arousal and Lust doubled, soaring through her; she got off on the pain!\n\nA little scared, Garth decided to instead focus on her original problem. \"I think you've learned your lesson,\" He mumbled a little weakly. A little Confusion and perhaps a little Disappointment, then Joy and Pleasure as his hand slid down her ass to her wet folds. She leaned into his caress, his finger slipping right inside her, slick liquid coating her entire pussy. He finger-fucked her slowly, marveling at her soft insides, smearing the pungent juice all around, eventually drawing it up towards her sphincter. As he gently pushed his wet finger inside her, she groaned silently, Pleasure and Desire rising within.\n\n\"The trick is to ease into it, gradually increasing the size of the, object.\" Garth tried to be casual about it, just like his uncle had been with the blonde doll-face. It came across as a little awkward, but judging from her response, she either did not notice or care. Beggars can't be choosers, he thought and pushed a second finger inside her ass. \"Luckily, I have just the thing,\" He said, pulling his fingers out, a whimper of disappointment escaping her lips. He brandished the same model of metal rod they had sold to the blonde. Sliding it up and down her pussy to coat it with natural lubrication, she shivered from the cool metal, gasping as he inserted it slightly into her pussy first. \"Proper lubrication is, of course, key.\" He put on his best imitation of Professor Sands, the tone striking a chord with Erica as Amusement wafted up for a second.\n\nHe steadied her with a hand to the small of the back, pushing the rod a little deeper, three bulbs slipping inside her pussy, covered with slick fluids as he pulled it out. Not knowing quite how, he suddenly he just knew what to do. Pushing the rod slowly back, up to the fourth this time, he leaned in. \"The actual orifice also needs to be properly lubricated...\" He trailed off as his tongue flicked her hole, both buttocks tightening for a moment before she relaxed. Garth had never rimmed anyone before; it was not at all what he expected. While quite different from eating pussy, it was intensely intimate in another way, the taboo of it just a part. He started licking her ass in earnest, thrusting the rod in and out of her pussy. Keeping track of her emotions, he increased the pace a little, making sure to not go too fast, but just right. After a few minutes he deemed her ass good and ready. Pulling the rod slowly out, he watched mesmerized as her lips flowed over the bulbs, an intensely erotic sight. He opened his fly to let his cock spring free, though not daring to enter her yet; he had a task to perform first.\n\n\"Try to relax, let me know if it's too painful.\" With that, he pushed the first bulb inside. Her opening gave way as he gently pushed, then closing back around the thin part between bulbs. He watched her emotions, pulling slightly on her Arousal and watching for Pain. The first three bulbs went in quickly, halfway there. Number four took a little longer, her sphincter resisting it. No Pain yet, but a tad of Frustration shone. He pulled a little harder, six or seven different emotions at once. He let the conscious act fade and let his mind tackle it by itself. The fourth slid inside her, a slight gasp coming from her. Pain blossomed as he pushed the second largest against her sphincter, making him stop. Remembering his uncle's tips to the blonde, he looked around for something to use to stimulate her pussy.\n\nIt took a second or two for him to realize his own stupidity. Grabbing his cock, he guided it towards her open pussy, his bulbous head pressed against her wet folds, forcing her open as he slowly pushed inside. He got almost all of the head inside when his stomach hit the ring at the end of the rod. Grabbing her hips he started thrusting slowly. Each time the bulb pushed a little farther inside, his cock penetrated a little deeper. Soon she was thrusting back, meeting his motion, their breathing ragged and synchronous. Pain flared and Garth slid one third inside her pussy. Looking down he saw only the last bulb sticking out. Five.\n\nGarth pulled back, leaving the rod in place, feeling his cockhead bump against the metal inside her, just a veneer of skin separating them. He started slowly fucking her, waiting for her Pain to subside a little. She was panting and groaning, her pussy slurping as he pulled out, then squishing as he pushed back in. The metal bulbs made her pussy very tight, squeezing his cock exquisitely. He started to feel a pressure building, three days of tension seeking release. In a panic he was going to come too soon he did, something. Not sure what he was doing, he fed his Arousal to Erica, feeling it surge from her as it dimmed a little in himself. It was as if he shifted back a little on a seesaw, he going down as she went up. Not a lot, just enough to stave off disaster.\n\nMarveling at his newfound control, he started pulling on her emotions as he fucked her slowly, his stomach bumping the rod, pressing the final bulb against her sphincter without really trying to push it inside. He felt like a musician, playing her like an instrument, pulling and thrusting in equal measure. When he could feel her juices start to run down his shaft and drip from his balls, he began pushing harder on the rod, forcing her tight hole to open, a little more with each thrust. Pain flared again, rivaling her other emotions, but still not overshadowing Arousal and Lust. Feeling a primal surge, Garth ground his cock into her, pulling hard on her hips. He watched in fascination as her skin stretched and stretched, the final bulb slowly forcing its way inside her. \"Ow! Stop! Stop! Please!\" He let go of her hips as she fell forward, his cock leaving her with a loud slurping sound. She was lying on her stomach, ass slightly raised, the final bulb and ring sticking up like a pole thrust into the ground.\n\n\"It's too much. I can't take it, at least not yet.\" Her voice was slightly muffled as her face was pressed into the soft leather of the bench. Disappointment roiled inside her like a snake, tainting all her other emotions slightly. Her voice cleared as she tilted her head, looking back at him. \"Can you please just fuck me instead?\"\n\nGarth pushed inside her again, his cock sliding between her lips, parting and stretching them. When he tried to pull the rod out, however, he realized his mistake; there was no way to pull at it, his stomach blocking its path. Considering, he saw a solution. He grabbed her body and rotated her onto her side, the metal bulbs doing interesting things to his sensitive cock head as he shifted inside her. One hand at the small of her back, the other one reaching for an exposed breast, he thrust forcefully, his entire length finally inside her. She looked up at him, their eyes locking as he started fucking her in earnest. He pulled almost all the way out, then rammed inside her, feeling the metal bulbs push against him. \"Start pulling it out,\" He said, voice raspy and ragged as he panted. She nodded, biting her lip, Nervousness and Trepidation rising. Pain followed as her taut muscles strained against the metal bulb. Garth manipulated her forcefully, not really lowering any of her other emotions but enhancing everything else, blotting out the discomfort. Pain and Pleasure indeed.\n\nSeeing the bulb was almost ready to pop out, he enhanced her Arousal to match the rising Pain, beat by beat. Pain suddenly flared as her sphincter crested the circumference of the bulb, pushing it out violently. Everything happened at once. He surged his power, pulling her over the brink as he rammed his cock deep inside her, his head compressing her cervix. His right hand grabbed her left, yanking the rod out in one motion, her sphincter going pop-pop-pop over the balls. As the metal clattered to the floor she shrieked in a pitched voice, her pussy spraying the bench as she squirted all over. The intensity of it all washed back over Garth, her roiling waves of intense emotions feeding back to him, pushing him over the edge. His legs shook, toes curling inside his shoes as he let loose inside her, cum pumping from him, forcing itself out of her tight pussy to pool on the bench, mixing with her squirt.\n\nAn hour later, Garth was just about done cleaning up after their intense sex. There had been wet, slimy bodily fluids all over the bench, clothes and toys spread around on the floor. He an Erica had lain in a pile as they came down from their high, talking about small stuff and just touching each other. Garth had burned away his herb in that final flare, but he almost felt as if he still saw her emotions. Garth told her he would take care of the mess, and she had picked up the rod. \"I'll take this with me I think. I need to train more.\" Her gaze had smoldered as she looked at his now soft cock. \"Once I'm all good and ready, I'll show you what I can do.\" His mouth had dried up at the sheer intensity of her look.\n\nNow he was at a loss for what to do; there was no way he was going to sleep any time soon. 'I might as well restock some shelves.' He thought to himself.\n\nThe storage room was T-shaped, a narrow hallway going from the door, the storage shelves stretching parallel to the shop, behind the other rooms. He looked over the shelves, quickly locating various vibrating eggs, bottles of lube and silicone butt plugs; volume items that were constantly in demand. As he came back for a second round, he noticed a whiteboard hanging slightly askew to his left, opposite the shelves. When he pulled on it to straighten it, it fell off the wall, revealing a glass pane like a window into the room next to the break room, number one, Alyssa had called it. It was apparently a one way mirror. A similar whiteboard farther down revealed a window into number two as well, camera mounts screwed into the wall beneath either.\n\nGarth decided to not tell his uncle he had found the mirrors, thinking it might prove useful and entertaining the next time someone wanted to 'test' a toy as Jeff sometimes allowed.\n\nIt was late by the time he got home. He had taken a pinch of herb before leaving the story, almost by reflex. He sat in his sofa, smiling to himself, remembering the hot sex and tender moments after with Erica. Note really focusing, he quested out and began sorting through the sea of emotions, separating and categorizing them by general frame of mind and in some cases gender. People were complex, he soon found, and where one was obviously female, another was impossible to assign.\n\nSearching at random, not really paying attention, he suddenly found a jumble of sad, dark feelings that were familiar. Focusing, he pinpointed the patch to Sophia's apartment. Gazing across the courtyard he saw her sitting the couch, leaning forward with her face in her hands.\n\nShe was crying. He was sure that had to be it. Feeling a pang of sympathy he reached towards her, grabbing her Sadness and pushing on it gently. He pulled a little at her Happiness too, though not as much as he pushed, not wanting to create an obvious change too fast. After a while she wiped her eyes and sat up, her pool of emotions calmer and more balanced. Garth was inwardly pleased at having helped her; it was for her own good, after all.\n\nOutside, in the darkness, a car with no lights on stood parked with a direct view to Garth's tiny balcony and apartment windows. Inside were two men, one holding a small dish-shaped antenna connected by wires to a box with a screen. \"It appears he has gone to bed. The signal disappeared right after the windows went dark. Call it in.\" The other man picked up a radio, pressing the button. \"Two-six to base, over.\" A few seconds later a static voice answered. \"Base here, report, two-six.\"\n\n\"Subject four is asleep, estimated six to eight hours based on previous schedule.\" \"Six to eight hours, confirmed. Dismissed, two-six, one-three will recommence tomorrow at five thirty. Base out.\" Garth was sound asleep and never heard nor saw the car drive off, lights dark until it rounded a corner.\n\nEnd of Chapter 2"
    ],
    "authorname": "MiddleAgedMan",
    "tags": [
        "exhibitionism",
        "voyeurism",
        "anal play",
        "nonconsent",
        "anal",
        "neuropathy"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/bloodlines-ch-02-1"
}