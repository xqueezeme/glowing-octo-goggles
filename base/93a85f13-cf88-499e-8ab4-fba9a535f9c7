{
    "title": "Siren Ch. 07",
    "pages": [
        "Dear wonderful, lovely, patient readers. I'm back with chapter 7 and some news. I'll say more at the end plus footnotes as needed. \n\nWithout further ado:\n\nCh. 7\n\nThe flash of red hair distracted Roland for a moment, but as quick as she was there Kenna disappeared again. The rest of the collected party were either looking at the map or glaring at each other, and missed her transient presence altogether.\n\n\"Their ship is faster than ours,\" Dooley whined. \"Sightings are more and more common.\"\n\n\"We are all well-aware that the bloody navy ship is in better shape than we are, thank you.\" Luke Stephens, the new boatswain, curled his fingers into fists as he leaned over the map only to be waved off by the navigator. Barnes tisked over the state of his map before looking up at the bristling pair.\n\n\"Well the same wind blows for us both, nothing to change there,\" Barnes offered. \"But nigh two days with no light at our stern and perhaps they've departed paths with us.\"\n\nDooley shifted his glare. \"Last week they nearly had us in range of their guns. You really think they won't find us again, especially with the rudder still drifting?\"\n\n\"Toby says he'll be done with it today,\" Barnes snapped back, never one to let another sailor speak against the ship's carpenter. \"You might know it if you ever bloody spoke to him you rank idle-headed lout. Your work giving you so much trouble you can't be bothered to do it?\"\n\nRoland resisted the urge to smile at Barnes' particular way of insulting others. \"Enough,\" he said before Dooley could say whatever idiotic thing came to his head. \"The rudder will take at least another day to do properly and Toby knows it. The weather to the west may help us diverge course but our best plan is still to get back to Nassau as fast as possible.\"\n\nDooley grunted, searching for another place to espouse his opinions. \"We should pull in our sails. We can barely steer with the men working as they are. We could be sucked into this storm while they hammer away.\"\n\nRoland shook his head. \"That's not an option. Right now the winds coming off it are the only thing keeping us from falling straight into the Navy's path.\"\n\n\"It's also ripping the boat apart!\" Dooley fumed.\n\n\"She's as solid as they come! No finer boards have found themselves held by stronger nails and you would do well to keep a respectful tongue in that hole you call a mouth!\" Barnes shouted, once again rising to defend the absent carpenter.\n\n\"We've sailed through worse, Dooley, or have you lost your stomach for sailing as well as working?\" Luke chimed in. He crossed his wiry arms across his chest and glared at his Quartermaster with sharp blue eyes.\n\n\"Say it once more, Stephens, and I'll gut you from\u2014\"\n\n\"Enough!\" Roland said, louder this time. Dooley frowned, turning his round doughy face into an almost comical expression of anger.\n\n\"Perhaps, destroying The Charon is precisely the aim,\" a voice growled from behind Dooley. Stephens and Barnes looked surprised for a moment, as if they'd forgotten the presence of the fifth man, but Roland had not.\n\n\"Mr. Abbott, did you have something to add?\" Roland asked, his voice clear of all disdain.\n\nThe older man came forward, his stiff leg more obvious as he leaned heavily on the other. His hulking, gnarled fist came down on Barnes's map but the navigator made no attempt to make him move it. Roland's face took on a practiced blankness that was sure to aggravate the man and waited. Abbott stared at him from under his riotous brows.\n\n\"Mayhap that a fellow begins to ask themselves about a captain who seems so willing to damage his ship for the sake of speed, who seems less than concerned about the Royal Navy creeping up his wake,\" the man paused to make his point, \" and who consorts with those who would do his crew harm. One might get to thinking if that captain doesn't have other plans for his shipmates.\" Abbott spoke from behind a great beard he was incessantly proud of. He stroked the long greying ends that fell down to his stomach as he finished, and leaned back from the table as if to declare the conversation finished.\n\nRoland looked at the man with a glint in his eye but he kept his voice even. \"Mr. Abbott, I appreciate your loyalty to this ship.\" Captain Dougray was left unmentioned. \"But if you ever question my interest in the welfare and survival of the men, I will be forced to prove you wrong. And that begins with weeding out those who sow discord amongst stout hearted soldiers to further their own agendas.\"\n\nThe threat could not have been spoken more plainly, and the three other men stood silent in its wake.\n\nAbbott would not. \"One might think those looking to sink the ship would be of more concern.\"\n\n\"If you, Mr. Abbott, a rational, grown man cannot see that Mrs. Bell offers no more harm than any other woman, then you are more a fool than most children.\" Roland had not intended to insult his Master Gunner, but Abbott was finding himself on the wrong side of too many lines.\n\n\"A woman?\" Dooley cried, picking up on Abbott's behalf. \" That woman bewitches the hearts of your crew with song. She stabbed our captain in the neck! And who was it, pray tell, that placed her so advantageous-like in Captain Dougrey's hands?\" Abbott had turned his dark look to Dooley who finally trailed off.\n\n\"Now see here,\" Barnes started. His seniority on the ship was second only to Abbott's and he had never liked Dooley, but this was Roland's fight and he stayed the navigator's tongue with a subtle move of his hand.\n\n\"Mr. Dooley, are you accusing me of murdering Captain Dougray by handing him a captive siren I somehow colluded with while she was on a merchant ship from Belfast? And Mr. Abbott, am I to understand that you believe I am currently scheming with this magical creature in order to sink a boat I also happen to be on with the aim of killing all those on board?\" Dooley had the good sense to look abashed to have his nonsense laid out in such plain language. Abbott, never one to give in on anything, continued his stony glower.\n\nWhen neither offered a response Roland continued. \"You will return to your work for now. I assume I will hear no more of this. But do keep in mind that I take the welfare of this ship and those on it quite seriously.\"\n\nDooley looked like he was going to say something until Abbott landed the back of his formidable hand in the middle of the younger man's chest. The two of them stalked out of the chamber, Abbott grumbling something as they departed.\n\nLuke Stephens spoke up as soon as they were out of earshot. \"You've got to shut him up, Captain. Dooley's a sea anchor in bad winds and he's going to take us all down with that lug-brained Abbott.\"\n\nRoland nodded at him. \"I will consider it. For now we need to make it back to Nassau without the Navy getting to us first. If he wants to call for a failing vote when we get there, let him. I'll happily shed the weight.\"\n\nBarnes nodded. \"Though not all of 'em are convinced of your lass's status. You might find a bit of sense in concerning yourself with their nonsense spreading through the crew.\"\n\n\"Where do the men stand, Luke?\" Roland looked to the boatswain who had been keeping his ear close to the boards since the first whispers of Abbott's opinions had made their way around the ship.\n\nThe older man shifted weight as he spoke, his wiriness matched only by the impression of great energy coiled tightly inside him. \"Mostly the same as it ever was, Captain, though some on the second gun crew have gotten a bit shiftier of late. Abbott's still no better at making friends and Dooley isn't doing their camp any favor by spending most of his time with his boots up but the men do like him all the same.\"\n\n\"They like his dice and his whore stories,\" Barnes grumbled.\n\n\"Do keep me informed. Their rumors are no less ridiculous but they are increasing the stakes.\" Roland turned to Barnes. \"Tell me, given the storm gathering to starboard, could we get closer, use the winds to our advantage?\"\n\nThe man sucked air through his teeth. \"That's a risky move Captain. Given that she isn't in the most favorable of conditions and these here winds are pushing us along prettily enough, if The Charon comes about in these conditions we might not be able to hold her out of the worst of the storm.\"\n\n\"He's right,\" Stephens added. \"At the very least we've got to wait till the rudder is back in shape. After that, we might consider it, if the Navy springs up to port again.\"\n\n\"Luke, check in with Toby on those repairs. I'll be up at second watch,\" Roland nodded to the two men as they gathered the maps and left. He sat down in one of the chairs, refraining from rubbing away the pounding in his head. Abbott was worse than a dog shifting masters, and Roland was only too aware of how much damage a rumor could do when spoken to the wrong men on his ship.\n\nHer soft footsteps drew his attention. She stood just inside the door, her hair plaited down her back against the wind. The sun had kissed her skin pink across her nose and cheeks and the dark shadows below her eyes had abandoned their posts. She shifted closer to him at his gesture, her bare feet steadier than they had been.\n\n\"The second gun crew?\" he asked, as she stopped just out of reach.\n\nShe nodded. \"Mr. Arnold, Mr. Fisher and Mr. Schmit are no longer attending their watch's shows. Mr. Butler left during a tale in the mess. Mr. Schmit seems the most regretful but he is also prone to fearful episodes. You might see to Mr. Stephens shifting his watch.\" The music in her accent helped dull the persistent throbbing at his temple.\n\nIn as far as gathering information on the crew, Kenna had proved to be the most invaluable of the three. Once he secured her cooperation, her survival the first and possibly-only consideration she had, she had been free to move about alone. She sang on deck and below, spending time at meals spinning tales. The men left their dice to hear her, giving her time to observe the crew more thoroughly than anyone else could have.\n\nA fortnight had passed since she'd stopped fighting to hold back her pleasure, and he'd enjoyed the change. But though she hid it well, he could still see the moment she warred against him and chose complacency. She was softer this way, but his work was far from done.\n\n\"Mr. Abbott speaks for the gun crews,\" Roland said, reconfirming for himself that he had never hated a garment so much as the ones that swamped her body now. His eyes crept up her form as he spoke. \"But perhaps Toby can use a few more hands with the rudder.\"\n\nShe gave him a small smile at his solution and he held his hand out to her. An instant of tension and then her palm was against his. He pulled her into his lap so she was seated sideways. There was no flinch as he brushed the stray hairs from her cheek, though there was no lean into his touch either. Something about it challenged him, and as far as distractions went it was his favorite.\n\n\"Do you think Mr. Barnes and Mr. Stephens will be able to help?\" The nervous tongue on her lips undermined the steadiness with which she spoke.\n\nHe slipped his hand beneath her shirt and onto her back and watched her breathing shift. \"I assume so, Kenna, though even they are not quite as helpful as you manage to be.\" His other hand cupped her bare calf, feeling the firmer muscles there and running his thumb underneath the cuff of her breeches. \"That story you told about the village baker's deceit seemed rather timely.\"\n\nKenna shifted slightly as his fingers traced her scars softly. \"It seemed a fair warning to beware the fantastical beliefs of old men who hold their own interests paramount to all else.\"\n\n\"Your impression of me has improved,\" he whispered against her neck before kissing her there.\n\n\"The Mayor was a good man, trying to save the village from the foolishness of the Baker's schemes.\" She swallowed as his hand began to move up her thigh, his nose brushing the bare skin behind her ear. \"In no way based on anyone here, I assure you.\"\n\n\"Oh no, Kenna?\" He did so enjoy the way she moved when he said her name. \"Seems one might draw a different conclusion given your skill.\"\n\n\"All art is at the mercy of its observer. I cannot control how another might chose to interpret my stories.\" Her voice grew more strained as his hand cupped her heat and his mouth was more insistent at her neck.\n\n\"I do believe you are beginning to enjoy swaying the crew with your songs.\" Roland spoke as he pushed his hand against her core, drawing the desired gasp from her. \"The life of a pirate suits you.\"\n\nThere were certain challenges he knew she could not resist and his girl did not disappoint.\n\nShe swallowed her moan as his fingers went back to work. \"Is that how you will alleviate your conscience at abducting me?\" The hand at her back slid around the lower border of her ribs, drawing her in closer. A small smile she didn't see pressed against the back of her neck when she took up his lure. \"I dare say the courts will not accept such a defense.\"\n\nRoland growled into her ear as he pinched her nipple, making her back arch towards his hand. \"You know I have never suffered from anything so pedestrian as remorse.\" He ran his tongue over the pulse on her neck as he pulled her nipple farther drawing a whimper from her. He pushed her further, \"And any dreams of court houses you have are distant fantasies, Kenna.\"\n\n\"I should resign myself to being prisoner to a man who has claimed me like chattel.\" He pulled her shirt off, drawing her back against his chest so he was free to roam her breasts with both hands.\n\n\"Such protest.\" His hands covered her breasts, nipples hard against his calloused palms. His lips hovered close to her ear. \"Are you so eager to return to the society of those who traded you away? Was life as a wife so different than this meager offering?\"\n\n\"I would be no man's wife again.\" She groaned as he pinched both nipples, rolling them as she arched prettily in his lap. \"But I would have my life, however bleak or pointless it may be in your estimation.\"\n\n\"Hmm,\" he murmured against the skin of her cheek. One hand delved lower, running across the smooth skin of her stomach and under the waistband of her last remaining clothing. \"Yes, proper society seems a better choice. You could be trapped in your sister's home, draped in black, some glorified nanny for her children. One might see how that life could be preferable to one at the cruelty of a pirate's whims.\" He found her, wet and spread for him. \"Do you ever wonder how you will do with the absence of this?\" His finger sank into her as he spoke and her hips moved to press against his entry.\n\nHe swirled a finger against her clit and she writhed for him. The other curled inside her and her head fell to his shoulder. \"Lust is not a life,\" she gasped, stubborn as ever at having her say. His cock pressed painfully into her bottom, her resistance never failing to make it all the more satisfying to break her down. \"Do you imagine that I relish the opportunity to have my choices limited by you rather than by propriety?\" Her voice caught as he slipped her hard bud between two fingers, pressing gently back and forth on the slippery flesh. \"Shall I prefer this prison?\" That she could maintain her argument as her pussy spasmed around his penetrating fingers never failed to impress him.\n\nIt was short work to remove her breeches, a bit more to loosen his own. He wasted no time lifting her up and impaling her, groaning as her wet channel yielded to him. She called out, her peak so close but out of reach. He took the thick plait of auburn hair in hand and used it to pull her head back onto his shoulder, so he might see down the plane of her body. She moaned deliciously with the tug at her scalp. He rocked inside her, feeling the clench of her cunt around him.\n\nHis other hand came to the angle of her jaw and he tipped her face towards him till her green eyes focused on his own. \"You forget Kenna.\" He moved faster, bringing her to the edge and then backing away. \"I do not care what you prefer.\" He stroked her cheek and down her neck. His hips moved against hers more roughly; another lovely sound came from her throat. \"This,\" he emphasized with a forceful thrust, \"is mine.\" His hand returned, running over her clit in ever-tightening circles. \"Come for me Kenna. Show me how painful it is that I own you.\"\n\nHe sealed his lips over her compliant ones. Her kiss spoke of the desperation of being so near that precipice, and the torment she felt at wanting to fall over it. Her body tightened as the peak came. Her hand found its way into his hair, pulling him further into her with every ripple he felt against his cock.\n\nHis hands ran down her body greedily, coming to rest on her hips as he moved her against him. She was so supple, so acquiescent in her body, but never in her mind. \"You will say it, Kenna.\" He lifted her up only to move their bodies back to joining again and again. A dark possessiveness drove his movements as they gained in intensity. \"You will come to see that you have no choice left but acceptance.\"\n\nHer second orgasm hit her then, pulling his control apart with her sounds, the tremors of her muscles beneath his fingers, the pull of her cunt and its vice grip. He grasped her ribcage, moving her faster and harder until he came. Her noises changed; he could hear it even as his seed gushed inside her but he had been too far to hold back.\n\nHe pushed her forward so he could see her back. Her scars could not be sensitive enough to make her whimper like that. He moved his hand off a dark purple patch of skin on her lower ribs. Her body jerked away from his hand when his fingers returned to trace the sharp edge of the bruise.\n\n\"What is this?\" his voice was studiously bland.\n\nKenna fidgeted but did not get off his lap even as he softened inside her. \"It appears I haven't taken to this life as well as you might suspect.\"\n\nHe was not interested in sparring now. \"Tell me now.\" The blank edges of his tone were rubbing off.\n\nShe stilled for a moment, her face hidden by their position so he could not see what she was thinking. He stood up, pulling himself from her and reestablishing his state of dress before she turned around on her shaky legs.\n\nThere was no fear in her face when she looked up at him, her hair haloed around her head after he'd mussed it. She was searching him in a way he was not entirely used to.\n\n\"I fell against the gunwale when the ship was rocked yesterday. The inclement weather has tested my sea legs and I did not live up to a sailor's standards.\" He did not appreciate the way her eyes fixed on his, or the impression that she was discovering something he had not allowed her to. Her bright green eyes flitted over his face and then back to stare directly back at him. \"This disturbs you,\" she said at last.\n\n\"Your clumsiness does not affect my emotional state.\" Even as he spoke he heard how defensive it sounded. She had him off balance. \"However if your failure to find proper footing leading to injuries such as these, it seems they warrant informing me.\"\n\nShe kept looking at him with that strange piercing look. He quelled his anger. The only way to keep the balance was never to step too far off it. \"The shackle as well,\" she said softly, as though thinking aloud, \"and by your own words you have no interest in my pain.\"\n\nRoland had enough of her consideration. He turned to the table, taking up the last of the mead left from his midday meal. When he turned back to her she hadn't moved. She stood, nude and unashamed, her head tilted to the side and her eyes fixed on him.\n\nRoland broke first. \"What is it that has captured your attention so completely?\" He could feel it, the shift in power. For all her resistance and fighting for the past month she had never been more effective at subverting him.\n\nA hint of a smile crept onto her lips, his discomfort clear to her. Roland turned to face her completely but didn't approach. Reacting to her strongly before she disclosed her revelation would only serve to increase her conviction that she had rattled him. He gave her a look his favorite tutor had used often. Her lips split into one of her rare smiles and he was disappointed he could not enjoy it.",
        "\"You don't want to hurt me,\" she stated as if it were something new.\n\n\"Yes, Kenna, we have spoken on that subject before.\"\n\n\"You lied,\" she said, nearly cutting the end of his sentence off.\n\nHe glared at her. \"I have never caused you injury, Kenna. And my intentions are as I stated them in that regard.\"\n\n\"About your parents,\" she said again speaking over him. This brought him to a halt, though the same could not be said for her. \"You said that there were no lasting lessons learned from the story of your patronage, that the civil contract is nonsense because nothing was learned, wrongs were simply acts that had their consequences and required no response from you or anyone else who had suffered these natural occurrences and indeed reacting to these ills with a sense of injury would lead to their own demise.\"\n\nHe longed to snap back at her to get to the point but he bit his tongue against sounding petulant.\n\n\"But it isn't true. You care if I'm hurt because you have a sense of what is right and wrong, feeble though it may be. You are indeed concerned with not repeating the sins of your father.\" Her eyes were alight and he found no beauty in it. \"You spoke as if you harbored no ill will because that would lead you down the same path as Captain Dougray but there has been some effect, some consequence.\" She was intelligent enough not to mention his mother. He discovered his hands clenched in fists and released them.\n\n\"Your premise is flawed,\" he said, face and tone set against her again. He would not entertain this further. \"The connection between injury to your body and the actions of my father is presuming a great deal that you do not know.\" She opened her mouth but he continued. \"What is more, my argument remains sound. There is no justice, divine, civil or otherwise. Pursuing it is folly; there is no reparation to palliate the damaged party, and anyone trying to do so will likely find they have only compounded their own tragedy.\"\n\nHe shifted to walk towards her. \"And that is exactly the point; this is your tragedy, not mine. The world does not care either way. And so your fantasy about court sentences for those who have wronged you is only distracting you from the very act of survival because you eschew acceptance.\"\n\n\"For some of us, fantasies of escape are the only things that keep us alive.\" It was clear she was no longer speaking of him. He watched her shoulders curl a bit and the somber lines of her face draw downwards. She crossed her arms, and turned away from him.\n\nThere was a moment he wanted to reach out, but he had to consider the position he had only just regained after her prodding into his past. He turned his back, intent on the door.\n\n\"Don't leave on my account.\" The tone in her voice was the same, unwavering from her initial line of questioning. He looked over his shoulder. \"Second watch isn't for at least an hour so you can't expect me to accept that you are leaving to attend to some pressing matter.\"\n\nHe turned, arm over arm over chest and stood his ground. Perhaps foolishly so, but leaving her in such a state was distasteful. \"And what would you like me to occupy my time with here?\" He ran his eyes up and down her form, another challenge to her.\n\n\"Answer me one question.\"\n\nHe tipped his lip up on one side. \"I don't see why I should entertain one who is clearly in such bad humor.\"\n\n\"I will answer one of yours, truthfully and completely.\" Now that was something.\n\n\"Very well, Kenna, ask your question.\"\n\nShe took him in before she began. \"When you requested The Changeling of St. Ann, did you know that Yanno's words would remind you of your father?\"\n\nShe'd done it. After weeks of trying to sound like him, she'd managed to speak her supposition with the firmness of her conviction. He was impressed, or he would have been if the question hadn't surprised him so. The uncomfortable feeling, which had been insidious earlier when she'd begun, threaded itself fully beneath his ribs. It was one he had long buried, one that had no place here, on his ship.\n\nHer body was too small to represent an obstacle. The crew could be allayed with his abrupt choice by simply admitting she was a siren all along and had returned to the sea after she promised to spare the crew. Hell, it could even solve Abbott's little intended uprising. She and the feeling would be gone, swallowed by the waves, never to trouble him again.\n\n\"No, I did not,\" he said instead.\n\nShe nodded, her severity breaking. \"Thank you,\" she breathed. The relief in her face betrayed her assumption that he would not have answered her.\n\nThe clawing feeling inside him did not abate as her tension seemed to. Part of him howled for revenge on her, another wanted to seek distraction fully seated inside her cunt. It occurred to him that there was no reason he could not do both. There was some breach in her defenses now and he would be a fool to pass this up.\n\n\"On the bed, Kenna,\" he said in a low voice, hiding darker tones that would only serve to terrify her. He wanted to rip her apart, but there was more than one way to do that.\n\n*\n\nKenna moved towards the berth without balking at his command. He'd answered her, and she felt some duty to uphold her end of the bargain. What was more, she had shoved her fingers into the eye of a sleeping beast and he had not taken her hand as payment.\n\nShe sat back on her hands, her legs bent, thighs meeting though not pressed together. He looked at her with an expression she did not fully recognize, but he had revealed something of himself at her design and not his own. It was a first and Kenna knew the swell of true victory.\n\nHe removed his shirt in time with his first step towards her. The quality of his approach was unfamiliar. The predatory gleam was tainted somehow, darker, and the slice of fear up the back of her neck reminded her it was not long ago she'd thought to forsake that fear.\n\n\"On your stomach.\" The command came hard and again she felt the blade at her back again.\n\nShe turned stiffly as he came to stand over her, muscles coiling in anticipation of whatever retribution he intended. She cursed herself again, for her feelings in that moment after his answer, the distinct lack of righteousness when the one who wronged her admitted his own past injuries. Relief had been followed too closely by gratitude and something she might have described as affection. And here she was, a foolish idiot, face down with a monster at her back.\n\nKenna tried to steady her breathing but fear kept her control from her. His boots fell against the deck and the sound of his belt loosening made her flinch. Dread curled inside her as she fought to keep herself in position. He promised he wouldn't hurt her. But that was not true. He'd only said he had no interest, not that he'd never employ those methods.\n\nThe berth dipped as he took his place behind her, his bare legs caging her own, a hand pressing in next to her back. There was no quarter for her. Even before he touched her she felt as though each inch of skin was alight with the potential of feeling. Panic melted into something else; her body begging to press into him, to spread her wet thighs and show him how his claiming effected it so.\n\nWhen his lips brushed over her scars she gasped harshly, the fear of worse ebbing as it had before. He rested his hand in the small of her back, the muscles beneath it knotted and quaking. He did not comfort her, but continued his kisses across the raised flesh. The feeling was both odd and soothing in the lack of violence. The arousal her fear had somehow stirred up took over and her next gasp was softer as the tip of his tongue met the end of the scar at the curve of her lower ribs.\n\nSensation in her scars was more sensitive and somehow less precise at the same time. She felt the tip of his tongue run across the ridge of another and she gasped. It was strange but arousing all the same. His hand on her back slid up, skimming softly over her skin.\n\nHer mind swirled in confusion. It felt good, too good. She had not imagined this reaction to her question, as there was something menacing in his intention as he came at her. And yet he'd never touched her so gently before. Her body sang for her surrender under his mouth and fingers, begging her to end the constant strain of resisting what she knew he could give her and could so easily be confused with true affection and feeling.\n\nShe wanted to fight the pleasure radiating across her skin, her complacency in his attention to her disfigurements, to keep him from igniting sensations from the last place he should be able to. But it felt so right, and embracing it such sweet relief.\n\nKenna realized she was leaning into his touch. The feeling of his slow caresses and precise kisses was oddly exciting. He lavished attention, sweet and unhurried, on her greatest source of shame. The light touch over the alternating levels of feeling she had in her back and the way his tongue dragged along the furrows left by the cane made her shudder.\n\n\"Roland,\" she gasped. He never paused as he worked his way down, each line of skin getting equal attention from his mouth and fingers. Kenna tried to push herself into him, to increase the contact and answer the coiling desire inside her. Her shame faded, the anticipation and arousal potent when combined with the seductive draw of release from all she'd borne since the day her husband had struck her for the first time.\n\nFor the first time since he'd claimed her she let her mind agree with her body, to accept what he offered without fear or opposition.\n\nHis tongue skimmed the lowest scar, peppering light kisses across the puffy skin. She wriggled as much as she dared, though his hand still kept her mostly pinned to the bed.\n\n\"Tell me what you want, Kenna.\" His voice rolled over her skin; his kisses continued down the small of her back.\n\nThis order should have stopped her; he was giving her a moment to let her wishes be known. She should have considered her response, reeled in her senses and answered him with a demand for what she most desired; to be free from him. She should not have allowed his moment of truthfulness to burrow its way inside her, permitting her to reveal something deeper, something she could not admit to herself.\n\nShe whimpered and twisted, trying to get closer to his mouth. He held her tighter and his mouth drifted across the swell of one creamy buttock leaving a trail of soft kisses in its wake. He licked her right where her leg began making her jump as arousal shot from the sensitive skin up to her heated core.\n\n\"Oh, please,\" she whispered, words tumbling without thought, without calculus. Kenna was gone; the pieces she had so tightly constructed, layer after layer of disguise, crumbled beneath their own weight as he picked his way towards those hidden corners of her mind.\n\n\"Say it,\" he said, his voice tight as he gripped her, pulling her onto her knees. Kenna raised herself up on her arms to follow.\n\nThere was no thought left to stop her, no preformed barrier to hold her back. Her body had submitted, and her fight had crushed itself under its own weight.\n\nShe tried to push back but he held her still. \"Please, Roland! I want you,\" she confessed, mindless and deaf to her own words.\n\nShe felt, rather than heard, his growl. His teeth pressed lightly into the swell of her buttock, his lips tracing a fiery trail down to her weeping slit. She called out as his tongue crept between her nether lips, the sensation strange and wonderful in this position. He slid his tongue into her channel which clamped down immediately, a flood of arousal running through her. Her soft sounds were getting louder as he lowered himself further, still holding her still, and his tongue curled around her pulsating nub. She called out in earnest then, her arms shaking as she tried to hold her body up from the bed. It did her no good.\n\nWhen he closed his lips over that pearl of pleasure she was lost, the orgasm ripping through her body entirely unhampered for the first time. Her arms collapsed and her upper body fell forward. She rested her forehead on her hands as he sucked and nibbled her sensitive flesh until she thought she might die if her peak lasted any longer. He released her as she started to shake, whimpering as the overly-sensitive folds begged for reprieve.\n\nShe felt him rise up above her, and despite the languid feeling that suffused her, shifted her hips, allowing her heat to come up against his hard flesh.\n\nHe groaned, rubbing his length against the slick offerings of her sex. She gasped again, feeling the turgid steel against her softness. \"Kenna.\" Her name rolled from his chest, the arousal in his voice both surprised and exhilarated her. His hand smoothed up her back, tangling in her hair and pulling on it just enough to bring her head back and make her groan.\n\n\"Oh god, please, Roland.\" She shoved herself back towards him, completely out of control. The senseless release was too tempting in this state, a drug against everything that weighed her down. He released her hair and clasped her hips tightly and she felt his heated skin pull away. And then he thrust into her, filling her greedy hole in one powerful move. Kenna screamed into the mattress as he began to pound her from behind. He felt immense inside her and the stretch was nearly painful but it did nothing to diminish her need for more.\n\nHis hands gripped her, pulling her back even as he pushed forward, the impact jarred her, her skin alight with the impacts of his own. \"Oh god, oh yes.\" She gripped the sheets under her fingers, her body tensing once again. A great wave of pleasure rose up deep inside her, rolling through her in uncontrollable surges as muscle, skin and bone were buffeted in the storm of his creation. She was adrift, the terror of losing her tether to herself should have grounded her but it pushed her higher, farther than she could have thought to go. Her body shook beneath his fingers and she called out his name as her peak crashed over her.\n\nHe brought his hands up her side, slowing his pace ever so slightly. She found herself dragged back and up so her back was pressed against his chest, his knees keeping her legs wide, his shaft buried deep inside her. He buried his head in the crook of her neck, his mouth latching onto her skin there as he began to move in and out of her again, the position finding previously unexplored places inside her.\n\nShe lost the ability to define his touches and simply felt him everywhere.\n\nHe took full advantage of her newly exposed breast, kneading the mounds and catching her nipples between his fingers making her moan louder. He used his hold on her to move her into him as he pushed his hips forward, burying himself over and over between her stretched thighs. Kenna pushed back as well, her gasps and moans filling the room as he worked his mouth across her shoulder. One of his hands grasped hers and slid it down between her thighs. Their fingers intertwined and he forced hers to rub her clit, his larger hand controlling their movement.\n\nHer head fell back, resting on his shoulder, her neck bared to his devouring lips. The fingers pressing roughly on her clit sent the heated pleasure spinning out of control once more. Roland never ceased moving against her; she felt so full of him. She screamed into his clasping hand as she came, never having felt him anticipate her release. His fingers were tight against her cheek and he moved faster. She could feel his shaft disappearing into her at the tips of her fingers, her body impaled over and over again. The air she sucked through her nose was not enough for her pleasure-drunk body and black spots danced over her already-cloudy vision. She did not care. Nothing existed for these moments, no past, no pain, nothing but two bodies pressed together, seeking their own mutual ruin. He groaned her name in her ear as he came, his fluid movements coming undone as he jerked inside her.\n\nThe pair fell forward, though he held her tightly around the waist and caught himself from falling on top of her with a hand braced against the bed.\n\nKenna felt lightheaded and boneless. She was breathing hard, matching his breaths as he remained above her, hovering over her prone form. He let her slide to the mattress on her front. Before today it would have been unnatural for her to lie this way, her back exposed to his gaze. But now she did not consider moving, she could not think of anything so mechanical.\n\nThe oblivion she sought took her quickly, before her mind cleared of all he'd done, of what she'd felt and confessed aloud. There would be reckoning when she awoke and examined her actions. The question he had yet to ask loomed at the edge of her awareness; another chance for him to delve deeper, to pry past her defenses he had so resoundingly shattered. But in that moment, lying on her front, her muscles long since past use, her mind's troubles drowned by thought-destroying pleasure, she felt peace and it was enough.\n\nRoland watched her eyes close, heavy lashes coming to rest against flushed cheeks. He moved off the berth and away from her, his heart still pounding in his chest, the beast inside howling in victory. He could not join the revelry, settling on grim satisfaction for having finally gotten true submission from her. There was work to be done.\n\nHe pulled his clothing back on, turning his mind away from dwelling on the sound of his name on her lips, the push of her hips back towards him. Despite the distractions, he had heard the bell for the next watch sound out during their coupling, and the work above deck was more important than this.\n\nHe did not look back at her before quitting the room, the temptation no longer of interest. He made his way above deck, the cool humid air whipping around him as he emerged topside. Up on the forecastle, Luke Stephens waited for him, spyglass in hand.\n\nHe nodded to Roland and handed it over. \"You were right about the rudder, Toby says likely by tomorrow.\"\n\nRoland nodded, \"Have Mr. Schmidt and Mr. Butler sent to help. I think Toby could use a few more hands.\"\n\nLuke betrayed a little surprise at the choice of two specific men but he didn't question it. \"Aye, Captain.\" He turned to stern and looked out at the churning grey sea below them. \"You might keep an eye out for Dooley, he's been prowling around muttering since you sent them on their merry way.\"\n\n\"I will take it under advisement.\" There was some leftover irritation from the events of the past few hours and Roland was distracted enough to let it slip. Stephens cast an eye over him.\n\n\"Berth too small for two, Captain?\" the man asked with a laugh in his voice.\n\n\"I don't know what you mean, Stephens.\" Roland reverted back to his good natured front. It had not taken him long to discover he needn't share any truth about himself for the men to feel like he was open with them. Though deflecting their questions without them noticing was easier when the mention of his bed didn't bring to mind the form of the one currently sleeping on it.\n\nThe man chuckled. \"Never did find myself with the same weakness for fire tops as Dougray and I'm not surprised one of them ended up being his end, especially not one so fine.\" Roland arranged his face into a blank sentiment of pleasantness. \"Voice like an angel as well. You keeping her aboard once we hit Nassau? She's been a right asset for morale.\"\n\nRoland braced his hands on the gunwale, eyes fixed on the far horizon where grey clouds gave way to the ever-receding blue as they sailed further along the edge of the storm. \"Anything to keep them from their dice,\" he said grimly. The fate of Mrs. Bell was not one he contemplated aloud.\n\n\"Aye, but we've had all sorts on board to keep them entertained. Remember that piper we got off that schooner with the tobacco? Kept him for a good while.\" Stephens grinned. \"Granted he weren't so pretty or so skilled, but after a month the men didn't want to hear him more than once a week if that. Your girl runs all over the ship with stories and songs all day and it takes a heart of stone like Abbott not to enjoy it.\"",
        "\"Is this a petition I'm hearing?\" Roland didn't look back at the Boatswain. He intended to keep Kenna; of that he was certain, but he had no such intentions for the crew of The Charon.\n\nStephens shrugged. \"I suppose I'm saying we like having her about, captain-murdering siren or not.\"\n\nRoland cast his eyes over the man not much older than he was. There were few men on board he considered worth the trouble of sailing and Luke was one of them but he found the turn of this conversation settling on something he'd rather not contemplate. \"You can consider your opinion heard on the topic.\"\n\n\"Don't mean to nose in or nothing,\" the man continued. Roland had begun to regret his tactics for staying close to the crew. \"I know you're likely worried about Abbott using her against you for a vote once we touch sand but I wouldn't pay him so much mind. You know most of the men are on your side, and Dooley isn't doing Abbott any favors being the laziest quartermaster this side of the Atlantic.\"\n\n\"You might be underestimating them,\" Roland said, eyes back on the grey seas.\n\nThe man grunted, neither affirming nor denying Roland's assumptions. \"Well, either way, most of the men know you are the only thing holding this boat together till we get back and offload all this cargo. I'm just saying, for what it's worth, that Mrs. Bell might fetch a pretty penny at the whore house, but she'd be worth much more here.\"\n\nThe boat pitched and Roland resisted the urge to grab the man beside him and bloody his face on the deck. He turned, looking down to Luke's open expression and mirrored it. \"I've heard your piece. Let's stay ahead of the Navy and Abbott for now. The crew might be more easily swayed than you think.\"\n\nThankfully, all Luke did was nod. Roland felt the crackling anger under his skin and yet his lips drew up in a reassuring smile as the Boatswain made his way down below to get the two men he'd assigned to their new posts.\n\nRoland looked over at the ship's wheel. With the repairs on the rudder the thing served as less than decoration, taunting him as it sat there useless. He tried the sea once more, allowing the muted emptiness of the water to smooth over the jagged pieces of him that threatened to break through. She was still sleeping, below deck, her hard shell broken in pieces. He need only go back and take her.\n\nAnd yet some part of him still wanted more. She would give herself up to him. Completely.\n\n*\n\nThe light had dimmed considerably by the time Kenna woke up alone. The boat pitched as it had since they'd begun edging around the storm. She stumbled trying to reach her clothes, hitting her shoulder on the table. She swore, something the men had taught her. She stood, rubbing her arm, wondering if Roland would take offence to this bruise as well.\n\nShe paused, realizing only then how oddly unaffected she felt. Her shirt made its familiar path over her head as she examined herself. How could she feel so normal after what had happened? There was no weight pressing behind her shoulder blades, no knotted feeling in her gut. That in itself should have been disturbing. She had done the very thing she had always sworn to herself she wouldn't. He'd asked her what she wanted and instead of telling him she wanted to go free, she had told him she wanted him like some simpering maiden. She cursed again, but with no heat.\n\nIt was not until her mind landed on the question he had yet to ask that the familiar sinking feeling of anticipation returned to her chest. She had no time to contemplate it as the door swung in and Roland entered, bearing their evening meal in his hands. \n\nAll at once her body was alight in an overwhelming number of reactions. She froze, realizing for the first time that those tiny blooms of pity and understanding she'd experienced over the course of the last few weeks had grown into an emotion she couldn't quite believe. But there was no mistaking it now; she felt affection for him.\n\n\"Good evening, Mrs. Bell,\" he said in mock formality. The sly smile on his face made her flush as if he must know what she'd been thinking. He placed the bowls and mugs in the center of the table to keep them from falling over the side as the ship rolled beneath their feet. \"Won't you join me?\" he said as he sat.\n\nAn uncomfortable feeling grew inside Kenna. The ease in his behavior made her wary, as if he might spring a trap over her at any moment. And what further trap could he spring on you, foolish woman? She sat down opposite him, feeling ill-equipped to face him. What had she done? What feelings had she let in when she'd sworn she would not? How could she let his kind touch supersede the violence with which he tore away her freedom?\n\nHe contemplated her over their salted fish and hard tack biscuits. She didn't try to speak, unaware of any topic of conversation she could maintain while these thoughts swirled in her head. Roland seemed content to allow her the silence.\n\nWhy did she feel so threatened now of all times, when he had finally coaxed from her the truth of her desires? She had submitted and he had triumphed, surely now she was safe from any violence. But he had never threatened violence, and had made it very clear he never would. So what had she saved herself from? What had she gained from giving in?\n\nNothing, in truth. Perhaps he might think her more easily controlled, a modicum more trust might be afforded to her. But with no escape and their destination not one she where would find any sympathy, it seemed a poor trade for her loss of self.\n\nThere it was. The truth at last. She'd lost her war with him and he had her vulnerable. Her emotions, pleasant though they might feel now, were her last weapon against his claiming of her. If she no longer hated him than he had breached that last wall, and she was lost.\n\nHer despair must have shown in her face because Roland broke the silence for the first time since she could remember.\n\n\"You owe me an answer, Kenna.\" She felt a tug in her lower belly when he said her name which was quickly swallowed by the pit that opened up upon realizing his meaning. She lifted her eyes to his, begging silently for him leave her in peace just this once. But he had the advantage, and they both knew he would never give that up. \"Come now, Kenna, it's just a question.\"\n\n\"Why must you press your victory when you have already taken what you want?\" a slow simmering anger began inside her. He had everything he could possibly want from her, what more could he take? What piece of her would he want now?\n\n\"That is why,\" he said gesturing to her stiff posture, the defiance of her body to his prodding. She opened her mouth to snap at him. \"But more than that,\" he cut her off before she could take a breath, \"because it is such sweet relief, is it not?\"\n\nShe pulled back then, into the chair, curling her shoulders as if she could protect herself from him by sinking into the furniture. He was right, of course, that every time she stopped fighting, some piece of her sadness left her, the weight she'd carried with her for so long. But in its stead was not always happiness, he twisted her up inside till she did not know which was worse.\n\n\"Why did he beat you?\" Roland asked quietly. She should have known he would have gone there. He could have asked after her family, her upbringing to elucidate why she too occupied a strata far below that which she was born into. But he was astute enough to realize that her family was not as formative to her current disposition as the situation that had made her a murderer.\n\nIt was with that thought that she knew she would tell him everything. She would confess her sins as he'd prompted her, back when he'd discovered her scars, all those weeks ago. In doing so she would make herself more vulnerable to him but she no longer had the will to fight it. Part of her, all of her, wanted to make known her sins. From the moment she'd seen her husband's body, she had sworn to tell no one\u2014no one in her world could ever accept a murderess, not even her sister. And here Roland offered her that chance.\n\nAnd still to speak it was too difficult, the words escaped her and she did not know where to begin.\n\n\"Do you know the tale of The King Stork?\" she asked, volunteering a story for him for the first time.\n\n\"I remember some,\" his deep voice rumbled. \"It is a long tale, is it not?\"\n\nShe nodded. \"Do you remember the fate of the drummer and his bride?\"\n\n\"Refresh my memory,\" Roland said, his eyes fixed on hers, allowing her to answer as she could. Kenna took a moment, as she'd often done back at home, moments before throwing herself into the ink-dark seas to swim in the frigid waters. There would be no going back after this, but just as she'd never been able to stop herself from the call of the surf, she could not ignore the call to expose herself to him once more.\n\nKenna closed her eyes and breathed the story before she began to speak it. \"There once was a princess as wicked as they made them. Suitors came from near and far, offering for her hand in marriage. She would set before them three tasks, and if they could not complete all three, they would die by her hands. She had decorated the walls of her father's castle with the heads of every one of them. But her beauty was more famous than her cruelty and by and by a drummer, just back from the wars, heard rumor of her beauty and set off, intent to try his luck.\n\n\"On the road to the capital, the drummer came to a large stream, swollen with spring, and was about to begin across it when an old man asked if he wouldn't carry him along. The drummer thought it cruel to leave the old man sitting in the mud and took him onto his shoulders without much trouble. But as they neared the other side, his burden began to weigh him down terribly. When the drummer staggered onto the bank, a young man sprang off his back, tall and healthy as they come.\n\n\"'Good fellow, you have broken the curse the one-eyed witch set upon me. I am the King Stork and forever in your debt.' Well the young drummer was quite surprised but he inquired with the man if he had heard of the princess. 'You will wade yourself into a much murkier puddle if you attempt to tame that woman,' the King stork warned. But nevertheless the man gave the drummer a dark cap, which would make him appear as nothing more than the air around him, a feather to help him fly like a bird, and a net as fine and delicate as cobwebs. Lastly, he advised the boy to stand below the princess's window as the clocks struck midnight.\"\n\nRoland was intent on her face as she spoke, the content more interesting than her performance for once. She seemed to relax as the words spilled from her lips, the fear she'd betrayed when he asked his question was gone as she sank into her storytelling.\n\n\"Now when the drummer arrived and stated his purpose the king wept for him, for his daughter was vicious and ruthless. But the drummer persisted and soon sat down to eat with the king and his daughter. She was as fair as they had said, ebony hair and pale skin, ruby lips and wide green eyes that glittered with malice. She told the drummer that she would ask him one question he must answer, and he must ask her one that she could not. And if he managed to survive, she would give him a final task. The princess bid them good night and told the drummer she would ask him her question on the morrow.\n\n\"That night he did as the King Stork bade him and waited below her window at midnight to see her fly on a magnificent set of wings from her chamber's window. Clutching his dark cap to his head, and sitting upon the feather, he followed her to her mother's home. The one-eyed witch welcomed her daughter into her castle at the peak of a glass mountain. She listened to the tale of the newest suitor and advised her daughter to ask the drummer if he could tell her what was troubling her mind at that moment. If he could guess that it was the witch's aching tooth, then he had answered truly. The drummer smiled and followed the princess back to the castle.\n\n\"The next day he stood before the court and the princess asked him if he could tell her what she was thinking of. The Drummer smiled and asked if she thought of the moon and its ever changing faces. But that was not it. Was it the color of silks hanging in the market? Not that either. Was it the aching tooth of a one-eyed witch? The princess said nothing but her face betrayed her fury at being bested. The king cheered for the drummer had passed the first test.\n\n\"Now the drummer needed to ask the princess something she couldn't answer. But she was the cleverest woman in the world, so he had to ask her something she wouldn't. 'I dreamed of a one-eyed witch who lives on a glass mountain, She opened her window to her daughter who flew to her on silver wings. I could not see her face, so I was wondering if you knew who the woman was.' Now the princess could not answer, for to do so would be to give herself away. So she sat mute until the king proclaimed the drummer had passed two tests, much to the relief of the court.\n\n\"'Bring me the one-eyed raven by tomorrow, or I shall remove your head and place it with the others,' the princess said and she stormed out of the throne room.\"\n\nRoland tried not to grow impatient with the story though its connection to Kenna's situation seemed remote at best. But he'd seen her concede defeat, he knew she would not hide from him. So he calmed himself and listened still.\n\n\"The drummer agreed and set off the next night, back to the castle on the glass mountain. He came upon the one-eyed witch and threw the net the King Stork had given him. Immediately the witch turned into a horrible one-eyed raven who screeched and pecked at the drummer with its massive beak. But being a brave soldier, the drummer grasped its neck until it was dead. The next day when he presented the bird to the princess, she fainted dead away, knowing full well it was her mother who lay before her.\n\n\"The day of the wedding the King Stork returned, his face grave. 'You have succeeded at winning her hand, but the princess is still a witch at heart. Go to the forest and cut a hazel switch as thick as your thumb. Tonight when you get your wife alone, pour a bowl of fresh milk over her head and lay the switch upon her.\"\n\nRoland's edginess vanished. He had not remembered this part of the tale. As a boy he had always had short patience for stories and had wandered away before the end more often than not.\n\nHer voice lost the sing-song lilt and her breath became ragged as she neared the final scene. Her eyes were open now, her faraway gaze not focused on the tale, but lost in her own past.\n\n\"That night, the drummer shut the doors to their chambers and turned on his wife. He poured the milk over her head and took the switch in his hand. He grasped her in his fist and laid the switch upon her furiously. He found not a woman under the hazel, but a snarling black cat who came at him with silver claws. The drummer would not stop and he made the switch fly, though this time it was a grey wolf, snapping at him with her powerful jaws. So he kept at it, laying down the switch with all his might. Finally he found a giant snake that lashed out towards him and spat fire. But the brave man held his ground, moving the hazel as fast and as hard as he could.\"\n\nRoland heard the change in Kenna's voice as the tale came undone, her sweet melody gone and only the dull words left without her song. She was not telling the story anymore, but living it.\n\n\"And suddenly his beautiful wife reappeared, tears glistening on her cheeks. 'Please my husband, no more. I will be as good as you wish all the days of my life.' The drummer set down the switch and smiled. 'That is more the wife I intend to have.' And from that day forward she was as good a wife as ever churned butter, though her husband never left the switch far from his hand.\"\n\nThe pain in her voice made the intended happy ending seem grotesque in its blithe indifference. Roland's hands itched to lay themselves once more on her scars, to feel the living flesh breathe beneath his touch. His girl quieted, no tears or sighs followed the end of the tale.\n\nFor a long moment Roland turned over his thoughts. It made sense that a girl, born of outsiders, would be viewed with suspicion in her small village. But enough to make her a witch? He thought of that day he had first uncovered her scars, there had been shame in her eyes. But knowing her as he did that would not have been for her husband, brute that he had been.\n\n\"Why would anyone confuse the two of you?\" he said, a smile he did not truly feel on his lips. \"She with ebony hair and yours the color of sunsets in summer?\"\n\nFor a moment she did not move, her eyes still fixed on the wall of the chamber. But there was another shift in her face, one he recognized as the moment she chose to give in to him, as she had so many times before, and she would continue to until he was satisfied. Her green eyes met his hazel ones and she considered him for a moment.\n\n\"How old do you think I am?\" she asked him. She saw the flicker of surprise and curiosity in his eyes. It pleased her that even as she opened herself to him, he was not as all-knowing as he liked to appear.\n\n\"Twenty if you forced me to answer,\" he said.\n\n\"Why forced?\" she asked again.\n\n\"Well when I first saw you I would have said five and twenty given the dress. Then the second time,\" he glanced at the berth and back at her, \"I would have said a maiden.\"\n\n\"My father fell ill a few weeks before my seventeenth birthday,\" Kenna said softly, her eyes drifting away from Roland's face. \"My mother had passed a few years before. My sister and her husband were already gone to the colonies and my father was concerned I would be left alone in a hostile village, all on my own. So he found me a husband and arranged the whole thing within a month and a half.\" She twined her fingers in her hair as she spoke, unconscious of the tightness that appeared in her face, making her seem much older. \"That was nearly seven years ago.\"\n\nShe looked back at Roland and saw some bit of understanding in his face. But the act of confession soothed her, and she would speak it all aloud so no piece of her story was available for him to fill with assumptions of his own. If she was to give herself up, she would do it completely.\n\n\"For the first few years the lack of children didn't seem to be more than bad timing. My husband worked for a shipping company and was often away. Once he returned for good, having changed positions to avoid the sea, it became apparent that I was not producing children as I should.\" She took a breath. \"He had always been a bit heavy-handed. Not like most husbands, mind you, who come home with too much drink in them and lash out. My husband was controlled in his discipline, though some might say a mite quick to mete it out.\"\n\nRoland watched her eyes darken, the downward tilt of her mouth that he'd seen soften over her time on his ship reappeared. But she did not look broken or frail as she had before. She took a deep breath. \"He brought me before the priest a year ago, after his beatings had failed to encourage conception. The priest told him that I was a witch who ate her offspring before they could be born to be good Christians. He told my husband to bring me to the church for punishment, the combination of God and my husband's discipline would surely convince me to return to the bosom of my Lord and Savior.\n\n\"It didn't work, as you might imagine. The punishments grew worse. Each month I was brought before the priest and punished in the church. Then people began to hear of it, and some would attend the beatings. Finally, the priest said there was only one way to save my soul, and the wickedness must be bled out of me.\" Kenna was looking into the cabin but seeing nothing of the ship around her. She saw the faces of her neighbors as she was lead to the public stocks, dressed only in her shift. Some hungry for her pain, some fearful, some pitying, but it all blurred into one mass of people who stood by to watch as her husband brought the cane down on her back over and over.",
        "\"I collapsed at some point, but my husband delivered each blow the priest instructed him, believing to the last that it would save his wife from the wickedness in my soul. It took a fortnight for me to be able to stand, two more before he began trying again.\" Kenna's hand clenched and she dared glance at Roland's face. \"When he began bedding me again I knew it was only a matter of time before I failed to produce a child and he took me back to the church.\n\n\"His company called him to Belfast to help manage the purchase of three more ships and I insisted on coming with him. I told him that the dark forces of the devil were waiting for him to leave so they could reclaim me. He, of course, believed he was the only one who could save me so he brought me with him to the city. I sent word to my sister that he had died before I'd carried it out.\"\n\nHer face grew sad, though Roland saw no repentance or guilt there. \"I poisoned him slowly so that it seemed as though he was ailing. I began before we even left for Belfast. By the time he died there was no suspicion of me. I buried him and told them all I was going back to my village. I found a ship that was set to sail and bought my passage with coins I'd been hoarding away for years. A week later we set sail.\" She looked back at Roland, \"and three weeks later your ship attacked.\"\n\nRoland was intent on her face. \"You don't regret his death,\" he said, puzzling over something. She shook her head. \"So why your guilt?\"\n\nEven as he asked he understood, but again Kenna stole herself from allowing her silence to answer for her. \"I do not regret choosing myself over him, despite his earnest belief in the goodness of his actions. I know survival is a difficult instinct to ignore and I don't fault myself for it.\" She paused. \"I am an empty vessel, one without the ability to fulfill the purpose for which I was made. It was not his fault I am barren.\"\n\n\"But you were ailing when you first arrived on this ship,\" he prompted her.\n\n\"Indeed, I have suffered pangs of my conscience. I do wonder if it was not my intended fate to suffer under him for the uselessness of my womb,\" Roland's face darkened and she reassured him. \"Despite being taught by the church and my betters to accept these types of punishments, it is not an outcome I have ever accepted. Your Captain Dougray can attest to that.\"\n\nA strange lightness blossomed in her chest, ripples of it flowing up the back of her neck and across her cheeks until her lips gave way into a smile she'd long forgotten. She looked up at Roland, finding him staring back at her, his head tilted to the side slightly. Kenna did not deny the next wave as it bubbled up as laughter and she felt her voice freed. Tears gathered in the corners of her eyes and through her wavy vision she saw Roland get up and come around the table to her.\n\nHe turned her chair and crouched before her. His hand brushed her wet cheeks, and he placed a soft kiss on her still smiling lips. But the well of relief was shallow, in its wake panic at her complete unveiling burst through.\n\n\"With this knowledge,\" she said, her chest rising and falling with the effort to keep her new distress at bay, \"will you find yourself ill-disposed to continue claiming a woman in name alone?\" Is this what she had been reduced to? Fearful that her captor would release her of all things? But she knew too well her survival rested on his desire to keep her. He could be rid of her easily, confess the truth to Abbott who would have the crew up in arms against the Siren, so inhuman she could not carry a babe. And she would be gone and his ship would be divided no longer.\n\nShe may have betrayed herself to her own death, and yet she could not imagine taking it back.\n\nRoland kissed her again, ignoring her tears as he had always done. \"Every time I believe you to be a woman much wiser than most men, you insist on reminding me that you have yet to accept that which I have made clear to you again and again.\" She wiped her cheeks and looked at him as he spoke, anxiety and hope weaving themselves together inexorably whenever he said those words: \"You're mine, Kenna.\"\n\nThe storm inside her settled preternaturally, she stared at him with wide eyes as she felt two opposite and equally intense things at once. The first, her heart soaring after his declaration that he would accept her broken body as he had before he knew of it, that he would not condemn her as she had been before. Her affection burst forth into full bloom.\n\nBut, with the second, the words slammed a door on that joy almost as soon as they'd engendered it. She would never have a choice in this, he would never allow her freedom beyond his desires; she would remain property. There would be no new independance discovered in the New World as she had secretly hoped. She would be just as much his prisoner as she had been her husband's.\n\nRoland saw it all, her eyes open and vulnerable to him as she reeled through her various responses. He kissed her again. She was his now, and with time she would come to accept it. A woman who had killed two men who stood between her and freedom? The thought barreled into his victory unbidden. This is a woman who will simply learn to live with it? He silenced the doubt, for now. He would eventually find a way to bind her to him irrevocably; after all he was closer now than he had ever been.\n\nA whistling sound shrieked through the quiet in the room. Roland jerked away from her as a splash sounded close to the ship. The hammering at the door began as he reached it and Stephen's red face greeted him on the far side.\n\n\"The Navy,\" he panted, \"They're on top of us.\"\n\n*****\n\nHello again lovely readers. \n\nSo first a footnote: \"The King Stork\" is a fairy tale I had a picture book of when I was a kid (this is what happens when you have a medievalist for a parent) and, while I abridged it here, I didn't make up the more gruesome details. \n\nCheck my bio page for updates on the progress of the story. \n\nThanks so much for reading! You guys are wonderful."
    ],
    "authorname": "AmoryParks",
    "tags": [
        "pirate",
        "colonial period",
        "period drama",
        "captive",
        "pirates",
        "power exchange",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/siren-ch-07"
}