{
    "title": "The Twelve Zenati Pt. 12",
    "pages": [
        "Author's note: Hello everyone. Unfortunately, I haven't been as well as I would have hoped by now and the treatment has worn me down so I am a bit slower than usual. While I will continue to get chapters out as fast as possible, please excuse any future tardiness especially over the busy holiday season. I hope you continue to enjoy this series of the Tables. Thank you once again to Kate for being my second set of eyes. Enjoy! ~ellie. \n\n*****\n\nGideon watched as Vivienne turned and walked further down the corridor to the suite where Olivia and Genesis lived at present. He couldn't pull his eyes away, even after she had turned back and given him a soft smile before walking through the door. He had thought that once he had won her, married her, possessed her completely that the need for her would diminish enough for him to be able to get back to work and do what he needed for his table and his family. His need for her and to be with her as much as possible had only increased in the weeks since they married, to his constant amazement. \n\nIt took willpower for him to turn away from the corridor and walk into the room that had become their base of operations. While not quite an athenaeum like the generations before them, this room and building had potential and was becoming more and more streamlined and purposeful every day. The combined and varied intellect of his brothers and cousins was proving better than any of them had imagined in the beginning. They skillfully managed to juggle the needs of their elders of the first table with those of their own to ensure the care of their families as they worked with the AFP to ensure the Suebi were decimated if not entirely defeated.\n\nGideon saw Noah, who once again he sat with Xavier and Dominic in hushed conversation at the conference table in the glass-walled room. He'd noticed that for the first time in weeks Noah had seemed relaxed and loose-limbed as if dispelling some of the tension that had plagued him, and Gideon had thought that he had finally acted on the obvious attraction between himself and Marcella. He'd been wrong he'd realised, as the two continued to dance around each other with oddly flirtatious and cutting banter during their family dinner. He was curious about what was going on with his brother and became determined to have a heart-to-heart with him today after the meeting Xavier had called this morning. \n\nApproaching the three men, he smiled widely and prepared some humorous quips for each of them when the serious looks on their faces and obvious tension in the air brought him up short. His quips died on his tongue, and his smile dialled down to a cheeky smirk as he tilted his head in question. His normal mode would have been to break the tension with a teasing joke, but something told him that wasn't what was called for here, so he took a seat and let the smirk drop, becoming serious.\n\n\"Someone want to tell me what's going on? You three have been acting like you broke your mama's favourite vase and stuck it back together with bubble-gum,\" Gideon asked looking at each of them in turn.\n\n\"Where's Gen?\" Xavier asked, glancing around the room. \n\n\"I imagine he'll be here in a minute, I can hurry him along though,\" Gideon said easily and pulled his phone from his jacket pocket.\n\n\"Tell him we need to leave,\" Xavier said without preamble, \"And he needs to come with us when we go.\" Gideon raised an eyebrow but sent the text message as he stood with the others walking back toward the corridor.\n\n\"Where are we going?\" Gideon murmured softly to Noah.\n\n\"We've been summoned by the old men,\" Noah grumbled but gave his brother a look that said he wouldn't discuss it further yet. \n\nGenesis caught up to them as they exited the building and met Orlando who stood leaning against his dark SUV with a grin. \n\n\"Shotgun,\" Gideon chuckled and walked towards Orlando who opened the front passenger door with a flourish. It was only when Genesis climbed into the back seat, and he realised the other three men would be taking another car, that Gideon once again became suspicious and worried about what was going on with Noah and the two leaders of their table. Something was going on that he couldn't get a handle on, and he had always prided himself of being ahead of the game. He tapped his phone in thought before turning to question Orlando who was chatting easily about Olivia's recovery with Genesis, but before he could get a word out Orlando shot him a look similar to the one Noah had given him as they left the building.\n\n\"Do either of you want to tell me why we've been summoned?\" Genesis asked, noting the look Orlando gave Gideon in that moment of silence.\n\n\"I'm as clueless as you,\" Gideon said in a serious tone, showing his brother the truth of his words.\n\n\"I expect we'll all find out soon enough,\" Orlando shrugged.\n\n\"There's no way you don't know what's going on,\" Genesis accused. \"You're the goddamn watchman!\"\n\n\"You don't honestly believe that Claudio lets me near any sensitive information yet?\" Orlando chuckled. \"You know how he is about his family secrets. I'm not sure it's him or even Papa who called this meeting, though. I think somethings going on with X and Dom,\" he confided.\n\n\"You noticed that too, huh? Except they seem to have drawn Noah into their conspiracy in the last few weeks or so,\" Gideon added his own concerns.\n\n\"Even I've noticed that much,\" Genesis agreed. \"It has something to do with the Tatar woman who came with us to the AFP deposition. Beyond that, I haven't found out much more.\" The fact that it also seemed to involve Marcella seemed so ridiculous that he hadn't even bothered investigating that small snippet of information he had managed to glean from reading between the lines when he spoke to the three men.\n\n\"You know more than me then,\" Orlando frowned. \"What makes you think the Tatar are pushing this agenda?\"\n\n\"After the deposition, Noah and Marcella went to meet with another agent about the assets and Olivia's access to her personal belongings. Something went on in there beyond Marcella being a demanding, disagreeable bitch as usual,\" Genesis grumbled. \"Noah started meeting with X and Dom every free minute after that and seems to be keeping even closer tabs on Marcella without appearing to, though I doubt she has anything to do with what's going on. She didn't even know Olivia was alive until I found her,\" Genesis tried to put his confused findings into words for Orlando and Gideon.\n\n\"Yeah, it was definitely around then that all the Secret Squirrel stuff started happening,\" Gideon agreed.\n\n\"I guess we find out now,\" Orlando announced as he pulled into the long driveway of the manor style house that served as the home for the current leaders of their family. Stepping from the car they turned as Noah and the other two men parked behind them and joined them before walking into the house.\n\n\"Guess this is pretty fuckin' serious,\" Genesis murmured to Gideon as they were greeted by the Steward and shown to the Athenaeum. Gideon grunted and nodded in response still trying to get a read on what was going on. Nothing he knew about would require this level of table involvement at the moment unless they had uncovered another conspiracy. All eight of the remaining current table were present and looking as serious as Xavier and Dominic did.\n\n\"Welcome gentlemen, if you would take your seats, we'll get on with this,\" Anthony, the chair and head of their family said and waited for a beat as several watchmen used as personal security for the chair and his immediate family filed into the room before shutting the door. A feeling of unease settled further over Gideon, and he looked at his father's unusually dour expression before giving Genesis a look that expressed his apprehension.\n\n\"You don't think I have enough stress in my life at the moment without all this cloak and dagger bullshit?\" Genesis asked into the silence, unable to help himself. He fell silent again at a raised eyebrow from Anthony and a stern look from his father. He wasn't usually disrespectful in any way, but the atmosphere around this meeting was killing him.\n\n\"You're not the only one caught in the middle of a stressful situation in their personal life,\" Ambrose spoke up, sharply rebuking Genesis before anyone else could. Having passed on most of his family medical practice to Hector now, Ambrose rarely spoke at family meetings and it surprised the younger men into silence. \"Stop being such a self-centred little prick and realise there are bigger things than your problems or those of your curse-breaker going on in this family.\"\n\n\"Sorry,\" Genesis said contritely taken aback by his Uncle's words and shook his head. \"It's been all-consuming lately.\"\n\n\"You have a right to be consumed,\" Dom said gently looking up at his uncle and shaking his head slightly. \"Part of the reason for this meeting is because of the AFP's reaction to both Olivia's statement and the demands of her sister, Marcella. Claudio is best to speak to that issue though,\" Dom fell silent as he indicated his uncle who turned to address the gathered men.\n\n\"The AFP has almost concluded their investigation into Olivia's story, and just as we found, there is little to no evidence to back up any of her claims. There is no evidence of the murder on the docks around the time she claims. There is no asset or holdings called Hermione's, and the man Jay denies its existence or having met Olivia more than once or twice while in Royce's office. The girl April has disappeared entirely. The only time she is known to have surfaced was when she tried on one single occasion to see Olivia in the hospital,\" he explained. \"Without any evidence at all to corroborate her story or timeline of events, it would appear she has perjured herself, and there is a small faction within the AFP who are pushing for her arrest.\" \n\n\"Why the hell am I here then?! I left her alone for this meeting!\" Genesis exploded out of his chair and turned toward the door seeing that the watchmen were blocking his way as if expecting this reaction from him.\n\n\"Sit down and listen!\" Armando ordered with a roar. \"This is exactly the reason you are here. So you don't scare the poor girl and put her in more danger by running off without any idea what to do or where to go.\"\n\nGideon knew why he was here now, and he stood with Genesis not forcing a decision one way or another, just letting him know he stood with him no matter what he decided to do. Even in the face of their father's roar and harsh words. He smiled as Noah stood impassively at Genesis' other side. Genesis needed to know he wasn't alone in this and they would help him protect Olivia regardless of the cost. There were long silent minutes as Genesis struggled with his anger and fears, but eventually, he and his brothers took their seats again.\n\n\"If you're finished with your tantrum,\" Claudio scowled at the brothers. \"I did not say that we don't believe her, just that we have failed to find any evidence thus far. The Tatar are going to help and also believe Olivia's recount of events. They also believe that the sister, Marcella, might be the key to finding out more. She seems to have her own agenda and asked questions we hadn't considered. Rather than discouraging her from pursuing Olivia's interests in the estate of Remington Royce and the wedding certificate that she claims to know nothing about despite her signature on it, we feel it will serve our needs better if you allow Marcella Gambaro more freedom to explore this avenue.\"\n\n\"I don't think you realise what you are asking. Marcella is like a bulldozer and has no respect for the authority of the Table or the Tatar in this matter,\" Noah spluttered. \"She is barely civil to the men of the AFP!\"\n\n\"Be that as it may be, it still seems like our best chance to discover something missed in the first sweep and subsequent cleanup. The AFP at least acknowledge Olivia had a boat that they haven't been able to locate. The evidence is clear on that, so there is cause to throw aspersions on what else they might have missed in their investigations. The fact that all evidence gathered from the estate is now being sifted through by the best forensic accountants and scientists they have at their disposal is making some agents very uncomfortable which is why some of those men are calling for Olivia's arrest,\" Claudio explained further. \"Our contacts, like us, believe the Suebi have sympathisers within the AFP just as we have men who work with us on these cases.\"\n\n\"Our contacts have assured me no warrant has been issued, nor is there a hearing to discuss one scheduled at the moment. So, we have time on our side for once,\" Anthony added to the conversation. \"Dominic's work with the Tatar is more important than ever if we wish to find out who the remaining Suebi are, where they are and what they are hiding. It would seem Olivia is a key part of this hidden agenda and the sooner we get to the truth of it all, the safer she will be.\"\n\n\"I agree. What you do now is important, Dominic. More important than your reasons for not doing what needs to be done,\" Ambrose said. \n\n\"Enough of this!\" Claudio raised his voice angrily. \"It is obvious that there is something to be said about your health Dominic. Now I can see the concern in Ambrose's words, and you can guarantee it is only a matter of time before I find out and tell everyone anyway, so you may as well speak,\" Claudio narrowed his eyes on his nephew. \"Ambrose may abide by a code of doctor-patient confidentiality, but I don't.\"\n\n\"I'm sick. I need some treatment. I'm stepping down in favour of Noah, who has more talent than I do anyway and has already forged relationships with the Tatar. He will negotiate with his father and Isaac around his other role, but he assures me they can balance it out,\" Dom skimmed over the part about being sick and needing treatment as quickly as possible without looking at his fathers, hoping they would concentrate on Noah and his newly discovered skill set. His hope was futile however as anxiety and a simmering rage that they had not been informed immediately took over the leaders of the table.\n\nArmando caught Noah's eye and nodded, his obvious pride showing in his face as he made sense of the conversation he had with Noah the day he had come into the facility. He wondered briefly how the rest of Xavier's brothers would take the news of a cousin stepping up into the Oracle position before turning back to the conversation about Dominic's illness. A brain tumour... Biopsy... Possible cancer... Fuck! This was beyond just being sick; this was life and death. Armando's anxiety rose with the rest of his brothers. He glanced at his sons again and prayed something like this would never affect them.\n\n*****\n\nMarcella knew she had a tail within minutes of leaving the clinic. They obviously thought her stupid or oblivious to the stupidity of table men if they thought she wouldn't check. She may not have grown up with watchmen watching her every move, but she had enough people willing to tell her parents what she was doing and who with that she had become good at evasion. She'd honed those skills, including investigation, as she got her law degree and began to practise. You have to know your opponent intimately if you ever want a chance of winning.\n\nShe sat at a red light considering her options. She knew that if she purposefully lost them this time the net would tighten around her next time. Did it matter if they followed her today? She was only going to the marina to talk to Vinnie, the sleazy marina manager she planned to threaten until he told her the truth about Olivia's boat and maybe the murder Olivia witnessed, if he had truly known about it as Remington had told Olivia he had. If the boat had been impounded there would have been at least a trace of it in the paperwork at the police impound yard, which there wasn't. That meant something must have happened to it here, that it was taken from here or hidden here. Even if it had been scuttled or torn apart for spare pieces at least Olivia would have answers.\n\nThe boat certainly wasn't new information, so she decided to let the man tail her for the moment. If there was more information, she didn't have to act on it today. It occurred to her briefly that the tail could be her father's inference. She wouldn't put it beyond him to send someone to watch her. To see if she was telling the truth about dating a Zenati man, a tabled man. She doubted it though. He barely gave his disappointment of a daughter a second thought, preferring to put all his pride and energy towards the oldest of the sisters who was living the life of a good table woman, married to a Farnese man and pregnant with her third child.\n\nMarcella rolled her eyes and shook her head. Her older sister, Jessa, was happy. Marcella could acknowledge that much. She was happy to be away from their family more than anything, or at least that's how it was in the beginning, but on the few occasions she had seen her sister, she could see how happy and content she really was in her new life. It was hard to begrudge her that happiness. Still, being a prize broodmare for any of the Twelve Tables men was not something Marcella ever aspired to. She determined to get Olivia everything she possibly could from Royce's estate, and then she would go home and pick up the remnants of the life she had chosen for herself. At least the life she had chosen before she had found her sister alive. \n\nMarcella pulled up at the marina manager's office and stepped from the car. She had asked Olivia some delving questions to get a good picture of the man before coming here today. She'd been planning this for days, and as soon as she had the opportunity to escape from the constant presence of Noah or Gideon who seemed to be there every time she turned around lately, she had put her plan in motion. She glanced at the reflection in the office window, seeing the dark car parked a reasonable distance away but no doors opened. She couldn't make out the men inside watching her, but she knew they wore the black of the watchmen.\n\nIt was only when she had plans with Vivienne or Olivia that Noah and his brothers seemed to disappear to take care of their own business, leaving the watchers who no doubt reported back to them. She sighed and wondered how long she had before Noah and or Gideon showed up to ruin her plans yet again. The watchers she could deal with if she had no choice. They didn't interfere or try to take over once she was on the trail of a snippet of information about the missing items, people or places that her sister spoke about in her deposition. Noah may be able to wave it off, but she had been around enough rich men trying to hide their affairs and assets from angry wives hellbent on divorce with a side serving of revenge that she knew the AFP would be doubting Olivia's story and asking if she was poised to take over the Suebi herself. Especially after finding the wedding certificate signed and officially lodged after the ceremony was interrupted.\n\nMarcella believed her sister, however, and she was determined to protect Olivia and see that she got everything she deserved from the assets of Remington Royce's estate. This was the first step in her overall plan. When in doubt go back to the beginning and follow the same path. She opened the door and stepped into the luxurious office. It was obviously styled to impress the luxury yacht owners whose large boats seemed to take up most of the marina. She was beginning to question what Olivia had told her about the manager until he appeared from a door in the back area.\n\nShe could imagine that the man had once been very handsome, a sun-bronzed sailor who would have been very popular with the bored housewives and rich bimbos that frequented the yachting set. Now, however, his tan was starting to show the damage of too much sun, his face was creased and weather-worn, and he had a small but obvious paunch from the life of excess he had obviously led. He may once have been a popular guest amongst the rich and famous that used this marina, but now he was probably nothing more than staff, someone they paid to protect their big boy's toys. The man took her in at a glance his eyes roaming over her body with a leer before speaking.",
        "\"Good morning, Miss...\" He paused so she could fill in the blank for him. \n\n\"Mrs Royce,\" Marcella said, using the fake identity she hoped would get her what she wanted from this obvious player. She had no qualms about lying and playing dirty to get the information she wanted and prove once and for all she was more capable than the Zenati men gave her credit for. She held out her hand to him and fought back her reaction to him based on Olivia's words as he took it in his own sweaty paw. Olivia was right, he was a player on the edge of the world of the rich and influential, and he was using their power and influence in his position here to boost his own persona. He certainly gave off an air of power and confidence as he introduced himself.\n\n\"Vincent Vella, this is my marina. Are you looking to purchase a berth?\" he inquired, not letting go of her hand as he spoke to her tits, seemingly unable to draw his eyes away from them. She had dressed purposefully playing to this man's base nature, to entice him to be interested enough in her flirtatious come-ons to talk to her and perhaps tell her things he may not tell the other investigators who had come here before her.\n\n\"Perhaps,\" she said enigmatically and lifted an eyebrow. \"I guess that depends on how helpful you can be. I've recently received a large inheritance, and I have always loved the sea, but I am looking for a particular boat, and I thought you might be able to help me,\" she practically purred at Vinnie. She withdrew her hand slowly from his, letting her fingertips glide across his palm allowing him to believe she was interested in more than just a birth for a yacht or boat. \"Do I look familiar to you at all?\" she asked, stealing herself against the lie she was hoping he would fall for. She looked enough like her sister to fool someone who didn't know either of them well, and she hoped the sleazy player in front of her had been ogling Olivia's tits instead of her face as much as he was ogling hers.\n\n\"Familiar?\" Vinnie asked, narrowing his eyes showing he was clueless as he studied her face as if she was about to hit him with something he wasn't going to like. \"If you think I'm your...\" he paused and seem to rethink his words before spluttering \"Baby-daddy. Think again!\"\n\n\"God no!\" she backed away a little. \"I had a boat berthed here not quite a year ago. Then I got involved with a very rich, very powerful man and left my boat. Now I am a widow and trying to track down that boat because I left something very important aboard, something that could make anyone who helped me find it a great deal of money,\" she kept her voice in the same sultry purr she knew he appreciated now. \"I know other people have been looking for my boat and that Remington hid it shortly after we started dating. You remember my husband, don't you?\" she asked in a soft, breathy voice, stopping short of spelling it out for him.\n\nMarcella watched as confusion, recognition and doubt clouded Vinnie's face. He seemed equally suspicious and horrified, and she leaned forward toward him drawing his attention back to her cleavage, she was giving him even more of a view now. Then she took a moment to consider what to say next to get him to break and tell her what she needed to know. She had quizzed Olivia relentlessly about this time in her life both before and just after meeting Remington. She knew enough to sway him if she could just get him to believe that she was Olivia. She opened her mouth to speak and add to the lie when he stepped back drawing his eyes from her tits and seeming to shake himself.\n\n\"You're the chick everyone's been asking about, Olivia,\" he looked instantly wary but regained his composure, stepping back once more to put distance between them. \"Like you said, they took the boat. It's not here. I can't help you,\" Vinnie said slowly as if regretting each word as he put more distance between them.\n\n\"You forget I know you, Vinnie,\" she said using the name Olivia had always used for him. \"I know you keep track of everyone and everything in this marina. I know nothing happens here without you knowing and that you would have kept proof of who took my boat and where it was taken. I am a very rich woman now, and I really need something that was on that boat without anyone else knowing I was here. I can make it worth your while,\" she purred again, allowing him to believe payment could be in more than just money. He wasn't so bad looking, and if she didn't have to look directly at him, she could do that. She knew how to play the game. She wanted the boat if it was at all salvageable, she wanted it for Olivia, she wanted it to get one up on Noah who always seemed to interfere with her plans and take over.\n\nVinnie's eyes drifted to the wall of glass at the front of the office that looked out on the carpark. His eyes seemed to take in all of the cars at once as if putting a name to each one to make sure nothing was amiss and that he wasn't being duped by the agents who had come before her seeking this information.\n\n\"You know what else Vinnie? I keep track too, I have the receipts for payment for my berth, and it details my boat. You were responsible for it, and you let someone other than me take it. Of course, you may have had a good reason, like a murder that was never reported to the authorities. A murder I witnessed on your docks in your marina,\" she let that shadow of a threat hang between them for a moment. \"You and this marina were responsible for my boat even if there was no murder,\" she charged on. \"If you didn't allow someone to take to take it, you should have reported it to the police as stolen which you didn't. That puts you in a difficult situation, doesn't it?\" Marcella let him think about that for a moment before speaking again. \n\n\"There was no murder, you're delusional!\" Vinnie growled seeing the threat for what it was and not being prepared to let this woman take him and everything he had worked so hard for down.\n\n\"I'm sure we can come to an arrangement. One where you tell me where my boat is hidden and I will continue to conveniently not remember asking my husband to move it for me. Then when we find my boat, you can get what it is you want out of this arrangement. What is it you want Vinnie? Money? A yacht of your own? Something...\" her voice dropped back into the sultry purr that had been working to well to muddle his mind. \"Perhaps you have something more satisfying in mind?\"\n\nA range of emotions sped over Vinnie's face as he stared between her tits and her eyes. She could tell he was torn which meant he did know something. He may not know exactly where the boat was, but he knew something. Now she just had to get him to tell her. She considered her next move carefully as tension-filled silence fell between them, and Marcella knew she couldn't let it linger or he would think too hard about what she had said and see her lies.\n\nRealising she was losing him, she boldly walked behind the counter closing the distance between them. She smiled as his eyes dropped to her bouncing breasts which she knew would look as if they were about to jump out of the top she was wearing. Trying not to over think and remind herself she had done worse things to get what she wanted, she reached out a hand to place it at the top of his chest near his shoulder. With determination, she looked him in the eyes, holding his gaze as she ran her hand down his chest, over his waistband to settle over his half erect cock. \"Men are so easy,\" she thought to herself, keeping the smirk she felt blossoming beneath the serious look on her face under control. Marcella knew the moment she had him. His body relaxed under the hand that glided over his cock making it stiffen more, and the look in his eyes went from wary to heated.\n\n\"Are you sure you can't help me find my boat?\" she purred close to his ear, not moving any closer, just stroking him softly and breathing into his ear as if she was equally turned on. Knowing he couldn't see her, she let her smirk free as he groaned deeply. It was a sound she knew well, a sound she had heard in this kind of game before. That groan signalled his willpower cracking and opening the lock he had on his secrets. She just wasn't sure if they were the secrets she needed yet.\n\n\"Fuck!\" Vinnie growled and stepping back again. \"There's a black car out there, you're being followed,\" He announced as if she were an idiot that wouldn't know that. \"I don't know what you're trying to do, but the people you're playing games with are dangerous. I'm not as easy to manipulate as you think, but I have to admit you were always a tempting little slut,\" he paused and shook his head. \"Such a fucking hot little slut,\" he growled again, and for a moment Marcella thought he would step back into her and try to force her to pay out on what was virtually promised if he helped her find the boat. \"You may look high class now, but I have no doubt how much of a filthy, dirty slut you had to be to get Royce to marry you. If we do this, make this deal, we do it my way,\" he said his whole demeanour changing before her eyes.\n\n\"Your way,\" Marcella repeated wondering what that meant exactly and what price she would have to pay to get what she wanted. She wasn't some shy wilting flower, and she could play the slut if that was what was needed. She knew how to handle men like Vincent Vella and stood her ground as he closed part of the distance again, one large hand reaching her breast and squeezing it painfully in his fist as his thumb and forefinger found her nipple and pinched making her elicit a small whimper making him smile. Then he began whispering instructions into her ear.\n\n*****\n\n\"Okay, here's what we know for sure,\" Claudio said. He was still sitting in the same position at the table with just the leaders from both tables and Orlando with him. The others had all left with their own agendas in the wake of the revelations of the meeting. Genesis and Gideon had been reticent to leave Noah but had gone with assurances that he wouldn't be far behind them.\n\n\"That she's even more reckless than we gave her credit for?\" Noah grumbled, his voice deep and concerned. \"You realise now why we can't give her the freedom you all want her to have. She is chaos personified! A walking talking disaster zone!\"\n\n\"Marcella Gambaro went to the marina to meet with the manager, Vincent Vella. It was a short conversation, barely twenty minutes long,\" Claudio rechecked his notes, ignoring Noah's words. \"From there she drove to the apartment she is staying in and changed into casual clothes and drove herself to Wak Wak. She bought a ticket on the Jumping Crocodiles Tour which she had already been on with Vivienne only a few weeks prior. When the boat returned, she did not return with it.\"\n\n\"What do you mean she didn't return?\" Noah frowned not wanting to accept the obvious. \"The watchers lost her?\"\n\n\"Or she evaded them,\" Claudio said without any hint of censure. He was as pissed off as Noah sounded but he hid it better. Giving the girl a little more freedom was one thing but having her disappear so completely was quite another. \"Head counts are always taken on the tours. Thirty-two people got on the boat, thirty-two people got off the boat. There is no explanation other than a swap somewhere in the creeks around there, and there was no safe place for that.\"\n\n\"Disguises?\" Xavier suggested.\n\n\"Perhaps,\" the whispered word came from the usually silent Gianni who sat forward, joining the conversation and stared at Noah. \"You know her well, and Dom says you have as good if not better instincts than him, so concentrate. Put your personal feelings about her stupidity aside for a moment and concentrate. Why would she purposefully evade a watcher she obviously knew was there? Then once you have the why think of the how.\" Gianni took the tablet from Claudio and slid it across the table to Noah and Dominic. \"Look and her and tell me what was in her mind.\"\n\nNoah took a moment to compose himself. He closed his eyes and pushed down the frustration he felt when dealing with Marcella's approach to investigating her sister's story and Remington Royce's vast estate. When he opened his eyes, he got a different picture from the one he had been holding during the conversation. He stared at the picture on the screen and scrolled through the subsequent ones, slowly forming a story in his mind of what had happened. Once he had that story, he scrolled back to the beginning of the photos and began to speak.\n\n\"She was pretending to be Olivia. That's not her style. She doesn't flaunt her body or looks, and she has her hair pulled back which is the starkest difference between her and Olivia. She went there to spook him into revealing something, something she knew she would need to coerce from him. She's a straitlaced, button-down dresser. She never reveals this much skin unless by the pool and even then, not so much flaunting it as hiding it,\" he began. \n\n\"The discussion was serious, even intimate at times, looking at this and reading into that further,\" Dominic said as they scrolled slowly again through the next few pictures.\n\n\"I didn't even know she owned an outfit like this,\" Noah pointed to a picture that showed Marcella in denim shorts and a non-descript t-shirt, her hair hidden under a wide-brimmed hat. He smiled, noting she still wore heels in the photo despite the casualness of the photo. The thought amused him, and he scrolled quickly to the shot where she was boarding the boat and realisation hit him. The woman boarding the boat wore Adidas joggers not heels, and he knew for certain now that she had never actually gone on the tour. He had guessed at it, but this was confirmation. Now the question was where she had gone? Did she take her car? Were the watchers so intent on the tour boat they didn't notice her car leaving? He asked the question out loud to the stunned group and then had to explain himself.\n\n\"The car's still there, but she could have left on one of the helicopter tours of the swamp lands,\" Claudio surmised. \"We can't know for sure; the men were concentrating on the woman they thought was her on the boat tour.\"\n\n\"She went back to the marina,\" Noah said after a moment where he drew a breath and closed his eyes clearing his mind of all rational thought and letting the irrational, illogical movements of this woman wash over him. \"She went back to meet with Vincent Vella without her watcher. Now the question is why? What does he know? And what sort of danger is she in now without anyone there to protect her from herself?\"\n\nNoah felt queasy that Marcella's recklessness had put her in this much danger. He was furious that she had been so underhanded, sneaking off without any protection at all. Maybe he had been too friendly, too offhand with her. He had rejected her initial interest in him, and they had friend-zoned each other. They sniped instead of flirting and recently their banter had developed a cruel edge to it that they both laughed off. Perhaps Gideon had been right, and he had made a mistake that first night, and she had been playing him ever since. His stomach rolled with the thought that she was so cold and calculating that she would use her friendship with him to be part of the investigation and criminal proceeding just to get what she wanted and not trust them in the same way. \n\n\"Bitch,\" he muttered and got to his feet. \"I'm going to the marina,\" he grumbled with such a dark expression on his face that Gianni barked an order at him to stop.\n\n\"I think you better tell us the rest before you go, don't you?\" Gianni said in a deceptively mild tone, and Noah retook his seat trying to decide how much of what he felt he could tell and how much he needed to keep hidden deep inside.\n\n*****\n\nMarcella was in control; she'd been delivered to the mid-range speedboat by helicopter and Vinnie's handsy friend, Greg. Then told to wait downstairs until he arrived. Surprised by the fact that he had people ready and willing to do his bidding, she had done as he had instructed. There was a lot more to Vincent Vella than met the eye, and she intended to discover all that he was hiding about Olivia and the Suebi, who obviously frequented the marina, before she was done with him. She sat in the salon not prying into any of his personal effects lest he arrive and catch her. Instead, she sat and plotted his downfall and how to get all of the information she needed before that happened.\n\nVinnie, like so many before him, would be easy to seduce and subdue. She knew men well, she had learned to become a master manipulator where men who played at being dominant were concerned, and she hadn't gotten any real alpha vibe from him. Even those who had true dominant personalities gave up their power easily enough once they believed they had a woman's submission on some level. \n\nThe problem with that was, she never gave her submission easily, and if anyone ever managed it, she didn't give it up for long. That type of dominant men were few and far between, and when she turned the tables on them, they either walked away believing her duplicitous and manipulative or they submitted to her wishes in order to keep her. Only one had ever walked away, and she was sure he regretted that decision. Still, she never indulged in more than a brief affair, even with the men who got her and could meet her on equal ground. \n\nMarcella tended to stick with short-term affairs or one-night flings. She wasn't the type to become involved in messy relationships or, god forbid, real feelings. She cared only about her mother and her sisters with any real feeling. Perhaps Vivienne had also wormed her way past all of Marcella's fortifications, but she never exposed herself to anything more than surface feelings for her friends and colleagues at home in Perth and pure indifference to the rest of the world.\n\nMarcella knew without a doubt that she was in no danger as she boarded the cruiser and was not troubled at all when Vinnie arrived and order her to stay below as he manoeuvred out of the marina and small harbour. When she knew he was driving the boat, she poked around the small salon and single bedroom below deck. She found an interesting draw full of sex toys and restraints and smiled to herself. A perfect little treasure she was sure she could make use of later when she gave in on her promise to him and interrogated him at the same time. He would not be the one using those toys on her, she grinned.\n\nIt might have been seen as dangerous, heading out to open waters with a man like Vinnie, and she could practically hear Noah's lecture about being reckless in her mind. The thought of Noah made her consider what she was doing, but she was supremely confident that she was in control of this little excursion and she could handle a man like Vinnie easily. He thought he was getting a sweet little slut in the form of Olivia, little did he know what he was truly getting in exchange for the secrets he had been keeping. She found a book in the bedroom and went to stretch out on the couch until Vinnie was ready to negotiate, talk or whatever for her to get the information she wanted.\n\nThe engines seemed to slip into a drone of neutrality that told her they were stopping or at least slowing and she twisted her head toward the stairs as she heard his footsteps descend down to where she was. She waited until he was standing close enough to observe her properly before she stretched languorously, her arms and the book lengthening above her head as she arched her body provocatively.\n\n\"Reading?\" Vinnie raised his eyebrow.\n\n\"Your friend took my phone back at the tour, so you left me little choice. It was read or sleep,\" she answered with a shrug.\n\n\"I thought you might have taken the opportunity to get comfortable at the very least,\" he smirked at her. \"I intend to claim payment in full once you have what you need from the old boat. Do you need to change?\"",
        "\"Not at all,\" Marcella came to her feet and pulled off her t-shirt in one fluid motion revealing a version of the upside-down bikini that made her smallish breasts look bigger than they were. Having the underside of the breast exposed and pushed together made her appear to have far more cleavage than otherwise possible, and she smiled at the look on Vinnie's face as she checked the slim strips of material were still held in place.\n\n\"Very nice,\" he complimented her, closing the distance between them.\n\n\"Slow down, Speed Racer. The boat first,\" she admonished him, placing a hand on his chest and warding him off easily as he stopped and groaned, nodding. She could see in his eyes that he was curious about what she wanted from the boat and he was satisfied that she could hide very little in that bikini if the bottom were anything like the top.\n\n\"Follow me,\" he grumbled and lead her back up on deck where he had some snorkelling gear set out for her use.\n\nMarcella rummaged around in her bag ostensibly for her goggles but ensuring her Apple Watch had not been bumped hard enough to stop its recording of their trip. She never wore it; it always sat in a hidden pocket sewn into the lining of her bag as a backup in case she needed it. She purposely kept it separate to every other account she had so it wouldn't be used to trace her, and she hoped that was still the case even though Vivienne had seen her play with it on occasion when she hadn't been able to get reception on her phone. She planned to lead Gideon back here to find the boat and salvage it once she confirmed it was Olivia's boat. Satisfied she was ready, she stood and looked out in the direction Vinnie seemed to be concentrating. She could see a cove with a dozen or so derelict boats, some half submerged, most rotting as they floated on the surface of the clear water.\n\n\"Drop zone for illegal imports,\" Vinnie grunted. \"I don't think it's been used since the raids, although the AFP haven't discovered it as yet. There's still a risk someone might give away its location. I had a friend follow the men who took it because you disappeared that night and until I saw you at that big party on the yacht, I thought you were probably dead too,\" he admitted. \"You're not though are you, and I imagine that even though your husband is dead and most of his friend have been arrested, you will survive this as well and come out smelling like fucking roses and money. I intend to cash in on that with you, so trust me, whatever double cross you're contemplating, just know I am ready for it. If you play the game, we can do this, go back to our lives and become friends, friends with benefits, not just the obvious benefits but so much more. The next move, once we have retrieved whatever you need, will be yours, but the consequences for reneging on our deal will far outweigh any benefits you might get,\" he sneered his final threat.\n\n\"Ah, the truth at last,\" Marcella said with an equal sneer. \"I think you and I will become good friends now that we understand each other.\" She picked up a pair of fins and a snorkel and walked to the side closest to the nautical graveyard. \"You coming?\"\n\n\"Nope, this is your deal, but I'm not going anywhere before I get my payment in full,\" he said without any remorse. \n\nMarcella deflated slightly. She had no idea which boat was the right one. She knew the name but wasn't sure how to recognise a boat in such disrepair. What if the name wasn't painted on the side any longer?\n\n\"How do you know it's definitely my boat out there and not a decoy?\" she asked.\n\n\"It's the chance you take,\" he shrugged and handed her a mesh bag with several plastic zip-lock bags inside it. \"Go hunt your treasure, I'll wait for you.\" He chuckled and leered as if he knew she wasn't telling him the whole truth herself. He hadn't touched her though since she had stopped him in the salon and for that she was grateful. It was their deal. He helped her first, then he would get his reward.\n\nMarcella slipped into the water and did a slow breaststroke toward the ghostly boat cemetery and searched her memory for everything she knew about Olivia's boat. If this was a wild goose chase, she would make Vinnie pay, and he would have to know that. Even as Olivia, he would know she had powerful men backing her up and people who would search for her if she disappeared without a trace. With a sick feeling, she realised that the closest boats didn't have any identifying names or tag numbers which had been sandblasted off their hulls. She began to think Vinnie had done this purposefully to catch her in her lie. She would never recognise Olivia's boat on her own. At least she had the coordinates for this boat graveyard and could send the Zenati to investigate, so maybe it wasn't a complete waste of time. She was about to turn back when she saw it, the one thing that set Olivia's boat apart from all the other wrecks here.\n\nNot able to believe her eyes had caught it, she reached up and ran her hand over the discoloured wood of the hull of a boat sitting low in the water as if it had a minuscule leak that was slowly winning its war against the design that kept it afloat. She smiled at the Gambaro family crest that had been burnt deeply into the wood so long ago but still showed its dark outline despite the lack of paint and decoration. Hauling herself out of the water and onto the deck, she looked around and quickly entered the cabin. She didn't want to spend any longer than necessary on board.\n\nOlivia had been specific about what she would like from the boat if it was ever found. They were things she had asked Remington for before he had come back to her and told her that the boat was gone. None of the things she wanted were there though, and she picked through the ransacked cabin looking for the one thing she thought might be there, something that would have held no value to anyone but Olivia. \n\nMarcella began gathering a few small items that had no value just so that Vinnie wouldn't question her too much when she got back to his boat and if he did, she could explain away some sentimentality for the items. She finally found the turtle statue she had been looking for; it was smaller than she had thought it would be and she hoped it was the right one but wanted to get out the awful place. She shouldered the mesh bag, deciding she couldn't stand being on the boat a moment longer. She put the fins back on and made her way back to the speedboat where Vinnie was thankfully still waiting for her.\n\nSurprisingly Vinnie helped her up on deck and helped her sit before moving to the helm and starting the engine. He said nothing as he powered the boat away from where they had been and set a course back the way they had come. Marcella grabbed a towel and stretched out on the deck enjoying the afternoon sun warming her body after the cold spooky feeling of the boat and the water surrounding the boat graveyard.\n\nThe engine stopped again, and Marcella roused herself from the light doze she had fallen into to look around. They had anchored close to a small sandbar, and she looked up at Vinnie quizzically. He smiled slowly as he walked toward her kicking off his shoes, pants and finally his shirt standing only in his swim trunks. He reached for her nipples, poking prominently through the bikini top, but once again Marcella playfully slapped his hands away as she stood up and looked into his eyes.\n\n\"Slow down, Speed Racer! I've got plans for you, and they don't involve a day's worth of sweat and fumes from the engine, nor me covered in stagnant sea water. Be thankful I decided to wait for you to do this,\" she grinned as he looked momentarily confused.\n\n\"What?\" he growled.\n\n\"You...\" Marcella paused dramatically while running a delicate finger down his chest to his groin and along the length of his thickening erection. \"You're not going to put this inside me until we're both ready for it.\" \n\n\"But I thought you said...\" Vinnie's expression was hilarious, and Marcella stifled a smile. His mouth opened and closed repeatedly as he struggled to reign in his temper enough to form cohesive thoughts. She was still teasing him but also denying him, and it seemed that he couldn't quite make sense of the situation through the desire that fogged his brain which amused Marcella. \n\nMarcella could see that he was considering if forcing her was the only way he would get his reward but her hand wrapped around his cock and she moved close enough to brush her breasts against his chest and whisper breathily in his ear. \n\n\"Oh, don't worry, Captain. I have something special planned for you... us. I know how helpful you've been to me, and I decided to give you an even bigger reward than I promised.\" She leaned back and stepped away from him. \"Now, lose the trunks and follow me. No more talking,\" she instructed authoritatively and smirked as he followed obediently, discarding the trunks as they went downstairs and entered the cabin. Standing in the middle of the room naked, he watched her strip off her clothes while she padded into the tiny bathroom. She turned on the shower and pulled him in behind her. He moaned appreciatively as the warm water hit his sun-kissed skin. \n\nMarcella grabbed a loofa and the body wash and proceeded to generously lather and scrub his arms and chest. He closed his eyes as she vigorously scrubbed his torso. She kneeled before him knowing how erotic this would look to him and gave the same treatment to each leg, studiously avoiding his bobbing erection. \n\n\"Turn around so I can do your back, Captain.\" She instructed briskly, all business-like and was pleased when Vinnie turned, lowering his head down under the spray and resting his palms against the cool tiles. Her soapy hands worked on his shoulders and back before applying the loofah again. He groaned as she rubbed soap into the skin on his ass spending quite a lot of time ensuring every part of it was clean. \n\n\"You have a very nice ass,\" she purred deeply, a moment before delivering a loud popping smack to each cheek and grinning as he jumped in surprise and let out a yelp. He stayed still though as she moved forward brushing her hard nipples against the tops of his cheeks and lower back, her breath hot on his wet skin, and she purred loudly and appreciatively at him. Then she ran a soapy finger down his ass crack letting it delve in to lightly massage his anus. \"I knew you'd be a freak in bed, Captain. We're going to have so much fun together,\" she purred with promise, feeling him shiver under her seduction.\n\nMarcella was satisfied that she was in control of this interlude and was determined to make good on her promise because he obviously knew a lot more about the Suebi and what had happened to both Remington and Olivia, information she wanted. Marcella shut the shower off abruptly and grabbed a towel throwing it over Vinnie's shoulder, noticing he was breathing harder than she had thought at first. Oh yes, she was most definitely going to have fun with this one. He was about to know what it felt like to be used like he usually used the women he coerced into bed. Vinnie was not going to know what had hit him by the time she was done.\n\nVinnie dried himself off while she did the same, putting on a show for him as she did so. When they were dry Marcella led him back into the bedroom. She gently pushed him onto the bed, and she straddled his hips while gently grinding her crotch against his raging erection.\n\n\"You seem all excited, Captain. I need you to calm down and relax,\" Marcella purred with a smile that was sultry and sexy as she picked up a bottle of scented massage oil she had found amongst the perverted treasure trove of toys he had stashed in this cabin. \"I want you to close your eyes and let me take care of you, OK? Trust me, you won't regret it.\" \n\n\"Yes ma'am,\" Vinnie chuckled obviously enjoying her little game and no longer worried that she would renege on their little deal.\n\nThe room quickly filled with the oil's intoxicating scent as she poured it onto his chest. Marcella could see Vinnie get lost in the sea of sensation as she massaged his shoulders and arms. When she reached his chest, she pinched and pulled his nipples as he struggled not to squirm. His moans were almost continuous, and she felt his erection throb against the moist folds of her pussy. She moved lower, caressing his belly and hips. Again, she avoided his throbbing, leaking cock as she massaged his thighs, legs and feet, knowing she was driving him crazy by avoiding the centre of his being at that moment. \n\nMarcella waited until Vinnie was so relaxed his breathing had deepened rather than coming in hard bursts and took him totally unaware when her oil-slick hand reached up to cup his balls as her lips kissed the tip of his cock. She parted her lips rolling her tongue around him gently, slowly taking the head into her mouth. It had been months since she had sex, and despite the reasons, she was here with this man and was determined to have some fun just as she had told him.\n\n\"Oh fuck!\" Vinnie exclaimed as his hips bucked from the bed into her mouth involuntarily. Marcella quickly removed her lips from the now glistening head of his cock as she stroked his shaft and massaged his balls respectively with each of her oily hands.  \n\n\"Naughty, naughty, Captain!\" She scolded him in a mocking tone. \"Just relax and enjoy yourself. If you don't, I'm going to have to tie you down and spank you!\" She wagged a shiny finger at him in admonition as she continued to firmly stroke his cock with her left hand.\n\n\"Yes, Ma'am.\" Vinnie breathed through clenched teeth as if contemplating whether being spanked by this woman would be a bad thing or not. \n\n\"Unless of course, you want to be spanked!\" She purred seductively and winked at him before running her tongue over her lips while she returned her right hand to his balls. \n\nVinnie relaxed again, enjoying the sensations as Marcella continued with her sensual hand job. The fingers of her right hand slowly drifting down his perineum, causing Vinnie to part his thighs almost involuntarily. He gave a low guttural moan, and for the second time that night her fingertip probed his anus. \n\n\"Should I keep going, Captain? Do you want this?\" She asked, purring deeply close to his ear before sitting back up and pouring more oil on her fingers before slowly circling the tip of her index finger around the tight ring of his anus. \"Show me how much of a freak you truly are, open for me,\" she commanded. Despite the taboo most men felt at having their ass played with, Vinnie bent his knees and let his thighs fall open leaving himself vulnerable to her probing fingers, surprising her for the first time. \"Yes, Captain, you enjoy that don't you! I think I found your G-spot!\" Marcella grinned as she watched him blush furiously.\n\nVinnie didn't speak. Instead, he hooked his hands behind his thighs and pulled his knees to his chest. Their eyes locked as Marcella slowly sank her finger into his rectum. He moaned again as she found his prostate. His cock jumped and leaked a steady stream of precum. Marcella watched with lascivious fascination as she pumped her finger in and out of the dark star of his ass. She poured more oil onto her fingers, and his perineum then added a second finger and pushed at the still tight orifice. She delighted at the expression on Vinnie's face, stuffing a third finger into his rectal cavity. He threw his head back, his eyes closed and he began hyperventilating. A sheen of perspiration covered his face and torso. \n\nMarcella continued to slowly finger fuck Vinnie's ass, sensing that a faster pace would push him over the edge. This was supposed to be a humiliation to ensure her position of dominance over him. Instead, she had found his kink, and he was putty in her hands. She knew she needed to push him further than she had first thought to gain that position, the one that would free her from any hold he sought to have over her and she considered him as he writhed below her, slowing her movements. She wasn't nearly done with him yet; he would be her slave by the time she finished if that was what was needed here! She smiled down at him as his eyes snapped open, and he moaned in protest when Marcella withdrew her fingers leaving him empty. \n\n\"Sorry Captain, but I can't let you cum just yet.\" She purred and winked, \"I am not even close to finished playing with you, but I am more than happy that you really got off on me playing with your tight little hole!\" Vinnie blushed brightly and lunged for her with a grabbing motion which she easily evaded.\n\n\"You silly man!\" She leaned forward, held his hands down on his thighs, barely brushing against his cock and kissed him, letting her tongue roll around his. \"Let's not rush the fun, especially now that I know what a kinky bastard you are. I bet you wanted me to tie you down and spank you, didn't you? I will have to think of a more diabolical punishment for you when you make me unhappy,\" she laughed teasingly and kissed him again, immersing herself even further into the scene. \"Now, roll over. I haven't oiled your back.\" \n\n\"I was hoping for something more than a massage by now...\" Vinnie grumbled looking at her and not moving to do as she asked.\n\n\"Did you forget what I said, Speed Racer?\" She squeezed his slightly less erect cock and placed a finger gently on his lips. \"I'm not even close to being done with you. You just need to lie back, relax and enjoy me taking care of you!\" She almost laughed as Vinnie failed to hide his disappointment at her words. \"Don't be in such a hurry, I promise you will enjoy each and every little thing I have planned for you. Just trust me for a little longer, okay?\" She held his gaze until he gave in and turned onto his belly, his arms stretching above his head, his feet spread enough to widen his thighs slightly. \"Good boy!\" She murmured as she kneeled beside him on the bed. She playfully smacked him on the ass, eliciting a low moan from him.\n\n\"That slutty little wet patch between your legs better be worth the wait,\" he grumbled, trying to take back some of the control he had lost as she manipulated his desires.\n\n\"Oh, it will be, trust me on that. Now, don't move a muscle, I'll be right back,\" she purred and got off the bed moving to one of the draws holding all of Vinnie's toys and devices. He'd relaxed again, she noticed as she crawled back over him, dragging her nipples up his back erotically before lowering her lips to kiss his neck and nibble at his ear. \"You seemed to like the idea of being tied up and spanked, so I think we should do that don't you?\" she felt his body go rigid and she purred. \"We both know you want me to, why fight it?\" she asked slipping a soft restraint over his wrist and tightening it as he watched her warily as if about to refuse what she was doing but enjoying her lips and hands tease his body at the same time as he was being restrained. \n\n\"You know I've hidden the keys you can't take this boat anywhere without me, and you have no way to call for help. I've disabled the radio,\" he warned her that any attempt to tie him up and not fulfil her side of the bargain would get her nowhere.\n\n\"I'm not going anywhere. I am having far too much fun with you, Captain,\" she laughed lightly as she finished restraining his other wrist. \"Relax,\" Marcella cooed soothingly, stroking his back as she dragged her breasts against him again. \"I'm just making sure you understand who's in charge, right now. You like that I've taken the lead don't you, Captain,\" She stroked his back with the tops of her fingers and brushed her nipples against him as her hot breath followed her body down his back, making goose bumps appear on his skin.\n\n\"I really don't see why the restraints are necessary...\" he grumbled before she slapped his ass hard, admonishing him for complaining. He groaned and looked like he would grumble again, but she stopped him quickly.",
        "\"Oh, shush!\" Marcella cut him off by smacking his ass again, this time with a leather strap. His body shuddered as he bit his lip. She stepped back, allowing him to turn his head and look at her. She held his belt, but that wasn't what caught his attention. She was using the massage oil on a large butt plug, making his eyes widen and eliciting a deep groaning growl from him. \n\n\"Fuck,\" Vinnie growled again and strained against the restraints as he stared at Marcella's hands as if hypnotised.\n\n\"You're going to fucking love this!\" Marcella said, not hiding her own eagerness to plug and spank the man lying at her mercy on the bed. Men always underestimated her. She was short and petite, but she knew more than one trick with knots and ropes. \"I'm going to fucking love this, trust me, Captain, I will give you the best orgasm of your life today!\" It was a big call she knew, but she knew men like him, and she was prepared to give him what he probably didn't even know know he wanted and needed.\n\nDropping the belt and using copious amounts of oil Marcella purred and cooed at Vinnie as she alternately spanked and teased him with the plug until it was fully embedded, then she picked up the belt again and spanked him twice on each cheek with it. \n\n\"Fuck! You fucking bitch,\" Vinnie growled gutturally. He was panting, and by reaching beneath his body to stroke him every so often Marcella knew he was as hard as a rock and coated in precum. He was beside himself when she lay along his side and gripped his face, kissing him deeply and humping her wet pussy against his hip. She felt him let go of his fury again as he gave into her kiss and the way her soft curves felt against his body. He barely registered that she had unhooked and crossed his arms above his head before retying him.\n\n\"I'm going to undo one of your ankles so you can roll over. Are you going to play nice, Captain?\" she asked. \"If you play nice, I'm going to give you the fuck of your life,\" she promised.\n\n\"Yes,\" he ground out between clenched teeth still battling himself instead of just relaxing and enjoying the scene, but she took his agreement for what it was and repositioned his legs, lengthening the restrains to hold him in place and at her will.\n\n\"Good boy,\" She murmured teasingly as she crawled up his body, dropping kisses onto his ankles, knees and thighs before lapping at his messy wet cock like a hungry kitten, making him groan in a long, desperate rumble.\"\n\nHe lifted his hips to push his cock deeper and watched as her lips stretched around it and she took it down almost to the base. She let her tongue play over the ridges of his saliva-coated shaft, knowing he was watching. Marcella started to fuck him with her lips and mouth, setting a fast-paced tempo. The only sounds in the room were the slurping noises and Marcella's soft moans as he watched her transfixed and seemingly not breathing at all as he strained to keep his head up high enough to watch her with his arms bound the way they were. She finally pulled the glistening cock from her eager mouth, and he finally gave in and flopped back onto the bed when she continued her kissing crawl up his body.\n\n\"Did you like my cock sucking?\" Marcella asked once she caught and held Vinnie's glazed eyes.\n\n\"Yes.\" His grumbled darkly, his expression was a mixture of frustrated anger and unbridled lust. \n\n\"Good, now my patient Captain, you should be rewarded,\" she purred into his mouth and kissed him while straddling his hips and grinding her wet pussy over the length of his cock as it lay against his belly.\n\n\"You're killing me,\" he groaned deeply, squirming and wincing as he was reminded of the large plug still wedged deeply in his ass putting pressure on his prostate.\n\nDeciding to put him out of his misery, Marcella leaned down and kissed him again as she reached between them to grasp his cock and bring it to the entrance of her now needy pussy. Sitting up as she took him into her, she luxuriated in his girth. He wasn't long, but he was wide enough to feel the stretch of his cock burn as she sat above him grinding down into his pelvis. She rose and fell slowly at first, playing with her breasts and pinching her nipples as she gazed at him with unblinking eyes. She fucked him at a gentle pace as she felt her own climax start to build slowly with each of his grunts and groans as he clenched his ass cheeks to buck up and the plug surged up into him harder and deeper. The double-edged sword had him panting out his need and nearing his orgasm far too soon.\n\n\"Don't you dare cum before me,\" she hissed at him, reaching out to brace her hands on his chest as she quickened the pace of her fucking. She raked her nails cruelly over his nipples as she bounced wildly back and forth, her mouth open as she panted nearing the edge. Sitting up and arching her back she reached back between his legs, barely wrapping her fingers around the end of the plug and pushing it into him before letting his muscles work it back against her digits. She rode him as she fucked his ass until her own orgasm ripped through her, her pussy clutching at his cock and making it impossible for him to hold back any longer. \n\nVinnie roared as he came, and she pushed the plug hard into him, straining as her body arched hard and shook with her own release. Then she pulled it from him roughly, making him howl and buck even more furiously and triggering a second orgasm from her. She collapsed on top of him, holding his cock inside her for as long as she could before letting it fall free along with the flood of their mixed cum to coat his balls and thighs before pooling beneath his ass.\n\n\"Worth it?\" she asked breathlessly as she regained her composure and felt his heart rate return to slow down.\n\n\"Undo the restraints, then we can talk about your methods and what will happen next time,\" he smirked.\n\n\"You can't have hated it if there will be a next time,\" she laughed but was already undoing his restraints still confident that he wouldn't try to turn the tables on her. This guy mightn't want to admit he liked having his ass fucked but she knew he loved it and wouldn't risk ending their partnership prematurely by forcing her submission to him in any way as retaliation. \n\n\"Do you want a next time?\" he asked carefully, and she could see the wheels in his head turning.\n\n\"That entirely depends on what you have to offer in return for the best sex your likely to have,\" she teased. Marcella grinned as he looked like he was about to argue but snapped his mouth shut as if knowing this was not the way to keep her happy and in his bed. She scooted down the bed and began to undo his ankles. He was an ageing player on the periphery of the lifestyle he wanted. His looks faded and his desirability where the wives and girlfriends of the rich and famous we're concerned was waning with his looks. He probably didn't get very many offers from rich and beautiful young women who knew how to fuck any more. Not that she was rich or beautiful for that matter, but he thought she was Olivia, the widow of Remington Royce. \n\n\"You can shower first, we can talk once we get back to the mainland, or tomorrow,\" she shrugged as if it didn't matter either way to her and she didn't care if she saw him again.\n\n\"I can be a good friend to have. I know a lot of secrets that men like Remington Royce want to keep hidden,\" Vinnie said trying for matching indifference but coming off as needy. \"Come shower with me, and I'll tell you more. We could do amazing things together with your connections and my knowledge of everyone secrets.\"\n\n\"Unless those secrets affect me directly, why would I care?\" she asked feigning indifference but moving with him toward the bathroom.\n\n\"Because many of them do involve you, some more directly than others, some not at all, but I'm sure we could wash each other's backs and discuss when we can meet again,\" he leered at her showing his eagerness. \"Next time, however, the rules of the game will change and it won't be me getting my ass fucked,\" he growled and grinned.\n\n\"Don't even pretend you didn't love what I did. That stain on your mattress proves how much you loved it,\" Marcella admonished him. \"If you want to play with me, Captain, we play by my rules not yours,\" she challenged, knowing it was a risk. Of course, she wanted to know everything and anything that threatened Olivia's well-being, but she didn't want this idiot under any illusions over who would be in control of their little trysts.\n\n\"You can be in control and still get a good ass fucking,\" he murmured reaching out to run a hand over her pert rounded ass. \n\n\"It could be negotiated,\" she conceded to match his concession. They were still wary of each other, and ground rules had to be put in place. She would not submit to some idiot guy with misogynist dreams of dominating her. She had enough of that bullshit growing up, and the trial forced upon her by her father and his cronies. She had fought against her heavily male-dominated world her whole life and not even for Olivia was she about to play the submissive role. She hated that Genesis had forced Olivia into that role, and although it didn't seem Gideon was expecting ultimate obedience from Vivienne, he was still a tabled man who treated her like some inferior that needed to be looked after like a fragile doll rather than an equal just because of her gender. At least with this guy, she knew what she was getting, and he now knew what he would get from her.\n\n\"There must be something else you want aside of what was on that boat,\" he said leading her to the shower.\n\n\"The AFP doesn't believe my account of things. I'm going to tell them where to find the boat, not that I am even sure where it was exactly,\" she confessed doing her best to look abashed by the confession.\n\n\"I gathered you would tell someone, that's why I didn't stay there after you were done. You could have been followed again,\" Vinnie nodded. \"It's not that hard to find once you know what to look for.\"\n\n\"You're not the washed-up playboy you seem, are you?\" she asked considering his change in demeanour and realising it was an act for the most part.\n\n\"Tell me what else you need, and we can start negotiating that ass fucking. I want to look into your eyes and see that hot mix of painful pleasure as my cock forces its way into your skinny little ass,\" he said pulling no punches about what he wanted from her now. \"You can be in control, but that's my price next time. You can tie me down as long as my cock gets equal time in both holes,\" he growled reaching down to grip his cock which was beginning to harden again.\n\n\"My ass comes at a high price,\" she smirked looking down and raising an eyebrow as he stroked his cock to full hardness again. \"Let me think about what I need that would be worth that price. Go shower because I'm done for today, and you look like you need a cold shower, alone.\" She laughed as he groaned painfully and stepped away from her into the tiny cubicle they had crowded into earlier.\n\nThere were several mysteries he might be able to help her with. She sat on the edge of the bed and considered his offer. Even if he didn't know straight away where one of the missing places or people were, he was in a good position to find out. Maybe she could ask for the double whammy of Hermione's and the woman who managed it for Remington. That place needed to be shut down by all accounts. Just the mention of it brought a look of fear into Olivia's eyes. Yes, she thought she might give up her ass for that information. \n\nIt was a dangerous game she was playing, but she was making progress. She'd found the missing boat when no one else could, and it stood to reason this man and his network knew far more than anyone else she had come across. He wasn't completely odious, and the sex was decent enough. He'd let her take the lead and Domme him without too much fuss. She couldn't think of a reason not to play this game a little longer and more than one reason to keep going. She was going to enjoy getting one up on Noah and his smug expression every time he tried to take over her investigation and make it his own like he had with the wedding certificate.\n\nDecision made, she traded places with Vinnie in the shower and began to plot her next moves in this game she was playing with powerful and dangerous men. \"Hah,\" she laughed out loud. If only they knew that a sweet little woman like her was about to show them all who was in control of this investigation now.\n\n\"Just so you know,\" Vinnie said emerging from the bathroom and letting his eyes settle on her glorious nakedness once again. \"You were right, there is far more to me than anyone realises. I am a master of secrets and hidden agendas... and I know exactly who you are Marcella Gambaro.\" He whistled a happy tune, stepping out onto the deck. He turned as she came charging up the stairs after him and took in her beautiful body in the sunlight.\n\n\"What the fuck!\" she exclaimed.\n\n\"Oh, don't get me wrong I am happy to play your little game and fuck that pretty little ass of yours while you fuck mine. I'd be crazy not to want that, especially after today and knowing what a slut you are. I just don't want you to think that I am so desperate to get laid that I don't realise what you're doing or why you're doing it. Go have a shower, and then we can talk about what you need from me and what I want from you in addition to your ass,\" Vinnie chuckled. More than pleased that she hadn't tried to hide or body or cower and make excuses as he destroyed the farce of a story she had come to him with.\n\nHe'd assumed she would try and fuck him over and renege on the flirtatious insinuations she had made about rewarding him, but she had been as good as her word once he had delivered what she wanted. They had trust now, and he had decided he liked the manipulative little bitch and wanted to work with her for the moment. As long as it didn't interfere with his long-term plans, he could have some fun with the woman and possibly gather information that he needed in return for sharing the secrets she wanted. She had blown his mind today, and he had to admit he was looking forward to their next time. She talked a good game, but he wondered what price he would have to pay to have what he suspected was her virgin ass.\n\n\"How do you know I won't just tell the authorities it was you who showed me how to find the boat?\" she asked as she came back on deck dressed and refreshed from her shower.\n\n\"You want the rest of my secrets. You want the power that will give you over the Zenati family but with each secret, each communication and meeting between us, the risk becomes greater and the subterfuge harder. It's a short-term game Marcella, so think carefully about your next move and if you can prove that it was me that led you out here today. I have a dozen or so people who will swear I was with them all afternoon and a helicopter pilot who dropped you off and left you on a remote beach as you requested. There is nothing to tie me to your escape from the Zenati today, only your story and as we both know you're a terrible liar,\" he smirked.\n\n\"I told you I would be telling them about the boat,\" she reminded him.\n\n\"You did, but you will give them the cover story I am about to give you if you want to play this game with me,\" he said casually as if he didn't care if she chose to walk away and never see him again.\n\nMarcella narrowed her eyes. This, she realised far too late, was a dangerous man who had let her call the shots all day to test her in some way. Whatever the test was, his frankness showed she had obviously passed it. Now she needed to follow through and play the game out to its end. If he held secrets that would lead to proving Olivia's story and gain her what she deserved from the prick who had used and abused her so terribly than Marcella was in. She was strong enough to look after herself in a game like this.\n\n\"Tell me what I need to say. How did I find this boat so miraculously when no one else could? And remember, the watchmen saw me visit you this morning,\" she said.\n\n\"Of course, they did, and you came to me with specific questions about a boat graveyard you had read about in some old online forum which I will send you the link to. I told you that you could hire a helicopter to get you there faster. You got yourself a ride with a helicopter pilot you had flirted with when you visited the park once before rather than trusting me and convinced him to take you to that isolated cove. You found what you were looking for in a boat graveyard no one had checked for Olivia's boat as far as you knew and...\" he parted his arms and smirked. \n\n\"The pilot will take me back?\" she asked searching the coastline. \n\n\"He will, and you will do what you think is right when you get there,\" he said without concern.\n\n\"You're sure no one searched it before I went there today?\" she asked.\n\n\"Yes, be prepared for the fact that even if they do believe the story despite you being such a bad liar, your watchers will increase, and you will have very little freedom. When you have decided which secret is worth the price I want, you will go to...\" he began to give her detailed instructions on how and when to contact him for another meeting if she decided to play this game with him rather than on her own.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "promises",
        "sailing boats",
        "domme",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-12"
}