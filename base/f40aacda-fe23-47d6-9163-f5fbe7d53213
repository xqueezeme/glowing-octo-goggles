{
    "title": "Dawn's Anal Awakening",
    "pages": [
        "Hello Reader! This story is a continuation of Dawn's Orgasm Awakening, where Dawn jumps her hot older neighbor. You don't need to read the first to understand this one. \n\nCheers!\n\n####\n\n18 year old Dawn was very satisfied, very satisfied indeed. She had, in the past week, jumped her hot older neighbour Eric Sherburn, and he had given her not one, not two, but three mindblowing orgasms the first time they had sex. She could never sleep with other high school boys again, if this was what she could look forward to! \n\nBut alas, the problem with living under her parents' roof was that she couldn't come and go as she pleased and they still insisted on knowing where she was at all times. \n\nThis made it hard for her to hang out at Eric's place for long periods of time. Sure, 30 minutes was enough for a quickie, enough for him to plow her young pussy and rip another orgasm out of her trembling body, but it wasn't enough for all the other things Dawn wanted to do. \n\nLike anal orgasms, for instant. She watched porn, just like all other young people did, and had seen porn actresses squealing and screaming as their assholes spasmed on the thick cocks invading them. While she knew pussy orgasms were definitely possible, she wondered if anal orgasms were just a myth sold by porn companies to generate more sales. \n\nEric had told her it was possible, though he had been hesitant on fucking her ass because he thought she was 'too young' and 'too unprepared' for anal. \n\nWhat kind of preparation would she need anyway? All the porn stars just shoved it in, surely it couldn't be that hard? \n\nShe had begged and pleaded and wheedled Eric until he agreed to fuck her in the ass before she left for college in the fall. Dawn didn't know what kind of preparation Eric wanted her to do, but they only had a little over four months to do it and she honestly couldn't wait. \n\nIn the meantime, she would settle for a taste of his lovely big cock whenever she could manage. \n\n-- \n\nA week passed quickly. Dawn started to get up earlier to pretend to walk to school when in fact, she snuck over to Eric's house for a morning fuck. There was nothing like a good, long, hard, orgasm to wake her up each day! After a quickie in the kitchen or the living room, Eric would throw a blanket over her in the backseat and then drive her to school. \n\nDawn's mom and dad, bless their souls, never noticed. They never suspected their sweet young daughter of doing such a thing with the neighbor! \n\nEric was also very careful to let Dawn out of his car a block away from school so she could walk the remaining distance. \n\nEven though Dawn was already 18, they were aware that not many people would understand their sexual connection. Eric loved Dawn's young enthusiasm, and Dawn loved the way he could fuck her through multiple orgasms. \n\nOn Friday afternoon, Eric waved at Dawn from his backyard, motioning for her to come over. \n\nMom had a dentist appointment so that would take forever, and her dad was still at work. The both of them wouldn't be home until later in the evening. Dawn put on her oversized hoodie and quickly made her way to Eric's house. \n\nShe had barely time to knock before Eric was yanking the door open and pulling her inside. His mouth was on hers immediately, kissing her passionately. Dawn kissed back, eager for another round of amazing sex. \n\n\"Wait, wait,\" Eric pulled away breathlessly. He smiled down at her and pulled her towards his bedroom. \n\nDawn blinked in surprise at the multiple packages strewn across the floor. \n\n\"Since you've been wanting to try anal, I thought it would be best if I bought some tools to help train your little butthole,\" Eric said, walking over to the bed. He picked up a shiny little egg shaped device and showed it to Dawn. \n\nDawn was touched! She wouldn't consider herself in love with Eric, and neither would he be in love with her -- they were just enthusiastic friends with benefits. So she hadn't expected him to go all out and purchase so many items just because she wanted to try ass-fucking! \n\n\"So this is the smallest one, and the next size, and we've got four here, I think if you do one a week, you can get up to cock sized ones within a month. This small dildo is for your ass only ... Dawn are you alright?\" Eric stopped halfway through his eager introduction of all the toys, looking at Dawn with concern. \n\nShe wiped at her eyes. \n\n\"You didn't have to go through all this trouble for me, Eric!\" she said, feeling a little emotional. Eric opened his arms and enveloped her in a tight hug. \n\n\"Of course I did, Dawn. You're a young girl who wants to experience new things! What sort of friend would I be if I didn't do it properly?\" Eric reassured her. \n\nDawn grinned up at him through watery eyes. \n\n\"Thank you, Eric,\" she said with a big smile. \n\n\"Don't thank me just yet, Dawn. There's one thing I think you might not like!\" \n\nEric picked up a big squeeze bag. It looked vaguely familiar. Dawn scrunched her nose up, wondering where she might have seen something like it before. \n\n\"It's an enema bag,\" Eric explained \"Anal means fucking the shit hole. If your ass is full of shit, you betcha my cock won't fit.\" \n\nDawn snorted at his bad rhyming, then took the enema bag from Eric with a doubtful look. \n\n\"How do I use it?\" she asked. \n\nEric motioned for her to follow him into the toilet. Dawn stripped off her clothes as Eric filled up the bag with warm soapy water. The bag was connected to a long tube, which had a nozzle attached. Eric pointed to the bathtub. Dawn got in and lay on her back as instructed, shivering when her bare skin came into contact with the cold porcelain. She pulled her knees up to her ears, exposing her bald pussy and asshole. Eric hooked the bag of soapy water onto the shower curtain rod, leaving the tube dangling downwards. He grabbed a bottle of lube and greased up the nozzle. \n\n\"Are you ready?\" he asked. \n\nDawn was very nervous, but she really wanted to know what anal felt like, and if this was part of the process, then so be it! \n\nShe nodded firmly. \n\nEric pressed the nozzle against Dawn's sphincter. Unlike her sopping cunt which was meant to take cock all the time, her asshole was resistant, only used to expelling things and not receiving things. Dawn had to take deep breaths and consciously unclench before the nozzle could breach her tight rosebud. \n\nThe nozzle was very slender and with the lube, it didn't hurt. It felt foreign, but that was just about it. \n\nDawn looked at Eric expectantly. \n\nEric stood up and unclamped the tube. \n\nImmediately, Dawn felt a gush of warm liquid pour into her waiting asshole! Her mouth fell open in surprise as the warm soapy water obeyed the laws of physics and flowed downwards. Without anywhere else to go, it went directly into Dawn's tight hole. \n\n\"Oh, oh oh!\" Dawn gasped as her rectal cavity was filled with liquid \"Oooh aaaaah!\" she moaned. The feeling was incredibly pleasant. The warmth of the water contrasted the cold of the tub on Dawn's skin. She felt her nipples harden immediately and her cunt become even wetter. \n\n\"You like that!\" Eric exclaimed, surprised but pleased. \n\n\"It feels good,\" Dawn said breathlessly, her eyes watching the water levels in the bag slowly decrease. At the halfway mark, her bowels started to feel very full and she started to squirm, but Eric leaned over the side of the tub and pinched her nipples. \n\n\"Hold still,\" he scolded lightly, \"It won't be effective if you just do half a bag. Just hang on a little longer, alright?\" \n\nDawn moaned. The pleasant pressure was starting to feel a little unpleasant. It was pressing against all corners of her insides, making her feel as if she was a balloon, swelling up and about to pop. Eric slid one hand down to her bald cunt and pushed two of his fingers inside, curling them upwards against the front of Dawn's pussy. She moaned, mind temporarily taken off the uncomfortable liquid filling her bowels. \n\n\"That's it, you're doing so well,\" Eric praised her, gently fingering her young cunt while her ass was filled with water. \n\n\"How much more?\" Dawn panted, wanting, but also not daring to look. \n\n\"A little more,\" Eric reassured her. Dawn bit her lip. She thought of the porn actresses who took cock in their assholes as easily as breathing. She wanted to know what that was like. She had to know what that was like! And to do that, she would have to endure this enema! \n\nDawn moaned again. Eric pinched her clit lightly, making her jump and clench around the nozzle. \n\n\"Just a little, little bit more aaaaand, we're done!\" Eric proclaimed. He smiled down at Dawn. Eric reached to the side for a little silicone plug and lubed it up. With one smooth move, he pulled the nozzle from Dawn's shithole, and then slipped the silicone plug in. Dawn gasped, her sphincter instinctively clenching around the plug. It was only a finger thick, with a flared base and narrow neck that prevented it from slipping out. The pressure from inside her hole had it jammed uncomfortable at Dawn's anal ring, unable to be expelled or pushed inside. \n\nEric picked up his phone and set an alarm for 20 minutes. \n\n\"20 minutes, alright? We give it time to soften up all the nasty shit in your ass so that it's clean for fucking later.\" Eric reached down to stroke Dawn's soft blonde hair, then left her to squirm while he washed and put away the enema bag. \n\nDawn had never felt so full in her life. Her flat stomach was bulging with the amount of liquid Eric had poured inside her! It looked as if she had somehow gotten pregnant. Dawn kept her hands on her knees and tried to concentrate on something other than the unpleasant pressure in her bowels. She recited all her Spanish conjugations and then mentally went through some trigonometry before she heard Eric's phone chime loudly. \n\nEric appeared at the bathroom door. \n\n\"All fours,\" he instructed, turning on the shower so that there would be running water \"Since it's your first time, I don't think you'll be able to aim, so you can shit in the tub, When you're more used to it, you can use the toilet.\" \n\nDawn nodded to indicate that she heard him. \n\nEric patted her back comfortingly, then put his hand on the base of the silicone plug. \n\n\"On three,\" Eric said \"One -, two-\" \n\nHe yanked hard before he said three! Dawn's eyes flew wide open as her anal ring was pulled sharply outwards. The warm soapy contents of Dawn's bowels immediately came spurting out, spraying all over the white sides of the tub. \n\n\"Unngh! Annngh!\" Dawn moaned as the shit in her rectum came blasting out in a dirty yellow-brown mess! The shower water beat down on her, washing all the disgusting filth down the drain. Dawn's hole clenched and twitched. Every single squeeze of her hole seemed to blast out more excrement. \n\nDawn felt her face burn in embarrassment, having shit herself in front of a man she respected and liked. \n\nEric didn't seem to be embarrassed at all. He picked up the bidet and started to spray down all the crap that was still on the sides of the tub, directing the flow of shit to the drainage pipe. \n\n\"You doing alright?\" Eric asked. Dawn nodded, feeling shy. \n\nEric rinsed her off with the bidet, then bade her to take a quick shower. \n\nDawn stood up under the spray of hot water. Her face was bright red from what she could see in the mirror. She had never thought she would ever get an enema, but here she was. She bet that none of the other girls in her school had ever done something like this! \n\nShe shook her head. It was over, and for her to achieve her anal goals, this was only a small step. Dawn soaped herself up quickly with Eric's body wash, then rinsed herself off, careful to wash between her legs and around her asshole. \n\nWhen she got out of the tub, there was a fluffy towel waiting. Dawn dried herself off and then stepped into the bedroom completely nude. \n\nEric had cleared up the floor while she was in the shower. He left only the smallest plug and the lube on the bed. \n\n\"Come on, face down over the pillow, legs apart.\" \n\nDawn obeyed, putting the pillow under her hips and spreading her legs apart. Eric kneaded her firm bottom for a moment, savouring the sensation of young nubile flesh under his hands, bent his head to press a kiss to the bottom of her spine. He kissed each of her buttcheeks, then licked at her butthole tentatively. \n\nDawn gasped. The wet rasp of tongue on her anal ring was unexpectedly pleasant! She hadn't considered the fact that her sphincter had many nerve endings and would be so sensitive to pleasure. Dawn couldn't help but moan as Eric's mouth plundered her asshole, kissing it and tonguing it so deeply that it felt like a sloppy make out session under the bleachers with one of those overeager football players. Only this time, unlike those sloppy make out sessions, this one was igniting a fire in Dawn's belly. Her cunt juices gushed, flowing out from her young pussy like a small stream. \n\nGetting her asshole french kissed was a whole new experience and Dawn loved it. She moaned and squirmed and tried her best to stay still while Eric tongue fucked her shithole. \n\n\"Oooh ohh, ahhhh!\" she cried out, trembling with pleasure. \n\nEric pulled away for a moment. He grabbed her hands and placed them on her buttcheeks. Dawn immediately grabbed at her flesh and spread herself so that he could have better access to her brownhole. \n\n\"I'm going to enjoy fucking this when the time comes,\" Eric said. He took the lube and smeared it generously all over his fingers and Dawn's asshole. Then, without further warning, he pushed his forefinger into Dawn's twitching asshole. \n\n\"Eeeeehhhh!\" Dawn squealed as the finger went in all the way. Her hole had been loosened by the enema and the vigorous tongue fucking. With such a large amount of lube, it didn't stand a chance against a solitary finger. \n\nEric moved his hand, slowly at first, then faster and faster, pumping that finger of his in and out of Dawn's tight virgin asshole. \n\nThen on one of the outstrokes, he put two fingers together and jammed those all the way into Dawn's hole. \n\n\"Oooh ahhh!\" Dawn whimpered! One finger felt like a light stretch, only a little bit of discomfort. But somehow, two fingers felt like her hole was being torn apart! \n\n\"Do you see now, why I said we couldn't do anal immediately?\" Eric asked patiently. He thrust his fingers in and out of Dawn's eager hole. \n\n\"Yes, I understand now,\" Dawn sobbed, biting her lip. While she loved having her pussy stretched and split wide open on a large cock, having her asshole stretched and split wide open felt quite different. \n\nEric took pity on her and didn't add a third finger. Instead, he just slid the anal plug in all the way and used a damp washcloth to wipe away the excess lube all over Dawn's buttcheeks. \n\nThe anal plug was slightly smaller than the circumference of Eric's fingers. Dawn's hole clenched weakly around it once, twice, then settled around the narrow neck, keeping it firmly inside. \n\nEric patted Dawn's shapely buttocks, then rolled her over. \n\n\"You okay?\" he asked. Dawn nodded through teary eyes, breathing through the strange sting of having her anal passage plugged up. While it was uncomfortable, she had asked for this. She was the one who requested that they work up to anal so she had to stick with her guns! \n\n\"Fuck my pussy now?\" Dawn whined hopefully. \n\nEric laughed and pulled off his boxers to reveal his lovely hard cock. \n\n\"It would be my pleasure!\" \n\nAll the discomfort hadn't stopped Dawn from getting really wet. Eric didn't have to lube up at all, just line up and thrust himself all the way into Dawn's eager cunt. \n\nHowever, this time was slightly different. Dawn's eyes flew wide open when Eric began to pound her pussy in earnest. She could feel the anal plug in her through her pussy walls! Eric's thick rod could barely fit in Dawn's young and tight pussy. It always stretched her to her limits. Now, each thrust rubbed her pussy walls against the plug inside her asshole. The sensitive flesh between pussy and asshole was pressed and rubbed over that metal toy repeatedly, lighting up the nerves there with equal parts pain and pleasure. \n\nDawn whimpered, keeping her legs high up so that Eric would have a better angle. \n\n\"Oh the plug is making you so much tighter,\" Eric growled, enjoying the increased tightness of Dawn's cunt. Dawn moaned. \n\n\"Ohhh ohh ohh, your cock feels bigger too!\" She exclaimed \"Oh oh oh I'm cumming!\" \n\nThe sensations proved too much for Dawn's young pussy to bear, sending her into a powerful orgasm that wracked her whole body and had her holes spasming on the intruders penetrating them. \n\nEric obligingly fucked Dawn through the aftershocks of her orgasm, then growled deep and animalistic before unloading his balls into her sopping hole. \n\n--- \n\nDawn wore the plugs to school. She started off with the smallest one, lubing it up well before slipping it into her hole and then pulling her panties up over it. Eric had been delighted when he shoved his cock into her pussy that morning and found it tighter than before due to the presence. \n\nThe first day had been hell. Dawn hadn't considered the fact that having something in her for so long would chafe something fierce so she didn't bring extra lube, and had ended up with pink puffy asshole, rubbed almost raw by the metal plug. Eric took pity on her and soothed her hot hole with his tongue. The next day, Dawn put lube into an unmarked travel-sized squeeze bottle that she usually used for her toner, then reapplied the lube every two periods. It was significantly more comfortable than the first day, even though her hole was still sore when she got home. When she was at home, she would leave the plug out for a few hours so that her hole had a chance to rest. Then, she would finger her hole a little and plug herself back up. \n\nDawn also took to sleeping with the plug in so that she could train her asshole faster. \n\nAt the end of the first week, she swapped her size 2 anal plug for a size 4 and slipped it into her eager asshole at Eric's house. \n\nThey celebrated her graduation to a bigger plug with a passionate 69 session followed by a good, long, hard, pussy pounding. \n\nAs Eric had predicted, it took Dawn about a month to train her asshole to accept regular cock-sized dildos. Like previous times, Dawn snuck out to Eric's house and then pulled out her anal plug, fully intending on getting a bigger size. Only then did she realize that there was no bigger size. She frowned at the drawer full of toys. \n\n\"Looking for this?\" Eric asked. Dawn's head snapped over to look at him. \n\nIt was a 5 inch dildo that was only an inch thick. It was smaller than the regular sizes that Eric had promised, but Dawn wasn't complaining. She wanted to try fitting that into her asshole! \n\nWithout wasting any time, she went to the bathroom and prepared her enema. \n\nThe 20 minute wait was torturous. She was filled with anticipation and nervousness. Would a dildo feel any different than the plugs she wore to school on a daily basis? The question plagued her as she expelled the contents of her bowels and dried her cute derriere before strutting out into the bedroom. \n\nAs ever, the pillow was ready for her. Dawn assumed the position quickly, lying down with her hips on top of the soft pillow, pushing her ass upwards for Eric to access. \n\n\"Here goes nothing!\" Eric said, pressing the lubed up toy against Dawn's asshole. \n\nThe little hole yielded easily, having gotten used to opening up for intruders over the course of four weeks. The only difference now was that the dildo was a uniform thickness from base to tip. This meant that Dawn's anal ring had no time to relax at all! It was stretched out, and then kept that way. \n\n\"Oh oh oh!\" Dawn whispered as the dildo slid in and out of her tight bottom. It wasn't uncomfortable, or unpleasant, just different. But it was a kind of different that was rapidly becoming good. ",
        "Dawn moaned and whimpered as Eric fucked her ass with the dildo. \n\n\"Oh it feels, it feels good!\" she panted. Eric chuckled, then pushed the dildo all the way in. He kept it pressed inside with one hand, while the other fumbled with a harness. The lack of a bottle neck meant that the dildo would slip out easily. In order to keep it in place, Eric had to put Dawn in a dildo harness. One long strip of leather formed the belt, while another went down between her ass cheeks and connected to a small ring between her pussy and her asshole. From there, two smaller leather strips were attached so that they could lie snugly on either side of Dawn's pussy, trailing all the way up to the belt, where they were buckled in place. This harness not only held the anal implement in place, it also allowed access to the wearer's pussy so that they could enjoy a good cunt reaming. \n\nEric buckled the harness firmly in place and flipped Dawn over, pushing her legs wide apart to look at her sopping cunt. The leather dug into her soft skin, framing her pussy in the most enticing way, even as it drove the anal dildo deeper into her ass. Dawn gasped when Eric pushed her legs up. The dildo was longer than the plugs and she could feel every inch of it rubbing against her rectal walls! \n\n\"Fuuuuck! You're so tight!\" Eric growled as he shoved his cock balls deep into Dawn's young hole. She squealed with surprise and pleasure. \n\n\"Is this, is this what it feels like to be fucked by two cocks?\" Dawn asked breathlessly as she was impaled onto Eric's rock hard cock. \n\n\"We can find out, I've got friends,\" Eric panted as he pounded Dawn's eager cunt, relishing the way her pussy juices let out squelching noises as he fucked into her young body. \n\nDawn couldn't tell if that excited or frightened her. The thought of being helplessly used by two men at the same time was arousing, but also frightening. She had lucked out with Eric, as he was a genuinely nice guy who knew how to fuck well. But other people? She might not be so lucky. \n\n\"We don't have to, I'm just saying, if you wanted,\" Eric amended quickly, looking at Dawn's face. \n\nShe pushed the thought out of her mind and concentrated on the feeling of being filled in both holes at the same time. \n\nAll too soon, her pussy was clamping down on the cock invading her, milking and squeezing and trying to empty Eric's balls. Eric, turned on by the thought of Dawn being double penetrated, couldn't hold back. He shot his load in Dawn's teen pussy with a long, drawn out groan, hips humping forward as he bred her. Dawn wrapped her arms around Eric's shoulders and smiled up at her neighbor, relishing the feeling of his cock pumping her young hole full of jizz. \n\n\"Do you think I'm ready?\" Dawn asked as Eric pulled his softening cock from her sloppy hole. \n\nEric pushed her legs up and pressed a finger inside Dawn's asshole alongside the dildo. It slid in with a little bit of resistance at first, but her hole soon eagerly slurped up his finger. \n\n\"Soon,\" Eric said with a big smile \"We'll give it a couple more weeks yeah?\" \n\n--- \n\nThe days went by too slowly for Dawn's liking. Each day was filled with nervous arousal. Each day was one day closer to getting her ass well and thoroughly plowed by Eric's large cock. Before she knew it, it was nearly time for her to finally get her ass fucked! \n\nWhile the idea of anal definitely intrigued her and turned her on, and having her asshole toyed with certainly made Dawn wet, she wondered if it was possible to cum from anal alone, without Eric's fingers plunging into her cunt or frigging her clit hard. She found herself daydreaming of his thick rod in class, thinking of how she rode it through orgasm after orgasm after orgasm. She licked her lips at the memory of its weight on her tongue, hitting the back of her throat, spurting ropes of jizz right into her stomach. She thought of Eric's intense scrutiny of her tight sphincter each time they fucked, the way he would gently prod and poke at her young hole and coax it into taking his fingers, then comment about how nicely she was progressing. Soon, he would be coaxing her hole into taking his cock. Dawn couldn't wait for it, she wondered if doing anal in the full nelson position would feel the same as when Eric pounded her pussy like that. She remembered seeing many a porn star fuck like that, their tits bouncing and jiggling as the man plowed their shitters. Would she gape open like them? Or was that another porn myth? \n\nThe thoughts made Dawn so hot and bothered that they were nearly enough to make her cum right in the middle of 5th period! Fortunately, she had the foresight to wear extra panty liners so that her cunt juices wouldn't soak through her underwear and jeans. \n\nThe moment the bell rang, Dawn raced to the toilets and rubbed one out as fast as she could, frigging her cunt with one hand, while using the other to jiggle her anal plug. Her orgasm was a weak, sorry thing, no where near the blackout type that Eric could give her, but hey at least it took the edge off! \n\nDawn barely managed to keep it together for the rest of the day. To her surprise, Eric was waiting outside the school for her. \n\n\"What's up, Eric?\" she asked. \n\n\"Did you check your phone yet?\" Eric asked. Dawn pulled it out of her backpack and looked at the messages. \n\n\"Your parents said something about your Gran getting swindled out of her house by some jerk and that they were going over to sue him,\" Eric said, a grin spreading across his handsome face. \n\n\"They asked me to help look in on you and check up on you while they're away.\" \n\nWhile Dawn felt bad that her loving Gran had been swindled by some no-good lowlife, this was an incredible opportunity. The messages left by her mom and dad mentioned that they expected to be gone for at least three days, and that they had left a stack of cash hidden away under the sink if Dawn needed money. Then, they said that she could call on Eric for help if she needed any. \n\nDawn felt her heart beat fast. This was it. This was her chance to finally learn if anal orgasms were possible! She practically ran to the passenger's side door and got into the car quickly. Eric seemed just as eager to get her home, driving just under the speed limit so that they wouldn't get pulled over. She didn't even bother to put her school bag inside her house, running towards Eric's front door instead. \n\nHe opened the door with a laugh. Dawn dropped her bag on the stairs and ran up two at a time, eagerly setting up an enema while Eric prepared the lube. \n\nDawn fidgeted for the entire 20 minutes it took for the enema while Eric waited patiently in the bedroom. While she had gotten used to the uncomfortable feeling of being too full of liquid, it wasn't the main thing she was looking forward to! She wanted something more solid!\n\n\"Wow, someone's eager,\" Eric commented when Dawn quickly expelled the contents of her ass and rinsed herself off, hopping from one foot to another in excitement. \n\n\"Well, I can't help it. It looks so good in porn. I want to know what it feels like!\" Dawn said, coming out of the toilet buck naked. She posed at the doorway, pushing out her tits and giving Eric a sultry look. \n\n\"What do you say, neighbor, fuck my ass?\" \n\nEric gazed at her, eyes dark and full of desire. \n\n\"With loads of pleasure, girl!\" \n\nDawn crossed the distance between them and straddled Eric, kissing him passionately. Their tongues twined in the dirtiest fashion. \n\n\"I can't wait to fuck your little shithole, Dawn,\" Eric gasped when they broke apart for air. Dawn could feel his rock hard cock against her flat stomach. That same cock had given her pussy so much pleasure over the past two months. Tonight, she hoped, would see that trend maintained! \n\nDawn wasted no time in moving towards the bed, reaching for the pillow. This time however, Eric stopped her from lying on her front. \n\n\"I want to see your face when I take your anal virginity,\" Eric said tenderly \"It's not everyday I get to fuck a beautiful young girl in the ass for the very first time, it's a momentous occasion.\" \n\nIt was true, it felt like a big moment to Dawn as well. She laid down on her back, pulling her knees up on either side of her to expose her bald pussy and asshole. Both were already slick with her cunt juice, and both were twitching in anticipation of a good, long, hard, fuck. \n\nEric shoved his thick fingers into Dawn's pussy, scooping out the juices there and smearing it onto Dawn's asshole. \n\n\"You're sooo wet, I bet that if I fucked your pussy first, it would lube my dick well that I could fuck your ass right after!\" \n\nDawn moaned at the thought of her pussy juices lubing the way for her asshole to be speared open. But that wasn't what she was here for! \n\n\"No, no,\" she gasped, pulling herself together \"No, I want this to be anal only. Don't touch my pussy, clit or tits this time!\" she begged. \n\nEric looked concerned. \n\n\"Dawn, I have to be frank with you, not everybody can cum from anal alone. In fact, it's pretty unlikely,\" he said gently. \n\nDawn bit her lip. If she never tried, she would never know, right? \n\n\"I just wanna try it. Indulge me, please Eric?\" she whispered. Eric looked down at her, exposed, helpless, and very eager body. \n\n\"We'll give it a shot, but don't force yourself, alright? Just relax.\" \n\nEric pumped lube onto his hand and stripped his cock several times, coating it liberally. He used his other hand to push Dawn's legs even further up. She obliged him hooking her ankles behind her head in a show of flexibility. Eric made a sound of approval as he lined up his cock and pressed the head against Dawn's little rosebud. \n\nWithout further warning, Eric began to push his cock against the tight ring of Dawn's virgin asshole. \n\n\"Oh oh oh oh ahhhhh!\" Dawn squealed as the pressure on her sphincter grew. Despite all the training she had done, Eric's cock was thicker, and the head was larger. Her nerves had tightened Dawn back up and made it harder for Eric to penetrate her asshole. \n\nBut no tight virgin asshole was ever a match for a determined full-grown man with a thick, skillful rod. Eric didn't let up on the pressure, leaning forward and putting all his weight behind his cock. \n\nDawn's anal ring never stood a chance against Eric's rod. His dick breached the muscle with a sudden jerk. Dawn gasped as her sphincter gave way for the cock head and then reflexively tightened back up around it! \n\nIt was inside her! The head of Eric's lovely cock was inside her tight ass! She looked down between her legs at where they were joined, feeling incredibly pleased with herself. Her hole was being stretched more than ever before and it would only be stretched further from now on! \n\nShe looked back up at Eric, who was studying her face carefully for any signs of discomfort. \n\nSeeing none, he bore his weight forward again, forcing his meat tool deeper into Dawn's rectal cavity. \n\n\"Aaaaaah!\" Dawn cried out as her shithole was further opened up by Eric's cock. She had never considered her asshole sensitive, after all she didn't get aroused by shitting. But somehow, the feeling of being filled like this, even though similar to needing to take a shit really badly, was insanely hot. \n\nEric growled, pleased at the way Dawn was squirming as she was being anally impaled on his cock. Each gasp from her was a gasp of pleasure, not discomfort, which spoke volumes to his male prowess and also the depths of Dawn's sexual needs. \n\nHe drew back, thrust, pulled almost all the way out, thrust, pulled out again, thrust again, fucking her asshole in a slow and almost meditative manner. Each thrust forced his cock deeper, bringing him closer to his goal of being balls deep in Dawn's young freshly-devirginized asshole. \n\nThe thought of being the first person to fuck her barely legal bottom was incredibly arousing, and also humbling. Dawn trusted Eric completely with her body and it was his duty to do his best to provide her with anal gratification!\n\n\"Do you have any idea how hot you look right now?\" Eric grunted, thrusting again. Dawn was glistening with sweat, her blonde hair mussed up as she tried to keep holding her legs behind her head. Her mouth was open in a perpetual 'oh'. Small gasps, grunts, and whimpers spilled from her lips while her young and tight asshole was slowly split open by Eric's massive rod. \n\nEric gazed fondly down at his young partner, then shoved the last 2 inches of his 10 inch cock all the way into her hole. \n\n\"Ow oh fuck meeee!\" Dawn wailed, hips swaying and jerking as Eric's hips met her ass cheeks. Juices gushed from her pussy in response to her anal arousal\n\n\"Oooooooooh!\" she cried out as Eric pulled his cock out completely, and slammed it all the way in with one hard, long thrust. \n\nIt. Was. Amazing. \n\nAll the anal pleasure that Dawn got from playing with her asshole in the previous months was nothing compared to this. She was so worried that she wouldn't be able to cum from anal alone, but that concern was fading fast. Her rectal walls were being massaged by Eric's massive cock, his bulbous cockhead was scraping along her insides. The position she was trying her best to hold not only had the benefit of letting Eric plumb the depths of her bowels, but also allowed her to see exactly how she was being fucked. \n\nAnd oh, how she was fucked! \n\nShe watched, open mouthed in awe and amazement as the huge dick slid out and out and out and out of her asshole, her anal ring catching on the bulbous head. Then she gasped as it went in and in and in and in and in until it was buried to the hilt in her ass. \n\nIt was incredibly erotic! \n\nDawn chanced a look up at Eric. He was gazing at her with fondness in his eyes, and a deep-seated lust. The fact that he was Dawn's first anal experience seemed to have sat well with his alpha-male hindbrain. He was relishing the fact that no one had ever fucked Dawn's young hole like this before. No, Eric was the one who was giving her all this anal pleasure and it filled him with male satisfaction. He pulled back and sat on his haunches, sliding his cock out of Dawn's stretched asshole. \n\nHer hole gaped open, twitching weakly at the loss of its welcome intruder. Eric popped the head of his cock in and out of Dawn's sphincter, teasing her fluttering anal ring. She was so wet that her juices were running down between her asscheeks, further lubing up her asshole for a good fucking. Every time Eric tapped his cock on her hole, there was a wet smack from all her pussy cream.\n\n\"Nooo! Put it back!\" Dawn whined, sulking because her ass was currently empty. The toying of her anal ring was pleasurable, but it couldn't compare to being speared completely on a cock. \n\nEric grinned at her, continuing to tease her asshole. He pulled his cock away completely and then used his fingers to pull her hole open. \n\n\"To think only a month ago, this was a tightly shut unbreachable exit. Look at it now! It's an open highway!\" \n\nDawn felt her face flush at how Eric described her shitter. She looked down at her hole, weakly trying to close but failing. It looked like the assholes of those porn actresses after they had been gangbanged and fucked three ways into next Tuesday! \n\nThe thought embarrassed and pleased Dawn at the same time. She had hoped that being fucked in the ass would be pleasurable, but at the same time, she hadn't expected to be so exposed!\n\n\"Trucker coming through!\" Eric teased, and proceeded to shove his cock deep into her ass. \n\n\"Your trucker can come through any time!\" Dawn moaned as the sudden sensation of being anally filled stoked the fire deep inside her belly and ignited another stream of cream from her cunt. Eric pulled out and slammed himself balls deep again, making Dawn wail with anal pleasure! Her pussy gushed again, unable to resist the delight of having her ass penetrated!\n\n\"It's so thick! So good! Ah ah ah!\" Dawn cried out as Eric pounded her asshole relentlessly. His cock forced her rectal walls apart repeatedly, rubbing against her sensitive insides. The pressure inside her bowels seem to build, and build, and build. \n\nDawn couldn't stop herself from sobbing. How could Eric's cock make her feel so many different feelings? Being pussy pounded by his hot rod made her feel like he was reaching deep into her centre, lighting up her core. But being anally plowed felt like he was an electric current, shocking her from the base of her spine. Both were different, but both felt indescribably good. \n\nHer anal excitement increased as Eric continued to mercilessly ream her shithole. She was on the edge of something big, her nerves zinging continually in anticipation of the climax, but somehow, she still couldn't cum! \n\n\"Eric, I can't, I can't!\" Dawn wailed, teetering on the precipice of her first ever anal orgasm. \n\n\"Yes you can, Dawn! You love getting reamed in the shitter!\" Eric growled, fucking her young ass with wild abandon. \"I thought you were an innocent girl but you're an anal slut! You. Love. Anal. Don't you?\" \n\n\"Yes, yes! It feels incredible!\" Dawn practically wept. Her tits bounced and jiggled and wobbled from the sheer amount of force Eric was using to fuck her tight young and helpless rectal cavity. She could feel her ass muscles clenching, twitching with the pleasure coursing through her. She was on the brink of a chasm full of anal joy! \n\n\"Say it Dawn! Say you're an anal slut!\" \n\n\"I'm an anal slut! I love anal! It feels so good!\" Dawn panted, looking up at Eric through her watery eyes. He was grinning, satisfied at having made Dawn admit her sexual truth. He leaned his weight on her, grabbing her ankles and forcing them onto the bed behind her head to further tighten up her anal passage and increase her pleasure. Her eyes shot open with shock at the feeling of her asshole clenching down on Eric's massive rod. \n\n\"Cum then, you little anal slut! Cum. On. My. COCK!\" He punctuated each word with a hard, balls deep thrust, slamming himself all the way in, his hips slapping against Dawn's young flesh with obscene wet slaps. \n\n\"Ooooooaaaaaaaaahhh!\"\n\nDawn. Came. Hard. \n\nHer eyes rolled up into her head as her asshole clamped down on Eric's thick rod, simultaneously trying to suck it in and expel it at the same time. Her body convulsed helplessly, wracked with infinite rectal pleasure. She shuddered, shook, shivered all over, her thighs trembled and her fingers dug into the sheets as her newly deflowered anal passage experienced its first ever anal orgasm. \n\nThe thrilling sensation of Eric's cock stabbing into her young asshole raced up her spine, lighting up her every nerve with electricity. Her pussy clenched and spasmed as well, unable to resist the rapture that stemmed from a good anal fucking. \n\nEric ground his cock deeper, mashing his hips against Dawn's asscheeks, her rectal muscles clenching and spasming on his dick. The pretzel position made her doubly tight and the feeling of being milked by a young girl's ass muscles was incredibly empowering. To think, only several months ago, she had no idea what it was like to experience a powerful pussy orgasm, and now she was cumming her brains out while being fucked in her ass for the first time. And it was all thanks to him!\n\nEric started to fuck Dawn's ass again at a slower pace this time. He thrust in and out slowly, enjoying the sensation of her rectal walls pulsing around his cock, and savoring the look of anal bliss on Dawn's young face. He looked down at where they were joined and admired the stretch of her pink rosebud around his massive tool, now puffy from the relentless reaming. She really was an anal slut! \n\nDawn came back to herself slowly, the aftershocks of her first analgasm still jolting her body from time to time, sending pulses of pleasure through her hole and all her limbs.\n\nShe was still in her pretzel position, gently held in place by Eric. He wasn't looking at her face, only at her asshole where his cock was sliding in and out. The juices from her cunt had slid down to her ass, lubricating the way for Eric's hot rod. Dawn flushed with embarrassment when she realized that she had gushed so much that Eric's chiseled abs and sculpted thighs also glistened with her pussy juices. ",
        "\"Back with me?\" Eric asked affectionately, pausing in his anal reaming to brush Dawn's hair out of her face and let her legs down. \n\nDawn grinned. \n\n\"Yeah,\" she said ruefully \"That was amazing!\" \n\nEric nodded, then started to move his hips again. This time, he moved slowly and with purpose, bracing himself over Dawn while he impaled her brownhole over and over again. \n\nDawn's rectal cavity was sensitive from her first analgasm. The continuance of the anal attack was pure sexual torture on her poor rectum. \n\n\"Nooo,\" Dawn moaned in protest, weakly pushing at Eric's shoulders. \n\n\"We're gonna try for cum number 2,\" Eric told her seriously, not slowing down at all. \n\nDawn stared at him in disbelief. \n\n\"You came from your first ever anal, Dawn. That says a lot about you as an anal slut.\" Eric tilted his head to one side, bending down to kiss her neck gently. \n\nDawn flushed. The truth was laid bare now, evidenced by how easily she got aroused from the mere thought of having anal sex, and then from how hard she came when being reamed in the ass by a thick cock. \n\n\"I'm an anal slut,\" Dawn whispered softly to herself with a blush, turning it over in her mind. Shouting it in the midst of passion, and saying it to herself after her anal orgasm had passed felt really different. \n\n\"You should be proud,\" Eric praised her as he continued to mark up her neck and her shoulders with love bites. Dawn whined in discomfort. Eric's cock didn't let up on its invasion of her shitter at all. \n\n\"Not every woman can cum that hard from getting their shit hole pounded, and on the first time too!\" Eric nipped at her jaw. \"You're pretty fucking special, Dawn.\" \n\nEric pushed himself up, pulling his cock out of Dawn's sore hole. \n\nIt clenched weakly, unable to close fully, glistening with lube and Dawn's cunt cream. Eric flipped Dawn over and put the pillow under her hips. \n\n\"Come on, Dawn,\" he said, guiding his cock back to her puffy hole. \"I know you have a second anal cum in you, you little anal slut!\" \n\nJust like when Eric fucked her pussy, Dawn felt the overly-sensitive walls of her rectal cavity start to react to Eric's incessant plowing of her asshole. It was a rollercoaster of anal pleasure. She had slid screaming down the biggest slope, but she hadn't realized there was another one in front until the car was already going up the hill! \n\nEric continued to pierce Dawn's bottom with his cock, using his fingers to toy with her eager twitching hole. He grabbed her buttcheeks and splayed her open. \n\n\"Hold yourself open, anal slut!\" \n\nDawn whined. The words were mean, but said in an affectionate manner. She reached back and held her buttcheeks wide open so that Eric could fuck her deeper. \n\n\"That's it, good girl. Cum on now, cum for me. Feel the way my cock's punishing your shitter, it's stretching it out, ruining it. You took a 10 inch cock in your asshole for your first time, and you came on it. You came on it so hard you adorable little slut! You can cum on it again, go on!\" \n\nEric kept up a litany of dirty talk, calling Dawn a good little anal slut while he continued to slam into her. \n\nDawn couldn't help herself. Her asshole was just like her pussy, reacting to the overstimulation of its walls. Where other girls would have cried, the stimulation too much for them to bear, Dawn's body always reacted to the continued stretch and pull of her sensitive insides with another orgasm! \n\n\"Oh oh oh!\" Dawn moaned as her second anal only orgasm began.\n\nJust like the first, she convulsed helplessly, shaking all over. Her young hole fluttered around Eric's dick. Each clench and spasm made her sensitive walls tighten on Eric's lovely rod, which in turn stimulated her into another clench and spasm. It was a chain reaction that went on and on and on forever! \n\n\"Ah ah oh my hole! I'm cumming again!\" Dawn sobbed, fingers pulling her buttcheeks wider apart to showcase how her anal ring was helplessly speared open by Eric's thick rod. \n\n\"You look incredible like this, Dawn, cumming from my cock fucking your ass,\" Eric continued to praise her. He bent over Dawn's back and kissed the back of her neck, grinding his hips against hers. \n\n\"Gonna breed your ass, Dawn, gonna fill it with my spunk,\" Eric growled into her ear, fucking her through her second anal orgasm until she was trembling and boneless from the aftershocks. \n\nDawn nodded wordlessly, exhausted from her first anal experience. Eric pounded her ass a few more times, then started to cum inside her. \n\nDawn moaned again, another weaker wave of pleasure washing over her. The sensation of jizz spurting into her sore hole was similar to having an enema, but since Eric's cock was so deep inside, it felt like he was cleansing the deepest parts of her! \n\n\"Oh yes, yes, take my cum!\" Eric groaned, his hips finally coming to a stop as his balls emptied themselves into Dawn's young and no longer tight asshole. \n\nHe held himself above Dawn until his cock softened and he slipped free. \n\nDawn was all fucked out. Her hands fell to the sides from where she had been gripping her buttcheeks tightly. She could feel the cool air of the room on the inside of her stretched anal ring. Eric bent over and mischievously blew on her sore hole, making Dawn jerk and whine in protest. \n\n\"Feels empty,\" Dawn said, forlorn at the absence of a pleasurable fill. She felt Eric's weight leave the bed, probably going to get a washcloth. Her shithole twitched and clenched, bereft of cock. Dawn sighed. She really, really was an anal slut. She loved getting her pussy pounded, but she never thought of getting a cock in her cunt immediately after having mind-blowing orgasms. The fact that she hated having her anal passage empty immediately after a long hard fuck just further solidified the fact that she was an anal slut through and through. \n\n\"Here you go,\" Eric said. \n\nDawn felt something push past her anal ring and then settle comfortably inside. She let out an involuntary moan at being filled again. It was one of the anal plugs. Not as good as a cock, but eh, there was always next time, right? \n\n\"Anal orgasms are possible,\" Dawn murmured to the bed as Eric went about wiping her down. The porn actresses weren't all acting. Anal orgasms were possible, and she managed two on her first time. Anal orgasms were possible, and Dawn wanted as many of them as she could manage. Anal orgasms were possible, and Dawn was an anal slut, through and through. She closed her eyes with a tired smile, having completely embraced her anal truth, then drifted off into blissful sleep. \n\n####\n\nI hope you enjoyed this story. There will be more about Dawn's sexual adventures. Please leave comments on what you'd like to see happen!\n\n \n"
    ],
    "authorname": "kinkbugs",
    "tags": [
        "anal training",
        "barebacking",
        "enema",
        "high school",
        "huge dick",
        "multiple orgasms",
        "teen",
        "training",
        ";"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/dawns-anal-awakening"
}