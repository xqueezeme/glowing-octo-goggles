{
    "title": "In Our Bones",
    "pages": [
        "I am not the heroine of this story. \n\nI'm a suffering of cells, made up of bloodshot monkey-brown eyes, a tangled mess of dark hair, and skin like melted horchata with all the spice of cinnamon and the paleness of fresh rice. I'm slender butterfly limbs, soft curves and long sad lashes, little hands and littler mouth, all small and pouty, just like my momma's. I'm sadness rolled up into a human cigarette\u2014something you want to light up and breathe and then throw to the ground to put out its fire. You'll want to take me in, and then when I get too close, when I burn you, you'll want to drown me, drown this growing wildfire. \n\nI will hurt you, just like I hurt them. \n\nBecause I'm not a heroine. \n\nI'm a fucking disaster. \n\n\u2014\n\nMy name is Juneau, but no one spells it that way; Juno is much easier. \n\nI'm named after the capital city of Alaska, and when some kid in elementary school Googled it and found out that it was the second-largest city in the United States, they thought it'd be hilarious to call me the second-largest girl in Arthur F. Corey elementary school. The first, of course, was taken up by the other girl named after a place: Kansas Summers, a name almost as weird as mine, if even a little weirder. We were the two big girls, not because we were big-boned or anything, but because we were tall and we were heavy as fuck. Kids could come running at us, but we were tanks, and they'd bounce right off us like plastic bullets. We'd both been skinny as babies, but hell, as soon as we hit kindergarten, we'd sprouted like weeds, tall and thick-fisted with big heads and bigger mouths, yapping off like chihuahuas to any motherfuckers that dared to pick on us. \n\nBecause we weird-named kids had to stick together. \n\nKansas and I were as thick as thieves. She was blue-eyed and blonde-haired, the poster child for a curvy kid model, and I was... well, me. Chubby brown-eyed-brown-haired mousey kid with the delicate older sister, who\u2014get this\u2014was also named after a city: Aspen. She got the thin bones with long fingers that swept over piano keys like water, drowning out everyone and everything with the sweet sound of music. Her hair was less mousey, redder, a little auburn, and she got blue eyes like Daddy. I guess what I'm trying to say is that they were always beautiful, and I was a late bloomer... like really, really late. \n\nI hadn't bloomed yet when we first met the other kid who was named after a place. He moved to Buena Park, California in the summer of '98 when we were in the fourth grade, and his name was Caspian, like the Caspian Sea, but no one ever called him that because he went by his last name, Booker. No one made fun of Booker because he could lay a sixth-grader on the ground with one punch, and he'd done just that the day he'd moved here. \n\n\"New dude just got sent to the principal's office,\" some kid had said, Victoria Ferris, I think, the girl who would probably make a good wife for a senator or something eventually. Prim and proper, always dressed like she was going to church. \n\n\"For what?\" I'd asked. \n\n\"Sixth-grader snapped Kansas's bra strap. New kid didn't like that,\" Victoria said, and I could hear an edge of jealousy in her tone. I didn't know if she was jealous that Kansas hit puberty before all of us, or because Booker had defended her. He was in another class so I didn't know him, didn't even know what he looked like. Victoria obviously did. \n\n\"Where are you going?\" Victoria asked as I took off. \n\n\"To find Kansas,\" I yelled over my shoulder. I ran through the school until a teacher yelled at me, and then I power-walked through the halls until I reached the front office. Sitting on a chair across from reception was Kansas, her hands folded in her lap, tears streaming down her face. \n\n\"Kansas,\" I whispered, taking a seat beside her. I slung an arm around her shoulder and she immediately sobbed into my chest, taking me by surprise. Kansas was a strong girl; she didn't often cry. Whatever had happened that day had scarred her. \n\n\"It'll be okay,\" I said, lowering my voice when the secretary caught sight of me from over the reception desk. \"We're gonna kick that fucker's ass.\"\n\n\"Miss Garner,\" the secretary said sternly. \"You are a young lady. Act like it.\"\n\n\"Sorry, Mrs. Ridley,\" I replied, my face turning red. \"Okay, change of plans. We're not kicking any, uh, butt. We'll go get ice cream, okay? I have money, and I'll ask my sister to drive us.\"\n\nWe were fat-asses, Kansas and I, so ice cream should have made her perk up, but it didn't. She still looked dejected and all I could do was hold her, my little nine-year-old brain firing with ideas of revenge. Who'd done this to her?\n\nWhen a dark-haired kid exited the principal's office, I sprang to my feet and shouted, \"You dick!\"\n\n\"Miss Garner, come into my office,\" the principal said, stepping out from behind the kid. No one in the room looked amused. That was fine; I wasn't trying to be funny. I was serious. Fuck that kid. \n\n\"He's not a dick,\" said a soft voice from behind me. \"He's the one that defended me, Juno.\"\n\n\"Oh,\" I said. I looked at the dark-haired kid, trying to see him in a new light, and realized that I'd never, not once, seen this kid before. He had to be Booker. \n\nAnd I'd called him a dick. \n\n\"I'm sorry,\" I said sheepishly as I made my way to the principal's office. Mr. Straughn. God, how I hated Mr. Straughn; he had one of those punchable faces, all twisted mouth from a constant smirk, and bushy caterpillar eyebrows that wiggled when he talked. \n\nBooker didn't even look at me. He just walked past me like I didn't exist. \n\n\"You okay?\" I heard him ask Kansas. \n\n\"Yeah,\" she said, her voice impossibly small. \n\n\"Miss Garner,\" Mr. Straughn said, reminding me that I had some explaining to do. He took me into his office, gave me a talking-to and detention for a week. Detention at Arthur F. Corey School was just spending your lunch and recess inside your classroom since they couldn't keep us after school. It was as much a punishment to your teacher as it was to you, so it sucked extra hard because it gave your teacher another reason to hate your guts. \n\nI was sure my teacher already despised me, so how much worse could it get? I was a troublemaker with a big mouth. \n\nWhen I exited the principal's office, Kansas was still there, and sitting beside her was Booker, the fluorescent lighting making his dark hair shine. He had peculiar golden eyes, like a tiger, and there was something kind of wild about him. My cheeks were red when they both got to their feet. \n\n\"We waited for you,\" Kansas explained. \n\n\"I'm sorry,\" I blurted out again. \n\nBooker just looked at me, and for a moment I thought he was going to ignore me again, but then he said, \"It's cool.\"\n\n\"Want to go for ice cream with us? My treat,\" I said. \n\nBooker smiled, a sort of lopsided one where only one side of his mouth tugged up. I'd later learn that it was the only way he smiled; this crooked smile that melted hearts everywhere he walked\u2014besides mine, of course. To me, he was just Booker, the kid who could knock out a sixth-grader. \n\n\"Sure,\" he said. Not much of a talker, but that was okay. Kansas and I talked enough to make up for it. \n\nFor another year and a half, Booker was shorter than Kansas and me, but then over the summer before sixth grade, he sprouted like a fucking weed; tall as a tree, lanky and serious, talking as little as always, quiet and brooding. Kansas was completely in love with him, as was probably just about everyone else. Booker had earned the guys' respect and the girls' hearts. \n\nI was the odd one out. I liked Booker\u2014a lot, but not like that. Booker had cooties, you know? And I was juvenile enough to let myself believe it. \n\n\"Booker's going to Buena Park Middle School too,\" Kansas excitedly said to me on the last day of sixth grade. Booker this, Booker that. She was about the only person he really talked to. Because we hung out together, sometimes he talked to me too, but not much. We didn't have much in common besides the fact that we both cared about Kansas. \n\nIn middle school, Booker started buying these giant cookies for us. One for Kansas, one for me. He never got one for himself, didn't even explain why; he just did it, and that was that. The three of us sat on the bleachers during lunch, exchanging Rice Krispie Treats for Gushers and throwing pieces of PB&J sandwiches at the pigeons. \n\nThe three of us went to Sunny Hills High School and that's kind of when everything changed. Booker and Kansas had always been meant for each other. I sat back and watched as their hands brushed when they walked, as they always looked for each other first in a room, as they spent more and more time together without me, and then one day they walked into school holding hands. Booker kissed Kansas against her locker, and my heart burst into flames. \n\nI felt so... alone.\n\nWhen we were juniors in high school, sixteen-years-old and driving all wonky like a couple of idiots, taking turns in Booker's beater, laughing at the way Kansas would drive all wobbly, things changed. One day Kansas went home early to study for a midterm exam, and Booker and I decided we'd practice driving in the local community college parking lot at night when the lot was clear of cars. \n\nI was used to everyone telling me that my driving was too fast, that my turns were too sharp, but Booker was different. He never told me how much I sucked. He just put a hand over mine, turning the steering wheel gently, teaching me quietly what it meant to drive like a normal person instead of a racecar driver. \n\n\"Gently,\" he said. \"Lift your foot off the gas. Slowly. Not completely, just a little.\"\n\nThat was the thing about Booker; he didn't judge you, didn't belittle you, didn't make you feel like shit. He just helped you. \n\nI'd been practicing driving for months, but that night was the night I finally learned to drive. I learned that the car was not just a machine to control, but a part of you, an extension of yourself. You had to be careful with it, the way you were careful with yourself\u2014look both ways before crossing the street, you know? Protect that car like you'd protect yourself. \n\n\"You've got it,\" Booker said, smiling his lopsided smile. \n\nI grinned. He was right, I finally got it! I parked the car and sighed, doing a little happy dance that made Booker chuckle. \n\n\"You're crazy, June.\"\n\nOnly Booker and my dad called me June. Daddy had passed away the year before. It still stung to think about him; about the way he'd wake me up for Saturday morning cartoons so we could eat waffles and watch them together; about the days he'd pick me up early from school so we could catch the matinee at the local movie theater; about the way he never let me feel inadequate next to Aspen even though she was the skinny and talented one. Daddy had made me feel precious, had told me how I was beautiful, had promised that someday a lucky guy was going to be waiting for me in a church, and Daddy would be there to walk me down the aisle. \n\nI started to cry. \n\n\"Hey, hey,\" Booker said softly, \"you're okay. I promise you're okay.\"\n\n\"Am I?\" I asked him, looking up with an ugly snot-faced expression of helplessness. \n\n\"Of course you are,\" he said. \"You're the strongest person I know, June.\"\n\n\"I-I don't think so, Booker,\" I whispered. \"I'm breaking down. I don't know how long I can keep pretending. I'm not okay. I'm trying so hard, but I'm just not.\"\n\n\"But you are,\" Booker said, reaching out and putting his palm against my cheek. \"Nobody's perfect, June. Being strong is not about being perfect. It's about persevering\u2014exactly what you've been doing. You're hurt, but you're still smiling. You don't let Kansas see your pain. You make her happy... you make me happy.\"\n\n\"I do?\" I asked breathlessly. I think I was kind of fishing for compliments at this point because it was making me feel better, but I never knew I'd regret it because a moment later Booker leaned forward and pressed his lips to my cheek. My breath caught in surprise.\n\n\"Booker,\" I whispered shakily.\n\n\"I care about you,\" Booker said softly. \"Probably more than I should.\"\n\nI couldn't quite process what he was saying. \"What does that even mean, 'more than I should'?\"\n\nYeah, I was an idiot. I didn't know how to read what he was telling me. \n\n\"You don't understand,\" he said.\n\n\"Understand what?\"\n\n\"I'm in love with you, June.\"\n\nI know a look of horror crossed my face. \n\n\"No,\" I said, opening the car door. \"I\u2014uh, nope.\"\n\n\"June\u2014\"\n\n\"Nope.\" I got out of his car, ran my hand through my hair, tugging at the loose strands. This was not happening. Booker, in love with me? What fucking reason did he have to love me? Booker was my best friend, not closer to me than Kansas, but\u2014oh god, Kansas! Booker was the love of her life. \n\n\"June, please,\" Booker said, getting out of the car and going around it to reach me. He put his hands on my elbows, tugging me toward him. \n\n\"Booker, don't\u2014\"\n\nAnd he kissed me. \n\nFor one blissful moment, I enjoyed it. Sparks flew behind my eyelids, my legs turning to jelly as I lost all my equilibrium, and I fell into his arms. He steadied me, deepening the kiss\u2014and that's when I realized what we were doing. I pulled back and slapped him across the face. \n\n\"Booker, how could you?\" I asked, tears pricking in my eyes. God, this would destroy Kansas.\n\n\"We broke up,\" Booker said. \"This morning. We broke up, June. I know what you're thinking, but I'm not cheating on Kansas. I would never do that.\"\n\nWhat the fuck? And no one had told me?\n\n\"Booker, it doesn't matter that you broke up. We can't do this to Kansas. It's wrong.\" \n\n\"I'm not her property. I love you, June. Not her.\"\n\nTears trickled down my cheeks. \"Jesus, why?\"\n\n\"Because you're fucking crazy!\"\n\nI laughed, a dark sort of laugh that meant that nothing was funny at all. \n\n\"Thanks,\" I said sarcastically. \n\n\"No, that's not what I mean,\" Booker said. \"You're... You're loud. You're too much. Too much talking, too much stubbornness, too much everything. You're just fucking insane, and I love it. I've always loved it. I've always loved you. I made friends with Kansas to be closer to you, but you always gave us a wide berth. I-I know you probably don't feel the same way about me. I know I'm just Kansas's property to you\u2014\" \n\n\"That's not what I said\u2014\" \n\n\"Let me finish. You don't see me, June, but I see you. I see everything. I know you're broken, I know you're fucked-up, I know you're hurting because I am too. I'm fucking destroyed. I know you lost your dad, but did you know that I lost mine too? Just a couple weeks after you lost yours. I couldn't let anyone stop comforting you to comfort me so I didn't tell anyone.\"\n\n\"Why the fuck would you do that, Booker?\" \n\n\"How many times do I have to say it? Because I love you.\"\n\nBiologically, on a molecular level, I knew that I cared deeply about Booker. But I loved Kansas. \n\n\"No,\" I said, walking away. \"Just\u2014no, Booker. Go back to Kansas. Don't break her heart. Please don't break her heart.\"\n\nBooker put his hands in his pockets, looking down at the ground. \"Is that really what you want?\" he asked quietly. \n\n\u2014\n\nSix Years Later\n\n\u2014\n\nThe dress was perfect. Kansas had helped me pick it out. It went with the wedding theme, and it was silky and lacy and just perfect. Didn't I already say that? Yeah, perfect. \n\n\"I can't believe it,\" Kansas said, dabbing her eyes with a tissue. \"You look gorgeous.\" \n\n\"No, you do,\" I said. The stylist had curled her hair and all the bridesmaids' too. We'd made friends in college, weirdly enough, and we'd gotten close to a lot of them, but none as close as Kansas and I were to each other. We were practically sisters. Most people thought we were. \n\nBut it was nice to have bridesmaids. Maid of Honor was guaranteed, but what about the rest of the wedding party? Aspen, my sister, was a bridesmaid too. I smiled, watching her fix her hair, pinning up her freshly curled hair. \n\nThere was a knock on the door. \n\n\"Who is it?\" a bridesmaid, Kelly, asked. \n\n\"Booker.\"\n\nEveryone squealed. \n\nI walked to the door and leaned against it. \n\n\"You can't come in, Booker.\"\n\n\"Why not?\"\n\nI rolled my eyes. \"You're not allowed to see the bride until she walks down the aisle. Everyone knows that.\"\n\n\"Whatever,\" Booker said. \"Hurry up. Don't make me wait.\"\n\n\"Go away,\" I said, and he did. \n\nKansas's brother Dakota (yes, yet another place-name) would walk me down the aisle. He was a sweetheart and I loved him to death. He was nervous as hell that day; Dakota didn't do well in crowds. He had mild autism, and it made him anxious to be around so many people. I patted his arm, smiling. When the music started, I made my way down the aisle, leading Dakota. He was sweating profusely, but I didn't mind. I walked slowly, and he began to follow, putting one foot in front of the other.\n\nBooker was waiting at the end of the aisle, grinning his lopsided grin. I walked toward him, grinning back. God, how we'd grown. \n\nI walked and walked and walked, and walked right past Booker, to the raised platform to the left where I belonged\u2014my spot as Maid of Honor. Dakota took his place as Best Man. \n\nThe bridesmaids trailed in one by one and I smiled the entire time. That night in the community college parking lot I'd told Booker that I'd wanted him to go back to Kansas, that yes, that was what I really wanted. And so he had. He'd gone back to her, patched up what they'd broken, and then they fell in love, really fell in love. I hadn't once regretted my decision.\n\nAnd today was their wedding day. \n\nI was desperately single and that kind of sucked, but it was nobody's fault but my own.\n\nThe wedding march started, and then came Kansas in her beautiful white wedding gown, making my lacy and silk yellow dress pale in comparison, but that was okay; it was her day, after all. \n\nI glanced at Booker. He was grinning even wider now. It was so adorable that it was almost disgusting. I smiled when Kansas looked at me, and I gave her a thumbs up. This was her moment. \n\nThe ceremony was beautiful, everything I knew Kansas had always dreamt of. When they read their vows, half the room was in tears. All I could do was smile and smile and smile until it hurt to smile, but I kept smiling even after that. I didn't cry; I'd promised Kansas that I wouldn't because it'd ruin my makeup for the photos. \n\nAfter their first kiss as husband and wife, the photographers pushed us out into the summer air and had us pose for too many pictures. Most of the females of the wedding party had to have their makeup retouched, even Kansas, but I proudly smiled away the afternoon.\n\nA limo drove the newlyweds to the reception hall while the rest of us piled into regular cars. The bridesmaids were all carpooling there, and I somehow got squashed into the middle seat in the back of a Nissan Versa. Cramped, uncomfortable, and definitely no place for a Maid of Honor, but who gave a fuck about that, anyway?\n\nAs Maid of Honor, I took over my duties at the reception hall to get everything ready for the couple's grand entrance. When they finally walked in through the double doors, the emcee announcing them with too much enthusiasm, the music blaring, I realized just how lonely I was. Not that I wanted Booker, but a part of me wanted what they had.\n\nMy best friend had married the love of her life and I still couldn't get a text back. What was more tragic than that? \n\nThat night, I met Jamison, who I remembered sitting on the groom's side in the church. He went by Jamie, and he read me like I was an open book. He walked right up to me with a glass of tequila, straight. \n\n\"Here,\" he said. \"I think you need this.\"\n\n\"I don't know you.\"",
        "\"I'm Jamison\u2014Jamie.\"\n\n\"I don't take drinks from strangers.\"\n\n\"I just introduced myself,\" he said, grinning. \n\n\"You don't know me,\" I pointed. \n\n\"Of course I do,\" he contradicted. \"You're Juno. Maid of Honor, right? So here, we're not strangers; bottoms up.\"\n\nI took the glass from him. \"I'm not going to sleep with you,\" I said before downing the drink. \n\nI gave my Maid of Honor speech a little tipsy. I told everyone cute stories about Kansas and cuter stories about Kansas and Booker's love story.\n\nJamie handed me another drink after I was done with my speech. It was the fourth drink he was handing me that night. If I was in any right state of mind, I would've refused and told him to fuck off, but my brain was buzzing and I was lonely and it felt like a good idea at the time. Another shot of tequila. Fuck it. \n\n\"That's enough,\" said a voice when I approached the bar. I was about to order my fifth shot. I turned around, coming face to face with Booker. He didn't look amused.\n\n\"You're not my dad,\" I said before I could stop myself. That stung, probably for the both of us.\n\n\"She'll have water,\" Booker told the bartender. \n\n\"Booker, you can't just barge into my business like this,\" I complained, slurring my words. \n\n\"Listen, you don't want to get involved with Jamie,\" Booker said. \"He's bad news.\"\n\n\"I wasn't planning on getting involved with anyone,\" I said, feeling insulted and maybe a little too drunk. \"Do you think I'm some kind of whore? That the first guy who shows me some kind of attention immediately gets a one-way ticket into my pussy?\"\n\nHe looked surprised and hurt. \"June, you know that's not what I meant...\"\n\n\"Fuck you, Booker.\"\n\nI walked away from him and straight to Jamie, who was dancing with some girl, took his face in my hands, pulling it down and kissing him right there in the middle of the dance floor. Jamie put his hands on my waist, forgetting the girl he was dancing with, making her mutter something along the lines of \"slut... bastard\" and stomping off. \n\nWe didn't care. \n\nJamie kissed me under the twinkling lights, the scent of gardenias heady around us, the air in my chest tight as he stole my breath. He kissed me like he understood just how lonely and fucked-up I was, like he knew that I needed this, like he was volunteering to save me. I opened my mouth, tasting the alcohol, my tongue sliding along his. I wrapped my arms around his neck and he kissed me so enthusiastically that he lifted me right off the floor. I smiled against his lips and he smiled against mine and I knew then that he wasn't bad news at all; he was just news, the next breaking story in my life. \n\nWhen I pulled back, I looked at Jamie, really looked at him, and found that he was actually really handsome; blond hair, slightly pink cheeks and swollen lips from the kissing, a hella nice straight nose, and sparkling blue eyes. His body was pretty nice too, considering how good he looked in a well-tailored suit. All in all, it made sense that the other girl had thrown a hissy fit when I stole her dance partner to stick my tongue down his throat; he was a fucking catch! \n\nI looked around the room for Kansas, hoping I could locate her so I could tell her about the hot guy I was definitely going to be sleeping with despite my telling him the opposite\u2014when I caught sight of Booker at the bar. He was staring at us, his mouth parted, eyes dark and blazing. He looked almost... angry. What the fuck was his problem?\n\n\"Come on,\" I said, taking Jamie by the tie to lead him away from the dance floor. \n\n\"Where are we going?\"\n\n\"To book a hotel room.\"\n\nHe laughed. \"I'm really flattered, but I don't think we should.\"\n\nThat stopped me mid-step. My eyes snapped to his face. \n\n\"Why not?\" I asked, feeling insulted for the second time that night. What was it with guys? Did they just exist to piss me off?\n\n\"Because you're drunk, Juno,\" Jamie said, and I felt some of my anger deflate. \"I won't take advantage of you.\"\n\n\"You're not taking advantage of me,\" I corrected. \"I'm taking advantage of you, okay? So let's go.\"\n\nJamie looked impossibly amused. \"Alright, whatever you say,\" and he was patient as I led him around the venue to find Kansas to say goodbye. After ten minutes of looking and no luck, I decided to try the women's restroom. \n\n\"Wait here,\" I said, pressing a kiss to Jamie's lips. \"I'll be right back.\"\n\nI pushed the door open to the restroom and stepped inside. It looked empty, but I could hear some sniffling. I was not ashamed to bend down and look under the stalls. In the last stall, I found silver shoes and the white train of a wedding dress. It was Kansas. \n\nI walked up to the door and rapped my knuckles against it. \n\n\"Occupied,\" Kansas mumbled. \n\n\"Kansas, it's me,\" I said gently. \"Open up, babe.\"\n\nThere was a moment of hesitation, as if she wasn't sure if she wanted to see me at all. It was another few seconds before she unlatched the door and stepped out. \n\n\"I can't let anybody see me like this,\" she said, walking up to the mirror. Mascara had streaked down her cheeks and her lipstick was smeared. I walked back to the entrance of the restroom and turned the lock. No one was getting into this restroom. Too bad for the ladies that would be drinking too much tonight. They'd have to use the men's restroom if they were really desperate. \n\nI went and hugged Kansas. \"Now tell me what's wrong,\" I murmured into her hair. \n\n\"During our first dance, he said something about marrying his first kiss, so obviously I had to one-up him and say that I was marrying my only kiss.\"\n\n\"That doesn't sound so bad.\"\n\n\"He tensed up when I said that, Juno. I knew it right then that there was something he wasn't telling me. That's when he admitted that he'd kissed another girl when we'd broken up for like a day back in high school.\"\n\nAdrenaline coursed through my veins. It was fear that struck me like lightning at that moment. \n\n\"That-That doesn't mean anything, right?\" I asked shakily.\n\n\"No, I don't care about some kiss from when we were teenagers. What I cared about was that when he said he'd had feelings for this other girl at the time, I asked if he still had feelings for her and he just tensed up again. He didn't answer me, Juno.\"\n\n\"That still doesn't mean anything. He never said that he\u2014\"\n\n\"God, I know! I'm just so stressed from the wedding and just the thought that he might have feelings for anyone else just kills me!\" she sobbed.\n\nHow could Booker have told her about the kiss? Had he lost his fucking mind? \n\n\"Go back in the stall. I'll take care of this,\" I said, and before Kansas could even ask what I was doing, I unlocked the bathroom door and strode right past a confused-looking Jamie. I put up a hand to silence him and went stalking through the venue. \n\nBooker was still at the bar, nursing a glass of amber liquid, probably whiskey. I walked up to him and tapped his shoulder. When he turned around, I punched him square in the jaw. \n\nThe room became eerily quiet. The music stopped. Everything just... halted.\n\n\"Juno,\" said a soft voice after a minute. I felt an arm come around my shoulder and lead me away. It was my sister. She wasn't angry; she wasn't even confused. My sister knew me well. I wouldn't do something like this without a good reason. \n\n\"Wait,\" Booker said, taking a step toward us. \n\n\"Don't,\" Aspen said sharply. She'd never used that tone with Booker before. It was enough to stop him in his tracks. \n\n\"Go find your wife,\" was all I said before Aspen whisked me away, taking me straight out of the venue and to the parking lot. Our breaths came out in mists. It was sudden, this kind of cold, but what could you expect at this elevation? We were at Big Bear Mountain for the wedding. \n\nAspen dug around in her purse and produced a pack of cigarettes and a lighter. \n\n\"You smoke?\" I asked, shocked. \n\nAspen shrugged. \"Sometimes. When I'm stressed.\"\n\nWhat did a world-renown classical pianist have to worry about? Everyone practically worshipped her. She was as perfect as a person could get. \n\n\"Bum me one,\" I said, and Aspen passed me a cigarette and the lighter. I lit up and took in a disgusting drag. I hated it, hated how it tasted, but the nicotine hit my senses like a truck, immediately calming me. I sighed. \n\n\"Feeling okay?\" Aspen asked. \n\nIt was my turn to shrug.\n\n\"Do you want to talk about it?\"\n\n\"Not really.\" But that wasn't true. How could I keep this secret bottled up inside of me? \n\n\"Juno...\" Aspen said, reading the hesitation in my expression. \n\n\"Okay, fine. I do want to talk about it.\"\n\nAnd I spilled the beans. I told her every last thing, from the kiss in the college parking lot to the events of the wedding night in the ladies restroom. \n\n\"Well, I can't say I'm surprised,\" Aspen said, sighing. \n\n\"What do you mean?\"\n\n\"Are you dense? Booker's been in love with you since you were in a training bra! Have you seen the way that he looks at you?\"\n\nI felt extremely uncomfortable. \"He doesn't\u2014\"\n\n\"I'm sorry,\" said a masculine voice from behind us. I whipped my head around and found Booker standing there with his hands in his pockets. He looked lost, like he'd taken a wrong turn in his life somewhere miles ago, and now he didn't know how to make his way back home. I could see the glistening wetness of tears in his honeyed eyes; still golden like a tiger's even in the night, glowing like two miniature suns. \n\n\"You should be apologizing to your wife,\" Aspen said coldly. \n\n\"I tried. She won't talk to me. I came to see if June would help me. I can't do this alone\u2014I can't do any of this alone. I don't know what I'm doing. I don't know the first thing about being a husband.\"\n\n\"And I do?\" I scoffed. \n\n\"No, but you do know Kansas. You're the best expert on Kansas in this entire universe. You understand her on a level I could never hope to. I need your help, June. I'm sorry for everything. I never meant for her to find out. I want our marriage to work. I won't throw that away for...\"\n\n\"For some cheap kiss six years ago,\" I finished for him. He flinched.\n\n\"June,\" Aspen said, gently putting a hand on my arm. \"Give him a chance. Don't be so harsh.\"\n\nAspen was right, of course, but it was hard to swallow down the anger I felt towards Booker. We could have all had a beautiful friendship, but he just had to fuck it up. I knew what I had to do. \n\nI was shaking when I opened the door to the women's restroom. It was mostly empty, save for a pair of silver shoes and the train of a wedding dress in the last stall. \n\nKansas. \n\n\"It's me,\" I said, and a moment later the lock was unlatched and Kansas was throwing her arms around me, flying into my arms like a bird of prey in the night. I felt like a little field mouse, ten seconds from being devoured. I had to tell her the truth.  \n\n\"I was the person he kissed,\" I admitted. \"Six years ago, it was me. I should have told you.\"\n\nKansas pulled back from our embrace, immediately putting distance between us, stumbling back. I tried to steady her by reaching for her hand, but she jerked it back, her eyes wide, brimming with tears. \n\n\"Don't touch me,\" she whispered. \n\n\"Kansas, please...\"\n\n\"How could you keep that from me?\" she asked sharply. \"I thought... I thought you were my friend, Juno. I treated you like my sister.\"\n\nMy eyes brimmed with tears. \"I'm sorry. I knew you loved him, and I didn't want to get between you two. I-I thought\u2014\"\n\n\"Well, you thought wrong.\"\n\n\"I'm sorry,\" I sobbed. \"Kansas, please forgive me.\"\n\nHer eyes softened. \"I'm not going to forgive you. I don't need to. There's nothing to forgive. It wasn't your fault that he kissed you, and it's not your fault that he had or has feelings for you\u2014\"\n\n\"He doesn't, Kansas\u2014\"\n\n\"Shut up, Juno. I... I always knew he liked you. I was selfish, okay? I wanted him for myself because I loved him.\"\n\n\"He's yours,\" I said. \"I never wanted him, Kansas. He's always been yours.\"\n\nShe wiped her tears, sniffling. \"We don't know that.\"\n\n\"He married you. He loves you.\"\n\nKansas grabbed my arm, tugging me into her arms. She cried into my shoulder. \n\n\"What do I do, Juno?\" she asked as she wept.\n\n\"Go back out there and get your man.\"\n\nShe pulled back. \"You think I should?\"\n\n\"I know you should.\"\n\nWhen Kansas and I stepped out of the restroom, we found two men standing there waiting for us. One was Jamie, standing a little in the shadows, waiting patiently even though I'd probably ruined the mood for any sex tonight, and the other was Booker, his dark hair falling into his eyes as he stood there, looking hopeful when he saw Kansas exit the restroom. It was tense for a moment, and then Kansas ran into his arms. He hugged her tight, burrowing his face into the crook of her neck. \n\n\"I'm sorry, I'm sorry, I'm sorry,\" he was whispering. \n\n\"Shh,\" Kansas said. \"We'll be late.\"\n\n\"For what?\"\n\n\"Our honeymoon.\"\n\nMany of the wedding guests had left, save for some family. We all saw Booker and Kansas off as they got into their limo and drove off for the airport. \n\n\"I love you guys,\" I whispered into the night air long after they'd gone. \n\nI walked back into the venue and found Jamie by the bar, chatting up the bartender, making him laugh hard enough that he made Jamie drinks even though it was well after closing. \n\n\"Here,\" Jamie said, passing me a glass of what looked to be Jack and Coke. I sipped it slowly, enjoying the slight burn of the alcohol, something I'd hated when I'd first started drinking back at high school parties. \n\n\"What do you say we get out of here?\" he asked after I'd finished my drink. \n\nI needed something to squash out the stress, and meaningless sex seemed like a good contender. I took Jamie's hand and he led me away from the bar, out of the venue, and to his car out in the parking lot. It was a black Jeep Wrangler with the soft top on. Jamie helped me climb into the passenger seat and then rounded the car to get into the driver's seat. The car started up with a rumble and a roar. We buckled in, and just like that, we drove away, as if nothing substantial had happened there in those mountains. \n\nBut everything had changed. \n\n\u2014\n\nI woke to the feeling of a hand in my panties. I moaned, stretching out like a cat, and opened my eyes to find a sleepy-eyed Jamie smiling down at me. He had one arm wrapped around me, and the other hand was being used to gently finger me, playing with my little nub to get me wet. \n\n\"You're insatiable,\" I mumbled. Even now, after six months of dating, he was still very handsy and a total horndog. Not that I was complaining. \n\n\"You're so sexy,\" he whispered in my ear, two fingers dipping into my pussy. The heat enveloped his fingers, and pink clouds seemed to bloom on his skin as his cheeks reddened, rendering him defenseless. I kissed his cheeks, kissed along the light stubble of his jaw, and kissed him on the mouth, tasting the whiskey on his tongue. He was always drinking, and since meeting him, so was I. It turned out that Booker had been right: Jamie was bad news, but I didn't mind as much as I should've; after all the loneliness, I'd settle for any news. \n\nIt had all started when Dad had died, and as Kansas and Booker had grown closer and closer, I'd felt the distance rise as vast as an ocean, as if I was the only one left in the friendship. Now they were married, living together somewhere downtown, and I was still here, living in a run-down apartment in the suburbs working my job at the hospital as a psychiatric technician, I felt even lonelier. I had no one but Jamie, and I wasn't sure how good of a thing that was yet.\n\n\"Shh,\" Jamie whispered when he heard me sniffle. \"Don't tell me I'm that bad at making you come.\"\n\nI laughed, wiping my eyes. \"You're an idiot, Jamison Don Bentley.\" \n\n\"Hey, only my mother calls me that,\" he said, grinning. \"And only when she's mad. Are you my mother? And are you mad?\"\n\n\"I'm not your mother, but I am pretty crazy.\"\n\n\"That wasn't the kind of mad I was talking about,\" he said, amused. \n\n\"I know,\" I said, giggling. \n\n\"Minx,\" he murmured, curving his fingers inside of me. I let out a little gasp as he began to fuck me with his fingers, slow and sweet at first, letting me slowly rise to an orgasm in a sluggish crawl, and then he was whispering dirty things into my ear as he quickened the pace. I felt dizzy with desire, my hips rising off the bed as I got closer and closer, color bursting in my eyes, sparks igniting, and then he found the place that made me squirt. I cried out as he prolonged it, not stopping even when I begged him to. \n\nAnd then I was coming. \n\n\"God, Jamie,\" I gasped when I'd come down from the high. \"You're going to kill me.\"\n\n\"I'm not done with you yet,\" he said, untangling himself from me. He was already naked, the sheet falling off of his hard, muscular body. I stared shamelessly as he grabbed my hips and flipped me around. \n\n\"Plank,\" he ordered, and I did, dropping down in prone position. It was a favorite for the both of us; a tight squeeze for him, and an instant thrust to the g-spot for me. \n\nI felt the heat coiling in my belly before he even entered me. \"Jamie,\" I moaned when I felt the thick tip of his cock slide against my sticky fluids, lubing up before penetrating my\u2014oh god... \n\nI couldn't think; I couldn't breathe. \n\nAll I could do was feel. I felt the tenderness in his movements at first, the affection almost sympathetic, like he felt sorry for me because of how broken and fucked-up I was, but then he seemed to change his mind, wrapped an arm around me to help me lift my ass at just the right angle. \n\n\"Oh,\" I managed to say right before he began to pound into me. \"Oh, fuck!\"\n\nTears slipped from the corners of my eyes; the pleasure was almost implausible, like there was no way feelings like these could be allowed to exist. I gripped the sheets, screaming as he fucked me raw, his cock rutting into my poor tiny little pussy which was, by now, flooding with my slick juices. \n\nI was squirting; I was coming undone; I was on cloud nine; I was destroyed; I was everything; I was nothing. \n\nGolden eyes flashed in my mind, the eyes of a tiger, making my insides twist as I began to come. It was earth-shattering, taking me completely by surprise, making me sob as Jamie fucked me through my orgasm. He grunted a moment later, his cock jerking inside of me as he came, his cum pouring into the tight, hot walls of my pussy.\n\nHe fell onto the bed beside me, and I turned immediately to look into his eyes. \n\nThey were blue. \n\n\u2014\n\n\"The communists are holding me here against my will!\"\n\n\"Oh, jeez, Barbara,\" I grumbled, sprinting down the hall, scanning my badge to get back into the psychiatric ward. The doors opened, and I dashed past the nurse's station. \n\n\"I was just about to page you!\" said Elspeth, a nurse. \n\n\"The communists are holding me here against my will!\" Barbara was shouting at the top of her lungs. Two other technicians were already walking her into a corner so they could subdue her. She was always like this when she had one of her episodes. A nurse was walking over with a syringe, flicking the needle to keep from causing an air embolic stroke, filled with Haloperidol, and met my eye as I joined the other two technicians. \n\nI signaled them all back and approached Barbara cautiously. \"Barbara, honey? What's the matter?\"\n\n\"The communists are holding me here against my will,\" she said, but she wasn't shouting anymore. Barbara and I had an understanding: screaming means no extra pudding cups for Movie Monday. Now that I was here, she had to watch her behavior. \n\n\"It's just us here, Barbara,\" I said softly. \"And we're going to go outside, okay? Let's go take a walk.\"",
        "She didn't like to hear that there were no communists holding her against her will, but she was okay with letting you distract her. The nurse and technicians backed away as I led Barbara to the door that opened to the little yard where we exercised each morning and held the five smoke breaks throughout the day. \n\n\"Why's Barbara get an extra cigarette?\" asked Paige, another patient. She was wearing her usual pink smock, dried paint splatters still speckled across it from the painting she'd done earlier that afternoon. \n\n\"No one's getting an extra cigarette,\" I said. \"Now, go back to your games.\"\n\nPaige shuffled back to her checkers game in the main room. \n\nAnother technician, my friend Kevin, appeared with a set of keys to let us into the yard. He unlocked the door, giving me a grateful smile for helping calm another one of Barbara's episodes. Barbara and I stepped into the cold, crisp air of a cloudy winter in Southern California. January in SoCal is just sun-soaked windows that penetrate the chilly air. \n\n\"Do you want a blanket, Barbara?\"\n\n\"Communists,\" she mumbled. \n\n\"Barbara, you know that isn't an answer to my question.\"\n\nHer green eyes finally settled on me. \"No,\" she said stiffly. \n\n\"That's good,\" I said. \"Good answer. No blanket. Let's take a walk, huh?\"\n\nBarbara was a little shifty as we walked, but that was pretty normal for her. She was on the constant lookout for communists. She'd grown up with a father who'd virulently opposed communism and had put all sorts of ideas in her head. She was a sick woman, old with brittle bones, but her mind was alert and her imagination quite active. I liked her, even though she was one of our more difficult patients. There was something satisfying about getting through to a person with a mental illness, finding a way to connect with them and help them. \n\nIt made my day to know that Barbara wouldn't be sedated because of me. She was going to take this relaxing walk with me and then I was going to take her to the main room to play some games. It was Friday, which meant games all day. Barbara liked Candyland, so I'd have to find her a partner if I was going to be able to change the sheets before my shift was over. \n\n\"Nice weather, isn't it?\" I commented. \n\n\"Nice weather,\" Barbara agreed. \n\nWe took a stroll around the yard and then made our way back into the building. Barbara lived at the psychiatric ward for a few weeks out of every year when her nursing home was at their wit's end with her. They'd send her here, almost as if they were shifting their responsibility to us because they just couldn't be bothered with her anymore. I thought it was a shame. I wished there was someone at that nursing home that understood Barbara like I did. She just needed some patience and understanding. \n\nBarbara sat down at a table in the main room while I found her a partner and the Candyland board game. Paige volunteered at first, but I knew she was just going to pick on Barbara to try to find out if we'd given her an extra cigarette. I declined her offer and found a new patient, Yolanda, a young girl, barely a week over eighteen who was in the psych ward for a suicide attempt. She wouldn't be here long because she was mostly of sound mind, just depressed. She was sweet though, and I knew she'd be patient with Barbara. \n\n\"How about a game of Candyland?\" I asked Yolanda. \n\n\"Let me guess, you need me to babysit Barbara again?\" she guessed, a grin spreading across her lips. \n\n\"I'll get you a phone call with your boyfriend,\" I said. Everything here worked in favors. That's how we made things run smoothly behind the administration's back. \n\n\"You got it, sis,\" Yolanda said, rising to her feet and walking over to Barbara with the board game. \"Hey, Barb, how 'boutta game?\"\n\nI busied myself with changing the sheets, helped with serving during dinnertime, and cleaned up the paints from the craft room. Before I knew it, my shift at Anaheim Global Medical Center was over. I grabbed my lunch bag and purse from my locker, hugged some of my coworkers goodbye, and headed out into the night. \n\nI started up my faithful white '96 Toyota Camry and began to drive home, playing a Britney Spears CD and singing along. It was her Everytime album from 2003. I was listening to \"Toxic\" when my cell phone began to ring. I opened my flip phone and pressed it to my ear with one hand and controlled the steering wheel with the other. \n\n\"Hey, Juno!\"\n\nIt was Kansas. \n\n\"Hi,\" I said. \"Just got off work. What's up?\"\n\n\"Do you have dinner plans yet?\"\n\n\"Nope.\"\n\n\"Come by, if you're not too tired. Cas and I have something to tell you.\" Ever since Kansas had become Mrs. Booker, she'd started calling Booker by his first name, Caspian, which she sometimes shortened down to Cas. He, of course, hated it. \n\n\"I'll be there in ten,\" I said, making a U-turn to head toward Downtown Fullerton. Booker and Kansas lived in a cute modest three-bedroom house off Raymond Avenue and Dorothy Lane, which was only a five-minute drive from the rustic old-town atmosphere of the downtown bars, restaurants, and shops. They were renting the house, but they were hoping to buy it from the owner soon. \n\nI pulled into their driveway, parking behind Booker's black Camaro. Kansas's mint Mini Cooper was parked on the street right in front of the house. She'd probably planned for me to come over so she'd parked on the street before it filled up from neighbors coming home. Their cars were pretty new, looking freshly-waxed under the street lamps.\n\nBooker was a chemical engineer and Kansas was a teacher so they were doing pretty good with money. I was lucky if I crossed into $20k a year. It made for a comfortable life, but I couldn't afford a lot of the luxuries that my friends could. They'd gone to universities, and I'd completed a program in a community college. I didn't regret my choice, though. I loved my job. \n\nI'd barely shut my car door when the porch lights came on, nearly blinding me. The front door opened and standing there waving was Kansas. \n\n\"Hey, Juno! Hurry up, the roast is going cold!\"\n\nOnce inside, I washed my hands in a bathroom and joined her and Booker at the dinner table. Their eight-month-old golden retriever puppy, Max, was begging by Booker's seat. I knew he wouldn't be able to resist. He kept sneaking Max pieces of roast beef when Kansas wasn't looking. \n\n\"So, what's the news?\" I asked. \n\n\"Do you notice anything different about what's on this dining table?\" Kansas asked excitedly. \n\nI looked around. \"Uh, new placemats?\"\n\n\"The placemats are the same,\" Kansas said with a laugh. \"Look at the glasses!\"\n\n\"You got new wine glasses?\" I asked. \n\n\"Jesus,\" Booker said under his breath, laughing. \n\n\"You're getting warmer. What's in the glasses?\" Kansas said.\n\n\"Well, there's red wine in mine. There's red wine in Booker's. There's... is that water in yours?\"\n\n\"Yup,\" Kansas said, grinning. She had a protective hand over her belly and just like that, it clicked.\n\n\"YOU'RE PREGNANT?\" I screamed. \n\n\"Finally,\" Booker said, grinning. \n\n\"YES!\" Kansas screamed back. \n\nI hopped up from my chair and rushed to Kansas. She got up from her chair and we celebrated by dancing, jumping up and down and screaming and screaming and screaming. Max started barking, which was probably dog-speak for \"shut the fuck up.\"\n\nI hugged Kansas, still jumping up and down. \"Oh my god, oh my god, oh my god!\" I was still shouting. If only the hospital staff could see me now; they'd probably sedate me. But who gave a fuck? My best friend was pregnant! A baby! \n\nA baby. Holy shit. \n\n\"Are you scared?\" I asked. \n\n\"Terrified,\" Booker said immediately. \n\nKansas laughed nervously. \"Kinda. I dunno. I'm mostly excited.\"\n\nOne of the things I was scared of was growing old. I didn't like it when kids called me \"Miss\" or \"lady\" and I was half-uncomfortable with the thought that people my age\u2014only twenty-two\u2014were having a baby. It aged us instantly. I couldn't pretend that we could cling to our youth. The same stars twinkled in the night sky, the same sun turned us in space, and all the dust of darkness and light had not yet settled\u2014and through it all, despite it all, time moved forward for us humans. It was a linear thing for us, one chronological moment following another. \n\nAnd here we were, getting old. \n\nA baby. \n\nFuck. \n\n\u2014\n\nBad News and I kept dating, even a year after the Booker wedding. We were a good fit. Neither expected too much from the other, and we had set our boundaries early on. He wouldn't disturb me when I needed to be alone, and I wouldn't deny him when he wanted to fuck me senseless. Hell, it was mostly a win-win for me. On the off-chance that I'd be too tired to move, he'd let me lay there while he ate me out. Then he'd make love to me. \n\nBut the thing was, I still didn't love him. \n\nThankfully, he was okay with that. He didn't love me either. There was a girl he was still pining after, some chick who'd dumped him years ago. She was the reason he drank so much. My loneliness was my reason, but his was a lot more pathetic and I guess that made me feel a little better about being so fucked-up. I drank with him, a lot more than I should be drinking. My poor liver. \n\nPoor, poor thing, I'd think as I took another sip of my J\u00e4gerbomb, cackling at the way Jamie was putting on a show of puffing up his chest like a rooster to hit on the bartender. He liked doing that, getting in their good graces so they'd be a little heavy-handed with our drinks. This time the bartender was a red-haired woman with a voluptuous body and ice-blue eyes; she was extremely pretty and had a sort of grunge quality about her. She'd introduced herself as Saoirse, like the actress Saoirse Ronan (who I was a little bit obsessed with, by the way), except she looked nothing like her and about the only thing they had in common was their first names. \n\n\"Another one, doll?\" she asked when I'd downed my entire drink. \n\n\"Oh, fuck yeahhhh,\" I slurred. \"I'd love anotherrr.\"\n\n\"Er, maybe not,\" she said, looking concerned. \n\n\"Oh, come on, don't cut me off this early. It's not even eleven yet.\"\n\nJamie piped in with, \"Let her have another, sweetheart. I'm her ride.\"\n\n\"Yeah you are,\" I said, then snorted as I laughed.\n\n\"You should be just as wasted, if not more,\" Saoirse pointed out, raising an eyebrow. \"You've easily drunk double what she has, and believe me, she's drunk a lot.\"\n\n\"Time to hop to another bar, babe,\" Jamie said, helping me to my feet. I teetered a little and Jamie steadied me. \n\n\"Show chiverous,\" I said, then frowned and shook my head. \"Chilvarous?\"\n\n\"Chivalrous,\" he corrected, an easy smile on his face.\n\n\"How'm I gonna ever thank you?\"\n\n\"I can think of a way... or two... or maybe three.\"\n\nI licked my lips. My memories from my nights with Jamie were always hazy, liquidy moments of cohesiveness mixed with confusion, a cocktail of good times and bad decisions that culminated in a tangle of sheets. The memories weren't always clear, and they weren't always correct, but the faint love bites speckling my breasts the next morning and the aching echo of fingertips digging into my hips were clear enough. \n\nJamie paid, left the waitress a nice tip, and then we bar-hopped until 2 AM. By the end of the night, we were both piss-ass drunk. \n\n\"Your ride, m'lady,\" he slurred as a cab pulled up.\n\n\"Ours, you mean?\"\n\nHe shook his head, grinning as he mashed his face to mine.\n\n\"Think you might pass out before I'm done,\" he teased. \"You can pay me back for my chivalry tomorrow.\"\n\nI snorted with laughter as I fell into the backseat of the taxi. Jamie stuck his head in, kissed me one last time, then shut the door behind me.\n\n\"Address?\" the cab driver asked, and though it took two or three tries, I managed to tell him.\n\nFive minutes later, I got out of the cab, waved cheerfully at the driver as he drove away, and then turned around on the sidewalk. For a moment, I stared in confusion.\n\n\"This isn't my apartment,\" I whispered, staring in horror at a house. \"Why did I come he-\" I tripped over a tree root in the front yard and fell flat on my ass. \"Shit!\" I hissed. \n\nA moment later, the porch light came on and the door opened, revealing a very tired-looking Booker in a white t-shirt and a pair of gray flannel pajama pants. He didn't look all that surprised to see me, like I was so fucked-up that he just expected this from me.\n\n\"June?\" he said. \n\nI was going to answer. I opened my mouth and everything. I looked at Booker, he looked at me, and then I sighed as I slumped over onto the plush, cool grass. \n\nThe next thing I knew, Booker was hovering over me. The air around his head was shimmering like ice beneath the moonlight. He was kneeling on the grass beside me, eyebrows furrowed. \n\n\"How drunk are you?\" he asked.\n\n\"Go back inside,\" I muttered. \"I'll be alright.\"\n\n\"I can't just leave you out here.\"\n\n\"I'm gonna call another taxi. I got mixed up. Don't know what I was saying. Actually, will you call them for me?\" I asked, showing him my cell phone.\n\n\"Come on,\" Booker said, taking me by the elbow and helping me to my feet. \n\n\"Call my taxi.\"\n\n\"You don't need a damn taxi,\" Booker snapped. \"Come inside. It's freezing out here. You can spend the night in the guest bedroom.\"\n\n\"I can't let Kansas see me like this,\" I said. She was six months pregnant. This would just stress her out. \n\nBooker's face was unreadable. No, not unreadable. It was torn, reluctant, far too contemplative for someone who was just supposed to call me a cab and let me go home. What the hell was there to think about?\n\nDeep inside, I knew the answer, but before it could bubble up, Booker spoke.\n\n\"How drunk are you?\" he asked again.\n\n\"I'm fine,\" I spat.\n\n\"This has to stop,\" he said bluntly.\n\n\"You have to stop,\" I mocked.\n\n\"June, this...\" He sighed, then shook his head. \"Come on, I'll drive you home.\"\n\n\"You can't leave Kansas alone here,\" I protested half-heartedly.\n\nHe took my elbow, guiding me towards his car in the driveway. \n\n\"She'll be fine. She's sleeping and I have my phone.\"\n\n\"But-\"\n\n\"June,\" he said tiredly. \"Come on. I'm not in the mood for games.\"\n\n\"I'm not a game.\"\n\n\"I know you're not.\"\n\nWe were at his car by then. Apparently, only my words were protesting the decision. My body had followed his, toddling across the yard beside him like an obedient child. He led me to the passenger side, opened the door, and grabbed a blanket off the back seat. When he tried to wrap it around me, I batted at his arm.\n\n\"Don't,\" I said.\n\n\"You're freezing,\" he said. \"You're always cold. Just take the damn blanket, June.\"\n\nI glared at him. Stupid Booker being stupid right all the time. I was cold, and the blanket was soft. Sighing, I shrugged the blanket around my shoulders as he withdrew a sweater from the back and put it on. Grumbling unintelligibly, I got into his car. Booker got into the driver's seat and the car purred to life. I closed my eyes, listening to the sounds of the wind as he drove with the windows cracked just enough to let in some fresh air. I needed it and he probably knew it. \n\n\"Jamie still making you drink into oblivion?\" Booker asked, his jaw hardened. \n\n\"No,\" I said defensively. \"I did this to myself.\"\n\n\"But Jamie taught you because he's\u2014\"\n\n\"Bad news, I know.\"\n\n\"...an asshole,\" Booker finished. \n\nI laughed, but Booker didn't seem to find it funny. \n\n\"When are you gonna grow up, June?\" he asked, but it was not a callous question. He just sounded tired. \n\n\"Never. I'll never grow up.\"\n\n\"We're not kids anymore, June.\"\n\n\"Speak for yourself.\"\n\n\"We all have grown-up jobs, and we live grown-up lives. Hell, Kansas and I are having a baby. It's time for us to grow up.\"\n\n\"Who do you think you are?\" I asked icily. \"Lecturing me like you're my fucking father or something?\"\n\n\"You think your dad would've wanted this life for you? Getting wasted and passing out on people's lawns at two in the morning?\"\n\nTears sprung to my eyes. \"You don't know a damn thing about\u2014\"\n\n\"Don't I?\" Booker stared straight ahead, avoiding looking at me, concentrating on driving. I always forgot that Booker had lost his dad too. \n\n\"I-I'm sorry.\"\n\n\"Don't be,\" Booker said. \"Just\u2014Just get it together, okay? Kansas can't see you like this, and I'm already sick of seeing you like this.\"\n\n\"What are you talking about?\"\n\n\"Damnit, June!\" he said. \"I'm not in the mood for games, I just told you that.\"\n\nI stared out the window silently. \n\n\"How many fucking times have you passed out on our lawn?\" he asked\n\n\"Once,\" I said, my voice cracking. \"Tonight.\"\n\n\"Bullshit. You just black out and I drive you home, without fail, every single Saturday in the early hours.\"\n\nI wiped away the tears in the corners of my eyes and looked out of the window, watching the world speed by. Every Saturday. Every fucking week. And he couldn't even do me the courtesy of pretending it was the first time.\n\n\"Aw hell, don't cry,\" Booker said gently. \"I'll help you, June. We'll get through this.\"\n\n\"I don't think I can,\" I whispered. \"I don't think I'm meant to.\"\n\n\"Why not? You have your entire life ahead of you. Why would you just throw it away?\" \n\n\"Because I'm broken, Booker! I'm lost. And I'm... done. I'm over it. I give up,\" I said, wiping away more tears that were streaming down my face. \n\nMoments later, he pulled over, and I realized we were parked in front of my apartment.\n\n\"I'm good from here,\" I said, sniffling.\n\n\"I'll walk you up,\" he said.\n\n\"I don't want you to.\"\n\n\"And I don't want you to get hurt.\"\n\nWell, it was too fucking late for that.\n\nAt least this time he didn't hold onto my elbow as I trudged up to my apartment. He just made sure I got there, watching as it took three tries for me to get the key in the door. Before I twisted it open, he reached out and touched my arm.\n\n\"Hey, listen to me. You are stronger than this. You are the strongest fucking person I know. You've gotten this far. You've made it all these years. We'll get you help and everything will be okay.\"\n\n\"Are you saying I need professional help?\" I let out a laugh. \n\n\"June, you know you do.\"\n\n\"I work in the damn field. I would know if I was crazy and I'm not. I'm fine, Booker.\"\n\n\"Who the fuck called you crazy? You're not crazy, you're depressed. You've been depressed for years.\"\n\n\"And you with your degree in chemical engineering would know all about that, wouldn't you?\" I spat. \n\n\"June, just for once in your life, listen to me. You're a fucking treasure. I can't lose you. I refuse to.\"\n\n\"Booker\u2014\"\n\n\"No, June, listen to me,\" Booker said. \"I can't see you destroy yourself like this.\"\n\n\"How is this any of your business?\"\n\n\"Are you fucking joking? You're one of two women that I love more than anything in this cosmic universe. Watching you destroy yourself is destroying me.\"\n\nThere are cracks in every soul.\n\nThat's how the dark gets in. \n\nThe dim yellow light in the apartment hallway made Booker's skin glow, and his honeyed eyes stared back at me with so much love and adoration that it made my eyes water again. No one in the world was going to love me like Booker did.\n\nNo one.\n\nI didn't think about it, didn't leave myself any time to talk myself out of it; I just did it because I wanted to\u2014because in that moment, I wanted it more than I'd ever wanted anything in my life. I was old shoes over a powerline, a pothole on a busy street by an elementary school, a squatter in a house that wasn't mine. I was wrong, so fucking wrong. \n\nBut I didn't care. I didn't think. I just lurched forward and I kissed him.\n\nAgain.\n\nBooker loved me, and he needed to know that it mattered. I kissed him, the rapturous feelings taking over every cell in my body. He was warmth, hot chocolate on a cold winter night, a band aid for when you skinned your knees, a man in a house that was his. He belonged here, lived right here in my heart. ",
        "And so yes, I kissed him. It was fucking fire. I was crying, and he was probably tasting my tears, but instead of pushing me away, instead of reminding me just how fucked-up I was, he did the Booker thing: he understood. \n\n\"June...\" he whispered, his lips moving against mine.\n\n\"Don't say anything,\" I whispered, and Booker listened. He wiped my tears away, and I recoiled.\n\nBooker was someone else's husband. He was my best friend's husband. This was all kinds of fucked-up; I was all kinds of fucked-up. \n\n\"I think we should take some time apart,\" I heard myself say. No. What the fuck was I doing? I didn't want that.\n\nBooker nodded. \n\n\"And I don't think we should tell Kansas,\" I said. \"She won't be able to handle this right now.\"\n\nHe nodded again.\n\n\"We should... we should forget this happened,\" I said.\n\n\"Like that's going to work this time,\" he muttered. \n\n\"It will work,\" I said vehemently. \"Forget this whole thing, Booker, okay?\"\n\n\"And if I don't want to?\"\n\n\"Booker\u2014\"\n\n\"No, shut up. I... I'm sick of this, June. Fuck it,\" he said, and closed the distance between us, taking my face in his hands and kissing me right on the mouth. He kissed me hungrily, over and over again pressing those hot lips against my mouth, moving his lips with mine, slipping his tongue inside. I let him taste me, let him taste the burn of the alcohol, and then I drew back and for the second time in my life, I slapped him for kissing me. \n\n\"Asshole,\" I said, my voice cracking again.\n\n\"No,\" he said, and suddenly he was pinning me against my door.\n\nExcept he wasn't. He didn't. I... his sweater was clenched in my fist, and I was pulling on it, pulling him towards me. I looked up into those golden tiger's eyes, wild and ready to tear my soul to shreds. I felt a thump in my chest, felt nothing but these intense feelings, this desire, this need, and I wrapped my arms around his neck, pulling him down and suddenly I was kissing him and he was kissing me back. I moaned into his mouth when I felt his hands slide down the curve of my hips to cup my ass. He kneaded my flesh, pulling me against him, grinding himself between my legs. I felt his erection between his thin flannel pajamas and my skirt. I hitched it up, and he turned me around, pressing me up against the door, quickly pulling my panties aside.  \n\nMy eyes snapped open. He had a hand in his pajamas, as if he was midway through pulling out his cock. God. \n\n\"Are you insane?\" I hissed, pushing him away.\n\n\"Are you?\" he shot back.\n\nAnd then I was letting him into my apartment. His lips were on mine, familiar and warm, and we were losing control. His hands were on me, everywhere on me, completing me, ruining me.\n\n\"We can't do this,\" I whispered. \"Booker, we can't.\"\n\n\"How many times have you said that to me?\" he asked.\n\n\"A thousand times,\" I choked.\n\n\"And how many times have we listened?\"\n\nMy fingernails dug into his shoulder as he shoved his body against mine.\n\n\"None,\" I whispered. \"How many more times do I have to tell you before you listen to me?\"\n\n\"A thousand times,\" he said breathlessly, pressing his lips to my neck. I moaned, stumbling back into my couch, pulling him down with me. I found his face and kissed his hot lips. The spark that he ignited in me burst into flames. Seven years ago I'd felt this, the insanity, the forbidden taste, the fireworks that exploded behind my eyelids when he kissed me. I had never been able to replicate that moment with anyone else. \n\nExcept now. \n\nWith him. \n\nI wanted him. \n\nAnd I was going to have him. \n\nWhat did I tell you? I'm not the heroine in this story. \n\nI'm the disaster. \n\n\u2014\n\nI was running down the hall, skidding along the floors, excusing myself as I bumped by other hospital staff. I'd just been paged, and I knew what it meant: Barbara. The communists again, likely, and if I didn't run, if I didn't hurry, they'd stick a needle in her and sedate her. She didn't deserve that. She needed someone to give her a chance, someone to listen to her and calm her down. \n\nShe needed me. \n\nI heard her before I saw her. \n\n\"The communists are holding me here against my will!\"\n\nI scanned my badge and entered the psych ward, my heart thumping in my chest as I followed the sound of her voice. She wasn't just hysterical this time; she was crying. Something had scared her, likely the nurses who were walking toward her now. Why weren't they trying to help Barbara calm down? \n\n\"Juno,\" said a nurse. \"Go hold her. She needs to be sedated. Doctor's orders.\"\n\n\"What the hell does that mean?\" I asked, stopping, staring helplessly at Barbara as she continued to scream. My heart was cracking into a million pieces. She was distressed, she was hurting, she was lost, and I couldn't do a damn thing about it. \n\n\"We need to put her down,\" a nurse said. \"She's got surgery this evening.\"\n\n\"For the hernia?\" I asked. \n\n\"Yes, and she won't cooperate.\"\n\n\"How do you know that? Has anyone even explained it to her? Does she know what they're going to be doing to her?\" I asked, my own voice rising. \n\nThe nurse looked at me, her expression flat. She was done with the shit she had to do that day. She didn't want more from me. \n\n\"Just get back then, Juno.\"\n\n\"Let me try,\" I said. \"I can calm her.\"\n\n\"Juno,\" said a soft voice. I turned around. It was Kevin, one of my fellow technicians. He held out his hand. \"Come on.\"\n\nI took his hand, let him keep me away. I closed my eyes tightly, trying not to cry as Barbara continued to struggle and sob. She screamed, and I knew they'd stuck the needle in her. \n\n\"Technicians,\" a nurse said. \"Come help us take her to a stretcher.\"\n\nIt was our job, so that's what Kevin and I did. Neither of us was happy about it, but we did what was asked of us, no matter how wrong it felt. \n\nI hadn't been able to calm Barbara. I hadn't been given a chance to get through to her. I hadn't been able to stop the nurse from sedating her.\n\nI was a failure. \n\nI helped Barbara to the waiting stretcher, brushing her gray hair back from her temples with my hand. She was out cold, and it broke my fucking heart. She just lay there, so helpless, so vulnerable, and I thought about how unfair it was. It was all so unnecessary. So what if she had surgery coming up? Why couldn't we be bothered to take an extra few minutes to explain it to her? Why couldn't we take the time to help her calm down? \n\nBecause it wasn't protocol. \n\nI left work early and told them I wasn't feeling well because if I was being honest, I wasn't. I was feeling like shit. \n\nWhen I got home, I cracked open a beer and propped my feet up on the couch, lying down so that I wouldn't have to look at anything but the ceiling. Tears fell from the corners of my eyes, but I ignored them. Jamie was still at work, and we hadn't planned to see each other today anyway. I watched trash TV (Keeping Up With The Kardashians) and drank. No one would have to see me get wasted again. \n\nAfter one beer, I had another. And another. And another. And another. \n\nI'd just used the bathroom to make room for another when my doorbell rang. \n\n\"The fuck?\" I muttered under my breath. Who the fuck would bother me at this hour? It was already nine at night. It could be Jamie, but he always had the decency to call before showing up. \n\nI opened the door and found Booker standing at the other side of the metal screen door. He had his hands in his pockets, standing there, just waiting for me to turn him away. I always thought about it, and he always knew I considered it. I could shut the door. I should shut the door. \n\nBut I wasn't going to. \n\nAfter the day I'd had, after letting Barbara down and drinking all of my feelings, I knew what I needed. \n\nI unlocked the metal gate, and he opened the door and I took a step forward, and it wasn't even that long at all, maybe seconds, before our lips met. I tasted mint gum and alcohol on his tongue, masking his sadness, masking how fucking guilty he felt for doing this while his wife was six months pregnant with his child. It was almost like we'd been given a sign to stop, like this baby was supposed to be the end of us. \n\nExcept this baby is what brought us together. \n\n\"Booker,\" I gasped when his lips traveled from my mouth to my throat. His teeth sank down on my skin, lips sucking, leaving me another one of his hickeys that I had stopped bothering to cover. If Jamie noticed, he didn't care; and if anyone else noticed, they assumed it was because of Jamie. \n\n\"June,\" Booker whispered against my skin, kissing along my throat and my jaw. \"God, I love you, June.\"\n\nMy eyes pricked with tears. I wasn't that mousy-haired little fat girl anymore, the one with the braces and pink sunburnt nose. I was a woman now with soft shapely curves, straight teeth, and sunscreen. I'd sprouted a few inches, effectively growing into my weight, and now everything was exactly where it was supposed to be. I had a killer body now; the hourglass shape I'd always wished for, the slim waist and wide hips, the luscious full lips on that small mouth, and bright almond-shaped eyes. Yeah, they're still brown, but I don't hate them anymore. They're rich, they're warm, and they're mine. I've finally grown into myself and it only took over twenty years to get here. \n\nBooker's loved me since long before I blossomed. Long before I thought I was anything to look at. Long before I had anything interesting to say or do. Long before I'd pursued a job in the medical field, long before I started reading self-help books and finding my place in the world. Booker had always seen me, real me: the vulnerable little girl who'd always got bullied for being chubby, the silly little girl who always fell out of trees while climbing them, the studious little girl who always tried her best but ended up copying off of her best friends' homework sheets just so she could pass. Booker had loved that disaster. \n\nJamie, through no fault of his own, met me at a time when I was already at my prime. He liked what he saw. Jamie was the perfect placeholder; like a bookend in the library, holding everything up until someone comes along and takes a book out of your shelf, leaving an empty space behind, an emptiness and a void that you cannot fill. But you try, don't you? Different books, you'll buy them, mashing them into the empty space; throwing yourself into your work at the hospital, drinking and drinking and drinking so much alcohol that you're always passing out on the weekends, even taking up smoking because the nicotine rush is such an addictively intense feeling that you can't help but chase it.\n\nBut nothing drowned out the truth; nothing drowned out Booker. \n\nWe closed the metal door and then the front door, locking up behind us, deadbolt in place before we began to undress. It was dark in the apartment, save for the dim glow of the TV. While the Kardashians argued, Booker and I unbuckled a belt, unsnapped a bra, slid down pants and panties and boxers, ripped off shirts, bodies meeting in the end, naked flesh against flesh. \n\n\"I'm sick in the head, June,\" Booker said, turning me around and pressing me against the front door. \"All I think about...\" he kissed the back of my neck \"...is you, you, you. I'm a terrible person, and I don't know why you want me, but I'll take what you'll give me.\"\n\n\"There isn't a single bad bone in your body,\" I said, moaning as he finally pushed his thick cock inside of me. \n\n\"Oh, there is one, and it happens to be inside you right now.\"\n\nI laughed. \"You're awful.\"\n\n\"Awfully turned on,\" he corrected. \"All day, all fucking day, all I can think about is this...\" He gripped my hips, his fingertips sinking into my sensitive skin. I whimpered as heat bloomed on my cheeks, my pussy slick for him, letting out a cry when sank into me, bottoming out inside of my tight walls, his balls slapping my clit. \n\n\"That's it,\" he whispered, fucking me slowly, drawing gasps out from deep inside of me. From the pit of my belly, from deep inside of my chest, from the bottomless pit that was my heart, I felt an orgasm begin to build, white-hot and all-consuming. Tears fell from the corners of my eyes as I pressed my ass back against him, fucking him back. We found a rhythm, and before long, it was fast, it was hard, it was decadent and delicious and damning. We were probably cursed, but in that moment, neither of us really gave a fuck. \n\nAll we wanted was this... \n\n\"Booker, I'm coming,\" I sobbed. \n\n\"How close are you?\"\n\n\"Thisclose!\" \n\nBooker turned me around, lifted me off my feet, and fucked me, bouncing me up and down on his cock. My full breasts swayed in his face as I threw my head back, shaking my hair, tears streaming down my face from the mind-numbing pleasure. \n\n\"Come for me,\" he commanded, grunting. He was close too. \"Now.\"\n\nI cried out his name over and over and over again, coming hard, my entire body shaking. Booker stepped forward, pressing my back against the door as he came, groaning, slapping a hand against the door to steady himself, the other arm still wrapped around me. We came together. \n\nWe were the perfect storm. \n\nBooker carefully lifted me again, carrying me from the front door to the bedroom, gently putting me down on my bed, a queen with too many decorative pillows on it. I threw them playfully at him as he slid open the window. He looked over his shoulder, a wolfish grin on his face, and pounced, those tiger's eyes flashing. I screamed, pelting him with more pillows, but they just bounced off of his hard chest. He crawled across the bed and placed a hand on each of my knees, spreading my legs. \n\n\"Booker...\"\n\n\"So red,\" Booker observed, running a finger down my slit. \"I fucked you raw. Are you okay?\"\n\nI looked at him with what I hoped were bedroom eyes. \"Come do it again.\"\n\n\"You're awful.\"\n\n\"Awfully turned on,\" I parroted, making him laugh. \n\n\"We have a ritual, June,\" he reminded me. \"We can't break tradition.\"\n\nI reached out a hand, locating a pack of cigarettes and a lighter on my bedside table. I threw the lighter at him and he caught it, watching as I placed a cigarette between my lips. He crept across the bed, throwing an arm around me and lighting the cigarette for me. \n\n\"Ugh, this is good,\" I said, taking a deep drag. The head rush was heaven.\n\n\"It's terrible,\" Booker said, smiling that lopsided smile of his. \"We're gonna die.\" \n\n\"Fuck it, we're dying anyway,\" I said. \"What's a few cigarettes?\"\n\nI laughed as he took the cigarette from my mouth and transferred it to his own, taking a disgusting, deep drag, deeper than the one I'd taken. \n\n\"Fuck it,\" Booker agreed. \n\nWe shared the cigarette, which was what he had meant when he'd said \"ritual.\" Every time we had sex, we kind of made it worse at the end by smoking, as if we were branding ourselves. We deserved to die for the terrible shit we were doing. The cigarette kind of helped us cope because it felt almost like a punishment. \n\nBooker turned on my radio from the table on his side of the bed. \"You and Me\" by Lifehouse was playing on 102.7 KIIS FM.\n\nI sang,\n\n\"'Cause it's you and me\n\nAnd all of the people with nothing to do\n\nNothing to lose\n\nAnd it's you and me\n\nAnd all the other people\n\nAnd I don't know why\n\nI can't keep my eyes off of you\"\n\nBooker joined me halfway through, lacing his hands with mine, the moonlight shining down through the open window, a gentle breeze drifting in. \n\n\"It's late,\" I said, checking the clock. It was already ten-thirty. Not that late, but late enough for someone's husband to be out. \n\n\"Kansas is asleep. She's always sleeping.\"\n\n\"Should you be leaving her alone?\"\n\nBooker looked pained. \"Probably not.\"\n\n\"Go home then.\"\n\n\"How can I?\" he asked, pressing his lips against mine. We kissed slowly, sweetly, his pliant lips moving with mine, making my breath hitch when his tongue slipped into my mouth. I loved the taste of him, the mint, the alcohol, the faint flavor of cigarette smoke, the Booker, mouth hot and lips burning. \n\n\"Go,\" I said, pushing him off. I wanted to cry, but I stayed strong. Booker wasn't mine, no matter how much I pretended, no matter how good I was at convincing myself, he was not really mine. My sniffle gave it away, and Booker looked as if I'd taken his heart and shattered it into a million pieces. His expression was so broken, so lost. \n\n\"I want to stay...\"\n\n\"I want you to stay,\" I managed to say. \"But you can't. You have to go.\"\n\nHe pulled me into his strong arms, swaddling me like a baby with the blankets. I was weak, so fucking weak. I wasn't strong enough to let him go. \n\nI was in love. \n\nI'd been in love for a long, long time. \n\nA tidal wave of hormones is what it's like to be a teenager. A hurricane, a tsunami, a fucking storm of epic proportions, and all of it just masked in feelings, disgusting fucking chaotic feelings, like the kind of feelings you get when your best friend starts dating your other best friend. \n\nAnd you know it's wrong, but you won't admit it. \n\nYou won't admit that it's supposed to be you. \n\nBooker wouldn't stop staring at me in high school, sophomore year. We shared first period, third, and fifth, and it was just a game of sitting there and trying not to catch him at it because I didn't want to spook him; I didn't want him to look away. I wanted him to observe me until he changed his mind about Kansas. \n\nBut why would he? I treated him like a brother. It was supposed to be gross, right?\n\nExcept Booker wasn't my brother. He was the guy I thought about way, way too much. More than you're supposed to think about your best friend, and way more than you're supposed to think about your other best friend's boyfriend. \n\nKansas started going to Spanish Club during lunch, so Booker and I'd buy curly fries and flick them at each other, laughing and eating Pick Up Stix that they sold at the cafeteria, usually their honey chicken, which reminded me a lot of Booker's eyes, but I never said that out loud. He'd probably hate it, being compared to chicken. \n\nOn days that it rained, we'd pile into the gym, sitting up on the bleachers and shivering from the cold. We'd talk about everything and nothing, playing Slide with our hands, and the touch was electric. I tried to hide how warm it'd suddenly make me, the touch of his fingers against mine, smacking one, two, slap, slide; one, two, three, slap, slide. It was like Patty-Cake but better. It required a lot of concentration and counting, and the furthest Booker and I ever got was eight. Yeah, in four years of high school, we got to eight because we always lost count and ended up laughing. \n\nYou'd think that with how handsome Booker was, he'd have made better friends than the two chubby girls from the middle-class part of Buena Park, but he never did. Booker remained Booker: quiet, brooding, serious. It made the girls want him even more. They didn't get why he'd hang out with us, or worst of all, why he'd date overweight Kansas. It was ridiculous. She was fucking beautiful. All golden hair, sparkling blue eyes, and curves for days. \n\nShe wasn't like me. I was still the mousey chubby girl. I wouldn't bloom until adulthood, but that didn't stop Booker from staring at me. Why would he stare if there wasn't much to look at? \n\nBecause he was Booker, and Booker had a way of seeing right through you, right down to your center, right where your heart burned and your soul swam. \n\nFifteen doesn't last forever. Losing Daddy took up everything I had in me. The world felt so small, like it'd never expand again with Daddy gone, but with Booker and Kansas by my side, I took it day by day, putting one foot in front of the other, passing the days without as many laughs as before, but still managing to get by. I sometimes still wish I could go back and tell fifteen-year-old me that everything would be okay, but I also know that it would be okay even if I didn't because Booker and Kansas had been there to do it for me. ",
        "And then before I knew it, we were all sixteen, juniors in high school, taking AP classes and drowning in the work. Kansas made the dance team and she lost much of her baby fat, her belly flattening but her curves remaining. I still ran the mile on the track for P.E. and Booker starred on the swim team. Those two seemed to excel at everything while I went on being mediocre. \n\nI couldn't tell you what made me start staring back at Booker that year. He wasn't shy anymore; he didn't look away when I caught his eye. We'd share heated glances across classrooms, our eyes focused on reading one another. If I'd been made of glass, one look from him would have been powerful enough to shatter me. \n\nKansas was president of her Spanish Club by junior year. It kept her busy during breaks and lunch. Booker and I kept eating Pick Up Stix and throwing curly fries at each other. Sometimes we threw Skittles too, but we usually tried catching those with our mouths. On rainy days we'd stopped going to the gym. We'd walk the field, huddled under one umbrella, talking still about everything and nothing just like we'd done for years. \n\nI knew everything about Booker and Booker knew everything about me. We were best friends. \n\nAnd then came the day he dumped Kansas and kissed me in the community college parking lot. The hardest decision of my life was to send him back to her. I'd gone home and cried and cried and cried. It was like losing Daddy all over again, except it felt that this time I had been the one to die. A piece of me had died with losing Booker to Kansas yet again. \n\nSo I guess my point is, I've loved Booker for a long time. \n\nBut Kansas loved him longer. \n\nAnd that made him hers. \n\n\"You have to go, Booker.\"\n\nHe looked at me, his eyes red. \"I know.\"\n\n\u2014\n\nWhen I woke in the morning, it was a Friday and I was late to work. I was also a little hungover so I called out, letting the hospital know that I might pop in later in the afternoon to finish my shift. \n\nWaking up alone in an empty bed after making love was something that made my heart hollow, like it had been carved out, just a heart-shaped hole left behind. \n\nBooker. I missed him. \n\nI'd known Booker under a different sun. He'd been the guy who'd held me after my first heartbreak, the guy who'd been wiping my tears away for years, the guy who'd taught me how to drive, but we weren't sixteen anymore. We were twenty-two now, and everything changed the moment Booker proposed to my best friend. I'd been so happy for them. So fucking happy. \n\nSo why did I go home and cry? \n\nThey were so in love. \n\nAnd I was so fucking lonely.\n\nAfter the engagement, I couldn't stop thinking about Booker. It was like subtle little hints from my fucked-up brain, little images of our childhood; of climbing trees and breaking my arm, of a Booker who'd carried me back to the house even though I could walk; of Daddy passing away and Booker being there by my side, holding my hand in a tight grip through the eulogy that Aspen delivered; of the way he taught me how to be studious and approach a problem with the knowledge that there would always be an answer; of just how warm his hugs had been, always making me feel better.\n\nAnd those eyes. Those wild, untamed eyes, the color of a fresh drizzle of honey, heavenly sweet. That dark hair, always a little unkempt, tousled thick locks. The hard lines that appeared on his face where there had once been soft curves; a strong jaw, sharpened cheekbones, dimples you could run your finger down. Tall, so fucking tall that he towered over you, which was unbearably funny because you'd spent so much of your childhood not noticing because you'd always been equals, but now he was better somehow, better than you could ever hope to be. \n\nHad I lied to Kansas at the wedding? Had I really not cared that her husband still had feelings for me?\n\nNo.\n\nI did not want Booker. That was pure and honest truth. I'd never wanted Booker. \n\nBut I did need him. \n\nGod, how I needed him. \n\nThere was an avalanche of change, a rush of cold feelings that hit me so hard and so fast that there was no escaping. No rescue team in the world could dig me out of that snow, out of that creeping darkness, white-hot and freezing. I was dead inside. Maybe I was just crazy. \n\nWhy was I pining after my best friend's husband? \n\nBut Booker had said it years ago, hadn't he? He wasn't her property. Kansas did not own him. If only she'd never fallen for him, if only she'd found someone else to love, maybe, just maybe, Booker and I would have naturally fallen in line, organically becoming what we'd always been meant to become: one; one mind, one body, one soul.\n\nBecause it had always been him, hadn't it? He'd always been there, always understood me, always protected me, and comforted me. He was Booker, and he'd always loved me first; he'd always loved me most. \n\nWhy did I push him away?\n\nBecause I loved Kansas. I loved her so much that I fucking sacrificed the one thing, the one person, that filled the emptiness inside my heart. Booker took the void and swallowed it whole, dissolving it on his tongue, destroying the dark. \n\nAnd I could have had him.\n\nI should have had him. \n\nBooker. \n\nBooker. \n\nBooker. \n\nI love you.\n\n\u2014\n\nI didn't end up going to work. Jamie arrived at half-past six, dressed in his partying best, his golden hair sleek and slicked back from his handsome face. His blue eyes were bright, and he was cheerful as he stepped into my apartment and kissed me on the cheek. \n\n\"Ready?\" he asked. \n\nI was wearing a flowery dress with a thin belt to cinch in my waist, boots, some bangles on my wrists, and feather earrings. Yeah, don't judge me. It was 2005, okay? I felt cute, and Jamie seemed to agree. \n\n\"Cutie,\" he cooed. \n\nI chewed my bottom lip. I needed to do something. I'd thought about it all day and prepared. \n\n\"We need to talk about something before we go,\" I said. I felt so ashamed, so guilty, so afraid. Jamie was Bad News, but even Bad News didn't deserve to be cheated on. He deserved to know. I had to tell him.\n\nJamie reached out and placed a finger on my hickey. \"Babe, I already know.\"\n\nMy face burned hot. \"I-I'm so sorry.\"\n\n\"Lucky fucker, isn't he?\" Jamie mused. \"Always knew I wasn't meant to have you for the long haul. Was good while it lasted, wasn't it? We had some pretty great sex.\"\n\nHe grinned and I couldn't help but return a watery smile. \n\n\"Don't, babe,\" Jamie said, wiping away a tear from the corner of my eye with his thumb. \"We had a good run. Friends?\" \n\n\"Friends,\" I agreed.\n\n\"You better make up for cheating on me by being the best fucking wing-woman there is.\"\n\n\"For sure,\" I said, sniffling and laughing at the same time. Jamie opened his arms and I fell into them, taking in the smell of his ridiculously expensive cologne, and felt the crinkle of his freshly pressed shirt. He was a sleaze, but he was still a catch and someday, someone was going to see that in him. He deserved the very best. \n\nWe slid into a waiting cab, giggling about something stupid, and bar-hopped for the rest of the night. I did end up helping Jamie with women, pretending to be more interested in him than I actually was, giving him my own sleazy version of Juno. I talked him up with some girls in the restroom, telling them that I'd slept with him before, that he was amazing in bed but hard to lock down. Ah, a challenge. Nothing a woman loved better than a chase, despite what the rom-coms may tell you. Needless to say, Jamie went home with some hot chick that night, courtesy of my drunken praising of his dirty tricks in bed. \n\nAt two in the morning, I knew where I was headed. Drunk, but I'd been drinking water the last hour, so I was feeling better. I relieved myself in the restroom and called myself a cab. While I waited for it, my cell rang. It was Booker. \n\n\"Where are you?\" he asked, his voice thick with sleep. \n\n\"Waiting for my cab.\"\n\n\"How drunk are you?\"\n\n\"I'm fine.\"\n\n\"Fuck the cab. Cancel it. Which bar are you at?\"\n\n\"Hopscotch off Commonwealth Avenue and\u2014\"\n\n\"I know where it is. Give me five minutes. I'm coming to get you.\"\n\nI called and canceled my cab while I waited on the sidewalk. As promised, five minutes later a black Camaro came to a stop on the street beside me. I walked over, opened the door, and slid into the seat. My seat was heated and warm, and the car was nice and dark. \n\n\"June,\" Booker murmured, and I finally looked at him. He had a tired, lopsided smile on his face, looking at me with love in his eyes, observing me in a way that filled up the hollowness in my heart. He reached for my face, cupping my cheeks in the palms of his big, warm hands. \n\n\"Kiss me,\" I whispered, and he did. \n\nA car horn went off behind us, jolting us apart. \n\n\"Oops,\" Booker said, laughing. He was still stopped in the middle of the street. He put the car in drive and drove off, that smile still on his face, and it made me happy, so unbelievably happy to know that I was the reason it was there. \n\nBooker drove us to a park. We got out into the cold air and he put an arm around me, pulling me against his warm, hard body. I hugged him, looking up at him as the moonlight shone down on us, his dark hair shining. It was at that moment that I felt a drop of water on my forehead. Then another on my cheek, and another on my nose. \n\n\"It's sprinkling,\" I said, my eyes wide. \n\n\"No shit,\" Booker said, grinning. \n\n\"Let's go back to the car.\"\n\n\"June,\" Booker said, stopping me by pulling me tighter against his body. \"I know this is clich\u00e9 and stupid, but I'd like to kiss you in the rain.\"\n\nThe sprinkling turned into rain, and I got on my tip-toes, wrapping my arms around his neck, pulling him down until his lips met mine. We kissed in the dark park in the middle of the night, kissing like it'd hurt not to, kissing like we'd die without it. Booker opened his coat and I snuggled into it. He closed the coat around me, and I looked up at him, the rain soaking us both, but neither of us was shivering. \n\nWe had each other. \n\nWe'd always had each other. \n\nHe was the one. \n\n\"I'm leaving Kansas.\"\n\nThe moment was shattered. \n\n\"Booker, you can't. She's preg\u2014\"\n\n\"I know, but I'm sick without you, June,\" Booker said. \n\n\"Why did you marry her in the first place?\" I finally asked. The question had been burning inside of me for months. I'd always been afraid of the answer. What if he really, really loved her? More than me? What if I was just something on the side, something to pass the time and keep his bed warm?\n\n\"She gave me an ultimatum. Get married or break up,\" Booker said. \"I thought... I thought that if we broke up, things would get awkward with all three of us. I wasn't sure how Kansas would react. I didn't know if she'd be vindictive and turn you against me. I couldn't stand the idea of losing you both. It scared the shit out of me, June. So I married her.\"\n\nI frowned. \"Booker, nothing can turn me against you. I can make my own decisions.\"\n\n\"I know,\" he said, sighing. \"I just\u2014panicked.\"\n\n\"You got married because you were afraid of losing us?\" I asked. I mean, me and Kansas were pretty much his oldest and closest friends. It made sense. \n\nHis voice was soft when he spoke. \"I got married because I was afraid of losing you.\"\n\nThis was so fucked up. Kansas would be heartbroken if she ever found out. I tried to put myself in her shoes, tried to imagine what this kind of betrayal would feel like so that I could locate my conscience, but Jiminy Cricket was nowhere to be found. I loved Kansas. She'd always been there for me, had helped me through so many hardships in my life, and was so fucking cheerful and kind and sweet that it hurt to do this to her. \n\nExcept I wasn't doing this to her. \n\nI was doing it to me. I was the one fucking my relationships up. I'd already lost Jamie. Next Kansas would find out and then she'd give Booker another ultimatum: their child or me. I already knew Booker well enough to know he'd pick his child, and I wouldn't want it any different either. There was only one ending to this story. The genre?\n\nIt's a fucking tragedy. \n\nIt's also my life. My real life, the life I have to live, the actions I have to someday answer for. \n\n\"Booker, we can't do this anymore.\"\n\n\"June\u2014\"\n\n\"No,\" I said firmly. \"You're having a baby. Don't let that kid grow up without a father. We both... We both know what it's like to lose a father. Be there for everything, Booker. The first steps, the baseball games, the family dinners and the holidays. Go back to Kansas and make that happen. If you're the man I think you are, that's exactly what you'll do.\"\n\nWe both had tears in our eyes. This wasn't just sex. This wasn't purely physical. This went beyond that, right into the center, right into the soul, right where there was the worst pain imaginable. This was like splinters under the fingernails, stepping on a nail, chipping your tooth on something hard; so terrible that you don't even want to think about it. \n\nI kissed him again, knowing that it was over. Half of my life, loving a boy who would later become a man, was over.\n\n\"I love you, Booker.\"\n\n\"And I love you, June.\"\n\n\u2014\n\nOn a beautiful late summer day in 2006, Cade Phoenix Booker was born into the world with ten perfect tiny fingers, ten perfect tiny toes. It was love like I couldn't describe; the second I set eyes on that little boy, he instantly became the center of my universe. He wasn't my son, but he didn't have to be. He was two halves of a whole, made up of the two people I loved more than anything in this world: Booker and Kansas. I loved everything about Cade, from his cute little button nose to the startling honey-colored eyes to that beautiful dark hair. He was the spitting image of his father, but he had his mother's personality; he was loud, a wailer, and he had some sass in him. \n\nI was the first person in the entire world that got to hold him. He was so small, so delicate and fragile that it seemed like it should be illegal for me to even touch him. I rocked him, cooed at his adorable face, and let him hold my finger when he cried. He had a tight grip, and very beautiful little hands. If given the time, I'm sure I could spend the rest of my life praising this kid. He was just perfect. \n\nAnd I loved him. \n\nThe nurses took him to be checked and cleaned and I just kind of stood there, the video camera on a chair beside me. I picked it up, shut it off and slumped down onto the chair, exhausted. I'd been standing and recording for hours while Kansas had been in labor. Hell, she'd been pushing for almost an hour. I had caught every second of it, just as she'd asked me to. That's why they'd wanted me to be first to hold Cade. They wanted the shot of him being brought to the camera, the first look at him after being born. \n\nWhat a privilege it had been. \n\nBooker walked over, taking off the latex gloves he'd been given to wear while cutting the umbilical cord. He threw the gloves in the trash and sighed, looking dazed. There were tears in his eyes. \n\n\"Congratulations, Booker,\" I said, smiling. \"He's beautiful.\"\n\n\"He is, isn't he?\" called a weary voice from in front of us. It was Kansas. She was red in the face, exhausted but ready to hold her baby. The nurse brought him over and helped teach her how to get Cade to latch. \n\n\"Not even five minutes old and the kid already gets his first view at a naked breast,\" I said. \n\n\"I worry about you sometimes,\" Booker said, laughing. I stuck my tongue out at him. \n\nI wanted to spend every last second with that baby, but Cade wasn't mine, so I left him with his parents and went to grab something to eat from the cafeteria. I bought and ate some chicken tortilla soup and on my way back, as I was passing the gift shop, I ran into Aspen. \n\n\"What are you doing here?\" I asked. Aspen had dyed her hair a light pink and was impossible to miss. She really stood out in an orchestra. I was told they hated it, but she was too good not to hire. \n\n\"Oh, I'm here buying a teddy bear and flowers for my husband's graduation,\" she answered dryly. \n\n\"You don't have a husband.\"\n\n\"Exactly, Juno,\" she said, rolling her eyes as she paid the cashier. \"Why else would I be here? I want to see the new Booker baby.\"\n\n\"He's perfect, Aspen,\" I said dreamily. \n\n\"Booker or the kid?\"\n\nIt was my turn to roll my eyes. \"The baby.\"\n\n\"The way you were making googly eyes at Booker at the baby shower, it was hard to tell.\" \n\nSee, here's the thing about my sister: she's annoyingly perceptive. She's mindful of everything, and is always observing, always watching, like she's Big Brother or something, except she'd be Big Sister. She probably already suspected that I was in love with Booker. \n\n\"I was not making googly eyes at anybody.\"\n\n\"Sure, keep telling yourself that,\" Aspen said, giving a bright smile to the cashier as he handed her the receipt. I could see that she'd momentarily stunned him. Yeah, Aspen's pretty. Like really pretty. She gets that kind of reaction out of everybody. I grabbed her by the wrist and tugged her out of the gift shop before he could stupidly ask her for her number. He had zero chance.\n\n\"If only you'd make googly eyes at somebody. Then maybe I'd have a niece or nephew,\" I said. \n\n\"Juno, you know I'm gay.\"\n\nI laughed, which made her laugh. Aspen being a lesbian made no difference; she was still so single by choice. \n\n\"Well, adopt or something already! I want a baby,\" I said. \n\n\"So make one, Juno,\" Aspen said. \"No one's stopping you.\"\n\n\"What's stopping you?\"\n\n\"My career. I don't have time for children.\"\n\n\"Ah, yes. The greatest pianist of our time,\" I said, winking. \n\n\"Shut up.\"\n\nWe started walking toward the elevator to get up to the maternity floor. Aspen suddenly looked troubled and distracted. \n\n\"What's up?\" I said. \n\n\"It's just... You know you can't have Booker, right?\"\n\nI stopped in my tracks, and a moment later, she noticed and stopped too. \n\n\"I-I wouldn't\u2014\"\n\n\"But you did,\" Aspen said. \"You already did.\"\n\n\"What are you talking about?\" My heart was racing. I hadn't told her. I hadn't even hinted at it. And Booker and I were over. We'd been over for months. \n\n\"I heard you.\"\n\n\"What?\"\n\n\"It was a couple of months ago. I was going to drop off a book I'd borrowed from you, and that's when I heard the banging and screaming. I thought you were in trouble or something. I even got my mace out and everything, but then I heard you, and I heard Booker too. You were fucking him, Juno.\" She looked so disappointed in me. My sister meant the world to me. I'd always looked up to her and begged for her attention growing up. To have her displeased with me? That was rough. \n\n\"Aspen, I can explain.\"\n\n\"I know you can,\" she said softly. \"But you don't have to. Just tell me it's over.\"\n\n\"It is,\" I said, a tear falling down my cheek. \"It's been over for months.\"\n\n\"For the record, Juno, I always thought it should've been you,\" Aspen said. \"Booker was in love with you from day one. Any idiot could have seen that. But I'm glad you two ended things. He's married, Juno. You can't\u2014you're not that person, okay? Don't go down that route.\"\n\n\"I won't.\"\n\n\"Good,\" she said, holding out her arms. I hugged her, wiping my cheek. I was choking on my feelings again. I loved Booker. I loved him so much that it hurt. \n\nAnd I couldn't have him. \n\nEver. \n\nTen minutes later, Aspen was holding Cade in her arms, cooing to him, wiggling her finger, kissing his head and Kansas asked me to take Booker down for something to eat. \n\n\"I'm not hungry,\" he said immediately. We'd been avoiding being alone together. \n\n\"Nonsense,\" Kansas said, munching down her own meal that a nurse had delivered to her just moments before. \"I'm starving, you're starving, and Juno was starving until she went down to the cafeteria. Show him where it is, Juno?\"",
        "\"Sure,\" I said, glancing at Aspen. She gave me a look, which I knew to mean be careful. \n\nBooker and I stepped out into the hall. We hadn't been alone, just the two of us, since that night at the park. We both stuck our hands in our pockets to avoid the chance of an accident brush of the hands. I led him to the elevator and then to the cafeteria. \n\n\"What'd you get?\" he asked casually. \n\n\"The chicken tortilla soup.\"\n\n\"Sounds good,\" he said, walking over to the soup station. He poured himself a large cup of it, grabbed a handful of crackers and a bottled Vitamin Water in the flavor XXX, which was a\u00e7a\u00ed blueberry pomegranate. It was his favorite. He used to buy it in high school from the vending machines on campus. I got him some napkins and a plastic spoon while he paid and then we sat at a table in the corner while he ate. \n\n\"How are you?\" he asked. \n\n\"Fine.\"\n\nHe was quiet for a moment, then said, \"How are you really?\"\n\nI looked up at him, tears in my eyes. \"Fine,\" I said again.\n\n\"June... don't cry.\"\n\n\"I'm not trying to,\" I said defensively. \n\n\"I know, but it makes me feel so hopeless because there's nothing I can do to make it better.\"\n\nI let out a hollow laugh. \"You just had a baby, Booker. And he's beautiful. Forget my silly tears. I'll... I'll get over it.\"\n\n\"It's been months,\" he pointed out gently. \n\n\"I'll get over it. I just need time.\"\n\nHe paused. \n\n\"What?\" I asked. \n\n\"I'm not over it either. I'm not over you,\" he said ardently. \"I'll never be over you.\"\n\n\"Booker...\"\n\nHe closed his eyes. \"I'll love you always, June. I wish things could be different.\"\n\n\"Me too,\" I said, tears rolling down my cheeks again. \"Be a good father to Cade. And a good husband to Kansas. They deserve the very best.\"\n\n\"I know. I will, I promise.\"\n\nI knew that this was the last time we'd ever talk about \"us\" again. This was the closure we needed, the conversation where it all ended. This was where hope got off the train and walked away. The point of last return had been passed. \n\nBooker finished his meal and held out his hand. I took it. \n\n\"Let's go see your future godson,\" he said. \n\n\"Really?\" I asked, shocked. \n\n\"Who else?\" he said, looking amused. \"It's always been you, June.\"\n\n\u2014\n\nI missed the two a.m. kisses that tasted like alcohol, the mistakes made in the darkness with such certainty, bodies and limbs tangled together, hearts beating in iron cages because we were not supposed to love each other; we did not belong to one another. We were a tornado of feelings, of clothes strewn over the apartment floor, of stolen kisses in shadowed parks, of gasps and moans, chests burning with the aching reminder that this was all temporary. We were stroking hands, fingertips drawing patterns across sensitive skin, a late-night drive home, fingers intertwined. We were everything terrible, everything wrong, and at the same time, we were everything beautiful, everything right, everything meant to be. \n\nBecause he'd said it himself. It's always been me. \n\nAnd for me, it's always been him. \n\nEven though he made me sick, even though he put me in this position.\n\nDays after Cade was born, I couldn't ignore the signs anymore; I was tired all of the time, everything made me nauseous, my breasts were sore as hell, and slowly, as if I'd always known it in the back of my mind, I'd stopped drinking. I couldn't keep denying it; I was pregnant with Booker's child. When I finally went to the doctor and later had my ultrasound, they told me that I was three months along. In the final hours of the last time Booker and I had made love, something had been created from it, something like a miracle. \n\nGetting an abortion was unthinkable, and giving up the baby would destroy me. I knew the second I found out that I would keep this child, would raise it and love it and never let it go a day without feeling wanted\u2014because I did not want my son or daughter to know what it felt like to be me, to love someone and not have it returned. \n\nWhen I told Kansas, I never did tell her who the father was. A one night stand was the explanation. It was all I could say to keep her family together, because whether I liked it or not, the truth would only hurt everyone. If she found out she'd leave Booker, and if she did that, I couldn't just be his back-up. I couldn't just steal him from under her feet like that. I couldn't destroy her family to complete mine. \n\nBooker found out from Kansas. It was a cold, crisp evening when he knocked on my door. \n\n\"Go away,\" I'd said when I saw him through the peephole. \n\n\"Let me in, June.\"\n\nI pressed my back against the door, holding back the tears. I wasn't strong enough for this. I would never be strong enough to resist loving him and wanting him and needing him. \n\n\"June, please.\"\n\nI struggled. I resisted. I shut my eyes and tried to imagine Kansas's face, her wide grin and the way she looked so happy with Cade, how Booker was the center of her universe. They were a family. A beautiful, perfect little family. \n\n\"June, I love you. I need you to know that.\"\n\nHe was halfway down the steps when I threw the door open and went after him. I threw my arms around his neck and he kissed me, right on the mouth, his lips burning and hot. God, I sobbed. Pathetic and desperate, I kissed him hungrily, savoring every single second, my body begging to be taken, my heart begging to be wanted. \n\nBooker picked me up and took me back into my apartment. We undressed, clothes on the bedroom floor, every single moment drawn out, soft deep sighs and echoes of moans, hands roaming, feeling all the feelings that we'd been bottling up inside for months. The sensations were... indescribable. It felt like everything had caved in, like the fighting was over because we'd lost the battle; hell, we'd lost the war. We were fucked up. We couldn't stop. \n\nThe window was open, the room chilly, but our bodies were feverishly hot, burning from the wild senses that overtook us. I was despairingly turned on, my pussy slick with my need for him. It had been months since I'd invited him into my body, and I hadn't been able to fill the empty space in my bed with anyone else. \n\n\"June,\" Booker said, gently laying me down on the bed. \"God, June...\"\n\n\"I love you,\" I said in a low whimper. I didn't even know I was crying until Booker was wiping the tears from the corners of my eyes. \n\n\"And I love you,\" he said softly. \"I always have.\"\n\nI spread my legs, tempting him to enter me. We both hissed in pleasure when his cock was finally lodged inside of my tight pussy walls. My body ached with demands, but I ignored them, letting him go at his pace: slow, sweet, each movement deliberate, lengthened and dragged out. I felt the heat building between my legs, the pit of my pussy blazing white-hot, throbbing with the aching need to be fucked. The lack of friction was making me delirious. \n\n\"Booker, please...\"\n\n\"I know,\" he said, gripping my hips. \"I feel it too.\"\n\nA thousand fragmented thoughts shattered as he pounded into me, throwing my legs over his shoulders, finding an angle that had me whimpering desperately. My fingernails sank into his back, and I knew I shouldn't, that I should be careful, but recklessly I left my mark. He pressed his lips to my throat, kissing and sucking, and bit down. I cried out, tears springing to my eyes from the pain, from the mind-numbing pleasure. He was setting my heart aflame, and nothing would ease the fire, nothing would stop my lungs from being filled with the smoke of this want, this need. \n\n\"I missed this,\" he groaned, and the sound he made\u2014fuck, it was sinful. \n\nI pulled his face down, kissing him, tasting the rich desire on his tongue, and he ripped a cry from my throat as he fucked me fast, hard, deep. My pussy was fluttering from the way he tore it up, his naked skin slapping against mine, flesh to flesh, the smell of his body so heavenly that my eyes rolled back, forcing a whimper from my lips as my pussy clenched. His aftershave was intoxicating, and all I could do was taste it, to run my tongue along his jaw, kissing, inhaling. His golden eyes were nearly black when his hand reached down and brushed against my clit, first by accident and then on purpose, making my head spin, making my body stiff in surprise. \n\n\"Booker, please,\" I begged, unsure of what I was even asking for. All that mattered was that he didn't stop, that he kept fucking me until he quenched this thirst, until he put out the fire that he had ignited deep in my belly. Impatience boiled in my blood, and with every thrust, his calloused hands on my body, his finger rubbing my clit, I could do nothing but cry. He flipped me onto my stomach with no effort at all, gentle as if he remembered that I was carrying his child. I let out a moan, feeling him yank my hips upward, bringing my ass in the air. The change in movement sent the slick from my pussy gushing down my thighs. Booker let out a string of expletives, admiring me in the angriest of ways.\n\nWith a filthy moan, he made my whole body shake as he began to pound into me. Oh fuck. Oh my fucking god. He was filling every inch of me, even my mind, my heart, my soul. Fucking hell, it didn't hurt a bit\u2014not even when he bottomed out with a shudder, stuffing me with his thick length. \n\n\"Fuck,\" he hissed, trying to catch his breath. Impatience boiled in my blood, burning fire in my veins. I needed him to move and to never ever fucking stop!\n\n\"Don't stop, please don't stop, please,\" I begged desperately. He didn't respond, didn't say anything at all that he couldn't answer with the movements of his body. He began to pound into me again, thrusting with such vigor that my legs trembled from the all-encompassing bliss. My pussy clenched again, and I knew I was close. I was getting tighter, squeezing his cock in my tight heat. \n\n\"Fuck,\" he hissed. \"You're close, aren't you?\"\n\nThis time I was the one who couldn't respond. All I could do was push my hips back, trying to meet his rhythm. He adjusted his speed, going faster, his fingertips digging into my hips, slamming me back on his cock, faster and faster. The sounds were filthy, our bodies slapping as he snapped his hips. \n\nOh, god! \n\n\"I-I'm coming,\" I cried weakly. Heat bloomed inside of me, and my pussy clenched and unclenched and clenched again, over and over. I gripped the sheets, my body shaking uncontrollably as I came. I felt a jerk from deep at the base of his cock, and with a growl, Booker came too, spurting his thick seed into my fluttering pussy. The pulse alone sent me over the edge again, making me come hard. Just the thought of him filling me up was enough to usually make me explode, but with him here, actually doing it... god, it was too much. \n\nWe panted, Booker gently pulling me into his arms, laying us both down on the bed. We were both breathing hard, trying to catch our breaths, and in that moment, in that singular photograph of time, I felt that we were boundlessly floating through the universe, our souls interlocked, drifting away from the rest of the world. If only that was real, if only that was our reality. \n\nMy heart was nearly shattered, and here was Booker, trying to fix me even though he was the one who was breaking me. \n\n\"We can't do this again.\"\n\nIt's funny, I didn't even realize I'd been the one to say it until I heard the sound of my own voice. \n\n\"I know,\" Booker said disconsolately. The look of mournfulness in his honeyed eyes was enough to make me cry. He held me as I wept, grieving what could never be. He tried comforting me, stroking my back, kissing the top of my head, murmuring soft words that I couldn't make out over my cries.\n\n\"We're finished,\" I whispered, wiping my tears. More tears replaced them almost immediately. \n\n\"You and I will always be unfinished business,\" Booker said. \n\n\"It's over,\" I said, shaking my head, sniffling. \n\n\"It's never over,\" he responded, taking my face in his hands and pressing his burning lips against mine. \n\n\"But we can't do this again.\"\n\n\"We can't,\" he agreed. \"But we will.\"\n\nHow fucking selfish were we? Kansas was at home with his baby, and here I was, carrying his bastard, sleeping with him, a married man. It made me feel sick. \n\nSick. \n\nMy baby deserved better than this. \n\nMy baby deserved better than him. \n\nI loved Booker, but for the first time in my life, I had something that I loved more. \n\n\"I think you should go, Booker.\"\n\n\u2014\n\nSix months later\n\n\u2014\n\nWhen life closes a door, sometimes it'll open a window. \n\nMy Window was four pounds and six ounces, the smallest baby in the hospital, a preemie who had been born without a cry. I'd been swallowing down my sobs, the room eerily quiet as the doctors and nurses worked diligently to bring some noise from my Window. After three of the scariest minutes of my life, a cry rang through the room. Air filled those tiny lungs, and that Window wailed. \n\nIt was the most beautiful sound I had ever heard. \n\nWhat I would've liked to have done was stare at him for hours and hours, but he was whisked away to be checked on, and I wouldn't see him again until a few hours later when I was strong enough to be wheeled to the incubators. There he lay, his little hands and feet so pink that they were almost magenta, and his eyes closed shut. His breaths were shallow, and he was on a breathing tube. The doctors said he'd been born with a heart defect and told me that he would require surgery once he was stronger. I cried there in that room, praying to every power in the universe, begging them to make my Window whole, promising that I would devote my entire life to protecting him and loving him and giving him the most beautiful life I possibly could. \n\nI named him Theodore, which meant \"God's gift\" in Greek. Theo was the greatest gift I would ever receive. Every time I needed a miracle, I would look at him and remember that I'd already created one. \n\nAfter two weeks, he underwent surgery, and for the first six months of his life, Theo lived his life in that hospital, enduring surgery after surgery, his little body still managing to pull through after every scary code pink. But he was my son, strong and resilient, bouncing back every single time, tougher than before. \n\nMy little wonder of the universe pulled through. It took months, but I was finally able to take him home. I remember standing there in front of the hospital with the carrier in my hand, Theo sleeping soundly, and I wondered if it should be illegal for me to take this baby home. He was much too fragile and perfect to be mine. I waited patiently for my ride, half afraid that any second hospital officials would come take my baby away.\n\n\"Hey.\"\n\nI still remembered the hesitancy in that deep voice, the way he'd looked at me as if I'd punched him in the gut. Booker had come to drive us home, and Kansas was at home with their own baby, Cade. They'd both visited countless times, helping me by taking shifts at the hospital along with Aspen. Because of those three, I'd been able to shower and eat meals. That was the only way I'd made it through the last six months. \n\n\"Hi,\" I said, probably looking as exhausted as I felt. \n\nBooker came and hugged me, then took the carrier from my hands. He buckled our son into the back seat of his car, careful and concentrated, making sure to be thorough. His gentleness made my heart hurt. Theo was his son too, but for his entire life, he'd only know Booker as a sort of uncle, a man who would be present in his life but not one he could call \"Daddy.\"\n\nWhen we got to my apartment, Booker shut the engine off and we just sat there in his car. I was thinking about the last time he'd been in my apartment, fucking me and loving me and making me come, and something told me that he was thinking about the same thing. \n\n\"Thanks for the ride,\" I said, and opened the door and stepped out of his car. The cold autumn hair hit me like a train, making me shiver. My first thought was to take my jacket off. Why? Because I was going to drape it over my son's carrier to protect him from the cold. \n\nWhen I turned around, I saw Booker already shrugging out of his sweater. He opened the back door and draped his sweater over the carrier. His movements were all gentle and calculated as he unbuckled the carrier and lifted it out of the back seat. I watched as he carried our son halfway up the stairs before stopping and turning to me. \n\n\"You just gonna stand there?\"\n\nI made my feet move. What the fuck was wrong with me?\n\nWhen we got inside the apartment, I went to get the heat going and Booker was ahead of me by warming up a bottle. It's kind of impossible to breastfeed a sick baby, especially one who is at the hospital every single second, so Theo was a formula baby. I tried not to stare too much as Booker fed our baby. \n\nSo this was what it was like to be Kansas. \n\nThis was what it was like to have everything. \n\nTheo drank his milk hungrily, and Booker gently rocked him, pressing a kiss to his forehead. These were things he'd only be able to do while Theo was still a baby. Once he got old enough to remember, Booker would have to stop. My son would have to be denied the affections of his own father so that everyone could be happy. It was the biggest sacrifice imaginable. \n\nBooker burped Theo and then put him to sleep in his arms. He took a seat on a kitchen chair and looked up at me with his tired golden eyes. \n\n\"Is it exhausting being his father?\" I asked for no good reason at all. I don't know why I was so bitter; it had, after all, been my idea to keep this all a secret. \n\n\"No,\" Booker said. \"It's exhausting pretending I'm not his father.\"\n\nI went and took Theo from his arms, carrying him into the bedroom. Booker followed right behind me, and I wished I could've told him to stop, that he didn't belong in this room anymore, but I couldn't... it wasn't true. He would always belong here, even when I didn't want him to. \n\nWhen Theo was safely in his crib, Booker suddenly took me into his arms. I sighed, giving in. God, it felt so good to be comforted by strong arms. The last six months had been hard on me. No mother should have to go through what I'd just gone through. To think that I could have lost Theo... It was almost too much. By no surprise to anyone, I began to cry. \n\n\"Shh, s'okay,\" Booker said, rubbing my back. \"Everything will be okay.\"\n\nI looked up into his eyes. \"Will it? How do you know, Booker?\"\n\n\"I don't know. I can only hope.\"\n\nThere was such longing in his eyes, such yearning that I had to tear my gaze away. My cheeks were already starting to bloom pink, my hands clammy as I tried to forget about the fact that Booker was holding me\u2014Booker, who I'd once been under; Booker, who'd once fucked me so hard that I'd seen stars; Booker, who had filled me with his seed and given me life's greatest gift: motherhood. \n\n\"I love you, June,\" he said softly, almost cautiously. \"You're not alone.\"\n\n\"But I am,\" I said, my voice thick. \"I'm always going to be alone.\"\n\n\"What are you talking about, June? I'm here. Kansas and Aspen and\u2014\"\n\n\"No, you don't understand,\" I croaked. \"Your side of the bed will always be empty.\"\n\nRealization struck his features so beautifully, the way the burn in his honeyed eyes softened, his lips parting ever so slightly. He was so handsome, his dark wavy hair tousled, his long lashes fluttering like the elegant wings of a butterfly, and it was as if I'd sprinkled fairy dust over him when he looked into my eyes. His head leaned down, mine lifted, and we almost kissed. \n\nAlmost. \n\n\"Booker, no,\" I said, pushing him away. \"God, is it always going to be this way? We have to stop this!\"\n\nBooker inhaled sharply through his nose, frustrated. \"It'll be however you want it, June. It's always been about how you want things.\""
    ],
    "authorname": "norafares",
    "tags": [
        "best friend",
        "cheating",
        "cheating husband",
        "drama",
        "firstlove",
        "husband",
        "love",
        "loving wives",
        "romance",
        "wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/in-our-bones"
}