{
    "title": "Felicity Ch. 34",
    "pages": [
        "Chapter 34: Ruthie and Sean\n\nIt was late on a Wednesday afternoon in mid June when Mom and I pulled into Felicity, Texas. We had ample parking place at the seaside resort and I easily found a slot for Mom's SUV and the attached trailer. Our room had with two queen beds, a recliner and a sofa in the room. Our window overlooked the sea and had a table and two chairs by it. It was a nice place.\n\nWe took showers, dressed and were sitting on the terrace with drinks as we enjoyed the sea when a very fine looking older redhead kissed Mom on the lips.\n\nThe woman had magnificent tits that nearly spilled out as she leaned over.\n\nTheir very personal kiss ended eventually and Mom introduced me to the woman called Wendy. \n\nOur waitress came over and kissed Wendy on the cheek and after she was introduced to Mom she kissed Mom on the cheek. I got a smile.\n\nWendy ordered wine for herself, crown and coke for Mom, and a Dos Equis for me, then appetizers for three.\n\nAs they held hands Mom told her about her adventures on the way here but I noticed that she had not mentioned any of her episodes with others. Apparently Wendy was important to Mom.\n\nI learned they had met on a web site for widows. As usual with any groups the numbers of the ones keeping regular contact with each other got smaller and smaller over time.\n\nMom, Wendy and a woman in Las Vegas called Elma were the last three regulars in their group. They still contacted each other everyday.\n\nMom was the youngest, Wendy the oldest but she was also the most recent widow. \n\nMom would be seeing Elma when we got to Vegas. Elma had been widowed the longest, three and a half years. \n\nAll three were redheads.\n\nI was scarfing up the appetizers when I noticed I had not left any for the ladies. I was going to order more when Mom said; \"I am going to her house for a while. I will call you if I need a ride back.\"\n\nWendy said to me, \"She will not need a ride back. If you get bored there is a good club just into downtown called Manlee you would like and if you like a mostly lesbian crowd there is a lesbian biker bar called Glenda's two blocks to the right of the resort. Most of the women there are bi, not gay. Most of the guys there are gay. Everyone is good people\".\n\nBoth kissed me on the lips and left hand in hand.\n\nI was alone. I ordered a hamburger and another Dos Equis and enjoyed the sea breeze and the sea.\n\nMom had been living in central Florida but had finally decided to live with me in Los Angeles. My persistent requests had eventually worked. \n\nMom was just past fifty and had just won a battle with pneumonia that she almost lost because she waited too long to see a doctor.\n\nMy sister and I suspected she did not care whether she lived or died. Dad had been killed in a traffic accident by a drunk driver almost two years before and Mom was still in deep mourning. Her sudden resolve to fight her disease came as a surprise to all of us. \n\nIn three days she was out of the respirator and hungry as a horse. She recovered so fast my sister and I ganged up on her and made her promise to come to LA and live near us. \n\nShe said she would think about it and two months later she said yes but I had to go back for her and rent a trailer then drive her to LA. I did not put up an argument and took a two-week vacation from work and flew to her the following weekend.\n\nOn our drive to Texas Mom confided to me that Dad came to see her at her hospital room and cussed her out, calling her a coward. \n\nHe told her that the best part of her life would begin on July fourth. \n\nHe made her promise to fight her way out of her funk and kissed her saying, \"Time means nothing to me. I will be right here waiting for you whenever your time comes.\"\n\nFor Mom it was a vivid memory. I accepted her story.\n\nWe had a good time in the five days of our trip and some of her vivaciousness had returned. She loved New Orleans. She had shown her tits for beads.\n\nShe had eaten pussy.\n\nI did not mind that at all and apparently Wendy and Elma did too.\n\nMy server came by and I asked for our check. She told me that, \"Wendy always pays her friend's checks. In fact she is paying for every expense for anyone in your room including the room.\"\n\n\"Tell me a little about Wendy. She is Mom's friend but I know nothing about her.\"\n\n\"Well, she is the most loved and respected woman in town. She owns and runs the jewelry shop just across the street from the resort and owns the pet shop downtown. She and friends support the women's shelter that saved my life. Since her husband died she has become a lesbian but only with a few friends. \n\nHer husband was the most important person to the town; he was the city manager and was a retired Air Force General. He died of a stroke less than a year ago just weeks after Wendy's oldest sister and town icon Martha died.\n\nWe worry about her but she tells us she is fine. I hope your Mom can lift her spirits.\"\n\nI thought about that for a second then said, \"I guess that's why we are here.\"\n\nI thanked the girl and and left her a tip then went to my room and took a nap. It was after eight when I woke up. Mom had not called so I called her.\n\nShe answered and I heard loud laughter and some lewd comments before she said, \"I am fine.\"\n\n\"Yes, I can hear that. Ask Wendy if you can spend the night at her house. Enjoy yourself.\"\n\n\"Thank you son. Wendy has already told me I will be with her until we leave the day after tomorrow. I am now in her hot tub with her sister and her partner. I have discovered some sipping bourbon we need to pick up when we get to Vegas. I love you. Have fun. Bye.\"\n\nShe hung up before I had a chance to say good-bye.\n\nI got up, took a shower and dressed. I decided to walk to downtown and look around. I did not feel like unhitching the trailer from the car and Felicity struck me as town I could walk to anywhere.\n\nI went by Wendy's Jewelry and noticed there was a workshop right by the display window. There was also a monitor facing the sidewalk displaying an engagement ring and a name under it. It was as impressive as a single diamond solitaire ever gets.\n\nAs I was about to continue the picture of the ring changed, as did the name. Twenty seconds later it changed again.\n\nEach ring was gorgeous. Each ring was unique.\n\nWendy was an artist.\n\nI got to a shop that bragged about gourmet junk food but it was closed so I made a mental note to stop there the next day. \n\nWhen I got to downtown I saw a Puerto Rican restaurant that featured empanadillas but it was also closed. I love empanadillas.\n\nThe ladies gym had three blonde ladies racing each other on stationary bikes and a Hispanic and a black woman doing martial arts behind them. Another tall blonde and a short redhead were doing floor exercises.\n\nNone looked like they needed a gym.\n\nThe seafood restaurant across the street from them had no place to sit so I went on. \n\nAt the end of the block I saw an Italian restaurant that was still open. As I walked past I saw a seat at a table for two that had just one chair, the only empty chair in the place. I hurried in and signaled one and was led to the chair.\n\nI ordered linguini with garlic olive oil and shrimp. \n\nI noticed that everyone that came in and everyone that left got kisses from several others. I was beginning to feel awkward being alone in the place but dinner arrived and I was soon distracted. It was the best thing I had eaten in years. As soon as I finished I wanted another.\n\nThe manager came over to be friendly and asked if I was a tourist. I said, \"Sort of, I drove my Mom to town to visit with a friend.\"\n\nShe asked me who and I answered Wendy.\n\nHer face went blank and then asked, \"Are you Sean? Is your Mother Marti?\"\n\nI nodded yes, and she immediately screamed, grabbed my hand and pulled me into the kitchen and told the chef, \"Marti is with Wendy now, this is her son!\"\n\nHe came to me and hugged me and said, \"We are so happy you didn't disappoint her.\"\n\nThen to the manager he said, \"Call your Mom.\"\n\nHis name was Julian and I got confirmation from him that Wendy had sunk into a foul mood recently. \n\nHe said, \"She did not want anyone to fall in with her so she tried to keep her grief to herself. The anniversary weekend of when she and her husband became a couple is this weekend. We have become very worried.\n\nMarissa's mother is one of Wendy's closest friends and knew Wendy had a special web friend. \n\nShe contacted your mother and tried to get her to come over. \n\nWhen she agreed to move to California Marti said she would try to convince you to drive and to make the detour. Wendy was very excited when your Mom called her to tell her she was on the way.\n\nI think she expected you tomorrow.\"\n\n\"Mom decided to skip our day in Houston and come straight here. We are a day early. Mom is in Wendy's hot tub right now.\"\n\n\"Marissa, tell her they are in the tub.\" The guy hollered.\n\nI heard Marissa tell her mother that.\n\n\"Now for the important part, how did you like your meal?\"\n\nI laughed and said, \"Most delectable, whatever else you put in the garlic olive oil was inspired. The shrimp was excellent. The pasta was definitely freshly made. I will be having the same thing again.\"\n\nHe laughed then the manager assaulted him with a happy kiss. After seeing their rings I concluded they were husband and wife \n\nI was somewhat worried when I got a nearly identical kiss from her but he just rushed back to the stove and began filling orders.\n\nMarissa took me back to my table only to see it already had a new diner in it. I was fine with that and went to the register to pay. \n\nMarissa said, \"You have already paid your bill here tonight. Go to the club across the street, my sisters are there. Make friends then follow them to the biker bar and make more friends. You are unlikely to see your Mom for nearly two days.\"\n\nI returned her goodbye kiss and followed her suggestions.\n\nThe club was pretty much equally divided between straight, gay, and lesbian. I did not bring up Wendy's name but by the end of my stay many seemed to know who I was. I did not see anyone that looked like Marissa but I did make friends.\n\nI was tall and decent looking with dark red hair and a nice smile. I was a good dancer. Everyone that asked me to dance with them I did, even with a gay guy.\n\nA lesbian couple that I had sought me out and danced with asked me if I needed a ride to the biker bar and I decided to go with them. On the way over I asked who made their rings.\n\n\"Wendy,\" was their reply.\n\n\"Do you know who made Julian's and Marissa's?\"\n\n\"Wendy,\"\n\nThey told me they were Petra and Sally and were very happy to hear my Mom was with Wendy. \n\n\"Mom is likely in the tub with them by now,\" the little blonde said. \n\n\"Are you and Marissa sisters?\"\n\n\"Yes,\" was the surprising reply from both. \n\nMarissa was a green eyed Latina woman although likely not Mexican. Sally was a blue-eyed blonde. Petra had jet-black hair and black eyes with pale white skin and looked European.\n\nPetra further confused the issue when she mentioned that Marissa's Mom's husband was their Dad. \n\n\"He walked us down the aisle.\"\n\nI wondered if I would be in town long enough to figure all that out.\n\nWe pulled into a very crowded place and handed the keys to a valet. There was a cover charge but we were never asked to pay. Two uniformed policewomen took turns standing by the door and wandering around the place. Many women kissed them including Petra and Sally.\n\nI knew I was in a different place when an altercation between two girls grew violent. One of the cops slapped both and ordered them to kiss or be arrested. \n\nCops slapping citizens was a no-no everywhere but apparently not here. Neither was ordering them to kiss, which was also likely a no-no.\n\nOne of the girls was hesitant but they kissed.\n\nThe cop was not satisfied and ordered them to give each other a real kiss. Both hesitated so the cop reached behind her to her handcuffs pouch. \n\nTheir next kiss quickly became passionate and the cop walked away as the surrounding ladies applauded and yelled at them, \"It's about time you morons.\"\n\nThe combatants were giggling with tears in their eyes when they ran after the cop and gave her voracious kisses then ran out the door hand in hand.\n\nEveryone was smiling.\n\nPetra went to the bar and ordered for us as Sally pulled me to the dance floor. We danced through two songs then found Petra standing by a tall table. I managed to take two sips before Petra pulled me back to the dance floor. We stayed there for two songs then I went to the table as one of those line dance songs began to play. \n\nI did notice I was the only guy dancing with girls; all the other guys were dancing alone except for two who danced with each other.\n\nAs I drank my beer two maturer women, a blonde and a redhead, came to me and asked if my name was Sean. \n\nI nodded yes and without another word each gave me fabulous kisses and walked away. \n\nAs the line dance ended Sally and Petra came towards me accompanied by a tall, stunning blonde wearing glasses and a ponytail. She was already kissing me before she was introduced as Ruthie.\n\nRuthie ended the kiss, said \"Hi,\" and then resumed kissing me. It was the best kiss I had ever gotten from anyone I had known for under fifteen seconds. \n\nIt was also the best body I had ever had pressed to me. I soon had an erection which Ruthie pointed out to the other two then kissed me again. \n\nPetra and Sally wanted to feel my erection and pushed Ruthie away. \n\nRuthie was as big as both of them put together but allowed herself to be moved to the side. Petra enjoyed our kiss but Sally became voracious and as she backed away from the kiss her hand was gripping my cock.\n\n\"Conference,\" Petra said to Sally and pulled her to a corner. Ruthie resumed kissing me as she pressed her pussy to my cock. She did not stop when Petra and Sally came back.\n\nPetra said to Ruthie, \"Listen you freak of nature, we get him tonight. You don't work tomorrow so you can have him all day. Guard him for us until we get back with work clothes.\"\n\nRuthie nodded and intensified the kiss. I caressed her ass and she moaned into the kiss.\n\n\"Are you staying at the resort?\" she asked.\n\n\"Yes,\" I said and she was soon pulling me out the door.\n\nSooner than my brain could absorb what was happening a naked Ruthie was over my naked body and fucking me hard. Her orgasm was epic and she collapsed on me panting for air. \n\nShe reached for her phone, pressed two buttons and said, \"We are in his room, number....\"\n\n\"Four forty three,\" I said.\n\nShe repeated the number then said, \"Yes, we have fucked. No, he is still full of ammunition. He has great control so he will probably will still be able function when you get here, if you hurry.\"\n\nI turned her to her back and draped her thighs over mine and resumed our fuck slowly. I rubbed my face on her tits, which she loved then I caressed her clit with my thumb, which she really loved. I combined those two with the fuck and she had another big cum.\n\nI kissed her for a while then resumed fucking her but just as I started there was a knock at the door. Ruthie would not release me so I carried her to the door with my cock still in her pussy.\n\nSally and Petra came in wearing only t-shirts and those were coming off as soon as they threw their bags on the couch.\n\nAs Ruthie and I got back in bed Sally pushed Ruthie off me and slammed her pussy over my cock then began a torrid fuck. \n\nSally had three large orgasms while Petra made love to Ruthie's pussy alongside us. \n\nRuthie was holding my hand. I was surprised by how right that felt. Our hands just fit perfect with each other.\n\nAfter her third orgasm Sally paused and said, \"I have been hungry for cock for a long time but we did not want complications. You are leaving town the day after tomorrow so no complications. Petra, your turn.\"\n\nPetra was not sure she wanted a turn but covered my body with hers anyway.\n\nRuthie said, \"Slow and easy, let your pussy lubricate his cock as you slide down, ignore the pressure and enjoy the slide. \n\nOK, he is in. Now set your pace as slowly as you need, he will wait for you.\"\n\nRuthie looked at me for confirmation and I nodded then pulled Petra to me for a deep loving kiss. Long before the kiss ended Petra was fucking me gently.\n\nShe sat up and Sally and Ruthie kissed her.\n\nPetra moaned and intensified the fuck. Ruthie and Sally inhaled her tits and Petra had an orgasm but kept fucking me. \n\nI urged the others away and flipped Petra and me over. I began long, hard, but somewhat slow strokes. Her orgasms began to flow from one to another. Her arms and legs surrounded me. I increased the speed and she fell into the abyss, not breathing. \n\nI fucked harder and faster as she rose from the pit and screamed her way to a giant orgasm then panted to a sob.\n\nI slowed as I kissed her. As soon as I rolled off her body Ruthie picked her up and carried her to the other bed.\n\nPetra was soon moaning and Sally was already fucking me again but she was a lot less frantic for her second fuck.\n\nShe kissed me and whispered, \"I am on the pill, cum in me. I turned us over after her fourth orgasm and fucked her exactly like I had fucked her partner except her cum was silent although her body wasn't. \n\n\"Oh,\" she said as she felt my cum shoot into her.\n\nI rolled off her and cuddled her to me.\n\n\"What time do you need to get up?\" I asked her.\n\n\"Five AM. My cell phone will ring. Petra can wait until six-thirty. Ruthie does not work tomorrow. You will have time to fuck each of us in the morning.\"\n\nWe noted the other two were sleep. I kissed Sally and we spooned. We were asleep in seconds.\n\nWhen I awoke I found Sally was already in mid fuck and had her orgasm just as I became fully awake and enjoyed it with her, although I did not cum.\n\nShe kissed me hard then went to the shower.\n\nI was mostly back to asleep when she kissed me bye.\n\nApparently Petra had been in the bathroom because I saw her zombie her way to my bed and join me as Sally walked out the door. \n\nWe slept for about an hour and I awoke just before six thirty.\n\nI did not wait for her to wake up and slowly slid my cock into her pussy. She was wide-awake as I reached bottom and began to kiss her. She turned off her phone alarm and wrapped her arms and legs around me.\n\nI fucked her softly until she had a nice cum. I rolled us over putting her on top and she began a more vigorous fuck with an intense ending cum.\n\nShe went to the shower then kissed me before she left.\n\nI moved to the other bed and curled up with Ruthie. She was a lot bigger than the other two and seemed to fit my body perfectly as we spooned. I was still kissing her shoulder when I went back to sleep.\n\nIt was after eight when I woke up but Ruthie was still asleep. I went to pee and got back in bed at its foot. I kissed and licked the soles of her feet and her toes then began my trip up her body licking and kissing every inch of the way.\n\nShe had returned from slumber while I sucked her toes and was wide-awake well before I was at her thighs. \n\nShe moaned as I kissed my way up her thighs on my way to her pussy. \n\nShe groaned when I got to her pussy. \n\nI stayed there until her orgasm had passed then resumed my trip. I stayed at her tits with a finger on her clit until she had another cum.\n\nMy cock slid into her pussy as I kissed her lips. She groaned as she wrapped her arms and legs around me as Sally and Petra had done but Ruthie was the biggest and most physically powerful woman I had ever fucked. Her long legs pulled my cock into her deeply. I loved that.\n\nI began an ever-intensifying fuck that had both of us filling the room with sound. Our orgasms were so intense it was necessary for us to hold on to each other for a long time afterwards.",
        "Finally I slid off her body and we fell asleep in a tangle of arms and legs.\n\nI heard the cleaning lady knock and open the door then immediately close it. I went back to sleep. I woke up again about twenty minutes later and heard the shower running.\n\nI got up and staggered to the shower expecting Ruthie. Only it wasn't Ruthie, it was....\n\n\"Mom?\"\n\n\"Hi sweetheart. Who is that in bed with you?\"\n\n\"A friend, Ruthie. I did not expect to see you at all today. What happened?\"\n\n\"Wendy's clerk is stuck on the highway behind a wreck and couldn't open for her so Wendy came down and I took advantage to come over and pick-up some clothes. I will be gone soon.\"\n\nApparently it had not been the cleaning lady. I had not looked.\n\n\"Sean?\"\n\n\"Come on in Ruthie, meet my Mom.\"\n\n\"Hi Marti, glad you made it. How is Wendy?\"\n\n\"Well, as soon as her clerk makes it in we are going shopping to the Galleria in the city so I think she's fine. I am meeting her at her shop as soon as I dress,\" Mom said as she stepped out to dry.\n\nRuthie did not seem to be concerned by the nudity between mother and son and helped Mom dry herself as they chatted. \n\nTwice on the way over the motel we chose had only one vacant room. Mom decided from the start that being modest with each other was a waste of time and we had seen each other nude. However that morning was the first time we were both nude. So was Ruthie.\n\nWhen Mom left the bathroom Ruthie and I went into the shower and I began to soap her down. Her tits needed a lot of attention and so did her pussy.\n\n\"Do you have a razor? My pussy needs shaving.\"\n\nI stepped out and got my razor and the foam and got back into the shower. I got on my knees, kissed her pussy then spread foam over her pubic mound. \n\nShe giggled and said, \"Hey, I was going to do that.\"\n\n\"I want to,\" I said. \n\nI had never shaved a pussy before.\n\nI had never wanted to before.\n\nI had finished her pubic mound and was working on the sides when Mom stuck her head behind the shower curtain and asked for goodbye kisses. \n\nWe both kissed her and Mom said, \"I am so glad to see you can do that,\" then turned and left.\n\nRuthie was giggling and I tried to get her to stop.\n\n\"Hey, I am in the middle of delicate work here, stand still!\"\n\nI swatted her butt for emphasis and she managed to control her giggles, sort of.\n\nWe heard Mom giggling as she closed the door and Ruthie sank back into a giggling spell. I swatted her butt again.\n\nI checked for missed spots with my tongue then ate her pussy. She was ready for an orgasm and it came quickly.\n\nI stood behind her as she bent at the waist and I washed her hair as I slowly fucked her. One orgasm and clean hair later we got out of the shower.\n\n\"You haven't cum,\" she said.\n\n\"I will soon,\" I said.\n\n\"I am starving,\" she said.\n\n\"I will cum shortly after brunch,\" I said.\n\n\"Deal,\" she said.\n\nWe dressed then went to the small buffet cafe in the hotel.\n\n\"This buffet is the place for a real breakfast, Canadian bacon, sausage gravy over fried potato wedges, blueberry pancakes, and amazing omelets.\"\n\n\"You had me at the Canadian bacon.\"\n\nWe both ate as if we had spent the night and the morning fucking. \n\nI made it to the pancakes but Ruthie made it to the omelets, not far into them but she got to them.\n\nI learned she was Canadian and worked at Felicity Music. We were both twenty-seven but she was six months younger than me. We shared the same slightly bent sense of humor.\n\nShe learned I worked for Sony studios as a sound-man and that I was three and a half inches taller than her at six-three.\n\nWe went back to my room and talked, played, then made love. I had no intention of making love to her. I expected it to be another fuck, but apparently that was what we both wanted so we made love.\n\nWe dressed and walked holding hands to her car at the biker club then she drove me around and gave me a tour of the town.\n\n\"That is Wendy's shop to the other side of the boulevard as you probably know.\n\nThe building to our right has the Tiki Bar on the first floor to the right and Matt's Playground to the left. That has video games and an Internet cafe. Are you a gamer?\"\n\n\"No, but I do spend time on the computer. I'm glad to know it is next door.\"\n\n\"Oh good. The second story has two restaurants that have dancing after nine until eleven. The ones that want to continue dancing go to the top floor, Jana's Place. Often there are acts on Wednesdays. There was a Rap concert last night by a kid from the small town just north of us. He is Vietnamese. He is good.\"\n\nShe made a right turn and stopped at the second building.\n\n\"That is Felicity Records, I work there. Best people in the world.\"\n\n\"What do you do there?\"\n\n\"I am the personal assistant to one of our stars.\"\n\n\"Melody?\"\n\nShe seemed surprised by my guess but just said, \"Yes. That is our locally owned Bank, and the Insurance Company. The downtown area you already know. Sally owns the pastry shop right there. Let's go kiss her.\"\n\nRuthie stopped her SUV in mid lane, turned on her hazard lights and we ran in and kissed Sally and ran out.\n\n\"Do you do that often?\" I asked.\n\n'Yes,\" she said. \"I do that several other places but not when they are busy. Sally's rush hour is over.\"\n\n\"Isn't there a Coast Guard Station in the town?\"\n\n\"Yes, I'll drive us past it when I show you the bed and breakfast squares.\"\n\nAs we drove we came to a four lane stop sign by the entrance to the base. Ruthie stopped, jumped out of the car as a woman in uniform jumped out of hers, they kissed in the middle of the street between them then both ran back to their cars. The car behind us honked its horn and I assumed Ruthie had just irritated someone but she ran back and kissed the driver who had stuck her head out the window for a kiss.\n\nOnce back in the car she said,\"That first one is Naomi. Don't get her pissed at you, she is a martial arts expert. The one behind me was Bunny, my insurance agent.\"\n\nI remembered that Naomi was one of the ladies practicing at the ladies gym last night and mentioned that.\n\nRuthie said Naomi and their police chief Shawna are there every Wednesday night. They teach a class and stay to try to outdo each other. They are each other's only real competition.\n\nApparently the black woman was the police chief.\n\nWe ended up back downtown at Pedro's and she stopped and ran in for another drive-by kiss to the owner's wife before departing. We got coffee at the Gourmet Junk Food place and after kissing everyone there we drank our coffee at a beach park next to the resort. \n\nWe talked and kissed as the gulls expressed their disappointment that we had not brought them food.\n\nWe walked down the beach hand in hand. Somehow I ended up carrying her sandals. We went back to my room and again made love.\n\nWe were caressing and kissing when she asked, \"Do you have a girlfriend?\"\n\n\"No, not really. I have a friend that at times calls herself that but we are barely fuck buddies. She is a buyer for a department store so she travels a lot. \n\nI think she has a real boyfriend where she lives which is New York City.\"\n\n\"Do you fuck her the way you fuck me?\"\n\n\"No, she is an 'I want my orgasm now' type of person. She loses interest in fucking after her cum so I have learned to cum when she does.\"\n\n\"I love how you make love to me, soft, hard, fast, slow. You make sure I have multiple orgasms and you kiss a lot. You totally conquered three lesbians last night. Well two, Sally isn't a lesbian so I understood her hunger for cock. You can kiss me some more.\"\n\nI kissed her and said, \"This has likely been the most memorable day and a half in my life. I have a feeling Mom can say the same thing, I hope she can anyway. It may be difficult for us to leave town.\"\n\n\"Oh, I hope so.\"\n\nShe kissed my nipples and slid down my body and kissed my cock.\n\n\"This cock is just the fifth or sixth I had ever had in my hands. It is the first I have ever put in my mouth.\"\n\nShe slid my cock between her lips and made love to it, she began to lick, masturbate, and suck it.\n\n\"You know, that is a strange thing for a lesbian to be doing.\"\n\n\"Actually no it isn't. Most of the lesbians in town fuck men on occasion and if they want a round two they know this is the way to a fast recovery. I hope they are right.\"\n\n\"You have never wanted a round two?\"\n\n\"No, and this is for round umpteenth.\"\n\n\"I'm flattered.\"\n\n\"You should be.\"\n\n\"Bring your pussy to me.\"\n\n\"No thanks, I don't like sixty-nines. I want to be able to concentrate on what I am doing and to concentrate on what it's being done to me. By the way, I like doing this.\"\n\n\"And I love what you are doing but I apologize that it's taking so long.\"\n\n\"Not a problem, I am nicely entertained.\"\n\nIt took almost ten minutes for my cock to regain useful hardness but she continued to suck and masturbate me.\n\n\"It's ready,\" I said.\n\n\"I can see that. It is a beautiful cock, I'll let you know.\"\n\nA few minutes later she slid up my body and slid my cock into her pussy, put a pillow on my shoulder then covered my body with hers. She put her head on the pillow and we kissed, we caressed, and eventually we fell asleep.\n\nAn hour or so later she was again sucking my cock but as soon as she saw I was awake she said, \"Get your swim suit on, we are going to the beach.\"\n\nShe already had a bikini on.\n\nWe had a blast at the beach. I even coaxed her into diving from my shoulders. There was a lot of groping in our play and my cock was in her pussy for a short time but nothing overt. My cock had mostly subsided when we left the water.\n\nOur play continued in the shower and the bed but we never did fuck, we were hungry.\n\n\"Let's go to one of the places that overlooks the bay,\" I suggested.\n\n\"Deal,\" she said.\n\nShe surprised me when she opened the closet; she had clothes in there. She put on a white sundress with nothing underneath.\n\n\"I dare you,\" she said.\n\nI reached into the closet and put on a blue sundress. \"I don't have shoes to wear with it,\" I said.\n\nShe was pummeling me in mid laughter by then. I dressed in a polo shirt and gray slacks, no underwear.\n\nWe sat at a corner of the deck and shared a fisherman's fried seafood platter as we watched the sunset. She suggested a coconut shake that was delicious.\n\nAs it got dark her hand went in search for my cock. \n\nI told her that the next time I accept a dare I would wear black slacks, some of my pre-cum was showing through. My cock was exceptionally hard.\n\nShe giggled but left my cock alone after that. I already had a finger in her pussy. I began to caress her clit and heard her swallow a moan as she quickly pulled my hand away.\n\nAs we kissed I got a text message from Mom and I showed it to Ruthie. It read, \"We are not leaving until Monday.\"\n\nShe had a big smile after she read it but I was surprised and confused by the misty eyes. \n\nThen I remembered that this would be Wendy's toughest time and apparently Mom did not want to abandon her. I was not surprised Ruthie cared for Wendy that much.\n\nWe went to the hotel and made love, then fucked. She sucked my cock back to alertness then mounted me and again went to sleep with my cock in her pussy.\n\nFriday was a lot like Thursday except that Petra and Sally demanded turns again. I did fuck Sally but Petra and Ruthie were going hard at each other so I never fucked Petra that night. \n\nAfter I filled Sally's pussy she went to the other bed and ganged up on Ruthie with Petra. \n\nI dressed and went to get sandwiches and drinks. \n\nThey were cuddling when I got back and thanked me by getting me nude and briefly slurping my cock in their mouths. \n\nSally and Petra dressed and went to the biker bar but Ruthie decided she really needed my cock and used it until we fell asleep.\n\nWe spent half of Saturday on a boat tour of the bay and around a small barrier island full of seabirds.\n\nRuthie appeared to love all wildlife. She introduced me to all the birds as if she was a personal friend.\n\nOn Saturday night Ruthie allowed Petra and Sally to again barge into my room and fuck me. Once again we held hands as Sally fucked me while Petra ate her. That night my longest fuck was with Petra. I fucked her twice then the three of us made love to her. \n\nWell she was my longest fuck before midnight. Ruthie woke me up at about four AM and fucked me pretty much into dawn. Petra and Sally were in the other bed but never woke up.\n\nIn the morning I fucked all three before Petra and Sally left. Ruthie and I went back to bed and slept the rest of the morning. We went back to the beach that afternoon and to Pedro's for dinner. I loved all their food and apparently so did Ruthie.\n\nShe intended to take me to the dance club on the third floor of Felicity Center but we ended up going back to my room and making love.\n\nPetra and Sally returned to my room late in the evening and both fucked me hard before ganging up on Ruthie again. When they went to sleep Ruthie moved to bed with me. We slept well.\n\nMom called me Sunday morning and said our departure may be delayed. She hinted Wendy was having a difficult day and four of them were going to keep Wendy company at the gravesite.\n\nI wished her well.\n\nI spent Sunday fucking three women although we did take time to go out to eat. Sally and Petra did go home that evening. Funny thing, Sally was apparently fucked out. Petra was not.\n\nOn Monday Ruthie and I again went to the beach and enjoyed it pretty much to ourselves.\n\nShe had an orgasm while we were in chest deep water. It was a good thing the water was that deep since her tits were out. My cock spent a long time in her pussy and we allowed the waves to dictate our pace. \n\nRight after that fuck she nailed her dive off my shoulders. A couple that had been watching us applauded as we walked out. We soon saw them trying it, with disastrous results.\n\n\"They need to fuck first,\" I said to Ruthie.\n\nShe giggled, punched my arm, then kissed me.\n\nWe ate at the resorts large restaurant.\n\nWe fucked once and made love four times before we went to sleep that night.\n\nRuthie and I had spent every minute together for a week except for the twenty she used when she went to get her clothes. I was not awake then so I was not counting that.\n\nI was unaware that Ruthie and I were the subject of most conversations in the town. Ruthie was somewhat aware of it but managed to ignore it.\n\nLate Tuesday morning Ruthie just sat at our brunch table at the resort in deep thought. \n\nWe had made love for a long time that morning and she had been in a good mood when we sat to eat but something in her mind had distracted her. \n\nI did my best not to worry since I had never seen her like that but eventually she kissed me and said, \"Let's pack up. You are checking out.\" \n\nI was very surprised when we drove to millionaire's world and to the most opulent mansion there.\n\nShe made no explanation but led me to a very large bed in a very large bedroom.\n\n\"We can fuck here,\" she said as she got us both nude.\n\nI dove for her pussy and gave her a nice orgasm and I was immediately kissing my way up her body then fucking her, then eating her again, and then fucking her again until I filled her pussy with cum.\n\nWe cuddled.\n\n\"Do you like me?\"\n\n\"I adore you, you are the best, I will treasure you always.\"\n\n\"Do you like me?\"\n\nI looked at her and saw she wanted the truth.\n\n\"Yes, very much so.\"\n\n\"Can you keep a secret?\"\n\n\"Yes, I never remember them anyway.\"\n\n\"Try not to remember this one.\" She said as she pulled me out of bed and took me down a long hallway. \n\nShe opened double doors and we were suddenly in a sound studio. There was a grand piano in the middle and many prints of a singer in concert. There were three Grammies on a shelf. They were Melody's.\n\nShe was watching me with intensity when it all sank in. Ruthie was Melody, a singing star.\n\nShe looked worried so I said, \"This is the house of a great music star. We shouldn't be here.\"\n\nShe could tell I knew the truth and smiled.\n\n\"She knows I am ditzy and fuck on her bed. We are OK in here.\"\n\nShe gave me a furious hug and many kisses. She seemed to have been very pleased by my reaction.\n\nI was in fact disturbed that Ruthie had a secret life. Melody did not have a good reputation at her concert venues.\n\nShe walked to the piano and began to play. I went to the sound equipment and turned it on then adjusted input for her, the piano and the room. \n\nI joined her at the piano bench and noticed she had written words for a song. The lyrics were marked \"He\" and \"Me\", a duet.\n\nAfter she played the intro I sang the first \"He\" lyrics then she sang the \"She\" lyrics and we ended up singing the entire song.\n\nShe said, \"I am impressed that you read music.\"\n\n\"I am a failed musician among many other things.\"\n\n\"Well?\"\n\n\"It's a good if somewhat sappy song. Who is going to sing it with you?\"\n\nShe told me and my face must have told her how I felt about it.\n\n\"What?\"\n\nI got up and turned the mixer off while thinking of a way to answer her question, (never noticing it had been on record). I did not know how close a friend he was to her \n\n\"He is a very popular star and all that but his voice and yours will clash. Except when you do Janis you have a pure voice. He would have to force his voice to keep up with you and he can't.\"\n\n\"That is what Edie said.\"\n\n\"Who is Edie?\"\n\n\"My sister. She coaxed me and loved me into being successful. You were at the Vancouver show?\"\n\n\"Yes, I was in town working a club concert.\"\n\n\"Edie was the violin player and occasional pianist. Did you like the Joplin song?\"\n\n\"I loved it.\"\n\n\"The crowd didn't.\"\n\n\"They were too young, they have no idea who she was or how she sounded.\"\n\n\"Yeah, but she is my idol. Grandmom introduced me to her music. That was how I sang until the choir teacher asked me to use my own voice.\"\n\nI said, \"Granddad was a big fan of hers. He was pissed at her for years when she died. I inherited his music collection and the only artist with more LP's, Tapes and CD's in his collection was the Rolling Stones, but that makes sense since they are zombies. Apparently no one has told them they are dead.\"\n\nShe giggled and slapped my arm, kissed me, then said, \"He and grandma would have been a perfect pair.\"\n\n\"Maybe the next time you channel Janis you should do Hold On instead of Ball and Chain unless I am there then it should be Ball and Chain, or Cry Baby.\"\n\nShe smiled and kissed me and played a short Chopin then led us to the kitchen.\n\nWe made coffee and talked but it was mostly kissing. My coffee got cool so I inserted a nipple into it then slurped the nipple into my mouth. She swatted my naked butt, which reminded her we were both naked and hurried us back to bed. We made love until she had a soft orgasm.\n\n\"That was nice.\"\n\n\"Yes it was.\"\n\n\"Now, if you don't mind, I want you to fuck me through the mattress.\n\n\"Yes dear.\"\n\nI did not actually fuck her through the mattress but I came close. We also got one of our lengthier orgasms ever.\n\nWe dressed and went to lunch at a small out of the way restaurant that was in the mostly black section of town. Ruthie gave the large Black lady cook a big kiss and the ladies daughter, our server, a deep kiss. Apparently Mother and daughter were the entire staff, the place only had six tables and a counter.\n\nMost the clientele was black but there was a Vietnamese lady and a Latin couple there as well as a white guy with a possibly European lady. Everyone kissed the cook coming in and going out.\n\nRuthie kissed everyone including the cook. She introduced me as Marti's son Sean. Everyone seemed to be happy I was there.\n\nWe both got the chicken drumstick and thigh special platters and we pigged out. Like everything else I had eaten in the town it was exceptional, including Ruthie's pussy.\n\nOn the way out the cook leaned her face to me so I kissed the cook.",
        "We went to the grocery store and as she kissed nearly everyone we got Dr. Peppers, cokes, and cookies.\n\nI ate her pussy after we got back to the house then we took a nap.\n\nWe went to the biker bar that night and ran into Mom and Wendy, I was introduced to a large pack of women of which Wendy's sister Mo and her partner Marie and Martina and Paloma seemed to be special. All knew Ruthie very well.\n\nMom told me she knew we needed to go soon but it would not be tomorrow. She did say that Wendy was past the crisis.\n\nI danced with Wendy and after we paused for a drink she asked me if Mom had put me up to it. I told her no and that in fact Mom frowned when I dragged her to the dance floor.\n\n\"I love your Mom,\" she said and dragged me back out to the dance floor.\n\nI remembered she was over sixty and took her to the table after two songs. A waltz began to play and Paloma took me to the dance floor. She was an excellent dancer and as I led her back to the table she kissed my cheek. \n\nRuthie was on Wendy's lap talking to Mom when we got back so Martina grabbed me and we danced to a salsa. Before I could leave the floor Mom grabbed me and we danced a slow song.\n\n\"How are you getting along with Ruthie?\"\n\n\"Great, she had me check out and took me home with her.\"\n\n\"Yes, we heard. She has spent nearly an hour grilling me about you. She may like you more than you like her.\"\n\n\"I sincerely doubt that.\"\n\nBefore we left I became somewhat aware of the gossip around us. \n\nRuthie made a new friend/old friend. She had tried to seduce her before but did not have the opportunity. She was with a guy that night so I figured she had no chance, but did. I made friends with her boyfriend who understood.\n\nRuthie and I made love that night and fell asleep in mid-kiss.\n\nThe next morning Ruthie and I again made love.\n\nWe cuddled. \n\nWe talked about the difficulties of hiding a secret identity. \n\nShe said she was now Melody only when in costume and that was seldom. She no longer worried that there were about thirty people in town that knew her double life. None talked about it. The fans that searched for Melody went to Canada.\n\nShe said she was hungry.\n\nI said, \"We must share the same metabolism.\"\n\nWe got dressed and she drove us to Janie's and after a long hug and kiss between them I was introduced to Janie in sign language. Janie kissed my cheek, kissed Ruthie again, then ran to the open kitchen.\n\nRuthie looked like she had forgotten something.\n\n\"Get me one of each,\" she said to me and went back outside.\n\nI went to the counter confused but the girl said, \"We got her order, what would you like?\"\n\n\"I want a sausage taco, two breakfast burritos, no eggs please, and a hotdog. What is so special about the hot dog?\" I asked in reference to the signs posted about it.\n\n\"Well it's new to our menu. People love the sauce and the relish, both house made. The dog is pure beef and the bun is made from potato flour. I am forcing myself to keep them to less than three a day.\"\n\n\"Has the ditzy blonde tried one?\"\n\nShe giggled and said. \"No.\"\n\n\"Prepare one for her too please,\" I said.\n\nAs our food was being prepared Ruthie came back in and announced, \"I can't find my purse.\"\n\n\"Where were you the last time you remembered you had it for sure?\"\n\n\"Well for sure at the biker bar last night.\"\n\n\"You did not have a purse when we went back to the house.\"\n\nI immediately regretted saying that in front of a witness. Her eyes went wide. I had just confirmed a rumor for her.\n\n\"Get our food to go and we will go over there.\"\n\nRuthie kissed the girl as I paid the bill and carried the bag of food as we drove to Glenda's. \n\nI waited for her in the car as she went in and she soon came out with her purse.\n\n\"Did you check to see if anything was missing?\"\n\n\"Yes although I knew it would be fine. They put purses in wells under the countertop behind the bottles.\"\n\n\"Smart but you have to trust the people who work there.\"\n\n\"True but everyone in this town knows that the economy has tanked everywhere except here. \n\nIn fact sales of my CD's have gone down. We have been waiting for a spark of some kind before releasing the new one. Hopefully that will happen next week.\n\nAnyway everyone that has a job wants to keep it and knows there are literally a thousand people waiting for them to get fired.\"\n\nShe may have been ditzy but she was smart. She was also the best looking girl I had ever held hands with much less fucked. \n\nMy brain knew it was not true but I felt like we were a couple. \n\nOthers treated us as a couple but with curiosity, they seemed to be pleased to see us together. \n\nThey also knew as we did that whatever our relationship was it had an expiration date.\n\nWe were walking in her house towards a different area and ended up in a covered back porch. She took her clothes off so I did too.\n\nI ate my hot dog first and was very impressed. \n\nShe loved the hotdog too but mostly she loved the potato flour bun. \n\nShe gave me one of her chicken soft tacos and I really loved that. It had rice and beans and avocado with the chicken.\n\nWe had finished the food and we were sipping our coffee when Ruthie sat on the table directly in front of me and displayed her pussy. I licked it between sips as she fought the urge to groan. I lifted its hood and gave her clit a long slow lick. She allowed her deep groan to escape and was in orgasm immediately.\n\nI stood and slid my cock into her. She wanted a hard fuck so I gave her a hard fuck. Her second orgasm was monumental enough for me to release my cum into her.\n\nI sat and kissed her cum filled pussy where there was less cum then she slid down to my lap and gave me a long kiss. \n\n\"Your kiss tastes funny,\" she said and giggled then kissed me some more.\n\nShe sat back and said, \"As you know I am a lesbian. You also know we both really enjoy fucking each other. I want us to continue doing that in the future. My west coast concert tour begins in eight weeks. I will be in L.A. for three nights. I would love to spend those nights with you.\"\n\nI kissed her and said, \"My girlfriend is going to love eating my cum out of your pussy.\"\n\nShe gave me a grin that seemed to have a tinge of sadness in it. \n\nMy line had not been well received.\n\n\"OK, sorry. There is no girlfriend.\"\n\nShe gave me a big grin and a voracious kiss.\n\n\"Where are you going after you leave here?\" she asked.\n\n\"Mom and I are going to meet another friend of hers in Las Vegas then going home to L.A.\"\n\n\"Will you be in Vegas, July the third and fourth? That is a week from today, Wednesday and Thursday.\"\n\n\"I don't know but it is likely.\"\n\n\"Hang on,\" she said and left me and went into the house. \n\nShe came back with an envelope in which were four tickets to a Melody concert at Caesar's Palace, two had back stage passes.\n\nI embraced her and kissed her long and softly. She reached down and felt for my cock but it needed its rest so she wrapped her arms around me and intensified the kiss a little.\n\nAs we walked back inside she told me at least forty people from town were going over including Petra and Sally.\n\n\"Your Mom probably does not realize it but my accompanying singers are Alice and Marie. I am sure she has already eaten both pussies and Marie's partner Mo's pussy. They are my neighbor's, one house over. Wendy lives on the other side of the willows from us. Martina will also be there with Paloma and their husbands and so will almost all of her street.\n\nI am giving two shows but all of you have the Thursday show. The Wednesday show sold out as soon as it was announced, thank Dieu.\"\n\n\"Is the concert what you are hoping will allow you to release the new CD?\"\n\n\"Yes, we are taking a thousand with us for sale in the lobby and I will be doing five songs from the CD in the concert. We are also going to film the second concert and Matt will have that on DVD before the summer ends.\"\n\n\"Where are you staying, Caesars?\"\n\n\"I will be at an undisclosed location.\"\n\nThen in a whisper said, \"The Bellagio.\"\n\nIn a whisper I said, \"So are we.\"\n\nI got another kiss.\n\n\"Several of the venues are connected to each other by tunnels. I can get from my room at the Bellagio to the stage at Caesar's without going into a public area.\"\n\n\"That's convenient.\"\n\nRuthie and I did not decide anything but we ended up going back to bed and taking a nap.\n\nWhen we awoke she discovered that my cock was serviceable but decided to allow it more time and she took us into the shower.\n\nRuthie said, \"You will need slacks and shoes tonight, we are going to a concert. Alice and Marie are doing a podcast from Jana's club and we are part of the audience. Then I'm going to allow Petra and Sally to have you until midnight and then you will be mine until you leave tomorrow.\n\nI know no one has said you leave tomorrow but I have decided to think of it that way.\"\n\n\"You and Petra seem to have a special relationship.\"\n\n\"We do. We love each other and love making love to each other. Sally is straight and seldom eats a pussy other than Petra's and at times Naomi's and mine. \n\nNaomi is in the Coast Guard and lives with Paloma. She was the one I kissed at the entrance to the base.\n\nWhen Naomi decided Paloma was her Mom there was no more sex between them so Petra and Sally became her emergency help. They meet at somebody's yard between them, usually Magda and Rita's. Sally and Petra have a rule of no sex with others in their home.\"\n\n\"Just how many non-standard relationships are there in this town?\"\n\n\"Dozens.\"\n\nI shook my head and asked, \"Where are we going for supper?\"\n\n\"Bolero which is across the street from the resort and it's just an escalator ride to Jana's. The food is from everywhere in the Latin world including Spain and Italy.\"\n\n\"Hmmm, I did promise Julian I would be at his place for more linguini with garlic olive oil and shrimp.\"\n\n\"Ooh, ooh. Let's do that. I could park at the studio and we can walk to both places from there.\"\n\n\"Sounds like a good plan to me.\"\n\nWe kissed as we let the three shower heads bury us under the cascade.\n\n\"I can easily recover after four hours,\" I said,\n\nMy cock was already halfway into Ruthie's pussy.\n\nShe draped a long leg over my hip and we began a fuck that started in her shower and ended on her bed many minutes later.\n\nAll our fucks had been fabulous but that one was my favorite so far, we played and I had the teeth marks on my ass to prove it. \n\nWe had become buddies who fuck. \n\nMaybe more. Maybe much more. She was already my best friend ever.\n\nThat afternoon Marissa was happy to see us walk in and after kisses put us at a table on a back corner. \n\nWe ordered the linguini dish and she ordered a Dr. Pepper and I ordered a coke. \n\nI had noticed that apparently Ruthie did not drink alcohol. Somehow I decided not to do so while I was with her.\n\nI had not had a drink in over a week.\n\nWe both really enjoyed dinner and each other. On our way out Ruthie was kissed by several ladies and I was kissed by Marissa. \n\nWe walked to Felicity Place and went up on a service elevator from the Tiki Bar. We went through a side entrance of Jana's that took us directly to the offices.\n\nA tall gorgeous blonde greeted us with kisses; she was the second tall blonde to kiss me before being introduced. Ruthie was the first. The second blonde to kiss me never introduced herself so she did not count, sort of.\n\nThis ones name was Inga. Soon a third blonde kissed me, that one was Jana, the owner and Inga's life partner. They had identical rings obviously from Wendy's. \n\nThey were two of the three women racing the stationary bikes at the gym I saw on my first night. After mentioning that I learned that the third was Jana's big sister Lucy. \n\nShe had moved to DC the previous weekend, the World Wildlife Fund had hired her husband.\n\nThat bit of news would become very important soon.\n\nWe went into the club and listened as Alice and Marie did their sound check. It was awful. I went to the guy on the soundboard and asked him if his equipment was giving him trouble.\n\n'Yes, I have never worked with this system and I am going to wreck a concert of my Mom's favorite singers. I am a dead duck.\"\n\n\"I have worked with these, let me help you with it.\"\n\nHe gave me a thankful look and I asked Ruthie to tell the musicians to take five minutes.\n\nI showed him, which slides corresponded to the ones on the board he normally used, and what all the others did.\n\nThere were too many slides, toggles and switches for him so I asked the musicians to go again and I set up the board.\n\nHe loved it and so did the musicians. Ruthie was amazed and asked me to do the one in her house.\n\n\"You mean that reel to reel monstrosity you have?\"\n\nI asked with a glance at the sound tech guy.\n\nShe got my drift and said, \"Hey that was a gift.\"\n\n\"For your fifth birthday?\"\n\n\"No, my sixth.\"\n\n\"No matter, I already set it up.\"\n\nShe kissed me and said thanks.\n\nThe musicians came over and thanked me for setting up the board.\n\n\"Ruthie threatened me if I didn't,\" I said and was immediately swatted on my butt.\n\n\"Oh, see you know each other well.\" the woman named Edie said. \n\nI knew she was the most important person in Ruthie's life so I thanked her for keeping Ruthie out of jail.\n\nMy butt was swatted again and Ruthie said, \"Now would be a good time for you to apologize for hurting my hand.\" \n\nI stuck my chin out and said, \"Make me.\"\n\nA tall redheaded guy said, \"Children please behave. Ruthie you may need to sit at the piano. Maggie and Jason are stuck at the airport in Little Rock and her backup Rob is in conference with someone in Las Vegas.\"\n\nRuthie looked at me and said, \"You will have to re-do the sound mix, there was no piano when you did it.\"\n\nThe guy at the mixer got up and went home.\n\n\"It is not his fault,\" Allen said. \"The guy the salesman trained left after he was trained. This poor guy had assumed it was a regular soundboard and not a spaceship command center. We would appreciate it if you gave us a hand. I am sure Ruthie will be most grateful too.\"\n\n\"Will not.\"\n\n\"Well one of us will,\" Marie said.\n\nI stuck my tongue out at Ruthie and sat at the soundboard. As soon as I had the headphones on she slammed the keyboard. She had made it obvious to me she was going to do that so I had the headphone in front of my ears. \n\nStill, I wrapped my arms around my head, crossed my eyes and slid to the floor. That brought applause and bravos for me as Ruthie pretended to stew but could not repress the smile on her lips.\n\nWe were good together.\n\nThey did three songs and I marveled at their talent. Each was at least as good as any musician I ever heard. The ladies had a surreal harmony they could weave in and out off.\n\n\"Does the piano player sing on any song? She has a mike on the piano,\" I asked.\n\n\"Yes, but leave her mike off, she never remembers the words.\"\n\nMelody was famous for knowing the words of every song she ever sang since she was four. Apparently all knew that I was aware of Ruthie's secret identity. \n\nIt then occurred to me the whole town knew I was staying with her.\n\n\"Got it,\" I said.\n\nRuthie stood and gave all of us the finger and as she did the VIP's were allowed in and that was the first thing they saw. Mom and Wendy were among them.\n\nEveryone laughed as Ruthie blushed and followed the artists backstage.\n\nMom, Wendy, Martina and Paloma walked over to were I was and kissed me.\n\n\"You got suckered into helping I see. Ruthie's idea?\"\n\n\"Actually no. She got suckered in too.\"\n\n\"We are staying another night by the way. Some of my new friends say Las Vegas is a three to four day drive even with stops in San Antonio for an afternoon and at Carlsbad for the evening. And guess what? The ladies here will be in Vegas when we are.\"\n\n\"Oh, good,\" I said although I already knew. I did not know if Mom knew Ruthie's secret identity.\n\nPetra, Sally and Naomi came over and kissed me then went to a booth with three other young ladies. \n\nNaomi's kiss was the kiss of an occasional lover but we had not been introduced.\n\n\"Will you'all be standing or do you have a booth?\" I asked Mom.\n\n\"We have a booth.\"\n\n\"Good, they are about to open the doors.\"\n\n\"We better get our drinks,\" Wendy, said and led them to the bar. \n\nThat was when I noticed Paloma holding Martina's elbow leading me to think she may be blind. That had never crossed my mind at the biker bar, and we had danced.\n\nThere were no introductions to the concert; when the outside doors were closed the artists just came out to a roaring reception and began to play.\n\nThere were no outliers, just beautiful music. Alice and Marie were awesome, Edie was awesome, and Allen was a bit more than awesome at the guitar and nearly as awesome on the cello, or vice versa. I had not met the drummer but the girl looked familiar. She was very good.\n\nRuthie was perfectly awesome. \n\nThe audience of mostly older ladies was simply in love with the artists. It was a great show and I was glad to be there.\n\nAfter the performance the band came out to visit with the crowd. Ruthie came to me and announced that she was feeling selfish and would not share me with Petra and Sally and had already told them.\n\n\"Did Petra and Sally get mad?\"\n\n\"I don't know, they would not speak to me.\"\n\n\"Oh. Did you hear we are spending another night?\"\n\n\"You are? A-fucking great. How about one more night after that?\"\n\n\"Not my decision. What would be so special one more night?\"\n\n\"You would bring me here to dance.\"\n\n\"Why not tomorrow night?\"\n\n\"There are ladies dancing for ladies on Thursday nights. Let me think about your schedule a little.\"\n\nShe then went to the ladies booth and visited with them for a while but mostly with Wendy and Mom. I busied myself with locking into memory the settings for Alice and Marie concerts then put the system back to sleep.\n\nI joined Sally, Naomi, and Petra and Sally confessed to being a bit angry at being cut off but mostly they were all curious about how Ruthie and me would turn out. \n\nI had apparently already fucked her many more times than all other men combined had in all her life and she wanted more. \n\nI claimed we were just fuck buddies.\n\nThey giggled at that. \n\nPetra mentioned that I had fucked her more times than all other men combined had too.\n\nI had fucked her six times.\n\nI gave her a long loving kiss that was interrupted by Sally's demand for a kiss.\n\nRuthie joined us and gave the girls deep kisses then took my hand and led us out. I got grins from the girls when we left.\n\nAs we sat naked on her back porch I saw a doe and her fawn come to her yard and grazed as if they lived there. Ruthie went to the kitchen and returned with two carrots.\n\n\"Hi Bobbi, Hi Magee,\" she said as she walked out to the deer. The doe and the fawn hurried to her and after insisting on being petted first took the carrots and followed her to the porch. \n\nRuthie sat on the steps and said, \"You can come and sit with me. You will be the first guy they will meet but they go by how I feel about my company so they will love you.\"\n\nThat statement did not reach my brain for two days.\n\nI went and sat on the step with her and said hello then listened to Melody sing to them. The deer got closer and listened intently forgetting to chew on the carrots.\n\nMelody had a mesmerizing voice.\n\nThe song was soon over and Ruthie giggled. The fawn leaped and presented himself for petting while Bobbi ate her carrot.\n\nFive more moms and their fawns began to cross the yard from right to left and Bobbi led Magee to them.\n\nIt was a unique experience for me and told Ruthie so.\n\nShe said, \"Not so much for me and in fact Alice and Marie and Wendy can get them to do that too. One early evening the four of us sang and the entire flock came up to hear us. \n\nThey are music lovers the dears.\"",
        "I groaned which is the proper response to a bad pun.\n\n\"Merci,\" she said and kissed me.\n\nWe went back inside and went to her studio. I detoured for a leak and when I joined her she asked, \"What did you do to my settings?\"\n\nShe was playing back what we had done that afternoon.\n\n\"I adjusted it to the piano, your voice and the room.\"\n\n\"Ahh, the room. You are the first to account for the room and that is why it sounds so perfect.\" \n\nMatt called Ruthie as I fine tuned the sound in the room. After she hung up she told me he had asked her who did the sound on tonight's concert. The sound on the video was awesome, best ever, he had said. \n\n\"I gave him your name and you will be getting a check in the morning and royalties thereafter. The concert is going on a DVD.\"\n\nI was standing behind her massaging her shoulders and said, \"Paychecks are nice\" and kissed her neck.\n\nShe pulled me down and sat me next to her on the bench and said, \"OK, listen. Neither Wendy nor I are ready to see you and your Mom leave so we called a friend and he found someone to drive your trailer home. He will start on the way Tuesday and have it at your house on Saturday then fly back. \n\nYour Mom will be with Wendy and fly to Vegas on Thursday. We need to be there Tuesday.\n\nI will be introducing you as our sound-man but Caesar's has one of the best so you do not need to do anything except love me for a week. Any objections?\"\n\n\"Is there anything to eat in your kitchen?\"\n\nI was as happy as could be but decided not to show it. Ruthie saw it anyway.\n\nAfter a wild kiss she answered, \"Yes, anything I like from any restaurant I always get a second meal to go and freeze it. I must have thirty in the freezer?\"\n\n\"Lets get some parkas on and search.\"\n\nWe went to the kitchen and I settled on some swordfish with sauce and she decided on shrimp pasta like we just had that evening.\n\nI asked if there was another one and she pointed at a shelf that had three more. I put the swordfish back and got the linguini.\n\nWe kissed as we waited.\n\nWhile we ate she told me what she had to do when she got to Vegas. I asked her if she would have time to look around the town and she said no.\n\n\"You have Friday and Saturday,\" I said.\n\n\"Yes, I would,\" she said and put her dish in the sink.\n\nShe seemed to be down more than a bit. The leaving the next day now had a concrete date.\n\n\"Hey, don't punt before it's fourth down.\"\n\nI wondered why I said that but her small smile made whatever I meant worthwhile.\n\nI put my dish in the sink and got a Dr. Pepper for her and a coke for me and walked us out to her back porch. We got on her swing and sat silently for a while.\n\n\"Is it because of Melody?\"\n\nSomehow she thought I was rejecting her.\n\n\"Melody is your job. You are Ruthie and I really like Ruthie. I like Melody in concert but I'm not sure we are compatible.\"\n\n\"You are right, Melody is just my job. I am happy to hear you like Ruthie better.\"\n\nI kissed her. I meant it to be a sweet short kiss but as the kiss progressed neither of us felt like ending it so we continued the kiss. My hand ended up on a breast, her hand ended up on my cock. A few moments later she straddled me and sank her pussy over my very alert cock.\n\nOur kiss continued but we did not fuck, we loved as I gently propelled the swing for us. \n\nI kissed her breasts as I caressed her ass. She wound her arms around my shoulders and pulled me harder to her body.\n\nI put both hands under her butt and stood with us still coupled. She wound her longlegs around me and I walked us to the bed and lay on my back. The kiss intensified.\n\nI put my legs outside hers and squeezed them together effectively trapping my cock in her pussy. I began pressing her ass down in a slow rhythm. Our kiss ended when she groaned in orgasm.\n\nI did not pause or stop until I filled her with my semen, which came after her fifth cum. It had been a nearly hour long fuck.\n\nWe resumed our kiss until we fell asleep.\n\nShe was staring at me when I awoke the next morning.\n\n\"What?\"\n\n\"You made real love to me last night, I felt it. It was real so don't try to deny it. Careful, I might get used to that. \n\nBut we do not have time this morning, I have to go to work and you do too. We are rehearsing the Vegas show and we do not have a sound-man. Allen told me to do whatever it took to get you there.\n\nI told him that Canadian bacon, sausage gravy over potatoes and blueberry pancakes would do it.\"\n\n\"You had me at the Canadian bacon.\"\n\n\"We need to dress and go,\" she said as she got off my body. It was then that I realized my cock had been in her pussy.\n\nWe had to hurry to the studio so neither of us got to the pancakes but that was overkill anyway, we were not too disappointed.\n\nI met several people including the head and owner of the studio, the first such person I had ever met. \n\nThe working atmosphere could only be described as casual. Everybody kissed everybody including me and everyone knew what they needed to do except me.\n\nRob, the studio head, apologized for forgetting I had not been there before and led me to the sound booth and introduced me to the love of my life. The beautiful monster had more channels, buses, sliders and power than anything I had ever worked with.\n\nSony had purchased three and I had trained on the one that had been set up but I had never worked using it.\n\nI told Rob that and he laughed and said, \"Don't worry, no one has worked on this thing since we had it installed. It is the mother ship of the one you worked on last night so Allen thought you could handle it. Have fun.\"\n\nI had a blast with it and by the time we needed a sound check I was ready. I got useful stuff from everyone but Ruthie, she gave me a raspberry and an Oww.\n\nI looked up and saw Edie had slapped her butt.\n\nI turned on my mike and said, \"Perfect.\"\n\nRuthie said, \"Thank you.\"\n\n\"I was talking to Edie.\"\n\nAs Ruthie was giving me the finger a smiling Edie started a violin intro and everyone else jumped in at precisely the right time and Ruthie began to sing a happy up-tempo song.\n\nI had everyone and every instrument perfectly pegged before the first chorus and kept them there for two hours. As they finished the set I turned on my mike and said, \"Uhm, Janis, are you doing Cry Baby?\"\n\nRuthie jumped up and down as the others immediately got ready and Allen began to wail on his Fender as Edie rushed to the piano. It was an even longer hair-raising version of the one Janis did on the Canadian train tour. \n\nThey had done this before.\n\nEveryone was laughing and jumping and clapping when finished and Ruthie ran to me and gave me a ferocious kiss then began to lobby to include it in the program. She did not need to; Rob and Allen had already decided it had to go in.\n\nFor lunch I told Ruthie I wanted to try the fish place downtown that was too crowded to get into on my first night in town, Ruthie agreed and so did everyone else so ten of us walked there. \n\nAs it turned out it was as crowded as it had been before, but they had a covered patio that could hold all of us at one table. \n\nRuthie ordered the swordfish and I ordered the grilled grouper which came head and all. Ruthie called me a barbarian and said \"Yeww\" when I ate the eye.\n\nI gave her the other eye to eat and after a great debate with herself she ate it.\n\nEveryone else said \"Yeww.\"\n\nRuthie kissed me then announced, \"It was good.\"\n\nRuthie and I spent the lunch feeding each other as we talked with the others about everything except the concert session. \n\nI learned more about the people and relationships in town. I was introduced to Doris, the co-owner and chef of the place, and learned that Martina's husband had financed the restaurant. Doris and her husband Larry already paid him back but he owned ten percent. \n\nRuthie told me he had done the same for Sally, and Julian and Marissa, and he owned ten percent of those. She also said that for all practical purposes all were brothers and sisters. The relationships in town began to make some sense.\n\nAlso eating with us were Ruthie's agents Edna and the elder Petra, our Petra's mom. They had business to discus with Rob.\n\nAllen did tell me that after lunch we would go back and listen and take notes then argue for a couple of hours and do it again tomorrow until we had it perfect, then do a dress rehearsal. We would do another run-through at Caesars Tuesday afternoon and if needed Wednesday morning.\n\nOnce as Ruthie was giving me a forkful of sauce-covered swordfish we noticed that everyone was looking at us.\n\n\"What?\" Ruthie asked.\n\nEight people smiled and said, \"Nothing.\"\n\nI though I saw a tear fall off Edie's eye.\n\n\"Allergies,\" I thought until Ruthie ran to her and gave her a ferocious kiss then ran back to me.\n\nRuthie was borderline overflowing with happiness when she kissed me, took a deep breath and asked if anyone was not going to finish their fries. \n\nEverybody threw them at her, which started a food fight.\n\nThe guys got up and went to the register and left the fight to the ladies. I followed the guys after I caught a fry and ate it.\n\nApparently a tradition of some kind had been honored.\n\nAs we walked back everyone had somebody's hand in theirs. Rob had Marie's hand in his, as it turned out she was his mother. \n\nAlice was walking hand in hand with the drummer, which turned out to have been Nikki, the drummer for a popular all girl group at the turn of the century and also her daughter.\n\nAllen and Edie had been married for a long while.\n\nPetra the mom and Edna were doing a lot of giggling behind us. I had the feeling it was about me, or about Ruthie and me.\n\n\"Ignore them,\" Ruthie said which sent them to a full laughter. It was then that I noted they had identical rings by Wendy.\n\nAs we got to the boulevard they said bye and headed to an office building to our right.\n\nBack at the studio we all got comfortable and listened to the playback. Everyone had a pad and a pencil and all of us wrote something down. I was sitting on a cushion on the thickly carpeted floor against a wall and Ruthie was on the floor with her head on my lap as Allen and Edie did the same.\n\nRob had his mother in his arms as he sat against the wall and Alice had her daughter in her arms as they did the same. There was guy I had not met but knew it was Matt at the playback booth and a woman was sitting on the piano stool.\n\nThe playback stopped at the fifty minute mark and everybody got up and went to the restroom then returned with a coke or Dr. Pepper except Allen who came back with coffee. I decided that was a good idea and asked him where the coffee was. \n\nI met Matt there; he was doing the playback and did the filming for every concert. He appeared to be a good guy and very good at his job.\n\nTen minutes later we talked about the first fifty minutes. \n\nWho wants to start? Rob asked.\n\n\"I do. I want to apologize for the first five seconds or so. It will be better next time.\" I said. \n\n\"Not to worry, we all know it was Ruthie's fart the led you astray,\" Edie said.\n\nRuthie held her hand up then slowly curled all her fingers except one. I slurped the finger into my mouth and that made Ruthie go, \"Yeww,\" which got laughter from everyone else.\n\nI noticed Ruthie had musical notes and numbers on her pad.\n\nAnother bathroom/drink session later Rob again asked, \"Who wants to go first?\n\nAlice said to her daughter, \"Baby, before the last stanza of Roses I think we need something a bit more boisterous; that is when the listener realizes the song is not about the flower but about sisters.\"\n\nAll nodded in agreement and I said, \"Bass drum and cymbals leading to the normal beat should be enough,\" I said.\n\nEveryone looked at me, and I realized that type of comment was not part of the job.\n\nI was about to apologize when Nikki, asked, \"One or three?\"\n\n\"Three and one.\"\n\n\"I got it. Thanks.\"\n\nFrom that point I gave my input was only when requested. It was requested often.\n\nThe lady sitting on the piano stool never said anything but wrote copious notes. I learned she was a representative of Caesar's and would be the stage manager at the venue. I did not know if everyone did that or if it was just Caesar's, I had never sat at any of the meetings.\n\nAs the meeting ended I asked, \"When should Janis show up? I will need ten seconds to adjust the board for her so it can't be in the middle during the long medley. And is there going to be an introduction of Janis, maybe something on the screen. Just something to consider but not a question for now, Ruthie's tummy is growling at me.\"\n\nI was looking at Caesar's rep when I said the part on archival video.\n\nShe nodded at me.\n\n\"Think about what Sean said but let's go home. See you tomorrow at nine,\" Rob said.\n\nWe all groaned our way off the floor and began to walk out.\n\n\"Where to?\" I asked.\n\n\"Home, we have two more containers of garlic oil linguini.\"\n\nRuthie was skipping and humming as we walked out to her car.\n\n\"Why are you so happy?\"\n\n\"It's more than that. It was the first time I had anyone with me for playback. It felt good. Thanks,\" she said and kissed me. She waved at the others when they said bye but never stopped the kiss.\n\nRuthie and I shared one bad habit, we would eat the same meal over and over until we were done then never again for a year or so. We were not near that point with the linguini.\n\nShe said \"I had promised Janie I would watch her dance tonight but I am too tired. I just want to sit on the swing with you and watch the creatures walk by.\"\n\n\"I thought Janie was deaf.\"\n\n\"She is and yet she is the best dancer of us all. Matt puts the bass speaker face down on the floor and she is barefoot as she dances. She is my best friend even though we have never had sex. We became best friends during the year I tried to seduce her. She is married with two kids now. I am on her baby sitters list and on Vicky's list too.\"\n\n\"Vicky?\"\n\n\"Rob's wife.\n\n\"Funny, I can easily see you babysitting but I would never be able to see Melody babysitting.\"\n\n\"You are weird.\"\n\nWe were now at her house and got naked.\n\nWe talked, we cuddled, and we kissed until our quiet evening ended when Allen and Edie arrived. They did bring a box of empanadillas so I was happy to see them even though I had to put gym shorts on. Edie wore just a t-shirt of the opera Carmen. Ruthie put on a t-shirt of Alice and Marie.\n\nAs they came in I saw that they had come over in bicycles.\n\nThey wanted to know if Ruthie had finished the duet. She said yes but was having second thoughts about her partner on the song. Ruthie took them to her studio and before I had a chance to decide to follow them or not Mom and Wendy walked in, they were wearing just t-shirts. Mom was wearing the New Orleans one I had bought her. Wendy's was an old Air Force Academy shirt. I later learned it was the first time Wendy had worn the shirt since her husband died.\n\nBoth gave me long kisses and Wendy added a dick grope then asked where Ruthie was. I told them, \"In the studio with Edie and Allen, they just went there.\"\n\nWendy headed that way as Mom hugged me.\n\nShe said, \"I am going home the Saturday morning after the concert. You do not need to come with me, Wendy is. We hired the driver to stay and unpack for me. Wendy will stay until Tuesday.\n\nI am not telling you can't come with me, I am telling you that if you want to stay with Ruthie you can.\"\n\nWendy came back and told Mom, \"Marti, you have to come and listen to this.\"\n\nMom followed her and before my head could absorb what she had just said more people came in, Mo, Marie, Alice, and Nikki came in, all of them in ill-fitting t-shirts. I could see Nikki's tits under the sleeves. All came to me and gave me big kisses and dick gropes then went directly to the studio.\n\nRob walked in as Allen walked back out, apparently Allen had called him. Rob waved at me as he went to the studio and I just gave up.\n\nI went to the kitchen, put some empanadillas in a bowl, got a coke, and then started out towards the patio but I noticed a kitchen cabinet in a corner. \n\n\"If I was hiding booze anywhere in the kitchen it would be there,\" I said to myself.\n\nI found what I was hoping for in that cabinet, an already open bottle of crown. I filled a tall glass with ice, filled a third of it with crown then filled the rest of it with coke.\n\nI was at the patio table and had eaten all my empanadillas and drank half my drink when Allen and Rob joined me. They had crown and cokes and empanadillas.\n\nRob said, \"We would like for you to consider being our audio supervisor. We are ready to pay you twice what Sony is paying.\n\n\"Wow, I didn't see that coming. Did Mom just tell you we are no longer in a hurry to get to L.A.?\"\n\n\"Actually she told Ruthie and her reaction immediately brought verbal abuse from the other women. \n\nAnyway talk it over with Ruthie tonight and give us a hint before we return from Vegas,\" Allen said. \n\n\"And no, she does not know we are making this offer and will not tell her we did if you decide against it.\" Rob added.\n\n\"Any empanadillas left.\" I asked trying to get it all in my head.\n\n\"Yeah, a bunch. The ladies are otherwise occupied. Bring the box with you,\" Allen said.\n\nFor the rest of their stay we talked about song order and the Janis intro. \n\nI told them that, \"I was sure it was not well received in Vancouver because that audience did not know Janis. \n\nNinety percent of Melody's fans were not born before Janis died. Ruthie has a memory of discovery that she should share with her audience.\"\n\n\"Write it down for her,\" Rob said.\n\nI asked them when they were returning from Vegas and they said, \"Sunday night. Vicky and I want to revisit some places and all the ladies want time to play. You have a seat on that plane.\" \n\n\"Man, I suddenly have a lot to consider and I am living with a woman that doesn't drink.\"\n\nBoth laughed and Allen added, \"And she doesn't buy either. Whatever booze you find in this house someone else bought it and brought it here. Your turn to buy the crown.\"\n\n\"Got it.\"\n\nAbout thirty minutes later the ladies came out and kissed all of us, grabbed an empanadilla, and left taking Allen and Rob with them.\n\nEvery kiss smelled like pussy.\n\nA few moments later Ruthie came out and sat with me at the table. She had a Dr. Pepper and I slid a paper plate with four empanadillas I had hidden for her.\n\nShe kissed me and wolfed them down quickly.\n\nWhen she finished the last I asked, \"What was all the commotion about in the studio? I asked.\n\n\"You.\"\n\n\"I wasn't in there.\"\n\n\"Yes you were, in the song we sang together. Funny thing, when I played it back yesterday I was listening to me and marveling at how good you made me sound,\n\nTonight I listened to you. You have a romantic baritone voice everyone liked. All said we sounded really good together, even Edie.\"\n\n'That's nice. Do you drink anything except Dr. Pepper?\"\n\n\"Root Beer, orange juice, Tea, nothing with alcohol. Why do you ask?\"\n\n\"The guys discovered me drinking their crown. I have to replace it.\"\n\n\"Serves you right. I am still hungry. Do you still want the pasta?\"\n\n\"Yes please.\"\n\n\"I will be right back.\"\n\nAs she left I asked myself. \"Lets see, what do I know? \n\nI know that if Mom is fine with it I would love to take the job here. Felicity is a much more pleasant place to live in than Los Angeles, and Los Angeles doesn't have Ruthie.\n\nI would be making enough money to buy a house if I needed to. This is her house, not mine or ours. Her house.\n\nHmm, this is Melody's house, not Ruthie's. \n\nI wondered if she has thought of it that way. Maybe we could....\n\nOK, lets get back to basics. Do I love her? Does she love me?\"\n\nRuthie put my bowl in front of me and we inhaled the food. Ruthie kept interrupting my eating with wild kisses so I interrupted her with wild kisses. ",
        "We were down to just a couple of bites when Ruthie and I re-enacted the scene from Lady and the Tramp with a noodle and she gave me a sweet kiss that neither of us wanted to end until we sensed someone was watching us, or rather watching her.\n\n\"That is Celia the third. She is fat because all the women feed her. She wants linguini.\"\n\nI left a last bite with a shrimp for the bear size raccoon and sat on the steps. \n\nShe came to the bowl before I had the chance to put it down so I just held it for her.\n\nRuthie sat next to me and held the bowl for her after Celia finished with mine. Ruthie rubbed behind her ear for a few moments and after both bowls were shiny Celia chirped and went to someone else's yard to beg for food.\n\n\"Helen and James would pitch a fit when we fed her, and when we fed the deer. We claimed that we were not feeding them but they caught us more than once.\"\n\n\"Helen and James?\"\n\n\"Brother and sister, biology people. You will love Helen.\"\n\nWe helped each other up and after taking care of the bowls we went to the shower. We soaped each other then embraced under the shower heads. She got up onto her toes and slid my cock into her. She growled.\n\n\"You just growled at me.\"\n\n\"Did not.\"\n\n\"Did too. You are an animal.\"\n\nI gave her a long kiss that had more than a bit of love in it.\n\nI didn't know why I pulled back but Ruthie pulled me back into the kiss. I took two strokes into her pussy and she growled again.\n\n\"OK, maybe that time, but not the first.\"\n\n\"That was the second time,\" I said as I backed her up to the wall and her lifted a knee as I began to pound into her. That time it was more of a groan rather than a growl.\n\nAfter her orgasm I slowed and asked, \"Have you always been this vocal?\"\n\n\"No, I had never had orgasms like these.\"\n\nI kissed her like I was madly in love with her but again cut it short when I realized what I was doing. She was into another orgasm so she did not notice.\n\nI separated from her and got us out of the shower. We dried and went to bed. I lay on my back and let her decide what she wanted to do.\n\nShe cuddled up to my side and grabbed my still very erect cock.\n\n\"This thing is magical, it takes me places I have never been. So are your kisses. That one during my last orgasm went to my heart. Tell me what you want from me.\"\n\nI wanted to say I wanted a blowjob but I understood what she meant. I remained silent hoping she would say something else. She waited for me.\n\n\"OK, the thing is I could not live in this house, this is Melody's house. Ruthie and I are neighborhood people and we would be happy in a normal neighborhood.\"\n\n\"Agreed.\"\n\n\"I mean you have a complete studio and lord knows how many bedrooms, and...\"\n\n\"I already agreed. A four bedroom has just become available in Cloverleaf One. We could buy it as a couple.\"\n\n\"What? We just met. I mean we like to fuck and hang around but living together is just........\" \n\nI knew it was just panic stammering and that both of us knew better.\n\nShe kissed me and said, \"No, not living together, married, having kids, going to parent teacher conferences, being called grandma and grandpa.\"\n\nPanic said, \"Now you have lost it. How long have you had this delusion?\"\n\n\"Since our first kiss at the biker bar probably. It became crystal clear yesterday.\"\n\nI was fighting my emotions. My brain told me it was a really bad idea but my heart knew it belonged to her and just waited.\n\n\"Let me ask you a question your Mom asked me. Look as far into the future as you can.\"\n\n\"OK, now what?\"\n\n\"Do you see me there?\"\n\nI did not answer; I could not for the life of me answer that. The only thing I saw was her.\n\nShe slid over my body and slid my cock into her then placed her hands under my head and gave me the most amazing kiss anyone had ever given anyone.\n\nI ejaculated into her.\n\n\"You just growled at me.\"\n\n\"No I didn't,\" I said but I suspected I had. \n\nThen she launched her last assault.\n\n\"I love you,\" she said.\n\nI capitulated.\n\n\"I love you,\" I said.\n\n\"I know,\" she said and fell asleep right where she was.\n\nThe next morning felt normal but wasn't. To start with we did not fuck, we were a bit late getting up.\n\nOh, sure her nipples were in my mouth briefly, (I love her tits and she loves that I love her tits), and her hand was on my cock often all day but that morning we did not fuck.\n\nWe were a normal couple going to work.\n\nWell except maybe for the five kisses before we made it from the door of the house to the car. And another three kisses before she got the car moving, and another kiss at each stop sign.\n\nAs we drove to Felicity Music Ruthie called Wendy and asked her to meet her at her shop at noon. Ruthie looked at me and I understood and nodded. \n\nI ran into Sally's and got twenty kolaches and ran out. \n\nI did not see Sally and asked Ruthie who the very effeminate guy that served me was.\n\n\"That is Wedermeyer. We love him but don't go near him, he is very bold. Oh, wait, now that I think about it you have a woman so he will ignore you. \n\nHe used to be a lawyer but after he joined the playhouse group he decided not to go back to the city. He stayed in Felicity and just let his freak flag fly, so to speak.\"\n\n\"What playhouse group?\"\n\n\"Fridays and Saturdays a group of guys put on outrageous plays at the opposite corner of Sally's. Wedermeyer bought the building and lives there; it used to be a hardware store. We will go to one of the plays after we get back from Vegas if you want.\"\n\nI nodded thinking back to the time I was a part of such a group.\n\nAfter she got her car parked at Felicity Music I got a long kiss. \n\nWe became very popular when we went in with kolaches and Ruthie and I had breakfast with ten or twelve people. I had gotten two pineapple pastries just for us and I ate mine a few minutes later.\n\nRuthie and I did not tell anyone anything about the change in our relationship yet somehow everyone knew. \n\nOr maybe everyone already knew except me.\n\nEdie took me aside and told me that it had been the first time they had changed anything just before a concert, (the songs and the song order), and there had not been any tantrums, complaints, whines, anything. Ruthie just said OK. \n\nIf they hadn't known that it was me that caused it they would have sent her to the hospital for tests.\n\n\"Don't get me wrong, Ruthie is always fine, Melody however is sometimes a handful. \n\nWe have not seen Melody. We expected her yesterday as we did the concert, but it was still Ruthie. I don't know if you are magic or if she found someone more important to her than Melody.\"\n\nI nodded to her and told her I hoped it was the latter.\n\n\"We have talked about Melody often and very seriously the last two nights. I told her I would not be able to live in Melody's house, that we are neighborhood people. \n\nShe agreed immediately. I think she is ready to move out of the mansion.\"\n\n\"Really?\"\n\n\"Really.\"\n\nEdie shook her head and began to play the prelude but Ruthie was not there. As she came running in she was taking a bite out of her pineapple pastry and apologizing for being late.\n\nI turned on my mike and said, \"You ate mine didn't you.\"\n\n\"I apologize for that too.\"\n\nEdie began her prelude and Ruthie said, \"Wait my hands are sticky. I apologize for that too.\"\n\n\"And your face is gooey,\" I said.\n\n\"I apologize for that too.\"\n\nI threw her a towel and she said, \"Thank you. But now the towel is icky, I apologize for that too.\"\n\nBy then everyone was laughing their heads off.\n\nNot bad for a very quickly improvised skit.\n\nWhen we did go through the concert it was flawless.\n\nWe went to Wendy's shop for rings during lunch and I went to Janie's and brought back enough food for all of us including Marie and Mo. \n\nRuthie had already picked out a ring before I got back. I suspected she had it picked out long before we met. \n\nMom was there and just hugged me and just hugged Ruthie. We took it as her approval so we hugged and kissed her back.\n\nRuthie asked Wendy to call her little sister the realtor. Ruthie took the phone and walked to the side as the ladies and I talked and ate. It felt like I was with my extended family.\n\nRuthie came back to us and asked Wendy not to put her ring on the display screen until she had it on.\n\n\"Not a problem,\" she said\n\nAfter we kissed Mom, Wendy, and Mo the three of us, Marie, Ruthie and me returned to the studio holding hands.\n\nLater during the first break Ruthie told me we bought the house in the Cloverleaf subdivision even though I had not seen it. \n\nRuthie said she had been in it several times and told me it would be perfect for us, with just a few minor adjustments here and there.\n\nWendy had told Ruthie her ring would be ready when we got back from Vegas but had secretly told me they would be ready in an hour, even our wedding bands. During the second pee break that afternoon I snuck out to get them.\n\nAs we listened to that morning's playback we decided we liked the feel of it much better. Nikki's drumming made a big difference in that one song and we all praised her for it. I got a nod.\n\nNo one had anything to say during our breaks, everyone was satisfied with the concert as it was.\n\nApparently that was a first. Edie and Marie both kissed Ruthie. Edie gave me a big smile and a nod. We got off work early.\n\nAfter work Ruthie and I went to our new house. I was surprised by how large it was and how much yard it had. It was twice as big as my house in L.A., three times bigger if you included the land, and cost less than half the price of mine.\n\nOur realtor Amanda met us there and had Ruthie and me sign a bunch of papers. One of them was a lease for the house; we paid a dollar for it. The lease allowed us to start work on the house and move in before closing.\n\nOne paper was an agreement to sell the mansion. Ruthie did not hesitate to sign it.\n\nWe soon met the contractors Amanda had hired for us. Ruthie told hers everything she wanted for her new music room including taking down the wall between the two smallest rooms and raising the ceiling to make it happen.\n\nThose were the minor changes she had in mind. Plus repainting the whole house, inside and outside. And adding a big sliding glass door to the yard side of the new studio, \n\n\"Other than that I am fine with the house,\" she said.\n\n\"Right.\" I said.\n\nI wanted to have all the exterior doors open out instead of in but noted they already did. It made it more difficult for hurricanes and bad people to bust them in.\n\nMy landscaper was there too and I drew a detailed map of how I wanted the backyard. \n\nOur yard ended where the wildlife refuge began so I was having a section of the fence removed, I wanted as much of the wild kingdom to visit as often as possible. \n\nI had a plan to train Bobbi and Celia on how to find us.\n\nBoth contractors promised they would have everything finished in a week. \n\nWe managed not to laugh.\n\nWe went to the mansion and sat on the swing with Ruthie on my lap. We spent perhaps fifteen minutes on our first kiss then she slid to my side and we talked about our new house. \n\nShe wanted to pay cash for it herself but I told her I had the money to pay cash for half of the house and closing costs.\n\n\"You do?\"\n\n\"Yes, I am not as destitute as I dress. You pay the inside contractor and I will pay the painter and landscaper.\"\n\n\"Deal. Prenuptial agreement?\"\n\n\"If you need it.\"\n\n\"I don't but Carly suggested it. That was years ago after my bank balance got up to incredible. It was part of her lecture on how millionaires are supposed to behave. I told her lesbians do not need them. \n\nCarly told me she was exhibit one on not to being so damn cocky. She had been a lesbian when she met Jimmy; in fact she had represented his ex wife.\n\nConnie had been a lesbian and in a relationship when she chose Joe. Helen had been a lesbian all her adult life until Roger and Leigh was with a partner for most of hers before Corey. All are now wives and Moms.\"\n\n\"You are no longer a lesbian and are going to be married soon, you may want to revisit with her.\"\n\n\"Maybe. But when I asked Carly if she or any of those people had prenups she blushed and said No.\n\nCarly told me you were not after my money and you didn't know I had any until I brought you here. I am fine without one\" \n\nI smiled and kissed her then said, \"Edie thinks I may have inadvertently kissed off Melody.\"\n\n\"Nah, she will show up at eight next Wednesday. We don't need her until then. She might still be there after the show when you come for me but I doubt it.\"\n\nOur next fifteen-minute kiss relocated to the bed. \n\n\"I wonder how things would have turned out had you left that first Monday?\"\n\n\"I would have come back to Felicity.\"\n\n\"You would have?\"\n\n\"Yes, if only to prove to myself I was not in love with you.\"\n\n\"Fat chance of that,\" she said as we began our last fifteen-minute kiss of the afternoon. \n\nWe began our fuck, or rather our loving, two minutes into it. After our orgasms we kissed and cuddled for another fifteen minutes before we got up showered and dressed.\n\nThat night we did make it to Bolero and had a fabulous Paella Valenciana. \n\nWhile we waited on dessert I slid her ring on her finger as I said, \"I love you. Marry me please.\"\n\nI didn't know what to expect but bursting into tears was not on the list. Neither were all the people that suddenly appeared and rushed to us for hugs and kisses, which included Mom, Petra and Sally, Marissa and Janie. All of her friends at the studio were there. Edie prolonged Ruthie's tears as she joined her in them.\n\nI had told my plan to give Ruthie the ring before dessert to only one person, Mom. But Wendy heard it too. Many people later told me that Wendy was the second worst person to tell a secret to after Karen. I later learned Karen was going to be a neighbor.\n\nThe mob disappeared as soon as our dessert was served. \n\nRuthie thanked and kissed me for making the event so wonderful.\n\nI kept my mouth shut.\n\nWe had been at Jana's dancing for about twenty minutes when the spotlight set on us and everyone applauded and chanted, \"Ring, ring.\"\n\nRuthie raised her hand and showed her ring.\n\nWhen the spotlight hit it we heard many \"Oohs\".\n\nThe four small blue diamonds reflected their color onto the bigger diamond and produced an aura of blue through and above it.\n\nIt occurred to me the ring cost more than one month of my salary. I was trying to decide whether to confront her over it when she wrapped her arms around me and gave me a \"forever\" kiss.\n\nThe crowd roared and she began to sob again. Many kisses later she was at a booth with Petra, Sally, Holly, Inga, Jana, Edie and Vicky. A girl I had not met that looked like Jana was introduced as Jana's sister and Matt's wife.\n\nTheir husbands and I were standing in front of them.\n\nMatt, Allen and Rob patted me on the back. I was introduced to Marshall, Holly's husband.\n\nMarshall said, \"She will remember this night as the best of her life and you were the reason for it. Milk that for all it's worth.\"\n\nThe guys all nodded to me and laughed.\n\nThey headed to the bar and I was about to follow but all of them subtly shook their head no so I stayed in the vicinity of Ruthie. \n\nShe noticed and gave me a brilliant smile.\n\nThankfully the guys came back with a waitress carrying a bunch of drinks and Allen handed me a crown and coke. Ruthie got a coke with a slice of lemon and a cherry on top.\n\nI have always been good at remembering names and faces but I was challenged that night, I had at least fifteen names and faces to add to my mental files.\n\nBefore it reached overload Ruthie stood and announced, \"If you will excuse me I need to take him home and fuck him to Moose Jaw.\"\n\nAll the ladies giggled and applauded. I gave them my best \"in fear for my life\" look and walked out with her hand in hand.\n\nWe saw her ring and her name on Wendy's display screen. The name under it simply said, \"Ruthie.\"\n\nThe display became the talk of the town and the center of gossip the next day. Fortunately Ruthie and I remained clueless about that.\n\nThat night I was pleased to learn the way to Moose Jaw was peppered with several orgasms for her and a gigantic one for both of us. We were both asleep within seconds after our arrival.\n\nSaturday morning we met at Jana's Place and had a dress rehearsal. Matt was filming it and I was doing the sound. \n\nIt was my first time to see Ruthie in costume and to me she was just Ruthie in costume. We baited each other as usual as we got ready.\n\nEdie had this otherworldly smile on her face.\n\nI asked Ruthie if her digestive system was OK and she said, \"No,\" and farted.\n\nEveryone moved away as they vociferously complained until Ruthie calmly said, \"I'm better now,\" then gave me a middle C.\n\nI thanked her for her professionalism and she replied, \"You are most welcome.\"\n\nEveryone was smiling and Edie had a big grin on her face as she began her prelude.\n\nI had to adjust to compensate for the sound of the footsteps backstage and the rustle and bustle of the three costume changes but it was easier than a rock concert where sounds appeared out of nowhere. \n\nThe third costume change took a bit longer than expected but Allen covered it with a guitar riff that sounded late sixties. \n\nWe later decided to move that costume change to after the Janis song when Alice and Marie did their second number.\n\nI did write an intro to the Janis song. Ruthie came out and spoke as Allen continued playing softly in the background.\n\nShe said, \"Many people are responsible for my career the principal of which is my Grammy winning sister Edie.\" \n\nI signaled for her to pause, I was sure that Edie was likely to get applause in Vegas. \n\nRuthie had insisted on that line and I was happy to add it.\n\nRuthie nodded and continued, \"But my love of music came from my Grandmom Ruth, the wild woman in the family tree. She had been to Woodstock and had managed to follow the Rock train as it sped through Canada.\n\nShe had seen The Beatles, The Rolling Stones, The Mamas and the Papas, The Grateful Dead,and the Jefferson Airplane when they were at their peak.\n\nBut most of all she loved Janis. I asked her why and she said, \"Because she can raise the hair off the back of my neck.\"\n\nThey had decided to forget what the Holding Company the Kozmic Blues and Full Tilt Boogie did and Allen began with a somewhat David Gilmore riff and Ruthie just blasted away.\n\nAs Ruthie went backstage after the song Edie began the piano intro to Alice and Marie's biggest hit. Melody returned and finished the concert in style.\n\nI was making notes and noted that the two party songs at the beginning needed to be moved to the back end of the concert and that they needed to add at least two Janis encore songs. \n\nI also wrote that a song of lost love that had enjoyed some popularity be sung as Janis would have. Not in her voice, but as a song full of raw emotions instead of a song of regret.\n\nI wondered how many other songs she had that could be done over that way.\n\nAfter the concert the band and I waited for Melody to revert to Ruthie. \n\nEdie came to me and said, \"She's still Ruthie.\"\n\n\"Will that cause trouble?\"\n\n\"We will know on Wednesday but I doubt it. Melody has deep self-doubts but you may have noticed Ruthie does not. \n\nRuthie created Melody because Melody would stand up for herself but that backfired from the start. Melody threw tantrums so I decided I would always call her Ruthie and promised to have her best interest at heart. \n\nStill Melody would be a nervous and demanding wreck for as long as six weeks before a concert. Except this one.\"\n\n\"So it's a good thing I am around?\"\n\n\"Absolutely but I must confess we expected major problems had you left after the first weekend, everyone told us she was already in love with you even then.\"\n",
        "\"So I was hired to keep her sane?\"\n\n\"No, you were hired because two sound men walked out on us. Had you and Ruthie not gotten along we would have still hired you. The guys think you are the best we have ever used and are happy they had Ruthie to keep you here.\"\n\nRuthie came out then and most of us, (Alice and Marie had gone to Marie's house); walked to the Tiki Bar patio and we had fabulous hamburgers for lunch. \n\nRuthie and I sat at a large table with Edie and Allen and Nikki, and Matt. Holly joined us; she was a friend of Nikki.\n\nHolly did not know Ruthie's secret identity. She would figure it out the following Thursday.\n\nAfter a long conversation on the merits of fish tacos Holly sent the conversation in a different direction when she asked Ruthie, \"Well, how was Moose Jaw?\"\n\n\"A very bumpy and pleasurable trip. We may be going to Belize tonight.\" \n\n\"That is a longer trip isn't it?\"\n\n\"Oh, I hope so,\" I said.\n\nRuthie slapped my shoulder then kissed me.\n\n\"Are you two going to the concert in Vegas?\" Holly asked Ruthie.\n\n\"Yes. Isn't that your home town?\"\n\n\"Yes, in fact Marshall and I met there when he went to install smart spotlights for Roger. We wanted to go too but the concerts are sold out. We even have plane seats the boss got for the whole company but Las Vegas is not that big an attraction for us except to see Mom.\"\n\n\"Hmm, I can understand that. Give Sean a chance to talk to Melody. She loves him and she may have a few tickets left. It won't hurt to ask.\"\n\n\"Ooh, thanks. But don't push her too much. Her reputation as a diva is likely true.\"\n\n\"Her reputation as a diva is definitely true,\" I said.\n\nEdie gave me a quick look of panic when I said that.\n\nRuthie slapped my shoulder again saying, \"Don't be mean to her. She loves you.\"\n\n\"OK, true. In fact that may have been the case once but I have not seen any display of that all week. She came to work on time, took suggestions well, and sang her heart out. I'll take divas like that to Moose Jaw any day. Ouch.\"\n\nI got slapped in the arm again.\n\nEdie gave me one of those smiles a person gets when they get away with something they should not have tried in the first place but they might kill you anyway.\n\nAllen said to her, \"Baby, that's your smile for me,\" and kissed her. She kissed him back and giggled.\n\nWe talked for at least thirty minutes before we noticed our food and drink were gone so Ruthie and I kissed our way out and went home, our real home.\n\nAs promised the contractors were there. The wall between the two small bedrooms was gone and they had no ceiling.\n\nWe realized the rooms were not that small at all; Ruthie's new studio was going to be as big as her old one.\n\n\"What are they doing in the yard,\" Ruthie asked me.\n\nThey are pulling up the lawn. It is going to be an all flower and wildlife garden soon with natural stone walkways.\"\n\n\"What are those pipes for?\"\n\n\"Oh, those are the cattle guard. We want the creatures in our yard but not among the flowers. It will be in the ground about twenty feet back from the fence. We will have a covered swing on the fence side of it.\"\n\n\"What are your favorite flowers?\"\n\n\"Hibiscus.\"\n\n\"Let me take you to Martina's yard, Adrian has a maze made up of plants. He has begun to change it every once in a while so we have to learn it over and over. \n\nAll of us hate it that the first to learn the new maze is always Paloma.\"\n\n\"Somehow I am not surprised to hear that.\"\n\n\"There used to be lesbian orgies there on Sundays but not anymore. Now they are in my yard, or Marie and Mo's yard, or Jana and Inga's pool.\" \n\nAs we began to walk up our sidewalk Ruthie began to give me a tour of our loop.\n\n\"Our neighbor to our right is Carly. She is the head of my agency.\n\nThat is Edie and Allen's house on the far side of the circle next to Carly. They moved there a year ago. \n\nThis one next to us is Maggie and Jason's. He is a photographer and they were in Hot Springs for a photo shoot and vacation but when the storms hit last Wednesday they couldn't get back. They decided to stay and look for temporary waterfalls. They will be at the concert.\n\nMaggie plays the piano for Alice and Marie's sessions here during the summer. She is a teacher full time. When you feel comfortable with her ask to see the picture of her sitting at the edge of a small waterfall.\"\n\n\"What is so special about it?\"\n\n\"Well, she is nude and is reaching for a mug of beer next to her. It is gorgeous.\n\nThis house next to hers is Karen's. Both she and Carly are on an European vacation with their husbands and will be back Tuesday. They will be at the concert on Thursday.\n\nMaggie and Karen are sisters and Carly is a cousin. They all look alike at first and in fact look just like Connie and Helen but just pay attention to the number of freckles and the size of tits.\n\nJana and Inga live next to Edie. Edie and Allen have become at ease with the many people trooping through their yard naked. Edie joins us at the pool often, she was a lesbian when she met Allen and participates in the sex often. Maggie never does and Karen rarely does but, Carly, Leigh, and Helen always do.\n\nPetra and Sally live here. Expect them at our house often and expect them nude. Karen has a son so they will keep their shirts on until they get to Maggie's yard. They used to need to keep them on through our yard too; James and Lucy had kids.\n\nI will give Petra and Sally the rules about you when I come up with them.\n\nThe print in the den of a whale surfacing between three kayaks, have you noticed it?\"\n\n\"Yes, I wondered if it was real.\"\n\n\"Very real, Paul and Pula are two of the three people in the kayaks. The video is on You Tube. I would have freaked.\"\n\n\"No you wouldn't, you would have offered it linguini.\"\n\nShe giggled and kissed me then said, \"They live at that corner and their yard opens to Jana's yard. They get a lot of the lesbian overflow. Paula does participate often. Jana and Inga host the lesbian party this Sunday.\"\n\n\"Are you going?\"\n\n\"Undecided.\n\nThis house on the corner is Charles and Shirley. Charles may be the only person on Earth that knows how much money I have. He is the agency vice president and CPA. His wife Shirley is delicious.\n\nThat over there across the street is Martina's house.\"\n\nI was somewhat surprised that we had just walked to the end of our block then turned left and crossed the street. We went in by the yard gate and found a children's wonderland of sorts in Martina's yard. There were kids everywhere with parents and a few grandparents chasing them down. The adjacent yard had a world-class playground in it.\n\nI heard someone shout, \"Ruthie and Sean are here,\"\n\nPeople came out of the bushes, literally, to hug and kiss us. Mom was one of them as was Wendy. Each had a kid in their arms.\n\nWendy had a five-year-old boy named Jim who shook my hand then got down and ran to the swings. A redheaded girl around ten went chasing after him. \"My grandson,\" Wendy said with pride.\n\nI met Roger and Corey, two guys I had heard about and Randy, a guy I had not heard about. It was his wife that was blind although it would take anyone a while of watching Paloma to figure that out. He was the commander of the Coast Guard Station.\n\nA bunch of little girls came to Ruthie and asked her if I was the guy she was going to marry.\n\n\"Yes, I found him and caught him and you can't have him.\"\n\n\"The girls giggled so I said, \"Help me.\" \n\nRuthie swatted my butt and the girls went into uncontrollable giggles. \n\nThey seemed to be between eight and twelve and except for two blondes and a somewhat black girl all were redhead. The oldest two seemed to know Ruthie's secret identity and whined about not being taken to Vegas the next week. \n\nMom put the twin on the ground and almost as soon as she did a red headed boy growled at her and the girl squealed and ran.\n\nAs we laughed Mom took Ruthie's hand and asked, \"Baby planned?\"\n\n\"One, a future musical star,\" Ruthie said.\n\n\"He will be spoiled if you only have one.\"\n\n\"We only have two bedrooms and one will be too noisy for him,\" I said.\n\n\"That huge house has only two bedrooms?\"\n\n\"Oh no, we bought another one, It's at the end of the next street,\" Ruthie said.\n\n\"So you did buy James and Lucy's house,\" Wendy said to us.\n\n\"Yes we did.\"\n\n\"Why?\"\n\nRuthie said, \"It was a negotiated condition. Actually living alone in the huge house made me feel lonely so I was seldom in it. Sean told me it was Melody's house, not mine. He was right.\" \n\n\"There are going to be a lot of naked people walking through your yard every day going to and from Jana and Inga's pool,\" Martina said.\n\n\"We don't mind naked people. Both gates will be green.\"\n\nI had been advised that a green gate meant welcome and clothing optional. Both gates for us to our neighbors were green. They would soon be green on the other side.\n\nI met and talked to Martina's husband Adrian for a while, I was very comfortable talking with him and learned some of the nuances of the neighborhood. \n\nHe told me everyone knew and liked everyone on all three loops of the neighborhood. \n\nHe also told me they had the same security system as The Willows so Ruthie would be just as safe down the next street as she was before.\n\nHe was happy to learn I was going to keep a space open to the wild kingdom but warned me about alligators and snakes and suggested I put a large doggy door or a gate there that could be closed and locked when we were not home.\n\nI tried the maze but the only way I solved it was by following two of the kids. \n\nThe Chief of Police lived next door to Martina and it was her yard that had a large kid's playground in it. Wendy told us that Lucy had given them their playground equipment to join the stuff that was already there and that today was the first Saturday for the kids to enjoy all of it. \n\nShawna was on duty so I did not meet her but did meet her husband Sammy. Like Janie he was deaf. There were over twenty people there between the ages of three to don't ask, but I was the only one that did not know sign language.\n\nRuthie told me classes would resume the second week in August.\n\nI had my first extended conversation with Helen and Leigh, I really liked them. Helen's non-sequiturs were hilarious. Leigh's sense of humor was as dry as the Gobi and also hilarious. Their relationship was more like sisters instead of just neighbors.\n\nHelen had a son everyone called AR; he was the one that scattered the girls. She was taking care of her nephew Jim along with her sister Charley; she lived on the third loop and was there with her two girls. It was her oldest that chased after Jim. Karen was Jim's Mom.\n\nLeigh had twin girls, which I met and briefly carried one until Ruthie stole her from me.\n\nRuthie had a throng of women around her all afternoon\n\nAnd when it was time to go we followed everyone home around the middle loop. Ruthie still carried one of Leigh's twins for her. \n\nShe told me she babysat for Leigh too but seldom for Helen, AR had a grandma on the third loop, Amanda, our realtor.\n\nI learned that Paloma and Randy lived on Martina's street on the other side of Shawna. The house next to them was empty and I was told it was a government safe house. I wondered how safe it was since everyone knew it was.\n\nI figured Helen or Leigh's back yards abutted mine to the back. Their loop had fewer houses but was deeper back because of the entry circle.\n\nI learned that the women that had kissed me at the biker bar my first night, Magda and Rita, lived across the street from Martina. They had kissed my cheek when they saw me and gave Ruthie a soft kiss on the lips.\n\nThey wore rings by Wendy.\n\nAs we returned to our house Ruthie said, \"Yes, we are neighborhood people and we love our neighborhood people. Thanks for making me see that.\"\n\nShe gave me a long kiss in the middle of the sidewalk.\n\n\"Hey, take that home,\" we heard Allen yell.\n\n\"We can't, there are people tearing out house apart,\" Ruthie answered.\n\nEdie looked stunned then ran to us squealing and just devoured us in kisses. \n\nAllen hugged us and said, \"We were worried about who our new neighbors were going to be and I see we were justified to do so.\"\n\nI was the only one not to slap his arm. It was a good line. \n\nThey led us to their home and we visited for a while then Ruthie and I went to Melody's. We showered and dressed then met Allen and Edie at the String of Pearls.\n\nThey told me about the other performers in the Felicity Music stable and the only one I had ever heard off was Erato. \n\nAllen and I listened to the ladies gossip for a while then we talked baseball and praised the shape of our respective team's ownership as we watched a Rangers vs. Angels game on the bar's TV. We had a fine visit with each other and I felt like I had become a part of their close friendship.\n\nBefore we separated Edie gave me a long sweet kiss and said, \"You two bring out the best of each other. You belong together. She gave Ruthie a longer kiss and told her the same thing she said to me.\n\nAllen shook my hand and simply said, \"Welcome to Felicity.\"\n\nLater that night Ruthie asked me if I liked Allen and Edie.\n\n\"Yes, very much. They may be among my top five or six favorite people. Allen is already likely my best male friend.\"\n\n\"Who is your favorite female best friend?\" Ruthie asked.\n\n\"You but that is temporary, you are going to be promoted I'll have to think about that.\"\n\nTwenty minutes later after I had cum in her Ruthie said, \"Welcome to Felicity.\"\n\nI felt myself blush but had no idea why I did.\n\nWe began Sunday with a long leisurely fuck. We had fruit loops for breakfast then fucked again, that time in the patio. \n\nWe watched a possum leisurely walk across her yard.\n\n\"James told me they have more teeth than any other mammal but even though they show them when challenged they seldom bite. He also said they are very mentally challenged. Well, he said they might be the second most stupid creatures behind porcupines. We have those too. Karen has a possum that sometimes lives in her yard.\"\n\nWe talked for a long time about creatures and our new yard and the furniture she would be taking to our house. I told her all I had that I wanted to bring to Felicity would fit in her SUV. \n\nRuthie had pretty much decided to give the bulk of her stuff to the women's shelter. Five of the ladies had a second house built behind the first with a plaza between them. It was almost done and would need furnishings.\n\nI later learned that Ruthie, Martina, Helen, Marie and Wendy were the principal supporters of the shelters along with someone called Janice that now lived in Italy. Most women in the town also supported the shelter. Sally, Doris and Martina had been residents.\n\nAround noon we took a shower, dressed comfortably, then walked to Wendy's house for lunch with Mom and the other ladies. Allen and Edie joined us as did Rob and Vicky and their kids. Their daughter Fay Marie was six and their son Robby four. Helen, Roger, and AR joined us and so did Leigh and Corey and their girls Sandra and Valerie.They were almost four they insisted.\n\nI was impressed that although the women had the option to attend the orgy at Jana and Inga's they chose to attend a family get together at Wendy's instead. It occurred to me all wanted to see by themselves that Wendy was OK.\n\nAll the kids immediately ran to a pond at the back of the yard and sat on three benches. \n\n\"There are several stingrays in there and the kids love to feed them. There was a shark but he left during the last high tide,\" Wendy said.\n\nMom said, \"There is a small barracuda in there. He jumps out of the water for the food.\"\n\nI excused myself and began to walk towards the kids and Allen and Roger joined me. Rob and Corey came down a few minutes later and brought us adult drinks.\n\nThere was a large triggerfish in there that Roger said had been in Jim's tank in the house but had become too big and too much of a bully so he got dumped out here. \n\n\"That was over a year ago and he has adapted well. He is still a bully but here there is enough room for everyone to get away. Jim did confess to me that what he really hated about the trigger was that he kept moving the coral rock around and redecorating the tank.\"\n\nWe laughed and opened the fish food bins to feed the fish and got the barracuda to jump.\n\nThe guys and I had a good time with the kids and the fish and stayed there until we heard lunch was ready.\n\nMy steak was exceptional and I thanked Mom for it.\n\nShe said, \"You are welcome but it was your fiancee who cooked it.\"\n\nI was more than a bit surprised; I didn't think she could cook. I gave her a long kiss until Edie told us we were ruining everyone's appetite.\n\n\"Surprised?\" Ruthie asked me.\n\n\"Everything else about you is so delicious it never occurred to me you could cook too. We need to go to the grocery store.\"\n\n\"Don't get carried away. You already know many people that are much better cooks than me.\"\n\nI began to tell her about nude cooking being a turn on but I reminded myself there were children present. But then reconsidered and told her anyway. She smiled.\n\nAfter lunch Mom took me aside and told me about their trip to visit Wendy's husbands grave.\n\n\"Paloma told Wendy to talk to him, to tell him how pissed she was he had left her. Wendy had difficulty at first but eventually all her anger came out in torrents until she was sobbing. \n\nPaloma then said to tell him how much she still loves him. All her love for him spilled out including some racy incidents that we will tease her about before long.\n\nPaloma told her tell him how much she missed him.\n\nBefore Wendy began she was suddenly listening.\n\nPaloma whispered, \"He is talking to her, he is here.\"\n\nWendy fainted and the five of us just managed to keep her from hurting herself. We got her home and she has been nearly her happy go lucky former self since then. Mo thinks her sister is back. \n\nWe have managed not to ask what happened so we do not know if Paloma was right and he had talked to her. All we know is that Wendy is OK now. I am assuming she got the same lecture I got from your father.\"\n\n\"Paloma is kind of spooky,\" I said when she was close enough to hear.\n\nShe gave us a witch's cackle and Mom kissed her hard on the lips. I hugged her with love.\n\nDuring the afternoon I could easily see the close bond Allen and Helen had with Wendy. Allen called her Mom at times and Wendy seemed to love it.\n\nSeveral had intimated that Allen and Helen were the new improved versions of Wendy but I did not see that for a couple of months. As it turned I had severely underestimated the intelligence and talents of all three.\n\nRuthie and I stayed at Wendy's until we were the last two with Mom and Wendy. I gave Mom the two tickets to Melody's concert with the back stage passes and said, \"The other one is for Sis. Tell her she will meet my fiancee when she joins us. She can have the room I had reserved for us at the Bellagio.\"\n\nMom confessed that Wendy had told her Ruthie's secret when I moved across the willows. Wendy though it was OK since she was going to be Ruthie's mother-in-law.\n\nRuthie and I gave them loving kisses and walked home.\n\nNeither of us felt like fucking that night but we held each other tightly as we kissed our way to sleep.\n\nMonday morning we made love and dressed then we stopped at Sally's bakery and got kolaches and kiss assaults for breakfast. We went to the city to get me two suits, a sports coat and some dress shirts. \n\nRuthie bought new shoes. She said she did not need them but they were cute.\n\nWe got back in the early afternoon and went to an office on the boulevard and I gave Holly two tickets to the Melody concert. Holly kissed me right on the lips and told me to thank Melody for them. \n\nPetra and Paloma demanded homage so it took us a while before we could leave. Adrian did a very fine, \"What's all this then,\" British bob impression and Ruthie and I were released. He then kissed Ruthie on the cheek and shook my hand."
    ],
    "authorname": "jjcolejr",
    "tags": [
        "romance novella"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/felicity-ch-34"
}