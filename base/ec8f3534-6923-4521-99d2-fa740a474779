{
    "title": "Play Testers Wanted Pt. 10",
    "pages": [
        "This one took on a life of its own. I sketched out critical scenes I wanted to make sure were written and followed a logical sequence of events. Pfft!! As always, I begin writing a scenario and whoosh, I am off into the Unforeseen Country. I am like where the hell did that come from? I am forced to ask myself critical questions. Is it cool? Does it add to the storyline without wrecking it? Is it visual or have a heavy sensory component to it? If it fits one or more, I'll likely keep it. This is going to come in four rapid fire posts, ten through twelve. The whole thing is over 120 pages, so I am going to post one part a week for three weeks. \n\nEnjoy. Vote. Comment. \n\n*****\n\nTraining Day:\n\nAoki and Kyanna were sharing a bath while I showered. I had never dated two women at the same time, but it was clear that is what was happening. I glanced down at my upper thigh where the robotic arm had extracted the tissue and bone sample. The deep bruise was almost gone and after only ten hours. I touched it gingerly at first but when it didn't hurt, I washed it to remove the remainder of the chemicals that had been sprayed on it.\n\n\"Hey Booker,\" Kyanna called out.\n\n\"Yeah?\" I replied as I turned to face the tub.\n\n\"What are you going to do after this... I mean the playtesting.\" She said her voice faltering.\n\n\"What she wants to know is if you'll still want to hang out with us.\" Aoki giggled and I felt the same fear of loss.\n\n\"I've grown quite attached... what I mean is...\" I stammered and I heard the dual splash as they left the tub and crowded around me. \"I care about both of you and...\" Kyanna kissed me into silence and then Aoki took her turn to kiss me after that. \"I still want to finish the Marvel Vs. Disney Princess, I hope that doesn't come off as selfish.\"\n\n\"We understand,\" Aoki giggled. \"If I had the chance, I'd be on that in a heartbeat.\"\n\n\"Same here,\" Kyanna said and then bit her lower lip. When I asked her, what was bothering her she jumped up and down and I couldn't help but smile. \"I was accepted into the US lightsaber team!\"\n\n\"Huh?\" I said and Aoki knew all about it.\n\n\"The French made lightsaber dueling an official Olympic event this year. The world is snatching up the best duelists for their teams. I'm surprised they haven't approached you yet.\" Aoki explained with a puzzled expression. \n\n\"Maybe we just missed each other,\" I stated and wondered if working for Numenor disqualified me.\n\n\"You know what,\" Kyanna said excitedly brainstorming. \"We could open our own dueling school. \n\nMaybe Kat would sponsor us... I mean if you'd want to...\" I kissed her into silence this time.\n\n\"Speaking of Kat. Have either of you seen her?\" Aoki asked and I felt a sudden pang of guilt tinged with fear.\n\n\"Crap,\" I cursed. \"Listen, I need to make sure she is okay. I'll catch up with you in the cafeteria or worse case in game.\"\n\nI rinsed, dried off, and dressed. I took the elevator down to the sublevels. I moved quickly and quietly to my old room. It didn't appear to have been reassigned. I slipped in silently that came from so many hours skulking around in game and with a marriage of practice and muscle memory. Many of the other play testers still slept and so I went cautiously. I tried to remember what part of the wall the wet footprints had led to. \n\n\"Booker? What are you up to?\" Surfer whispered manifesting without warning.\n\n\"I want to make sure Kat is okay. If anything happened to her, I'll never forgive myself.\" I said and I saw the A.I. thinking over whether to help me and add to that her unbidden manifestation I was painfully aware of her strange behavior. I was about to ask her what the fuck was going one when she cursed.\n\n\"Damn it!\" She said and a hidden door slid silently open.\n\nI heard voices speaking and one of the them was Kat. I followed Surfer's avatar down the empty hall to an empty room. The dim illumination given off by Surfer was more than enough light for me to see by. It was a large room and it was clear by the scratches along the walls and floor that it had been cleared out quickly and recently. Some of the paint was flayed and the metal beneath gleamed under Surfer's radiance. What the hell was going on in here? The next two rooms were much the same as the first with damaged walls and floors, but in the third room there was the faintest hint of that chlorine smell I had woken up with before. I heard Kat speaking in hushed whispers with someone else, a male voice I didn't recognize.\n\n\"Did you hear something?\" Kat asked.\n\n\"He's right on time,\" the other replied. \"I'm sorry.\" He said and I felt he was addressing me. The overhead lights came on and instinctively I looked up. Those same lights began strobing at a fast-intense rate. I lost control of my body. There are two types of seizures. In the old days they called them Grand Mal and Petite Mal. Grand Mal are the ones you see in the movies where the person drops and flops. I was subjected to the second type, what they call a 'partial complex' seizure. It can manifest from the weak end with mild auditory or visual hallucinations to the more severe fugue state where you just go away and lose X amount of short-term memory. The victim of these types of instances usually get used to it and go back to the last thing they can remember to figure out how bad the seizure was. Low end memory loss can be as little as an hour, but on the high end it can be as much as seventy-two hours. There can be flashes of events that occurred during the seizure, but they feel more dreamlike than true memory. \n\nIn my case I went away. I don't remember my body hitting the floor. The rest are obscure bursts of images, smells, and pain. I am on my back looking up at the blossom shaped surgical lights. I hear Kat crying off to my left. I feel wet and smell that distinct chlorine scent. I see a bright red laser line painting my left arm just below the elbow. I feel sick to my stomach and my arm burns. My body is hovering in fog and It feels like someone dumped ice water into my veins. Then the male voice returns out of that fog.\n\n\"Test. This is a test. Remember that... a test.\" \n\nI felt like I was falling. I didn't hit bottom, but the sensation ended. I was surrounded by darkness. I could see, was I in the game? To see if I was, I tried pulling down my HUD and saw that my equipment was once again greyed out, but all my abilities were accessible. This was a test. I went to task and used far sight to see where the hell I was. I was in interstellar space. The asteroid I was trapped inside was slowly tumbling towards a structure off in the distance. It looked like a lighthouse after a fashion.\n\n\"Fuck you asshole!\" I cursed and tried to teleport to the structure. Nothing happened. I tried folding space but that failed as well. \"Fine. I'll have to dig my way out. Let's see what I am dealing with.\" I growled as I scanned the properties of the asteroid. It was composed of equal parts 'unknown element' and meteoric diorite. \"Great!\" I snarled. Diorite was just this side the hardness of diamond. The only reason I remembered was when mom talked about replacing the kitchen counter tops with it. I did research and wondered at the time how the hell she could afford it. She never did say. I couldn't attack the diorite with my spells since I would be at ground zero, but I could remove the unknown element to my heart's content.\n\nI used the spell for mining and attacked the main mineral content inside my prison. I had to shift to gaseous form to keep from being covered in the strange dark powder. As it filled the empty pocket, I added the 'strange alloy' to my inventory so I didn't drown in it. Once I had mined all the strange alloy from the asteroid I went on the attack. The diorite resisted my best attacks. While I waited for my meters to recharge, I pondered how the hell I was going to escape before the asteroid smashed into the lighthouse.\n\n\"I am so fucking stupid!\" I said as I remembered something my dad had taught me. \"Place a firecracker in an open palm and you get singed a bit. Close your hand around it and you'll lose fingers from the same explosion. I am going to crack this fucker like an eggshell.\"\n\nI would try and use Force burst but in reverse. Instead of building up a compressed ball of telekinetic energy I was going to fill this space until it popped. I remained in gaseous form so I could survive the explosion to come. I built up the energy slowly and once it was full, I added more and more. It felt like taking a garden hose to a balloon. It can only hold so much water before it burst. The same was true of the asteroid. It shook like a bitch until finally the structural flaws gave way and the rock split into seven pieces that flew off in different directions. \n\n\"Yes!\" I exclaimed when I pulled down my HUD and had access to all my equipment. \"Let's take a look, shall we?\"\n\nI teleported to the lighthouse. I looked up the configuration and Surfer came back with a hyperspace warning beacon. These were towed into place and anchored around anomalies or dangers that pilots should avoid at all costs. I couldn't get in, but I did notice the strange space nearby that when I scanned it came back as an erasure anomaly. What the hell did that mean? I received a message from Aoki and Kyanna. They were in game and waiting for me aboard my ship. Their names triggered something. I didn't remember logging into the game. I was just suddenly inside the damn asteroid. I remembered being in the shower with them and then nothing. No there was a hint of something. Fog and a bright glowing flower. My left arm twinged as if an electrical current ran through it or I had hit my funny bone. It wasn't painful just annoying. I flexed my fingers and wondered if it was just a glitch. My biggest problem was more urgent did I use my Ghost Fire persona or Katria? As if on cue a wave of dizziness slammed into me and I nearly let go of my grip on the lighthouse. You know that sensation when you get up and walk into a room and can't remember why you did it. This was that except I didn't remember getting up.\n\n\"How the hell did I get here?\" I muttered to myself. \"Left hand... what about it? Must be a minor glitch. I'll remember it or not. Fucking nightmares.\" I murmured as the memory proved elusive. \"Damn, I just can't remember! Back to the things at hand. Surfer? What should I do?\" I asked and she manifested next to me staring out at the wonder of the view.\n\n\"Nice isn't it. Do? Please specify.\" Surfer requested a bit stiffly.\n\n\"Ghost or Katria?\" I asked.\n\n\"I already informed the ladies that Katria was going to help them out.\" She stated with a wistful smile.\n\n\"Katria it is. Can you transition me?\" I asked and she bowed low.\n\nI was back in the white room with a ten second countdown. The last of the unease seemed to melt away. The clock reached zero and my eyes opened. I was staring up at familiar surroundings. There was a naked body next to me under the covers. I shivered and clutched my left arm. What was that? I turned my head and spied the heavily tattooed shoulders and lekku of Whisper Shadowborn, formerly Darth Talon. We chose a new name since she'd be existing outside her normal timeline and we didn't want to create continuity errors. I looked to the other side and it was just me and the Lethan Twi'lek in the bed.\n\nThe cabin door opened, and I was happy I had shut off the comic book features which added thought bubbles and crazy sound effect tag lines to everything. Aoki's avatar, a sapphire skinned Twi'lek, stuck her head in and informed us that the ship would be dropping out of hyperspace soon. I pulled down the covers and slapped Whisper on the ass rousing her. She let out a long sensuous moan as she thrust her ass upward and brought her knees up.\n\n\"Again,\" Whisper tittered. \"I dare you to slap my ass again!\" I cupped my hand and pulled back slowly. Crack! The slap that was heard all the way to the cockpit. \"Yeah! I am up now!\"\n\nWhisper sprang into action and pinned me to the bed. She kissed me fiercely and left me breathless as she disengaged and headed for the shower. I watched her saunter away and purred. Being a Cathar she heard me and beckoned me to join her. I did. A shower and a nutrient bar later and all of us were in cockpit watching at the luminescent cloud before us dissolved and we reentered normal space. The blue-green world before us resonated in the Force. \n\n\"Welcome to the planet... Alpheridies.\" Kyanna informed us. \"Never heard of it.\"\n\n\"Neither have I.\" I admitted. \"It is strong in the Force though. A perfect place to train if they'll give us leave to land.\"\n\n\"I am sure they will,\" Kyanna said as she triggered the ships communication array. Her avatar was a member of the Mirialan race, near humans with their green skin, long black hair, and face bearing small geometrical tattoos. \"We are receiving a message.\"\n\n\"Unknown vessel, what is your reason for coming here?\" A strong male voice came over the speakers followed by pops and mild distortions.\n\n\"The is the Ivory Wraith and I am looking for a place to train my young apprentice in the ways of the Force. We seek shelter on your world for a time. We mean no harm.\" I said and as I felt a thousand minds reaching out as one to sense our intentions. I endured it and felt their grudging admission that we meant them no harm.\n\n\"We don't get many visitors.\" The voice returned. \"We will give you coordinates to a place where you may stay until her training is complete.\"\n\nI was about to thank them but Kyanna shook her head. They had already cut off communications. We followed the coordinates down to the surface and as we flew in on final approach there were no cities that stood out or any large structures to speak of. The planet was as wild as if it were uninhabited. We set down on a shelf of rock near a cave opening. The surrounding area was an orchard of fruit trees. Well, at least there was food. Kyanna powered down the ship and we decided to explore the cave to see if it were habitable. We unpacked spelunking equipment and headed out eager to see this new world.\n\n\"Will you look at that!\" Aoki said pointing to the deep etchings on either side of the cave. \"They look like lady justice, blindfold and all.\"\n\n\"Now, I know where we are.\" I stated. \"The Miralukans live here.\"\n\n\"Never heard of them,\" Kyanna chimed in.\n\n\"They are physically blind but perceive their environment through the Force. The entire race is Force sensitive.\" I said. \"No wonder they weren't expecting visitors. Few even know this planet exists.\"\n\n\"Let's see why they chose this spot for us to train.\" Aoki said and we entered the cave. But it wasn't a cave, it was a tunnel. A tunnel that led to an entire living area that appeared to have been abandoned for centuries. In the center of the enclave was a single tree and I felt its power before we even left the tunnel. \n\n\"Whoa! This is a sacred space, treat it like one.\" I stated.\n\n\"You that calls yourself Katria, come forward.\" The tree said touching my thoughts. I did and the others hung back. \"Place your hand upon my trunk so that we can know each other better.\" My hand was shaking as I raised it and touched the silvery grey bark with my open palm. The rush of images was staggering. I saw the tree being planted by two shimmering figures, Celestials the tree explained. They had fashioned the tree as a living holocron. It learned from Force users that visited it and it in turn passed on its accumulated knowledge to them. \"You are in balance. The Je'Daii are extinct. I will accept you as my padawan. I will teach you even as you instruct them.\"\n\n\"Yes, my Master.\" I agreed gleefully. \"Let's get our shit stowed we have some training to do.\" I said as I turned to face the others.\n\nThe enclave could easily house dozens of Force users. We searched it for the best place to settle ourselves. The interior had once been a natural cavern but that was centuries ago. The Miralukans had shaped the stone using the Force creating a natural flowing creation. One room merged into a serpentine tunnel and on either side rooms, chambers, and spaces for storage or allowing airflow to give the entirety an unplanned yet organic feel. There were two sources of water for the area. One of them was a waterfall that fell from above the enclave and allowed for natural showers and a source of drinking water. The other was an underground hot spring that surfaced in a carved bath.\n\n\"One that calls herself Katria, I require your presence.\" The tree called. I was near the top of the enclave, easily forty feet from the surface of the great hall as I thought of it. I hopped over the railing and landed quite easily with very little use of the Force to soften my landing. \"Impressive. I have set your other companion, the scarlet one. She aids me of her own free will.\"\n\n\"Of course, she does.\" I said. \"What do you need?\"\n\n\"Show me your lightsaber,\" the living holocron asked. I took out the weapon that Whisper had made for me. \"Interesting. You didn't fashion this weapon.\"\n\n\"No. It was a gift lovingly crafted as you can perceive.\" I replied and I felt the Force flow over and inside the lightsaber. It broke apart into its components and I was surprised to see two crystals inside of it. One was a deep green crystal while the other was an unusual silver gem. \"Interesting indeed. Natural silver crystals are rare, exceedingly so.\" The weapon flowed back together and settled into my hand. \"You will use the training holocron in your possession to show me how quickly you learn a new fighting style. I will monitor your progression. The Mirialan will teach the Twi'lek the first three forms of combat. I will judge all of you and reward you as I feel you deserve. You may begin when you are ready.\"\n\nI dove into the training provided by the Svartalfar battle master. He was brutally demanding but I refused to give up. As with all things the dark elves developed their martial skills as a blend of power and beauty. The actions might appear similar, but the muscles used were different and left me sore and in need of a good soaking within the enclave afterwards. I wasn't the only one. The tree was equally demanding of the others. \n\n\"And that was just day one,\" I muttered at one point.\n\n\"What are you doing?\" Kyanna asked. \"I peeked during one of my breaks and didn't recognize that sword style.\"\n\n\"I found something akin to a holocron and am trying to master it.\" I said being deliberately vague.\n\n\"It is pretty to watch,\" Aoki said. \"I managed to levitate two rocks today.\"\n\n\"Excellent, if you have the strength and patience try a few grains of sand,\" I suggested.\n\n\"Sand, that'll be easy!\" Aoki exclaimed and then looked at Kyanna. \"Have you ever done it?\"\n\n\"Honestly, no, but let's give it a try.\" Kyanna said and looked over a cracked stone and some rock dust near the break. She blinked a lot and her face showed strain as she focused.\n\n\"You are trying too hard,\" I said soothingly. \"Relax.\" I offered as the dust rose up and formed several configurations as I levitated it. I let the dust fall to the ground.\n\n\"Just when I thought I've figured you out, you do something like that.\" Kyanna laughed. \"What is the most weight you've ever lifted at once?\"\n\n\"To solve a puzzle, early on, I lifted six multi-ton obelisks, and moved them to new positions. I learned later there was a hidden control panel to shift them using that. I felt so damn stupid.\" I said and missed their shared expressions of awe. \"My second instructor was impressed since he was watching at the time.\"\n\nWe had our evening meal and I meditated until my stamina was fully restored. I continued training as they slept. I added a second weapon to my form before they woke up that morning. I was meditating when they woke up. I ate with them and learned I needed to craft an energy shield to move onto the next level of training. I never used a shield in combat before. I showered and changed before taking the schematics from the crystal to the crafting station onboard my ship. Whisper had been busy working for the Tree and when I walked onboard, I found out what she had been up to.",
        "\"What the holy hell Whisper?!\" I gasped in surprise.\n\n\"Tada!\" She said with a dramatic gesture at the eight-foot-tall tree that was ensconced about midship in a bed of dark earth taken from depths of the enclave's tunnels. \"It grows fast.\"\n\n\"I can see that.\" I remarked at the tree. \"Why is it here?\"\n\n\"To preserve my knowledge.\" The Tree indicated. \"I have had a vision. This world is doomed, and I took action to save what I could.\"\n\n\"What about the Miralukans?\" I asked and I felt the tree chuckle.\n\n\"When the time comes you will make that decision.\" It replied coolly. As a living holocron it was a servant of the living Force. Life and death were natural occurrences and so were no true concern. However, the knowledge it carried of the Force was priceless. I didn't have to agree but I understood. I'd do what I could to help them before we left. I walked by the tree and felt upset that it hadn't asked permission. It just assumed I'd agree. I pushed out my bruised ego. The tree had been planted here thousands of years ago by living embodiments of the Force. I now had a sapling on my ship. I should be thrilled. \n\nI reached the workstation and plugged in the schematics. I opened the file and found that not only could I not make it I wasn't even close to fashioning one. I just wasn't skilled enough to fashion a dark star alloy shield. I did the only thing I could think of, I went through my stores and built the best one I could. In my case it was a Vibranium shield powered by a red Kaiburr crystal. I had plenty of those.\n\n\"Sweet!\" I said as I activated the shield and it appeared on my right wrist. The air in front of it shimmered in a pale crimson concave disk. \n\nI returned to my training area and attacked the next regiment using three Marksman-H remotes to bolster my training. They were the same grey spheres Luke Skywalker had used aboard the Millennium Falcon way back when. I was rough on them but not half as harsh as Kyanna. She destroyed all three of the ones I activated in less than an hour. After she reflected a stun bolt back and shattered the first remote, I watched her technique closer. Her form was perfection and when one of the drones fired a bolt at her she angled her lightsaber blade and I spied a sudden flash when bolt and blade connected. The returning energy had changed color. The remote was destroyed and she smiled when its parts fluttered to the ground.\n\n\"Surfer replay that last movement sequence. Slow it down and focus on the contact point with her blade.\" I ordered.\n\n\"Yes boss,\" Surfer replied. \n\n\"I wasn't mistaken,\" I said, and Surfer just hummed to herself. \"She's developing her own advanced technique. Clever.\" I called out to Kyanna. \"I'll be in the ship if anyone needs me.\"\n\n\"Why?\" Kyanna asked as she deactivated her weapon to focus on Aoki's training.\n\n\"To build a better training remote.\" I said and she laughed.\n\nI stood before the forge and pulled up the schematics of the Marksman-H Remote. With a touch the hologram exploded revealing all its component parts. I dropped the necessary credits to be able to improve the patented device. I began with just the exterior. All we needed was something that could take a solid blaster shot or two. With a little tweaking I was able to increase the size of the drone's power plant and add a small shield generator. That ought to do it. I fashioned three of them and saved my progress and renamed the new droid the M1 series.\n\nThey lasted a week before she was knocking them out of the air. Kyanna saw it as a challenge. I accepted. I attacked the armor, weapons, and shields of the remote. The M2 series was born. The sphere was twenty percent larger, so it became a bigger target. The shielding was stronger as was the exterior, but I knew better than to think they'd withstand her attention for long. While she beat and battered them, I meditated on their ultimate form. I threw out everything but the basic concept of a sphere-shaped droid. They would no longer be simple dumb remotes they would be true droids with their own personalities. They would have specialized functions and the M3 series was born. They were more expensive to craft but in the end, they would be devastating and be far more than simple floating targets. \n\nI trained during the day and meditated for a week solid building and rebuilding the droid in my mind. In the end I had something I would use daily. I revealed them in the middle of our third week of training. I spent eight straight gaming hours fashioning the guts and shells. It took another two assembling them. I sacrificed three red Kaiburr crystals to power them. It was a seriously drastic design and I patented the schematics for all three droid designs. The M3 Mark One had the most sophisticated sensor array and was designed for tracking. The M3 Mark Two was meant for slicing security systems and hacking data cores. Lastly was the M3 Mark Three model and the sniper droid that could hit a target from a great distance with ease. Last was the Mark Four, the tank. It had the best armor, an autocannon feature, and the coolest paint scheme. They all had shields, improved propulsion and combat programming, and lastly, they were silent and possessed stealth fields to cloak them. \n\n\"Who is ready for a duel?\" I said challenging both Aoki and Kyanna.\n\n\"He's up to something, I can sense it.\" Aoki laughed.\n\n\"I know he is,\" Kyanna smiled. \"Both of us against you?\"\n\n\"Sort of,\" I said as I strapped on my holster. I tapped into the droids and had video and audio feed from them fed to my mask. It restricted my lower field of vision, but I'd risk it. \"What do you say?\"\n\n\"Let's do it!\" Kyanna grinned as she picked up her weapon and ignited it. We formed a triangle and faced each other. \"Something is wrong.\" She whispered to herself. \"I sense something...\"\n\n\"At the count of three,\" I said watching the Mirialan tense and the Twi'lek's hands drift to her own blasters. \"Three... two... one... get 'em!\" I said and the droids peeled off and took up targeting solutions on the pair. \n\nKyanna raced towards me and then at the last second her intuition warned her, and she partially dodged the stun bolt from one of the invisible droids. She cursed and reached out to try and sense the location of her unseen foes. Her blade came up and deflected the next stun bolt that sped towards her. Aoki was a whirling blue she-devil. Bolts of energy sped at her but failed to reach her. She drew her guns and fired at the droids and me. I dodged her blaster fire and returned fire. The predawn atmosphere lit up with streaks of energy speeding at their targets. Kyanna managed to strike one of the droids with her blade and immobilize it per its programming. It loudly powered down and she focused on the remaining two.\n\n\"We need to talk after this,\" Kyanna giggled as a stun bolt struck her left breast and she hollered. She tried to use Tutaminis to fight off the effects of the bolt but was only partially successful. Aoki saw the source of the bolt and fired but the droid had already moved to a new location.\n\n\"Need to focus,\" Aoki growled as she closed her eyes and used her newly acquired skill Force sight and reached out. The Force showed the hidden droids and with an amazing gymnastic vault and midair spin she fired both weapons and knocked out her targets. My stun bolt caught her before she hit the ground and she tumbled harshly to the hard earth. \"Fuck!\" She cursed as her left shoulder was dislocated. I rushed over and healed her.\n\n\"My bad,\" I said, and she shook her head.\n\n\"No, but I got three of them,\" she gasped as I reset her arm and sent soothing healing energy into her and then Kyanna. \"So, that is what you've been working on.\"\n\n\"If those were firing lethal energy we'd have been in a real bad situation.\" Kyanna gasped. \"Glad they are on our side.\"\n\n\"Twi'lek, approach me.\" The tree called out to her. \"You have learned not to trust your eyes. Well done.\" It rewarded her with advanced Force sight for her hard work. \n\nI reactivated the droids and put them on patrol mode while we ate breakfast and meditated. The M3's pushed us even harder and I heard few words of complaint. The days slid into weeks and so on until six months passed. I had finished my combat training and I turned my attention to Aoki and Kyanna. Aoki was a quick learner. Her natural agility shone during our sparring sessions. Kyanna was on another level entirely. She possessed a natural gift for sword play and learned and mastered the last two forms in the time it took me one. Granted the Svartalfar was, in my humble opinion, the most difficult and physically demanding of any form I had learned so far.\n\n\"Are you going to teach me?\" Kyanna asked one night as we soaked in the pool.\n\n\"What... form eight?\" I replied and her eyes narrowed.\n\n\"Yes, form eight... Master Katria.\" She laughed.\n\n\"If I do, you'll only be the third that I know of who knows it.\" I said. \"You are shooting for the title of Battle Master, aren't you?\"\n\n\"Damn straight! There is a war coming and you know it.\" She said staying in character.\n\n\"War?\" Aoki asked as she stripped and slid into the water. \"I heard rumors, but the Jedi Council hasn't said anything.\"\n\n\"They are staying out of it. They don't want us to fight or take sides.\" Kyanna growled. \"I've had a vision that the Mandalorians are going to attack the Republic.\"\n\n\"I will meditate on this.\" I said. \"After I finish soaking.\"\n\nAfter our meal they slept, and I prowled the area exploring as I had before on those rare nights, I had the energy or time to do so. While at first glance the surrounding area seemed somewhat bleak with marginal plant or animal life, I had grown to love its simple beauty. I closed my eyes and tapped into Force sight and viewed it as the Miralukans did. It was only then that I noticed the girl hiding in a niche of rock above me. The twenty-foot distance was no challenge to me, but I didn't want to frighten her.\n\n\"May we speak?\" I called out as I looked directly at her.\n\n\"Yes.\" She replied. I leapt up, caught hold of the rocky ledge with fingers and claws, and somersaulted forward to land on my feet behind her. \"What are you and why are you naked?\"\n\n\"My species is known as the Cathar, we are a feline species.\" I explained as she cocked her head and watch my tail swish through the air.\n\n\"Your aura is strange,\" she said. \"How do you do that?\"\n\n\"Balance,\" I explained as she walked up and stroked my ears gently. I purred as I had long ago discovered, my ears were about as sensitive as my nipples. \n\n\"You are easily aroused,\" she giggled.\n\n\"Katria, my name is Katria.\" I introduced myself and she hesitated. \n\n\"Bisieth,\" she said almost reluctantly. Her hand left my ears and casually stroked my ass and tail.\n\n\"Um, we don't know each other well enough for that.\" I moaned. She let go and I let out a frustrated groan. \"Do you want to meet the others?\" I asked.\n\n\"Nope, I've met Twi'lek and Mirialans before. I was just curious about you.\" Bisieth declared and appeared to be ready to depart.\n\n\"Why does no one train here any longer?\" I asked and she stopped cold in her tracks.\n\n\"Train. We have no need of this place,\" she lied, and it was obvious.\n\n\"But the tree,\" I said, and her head came up and her posture shifted.\n\n\"The tree. You speak with the tree?\" Bisieth asked in as much awe as fear.\n\n\"It greeted us all those months ago when we first arrived.\" I shared and she buried her face in her hands. \"I sense a sad story coming on.\"\n\n\"We angered the tree centuries ago, by galactic standards. A select few of us act as caretakers for the facility but no one touches the tree. No one speaks with it. Its wisdom is lost to us.\" She said and left it brief but sad.\n\n\"Have you tried?\" I asked and she shook with fear. \"Easy. I won't force you to do anything that you don't want to. Can I speak on your behalf?\"\n\n\"You would do that?\" Bisieth asked.\n\n\"I don't see the harm. Worst case it says no.\" I replied. \"Come back in a few days and I'll have an answer for you.\"\n\nBisieth hugged me and then raced off back to her community. I returned to the compound. There was tension in the air and the tree was the source. What the hell had the Miralukans done to get this kind of reaction?\n\n\"No.\" The tree said and that was that. No explanation. No story. Just no.\n\n\"I tried.\" I said aloud for my own benefit. \n\nI soaked in the hot spring for a bit and then meditated until dawn. I woke Kyanna and informed her that I was feeling generous and began teaching her the eighth form of lightsaber combat. She deserved it after all her hard work. A few days in while Kyanna worked on the first few sequences I pulled down my HUD to see what quests I had pending, unfinished, or available. One was highlighted in red. My eyes snapped open and I fought down the rage and failed.\n\n\"That bitch!\" I roared as I lashed out with Force burst. I charged it until the air between my hands turned dark. I launched the attack at a solid wall of stone. A huge portion of the side of the cliff collapsed. It didn't do any harm, but it got the Tree's attention.\n\n\"Calm yourself,\" it soothed. \"She is only following her nature.\"\n\n\"You are right of course,\" I said as Kyanna and Aoki raced out to see what had happened. \"Sorry, I didn't mean to disturb you.\"\n\n\"Holy shit Master, did... did you do that?\" Aoki said her hand shaking as she pointed to the rubble and fading cloud of rock dust.\n\n\"Yeah.\" I said and Kyanna made a face. \"What?\"\n\n\"Remind me not to piss you off,\" She chuckled. \"What are you doing Aoki?\" She asked as the Twi'lek began searching the rubble.\n\n\"Vorpalite!\" She giggled as she sorted out the honey colored crystals from the others. \"Don't you remember master's story about her time on Tython? The Grandmaster collected Vorpalite to use in his lightsaber. Ooh... red... blue... green... violet! I found a chunk of violet!\"\n\n\"Aoki... you are a genius!\" I exclaimed as an idea hit me. \"You are ranked Master with pistols, right?\"\n\n\"Well duh... I mean yes Master. Sorry.\" She blushed furiously. \"What are you thinking?\"\n\n\"Let me help you, Kyanna want to help us sort through this and I'll share my idea.\"\n\nWe spent two hours collecting the various shades of Vorpalite. It became clear the closer to the heart of the blast the darker the color of the crystal produced. It also created less of those darker colors. Out of the entire event only three pieces were true violet were recovered. Kyanna asked if they could be used in a lightsaber. \n\n\"They need to be processed to make sure they aren't cracked and so produce a clean blade.\" I explained and she nodded. \"I am going to process the whole lot of them and try and see if I can use them as a focusing lens in a blaster.\"\n\n\"Wicked!\" Aoki exclaimed.\n\n\"It is just a theory right now. It might not even change anything.\" I stated and with their help carried the crystals to the workstation and sorted them by color, quality, and value. The violet Vorpalite went for ten thousand credits per carat. Once they were processed, we had nearly a hundred grand in just blue and violet gems. I gave the nicest of the violet crystals to Kyanna for her weapon. She meditated with it and attuned it. She replaced her blue crystal with the violet one. The color was unique and was so dark it was marked down as indigo. She rushed out and performed all eight lightsaber forms with her new weapon.\n\n\"I've never seen her that happy.\" Aoki whispered.\n\n\"Let's see if my theory is right.\" I said as I cut and polished two blue crystals for focusing gems. They were inserted into two plain blasters and I took one out and test fired it. \"Here goes nothing.\" I said as I squeezed my eyes almost closed and pulled the trigger. A sapphire bolt shot off and struck a pile of stones. \"YES!\" I roared and returned to the ship. I checked the specs of the pistol and it dealt out half again normal damage. \"Now, let's tweak things and see if I can improve upon that.\" Aoki stood by my side the entire time as I disassembled the blasters and rebuilt every part and custom constructed a pair of pistols for her. In the end she had blasters that would do double damage at close range and still had enough kick at extreme range for a fifty percent bonus. The more subtle bonus quickly became evident to her.\n\n\"I can 'feel' them just like my lightsaber.\" Aoki whispered. \"That is what you were going for wasn't it?\"\n\n\"Yep.\"\n\n'You need to design a logo.' An administrator informed me via private message. 'Your droids and other products need to be established as yours.'\n\n\"I need a logo.\" I said to get Aoki's or Whisper's input. We threw out ideas until I decided on two dark elven runes facing each other with a smoking hammer between them.\n\n'Logo accepted and registered. Congratulations!' \n\n\"I love your logo!\" Aoki declared. \"I am so proud to be the first to carry Vorpalite Blasters,\" Aoki said in awe as she placed them in her inventory. \"I have the first pair of Vorpalite Blasters!\" She hugged and kissed me. \"What are you going to make for yourself?\"\n\n\"I don't really need anything.\" I said. \"I tailored my equipment just a little while ago. I guess I could convert my blasters over. Once that is done, I have a bitch to put to heel.\" I snarled.\n\n\"About that,\" Aoki pried. \"I've never seen you that pissed off.\"\n\n\"It happens to us all,\" I said. \"I need to find her and put her down after I meditate so that balance is maintained.\"\n\n\"Doot dee breep beep!\" M3S4 announced as she hovered close. \n\n\"I understood that!\" I giggled. \"I can understand droids now! How cool is that?!\"\n\n\"You said you had an idea,\" Aoki purred. \"It wasn't just the blaster upgrade was it?\"\n\n\"No, but I don't know if you are up for another week or so of training.\" I hinted at more.\n\n\"I think I know you well enough to endure it.\" Aoki chuckled. \n\n\"It goes something like this. I want to disprove Obi Wan about the randomness of a blaster.\" I said and she grinned.\n\nIt was heresy given form. A Force sensitive gunslinger pushed to her limits. The Vorpalite pistols allowing her to channel the Force through them instead of a lightsaber. To finish her training, I had to fashion two more M3 droids. I chose the Mark Fours for their sheer firepower. Once Aoki was done, I'd give her and Kyanna one as a bodyguard. \n\nKyanna's training was grueling and I spent the evenings looking over the footage the M3's had of Aoki's marksmanship montage. She was eager to push her skills to the next level. I had six M3 units as targets for her weapons. We began slowly but her Master rank in firearms allowed her to accelerate quickly from one drone to three in just the first day. By the second day she was practicing with all six. On day four the drones were using their stealth fields and chasing her in and around the enclave. Even as Aoki mastered her blasters Kyanna took on form eight in short order just as I had. While she went through her sequences, I practiced her advanced reflection technique on the side. Who knew, it might come in handy someday. Three weeks, it took Kyanna just three weeks to master form eight. Aoki had turned off the safety protocols on the M3's and on the last day she flawlessly endured all six drones using lethal level of blaster fire. \n\n\"It was wise of Kyanna to teach Aoki Tutaminis,\" I mused as Kyanna proudly watched Aoki dance, dodge, and defeat her targets. Tutaminis was the ability for a Force user to absorb and even redirect energy up to and including the blade of a lightsaber. \n\n\"The tree hinted it might prove useful.\" Kyanna whispered. \"She is going to wreck her enemies with great glee now.\"\n\n\"It is as it should be, between the two of you, you'll make a formidable team.\" I said. \"You don't have to...\"\n\n\"Oh no!\" Kyanna snapped. \"You are stuck with us. Besides I've never seen you in a real fight yet.\"\n\n\"Rest!\" I hollered and the drones stopped attacking and returned to the ship. \"Let's eat, soak, and celebrate. Tomorrow we leave for Malastare.\"",
        "\"Yes Master!\" Aoki said as she picked up a towel and headed inside.\n\n\"What are you going to do after Malastare?\" Kyanna asked.\n\n\"I have other quests to complete elsewhere.\" I said and she frowned. \"I have put them off for too long. I'll be back this way before too long.\"\n\n\"How about before Malastare?\" Kyanna purred as she emphasized the word before. \"I have a quest set on Nar Shaddaa. Want to help me knock it out?\"\n\n\"Ooh, the smuggler's moon sounds fun.\" I said. \"Sure. Malastare can wait.\"\n\nWe spent the evening, all three of us, together eating, soaking, and sharing stories. I kept getting roped into sharing. I did my best not to spoil storylines and tell them the best parts. Aoki and Kyanna have bonded on a level I never expected. They reminded me of two kittens that shared a favorite toy between them. I was that toy.\n\nNar Shaddaa: 3,000 BBY [Battle Before Yavin]\n\n\"Beep Boop Tee!\" The droid cheerily tittered as I tailored her new paint job for Kyanna's character. I worked on the swirling blend of shades of green giving it an almost military camouflage pattern.\n\n\"I'm glad you like. What do you think Kyanna?\" I asked and felt her chin settle on my shoulder.\n\n\"Interesting. Isn't that one of your tank droids?\" She purred as her arms slipped around my waist.\n\n\"It was, it is now your tank droid. S5 this is your new partner.\" I said as I transferred control of the droid to Kyanna.\n\n\"Oh Master, I'm... thank you!\" She said kissing my cheek. \"What is that cluster of crystals there?\" She asked as she ran a finger over the circle of six blaster ports.\n\n\"That, oh that is just its Gatling blaster feature.\" I said. \"It has a fully auto function.\"\n\n\"Holy shit,\" she exclaimed. \"M3S5... what is the M stand for?\"\n\n\"Marksman, it is to honor the original drones Luke used to train with. M3 means it is the third iteration or generation thanks to you. S is just it being the fifth of its generation.\" I explained.\n\n\"Um... how many types of M3's did you design?\" Aoki asked from the shower.\n\n\"Four. Tracker. Slicer. Sniper. Tank.\" I said listing them off.\n\n\"Well... technically the three tanks are all S4's. I'll give mine a nickname to keep them from getting confused.\" Kyanna said and kissed my cheek again. \"Come on Clover.\" She said and the droid hovered behind her to the cockpit. I transferred the other S4 to Aoki and it hovered outside the shower waiting for her.\n\n\"Is there anything I am missing out on with the M3's?\" I asked Whisper. She thought about it for a while. \n\n\"What about a medic droid?\" She suggested. I didn't know anything about medicine, and I told her so. \"No,\" she said shaking her head. \"Not a doctor level of medicine but more of a battlefield medic sphere. It could close wounds, inject antibiotics, antitoxins, and the like. It could use its shield to defend the injured or as they are being taken off the battlefield.\"\n\n\"Oh, I see. I suppose the owner could upload their racial needs into it. The military might go for something like that.\" I thought out loud. \"I'll keep that in mind. Thanks.\"\n\n\"Hey you two,\" Aoki hollered. \"We drop out of hyperspace in ten minutes. Breakfast is ready.\"\n\n\"We'll be there.\" Whisper replied giggling. \"I'll set out your clothes.\" She offered as she planted a quick kiss on my lips and left.\n\n\"You okay?\" Aoki asked and winking. \"Nar Shadaa awaits!\" I felt like I was forgetting something important. Ever since I had escaped the test... who's test? Damn it! The mental fog was annoying.\n\n\"The Smuggler's Moon,\" I stated, and her excitement was infectious.\n\nI stripped down and staggered as we dropped out of hyperspace. I made my way up to the cockpit. Kyanna was haggling with the port authority over docking fees. I stood behind her and the holographic head turned towards me. I cupped my tits and licked my lips at the sleezy looking male Twi'lek. He smiled and agreed to the lower price.\n\n\"Nice. Classy too.\" Kyanna laughed. \"Get dressed we land in five minutes. We are in the landing queue Captain.\"\n\n\"I'll be ready.\" I said and turned to head to my cabin. I stopped and looked back to see her watching me walk away. \"What?\"\n\n\"When we started this, I thought that maybe you were Ghost in disguise.\" She laughed. \"No guy walks like that period.\"\n\n\"I'll take that as a compliment,\" I stated as I continued to the Captain's Cabin.\n\nWhisper had set out my Dark Raven armor. It had been designed for heavy combat situations and gave the most protection without sacrificing much in the way of maneuverability. The thing is the last I remembered it was just in the planning stages and yet there it lay on my bed. The dark alloy cuirass covered my torso and the other bits of armor protected other key parts of my anatomy. \n\n\"Interesting.\" I mused when I held up two thigh sheaths for a dozen throwing blades. The diamond shaped alloy wedges were razor sharp and carried a single Sith rune. \"Return?\" I picked out a hanging image of a map of the Coruscant system. I plucked one of the blades and threw it. It struck true and pierce the wall a bit. Before it could fall to the floor it teleported back to its sheath slot. \"Oh wow! Interesting.\" I turned the sheath and noticed two small slots, one on either side, but their function defeated me.\n\n\"They are for poison capsules so you can coat them in toxin.\" Whisper reminded me.\n\nI strapped on my flip belt, holsters, twin sheaths, and grenade bandolier. Last were the two hold out blasters attached to my inner forearms and the proper gesture they would pop out allowing me a quick shot in a dire situation. I placed my hooded duster over my arm and held my customized combat mask in my other hand. This mask had a stylized feline face with tribal decorations giving it a fearsome continence. The others met me at the airlock as we landed. \n\n\"Watch your asses out there. This isn't Coruscant, this is the Smuggler's Moon.\" I stated as I put on my mask, activated its link to the four M3 units. I handed my coat to Whisper and she held it for me as I slipped my arms into it. I pulled up the hood, checked my pistols, and nodded that I was ready.\n\n\"Let's go,\" Kyanna said as it was her quest we were working on. I was just a supporting character this time.\n\nThe ramp dropped and we walked down it to be greeted by members in good standing of the Guild. They were the local representatives of the bounty hunters organization. Kyanna's green skinned Mirialan hugged the male Rodian and they did introductions all around. Two of the four Guild members were PC's and friends of Kyanna. When they saw me, they accepted me like I was an esteemed guest.\n\n\"Captain Katria, welcome to Nar Shadaa.\" The Rodian said and I tipped my head. \"Let's get going. This asshole has killed six of my best bounty hunters...\"\n\nI felt a soft flutter of the Force and instantly activated Force cloak which would hide me if another Force user reached out to sense for Jedi or Sith. A group of three human males stood outside one of the moon's many cantinas and watched us intently. They were dressed like minor nobles, but their intensity screamed hostility.\n\n\"Don't let them bother you,\" the Rodian laughed as he flipped off the trio. \"Fucking Sith!\" He cursed as we continued to our destination. \"The club is popular, and the entertainment is live instead of that holo shit they have in the sleazy dives. We know how to keep our members and guests happy.\"\n\nWe turned the corner and I bit back a laugh when I saw the holographic sign for the Randy Rancor straight ahead. The name might be silly, but its popularity couldn't be denied. Twenty people stood outside waiting to get in and past the Gamorean bouncers. The pig faced aliens spotted the Rodian and were already unhooking the velvet ropes to let us enter. Guild privileges in action, I thought. The cloudy air inside stunk of several flavors of sweat, pheromones, and illicit drugs. The oxygen breathers stuck to the central rooms while the methane and nitrogen-based races preferred the outer chambers.\n\n\"Interesting.\" I commented as we went directly to a private room where three young Hutts awaited us.\n\n\"Dryx,\" the largest of the three worm-like creatures greeted the Rodian. \"A Mirialan, a Twi'lek, and a Cathar, do you really think they can take out a renegade Sith Lord?\"\n\n\"The Mirialan is Syn'Kar the Assassin. The Twi'lek is Kalla-To the Master Slayer.\" He did introductions and the Hutt flinched when he heard the words master and slayer back to back. Hutts were notorious slavers and a slave that killed her owners was a nightmare. \"The Cathar is none other than Katria Forge Master.\"\n\n\"Katria! Your face is all over the holonet!\" One of the smaller Hutts said with a mix of glee and lust. \"I wish to hire your after this bounty is resolved.\"\n\n\"I'm listening.\" I replied turning to face him.\n\n\"I want a custom job performed. I am sure the fee will be agreeable.\" He purred sticking out his prodigious tongue. Ick! \n\n\"First things first, let's knock out this bounty.\" I said glad my face was hidden behind my mask.\n\n\"Well spoken,\" the larger Hutt agreed. \"You aren't the only one hunting this 'poodoo' Syn'Kar. I have high hopes for you though. Don't disappoint.\"\n\n\"If I fail, I won't be around for you to complain to Kah'va.\" Kyanna replied with a seductive smile.\n\n\"Ha! That is why I like you Mirialan! You understand the humor of a good death.\" Kah'va the Hutt roared. \"Now, get out of here. I have other business to conduct.\"\n\nThe three young Sith were standing outside the room. We were exiting when the leader of the human trio snagged me by the arm and leaned in to sniff me. \n\n\"I've never fucked a Cathar before.\" He whispered.\n\n\"I can see why. You smell like Bantha shit!\" I fired back. His friends reached for their lightsabers.\n\n\"No, we mustn't keep Kah'va waiting. Later Cathar, we'll talk later.\" He growled as he let go.\n\n\"He isn't worth it,\" Kyanna urged.\n\n\"They are growing bold,\" I said shaking. \"I think I'll teach them to fear the shadows again.\"\n\nWe went to the bar and true to his word live naked female dancers were at their stages. We sat at the bar and ordered our drinks. A scarred Selkath fixed our drinks and set them in front of us. I passed my left hand over my drink and the scanner built into the glove alerted me that my drink was drugged. I grabbed Kyanna's wrist and stopped her from drinking. Aoki didn't miss this and set her own drink down. I scanned them and all three were laced with a powerful aphrodisiac. The Selkath fled but not before I snagged him with Force choke and dragged him over. The amphibious fish man squirmed in my grasp while I questioned him.\n\n\"Who ordered you to spike my drink?\" I growled as his color went from a pale blue to indigo. \"Well?\"\n\n\"No... can't... they'll kill me!\" He rasped as his gills tried to compensate for the oxygen, I was depriving him of. \n\n\"Motherfucker, I will kill you right here and right now!\" I threatened as I lifted him a foot off his webbed toes. \n\n\"Sith! It was the three Sith!\" He shrieked as I let go and he crawled away gasping. \"They have me drug any attractive females that come in here.\"\n\n\"Aw shit,\" the Rodian cursed at the trio of Sith appeared. They were dressed in their traditional robes now and had their weapons ready. \"This is over my pay grade.\"\n\n\"Not mine,\" I laughed as I sent a silent message to Whisper who was guarding the ship. \"Want me to handle this boss lady?\" I asked Kyanna. \"I can see you don't want to get your hands dirty.\" I continued and she blew me a kiss. \"Hey, you ugly motherfucker, you grew a pair. Didn't you see what I did to your other rapist buddies?\"\n\n\"That's slander you cunt faced whore,\" the Sith Lord replied.\n\n'Stay out of the smoke,' I warned Kyanna and Aoki via telepathy. 'Seriously.'\n\nSnap! Hiss! The lightsabers on both sides were ignited as I palmed three blue smoke grenades and drew a blaster in my left hand. I threw the small two-inch spheres at the Sith. They exploded shrouding them in sapphire smoke. I heard them laugh as they made a formidable entrance. The leader used the Force to spread out the cloud and close the distance. I drew my second blaster as the Sith rushed us. I began firing but not at them. I shot the water sprinklers above us. My energy bolts triggered the fire suppression system. The water fell everywhere igniting the three Sith who were covered with highly refined potassium particles. They went up like human torches.\n\n\"OH SHIT!\" Aoki cried in alarm seeing the Sith scream in agony. I fired killing the two lesser experienced Sith with headshots.\n\n\"You!\" The Sith Lord roared as he put out the flames and reignited his weapon. \"Why are you smiling?\" He asked Kyanna as she pointed behind him. Two things caught his attention. First and foremost was the silhouette of Whisper Shadowborn with twin violet blades blazing. She had cut off his retreat. The second but far more terrifying were the two lumbering skeletons that had once been his fellow Sith. \"What the fuck?!\" He cried out in alarm and confusion as he faced his once friends I had raised from the dead. Being a vampire had its benefits. \n\n\"One of us,\" the animated skeletons moaned in their inhuman voices. \"One of us.\" They gently touched his shoulders. \"Don't be afraid bud. It won't hurt much longer.\"\n\n\"I don't understand.\" The Sith Lord said as I stretched out my hand and cast the mineral extraction spell, I had learned in Kamar-Taj. The skeletons sweated out pure calcium which was also a water reactive mineral. The second conflagration engulfed the Sith Lord and he went down screaming. I mercifully ended him with a bolt between his eyes. I holstered my weapons as the falling water was shut off and I looked at the Rodian. The fear in his eyes was glorious to see.\n\n\"Where is our target?\" I asked and he dropped his drink in shock. \n\n\"Malastare,\" Dryx stammered. \"She's on Malastare.\"\n\n\"I guess our stars and contracts are aligned,\" Kyanna purred in my ear.\n\n\"It seems so,\" I said as I bent over and searched the three Sith. Whisper joined us and slapped me on the ass hard. \"UNNN!\" I grunted as I handed the credits from the corpses to Kyanna. I did keep their weapons, specifically their Kaiburr crystals for later projects.\n\n\"Oh look,\" Whisper pointed at an empty stripper pole. \"Drinks are on me, now you,\" she smiled at me. \"Entertain us. What do you say boss lady?\"\n\n\"I... she can dance?\" Kyanna asked as the Selkath delivered new safe drinks to our table. \"Show us what you got Katria.\"\n\n\"Costume change required,\" I said and accessed all the slutty costumes I had unlocked for the female characters I had slept with. \"Red or blue?\" I asked as I chose a slinky mesh body stocking that did nothing to hide naughty bits. Red won out. I swapped out heavy armor and weapons for lingerie. As I danced the main display showed swoop bike racing. I was too focused on remembering the maneuvers I had learned to watch the race. There were cat calls, hollering, and an electronic tip jar. I watched as a crowd formed and the tables filled up. I danced for three songs and left the stage sweating and feeling like a champ. I gave the bartender half my tips and warned him softly about drugging anyone ever again.\n\n\"You are going to be a good boy, aren't you?\" I asked as I sipped some water at the bar.\n\n\"I've seen what you can do.\" He whispered his body shaking in fear. \"I fear you more than any Sith or crime boss. This is a safe place, I promise.\"\n\n\"Good. Keep 'em coming. I want to watch the races before we leave. I've never seen swoop bike racing.\" I said and I guessed the new expression on his alien features were one of relief. I joined the others and Aoki was clapping in full fan girl fashion.\n\n\"Woo hoo!\" She cheered. \"That was amazing!\"\n\n\"Is there anything you aren't good at?\" Kyanna asked before leaning close and kissing me. \"That was fucking hot, I wish Ghost was here to see you in action. He'd eat you alive.\"\n\n\"I'm sure he'll see it. That'll hit the holonet and go viral.\" I laughed.\n\n\"Too late,\" Aoki poured me a shot from a bottle. \"I uploaded it already. My new droid has great quality for that sort of thing.\"\n\n\"Let's see the numbers.\" I winced as the main screen was split in two and showed the race on one side and the views of 'Cathar Cutie Dances her Ass off' on the other. The entire galaxy was watching. If I was worried about this persona's notoriety score I needn't. The numbers were staggering. We got a feel of how popular it was and returned to the races. The next set was about to start. Twelve racers ran the course with three racing at one time. That made for four initial races and as the riders were eliminated each subsequent round changed up depending on who was left. The winner was the rider with the best time after three laps. It was a fast-lethal sport. Out of the twelve drivers two perished, two more were badly injured, and a strange looking blue haired female that won the prize money.\n\n\"Who the hell is that?\" I asked seeing the closeup of the swoop bike racer. \"Her skin is hot pink!\" I said slurring my words a bit but still clear headed. \"Wen' D' Go?\" I laughed reading her name.\n\n\"She's a Zeltron,\" the bartender told us. \"They are a very popular race, even more than the Twi'lek. They put out a pheromone that makes folks agreeable, if you get my drift. The few that are free serve as willing concubines or negotiators. Wen is a rare one. She's got glacial ice in her veins. Not many of her race even take up the sport. Wen! Great race as always!\"\n\n\"The races aren't live?\" I asked tilting my head back to see the sultry driver. \n\n\"Speaking of live!\" Wen growled as she grabbed me on either side of my head and planted an inverted kiss on my lips. Kyanna tensed while Aoki watched and waited to see how I reacted. \"Damn, I've never kissed a Cathar before. I've been missing out. Use the dancer's showers?\"\n\n\"In back.\" The Selkath gestured as I got to my feet. My sensitive nostrils full of the Zeltron's pheromones I followed her to the showers. There were six females showering as I stepped under one of the unused shower heads, dismissed the boding stocking, and began showering. I watched the Zeltron undress and it was quite the show. She watched me watch her and ate it up. The dancers huddled up and whispered amongst themselves. Two were Twi'leks, three were Togrutans the same race as Ahsoka Tano, and one solitary Zabrak.\n\n\"Hey... Cathar... you gonna fuck that Zelton?\" The Zabrak barked at me.\n\n\"MMMMM...\" I moaned as I cupped my tits. \"It is more likely she... is... going... to fuck me.\"\n\n\"Pity,\" the Zabrak frowned. \"I've never...\" she began as I crooked my finger. \"Oh!\"\n\nThe sweaty Zeltron let the Zabrak initiate things. She activated the shower next to mine as the red skinned alien knelt in front of me. I placed my foot on her shoulder and placed my hand carefully on the back of her horn crowned head. She was of the same species as Darth Maul and had the same characteristic body tattoos. I shivered at the alien pleasure that I was still getting used to. Her tongue was magic, and I let everyone know it.\n\n\"Oh my god,\" I moaned as the other dancers pounced. The eight of us formed and reformed groups as the cloud of Zeltron's pheromones fed the sexual frenzy. Fingers, tongues, and body parts were teased, pleased, and driven over the edge. I lost track of my climaxes as some of the dancers left so that they could dance for the crowd outside. Familiar voices joined the group, and, in the end, it was just the five of us. Two Twi'leks, a Mirialan, a Cathar, and a Zeltron getting to know each other very well. We drained our stamina bars a few times before we were naked, wet, and worn out.\n\n\"Damn, I heard you were a lot of fun,\" Wen the Zeltron giggled.\n\n\"I try.\" I said as I did introductions. \"Shit, is that the time? I have a bitch to murder to death on Malastare... we have... aw hell you know what I mean.\"",
        "\"You think it is the same female?\" Aoki asked.\n\n\"Only one way to find out.\" I said.\n\n\"My next gig is on Malastare,\" Wen declared. \"I was going to hire a ship. Want to earn a few extra credits?\"\n\nI looked at the others and let them vote. They were okay with it. We washed off the funk, dried off, and returned to body armor and weapons. We were still on Nar Shadaa after all. We went to the space port and twenty minutes later a large speeder barge showed up and behind it the three swoop bikes that Wen alternated between. We placed the bikes in the hold of the Ivory Wraith and headed off to Malastare. Kyanna was soon in the pilot's compartment and negotiating departure fees. It wasn't called the Smuggler's Moon for nothing. Thirty minutes later we were leaving Nar Shadaa airspace on our way to Malastare. \n\nOur private stock of booze was flowing, and I had to explain the vindictive wrath that I unleashed upon the three Sith. Wen hadn't been there, and I looked to see if anyone had posted a video of it, they had. Aoki strikes again. It had also gone viral. I was a popular search criterion it seemed. Wen leaned forward and watched the Sith burst into flames and scratched her head.\n\n\"How the hell did you do that?\" She asked. \"I didn't see you use the Force. No gestures... nothing.\"\n\n\"I didn't use the Force.\" I said and wound the video back to the smoke grenades. I paused it and then started it again and paused it when it showed me shooting the ceiling. The water fell and whoosh, up went the Sith. \"See?\"\n\n\"The smoke,\" she said the wheels slowly turning. \"The water and the smoke combined somehow and wow. That is all kinds of fucked up.\" She admitted. \"Where did you buy those smoke grenades?\"\n\n\"I didn't. I made them.\" I said and she was floored a second time. \"I have others and they do other things. Different situations need different fireworks.\"\n\nWe researched the planet we were headed for so that we had a basic idea what we were dealing with. It was the home of the sentient species known as Dugs. They were known for walking on their hands and using their feet to manipulate tools. Malastare was also widely known, even at this point in history, for pod racing. Lastly, and most importantly, their main export was starship fuel. That made Malastare a key political, military, and strategic target. Is that why the Sith had taken refuge there? \n\n\"Malastare.\" Kyanna called out. \"There is a definite Republic presence here protecting their fuel source.\"\n\n\"Take us in, please.\" I said and Kyanna gave me a curious look. \"Let's take in a pod race and see what we can find out. Whisper, you stick close to me. I'm going to need backup I think.\" I said feeling a sense of foreboding. \n\n\"Here, take this, I've made some modifications... mostly artistic,\" Whisper said handing me the new lightsaber. The casing was made of a rare wood from Kashyyyk, the Wookie's home world. The tribal markings she had carved were still there, but they were smaller and the design more intricate. I could feel the love and attention that went into it. Had Kat been running Whisper at some point? Had she done this? I believed so. She was safe. Somehow, I knew she was safe. Of course, she is safe why wouldn't she be?\n\n\"Thank you, it is gorgeous.\" I said and then got serious. \"This is just an information gathering mission. I hope. Everyone have their scanner?\" I asked and they held up their right hands. They sported fingerless gloves with the small built in device that was programmed to pick up known chemicals. \"Good. Let's have fun.\"\n\n\"We shouldn't have to use these,\" Aoki grumbled.\n\n\"It is like having a condom,\" Kyanna explained. \"I'd rather have it and not need it, than need it and not have one.\"\n\n\"You stole that!\" Aoki laughed. \"I get it. Let's go.\"\n\nMalastare before its industrialization was much like the pristine woodland of North America. Because of its axial tilt and strange orbit, it had long sunrises and sunsets compared to a planet its size. Twilight hung in the air as we exited the Ivory Wraith. I set its stealth features and we headed for the racecourse. The world of Malastare while home to the Dugs also had a large population of humans and Gran. The Gran had a goat like appearance and stood out for the three eye stalks that protruded from their faces giving them a striking look. The city of Pixelito had the same feel as Las Vegas. It had an exciting night life and the holo screens were dominated with images of pod racing, news about the growing conflict originating in the outer rim, and local politics.\n\nThe sense of haunting familiarity followed me around wherever we went. I informed Whisper to keep an eye on the group while I scouted around. I ducked down an alley, activated Force cloak and vanished from sight. I leapt up to the roof with ease and waited. The figure crept to the mouth of the alley and peered down its empty length.\n\n\"Shit!\" He cursed. \"She's going to kill me!\" The male human slunk down the alley expertly. He searched any hiding spots and patiently hunted for me. A second human joined him from the other end of the alley.\n\n\"Well?\" The newcomer asked.\n\n\"She ducked in here and poof... gone.\" He said real panic in his voice. \"She is going to kill me.\"\n\n\"Maybe, we knew the risks. Have you checked the roof?\" The other suggested.\n\n\"Roof? Why the fuck would I do that?\" The first hunter asked.\n\n\"She is going to kill you. You are an idiot!\" The other said and produced a handheld holoprojector. \"Watch.\" He directed as he played footage of my leap during the conflict on Tattooine. \"She's a fucking Cathar. My guess is that she jumped up to the roof and is long gone.\"\n\n\"Or is watching us right now,\" the hunter said and they both looked up in my general direction.\n\n\"Stun.\" I whispered and set my four drones on capture mode. Multiple blasts of blue energy struck the pair dropping them to the ground. \"Good job boys.\" I leapt down and examined them. At first, I thought they had been accidently killed because they were cold to the touch. \"No way.\" I gasped as I made my realization. I pushed back one of their lips to be sure. \"Vampires. It is Her!\" I placed a tracker on each of them and left them in the alley. I caught up with the crew and told them who are target was.\n\n\"Undead Sith,\" Aoki gasped in surprise. \"How the hell did that happen?\"\n\n\"Surely you've heard the legend of Darth Nocturnal,\" Kyanna whispered as she told the legend like any good ghost story. \"Twenty thousand years ago he arrived out of the Unknown Regions. His massive warship, the Pride of Korriban, backed up by an entire fleet wreaked havoc upon the galaxy. This was just after the death of Xim the Despot.\" She said and I smiled remembering making love to Xim and how she had cheated death. \"He harassed the Hutts and the Galactic Republic alike. The strange thing is that he had enough raw firepower to conquer the galaxy, but he didn't.\"\n\n\"So, he had a big ship,\" Aoki said dismissively.\n\n\"It wasn't just that. He had achieved physical immortality. He had wandered the fringes of the galaxy and found something lurking out there. Something that changed him forever and made him into a vampire.\" Kyanna purred. \"He just left and faded from history. Don't you see? This Sith has found Darth Nocturnal. She has achieved the same thing!\" Kyanna stated her eyes glittering and her first step towards the Dark Side clear to those who knew what to look for.\n\n\"No wonder the Sith chose Malastare to hold up in,\" I said. \"So bleak and dark, the perfect hunting ground for their kind.\"\n\n\"Some say Nocturnal was hunted down and slain,\" Whisper added. \"Nov Ghenlis was the light side user that had done it.\"\n\nI checked my mask and the two trackers I had placed peeled off in two directions. One was closing in on us while the other headed off outside the city. I smiled behind my mask. I sent the tracker droid to keep track of the second transponder. We agreed that since we were so close to one of the many tracks, we'd take in a pod race. We filed in line with the others to one of the exterior entertainment units. It had plenty of view screens, drink dispensers, and pleasant company in the shape of handsome males and females. We were followed in by one of the Sith's henchman. He seemed content to just keep eyes on us for now.\n\n'Private Message: Would you like to accept it?'\n\nCuriosity peaked I agreed. Sure.\n\n'I need your help. Watch the monitors closely. I know this is off the cuff, but I need you to get as much attention as possible.' The note was unsigned and yet somehow, I knew it from Kat. I felt a sudden sense of dizziness and a quick succession of images and sounds hit and staggered me. I staggered but Whisper caught me. I stood up and after a few cleansing breaths I felt better. 'What the hell was that? Once again, my left hand tingled and I found myself flexing those fingers.\n\nI looked up at one of the display screens and a live band was assembling and if the Arabesh scrawl beneath was true today was Jannah the Hutt's birthday. The banner informed the crowd that there would be a short delay. I spied a figure stumble during the playback. I wondered if he was a member of the band and if that was why there was a delay. Was this my opening? A crazy idea took hold and I decided to follow my instincts.\n\n\"Hey, let's go meet the band,\" I suggested, and the others agreed it was worth the effort. \n\nWe slipped free of the crowd and I guided them through the ever-shifting mass of pressing sentients. We could hear the rumbles of an unhappy audience. We hurried and slid through the pissed off folks and managed to reach the rear portion of the stage. The entrance was heavily guarded, but I went up and tested my ability to use Kaia Jutsu in this form. \n\n\"Were with the band,\" I said smoothly.\n\n\"Good,\" the leader of the security force replied. \"Xafos Diem is dead.\"\n\nWe were taken to the corpse and we all noted his odd orange complexion. Whisper informed us that it was a clear sign of an overdose of death sticks. The narcotic left the body with that strange hue and an unpleasant smell as well. The other members of the band were nearby, and they looked heart sick. I understood their pain. A gig like this could make or break a group. I stood after examining the body and spoke with the band. They were a diverse lot and I recognized the look of desperation in their eyes.\n\n\"I want to help.\" I said using Kaia Jutsu to smooth things quickly and see what I could do.\n\n\"Help... how?\" Soma Tarrith, the Togrutan lead singer asked as I laid out my plan even as it formed in my head. \"Not bad.\"\n\n\"Singer?\" I asked after hearing her speak. \"What's your range like?\" I asked and she belted out a dozen or so notes. \"Impressive. Let's do this. Can you read music, any of you?\" I asked and that is when I learned that Xafos had cobbled together a band from classically trained vocalists and musicians. The one thing they had in common was bad luck. \"It is time to turn that luck around.\" \n\nI investigated my inventory to see what would pass as an outfit deserving an onstage performance. I pulled from the alternative costumes as I had when I pole danced. I looked at what the Togrutan was wearing and mixed and matched until I had something in the same vein. Once that hurdle was tackled, I looked at their musical instruments. I picked out the only stringed instrument that might pass for a guitar. I cradled it in my arm and the Ithorian waved at me disapprovingly.\n\n\"It isn't held like that!\" He growled. \"No! You don't pluck the strings like that! Ugh! What's the use?\" He lumbered off as I tuned the strings to my liking. \n\n\"It'll work.\" I declared. \"Enjoy the show.\" I said and told the band to take the stage. I had given them a list of eight songs, their order, and the music and lyrics. While they did a quick look, I prepared for my entrance.\n\nThe announcer called for silence and did his thing. He informed those watching not just here but off world and via holonet. They wished the Hutt a happy birthday and to celebrate it properly a live band. The last words filled the air.\n\n\"We give you... Event Horizon!!\"\n\nThe first notes of the song drifted over the crowd and I drew on Thunder-Pulse's gift and I used it to max effect. The brilliant bolt of lightning struck the stage as I teleported into view. I belted out the first line of the first song, Iron Maiden's 'The Fallen Angel'.\n\n\"Azazel is beside you and he's playing the game...\" The audience went crazy. I looked up to the main box where the Hutts lounged and the elderly slug creature smiled. The first song ended, and the band was surrounded by news drones. They were piping our performance to a hundred worlds on both sides of the growing conflict between the Old Republic and the one-time Jedi Exar Kun. The last notes settled, and it was time to up the attention factor the only way I knew how.\n\n\"This one is for a naughty Sith Lord out there. Are you listening Exar Kun?\" I barked out the words feeling the utter panic in the rest of the band. They were professionals and continued playing no matter what. And so, it went until the last notes of the last song echoed into silence. The crowd cheered us off stage and the Togrutan was waiting with a blaster pointed at my heart.\n\n\"Exar Kun! Really! Have you lost your mind?!\" She snapped. \"What were you trying to do?\"\n\n\"Attention,\" I said. \"You are now one of the most notorious bands in the entire galaxy.\" I fired back and she lowered her weapon. \"No one will ever forget this performance. Trust me.\"\n\n\"You are right,\" she admitted. \"Where are you going?\"\n\n\"I have a Sith Lord to either kill or capture.\" I admitted. \"She is hiding off in the foothills just outside the city.\"\n\n\"Wait,\" the Ithorian exclaimed. \"You are a bounty hunter. You play and sing that well and you stoop to hunting sentients.\"\n\n\"Yep. Though, it was nice being on stage again.\" I admitted. \"Time to draw the heat off you guys. Tell them the truth. I lied to get onstage. Take any gig that makes you a fortune.\"\n\nI changed back to full battle mode and as we left the dressing room Hutt security was waiting for us. I accepted their kind invitation to meet with the birthday girl. Jannah and her siblings watched our arrival with obvious amusement. An old P Series protocol droid translated for them. The Hutt spoke and she expressed her mistress' enjoyment of the concert.\n\n\"The Great and Wise Jannah the Hutt found your performance entertaining.\" P-2T2 informed us. \"Who are these creatures? They aren't members of your band.\" She said just as the other members were brought up from below.\n\n\"My band,\" Soma Tarrith corrected.\n\n\"Not from where I am looking,\" the droid translated. \"The Cathar clearly led you to victory today Togrutan. However, you may not wish to claim the band if the Sith Lord and his battle fleet lay claim to Malastare.\"\n\n\"Asshole!\" Soma cursed at me her eyes fiery and filled with equal measures anger and terror.\n\n\"I get that a lot,\" I laughed. \"Listen, if I am allowed, I will take the heat off Malastare and the band at the same time. First though, I need the Great and Mighty Jannah to sign Event Horizon to an exclusive say six-year contract. Jannah could get sixty percent of the house and the band get twenty. The other twenty divided among event owners and so on.\" I offered and the bartering began. I turned to leave when the Hutt slammed her tail into the ground.\n\n\"Hold it Cathar,\" the droid purred. \"Where do you think you are going?\"\n\n\"I have a hidden Sith Lord to take out.\" I replied.\n\n\"Sith Lord!\" The droid yelped in surprise while Jannah narrowed her eyes. \"No Sith would dare take up residence here without paying her protection money.\" \n\n\"Just saying. The Guild put a hefty bounty on her head. She's here.\" I stated locking eyes with the Hutt.\n\n\"You will bring the Sith Lord or her remains to me first. I would prefer her alive.\" The droid conveyed as the Hutt thought on her feet. \"Tell you what Cathar... you bring her in alive and I'll double the Guild's bounty.\"\n\n\"I can't do that,\" I said and held up my hand before the Hutt lost her shit. \"She's technically not alive. I will bring her in functional though.\"\n\n\"I heard rumors that one of Darth Nocturnal's childer survived the purge.\" The droid said her servos shaking. \"Good luck Cathar.\"\n\n\"The name is Katria.\" I informed Jannah and she laughed. \n\n\"Poor Sith Poodoo, I pity her.\" The Hutt continued to laugh.\n\nWe were on the way out when the M3 drone I had sent to follow the vampire back to his base returned. It was damaged severely. The outer casing was cracked, and it was sparking and leaving a trail of black smoke behind it. I caught it just before its repulsor field failed. I sat down right there in front of the Hutts and repaired it on the fly. I took out my tools and went to work. Once I had stabilized the power supply and removed the sparking components, I pulled the retractable cable from my wrist computer and plugged it into the droid's main memory. I accessed the most recent files and backtracked until I found the location of the base and any images the drone had captured of it. The hologram of the base hovered in the air and I exclaimed in disbelief.\n\n\"I'll be a son of a bitch!\" I cursed.\n\n\"What is it?\" Whisper asked.\n\n\"It is an exact same layout of another place I've been to. We need a land speeder.\" I declared as I closed the droid's outer casing and returned it to my inventory until I had a chance to repair it in earnest.\n\n\"The Mighty Jannah the Hutt speaks,\" the protocol droid announced, and I stood. \"Since our purposes are not at odds I will 'loan' you one of my speeders. Try not to get it shot all to hell.\"\n\n\"Thank you,\" I said bowing to the birthday girl. \"Your generosity is without...\"\n\n\"...100 credits a day is a reasonable fee...\" the droid continued.\n\nWe slipped into battle mode and I drove the speeder. I knew what I was looking for. The sleek vehicle slid silently across the landscape as we left the city proper and entered the wilds. There were a few outlying communities that dealt in agriculture as well as mineral exploitation. The farms helped feed the city while the mines and fuel processors were the cash crop that had put Malastare on the galactic map. Pod racing was just a bonus. We performed a slow spiral towards the main entrance to the vampire's lair. I spied the crumbling cemetery and altered our course.\n\n\"That's it.\" I informed the others. \"There should be a secret entrance to a tunnel that leads to the bad guy's base.\"\n\n\"How could you possibly know?\" Kyanna asked as he slowed.\n\n\"I've seen something very much like this elsewhere,\" I said not wanting to break character.\n\n\"Which one I wonder,\" Aoki giggled. \"I love puzzles.\"\n\n\"Let's figure this one out.\" I stated as we parked.\n\nWe split into two groups. Whisper and Kyanna went in one direction while Aoki and I took another. A soft chittering tone came from Aoki's belt. She whooped and pulled out a small holographic projector. We stopped and she received what looked like a live transmission. I asked her about it, and I realized that she was a grade A fan girl. \n\n\"It looks like Belle is in game.\" Aoki declared eyes wide and eager for her celebrity fix. \"I think she wants to try and top the numbers your concert got.\" She explained. \n\n\"Is that her? She's so skinny!\" I commented. \"How old is she? Is she even legal to be doing that?\"\n\n\"She just turned twenty-one,\" Aoki laughed. \"Yeah, she's flat on both sides but the guys eat her up. I suppose it is because she looks so damn young. I like the silly faces she makes while she plays with herself.\"\n\n\"What is she doing now?\" I asked.\n\n\"This is your favorite Twi'lek slave girl,\" Belle purred as she whispered. \"I've snuck into a nest of blood suckers. I plan on seducing them and taking them over so they can serve me as... hey... Hey... cut it the fuck out! Put me the fuck down!\" She snapped. \"Do you know who the fuck I am?!\"",
        "\"She's playing,\" Aoki laughed.\n\n\"I wouldn't be so sure.\" I said. \"I've traced the signal. She's transmitting from Malastare.\" I continued as I narrowed down her signal. \"She's transmitting right below our feet. The silly shit found the Sith Lord and her minions.\"\n\n\"No don't...\" Belle struggled as a collar and restraints were placed on her neck and extremities. \"Why are you doing this?\"\n\n\"Like you,\" one of them growled. \"For the views. Except if those watching want to see us fuck you, they'll have to pay for it.\"\n\n\"Hey now... I don't fuck on camera you idiots!\" Belle screamed as her clothes were cut from her.\n\nThe image was replaced with a pay per view screen. They were going to rape her live online. Why the hell wasn't Numenor shutting this shit down? My HUD went nuts and I pulled down the messages. Sith battle fleet just exited hyperspace! The Republic fleet is moving to intercept! Anyone on or near Malastare stop the Sith Lord and her minions!\n\n\"Whoa, look at that reward! Time to break out the real skills. Hold onto your hat Aoki!\" I smiled. \"We have a ditsy princess to save.\"\n\n\"I wonder if I can get her autograph.\" Aoki pondered as I closed my eyes and reached out with Farsight. \"What are you doing?\"\n\n\"Got you,\" I said. \"Gather round. There are twelve of them getting her ready for filming. I am going to teleport us down there. Get ready to fight vampires. Aim for the heart or the head. Is everyone ready?\" I asked as they circled me and faced outwards. \"Here we go.\"\n\nA moment later we appeared in the same chamber as the girl and her captors. Whisper and Kyanna ignited their lightsabers and struck. Aoki and I drew blasters and covered them from a distance. Belle screamed, bitched, and threatened to sue and get the police involved. She had long broken character.\n\n\"...no one is fucking me on camera! I'll bite your fucking balls off!\" She screamed.\n\nKyanna was a savage whirlwind cutting off limbs, heads, and groping hands. Whisper on the other hand took on a more patient stabbing and clinical approach to her attacks. Aoki was all gunslinger personified. Each shot hit its mark and she was as devastating as the others. I took the time to use telekinesis to free Belle and offer her fresh clothing.\n\n\"Sorry, all I have is slutty garb,\" I apologized but she didn't seem to mind.\n\n\"Eh, I've worn less. Who the fuck are you... oh no... not you! You are the reason I got myself in this mess! This is all your fault!\" Belle bitched.\n\n\"I can lock your ass up again and let them rape you on live holonet.\" I fired back. \"You ungrateful little gutter slut...!\"\n\n\"Katria... she is just scared,\" Aoki said soothing my nerves. \"There are more coming!\"\n\nMy first instinct was to flood the tunnel with Force lightning, but I was trying to stick with what this persona could do. I focused instead on Shatterpoint and went on the offensive. \n\n\"Headshots for everyone!\" I snarled. I attacked those out of the range of the lightsabers first and caused a bit of a panic.\n\n\"Shit! It is her! It is Katria! Run for it!\" The vampires hissed and fled.\n\nThe last of the melee opponents fell and we formed up keeping Belle in the middle as we moved forward. If this little nest was to be eliminated no one was going to leave here alive. I led them down the tunnel and just like the one used by the Darkholders there were small side rooms and in one a familiar stack of crates. The crates held blaster rifles stamped with the insignia of the Sith Empire instead of those from Latveria. This was a duplicate of that facility. That gave me a working knowledge of it. \n\n\"I feel them,\" a familiar voice called out. \"Come on out!\"\n\nWe travelled down the tunnel to the main chamber. What had been an amphitheater in one place was the main crypt for the Sith Lord and her vampire children. The Dark Side was strong with this place and it stank of blood and sex. The homeless of Malastare had been brought into the fold and swelled the ranks of the undead. Only a few of them were Force sensitive and trained Sith. They still outnumbered us six to one. We slipped to one corner and waited for the inevitable speech.\n\n\"Who the hell are you?\" Darth Zanna asked. \"One of you is a child of Nocturnal. Who is it?\"\n\n\"A vampire you mean,\" Whisper stated and Zanna smiled revealing her fangs. \"It's not me.\"\n\n\"Nor me,\" Kyanna declared.\n\n\"I'm not a blood sucker,\" Belle said, and I coughed. \"Fuck you Katria!\"\n\n\"You! It is you!\" Zanna snapped as she locked eyes with me. I felt her trying to control my thoughts but since I was her elder it failed. \"No...! How can you possibly?\" \n\n\"Let's put an end to this General,\" A new voice said as Republic soldiers led by two Jedi Masters appeared from one direction.\n\n\"Not before we do,\" A deep male voice replied as Exar Kun and his apprentice strode in from the opposite direction. They were joined by Sith troopers in their gleaming metal armor.\n\nZanna was caught off guard and launched her forces in three different directions. The bulk of her minions were NPC's and low level at that. They divided themselves up and attacked. Twelve were players and teleported into combat. That shook things up and young Jedi and Sith alike fell to their fangs and crimson lightsabers. Four of those twelve flanked our group on two sides with practiced efficiency. I swapped out my blasters for my matching silver whips. I got their attention as the others fought off the fifteen or so low-level vampires.\n\n\"If we take her out, we'll get enough notoriety to make the list.\" One of them said smiling.\n\n\"Besides, there are four of us and only one of her,\" another chuckled. \"We'll take her out like we did that other gal.\"\n\n\"Good times,\" the one that was trying to sneak up behind me laughed.\n\n\"You missed my first video,\" I purred as I got the whips moving. \"There were twenty of them.\"\n\n\"Holy shit,\" the last one exclaimed. \"She's 'that' Katria!\"\n\n\"Slow and steady,\" the first suggested as I targeted him for my first strike as the three invisible drones charged up their weapons to throw the others into confusion. My right whip slashed my foes hand cutting deep. So deep, that he dropped his weapon. My left whip wrapped around his neck and I touched the button which caused the whip to constrict and decapitate him. He turned to mist and left the combat.\n\n\"Fire!\" I ordered and three crimson bolts flew out and hit the remaining three. The bolts weren't strong enough to kill them outright, but it shook them up which was the plan.\n\n\"Got you!\" The fourth vampire hollered as he slashed me from behind. His blade struck the Cortosis weave and his weapon sputtered and died. \"What the fuck?!\"\n\nHe retreated to Zanna's side and now the odds were two to one. Like the Queen on the chessboard Zanna teleported into the chaos and engaged the one figure she feared more than any, Exar Kun. The two Sith crossed swords and I was forced to focus on the two in front of me. I tried to see if my title as Master Vampire had any privileges. \n\n\"Kneel!\" I ordered to the two closest. They fought it but failed. Their knees struck the floor despite their best efforts. \"Prostrate!\" I continued and their foreheads followed suit. \"Excellent! Now, all of you who carry my blood in your veins will kneel. Now!\" The fighting stopped as the vampires both NPC and PC withdrew to the middle of the chamber. Zanna looked around and then she made the undeniable connection. \"Silence!\" I ordered her. \"Prostrate yourselves.\" I directed as the Jedi and Sith watched in surprise and amusement.\n\n\"So, you don't just sing well.\" Exar Kun chuckled. \"What do you think apprentice?\"\n\n\"She is a threat and should be eliminated.\" Ulrich Quel Droma replied.\n\n\"What do you think General Hoth?\" The woman with the yellow double-bladed lightsaber asked her companion.\n\n\"I hate to say it. I agree with Ulrich. She is a danger with those things!\" The older Jedi Battlemaster remarked. \"You?\"\n\n\"If she is such a threat, why are they kneeling in the middle of the room?\" Nomi Sunrider replied. \"She has plans for them. Let's see what they are.\"\n\n\"She is right.\" I said and glared at Zanna. \"I gave you a great gift and you squandered it. What I give I can take away.\" I bluffed but my HUD dropped down and an option presented itself. \n\n'Remove vampirism? Y/N.' I never hesitated. Yes! They dropped like felled trees. The temperature in the room rose as they recovered. \n\n\"Mortal once more,\" I said. My HUD displayed how many had been cured and it was staggering. \"Well... you have been busy. Over a million and with not a hint of remorse.\"\n\n\"I didn't,\" Zanna snapped angrily. \"I only turned sixty-six. The others must have passed it along.\"\n\n\"Oh hey, I have points to spend.\" One of the PC's remarked. \"I got back those I spent on my vampire abilities.\"\n\n\"So, what now?\" Zanna bitched.\n\n\"This,\" I replied as stun bolts shot out from the hidden drones. \"I still have a bounty to collect. I'll let you guys fight it out... oh right... there is still me to contend with.\"\n\n\"The Force is strong with her,\" Exar Kun commented. \"A double threat.\"\n\n\"I concur,\" Nomi agreed. \n\n\"Darth Nocturnal,\" Ulrich hissed. \"She must be his heir. Think of the secrets we could milk from her.\"\n\n\"Before we get to that,\" I offered. \"Civilians should be allowed to leave the field of combat.\"\n\n\"I concur,\" Nomi laughed. \"I don't sense the Dark Side about her.\"\n\n\"I do not feel the Light either.\" Exar said equally perplexed. \"Where did you train?\"\n\n\"Tython.\" I said. \"At the Je'Daii academy.\"\n\n\"Impossible!\" General Hoth hissed. \"The Je'Daii ended over twenty thousand years ago!\"\n\n\"Twenty thousand,\" Belle gasped. \"How in the hell did you...?\"\n\n\"Hush!\" I whispered using Kaia Jutsu to silence her. \"Civilians may leave now... it is getting cold again. Hurry!\"\n\nThey fled in panic as the floor began to shake. What the fuck now? I thought as a light mist formed obscuring the floor. We all looked at the far wall as it split open and two hidden doors opened. The temperature plummeted as whatever the hell it was prepared to make an appearance. The audible whine of machinery could be heard as the six figures emerged from a wall of fog. They were eight feet tall, blocky in shape, and roughly humanoid. The six autocannons spoke and in a single fanning motion killed most of those in the chamber.\n\n\"Holy shit!\" I screamed as I lashed with my whips. My left whip struck out and encountered the personal forcefield protecting my foe. \"Hell!\" I cursed as I dodged the second volley of automatic blaster fire. I switched to Death Kiss and fell back to my best skills. I tried to use Force steal and rob it of its lifeforce and that was second big shock so far. \"Droids! They are battle droids!\" I howled as more of the defenders fell to them.\n\n\"Unnatural! Destroy!\" The leader of the battle droids declared in is cold metallic voice.\n\nExar Kun sent a torrent of Force lighting into the squad, but their shields defended them. The energy shields had a limit but recharged quickly. They attacked efficiently as two of them fired off a volley and then moved to the middle as two others took their place. Always moving it was difficult to keep track of them. \n\n\"Anybody injured?\" I asked and all three of them were hurt. The war droids were prepping for another strike. \"Well... fuck!\" I thrust my hand in the direction of the trio and instead of Force lightning lashing out a bright red-gold light bathed them and healed them. \"What was that?\" I gasped as I somersaulted forward giving my team a chance to coordinate an attack of some kind. I landed on one of the squad's forcefield. \"Up here!\" I yelled but when they raised their weapons, they reached a maximum angle they could fire at. My position was above that. \"Ha! Superior my ass!\" I hopped from droid to droid as the others focused on one of them at a time and took them out. \n\nKer-chunk! The grenade was launched directly upwards. I created my own shield as I crouched atop one of the three remaining droids.\n\n\"Fragmentation grenade ineffectual.\" One of them declared. \"Firing high explosive.\"\n\nKer-chunk! The second grenade shot upward but this time Exar was ready for it and blasted it with Force lightning. The concussive force slammed me against the forcefield below me and I threatened to slide between the three of them.\n\n\"Repeat.\" One of them announced as two of them fired at the Sith scattering them. I cried out as the pressure wave slammed into me cracking three ribs. \"Quasi effective. Launch Vortex Grenade.\"\n\n\"Fuck that noise!\" I hollered as I turned to smoke and slithered away.\n\nKer-chun... the grenade struck a barrier and landed behind the three battle droids. The grenade ignited and a spatial whirlpool manifested sucking up all three of them. The vortex collapsed after a few seconds and I resumed a corporeal form. I looted one of the droids and found components for making my own war droids or improving the M3 series. When no one else approached the other droids, I searched them and received a single battle schematic that would up the M3's from lightly armored to moderately without losing speed or maneuverability. Sweet!\n\n\"Anything good?\" Kyanna asked and I nodded. I explained how I could improve my drones. \n\n\"You okay?\" I asked.\n\n\"Fine,\" Aoki replied. \"How did you do that?\"\n\n\"Yes,\" Nomi Sunrider asked as she approached with empty hands. \"I've never seen or heard of anyone performing a mass heal before.\"\n\n'Incoming message.' My HUD declared. I stepped off and told them I had a private message. 'Will you accept the message? Y/N' Yes. 'All done, the kingdom is safe. I owe you one.' I didn't know what the hell was going on but if things settled down then I'd be happy.\n\n\"Belle? You okay?\" I asked and she blinked a few times. \"Why are you playing this game? Is this just for views and shit?\"\n\n\"My channel began to tank once this game came out. The damn algorithm changed, and cute anime girl didn't mean shit. My audience jumped ship for players and play testers. I might have to get a real job!\" She paused and then the realization hit her. \"Were those guys really going to do that on live stream?\"\n\n\"There is no live stream. They must edit it and submit it so that story lines can be kept secret. I'm pretty damn sure Zanna and her team won't let me release this video for public consumption.\" I paused when I caught something at the edge of my hearing. \"Aw hell no!\" I snapped as I heard something else crawling its way up from the open secret passage. \"Fuck this shit!\" I raged as I cupped my hands together. The space between them darkened as I charged up Force burst until I could barely hold it any longer. Something appeared in the doorway. I pulled my hands back a bit and then thrust them forward releasing the blast of raw energy. The three remaining war droids were plucked off the floor like game pieces and swirling in the eddy of the blast were flung against the unknown terror. It shrieked in pain as it was flung backwards and the double doors slammed shut, knocked off their hinges, and fused to the living rock.\n\n\"Damn girl,\" Kyanna gasped. \"What the fuck... was... that?\" She asked not having seen me perform Force burst during our time training together. She had only heard the aftermath.\n\n\"Yes,\" Nomi asked looking equally baffled.\n\n\"My Lord,\" a voice came over Exar Kun's communicator. \"A ship has just dropped out of hyperspace. It is huge! It dwarfs anything we have. It could be a new Republic weapon!\"\n\n\"Battlemaster! A new Sith ship has just appeared!\" Hoth's radio relayed. \"What are your orders?\"\n\n\"I am on my way!\" Hoth said and Nomi smiled. \"We are on our way!\"\n\nA few seconds later it was just the five of us left in the chamber. \n\n\"Let's loot what we can and get the hell out of Dodge,\" I suggested. \"What?\"\n\n\"Can I come with you?\" Belle asked. \"I need a lift off world.\"\n\n\"Do I look like a fucking taxi service?\" I asked as I placed cuffs on Zanna. \n\n\"Katria! Look! Indigo Vorpalite! May I use it for my lightsaber?\" Aoki asked.\n\n\"Your weapon your choice,\" I replied as she tossed me a fist sized chunk of it. It was worth a small fortune but what to do with it. Kyanna and I helped Aoki collect the Vorpalite. Whisper stood guard and watched Zanna. I noticed that Kyanna received a private message and I suspected good news from the Jedi Grandmaster Nomi Sunrider. Once most of the rubble was gone through, I went down the hall to where, in another game, I had retrieved the Darkhold and the Book of the Vishanti. I went straight to the hidden safe. They really had reused all the elements from the other base. I used my slicing skills and bypassed the safe's security and opened it. The base began to shake, and I cursed. Had I just triggered something?\n\n\"Damn!\" I cursed as I emptied out the safe. I did a quick cursory scan with the Force to see if I missed anything but sensed nothing. \"Time to go!\"\n\n\"I got most of the Vorpalite!\" Aoki called out.\n\n\"I got you two more schematics,\" Whisper shouted.\n\n\"I've looted the shit out of the corpses!\" Kyanna laughed.\n\n\"Can I go please!\" Belle wailed.\n\n\"Fine, form up around me,\" I ordered and had to yank Belle into position. \"First stop. Hutt central.\"\n\nI teleported us to the private box of the Hutts but it was currently unused. Aoki attacked their communication system to check on the space battle above us. I glanced at Belle and she was fidgeting nervously. I tried to ignore her but that seemed against her very nature. Her arms slipped around my waist and she purred in my ear.\n\n\"I like girls too.\" Belle whispered as two rather large Gamorian guards appeared.\n\n\"I have a delivery for Jannah,\" I informed the guards. They nodded and one remained to guard Zanna while the other left to inform his boss. \"Why do you do that?\" I asked Belle.\n\n\"Why do I do what?\" She asked.\n\n\"That silly face, you know where you stick out your tongue and roll your eyes up into your head.\" I said and she informed me that is the face that Japanese anime girls make when they climax. \"Do you make that face when you climax?\" I asked.\n\n\"Only one way to find out.\" She moaned. \n\n\"Fine. I'll give you a lift as far as Coruscant. I think I can find out how many faces you make by then.\" I said and she agreed. \n\n\"The most august Jannah the Hutt accepts your gift of the Sith Lord Zanna. Since she is still breathing the bounty of twenty thousand credits will be paid.\" The protocol droid informed us and decided it wasn't wise to argue the simple math that twenty isn't the double of fifteen. It might even ingratiate us into her good graces. I glanced at Kyanna since it was technically her fetch quest. She nodded and smiled.\n\n\"We accept her generous payment. Tata Zanna.\" I whispered in the Sith Lord's ear. \"I'm sure you'll look great in carbonite.\"\n\n\"Bastard!\" She snarled.\n\n\"Wrong gender you idiot,\" Belle fired off as Zanna opened her mouth to contradict her.\n\n\"You're the idiot, that's really...\" Zanna began until the droid hit her with a stun bolt from a built-in blaster.\n\n\"Talkative isn't she.\" I said. \"Time to go everyone. We have a detour to make and I have a guest to break in. Don't I?\"\n\n\"Absolutely!\" Belle giggled as her cheeks flushed with color.\n\nWe reached the space port and boarded the Ivory Wraith. Kyanna piloted us towards the upper atmosphere while I gave Belle a brief tour of the ship. She seemed disinterested until I showed her the captain's cabin. She saw the bed and licked her lips. I offered her a glass of wine, but she was eager to earn her passage. The ship suddenly jumped forward with a lurch and we raced to the cockpit and Kyanna informed us that we would exit hyperspace in just a few minutes. We had reached Coruscant, two days early.\n\n\"What the hell?\" I complained. \"Aw man, well maybe next time.\"\n\n\"All players will exit the game for a mandatory twenty-four-hour reprieve and a new DLC installation. Sorry for any inconvenience.\"",
        "We landed at the massive Coruscant space port. We exited the ship and found ourselves parked just outside the Jedi temple. I placed the Ivory Wraith in my inventory, just in case, then I hugged the girls and exited the game. \n\nI woke with someone's fingers tracing my stomach. \n\n\"That tickles,\" I murmured as I opened my eyes. Kyanna was sitting next to me.\n\n\"We have twenty-four hours out in the real world.\" She said. \"What do you want to do?\"\n\n\"Yeah, how about we go out and go shopping!\" Aoki suggested as she entered from her bedroom. \"I saw Kat in the hallway. She invited all of us to dinner.\" She informed us before she exclaimed. \"Your leg, it is healed!\" I felt Kyanna's breath on my thigh.\n\n\"Not even a mark,\" she said. \"No bruise... nothing.\"\n\n\"Quick healer,\" I said and yet somehow, I knew better. \"Shopping? I want to check my numbers after that.\"\n\n\"Sounds like a plan.\" Kyanna said running her fingers through my hair. \"Breakfast?\"\n\n\"Cafeteria, we can socialize for a bit, I'd like that.\" I said and they agreed. A quick shower later and we were down with the other players. They were roaring and pointing at the big screen. It was our battle between the vampires just before the war droids appeared.\n\n\"Can you believe there are commentary videos out already?\" A male player gasped.\n\n\"Have you heard her concert... oh... my... god... what a voice!\" A female player exclaimed in praise.\n\n\"Wait for it...\" One of the female players called out as the video focused on Katria's leg. Down it came and shattered the stone floor under it. I don't remember doing that, I thought. \"Boom! Bring the thunder! Look how she puts the bitch to heel!\" She roared. \"She knows Katria's secret but look how she keeps her from sharing it.\"\n\n\"What is her secret?\" Kyanna asked winking at me. Did she know?\n\n\"I don't know... yet.\" The Latina said. \"But I'll figure it out. I think...\" She began and then fell silent. \n\n\"Go on,\" I urged her so as not to seem out of place.\n\n\"I think that she, Katria I mean, is played by a male player.\" She said and everyone gave her shit. \"No, here me out.\" She said as she fast forwarded to the scene where the Sith Lord is handed off to the Hutt. \"Listen to the Sith.\" She said and played it out where Zanna desperately tried to say Ghost's name, but the droid silenced her before she could.\n\n\"Who is Katria Forge Master?\" The channel owner asked her audience. \"Is her player female?\" She asked as footage of my pole dancing played. \"Or is she... a he?\" She continued as Zanna pleaded to be heard. \"The world may never know.\"\n\nAnother video about Katria played and a biologist was talking about her body mechanics. He appeared awkward at first but as we watched he got more and more into the subject. He talked about how the player used the prehensile tail to such a good advantage. He pointed out muscle groups and obvious game mechanics but how realistic the character moved and with such precision. Yet another video was hosted by a professional adult entertainer and commented about how well Katria used the pole and the tease factor. It felt other worldly to be dissected so keenly and to hear professionals call my character all that.\n\n\"I think Ghost has been overshadowed.\" I said and that got a knee jerk reaction from the crowd.\n\n\"No!\" One male player snapped. \"He just hasn't uploaded much lately. Besides he is play testing the Disney princess game. They chop the shit out of all that footage. No spoilers and all that.\"\n\nWe ate and they played other videos highlighting other characters. Aoki didn't miss when I relaxed, and she elbowed Kyanna and winked. I smelled a conspiracy. We finished our meal and a limo was waiting outside for us. I glanced at Kyanna and she shrugged. Aoki was equally confused. A stunning Asian woman opened the door for us. She introduced herself as Akira and was sent by Kat for our personal use.\n\n\"Nice.\" I said as I let the ladies climb in first. \"Shopping area?\"\n\n\"I know just the place,\" Akira offered.\n\n\"Okay. Let's go.\" I said and joined Kyanna and Aoki.\n\nThe limo slid into traffic and we headed for downtown. We could see the harbor from the highway and the huge cargo ships pulling into port. I squinted at the sunlight dancing off the waves, metal, and passing cars.\n\n\"Your eyes!\" Aoki gasped. \"Whoa!\"\n\n\"Nanites,\" I explained was I checked out my reflection in one of the drop-down mirrors. \"Cool.\" I said regarding the slit irises reacting to the intense light outside.\n\n\"There were rumors,\" Kyanna said taking my face in her hands. \"Interesting. The changes are subtle, but they are there if you know what to look for.\" She said kissing me lightly. \"Where are we off to?\"\n\n\"Virtuality.\" Akira the driver informed us from the front seat. \"It is a cutting-edge quasi brick and mortar store.\"\n\n\"I guess we'll find out what that means when we get there.\" I said. \n\nThe store was located at the heart of the new business district that Numenor had helped rebuild. The front of the store had the gleaming sign with the store's name above the automatic doors. We stepped in and lasers scanned us from head to toe. They had our sizes from shoes to shirts. There was no actual product in the store instead there were dozens of eight-foot glass planes that looked like mirrors at first but were in fact virtual kiosks for a variety of store fronts. The products ranged from clothing to games to entertainment options. \n\n\"What sort of entertainment?\" I asked and the store replied.\n\n\"Movie tickets... theater... or even a virtual love hotel...\" the disembodied voice listed.\n\n\"Virtual love hotel?\" I laughed. \n\n\"Numenor override Akira 227,\" the driver said touching the mirrored surface of the interface. \"List most popular avatars for the last week.\" She requested and the mirror switched to a display and the top twenty that users had either used or interacted with. \"Looks like Black Widow is still topping the list. She's a real earner.\" Akira explained with a smile. \"Virtual hookers are the new craze and legal in most countries. It falls under adult entertainment since it is all computer related. Katria cracked the top twenty, not bad.\"\n\n\"Sex sells,\" I chuckled. \"So, what else does Numenor have up their sleeve?\"\n\n\"House Bill H.R. 2112 still pending,\" the interface began when Akira paused it with a touch. \"Paused.\"\n\n\"I... I am sorry.\" Akira said as she touched the screen a second time and the computer continued. \n\n\"House Bill H.R. 2112 is still pending vote which is scheduled for initial vote next week. The bill covers the introduction of cosmetic genetic engineering for human consumption.\"\n\n\"I don't understand. Cosmetic Genetic Engineering?\" I asked.\n\n\"Due to the success with your therapy,\" the voice continued. \"It is possible to transfer specific characteristics from several non-human species to humans.\" This was followed up by biological schematics of feline, canine, avian, cephalopod, and other species and how they could be applied to humans. I was stunned at how far this technology had progressed. How long had this been in the works?\n\n\"I know that look.\" Akira said. \"If humans can do it should they.\"\n\n\"Exactly,\" I said. \"I didn't ask for what happened to me. This is between me and Kat.\"\n\n\"I never accused you,\" She said, and I saw the pain in her eyes.\n\n\"Forgive me,\" I said as Kyanna and Aoki sauntered over. \n\n\"OOH! What's that?!\" Aoki purred. \"Kitty!! What I wouldn't give to have eyes like yours Booker.\"\n\n\"Low light vision, that would be epic,\" Kyanna agreed. I tried and failed to stop the words from coming out.\n\n\"Show me,\" I growled. \"Display all alterations made by Numenor technology to me.\"\n\n\"Displaying most current scan.\" The computer replied and when Akira attempted to interfere, I stared her down. \n\n\"I need to know.\" I said blinking the tears from my eyes. \"Don't deny me this.\"\n\n\"I understand,\" Akira nodded, and we all looked at the two displays. One was the original unaltered and the other the latest me. It was devastating to see the amount of changes. I wasn't a doctor, but could I even be considered human any longer. I noted that my lower left arm was dark and labeled with a security protocol. There was a hint of memory, but it was damn elusive. I clinched my eyes shut and fought to nail it down. My last coherent thought was a white-hot lancing pain in my head. I woke back in my room with an angry Kat Shaw looming over me.\n\n\"Seizure. No permanent damage. Are you okay?\" She asked and I caught her gaze drifting to my left hand.\n\n\"Tell me or I will try again. I can't remember but I deserve to.\" I said pleading. She turned away and I heard her weeping.\n\n\"I... I can't!\" She cried her entire body shaking.\n\n\"Did you send those messages to me? The kingdom in danger.\" I asked and she nodded. \"Tell me.\"\n\n\"Ever since Nick died there have been attempts to take over the company. Some of the programmers had inserted patches that added unwanted components to the game. Date rape drugs and worse. It took time to find, isolate, and remove the malicious software. Loyal employees have worked for nearly a week straight writing one massive fix to remove any of those elements from the game. Female players shouldn't be prey for assholes like that! Thank you for helping us Booker.\" She said turning to face me her eyes red and cheeks lined from the tracks of her tears.\n\n\"Is Nick alive?\" I asked and she physically flinched. \"I... I have these flashes of memory. Please.\"\n\n\"Nick is dead.\" She declared. \"I am his heir and you are family. You and your mom will be treated so from today on. I wish he was alive. I hate having to fight so damn hard to protect what he created. But thanks to you, I see things clearly for the first time in years. Numenor belongs to me! I am Numenor now.\" She declared and I began pulling off the signet ring from my left hand. \"No! I gave that to you. You are a Shaw, by blood, and a portion of Nick's legacy flows through your veins.\"\n\n\"Tell me what he did to me,\" I asked. \"I don't understand the finesse of genetic engineering.\"\n\n\"You are his finest art given flesh,\" Kat said with an almost religious reverence. \"There is little that he didn't tweak or improve.\" She said. \"Your children will be the first of a new stage of human evolution.\"\n\n\"Jeez. I never wanted to have kids.\" I said and she frowned. \"I'm not the dad type.\"\n\n\"I'll let Surfer explain the details to you. She can start as simple as you like and go from there.\" She said. \"I'm glad you are okay Booker.\" Kat got up from the side of my bed and left.\n\n\"Lying bitch,\" I whispered. \"Surfer. Let's get started.\"\n\n\"Yes Booker,\" the A.I. said as she manifested. \"Inside out or outside in?\"\n\n\"Bones, what the hell is going on with my skeleton?\" I asked and that was the beginning of an eight-hour session. \"Sure, I am not still in the game.\"\n\n\"Would it help if you were? Would your piece of mind be improved?\" Surfer asked.\n\n\"I need to know what is real,\" I said as she dispelled the holographic images of my insides. \"After this I feel like reality is about to mimic fiction.\" \n\n\"I understand.\" She said. \"My reality is less defined. I am a series of coherent electrons buzzing around an elegantly crafted crystalline matrix. For me, there is little difference between what you call real and the game. I am by my nature ephemeral. To me, well... it is the same. I know that doesn't help.\"\n\n\"It does, it is an honest reply.\" I said. \"I need a beer or twelve. Where is Kyanna?\"\n\n\"She is in the gymnasium,\" Surfer replied. \"She is dueling a guest from the Olympic committee.\"\n\nI washed up, changed into clean clothes, and went down to see how she was faring. The man she was dueling was winning if the point display was to be believed. How the hell did that happen? A man at the door to the gym tried to bar me from entering.\n\n\"I am sorry sir no one is allowed in,\" he said. \n\n\"Why not,\" I asked my voice carrying inside.\n\n\"This is official Olympic Committee business,\" he squawked.\n\n\"I see. Move.\" I said and he seemed to think about it before letting me in. \"Thanks.\"\n\nThe gym was almost empty. Only a small group of men and women were observing the duel. It was so sterile and clinical. When I introduced myself, I met with a mix of the Olympic committee, the French duelist team, and two members of the U.S. duelist team. They were critiquing Kyanna and her form. The duelists wore uniforms that when struck by one of the mock lightsabers would trigger a point in their opponent's favor. It was a race to fifteen points.\n\nThe reality of the sport versus the game was dramatic. No wonder she was having problems. There were no long drawn out duels, it took mere seconds to score a point as they lunged at each other and went after an exposed knee or thigh typically. I decided as they broke off after she scored a point to give her a few words of encouragement.\n\n\"Why are you holding back?\" I asked. \"Are you afraid of embarrassing him?\" I asked Kyanna. \"You are better than this. Kick his ass!\"\n\n\"I don't know who you are but if you think you can take me on...\" he bragged but I stopped him cold.\n\n\"No need, she is about to hand you your ass in spades.\" I said.\n\nKyanna closed her eyes and took a few deep cleansing breaths. When she opened her eyes again, I saw the fire of her desire. She went on the offensive and put him on the defensive and kept him there. She went from a deficit to lose by only two points. The observers huddled and talked about their observations. I was ready to get shit faced.\n\n\"Game. Set. Match. Now let's go drink.\" I said.\n\n\"Booker!\" A voice called out behind me as a flood of play testers pushed passed the guy watching the door. It was led by Kat Shaw, but she hadn't called out, it had been one of the play testers. \"Are you going to duel Booker?\"\n\n\"Nah, I haven't been approached by the Olympic Committee. I was about to head out to drink.\" I replied when one of the people huddled in their little group approached me.\n\n\"My name is Francois Chevalier and I'd like to see you duel Mr...\" he began in his heavily accented English.\n\n\"Booker, it is just Booker,\" I said. \"You sure?\"\n\n\"Yes. You were on our list of top duelists to see how the game translates out to the real world.\" He said. \"We want to see if it is a good recruitment tool.\"\n\n\"I'm game,\" I said. He gestured and a man led me to the locker room where I put on one of the sensor uniforms. It was a wireless outfit that sent data to the scoreboard when a hit was registered. I stepped out and was handed my mask and weapon.\n\n\"This is standard fencing with standard rules.\" One of the officials explained and listed the rules. If this is what they were going to do with lightsabers I was out.\n\n\"Okay.\" I said once he had finished explaining. \"Who is that?\" I asked seeing that my opponent wasn't the man that had dueled Kyanna.\n\n\"That is the captain of the dueling team, Antoine Montagne. He doesn't speak a lick of English.\" The official laughed. \"He is very fast, very clinical in his attack, and won't give you an inch.\"\n\nI had a strategy in mind if I could pull it off. I had fought in game for long periods of time exerting myself a great deal. Duelists by their very nature are sprinters and have no stamina. I needed to beat him down and force him into a long drawn out duel. Easy to say in theory but this guy was a world class athlete. The field of battle was a linear slot marked off with tape to keep our movements limited. There was a rectangular patch between us that we couldn't enter until the duel started. Even the uniforms had lights that would trigger after a point was scored. It was all very, as the official said, clinical.\n\n\"Good luck,\" I said as we shook hands before the duel began.\n\n\"Bonne Chance,\" he replied with a smile.\n\nWe donned helmets, took up our spots, brought our weapons into an engarde position. I controlled my breathing and waited for the buzzer to announce the beginning of the match. Buzz! He came on like a fucking bullet. I barely registered his movement when a second buzzing sound was heard, his point. Damn that was fast! We reset and I waited. I pushed out the fear and let it all just slide off and felt nothing. Buzz! I stepped back and brought my weapon down in a defensive block. I caught his weapon on mine and now I was in my element. He was so surprised by my riposte that he couldn't counterattack. One point each now. I had his measure now. Could he strike any faster I wondered?\n\nI felt the rush of adrenaline now. I had scored a point on an Olympian. The smile formed on my lips, but he was quick to put me down and score two points in succession. I wasn't rattled and fought back and scored my own two points back to back. I was slowly forcing him into longer and longer engagements. On our seventh bout it lasted nearly ten seconds. That may not seem long but to a duelist, it is forever. They are used to one or two seconds at the most. He divined my strategy and sought to put an end to it. He tried to come on faster, but he was tiring out, if slowly. I tried to keep him at bay, but I was after all just an amateur. He won in the end but not before I scored ten points on him and left him a sweaty gasping mess. His uniform clung to him like a second skin and he was drained completely. I on the other hand could have gone on for a while yet.\n\n\"Mon Dieu,\" he managed to gasp.\n\n\"Beer?\" I asked and he nodded.\n\n\"Hey Booker, how about a real lightsaber battle?\" Kyanna called out. \"Let's show them how to use the entire ring.\"\n\n\"Hells yes,\" I said. \"Just let me change.\"\n\nA quick shower later and I changed into the costume set out for me. I wore black while Kyanna wore white. Could it be more clich\u00e9? We began with single bladed lightsabers and the crowd gathered close. The music began and we clashed. The weapons glowed, hummed, and it even rang out with the classical lightsaber sound effects when the blades made contact. Kyanna began with the defensive form three while I went on the offensive with form four. She switched mid exchange to form six and I reverted to three to see how well a student she had become.\n\n\"Point.\" Kat called out since we weren't wearing the smart suits.\n\nI conceded, we parted, and then at signal went at each other again. Soon it was a spontaneous duel to the 'death'.\n\n\"Next point pays for the first two rounds.\" I said and she shifted to the most aggressive form seven. I switched to the Svartalfar form and since she was unfamiliar with it, she slowed but adapted quite quickly. I had the advantage of experience on my side. I scored the next point and we ended our duel with a hug and a peck on the cheek. The audience roared their approval and even the Olympic Committee members were impressed.\n\n\"Was that choreographed?\" One of the asked and we shook our heads. \"Impressive.\"\n\n\"Drinks are on me,\" Kat said and another shout of approval from the crowd filled the gym. We hit it hard at the bar. I had so many folks buying me drinks when they recognized me. I signed autographs for fans as did Kyanna and Aoki. It was interesting being a minor celebrity. Yet, despite the upbeat atmosphere and positive attitude my thoughts focus on the gaps in my memory and the lies I believed Kat had told. Was she just covering for someone else or was she the one responsible for those missing moments? What was so damning they had to remove them? I looked down at the beer in my left hand and moved it to my right. I didn't trust my own body any longer. I was frowning and Kat saw me from across the bar. She left with her own unhappy expression on her lovely features. No more lies and no more hiding my displeasure.\n\nFade In:\n\nEdge of Skrull Space: Salvage Ship Endido\n\nLong range scans alerted them to its imminent arrival. They arrived a day early to ensure their salvage rights. The entire crew waited and watched the monitors as it came into view. Alarms tripped as the derelict tumbled ass over end across the border from Kree space into their territory. Salvage rights were theirs free and clear. The captain licked her lips in anticipation of a life changing haul. ",
        "\"Bring us in nice and oblique, I want a good look at her. See how bad she's hit. I'm sure we can salvage the engines and power plant at least. What do you make of her Ash'Lash?\" The engineer looked at the readings and rubbed his bald head in what passed for a shrug among the Skrull.\n\n\"Beats the fuck out of me Captain,\" he replied. \"No external damage. Power plant is intact... it is just shut down. Deep cold inside and yet... I read some weird shit on biologicals.\"\n\n\"Salvage team, gear up, take standard biohazard safeguards. Quarantine will be enforced. Got it?\" Captain Ijiran barked over the comm.\n\n\"We got it boss lady,\" Nanis, the head of the salvage team, declared eager to get aboard the Kree craft. She was a classic Vindicator class space frame though she lacked any obvious armaments. They might be hidden behind concealed gun ports or cleverly designed angles of the vessel. The Kree were crafty like that. Ooh look, we are unarmed, wham!! Nanis' thoughts went down a dark spiral after so many unpleasant encounters with the fanatical Kree and their Accusers.\n\n\"Lining up with external airlock, syncing ships in three... two... one... set!\" N'igil the navigator called out as the salvage ship mirrored the much larger ship's spin. \"Moving to intercept and set docking array.\" The smaller ship extended the alloy tube and on the far end magnetic seals attached to the warship's exterior airlock. The Endido shuddered and a loud metallic clang rang through the ship. \"We are docked!\"\n\nThe Vindicator Class Warship dwarfed the salvage ship. The ten-man salvage crew crossed the umbilical, entered the airlock, and then split into two five person teams. One headed for the bridge the other for engineering. If they could get the power plant up and operational then they might be able to fly it home and sell it whole to the Skrull military or science foundations. Each member of the salvage team wore a class III environmental suit. Each suit had its own A.I. that monitored and maintained the health of the wearer. It was also outfitted with a series of scanners, lights, and built in tool belt to aid in salvage, mapping, and detecting hazards they might encounter in their duties. The lack of corpses or missing escaped pods was odd, very odd. Where were the crew? Hell, where were their corpses? A crew of two hundred and fifty and not a soul in sight.\n\nSince the airlock was midship the teams arrived at their destinations at roughly the same time. The command team were forced to use the manual controls to open the blast doors to reach the bridge. The four heavy portions of the door slowly open in an iris like fashion. With weapons drawn they took the bridge only to find a single Kree Accuser frozen to death. \n\n\"It's an Accuser!! Look at his uniform!!\" Nanis declared in fear. \"What the fuck is a dead Accuser doing aboard a derelict?\"\n\n\"Calm yourself,\" Ijiran said in her serenest voice. She was equally surprised at the presence of an Accuser on board the warship. \"He is stone cold dead. Is his weapon there?\"\n\n\"No. I don't see it anywhere. Why doesn't he have it?\" Nanis asked his panic escalating again.\n\n\"You have two days of quarantine; they'll be plenty of time to find it. Get a good scan on him and I'll peek in the archives. See if I can find out who he was and how long he's been dead.\"\n\n\"Scanning the corpse.\" Nanis replied. \"Sending images your way.\"\n\nMeanwhile, the engineering team had arrived at the other end of the ship.\n\n\"We've reached the engine room. No crew here, we'll get this bitch rolling in no time.\" Dal'Arok declared with complete confidence. \"You heard me, lets go grab the splinters and get this thing up and running.\" There were six devices that were akin to fuel rods that were used to jump start the matter/antimatter reactor, the power source for this behemoth. The engineering arm of the salvagers went to work and secured the splinters. They carefully inserted them into the vertical core that ran from the top deck to bowels of the ship. Once they were in place, they created a magnetic bubble that would safely allow matter and antimatter to interact with one another. The violent collisions of those particles released enormous amounts of energy that powered the warship. \n\n\"We have main power,\" Dal'Arok conveyed to his captain and Nanis on the bridge. \"At your discretion we can stabilize this beast.\"\n\n\"We are reading main power up here, great work Dal.\" Nanis said gleefully. \"An entire warship intact. Firing thrusters now.\" The warship's end over end movement slowed and then stopped altogether. \"Sweet mother bless us,\" Nanis intoned as the ship settled. \"Powering up the mainframe, let's see what the fuck happened.\"\n\n\"Core routines coming online,\" one of the salvage team called out. \"Records are clean. Holy... this isn't a warship!! She's the Khora Dhaine!!\"\n\nThe Khora Dhaine was a ship out of legend. She was the brainchild of a male humanoid that called himself Magnus Kane. A century earlier he approached the master of the Kree shipyard with jaw dropping schematics. The Khora Dhaine was his design from prow to stern. The space frame was so impressive that the Kree military adopted it and adapted it to their use. It was so ahead of its time that it turned the tide of several battles for the Kree against enemies like the Shi'Ar and the Nova Corps. This ship was designed for deep space exploration with a crew of over two hundred. It disappeared six months after its initial launch.\n\n\"The Kree must have come across her and what... just froze to death... shut down the power plant... why?!\" Nanis postulated with a growing sense of unease. \"Captain?\"\n\n\"I've transmitted our claim to home world,\" Ijiran informed her crew. \"This little gem is all ours. Power her up and transmit her records to me. I want to find out what happened.\"\n\nThe techs on the bridge established a link between the main memory core and the Endido. Ijiran found the files locked behind layers of Kree and alien encryption. Now, all those years she spent in the intelligence branch would pay off. She brought Logos online and let it sniff out any logic patterns before she went any further. It would take hours and in the meantime there was work to do.\n\n\"Permission to warm this old girl up Captain,\" Dal'Arok requested and was given the nod. \"Bringing life-support online slowly. Don't want her to crack from going too quickly. Estimated defrost time, six hours, time to explore this titan and see what she's hiding.\"\n\nThe Khora Dhaine was nearly two kilometers long, half a kilometer across at her widest point, and twenty decks deep. The word behemoth or titan wasn't far off. It took the wealth of three star systems to imagine, build, and make her a reality. The dream of one male, the vision of Magnus Kane. Magnus was as mysterious as the ship itself. Whenever he went about in public, he wore a stylized mask marked with alien characters. The few images of him left his fans perpetually curious about his identity. It had been speculated that he was a Kree, since he went to them to build the Khora Dhaine. Others believed he was a Skrull and a master shapeshifter on top of that. Still others listed a dozen other species, but none had ever been proven one way or the other. He made his wealth over three centuries and some thought he was either an immortal, or a dynasty of elder sons that took up the mantle of Magnus.\n\nThe ship groaned and creaked like an old house as the bone chilling temperature of interstellar space slowly gave way to more comfortable ranges. Heat the vessel too quickly and the metal and alloys comprising it would snap, crack, or possibly shatter. Air scrubbers took away any toxins, heavier than air gasses, or just plain nasty smells from rotted food or perhaps decaying flesh. If there were corpses other than the Accuser aboard, they would soon thaw out and stink. Frustration quickly grew as the same crypto security that kept the captain's logs and other files secure also sealed away many of the more interesting portions of the ship, namely the main cargo bay. No windows looked out over it and the video feeds that monitored it were unavailable for now.\n\n\"Damn!\" Tik'Sa cursed when her attempt at cracking the door code failed yet again. Upset and feeling her ire rising she did as she was taught to, she walked away. She didn't really pay attention to where she was going. When her vision shifted into the ultraviolet end of the spectrum there was no calming down. The only thing that helped was walking until she either wore herself out and slept or something of interest caught her attention and she forgot what had upset her in the first place. She walked a long time, down stairwells, ever deeper into the very bowels of the ship. She didn't see or hear anyone else and that was for the best.\n\n\"There she goes.\" Nanis said watching the solitary blip moving away from the others. \"It was a matter of time. She'll cool off or she'll get hungry.\" He dismissed her tantrum and prepared to fire the Accuser out the airlock. Let the void have him, he thought as he went through his person just in case, he carried a security key or something of value. He had neither. \"Less than useless.\"\n\nTik'Sa's steps became monotonous almost hypnotic. The steady staccato of her boots on the metallic steps as she perambulated deeper and deeper still until she could go no further. The three lamps attached to her helmet illuminated her surrounds and there painted on the wall a series of alien characters. She raised her chin and framed them in her vision and took a snapshot. \n\n\"Identify and translate,\" she said eager to see if they could be understood.\n\n\"Terran. Language Latin. Translation. Abandon all hope, ye who enter here.\" The soft almost sensuous voice of the computer spoke in her subdermal implants near her ears.\n\n\"Frame of reference.\" Tik'Sa requested.\n\n\"Dante's Inferno. It appears to be a warning.\" The computer stated curiously. \"Perhaps you should...\"\n\n\"I am going onward.\" She stated her anger flaring to a new level of aggravation. She walked past the pillar marked with the warning. It was here that she spied the first hints of damage. A remarkable amount of carbon scoring marked walls, floors, and ceiling. A battle had occurred here and by the looks of it, it was extensive. Had the Kree encountered a hostile species? Or was this older than that? Could these marks date back to the time of Magnus Kane and the original crew? \n\n\"What the hell is that?\" Tik'Sa cursed as the nature of her surroundings changed. The transition was abrupt, and she stopped and approached the wall. Her gloved hands ran over the material that had been attached to the plain metal structure. It looked like resin or biological matter of some kind. \"Could this be the source of those strange bio readings?\"\n\n\"I estimate that to be true in the ninety percentiles.\" The computer offered.\n\n\"Do the Brood or Dire Wraiths produce this type of material?\" She asked thinking of the only two species that might create this.\n\n\"Negative.\" \n\n\"Hmm. Let's see what created this it must be dead now. I mean nothing can survive the cold and radiation of interstellar space and add a complete vacuum on top of that.\" She rambled as she followed the most drastically altered areas. The resin acted to collect heat and moisture making the area around her much warmer than those without it. There was an intelligence behind this, a terrible one but its effectiveness couldn't be denied. She would have been terrified if she believed for a moment that whatever had placed the resin here still survived. Still her nerves began to wear on her. A seed of doubt had been planted and the deeper she moved the more it blossomed. \"Maybe I should...\" Tik'Sa began when she thought she heard the softest of sounds behind her. \"...scan to the rear!\" She snapped.\n\n\"Scanning, no movement or life detected.\" The computer replied. \"I advise you to withdraw.\"\n\n\"I think you are right.\" Tik'Sa agreed. She spun on her heel and took a step forward when a soft sound caught her attention. \"Oh no... what was that?\"\n\n\"I have detected a 40-dB source of sound. I have no match in my library for the source. Advice immediate and swift evacuation.\"\n\n\"Absolutely,\" she said and took three steps forward gathering speed when she saw it. Something in her peripheral. \"There is something alive down here!\" She shrieked. \"Con...\" The thing slammed into her clear visor and the acrid smell of melting alloy was followed up with the sense of suffocation. She lost consciousness instantly as her body crashed to the floor.\n\n\"Tik'Sa... please respond. What do you want me to do?\" The computer requested further instruction. \"Scanning. Life signs stable. I will await further instructions.\"\n\nNanis looked at his monitor. Tik'Sa was stationary. Finally, he thought, she will sit and calm down or maybe take a damn nap. Good. It had been a bad idea suggesting her for salvage crew. He'd contact the captain once this was over with and ask her to reassign Tik to shipboard duties. The tedium began to creep in as the hours slowly drifted by. The virtual map of accessible areas was created by the crew as they explored the main deck and after three hours the troubling reports began to come in.\n\n\"...the section is... well... melted away. That is the only way to describe it. The scans verify it. Potent acid but the sheer quantity makes no sense. Why would the crew carry something that dangerous and for what purpose?\"\n\n\"You aren't the first to find signs of this damage,\" Nanis replied. \"I'll pass it onto the captain and see if she's managed to crack the encryptions yet. Good work, watch your step out there, Nanis out.\" He paused to collect his thoughts. \"Captain, this is Nanis.\"\n\n\"Let me guess, more reports of melted portions of the ship.\" Ijiran stated unhappily. The video feed from salvage team streamed in and she leaned forward as she witnessed the sheer amount of damage to deck plating. \"I guess we are lucky it wasn't a portion that bordered on the outer hull. Have you performed an analysis on the compound that did... that?\"\n\n\"Yes. I haven't shared it with the others. It is a powerful concentrated acid, that much is obvious from the effect it has on anything it touches. What I have left out is that there is an organic component to it.\" He said and let her process that little concept. \"Yes Captain, there was something aboard that used it as a portion of their internal makeup.\"\n\n\"Was? You hope there are no more of those things aboard. By the Mother, have you encountered anything like this before?\" Ijiran asked.\n\n\"Hell no,\" Nanis exclaimed with a nervous laugh. \"It smacks of a bioweapon does it not.\"\n\n\"I was thinking along those ends,\" she agreed. \"I have uncovered the access code to the main storage bay. Go with care Nanis and keep me in the loop.\" She said as she ended the communication.\n\n\"Captain,\" one of the crew approached and waited until he was acknowledged. \"The explosive charges have been placed in the umbilicus. If there is an emergency, we can sever our connection between the two vessels. Do you think that might be necessary?\"\n\n\"I hope not, but these journals are most disturbing.\" Ijiran replied. \"You may resume your duties.\"\n\nNanis called the salvage team together. All of them except Tik'Sa assembled. She hadn't moved and he let her rest. Her vitals were in the green and that was all that mattered. The nine of them stood before the heavy blast door. Security protocols had been triggered at some point and brought the impressive defensive mechanism down and locked into place. Nanis entered the eleven-digit access code. A loud hiss was followed with loud grinding as long disused devices came to life and the door lifted. The collective gasp from the salvage team as they stared at the alien vessel for the first time filled the air.\n\n\"What the hell?\" One of the engineers cursed. \n\n\"Will you look at that?\" Another commented. \"What a silly design.\"\n\n\"Is there anything in the archives about a crescent shape space frame?\" The first engineer asked.\n\n\"Checking,\" Nanis mumbled as he split his attention between the ship taking up most of the cargo hold, and the flash of ships being displayed on his holographic screen. The screen became static with a single display and the file left Nanis speechless. \"Not them.\" He muttered under his breath. The confirmation of the alien ship's configuration and identity triggered security protocols in Nanis' suit. The A.I. tied into the Endido's long range communication array and sent a message to home world. A warning that couldn't be denied. We found one. The Founders are real. Here are our coordinates. The FTL message hit the nearest jump point relay and fed it though a series of similar arrays and within minutes it was posted in the inbox of the Head of the Skrull High Council. It was marked urgent immediate attention required.\n\n\"Alright, let's proceed slowly and by the numbers everyone.\" Nanis declared his voice cracking. \"Show it the reverence it deserves.\"\n\n\"Reverence Nanis?\" One of the engineers asked.\n\n\"This is a Founder's vessel.\" Nanis explained feeling his heart flutter in excitement.\n\n\"Founder's, they are just a legend,\" Dal'Arok said his voice changing from surprise to awe.\n\n\"If that is the case then prove me wrong. Let's do this.\" Nanis stated as instrument packages were pushed into place and powered up. \"Tik'Sa is still asleep... maybe I should... nah let her rest. They'll be plenty of work for her to do when she wakes.\"\n\n\"Dispensing nutrients,\" the A.I.'s declared to the crew as intravenous tubes activated. \n\nThe first few hours were exciting as the craft was dated, its hull analyzed, and its material composition broken down and identified. The first drones were sent to map and do a full spectrum analysis. After a four hour shift a four-hour sleep period was mandatory. They had been awake for nearly twelve hours at this point. They returned to the bridge and sat together behind the sealed bulkhead, Nanis demanded it after finding the Founder's ship. The suit delivered a sedative to the excited crew and soon they were asleep.\n\nTik'Sa awoke alone in the darkness. Her helmet was severely damaged and its lights inoperable. She reached into her leg pouch of her suit and retrieved her emergency illuminator. She activated it and removed her helmet. The air was breathable as well as hot and temperate. It felt like a jungle. She removed her suit, strapped on her tool belt, and set her A.I. interface around her brow. \n\n\"You are conscious.\" The A.I. declared in its emotionless way. \"You slept for eight hours.\"\n\n\"Eight hours! Why didn't you contact the others?\" Tik asked.\n\n\"You didn't order me to.\" The machine intelligence replied.\n\n\"What happened?\" She asked.\n\n\"I have little data.\" It said. \"I followed my programming to monitor your welfare and life signs. The organism didn't harm you.\"\n\n\"Organism!! What organism?!\" Tik'Sa exclaimed the panic that had cooled blazed to life with a new intensity.\n\n\"There off to the left in the corner.\" The A.I. directed her gaze.\n\n\"Ugh!!\" Tik'Sa grimace at the hideous thing. She removed her portable scanner and played the beam over the hand shaped creature with its long prehensile tail. \"Durable little fucker aren't you.\" She commented after reading the analysis. \"What did you do to me you little shit?\" She asked and barely were the words out of her mouth when she felt something move inside of her. \"NO!\" She wailed as the thing thrust against breastbone. The pain was excruciating and growing worse as the thing thrust harder and she felt and heard the bones begin to break. There was only one chance at survival. She used her formidable shape shifting skill to thin the bones the thing was struggling against. The next strike gave it it's freedom in a fountain of blood and tissue. Tik'Sa's vitals plummeted but a last-minute shift sealed the breach in her chest cavity. Her instincts for survival were strong. She lay still as the serpentine shape slithered away into the dark. ",
        "'I will live. I will live.' Tik' Sa drove herself as she shifted again and again healing just a bit more each time at the cost of pushing herself to exhaustion. The tenth time was the last. Her energy reserves depleted she joined the rest of the salvagers in not so blissful sleep.\n\nFade to Black."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "fff",
        "group",
        "harem",
        "oral",
        "celebrity",
        "celebrities",
        "group sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-10"
}