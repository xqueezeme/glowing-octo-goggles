{
    "title": "Elysium",
    "pages": [
        "All my stories seem to start with a vision, or a landscape, or one of the characters. This one started with Anna, naked in the sea. Though that scene didn't make it in here, it is what started it. \n\nAs always, I hope you enjoy.\n\n- W\n\n*****\n\nI tapped my fingers absently on the steering wheel as I maneuvered my car through the final sweeping turn, keeping my speed down to what I'd term 'moderately stupid' as opposed to 'suicidal'. Tall trees arched overhead at intervals, casting dappled sunlight over the interior of the Audi and the remains of my junk-food lunch in its crumpled waxpaper wrapping. I could smell the sea, and I desperately hoped it would still warm enough for a swim when I got there.\n\nIt had been nearly a season since I had last been to the family holiday house, an entire spring and summer too full of work and crises for me to be where I loved most - up to my neck in the ocean, or surfing down the face of a wave on a surf-ski. I was long overdue some me-time, and I planned to make the most of my long weekend away.\n\nThe sun was still some way clear of the horizon when I turned into the private gated lane, flanked by the unkempt hedge and secured by a single link of chain that held the gate closed on a rusting steel nail. The property name was still visible on the aged wooden nameplate; the single word etched out by the less weathered silhouette of long-since flaked paint. \n\nElysium. \n\nIt was a good name for our family's little slice of heaven, far enough away from the world that you might not see another soul except in the highest of high summer.\n\n.:.\n\nI parked the Audi in the deep sandy shade under the Christmas tree that we'd planted when I was seven. Eighteen years of hot, bright summers and a shallow water table had suited the tree, and I didn't doubt it would double in height again before I died. I smiled as I reached up to brush a low-hanging branch; I regarded the tree as mine, and I always said hello to him when I came to visit.\n\nThe lock in the front door had seized with salt, so I entered via the aluminium sliding door on the patio, making a mental note in passing to check whether Dad's oil and tools were still under the kitchen sink. I turned on the power at the breaker box, and unpacked the selection of supplies that I'd brought with me into cupboards. \n\nI walked slowly through the house, opening windows to let the building air, and dragged one of the patio chairs outside so that I could enjoy the view down to the sea while enjoying a lukewarm beer. \n\nI lay back, watching the breakers slowly progressing into the bay, stretching the kinks from the drive out of my back. The sound of the ocean rolled uphill and over me, and slowly I felt myself relax.\n\nIt had been a long couple of months. A messy breakup, significant project delays at work... it was not shaping up to be a good year for me. I sighed, and set the beer down. The waves beckoned me, and after a few minutes of apathy I stood, stripped to my boardshorts and loped down between the low dunes to the water.\n\nThe surf was up, and the coming spring tide meant that the waves were breaking high up on the beach, sometimes even pushing up over into the small lagoon through its shallow sandy channel. I eyed the waves, decided they were too dumpy to chance, and instead stepped out into the lagoon, enjoying the kiss of the cold water on my feet and the sand between my toes. \n\nI remembered how my father and I had built sandcastles here while I was younger - frequently merely so that Anna and I would have somewhere safe to swim and play. \n\nOne golden summer's evening we had brought spades down with us and had built a buttress a metre high, with a seat for Anna to sit in. It had still been there three high tides later.\n\nI wondered, idly, where Anna was. It had been a few weeks since I'd last spoken to my sister; she'd been off to some function in the States, and since it hadn't had anything to do with aeronautics or computing I'd been less than completely interested in the details around it.\n\nI walked out into the lagoon until the water rose up to my hips, took a breath, and dived.\n\n.:.\n\nThe sun set in a riot of glorious orange and violet, and I saluted the end of the day with another beer as I waited for the coals on the Weber to reach a working temperature. Venus winked and danced just above the horizon - it would be a beautiful night with little to no moon, and I knew from experience that the Milky Way would spread like crushed gems across the sky. \n\nSlowly the stars started to appear, and I watched the various old companions of my youth flickering slowly into view above me. \n\nLight lit the top of the Christmas tree, and I heard the throaty growl of a car's engine. I banked the coals into the centre of the Weber and walked around the side of the house in order to investigate this new arrival. Visitors were rare out here - the closest other house was more than a kilometer further down the coast - and I was curious , though it was likely just someone who had got lost, seen the house lights and come to ask for directions. \n\nA strange car was parked alongside my Audi, and I could see a small, indistinct figure bent over, rummaging inside.\n\n\"Excuse me, are you lost?\" I asked.\n\n\"No. I know precisely where I am,\" my sister replied, spinning around and laughing at me.\n\n\"Anna! Hi! Sorry, I didn't recognise the car.\"\n\n\"It's a recent purchase. I decided I needed a present for being a good, responsible girl. So I bought something ridiculous.\"\n\nShe walked over to me and swung her arms up and around my neck. \"Hello, Joey. It's been a while. I missed you.\"\n\n\"Ditto,\" I said, returning the hug. \"I wasn't expecting you out here. But welcome. I've got the fire going, and there's beer in the fridge and port on the counter.\" I gently let go of her and picked her backpack up off the sand. \n\n\"I took a chance coming here,\" she added. \"Mum mentioned you'd picked up the keys, so I thought it was worth the drive. I haven't been out here for a while.\"\n\n\"Me neither,\" I said. \"Door's jammed,\" I added as she reached for the front door handle. \"I haven't got round to fixing it, swimming and drinking were higher on the priority list.\"\n\n\"Your priority list sounds good. Dump that backpack, Joey, and let's drink and watch the stars. I'm in need of some booze and some fresh air.\"\n\n\"You read my mind.\"\n\n.:.\n\nAnna lounged on one of the deck chairs, imperiously directing my cooking. We're a year apart in age, and she's always felt that being the elder of us that she gets to be the empress and I get to be the serf. I seldom complain about the arrangement - Anna's a born organiser and having her around means I don't have to do the ridiculous admin tasks that accompany daily life. Anna will make sure there's a place to stay and food to eat - and all I have to do is show up and play chef to keep my end of the bargain. \n\n\"Do we have any vegetables, or is this a Joey Standard Meal?\" she asked, dubiously.\n\n\"Joey Standard Meal, ma'am,\" I drawled. \"I brought an emergency potato salad, but I haven't done anything with it yet. It's in the fridge.\"\n\n\"Aha. I'll get on that then. Lamb's good, sausage is good, but it's not a proper beach house debauch without potato salad.\"\n\nShe put her cider aside, and sauntered into the kitchen. I caught glimpses of her as she rummaged. \n\nShe looked older, and tired, but more at peace with herself and the world. Far better than she had the last time she'd been here, when her company had been on the rocks and she'd been running on nerves, alcohol and caffeine. \n\nI was glad to see my sister back. \n\nI sipped at my beer, and watched the smoke from the barbecue wafting almost directly upwards in the still night air. Large rollers boomed on the beach, and the occasional bat flitted past the deck lights, hunting the moths that circled them stupidly. \n\n\"Whatcha doing?\"\n\nI turned to Anna, and smiled. \"Breathing. Enjoying the silence. I miss here.\"\n\n\"Uh huh. I miss here too when I'm not here. Still, we're lucky... not many people have a safe haven. Somewhere that they can run away to when it all gets too much.\"\n\n\"I wasn't running,\" I answered.\n\n\"Then where's Julie?\" Anna tilted her head, inquisitive.\n\nI winced, and busied myself with the fire. \"Not here,\" I muttered, after a moment. \n\n\"Uh huh, I gathered as much. And from your reaction I'm guessing it's bad news, no?\"\n\nI sighed. \"Apparently, I'm not serious enough about our relationship. I don't value her enough, or something.\"\n\nAnna pursed her lips. \"Sounds dire. What did you do?\"\n\n\"I like how you leap to the conclusion that it's my fault,\" I muttered.\n\nAnna said nothing, merely raised an eyebrow.\n\n\"I went to a rugby match. Apparently, 'Do whatever the fuck you want' doesn't mean what I think it means.\"\n\nShe laughed. \"Come on, that can't have been all you did. Fess up, Joey. Tell big sis your fuck-ups. I promise not to mock you too much.\"\n\n\"As if,\" I sighed as I banged irritably at the grille. \"Ah, sod it, Anna. I'm twenty-five. I've hardly even got my career kicked off. I don't have time or inclination to get involved in discussions about settling down, buying houses, etcetera etcetera.\"\n\n\"Mm-hmm. Somebody felt her biological clock ticking.\"\n\n\"I guess,\" I murmured. \"But you know me.\"\n\n\"Rudderless, and adrift, at the mercy of the wind and the tide,\" she intoned. \n\n\"It works for me. Besides, I'm not adrift. I work hard, and I am doing well for myself. I want to go overseas, go exploring... I'm not ready to tie myself down to one place.\"\n\n\"You're tied to this place, Joey.\"\n\n\"This is different, Anna. This place is ours. Yours and mine. Time won't change that.\"\n\n\"Here's to hoping,\" she murmured, glancing away.\n\n.:.\n\nWe'd polished off supper and stacked the dishes and utensils to deal with later. I'd dragged our deckchairs to the edge of the deck, so we had nothing between us and the sky as we lay there watching the stars flickering high above us. \n\n\"How are things with you, sis?\" \n\nAnna drew idle figures in the air with her left foot as she considered for a few moments. \"I guess they're ok, Joey. Work's quiet at present, which is good... means I get a bit of a breather. It was crazy for a while...\"\n\n\"I know. You look better. More in control. Less... manic.\"\n\n\"I feel better.\"\n\n\"You look more like my sister and less like a hyperactive squirrel that's eaten every leaf of the ephedrine tree.\"\n\nShe laughed. \"Nice. Thanks, Joey. Glad to know that was the impression I was giving off. Asshole.\"\n\nI smirked. \"Family gets to tell the truth to family.\"\n\nShe rolled her eyes at me, but the grin was infectious. \"Bastard.\"\n\n\"Whether I am a bastard or not is entirely the business of Mum and the milkman.\"\n\n\"I always thought it was the baker, personally.\"\n\n\"True, he does have a certain glint to his eye.\"\n\nShe covered her snort with a sip of her cider. \n\n\"So what else. You seeing anyone?\" I asked, after a while.\n\n\"Nah. No time, no interest. The men in my field are all either married, or serial womanisers, or both. Got enough on my plate without borrowing someone else's drama.\"\n\n\"Amen to that,\" I murmured.\n\n\"I get lonely,\" she confessed. \"But I'd rather be lonely and alone than lonely and with an ass, you know?\"\n\n\"Yeah.\"\n\n\"What star is that?\" she asked.\n\n\"Which one?\"\n\n\"The bright yellow one.\"\n\nI squinted. \"I think it's Jupiter. I could check on my phone, but I'm too lazy.\"\n\n\"This place begets laziness. I'd live here if I could. Swim all day, watch for meteors at night. Sounds divine,\" She murmured as she folded her hands behind her head. \n\n\"You'd get bored, Anna.\"\n\n\"Never. I'd adapt. Soon, the rest of the world would cease to exist, and I could just be me.\"\n\n\"What about food?\"\n\n\"I'd grow a crumpet tree and marshmallow bushes.\"\n\nI laughed at the memory; both had been firm fixtures of the towns we'd built by the sandcastles of our childhood. \"Man cannot live by marshmallows and crumpets alone,\" I replied.\n\n\"Man cannot. Anna can,\" she answered, yawning. She sat up, stretched, and then stood up. \"Going to shower. You going to be out here much longer?\"\n\n\"Nah. Just finishing my beer then I'll come in. It's a long drive and I'm knackered from it.\"\n\n\"Ok,\" she said,bending to brush her lips against my forehead. \n\n\"Night, Anna. See ya tomorrow.\"\n\n\"I'll come say goodnight properly once I'm done.\"\n\n.:.\n\nI pottered around the kitchen, packing away the stuff that didn't require cleaning and ensuring that all the food scraps were binned outside; ants were a problem in the area and the last thing I wanted was a colony in the kitchen in the morning. I cleaned the plates and stood them in the drying rack. Then I killed the outside lights and closed the sliding door, leaving it on the chain latch so that air could get in but four-legged prowlers couldn't.\n\nI could hear Anna rattling around the bathroom, so I continued on through to my bedroom and opened the balcony door - I always slept with the door open at night so that I could hear the waves on the shore. The sea was a darker band against the horizon, with the occasional hint of white from the occasional larger breaker rolling in. \n\nI took a deep breath, then exhaled, content.\n\n\"Joey?\" Anna stood silhouetted in the light from the bathroom.\n\nI turned. \"Hey sis. Done with the bathroom?\"\n\n\"Yeah. I am. Just wanted to say goodnight,\" she murmured. She leaned against my bedroom door frame.\n\n\"Good night, then,\" I said.\n\n\"Come here,\" she replied. \"I'm fragile tonight and I want a hug.\"\n\n\"Long day?\" I asked, as I pulled her to me.\n\n\"Long year,\" she whispered. \"A long, horrible, bloody-minded year that I'm glad to be rid of.\"\n\n\"Amen,\" I breathed. I tried to ignore the goosebumps the sheer fabric of her sleeping top raised on my arms as I held her against me. She crooked her arms behind my neck, and I squeezed her till she squeaked. \"Mercy,\" she laughed. \"I forget how strong you are, sometimes.\"\n\n\"Go to sleep, Anna. Kick me awake if you want me to make breakfast.\"\n\n\"Will do. Joey?\"\n\n\"Yeah?\"\n\n\"I'm glad you're here.\"\n\n\"Sleep well, Anna. See you in the morning.\" \n\nShe smiled up at me, then turned to go. I watched her leave, but didn't move until she'd pulled her door to. \n\nI hadn't told Anna or my parents about my breakup with Julie out of a desire to avoid the explanations and commiseration. The split had actually happened months prior, and I'd been deliberately alone and uninterested since then, first out of rage and then out of contempt for the 'fairer' sex and their seeming unlimited capacity for insanity. I'd almost forgotten what it felt like to have a girl in my arms.\n\nTonight, however, Anna's innocent goodnight hug had forcibly reminded me, and I berated myself under my breath for my reaction to the feel of her body against mine. Her arms had been warm, her scent subtle, and the swell of her breasts under her nightshirt had been difficult to ignore. \n\nI hoped she hadn't felt the way I'd responded.\n\n.:.\n\nA hot shower calmed me somewhat, though I couldn't clear my head of the sensation of her against me. I was helplessly hard, or course, and realistically the only option for relief was was a quickie with the lovely Mrs Palm. If I could clear the basic urge, I stood some chance of being able to sleep. And so I reached down, cupping my balls in the palm of my left hand and stroking my hard shaft with my right, hunched forward under the hot jet of water. \n\nI closed my eyes, wishing there was a girl in the shower with me, wishing I could push her up against the wall and enter her from behind, fill her up and leave her quivering, dripping, wanting more.\n\nI thought of Julie, of her tight body and delicate pink lips and the quavering whimper she'd always let out when I entered her. I thought of other girls I'd fantasised about in lectures or shagged at University. I thought of my favourite porn clips. \n\nBut it was no good. Anna had intruded and was fucking with my head; Anna in the sheer silvery nightdress, with her disheveled blonde hair and lovely body, her small breasts with the nipples that I couldn't help but feel against me as I embraced her. Anna with the beautiful curve of her hips, and the small scandal pants that that she'd always favoured as sleepwear, barely showing under the hem of the nightie. \n\nI gave up, surrendered to the image of her, conjuring the fantasy the soft texture of her breasts in my mouth and hands, the phantasm of her spreading herself for me, smiling up at me, arching her back as I entered her... and almost before I could consciously feel shame about what I was doing I came, groaning, shuddering, my come running down over my hands, flowing away in the water. \n\nI took a deep, shuddering breath, feeling somewhat disgusted with myself. The shower had lost its savour, so I cleaned myself off, wishing that I could wash my conscience as easily. \n\nI attempted to rationalise my behaviour - Anna had always been a stunner, and even at my most polite I would be forced to admit that I had a serious case of blue balls to contend with at present. My body was clearly just reacting to the proximity of an attractive, partially clothed girl. \n\nI'd simply have to accept that I had fantasies about her - that I'd have to keep them in another one of the mental drawers labeled 'Joey's kinks - do not open' and do precisely that.\n\nThe plus side of my perversion was, however, that I slept like a dead man. \n\n.:.\n\n\"Wakey wakey, sleepyhead.\"\n\nAnna trailed her damp hair over my face, and I spluttered awake.\n\n\"It's a lovely day by the sea, and I've already been for my first swim. Somebody promised me breakfast, and Anna is hungry.\"\n\nI scrubbed at my eyes, and sat up, gazing blearily at her. \"What time is it?\"\n\n\"Just after nine in the morning. It's a glorious day, full of opportunity to eat pancakes.\" She eyed me. \"I suppose I need to let you get dressed if I want food, right?\" she added, amused. \n\n\"Yeah, please, if you don't mind.\"\n\nShe closed the door, and I pulled off my pajama bottoms and swapped them for my board shorts. I stretched and rubbed the sleep out of my eyes, pulled on a vest, then slumped off downstairs to the kitchen, where Anna had already set out the ingredients I needed.\n\n\"You've lost your tan,\" I observed, as I cleared a working area on the counter top. Anna sat on a bar stool opposite me, kicking her heels against the stool legs and resting her chin on her hand. \n\n\"All work and no play makes Anna a ghost,\" she replied with a sigh. \"No time to sun, ergo I am pasty pale. Alas.\" She pursed her lips. \"I'm hoping to catch some sun while I'm here; the weather looks like it's playing along.\"\n\n\"It should. Today's supposed to be quite warm. Hope you brought suncream,\" I murmured. \"Otherwise, you're going to be the goddess of lobster.\"\n\n\"I'm not an idiot,\" she retorted, grinning. \"Of course I came provided. Last thing I want to do is burn and peel. Yuck.\"\n\nI rummaged around for the mixing bowl and hand whisk. \"Ok then. So... You sure you want pancakes? Nothing else?\" \n\n\"Pancakes always work for me,\" she replied. Her hazel eyes twinkled. \"I'm easy, you know.\"\n\nI snorted. \"Cheap date,\" I answered. I cracked some eggs into the bowl, added flour and milk, and quickly worked up the batter. \"Do me a favour and turn on the gas, will you? And see if we've still got cinnamon and sugar from last time?\"\n\n\"Your wish is my command,\" she murmured, as she slipped off the chair and skipped off.\n\n\"I somehow doubt that,\" I muttered to myself.\n\n\"What's that?\" she called.\n\n\"Nothing. Just muttering to myself.\"\n\nI rescued the battered old pan from under the sink and set to work.\n\n.:.\n\nWe took our breakfast and mugs of coffee out onto the deck. My head was still slightly fuzzy, and I was grateful for the soothing shade of my polarised sunglasses. Three beers after a long drive had hit me harder than I'd thought they would. Anna seemed less affected - she polished off her pancakes in short order and stole some of mine; I watched her with amusement as she brushed sugar off her top and lap. ",
        "She gave me a toothy grin. \"I love your pancakes.\" \n\n\"I know. That's why I feed you them.\"\n\n\"You're an awesome slave. I should offer you a promotion.\"\n\n\"What's the plan for today, then?\"\n\n\"Swim, then supply run,\" she yawned. \"Tide's out at the moment so it will be a good time to be in the sea. I'll be able to stand.\"\n\n\"Short-arse.\" \n\n\"Not my fault you got dad's genes,\" she grumbled. \n\n\"Yours aren't exactly second place, miss,\" I retorted. I stretched a kink out of my neck, then considered. \"So, shall we head down?\"\n\n\"Yeah, lets do it.\"\n\n\"Sold to the girl in the blue top,\" I said. I stood, knocked back my coffee and put the mug down. \"Race you.\"\n\n\"No fair,\" came her despairing cry - Anna's never been able to keep up with me at a run, and I had the added element of surprise. I'd already body-surfed my first wave in before she'd managed to join me, laughing as the next wave dumped me almost prostrate in the sand at her feet.\n\nThere are few better things in the world than good surf and someone to share it with, and we made the most of the morning. She was a riot to watch; shorter than me as she was she had to try to leap waves that I could power though, and more than once she misjudged her jumps and got swept inshore in a welter of legs and arms, leaving me snorting with laughter beyond the breakers. \n\nBut a restless part of me could not ignore the seductive shape of her body under the thin navy one-piece bathing costume, nor her obvious nipplestand from the cold water, and as we clambered shaky-legged out of the sea my inner pervert drove me to follow her up the path, which gave me the freedom I wanted to watch her legs and bum as she climbed the slope in front of me. I carried my towel so that it screened my waist; the last thing I need her to notice was the rigid erection I carried.\n\nAnna dashed upstairs to shower while I cleaned up downstairs, and yelled at me when she was done. She was still toweling her hair dry in the bathroom but didn't object when I brushed past her into the shower and pulled the door closed behind me. \n\nI washed my face and rubbed my hands through my hair. Then I stripped out of my board shorts, and braced myself against the wall, letting the hot water sluice over my shoulders. I kept my back turned to her; the glass was frosted but I felt no urge to take chances.\n\n\"What do you think we need in the way of provisioning?\" she asked.\n\nI thought for a moment. \"Bread. Cucumbers and other salad vegetables, I guess. More meat. Probably some more booze, and ice cream for tonight.\"\n\n\"Cheese and stuff too, I guess.\"\n\nI squatted down and reached for the shower gel. \"I feel like a nice pagan feast,\" I said, as I soaped myself up. \"Lots of pork. Maybe some pork belly on the Weber? With some sort of marinade?\"\n\n\"Sounds great,\" she said. \"I'll go get dressed, and meet you downstairs.\" \n\n\"I'll be quick as I can,\" I said. \n\n\"I'll be waiting for you.\"\n\nI eyed myself ruefully and sighed. I'd have to find some private time to deal with myself, but we needed to get moving, so it would have to wait.\n\n.:.\n\n\"Nice car,\" I said, envious, admiring the sleek gunmetal lines of Anna's Boxster convertible. \n\nShe grinned. \"Behave yourself and I'll let you drive him.\"\n\n\"Your business is clearly doing much better.\"\n\n\"For now,\" she murmured. \"Lets hope it lasts.\" She unlocked the car, and then slipped into the driver's seat as I took shotgun. She keyed the ignition, and once the engine had settled down to a low rumbling growl Anna dropped the roof. I grinned like an imbecile as the sky opened above us, and she returned my grin as she blipped the throttle. \"Phwoar,\" I muttered, and she laughed like a little girl. \n\n\"I love this car. And it's a lovely day. We've gotta do it with the wind in our ears.\"\n\n\"No complaints from my side,\" I murmured. \"Lets go. Abduct me.\"\n\n\"Don't offer what you can't deliver,\" she grinned. \n\nAnna drives like a maniac - an extremely adept, safety conscious maniac. She pushes cars hard, but never recklessly - and she'll only drive a vehicle fast if she knows it. \n\nSo she kept the Porsche to a reasonable speed up the hill, gunned the tits off it on the brief stretch of highway, then let the car coast down the long, extended downhill into town. We pulled into the small supermarket's parking lot, and I noticed long, envious looks from several other shoppers - so did Anna, and she hammed it up by wrapping her arm around my waist and pulling me against her hip as we walked to the shop's doorway.\n\n\"You tease,\" I murmured into her ear.\n\n\"Don't they wish they were worth my time,\" she whispered back. \n\nAnna fetched and gathered while I steered the trolley, and before long we were fully laden with vegetables, fruit, meat, bread, snacks, cool-drinks, bottles of wine and six packs of beer and cider. She bought a small Styrofoam cooler box for the ice cream, and we packed everything into the cramped space behind the Porsche's seats. Anna shot me a long, considering look and then handed me the car keys.\n\n\"You sure about this?\" I teased her.\n\nShe bit her lip. \"You're a more cautious driver than I am, and I'll beat you if you do something silly,\" she returned, as she slid into the passenger seat. \"Just don't scratch him, or I'll kill you till you're dead. You can put the seat back with the switches to the right of the chair.\"\n\n\"Like my Audi,\" I said. \"Same company, after all.\"\n\n\"Beetle lover,\" she replied.\n\n\"Pot, meet kettle,\" I grinned, as I took us on a gentle accelerating arc out of the parking lot and back onto the road.\n\nWe drove home via the longer scenic route, reveling in the song of the exhaust behind us and in the manner in which the car tracked through corners as if it was on rails. Anna relaxed beside me, enjoying the sun and the open sky above her head and watching the world flash by with her characteristic grin. \n\nShe laughed out loud and clapped as I floored the throttle around a Saturday afternoon driver in a Mini. I stole a glance at her; slumped back in the seat in her tatty shorts and vest, with the strap of a bikini top tied messily behind her neck... she looked alive, and once again I found myself wanting her.\n\nA cool breeze was rising up off the sea when we got home, and I parked the car in the shade next to my Audi. \"Thanks for the drive,\" I said. \"I love your car.\" \n\n\"That makes two of us,\" Anna responded as she closed the roof. \"Gotta keep the bugs out of him. So... you keen for the beach?\"\n\n\"Beach it is,\" I agreed. \"I need to cool off.\" I grabbed the bags and followed her around to the deck, taking far too much pleasure in the the way in which her white linen shorts cupped her bum as she walked. She unlatched the sliding door and slid it open for me, and I brushed slowly past her to dump the bags on the kitchen counter. \n\n\"Want something to eat before we head down?\" \n\n\"Nah,\" she answered, as she pulled her vest over her head. \"I want to be in the sea.\"\n\nI looked aside so that I would not stare. Anna's bikini top was a revealing navy-and-white affair that perfectly framed her pale breasts. She slipped out of her shorts, revealing the matching striped bikini bottoms, and grabbed a towel off the kitchen counter. She ducked out through the sliding door. \"Coming?\" she called, glancing back at me.\n\n\"Be right there,\" I replied. I took a moment to appreciate this sight of her in a two-piece costume that left so very little to the imagination. Anna's a one piece girl, she seldom wears anything more revealing in the water - which is a crying pity in retrospect, because she runs and swims and has the figure to show for it. \n\nI wouldn't say I didn't feel dirty about it, but my base desires overrode my sense of guilt, and soon enough all I was focused on was the smooth skin of her thighs and the dimple at the small of her back. I wondered how securely her top was tied, and as I followed her mutely down to the ocean I quietly marveled at how beautiful she was, here, in her element.\n\nThe surf had diminished to a gentle rolling swell with the incoming tide, and Anna and I swum out beyond the break line and bobbed in the neck deep water. After a short while, she paddled over to me.\n\n\"Hold me up,\" she demanded, and I obliged with gentle upwards pressure to the small of her back, keeping her suspended just below the surface as she relaxed, eyes closed, smiling upwards at the sun. Her back was warm on my fingertips, and I watched the water lap the cleavage between her breasts. I found myself wondering what they looked like under the bikini top. Obviously I could draw some conclusions, but the mental image will always pale to the actual experience. \n\nAnna reached out and curled one arm around my neck to secure herself. This pulled her closer to me, putting her breasts almost directly in front of me, and brought her lips close enough that had I not had an extremely active sense of self-preservation I might have been tempted to do something silly. \n\nInstead I merely stood quietly in the water, aching helplessly for the girl I supported in my arms. How long we spent like that I do not know, but eventually I could feel her shivering.\n\n\"Time to get out,\" I murmured into her ear.\n\n\"Yeah, I know,\" she sighed. \"Pity, it's so nice out here with you. Floating, just being.\" She slid off my hand and draped her arms around me again, squeezing me against her. \"Thanks for being my bathing platform, Joey.\"\n\n\"Any time, Anna,\" I murmured. She pushed herself clear, and we caught a rolling wave and body-surfed in to the sand, where I helped her to her feet. She put an arm around my waist and leaned on me for support as we staggered our way through the soft sand to our towels. \"Thank you,\" she murmured to me as I handed hers to her.\n\n\"De nada,\" I replied. I swung my towel over my shoulders and followed her once more uphill.\n\n\"This is far better than the city.\"\n\n\"Oh, far better,\" I agreed. \"Sand, sun, no responsibilities.\"\n\n\"And good company,\" she added.\n\n\"Well, for my part yes; you're terrible.\"\n\nShe turned around, and gave me a grinning middle finger. \"Fuck you, Joey, I'm the best company ever.\"\n\n\"Yeah, you are,\" I returned, awarding her the point. She chuckled, spun, and carried on walking.\n\nI toweled myself dry by the sliding door while Anna showered. I dropped my shorts, hung them over a section of rail, and wrapped my towel around my waist, tucking the tail in to secure it. I glanced ruefully down at the bulge in my towel, then adjusted the hang of it so that my engorged cock was less obvious. \n\nI cracked a bottle of S\u00e9millon and set out some cheese and cold meat for lunch, then lounged on a deck chair, nursing my glass of wine while I waited for her to reappear. As I waited I watched a pair of gulls as they soared along the low dune line, flicking their wings in and out as they rode the unseen ridge lift. \n\nI thought about her; about the sexual desire that her proximity seemed to awaken in me. I felt strangely conflicted by how little it bothered me - how little the words \"I desire my sister\" troubled my conscience. Masturbating to thoughts of her bugged me, but the mental desire didn't, and I wondered why I felt the difference so keenly. I sipped my wine, mulling it over. \n\nThere was no getting away from the fact that I was horny; the slowly softening hard-on disguised in the folds of my towel was testimony enough to that. But this was something way more serious. Anna was my sister, and I knew that the feelings I felt towards her were dangerous to both of us. \n\nI sighed. All I could do was let it run its course, masturbate guiltily when the urge to do something ridiculous grew too strong, and apart from that leave the thoughts about her locked firmly away.\n\n\"Whatcha doing?\" \n\nI glanced behind me, trying to appear nonchalant. \"Watching some gulls and pickling my liver. Here,\" I added, as I handed her her glass of wine; the ice she liked had already mostly melted during the wait.\n\nAnna took it, took up her spot on her deck chair and lay back with a sigh. She sipped her wine, then set her glass aside and stretched. \"Thanks. I needed that swim and this wine.\"\n\nI turned back to the window, trying to ignore the fresh arousal I could feel. Anna had pulled on her tight linen shorts and a thin, faded turquoise vest that barely covered her bikini. When she stretched, the top rose up over the underside of her breasts, showing the damp, semitransparent white stripes over her skin, and for a moment all I could do was think of slipping a finger under the fabric. \n\nAs a distraction, I sat up and went to work preparing us some food, feeling strangely uncomfortable as she lay there, watching me.\n\n\"You ok, Joey?\"\n\n\"Yeah, just hanging a bit,\" I excused myself. \"Hoping the hair of the dog will heal me,\" I added, sipping my wine again. \n\n\"Heh,\" she replied. \"I'm a bit stuffed too, I'll join you in hoping this is the cure.\"\n\n\"I'll be right back, just going to pull on some clothes.\" \n\n\"I'll finish sorting the food, then. Hurry back, or I'll eat yours.\"\n\nI slipped upstairs, and grabbed a pair of underwear and some denim shorts. I didn't care to display myself to her, and I worried about the towel's ongoing security. So while I'd have enjoyed tanning in my boardshorts, in this case discretion was the better part of valour.\n\n.:.\n\nWe sat in the sun and washed down our light lunch with the passable S\u00e9millon. \n\n\"I could get used to the catering.\"\n\n\"Bankroll me, pay for my upkeep, and I'll gladly be your chef de Maison,\" I answered.\n\n\"Mm. Will you be my pool boy too?\"\n\nI laughed. \n\n\"You've been working out, haven't you?\" she asked, shooting me a glance. \"You're looking good, Joey. Lean.\"\n\n\"Thanks, sis,\" I answered. \"Pity about my lack of tan though. I'm almost as pale as you are.\"\n\n\"Sun's strong enough here for us to do something about that,\" she observed.\n\n\"I'll wind up with a farmer's tan.\"\n\n\"It's pretty private here.\" Anna gathered her hair up into a tail, and dropped her sunglasses down over her nose again. \"Nobody will see.\"\n\n\"You will.\"\n\n\"Family doesn't count. I plan to get some tanning in, regardless of whether you're here or not. A girl's gotta look after herself.\"\n\n\"Uh huh. In that case, maybe I'll join you.\"\n\n\"Good. You can put suncream on me,\" she added.\n\nI raised an eyebrow at her, and she grinned. \"I'll do the same for you, you know.\"\n\n\"I suppose I'll let you twist my rubber arm this time.\"\n\n\"Here. Lube me up.\" She lifted the strap of her costume top. \"Don't miss a spot,\" she ordered.\n\nSo of course I obliged her, slowly rubbing the suncream into her skin and taking particular care to ensure that her shoulders and sides were properly protected. \"Back of my legs too, please,\" she murmured. She lay down on her stomach, and I tried to keep my breathing and hands steady as I spread the suncream onto the backs and inside of her thighs, then down and over her calves, trying not to linger too long in any one place. Her skin was amazingly soft, and her legs were smooth as silk beneath my fingers. \n\nI finished and somehow managed a nonchalant \"Done.\"\n\n\"Turn around and I'll do yours,\" she said as she sat up once more. \"And lie down so that I can reach. My arms are shorter than yours.\"\n\nHer hands were soft on my back. I lay with my eyes closed, breathing shallowly, trying not to tense up, drool or squirm as she rubbed across my shoulders and neck, down to the small of my back and then over my legs and calves. \"Your pants are pretty long for someone who doesn't want a farmer's tan,\" she observed, amused, as she set the suncream aside.\n\n\"I'll sort that out at a later date,\" I muttered into my towel. She snorted, and ran her hands over my shoulders once more. \"All done,\" she breathed softly as she pulled away. She removed her sunglasses and settled down on the deck chair with her arms by her sides. Her damp hair had started to set into its natural wave, and as it dried it glowed like finely spun gold. Several small strands moved as she sighed out a breath. \n\nShe was gorgeous. A shade over five and three quarter feet tall, with an elfin face, slight shoulders, lovely curved hips and to my mind the world's most perfect bum. Her skin glistened both from the suncream and the slight sheen of sweat from the heat of the day. The faint blonde hairs on the nape of her neck rose as a gentle breath of wind summoned goosebumps. \n\nI watched her breathe, watched the small shift of her shoulders and ribs, and as I watched her I ached to hold her body against me. The solid bar of my erection dug painfully into my belly, and I felt more frustrated than I could ever remember having been.\n\nAnna shifted slightly, frowned, and then reached her arms back up behind her. She pulled the knot of her bikini top free with one practiced movement, and then tugged the top out from under her. I held my breath, and then offered silent praise to every god of lust that I could remember when she pillowed her head on her crossed arms and blessed me with a tantalising glimpse of her breasts as she lay down again.\n\nI couldn't pull my eyes away from the finger's width of her that I could see. Once more I ached to touch her, to caress her body, and yes, to my shame I wanted to be inside her with her arching under me. I ground my teeth in frustration.\n\nAnna opened her eyes and squinted at me. \"What are you thinking?\"\n\n\"Nothing much,\" I answered after a moment. \"Just chilling. Enjoying the sun and the air.\" \n\n\"Mm. The air is nice on my skin. Not much chance to sunbathe like this in my flat; far too little privacy.\"\n\n\"That's the problem with high density living,\" I agreed. \"Way too many prospective perverts and dodgy old men.\"\n\n\"Quite,\" she murmured.\n\n\"Still, at least you have a room with a view.\"\n\n\"Convenience comes at a price. Sometimes... many times, really, I think that I'd be prepared to give it up for the privacy.\"\n\n\"What keeps you there, then?\"\n\nShe pursed her lips. \"Habit, I guess. I like the easy commute.\"\n\n\"Maybe you should look into working remotely. Get a fast broadband connection and video conference; it's nearly as good as being there.\"\n\n\"Maybe I should look into it,\" she mused. \"I'll hire you as my tech consultant. You can set it up for me.\"\n\n\"You couldn't afford me,\" I teased her.\n\n\"Bah. I own your ass.\" She took a breath, and lifted her head. \"Joey, I'm going to roll over so I can get some sun my tummy. No peeking.\"\n\n\"You got it,\" I murmured. I took off my sunglasses and set them aside, and then closed my eyes, lying with my face pillowed on my arms. I heard Anna shifting, and it took every ounce of self control for me to keep my eyes closed... for a while at least. I guess I can be forgiven for the fact that my willpower didn't last long, and that I snuck a glance that became an awed stare.\n\nAnna lay, flat on her back with her knees slightly raised, her small beautiful breasts with their pale pink nipples standing slightly proud on her slender frame, accentuating if anything the flatness of her toned stomach in the bright golden sunlight. I guess I made a noise of some sort, because she turned her face and opened her eyes to consider me. She wore the smallest hint of a smile. \n\n\"Joey, you pervert,\" she said, amused. \"I knew you wouldn't keep your eyes closed. I heard your breathing change.\"\n\nI laughed, embarrassed. \"Sorry, Anna. You got me. Guilty as charged, though in my defense I don't believe that it's fair to blame a dehydrated man for stealing water.\"\n\n\"Mm. Well, I suppose there's no harm in it, though I want it on record that you owe me one.\" She arched her back slightly, and stretched her arms high up above her head. \"So do you like the view you've stolen?\"\n\n\"You have no idea,\" I breathed.\n\n\"Poor Joey... been a while, has it?\"\n\n\"Months and months,\" I sighed. \"I'm wandering in a desert, far from the sea.\"\n\n\"Ugh,\" she made a face. \"Fate worse than death. Well, since you now owe me for your deviance, make yourself useful and grab us some wine. It's hot out and I'm thirsty.\"",
        "I clambered selfconsciously to my feet and slipped inside to retrieve the bottle from the fridge. Anna sat up and tucked her legs in; I tried not to stare at her breasts as I refilled her glass, but it was an uphill struggle, and I knew that she knew. Then I topped myself up, and sat down cross-legged on my towel. I stared out to sea, blushing furiously. \n\n\"Joey?\"\n\n\"Yes?\"\n\n\"You can look if you want to, you know. There's no need to torture yourself over it. I won't bite.\"\n\n\"Sorry, it's just... damn, Anna, your breasts are spectacular.\" I shook my head, helplessly frustrated. \"They're really distracting. And I'm really struggling not to stare at them. Sorry.\"\n\nShe laughed deep in her throat. \"I'm glad someone appreciates them.\"\n\n\"I can't believe you're single with a rack like that,\" I muttered. \"I'd have thought men would be stacked up in a holding pattern outside your door.\"\n\n\"So... are they nicer than Julie's?\" she asked, eyebrow raised in amusement.\n\n\"Much,\" I answered, meeting her eyes. \"Hers were nice. Yours are a work of art. A da Vinci. Your breasts,\" I continued into absurdity, \"are the Mona Lisa of cleavage.\"\n\n\"Mm,\" she answered. \"While I'm not hundred percent on the comparison of my boobs to a five hundred year old woman, I appreciate the amusing comparison.\" She took a sip of her wine, and then leaned back into her deck chair. \"So... tell me, Joey, why are you still single?\" She frowned. \"You're a sweet boy, and good looking... I'm surprised at you. I thought you'd be swimming in girls once you were eligible again. What's going on?\" \n\n\"Honestly... I just didn't have the energy,\" I sighed. \"I liked Julie, Anna. I didn't feel like going through all that again.\"\n\n\"I can sympathise.\" She sipped her wine, thoughtful. \n\n\"So why are you alone?\" I asked, curious. \"To be fair... I don't think I've seen you with anyone for years, Anna.\"\n\n\"Can't stand the complications,\" she murmured. \"I want intimacy, Joey, not possession. Men in my line of work seem to be unable to get that simple idea through their thick skulls. I made a bad mistake and burned my fingers, and now to be honest I'm better off by myself. It hurts less that way,\" she added, staring at her wine. \n\n\"Speaking as a guy, the men you work with are idiots.\"\n\n\"Hah. That's just because you're my brother. I'm a handful, Joey, and sometimes I think it's best if I don't inflict myself on anyone else.\"\n\n\"Crap, Anna,\" I countered. \"You're not a handful. You're a pretty normal, hardworking, levelheaded girl who's just hung out with the wrong bunch.\"\n\n\"Thanks,\" she sighed. \"At least I know you think I'm normal.\" She glanced up at me. \"Joey - be honest with me. Does this make you uncomfortable?\"\n\n\"Does what?\" I hedged.\n\n\"This. Me being topless like this?\"\n\n\"Should it?\"\n\n\"Some might say so.\"\n\n\"I'm not going to lie, Anna - it's a little weird, but not bad weird if you understand? Anyway,\" I continued, \"we're at Elysium. There's nobody else here. I don't feel any pressing need to tell anyone else what either you or I do on our down time. Walk around naked if you want to, just warn me beforehand so I give you the privacy you need. Deal?\"\n\n\"Deal,\" she murmured, sealing the bargain with a smile. \"Tell me if that changes.\"\n\n\"I doubt it will,\" I replied. \"After all, I'm the one getting the free floor show.\"\n\nShe laughed. \"Joey Mackay, you are an inveterate pervert.\"\n\n\"Anna Mackay, it takes one to know one.\"\n\nWe sat in silence for a while, and I watched the grasses swaying slightly in the breeze. \n\nAnna shifted. \"So tell me about Julie?\" she asked.\n\n\"Why?\"\n\n\"Because I'm nosey. I was always curious about her.\"\n\n\"What about her do you want to know?\"\n\n\"Was she good in bed?\" \n\nI lay back down with a sigh. \n\n\"She was ok, I guess.\"\n\n\"She looked like she was a firecracker.\" Anna frowned. \"Looks can be deceiving I guess.\"\n\n\"She was a firecracker in temperament, maybe. She was pretty traditional with the lights out.\"\n\nAnna snorted. \"That's a shame. What a waste of a body like that.\" She lowered herself onto her side and pillowed her head on her arm. I guiltily looked away. \"So... what did she allow you to do to her?\"\n\n\"This is a strange topic of conversation, Anna,\" I murmured.\n\n\"I'm bored, and you owe me entertainment in exchange for these,\" she retorted, touching her left breast with a finger. \"Besides... I love hearing kinky shit. God knows I don't get to do much of it myself. So let me live vicariously through your conquests,\" she grinned.\n\n\"I didn't have you pegged as a voyeur,\" I muttered. \n\nAnna smirked. \"There's lots about me you don't know, Joey. Now fess up. You get boobies, I get stories. Tell me all about that foxy little tart of yours. And make it entertaining.\"\n\n\"What do you want to know?\"\n\n\"What was your favourite thing to do to her?\"\n\nA brief memory of Julie, squirming under me. \"Eating her out,\" I murmured, softly. \"She was always shaven, and scrupulously clean... I loved the taste of her, the feel of her.\"\n\n\"Mm. What about it did you like so much?\"\n\n\"The feeling of her clit on my tongue,\" I answered after a brief silence. \"Or... her clit between my lips. She loved that. It was the kinkiest thing she'd let me do to her.\"\n\nAnna exhaled. \"That lucky bint. God, there's nothing better than good oral...\" She grinned at me, \"That is, apart from great oral followed by a good hard fucking.\"\n\n\"No debating where your mind is today,\" I teased.\n\n\"I've gotta get my kicks where I can,\" she answered, seemingly sad. \"It's been a while, you know.\" She reached out and picked up her wineglass, then levered herself upright so that she could take a long sip. \"Wine's warm,\" she complained. \"Ugh.\" She knocked the rest of the glass back, and then stood. \"Want some more?\" \n\n\"Not right now,\" I answered, shooting her a glance. \"Honestly... thinking about her's got me a bit worked up, and I'd like to go swim again and don't want to do that with too much booze in me. Nobody around if we get into trouble, you know.\"\n\n\"Spoilsport,\" she replied, sticking her tongue out at me. \"But you're right, of course. Just give me two seconds; gotta go powder my nose quick then we can head down.\"\n\nShe ducked in through the sliding door, and I groaned to myself. Talking had worked me up all right, but it hadn't been Julie's naked body I'd been imagining.\n\nI sighed, reached down and adjusted myself, praying that my erection would subside before she returned.\n\n.:.\n\nAnna emerged, slightly flushed, and quietly pulled her costume top back on. \"Tie it up for me?\" she asked as she turned away, so of course I obliged her. I somehow managed to resist the urge to touch her more than necessary, but I'd be lying if I said it was easy. \"Done,\" I murmured, and she turned and hugged me hard. \"Sorry if I made you uncomfortable,\" she murmured.\n\n\"Nah, never,\" I replied.\n\n\"Do you mind talking to me? About this stuff?\"\n\n\"Of course not, Anna. You're my big sister, we're tight.\"\n\n\"I'm very tight,\" she said, softly. \"I meant as in drunk, you filth,\" she retorted, seeing me draw breath to tease her. \n\n\"I wasn't going to say anything,\" I protested, grinning.\n\n\"Yeah, sure you weren't,\" she laughed at me. \"Come on.\"\n\nShe held my hand as we walked down, and smiled at me as I helped steady her. \"Joey, I'm way too drunk for the sea,\" she declared, giggling. \"Jesus, that wine packs a punch.\" \n\n\"Hot day in the sun and not much in the way of food,\" I countered. \"We were silly.\"\n\n\"Balls to silly. It's fun to be irresponsible with you.\"\n\n\"Right, so I'll be the adult then. Lagoon it is,\" I replied, and we staggered our way down to the waterline. Anna dropped her towel carelessly onto the sand, and ran out into the water. She leaped, arched, and pierced the surface like a spear, gliding out into deeper water before she broke for air. \"God, Joey, it's bliss,\" she called out. \"Move your arse and get in, slowpoke.\"\n\n\"Yeah, yeah,\" I called out. I put my towel down, and walked out through the lukewarm lagoon water to her. She reached out to me, and I pulled her in and lifted her, supporting her by the back and knees. \"Happy?\" I asked.\n\n\"Blissfully,\" she replied, hooking her arm behind my neck and drawing herself in closer. \"Hold me here like this and I'll forgive you your pervy sister-watching earlier.\"\n\n\"Deal,\" I said, enjoying the feeling of her hip against my belly and the cool weight of her arm behind my neck. Anna closed her eyes and let her head float freely in the water; her hair forming a golden net around it.\n\n\"Joey?\" she asked after a while.\n\n\"Yeah?\"\n\n\"You're not pulling my leg, right?\"\n\n\"About?\"\n\n\"My breasts.\"\n\n\"Jesus, Anna, not a chance. I may not be the world's leading expert, but yours are incredible. You're incredible. \"\n\nShe smiled and relaxed again. \"I'm glad you approve of them.\"\n\n\"Feel free to let me approve of them some more, later, maybe,\" I murmured.\n\nShe laughed. \"You're gonna burn in hell, Joey.\"\n\n\"Can't blame a man for appreciating the assets of a smoking hot woman.\"\n\nShe squinted up at me. \"Mm. You're drunk.\"\n\n\"Yes, I am.\"\n\n\"Hah. Thought so. But I'll accept the compliment anyway.\"\n\n\"Good,\" I murmured.\n\nI held her like that for some time, before she pulled free so that she could swim once more. \n\n.:.\n\nWe reveled in the warm water and the slanting sunlight from the afternoon sun. It was lovely and uncomplicated; just her and me and nobody there to intrude on us. So we drunkenly built a sandcastle on a small dry area in the lagoon channel, a small one with hand-formed battlements and a sizable water-filled pond behind it in which we lay, listening to the waves and watching the sky darken as we had over so many holidays in our youth. \n\nAnna dozed with her head against my shoulder, and despite my ongoing arousal from her proximity I felt strangely at peace with her there.\n\n\"Anna?\" I murmured, eventually.\n\n\"Mm?\"\n\n\"We should head back up. Gotta get supper on the go, after all.\"\n\n\"I guess,\" she replied. \"Joey?\"\n\n\"Yeah, Anna?\"\n\n\"Elysium isn't right without you.\"\n\n\"It's not right without you either. Come on.\"\n\nI stood, and helped her up. She wrapped her left arm around my waist and wormed in under my right as we made our slow, staggering way back up to the house. The evening felt cooler than normal, and I could see the goosebumps on Anna's arms. \n\n\"Cold?\" I asked.\n\n\"Smuggling smarties,\" she answered, grinning. \"Can't you see?\" \n\nI laughed. \"I could, but I wanted to be polite and ignore them. Go shower, I'll get the fire going.\"\n\n\"Thanks,\" she murmured as she touched my shoulder, and then disappeared indoors. \n\nI set the fire, and let it catch and build a decent bed of coals before I too climbed upstairs to my room, hunting a long-sleeved shirt to keep out the evening chill. I dragged on some long cotton tracksuit pants to replace the salty shorts that I'd swum in. \n\nI could hear Anna in the shower, and I knocked on the bathroom door as I went past. \n\n\"Anna?\"\n\n\"Yeah?\" her voice came back, muffled by the door.\n\n\"Fire's going, I'll be outside.\"\n\n\"Righto, be right there,\" she replied. \"Grab me a blanket, please.\"\n\n\"Will do.\"\n\nI left a faded polartech blanket down on one of the deck chairs for her, and built up the fire with charcoal briquettes. The sun had dropped below the horizon and a cool land breeze had set in, wafting the smoke out to sea. I sat back on my deckchair, and watched the stars appear above me.\n\nI heard a sound behind me, and turned around as Anna stuck her head out through the sliding door. \"Is tonight a port night, Joey?\" she asked.\n\n\"It is, indeed.\"\n\n\"Excellent,\" she purred. She emerged with bottle and glasses, and poured me a generous glassful. I, meanwhile, shook my head and laughed helplessly over the nearly sheer fabric of the skintight long-sleeved top that she'd elected to wear. It was pretty obvious to me that she was not wearing anything under it; her nipples were clearly visible under the fabric. \n\nShe grinned at me. \"I thought you'd enjoy this.\"\n\n\"Be still my beating heart,\" I murmured, and she snorted. \n\n\"I could get used to the adulation, you know,\" she replied.\n\n\"Dressed like that, there's not a man on earth you wouldn't get it from.\"\n\n\"There's only one man on earth who's opinion I rely on, and he's drooling in front of me.\"\n\n\"Well, that man reckons that that top is bordering on scandalous. In fact, it's well past scandalous and out into the realms of pure pornography. The only way it could be more raunchy is if it was body paint.\"\n\n\"It's meant to. Boobs for words, Joey, and I mean to collect on your deviance. But it's too cold for me to go au naturel. So this gives you inspiration while preventing me from freezing to death.\"\n\n\"I'll take what I can get,\" I replied. \"Believe me, I'm not complaining. Just observing.\"\n\n\"Observe away,\" she answered, grinning. \"But I might start demanding forfeits if you don't deliver something raunchy in return.\"\n\n\"Anna?\" I poked restlessly at the coals.\n\n\"Yeah?\"\n\n\"Will you tell me if I make you uncomfortable? At any point?\"\n\nAnna shot me a strange look. \"Given my outfit, I'm the one who should be asking that.\"\n\n\"I just don't want to step over any lines.\"\n\nShe put her head to one side, then smiled. \"I'll tell you if you do.\" Anna sat down on her deck chair, and reached up behind her to pull her unruly hair into a straggly tail. She drew the blanket over her legs. \n\n\"How long till the fire is ready?\"\n\n\"Just waiting for the coals to burn down. Cheers, Anna,\" I toasted her with my port.\n\n\"Cheers, poolboy,\" she chuckled. \"To a glorious day of doing fuck-all in the prettiest place on earth.\"\n\n\"Amen.\"\n\nThe port was delicious, rich and tawny. Anna sighed out a long breath and settled back, her fingers curled loosely around the stem of her glass. \"So,\" she breathed.\n\n\"So?\"\n\n\"Thinking of what secrets I can blackmail out of you.\"\n\n\"Hah,\" I laughed. \"I thought it was bribery, not blackmail.\"\n\n\"That too,\" she murmured. Her eyes twinkled in the firelight. \"I'm just... worried, I guess. I don't want to spook you or push you too far.\"\n\n\"I'm a big boy, Anna. This is safe ground, you know that. Ask away, I won't take offense.\"\n\n\"Promise?\"\n\n\"Promise,\" I murmured, meeting her gaze.\n\nShe drew nervous arcs in the air with her foot. \"Tell me a secret.\"\n\n\"What kind of a secret?\"\n\n\"Something dirty. Kinky.\"\n\n\"Mm. Here's one. I used to spy on your friends when they were sleeping over.\"\n\n\"I know,\" she grinned. \"Kirsty Williams, right?\"\n\n\"Yeah. She was hot,\" I replied. \"I saw her in her knickers once.\"\n\n\"Bet that kept you going for a while,\" Anna murmured. \n\n\"Guilty as charged.\"\n\n\"I used to dare her to walk past your room. See whether we could get a reaction out of you. You used to blush and stutter at table when she was there.\"\n\n\"Guilty conscience.\"\n\n\"You also had your door closed fairly often.\" Anna's eyes glittered, amused.\n\n\"Why do you think I had a guilty conscience?\"\n\nAnna laughed. \"She wanted to see you nude, you know. Kept begging me to make it happen.\" She shifted, and pulled the blanket further up over her. \"Chilly,\" she muttered. \"It's summer, it's not supposed to get cold here.\"\n\n\"Shift in the weather, maybe,\" I murmured. \"Hope it's just for tonight. So why didn't you?\"\n\n\"Didn't feel like being a pimp; I told her if she wanted to see you naked she'd have to do it herself.\"\n\n\"Nineteen-year-old Joey is cursing you right now, you know.\"\n\n\"Nah,\" she replied, \"I saved you from her. She's a man eater, best she didn't get her hooks into you.\" She glanced up and me, then aside again. \"So when did you first get laid, then?\"\n\n\"First year university. Not much to write home about; I was too drunk to remember most of it, but I do remember avoiding her for the rest of the year, she was very clingy and wouldn't leave me alone.\"\n\nAnna laughed. \"Oh god, clingy first years.\" She smiled, remembering. \"I was one, once.\"\n\n\"You? Clingy? Impossible.\"\n\n\"It's different for a girl, Joey. You make yourself very vulnerable, letting someone be inside you. It fucks with your emotions, you know?\"\n\n\"I guess it's different for guys,\" I murmured. \"Was your first time... bad?\"\n\n\"It wasn't great. I was dry and freaking out with nerves, and he didn't bother to get me warmed up; all he could think about was getting it in me. Ended up having to use some lube. It was over pretty quickly, thank god.\" She looked aside. \"Thirty seconds, tops, and then he kicked me out and left me to do the walk of shame back to my residence.\" She snorted. \"I felt pretty... not upset, but disillusioned about the whole thing.\"\n\n\"Ugh.\"\n\n\"And things have never improved all that much,\" she continued. \"I seem to always manage to find the hair-trigger guys or the ones who want a piece on the side.\" She shook her head. \"Truth be told, that's kind of why I steer clear. Unless I'm climb-the-walls horny, I prefer my toys. Less chance of disappointment.\"\n\n\"Toys, huh?\"\n\n\"I see that got your attention.\" Anna smiled, languidly. \n\nI snorted. \"I'm a visual guy, sis. Lets just say my attention's been focused for a while now and leave it at that, shall we?\"\n\n\"So you're hot and bothered? Good. Glad to know that freaky talk with me amuses you.\"\n\nI glanced at her. \"Anna, you and I know both know you're a bombshell. I'm a guy, and take it from me, you've always been able to stop traffic. When you start talking about sex... well, you're my sister, but you'd corrupt an angel without even trying.\"\n\nAnna threw back her head and laughed, deep and throaty. \"Sorry, Joey,\" she wheezed. \"Sorry. I'm not trying to wind you up, you know... well, maybe I am a little.\" She calmed down, and took a shaky breath. \"It's been ages for me. Over a year since I was last with a man. I forget what it's like to flirt and tease. Sometimes it's just nice to be reminded that I'm a girl, and that I can be wanted.\"\n\nI poked at the coals, not trusting myself to speak.\n\n\"Joey? Hey, you ok?\"\n\nI smiled, shaking my head. \"Yeah, just woolgathering, Anna.\"\n\n\"I've upset you.\"\n\n\"Nope, honestly Anna. I'm good, we're good.\"\n\n\"Promise?\"\n\n\"There are no secrets between us here.\"\n\n\"I don't want to have secrets from you.\"\n\n\"Ditto.\"\n\n\"Ask me something,\" she whispered.\n\n\"Sorry?\"\n\n\"I asked you something personal. Probably too personal. We have to bring it back into balance. So you need to ask me something.\"\n\n\"First things first,\" I said. \"Come here.\"\n\nShe shot me a confused look, but complied. I let her put her port glass aside, and then pulled her up into a fierce hug. I felt more than heard the shaky sigh she let out.\n\n\"Stop worrying about offending me,\" I whispered. \"You're my sister, you could do anything and I'd still love you.\"\n\n\"Promises, promises.\"\n\nI could think of no safe answer, so I held her a brief moment longer. She gave me a small smile as I wrapped the blanket around her again. \"Sit, drink and be merry,\" I commanded.\n\n\"Joey?\"\n\n\"Yeah, sis?\"\n\n\"You're going to make some girl very happy some day.\"\n\n\"There's only one girl I've ever remotely worried about pleasing, Anna.\" I stood.\n\n\"Who's that?\"\n\n\"You, silly.\"\n\nI stirred the coals, then glanced at her. \"Fire is ready. You're awful quiet.\"\n\n\"Just thinking.\"\n\n\"About?\"\n\n\"Sex and stuff,\" she murmured, shifting. \n\n\"Good topics.\" \n\n\"Uh huh,\" she echoed. \"We're sad, horny loners, you and I.\"\n\n\"Horny maybe, but not sad, and not so alone,\" I disagreed. \"Loners have nobody to talk to. I've got you.\"\n\n\"True, I guess. Pity we get to do it so seldom is all.\"\n\n\"Work got in the way this year. I'd have been here every weekend this summer had I had the time.\"\n\n\"Ditto, I guess,\" she sighed, shifting.\n\n\"So... you thinking about sex in general, or something specific?\" I eyed her, she was tapping a foot and frowning again.\n\n\"Specific,\" she breathed. \"Very, very specific.\"\n\n\"So spill it.\"",
        "\"Can't. It's too personal.\"\n\n\"Uh huh. Tease,\" I retorted.\n\n\"Unrepentant,\" she smiled. \"I'm not sorry at all. You deserve to be uncomfortable too.\"\n\nI raised an eyebrow, then stoked up the fire. \"Time for Joey to be the chef. Shall I do the garlic bread as well?\"\n\n\"Please. Can you top me up while you're at it? This is really the best port in the world.\"\n\n\"The Portuguese might disagree with you, but you've got my vote.\"\n\nShe rolled back onto her side and pillowed her head on her arm. \"I know I probably sound like a broken record, but I'm glad you're here. I've missed you.\"\n\nI smiled down at her. \"Ditto.\"\n\n.:.\n\nAnna had shifted her deckchair alongside mine, and we sat side by side as we ate. When we'd finished, I collected our rubbish and binned it, then pushed the Weber into the corner so the smoke wouldn't bother us. We washed our hands at the kitchen sink, and I ducked upstairs to dig out some more blankets and pillows. I fluffed out the blankets so I could help Anna cocoon herself, but Anna shook her head.\n\n\"Joey?\" she asked, hesitantly.\n\n\"Yeah?\"\n\n\"I'm pretty chilly. Any chance we could share our blankets so I can leach some heat?\"\n\n\"We'll have to put the deck chair cushions on the deck then, otherwise one of us is going to fall through the gap.\"\n\nShe stood, and wrapped herself in her blankets. \"Do it quickly, I'm cold.\"\n\nI quickly laid out the cushions, and put my blanket down for us to lie on. She kicked the pillows into place, and then, shivering slightly, unwrapped herself and sat down. \"Hurry.\"\n\nI sat, then lay down, and she flung the blankets over us. \"Come here, then,\" I offered, and she lay down on my right arm, sighing as she tucked her face into the nape of my neck. I tucked us in, trying to ignore the sensation of her against me; I could clearly feel her breasts and stomach against my side. The small breaths she drew pushed her belly against my flank, and the scent of the shampoo she'd used earlier that evening hung around us.\n\n\"Penny for your thoughts?\" she whispered.\n\n\"This is nice,\" I murmured. \"It's much warmer with both of us under the blankets. Much cozier.\"\n\n\"Yeah, it is,\" she echoed. She reached out, and wrapped her right arm over my chest. \"You're like a furnace. So nice, so warm,\" she added, with a strange little catch to her voice. \"You give the best hugs, Joey.\"\n\n\"Nonsense. Yours are better. I've always enjoyed them.\"\n\n\"Perve,\" she chuckled. \"You're a sucker for a pair of boobs against you.\" She wriggled slightly, and I couldn't help the small sound I made as I felt hers against me. She laughed quietly. \n\n\"Maybe,\" I answered, \"but only if they're as nice as yours.\"\n\n\"Back onto the subject we go, careening wildly into the sunset.\"\n\n\"As I said, parched man, desert, oasis.\"\n\n\"So, is it just the lack of a steady woman that makes you like mine so much?\"\n\nI thought a moment. \"Honestly, Anna... I'd be lying if I said I knew for sure. All I know is that I have been struggling around you this last day.\"\n\nShe raised her head slightly. \"Struggling, how?\" she murmured.\n\n\"I think you know how,\" I replied, quietly, squeezing my legs together in frustration.\n\n\"Tell me anyway.\"\n\nI sighed. \"You're easily the hottest woman I know, Anna. You always have been. It was never so bad when there were other girls. But I'm single, and lets just say it's very hard not to notice you. Especially when you're lying against me with nothing but the ghost of some cotton between you and me.\"\n\nShe snorted. \"You're drunk, Joey Mackay.\"\n\n\"So are you, Anna. But call me a liar if you haven't been... flaunting yourself a bit.\"\n\nShe bit her lip. \"You're not a liar, Joey. And yes, I've been flaunting myself. I'm single, I'm lonely, and you're one of the only men who I know I can trust... so I guess I feel that if I can get a rise out of you I must be doing something ok.\"\n\n\"More than ok,\" I murmured. \n\nShe crawled in slightly harder against me, and I curled my arm in hold her against me. She made a small, happy noise.\n\n\"Ok?\" I asked, conscious of how hard I was.\n\n\"More ok than I've been in a while. You?\"\n\nI shifted slightly. \"Mm.\"\n\n\"Uncomfortable?\" she asked.\n\n\"A little, yes.\"\n\n\"Roll over this way.\"\n\n\"That's a terrible idea.\"\n\n\"Why?\"\n\n\"Trust me on this.\"\n\n\"Hah... noted. So... lets just talk then,\" she breathed into my neck. I shivered, aching.\n\n\"About what?\"\n\n\"Tell me what you're thinking.\"\n\n\"Elysium rules?\"\n\n\"Always.\"\n\n\"Ok then,\" I breathed. \"I'm wondering what you look like.\"\n\nShe snorted into my neck. \"You've seen most of it.\"\n\n\"And it's lovely, but there's some specific bits of you I haven't seen.\"\n\nShe shifted, and I briefly felt the weight of her right leg on mine. I swallowed, nervous.\n\n\"How much would you give to see them?\" she murmured, pressing her leg against me.\n\n\"My unconditional cooking for a year.\"\n\nAnna paused, considering. \"That's a very advantageous bargain to you... all you'd have to do is cook, I'd be the one baring all for you.\"\n\n\"You asked.\"\n\n\"If a bargain like that was going to be struck... I'd demand like for like. Yours for mine...although\", she continued, laughing softly, \"I'm one up on you there.\"\n\n\"How so?\"\n\n\"Truth be told, Joey, and I'll kill you if you breathe a word of this to anyone... I peeked at you once.\"\n\n\"What? Really?\"\n\n\"Yeah. You really should get better about closing the bathroom door when you're showering. Especially if you're... playing with yourself.\"\n\n\"Ah, balls,\" I murmured.\n\n\"Yes,\" she answered, deadpan. \"Those too.\"\n\n\"And you call me a pervert.\"\n\n\"Well... I couldn't see everything... just enough to get the general idea.\"\n\n\"And?\"\n\n\"Lets just say I approve,\" she purred. I laughed again.\n\n\"So you're ok with me finding you hot?\" I asked after a moment.\n\n\"It makes me feel better about myself.\" \n\nI glanced at her, at the small smile. \"Not like you have much you need to feel better about,\" I observed. \"You're pretty much perfect.\"\n\n\"You're my adoring younger brother, of course you'll think I'm awesome.\"\n\nShe rubbed her leg against mine again, and I took a shuddering breath. \n\n\"Sorry, Joey, let me know if you want me to stop.\"\n\n\"I don't. That's the problem.\"\n\n\"Why's it a problem?\"\n\n\"You're my sister. And I want...\"\n\n\"You want... what?\"\n\n\"I want you,\" I murmured, aching.\n\nShe lay, silent. \n\n\"Sorry,\" I said, \"That wasn't supposed to come out.\"\n\n\"No... I'm... well, I'll be honest, it's nice to know that my gut feeling is right, Joey,\" she said. \"That I'm not just taking horrible advantage of you, and that you're also enjoying this. It's dangerous ground, though.\"\n\n\"We've been skirting around it all day. What is this if not quicksand?\"\n\n\"Skirting is not doing.\"\n\n\"True.\"\n\n\"How long?\" she breathed. \"How long has that idea been in your head?\"\n\n\"Well... it really started last night when you hugged me in that silver top of yours. I struggled with it when we were swimming. I caught myself watching you, and yes, I was perving you.\" I shifted again, trying to ease a trapped fold of fabric that was squeezing me. \n\n\"The shape of your breasts, your thighs... I felt pretty guilty about it, but I couldn't do anything about the thoughts. So I've just been gritting my teeth and trying not to do anything stupid.\" \n\n\"Mm,\" she whispered. \"So... hypothetically of course, what stupid things do you want to do to me?\"\n\n\"You sure you want to go there, Anna?\"\n\n\"Talking is not doing, Joey. I'm not going to tattle, and neither are you. Plus... these things are best in the open. And they make for entertainment for me. And for you, I suspect.\"\n\n\"Well, then...\" I murmured. \"I guess I can be crude.\" I took a breath. \"I want to be sunk up to the balls in you with you convulsing on my rock hard shaft.\"\n\n\"Wow,\" she breathed out shakily, after a moment. \"That's pretty... graphic.\"\n\n\"I'm a graphic kind of guy.\"\n\n\"I get that impression.\" She slid her leg further over mine, her thigh warm on mine, and I struggled to keep my left hand off it and off myself. \"So tell me...why do you want me? I'm your sister.\"\n\nI let out a shuddering breath. \"I think that's part of it, Anna. The kink. The taboo. I know I shouldn't feel this way towards you. But you're so incredibly hot; just holding you like this pushes all my buttons... and I want you. It's excruciating. And I can't do anything about it, it seems. I guess I'm just broken. Sorry.\"\n\nShe trailed her hand down over my chest, resting it on my sternum, tapping her fingers.\n\n\"It's a bit different now that it's out, isn't it?\" I murmured.\n\n\"Not so different, really. It makes the lines easier to draw.\"\n\n\"Probably a good thing, all things considered.\"\n\n\"Some might say so.\" She sighed. \"Joey... I have a confession of my own. I masturbated myself silly earlier, in the shower. But it wasn't enough.\"\n\n\"That's a very personal thing to admit, Anna.\"\n\n\"I'm with the one person in the world I can talk to. Who else can I express my harlot nature to if not him?\"\n\n\"So... do I get to ask what you did?\"\n\n\"You are such a pervert,\" she purred. \"But then... so am I. And I guess you've earned it. And it's really turning me on to talk about this with you... so... do you want the slow version or the abridged version?\"\n\n\"Slow, please,\" I breathed, shifting my leg, frustrated almost beyond belief.\n\n\"Well... I sat on the floor of the shower, letting the hot water spray down onto my body, and soaped myself up... ran my hands over my breasts, my ribs, my tummy... then down, down between my thighs to me... slowly teased along my lips and around and over my clit... aching for a hard cock against me.\"\n\n\"Christ,\" I groaned, and Anna echoed me, squirming slightly against me and pushing against me. She took a shuddering breath.\n\n\"I love having a finger in me while I stroke myself,\" she breathed, \"so that's what I did... slipping it in and out while I stroked my clit with my other. Pushed back into the corner of the shower, my pussy under the hot water. Always feels slightly like lips or a tongue on me when I do that... It didn't take me long... it never does, you know. Not when I'm really aching for it. And I was aching. I still am, really.\"\n\nShe suddenly pulled herself hard against me, and lifted her thigh till it pressed against the base of my penis. I heard the catch in her breath as she felt me and realised how hard I was.\n\n\"Joey?\"\n\n\"Yeah?\" I murmured, still visualising her in the shower.\n\n\"I am... Will it... will it freak you out if I...\"\n\n\"If you... what?\"\n\n\"I need a favour. Please...\"\n\n\"Anything. Anything you want.\"\n\n\"I need to come. Hard. Now. Will you hold me, and let me come hard in your arms, please?\" she begged.\n\n\"Are you sure?\" I asked her, my heart hammering in my chest.\n\n\"Please,\" she gasped. \"I'm dying. Please.\"\n\n\"It's flirting with the line.\"\n\n\"Fuck the line. Hold me.\"\n\nSo I did.\n\n.:.\n\nI don't believe I could properly describe the ensuing two minutes. Anna's frantic moaning gasps, the squirming of her hips against me, the quiet whimpered swearwords as she climbed to her plateau. The convulsive way she spasmed into her climax, or the gasping, unexpected, full-lipped kiss she gave me as she recovered... all these things seemed to blur into one long fantasy dream sequence that left me, staggered, holding my sister to me as she rode out her aftershocks in my arms.\n\n\"Wow,\" I said, after a while.\n\n\"Sorry. That was... way outside the bounds,\" she whispered. \"But, God, Joey, fuck, I couldn't help it. That was so hot.\"\n\n\"You should have felt it from this side,\" I murmured. Anna laughed, deep in her throat, breathless.\n\n\"I would have paid a lot to have been able to watch you doing that.\"\n\nShe rolled her head towards me, amused. \"Lines in the sand, Joey. If I pretend real hard I can pretend that that didn't just happen.\"\n\n\"How hard are you going to pretend?\"\n\n\"Not very,\" she moaned, squirming against me. \"I'm a kinky bitch, Joey, and having you next to me for that was worth anything.\"\n\nShe rolled over and tucked her head in under my chin. \"Thank you,\" she whispered. \"That was special.\"\n\n\"Feel better?\"\n\n\"A bit,\" she mumbled, shifting. \"Still ragged though.\"\n\n\"That makes two of us.\"\n\nAnna shifted again, then pushed herself against me. \"Wow,\" she breathed. \"That's quite a problem you've got there.\"\n\n\"No kidding,\" I shuddered, aching from the pressure of her belly against my rock-hard cock and the warmth of her body against me. \n\nShe shook with silent laughter. \"Sorry,\" she whispered after a while. \"Actually... not sorry, it's only fair you suffer as well.\"\n\n\"Why?\"\n\n\"Because,\" she said, \"Because it's good for you. Good for your soul, or some such shit.\"\n\n\"Having you here is good for my soul.\"\n\n\"Flatterer,\" she whispered into my chest. \"But thank you. Joey?\"\n\n\"Yeah?\"\n\n\"You can... sort yourself out if you want to. Fair's fair. I'll hold you if you like...\"\n\n\"Later,\" I murmured.\n\n\"Spoilsport...\"\n\n\"Now who's the pervert.\"\n\n\"Can't blame a starving girl.\"\n\n\"Suppose not.\"\n\n\"So... did you enjoy that? It wasn't weird or anything, was it?\" she asked, after a while.\n\n\"It's going to be a firm favourite in my mental masturbatory library for the rest of my life.\"\n\n\"You liked it that much?\" she laughed.\n\n\"Anna... it was all I could do not to touch you myself.\"\n\n\"Really? That would be bad,\" she drawled. \"We'd be in big trouble if that happened.\"\n\n\"How much more trouble could we possibly be in after this?\"\n\nShe thought a moment. \"More than we're already in, that's for sure. For example... if I did this...\" she added, snaking her hand down to stroke the hard bulge in my tracksuit pants, \"We'd be in grave peril.\"\n\n\"Oh God, Anna,\" I whimpered. \"Fuck, that feels good.\"\n\n\"Thought you'd like that,\" she moaned, squeezing me through the fabric. \"Wow... Joey, you feel amazing. So hard. I'm flattered.\"\n\n\"This is such a bad idea.\"\n\n\"Yes. It is,\" she agreed, withdrawing her hand and stroking my hip. \"I just crossed the line big-time.\"\n\nI rolled over towards her, and slid my hand down to the small of her back. I pulled her gently against me, and she moaned as my penis pressed into her belly. \"God, you feel amazing,\" I breathed. \"I love holding you like this.\"\n\n\"You're giving me butterflies,\" she quavered, as she lifted her right leg and hooked it over me, pulling me against her. \"Oh my god, this is making me so hot.\"\n\n\"How hot?\" I breathed.\n\n\"Aching,\" she moaned as she pushed her belly against me. \"Soaking.\"\n\nI took a shuddering breath. \"Can I... feel you?\"\n\n\"Careful,\" she whispered. \"Don't flirt with dragons. They will eat you up.\"\n\n\"I'm not scared of dragons.\" I trailed my hand down over her bum, then stroked it down the outside of her leg. \"Besides. It's only fair. You felt me, I should get my turn.\"\n\nShe laughed softly. \"You're ruled by your penis, Joey.\"\n\n\"Tell me you don't want me to,\" I challenged her.\n\nShe said nothing, but reached behind her and took my left hand in hers. She rolled slightly away from me, creating a narrow gap between us as she lifted her right leg away from me. \"Remember, this is your fault,\" she hissed. \"Totally not my fault. All yours,\" as she guided my hand down inside her tracksuit pants. \n\nI felt my penis pulse, aching, and snatched a breath as I felt the slight stubble of her pubic hair under my fingertips. Anna wore no panties, and my heart hammered a tattoo as she drew my fingers down to her hot, soaked lips and clit. \n\n\"Oh god, oh god, Joey, right there, yeah, right there.\"\n\nI took a shuddering breath, and spread her with my finger, probing downwards, deeper. \"Right there, fuck, right there, baby,\" she hissed, grinding against my fingertip, shuddering hard. \"Oh god, finger me, please, finger me Joey...\" \n\nSo I did. I pulled her against me, hearing her moan as my rigid penis pushed against her. She rolled onto her back, hooked her left leg over me and opened herself as she released my hand so that she could squeeze her breasts as I stroked her. Her clit felt small and firm, deliciously slick under my fingers, and she arched, whimpering as I darted my fingertip around it and down to her soaked slit. \n\nAnna reached out unsteadily and felt her way down to my groin, gripping my cock through the fabric of my pants and squeezing me, rubbing my shaft slowly, spasmodically though the fabric of my tracksuit pants.\n\n\"More,\" she begged. \"Harder. Do me.\" She groaned, arching as I crooked the tip of my finger into her soaked entrance, contorting herself in an attempt to sink me further into her. Her breathing was ragged; she panted and moaned, building steadily, keeping up a constant stream of almost sub-vocal expletives - I could feel the way her leg muscles twitched and clamped against me, and I knew she was close. \n\nAnd as she had hinted, it didn't take long at all.\n\nAnna stopped breathing, and I felt her stomach starting to tremble. She convulsed, once, and let out a muffled cry as she started to come on me. I stroked her, pulling her close to me, teasing her through aftershock after moaning aftershock, until she frantically clawed at my hand and pulled it out of her, crying \"No more, no more, please.\"\n\nShe rolled onto her side, threw her arm over me, and burrowed in against me, shivering violently and drawing ragged breaths . I held her, and stroked her back, letting her calm down.\n\n.:.\n\n\"Holy fuck, Joey,\" she whispered after some time.\n\n\"I hope that was good for you,\" I murmured. \"I'm out of practice.\"\n\n\"Jesus Christ,\" she shuddered. \"Fuck. Wow. That was so good. So wow. I can't even English any more, that's how good that was.\"\n\nI brushed my lips over her forehead, and she made a noise deep in her throat as she dug in closer to me.\n\n\"I have wanted that for hours,\" she whispered. \"Your fingers on me. I saw you watching me all day, I knew you were hard at least once. I even changed costumes for you, to test my theory.\"\n\n\"I loved the two piece.\"\n\n\"I could see. I was wet all afternoon, you know. Christ, Joey, this is depraved... but so, so amazingly good.\"\n\n\"So... no underwear?\" I teased her.\n\n\"I took a chance,\" she muttered. \"I was feeling daring, and I wanted attention and hoped I'd get it. You'd seemed interested or at least open to the idea. I wondered whether you'd be game. \"\n\n\"We've crossed a line, Anna.\" \n\n\"We have. But I don't care.\"\n\n\"Good, because I don't either. Not after that performance. Now I'm really game.\"\n\nShe laughed. \"Get us some more port, Joey, and let me catch my breath.\"\n\n.:.\n\n\"You get really wet,\" I murmured. Anna lay beside me with her leg resting idly on top of mine and her head pillowed on my shoulder.\n\n\"Of all the things you could say, you chose that one.\" She grinned up at me.\n\n\"It's just... strange, given what you mentioned earlier about struggling with men.\"\n\n\"I struggle with men I don't have a bond with. Casual doesn't work for me. If I like the guy, if there's a bond... man the pumps,\" she giggled. \n\n\"Mm,\" I answered. \"So you like me, then?\"\n\n\"Idiot,\" she laughed. \"You spent the evening talking me up to a fever pitch... lets just say that the end result was a foregone conclusion. Dirty talk arouses me like nothing else... and I got plenty of it from you. Both verbal and subliminal.\"\n\nI grinned. \"Glad to know I can get you as interested as you can me.\"\n\n\"Oh believe me,\" she purred, \"you do just fine.\"\n\nI lay, listening to her breathing, and thinking about the tight heat of her body. My penis was still achingly hard, and I took a small, shuddering breath as Anna reached down to touch it again. I felt myself twitch, heard the catch in her own breathing as she squeezed me.\n\n\"So, Joey?\"\n\n\"Yeah?\"\n\nHer hand snaked down, and she stroked her finger along the ridge of my engorged cock. \"Tell me what you want. You gave me something special just now. I'd like to return the favour.\"\n\nI shuddered. \"It's too much,\" I murmured, as I felt myself throb under her touch.",
        "\"Never. Never, with me,\" she breathed.\n\n\"It is.\"\n\n\"You want your cock in me, don't you? All of you. In me.\" she whispered into my neck, rubbing herself against me.\n\nI nodded, not trusting myself to speak.\n\n\"How much?\"\n\n\"More than I can bear.\"\n\n\"Why?\"\n\n\"Because it's you, and it's wrong, and it's hot. But mostly because it's you.\"\n\nShe shifted her leg over mine, pressing her thigh hard against me. I whimpered and ground against her. She took a breath and levered herself so she lay on top of me, her belly and groin pressed, grinding against my erection. \"Why's it wrong, Joey? Why is honest lust wrong?\"\n\n\"Because we're brother and sister.\"\n\nShe raised herself on her elbow and stared down at me. \"I don't care.\"\n\n\"We're drunk,\" I hedged.\n\n\"Yes, but again, I don't care.\" She pushed herself upright, and sat on me, and I could feel the damp heat of her as she nestled me against her with only two thin pieces of fabric between us. \"Tell me you care. Tell me this doesn't turn you on. Tell me you don't want me... and I'll stop.\"\n\n\"Anna...\"\n\n\"What,\" she whispered, leaning forward to stare at me.\n\n\"Say we make love. How do we go back from here?\"\n\n\"No going back. Only forward. That's what this is, what time is, what life is. Now... in this moment, I can feel you. Rock hard against me, between my lips.\" She took a shuddering breath. \"Joey, I'm done waiting. I'm going to lie down next to you, in your arms... and you can do whatever you want to me. Whatever you want. And I'll love every inch, every moment of it,\" she continued, her voice throaty. \"I'm not going to force you to fuck me, Joey, but I'm just going to put it out there that I'm hot, ready, willing, and if you need me to do it I'll beg you for your cock.\"\n\n\"Anna...\"\n\nShe reached down, and teased a finger around me. \"I've wanted this all day. I wanted you in me since I saw you hard. I left the bathroom door open for you, hoping you'd be by.\"\n\n\"I would have been if I'd known.\"\n\n\"So use this opportunity. I want you. I am begging for you. Use me,\" she whispered, dropping her gaze and then shooting me a glance from under her lashes. \"Make me yours like you've been aching to. Nobody but us will ever know.\"\n\nShe slid off me to the side, and then rolled away, her head pillowed on my arm. I could hear her shallow, rapid breathing; it matched the frantic pace of my own heart.\n\nI rolled towards her. She responded, pressing herself backwards against my crotch, groaning a quiet \"Ahh...\" as she felt me hard along the line of her bum. She lifted her head so I could slide my right arm under her, spooning her. \"Nice,\" she whimpered, \"but not enough.\"\n\nI slipped a hand under the waistband of her pants, and she lifted her left leg up and away from her right. \n\n\"Can I touch you again?\" I whispered in her ear.\n\n\"Touch me, taste me, fuck me, I don't care,\" she moaned. \"I am so hot for you right now. I need it. I need you.\"\n\nI slid my finger along her, and she whimpered as I parted her lips. I stroked her gently, and she squirmed against my cock, moaning when I withdrew my fingers. I pulled back, trailing my hand up and over her hip, then down around the swell of her thigh, up and between her legs from behind. \n\n\"Yeah,\" she whimpered, as I stroked the line of her lips. \"Yeah, god, there.\" I could feel her heat on my fingertips, the almost complete lack of resistance to penetration by my index finger. Anna could not possibly be more ready; she tilted her hips slightly to allow me slightly further in, and moaned as I curled my finger over slightly inside her. \n\nI withdrew my finger again, and then slowly started to pull on the hem of her pants. She lifted her hips and reached down, helping me slide them down over her smooth thighs. I let out a shaky breath.\n\n\"Sorry, nervous,\" I said, swallowing.\n\n\"Don't be nervous. I'm going nowhere.\"\n\nI fumbled with the drawstring of my own pants, finally managing to disentangle the knot. I pulled myself free, and touched my engorged penis to her.\n\n\"Wow,\" she whispered. \"You're so warm. God, that feels amazing.\"\n\n\"This is your out,\" I murmured.\n\n\"I want it in, not out,\" she replied, pushing back against me. \"Stop stalling, and put that thing in me. You've wanted it all day, I've wanted it all day... so lets just do it. Do me.\"\n\nI reached down, and pressed on myself, bending my shaft down so that I nestled against the base of her bum. The breath hissed between her lips as she pushed back, sliding my throbbing head against her. \"So nice,\" she whimpered, as she reached down between her legs and held my cock head between her fingers. \"God, it's so smooth.\"\n\nShe arched forward, pressing the damp heat of her crotch against me and sliding forwards and backwards in small, spasmodic increments. She took a shuddering breath, and held my aching head to her soaking slit. \"Last chance,\" she gasped. \"Last chance to save yourself.\"\n\nI reached my hand up and over, and slipped it under her shirt. I took her breast in my hand, marveling at how firm it was, and gently squeezed her hard nipple between my fingers. She moaned, I arched against her, and I felt the tip of my rock-hard cock part her.\n\nAnna hissed out a breath, and hunched back against me. \"Oh god, Anna,\" I breathed, feeling as if I was going to explode then and there as the tight heat of her body accepted the tip of me into her. Anna whimpered, pressing my penis into her with her fingers and hunching down onto it, trying for more.\n\n\"Wow... wow... oh god its big,\" she moaned. \"So tight on it. Fuck, Joey, fuck...\" she took a breath, slid away slightly, and then drove back. \"Ungh. Fuck. Christ, I need this so bad. Push into me baby, please.\"\n\nI changed angle, leaning backwards so that I could deeper into her. I pulled out a bit, heard her moan, and then gently leaned into her. Her pussy was achingly tight on me, but she was so wet that there was almost no resistance as I slid into her. She clawed at my hip, hissing, and moaned as I withdrew and pushed in again.\n\n\"Anna,\" I panted, \"I am not going to last. God, you're so tight on me. I'm going to lose it.\"\n\n\"Can you do this more than once?\" \n\n\"Yeah,\" I panted.\n\n\"Then I don't care. Fill me up. I want more of you,\" she whimpered. \n\n\"Roll onto your stomach,\" I gasped, and she pulled away to do so. \n\nI clambered up behind her, and slipped myself down between her legs. She reached under herself and guided me in to her, and we cried out together as I slid into her. I pulled out, and slammed into her again, and she gasped, then groaned, grinding, pushing back against me. She reached her hand up, tangling it in my hair, pulling me down against her back so she could kiss me, hard, through her panting gasps. I drove deep in and out of her heat, wild, almost disbelieving, and feeling my orgasm coming on like a freight train.\n\n\"Anna,\" I moaned.\n\n\"Come in me, Joey, come in me, please,\" she whimpered, and with a final groaning thrust I bottomed out in her, my orgasm hitting me right in the stomach, taking me and locking me hard in her as I sprayed my come into her.\n\n\"Oh god, oh god,\" she cried, deep in her throat, clawing at my head with her hand. \"Fill me, Joey, fill me.\"\n\nAftershocks hit me, and I hissed, shivering as she wriggled slightly back and forth under me. \"Fuck... Anna... holy fuck...\"\n\n\"Shh, shh,\" she whimpered, \"Don't pull out, just stay, stay in me for a bit... more...\"\n\nI slumped forward on her, breathing hard, and kissed her jawline and ear; she whimpered under me, a soft, wordless moaning as she lay there with me between her lips. She kissed me once, hard, and then, slowly and cautiously, I pulled out and lifted myself off her. \n\nI slumped back over onto my side; Anna rolled over to claw her way in against me again.\n\n.:.\n\n\"Wow,\" she quavered, feeling herself. \"You had a lot of frustration saved up there.\"\n\nI snorted, and pulled her hard against me.\n\n\"Was that what you thought it would be?\"\n\n\"No.\"\n\n\"No?\"\n\n\"It was better,\" I murmured. \"It was best. Absolutely the best. Fuck, Anna, you feel amazing on me.\"\n\nShe laughed into my neck. \"Tease.\"\n\n\"Takes one to know one,\" I retorted.\n\nShe snaked a hand downwards, and cupped me. \"I can't believe how good you felt in me. It was perfect. It was just what I hoped it would be.\"\n\n\"And now?\" I asked, after a moment.\n\n\"Now I want more.\"\n\n\"I need a bit of time. I feel like I just ran a marathon.\"\n\n\"Mm,\" she murmured. \"We could always go shower... and I could clean you off, and you'd get to see me naked like you've been dying to.\"\n\n\"That sounds like a fantastic idea,\" I murmured. \"Except I'm so shaky I'll never make it upstairs again.\"\n\n\"I'll help you,\" she offered. \"I want a shower with you. Then...\"\n\n\"Then what?\"\n\n\"I want you, in me, again. Only this time, I want to see your face when you come in me.\"\n\n\"Sorry. I should have let you chose where and how you wanted that.\"\n\n\"Joey,\" she whispered. \"That was the best sex I've had in the last three years. You have nothing to apologise for. But I want more. That was the fucking. Now I want the tenderness too.\"\n\n\"So... shower?\" I offered. \n\n\"Yeah. Help me up,\" she grinned. \n\nI stood and self consciously tucked myself away, then reached down to her. She took my hand and I pulled her to her feet; she kicked her pants free of herself, and smiled. \"Come with me,\" she murmured. \n\nI followed her through the indoor half-light, up the stairs, watching the way the light kissed her naked thighs and buttocks. She shot me one sultry look as she paused to turn on the dim passage light - she left the bathroom light off. \"Too much light all at once,\" she murmured. \"We'll have to do it by touch.\"\n\nShe pulled her top over her head, and then put her hands under the hem of mine. \"Strip,\" she breathed, deep in her throat. I pulled my top off, breathlessly laughing as Anna put her hands to my waistband and slowly slid my pants over my bum and down my legs. \"Mm,\" she murmured. \"You're still part hard.\"\n\n\"I blame you.\"\n\nShe cupped me in her hand, and made a noise deep in her throat. \"Fuck, your penis is fantastic.\"\n\n\"Your pussy is too,\" I breathed. \n\nAnna smiled up at me, then pulled herself against me and ground me against her belly. \"You're going to distract me. Come. Lets shower, then find somewhere comfortable.\"\n\n.:.\n\nIt didn't take long for me to be aching for her again. Anna's body felt lithe, supple, perfect under the slick soap and hot water. We touched and caressed eachother; a sensual mix of teasing and grooming that had me erect again and her shivering. \n\nA highlight for me was when she asked me to soap her tummy and breasts clean, and leaned languidly back against me as I did so, eyes half closed and dreamy until my fingers strayed downwards; she writhed and squirmed but somehow never managed to pull clear of me, and her soft laughter had a deep, husky tone to it. \n\nFor her own part Anna seemed to really enjoy feeling me; my balls, the small ridges of my shaft, the smooth skin of my glans, and she pulled me into more than one close embrace with my cock held tight between her thighs.\n\nBut it was the kiss she gave me that really made me shake. The slow, sensual parting of her lips and tongue that became hard, frantic, demanding more of me. The slight taste of her sweat in the water, and the soft \"Joey\" she let out when she broke for air.\n\nI held her to me, water streaming over us. I could feel her giggling.\n\n\"What's so funny?\"\n\n\"Not funny. I'm giddy, Joey. This is seventh heaven. You, here, against me like this,\" she breathed. \"It's perfect.\"\n\nI helped towel her dry, stroking the soft cotton over her flanks and back, watching the way her breasts jiggled slightly as she moved. She grinned up at me, and slowly dried between her legs. \"You're still coming out of me, Joey,\" she laughed. \n\n\"I had more than twenty four hours worth of lust built up, Anna. Are you complaining?\"\n\n\"No,\" she breathed, eyes dancing. \"No, I'm not complaining at all.\"\n\nI toweled myself dry, blushing slightly at the way Anna leaned against the wall, watching me. \"Sorry...\" she murmured. \"You're just really sexy. And that thing of yours is hard to ignore.\"\n\nI dropped my towel and reached out my hand. \"Where to?\"\n\n\"Your room,\" she murmured. \"It has the best view of the sea.\"\n\nI took her right hand and pulled her to me, and she wrapped her left arm up and around my neck. I trailed my left hand down her back to her bum and squeezed her to me. \"Joey,\" she whispered.\n\n\"Yeah?\"\n\n\"Promise me that this isn't going to change things between us.\"\n\n\"Of course it will, Anna... but I'm not going to suddenly stop being me.\"\n\n\"I'm going to hold you to that.\" \n\nAnna spun and pulled me after her, down the passage and into my room. \"Open the door. I want to hear the ocean,\" she whispered. \n\n\"It will be cold.\"\n\n\"I have someone to keep me warm.\" She pulled back the blankets on my bed and sat down; I could see dim reflection of the outside light glint on her eyes as I pushed the door open and wedged it with an old chair. She reached out, took my hand as I approached her, and lay back, pulling me down next to her.\n\n\"Cover us up,\" she breathed. She settled herself against my chest, and breathed out happily as I pulled the blankets up over us.\n\n\"God, you feel amazing.\"\n\nShe sighed. \"Thanks. So do you, to be fair. You're so nice and warm.\"\n\n\"You're so nice and firm. I love the feeling of your breasts against me; of your stomach muscles against me. God, Anna... your body is to die for.\"\n\n\"Mm. As the man who's just been in me, you're obligated to say that,\" she chuckled.\n\n\"It still feels dreamlike.\"\n\nShe reached out, and stroked the tip of her finger along my shaft, then caressed down to my balls. I groaned. \"Still feel like a dream, Joey?\"\n\n\"A really, really good one.\"\n\n\"Don't wake up, then,\" she whispered, as she closed her fingers around me and gently stroked my shaft. \"Fuck... I can't believe you feel this good. It should be illegal.\"\n\n\"It is.\"\n\n\"You know what I mean. Your penis should be in the same class as most narcotics,\" she groaned.\n\nI laughed, and she bit me gently. \"Don't laugh at me.\"\n\nI rolled over towards her. Her face was in shadow; I saw the faintest hint of her smile. \"What?\" she murmured.\n\n\"This.\"\n\nHer hand tightened on me as I kissed her, and she pushed against me; her breasts firm against my chest, her nipples hard. She gasped a breath, then switched hands so she could pull herself closer to me and hook her leg over my hip. I raised my knee slowly, pressing it to her mound, and she whimpered small little ohs as she ground along it. She raised herself, bearing down on me with her slight form as she rode along my quadriceps, slicking both of us up again. \n\nI broke free for a moment, and Anna hunched forward on me with a frustrated moan. \"Joey,\" she grumbled. \"I'm dying here.\"\n\n\"There's something I want to do,\" I whispered. \n\n\"What?\"\n\n\"I need to ask your permission.\"\n\n\"You don't. Trust me, you don't.\"\n\n\"Can I go down on you, Anna?\"\n\n\"Mm...\" she whimpered, sliding slowly along me. \"Well... gee... I don't like to put out on my first date. You're going to have to convince me...\"\n\nI sat up, and she laughed as she fell off me. She wriggled onto her back, and slowly spread herself for me as I turned. Her skin was a deep coffee in the dim light, the contours of her breasts and belly standing out almost in monochrome as she breathed. I could see the goosebumps on her stomach; her beautiful, delicate, erect nipples, and the proud, shaven mons that dipped to her small, clearly-defined labia. \n\n\"God,\" I breathed with a shudder. \"Anna... wow.\"\n\n\"You like?\" she asked, wriggling her hips slightly.\n\n\"So much.\"\n\n\"Show me how much.\" Her voice was husky; deep and with a strange shake to it. \"Show me how much you wanted this.\"\n\nI slowly reached out, and stroked her inner thigh, marveling at how soft she was under my fingers. I leaned forward onto my left elbow, straightening my legs out behind me and finding purchase on the wall and using this to push me forward to her. I glanced up, once; Anna's eyes were open, her hands were already on her breasts. \"Joey...\" she whimpered, arching, as I touched my tongue to her.\n\nShe tasted exquisite.\n\nI gently parted her lips with the fingers of my right hand, and found her firm clit with my tongue. I felt her spasm as I gently, deftly, licked over the hood and base of it, and she hissed and squeezed herself as I slipped my fingertip into her. \"Yes,\" she moaned. \"God, yes, that's what I need.\"\n\nI gently tongued her clit once, twice, then licked around it again; I could hear her panting, and she arched again as I added my middle finger to the index that was already in her. \"Oh god oh god oh god,\" she moaned in small catches of breath, as I slowly started to drive my fingers into her to the knuckle. I could feel sweat on her thigh when it brushed against my cheek, and the scent of her that rose from her hot, tight vagina made me ache deep in my balls. I could feel my cock pressing into the mattress, and I burned to be in her as deep as my fingers were.\n\nAnna reached down a hand and clawed my hair. \"Joey,\" she panted. \"Joey, don't stop. Don't stop, baby. You have no idea... how good that feels.\"\n\nI curled my fingers over, pressing against her as I sucked gently at the base of her clit.\n\n\"Joey...\" she moaned.\n\nI could feel her muscles tensing; I could feel her breathing getting shallower.\n\nI knew she was close.\n\nAnna started to shiver, arched against me, and I felt her start to spasm on my fingers. She let out a wordless cry, half rose out of the bed, and then writhed against my lips, moaning, crying out as the contractions of her orgasm took her. I teased her, left hand clamped around her thigh so she couldn't pull away, till she eventually started flailing at me with her hand, crying out \"Stop, stop, stop, please...\"\n\nI gave her one more gentle, languid lick, and she let a long, shivering moan as I slowly pulled out of her. She closed her legs, and curled towards the wall, still spasming with the occasional aftershock from her belly as I slipped my hand under her and gathered her to me.\n\n.:.\n\n\"You can't do that to me,\" she gasped. \"You cannot do that to me. You'll kill me. Holy fuck.\"\n\nI kissed the nape of her neck, and she writhed again, whimpering.\n\n\"Are you ok?\" I breathed.\n\n\"No,\" she whispered. \"No, I'm dead. Deceased. Shuffled off this mortal coil. A big ball of cooked spaghetti. Jesus Christ, Joey...\" she moaned, as she rolled onto her back, and let her head loll my way. \"I'm serious. You'll kill me if you do that to me more than once.\"\n\n\"Once an hour?\"\n\n\"Once a week,\" she whimpered. \"Fuck... fucking pussy is still spasming...\" she giggled. \n\n\"Another satisfied customer,\" I observed, smug.\n\n\"So satisfied. So... so satisfied,\" she groaned. \"Is that your party trick?\"\n\n\"No. I only whip it out for the ladies who need it.\"\n\n\"Mm. I can see why,\" she sighed.\n\n\"All jokes aside... are you ok, Anna?\"\n\nShe opened her eyes. \"I... think so. I'm sure there'll be all sorts of soul searching at a later date but for now... I'm living in the now, and I'm with you, and I'm happy.\" She thought for a moment. \"And very, very happy downstairs. Seriously, Joey, you should give lessons.\"\n\n\"I think the kink might have made it better,\" I murmured, amused. \"But thank you.\"\n\n\"Do I taste ok?\" she breathed.\n\n\"You're perfect.\"\n\n\"My pussy nice enough for you?\"\n\n\"Anna,\" I whispered. \"Stop worrying about it. I'm rock hard, and that's because it's you. There is nothing in the world that I like more than you, right here, right now. You are perfect. You taste glorious. You feel fantastic. You've ruined me, because nobody else is going to measure up to you after this.\"\n\n\"Mm,\" she breathed, rolling over and wrapping her arm around me. \"I bet you say that to all the girls you do this to.\"",
        "\"Only the ones who are you.\" \n\n\"You know what to say to a girl to get her into the sack, I'll give you that.\"\n\n\"It's the honest truth.\"\n\nAnna shifted, and levered herself up on her arms. She gave me a long, level look, then leaned forward and kissed me. \"Shift into the middle of the bed,\" she whispered. She lifted her right knee, and threw it over me as I moved. \"I want you in me.\"\n\n\"Once was excusable,\" I grinned.\n\nHer eyes were dark, and she kneeled over me, staring down. \"I don't care. I don't give a fuck what's excusable or not. It's Elysium, it's you and me and nobody else, and I want this hard cock of yours sunk to the balls in me. I want it more than the air I breathe.\"\n\nI looked up at her; at the faint highlights of her hips and the undersides of her breasts, at the tangled hair and her slight shoulders. \"You're beautiful,\" I murmured.\n\n\"You're just saying that to get me into bed with you,\" she laughed. Then she sat up on her haunches. \"Gods truth, I have no idea how you fitted earlier,\" she muttered. \n\n\"Lots of dirty talk,\" I groaned as she pulled my cock upwards and ground her slit along its base.\n\n\"Mm,\" she moaned. \"I do have a... dirty mouth... and a dirty mind... but I hardly need it with you under me... like this. Fuck you turn me on.\"\n\n\"Put me in you,\" I begged.\n\nI saw the flash of her grin. \"Say please.\"\n\nI reached up, and slowly touched her nipples, then trailed my fingers down over her breasts. \"Ok,\" she whispered. \"Ok, you win.\" She trailed her fingers up my shaft to the head of my cock, lifted up slightly more on her legs, and pressed me to her entrance. She held me there for one, heart-stopping moment of anticipation, then slowly, achingly slowly, started to lower herself onto me.\n\n\"Oh... Oh Joey...\" she whimpered. I arched my back, groaning, and dropped my hands to her thighs, pressing down on her, trying to push further in. Her lips slipped down me; she had to back off once or twice then resume, and each time I felt my legs spasm and my groin tighten with the need to be buried in her. \n\nShe sat there, leaning back, a look of intense concentration on her face as her lips touched the base of my cock and she ground in small circles, bedding me in. \"Oh... my... god,\" she laughed, breathless as her legs spasmed and I felt her muscles clench on me. \"Just... came again. Just... from taking you into me. Oh wow...\"\n\n\"Holy fuck, Anna, I've never felt anything this good,\" I gasped. \n\n\"Joey... I wish you could feel this,\" she whimpered . \"I'm full of you. And it's so good... oh my god it's so good. You press me in the perfect places...\"\n\nShe leaned forward, letting out a small gasp as she took her weight on her arms. \"Kiss me,\" she begged, and pushed herself down on me. I could feel her nipples touching my chest, and I clasped my arms behind her, holding her against me as I slowly nuzzled and kissed her. I broke for air, and then gently nibbled her left earlobe and shifted myself in and out of her a millimeter at a time. \n\n\"I love how tight you are on me,\" I groaned. Anna moaned in agreement, lifted herself and then pushed slowly back down, impaling herself on me with a rasping gasp. She did it again, and again, each time groaning into the crook of my neck as the head of my cock stretched her entrance, each time soaking me a little bit more as she took me back into her. \n\nShe dug her nails into my back and bit gently at my neck to muffle herself; I stroked my hands down her back to her hips, then around her bum to her pussy; I could feel myself slick between my fingers, and hissed out loud when I felt where I disappeared into her, when I felt how her lips distorted over my cock. \n\nAnna sat up, and put her hands on my chest. \"I love this,\" she moaned. \"I don't care that you're my brother. I don't care. I love it. I love your cock. I love your cock in me. I don't ever want another cock in me other than this one.\"\n\n\"Fuck me,\" I arched against her. \"Fuck me Anna. Take me into you. Fuck me hard like... I know you want to, Anna... ride me... I'm all... yours.\"\n\nShe flung back her head and started to gyrate back and forward on me, driving me in and out as she panted. \"Come for me, Joey,\" she gasped. \"Fill me up again, god... I loved it so much outside... when you were in me... from behind and ... when I could feel you coming... in me... and I could... hear you.\"\n\n\"Anna...\" I moaned. \"Anna... I'm close.\"\n\n\"Come for me...\" she whispered, as she started to rock up and down on me, bottoming out at the end of each stroke, my belly slapping against the sweat-slicked skin of her groin and thighs. I could see myself, glistening in the dim light, disappearing into the black vee of her tight lips and entrance, so hot and perfect on my aching penis.\n\n\"Anna...\" I felt my groin tightening. I felt my legs locking, my shaft growing even harder if that was possible. She rode me up... up... and over, and I groaned and clawed at her back as I slammed upwards into her. \n\nAnna cried out, fell forwards, and locked my head between her arms so she could kiss me as I gasped and whimpered and drove myself into her tight pussy, emptying myself deep in her, soaking us both as our fluids mixed and leaked out over us. \n\nIt felt like it would never end, but eventually, of course, I slowed and stopped, fell back to the bed, and wrapped my arms around my sister to hold myself in her; to hold her against me.\n\n.:.\n\nAnna played gently with my earlobe, humming softly. I lay, still nestled semi erect between her lips, and she made no move to break free.\n\n\"Was that good?\" she murmured, after a while.\n\n\"It was the best I've ever had. Nothing's been nearly that good.\"\n\n\"Mm,\" she breathed. \"I'm glad it was that good for you. I'd hate to be in this much trouble for something lackluster.\"\n\n\"No chance of that,\" I whispered. \"You're a stunning woman, and sex with you is mind blowing.\"\n\n\"Pity it's just this once.\"\n\nI lay quiet for a moment. \"Is it?\"\n\n\"Common sense says it has to be, Joey.\"\n\n\"That's a shame,\" I whispered, as I stroked her back. \"I'll never get over this; it's always going to be what I want.\"\n\nI felt her sigh, and she tucked her head into my neck. \"Ditto, Joey. I never intended for this to happen. But I don't regret it at all.\" I felt her shift, and then shivered as her fingers stroked on and around my cock, still nestled between her slick lips. \"This was worth anything. To have you here, sunk in me like this. To be able to have sex this good with a man I trust...\" She swallowed. \"I'll never be satisfied with anything else, either.\"\n\n\"So don't be.\"\n\nShe lifted herself up. \"What do you mean?\"\n\nMy mind spun as I tried to work it out. \n\n\"I don't know how we'll do the details. But until we've worked it out... come here, to Elysium. If nothing else, to see whether it's workable. To see whether you still want this in the light of day. \"\n\nShe sank back against me, and let out a shuddering breath. \"There'll be other women.\"\n\n\"There'll be other men.\"\n\n\"Maybe.\"\n\n\"Ditto.\"\n\n\"Joey,\" she whispered, after a silence. \n\n\"Yeah?\"\n\n\"Could you be... happy... with me?\"\n\n\"Anna,\" I breathed. \"I always have been.\"\n\n.:.\n\nI took the final long sweeping turn downhill at a safe speed, keeping the Audi tracking sweetly in the middle of the lane. The trees arched overhead, their trunks flicking by in the late afternoon sunlight. \n\nI had a weekend bag of clothes in the boot, a decent amount of food packed in cooler bags beside it, and several bottles of wine. I parked by the old rusted gate, and took a second glance at the new, embossed wooden nameplate.\n\nThe name Elysium was now once more clear to read, and I smiled to myself as I drove through and closed the gate behind me. The wind blew through the open windows of the Audi, and the smell of the sea beckoned to me.\n\nAnna's Porsche was parked under my tree, and I felt a strange, fierce, joyous lift to my heart as I parked alongside it. I grabbed the cooler bags, then nudged the boot closed and walked around the side of the house, my heart thudding painfully in my chest.\n\nShe looked up at me as I rounded the corner. For a moment, we just watched one another. Then Anna set aside her book, and stood. She took a hesitant step, two steps, and then ran, leaping the last distance and flinging her arms up and behind my neck.\n\nI dropped the cooler bags, and wrapped my arms around her, spinning once as she burrowed into me. I slowly trailed my hands down her back, cupped them under her bum, and lowered her down gently.\n\n\"Hullo,\" I breathed.\n\n\"I'd hoped you'd come,\" she whispered, clinging hard. \"I'm so glad you did.\"\n\n\"I'm glad I guessed right,\" I answered. \"I'm glad you're here. I missed you.\"\n\n\"I was so scared you'd change your mind,\" she whispered.\n\n\"Anna?\"\n\n\"Yeah?\"\n\nI stepped slightly back from her, and lifted her face to me.\n\nI waited till she looked up to meet my gaze.\n\nI kissed her."
    ],
    "authorname": "onehitwanda",
    "tags": [
        "brother and sister",
        "beach",
        "dialogue",
        "flirtation",
        "exhibitionism"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/elysium-1"
}