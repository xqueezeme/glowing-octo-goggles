{
    "title": "The Beach Cottage",
    "pages": [
        "This is an account of how I lost my virginity. This wonderful experience happened in the early 70's but is still clear in my memory as though it happened yesterday!\n\nFirst year university had come to a tumultuous end. Exams and projects and orals completed in a kaleidoscope of studying and sleeping and rushing for the next lecture or exam. In hindsight, time seemed to have flown but, at the time, I thought that the end of the academic year would never come!\n\nMy best friend, John, and I were sitting quietly on the veranda of our local drinking hole, feet up on the balustrade, beers in hand and overlooking the sea. My name is also John and we were both students at the local university, both studying architecture. We had met at initial registration and immediately bonded. During this past year I had stayed as often at his home, where I was considered one of the family, as at mine.\n\nJohn was a couple of years older than I was and I looked up to him as I would an older brother. He was charming, good looking and came from a wealthy home. The girls made fools of themselves over him. It seemed that every other week there was a different gorgeous girl sharing his bed. \n\nThe bed I slept in when I was at his home was in an open studio, with our drawing boards and worktables, separated from John's bedroom only by a low height partition and I could hear all that happened! I've lost count of the number of times I masturbated furiously to the sound of kissing, sucking, squelching and the slapping of body against body. Some girls were very vocal and loud, some simply grunted and made animal-like noises while some were completely silent other than their breathing. \n\nAll the girls had to pass the studio on their way to the bathroom and I would lie under the covers with my head under the pillow and stare at them from there. Not one girl ever noticed me. They came in all shapes, sizes and ages, the less inhibited ones went naked to the bathroom while others went in various stages of undress. John would always pass and give me a thumbs-up or -down depending on the girl and the sex. I envied him his easy, devil-may-care attitude.\n\nI, on the other hand, was a reluctant virgin. I would have humped anything that said yes! I was introverted and painfully shy. I stammered and blushed if a girl even looked at me, let alone spoke to me. I had been on dates where I had held hands and kissed but never ventured any further.\n\nWhen we went out to parties or to the pubs or to the beach, John always gave me his car keys. Consequently I only ever had a couple of beers and ended up driving us and many of our friends home afterwards. I was just too serious!\n\nOn the sports field, however, things were different. As good an athlete as John was, I was better. I could run, swim and cycle better, faster and farther than he could, no matter how hard he tried. Swings and roundabouts!\n\nI was brought back to reality as John asked, \"all ready for tomorrow?\"\n\n\"Yep. I've packed all the food and booze at your place. All we need is fresh meat and milk, which we can get along the way.\"\n\nWe had planned a long weekend at a beech cottage near Port Alfred, a sleepy coastal village about two hours drive away. Invited too were John's much older brother Tim and his girlfriend, Jenny. I had met them a few times at John's house at the occasional family get-togethers. Tim and John were clearly brothers, similar physique and easy-going manner. Jenny was a lively woman, always smiling and funny, easy to talk to. Even I had sat and chatted with her on occasion without getting all tongue-tied. She was slightly shorter than medium height, slim, always elegantly dressed. I guess they were both about thirty years old.\n\nThe next morning the sun was barely peeking over the horizon, the car was packed and we were ready to hit the road. John's dad had offered us the use of his car because the old VW Beetle John drove would have been a squash as we were taking the latest gorgeous girl John was seeing, Judy, with us.\n\nI was being gooseberry. Again! Oh well, I had got so used to it over the last year that it clouded my thoughts for only a few seconds. We would swing past her house on our way out of town. As we were getting into the car Mrs Weschta, John's mom, ran out to say that Tim had just phoned to say that something had come up at work and that he would have to delay his departure and could we go past their place and take Jenny with us? He would joint us later.\n\nWe stopped outside Judy's place and John ran in to help her with her things. The whole family came out and I could sense that her mom did not approve of her daughter going on her own with us. \"You're sure there are enough separate bedrooms?\" and, \"You'll look after my good girl?\"\n\nSmooth John reassured her that his sister-in-law would be there as chaperone. Yeah yeah! I had heard her last Saturday night being very vocal. I guess that she was also very passionate from what I could hear, remembering that I was lying not more than three feet away! As I lay there massaging my swollen member listening to them, imagining what it must be like, \"yes, there! There! Lick me there! Aaahhh I'm cumming AAAAHHHHHH!!. And I gushed into a wad of tissues thrusting my hips in time with the banging from the other side of the partition.\n\nAnd then later as I peered at her from under the covers as she went to the bathroom. God, she was beautiful! Proud young breasts, tapered waist and long legs. As she passed the foot of my bed she turned to say something to John and I could see between her legs and I could make out her puffy nether lips and the juices running down her inner thigh. I could smell their combined sex! When John wandered past, his flaccid penis swinging with his step he flashed me a double thumbs-up. Wow! I found I was painfully hard again and could not stir. I had to wait till much later to relieve myself again.\n\n\"Why are you so red in the face?\" John asked.\n\n\"I...Ah...I...\" I stammered, blushing even more at being caught out with my private thoughts.\n\n\"Come, let's go! Bye Mrs G! Bye Mr G!\" and we were off. Oh, how I envied him his easy manor! Next stop his brother's place. Jenny was outside waiting for us and we quickly loaded her kit and in minutes we were back on the road. Finally, off to the beach paradise.\n\nI sat in the back with Jenny. She was her normal smiling witty self and had us all laughing in no time. I was able to talk to her normally without blushing and stammering. I did admire her lovely legs as we drove and when she was looking the other way. She had tucked them up under herself and I could see her smooth thighs. Wow.\n\nAs we talked she drew me out about the recent exams, Jenny would reach out and touch my arm or my leg to make a point. I burned wherever she touched me! There was nothing sexual in her behaviour but to an over-hormoned teenager it was enough to give me a painfully hard erection. Lucky for me I was sitting down and the bulge was not obvious.\n\nThe music was loud enough for me to have to lean close to her to hear all she was saying and I found myself intoxicated by her subtle perfume. I lost myself in her smiling green eyes. I overdosed myself on her husky voice. Boy, was I having it bad!\n\nIt felt like no time had passed and we were there! The rustic timber beach shack was in front of us, the beach and the sea beyond. Stunted wind-formed trees crowded one side of the building, the other side nestled into a sea grass covered dune.\n\nJohn pulled the car under a lean-to shadeport at the back of the shack and we all piled out to stretch and then to explore.\n\n\"Is this the right place?\" I asked, looking round for a number or a name on the building.\n\n\"Yeah, for sure!\" John replied. \"When I spoke to Sandy, the caretaker guy, on the phone he said to look out for the big piece of driftwood shaped like a whale at the door. That one,\" he said pointing. \"He also said this cottage was the only one with a carport. The cottage should be unlocked and he said he would pop by at about lunchtime and we can settle everything then.\"\n\nJohn tried the door. It swung open under his hand and we all trooped inside to see what awaited us. We entered into one big room with large glass sliding doors facing the sea. To the one side was an open plan kitchen, fairly rudimentary but to all appearances, clean and utilitarian. Through a door to one side of the kitchen we found two bedrooms, each with twin beds and a large bathroom. Big bath but no shower!\n\nPuzzled, I went back to the main room. There, in the corner, was a fold-out bed type thing. My pozzy!\n\nWhile John and I carried all the luggage in, the girls sorted out the kitchen. Jenny and Judy drew straws for who had which bedroom. I opened a bottle of white wine for the girls and popped the lids off a couple of beers for the boys, even though it was not yet midday. We were on holiday!\n\n\"I'm going for a swim,\" I said. I went to the bathroom and changed into my baggies, the new fashioned loose shorts-type of swimming costume. I was pleased I was not wearing my sleek Speedo that I trained and raced in. What would have happened if (when) I got a hard-on? I shuddered to think.\n\nI ran down the beach and plunged into the water. Delicious! Wonderful! Exhilarating! The surf was big and powerful, the water warm. What more could a guy ask for? I body surfed one wave after another, beating the dumpers, sliding down the smooth faces of the unbroken waves, riding them all the way to the beach.\n\nWhen I had had enough I wandered out to the dry sand where the other three were lying sunbathing. \"When John said you were like a seal in the water he wasn't kidding!\" Jenny said, looking me up and down. Blushing, I wrapped myself in a big towel to dry off before lying down on the sun baked sand to warm up.\n\nFrom the safety of lowered lashes I studied the two girls. Or rather, one girl, one woman. Judy was voluptuous, rounded and had puppy fat around her tummy. Her breasts were large, at least a C cup or maybe even a D, bulging out of a bikini too small for her. Not that I was complaining! Her skin was smooth and very fair, seemingly untouched by the sun, contrasted by dark almost black hair in a thick plait down her back. From where I was lying I could not see her lower area but in my minds eye I could see her as she had stopped near my bed with a thick thatch of dark hair at the junction of her thighs.\n\nJenny, by contrast, was slighter of build, blond haired, more defined muscles. Smaller boobs I would guess at a 32B. I could see her nipples pressing against the fabric of her costume. I could feel myself getting an erection and I was glad to be lying on my stomach. No! No! No!\n\nI turned away, looking out to sea. I had been looking forward to this weekend seemingly for ever. Today was Wednesday and we were here till Sunday. Five days of swimming, running, playing, drinking and sleeping. I must have dozed off because next thing John was saying, \"okay, that must be Sandy. Come on guys, let's go and get everything sorted!\"\n\nWe all ran up the beach to the cottage where this elderly guy with sunbleached hair and faded blue eyes was standing. We all went into the cottage, signed papers, paid the money and received instructions on all the appliances. The cottage had no electricity so there were kerosene lamps, a kerosene fridge and a gas hot-water geyser. For those days this was not unusual.\n\n\"Oh, I nearly forgot. One of your party, Tim, phoned. Asked please for you to phone him back. Something about work and not being able to get here.\" Sandy got up to leave. \"if you need to phone, come up to the house at the start of the dirt road and you can phone from there.\"\n\nI glanced at Jenny, then away so as not to embarrass her. But too late. She caught my look and in that moment that we connected I read hurt, sadness, the start of tears. And then I was looking elsewhere, blushing. I reached over and took her hand and said something stupid about his coming on Saturday and we would have fun and...\n\nAll through lunch, Jenny was subdued and John could not keep his hands off Judy, which she seemed to enjoy. I said, \"tell you guys what. I'll take the car, drop Jenny off at Sandy's to phone Tim and I'll go and get the meat and things from the village.\"\n\n\"Yeah yeah, good idea!\" said John staring at Judy's chest.\n\n\"I'll go get my purse and fix my makeup. Can't be seen with water damaged eyes,\" Jenny quipped, trying to be her normal self. I felt sorry for her.\n\nAs we pulled up outside Sandy's place, Jenny leaned over and took my hand. \"Please wait for me. I won't be long\".\n\n\"Okay,\" I said, my brain moving to where she was touching me.\n\n\"You're so sweet,\" she said. She kissed me softly on the cheek then walked off to phone. My hand was still on my cheek when she returned to the car.\n\n\"I need a hug!\" Jenny slithered across the seat and into my arms. She seemed so small and fragile although there was nothing small about the strength of her hug. We held each other for ever! And I was wishing forever was forever! Her breasts mashed up against my chest, her head on my shoulder, her hair in my face. Oh God. She smelled warm and fresh. No perfume just...her!\n\nIt was getting as though I always had an erection. Do all adults have a perpetual hard-on? Was it that I was not yet quite an adult? Was I abnormal? Would it go away when I had had my first woman, lost my virginity? Why was God so cruel as to not give me the choice, soft or hard? I wondered if Jenny noticed the bulge pressing against her thigh? How could she not?\n\nI felt dreadful delighting in her misery. Well, not her misery but... you know what I mean. After forever Jenny sniffed and said, \"okay, I'm done. Thank you. Let's go do the shopping.\"\n\nAll villages in the world are the same. \"You're from out of town! Where are you staying? Old Sandy's place? Good man, give him regards. Would you mind dropping off his post?\" And so on.\n\nAll done, we were on our way back when Jenny asked, \"do you think they have had enough time? John and Judy, I mean...\"\n\nI knew exactly what she meant and blushed fiery red. I glanced at Jenny and she burst out laughing. Sheepishly I laughed too. And then we were both laughing so hard I had to stop the car. My sides were hurting, my cheeks stiff. Tears were running down my cheeks. \n\nWhen it had at last passed, Jenny said, \"come lets go walk on the beach for a bit.\" We had stopped near a long white beach, apparently deserted. I parked the car and we walked to the waters edge and then along. As we walked, Jenny took my hand. It felt so natural. Her hand was so small in mine. I am just over six foot and her head came up level with my shoulder.\n\nAs we walked she told me a little about her's and Tim's relationship. Enough to tell me that all was not roses. We were quiet for a long time. Not uncomfortable quiet just companionable quiet.\n\n\"Where is your girlfriend?\"\n\n\"I...I don't have one\"\n\n\"At the moment or never?\"\n\nI felt myself blushing. \"Never. At school there was always sport and work. Then the army.\" I shrugged \"Two or three weekend passes was all the free time we got. And besides, all the guys that had girlfriends before their stint was finished got 'dear Johns' during their time. Didn't seem like a good idea to me. Then this last year at varsity... well there just never seemed time. I'm also kinda shy around girls and don't know what to say.\"\n\nToo much information! I felt myself blush again.\n\nShe put her arm around me and hugged me to her. \"You'll make some lucky girl happy one day. Your day will come. Just relax and go with the flow.\"\n\nYeah, right. It's so easy for you to say. You're beautiful, bright, funny and all the guys are falling over themselves to be with you. One day is too far away.\n\nWe turned around and walked back towards the car, still hand-in-hand. \"So. Is Tim going to join us on the weekend?\"\n\n\"No. We argued about it on the phone and he is not coming. So it's you and me, Bob.\" Her nose wrinkled delightfully as she smiled.\n\n\"And John and Judy.\"\n\n\"Do you think they would notice if a tsunami were to wash the shack away around them\"\n\nI laughed, \"probably not!\" Thinking of their naked bodies entwined made me harden again. Honest, I can't help it!\n\n\"What are you thinking?\" Jenny swung me round and looked me in the eye. I was beetroot red! She put her arms around me and hugged me close. \"You're so sweet,\" she said into my chest. We stood in each other's arms for a time. Eventually she reach up and kissed me on the lips lingering only a moment, then said, \"we better get back before they start wondering...\"\n\nThe rest of the day passed swimming, drinking cold beer and throwing Frisbee. Time to fix the barbeque. Soon we were eating succulent steaks off the fire, potatoes, onions and squash all done in the coals.\n\n\"Delicious! Thank you\" Jenny reached out and squeezed my arm.\n\n\"What about me?\" John said in an aggrieved voice \"I've kept you supplied with bitterly cold beer and wine all afternoon!\" We all yelled our appreciation, laughing. I was feeling completely relaxed for the first time in a long time. My erection had subsided.\n\nAs the sun set we all sat on the veranda and witnessed the day turn to night. It was one of those rare evenings with no wind. The sea was like a mirror blending with the sky so that one could not discerned the transition. A vee of egrets flew overhead and it was so still you could hear the wind through their feathers. The stars appeared so gently that they weren't there, then they were there.\n\nI was sitting on the edge of the veranda with my back against a post and Jenny was sitting on the sand between my legs leaning back against my chest. My arms were loosely linked round her stomach, her hands on mine. John and Judy were sitting snuggled together on a recliner. We were all lost in the beauty of it.\n\nI heard the mosquitoes starting to whine and start to feed on the bare skin. And there was a lot of bare skin around as we were all still in our bathing costumes. Hating myself for disturbing the calm I said, \"Better get dressed and get the mozzy coil going. There will soon be enough of the buggers to carry us away, let alone suck us dry.\"\n\n\"Lucky mosquitoes!\" I heard Judy whisper and John laughed.\n\nReluctantly I stood up and went to light the lanterns. In one of the cupboards I found a mozzy coil and got that smouldering as well, the slightly perfumed smoke filling the cottage. The girls tidied up, I went around the outside to make sure all was safe and the fire was out and John poured fresh drinks all round. The cottage looked very cosy and friendly in the lamp light. When we had all changed into our cloths, we sat around the dining room table and talked.\n\nI found out that Jenny was a physiotherapist and she kept us in stitches talking about her work and her patients. I admired her sense of the ridiculous. John and I contributed with stories of the lighter side of our military service. John had been in the navy, I had been in the army. Judy was a third year student at college studying fashion design. I found we had much in common as far as design and colour sense was concerned. It was the first time we had really talked together and I liked her.\n\nJohn went off to get his guitar. His other mistress. His friend, his companion. Jenny asked, \"when the two of you are together what do other people call you? I mean how do they differentiate between you?\"\n\n\"You mean who is better looking?\" I quipped. Better watch how much I drink, I thought to myself.\n\n\"No silly! When someone calls 'John', who answers?\"\n\n\"John does.\" We all fell about laughing. I mean, how silly can you get.\n\nWhen some normality had returned I said, \"they call me Johndee. Not sure why but it seems to have stuck. We have two other Johns in our class. One is JohnO and the other is JohnR. John is John.\"\n\nWe sat and listened to John strut his stuff on the guitar for a while. He was good! As had happened so often during the past year I fetched a couple of spoons and beat enthusiastic time while we sang all the songs we knew.",
        "\"Let's play cards.\" We quickly cleared the table, I got fresh drinks for all, sneaking my old half-full beer back as though it was a new one. I had had a lot of practice doing that over the last few months.\n\n\"What should we play?\" I asked, shuffling the cards\n\n\"Strip poker,\" was John's immediate response.\n\n\"Oh come on,\" I said.\n\n\"Yeah, let's play strip poker\" intoned Judy. I looked hard at her calculating that the girls had flattened two bottles of wine and were on the third one. I looked at Jenny, catching her looking at me with a slight smile on her lovely face. She shrugged slightly. \"Let's play.\"\n\nOh God! I felt myself blushing again. I was already hard. What happens when...if...\n\n\"Okay, listen up! Here are the rules. We can all wear ten items of clothing, no more. Less if you're feeling lucky!\" John steamed ahead. I laughed nervously. \"Remember, this is not about winning, it's about not losing. You're all clear on how to play and the hierarchy of hands...\" Etcetera etcetera. I stopped listening and tried to think of some way to get out of it. Short of pretending to pass out or something I could not think of anything.\n\nAnd then the first hand was being dealt! I looked round the table. The lamplight cast warm light on all the faces, all their eyes were bright and their cheeks flushed. I suppose mine were too. We were all dressed in a strange array of clothing to make up the ten items. Hilarious actually. Judy had taken some photos accompanied by much hilarity.\n\nJudy was the first to lose a hand. Then John. And so it went on. When Jenny had to remove her blouse I could not help but stare. She looked so sexy in her slightly transparent lacy bra. White was my colour! I could see that she had caught the sun today and the whiteness of her bra emphasised the warmth of her skin. I was rock hard and dreading the card-axe.\n\nI thought I was doing quite well when suddenly I lost two hands in a row. I was down to three items, shirt, shorts and underpants. I felt Jenny gently rub my foot with hers under the table in sympathy. Her touch was electric.\n\nJudy, in just bra and panties lost the next hand. John, sitting in his shorts and underpants gave a great yell of delight. \"Take it off! Take it off!\" It was the first time I had seen Judy flustered. She reached behind her and unhooked her bra. I saw the tension go out of the material and her large breasts sagged slightly. Holding the garment in place she leaned forward and let the straps slide down her arms and then there they were! Her nipples slightly puckered around the edges and very light in colour, almost blending into the skin colour.\n\nThese were the closest I had ever been to a pair of naked breasts! I had seen picture in a few girly magazines and seen real live ones in the semi-darkness of John's bedroom. I delighted in the faint blue lines of veins under the skin and the faintest fuzz of fine dark hair immediately around the nipple. John leaned forward and tweaked the nipple closest to him. Judy jumped as though stung and shrieked. I watched in fascination as the areola contracted and puckered and the nipple became darker and more prominent. My first erect nipple!\n\nI was so hard it was painful!\n\n\"Wakey wakey there! Your deal. Stop staring at her tits.\" John fell about laughing. I was mortified! Blushing profusely and sweating slightly I picked the pack up with shaking hands. I felt Jenny's leg against mine and her warm hand on my arm, \"relax. Take no notice of him!\"\n\nJohn was down to his underpants and I still had my shorts on when Jenny's turn came to lose another item of clothing, bra or panties? She reached behind her and, looking me straight in the eyes, unclipped and removed the garment in one easy move. I was too shy to glance down while we stared at each other. Then she looked away and I looked down. Jenny was sitting facing me, shoulders back and I devoured her breasts with my eyes. They were perfect! Pear shared, slightly fuller than I imagined them to be, the nipples corral pink, erect and facing slightly outwards. Oh my God! I thought it was too much for me and that I was going to cum in my pants.\n\nI took a deep breath and looked away, avoiding looking at either girls. The next hand, Jenny lost again. John took up his chant, \"take it off, take it off!\n\nJenny blushed, her cheeks rosy in the lamp light. She stood up and slipped her thumbs under the waistband of her panties and started pulling them down. But not before I noticed a small wet spot in the crotch. She was still facing me as she slipped them down her legs to her ankles and then stepped out of them. I saw she had a neatly trimmed thatch of honey blond hair. As she straightened our eyes met and she smiled slightly keeping my look as she sat.\n\nThe rest was a blur of embarrassment. Judy revealed her bush of wild black hair and then I had to lose my underpants. I was rock hard! I tried to think of dead cats and falling off a cliff but nothing altered the state of my erection. Worse, there was a large wet patch of precum on my underpants. Clearly visible! And it felt like all three were staring. And I now I had to remove them.\n\nSitting, I lifted one buttock at a time and then slid the garment down my thighs and then off. My cock, freed from the constraint, was sticking up at forty five degrees. Now, I have never measured myself but I know I am well endowed compared to other men. It had been a source of great embarrassment since puberty. I was teased mercilessly at school where there was very little privacy in the sports change rooms. And worse in the army! The wc's were simply lined up along one wall with no partitions. The showers were spouts sticking out the walls of a square room.\n\nI did not know where to look. In the silence that followed I could hear the sea outside in the darkness. John whistled and Jenny cut in, \"shut up! Lets finish the game.\" She reached across and took my hand and squeezed. She whispered in my ear, \"you're beautiful!\"\n\nIn my desperation I picked up my cap and tried to cover myself but that looked ridiculous, the cap hanging in the air off the end of my penis. That at least broke the silence and we all laughed hysterically. I was so relieved that they thought I was joking.\n\nWe continued playing until all of us were naked. With the others in the same predicament I did not feel so bad. John jumped up and refreshed all our drinks. I could not believe how relaxed he was, his semi erect penis swinging from side to side as he walked. There followed an animated discussion about I don't remember what. With everyone relaxed I again compared the two women.\n\nJudy. About twenty years old, voluptuous, pale nipples fairly small in proportion to her breasts. Very fair skin and almost black natural pubic hair, thick and wild.\n\nJenny. Older. More mature. A body shaped by sport, small waist, flared hips. Her skin had a tan but I could see where she had burned in today's sun. Smaller breasts than Judy's but beautifully shaped with much more defined nipples, long, thick and very square ended. Large areola, all a wonderful deep pink. My mouth watered thinking about sucking on them.\n\nI felt Jenny's hand on my thigh, gently rubbing. I looked at her blushing again, I had been caught staring! Again! She just smiled.\n\nJohn reached for Judy's hand, \"I got plans for you, Honey!\" and led her off to the bathroom, Judy blushing rosily.\n\nJenny said, \"I feel like the sun got me this afternoon. Would you mind rubbing some cream on my back?\" Would I? I would jump off the Empire State Building if she asked me to! I watched her walk naked to her room and return with a large squeeze bottle of cream. She went straight to my bed and lay on her stomach, holding out the bottle.\n\nI put some in my hands and rubbed them together to warm the cream before spreading it on her back. I rubbed the cream in, changing from simply rubbing to massaging. I have been involved in high level sport for as long as I could remember and knew a thing or two about massage. I worked the long muscles of her back, starting from her buttocks to her neck. The fact that the sun had not touched those delightful bum cheeks did not deter me. They were so firm yet so soft. I worked long and carefully over the whole area, loving the feel of her fine grained skin.\n\nMy hands slipped down her sides from the widest point of her hips, slowly, sensuously up over the sides of her breasts as they squeezed out on either side up to her armpits. I felt her jump and saw goose bumps spread across her back and buttocks. \"Are you cold\" I asked, concerned. She half turned to look me in the face. After a moment she said, \"you're so sweet!\" and lay back down. That was the second time she had said that.\n\nTime for her legs. I moved down to the end of the bed. Feeling incredibly bold, I took an ankle in each hand and spread her legs so that I could kneel between them. I expected Jenny to stop me. I heard her sigh. I though I saw her thrust her pelvis down into the bed. As I knelt in the space I heard noises start to come from John's bedroom, grunting, the bed banging against the wall, Judy asking for more, deeper, harder! It was exactly as I had heard her in John's bedroom before.\n\nWe stayed, frozen, as we eavesdropped. I had my hands resting on her legs just below the knee. The sex next door became more boisterous and I could hear flesh slapping flesh. I found it a huge turn on! So did Jenny as I saw her humping the bed below her and I could feel her legs tighten around me. Sitting where I was I could see between her thighs and could clearly see the swollen, gaping lips of her vagina. I could see a very light covering of blond pubic hair as it thinned towards her anus, a small delicate rose exposed rhythmically with her thrusts. I could see the moisture glistening in the lamplight as she moved.\n\nI became aware of her smell. Instinctively I knew I was smelling her excitement! It was heady, intoxicating. I felt the desperate urge to taste it!\n\nBut in my inexperience I hesitated. I took more cream, warmed it between my hands and spread it up one leg from ankle to buttock, my fingers brushing against her sex. \"Uuugh\" I heard as her legs tried to close. I massaged, bottom to top, bottom to top. At the end of each stroke I would trail my fingers along her outer lips up over her anus and stopped at the top of her buttocks. I watched closely as Jenny timed her thrusts into the blanket so that she was as open as possible when my fingers rubbed past her sex. Her legs had spread further of their own accord, I could hear her sighing in time with my hands. Then the same on the other side, up and down.\n\nI changed my position and was rubbing both thighs at once, both thumbs on her inner thighs. As they passed her pussy I would trail them over the distended lips and listen for her sigh. And then we heard Judy shouting \"Yes! Yes! I'm cumminggggg!\"\n\nI thrust first one thumb and then the other deep into Jenny's hot opening. In that fraction of a second I felt her warmth, her slippery wetness, her arousal. I felt a hard protruding knob press against my fingers as they cupped the rest of her sex. And then I felt her vaginal walls clenching my thumbs tightly and rhythmically gripping and relaxing. Jenny was cumming! She thrust hard with her pelvis against my hands, forcing my thumbs deeper and pushing her sex against my fingers. I could hear her muffled scream as she buried her face into the pillows.\n\nI squeezed my thighs together and the most exquisite agony passed through my body as an orgasm shook me. I could feel the cum boiling up from deep inside me and then shoot out in thick ropes of white sperm. I saw the gobs land on Jenny's back, in her hair, then on her buttocks and finally dribbling onto my hands and the bed. I had not even touched myself! I was mortified. What was Jenny thinking?\n\nJenny's pelvic thrusting had reduced to the occasional spasm and her breathing was returning to normal. My thumbs were still deep in her vagina and I could feel my fingers were slick from her juices. I started moving my fingers in small circles against the swollen knob deducing that this must be her clitoris.\n\nBy moving my hand in circles I could feel my thumb moving slightly in and out of her vagina, twisting at the same time. I withdrew my left thumb and trailed it slowly up to her anus. She clenched her buttocks against my thumb and kept still for a moment. I thought I had gone too far and did not move. Then Jenny relaxed and started moving her hips and thrusting her bum out to give me better access. And a better view. I dipped down to her flowing pussy to get more of her lubrication and then back to her anus. It was so tidy and pink, with fine hairs at the base. I moved my thumb in circles in time with the thrusting of my other hand.\n\n\"Aaah yesss!\" I felt that tunnel start convulsing on my thumb again and I applied pressure on her anus, watching it clench in time with her vagina. And I felt moisture run over my hand as I continued thrusting.\n\n\"Stop! Please stop\" Jenny placed her hands over mine. \"I'm too sensitive right now.\" I reluctantly took my hands away, Jenny continuing to hold them softly. She squirmed around on her tummy until she was facing me. \"That was so wonderful!\" Her face was only inches away from my penis which was still erect even after my climax. She reached forward and took it in her small hand, \"you are so beautiful!\" And then nestled it against her cheek.\n\nI instinctively tried to cover myself. \"No. I want to see and feel. You mustn't take notice of what other people say.\" I felt her hand start to move slowly up and down my length as it rested against her cheek. I could not believe anything could feel that good. She glanced mischievously up at me, her nose wrinkled \"did I notice a little...no, maybe a lot, of extra cream on my back?\" I blushed scarlet. \"You better rub it in before it messes the sheets!\"\n\nI could not believe what I heard. She wasn't mad or disgusted with me! As I reached forward to comply she took me deep in her mouth. Oh my God! I froze. It felt so good, warm and encompassing. I could feel her hand gripping the base of my cock. What to do? I reached to the small of her back where a large puddle of cum had collected. In doing so I thrust deeper into her mouth. \"Mmmmmm\" I felt the deep vibration from her throat. Spreading the cum up towards her shoulders I slowly pulled out. And then back, until I was thrusting into her warm wet mouth.\n\nI had never experienced anything like it! I was having difficulty controlling the thrusts. I was scared I would choke Jenny. Or hurt her. Lucky I had cum just a few minutes earlier or I would have shot my bolt the moment she took me in her mouth.\n\nI felt one hand move between my legs and cup my testicles, then gently massage them. I was in heaven! I wasn't sure how long I could last. I continued slowly thrusting into her mouth as I rubbed the cum into her skin. Then that exploring hand reached my anus and that was just too much. I lurched forward penetrating her mouth as deeply as I could and whispered urgently \"I'm cumming!\" Even now I was aware of the couple next door. Her right hand moved rapidly up and down the exposed section of my cock. And then I was blasting shot after shot of thick cum in her mouth. The feelings were so intense that I sort of passed out falling sideways onto the bed next to Jenny.\n\nWhen I became aware of my surroundings again I found Jenny still had me deeply in her mouth, milking the last drops of cum from my cock, her other hand still between my legs holding me firmly to her. We lay like that for what seemed an eternity, her mouth gently suckling me. I put my arm over her and pulled her to me resting my cheek against her firm stomach. I felt hyper-aware. I could feel her breath against my lower stomach, the faint movement of her tongue and mouth on my now flaccid penis. Her hand trapped between my thighs still pulling me in to her. I felt the warmth of her stomach against my cheek, her strong woman smell. I was in love!\n\nEventually Jenny released me and whispered, \"let's go and clean up. I'm tired.\" We took a lantern and went and washed, brushed our teeth and generally made ready for bed. And then Jenny sat on the toilet and peed! She abstractly tore off a length of loo paper in readiness to wipe herself. I heard the hissing of her discharge and the splash as it landed in the water. I cannot describe how erotic I found this basic action. I turned away to hide my instant erection.\n\n\"Come here, silly,\" Jenny held out her hand. I hesitated and then went to her side. She put her arm around me and pulled me to her, her face pressed against my hip. \"You have no need to be shy in front of me. Ever! I love what I see.\" She gave me a squeeze and then let me go. Spreading her legs she wiped herself and dropped the paper into water. I was mesmerised! \"What? Have you never seen a woman pee before?\"\"\n\nBlushing \"N....no\"\n\n\"Did you like it?\"\n\nBlushing more \"Ye...yes.\"\n\nStanding up Jenny washed her hands and then she took me by the hand and led me to my bed. \"Sleep time!\"\n\nWith all the candles and lanterns out we snuggled up together under the blankets. We lay arm-in-arm facing each other in the dark. Jennie's lips sought mine in the softest of kisses. We kissed for a long time, then I felt her lips part and, unbelievable, get even softer. I felt her tongue explore the line where my lips touched, exploring, gently parting, searching out my tongue. And then we were kissing! I mean exploring each other. Sampling. Tasting. Our lips mashed together. I felt faint-headed at the delight of it. She tasted so sweet. So soft yet so strong.\n\nAfter time but far too soon Jenny whispered, \"I'm bushed, we'll see how we feel in the morning. I must be careful, I could fall for you in a big way.\" She rolled over and I spooned around her, our bodies touching all the way. Jenny took my hand and placed it on her breast. \"You're so deliciously warm,\" she sighed.\n\nThe next thing I became aware of was a pair of lips pressed to my eyelids. I was confused and then it all came flooding back! I could smell the woman-smell and feel the warm body pressed to mine. I pulled Jenny down and continued kissing where I had left off the previous evening.\n\nI could feel my raving hard-on pressing against her leg and for once did not feel embarrassed. Jenny reached down between us and took me in her small hand. \"So big!\" she whispered and made her eyes huge as she looked at me. We both burst out laughing and moved into each other's arms.\n\nAfter a time she said, \"I don't particularly want the others to walk in on us right now, what with Tim being John's brother and all.\" I had been having similar thoughts. \"Let's go and explore the beach,\" I said.\n\nWe wandered down the beach hand-in-hand, both with jackets on against the early morning chill. We watched the sea change from navy blue to light sparkling blue as the first rays of sun struck, the foam from the breakers pure clean white.\n\nI said \"this is the best time of the day! It is like witnessing a birth, all new fresh and clean. Before anyone has had a chance to mess it up.\"\n\n\"That's a bit cynical for someone so young,\" Jenny said. I blushed. \"What has made you so distanced from people?\" She turned and hugged me fiercely to remove the sting of her words. \"I don't really want to know. All I want is that smile and that mind and those arms around me.\"\n\nI put my arms around her and sought her lips with mine. Now I am not very experienced in the art of kissing. I brought to mind what Jenny had done last night and used that as a guide. Not too much in a hurry. Slowly, softly. Then gently exploring her lips. Parting them with the tip of my tongue, then retreating. Waiting for her response. Jenny was more aggressive and took my lower lip between her teeth and bit softly, not so softly that I could not feel her sharp teeth. In response I explored her teeth and then under her top lip. And so on back and forth. It was one of the most exciting things I have ever experienced, last night aside. I had not yet had time to digest that fully.",
        "The kiss went on and on, becoming more intense, deeper. I could feel Jenny moving her body against mine, subtly at first then stronger. I could feel the swell of her breasts pressing against my stomach, then the pressure of her mound against my thigh, thrusting gently then more insistently. Her arms were around my neck, her fingers entwined in my hair pulling my lips to hers. I had one arm around her back and I slid my other hand down to the flare of her bum, feeling the divide of her arse and pulled her strongly against my thigh.\n\nI felt Jenny stiffen and she said into my mouth, \"don't stop, I'm cumming!\" I lifted my leg slightly to press more deeply between her legs and pulled her hard against me. I felt her shudder and her teeth sank into my lower lip. After a time she quietened down and relaxed against me. I was afraid she would fall over if I did not support her. Not that I objected to holding her against me!\n\n\"Where did you learn to kiss like that? I could have sworn last night...\"\n\nI blushed. Again. When would that stop? \"Silly, you were wonderful. No need to be embarrassed. You could teach a lot of guys something there!\"\n\n\"I just tried to copy what you did last night. It was the most amazing thing I have ever experienced. Do...I mean... um...\"\n\n\"Come on, ask!\"\n\n\"Do all women um... cum while a guy is kissing them?\"\n\nJenny giggled. \"No, I don't think so. That's the first time it's happened to me. Remember, it was not the kissing alone. Girls are complex things. We're complicated. The kissing was wonderful. I'm infatuated with you. The setting, the beach and all. I'm an early-morning person. No threat, nothing to prove. Your leg against my pussy.\" She felt me jerk at her use of that word. \"Does that shock you?\"\n\nI thought about it for a moment. \"No, it's just that you are older than I am and I did not expect you to use that word. I think you used it exactly right. I hope one day I will be mature enough to use the right word at the right time, regardless of social norms.\"\n\nSuddenly Jenny exclaimed \"you're bleeding! Did I do that? I'm sorry.\" She held me tightly in her arms, her head against my chest. I held her fiercely in return, my tongue exploring the rough patch in my lip.\n\n\"Come, let's climb that dune and watch the sea.\" Jenny took my hand and we made our way up the beach. The dune must have been two hundred feet high and we were both out of breath when we reached the top, where it disappeared into the thick undergrowth. From here there was the most magnificent view. As we sat down Jenny said, \"see what you did to me!\" She pointed to her crotch where there was a large obvious wet patch in the material of her trousers. \"I can't remember ever being so wet.\"\n\nAfter a while I got up and moved to a flat patch tight against the undergrowth and spread the towel I was carrying out and said, \"come sit.\" I spread my arms in invitation.\n\n\"Oh no! You can't trick a poor innocent girl into believing you intensions are pure!\" Jenny looked at me with a stern face. \"If you have your way with me will you marry me? To have and to hold, to cherish?\"\n\n\"Do as you are asked or I will put you over my knee!\" I matched her stern look. We both burst out laughing. Jenny came over and sat between my spread legs and snuggled back against my chest. I folded my arms around her placing both hands firmly on both her breasts. I heard a soft, \"mmmmm.\"\n\nAfter a while she asked, \"would you like to put me over you knee?\"\n\nI considered it for a while, glad Jenny could not see the blush on my cheeks. \"Yes, as long as you were excited by it too.\"\n\nJenny screwed around in my arms to look me in the eye, \"how old did you say you were?\" After a long look she turned back, snuggling close. \"I suppose that falls into the same category as watching me pee?\" She moved both her hands over mine and squeezed them against her breasts. \"I've been with lots of guys in my time, never with one like you. I feel that I can say and do anything and you will understand. Does that sound strange?\" Rhetoric!\n\nAfter a while I slid my hands down to the bottom of her blouse and then back up to cup her bare breasts. I could feel those prominent nipples push against my palms. \"Oh yes!\" I heard her sigh.\n\nWe sat in companionable silence for a while with me holding Jenny against my chest and my chin resting softly on the top of her head. Then I needed more. I started moving the palms of my hands in circles over her nipples, rolling them round and round. I felt them get harder until it felt I was rubbing two pebbles with my hands. I felt more than heard Jenny sigh, \"...so nice.\" I did not hear the rest. I was obviously doing something right.\n\nThe first of the morning rays reached us as we sat on the sand. I could immediately feel the warmth. I have the image of this idyllic setting forever seared in my brain.\n\nAgain, I needed more. I moved my hands away from her breasts and I felt her stiffen. \"No!\" I hooked my thumbs into the waistband of her shorts and started to pull them over her hips. \"Help! Help! He's trying to undress me\" Jenny yelled into the deserted air and lifted her bum off the towel to make it easy for me. I gathered the sides of her panties at the same time and pulled them both down to her knees. I could see a long string of moisture stretching from the wet crutch of her panties to the hidden folds of her pussy. I was unaccountably excited by the spectacle! Jenny must be really aroused! I could reach no further and Jenny stripped them off her legs and threw them to one side.\n\nI placed my hands on her inner thighs and spread her bare legs, slowly sliding my hands up the forbidden fruit. When I reached the moist junction of her thighs I was surprised at the heat being generated. I wasn't really sure what to do so I cupped my right hand over the whole area, feeling the curly hair against my palm and my long fingers settling against the warm skin between her anus and her pussy. My other hand I moved back to her one breast, cupping that too.\n\nJenny raised her knees and spread her thighs as wide as they would go. I slowly started moving my hand in circles gently rubbing the whole area. Then I slid my middle finger up, penetrating her vagina slightly, amazed at the slickness of her body fluids. Moving down and around I spread her abundant moisture over the whole area, feeling the valley between her inner and outer lips, where they joined and ran down to her anus. I felt Jenny thrust her pelvis forward as I reached further and I slid my finger over and around her anus. Then back and forward, exploring with my fingers.\n\nJenny's breath was now coming in short pants. She reached down and guided my fingers higher till they were sliding over her engorged clitoris. \"Yes, there. Harder! Use three fingers flat like this.\" She manipulated my hand to the right rhythm and pressure. \"Yes! Yes...\"\n\nI moved my left hand down, exploring her opening, first with one finger then two. I could not believe the smoothness. The softness, The heat and moisture. I followed the flow of honey down between her arse cheeks till I again touched her anus. I felt her shudder and tilt her pelvis again. I circled it for a while then inserted my thumb deep into her pussy and at the same time slipped the tip of my index finger into her anus.\n\nThat was it. I felt Jenny go rigid, her internal muscles clamping hard onto my thumb and finger. I'd gone too far! I'd hurt her!\n\n\"Oh fuck! Yessss!\" She started thrusting her hips violently against my hand. I felt her whole body shaking as she pushed back against my chest and the I felt her internal muscles spasming rhythmically around my fingers. Jenny was orgasming. Violently! I continued rubbing and thrusting in time with the contractions, slowing as they subsided and eventually holding still as her body relaxed, my thumb and index finger still deeply imbedded in her. \n\nFor a long time I felt tremors run through her frame. I slowly started moving my fingers over her clitoris, touching so softly that I was almost not touching. I knew how sensitive I was after a climax! I experimented with two fingers, one either side of her clitoris, in a cycling action using her skin to indirectly stimulate the sensitive head. After a short time I felt her hips start to thrust again. And again the rhythmic clenching and the sighs. Much shorter and softer this time.\n\nWe sat still quite a long time like this as Jenny recovered.\n\n\"You...\" Jenny croaked and I could hear her wet her mouth before continuing. \"That was amazing! I can't ever remember having such an intense climax. You must think I am so selfish taking all and not giving.\" She placed her hands over mine to stop them moving.\n\nI felt her shudder as she removed my invading fingers. Jenny turned in my arms and pushed me back until she was lying on top of me. Her lips sought mine. After a long lingering kiss she said, \"you've too many clothes on. Must a girl do everything these days. Honestly...\" She giggled and clamped her lips to mine as she loosened the buttons on my trousers.\n\nBack on her knees between my thighs she started to pull my trousers off. Self-consciously I tried to stop her. \"Silly!\" Jenny just looked at me until I removed my hands. \"You've nothing to be shy about.\"\n\nIn no time I was naked. As Jenny kneeled over me she stripped off her shirt and jacket in one move, her wonderful body bared for me in the bright morning sun. The prominent nipples standing proudly out, dark coral pink, her honey pubic hair askew, plastered to her pubis by her fluids. I had never seen anything so erotic!\n\nI held out my arms and Jenny sank down on top of me, trapping my erect penis between us, grinding her breasts into my chest and capturing my lips in the most intimate kiss, her warm tongue exploring mine, her lips moving sensuously over mine. \"I could easily fall in love with you,\" she whispered. \"Your turn now.\"\n\nWe started kissing again and I felt Jenny move her legs outside mine. Then her hand snaked between us. She raised herself onto her knees, lifting my penis up and placing it at the entrance to her vagina. She looked me in the eyes and slowly and gently moved the head of my penis up and down her warm wet slit.\n\nI could see a rose blush rise up from her breasts till it reached her cheeks. \"I've never been with anyone so big. We need to go slowly.\"\n\nI watched in fascination as her small hand guided the head to her opening and she slowly sank onto me. I cannot describe the sensations. Heat, softness, enveloping. It felt so right. More than anything I had ever imagined. I felt the tightness as she slowly sank onto me, pausing every now and then to get accustomed to the stretch. And then as she sank further her eyes open wide, her sight boring into my soul.\n\nAnd then I felt her pubic bone press against mine. \"All the way in!\" she whispered. \"So stretched! So full! I love you.\" Jenny lay forward on top of me, impaled to the hilt. She put her lips to mine softly, then whispered. \"This is your first time. Enjoy! Come when you want to. We can do it again and again and again. Fuck me as hard or as soft as you like!\"\n\nWith that Jenny did a judo roll so that I was on top without ever coming out. I looked down between our bodies and could not believe that I was finally there. What I had fantasized about, only better. This gorgeous woman-body spread and open to me. To Me! \n\n\"Fuck me!\" Jenny pulled me hard to her. That was it!\n\nSome primeval instinct took over and I started pumping into her body. With each thrust I heard our bodies meet with a smack and I felt the air being knocked out of her body. I watched in fascination where I penetrated her, my cock pistoning into her body, pulling out and pistoning back. I could see myself slick with her juices.\n\nJenny hooked her feet behind my thighs and gripped me with her hands behind my back goading me to greater feats. To pound into her. To hurt her. When I looked into her eyes they were wide, staring at me, her mouth wide too, in a soundless scream.\n\nAnd then I felt the orgasm start. Right down at my toes, rushing up through my body. My scalp tingled and I saw rainbows. I was aware of the exquisite flow of sperm from deep in my bowels through my rock-hard cock. I felt myself exploding, spasming deep inside this wonderful woman as she held me tight, as deep as I could go.\n\nAfter a time, I'm not sure how long, I collapsed on top of Jenny, my full weight pinning her to the sand. I was totally spent! I felt her hands rubbing up and down my back. \"There, there.\"\n\nAn eternity seemed to pass before I stirred, before I became aware of my surroundings again. Of the bright sunlight, of the sand, of the beautiful woman pinned under me. Contritely I took my body weight onto my knees and elbows and, still deeply imbedded in Jenny, looked into her eyes. There were tears streaming from the corner of her eyes back to her hairline.\n\nShocked I asked, \"did I hurt you? Have I done something wrong?\"\n\n\"No, silly. The was wonderful. Watching your face as if you were experiencing a miracle. How your face screwed up! The sounds! The pure honesty, the innocence!\" Jenny smiled and pulled my lips to hers. We were both too dry to kiss yet. Her lips tasted slightly salty as I explored with my tongue. As we both recovered our breath the kiss grew more intimate. A lovers kiss.\n\nI was still fully imbedded in Jenny as we kissed. I could feel her warmth gripping me. I was also intimately aware of her breasts with their hard tips pressing against my chest, a little lower than my own. Still holding my weight on my elbows and knees I started moving my torso in small circles, my skin grazing her hard nipples, rolling them round and round.\n\nThis movement caused my pubic bone to rub against hers, our hair entwining. I could feel Jenny tilting her pelvis so that the movement would touch her clitoris.\n\nAmazingly I could feel myself start to get hard again. I say amazingly because the orgasm I had just experienced was way beyond anything I had ever experienced. I was spent! Finished! I was glad my body was not listening to my brain. \n\nWe continued kissing. Not the frenetic thrust and parry of a few minutes ago, but soft and intimate. Exploring more the taste and warmth and the sensuousness than the physical hards and softs. My movements gradually stopped going round and round to slow gentle thrusting. Jenny's legs had relaxed to be lying, slightly knee high, out on the sand. I moved my legs outside of hers and pushed hers closed, all the time kissing her. I felt almost drunk from the kiss so all-consuming was it.\n\nHolding her legs tightly closed I could feel the exquisite pressure of her vagina gripping me. Holding me hard and close. I moved my body slightly upwards so that my cock, slick with our combined copious juices, rubbed slowly back and forth directly onto her clitoris. I felt Jenny shudder and squeeze her thighs harder together, gripping me even more tightly. She started to pant into my mouth, our tongues still touching , our lips separated with the need for air.\n\nJenny moved her hands down to my buttocks gripping them tightly, her nails digging in. The pain unexpectedly exquisite. She controlled the pace and the depth of the penetration. \"Yes. Yes.\" The chant starting softly, timed with our thrusting. I could feel her voice in my mouth more than hear it.\n\nI felt her suddenly tense up and then start bucking, her pelvis thrusting against mine, breaking our rhythm with wild uncontrolled movements. I felt and heard her scream in my mouth and I could feel her pussy milking my cock with strong spasms. It seemed to go on and on! I kept myself impaled to the hilt, as deeply as I could thrust, my legs outside hers and my arms on either side of her body. My mouth holding hers. The fugue passed and Jenny gradually became still, her muscles relaxing, her arms going around my in a warm embrace. The loving woman again.\n\nWe took up the slow soft rhythm again. It was the most wonderful warm feeling, both inside and out. Loved and loving. Better than I could ever have imagined. Our mouths again glued to each other's.\n\nI could feel myself approaching an orgasm and I held still, wanting to delay it forever. \"No!\" Jenny breathed into my mouth. \"I'm going to cum again and I want to feel you cum with me!\"\n\nI felt rather than saw Jenny bring her hand to her face and then I felt her fingers exploring my anus, circling , pushing, sliding. Then her fingers were back collecting more saliva and then the pressure. \"Relax. Push.\" And her finger slipped in! The exquisite pressure pushed me over the top. I roared and thrust, in and out. \n\nJenny screamed and met me thrust for thrust, our bodies slamming together. I could feel myself gushing deep inside her, pulsing on and on being goaded by Jennies frenzied thrusting and pulling.\n\nCompletely exhausted I settled onto Jenny with my full weight, my body covering hers from head to toe, aware of the extreme contact, of the warmth, of our combined sweat, of our spent pleasure.\n\n\"Oh God, I...I love you!\" I whispered, half hoping that she would not hear. That she would just know. In response she held me tighter. I could feel myself shrinking, getting soft. With her legs closed I stayed inside her and I could feel Jenny clench her internal muscles. In response I tensed my muscles and Jenny giggled.\n\n\"You have ruined me for all men,\" she whispered in my ear, kissing me lightly there. \"Please take some of your weight off me. You're heavier than you realise.\" Contritely I again took my weight onto my elbows and knees. Jenny looked long and hard into my eyes, \"I love you too.\" I lowered my head and rested it in the curve of her neck.\n\nAfter a while Jenny pushed at my hips, urging me to withdraw and to lie next to her on the sand, The air drying our sweat. As I lay down Jenny took my now-soft cock, shiny and wet with our combined juices, deep into her mouth cleaning me using her lips, her mouth, her tongue. I pulled her up and kissed her, my tongue exploring, also wanting to taste, to savour. The slightly salty sharp taste was glorious. Arousing, intimately ours.\n\n\"Let's go swim!\" Jenny stood up and gathered our clothes, her back to me bending at waist. I looked up directly between her legs and could see our juices bubbly out of her still swollen nether lips and running down her thighs. Becoming aware of the cascade she exclaimed, \"you are such a messy boy!\"\n\nJenny turned around and looked me in the eyes. \"What are you thinking?\"\n\n\"I haven't tasted you. I mean...\"\n\n\"Would you like to?\"\n\n\"Would you like me to?'\n\n\"God, yes!\" Jenny looked away, blushing slightly. \"I want to do everything with you, but you are so young, so innocent. And I don't mean that in a bad way. I don't want to corrupt you. Push too far too quickly. To hurt your sensibilities.\" She laughed, \"isn't that such an old fashioned word? What I am saying is, you should be exploring these things at your own pace, with someone at your own level of experience, exploring together. There, I've said it! Hopefully you won't take my advice and continue to ravage me.\" She struck a prim pose. \"Yours to explore anything you like. Well, almost anything.\"\n\nWe took up our clothes and, hand in hand, we walked naked down the sand dune, each busy with our own thoughts."
    ],
    "authorname": "QuietJohn",
    "tags": [
        "younger man/older woman"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-beach-cottage-1"
}