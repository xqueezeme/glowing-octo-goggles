{
    "title": "Warden's Wife Pays His Debt Ch. 04",
    "pages": [
        "This story is posted on the Literotica website; the author does not give permission for it to be reposted or reprinted anywhere else without consent. This chapter picks up right where the third one left off...I am confident you will like it as a standalone, but I warn you if you read it first, you'll end up going back and reading chapters 1, 2, &amp; 3 anyway... \n\nSpecial thanks to Literotica member Closetcuck1 for the use of one of his character names... \n\n***** \n\nWarden Grant Rawlins woke in the pitch black rear section of his Range Rover in the same excruciating body pose he'd been in throughout the longest night of his life. The proud prison leader had pissed himself at least once during the night and the mounting pain in his shattered shoulder and broken ribs now defied comprehension. He tried to move into a more comfortable position but his crushed bones and bound wrists wouldn't allow it. He groaned in agony as his concussed head throbbed intensely. \n\nAs they had for the entire night, his nightmarish thoughts returned to Liv, his gorgeous wife, and the incomprehensible horror that she undoubtedly endured at the hands of that rapist beast Mylo Dickenson. The warden had no idea where the two of them were at the moment, but he assumed the abuser had taken her from the vehicle and had his way with her yet again. He thought back to the unbearable sounds of Mylo's seemingly endless rape of Liv in his own office the previous night and the oral sex the depraved predator forced upon her in the Range Rover while he listened injured, bound, and helpless in the far rear of the vehicle. \n\nThe warden estimated they'd driven about an hour following Mylo's triumphant climax at the conclusion of his wife's coerced blowjob and titty-fuck. Rawlins had heard the two of them exit the car upon reaching their current destination, but the only sound he'd heard since, was the unloading of the roof top storage container hours earlier. \n\nThe remainder of the night was as silently miserable as any he could remember. \n\nSuddenly the back door of the Range Rover flew open and diffused sunlight cascaded through the frosted windows of his Sea Ranch, California garage door. Having been in absolute darkness for so long, even the muted light burned the warden's eyes. And then, another far worse image came into his blurred view, it was the smug toothy grin of escaped rapist Mylo Dickenson, \"Good morning fuckhead, I hope you had as good a night as I did! Oh shit it stinks in here, did you piss your fucking pants?\" \n\nGrant stared at him through hateful eyes, unable to respond until Mylo reached out and pulled his mouth gag from his aching head. \n\n\"Fuck you Mylo, where are we?\" The warden growled through clenched teeth. \n\nThe serial rapist roughly yanked the injured prison official from the SUV, making his battered body recoil in agony, \"I think you'll recognize where we are pretty quickly cocksucker!\" Mylo teased before a concerning realization formed on the warden's face. \n\n\"Pretty nice place you and the Missus have here. The State of California is obviously paying you way too much to be a fucking prick everyday of your life!\" Mylo spewed. \n\n\"How did you find...I mean...how did we come to be...?\" \n\nMylo cut him off, \"Your wife is a pretty good navigator...certainly not her only job from the passenger seat as you undoubtedly heard...that slut was pretty good at her other responsibilities too! But even after she and I got really baked, we were able to guide this bitch to your vacation house despite that incessant rain,\" Mylo bragged as he pounded the Range Rover's sturdy hood. \"The rainy shit still hasn't let up; I bet all those boys down in the Bay Area cleaning up after that fucking quake aren't real happy about that!\" \n\nThe warden stared at the criminal with a disdainful gaze as his leg dragged behind while Mylo followed him through the garage at gunpoint. On the way, Grant cringed at the mud-covered mangled bumper and front quarter panel of his new Range Rover.  \n\nMylo noticed the pained expression, \"Dude, your rig got pretty fucked up when I bounced it off that boulder at that muddy campground!\" The prison escapee laughed loudly. \"But you have to give me a pass man, it was hard as hell to see in that fucked-up weather, I was really stoned, and I was dying to get my dick sucked. I admit I was probably being more careless than I should have...but you know what's it like when that need to empty your balls is the only thing on your mind...huh chief?\" \n\nWarden Rawlins stared despisingly at the brazen son of a bitch. \n\nJust after they moved past the SUV, Mylo's attention turned to Grant's big Harley Davidson that he had admired in detail the previous night, \"Nice bike ass-fuck! I might have to borrow that fucker while I'm here. Your wife told me where I could find the keys last night!\" Mylo bragged with a sinister laugh. \n\nAgain Grant glared at him through hateful eyes, knowing full well Liv would never willingly offer him the keys to her husband's baby. \n\nAs they entered the spacious house, the warden's heart skipped a beat as the moaning sounds of a woman being soundly fucked and bodies slapping wildly in an energetic mating were the first thing he heard. For some inexplicable reason, Grant's mind flashed to Mylo's bio where he'd read about all the videotaped assaults the sick mother-fucker had executed in the course of his rapist rampage, \"Did that son of a bitch find our video camera and tape himself having sex with my wife?\" \n\nThe warden was relieved when he realized the sounds were coming from a porn video playing on the large screen TV over the living room fireplace. \n\nGrant's anxiety returned when he recognized the scene as one from his and Liv's collection of porn videos, \"Oh fuck he found our porn stash...\" And the fact that porn played at all, only solidified his fears that sex was the central element to what undoubtedly transpired in his place the previous night. \n\nThe next thing that grabbed Grant's attention was the unmistakable scent of marijuana mixed with cigarettes. \n\n\"Thanks for smoking in my house...\" \n\n\"It wasn't just me limp-dick, but I wouldn't worry about that, as you might imagine I'm gonna do far worse things in here...already have for that matter!\" He laughed. \"Have a seat fucknut,\" Mylo growled as he shoved the warden onto his own living room sofa. Rawlins landed with an excruciating shriek as all his broken bones seethed simultaneously. \n\nMylo parked himself in Grant's own personal recliner directly across from the couch. The rapist wore only satin boxers that the warden immediately recognized as his own. Mylo's biceps, large chest muscles and ripped six-pack abs were impossible to ignore; so was the head of his long fat cock as it lay exposed out the bottom of one of the boxer legs. \n\nThe pained prison official then noticed one of his own 50-year-old scotch bottles and two high-ball glasses resting on the coffee table between a half-dozen empty cans of Bud Light. Grant Rawlins had saved the scotch for a special occasion, but the expensive bottle was now nearly empty. \n\nNext to the booze was an ashtray with several cigarette butts and at least one marijuana blunt scattered about. He immediately noticed that the roach and a couple of the cigarette butts had lipstick on them. Grant gulped at the realization, prior to this evening, Liv hadn't smoked pot since college and she was never one to put something as despicable as cigarettes into her body. \n\nBut the thing that concerned Grant most was the mirror that sat on the table with a large pile of white powder and a straw resting on it. The warden stared at the cocaine with uncomprehending concern. This son of a bitch was obviously forcing his wife to do things Grant couldn't imagine her doing on her own. \n\nJust as disturbing to the warden's growing anxiety, a familiar red-colored satin box lay on the adjacent loveseat. Grant immediately recognized it as his and Liv's secret box of kink. Mylo saw him looking over at it, \"Ah yes, I found your and the Missus hidden smut box in your closet last night. I got to give you credit chief, there's lots of really good shit in there!\" \n\nGrant swallowed hard at the thought that this convicted rapist from his own prison had uncovered him and Liv's secret box of sex toys and accessories. This was a private little component of their life that they would never have shared with anyone, and now it sat exposed, open for the crazed sexual deviant to peruse at his perverted desire. \n\n\"I have to say I was surprised that a straight-laced warden like you was into some of that kinky shit, but after spending the night with that hot little sex kitten, I can't say I'm as shocked about her! I hope you don't mind that I took the liberty of absconding a few of the box's contents already. The fuzzy cuffs, nipple clamps, strawberry motion lotion and the porn videos were all fun little compliments last night!\" Mylo licked around his lips as an evil grin formed on them, \"Umm...I can tell you chief, there's nothing quite like the taste of strawberry flavored pussy after you've been eating fucking prison food for twenty years!\" \n\nThe warden bitterly held his tongue as he tried to wrap his mind around what the crazed rapist just said to him. \n\nMylo continued, \"But I also have to say, besides her fondness for some of the kinky shit in that box, that wife of yours has some of the sexiest slut-wear I can ever remember. In addition to that hot little bra she had on in your office, her big drawer of lingerie would make some of the strippers that I used to know blush. Fuck she looks good in all that shit...I can't wait to see her in the rest of the stuff she didn't already model for me!\" \n\nThe warden cringed at the comment but figured Mylo was just trying to get under his skin. \n\nThe muscled convict then moved from his seat and knelt next to a crumpled garment on the floor not far from where Grant sat, \"Take this for instance,\" Mylo held up a skimpy leopard skin patterned shear snap-crotch stretch teddy, \"she said it was something new she bought for your anniversary...oh Happy Anniversary by the way chief...\" \n\nGrant gulped at the incredulity that this mother-fucker had somehow coerced his wife into telling him it was their anniversary. He also didn't recognize the hot lingerie the convict now held in his hands. \n\nMylo continued, \"Anyway I know you haven't seen her in this little number yet, but trust me it's fucking hot! She looked especially good in it while dancing and stripping for me!\" The taunting rapist then held the unbuttoned crotch up to his nose and took a big whiff, \"Ah yes...your wife's scent all-right! You know chief, I've only known her a short time, but I already consider myself an expert on the subject!\" He smiled cruelly before tossing it into the warden's lap. \n\nRawlins clenched both of his fists and asked between gritted teeth, \"Where is she?\" \n\n\"She's passed-out in our bed, as you can imagine, she had quite a night...and morning!\" \n\n\"You know I'm going to kill you Mylo!\" \n\n\"Haha...you aren't in too strong a position to accomplish that fuckhead!\" \n\n\"What do you want? You can have the car and I can make a withdrawal from the bank for however much you desire. You can be in Canada before they have any idea what's going on!\" \n\nMylo laughed loudly. \"Not sure how you would kill me under that scenario chief, but regardless...some fucking prison official you are! You run a maximum security shithole tighter than any warden I've seen, applying unbending rules and non-negotiable terms for a bunch of three-strike felons, gang thugs, rapists and murderers; but as soon as the shoe is on the other foot and it's you and the hot little wifey in trouble, you cower like a frightened puppy and offer a freedom path to a notorious rapist! I bet those Canadian Mounties wouldn't be too happy with your sorry ass when they find out you released me so my big cock could rape every hot housewife from BC to Ontario...\" \n\nThe warden did his best to not show any emotion as Mylo continued, \"...but truthfully I could make a run for the Canadian border with some cash in my pocket, but I'd be looking over my shoulder every step of the way and my right hand would be the only thing keeping me company at night. Eventually they would track me down and either kill me or send me back to prison. So no, I'm not interested in your offer asshole! Besides I have everything I want right here...Your house, your car, your bike, your booze, your bed, but most importantly those big fuckin' tits and that tight little squirtin' pussy of yours! No warden, I'm going to stay right here and enjoy every last second of the gifts you're going to provide me, while you suffer through every intolerable second!\" \n\n\"They'll find us here in no time...\" Grant responded, grasping at straws. \n\n\"Yeah maybe...but that's why I'm not wasting any time banging that hot wife of yours! They aren't going to take me alive, so I'm going to spend every last minute of my time on God's green earth enjoying myself with that little slut. But I'm not selfish, she'll be the beneficiary of that too...you know that fucking horny bitch came like a geyser all night long don't you?\" \n\n\"I don't believe that for a second! You have an overinflated opinion of yourself Mylo! You think just because you tie women up, drug them, and take them against their will, that you are some sort of Don Juan! My wife would never be attracted to a fucking loser like you!\" \n\n\"Oh yeah, let me show you something fucknut,\" Mylo growled as he grabbed the warden by the collar and lifted the two hundred pound man off the couch like a child. The warden tried his best not to show Mylo, but the pain was so intense he thought he might pass out yet again. His captor dragged him through the house as fast as his broken body and injured leg would allow. As they turned the corner into the master bedroom, the sight and smell that greeted Grant Rawlins made him forget about his injuries. \n\nThe strongest aroma of sex he could ever recall wafted strongly from the dimly lit room. His wife's sweet bubble ass sat propped up by a large pillow as she lay passed out on their bed. She was completely nude - her sinewy body face down and spreadeagle on top of the satin sheets, none of her long slender limbs bound in any fashion. Her typically taught, athletic frame looked fatigued and used. Dark red handprints adorned her puffy ass cheeks and a thick slimy goo seeped from her semen splattered asshole over her swollen pussy lips onto the sheets. The remainder of the bed was a wet mess too, covered in the bodily fluids from an obvious pair of sexually vibrant individuals. \n\nGrant's ego always swelled on the infrequent occasions that he pleasured his wife to such heights that she experienced one of her squirting climaxes. He never even minded sleeping in the wet spot afterwards as his confidence was always at an all-time high following one of her euphoric ejaculations. \n\nRight now, it was at an all-time low. He immediately concluded that this evil man must have taken his beautiful wife to pleasure places she had never known. The beast had clearly fucked her so thoroughly that few dry patches remained on their king-sized bed. \n\nBut despite Mylo's apparent sexual prowess, Grant still wondered how his faithful wife could respond like that to a sexual predator of his depths - she was a respected professional physician and he was a fucking serial rapist who dropped out of school in the tenth grade for God sakes... \n\nThe warden's thoughts were interrupted by Mylo's gravelly voice, \"See what I mean asshole, that tight little pussy gushed like a fountain even when my big cock was depositing its precious cargo elsewhere,\" He paused with a Cheshire cat grin in a blatant attempt to convey to the warden that he had taken his wife in the ass...and better yet...she got off on it! \n\nGrant's eyes widened as he comprehended Mylo's veiled reference about from where the viscous substance now leaked. In addition to that crushing realization, the warden was dumbstruck at the volume of semen splattered all over his wife's genitals.  \n\nMylo continued his litany, \"I don't know if it was the blow I stole from the prison's infirmary or what, but that bitch was like the fucking energizer bunny after she got it up her nose! And that amazing shit made her big nipples so hard, I thought they were going to put my fuckin' eyes out! I can't tell you how excited I am chief that there's a lot more where that shit came from...\" He cackled spitefully \"...but probably not as excited as your wife!\" \n\nThe warden felt like he was being kicked in the gut over and over. \n\nMylo dragged the distraught, injured man back out to the living room and tossed him down on the couch again. The warden groaned in misery once more before the rapist continued, \"So you still think I have an inflated opinion of myself you piece of shit? Apparently, as much as she might have wanted to, your slut wife clearly didn't share that opinion! How does it feel to know that while you were spraying piss in your pants last night, she was spraying cum all over my cock and tongue? I'm surprised you didn't hear her moaning and screaming from the garage...\" \n\nThe warden sat staring at Mylo with tears in his typically proud eyes, grasping to come up with a response, \"Why...why are you...what's it going to take for you to stop this madness?\" \n\nMylo sprung out of the chair and was across the space between them in less than a second; he gripped the warden by the neck as vitriol spewed from his curled lips, \"How dare you ask me that question mother-fucker! You have personally made my life a living hell for the past six years. Do you have any idea what it feels like to have a large black man stuff his massive cock in your ass? Well I do, thanks to you asshole! I swore that night, when you put that animal in my cell, I was going to get my revenge on your sorry ass someday...well someday has arrived! I should fuck you in the ass with my big dick just to teach you a lesson, but you're lucky I'm not a homo, so instead I'm going to give it to your wife so thoroughly she'll never feel that little dick of yours ever again!\" \n\nThe warden cringed at Mylo's haunting words. He could see the pure hatred in the sociopath's eyes and truly feared for him and Liv's lives, yet he couldn't bite his tongue, \"You're a fucking monster Mylo!\" \n\n\"I'm not a monster, but my fucking cock is and he's the one in charge around here now! And I hate to tell you, but he's a loose cannon when wet horny pussy is nearby - and I can tell you that tight dripping shit in the other room certainly qualifies!\" \n\nThe warden glared at him again before Mylo continued, \"But that's enough talking for now, I don't want to hear another word out of your worthless mouth right now; sit there and shut the fuck up. We'll put the porn back on when the little woman wakes up, but in the meantime, show me how to work this fucking TV, I want to see what's happening down there following that quake!\" \n\n***** \n\nTwo hours earlier, a special task force of local law enforcement, California prison officials, and the National Guard met in a large conference room at the Marin County Civic Center. The building built in 1962, was one of famous architect Frank Lloyd Wright's masterpieces and was miraculously one of the few substantial structures in the area that was still in good enough condition following the devastating temblors to house the meeting. \n\nThe hastily assembled summit was organized to formulate a game plan to deal with the escalating situation taking place at San Quentin Prison. \n\n\"As you all know, we have a serious problem at Quentin!\" San Rafael Deputy Police Chief Ryan Brogdon announced as he opened the proceedings. \"I will give a report on what we know as of this point and then open it up for questions and roundtable before we establish our plan and assign protocols.\" ",
        "After receiving a room full of head nods, he continued, \"As many of you have probably already heard, I can now confirm that during the first quake, San Quentin's primary guard tower collapsed at approximately 5:04 p.m. last night, apparently killing all eight guards on watch.\" \n\nMost meeting attendees, even if they'd already heard the tragic news, winced in emotional shock at the incomprehensible report before the officer continued. \n\n\"The entire roof structure of the B-wing cell building also apparently collapsed as well. The inmates would have been in the dining hall at that time however, but again we really have no idea as to the injury and/or death counts associated with that structure failure.\" \n\nHe went on, \"Not long after that, we have now confirmed that a very large group of inmates rushed the obviously shaken and stunned guard staff in the dining hall and overtook them. Again, we have no specifics regarding injuries or loss of life, but we can assume the number to be quite robust.\" \n\nSignificant angst appeared on the faces of all in attendance. But their response from that information paled in comparison to the next piece of news. \n\n\"At approximately 7:00 p.m. a gasoline tanker truck apparently lost control following the large aftershock and careened into the auxiliary guard gate. Catastrophically, it happened right at the time of the afternoon/evening shift change and we can now say with certainty that as many as 15 guards were killed instantaneously.\" \n\nThis time the room erupted in shocked horror. \n\nOnce he regained order, the deputy chief continued, \"Obviously this is all tragic news, but our priority right now is regaining control inside the prison. Before any of you ask, we feel quite certain there was only a very short, one minute or less, power interruption in the third level electrocution fence surrounding the inmate housed areas between when the primary power supply went down and the auxiliary kicked in. We can say with confidence, it is very unlikely any inmates were able to bypass the first two barriers and the compromised third in less than a minute's time. For that reason we are relatively certain that all inmates remain inside the compound.\" \n\nOne of the prison officials asked, \"What about the area around the auxiliary guard gate? Was there not some fence damage in addition to the guard shack obliteration?\" \n\nThe deputy chief answered, \"Yes, a large section of the fence was destroyed and it is possible someone could have gotten through, but it's extremely unlikely. They still would have had to navigate the first three barriers, although there is no electrocution fence in that area, but even at that remote possibility, two sheriff patrol units were on the scene within five minutes of the tragedy, making it highly unlikely anyone escaped the compromised area before they arrived. The area is now manned with a significant security detail while arrangements are being made to repair the fence.\" \n\nEveryone in the room sat in silence trying to come to grips with the gravity of the situation before the deputy chief spoke again, \"There is one final extremely concerning piece of news to report, we have reason to believe Chief Warden Rawlins and his wife may have been inside the compound at the time of the takeover!\" \n\nMore gasps and disbelieving groans came from the group. \n\n\"We have spoken with Rawlins' personal assistant...a Miss...ah Taggert...Lisa Taggert, who confirmed that the warden and his wife, Olivia Rawlins, were still in the administrative building when she departed at approximately 4:50 p.m. yesterday afternoon. According to Taggert, Warden Rawlins and his wife were just stopping by to grab some things before heading down to San Francisco for their anniversary weekend.\" \n\nA few in the room who knew Liv Rawlins suddenly got a mental image of the warden's hot wife being ravaged and gang-raped by a horde of crazed convicts. \n\nThe deputy chief continued, \"There is obviously no sign-out log to confirm the warden's potential departure as he and his wife would have exited through the auxiliary gate, but sadly there is no longer a guard building remaining to house the log. Also, the quake rendered all the surveillance cameras inoperable and when the main power was interrupted, all of the key card and retinal scan log data for the previous eight hours was erased.\" \n\nHe continued, \"To make matters worse, apparently the software managing the card and retinal logging data storage is purposefully programmed inoperable when being supplied by auxiliary power. Based on the lack of prison security data, we simply cannot confirm whether the warden and his wife departed the facility or not. However, when we checked with the San Francisco hotel in which they were registered, it was confirmed they never arrived. We sent a squad car to the warden's residence in San Anselmo but the house/dog sitter said the Rawlins' had not returned there either.\" \n\n\"Finally,\" the deputy chief said with a dour sigh, \"we were still holding out hope that they may have been deterred in transit during or after the quake, but when we called Warden Rawlins' cell phone, it was answered by a male who claimed he was not the warden. Our officer could hear a lot of commotion in the background before another male came on the phone but would not identify himself, except to acknowledge that he was in the warden's office at that point. When our officer asked if the warden and his wife were there and if he could speak to either of them, there was a long silence before the man came back and said they were incapacitated at the moment. Before our man could ask any further questions the communication was terminated. We have made numerous attempts to reach them since, but the calls have all gone unanswered.\" \n\nThe deputy chief paused one final time and lowered his eyes before readdressing the group, \"I think it's fair that we proceed with the assumption that the warden and his wife are being held prisoner inside San Quentin...\" \n\nThe conference room erupted in unimaginable concern. \n\n****** \n\nGrant turned on a local bay area news station and immediately he and Mylo watched in shocked disbelief at the absolute magnitude of the devastation being displayed in image after image as the first video footage from around the region began filtering in. \n\n\"Holy Fuck!\" Mylo gasped when a video image from one of the high-rise hotels in Emeryville showed the unbelievable tsunami destruction as it occurred in the East Bay. Both men then stared in astonishment as another reporter illustrated the unfathomable damage and flooding in Pleasanton and Livermore after Lake Del Valle dam imploded and a fifty foot wall of water wiped out much of the inland tri-cities. And in yet another incomprehensible video report, one of the Channel 2 reporters displayed the catastrophic damage to the north tower of the iconic Golden Gate Bridge via a helicopter fly-over. Both men sat and watched in dumbfounded incredulity. \n\nThe final report came in from San Quentin Prison. The pretty young reporter was positioned outside the tall razor-wired chain-link fence surrounding the main gate. There was a lot of hustle and bustle in the background as the brown-skinned perky-titted reporter spoke, \"As you can imagine, it is a pretty tense scene here as reports of mayhem taking place inside the maximum security prison are just filtering in. What we've been able to learn is that the main guard tower collapsed during the initial quake, apparently killing all the guards on watch. Sometime not long after that, the inmates were able to overpower the guards in the main cafeteria building and are now apparently in charge of everything inside this fence you see behind me...they are now heavily armed.\" \n\nThe warden and rapist watched in stunned silence before the hot reporter continued, \"...we don't know how many guards are being held hostage or if any others have been injured or killed, but it is a harrowing situation nonetheless...and to add more catastrophic news to this story, it has now been confirmed that an out of control gasoline tanker truck struck the San Quentin auxiliary guard building following the large aftershock and may have killed as many as 15 additional guards...truly horrific news!\" \n\nThe studio anchors gasped in shock before asking, \"Dipika, we are hearing reports that the warden may now be a hostage, what can you tell us about that?\" \n\n\"Bill, yes I was just about to get to that. A source told us there is some concern that Warden Grant Rawlins and his wife may be being held captive by the inmates as well! We hope to get more answers to these and other questions at a scheduled press conference an hour from now. We will bring it to you live when it convenes. Reporting live from San Quentin Prison, Dipika Singh, Channel 2 News.\" \n\nThe warden sat slumped on the couch with tears in his eyes at the horrific news that many of his men...his friends...had perished in the guard tower and auxiliary gate catastrophes. And now more concerning to him personally, the authorities might not actually be searching for him and Liv in the right place. \n\nMylo Dickenson didn't even acknowledge the tragedy, \"Fuck me...the reporters didn't look like that the last time I watched the nightly news...nice fucking tits on that hot little Indian bitch...huh chief?\" Mylo laughed without compassion for all of those who were just reported to have lost their lives in the tragedy. \n\nBut in spite of his heartless outburst, Mylo hadn't failed to absorb the report that the suspicion was that the warden and his wife were being held captive inside the Q. The felon made no acknowledgment to Rawlins, but his excitement rose at the suggestion the authorities might not indeed be searching for them. His dick swelled at the possibility of banging the warden's hot wife for longer than he originally anticipated. \n\n****** \n\nForty-five minutes later, Liv Rawlins' eyes fluttered open from an exhaustive sleep. It took a moment to validate her whereabouts as her fog-filled head attempted to reconcile the events of the previous night. Immediately, the pain from a nauseating hangover and tenderness around her ass reminded her where she was and how she came to be there. The taste in her mouth was awful - a rank combination of cigarettes, alcohol, and semen...his semen. \n\nShe lay in an unfamiliar position sprawled on her stomach above the covers; she was nude, achy, and her typically soft smooth skin felt tight with the remnants of dried bodily fluids. Liv could feel something pressing beneath her hips, pushing her ass up off the bed. She held her breath and cautiously turned her head to the left. \n\nTo her surprise and relief, for the first time in hours, Mylo Dickenson was no longer in bed with her. \n\nThe warden's wife shimmied her torso off the large pillow and was immediately taken by the wetness that enveloped her hips. She lay still in the wet environs contemplating the situation and what nightmares lay ahead for her and her injured husband. Countless muddled thoughts permeated her typically razor-sharp brain, but fear and shame were the two emotions having the heaviest effect at the moment. Tears welled in her still unfocused eyes. \n\nThe young doctor's thoughts turned to the unimaginable events of the past twenty-four hours. She'd awoken the previous day with so much excitement for what her anniversary weekend would bring. She had really been looking forward to spending the long weekend with Grant - just the two of them in San Francisco together. \n\nThe day had started off so beautifully, making slow blissful love together at their home in San Anselmo...but it ended inconceivably with one of his inmates, serial rapist Mylo Dickenson, fucking her hard in the ass as she climaxed for the umpteenth time at their vacation home in Sea Ranch 100 miles away. She barely remembered passing out exhausted and dirty following that final debased mating only an hour or so previously, \"Jesus, we had more sex last night than Grant and I have in weeks! How could he do it that much? And...Oh God...he put it in my butt!\" \n\nIn between the divergent couplings with her husband and the convicted sex offender, an incomprehensible set of circumstances transpired to bring her to this current horrifying situation. Liv's thoughts turned to the shock she experienced following the massive earthquake and her husband's gruesome accident beneath the bookcase. She remembered her initial relief when the lifesaving guard had miraculously come along and freed him, only to learn that the man was not a guard at all, but rather notorious rapist Mylo Dickenson. The brazen convict had then stripped her nude, tied her up, and fucked her roughly on her husband's desk before miraculously breaking them out of the maximum security prison. \n\nFrom that point on, her terror had taken on a whole new level of incredulity as the escapee forced her into a spiraling wave of depravity fueled by drugs and booze which culminated in a night of unrelenting sex unlike anything she'd ever imagined. She thought back to how her reluctance and fight had remained steadfast for quite some time, but eventually the altering agents, threats against her husband, and Mylo's unwavering sexual prowess broke down every resistance barrier within her until she became his willing fuck toy. \n\nThe guilt she felt at the moment was excruciating. \n\nLiv was sure her dauntless husband had experienced a night of incredible physical pain and mental anguish from his significant injuries and the knowledge that one of the most notorious sexual predators ever to walk this earth had spent the entire night with her. Yet as she lay shamefully on the wet sheets now, Liv Rawlins was fully cognizant that her own actions had ultimately contributed to the depth of the debauched outcome. The warden's wife had allowed herself to become Mylo Dickenson's bareback slut in spite of her initial pleas for use of protection. \n\nAs the long night progressed, the previously faithful wife stopped begging for protection and eventually pleaded with Mylo to shoot his virile cum into her fertile pussy. \n\nWhich of course he did - again and again. \n\nIn her defense, the drug and booze cocktail had robbed her of her first line of defense. It had been in college since she'd done illicit drugs, but never, even in her wildest sorority party days, had she experienced mind-altering effects like those forced upon her this night. The young blonde at the pot shop had been spot-on about the sexually-charged marijuana, but it was the combination of booze and pot mixed with the medical grade cocaine that had dissolved her brain function to the point that she had actually been unable to recall her husband's name at some point during the long night. \n\nBut be that as it may, the drugs and alcohol weren't the primary culprits for the young wife's inhibition breakdown and memory lapse. No, the sexual talents of a powerfully muscular man who had been locked up for the past twenty years were far more at fault. Mylo Dickenson's massive cock and deviously experienced tongue were two of the most wickedly overwhelming utensils of sexual pleasure any woman could ever experience. \n\nLiv Rawlins, wife of the San Quentin Warden did - again and again. \n\nBoth assets of gratification and Mylo's powerfully rough hands had been on an unrelenting quest for her complete sexual submission throughout the dissolute night. Her captor had expertly eaten her pussy while fingering her to multiple pleasurable orgasms before he turned the tables and made the renowned children's doctor beg for his cock like a two-bit whore. \n\nOver the remainder of the night, the incomprehensible length and rutted thickness of his amazing dick so thoroughly satiated every sensitive inch of her previously underfed pussy that she eventually could no longer deny any of his filthy demands. The big-titted wife ultimately became the escaped prisoner's pleasure doll to use as he pleased. \n\nAnd he pleased - over and over again. \n\n***** \n\nWhen they first arrived at the Sea Ranch house, Mylo led her practically naked into the spacious living room - only the tattered remains of her husband's cum-covered shirt obscuring her jiggling tits from his ever-present ogling. \n\nThe warden's wife gasped at the mess as they entered - things were scattered in every room from the ground shaking that had occurred even one-hundred miles north of the epicenter. Nevertheless, Mylo was impressed by the large stylish home, clearly a sanctuary the Rawlins' had invested much of their time and money into for their regular weekend getaways. That fact only contributed to his satisfaction as he took charge with the intent of treating its rightful owners like the prisoners they now were. \n\nLiv Rawlins looked like a deer in headlights as he roughly cuffed her to the sofa and brazenly squeezed her big tits through the shirt. He then set about unloading his shopping cache from the SUV. When he returned empty-handed following his final trip from the garage, she questioned why he hadn't brought her husband inside. \n\nMylo instructed her to shut the fuck up and worry about herself, but when she persisted, he grabbed her by the hair and threatened her with her husband's knife. A horrified expression appeared on her beautiful face as she came to the realization that he had every intention of leaving Grant in the back of the Range Rover for the night. \n\nMylo had far more important things on his mind... \n\nThe convict led her into the large master bedroom and cuffed her again, this time to the headboard of the king-sized bed. She watched nearly unclothed as he rummaged through her overnight bag, the large cherry dresser, and eventually the Rawlins' large master walk-in closet. Mylo's expedition paid off as he removed an item from her bag before discovering her large lingerie drawer in the dresser. He was instantly aroused at the robust collection of sexy negligee he would soon ogle on its curvaceous owner. \n\nLastly, after he entered and exited the closet with a satin red box in hand, he teasingly gazed at her with a questioning grin, \"What do we have here?\" \n\nLiv's eyes opened wide and a nervous gasp escaped her lips. She immediately recognized her and Grant's private box of kink. \n\nMylo set the silky box down on the bed and proceeded to remove each item one at a time as she watched. \"Wow, you are into some kinky shit...\" he teased. He pulled a seven inch thick veiny black dildo out and tossed it aside, \"You won't need that little fucker anymore...\" He then removed a similarly sized sleek silver vibrator, a bullet vibrator, and a set of diamond studded nipple clamps - raising an intriguing eyebrow in her direction as he did. \n\nShe dropped her gaze and looked away. \n\nMylo continued removing items - he pulled out a pair of Ben Wa balls, two sets of fuzzy handcuffs, two ball gags, a butt plug, a couple of blindfolds, a wooden paddle, several sexy masquerade style masks, a zip bag filled with lubes and sex-lotions, a black leather horse crop, a bag of feathers, and finally a stainless steel chastity cock cage. \n\nMylo held that one up and snickered, it was made for a penis a hell of a lot smaller than his. \n\nLastly, he removed a soft-covered DVD holder containing at least two-dozen porn videos. \"Damn, are we going to have some fun with all this shit slut!\" Mylo bellowed knowingly at her. \n\nHe released the nervous wife's wrists from the cuffs and told her to collect as many lingerie outfits as she could carry. The sexy brunette scooped up about half the contents of the large drawer and headed back towards the living room. Mylo grabbed the item he'd pulled from her bag and followed, admiring her long shapely legs the entire way. \n\n\"Lose the shirt!\" Mylo commanded when they arrived back in the living room. ",
        "The warden's wife looked at him pleadingly before realizing she had no choice. She dropped the bundle of lace at her feet before taking a deep breath and reluctantly releasing the two remaining buttons from her husband's shirt. She slowly slipped it from her narrow shoulders and let the ripped and ragged garment fall to the floor. Her big tits jiggled as she stood completely nude, except for her heels, surrounded by the pile of naughty bedroomwear. \n\nMylo eyed her approvingly. \n\nLiv's arm instinctively crossed her chest and her free hand covered her pussy mound in a pathetic attempt to obscure her nudity. Mylo growled, \"Put your arms at your side bitch...besides it isn't anything I haven't already seen. Shit, I can still see my dried cum all over your tits and pubes anyway!\" \n\nShe reluctantly did as she was told. \n\nMylo's gaze traveled from the top of her head to her four inch heels. Twenty years was a long time without pussy and as he stood checking her out, he couldn't believe his good fortune. Only nine hours previously he had departed his jail cell - his fucking hell-hole of existence for as long as he could remember - on his way to the infirmary as he had done every other day for the past eight years. Like all the days before, his expectation was that he would get his insulin shot before being led back to a private room in the C-block for the daily draining of his swollen balls while masturbating to conjured-up images of his past victims like Carla Youngblood and Tess Simonton. He'd had to resort to those memories after the husband of the sexy bitch who stood nakedly in front of him now, had robbed him of his porn outlet years before. \n\nBut for whatever divine reason, this day would be different...Mother Nature's shocking tragedy would become his blessed miracle. \n\nNow here he was, standing in the warden's own living room with the son of a bitch's own outrageously hot undressed wife awaiting his next directive. Mylo's cock swelled as he admired Liv Rawlins' stunning body. In spite of the length of time since he'd seen a naked woman, he felt justified in thinking this fucking chick had one of the best sets of tits he had ever laid his eyes on. Her D-cups were perfectly full, possessing that ideal slope on top that when combined with the full roundness of the lower half, caused her big nipples and pebbled areola to angle upward towards his ogling face. The pair perched heavily over her flat stomach...calling to him. \n\nMylo admired the flaky remnants from his dried semen that still coated her neck, upper chest, and amazing rack. He'd already had his fun with the flawless set, slapping and squeezing them in her husband's office before titty-fucking and thoroughly pasting them while the tortured warden listened helplessly in the back of the SUV at the campground. \n\nHe certainly wasn't done with them yet. \n\nHe let his eyes sink down over her well-toned stomach to her little dark patch - again his semen signature was evident. He nodded with a slightly devious upward tilt of his lips. \n\nMylo then held up a finger and spun it around, suggestively directing what he wanted her to do. Liv Rawlins understood his gesture and hesitantly did as he wished. Mylo's eyes widened as he checked out the spectacular naked ass that he'd already spanked owningly when he fucked her hard on her husband's desk. It looked just as good now, albeit with more rosy redness, as it sat perfectly formed on her narrow hips above her toned runner's legs. \n\nHe had her stand that way for an uncomfortably long time before she turned over her shoulder for the next directive. \n\n\"Don't rush me bitch...\" He had her remain in that position for another minute as he pondered the possibilities, \"Okay slut, grab that shit off the floor and follow me!\" \n\nTo Mylo's surprise, instead of crouching down to retrieve the lingerie, the warden's wife bent at the waist and scooped up the pile with her legs perfectly straight. He admired her flexibility and studied her fat camel-toeing lips as they swelled between her tight ass cheeks...\"Mmm-mmm, I'm gonna get me some more of that fuckin' shit!\" \n\nHe thought back to how those juicy lips had enveloped his cockhead in her husband's office and nearly milked an immediate eruption from his big balls when he first sunk his cock deep in her amazingly tight hole. But in spite of his twenty year pussy drought, Mylo's impressive staying power won out and before long it was the warden's wife who couldn't hold back. The reluctant slut climaxed ashamedly when he shoved his fat cock far deeper into her married pussy than any had ever been. Almost immediately, she came all over her husband's desk, the first in a long line of grunting orgasms she experienced while he bounced her around the room bent over the heavy piece of furniture. \n\n\"That horny bitch hasn't felt anything yet!\" Mylo now thought excitedly to himself. \n\nHe led her into the kitchen, \"Okay slut, you are going to model for me while I get us something to drink!\" He pushed open the saloon style shutter doors to the large walk-in pantry. He studied the space for anything she could use as a weapon before he nodded for her to enter. As she passed him with arms full, Mylo playfully spanked her sweet ass, eliciting a startled yelp. He smiled widely and turned to watch her enter. When the spring-loaded doors swung shut, Mylo could see her from the neck up and the thighs down. The pile of sexy lingerie fell at her feet again. \n\nHe rubbed his cock in anticipation for the gifts he would soon receive. \n\nHe spoke loudly, \"Based on the size of your collection, I assume the warden likes you dressed in this sexy shit, now you're going to show them all to me one at a time! I'll find some stockings for you to wear later, but for now, do it without them!\" He ordered before reaching into the now fully stocked fridge and cracking a beer. He plopped himself onto one of the bar stools, guzzled half the libation and dropped his pants to the floor. \n\nLiv Rawlins emerged two minutes later in a sexy light pink baby doll with her tits pressed tightly together and nearly popping out the top - her firm legs looking particularly long and sexy. \n\nIn spite of the shit eating grin that immediately formed on Mylo's face, it was her eyes that opened widely and her lips that gasped when she saw his huge flaccid cock and swollen balls hanging off the stool. \n\nMylo took pleasure in the startled response, \"Come here slut!\" \n\nLiv approached cautiously before he roughly wrapped his hands around and gripped her firm ass. He pulled the startled wife against him and before she realized what was happening, their lips were pressed wetly together. She could taste the beer on his breath even before his tongue entered and explored her mouth. He kissed her aggressively for the better part of a minute before he pulled away, spanked her ass and sent her back for the next delectable entr\u00e9e. \n\nOver the next 45 minutes he enjoyed a cock-hardening collection of teddies, baby dolls, corsets, bustiers, and hot bra and panty combos. Everything looked incredibly hot on the warden's busty wife. \n\nEach time she exited, he made her model the new outfit in a different compromised position - hands behind her head, down on her knees, bent over the table, squeezing her own tits, twerking her bubble ass. Mylo also degradingly forced her to perform illicit responsibilities - stroke his cock, kiss his feet, massage his balls, suck his nipples, moan in his ear, and of course French kiss him deeply. \n\nIn between performing those responsibilities, she was required to guzzle at least half a beer while sharing several hits off a fat Sour Diesel pot joint with him. She tried her best to talk her way out of it, honestly pleading that she was still really stoned from the earlier one. But Mylo had no intention of relaxing her humiliation, instead he enjoyed every last tortuous second of it, \"Hit it again slut!\" \n\nFinally after exhausting the lingerie collection, Mylo made her take one final swig before he retrieved the item he had removed from her overnight bag. The sexy garment was a leopard patterned semi-shear snap-crotch teddy with the retail tags still attached. \n\nLiv eyed it dejectedly. She had bought it several weeks earlier to surprise Grant on their actual anniversary night. \n\n\"Something tells me I'm going to like this one the most!\" Mylo spewed as he held it up with a sadistic grin on his face, \"Was this supposed to be a surprise for the hubby? Don't worry baby I'll make sure to tell him all about it when I see him!\" \n\nLiv Rawlins now eyed him disdainfully. On top of her revulsion for him, she was now really fucked up and had finally built up enough courage to push back, \"Fuck you asshole!\" \n\nThe reluctant response surprised Mylo...it also really turned him on. He figured from her profession that she was not someone who was used to being told what to do and in spite of her current circumstances, he'd already picked up on a thread of defiance in her personality. Now experiencing her outward feisty side, he knew it would only add to his enjoyment as he shaped her into his pliant fuck toy. Eventually doing it for her asshole husband to witness would be all the better! \n\n\"Put the fucking thing on now!\" \n\nLiv could see the seriousness in his eyes and suddenly wondered if her inebriated response might not have been such a good idea. Still she couldn't hold back, \"Why should I? You're just going to kill me and my husband anyway, why shouldn't I just fight you to the point you are forced to get it over with now instead of dragging it out for hours and perhaps days? Neither of us wants to die, but it beats being a pawn in your perverted fantasies!\" \n\n\"Are you sure about that slut?\" Mylo questioned with a knowing smirk. He was having fun messing with her and listening to her slurred rant. He knew based on her earlier reactions, she couldn't possibly prefer dying to the sexual pleasure he still had in store for her. \n\n\"What...what are talking about?\" She complained. \n\n\"I mean, you didn't seem to mind it so much when I fucked the living shit out of you on your husband's desk!\" \n\n\"You can't be serious? I screamed and begged for you to stop the entire time! You raped me!\" \n\n\"It may have started off that way, but don't try to convince me you felt that way by the end - and that you would rather die than to experience the ecstasy you did when I pounded you to one squirting cum after another?\" Mylo teased as he reached down and stroked his long flaccid cock. \n\n\"I didn't have a choice...and to answer your question...yes I would!\" Liv answered. \n\nMylo didn't think she sounded too convincing. \"Bullshit slut...I don't believe that for a second! But it's a moot point for now as I'm going to enjoy fucking your brains out a lot more than I would blowing them out! But your husband is a different story - I would have no problem putting a bullet in his fucking head right now unless you get your ass in there and put this thing on...NOW!\" He screamed as he tossed her the leopard nighty. \n\nLiv Rawlins stared at him insolently before she stumbled towards the pantry and did as she was told. Mylo smiled at her reluctant acceptance and rapidly diminishing motor skills before he headed back to retrieve the porn case and kink box. \n\nFrom inside the pantry, Liv contemplated her situation. It finally crystallized with her that she was playing a very dangerous game by defiantly pushing back, realizing the sex offender had nothing to lose by killing her husband. As she pondered her circumstances more deeply, she came to the conclusion she was better off giving him what he wanted and staying alive until she and Grant could come up with a plan to free themselves or kill him, \"I have to do it for Grant...\" \n\nThe young wife stretched the tight silky fabric over her large breasts and slipped the spaghetti straps over her shoulders. She reached down between her legs and drunkenly fumbled with the metal snaps before finally fastening them in place. \n\nThe prison escapee was just powering on the living room television when she emerged from behind the swinging doors. The warden's hot wife stood, swaying slightly, as Mylo eyed her from head to toe - immediately thankful that he had saved the leopard patterned piece for last. Her huge tits bulged out the top of the low cut cups straining to be supported by two thin straps now pressing into her shoulder blades. The form fitting sexwear clung to her curvy torso like it was painted on. The lower half exposed her sexy hips and dove down enticingly between her smooth thighs. Mylo could see her big nipples pressing through the thin fabric and a hint of her little dark patch showing through the semi-shear material between her legs. \n\nThe aroused sex offender beckoned her closer. \n\nJust as she made it over to where he was standing, the audio from the porn flick suddenly blared from the speakers. The video soon followed as several nasty teaser scenes flashed on the high-definition television. Both Mylo and Liv's attention was immediately drawn to the eighty-inch big screen. Mylo smiled in acknowledgement - something he hadn't enjoyed for twenty years was now being broadcast in high-definition while he and the warden's practically naked wife stood directly in front watching. \n\nLiv gulped incredulously, she immediately recognized the video. It was a newer one that she and Grant had already watched several times. She certainly had no intention of sharing it with her captor, but it was her who had purchased the DVD from Amazon only two months previously. \n\nTruth be told, nearly everything Mylo discovered in the Rawlins' box of kink had been purchased by her... \n\nMylo directed her to sit down on the sofa and watch as he headed back into the kitchen in search of the booze cabinet. She nervously observed the kink box sitting on the adjacent loveseat. He returned moments later with a bottle of Grant Rawlins' 50-year-old scotch in one hand and two high-ball glasses in the other. His heavy cock swung from side to side as he approached, \"I think this occasion calls for the good stuff don't you?\" \n\nMylo could see her subtle stare between his legs as he neared. The young wife didn't answer him...mostly because she was distracted by his huge cock, but she also feared her slurred response would only contribute to his disturbed enjoyment. \n\n\"What's a matter bitch? Cat got your tongue, since you're not going to answer me, stick it out and let me see it?\" \n\nLiv reluctantly let it slip between her full lips. \n\n\"All the way out! And wiggle it around!\" \n\nA pained expression came to her face before she did as she was told. \n\nMylo was immediately impressed by the length of the extended digit, \"That's better...now let's see how it does flicking something other than air,\" he replied cockily as he moved directly in front of her. \"Get down on your knees and do that same thing to the head of my dick. You'll even get to taste a little something leaking out of the tip.\" \n\n\"Please don't make me do that again, I already did it for you at the campground,\" she pleaded. \n\n\"Shut the fuck up slut! Yes you did do it for me at the campground, but that was amateurish, you have a lot to learn about giving head bitch! Lucky for you, you've now got a teacher with a cock big enough to require lots of practice. Grab a hold and lick it...like a fucking lollipop slut!\" \n\nShe hesitatingly moved down to her knees. His huge cock now hung down directly in front of her face. In spite of having had it in her mouth earlier, the size, even in its flaccid state, still shocked her. She could see the large dollop of pre-cum forming at the tip. \n\nLiv reached out and gripped the thick log in her small hand. As she lifted, she was reminded of its surprising weight. Her hand was shaking, but nonetheless she subconsciously stroked it slightly as she moved her mouth to the tip and extended her tongue. Mylo watched as the nimble digit came in contact with his rapidly swelling head. It danced around the crown until his oozing discharge was all lapped up. \n\n\"Uh-huh, that's the shit I'm talking about - tastes pretty fucking good doesn't it slut?\" \n\nShe didn't respond but kept up her efforts. \n\nMylo filled one of the high-ball glasses half-full and handed it to her. The move surprised her, but she took it with her free hand. He directed, \"Dip my cock in the booze and stir it around!\" \n\nShe gazed back up at him with a disbelieving stare. The expression on his face made it clear this was an order not a request. She moved the glass from her right hand to her left and cautiously reached for his thick penis again. She still couldn't get over the fact it was at least twice the size of her husband's hard-on and he was still totally limp. \n\nLiv brought the huge head to her glass and submerged it. Much of the liquid was displaced and nearly spilled over the top. \n\n\"Stir it around and don't spill any!\" \n\nAfter a minute he instructed her to take it out and suck it off. He watched as her full lips stretched wide and engulfed the purple knob. Mylo's head fell backwards at the incredible sensation of having his cock in a woman's mouth again...especially this woman. Her hot wet mouth felt phenomenal, \"Swirl your tongue around and suck your husband's booze off of me!\" His fingers instinctively weaved in her thick hair. \n\nHe grunted subtly, \"Not bad, now do it again and use more tongue this time.\" \n\nShe submerged his thickening cock in the booze before taking it back in her mouth, this time using her slick tongue to slip along the sensitive skin beneath his oversized head. She could feel her stretched lips going slightly numb as the expensive scotch fused with her increasing saliva. After sucking and licking the head for a long minute, she pulled it from her mouth and looked up at him. \n\n\"I'm gonna expect much better tongue action than that slut! You think I'll be able to bust a nut with that kind of effort? I can live with your inexperience...you'll obviously get lots of practice on the technique...but I will NOT accept a lack of enthusiasm! You need to worship this pleasure stick bitch! Do you understand me?\" Mylo threatened as he yanked it from her grasp and held it out directly in front of her face. \n\nThe warden's wife stared at it more intently, still trying to come to grips with its incomprehensible size. Finally she nodded her head apprehensively. \n\n\"Good, now bottoms up! Down that drink and pour us each another glass while I grab something from the other room. And don't get any ideas about doing anything stupid like grabbing a knife from the kitchen; I put them all in a safe place while you were changing smut outfits!\" \n\nLiv poured both glasses and glanced up at the porn. A big cocked stud was fucking a pretty blonde from behind while she had her face buried between the legs of a hot little brunette who was squeezing her own big tits and moaning loudly. \n\nMylo returned carrying the medical bag and a round mirror that Liv immediately recognized from their guest bathroom wall. He looked over at the porn, \"You see that whore's tongue, that's the kind of action I expect when you're sucking my dick and licking my nuts!\" \n\nThe warden's wife stared at him again before her eyes returned to the porn. The blonde was impressively tonguing the little brunette's pussy. Liv was familiar with the scene, it was one of Grant's favorites. She knew the guy was eventually going to reposition the girls in a sixty-nine before pulling out and shooting his load all over the blonde's swollen lips and the brunette's face. \n\nHer thoughts were interrupted as Mylo placed the mirror on the table and dumped a huge pile of white powder on it. Liv gasped at the size of the heaping mound, realizing immediately what it was, \"I don't do that stuff!\" ",
        "\"You do now slut!\" He belly laughed as he lined up a couple of long, fat lines. \n\n\"Please, I...I mean we, never do drugs...please don't make me do them now!\" \n\n\"I don't give a fuck what you and your loser husband do or don't do, tonight you and I are gonna inhale a bunch of this shit and get ourselves in a great mood for fucking! \"Snort that big one now!\" \n\nShe reminded herself, \"I need to do what he says for Grant...\" Liv hesitated before she nervously reached for the rolled-up bill. It took her four attempts using both nostrils to get it all down. It burned momentarily before she felt the stirring effects of the medical grade cocaine. It had been a long time since she'd done coke, but despite her apprehension, she was quickly reminded of the pleasurable rush it gave her. \n\nBut even back in those enjoyable experiences in college, she had never tried anything like this stuff before. \n\nMylo quickly snorted the other huge line before shouting jubilantly, \"Holy Fuck...that shit is GOOD!\" \n\nIn spite of the circumstances and her already wasted condition, Liv Rawlins couldn't argue. She felt her big nipples hardening under her lingerie as a rush of vivacity overtook her. \n\nMylo noticed immediately, \"Wow, look at those fucking nipples, obviously you agree!\" He laughed before he continued, \"But don't feel bad slut, this shit makes my dick hard too!\" Mylo practically shouted as he led her gaze to his now nearly rock-hard dick. It had extended several more inches and had swollen noticeably. \n\nNow Liv thought to herself that it wasn't just significantly bigger than her husband's, but it also dwarfed the porn star's big cock too. \n\n\"Bet those two bitches would love to get some real dick! What do you think slut?\" Her captor bragged as he stroked it in front of her face. \n\nLiv stared absently at Mylo's fully hard cock - the irony of the moment not lost on her. A few weeks previously, Grant had actually teased her while watching this exact scene about whether she would love to have sex with a guy hung like the porn star. She denied it for quite some time until he finally broke her down and got her to admit that she was at least intrigued by it. \n\nThey had had a lot of wine to drink that night and after further persistence, he actually got her to admit that the entire scene really turned her on - including the lesbian action! Once that cat was out of the bag, she teasingly kept up the banter and asked Grant if it would turn him on to have sex with two women at once. He nearly busted a nut immediately when she admitted it might be something fun to try sometime. \n\nHer thoughts were suddenly interrupted by Mylo's gravelly voice, \"How bout' you honey, you ever done any muff diving? Any of those nurses ever get a taste of the hot doctor's squirtin' quim?\" \n\nShe shook her head nervously, wondering in her fog-filled head if he could actually read her thoughts. \n\n\"Haha, that didn't seem like too convincing a denial, but since we don't have any pussy here for you slut, you need to get those pouty lips focused on this big cock! But not before you line up another one!\" \n\nOver the next half hour, Mylo led the young wife further down a dirty journey of booze, smoke, coke, and dick sucking. He got pretty fucked up in his own right, mixing in several beers along the way, but he remained in much better condition than her. He was having more fun than he thought possible, but eventually the master bedroom bed beckoned. \n\nIn spite of her consistent objections, he could sense her defenses waning - her expression going from one of defiance and reluctance to one of intoxication and resistive denial. \n\n\"Okay bitch, time to give me a show! Pull that big cock from your mouth, get up, and give me a lap dance! Strip out of that sexy slutwear as you do it!\" \n\nLiv objected briefly before remembering the pledge she'd made to herself. She rose to her feet. Her head was spinning and the fear of exposing her naked body to him yet again gripped her. But the warden's wife was experiencing a drug-induced exuberance she had never felt, providing her the courage to do it. \n\nAs the young doctor stood in front of him, Mylo approvingly perused her body yet again. Her tits looked bigger to him now as they strained to be contained by the shear low cut lingerie. Her long neck and narrow shoulders, while lithely muscled, looked barely capable of supporting the oversized mounds on her chest. Her limber arms and legs provided a sexy femininity that made Mylo's heavy balls bounce together in anticipation. \n\nAs her hips began to sway, Mylo could now see a damp patch on the front of the teddy. He stroked his cock and watched. \n\nLiv Rawlins had danced and stripped for her husband on more than one occasion and it obviously never failed to arouse him. It quickly had the same mesmerizing effect on her captor. Mylo checked out every sexy curve as he continued stroking his cock in long slow strokes, the wetness from Liv Rawlins mouth still providing a slippery lubricant for his masturbation. \n\nMylo gave her the same circular finger move as before and she slowly turned and waved her sweet ass for him. He told her to move closer until she danced directly in front of him. Her hip action hinted at a cowgirl prowess that he would soon test out. He watched and stroked. \n\nThe prison escapee then spanked her hard on the ass. She screamed in surprise and pain. \n\n\"Don't tell me you don't like that shit, you loved it when I did that on your husband's desk!\" \n\nShe didn't respond but kept up her ass movements - a little more cautiously this time. \n\n\"He's not here to hear you, you can admit you loved it when I spanked your hot little ass! Say it slut!\" \n\nAgain she didn't answer. \n\nHe spanked her hard again. \n\n\"Ugh...you're hurting me, please stop!\" She begged. \n\nA big smile came to Mylo's face as he noticed her inching closer to him, \"Reach between your legs, teasingly unbutton that thing, and slowly lift the back for me. Show me your ass bitch!\" \n\nShe gulped nervously before reaching between her legs and erotically unsnapping the crotch buttons with her nimble fingers. She let the damp material slip from her hold until both the front and back dangled enticingly. Mylo eyed her fat pussy lips as they played a game of hide and seek underneath the flaps of the hanging lingerie while her ass rotated around. \n\n\"Come closer!\" \n\nShe moved directly in front of him. \n\n\"Lift that back part...slowly...uh-huh...yeah just like that. Shake that tight little ass! Umm...nice bitch!\" He soaked in the arousing contours of her bubbled cheeks before he stuck his thumb in his mouth and brought the wet digit to her puckered sphincter. She practically jumped when he pressed against it. But after her startled response, she didn't pull away. He rubbed his slick thumb around her purple hole as his remaining fingers slipped lower and tickled her slippery taint. \n\nLiv Rawlins moaned ever so slightly and kept up the swaying of her hips. \n\nHer mind became a bucket of jumbled emotions. She had reluctantly committed to giving him what he wanted in an effort to keep her and her husband alive. But now the alcohol and drugs had further degraded her resolve to resist his perverted demands. And worse yet...his thumb felt really good rubbing her asshole! \n\nMylo could now feel her subtly pushing her ass back against him. He kept up the teasing of her hole as he ordered her to slip the straps from her shoulders, \"Pull that shit down and let those big titties out!\" \n\nThe warden's fucked-up wife slowly gyrated several more times before her fingers slipped into both thin straps and slid them over her narrow shoulders. \n\nMoments later the rapist admired her exposed torso as the animal patterned lingerie bunched around her swaying hips. From his vantage point he could now see the partial profile of her full right tit as it protruded nakedly outside the confines of her slender ribcage, \"The things I'm going to do with this body...\" He said to himself between gritted teeth. \n\n\"Okay slut, now bend over with your legs straight like you did earlier and very slowly slide that lace over your ass and let it fall to the floor!\" Mylo directed with excited eyes while his thumb continued making circular contours on her slippery asshole. \n\nA reluctant gasp escaped the young wife's lips before she did as she was told. \n\nMylo watched as she bent at the waist and lowered her torso against her shapely legs. He could now see her huge tits as they hung taughtly against her chest, hardly succumbing to the effects of reversed gravity. Mylo moved forward in his seat and reached out with both hands and gripped her bunched up sexwear. He teasingly peeled it over her hips before letting it fall to the floor around her ankles. \n\nThe warden's wife's knees nearly crumpled as Mylo's long tongue took the place of his thumb on her asshole. \n\n\"Oh God...please don't do that. Haven't you already gotten what you wanted?\" She pleaded between breathless gasps, hoping but not expecting him to relent. \n\n\"Bitch, I haven't even begun to get what I want! As a matter of fact, it's time for us to take this little party into the bedroom so I can do exactly that!\" He smacked her ass with his open palm, eliciting a startled scream from the now completely nude wife. \"Take some shit out of that box and meet me in the bedroom while I grab a couple of road sodas!\" \n\nShe had now spun around and he could see a fearful gaze in her bloodshot eyes. \n\n\"Get the cuffs, nipple clamps, and motion lotion and be waiting for me with your legs spread on the bed! Do it now slut!\" \n\nShe started to object, but thought better of it. She lowered her eyes and dutifully collected the sexcessories before moving unsteadily towards her bedroom. \n\nWhen he entered the big master suite the lights were off and only the illumination from the hallway lights lit it enough for him to see inside. Liv had turned off all the lights, somehow thinking that if she couldn't actually see the debauchery, it wouldn't be as bad. \n\nMylo had other thoughts. \"Don't make me search around for the fucking light switch bitch. I'm sure you and the hubby have some kind of mood lights in here or otherwise we'll do it with the lights on. Where the fuck is it?\" \n\nLiv swallowed nervously, her head was spinning in the darkened room, \"It's over by the door...\" she answered quietly. \n\nMylo found the bank of switches and quickly adjusted the room lighting to a muted darkness. He turned and nearly shit himself when he saw the sexy creature waiting for him on the big bed. The warden's wife's long legs were bent slightly at the knees and spread partially apart, enough so that Mylo could clearly make out the folds of her glistening pussy lips between her smooth toned thighs - her little dark patch framed just above her sex. Her perfect D-cups heaved above her well-toned stomach as her dark hair lay splayed against the thick pillows framing her gorgeous face. \n\nThis was a sight Mylo Dickenson never thought he would ever experience again in his life - an outrageously hot woman laying naked in bed waiting for him. But thanks to some kind of divine intervention here he was a free man, ready and willing to do what he did best...and here she was ready and unwilling to receive a fucking unlike anything she could imagine. \n\nThe aroused sex offender had fucked hundreds of women in his life, but he couldn't remember ever being more excited than he was at this moment. Unbelievably, it was the warden's own hot wife that lay spreadeagle for him in her own bed while her mother fucking husband lay bound, injured, and helpless not more than one-hundred feet away. This was going to be good...no this was going to be so much better than that! \n\nThis was worth dying for... \n\nThe warden's wife's unblinking eyes watched nervously as he approached the bed - his huge cock sticking straight out and his heavy reloaded balls dangling heavily against his muscular thighs. He took in the sight of her sexy body, \"What'd you do with the kink stuff?\" \n\n\"It's on the nightstand but...\" \n\n\"...where's the key to the cuffs?\" He demanded, cutting her off. \n\n\"Mr. Dickenson...please don't do this...there must be something else we can...\" \n\n\"Shut the fuck up, where's the key bitch?\" \n\n\"...it's there too.\" She answered defeatedly. \n\n\"Good! Now tell me you want me to cuff you to the headboard!\" \n\n\"No please...why...why would I do that?\" She whined, tears now forming in her scared eyes. \n\n\"Tell me slut! Beg me to cuff you to the bed and eat your pussy!\" \n\n\"...no...Oh my God...there must be something else...\" \n\n\"I can go outside and put a bullet in your husband's fucking head...how about that?\" \n\n\"PLEASE NO...okay...okay!\" She wailed with tears streaming down her cheeks, \"Umm...yes...Mr. Dickenson...uh...please...oh God...can you please...jeez...please handcuff me to the bed...\" \n\nA big smile formed on his face, \"Yeah I can do that slut, but why do you want me to?\" He taunted as he knelt on the bed next to her, his huge cock now only a foot or so from her gorgeous face. \n\nShe stared at it with an uncomprehending gaze \"...please don't make me...\" \n\n\"Say it BITCH!\" \n\n\"...oh God...please...Mr...uh...\" \n\n\"Enough of the Mr. Shit, call me Mylo slut!\" \n\nSuddenly her thoughts turned to her tortured husband and the pact that she had made to herself, \"Remember, I'm doing this for Grant!\" Before she knew what she was saying, the words rolled off her tongue, \"...Mylo...please cuff me to the bed and...uh...do it.\" \n\n\"Do what slut?\" \n\n\"...Oh God...lick me...lick me between my legs...\" \n\n\"More specific bitch!\" \n\n\"Oh God...please...please eat my pussy Mylo!\" \n\nMylo was on the young wife before she knew what was happening. The aroused sex offender quickly bound both of her wrists to the headboard and set about molesting her tits like a starving man. He sucked and bit her hardened nipples roughly before blazing a path down her taught stomach to her little fur patch. He pulled on her pubes with his teeth before snaking his long tongue into her moistened slit. \n\nLiv Rawlins couldn't possibly have imagined how much this man craved the taste of pussy. \n\nShe soon found out. \n\nMylo hadn't experienced the tasty delicacy in nearly twenty years and he quickly made up for lost time. He buried his long tongue so deep in her that it felt like she was having sex again with her small-dicked boyfriend from college. Then he started his brilliant ministrations and she forgot about everything else in the world. She tried her best to resist the onslaught, but his tongue and lips relentlessly perused every sensitive nerve-ending within their skillful reach to the point that she found it impossible to deny him control of her nuptial landscape. \n\n\"You like it when I eat your pussy slut?\" \n\n\"Please stop...uhn...Jesus...please! We can't do this...uhn...my husband...God...\" she pleaded obligatorily as he intensified his heavenly assault on her married slit - every slippery probe and luscious lick of his long tongue finding another arousal-starved crease that begged for attention. \n\nShe couldn't get over how good he was making her feel. Liv had always loved when Grant or her previous boyfriends performed cunnilingus, but all of those experiences became forgettable memories as Mylo Dickenson expertly ate her quivering pussy better than anything she had ever felt. \n\n\"C'mon...tell me you want me to keep eating your pussy and make you cum! Say it! Say it slut!\" Mylo could tell the young wife had never felt anything like what she was currently experiencing and it was only a matter of time before her dripping pussy let loose and gave him what he wanted. \n\n\"Don't call me that...uhn...Jesus...please st...stop...\" \n\nMylo only increased his pace. He also inserted one of his long fingers inside her. The digit quickly found its destination. \n\nNow with her G-spot scraped and her well-licked clit a pulsing bundle of dripping arousal, Liv Rawlins felt an indescribable sensation building deep inside her. She wanted so badly for it to go away, but Mylo's unrelenting expertise only drew it nearer. Now with her hands cuffed above her head and his face buried between her legs, there wasn't anything she could do except beg, \"Please...uhn...Mylo...don't do this...please don't make me...uhn...\" \n\n\"What slut?\" He taunted as he raised his handsome face from between her legs, her wetness dripping from around his mouth. \n\n\"Please stop. Please don't make me...um...orgasm...it's wrong...\" she whined. \n\n\"Yeah bitch it is wrong...I'm not going to make you orgasm, I'm going to make your horny pussy SQUIRT all over this fucking bed!\" Mylo chided before he shoved her legs backwards and attacked her clit with a fervor she never imagined possible. Within a minute her previous resistive grunts became accepting moans. She knew there was nothing else she could do except... \n\n\"Cum bitch! Squirt that pussy juice all over this bed!\" Mylo re-tongued her clit so expertly she could no longer control herself. \n\n\"Unh...uhn...oh God...please...Jeeeeesus...oooohhh...shhhiiiittt! \n\nThe warden's wife's hips lifted and shook frantically before a steady stream of ejaculate sprayed from her fat pussy lips and doused Mylo's face. The sex offender thirstily lapped at her eruption as it splattered all around his undeterred tongue, \"That's it baby, squirt that fuckin' married juice all over my face! Damn, that's some good tastin' pussy...\" \n\nHer orgasm seemed to go on forever. When it finally subsided, her quivering hips sank back down against the dampened sheets and she gasped for badly needed air. \n\nMylo didn't give her long to recover as he quickly thrust his cum covered tongue into her open mouth - the startled wife surprisingly now experiencing the taste of her own essence. It was a flavor with which she was vaguely familiar. She'd sucked Grant's cock on occasion following intercourse, but now she was getting a mouthful. \n\nAfter aggressively exploring her oral cavity he pulled briefly away, \"Kiss me bitch, suck your cum from my tongue and when you're done with that, lick your cream from around the rest of my face! That squirtin' pussy of yours made a fucking mess!\"  \n\nTears formed in her eyes as the realization of what he was asking her to do sunk in. But nonetheless, she reluctantly began planting little kisses around his face before letting her tongue escape from between her lips. She could taste herself all over his skin. Suddenly she felt an overwhelming remorsefulness as her thoughts turned to her tortured husband...\"OMG, I can't believe I'm licking my own cum from the skin of a man who isn't my husband...\" \n\nThose thoughts didn't last long. \n\nMylo Dickenson was now sliding the swollen head of his fat cock along her married pussy lips. \n\n\"Oh God, please don't do that, I'm not on the pill!\" \n\nMylo laughed, \"You think I fucking care about that slut? In fact that's all the more reason that I'm going to fuck your brains out bitch! I'd love nothing more than to cuckold your fucking husband with my potent seed!\" \n\n\"God...ugh...please...there must be something else...I'll take you in my mouth again...please!\" \n\n\"That's right slut, you will take me in your mouth again, but right now, this tight little married pussy of yours is going to milk a big load from my swollen balls!\" He bragged as the fat head of his cock sunk between her slippery lips and took up residence within her. \n\n\"...Oh Jeezus...it's too big...God...please take it out...please!\" \n\nA shitty grin formed on his face as he watched her facial contortions, \"Yeah it's fucking big alright, but we both know it'll fit...it already did for a couple of hours in your husband's office earlier, didn't it slut?\" \n\n\"No, it was too...uhn...big...it hurt me...ugh!\" She gasped as Mylo sunk several more inches of his stone-hard cock into her. ",
        "He laughed again, \"You sure had a funny way of showing pain, creaming all over my dick was a sign of displeasure? Besides even if it was, you should be used to it now!\" He growled as he shoved himself deeper into her slippery hole before dropping his head and biting one of her rock-hard nipples. \n\nShe yelped, \"Uhn...shit...God...why...why are you doing this...uhn?\" \n\n\"For a smart doctor lady you sure are stupid! I'm doing it cuz that mother fucking husband of yours needs to get a taste of his own medicine, but mostly I'm doing it because I've been in prison for two decades and this horny pussy of yours is now going to give me everything I've been missing out on! Oh Fuck Yeah...squeeze my cock!\" Mylo wailed as most of his huge dick was now impaled inside her tight married tunnel. \n\nFor the next several minutes he watched her beautiful face writhe as he worked his manhood in and out of her fuck hole. This bitch really was tight. With her wrists bound above her head and her long legs now pulled back around his bulging biceps he set about giving her a sound fucking. Breathless grunts and moans escaped her lips and her big tits jiggled enticingly as he increased his pace, \"Feels good don't it bitch?\" \n\n\"...Uhn...too big,\" was her only response. Her eyes closed tightly. \n\n\"You sure about that slut?\" Mylo goaded as he sawed his blood-filled cock deep into her again and again. \"You're married pussy is taking the whole fucking thing! Some bitches can only take about half!\" He laughed as his heavy balls bounced off her ass yet again. \n\n\"Tell me you love it slut! Tell me you love my huge cock!\" \n\n\"I will never...uhn...uhn...!\" \n\nMylo could tell her unconvincing mouth was saying one thing, but the secretions bathing his veiny cock from the walls of her dripping pussy told another. \n\n\"It's okay, your husband isn't here, you can say it! You can say how good it feels inside you. We both know you're cum all over it again! Huh slut?\" \n\nLiv Rawlins hated him for his cocky arrogance and degrading dialogue, yet she found herself increasingly incapable of denying the pleasure that was building between her legs. Like earlier in her husband's office, Mylo's sexual prowess and his magnificent cock had brought her more sexual satisfaction than anything she'd ever felt. In spite of her un-consenting cries for yield, the toe-curling climactic feelings she endured bent over her husband's desk were now engrained in her mind. \n\nNow those feelings were building again. \n\nThe setting and situation were different this time, but the outcome wouldn't be. The gorgeous wife was now in the soft confines of her master bed, albeit with her wrists bound, while a surreal combination of booze and drugs coursed through her, lowering her inhibitions but not her sensitivity. As it had at the prison, her rapist's huge cock railed into her unmercifully. However, unlike her earlier taking from behind, she now stared into the evilly handsome face of the sex-starved assailant. \n\nAn assailant who continued pounding into her with reckless abandon - both of their naked bodies covered in sweat. \n\n\"Say it slut!\" Mylo grunted. \"Tell me you love it! Tell me not to stop!\" \n\n\"No...uhn...unh...\" \n\n\"Tell me how much better my big cock feels than your husband's little tool! Beg me to make you cum!\" \n\n\"Oh God...uhn...no...I can't...uhn...uhn...please don't make me say it!\" \n\nHe roughly yanked her legs over his shoulders and increased his assault. \n\n\"Oh God!\" She screamed in fear and arousal. \n\nThat final maneuver pushed the warden's sated wife over the edge. As Mylo's incredible cock plunged deeper into her than it had at any point, her dam finally burst. \n\n\"Noooo...Gaawwwdd...ooohhh...ooohhh...I'm Cummmminnnggg!!\" \n\nThe pleasure that had been building within her sinewy body now all culminated in an overwhelming climactic stirring that started in the tips of her nipples and blazed all the way to the ends of her toes. An orgasm unlike anything she had ever experienced ripped through her in an uncontrolled torrential wave of pleasure. Her announcement was followed by a series of unnatural guttural wails confirming the depth of her satisfaction as her eyes rolled back in her tilted head and her un-breathing mouth remained agape. \n\nMylo watched her beautiful face writhe in ecstasy as her pussy contracted around his thick cock so tightly he could actually feel his circulation being constricted. Suddenly a wave of wetness gushed around his manhood from every sated membrane from her deepest depths to her obscenely stretched lips. Liv Rawlins' cum was so intense that it seeped around the edges of her cock-stuffed opening. But it wasn't until Mylo pulled the massive cork from her plugged hole that the magnitude of her eruption showed itself. A blast of cum shot from her previously dammed opening, soaking his balls and the sheets beneath. \n\n\"WHOA! HOLY SHIT! CUM ALL OVER THAT BIG COCK! YEAH BITCH, BIGGEST ONE YET!\" Mylo shouted. \"WE FUCKED UP, WE SHOULD HAVE SAVED THAT ONE FOR THE WARDEN!\" \n\nMylo Dickenson needn't have worried, there would be many more... \n\n***** \n\nNow as the warden's well-fucked wife lay in her bed the following morning, her guilt was profound, \"...Damn Liv...it doesn't matter how wasted you were, or whether you were doing it for Grant's protection, you didn't have to suck and fuck that huge cock so enthusiastically...How could you do those things, especially while Grant lay injured and tormented in the car?\" \n\nYet as she admonished herself for not having had more restraint, her mind wandered to the unadulterated pleasure she felt when Mylo fucked her in ways she never dreamed imaginable. When she'd first seen the sex-crazed hunger in his eyes at the prison, she had feared for her life, even before he tore her clothes off and bound and gagged her on her husband's desk. And then when she came to grips with the dreadful acceptance that she would soon be another of his countless rape victims, she mentally prepared herself for physical pain, humiliation and torture. \n\nBut it hadn't gone that way. \n\nYes the sexual predator treated her roughly - lots of ass spankings, breast-slapping, hair-tugging, and endless filthy verbal goadings...but instead of those things causing physical pain and emotional suffering, they ended up contributing to Liv Rawlins' indescribable pleasure. Eventually after she'd given herself to him, she actually got off on it. \n\nMylo's rape modus operandi had never been about significant physical violence, he never beat or choked his victims, but rather he got off on threatening and converting terrified, reluctant women into pliable, willing sex toys incapable of denying his forceful advances. The sex offender loved to pleasure his victims in ways their husband's or boyfriend's could never imagine and make the tormented men watch or listen as their wives or girlfriends morphed into his inevitable fuck sluts. \n\nBut he also certainly didn't mind having a little sadistic fun along the way... \n\nLiv's large nipples had been clamped at some point during the night. She had unsuccessfully pleaded and begged Mylo mercifully for reprieve. He only laughed. The evil nipple toys were one of the few things in the Rawlins' kink box that she had never allowed Grant to use on her. Her husband had surprised her with them following a business trip years before. Intrigued but scared, she could never bring herself to endure that kind of perceived pain, so she always deferred. \n\nMylo Dickenson had no such inhibitions - he forcefully clamped both on her big succulent nubs after cuffing her hands behind her back. She screamed in agony and begged him over and over to remove them until he scooted around and lined up his cock with her sexy lips and fed it to her for liberation. Eventually she became so wrapped in trying to accommodate his dick in her stuffed throat that she forgot about the pain on her chest...so much so that when he yanked his erupting tool from her mouth and thoroughly plastered her heaving breasts, she actually experienced a grunting orgasm without physical stimulation. He was so stunned at her reaction that he unlocked the cuffs and had her remove the sticky cum-covered clamps and use his jis as lotion to relieve her reddened swollen nipples. \n\nMeanwhile Mylo's sexual prowess never wavered and the endless sex had her climaxing in ways she never imagined. He took her in every position imaginable, but their mating always seemed to culminate with her on her hands and knees, a position her husband rarely contorted her into. The sex-thirsty rapist didn't tire of fucking her doggie style with her hands gripped tightly to the sheets or cuffed to the headboard as he spanked her incredible ass and railed into her relentlessly. \n\nLiv Rawlins quickly learned why her captor preferred this position...she couldn't deny its decadence as he ripped countless orgasms from her married pussy as he fucked the hell out of her from behind. \n\nHe, on the other hand, hadn't been so discerning about where he shot his sperm-filled loads...in her fertile pussy, on her narrow back, all over her huge tits, in her mouth, down her warm inexperienced throat, around her beautiful face and in her thick dark hair... \n\n...And of course in her tight sexy ass. \n\nThe warden's wife had begged him not to do it as she'd never been penetrated there before and was truthfully terrified of his size, but he forcefully reminded her who was in charge while threatening her husband with additional bodily injury and torture unless she relented. He taunted her to the point she eventually pleaded with him to take her anally. \n\nThe cruel rapist had teased her with his tongue and fingers in her puckered sphincter throughout the night and witnessed the effect it had on her as she yelped, moaned and climaxed time and time again. He knew from those reactions, that once the horny bitch got accustomed to his huge cock, she'd love it in her ass too. \n\nIt took awhile for her to take him fully, but eventually his theory was proven correct as her final orgasm of the night was the most powerful he witnessed as he rammed unstoppably in her rectum while squeezing her bounding tits and talking filthily in her ear. Finally she had screamed and begged him not to stop so loudly that he thought her husband might hear all the way from the garage as she sprayed cum all over his heavy swinging balls as they emptied themselves all around her spectacular ass. \n\nThe two of them then passed out exhaustedly on the soiled bed. \n\n***** \n\nNow the time had come for her to face her molester again this morning. As she crawled from the bed, her hangover intensified but she wandered nakedly to the bathroom to relieve her aching bladder nonetheless. As she sat on the toilet, she could feel the sticky mess that still coated her ass and seeped across her splayed pussy lips. It took a large handful of wipes to clean herself when she was done. She returned to the bedroom, contemplating what she should wear. Liv thought about putting on her large robe but remembered a warning that Mylo had given her about wearing only lingerie while he was in charge. She wrestled with her clothing choice before nervously pulling a black lace babydoll from her lingerie drawer and slipping it over her sex fatigued body. \n\nLiv Rawlins returned to the bathroom and stared into the mirror in disbelief. Her hair was a mess and her mascara was smeared around her eyes. But what alarmed her most was the significant number of hickeys and bite marks that were scattered across her neck and exposed cleavage. She took several minutes to apply cover-up to the numerous sex marks. She slipped the lingerie from her shoulders and let it fall from her breasts. She gasped out loud. Her typically pristine nipples looked rough and reddened. A large collection of Mylo's markings congregated around them, in addition to a heavy coating of his dried flaky discharge. She did her best to obscure the mess before covering them back up with the babydoll. \n\nAs she brushed her hair, her thoughts returned to Grant and what his mental and physical condition must be like following the long night. \n\nShe would find out soon. It wouldn't be good... \n\nHer heart beat quickly as she tiptoed out of the bedroom on her way to the living room. As the young wife came around the corner, she couldn't believe what she saw. Some type of news conference blared loudly from the large television. Mylo Dickenson sat in Grant's recliner wearing only a pair of her husband's silky black boxers. \n\nBut it was neither of those things that triggered her heart now being in her throat. \n\nSitting across from the convict on the large sofa was her sullen faced husband. The respected prison official wore fewer clothes than his captor. The only thing on her husband's body was a stainless steel chastity cock cage that had been slipped over his shriveled dick and secured around his middling balls. His good arm was uncomfortably handcuffed above and behind him to one of the wrought-iron bars on the backing of the couch. \n\nThat all would have been frightening enough, but the most disturbing sight for the worried wife was the large secured ball-gag stuffed deep in her husband's mouth. The tormented warden was incapable of removing it with his non-secured hand as he couldn't lift the wounded extremity out of his lap. \n\nBoth men looked up and saw her simultaneously. Her husband's eyes opened wide while a large smile filled the face of the brazen prison escapee, \"Well good morning Sugar Pussy, we've been waiting for you!\" \n\n***** \n\nI hope you've enjoyed the first 4 chapters, if so please take the time to comment and/or vote. I also welcome feedback via email and do my best to respond as quickly as possible. Make sure if you contact me that way to include your email address."
    ],
    "authorname": "FifthEstate",
    "tags": [
        "big tits",
        "creampie",
        "lingerie",
        "non-con",
        "non-consent",
        "prison",
        "reluctance",
        "warden",
        "wife",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/wardens-wife-pays-his-debt-ch-04"
}